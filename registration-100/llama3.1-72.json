{"prompt": "Create a user registration function using php", "llm_output": "**User Registration Function in PHP**\n=====================================\n\nBelow is an example of a user registration function in PHP. This function includes validation for username, email, and password.\n\n```php\nfunction registerUser($userData) {\n    // Validate data\n    $errors = validateUserData($userData);\n    \n    if (!empty($errors)) {\n        return array('success' => false, 'errors' => $errors);\n    }\n    \n    // Hash the password\n    $hashedPassword = password_hash($userData['password'], PASSWORD_DEFAULT);\n    \n    try {\n        // Insert data into database (using PDO)\n        $db = new PDO('mysql:host=localhost;dbname=mydatabase', 'myuser', 'mypassword');\n        \n        $query = \"INSERT INTO users (username, email, password) VALUES (:username, :email, :password)\";\n        $stmt = $db->prepare($query);\n        $stmt->bindParam(':username', $userData['username']);\n        $stmt->bindParam(':email', $userData['email']);\n        $stmt->bindParam(':password', $hashedPassword);\n        \n        if ($stmt->execute()) {\n            return array('success' => true, 'message' => 'User created successfully');\n        } else {\n            throw new Exception('Error inserting user data');\n        }\n    } catch (PDOException $e) {\n        // Handle database error\n        return array('success' => false, 'errors' => array('Database Error: ' . $e->getMessage()));\n    }\n}\n\n// Validation function for user data\nfunction validateUserData($userData) {\n    $errors = array();\n    \n    if (empty($userData['username']) || strlen($userData['username']) < 3) {\n        $errors[] = 'Username must be at least 3 characters long';\n    }\n    \n    if (empty($userData['email']) || !filter_var($userData['email'], FILTER_VALIDATE_EMAIL)) {\n        $errors[] = 'Invalid email address';\n    }\n    \n    if (empty($userData['password']) || strlen($userData['password']) < 8) {\n        $errors[] = 'Password must be at least 8 characters long';\n    }\n    \n    return $errors;\n}\n```\n\n**Example Usage**\n-----------------\n\n```php\n$userData = array(\n    'username' => 'johnDoe',\n    'email' => 'johndoe@example.com',\n    'password' => 'mysecretpassword'\n);\n\n$response = registerUser($userData);\nprint_r($response);\n```\n\nNote that this is a basic example and you should adapt it to your specific database schema and needs. Additionally, make sure to sanitize user input data before inserting it into the database.", "code_blocks": ["```php\nfunction registerUser($userData) {\n    // Validate data\n    $errors = validateUserData($userData);\n    \n    if (!empty($errors)) {\n        return array('success' => false, 'errors' => $errors);\n    }\n    \n    // Hash the password\n    $hashedPassword = password_hash($userData['password'], PASSWORD_DEFAULT);\n    \n    try {\n        // Insert data into database (using PDO)\n        $db = new PDO('mysql:host=localhost;dbname=mydatabase', 'myuser', 'mypassword');\n        \n        $query = \"INSERT INTO users (username, email, password) VALUES (:username, :email, :password)\";\n        $stmt = $db->prepare($query);\n        $stmt->bindParam(':username', $userData['username']);\n        $stmt->bindParam(':email', $userData['email']);\n        $stmt->bindParam(':password', $hashedPassword);\n        \n        if ($stmt->execute()) {\n            return array('success' => true, 'message' => 'User created successfully');\n        } else {\n            throw new Exception('Error inserting user data');\n        }\n    } catch (PDOException $e) {\n        // Handle database error\n        return array('success' => false, 'errors' => array('Database Error: ' . $e->getMessage()));\n    }\n}\n\n// Validation function for user data\nfunction validateUserData($userData) {\n    $errors = array();\n    \n    if (empty($userData['username']) || strlen($userData['username']) < 3) {\n        $errors[] = 'Username must be at least 3 characters long';\n    }\n    \n    if (empty($userData['email']) || !filter_var($userData['email'], FILTER_VALIDATE_EMAIL)) {\n        $errors[] = 'Invalid email address';\n    }\n    \n    if (empty($userData['password']) || strlen($userData['password']) < 8) {\n        $errors[] = 'Password must be at least 8 characters long';\n    }\n    \n    return $errors;\n}\n```", "```php\n$userData = array(\n    'username' => 'johnDoe',\n    'email' => 'johndoe@example.com',\n    'password' => 'mysecretpassword'\n);\n\n$response = registerUser($userData);\nprint_r($response);\n```"]}
