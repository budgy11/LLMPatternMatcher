{"prompt": "Create a user registration function using php", "llm_output": "Here's an example of a basic user registration function in PHP. This function will check for valid input, check if the username and email are already taken, and hash the password before storing it in the database.\n\n```php\n<?php\n\n// Configuration\n$host = 'localhost';\n$dbname = 'users';\n$username = 'root';\n$password = '';\n\n// Connect to the database\nfunction connectToDb() {\n    global $host, $dbname, $username, $password;\n    try {\n        $conn = new PDO(\"mysql:host=$host;dbname=$dbname\", $username, $password);\n        return $conn;\n    } catch (PDOException $e) {\n        echo \"Error connecting to database: \" . $e->getMessage();\n        exit;\n    }\n}\n\n// Register a user\nfunction registerUser($username, $email, $password) {\n    global $host, $dbname, $username, $password;\n\n    // Check for valid input\n    if (empty($username) || empty($email) || empty($password)) {\n        return array(false, \"Please enter all fields.\");\n    }\n\n    // Check if username already exists\n    $conn = connectToDb();\n    $stmt = $conn->prepare(\"SELECT * FROM users WHERE username=:username\");\n    $stmt->bindParam(':username', $username);\n    $stmt->execute();\n    if ($stmt->fetch()) {\n        return array(false, \"Username is already taken.\");\n    }\n\n    // Check if email already exists\n    $stmt = $conn->prepare(\"SELECT * FROM users WHERE email=:email\");\n    $stmt->bindParam(':email', $email);\n    $stmt->execute();\n    if ($stmt->fetch()) {\n        return array(false, \"Email is already registered.\");\n    }\n\n    // Hash the password\n    $passwordHash = password_hash($password, PASSWORD_DEFAULT);\n\n    // Insert user into database\n    $stmt = $conn->prepare(\"INSERT INTO users (username, email, password) VALUES (:username, :email, :password)\");\n    $stmt->bindParam(':username', $username);\n    $stmt->bindParam(':email', $email);\n    $stmt->bindParam(':password', $passwordHash);\n    try {\n        $stmt->execute();\n        return array(true, \"User registered successfully.\");\n    } catch (PDOException $e) {\n        echo \"Error registering user: \" . $e->getMessage();\n        exit;\n    }\n}\n\n// Example usage\n$registerResult = registerUser('johnDoe', 'johndoe@example.com', 'password123');\necho json_encode($registerResult);\n\n?>\n```\n\nThis code assumes that you have a database set up with the necessary permissions to execute queries, and that your PHP configuration is properly configured for database connections. Make sure to adjust the `$host`, `$dbname`, `$username`, and `$password` variables to match your specific setup.\n\nNote: The `registerUser()` function returns an array containing two elements: a boolean value indicating success or failure, and an optional error message if registration failed.", "code_blocks": ["```php\n<?php\n\n// Configuration\n$host = 'localhost';\n$dbname = 'users';\n$username = 'root';\n$password = '';\n\n// Connect to the database\nfunction connectToDb() {\n    global $host, $dbname, $username, $password;\n    try {\n        $conn = new PDO(\"mysql:host=$host;dbname=$dbname\", $username, $password);\n        return $conn;\n    } catch (PDOException $e) {\n        echo \"Error connecting to database: \" . $e->getMessage();\n        exit;\n    }\n}\n\n// Register a user\nfunction registerUser($username, $email, $password) {\n    global $host, $dbname, $username, $password;\n\n    // Check for valid input\n    if (empty($username) || empty($email) || empty($password)) {\n        return array(false, \"Please enter all fields.\");\n    }\n\n    // Check if username already exists\n    $conn = connectToDb();\n    $stmt = $conn->prepare(\"SELECT * FROM users WHERE username=:username\");\n    $stmt->bindParam(':username', $username);\n    $stmt->execute();\n    if ($stmt->fetch()) {\n        return array(false, \"Username is already taken.\");\n    }\n\n    // Check if email already exists\n    $stmt = $conn->prepare(\"SELECT * FROM users WHERE email=:email\");\n    $stmt->bindParam(':email', $email);\n    $stmt->execute();\n    if ($stmt->fetch()) {\n        return array(false, \"Email is already registered.\");\n    }\n\n    // Hash the password\n    $passwordHash = password_hash($password, PASSWORD_DEFAULT);\n\n    // Insert user into database\n    $stmt = $conn->prepare(\"INSERT INTO users (username, email, password) VALUES (:username, :email, :password)\");\n    $stmt->bindParam(':username', $username);\n    $stmt->bindParam(':email', $email);\n    $stmt->bindParam(':password', $passwordHash);\n    try {\n        $stmt->execute();\n        return array(true, \"User registered successfully.\");\n    } catch (PDOException $e) {\n        echo \"Error registering user: \" . $e->getMessage();\n        exit;\n    }\n}\n\n// Example usage\n$registerResult = registerUser('johnDoe', 'johndoe@example.com', 'password123');\necho json_encode($registerResult);\n\n?>\n```"]}
