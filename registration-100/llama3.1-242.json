{"prompt": "Create a user registration function using php", "llm_output": "Here's an example of a user registration function in PHP:\n\n**register.php**\n```php\n<?php\n\n// Configuration settings\n$dbHost = 'localhost';\n$dbUsername = 'root';\n$dbPassword = '';\n$dbName = 'users';\n\n// Database connection\n$conn = new mysqli($dbHost, $dbUsername, $dbPassword, $dbName);\n\n// Error handling for database connection\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\nfunction registerUser($username, $email, $password)\n{\n    // Validate user input\n    if (empty($username) || empty($email) || empty($password)) {\n        echo 'Error: All fields must be filled';\n        return false;\n    }\n\n    // Hash password for security\n    $hashedPassword = password_hash($password, PASSWORD_DEFAULT);\n\n    // Prepare SQL query to insert new user into database\n    $sql = \"INSERT INTO users (username, email, password) VALUES (?, ?, ?)\";\n\n    try {\n        // Execute SQL query with prepared statement\n        $stmt = $conn->prepare($sql);\n        $stmt->bind_param(\"sss\", $username, $email, $hashedPassword);\n        $stmt->execute();\n\n        // Return true if registration is successful\n        return true;\n\n    } catch (Exception $e) {\n        echo 'Error: Registration failed';\n        echo 'Error details: ' . $e->getMessage();\n        return false;\n    }\n}\n\n// Example usage:\nif (isset($_POST['register'])) {\n    $username = $_POST['username'];\n    $email = $_POST['email'];\n    $password = $_POST['password'];\n\n    if (registerUser($username, $email, $password)) {\n        echo 'Registration successful!';\n    } else {\n        echo 'Registration failed';\n    }\n}\n?>\n```\nThis function takes in three parameters: `$username`, `$email`, and `$password`. It first checks for empty fields and validates the input. If everything is valid, it hashes the password using PHP's built-in `password_hash` function, then inserts a new row into the database with a prepared SQL query.\n\n**Note:** You'll need to create the `users` table in your database with columns for `id`, `username`, `email`, and `password`.\n\nTo call this function from an HTML form:\n```html\n<form action=\"register.php\" method=\"post\">\n    <input type=\"text\" name=\"username\" placeholder=\"Username\"><br>\n    <input type=\"email\" name=\"email\" placeholder=\"Email\"><br>\n    <input type=\"password\" name=\"password\" placeholder=\"Password\"><br>\n    <button type=\"submit\" name=\"register\">Register</button>\n</form>\n```\nMake sure to replace the placeholders with your actual database credentials. This example assumes a `users` table exists in the database, and that you're using MySQLi as your database library.\n\nAlso, I've added some basic error handling for the registration process. You can improve it further by adding more validation checks or logging errors if needed.", "code_blocks": ["```php\n<?php\n\n// Configuration settings\n$dbHost = 'localhost';\n$dbUsername = 'root';\n$dbPassword = '';\n$dbName = 'users';\n\n// Database connection\n$conn = new mysqli($dbHost, $dbUsername, $dbPassword, $dbName);\n\n// Error handling for database connection\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\nfunction registerUser($username, $email, $password)\n{\n    // Validate user input\n    if (empty($username) || empty($email) || empty($password)) {\n        echo 'Error: All fields must be filled';\n        return false;\n    }\n\n    // Hash password for security\n    $hashedPassword = password_hash($password, PASSWORD_DEFAULT);\n\n    // Prepare SQL query to insert new user into database\n    $sql = \"INSERT INTO users (username, email, password) VALUES (?, ?, ?)\";\n\n    try {\n        // Execute SQL query with prepared statement\n        $stmt = $conn->prepare($sql);\n        $stmt->bind_param(\"sss\", $username, $email, $hashedPassword);\n        $stmt->execute();\n\n        // Return true if registration is successful\n        return true;\n\n    } catch (Exception $e) {\n        echo 'Error: Registration failed';\n        echo 'Error details: ' . $e->getMessage();\n        return false;\n    }\n}\n\n// Example usage:\nif (isset($_POST['register'])) {\n    $username = $_POST['username'];\n    $email = $_POST['email'];\n    $password = $_POST['password'];\n\n    if (registerUser($username, $email, $password)) {\n        echo 'Registration successful!';\n    } else {\n        echo 'Registration failed';\n    }\n}\n?>\n```", null]}
