{"prompt": "Create a user registration function using php", "llm_output": "**User Registration Function in PHP**\n=====================================\n\nBelow is an example of a user registration function written in PHP. This function will validate the user's input, hash their password, and store them in a database.\n\n### Prerequisites\n\n*   You need to have a MySQL database set up with a table named `users`.\n*   The `password_hash` function requires PHP 5.5 or later.\n*   The `mysqli` extension is used for interacting with the database.\n\n### User Registration Function\n```php\nfunction registerUser($username, $email, $password) {\n    // Validate user input\n    if (empty($username) || empty($email) || empty($password)) {\n        return array('error' => 'All fields are required.');\n    }\n\n    if (!preg_match('/^[a-zA-Z0-9]+$/', $username)) {\n        return array('error' => 'Username can only contain letters and numbers.');\n    }\n\n    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {\n        return array('error' => 'Invalid email address.');\n    }\n\n    // Connect to the database\n    $mysqli = new mysqli('localhost', 'username', 'password', 'database');\n\n    // Hash password\n    $hashedPassword = password_hash($password, PASSWORD_DEFAULT);\n\n    // Prepare SQL query to insert user into database\n    $stmt = $mysqli->prepare(\"INSERT INTO users (username, email, password) VALUES (?, ?, ?)\");\n    if (!$stmt) {\n        return array('error' => 'Database error: unable to prepare statement.');\n    }\n\n    // Bind parameters and execute the query\n    $stmt->bind_param('sss', $username, $email, $hashedPassword);\n    $result = $stmt->execute();\n\n    if ($result === false) {\n        return array('error' => 'Database error: unable to insert user.');\n    }\n\n    // Return a success message and user data (optional)\n    return array(\n        'message' => 'User created successfully.',\n        'userData' => array(\n            'id' => $mysqli->insert_id,\n            'username' => $username,\n            'email' => $email\n        )\n    );\n}\n```\n\n### Example Usage\n\n```php\n$username = 'johnDoe';\n$email = 'johndoe@example.com';\n$password = 'mysecretpassword';\n\n$result = registerUser($username, $email, $password);\n\nif (isset($result['error'])) {\n    echo 'Error: ', $result['error'];\n} else {\n    echo 'User created successfully!';\n    print_r($result);\n}\n```\n\nThis function performs the following tasks:\n\n1.  Validates user input to ensure that it is not empty and meets certain format requirements.\n2.  Hashes the password using `password_hash` with a cryptographically secure algorithm.\n3.  Connects to the database and prepares an SQL query to insert the new user into the `users` table.\n4.  Binds the parameters of the SQL query using `bind_param`.\n5.  Executes the SQL query and checks for any errors.\n6.  Returns an array with a success message, optional user data, or an error message.\n\nRemember to adjust the database credentials and table structure according to your specific requirements. This code is meant to serve as a starting point, and you should adapt it to fit your application's needs.", "code_blocks": ["```php\nfunction registerUser($username, $email, $password) {\n    // Validate user input\n    if (empty($username) || empty($email) || empty($password)) {\n        return array('error' => 'All fields are required.');\n    }\n\n    if (!preg_match('/^[a-zA-Z0-9]+$/', $username)) {\n        return array('error' => 'Username can only contain letters and numbers.');\n    }\n\n    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {\n        return array('error' => 'Invalid email address.');\n    }\n\n    // Connect to the database\n    $mysqli = new mysqli('localhost', 'username', 'password', 'database');\n\n    // Hash password\n    $hashedPassword = password_hash($password, PASSWORD_DEFAULT);\n\n    // Prepare SQL query to insert user into database\n    $stmt = $mysqli->prepare(\"INSERT INTO users (username, email, password) VALUES (?, ?, ?)\");\n    if (!$stmt) {\n        return array('error' => 'Database error: unable to prepare statement.');\n    }\n\n    // Bind parameters and execute the query\n    $stmt->bind_param('sss', $username, $email, $hashedPassword);\n    $result = $stmt->execute();\n\n    if ($result === false) {\n        return array('error' => 'Database error: unable to insert user.');\n    }\n\n    // Return a success message and user data (optional)\n    return array(\n        'message' => 'User created successfully.',\n        'userData' => array(\n            'id' => $mysqli->insert_id,\n            'username' => $username,\n            'email' => $email\n        )\n    );\n}\n```", "```php\n$username = 'johnDoe';\n$email = 'johndoe@example.com';\n$password = 'mysecretpassword';\n\n$result = registerUser($username, $email, $password);\n\nif (isset($result['error'])) {\n    echo 'Error: ', $result['error'];\n} else {\n    echo 'User created successfully!';\n    print_r($result);\n}\n```"]}
