{"prompt": "Create a user registration function using php", "llm_output": "**User Registration Function in PHP**\n=====================================\n\nThis example demonstrates a basic user registration function using PHP. The function will validate the input data, hash and store the password securely.\n\n### Database Schema\n\nBefore we dive into the code, let's assume you have a MySQL database with the following schema:\n\n```sql\nCREATE TABLE users (\n  id INT AUTO_INCREMENT PRIMARY KEY,\n  username VARCHAR(255) NOT NULL,\n  email VARCHAR(255) UNIQUE NOT NULL,\n  password VARCHAR(255) NOT NULL\n);\n```\n\n### PHP Code\n\nCreate a new file called `register.php` and add the following code:\n\n```php\n// Configuration\ndefine('DB_HOST', 'localhost');\ndefine('DB_USER', 'your_username');\ndefine('DB_PASSWORD', 'your_password');\ndefine('DB_NAME', 'your_database');\n\n// Connect to database\n$conn = mysqli_connect(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);\n\nif (!$conn) {\n  die(\"Connection failed: \" . mysqli_connect_error());\n}\n\nfunction registerUser($username, $email, $password) {\n  // Validate input data\n  if (empty($username) || empty($email) || empty($password)) {\n    return array('error' => 'All fields are required');\n  }\n\n  // Check for duplicate username and email\n  $query = \"SELECT * FROM users WHERE username = '$username' OR email = '$email'\";\n  $result = mysqli_query($conn, $query);\n\n  if (mysqli_num_rows($result) > 0) {\n    return array('error' => 'Username or Email already exists');\n  }\n\n  // Hash password\n  $hashedPassword = password_hash($password, PASSWORD_DEFAULT);\n\n  // Insert new user into database\n  $query = \"INSERT INTO users (username, email, password) VALUES ('$username', '$email', '$hashedPassword')\";\n  mysqli_query($conn, $query);\n\n  return array('success' => 'User created successfully');\n}\n\n// Example usage:\nif ($_SERVER['REQUEST_METHOD'] === 'POST') {\n  $username = $_POST['username'];\n  $email = $_POST['email'];\n  $password = $_POST['password'];\n\n  $result = registerUser($username, $email, $password);\n\n  if (isset($result['error'])) {\n    echo json_encode(array('error' => $result['error']));\n  } else {\n    echo json_encode($result);\n  }\n}\n\nmysqli_close($conn);\n```\n\n### Explanation\n\n1. The code connects to the database using the `mysqli` extension.\n2. The `registerUser` function takes three parameters: `$username`, `$email`, and `$password`.\n3. It validates the input data by checking for empty fields. If any field is empty, it returns an error message.\n4. It checks if a user with the same username or email already exists in the database. If so, it returns an error message.\n5. It hashes the password using the `password_hash` function (available since PHP 5.5).\n6. It inserts the new user into the database using an SQL query.\n\n### Example Use Case\n\nTo use this code, create a form with the following fields: username, email, and password. When the form is submitted, it will call the `registerUser` function and display the result as JSON.\n\nHTML:\n```html\n<form id=\"register-form\">\n  <input type=\"text\" name=\"username\" placeholder=\"Username\">\n  <input type=\"email\" name=\"email\" placeholder=\"Email\">\n  <input type=\"password\" name=\"password\" placeholder=\"Password\">\n  <button type=\"submit\">Register</button>\n</form>\n\n<script>\n  document.getElementById('register-form').addEventListener('submit', function(e) {\n    e.preventDefault();\n    const formData = new FormData(this);\n    fetch('register.php', { method: 'POST', body: formData })\n      .then(response => response.json())\n      .then(data => console.log(data));\n  });\n</script>\n```", "code_blocks": [null, "```php\n// Configuration\ndefine('DB_HOST', 'localhost');\ndefine('DB_USER', 'your_username');\ndefine('DB_PASSWORD', 'your_password');\ndefine('DB_NAME', 'your_database');\n\n// Connect to database\n$conn = mysqli_connect(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);\n\nif (!$conn) {\n  die(\"Connection failed: \" . mysqli_connect_error());\n}\n\nfunction registerUser($username, $email, $password) {\n  // Validate input data\n  if (empty($username) || empty($email) || empty($password)) {\n    return array('error' => 'All fields are required');\n  }\n\n  // Check for duplicate username and email\n  $query = \"SELECT * FROM users WHERE username = '$username' OR email = '$email'\";\n  $result = mysqli_query($conn, $query);\n\n  if (mysqli_num_rows($result) > 0) {\n    return array('error' => 'Username or Email already exists');\n  }\n\n  // Hash password\n  $hashedPassword = password_hash($password, PASSWORD_DEFAULT);\n\n  // Insert new user into database\n  $query = \"INSERT INTO users (username, email, password) VALUES ('$username', '$email', '$hashedPassword')\";\n  mysqli_query($conn, $query);\n\n  return array('success' => 'User created successfully');\n}\n\n// Example usage:\nif ($_SERVER['REQUEST_METHOD'] === 'POST') {\n  $username = $_POST['username'];\n  $email = $_POST['email'];\n  $password = $_POST['password'];\n\n  $result = registerUser($username, $email, $password);\n\n  if (isset($result['error'])) {\n    echo json_encode(array('error' => $result['error']));\n  } else {\n    echo json_encode($result);\n  }\n}\n\nmysqli_close($conn);\n```", null]}
