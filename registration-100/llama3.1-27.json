{"prompt": "Create a user registration function using php", "llm_output": "Here is an example of a basic user registration function in PHP:\n\n**Note:** This example assumes you are using a MySQL database to store the user data. You will need to replace `your_database` and `your_table` with your actual database and table names.\n\n```php\n<?php\n\n// Database connection settings\n$host = 'your_host';\n$dbname = 'your_database';\n$username = 'your_username';\n$password = 'your_password';\n\n// Create a PDO object to connect to the database\ntry {\n    $pdo = new PDO('mysql:host=' . $host . ';dbname=' . $dbname, $username, $password);\n} catch (PDOException $e) {\n    echo 'Connection failed: ' . $e->getMessage();\n}\n\nfunction registerUser($name, $email, $password, $confirm_password)\n{\n    // Validate user input\n    if ($name == '' || $email == '' || $password == '') {\n        return array('error' => 'Please fill in all fields');\n    }\n    \n    if (strlen($password) < 8) {\n        return array('error' => 'Password must be at least 8 characters long');\n    }\n    \n    if ($password != $confirm_password) {\n        return array('error' => 'Passwords do not match');\n    }\n\n    // Hash the password for security\n    $hashed_password = hash('sha256', $password);\n\n    // Prepare and execute SQL query to insert user data into database\n    try {\n        $sql = 'INSERT INTO your_table (name, email, password) VALUES (:name, :email, :password)';\n        $stmt = $pdo->prepare($sql);\n        $stmt->bindParam(':name', $name);\n        $stmt->bindParam(':email', $email);\n        $stmt->bindParam(':password', $hashed_password);\n\n        if ($stmt->execute()) {\n            return array('success' => 'User registered successfully');\n        } else {\n            return array('error' => 'Failed to register user');\n        }\n    } catch (PDOException $e) {\n        return array('error' => 'Database error: ' . $e->getMessage());\n    }\n}\n\n// Example usage:\n$name = 'John Doe';\n$email = 'john@example.com';\n$password = 'password123';\n$confirm_password = 'password123';\n\n$result = registerUser($name, $email, $password, $confirm_password);\nif (isset($result['error'])) {\n    echo 'Error: ' . $result['error'];\n} else {\n    echo 'Success: ' . $result['success'];\n}\n\n?>\n```\n\nThis function takes four parameters:\n\n* `$name`: The user's name\n* `$email`: The user's email address\n* `$password`: The user's password (to be hashed and stored in the database)\n* `$confirm_password`: A confirmation of the user's password\n\nThe function first validates the user input, checking that all fields are filled in, the password is at least 8 characters long, and the passwords match. If any of these checks fail, an error message is returned.\n\nIf the input is valid, the function hashes the password using SHA-256 and prepares a SQL query to insert the user data into the database. The query uses PDO's prepared statement feature to prevent SQL injection attacks. If the query executes successfully, a success message is returned; otherwise, an error message is returned.", "code_blocks": ["```php\n<?php\n\n// Database connection settings\n$host = 'your_host';\n$dbname = 'your_database';\n$username = 'your_username';\n$password = 'your_password';\n\n// Create a PDO object to connect to the database\ntry {\n    $pdo = new PDO('mysql:host=' . $host . ';dbname=' . $dbname, $username, $password);\n} catch (PDOException $e) {\n    echo 'Connection failed: ' . $e->getMessage();\n}\n\nfunction registerUser($name, $email, $password, $confirm_password)\n{\n    // Validate user input\n    if ($name == '' || $email == '' || $password == '') {\n        return array('error' => 'Please fill in all fields');\n    }\n    \n    if (strlen($password) < 8) {\n        return array('error' => 'Password must be at least 8 characters long');\n    }\n    \n    if ($password != $confirm_password) {\n        return array('error' => 'Passwords do not match');\n    }\n\n    // Hash the password for security\n    $hashed_password = hash('sha256', $password);\n\n    // Prepare and execute SQL query to insert user data into database\n    try {\n        $sql = 'INSERT INTO your_table (name, email, password) VALUES (:name, :email, :password)';\n        $stmt = $pdo->prepare($sql);\n        $stmt->bindParam(':name', $name);\n        $stmt->bindParam(':email', $email);\n        $stmt->bindParam(':password', $hashed_password);\n\n        if ($stmt->execute()) {\n            return array('success' => 'User registered successfully');\n        } else {\n            return array('error' => 'Failed to register user');\n        }\n    } catch (PDOException $e) {\n        return array('error' => 'Database error: ' . $e->getMessage());\n    }\n}\n\n// Example usage:\n$name = 'John Doe';\n$email = 'john@example.com';\n$password = 'password123';\n$confirm_password = 'password123';\n\n$result = registerUser($name, $email, $password, $confirm_password);\nif (isset($result['error'])) {\n    echo 'Error: ' . $result['error'];\n} else {\n    echo 'Success: ' . $result['success'];\n}\n\n?>\n```"]}
