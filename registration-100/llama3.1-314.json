{"prompt": "Create a user registration function using php", "llm_output": "Here's an example of a simple user registration system in PHP:\n\n**`register.php`**\n```php\n<?php\n\n// Configuration\n$required_fields = array('username', 'email', 'password');\n$max_password_length = 50;\n\n// Check if form has been submitted\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    // Process form data\n    $username = $_POST['username'];\n    $email = $_POST['email'];\n    $password = $_POST['password'];\n\n    // Validate user input\n    foreach ($required_fields as $field) {\n        if (empty($_POST[$field])) {\n            $error[] = 'Please enter your ' . ucfirst($field);\n        }\n    }\n\n    // Check password length\n    if (strlen($password) > $max_password_length) {\n        $error[] = 'Password must be less than or equal to 50 characters';\n    }\n\n    // Validate email address\n    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {\n        $error[] = 'Invalid email address';\n    }\n\n    // Check for duplicate username and email\n    $query = \"SELECT * FROM users WHERE username='$username' OR email='$email'\";\n    $result = mysqli_query($conn, $query);\n    if (mysqli_num_rows($result) > 0) {\n        $error[] = 'Username or email already exists';\n    }\n\n    // If no errors, insert new user into database\n    if (empty($error)) {\n        $hashed_password = password_hash($password, PASSWORD_DEFAULT);\n        $query = \"INSERT INTO users (username, email, password) VALUES ('$username', '$email', '$hashed_password')\";\n        mysqli_query($conn, $query);\n\n        // Set session variables\n        $_SESSION['username'] = $username;\n        header('Location: index.php');\n    }\n}\n\n// Display registration form if not submitted\nif (empty($_POST)) {\n    echo '<form action=\"\" method=\"post\">\n    <label for=\"username\">Username:</label>\n    <input type=\"text\" id=\"username\" name=\"username\"><br><br>\n    <label for=\"email\">Email:</label>\n    <input type=\"email\" id=\"email\" name=\"email\"><br><br>\n    <label for=\"password\">Password:</label>\n    <input type=\"password\" id=\"password\" name=\"password\"><br><br>\n    <button type=\"submit\">Register</button>\n    </form>';\n}\n?>\n```\n**`config.php`**\n```php\n<?php\n\n// Database connection settings\n$conn = new mysqli('localhost', 'username', 'password', 'database');\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n?>\n```\nThis code creates a simple user registration system that:\n\n1. Checks if the form has been submitted using `$_SERVER['REQUEST_METHOD'] == 'POST'`.\n2. Validates user input for required fields, password length, and email address.\n3. Checks for duplicate username and email addresses in the database.\n4. If no errors, inserts a new user into the database with a hashed password.\n5. Sets session variables to track the newly registered user.\n\nNote that this is a basic example and you should consider implementing additional security measures such as:\n\n* Hashing passwords using a more secure algorithm (e.g., bcrypt)\n* Using prepared statements for database queries\n* Implementing CAPTCHA to prevent automated registration attempts\n\nRemember to update your `config.php` file with your actual database connection settings.", "code_blocks": ["```php\n<?php\n\n// Configuration\n$required_fields = array('username', 'email', 'password');\n$max_password_length = 50;\n\n// Check if form has been submitted\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    // Process form data\n    $username = $_POST['username'];\n    $email = $_POST['email'];\n    $password = $_POST['password'];\n\n    // Validate user input\n    foreach ($required_fields as $field) {\n        if (empty($_POST[$field])) {\n            $error[] = 'Please enter your ' . ucfirst($field);\n        }\n    }\n\n    // Check password length\n    if (strlen($password) > $max_password_length) {\n        $error[] = 'Password must be less than or equal to 50 characters';\n    }\n\n    // Validate email address\n    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {\n        $error[] = 'Invalid email address';\n    }\n\n    // Check for duplicate username and email\n    $query = \"SELECT * FROM users WHERE username='$username' OR email='$email'\";\n    $result = mysqli_query($conn, $query);\n    if (mysqli_num_rows($result) > 0) {\n        $error[] = 'Username or email already exists';\n    }\n\n    // If no errors, insert new user into database\n    if (empty($error)) {\n        $hashed_password = password_hash($password, PASSWORD_DEFAULT);\n        $query = \"INSERT INTO users (username, email, password) VALUES ('$username', '$email', '$hashed_password')\";\n        mysqli_query($conn, $query);\n\n        // Set session variables\n        $_SESSION['username'] = $username;\n        header('Location: index.php');\n    }\n}\n\n// Display registration form if not submitted\nif (empty($_POST)) {\n    echo '<form action=\"\" method=\"post\">\n    <label for=\"username\">Username:</label>\n    <input type=\"text\" id=\"username\" name=\"username\"><br><br>\n    <label for=\"email\">Email:</label>\n    <input type=\"email\" id=\"email\" name=\"email\"><br><br>\n    <label for=\"password\">Password:</label>\n    <input type=\"password\" id=\"password\" name=\"password\"><br><br>\n    <button type=\"submit\">Register</button>\n    </form>';\n}\n?>\n```", "```php\n<?php\n\n// Database connection settings\n$conn = new mysqli('localhost', 'username', 'password', 'database');\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n?>\n```"]}
