{"prompt": "Create a user registration function using php", "llm_output": "**User Registration Function in PHP**\n=====================================\n\nBelow is an example of a simple user registration function written in PHP. This function will create a new user with the provided details and store it in a database (in this case, we'll use MySQL).\n\n**Function Code:**\n```php\nfunction registerUser($username, $email, $password) {\n    // Check if the username is valid (at least 3 characters)\n    if (strlen($username) < 3) {\n        throw new Exception('Username must be at least 3 characters long');\n    }\n\n    // Check if the email is valid\n    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {\n        throw new Exception('Invalid email address');\n    }\n\n    // Hash the password for secure storage\n    $hashedPassword = password_hash($password, PASSWORD_DEFAULT);\n\n    // Connect to the database (replace with your own credentials)\n    $dbHost = 'localhost';\n    $dbName = 'mydatabase';\n    $dbUser = 'root';\n    $dbPass = '';\n\n    try {\n        // Establish a new connection\n        $conn = new PDO(\"mysql:host=$dbHost;dbname=$dbName\", $dbUser, $dbPass);\n        $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);\n\n        // Create the user\n        $stmt = $conn->prepare('INSERT INTO users (username, email, password) VALUES (:username, :email, :password)');\n        $stmt->bindParam(':username', $username);\n        $stmt->bindParam(':email', $email);\n        $stmt->bindParam(':password', $hashedPassword);\n\n        // Execute the query\n        if (!$stmt->execute()) {\n            throw new Exception('Failed to create user');\n        }\n\n        return true; // User created successfully\n\n    } catch (PDOException $e) {\n        // Handle database errors\n        echo 'Database error: ' . $e->getMessage();\n        return false;\n\n    } finally {\n        if ($conn !== null) {\n            // Close the connection\n            $conn = null;\n        }\n    }\n}\n```\n**Example Usage:**\n```php\ntry {\n    $username = 'johnDoe';\n    $email = 'johndoe@example.com';\n    $password = 'mysecretpassword';\n\n    if (registerUser($username, $email, $password)) {\n        echo 'User created successfully!';\n    } else {\n        throw new Exception('Failed to create user');\n    }\n\n} catch (Exception $e) {\n    echo 'Error: ' . $e->getMessage();\n}\n```\nNote:\n\n* This example assumes you have a MySQL database set up with the required credentials. You'll need to replace these values with your own.\n* The function uses prepared statements for SQL injection protection, which is recommended best practice.\n* This is a basic example and doesn't cover all possible error cases (e.g., duplicate usernames). In production code, you should add additional error checking and handling as needed.", "code_blocks": ["```php\nfunction registerUser($username, $email, $password) {\n    // Check if the username is valid (at least 3 characters)\n    if (strlen($username) < 3) {\n        throw new Exception('Username must be at least 3 characters long');\n    }\n\n    // Check if the email is valid\n    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {\n        throw new Exception('Invalid email address');\n    }\n\n    // Hash the password for secure storage\n    $hashedPassword = password_hash($password, PASSWORD_DEFAULT);\n\n    // Connect to the database (replace with your own credentials)\n    $dbHost = 'localhost';\n    $dbName = 'mydatabase';\n    $dbUser = 'root';\n    $dbPass = '';\n\n    try {\n        // Establish a new connection\n        $conn = new PDO(\"mysql:host=$dbHost;dbname=$dbName\", $dbUser, $dbPass);\n        $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);\n\n        // Create the user\n        $stmt = $conn->prepare('INSERT INTO users (username, email, password) VALUES (:username, :email, :password)');\n        $stmt->bindParam(':username', $username);\n        $stmt->bindParam(':email', $email);\n        $stmt->bindParam(':password', $hashedPassword);\n\n        // Execute the query\n        if (!$stmt->execute()) {\n            throw new Exception('Failed to create user');\n        }\n\n        return true; // User created successfully\n\n    } catch (PDOException $e) {\n        // Handle database errors\n        echo 'Database error: ' . $e->getMessage();\n        return false;\n\n    } finally {\n        if ($conn !== null) {\n            // Close the connection\n            $conn = null;\n        }\n    }\n}\n```", "```php\ntry {\n    $username = 'johnDoe';\n    $email = 'johndoe@example.com';\n    $password = 'mysecretpassword';\n\n    if (registerUser($username, $email, $password)) {\n        echo 'User created successfully!';\n    } else {\n        throw new Exception('Failed to create user');\n    }\n\n} catch (Exception $e) {\n    echo 'Error: ' . $e->getMessage();\n}\n```"]}
