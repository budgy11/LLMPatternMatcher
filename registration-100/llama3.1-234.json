{"prompt": "Create a user registration function using php", "llm_output": "Here's an example of a user registration function in PHP:\n\n**registration.php**\n```php\n<?php\n\n// Configuration variables\ndefine('DB_HOST', 'localhost');\ndefine('DB_USERNAME', 'root');\ndefine('DB_PASSWORD', '');\ndefine('DB_NAME', 'users');\n\n// Create connection to database\n$mysqli = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);\n\n// Check if there's an error in the connection\nif ($mysqli->connect_error) {\n    die(\"Connection failed: \" . $mysqli->connect_error);\n}\n\nfunction registerUser($username, $email, $password) {\n    // Hash password using SHA-256 (you can use a library like bcrypt for better security)\n    $hashedPassword = hash('sha256', $password);\n\n    // SQL query to insert user data into database\n    $query = \"INSERT INTO users (username, email, password) VALUES (?, ?, ?)\";\n    $stmt = $mysqli->prepare($query);\n    $stmt->bind_param(\"sss\", $username, $email, $hashedPassword);\n    $result = $stmt->execute();\n\n    if ($result === TRUE) {\n        // User registered successfully\n        return true;\n    } else {\n        // Error registering user\n        echo \"Error: \" . $mysqli->error;\n        return false;\n    }\n}\n\n// Example usage:\n$username = $_POST['username'];\n$email = $_POST['email'];\n$password = $_POST['password'];\n\nif (isset($_POST['register'])) {\n    if (registerUser($username, $email, $password)) {\n        echo \"User registered successfully!\";\n    } else {\n        echo \"Error registering user.\";\n    }\n}\n\n?>\n```\n**How it works:**\n\n1. The function `registerUser` takes three parameters: `$username`, `$email`, and `$password`.\n2. It hashes the password using SHA-256.\n3. It creates an SQL query to insert the user data into the database table `users`.\n4. It prepares the query with placeholders for the values, binds the values to the placeholders, and executes the query.\n5. If the execution is successful (i.e., `$result === TRUE`), it returns `true`, indicating that the user has been registered successfully.\n\n**Security notes:**\n\n1. **Password hashing:** SHA-256 is a basic hash function. In a real-world application, consider using a more secure password hashing library like bcrypt or Argon2.\n2. **SQL injection protection:** This example uses prepared statements and parameterized queries to prevent SQL injection attacks.\n3. **Input validation:** Always validate user input data before processing it. This example doesn't perform any input validation.\n\n**Example use case:**\n\nTo register a new user, create an HTML form with the following fields:\n\n```html\n<form action=\"registration.php\" method=\"post\">\n    <label for=\"username\">Username:</label>\n    <input type=\"text\" id=\"username\" name=\"username\"><br><br>\n    <label for=\"email\">Email:</label>\n    <input type=\"email\" id=\"email\" name=\"email\"><br><br>\n    <label for=\"password\">Password:</label>\n    <input type=\"password\" id=\"password\" name=\"password\"><br><br>\n    <button type=\"submit\" name=\"register\">Register</button>\n</form>\n```\n\nWhen the form is submitted, it calls the `registerUser` function with the user input data. If the registration is successful, a success message is displayed; otherwise, an error message is displayed.", "code_blocks": ["```php\n<?php\n\n// Configuration variables\ndefine('DB_HOST', 'localhost');\ndefine('DB_USERNAME', 'root');\ndefine('DB_PASSWORD', '');\ndefine('DB_NAME', 'users');\n\n// Create connection to database\n$mysqli = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);\n\n// Check if there's an error in the connection\nif ($mysqli->connect_error) {\n    die(\"Connection failed: \" . $mysqli->connect_error);\n}\n\nfunction registerUser($username, $email, $password) {\n    // Hash password using SHA-256 (you can use a library like bcrypt for better security)\n    $hashedPassword = hash('sha256', $password);\n\n    // SQL query to insert user data into database\n    $query = \"INSERT INTO users (username, email, password) VALUES (?, ?, ?)\";\n    $stmt = $mysqli->prepare($query);\n    $stmt->bind_param(\"sss\", $username, $email, $hashedPassword);\n    $result = $stmt->execute();\n\n    if ($result === TRUE) {\n        // User registered successfully\n        return true;\n    } else {\n        // Error registering user\n        echo \"Error: \" . $mysqli->error;\n        return false;\n    }\n}\n\n// Example usage:\n$username = $_POST['username'];\n$email = $_POST['email'];\n$password = $_POST['password'];\n\nif (isset($_POST['register'])) {\n    if (registerUser($username, $email, $password)) {\n        echo \"User registered successfully!\";\n    } else {\n        echo \"Error registering user.\";\n    }\n}\n\n?>\n```", null]}
