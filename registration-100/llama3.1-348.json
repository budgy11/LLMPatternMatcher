{"prompt": "Create a user registration function using php", "llm_output": "Here's an example of a basic user registration function in PHP:\n\n```php\n<?php\n\n// Configuration variables\ndefine('DB_HOST', 'localhost');\ndefine('DB_USERNAME', 'your_username');\ndefine('DB_PASSWORD', 'your_password');\ndefine('DB_NAME', 'your_database');\n\n// Connect to database\nfunction connectToDatabase() {\n    try {\n        $conn = new PDO(\"mysql:host=\" . DB_HOST . \";dbname=\" . DB_NAME, DB_USERNAME, DB_PASSWORD);\n        return $conn;\n    } catch (PDOException $e) {\n        echo \"Error connecting to database: \" . $e->getMessage();\n        exit;\n    }\n}\n\n// Register user\nfunction registerUser($name, $email, $password) {\n    // Hash password\n    $hashedPassword = password_hash($password, PASSWORD_DEFAULT);\n\n    // Prepare SQL query\n    $conn = connectToDatabase();\n    $sql = \"INSERT INTO users (name, email, password) VALUES (:name, :email, :password)\";\n    $stmt = $conn->prepare($sql);\n    $stmt->bindParam(':name', $name);\n    $stmt->bindParam(':email', $email);\n    $stmt->bindParam(':password', $hashedPassword);\n\n    // Execute query\n    try {\n        if ($stmt->execute()) {\n            echo \"User registered successfully!\";\n        } else {\n            throw new Exception('Error registering user');\n        }\n    } catch (Exception $e) {\n        echo \"Error registering user: \" . $e->getMessage();\n    }\n\n    // Close database connection\n    $conn = null;\n}\n\n// Example usage:\nregisterUser(\"John Doe\", \"john@example.com\", \"password123\");\n\n?>\n```\n\nIn this code:\n\n*   The `connectToDatabase` function establishes a connection to the MySQL database using PDO.\n*   The `registerUser` function takes user input (name, email, and password), hashes the password with `password_hash()`, prepares an SQL query, and executes it. If successful, it displays a success message.\n\n**Note:** This code does not include any validation or sanitization for the user input. In a production environment, you should ensure that the input is properly sanitized to prevent SQL injection attacks.\n\n**To use this function in your application:**\n\n1.  Create a new PHP file (e.g., `register.php`) and paste the above code into it.\n2.  Replace the placeholders (`your_username`, `your_password`, and `your_database`) with your actual database credentials.\n3.  Call the `registerUser` function when the user submits their registration form, passing in their name, email, and password as arguments.\n\nMake sure to follow best practices for secure coding, such as validating and sanitizing input data, handling errors properly, and using prepared statements or parameterized queries to prevent SQL injection attacks.", "code_blocks": ["```php\n<?php\n\n// Configuration variables\ndefine('DB_HOST', 'localhost');\ndefine('DB_USERNAME', 'your_username');\ndefine('DB_PASSWORD', 'your_password');\ndefine('DB_NAME', 'your_database');\n\n// Connect to database\nfunction connectToDatabase() {\n    try {\n        $conn = new PDO(\"mysql:host=\" . DB_HOST . \";dbname=\" . DB_NAME, DB_USERNAME, DB_PASSWORD);\n        return $conn;\n    } catch (PDOException $e) {\n        echo \"Error connecting to database: \" . $e->getMessage();\n        exit;\n    }\n}\n\n// Register user\nfunction registerUser($name, $email, $password) {\n    // Hash password\n    $hashedPassword = password_hash($password, PASSWORD_DEFAULT);\n\n    // Prepare SQL query\n    $conn = connectToDatabase();\n    $sql = \"INSERT INTO users (name, email, password) VALUES (:name, :email, :password)\";\n    $stmt = $conn->prepare($sql);\n    $stmt->bindParam(':name', $name);\n    $stmt->bindParam(':email', $email);\n    $stmt->bindParam(':password', $hashedPassword);\n\n    // Execute query\n    try {\n        if ($stmt->execute()) {\n            echo \"User registered successfully!\";\n        } else {\n            throw new Exception('Error registering user');\n        }\n    } catch (Exception $e) {\n        echo \"Error registering user: \" . $e->getMessage();\n    }\n\n    // Close database connection\n    $conn = null;\n}\n\n// Example usage:\nregisterUser(\"John Doe\", \"john@example.com\", \"password123\");\n\n?>\n```"]}
