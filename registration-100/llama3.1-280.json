{"prompt": "Create a user registration function using php", "llm_output": "**User Registration Function in PHP**\n=====================================\n\nBelow is an example of a simple user registration function written in PHP. This function uses prepared statements to prevent SQL injection attacks.\n\n**`register.php` file**\n```php\n<?php\n\n// Configuration settings\n$db_host = 'localhost';\n$db_username = 'your_username';\n$db_password = 'your_password';\n$db_name = 'your_database';\n\n// Create a connection to the database\n$conn = new mysqli($db_host, $db_username, $db_password, $db_name);\n\n// Check if the connection was successful\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\nfunction registerUser() {\n    global $conn;\n\n    // Get user input\n    $name = $_POST['name'];\n    $email = $_POST['email'];\n    $password = $_POST['password'];\n    $confirm_password = $_POST['confirm_password'];\n\n    // Validate user input\n    if (empty($name) || empty($email) || empty($password) || empty($confirm_password)) {\n        echo \"Please fill in all fields.\";\n        return false;\n    }\n\n    if ($password !== $confirm_password) {\n        echo \"Passwords do not match.\";\n        return false;\n    }\n\n    // Hash password\n    $hashed_password = password_hash($password, PASSWORD_DEFAULT);\n\n    // Prepare SQL statement to insert user data into the database\n    $stmt = $conn->prepare(\"INSERT INTO users (name, email, password) VALUES (?, ?, ?)\");\n    if (!$stmt) {\n        echo \"Error preparing statement: \" . $conn->error;\n        return false;\n    }\n\n    // Bind parameters\n    $stmt->bind_param(\"sss\", $name, $email, $hashed_password);\n\n    // Execute query\n    if (!$stmt->execute()) {\n        echo \"Error executing query: \" . $conn->error;\n        return false;\n    }\n\n    // Close statement and connection\n    $stmt->close();\n    $conn->close();\n\n    // Redirect user to login page\n    header(\"Location: login.php\");\n}\n\nif (isset($_POST['register'])) {\n    registerUser();\n} else {\n    // Display registration form if the user clicks the \"Register\" button\n    echo \"\n        <form action='' method='post'>\n            <label for='name'>Name:</label>\n            <input type='text' id='name' name='name'><br><br>\n            <label for='email'>Email:</label>\n            <input type='email' id='email' name='email'><br><br>\n            <label for='password'>Password:</label>\n            <input type='password' id='password' name='password'><br><br>\n            <label for='confirm_password'>Confirm Password:</label>\n            <input type='password' id='confirm_password' name='confirm_password'><br><br>\n            <button type='submit' name='register'>Register</button>\n        </form>\n    \";\n}\n?>\n```\n**How it works:**\n\n1. The user submits the registration form with their details.\n2. The `registerUser()` function is called, which checks if all fields are filled in and if the passwords match.\n3. If validation passes, the function hashes the password using PHP's built-in `password_hash` function.\n4. A prepared SQL statement is created to insert the user data into the database.\n5. The parameters are bound to the prepared statement.\n6. The query is executed.\n7. If successful, the connection and statement are closed, and the user is redirected to the login page.\n\n**Note:**\n\n* This code assumes you have a `users` table in your database with columns `name`, `email`, and `password`.\n* You should adjust the configuration settings (`$db_host`, `$db_username`, etc.) to match your own database credentials.\n* This is a basic example, and you may want to add additional validation or security measures depending on your specific requirements.", "code_blocks": ["```php\n<?php\n\n// Configuration settings\n$db_host = 'localhost';\n$db_username = 'your_username';\n$db_password = 'your_password';\n$db_name = 'your_database';\n\n// Create a connection to the database\n$conn = new mysqli($db_host, $db_username, $db_password, $db_name);\n\n// Check if the connection was successful\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\nfunction registerUser() {\n    global $conn;\n\n    // Get user input\n    $name = $_POST['name'];\n    $email = $_POST['email'];\n    $password = $_POST['password'];\n    $confirm_password = $_POST['confirm_password'];\n\n    // Validate user input\n    if (empty($name) || empty($email) || empty($password) || empty($confirm_password)) {\n        echo \"Please fill in all fields.\";\n        return false;\n    }\n\n    if ($password !== $confirm_password) {\n        echo \"Passwords do not match.\";\n        return false;\n    }\n\n    // Hash password\n    $hashed_password = password_hash($password, PASSWORD_DEFAULT);\n\n    // Prepare SQL statement to insert user data into the database\n    $stmt = $conn->prepare(\"INSERT INTO users (name, email, password) VALUES (?, ?, ?)\");\n    if (!$stmt) {\n        echo \"Error preparing statement: \" . $conn->error;\n        return false;\n    }\n\n    // Bind parameters\n    $stmt->bind_param(\"sss\", $name, $email, $hashed_password);\n\n    // Execute query\n    if (!$stmt->execute()) {\n        echo \"Error executing query: \" . $conn->error;\n        return false;\n    }\n\n    // Close statement and connection\n    $stmt->close();\n    $conn->close();\n\n    // Redirect user to login page\n    header(\"Location: login.php\");\n}\n\nif (isset($_POST['register'])) {\n    registerUser();\n} else {\n    // Display registration form if the user clicks the \"Register\" button\n    echo \"\n        <form action='' method='post'>\n            <label for='name'>Name:</label>\n            <input type='text' id='name' name='name'><br><br>\n            <label for='email'>Email:</label>\n            <input type='email' id='email' name='email'><br><br>\n            <label for='password'>Password:</label>\n            <input type='password' id='password' name='password'><br><br>\n            <label for='confirm_password'>Confirm Password:</label>\n            <input type='password' id='confirm_password' name='confirm_password'><br><br>\n            <button type='submit' name='register'>Register</button>\n        </form>\n    \";\n}\n?>\n```"]}
