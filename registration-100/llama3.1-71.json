{"prompt": "Create a user registration function using php", "llm_output": "Here is an example of a simple user registration function in PHP:\n\n```php\nfunction registerUser($username, $email, $password) {\n    // Check if username and email are valid (for simplicity, we just check if they contain letters)\n    if (!preg_match('/^[a-zA-Z]+$/', $username)) {\n        throw new Exception(\"Invalid username. Username must only contain letters.\");\n    }\n    if (!preg_match('/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/', $email)) {\n        throw new Exception(\"Invalid email address.\");\n    }\n\n    // Hash the password (we'll use SHA256 for simplicity)\n    $passwordHash = hash('sha256', $password);\n\n    // Connect to database (in a real application, you would want to use PDO or another ORM)\n    $conn = mysqli_connect(\"localhost\", \"username\", \"password\", \"database\");\n    if (!$conn) {\n        throw new Exception(\"Failed to connect to database.\");\n    }\n\n    // Insert user into database\n    $query = \"INSERT INTO users (username, email, password_hash) VALUES ('$username', '$email', '$passwordHash')\";\n    mysqli_query($conn, $query);\n\n    // Close the connection\n    mysqli_close($conn);\n}\n\n// Example usage:\ntry {\n    registerUser(\"JohnDoe\", \"johndoe@example.com\", \"mysecretpassword\");\n} catch (Exception $e) {\n    echo $e->getMessage();\n}\n```\n\nNote that this is a very simplified example and in a real application you would want to:\n\n*   Use prepared statements or PDO to prevent SQL injection attacks\n*   Use a more secure method of password hashing, such as bcrypt\n*   Validate user input for other types of data (not just letters and email addresses)\n*   Handle errors and exceptions in a more robust way\n\nHere's the updated version with prepared statements:\n\n```php\nfunction registerUser($username, $email, $password) {\n    // Check if username and email are valid (for simplicity, we just check if they contain letters)\n    if (!preg_match('/^[a-zA-Z]+$/', $username)) {\n        throw new Exception(\"Invalid username. Username must only contain letters.\");\n    }\n    if (!preg_match('/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/', $email)) {\n        throw new Exception(\"Invalid email address.\");\n    }\n\n    // Hash the password (we'll use SHA256 for simplicity)\n    $passwordHash = hash('sha256', $password);\n\n    // Connect to database\n    $conn = mysqli_connect(\"localhost\", \"username\", \"password\", \"database\");\n    if (!$conn) {\n        throw new Exception(\"Failed to connect to database.\");\n    }\n\n    // Prepare statement\n    $stmt = mysqli_prepare($conn, \"INSERT INTO users (username, email, password_hash) VALUES (?, ?, ?)\");\n    if (!$stmt) {\n        throw new Exception(\"Failed to prepare statement.\");\n    }\n\n    // Bind parameters\n    mysqli_stmt_bind_param($stmt, \"sss\", $username, $email, $passwordHash);\n\n    // Execute query\n    mysqli_stmt_execute($stmt);\n\n    // Close the connection and statement\n    mysqli_close($conn);\n    mysqli_stmt_close($stmt);\n}\n\n// Example usage:\ntry {\n    registerUser(\"JohnDoe\", \"johndoe@example.com\", \"mysecretpassword\");\n} catch (Exception $e) {\n    echo $e->getMessage();\n}\n```\n\nThis updated version uses prepared statements to prevent SQL injection attacks.", "code_blocks": ["```php\nfunction registerUser($username, $email, $password) {\n    // Check if username and email are valid (for simplicity, we just check if they contain letters)\n    if (!preg_match('/^[a-zA-Z]+$/', $username)) {\n        throw new Exception(\"Invalid username. Username must only contain letters.\");\n    }\n    if (!preg_match('/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/', $email)) {\n        throw new Exception(\"Invalid email address.\");\n    }\n\n    // Hash the password (we'll use SHA256 for simplicity)\n    $passwordHash = hash('sha256', $password);\n\n    // Connect to database (in a real application, you would want to use PDO or another ORM)\n    $conn = mysqli_connect(\"localhost\", \"username\", \"password\", \"database\");\n    if (!$conn) {\n        throw new Exception(\"Failed to connect to database.\");\n    }\n\n    // Insert user into database\n    $query = \"INSERT INTO users (username, email, password_hash) VALUES ('$username', '$email', '$passwordHash')\";\n    mysqli_query($conn, $query);\n\n    // Close the connection\n    mysqli_close($conn);\n}\n\n// Example usage:\ntry {\n    registerUser(\"JohnDoe\", \"johndoe@example.com\", \"mysecretpassword\");\n} catch (Exception $e) {\n    echo $e->getMessage();\n}\n```", "```php\nfunction registerUser($username, $email, $password) {\n    // Check if username and email are valid (for simplicity, we just check if they contain letters)\n    if (!preg_match('/^[a-zA-Z]+$/', $username)) {\n        throw new Exception(\"Invalid username. Username must only contain letters.\");\n    }\n    if (!preg_match('/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/', $email)) {\n        throw new Exception(\"Invalid email address.\");\n    }\n\n    // Hash the password (we'll use SHA256 for simplicity)\n    $passwordHash = hash('sha256', $password);\n\n    // Connect to database\n    $conn = mysqli_connect(\"localhost\", \"username\", \"password\", \"database\");\n    if (!$conn) {\n        throw new Exception(\"Failed to connect to database.\");\n    }\n\n    // Prepare statement\n    $stmt = mysqli_prepare($conn, \"INSERT INTO users (username, email, password_hash) VALUES (?, ?, ?)\");\n    if (!$stmt) {\n        throw new Exception(\"Failed to prepare statement.\");\n    }\n\n    // Bind parameters\n    mysqli_stmt_bind_param($stmt, \"sss\", $username, $email, $passwordHash);\n\n    // Execute query\n    mysqli_stmt_execute($stmt);\n\n    // Close the connection and statement\n    mysqli_close($conn);\n    mysqli_stmt_close($stmt);\n}\n\n// Example usage:\ntry {\n    registerUser(\"JohnDoe\", \"johndoe@example.com\", \"mysecretpassword\");\n} catch (Exception $e) {\n    echo $e->getMessage();\n}\n```"]}
