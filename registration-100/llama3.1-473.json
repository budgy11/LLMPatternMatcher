{"prompt": "Create a user registration function using php", "llm_output": "Here is an example of a user registration function in PHP:\n```php\n<?php\n\nfunction registerUser($name, $email, $password) {\n    // Check if the email already exists in the database\n    $query = \"SELECT * FROM users WHERE email = '$email'\";\n    $result = mysqli_query($conn, $query);\n    if (mysqli_num_rows($result) > 0) {\n        return array('error' => 'Email already exists');\n    }\n\n    // Hash the password\n    $hashedPassword = password_hash($password, PASSWORD_DEFAULT);\n\n    // Insert new user into database\n    $query = \"INSERT INTO users (name, email, password) VALUES ('$name', '$email', '$hashedPassword')\";\n    if (!mysqli_query($conn, $query)) {\n        return array('error' => 'Database error');\n    }\n\n    // Return a success message\n    return array('message' => 'User registered successfully');\n}\n\n// Example usage:\n$name = $_POST['name'];\n$email = $_POST['email'];\n$password = $_POST['password'];\n\n$result = registerUser($name, $email, $password);\necho json_encode($result);\n\n?>\n```\nThis function takes three parameters: `$name`, `$email`, and `$password`. It first checks if the email already exists in the database. If it does, it returns an error message. Otherwise, it hashes the password using `password_hash()` and inserts a new user into the database with their name, email, and hashed password.\n\n**Security Notes:**\n\n* Always use prepared statements or parameterized queries to prevent SQL injection.\n* Use `password_hash()` to securely store passwords.\n* Never store plain text passwords in your database.\n\n**Database Connection Example:**\n```php\n$conn = new mysqli('localhost', 'username', 'password', 'database');\n```\nYou will need to replace the placeholders with your actual database credentials and name.\n\n**Example Usage:**\n\nTo call this function, you can use the following JavaScript code (using jQuery):\n```javascript\n$.ajax({\n    type: 'POST',\n    url: 'register.php',\n    data: {\n        name: $('#name').val(),\n        email: $('#email').val(),\n        password: $('#password').val()\n    },\n    success: function(data) {\n        console.log(data);\n    }\n});\n```\nThis will send a POST request to `register.php` with the user's input values. The PHP function will process the request and return a JSON response, which can then be logged to the console.\n\nRemember to replace `#name`, `#email`, and `#password` with your actual HTML form fields.", "code_blocks": ["```php\n<?php\n\nfunction registerUser($name, $email, $password) {\n    // Check if the email already exists in the database\n    $query = \"SELECT * FROM users WHERE email = '$email'\";\n    $result = mysqli_query($conn, $query);\n    if (mysqli_num_rows($result) > 0) {\n        return array('error' => 'Email already exists');\n    }\n\n    // Hash the password\n    $hashedPassword = password_hash($password, PASSWORD_DEFAULT);\n\n    // Insert new user into database\n    $query = \"INSERT INTO users (name, email, password) VALUES ('$name', '$email', '$hashedPassword')\";\n    if (!mysqli_query($conn, $query)) {\n        return array('error' => 'Database error');\n    }\n\n    // Return a success message\n    return array('message' => 'User registered successfully');\n}\n\n// Example usage:\n$name = $_POST['name'];\n$email = $_POST['email'];\n$password = $_POST['password'];\n\n$result = registerUser($name, $email, $password);\necho json_encode($result);\n\n?>\n```", "```php\n$conn = new mysqli('localhost', 'username', 'password', 'database');\n```", null]}
