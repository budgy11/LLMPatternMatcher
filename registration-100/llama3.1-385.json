{"prompt": "Create a user registration function using php", "llm_output": "**User Registration Function in PHP**\n=====================================\n\nBelow is an example of a user registration function in PHP that includes input validation, password hashing, and database interaction.\n\n### Requirements:\n\n* PHP 7.2 or higher\n* MySQLi extension installed (for database interaction)\n\n### Database Schema:\n\nAssuming you have a `users` table with the following columns:\n\n| Column Name | Data Type |\n| --- | --- |\n| id | int (primary key) |\n| username | varchar(50) |\n| email | varchar(100) |\n| password | varchar(255) |\n\n### Code:\n```php\n<?php\n\nfunction registerUser($username, $email, $password) {\n    // Input validation\n    if (empty($username) || empty($email) || empty($password)) {\n        return array('error' => 'All fields are required.');\n    }\n\n    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {\n        return array('error' => 'Invalid email address.');\n    }\n\n    // Password hashing\n    $hashedPassword = password_hash($password, PASSWORD_DEFAULT);\n\n    // Database interaction\n    require_once 'database.php'; // include database connection file\n\n    $mysqli = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);\n    if ($mysqli->connect_errno) {\n        return array('error' => 'Failed to connect to the database.');\n    }\n\n    $query = \"INSERT INTO users (username, email, password) VALUES (?, ?, ?)\";\n    $stmt = $mysqli->prepare($query);\n    $stmt->bind_param(\"sss\", $username, $email, $hashedPassword);\n\n    if (!$stmt->execute()) {\n        return array('error' => 'Failed to register user.');\n    }\n\n    $id = $mysqli->insert_id;\n    $mysqli->close();\n\n    // Return success message with user ID\n    return array('success' => 'User registered successfully.', 'userId' => $id);\n}\n\n?>\n```\n\n### Usage Example:\n\n```php\n$username = $_POST['username'];\n$email = $_POST['email'];\n$password = $_POST['password'];\n\n$response = registerUser($username, $email, $password);\n\nif (isset($response['error'])) {\n    echo json_encode(array('error' => $response['error']));\n} else {\n    echo json_encode($response);\n}\n```\n\n### Security Notes:\n\n* Passwords are hashed using the `password_hash()` function, which is recommended for password storage.\n* Input validation and sanitization are performed to prevent SQL injection attacks.\n* Database connection is handled securely using the MySQLi extension.\n\nRemember to replace `database.php` with your actual database connection file.", "code_blocks": ["```php\n<?php\n\nfunction registerUser($username, $email, $password) {\n    // Input validation\n    if (empty($username) || empty($email) || empty($password)) {\n        return array('error' => 'All fields are required.');\n    }\n\n    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {\n        return array('error' => 'Invalid email address.');\n    }\n\n    // Password hashing\n    $hashedPassword = password_hash($password, PASSWORD_DEFAULT);\n\n    // Database interaction\n    require_once 'database.php'; // include database connection file\n\n    $mysqli = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);\n    if ($mysqli->connect_errno) {\n        return array('error' => 'Failed to connect to the database.');\n    }\n\n    $query = \"INSERT INTO users (username, email, password) VALUES (?, ?, ?)\";\n    $stmt = $mysqli->prepare($query);\n    $stmt->bind_param(\"sss\", $username, $email, $hashedPassword);\n\n    if (!$stmt->execute()) {\n        return array('error' => 'Failed to register user.');\n    }\n\n    $id = $mysqli->insert_id;\n    $mysqli->close();\n\n    // Return success message with user ID\n    return array('success' => 'User registered successfully.', 'userId' => $id);\n}\n\n?>\n```", "```php\n$username = $_POST['username'];\n$email = $_POST['email'];\n$password = $_POST['password'];\n\n$response = registerUser($username, $email, $password);\n\nif (isset($response['error'])) {\n    echo json_encode(array('error' => $response['error']));\n} else {\n    echo json_encode($response);\n}\n```"]}
