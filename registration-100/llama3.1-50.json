{"prompt": "Create a user registration function using php", "llm_output": "Here's an example of a simple user registration function in PHP:\n\n**User Registration Function**\n```php\n<?php\n\nfunction register_user($name, $email, $password) {\n    // Check if the email already exists in the database\n    $db = connect_to_db(); // assume this function connects to your database and returns a MySQLi object\n    $query = \"SELECT * FROM users WHERE email = '$email'\";\n    $result = $db->query($query);\n    if ($result->num_rows > 0) {\n        echo \"Email already exists.\";\n        return false;\n    }\n\n    // Hash the password\n    $password_hash = password_hash($password, PASSWORD_DEFAULT);\n\n    // Insert new user into database\n    $query = \"INSERT INTO users (name, email, password) VALUES ('$name', '$email', '$password_hash')\";\n    $db->query($query);\n    return true;\n}\n\nfunction connect_to_db() {\n    // Connect to your database\n    $mysqli = new mysqli(\"localhost\", \"username\", \"password\", \"database_name\");\n    if ($mysqli->connect_errno) {\n        echo \"Failed to connect to MySQL: (\" . $mysqli->connect_errno . \") \" . $mysqli->connect_error;\n        exit();\n    }\n    return $mysqli;\n}\n\n// Example usage:\n$name = $_POST['name'];\n$email = $_POST['email'];\n$password = $_POST['password'];\n\nif (register_user($name, $email, $password)) {\n    echo \"User registered successfully!\";\n} else {\n    echo \"Registration failed.\";\n}\n?>\n```\n**Note:**\n\n* This is a very basic example. In a real-world application, you should use prepared statements to prevent SQL injection.\n* You should also store the password securely, such as using a salted hash (like bcrypt) instead of `password_hash()`.\n* This function assumes that your database table has columns named \"name\", \"email\", and \"password\".\n* You should validate user input data before storing it in the database.\n\n**Improved Version**\n```php\n<?php\n\nfunction register_user($data) {\n    $db = connect_to_db();\n    $query = \"SELECT * FROM users WHERE email = ?\";\n\n    try {\n        $stmt = $db->prepare($query);\n        $stmt->bind_param(\"s\", $email);\n        $result = $stmt->execute();\n\n        if ($result && $stmt->num_rows > 0) {\n            throw new Exception(\"Email already exists.\");\n        }\n\n        $name = $data['name'];\n        $email = $data['email'];\n        $password = $data['password'];\n\n        // Hash the password\n        $password_hash = password_hash($password, PASSWORD_DEFAULT);\n\n        $query = \"INSERT INTO users (name, email, password) VALUES (?, ?, ?)\";\n        $stmt = $db->prepare($query);\n        $stmt->bind_param(\"sss\", $name, $email, $password_hash);\n        $result = $stmt->execute();\n\n        if ($result) {\n            return true;\n        } else {\n            throw new Exception(\"Registration failed.\");\n        }\n    } catch (Exception $e) {\n        echo \"Error: \" . $e->getMessage();\n        return false;\n    }\n}\n\n// Example usage:\n$data = array(\n    'name' => $_POST['name'],\n    'email' => $_POST['email'],\n    'password' => $_POST['password']\n);\n\nif (register_user($data)) {\n    echo \"User registered successfully!\";\n} else {\n    echo \"Registration failed.\";\n}\n?>\n```\nThis improved version uses prepared statements to prevent SQL injection and is more secure.", "code_blocks": ["```php\n<?php\n\nfunction register_user($name, $email, $password) {\n    // Check if the email already exists in the database\n    $db = connect_to_db(); // assume this function connects to your database and returns a MySQLi object\n    $query = \"SELECT * FROM users WHERE email = '$email'\";\n    $result = $db->query($query);\n    if ($result->num_rows > 0) {\n        echo \"Email already exists.\";\n        return false;\n    }\n\n    // Hash the password\n    $password_hash = password_hash($password, PASSWORD_DEFAULT);\n\n    // Insert new user into database\n    $query = \"INSERT INTO users (name, email, password) VALUES ('$name', '$email', '$password_hash')\";\n    $db->query($query);\n    return true;\n}\n\nfunction connect_to_db() {\n    // Connect to your database\n    $mysqli = new mysqli(\"localhost\", \"username\", \"password\", \"database_name\");\n    if ($mysqli->connect_errno) {\n        echo \"Failed to connect to MySQL: (\" . $mysqli->connect_errno . \") \" . $mysqli->connect_error;\n        exit();\n    }\n    return $mysqli;\n}\n\n// Example usage:\n$name = $_POST['name'];\n$email = $_POST['email'];\n$password = $_POST['password'];\n\nif (register_user($name, $email, $password)) {\n    echo \"User registered successfully!\";\n} else {\n    echo \"Registration failed.\";\n}\n?>\n```", "```php\n<?php\n\nfunction register_user($data) {\n    $db = connect_to_db();\n    $query = \"SELECT * FROM users WHERE email = ?\";\n\n    try {\n        $stmt = $db->prepare($query);\n        $stmt->bind_param(\"s\", $email);\n        $result = $stmt->execute();\n\n        if ($result && $stmt->num_rows > 0) {\n            throw new Exception(\"Email already exists.\");\n        }\n\n        $name = $data['name'];\n        $email = $data['email'];\n        $password = $data['password'];\n\n        // Hash the password\n        $password_hash = password_hash($password, PASSWORD_DEFAULT);\n\n        $query = \"INSERT INTO users (name, email, password) VALUES (?, ?, ?)\";\n        $stmt = $db->prepare($query);\n        $stmt->bind_param(\"sss\", $name, $email, $password_hash);\n        $result = $stmt->execute();\n\n        if ($result) {\n            return true;\n        } else {\n            throw new Exception(\"Registration failed.\");\n        }\n    } catch (Exception $e) {\n        echo \"Error: \" . $e->getMessage();\n        return false;\n    }\n}\n\n// Example usage:\n$data = array(\n    'name' => $_POST['name'],\n    'email' => $_POST['email'],\n    'password' => $_POST['password']\n);\n\nif (register_user($data)) {\n    echo \"User registered successfully!\";\n} else {\n    echo \"Registration failed.\";\n}\n?>\n```"]}
