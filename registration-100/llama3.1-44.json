{"prompt": "Create a user registration function using php", "llm_output": "**User Registration Function in PHP**\n=====================================\n\nBelow is an example of a basic user registration function written in PHP. This function will validate the input data, hash the password, and store it in a database.\n\n**Database Schema**\n\nFor this example, we'll assume you have a `users` table with the following columns:\n\n| Column Name | Data Type |\n| --- | --- |\n| id | int (primary key) |\n| username | varchar(255) |\n| email | varchar(255) |\n| password | varchar(255) |\n\n**User Registration Function**\n\n```php\n<?php\n\n// Configuration constants\ndefine('DB_HOST', 'your_database_host');\ndefine('DB_USERNAME', 'your_database_username');\ndefine('DB_PASSWORD', 'your_database_password');\ndefine('DB_NAME', 'your_database_name');\n\n// Connect to the database\nfunction connectToDatabase() {\n    try {\n        $dsn = \"mysql:host=\" . DB_HOST . \";dbname=\" . DB_NAME;\n        $pdo = new PDO($dsn, DB_USERNAME, DB_PASSWORD);\n        return $pdo;\n    } catch (PDOException $e) {\n        echo 'Connection failed: ' . $e->getMessage();\n    }\n}\n\n// Registration function\nfunction registerUser($username, $email, $password) {\n    // Check if user already exists\n    $pdo = connectToDatabase();\n    $stmt = $pdo->prepare(\"SELECT * FROM users WHERE username = :username\");\n    $stmt->bindParam(':username', $username);\n    $stmt->execute();\n    if ($stmt->rowCount() > 0) {\n        echo \"User already exists!\";\n        return false;\n    }\n\n    // Hash the password\n    $hashedPassword = password_hash($password, PASSWORD_DEFAULT);\n\n    // Insert new user into database\n    $stmt = $pdo->prepare(\"INSERT INTO users (username, email, password) VALUES (:username, :email, :password)\");\n    $stmt->bindParam(':username', $username);\n    $stmt->bindParam(':email', $email);\n    $stmt->bindParam(':password', $hashedPassword);\n    if ($stmt->execute()) {\n        echo \"User registered successfully!\";\n        return true;\n    } else {\n        echo \"Registration failed.\";\n        return false;\n    }\n}\n```\n\n**Example Usage**\n\n```php\n$username = 'johnDoe';\n$email = 'johndoe@example.com';\n$password = 'mysecretpassword';\n\nif (registerUser($username, $email, $password)) {\n    echo \"User successfully registered!\";\n} else {\n    echo \"Registration failed.\";\n}\n```\n\n**Notes**\n\n* Make sure to replace the `DB_HOST`, `DB_USERNAME`, `DB_PASSWORD`, and `DB_NAME` constants with your actual database credentials.\n* This example uses the `PDO` (PHP Data Objects) extension for interacting with the database. Ensure you have it enabled in your PHP setup.\n* The password is hashed using the `password_hash()` function, which uses a cryptographically secure algorithm to generate a hash.", "code_blocks": ["```php\n<?php\n\n// Configuration constants\ndefine('DB_HOST', 'your_database_host');\ndefine('DB_USERNAME', 'your_database_username');\ndefine('DB_PASSWORD', 'your_database_password');\ndefine('DB_NAME', 'your_database_name');\n\n// Connect to the database\nfunction connectToDatabase() {\n    try {\n        $dsn = \"mysql:host=\" . DB_HOST . \";dbname=\" . DB_NAME;\n        $pdo = new PDO($dsn, DB_USERNAME, DB_PASSWORD);\n        return $pdo;\n    } catch (PDOException $e) {\n        echo 'Connection failed: ' . $e->getMessage();\n    }\n}\n\n// Registration function\nfunction registerUser($username, $email, $password) {\n    // Check if user already exists\n    $pdo = connectToDatabase();\n    $stmt = $pdo->prepare(\"SELECT * FROM users WHERE username = :username\");\n    $stmt->bindParam(':username', $username);\n    $stmt->execute();\n    if ($stmt->rowCount() > 0) {\n        echo \"User already exists!\";\n        return false;\n    }\n\n    // Hash the password\n    $hashedPassword = password_hash($password, PASSWORD_DEFAULT);\n\n    // Insert new user into database\n    $stmt = $pdo->prepare(\"INSERT INTO users (username, email, password) VALUES (:username, :email, :password)\");\n    $stmt->bindParam(':username', $username);\n    $stmt->bindParam(':email', $email);\n    $stmt->bindParam(':password', $hashedPassword);\n    if ($stmt->execute()) {\n        echo \"User registered successfully!\";\n        return true;\n    } else {\n        echo \"Registration failed.\";\n        return false;\n    }\n}\n```", "```php\n$username = 'johnDoe';\n$email = 'johndoe@example.com';\n$password = 'mysecretpassword';\n\nif (registerUser($username, $email, $password)) {\n    echo \"User successfully registered!\";\n} else {\n    echo \"Registration failed.\";\n}\n```"]}
