{"prompt": "Create a user registration function using php", "llm_output": "**User Registration Function in PHP**\n=====================================\n\nBelow is an example of a user registration function in PHP that includes input validation, password hashing, and email verification.\n\n### Dependencies\n\n*   PHP 7.2+\n*   `mysqli` or `PDO` extension for database interaction\n*   A PHPMailer library (optional) for sending email notifications\n\n### Database Schema\n\nCreate the following table schema to store user information:\n\n```sql\nCREATE TABLE users (\n    id INT PRIMARY KEY AUTO_INCREMENT,\n    username VARCHAR(50) NOT NULL UNIQUE,\n    email VARCHAR(100) NOT NULL UNIQUE,\n    password_hash VARCHAR(255) NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    verified_at TIMESTAMP DEFAULT NULL\n);\n```\n\n### PHP Code\n\n```php\nfunction registerUser($username, $email, $password, &$mysqli)\n{\n    // Input validation\n    if (empty($username) || empty($email) || empty($password)) {\n        throw new Exception(\"All fields are required.\");\n    }\n\n    // Check for duplicate usernames and emails\n    $query = \"SELECT * FROM users WHERE username = ? OR email = ?\";\n    $stmt = $mysqli->prepare($query);\n    $stmt->bind_param(\"ss\", $username, $email);\n    $stmt->execute();\n    $result = $stmt->get_result();\n\n    if ($result->num_rows > 0) {\n        throw new Exception(\"Username or Email already exists.\");\n    }\n\n    // Password hashing\n    $passwordHash = password_hash($password, PASSWORD_DEFAULT);\n\n    // Insert user into database\n    $query = \"INSERT INTO users (username, email, password_hash) VALUES (?, ?, ?)\";\n    $stmt = $mysqli->prepare($query);\n    $stmt->bind_param(\"sss\", $username, $email, $passwordHash);\n    $stmt->execute();\n\n    // Generate and store a verification token\n    $verificationToken = bin2hex(random_bytes(32));\n    $query = \"UPDATE users SET verified_at = NOW(), verification_token = ? WHERE id = LAST_INSERT_ID()\";\n    $stmt = $mysqli->prepare($query);\n    $stmt->bind_param(\"s\", $verificationToken);\n    $stmt->execute();\n\n    return [\n        'id' => $mysqli->insert_id,\n        'username' => $username,\n        'email' => $email,\n        'verificationToken' => $verificationToken\n    ];\n}\n\n// Example usage:\n$mysqli = new mysqli('localhost', 'username', 'password', 'database');\n\ntry {\n    $result = registerUser('exampleuser', 'example@example.com', 'password123');\n    echo \"Registration successful! Verification token: \" . $result['verificationToken'] . \"\\n\";\n} catch (Exception $e) {\n    echo \"Error: \" . $e->getMessage() . \"\\n\";\n}\n\n$mysqli->close();\n```\n\n### Email Verification\n\nTo send a verification email to the user, you can use a PHPMailer library like this:\n\n```php\nuse PHPMailer\\PHPMailer\\PHPMailer;\n\n// ...\n\n$mail = new PHPMailer(true);\n$mail->isSMTP();\n\n$mail->setFrom('no-reply@example.com', 'Example');\n$mail->addAddress($email);\n\n$mail->Subject = \"Verify your account\";\n$mail->Body = \"Click here to verify your email: <a href='http://example.com/verify?token=\" . $verificationToken . \"'>Verify Email</a>\";\n\n$mail->send();\n```\n\n### Security Considerations\n\n*   Always use prepared statements and parameterized queries to prevent SQL injection.\n*   Use a secure password hashing algorithm like `PASSWORD_DEFAULT` (PHP 7.0+) or `password_hash()` with a sufficient cost factor (`cost`).\n*   Validate user input on the server-side, especially for sensitive fields like passwords.\n*   Implement email verification to ensure users are aware of their account creation and can set up security measures accordingly.\n\nRemember to update your database schema and PHP code according to your specific requirements. This example serves as a basic starting point, and you should adapt it to fit your needs.", "code_blocks": [null, "```php\nfunction registerUser($username, $email, $password, &$mysqli)\n{\n    // Input validation\n    if (empty($username) || empty($email) || empty($password)) {\n        throw new Exception(\"All fields are required.\");\n    }\n\n    // Check for duplicate usernames and emails\n    $query = \"SELECT * FROM users WHERE username = ? OR email = ?\";\n    $stmt = $mysqli->prepare($query);\n    $stmt->bind_param(\"ss\", $username, $email);\n    $stmt->execute();\n    $result = $stmt->get_result();\n\n    if ($result->num_rows > 0) {\n        throw new Exception(\"Username or Email already exists.\");\n    }\n\n    // Password hashing\n    $passwordHash = password_hash($password, PASSWORD_DEFAULT);\n\n    // Insert user into database\n    $query = \"INSERT INTO users (username, email, password_hash) VALUES (?, ?, ?)\";\n    $stmt = $mysqli->prepare($query);\n    $stmt->bind_param(\"sss\", $username, $email, $passwordHash);\n    $stmt->execute();\n\n    // Generate and store a verification token\n    $verificationToken = bin2hex(random_bytes(32));\n    $query = \"UPDATE users SET verified_at = NOW(), verification_token = ? WHERE id = LAST_INSERT_ID()\";\n    $stmt = $mysqli->prepare($query);\n    $stmt->bind_param(\"s\", $verificationToken);\n    $stmt->execute();\n\n    return [\n        'id' => $mysqli->insert_id,\n        'username' => $username,\n        'email' => $email,\n        'verificationToken' => $verificationToken\n    ];\n}\n\n// Example usage:\n$mysqli = new mysqli('localhost', 'username', 'password', 'database');\n\ntry {\n    $result = registerUser('exampleuser', 'example@example.com', 'password123');\n    echo \"Registration successful! Verification token: \" . $result['verificationToken'] . \"\\n\";\n} catch (Exception $e) {\n    echo \"Error: \" . $e->getMessage() . \"\\n\";\n}\n\n$mysqli->close();\n```", "```php\nuse PHPMailer\\PHPMailer\\PHPMailer;\n\n// ...\n\n$mail = new PHPMailer(true);\n$mail->isSMTP();\n\n$mail->setFrom('no-reply@example.com', 'Example');\n$mail->addAddress($email);\n\n$mail->Subject = \"Verify your account\";\n$mail->Body = \"Click here to verify your email: <a href='http://example.com/verify?token=\" . $verificationToken . \"'>Verify Email</a>\";\n\n$mail->send();\n```"]}
