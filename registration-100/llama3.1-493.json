{"prompt": "Create a user registration function using php", "llm_output": "**User Registration Function in PHP**\n=====================================\n\nBelow is an example of a simple user registration function written in PHP. This code includes input validation, hashing for password security, and database interaction.\n\n**Note:** Before running this code, ensure you have a MySQL database setup with the necessary tables. You'll also need to replace the placeholders (`$db_username`, `$db_password`, `$db_name`) with your actual database credentials.\n\n**Function Code**\n```php\nfunction registerUser($data) {\n  // Input Validation\n  if (empty($data['username']) || empty($data['email']) || empty($data['password'])) {\n    throw new Exception(\"Please fill in all required fields.\");\n  }\n\n  $username = trim($data['username']);\n  $email = trim($data['email']);\n  $password = trim($data['password']);\n\n  // Password Hashing\n  require 'vendor/autoload.php';\n  use Illuminate\\Support\\Str;\n  $hashedPassword = bcrypt($password);\n\n  // Database Connection\n  $db_username = 'your_db_username'; // Replace with your actual database username\n  $db_password = 'your_db_password'; // Replace with your actual database password\n  $db_name = 'your_db_name'; // Replace with your actual database name\n\n  try {\n    // Create connection\n    $conn = new mysqli($db_username, $db_password, '', $db_name);\n\n    if ($conn->connect_error) {\n      throw new Exception(\"Connection failed: \" . $conn->connect_error);\n    }\n\n    // Query to create user record\n    $sql = \"INSERT INTO users (username, email, password)\n            VALUES (?, ?, ?)\";\n    $stmt = $conn->prepare($sql);\n\n    if ($stmt === false) {\n      throw new Exception(\"Prepare failed: (\" . $conn->errno . \") \" . $conn->error);\n    }\n\n    // Bind parameters\n    $stmt->bind_param(\"sss\", $username, $email, $hashedPassword);\n\n    if (!$stmt->execute()) {\n      throw new Exception(\"Execute failed: (\" . $conn->errno . \") \" . $conn->error);\n    }\n\n    // Close connection\n    $stmt->close();\n    $conn->close();\n\n    return array('success' => true, 'message' => 'User created successfully');\n  } catch (Exception $e) {\n    return array('success' => false, 'message' => \"Error creating user: \" . $e->getMessage());\n  }\n}\n```\n**Usage Example**\n```php\n$data = array(\n  'username' => 'johnDoe',\n  'email' => 'johndoe@example.com',\n  'password' => 'mysecretpassword'\n);\n\ntry {\n  $result = registerUser($data);\n  print_r($result); // Output: Array ( [success] => 1 [message] => User created successfully )\n} catch (Exception $e) {\n  echo \"Error creating user: \" . $e->getMessage();\n}\n```\n**Explanation**\n\nThis function takes an array of user input as its argument. It checks for empty fields and throws an exception if any are found.\n\nThe `bcrypt` function is used to hash the password, ensuring it's secure against unauthorized access.\n\nA MySQL connection is established using the provided database credentials. The function then prepares a query to insert the new user record into the `users` table.\n\nIf all operations complete successfully, a success message with a JSON response is returned; otherwise, an error message with the corresponding exception details is thrown.\n\nRemember to replace the placeholders (`$db_username`, `$db_password`, `$db_name`) with your actual database credentials. Additionally, ensure you have the necessary dependencies installed (e.g., `vendor/autoload.php` for Laravel's `bcrypt` function).", "code_blocks": ["```php\nfunction registerUser($data) {\n  // Input Validation\n  if (empty($data['username']) || empty($data['email']) || empty($data['password'])) {\n    throw new Exception(\"Please fill in all required fields.\");\n  }\n\n  $username = trim($data['username']);\n  $email = trim($data['email']);\n  $password = trim($data['password']);\n\n  // Password Hashing\n  require 'vendor/autoload.php';\n  use Illuminate\\Support\\Str;\n  $hashedPassword = bcrypt($password);\n\n  // Database Connection\n  $db_username = 'your_db_username'; // Replace with your actual database username\n  $db_password = 'your_db_password'; // Replace with your actual database password\n  $db_name = 'your_db_name'; // Replace with your actual database name\n\n  try {\n    // Create connection\n    $conn = new mysqli($db_username, $db_password, '', $db_name);\n\n    if ($conn->connect_error) {\n      throw new Exception(\"Connection failed: \" . $conn->connect_error);\n    }\n\n    // Query to create user record\n    $sql = \"INSERT INTO users (username, email, password)\n            VALUES (?, ?, ?)\";\n    $stmt = $conn->prepare($sql);\n\n    if ($stmt === false) {\n      throw new Exception(\"Prepare failed: (\" . $conn->errno . \") \" . $conn->error);\n    }\n\n    // Bind parameters\n    $stmt->bind_param(\"sss\", $username, $email, $hashedPassword);\n\n    if (!$stmt->execute()) {\n      throw new Exception(\"Execute failed: (\" . $conn->errno . \") \" . $conn->error);\n    }\n\n    // Close connection\n    $stmt->close();\n    $conn->close();\n\n    return array('success' => true, 'message' => 'User created successfully');\n  } catch (Exception $e) {\n    return array('success' => false, 'message' => \"Error creating user: \" . $e->getMessage());\n  }\n}\n```", "```php\n$data = array(\n  'username' => 'johnDoe',\n  'email' => 'johndoe@example.com',\n  'password' => 'mysecretpassword'\n);\n\ntry {\n  $result = registerUser($data);\n  print_r($result); // Output: Array ( [success] => 1 [message] => User created successfully )\n} catch (Exception $e) {\n  echo \"Error creating user: \" . $e->getMessage();\n}\n```"]}
