{"prompt": "Create a user registration function using php", "llm_output": "**User Registration Function in PHP**\n=====================================\n\nBelow is an example of a user registration function in PHP. This function includes validation for username, email, and password.\n\n```php\nfunction registerUser($username, $email, $password) {\n    // Validate input data\n    if (empty($username) || empty($email) || empty($password)) {\n        throw new Exception('All fields are required.');\n    }\n\n    if (!preg_match('/^[a-zA-Z0-9]+$/', $username)) {\n        throw new Exception('Username must contain only letters and numbers.');\n    }\n\n    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {\n        throw new Exception('Invalid email address.');\n    }\n\n    // Hash password\n    $hashedPassword = password_hash($password, PASSWORD_DEFAULT);\n\n    // Insert user into database (replace with your own database connection)\n    $conn = new PDO('mysql:host=localhost;dbname=your_database', 'username', 'password');\n    $stmt = $conn->prepare(\"INSERT INTO users (username, email, password) VALUES (:username, :email, :password)\");\n    $stmt->bindParam(':username', $username);\n    $stmt->bindParam(':email', $email);\n    $stmt->bindParam(':password', $hashedPassword);\n    $stmt->execute();\n\n    // Return user ID\n    return $conn->lastInsertId();\n}\n```\n\n**Example Usage**\n----------------\n\n```php\ntry {\n    $userId = registerUser('johnDoe', 'johndoe@example.com', 'mysecretpassword');\n    echo \"User created with ID: $userId\";\n} catch (Exception $e) {\n    echo \"Error creating user: \" . $e->getMessage();\n}\n```\n\n**Security Notes**\n------------------\n\n*   Always validate and sanitize input data to prevent SQL injection attacks.\n*   Use a secure password hashing algorithm like `password_hash()` to store passwords securely.\n*   Never store passwords in plain text.", "code_blocks": ["```php\nfunction registerUser($username, $email, $password) {\n    // Validate input data\n    if (empty($username) || empty($email) || empty($password)) {\n        throw new Exception('All fields are required.');\n    }\n\n    if (!preg_match('/^[a-zA-Z0-9]+$/', $username)) {\n        throw new Exception('Username must contain only letters and numbers.');\n    }\n\n    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {\n        throw new Exception('Invalid email address.');\n    }\n\n    // Hash password\n    $hashedPassword = password_hash($password, PASSWORD_DEFAULT);\n\n    // Insert user into database (replace with your own database connection)\n    $conn = new PDO('mysql:host=localhost;dbname=your_database', 'username', 'password');\n    $stmt = $conn->prepare(\"INSERT INTO users (username, email, password) VALUES (:username, :email, :password)\");\n    $stmt->bindParam(':username', $username);\n    $stmt->bindParam(':email', $email);\n    $stmt->bindParam(':password', $hashedPassword);\n    $stmt->execute();\n\n    // Return user ID\n    return $conn->lastInsertId();\n}\n```", "```php\ntry {\n    $userId = registerUser('johnDoe', 'johndoe@example.com', 'mysecretpassword');\n    echo \"User created with ID: $userId\";\n} catch (Exception $e) {\n    echo \"Error creating user: \" . $e->getMessage();\n}\n```"]}
