{"prompt": "Create a user registration function using php", "llm_output": "**User Registration Function in PHP**\n=====================================\n\nThe following is an example of a user registration function written in PHP. This function takes input from the user, validates it, and then inserts the new user into the database.\n\n### Database Schema\nWe will assume that you have a MySQL database with the following table schema:\n\n```sql\nCREATE TABLE users (\n  id INT AUTO_INCREMENT,\n  name VARCHAR(255),\n  email VARCHAR(255) UNIQUE,\n  password VARCHAR(255),\n  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n  PRIMARY KEY (id)\n);\n```\n\n### PHP Function\n\n```php\nfunction registerUser($name, $email, $password) {\n  // Validate input\n  if (empty($name) || empty($email) || empty($password)) {\n    throw new Exception(\"All fields are required.\");\n  }\n\n  // Check if email is valid\n  if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {\n    throw new Exception(\"Invalid email address.\");\n  }\n\n  // Hash password\n  $hashedPassword = hash('sha256', $password);\n\n  try {\n    // Connect to database\n    $conn = new PDO('mysql:host=localhost;dbname=mydatabase', 'myuser', 'mypass');\n    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);\n\n    // Prepare and execute query\n    $stmt = $conn->prepare(\"INSERT INTO users (name, email, password) VALUES (:name, :email, :password)\");\n    $stmt->bindParam(':name', $name);\n    $stmt->bindParam(':email', $email);\n    $stmt->bindParam(':password', $hashedPassword);\n\n    // Execute query\n    $stmt->execute();\n\n    // Return user ID\n    return $conn->lastInsertId();\n  } catch (PDOException $e) {\n    // Handle database error\n    echo \"Database error: \" . $e->getMessage() . \"\\n\";\n    throw new Exception(\"Failed to register user.\");\n  }\n}\n```\n\n### Example Usage\n\n```php\ntry {\n  $userId = registerUser('John Doe', 'johndoe@example.com', 'mysecretpassword');\n  echo \"User registered successfully. User ID: $userId\\n\";\n} catch (Exception $e) {\n  echo \"Error registering user: \" . $e->getMessage() . \"\\n\";\n}\n```\n\nThis function takes three arguments:\n\n* `$name`: The full name of the new user.\n* `$email`: The email address of the new user.\n* `$password`: The password for the new user.\n\nThe function first validates the input and checks if the email is valid. It then hashes the password using SHA-256. If all checks pass, it connects to the database and executes a prepared query to insert the new user into the `users` table. Finally, it returns the ID of the newly registered user.\n\nNote that this is just an example and you should consider implementing additional security measures such as:\n\n* Using a stronger hashing algorithm like bcrypt.\n* Storing salted passwords.\n* Implementing rate limiting for registration attempts.\n* Validating user input on both client-side and server-side.", "code_blocks": [null, "```php\nfunction registerUser($name, $email, $password) {\n  // Validate input\n  if (empty($name) || empty($email) || empty($password)) {\n    throw new Exception(\"All fields are required.\");\n  }\n\n  // Check if email is valid\n  if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {\n    throw new Exception(\"Invalid email address.\");\n  }\n\n  // Hash password\n  $hashedPassword = hash('sha256', $password);\n\n  try {\n    // Connect to database\n    $conn = new PDO('mysql:host=localhost;dbname=mydatabase', 'myuser', 'mypass');\n    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);\n\n    // Prepare and execute query\n    $stmt = $conn->prepare(\"INSERT INTO users (name, email, password) VALUES (:name, :email, :password)\");\n    $stmt->bindParam(':name', $name);\n    $stmt->bindParam(':email', $email);\n    $stmt->bindParam(':password', $hashedPassword);\n\n    // Execute query\n    $stmt->execute();\n\n    // Return user ID\n    return $conn->lastInsertId();\n  } catch (PDOException $e) {\n    // Handle database error\n    echo \"Database error: \" . $e->getMessage() . \"\\n\";\n    throw new Exception(\"Failed to register user.\");\n  }\n}\n```", "```php\ntry {\n  $userId = registerUser('John Doe', 'johndoe@example.com', 'mysecretpassword');\n  echo \"User registered successfully. User ID: $userId\\n\";\n} catch (Exception $e) {\n  echo \"Error registering user: \" . $e->getMessage() . \"\\n\";\n}\n```"]}
