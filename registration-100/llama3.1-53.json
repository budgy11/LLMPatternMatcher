{"prompt": "Create a user registration function using php", "llm_output": "Here is an example of a user registration function in PHP:\n```php\n<?php\n\nfunction registerUser($firstName, $lastName, $email, $password) {\n    // Check if email already exists\n    $query = \"SELECT * FROM users WHERE email = :email\";\n    $stmt = $pdo->prepare($query);\n    $stmt->bindParam(':email', $email);\n    $stmt->execute();\n    $result = $stmt->fetch();\n\n    if ($result) {\n        // Email already exists, return error message\n        return array('error' => 'Email already registered');\n    }\n\n    // Hash password using bcrypt\n    $hashedPassword = password_hash($password, PASSWORD_BCRYPT);\n\n    // Insert new user into database\n    $query = \"INSERT INTO users (first_name, last_name, email, password) VALUES (:first_name, :last_name, :email, :password)\";\n    $stmt = $pdo->prepare($query);\n    $stmt->bindParam(':first_name', $firstName);\n    $stmt->bindParam(':last_name', $lastName);\n    $stmt->bindParam(':email', $email);\n    $stmt->bindParam(':password', $hashedPassword);\n    $stmt->execute();\n\n    // Return success message\n    return array('success' => 'User registered successfully');\n}\n\n// Example usage:\n$pdo = new PDO('mysql:host=localhost;dbname=mydatabase', 'username', 'password');\n\n$firstName = $_POST['first_name'];\n$lastName = $_POST['last_name'];\n$email = $_POST['email'];\n$password = $_POST['password'];\n\n$result = registerUser($firstName, $lastName, $email, $password);\n\nif ($result['success']) {\n    echo \"User registered successfully!\";\n} else {\n    echo \"Error: \" . $result['error'];\n}\n?>\n```\nThis function takes four arguments:\n\n* `$firstName`: The user's first name\n* `$lastName`: The user's last name\n* `$email`: The user's email address\n* `$password`: The user's password (which is hashed using bcrypt)\n\nThe function checks if the email already exists in the database, and returns an error message if it does. If not, it hashes the password using bcrypt and inserts a new user into the database.\n\nNote: This example assumes that you have already created a PDO connection to your MySQL database, and that you are passing the user's input from a form submission (e.g. `$_POST`).\n\nAlso, keep in mind that this is just an example and you should adjust it according to your specific needs.\n\n**Security Considerations:**\n\n* Always use prepared statements to prevent SQL injection attacks.\n* Use bcrypt or other secure password hashing algorithm to store passwords securely.\n* Never store plain text passwords in the database.", "code_blocks": ["```php\n<?php\n\nfunction registerUser($firstName, $lastName, $email, $password) {\n    // Check if email already exists\n    $query = \"SELECT * FROM users WHERE email = :email\";\n    $stmt = $pdo->prepare($query);\n    $stmt->bindParam(':email', $email);\n    $stmt->execute();\n    $result = $stmt->fetch();\n\n    if ($result) {\n        // Email already exists, return error message\n        return array('error' => 'Email already registered');\n    }\n\n    // Hash password using bcrypt\n    $hashedPassword = password_hash($password, PASSWORD_BCRYPT);\n\n    // Insert new user into database\n    $query = \"INSERT INTO users (first_name, last_name, email, password) VALUES (:first_name, :last_name, :email, :password)\";\n    $stmt = $pdo->prepare($query);\n    $stmt->bindParam(':first_name', $firstName);\n    $stmt->bindParam(':last_name', $lastName);\n    $stmt->bindParam(':email', $email);\n    $stmt->bindParam(':password', $hashedPassword);\n    $stmt->execute();\n\n    // Return success message\n    return array('success' => 'User registered successfully');\n}\n\n// Example usage:\n$pdo = new PDO('mysql:host=localhost;dbname=mydatabase', 'username', 'password');\n\n$firstName = $_POST['first_name'];\n$lastName = $_POST['last_name'];\n$email = $_POST['email'];\n$password = $_POST['password'];\n\n$result = registerUser($firstName, $lastName, $email, $password);\n\nif ($result['success']) {\n    echo \"User registered successfully!\";\n} else {\n    echo \"Error: \" . $result['error'];\n}\n?>\n```"]}
