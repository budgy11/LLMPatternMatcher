{"prompt": "Create a user registration function using php", "llm_output": "**User Registration Function in PHP**\n=====================================\n\nThis example demonstrates a basic user registration function using PHP. The function will validate the input data, hash and store the password, and return an array with user information.\n\n### Code\n```php\n<?php\n\n// Configuration\n$mysqli = new mysqli(\"localhost\", \"username\", \"password\", \"database\");\n\nfunction registerUser($data) {\n  // Validate input data\n  if (!isset($data['name']) || !isset($data['email']) || !isset($data['password'])) {\n    return array('error' => 'Missing required fields');\n  }\n\n  $name = filter_var($data['name'], FILTER_SANITIZE_STRING);\n  $email = filter_var($data['email'], FILTER_VALIDATE_EMAIL);\n\n  // Check if email already exists\n  $query = \"SELECT * FROM users WHERE email='$email'\";\n  $result = mysqli_query($mysqli, $query);\n\n  if (mysqli_num_rows($result) > 0) {\n    return array('error' => 'Email address already in use');\n  }\n\n  // Hash password\n  $passwordHash = password_hash($data['password'], PASSWORD_DEFAULT);\n\n  // Insert user into database\n  $insertQuery = \"INSERT INTO users (name, email, password) VALUES ('$name', '$email', '$passwordHash')\";\n  mysqli_query($mysqli, $insertQuery);\n\n  return array('success' => true, 'user_id' => mysqli_insert_id($mysqli));\n}\n\n?>\n```\n### Explanation\n\n*   The function takes an associative array `$data` as input containing the user's name, email address, and password.\n*   It validates the input data by checking if all required fields are set.\n*   If the email already exists in the database, it returns an error message.\n*   The password is hashed using `password_hash()` function before being stored in the database.\n*   Finally, it inserts a new user into the database and returns an array with the user's ID.\n\n### Example Usage\n\n```php\n$data = array(\n  'name' => 'John Doe',\n  'email' => 'john@example.com',\n  'password' => 'password123'\n);\n\n$result = registerUser($data);\n\nif ($result['success']) {\n  echo \"User registered successfully! User ID: {$result['user_id']}\";\n} else {\n  echo \"Error: {$result['error']}\";\n}\n```\n### Security Considerations\n\n*   Always use prepared statements to prevent SQL injection attacks.\n*   Use a secure password hashing algorithm like `password_hash()` to store passwords securely.\n\nThis is a basic example and should not be used in production without proper security measures.", "code_blocks": ["```php\n<?php\n\n// Configuration\n$mysqli = new mysqli(\"localhost\", \"username\", \"password\", \"database\");\n\nfunction registerUser($data) {\n  // Validate input data\n  if (!isset($data['name']) || !isset($data['email']) || !isset($data['password'])) {\n    return array('error' => 'Missing required fields');\n  }\n\n  $name = filter_var($data['name'], FILTER_SANITIZE_STRING);\n  $email = filter_var($data['email'], FILTER_VALIDATE_EMAIL);\n\n  // Check if email already exists\n  $query = \"SELECT * FROM users WHERE email='$email'\";\n  $result = mysqli_query($mysqli, $query);\n\n  if (mysqli_num_rows($result) > 0) {\n    return array('error' => 'Email address already in use');\n  }\n\n  // Hash password\n  $passwordHash = password_hash($data['password'], PASSWORD_DEFAULT);\n\n  // Insert user into database\n  $insertQuery = \"INSERT INTO users (name, email, password) VALUES ('$name', '$email', '$passwordHash')\";\n  mysqli_query($mysqli, $insertQuery);\n\n  return array('success' => true, 'user_id' => mysqli_insert_id($mysqli));\n}\n\n?>\n```", "```php\n$data = array(\n  'name' => 'John Doe',\n  'email' => 'john@example.com',\n  'password' => 'password123'\n);\n\n$result = registerUser($data);\n\nif ($result['success']) {\n  echo \"User registered successfully! User ID: {$result['user_id']}\";\n} else {\n  echo \"Error: {$result['error']}\";\n}\n```"]}
