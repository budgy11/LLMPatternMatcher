{"prompt": "Create a user registration function using php", "llm_output": "**User Registration Function in PHP**\n=====================================\n\nThis is an example of a simple user registration function in PHP. This code includes input validation, password hashing, and error handling.\n\n### Code\n```php\n<?php\n\nfunction registerUser($username, $email, $password) {\n  // Check for invalid or empty inputs\n  if (empty($username) || empty($email) || empty($password)) {\n    throw new Exception('All fields are required');\n  }\n\n  // Validate email address\n  if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {\n    throw new Exception('Invalid email address');\n  }\n\n  // Hash password using Bcrypt\n  $hashedPassword = password_hash($password, PASSWORD_BCRYPT);\n\n  // Connect to database (for example, MySQL)\n  $mysqli = new mysqli('localhost', 'username', 'password', 'database');\n\n  // Prepare and execute INSERT query\n  if (!$mysqli->prepare(\"INSERT INTO users (username, email, password) VALUES (?, ?, ?)\")) {\n    throw new Exception($mysqli->error);\n  }\n\n  $stmt = $mysqli->prepare(\"INSERT INTO users (username, email, password) VALUES (?, ?, ?)\");\n  $stmt->bind_param('sss', $username, $email, $hashedPassword);\n\n  if (!$stmt->execute()) {\n    throw new Exception($mysqli->error);\n  }\n\n  // Close database connection\n  $mysqli->close();\n\n  return true;\n}\n\n?>\n```\n\n### Example Usage\n\n```php\ntry {\n  registerUser($_POST['username'], $_POST['email'], $_POST['password']);\n  echo 'User created successfully!';\n} catch (Exception $e) {\n  echo 'Error: ' . $e->getMessage();\n}\n```\n\nNote:\n\n* This code assumes a MySQL database with the `users` table having columns for username, email, and password.\n* The `registerUser()` function should be called after validating user input on your frontend to prevent SQL injection attacks.", "code_blocks": ["```php\n<?php\n\nfunction registerUser($username, $email, $password) {\n  // Check for invalid or empty inputs\n  if (empty($username) || empty($email) || empty($password)) {\n    throw new Exception('All fields are required');\n  }\n\n  // Validate email address\n  if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {\n    throw new Exception('Invalid email address');\n  }\n\n  // Hash password using Bcrypt\n  $hashedPassword = password_hash($password, PASSWORD_BCRYPT);\n\n  // Connect to database (for example, MySQL)\n  $mysqli = new mysqli('localhost', 'username', 'password', 'database');\n\n  // Prepare and execute INSERT query\n  if (!$mysqli->prepare(\"INSERT INTO users (username, email, password) VALUES (?, ?, ?)\")) {\n    throw new Exception($mysqli->error);\n  }\n\n  $stmt = $mysqli->prepare(\"INSERT INTO users (username, email, password) VALUES (?, ?, ?)\");\n  $stmt->bind_param('sss', $username, $email, $hashedPassword);\n\n  if (!$stmt->execute()) {\n    throw new Exception($mysqli->error);\n  }\n\n  // Close database connection\n  $mysqli->close();\n\n  return true;\n}\n\n?>\n```", "```php\ntry {\n  registerUser($_POST['username'], $_POST['email'], $_POST['password']);\n  echo 'User created successfully!';\n} catch (Exception $e) {\n  echo 'Error: ' . $e->getMessage();\n}\n```"]}
