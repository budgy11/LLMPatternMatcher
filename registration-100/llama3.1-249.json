{"prompt": "Create a user registration function using php", "llm_output": "Here is an example of a basic user registration function in PHP:\n```php\n<?php\n\n// Define the database connection settings\n$host = 'localhost';\n$dbname = 'your_database_name';\n$username = 'your_username';\n$password = 'your_password';\n\n// Connect to the database\n$conn = new PDO(\"mysql:host=$host;dbname=$dbname\", $username, $password);\n\n// Function to register a user\nfunction registerUser($data) {\n    // Extract the input data from the array\n    $name = $data['name'];\n    $email = $data['email'];\n    $password = password_hash($data['password'], PASSWORD_DEFAULT);\n    $confirmPassword = $data['confirm_password'];\n\n    // Validate the input data\n    if (empty($name) || empty($email) || empty($password) || empty($confirmPassword)) {\n        return array('error' => 'Please fill in all fields');\n    }\n\n    if ($password !== $confirmPassword) {\n        return array('error' => 'Passwords do not match');\n    }\n\n    // Prepare the query to insert the new user\n    $stmt = $conn->prepare(\"INSERT INTO users (name, email, password) VALUES (:name, :email, :password)\");\n    $stmt->bindParam(':name', $name);\n    $stmt->bindParam(':email', $email);\n    $stmt->bindParam(':password', $password);\n\n    // Execute the query\n    try {\n        $stmt->execute();\n        return array('success' => 'User registered successfully');\n    } catch (PDOException $e) {\n        return array('error' => 'Error registering user: ' . $e->getMessage());\n    }\n}\n\n// Example usage:\n$data = array(\n    'name' => 'John Doe',\n    'email' => 'john@example.com',\n    'password' => 'mysecretpassword',\n    'confirm_password' => 'mysecretpassword'\n);\n\n$result = registerUser($data);\nprint_r($result);\n\n?>\n```\nThis code defines a `registerUser` function that takes an array of input data as an argument. It validates the input data, hashes the password using PHP's built-in `password_hash` function, and then prepares and executes an SQL query to insert the new user into the database.\n\nThe example usage at the end shows how to call the `registerUser` function with a sample input array, and prints out the result.\n\nNote that this is just a basic example, and you should consider adding additional validation and error handling in your production code. Additionally, make sure to replace the placeholders (`$host`, `$dbname`, etc.) with your actual database connection settings.", "code_blocks": ["```php\n<?php\n\n// Define the database connection settings\n$host = 'localhost';\n$dbname = 'your_database_name';\n$username = 'your_username';\n$password = 'your_password';\n\n// Connect to the database\n$conn = new PDO(\"mysql:host=$host;dbname=$dbname\", $username, $password);\n\n// Function to register a user\nfunction registerUser($data) {\n    // Extract the input data from the array\n    $name = $data['name'];\n    $email = $data['email'];\n    $password = password_hash($data['password'], PASSWORD_DEFAULT);\n    $confirmPassword = $data['confirm_password'];\n\n    // Validate the input data\n    if (empty($name) || empty($email) || empty($password) || empty($confirmPassword)) {\n        return array('error' => 'Please fill in all fields');\n    }\n\n    if ($password !== $confirmPassword) {\n        return array('error' => 'Passwords do not match');\n    }\n\n    // Prepare the query to insert the new user\n    $stmt = $conn->prepare(\"INSERT INTO users (name, email, password) VALUES (:name, :email, :password)\");\n    $stmt->bindParam(':name', $name);\n    $stmt->bindParam(':email', $email);\n    $stmt->bindParam(':password', $password);\n\n    // Execute the query\n    try {\n        $stmt->execute();\n        return array('success' => 'User registered successfully');\n    } catch (PDOException $e) {\n        return array('error' => 'Error registering user: ' . $e->getMessage());\n    }\n}\n\n// Example usage:\n$data = array(\n    'name' => 'John Doe',\n    'email' => 'john@example.com',\n    'password' => 'mysecretpassword',\n    'confirm_password' => 'mysecretpassword'\n);\n\n$result = registerUser($data);\nprint_r($result);\n\n?>\n```"]}
