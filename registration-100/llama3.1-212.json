{"prompt": "Create a user registration function using php", "llm_output": "**User Registration Function in PHP**\n=====================================\n\nBelow is an example of a user registration function written in PHP. This function will handle the creation of new users, including validating form data and securely storing it in a database.\n\n### Configuration and Dependencies\n\n*   Install a PHP framework such as Laravel or CodeIgniter if you're not already using one.\n*   Set up a MySQL/MariaDB or PostgreSQL database for user storage.\n*   Create a table named `users` with columns:\n    *   `id`: The primary key (auto-incrementing integer)\n    *   `username`\n    *   `email`\n    *   `password_hash`: Storing hashed passwords\n    *   `created_at`, `updated_at`: Timestamps for when the user was created or last updated\n\n### PHP Code\n\n```php\n<?php\n\n// Load dependencies and database connection\nrequire_once __DIR__ . '/config.php';\nrequire_once __DIR__ . '/database.php';\n\nfunction createUser($data) {\n    // Validate form data (adapt this to your specific validation needs)\n    if (!isset($data['username']) || !isset($data['email']) || !isset($data['password'])) {\n        throw new Exception(\"Invalid request: Missing required fields\");\n    }\n\n    $hashedPassword = password_hash($data['password'], PASSWORD_DEFAULT);\n\n    // Prepare SQL query to insert user into database\n    $sql = \"INSERT INTO users (username, email, password_hash) VALUES (:username, :email, :password)\";\n\n    try {\n        // Execute query with prepared statement\n        $stmt = $pdo->prepare($sql);\n        $stmt->execute([\n            ':username' => $data['username'],\n            ':email' => $data['email'],\n            ':password' => $hashedPassword,\n        ]);\n\n        return true;\n    } catch (PDOException $e) {\n        echo \"Error creating user: \" . $e->getMessage();\n        return false;\n    }\n}\n\n// Example usage:\n$userData = [\n    'username' => 'johnDoe',\n    'email' => 'johndoe@example.com',\n    'password' => 'password123', // Store securely, never hard-code passwords\n];\n\nif (createUser($userData)) {\n    echo \"User created successfully!\";\n} else {\n    echo \"Failed to create user.\";\n}\n\n?>\n```\n\n### Advice\n\n*   Always store passwords securely using a library like `password_hash` and never hard-code them.\n*   Implement proper input validation, such as checking for valid email addresses or username formats.\n*   In a real-world application, consider using an authentication framework to handle user registration and login logic.\n\nThis is a basic example. Be sure to adapt it to your specific use case and security requirements.", "code_blocks": ["```php\n<?php\n\n// Load dependencies and database connection\nrequire_once __DIR__ . '/config.php';\nrequire_once __DIR__ . '/database.php';\n\nfunction createUser($data) {\n    // Validate form data (adapt this to your specific validation needs)\n    if (!isset($data['username']) || !isset($data['email']) || !isset($data['password'])) {\n        throw new Exception(\"Invalid request: Missing required fields\");\n    }\n\n    $hashedPassword = password_hash($data['password'], PASSWORD_DEFAULT);\n\n    // Prepare SQL query to insert user into database\n    $sql = \"INSERT INTO users (username, email, password_hash) VALUES (:username, :email, :password)\";\n\n    try {\n        // Execute query with prepared statement\n        $stmt = $pdo->prepare($sql);\n        $stmt->execute([\n            ':username' => $data['username'],\n            ':email' => $data['email'],\n            ':password' => $hashedPassword,\n        ]);\n\n        return true;\n    } catch (PDOException $e) {\n        echo \"Error creating user: \" . $e->getMessage();\n        return false;\n    }\n}\n\n// Example usage:\n$userData = [\n    'username' => 'johnDoe',\n    'email' => 'johndoe@example.com',\n    'password' => 'password123', // Store securely, never hard-code passwords\n];\n\nif (createUser($userData)) {\n    echo \"User created successfully!\";\n} else {\n    echo \"Failed to create user.\";\n}\n\n?>\n```"]}
