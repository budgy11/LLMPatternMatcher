{"prompt": "Create a user registration function using php", "llm_output": "**User Registration Function in PHP**\n=====================================\n\nBelow is an example of a simple user registration function in PHP. This function will validate the input data, hash the password, and store the user's information in a database.\n\n### Requirements\n\n*   PHP 7.2 or higher\n*   MySQLi extension installed\n*   Database (e.g., MySQL) set up to store user information\n\n### Code\n```php\n<?php\n\n// Configuration settings\ndefine('DB_HOST', 'your_host');\ndefine('DB_USER', 'your_username');\ndefine('DB_PASSWORD', 'your_password');\ndefine('DB_NAME', 'your_database');\n\n// Connect to the database\nfunction connect_to_db() {\n    $mysqli = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);\n    if ($mysqli->connect_error) {\n        die(\"Connection failed: \" . $mysqli->connect_error);\n    }\n    return $mysqli;\n}\n\n// Close the database connection\nfunction close_db_connection($conn) {\n    $conn->close();\n}\n\n// Function to register a new user\nfunction register_user($username, $email, $password) {\n    // Validate input data\n    if (empty($username) || empty($email) || empty($password)) {\n        return array('error' => 'All fields are required.');\n    }\n\n    // Check if username is unique\n    $mysqli = connect_to_db();\n    $query = \"SELECT * FROM users WHERE username = '$username'\";\n    $result = $mysqli->query($query);\n    if ($result->num_rows > 0) {\n        close_db_connection($mysqli);\n        return array('error' => 'Username already exists.');\n    }\n\n    // Hash the password\n    $hashed_password = password_hash($password, PASSWORD_DEFAULT);\n\n    // Insert user data into database\n    $query = \"INSERT INTO users (username, email, password) VALUES ('$username', '$email', '$hashed_password')\";\n    if (!$mysqli->query($query)) {\n        close_db_connection($mysqli);\n        return array('error' => 'Failed to register user.');\n    }\n\n    // Get the newly created user's ID\n    $user_id = $mysqli->insert_id;\n\n    close_db_connection($mysqli);\n\n    return array('success' => true, 'user_id' => $user_id);\n}\n\n// Example usage:\n$username = 'john_doe';\n$email = 'johndoe@example.com';\n$password = 'mysecretpassword';\n\n$result = register_user($username, $email, $password);\n\nif ($result['error']) {\n    echo \"Error: \" . $result['error'];\n} else {\n    echo \"User created successfully. User ID: \" . $result['user_id'];\n}\n```\n### Notes\n\n*   This code uses the `mysqli` extension for database interactions.\n*   The function `connect_to_db()` establishes a connection to the database, and `close_db_connection()` closes the connection when finished.\n*   The `register_user()` function checks if the input data is valid, hashes the password using `password_hash()`, and inserts the user's information into the database.\n*   The example usage demonstrates how to call the `register_user()` function with a new username, email, and password.\n\n**Commit Message Guidelines**\n\n*   Use a clear and concise commit message describing the changes made.\n*   Follow the conventional commit message format: `<type>(<scope>): <subject>`\n\nExample:\n```markdown\nfeat(user-registration): Added user registration functionality\n\nThis commit adds the `register_user()` function to handle new user registrations.\n```", "code_blocks": ["```php\n<?php\n\n// Configuration settings\ndefine('DB_HOST', 'your_host');\ndefine('DB_USER', 'your_username');\ndefine('DB_PASSWORD', 'your_password');\ndefine('DB_NAME', 'your_database');\n\n// Connect to the database\nfunction connect_to_db() {\n    $mysqli = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);\n    if ($mysqli->connect_error) {\n        die(\"Connection failed: \" . $mysqli->connect_error);\n    }\n    return $mysqli;\n}\n\n// Close the database connection\nfunction close_db_connection($conn) {\n    $conn->close();\n}\n\n// Function to register a new user\nfunction register_user($username, $email, $password) {\n    // Validate input data\n    if (empty($username) || empty($email) || empty($password)) {\n        return array('error' => 'All fields are required.');\n    }\n\n    // Check if username is unique\n    $mysqli = connect_to_db();\n    $query = \"SELECT * FROM users WHERE username = '$username'\";\n    $result = $mysqli->query($query);\n    if ($result->num_rows > 0) {\n        close_db_connection($mysqli);\n        return array('error' => 'Username already exists.');\n    }\n\n    // Hash the password\n    $hashed_password = password_hash($password, PASSWORD_DEFAULT);\n\n    // Insert user data into database\n    $query = \"INSERT INTO users (username, email, password) VALUES ('$username', '$email', '$hashed_password')\";\n    if (!$mysqli->query($query)) {\n        close_db_connection($mysqli);\n        return array('error' => 'Failed to register user.');\n    }\n\n    // Get the newly created user's ID\n    $user_id = $mysqli->insert_id;\n\n    close_db_connection($mysqli);\n\n    return array('success' => true, 'user_id' => $user_id);\n}\n\n// Example usage:\n$username = 'john_doe';\n$email = 'johndoe@example.com';\n$password = 'mysecretpassword';\n\n$result = register_user($username, $email, $password);\n\nif ($result['error']) {\n    echo \"Error: \" . $result['error'];\n} else {\n    echo \"User created successfully. User ID: \" . $result['user_id'];\n}\n```", null]}
