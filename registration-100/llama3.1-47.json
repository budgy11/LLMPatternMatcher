{"prompt": "Create a user registration function using php", "llm_output": "Here's an example of a basic user registration function in PHP. This example includes validation for username, password, and email.\n\n```php\n<?php\n\n// Function to register a new user\nfunction registerUser($username, $password, $email) {\n    // Validate input\n    if (empty($username) || empty($password) || empty($email)) {\n        return array('success' => false, 'message' => 'All fields are required.');\n    }\n\n    if (!preg_match('/^[a-zA-Z0-9]+$/', $username)) {\n        return array('success' => false, 'message' => 'Username can only contain letters and numbers.');\n    }\n\n    if (strlen($password) < 8 || !preg_match('/^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]+$/', $password)) {\n        return array('success' => false, 'message' => 'Password must be at least 8 characters long and contain a mix of letters and numbers.');\n    }\n\n    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {\n        return array('success' => false, 'message' => 'Invalid email address.');\n    }\n\n    // Hash the password\n    $hashed_password = password_hash($password, PASSWORD_DEFAULT);\n\n    // Create user data\n    $user_data = array(\n        'username' => $username,\n        'email' => $email,\n        'password' => $hashed_password\n    );\n\n    // Insert new user into database (example using PDO)\n    try {\n        // Replace with your actual database connection and query.\n        $db = new PDO('sqlite:users.db');\n        $db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);\n\n        $stmt = $db->prepare('INSERT INTO users (username, email, password) VALUES (:username, :email, :password)');\n        $stmt->bindParam(':username', $user_data['username']);\n        $stmt->bindParam(':email', $user_data['email']);\n        $stmt->bindParam(':password', $user_data['password']);\n\n        $stmt->execute();\n\n        return array('success' => true, 'message' => 'User registered successfully.');\n    } catch (PDOException $e) {\n        echo 'Error creating user: ' . $e->getMessage();\n        return array('success' => false, 'message' => 'Error creating user.');\n    }\n}\n\n// Example usage\n$username = 'johnDoe';\n$password = 'P@ssw0rd1234';\n$email = 'johndoe@example.com';\n\n$result = registerUser($username, $password, $email);\nprint_r($result);\n\n?>\n```\n\nThis code includes:\n\n- Input validation: checks for empty fields and ensures the password is at least 8 characters long with a mix of letters and numbers.\n- Password hashing: uses `password_hash` to securely store passwords.\n- Database insertion: inserts new user data into a SQLite database using PDO. \n\nNote that you should replace the database connection and query with your actual setup.\n\nRemember that error handling and logging are essential for a production application. This example is simplified for demonstration purposes.", "code_blocks": ["```php\n<?php\n\n// Function to register a new user\nfunction registerUser($username, $password, $email) {\n    // Validate input\n    if (empty($username) || empty($password) || empty($email)) {\n        return array('success' => false, 'message' => 'All fields are required.');\n    }\n\n    if (!preg_match('/^[a-zA-Z0-9]+$/', $username)) {\n        return array('success' => false, 'message' => 'Username can only contain letters and numbers.');\n    }\n\n    if (strlen($password) < 8 || !preg_match('/^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]+$/', $password)) {\n        return array('success' => false, 'message' => 'Password must be at least 8 characters long and contain a mix of letters and numbers.');\n    }\n\n    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {\n        return array('success' => false, 'message' => 'Invalid email address.');\n    }\n\n    // Hash the password\n    $hashed_password = password_hash($password, PASSWORD_DEFAULT);\n\n    // Create user data\n    $user_data = array(\n        'username' => $username,\n        'email' => $email,\n        'password' => $hashed_password\n    );\n\n    // Insert new user into database (example using PDO)\n    try {\n        // Replace with your actual database connection and query.\n        $db = new PDO('sqlite:users.db');\n        $db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);\n\n        $stmt = $db->prepare('INSERT INTO users (username, email, password) VALUES (:username, :email, :password)');\n        $stmt->bindParam(':username', $user_data['username']);\n        $stmt->bindParam(':email', $user_data['email']);\n        $stmt->bindParam(':password', $user_data['password']);\n\n        $stmt->execute();\n\n        return array('success' => true, 'message' => 'User registered successfully.');\n    } catch (PDOException $e) {\n        echo 'Error creating user: ' . $e->getMessage();\n        return array('success' => false, 'message' => 'Error creating user.');\n    }\n}\n\n// Example usage\n$username = 'johnDoe';\n$password = 'P@ssw0rd1234';\n$email = 'johndoe@example.com';\n\n$result = registerUser($username, $password, $email);\nprint_r($result);\n\n?>\n```"]}
