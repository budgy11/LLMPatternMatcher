{"prompt": "Create a user registration function using php", "llm_output": "Here's an example of a basic user registration system in PHP. This will create a new user account with the provided information and store it in a database.\n\nFirst, you need to have MySQL installed on your server or set up a remote connection to one. You'll also need to install a library like PDO (PHP Data Objects) to interact with your database. If you're using PHP 7+, this is included by default.\n\n**Database Setup:**\n\nCreate a new table in your database called `users` with the following columns:\n\n```sql\nCREATE TABLE users (\n    id INT AUTO_INCREMENT,\n    username VARCHAR(255),\n    email VARCHAR(255) UNIQUE NOT NULL,\n    password VARCHAR(255),\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    PRIMARY KEY (id)\n);\n```\n\n**Registration Function:**\n\nCreate a new PHP script, for example `register.php`, with the following content:\n\n```php\n<?php\n\n// Configuration settings\nrequire_once 'config.inc.php';\n\n// Set up PDO connection\n$dsn = \"mysql:host={$database['host']};dbname={$database['database']}\";\n$username = $database['username'];\n$password = $database['password'];\n\ntry {\n    $pdo = new PDO($dsn, $username, $password);\n    $pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);\n} catch (PDOException $e) {\n    echo \"Connection failed: \" . $e->getMessage();\n}\n\n// Function to register a user\nfunction registerUser() {\n    global $pdo;\n\n    // Validate form data\n    if (empty($_POST['username']) || empty($_POST['email']) || empty($_POST['password'])) {\n        throw new Exception('Please fill in all fields');\n    }\n\n    // Hash password\n    $hashedPassword = password_hash($_POST['password'], PASSWORD_DEFAULT);\n\n    try {\n        $sql = \"INSERT INTO users (username, email, password) VALUES (:username, :email, :password)\";\n        $stmt = $pdo->prepare($sql);\n        $stmt->execute([\n            ':username' => $_POST['username'],\n            ':email' => $_POST['email'],\n            ':password' => $hashedPassword\n        ]);\n\n        echo \"User created successfully!\";\n    } catch (PDOException $e) {\n        if ($e->getCode() == '23000') { // Duplicate entry error for email uniqueness check\n            throw new Exception('Email already exists');\n        }\n        echo \"Error creating user: \" . $e->getMessage();\n    }\n\n    return true;\n}\n\nif ($_SERVER['REQUEST_METHOD'] == 'POST' && isset($_POST['register'])) {\n    registerUser();\n}\n```\n\n**HTML Form:**\n\nAdd an HTML form to your `register.php` script to collect the required information:\n\n```php\n<form action=\"\" method=\"post\">\n    <label for=\"username\">Username:</label>\n    <input type=\"text\" name=\"username\"><br><br>\n\n    <label for=\"email\">Email:</label>\n    <input type=\"email\" name=\"email\"><br><br>\n\n    <label for=\"password\">Password:</label>\n    <input type=\"password\" name=\"password\"><br><br>\n\n    <button type=\"submit\" name=\"register\">Register</button>\n</form>\n```\n\nThis script is a basic example of how you can implement user registration using PHP and PDO. Remember to replace the placeholders in your database configuration (`config.inc.php`) with actual credentials, and make sure to follow best practices for security (like validating and sanitizing inputs).", "code_blocks": [null, "```php\n<?php\n\n// Configuration settings\nrequire_once 'config.inc.php';\n\n// Set up PDO connection\n$dsn = \"mysql:host={$database['host']};dbname={$database['database']}\";\n$username = $database['username'];\n$password = $database['password'];\n\ntry {\n    $pdo = new PDO($dsn, $username, $password);\n    $pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);\n} catch (PDOException $e) {\n    echo \"Connection failed: \" . $e->getMessage();\n}\n\n// Function to register a user\nfunction registerUser() {\n    global $pdo;\n\n    // Validate form data\n    if (empty($_POST['username']) || empty($_POST['email']) || empty($_POST['password'])) {\n        throw new Exception('Please fill in all fields');\n    }\n\n    // Hash password\n    $hashedPassword = password_hash($_POST['password'], PASSWORD_DEFAULT);\n\n    try {\n        $sql = \"INSERT INTO users (username, email, password) VALUES (:username, :email, :password)\";\n        $stmt = $pdo->prepare($sql);\n        $stmt->execute([\n            ':username' => $_POST['username'],\n            ':email' => $_POST['email'],\n            ':password' => $hashedPassword\n        ]);\n\n        echo \"User created successfully!\";\n    } catch (PDOException $e) {\n        if ($e->getCode() == '23000') { // Duplicate entry error for email uniqueness check\n            throw new Exception('Email already exists');\n        }\n        echo \"Error creating user: \" . $e->getMessage();\n    }\n\n    return true;\n}\n\nif ($_SERVER['REQUEST_METHOD'] == 'POST' && isset($_POST['register'])) {\n    registerUser();\n}\n```", "```php\n<form action=\"\" method=\"post\">\n    <label for=\"username\">Username:</label>\n    <input type=\"text\" name=\"username\"><br><br>\n\n    <label for=\"email\">Email:</label>\n    <input type=\"email\" name=\"email\"><br><br>\n\n    <label for=\"password\">Password:</label>\n    <input type=\"password\" name=\"password\"><br><br>\n\n    <button type=\"submit\" name=\"register\">Register</button>\n</form>\n```"]}
