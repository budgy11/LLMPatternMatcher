{"prompt": "Create a user registration function using php", "llm_output": "Here's an example of a user registration function in PHP that includes validation for email and password:\n\n**`register_user.php`**\n```php\n<?php\n\nrequire 'config/db.php';\n\nfunction registerUser($username, $email, $password) {\n  // Validate input data\n  if (empty($username) || empty($email) || empty($password)) {\n    throw new Exception('All fields are required');\n  }\n\n  if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {\n    throw new Exception('Invalid email address');\n  }\n\n  if (strlen($password) < 8) {\n    throw new Exception('Password must be at least 8 characters long');\n  }\n\n  // Hash password\n  $hashedPassword = password_hash($password, PASSWORD_DEFAULT);\n\n  try {\n    // Connect to database and insert user data\n    $conn = new PDO('mysql:host=' . DB_HOST . ';dbname=' . DB_NAME, DB_USER, DB_PASSWORD);\n    $stmt = $conn->prepare(\"INSERT INTO users (username, email, password) VALUES (:username, :email, :password)\");\n    $stmt->bindParam(':username', $username);\n    $stmt->bindParam(':email', $email);\n    $stmt->bindParam(':password', $hashedPassword);\n    $stmt->execute();\n\n    // Close database connection\n    $conn = null;\n\n    return true;\n  } catch (PDOException $e) {\n    throw new Exception('Error registering user: ' . $e->getMessage());\n  }\n}\n\n?>\n```\n**`index.php`**\n```php\n<?php\n\nrequire 'register_user.php';\n\nif ($_SERVER['REQUEST_METHOD'] === 'POST') {\n  try {\n    registerUser(\n      $_POST['username'],\n      $_POST['email'],\n      $_POST['password']\n    );\n\n    // Redirect to login page or display success message\n    header('Location: login.php');\n    exit;\n  } catch (Exception $e) {\n    echo 'Error registering user: ' . $e->getMessage();\n  }\n}\n\n?>\n```\nThis code defines a `registerUser` function that takes three arguments: `$username`, `$email`, and `$password`. It validates the input data, hashes the password, and then attempts to insert the user data into the database using PDO.\n\nIn the `index.php` file, we use a simple form to collect user registration information. When the form is submitted, we call the `registerUser` function with the posted values. If successful, we redirect the user to the login page; otherwise, we display an error message.\n\nRemember to update the database connection settings in the `config/db.php` file and adjust the SQL query as needed for your specific database schema.\n\nNote: This is a basic example, and you should consider implementing additional security measures, such as:\n\n* Email verification\n* Password hashing using a more secure algorithm (e.g., Argon2)\n* Salting passwords\n* Input validation and sanitization\n* Error handling and logging\n\nPlease adapt this code to your specific requirements and security needs.", "code_blocks": ["```php\n<?php\n\nrequire 'config/db.php';\n\nfunction registerUser($username, $email, $password) {\n  // Validate input data\n  if (empty($username) || empty($email) || empty($password)) {\n    throw new Exception('All fields are required');\n  }\n\n  if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {\n    throw new Exception('Invalid email address');\n  }\n\n  if (strlen($password) < 8) {\n    throw new Exception('Password must be at least 8 characters long');\n  }\n\n  // Hash password\n  $hashedPassword = password_hash($password, PASSWORD_DEFAULT);\n\n  try {\n    // Connect to database and insert user data\n    $conn = new PDO('mysql:host=' . DB_HOST . ';dbname=' . DB_NAME, DB_USER, DB_PASSWORD);\n    $stmt = $conn->prepare(\"INSERT INTO users (username, email, password) VALUES (:username, :email, :password)\");\n    $stmt->bindParam(':username', $username);\n    $stmt->bindParam(':email', $email);\n    $stmt->bindParam(':password', $hashedPassword);\n    $stmt->execute();\n\n    // Close database connection\n    $conn = null;\n\n    return true;\n  } catch (PDOException $e) {\n    throw new Exception('Error registering user: ' . $e->getMessage());\n  }\n}\n\n?>\n```", "```php\n<?php\n\nrequire 'register_user.php';\n\nif ($_SERVER['REQUEST_METHOD'] === 'POST') {\n  try {\n    registerUser(\n      $_POST['username'],\n      $_POST['email'],\n      $_POST['password']\n    );\n\n    // Redirect to login page or display success message\n    header('Location: login.php');\n    exit;\n  } catch (Exception $e) {\n    echo 'Error registering user: ' . $e->getMessage();\n  }\n}\n\n?>\n```"]}
