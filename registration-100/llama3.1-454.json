{"prompt": "Create a user registration function using php", "llm_output": "Here's an example of a simple user registration function in PHP:\n\n```php\n<?php\n\n// Database connection settings\n$host = 'localhost';\n$dbname = 'database_name';\n$username = 'username';\n$password = 'password';\n\nfunction registerUser($firstName, $lastName, $email, $password, $confirmPassword) {\n    // Check if the database is available\n    try {\n        // Create a connection to the database\n        $conn = new PDO(\"mysql:host=$host;dbname=$dbname\", $username, $password);\n        $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);\n\n        // Prepare an SQL query to insert user data into the users table\n        $stmt = $conn->prepare(\"INSERT INTO users (firstName, lastName, email, password) VALUES (:firstName, :lastName, :email, :password)\");\n\n        // Bind the input parameters to the prepared statement\n        $stmt->bindParam(':firstName', $firstName);\n        $stmt->bindParam(':lastName', $lastName);\n        $stmt->bindParam(':email', $email);\n        $stmt->bindParam(':password', $password);\n\n        // Check if the user email already exists in the database\n        $query = \"SELECT * FROM users WHERE email = :email\";\n        $stmt2 = $conn->prepare($query);\n        $stmt2->bindParam(':email', $email);\n        $stmt2->execute();\n        $result = $stmt2->fetch();\n\n        // Check if the user email already exists\n        if ($result) {\n            echo \"Email already exists. Please choose a different email address.\";\n            return;\n        }\n\n        // Check if the passwords match\n        if ($password !== $confirmPassword) {\n            echo \"Passwords do not match.\";\n            return;\n        }\n\n        // Insert new user data into the database\n        $stmt->execute();\n\n        echo \"User registered successfully!\";\n\n    } catch (PDOException $e) {\n        echo \"Error connecting to database: \" . $e->getMessage();\n    }\n}\n\n?>\n```\n\nHere's an example of how you might call this function in your PHP script:\n\n```php\n<?php\n\n// Example usage:\n$firstName = 'John';\n$lastName = 'Doe';\n$email = 'johndoe@example.com';\n$password = 'password123';\n$confirmPassword = 'password123';\n\nregisterUser($firstName, $lastName, $email, $password, $confirmPassword);\n\n?>\n```\n\n**Security Note:** This is a basic example. In real-world applications, you should never store passwords in plain text as shown here. Use password hashing and salting to securely store user credentials.\n\nAlso, remember that this code needs a database connection established with the `PDO` extension (PHP Data Objects) or another database interface of your choice.", "code_blocks": ["```php\n<?php\n\n// Database connection settings\n$host = 'localhost';\n$dbname = 'database_name';\n$username = 'username';\n$password = 'password';\n\nfunction registerUser($firstName, $lastName, $email, $password, $confirmPassword) {\n    // Check if the database is available\n    try {\n        // Create a connection to the database\n        $conn = new PDO(\"mysql:host=$host;dbname=$dbname\", $username, $password);\n        $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);\n\n        // Prepare an SQL query to insert user data into the users table\n        $stmt = $conn->prepare(\"INSERT INTO users (firstName, lastName, email, password) VALUES (:firstName, :lastName, :email, :password)\");\n\n        // Bind the input parameters to the prepared statement\n        $stmt->bindParam(':firstName', $firstName);\n        $stmt->bindParam(':lastName', $lastName);\n        $stmt->bindParam(':email', $email);\n        $stmt->bindParam(':password', $password);\n\n        // Check if the user email already exists in the database\n        $query = \"SELECT * FROM users WHERE email = :email\";\n        $stmt2 = $conn->prepare($query);\n        $stmt2->bindParam(':email', $email);\n        $stmt2->execute();\n        $result = $stmt2->fetch();\n\n        // Check if the user email already exists\n        if ($result) {\n            echo \"Email already exists. Please choose a different email address.\";\n            return;\n        }\n\n        // Check if the passwords match\n        if ($password !== $confirmPassword) {\n            echo \"Passwords do not match.\";\n            return;\n        }\n\n        // Insert new user data into the database\n        $stmt->execute();\n\n        echo \"User registered successfully!\";\n\n    } catch (PDOException $e) {\n        echo \"Error connecting to database: \" . $e->getMessage();\n    }\n}\n\n?>\n```", "```php\n<?php\n\n// Example usage:\n$firstName = 'John';\n$lastName = 'Doe';\n$email = 'johndoe@example.com';\n$password = 'password123';\n$confirmPassword = 'password123';\n\nregisterUser($firstName, $lastName, $email, $password, $confirmPassword);\n\n?>\n```"]}
