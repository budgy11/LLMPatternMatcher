{"prompt": "Create a user registration function using php", "llm_output": "**User Registration Function in PHP**\n=====================================\n\nThis is an example of a simple user registration function written in PHP. This function will handle the creation of new users, including validating input data and storing it in a database.\n\n### Database Setup\n\nBefore running this code, you'll need to create a MySQL database with a table called `users`. The table should have the following columns:\n\n| Column Name | Data Type | Description |\n| --- | --- | --- |\n| id | int | Unique user ID (auto-increment) |\n| username | varchar(50) | User's chosen username |\n| email | varchar(100) | User's email address |\n| password | varchar(255) | Hashed password for the user |\n\n### PHP Code\n\n```php\n<?php\n\n// Configuration settings\ndefine('DB_HOST', 'localhost');\ndefine('DB_USERNAME', 'username');\ndefine('DB_PASSWORD', 'password');\ndefine('DB_NAME', 'database');\n\n// Connect to database\n$conn = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);\n\n// Check connection\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\nfunction registerUser($username, $email, $password) {\n    // Validate input data\n    if (empty($username) || empty($email) || empty($password)) {\n        return array('error' => 'All fields are required.');\n    }\n\n    // Hash password\n    $hashedPassword = password_hash($password, PASSWORD_DEFAULT);\n\n    // Create query to insert new user into database\n    $query = \"INSERT INTO users (username, email, password) VALUES (?, ?, ?)\";\n    $stmt = $conn->prepare($query);\n    $stmt->bind_param(\"sss\", $username, $email, $hashedPassword);\n    $result = $stmt->execute();\n\n    // Check if user was inserted successfully\n    if ($result) {\n        return array('success' => 'User created successfully.');\n    } else {\n        return array('error' => 'Failed to create user. Please try again.');\n    }\n}\n\n// Example usage:\n$username = $_POST['username'];\n$email = $_POST['email'];\n$password = $_POST['password'];\n\n$result = registerUser($username, $email, $password);\n\nif (isset($result['success'])) {\n    echo json_encode(array('message' => 'User created successfully!'));\n} elseif (isset($result['error'])) {\n    echo json_encode(array('error' => $result['error']));\n}\n\n// Close database connection\n$conn->close();\n\n?>\n```\n\n### Explanation\n\n1. The `registerUser` function takes three parameters: `$username`, `$email`, and `$password`.\n2. It validates the input data to ensure that all fields are filled.\n3. If validation is successful, it hashes the password using PHP's built-in `password_hash` function.\n4. A prepared query is created to insert the new user into the database.\n5. The query is executed, and if successful, a success message is returned.\n\n### Note\n\n* This code uses MySQLi extension for connecting to the database. Make sure you have it enabled in your PHP setup.\n* Passwords are hashed using `password_hash` function, which is recommended for secure password storage.\n* In a real-world application, you should also validate user input data on the client-side (e.g., using JavaScript) to prevent cross-site request forgery (CSRF) attacks.", "code_blocks": ["```php\n<?php\n\n// Configuration settings\ndefine('DB_HOST', 'localhost');\ndefine('DB_USERNAME', 'username');\ndefine('DB_PASSWORD', 'password');\ndefine('DB_NAME', 'database');\n\n// Connect to database\n$conn = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);\n\n// Check connection\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\nfunction registerUser($username, $email, $password) {\n    // Validate input data\n    if (empty($username) || empty($email) || empty($password)) {\n        return array('error' => 'All fields are required.');\n    }\n\n    // Hash password\n    $hashedPassword = password_hash($password, PASSWORD_DEFAULT);\n\n    // Create query to insert new user into database\n    $query = \"INSERT INTO users (username, email, password) VALUES (?, ?, ?)\";\n    $stmt = $conn->prepare($query);\n    $stmt->bind_param(\"sss\", $username, $email, $hashedPassword);\n    $result = $stmt->execute();\n\n    // Check if user was inserted successfully\n    if ($result) {\n        return array('success' => 'User created successfully.');\n    } else {\n        return array('error' => 'Failed to create user. Please try again.');\n    }\n}\n\n// Example usage:\n$username = $_POST['username'];\n$email = $_POST['email'];\n$password = $_POST['password'];\n\n$result = registerUser($username, $email, $password);\n\nif (isset($result['success'])) {\n    echo json_encode(array('message' => 'User created successfully!'));\n} elseif (isset($result['error'])) {\n    echo json_encode(array('error' => $result['error']));\n}\n\n// Close database connection\n$conn->close();\n\n?>\n```"]}
