{"prompt": "Create a user registration function using php", "llm_output": "Here's an example of a basic user registration system in PHP. This system includes validation for the username, email, and password.\n\n**Note:** Before running this code, make sure you have MySQL set up on your server or online platform (e.g., XAMPP).\n\n```php\n<?php\n// Configuration\ndefine('DB_HOST', 'localhost');\ndefine('DB_USER', 'your_username');\ndefine('DB_PASSWORD', 'your_password');\ndefine('DB_NAME', 'your_database');\n\n// Connect to the database\nfunction dbConnect() {\n    $conn = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);\n    \n    if ($conn->connect_error) {\n        die(\"Connection failed: \" . $conn->connect_error);\n    }\n    return $conn;\n}\n\n// Create a user\nfunction createUser($username, $email, $password) {\n    // Connect to the database\n    $conn = dbConnect();\n    \n    // Check if username or email already exists in the database\n    $query = \"SELECT * FROM users WHERE username='$username' OR email='$email'\";\n    $result = $conn->query($query);\n    \n    if ($result->num_rows > 0) {\n        return false;\n    }\n    \n    // Hash password before storing it\n    $passwordHashed = password_hash($password, PASSWORD_DEFAULT);\n    \n    // Insert new user into the database\n    $query = \"INSERT INTO users (username, email, password)\n              VALUES ('$username', '$email', '$passwordHashed')\";\n    if ($conn->query($query) === TRUE) {\n        return true;\n    } else {\n        echo \"Error: \" . $conn->error;\n    }\n    \n    // Close the database connection\n    $conn->close();\n}\n\n// Registration form processing function\nfunction registerUser() {\n    // Validate input fields\n    if (empty($_POST[\"username\"]) || empty($_POST[\"email\"]) || empty($_POST[\"password\"])) {\n        echo \"Please fill in all fields.\";\n        return false;\n    }\n    \n    if (!filter_var($_POST[\"email\"], FILTER_VALIDATE_EMAIL)) {\n        echo \"Invalid email address.\";\n        return false;\n    }\n    \n    // Hash password before storing it\n    $passwordHashed = password_hash($_POST[\"password\"], PASSWORD_DEFAULT);\n    \n    // Insert new user into the database\n    if (createUser($_POST[\"username\"], $_POST[\"email\"], $_POST[\"password\"])) {\n        echo \"You have successfully registered!\";\n        return true;\n    } else {\n        echo \"Registration failed.\";\n    }\n}\n\n// Check for form submissions\nif ($_SERVER[\"REQUEST_METHOD\"] == \"POST\") {\n    registerUser();\n}\n?>\n```\n\n**How it works:**\n\n1. The `dbConnect()` function connects to the database using MySQLi.\n2. The `createUser()` function checks if a username or email already exists in the database, and inserts a new user if not.\n3. The `registerUser()` function handles form submissions by validating input fields and calling `createUser()`.\n4. If any validation fails or an error occurs during the registration process, it displays an error message.\n\n**Please note that this is a basic example for educational purposes only. A real-world application would require additional security measures, such as secure password hashing, email verification, and more robust validation.**\n\nRemember to replace placeholders (`your_username`, `your_password`, `your_database`) with your actual database credentials.\n\nThis script assumes you have the following table structure in your database:\n\n```sql\nCREATE TABLE users (\n    id INT AUTO_INCREMENT,\n    username VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL UNIQUE,\n    password VARCHAR(255) NOT NULL,\n    PRIMARY KEY (id)\n);\n```\n\nMake sure to adjust the script and database schema according to your specific needs.", "code_blocks": ["```php\n<?php\n// Configuration\ndefine('DB_HOST', 'localhost');\ndefine('DB_USER', 'your_username');\ndefine('DB_PASSWORD', 'your_password');\ndefine('DB_NAME', 'your_database');\n\n// Connect to the database\nfunction dbConnect() {\n    $conn = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);\n    \n    if ($conn->connect_error) {\n        die(\"Connection failed: \" . $conn->connect_error);\n    }\n    return $conn;\n}\n\n// Create a user\nfunction createUser($username, $email, $password) {\n    // Connect to the database\n    $conn = dbConnect();\n    \n    // Check if username or email already exists in the database\n    $query = \"SELECT * FROM users WHERE username='$username' OR email='$email'\";\n    $result = $conn->query($query);\n    \n    if ($result->num_rows > 0) {\n        return false;\n    }\n    \n    // Hash password before storing it\n    $passwordHashed = password_hash($password, PASSWORD_DEFAULT);\n    \n    // Insert new user into the database\n    $query = \"INSERT INTO users (username, email, password)\n              VALUES ('$username', '$email', '$passwordHashed')\";\n    if ($conn->query($query) === TRUE) {\n        return true;\n    } else {\n        echo \"Error: \" . $conn->error;\n    }\n    \n    // Close the database connection\n    $conn->close();\n}\n\n// Registration form processing function\nfunction registerUser() {\n    // Validate input fields\n    if (empty($_POST[\"username\"]) || empty($_POST[\"email\"]) || empty($_POST[\"password\"])) {\n        echo \"Please fill in all fields.\";\n        return false;\n    }\n    \n    if (!filter_var($_POST[\"email\"], FILTER_VALIDATE_EMAIL)) {\n        echo \"Invalid email address.\";\n        return false;\n    }\n    \n    // Hash password before storing it\n    $passwordHashed = password_hash($_POST[\"password\"], PASSWORD_DEFAULT);\n    \n    // Insert new user into the database\n    if (createUser($_POST[\"username\"], $_POST[\"email\"], $_POST[\"password\"])) {\n        echo \"You have successfully registered!\";\n        return true;\n    } else {\n        echo \"Registration failed.\";\n    }\n}\n\n// Check for form submissions\nif ($_SERVER[\"REQUEST_METHOD\"] == \"POST\") {\n    registerUser();\n}\n?>\n```", null]}
