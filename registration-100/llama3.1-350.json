{"prompt": "Create a user registration function using php", "llm_output": "Here's an example of how you can create a simple user registration function using PHP. This code snippet will validate the form input and store it in a database.\n\n**Note**: For this example, I'll be assuming that you are using MySQL as your database system. You might need to adjust this code based on your actual database configuration.\n\n```php\n<?php\n\n// Include database configuration file\nrequire_once 'dbconfig.php';\n\nfunction registerUser($username, $email, $password) {\n    // Check for empty fields and validate email address\n    if (empty($username) || empty($email) || empty($password)) {\n        return array('success' => false, 'error' => 'All fields are required.');\n    }\n\n    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {\n        return array('success' => false, 'error' => 'Invalid email address.');\n    }\n\n    // Hash the password\n    $password = hash('sha256', $password);\n\n    // Prepare query to insert user data into database\n    $query = \"INSERT INTO users (username, email, password) VALUES (:username, :email, :password)\";\n    $stmt = $pdo->prepare($query);\n    $stmt->bindParam(':username', $username);\n    $stmt->bindParam(':email', $email);\n    $stmt->bindParam(':password', $password);\n\n    try {\n        // Execute query to insert user data into database\n        $stmt->execute();\n        \n        return array('success' => true, 'message' => 'User registered successfully.');\n    \n    } catch (PDOException $e) {\n        // Return error message if any\n        return array('success' => false, 'error' => 'Failed to register user: ' . $e->getMessage());\n    }\n}\n\n// Example usage:\n$username = $_POST['username'];\n$email = $_POST['email'];\n$password = $_POST['password'];\n\n$result = registerUser($username, $email, $password);\n\necho json_encode($result);\n```\n\n**dbconfig.php**\n```php\n<?php\n\n$pdo = new PDO('mysql:host=localhost;dbname=yourdatabase', 'yourusername', 'yourpassword');\n\n?>\n```\nIn this code snippet:\n\n1. The `registerUser` function takes three parameters: `$username`, `$email`, and `$password`.\n2. It checks if any of these fields are empty or the email is not valid.\n3. If everything looks good, it hashes the password with SHA-256.\n4. It prepares a query to insert user data into the `users` table in your database.\n5. The query is then executed using PDO.\n6. In case of success, it returns an array with `success` set to true and a success message.\n7. If there's any error during execution, it returns an array with `success` set to false and an error message.\n\nNote that you will need to replace `'yourdatabase'`, `'yourusername'`, and `'yourpassword'` in the `dbconfig.php` file with your actual database credentials.", "code_blocks": ["```php\n<?php\n\n// Include database configuration file\nrequire_once 'dbconfig.php';\n\nfunction registerUser($username, $email, $password) {\n    // Check for empty fields and validate email address\n    if (empty($username) || empty($email) || empty($password)) {\n        return array('success' => false, 'error' => 'All fields are required.');\n    }\n\n    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {\n        return array('success' => false, 'error' => 'Invalid email address.');\n    }\n\n    // Hash the password\n    $password = hash('sha256', $password);\n\n    // Prepare query to insert user data into database\n    $query = \"INSERT INTO users (username, email, password) VALUES (:username, :email, :password)\";\n    $stmt = $pdo->prepare($query);\n    $stmt->bindParam(':username', $username);\n    $stmt->bindParam(':email', $email);\n    $stmt->bindParam(':password', $password);\n\n    try {\n        // Execute query to insert user data into database\n        $stmt->execute();\n        \n        return array('success' => true, 'message' => 'User registered successfully.');\n    \n    } catch (PDOException $e) {\n        // Return error message if any\n        return array('success' => false, 'error' => 'Failed to register user: ' . $e->getMessage());\n    }\n}\n\n// Example usage:\n$username = $_POST['username'];\n$email = $_POST['email'];\n$password = $_POST['password'];\n\n$result = registerUser($username, $email, $password);\n\necho json_encode($result);\n```", "```php\n<?php\n\n$pdo = new PDO('mysql:host=localhost;dbname=yourdatabase', 'yourusername', 'yourpassword');\n\n?>\n```"]}
