{"prompt": "Create a user registration function using php", "llm_output": "**User Registration Function in PHP**\n=====================================\n\nThe following is an example of a simple user registration function written in PHP. This function will validate the input data, check for existing users with the same username or email address, and then store the new user's information in a database.\n\n**Function Code**\n```php\nfunction registerUser($username, $email, $password) {\n  // Database connection settings\n  $host = 'localhost';\n  $dbname = 'mydatabase';\n  $user = 'myuser';\n  $pass = 'mypassword';\n\n  try {\n    // Connect to database\n    $conn = new PDO(\"mysql:host=$host;dbname=$dbname\", $user, $pass);\n\n    // Validate input data\n    if (empty($username) || empty($email) || empty($password)) {\n      throw new Exception('All fields must be filled in.');\n    }\n\n    // Check for existing user with same username or email address\n    $stmt = $conn->prepare(\"SELECT * FROM users WHERE username = :username OR email = :email\");\n    $stmt->bindParam(':username', $username);\n    $stmt->bindParam(':email', $email);\n    $stmt->execute();\n\n    if ($stmt->fetch()) {\n      throw new Exception('Username or email address already in use.');\n    }\n\n    // Hash password\n    $hashedPassword = password_hash($password, PASSWORD_DEFAULT);\n\n    // Insert new user into database\n    $stmt = $conn->prepare(\"INSERT INTO users (username, email, password) VALUES (:username, :email, :password)\");\n    $stmt->bindParam(':username', $username);\n    $stmt->bindParam(':email', $email);\n    $stmt->bindParam(':password', $hashedPassword);\n    $stmt->execute();\n\n    return true;\n\n  } catch (PDOException $e) {\n    echo \"Error connecting to database: \" . $e->getMessage();\n    return false;\n  } catch (Exception $e) {\n    echo \"Error registering user: \" . $e->getMessage();\n    return false;\n  }\n}\n```\n**Example Usage**\n```php\n$username = 'johnDoe';\n$email = 'johndoe@example.com';\n$password = 'password123';\n\nif (registerUser($username, $email, $password)) {\n  echo \"User registered successfully!\";\n} else {\n  echo \"Error registering user.\";\n}\n```\nNote: This code assumes a MySQL database with a `users` table containing the columns `id`, `username`, `email`, and `password`. You should modify the database connection settings to match your own setup. Additionally, this is a basic example and you may want to add more validation or security measures (e.g., email verification) depending on your requirements.", "code_blocks": ["```php\nfunction registerUser($username, $email, $password) {\n  // Database connection settings\n  $host = 'localhost';\n  $dbname = 'mydatabase';\n  $user = 'myuser';\n  $pass = 'mypassword';\n\n  try {\n    // Connect to database\n    $conn = new PDO(\"mysql:host=$host;dbname=$dbname\", $user, $pass);\n\n    // Validate input data\n    if (empty($username) || empty($email) || empty($password)) {\n      throw new Exception('All fields must be filled in.');\n    }\n\n    // Check for existing user with same username or email address\n    $stmt = $conn->prepare(\"SELECT * FROM users WHERE username = :username OR email = :email\");\n    $stmt->bindParam(':username', $username);\n    $stmt->bindParam(':email', $email);\n    $stmt->execute();\n\n    if ($stmt->fetch()) {\n      throw new Exception('Username or email address already in use.');\n    }\n\n    // Hash password\n    $hashedPassword = password_hash($password, PASSWORD_DEFAULT);\n\n    // Insert new user into database\n    $stmt = $conn->prepare(\"INSERT INTO users (username, email, password) VALUES (:username, :email, :password)\");\n    $stmt->bindParam(':username', $username);\n    $stmt->bindParam(':email', $email);\n    $stmt->bindParam(':password', $hashedPassword);\n    $stmt->execute();\n\n    return true;\n\n  } catch (PDOException $e) {\n    echo \"Error connecting to database: \" . $e->getMessage();\n    return false;\n  } catch (Exception $e) {\n    echo \"Error registering user: \" . $e->getMessage();\n    return false;\n  }\n}\n```", "```php\n$username = 'johnDoe';\n$email = 'johndoe@example.com';\n$password = 'password123';\n\nif (registerUser($username, $email, $password)) {\n  echo \"User registered successfully!\";\n} else {\n  echo \"Error registering user.\";\n}\n```"]}
