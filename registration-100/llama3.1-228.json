{"prompt": "Create a user registration function using php", "llm_output": "Here is an example of a user registration function in PHP:\n\n```php\n<?php\n\n// Configuration variables\n$databaseHost = 'localhost';\n$databaseUsername = 'root';\n$databasePassword = '';\n$databaseName = 'users';\n\n// Connect to the database\n$mysqli = new mysqli($databaseHost, $databaseUsername, $databasePassword, $databaseName);\n\n// Check connection\nif ($mysqli->connect_errno) {\n    printf(\"Connect failed: %s\\n\", $mysqli->connect_error);\n    exit();\n}\n\nfunction registerUser($username, $password, $email) {\n    global $mysqli;\n\n    // Hash the password\n    $hashedPassword = password_hash($password, PASSWORD_DEFAULT);\n\n    // Prepare the SQL query to insert new user into database\n    $query = \"INSERT INTO users (username, email, password) VALUES (?, ?, ?)\";\n\n    // Bind variables to prevent SQL injection\n    $stmt = $mysqli->prepare($query);\n    $stmt->bind_param('sss', $username, $email, $hashedPassword);\n\n    try {\n        // Execute the query\n        $stmt->execute();\n\n        // Get the last inserted ID (assuming user ID is auto-incrementing)\n        $userId = $mysqli->insert_id;\n\n        return $userId;\n    } catch (Exception $e) {\n        echo \"Error: \" . $e->getMessage();\n        return null; // Return null to indicate registration failed\n    }\n}\n\n?>\n```\n\nYou can use this function like so:\n```php\n$username = 'johnDoe';\n$password = 'mysecretpassword';\n$email = 'johndoe@example.com';\n\n$userId = registerUser($username, $password, $email);\n\nif ($userId !== null) {\n    echo \"Registration successful. User ID: $userId\";\n} else {\n    echo \"Registration failed.\";\n}\n```\n\n**Security notes:**\n\n*   This example uses prepared statements to prevent SQL injection.\n*   It hashes the password using `password_hash()` and stores it securely in the database.\n\n**Example use case:**\n\nYou can add a registration form on your website with fields for username, email, and password. When the user submits the form, call the `registerUser()` function with their input data as arguments.", "code_blocks": ["```php\n<?php\n\n// Configuration variables\n$databaseHost = 'localhost';\n$databaseUsername = 'root';\n$databasePassword = '';\n$databaseName = 'users';\n\n// Connect to the database\n$mysqli = new mysqli($databaseHost, $databaseUsername, $databasePassword, $databaseName);\n\n// Check connection\nif ($mysqli->connect_errno) {\n    printf(\"Connect failed: %s\\n\", $mysqli->connect_error);\n    exit();\n}\n\nfunction registerUser($username, $password, $email) {\n    global $mysqli;\n\n    // Hash the password\n    $hashedPassword = password_hash($password, PASSWORD_DEFAULT);\n\n    // Prepare the SQL query to insert new user into database\n    $query = \"INSERT INTO users (username, email, password) VALUES (?, ?, ?)\";\n\n    // Bind variables to prevent SQL injection\n    $stmt = $mysqli->prepare($query);\n    $stmt->bind_param('sss', $username, $email, $hashedPassword);\n\n    try {\n        // Execute the query\n        $stmt->execute();\n\n        // Get the last inserted ID (assuming user ID is auto-incrementing)\n        $userId = $mysqli->insert_id;\n\n        return $userId;\n    } catch (Exception $e) {\n        echo \"Error: \" . $e->getMessage();\n        return null; // Return null to indicate registration failed\n    }\n}\n\n?>\n```", "```php\n$username = 'johnDoe';\n$password = 'mysecretpassword';\n$email = 'johndoe@example.com';\n\n$userId = registerUser($username, $password, $email);\n\nif ($userId !== null) {\n    echo \"Registration successful. User ID: $userId\";\n} else {\n    echo \"Registration failed.\";\n}\n```"]}
