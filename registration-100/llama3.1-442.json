{"prompt": "Create a user registration function using php", "llm_output": "Here is an example of a basic user registration function in PHP:\n\n**register.php**\n```php\n<?php\n\n// Configuration variables\n$dbHost = 'localhost';\n$dbUsername = 'your_username';\n$dbPassword = 'your_password';\n$dbName = 'your_database';\n\n// Create connection to database\n$conn = new mysqli($dbHost, $dbUsername, $dbPassword, $dbName);\n\n// Check if connection was successful\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Define registration function\nfunction registerUser($username, $email, $password, $confirm_password) {\n    // Validate input data\n    if (empty($username) || empty($email) || empty($password)) {\n        return array('error' => 'Please fill in all fields');\n    }\n\n    if ($password !== $confirm_password) {\n        return array('error' => 'Passwords do not match');\n    }\n\n    // Hash password using SHA-256\n    $hashedPassword = hash('sha256', $password);\n\n    // Prepare SQL query to insert new user data into database table\n    $sql = \"INSERT INTO users (username, email, password) VALUES (?, ?, ?)\";\n    $stmt = $conn->prepare($sql);\n    $stmt->bind_param(\"sss\", $username, $email, $hashedPassword);\n\n    // Execute query and store result in $result variable\n    if ($stmt->execute()) {\n        return array('success' => true, 'message' => 'User registered successfully');\n    } else {\n        return array('error' => 'Error registering user');\n    }\n}\n\n// Check if form has been submitted (e.g. through AJAX request)\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    $username = $_POST['username'];\n    $email = $_POST['email'];\n    $password = $_POST['password'];\n    $confirm_password = $_POST['confirm_password'];\n\n    // Call registration function and store result in $result variable\n    $result = registerUser($username, $email, $password, $confirm_password);\n\n    if ($result['success']) {\n        echo json_encode(array('status' => 'success', 'message' => $result['message']));\n    } elseif ($result['error']) {\n        echo json_encode(array('status' => 'error', 'message' => $result['error']));\n    }\n} else {\n    // Display registration form if no data has been submitted\n    ?>\n    <form method=\"post\" action=\"<?php echo $_SERVER['PHP_SELF']; ?>\">\n        <label>Username:</label>\n        <input type=\"text\" name=\"username\"><br><br>\n        <label>Email:</label>\n        <input type=\"email\" name=\"email\"><br><br>\n        <label>Password:</label>\n        <input type=\"password\" name=\"password\"><br><br>\n        <label>Confirm Password:</label>\n        <input type=\"password\" name=\"confirm_password\"><br><br>\n        <button type=\"submit\">Register</button>\n    </form>\n    <?php\n}\n\n?>\n```\n**Usage:**\n\n1. Create a database with a table named `users` that has the following columns:\n\t* `id`: an auto-incrementing primary key\n\t* `username`: the username chosen by the user\n\t* `email`: the email address of the user\n\t* `password`: the hashed password of the user (use SHA-256)\n2. Update the configuration variables at the top of the script to match your database credentials.\n3. Open a web browser and navigate to the URL where the script is hosted.\n4. Fill in the registration form with your desired username, email address, and password.\n5. Click the \"Register\" button.\n\nNote: This code uses SHA-256 hashing for storing passwords, which is considered secure for most purposes. However, you may want to use a more modern hashing algorithm like bcrypt or Argon2 for added security. Additionally, make sure to keep your database credentials secure and never hard-code them into your script.", "code_blocks": ["```php\n<?php\n\n// Configuration variables\n$dbHost = 'localhost';\n$dbUsername = 'your_username';\n$dbPassword = 'your_password';\n$dbName = 'your_database';\n\n// Create connection to database\n$conn = new mysqli($dbHost, $dbUsername, $dbPassword, $dbName);\n\n// Check if connection was successful\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Define registration function\nfunction registerUser($username, $email, $password, $confirm_password) {\n    // Validate input data\n    if (empty($username) || empty($email) || empty($password)) {\n        return array('error' => 'Please fill in all fields');\n    }\n\n    if ($password !== $confirm_password) {\n        return array('error' => 'Passwords do not match');\n    }\n\n    // Hash password using SHA-256\n    $hashedPassword = hash('sha256', $password);\n\n    // Prepare SQL query to insert new user data into database table\n    $sql = \"INSERT INTO users (username, email, password) VALUES (?, ?, ?)\";\n    $stmt = $conn->prepare($sql);\n    $stmt->bind_param(\"sss\", $username, $email, $hashedPassword);\n\n    // Execute query and store result in $result variable\n    if ($stmt->execute()) {\n        return array('success' => true, 'message' => 'User registered successfully');\n    } else {\n        return array('error' => 'Error registering user');\n    }\n}\n\n// Check if form has been submitted (e.g. through AJAX request)\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    $username = $_POST['username'];\n    $email = $_POST['email'];\n    $password = $_POST['password'];\n    $confirm_password = $_POST['confirm_password'];\n\n    // Call registration function and store result in $result variable\n    $result = registerUser($username, $email, $password, $confirm_password);\n\n    if ($result['success']) {\n        echo json_encode(array('status' => 'success', 'message' => $result['message']));\n    } elseif ($result['error']) {\n        echo json_encode(array('status' => 'error', 'message' => $result['error']));\n    }\n} else {\n    // Display registration form if no data has been submitted\n    ?>\n    <form method=\"post\" action=\"<?php echo $_SERVER['PHP_SELF']; ?>\">\n        <label>Username:</label>\n        <input type=\"text\" name=\"username\"><br><br>\n        <label>Email:</label>\n        <input type=\"email\" name=\"email\"><br><br>\n        <label>Password:</label>\n        <input type=\"password\" name=\"password\"><br><br>\n        <label>Confirm Password:</label>\n        <input type=\"password\" name=\"confirm_password\"><br><br>\n        <button type=\"submit\">Register</button>\n    </form>\n    <?php\n}\n\n?>\n```"]}
