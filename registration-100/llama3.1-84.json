{"prompt": "Create a user registration function using php", "llm_output": "**User Registration Function in PHP**\n=====================================\n\nHere is an example of a user registration function written in PHP. This function will handle the logic for registering new users and storing their information in a database.\n\n### Requirements\n\n* MySQLi extension installed\n* Database setup with `users` table containing fields: `id`, `username`, `email`, `password`\n\n### Code\n```php\n<?php\n\nfunction registerUser($username, $email, $password) {\n    // Connect to database\n    require_once 'db.php';\n    $mysqli = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);\n\n    // Check if username and email already exist\n    $query = \"SELECT * FROM users WHERE username = '$username' OR email = '$email'\";\n    $result = $mysqli->query($query);\n    if ($result->num_rows > 0) {\n        return array('error' => 'Username or Email already taken');\n    }\n\n    // Hash password\n    $hashedPassword = password_hash($password, PASSWORD_DEFAULT);\n\n    // Insert new user into database\n    $query = \"INSERT INTO users (username, email, password) VALUES ('$username', '$email', '$hashedPassword')\";\n    if ($mysqli->query($query)) {\n        return array('success' => 'User registered successfully');\n    } else {\n        return array('error' => 'Error registering user');\n    }\n\n    // Close database connection\n    $mysqli->close();\n}\n\n// Example usage:\n$registerData = registerUser('johnDoe', 'johndoe@example.com', 'password123');\nprint_r($registerData);\n\n?>\n```\n### Notes\n\n* The `db.php` file is assumed to contain the MySQLi connection settings.\n* The `users` table is assumed to be created with the required fields (`id`, `username`, `email`, `password`) and has a primary key on `id`.\n* Passwords are hashed using PHP's built-in `password_hash()` function for security purposes.\n\n### Example Use Cases\n\n* Registering a new user:\n```php\n$registerData = registerUser('johnDoe', 'johndoe@example.com', 'password123');\nprint_r($registerData); // Output: Array ( [success] => User registered successfully )\n```\n* Error handling when username or email already exists:\n```php\n$registerData = registerUser('johnDoe', 'johndoe@example.com', 'password123');\nprint_r($registerData); // Output: Array ( [error] => Username or Email already taken )\n```\nThis is a basic example of user registration in PHP using MySQLi. You can extend and modify this function to suit your specific requirements, such as adding validation for email addresses or handling multiple user registration methods (e.g., social media login).", "code_blocks": ["```php\n<?php\n\nfunction registerUser($username, $email, $password) {\n    // Connect to database\n    require_once 'db.php';\n    $mysqli = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);\n\n    // Check if username and email already exist\n    $query = \"SELECT * FROM users WHERE username = '$username' OR email = '$email'\";\n    $result = $mysqli->query($query);\n    if ($result->num_rows > 0) {\n        return array('error' => 'Username or Email already taken');\n    }\n\n    // Hash password\n    $hashedPassword = password_hash($password, PASSWORD_DEFAULT);\n\n    // Insert new user into database\n    $query = \"INSERT INTO users (username, email, password) VALUES ('$username', '$email', '$hashedPassword')\";\n    if ($mysqli->query($query)) {\n        return array('success' => 'User registered successfully');\n    } else {\n        return array('error' => 'Error registering user');\n    }\n\n    // Close database connection\n    $mysqli->close();\n}\n\n// Example usage:\n$registerData = registerUser('johnDoe', 'johndoe@example.com', 'password123');\nprint_r($registerData);\n\n?>\n```", "```php\n$registerData = registerUser('johnDoe', 'johndoe@example.com', 'password123');\nprint_r($registerData); // Output: Array ( [success] => User registered successfully )\n```", "```php\n$registerData = registerUser('johnDoe', 'johndoe@example.com', 'password123');\nprint_r($registerData); // Output: Array ( [error] => Username or Email already taken )\n```"]}
