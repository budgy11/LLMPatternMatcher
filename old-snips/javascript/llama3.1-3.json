{"prompt": "Create a forgot password function using javascript", "llm_output": "Here is an example of how you can create a forgot password function using JavaScript:\n\n**HTML**\n\n```html\n<form id=\"forgot-password-form\">\n  <label for=\"email\">Email:</label>\n  <input type=\"text\" id=\"email\" name=\"email\"><br><br>\n  <button id=\"send-reset-email-btn\">Send Reset Email</button>\n</form>\n\n<div id=\"reset-password-container\"></div>\n```\n\n**JavaScript**\n\n```javascript\n// Function to send password reset email\nfunction sendPasswordResetEmail(email) {\n  // Send a request to the server to generate a new password and send it via email\n  fetch('/forgot-password', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({email: email})\n  })\n  .then(response => response.json())\n  .then(data => {\n    if (data.success) {\n      console.log('Password reset email sent successfully');\n      const resetPasswordForm = document.createElement('form');\n      resetPasswordContainer.appendChild(resetPasswordForm);\n      resetPasswordForm.innerHTML = `\n        <label for=\"new-password\">New Password:</label>\n        <input type=\"password\" id=\"new-password\" name=\"new-password\"><br><br>\n        <label for=\"confirm-new-password\">Confirm New Password:</label>\n        <input type=\"password\" id=\"confirm-new-password\" name=\"confirm-new-password\"><br><br>\n        <button id=\"reset-password-btn\">Reset Password</button>\n      `;\n    } else {\n      console.log('Error sending password reset email');\n    }\n  })\n  .catch(error => {\n    console.log('Error sending password reset email:', error);\n  });\n}\n\n// Function to handle form submission\ndocument.getElementById('forgot-password-form').addEventListener('submit', event => {\n  event.preventDefault();\n  const email = document.getElementById('email').value;\n  sendPasswordResetEmail(email);\n});\n\n// Optional: add a button to the page that triggers the forgot password functionality\ndocument.addEventListener('DOMContentLoaded', () => {\n  const resetPasswordBtn = document.createElement('button');\n  resetPasswordBtn.textContent = 'Forgot Password';\n  document.body.appendChild(resetPasswordBtn);\n  resetPasswordBtn.addEventListener('click', () => {\n    document.getElementById('forgot-password-form').style.display = 'block';\n  });\n});\n```\n\n**Backend (assuming Node.js with Express)**\n```javascript\nconst express = require('express');\nconst app = express();\napp.use(express.json());\n\n// Forgot password endpoint\napp.post('/forgot-password', (req, res) => {\n  const email = req.body.email;\n  // Generate a new password and send it to the user via email\n  // This is a placeholder, you would need to implement actual functionality here\n  const newPassword = generateNewPassword();\n  sendEmail(email, newPassword);\n  res.json({ success: true });\n});\n\n// Helper function to generate a new random password\nfunction generateNewPassword() {\n  return Math.random().toString(36).substr(2, 10);\n}\n\n// Helper function to send an email using a library like nodemailer\nfunction sendEmail(to, body) {\n  // Implementation not shown here\n}\n```\nThis code assumes you have a Node.js backend with Express that handles the password reset request. The JavaScript code sends a POST request to the `/forgot-password` endpoint with the user's email as payload.\n\nWhen the server responds successfully, it displays a form to enter new password and confirm new password. When this form is submitted, it calls another API endpoint (not shown here) to update the user's password in your database.\n\nPlease note that you should implement proper error handling, security measures (e.g., hashing passwords), and validation for the reset password functionality.\n\nAlso, you will need to implement actual email sending functionality on your backend using a library like Nodemailer.", "code_blocks": [null, null, null]}
