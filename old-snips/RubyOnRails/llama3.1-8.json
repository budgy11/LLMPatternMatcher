{"prompt": "Create a reset password function using Ruby on Rails", "llm_output": "Here's an example of how you can create a \"reset password\" functionality in Ruby on Rails:\n\n**Step 1: Add Devise gem**\n\nDevise is a popular authentication library for Rails that includes password reset functionality. First, add it to your `Gemfile`:\n```ruby\ngem 'devise'\n```\nThen run `bundle install`.\n\n**Step 2: Run migrations**\n\nRun the following command in your terminal to create the necessary tables and columns for Devise:\n```bash\nrails generate devise:install\nrails db:migrate\n```\nThis will set up the basic authentication infrastructure.\n\n**Step 3: Configure Devise**\n\nIn `config/initializers/devise.rb`, add the following configuration:\n```ruby\nDevise.setup do |config|\n  config.mailer_sender = 'your_email@example.com'\nend\n```\nReplace `'your_email@example.com'` with your actual email address.\n\n**Step 4: Generate password reset controllers**\n\nRun the following command to generate the necessary controllers and views for password reset:\n```bash\nrails generate devise:controllers Users\n```\nThis will create the `PasswordResetController` and other related controllers.\n\n**Step 5: Add routes**\n\nIn `config/routes.rb`, add the following route:\n```ruby\ndevise_for :users, path_names: { sign_in: \"login\", sign_out: \"logout\" }\n```\n**Step 6: Implement password reset functionality**\n\nCreate a new file `app/controllers/users/password_reset_controller.rb` with the following code:\n```ruby\nclass Users::PasswordResetController < Devise::PasswordsController\n  def show\n    user = User.find_by(email: params[:email])\n    if user && !user.activated?\n      flash.now[:alert] = \"Your account is not activated yet.\"\n      return render :new\n    end\n  end\n\n  def edit\n    super\n    @token = params[:token]\n  end\n\n  def update\n    super\n    @user.update_attribute(:reset_password_sent_at, Time.zone.now)\n  end\nend\n```\nThis controller inherits from Devise's `PasswordsController` and overrides the `show`, `edit`, and `update` actions.\n\n**Step 7: Create password reset views**\n\nCreate a new file `app/views/users/password_reset/new.html.erb` with the following code:\n```erb\n<h1>Password Reset</h1>\n\n<%= form_for(resource, as: resource_name, url: { action: \"create\" }, method: \"post\") do |f| %>\n  <%= f.label :email %>\n  <%= f.email_field :email %>\n  <%= f.submit \"Reset Password\", class: \"btn btn-primary\" %>\n<% end %>\n```\nThis view generates a form for the user to enter their email address.\n\n**Step 8: Create password reset confirmation views**\n\nCreate a new file `app/views/users/password_reset/edit.html.erb` with the following code:\n```erb\n<h1>Password Reset Confirmation</h1>\n\n<%= form_for(resource, as: resource_name, url: { action: \"update\" }, method: \"patch\") do |f| %>\n  <%= f.label :password %>\n  <%= f.password_field :password %>\n  <%= f.label :password_confirmation %>\n  <%= f.password_field :password_confirmation %>\n  <%= f.submit \"Update Password\", class: \"btn btn-primary\" %>\n<% end %>\n```\nThis view generates a form for the user to enter their new password.\n\nThat's it! You can now use the `reset_password` functionality in your Rails app. When a user requests a password reset, they will be sent an email with a token that allows them to reset their password.\n\nExample usage:\n\n1. User requests password reset by clicking on \"Forgot Password\" link.\n2. User enters their email address and submits form.\n3. Email is sent to user's email address with token.\n4. User clicks on token in email, which redirects them to the `edit` action of the `PasswordResetController`.\n5. User enters new password and confirms it by submitting form.\n6. Password is updated successfully.\n\nNote that this is a basic example and you may want to add additional security measures (e.g., rate limiting for password reset requests) or customize the views and controller actions to fit your app's needs.", "code_blocks": ["```ruby\ngem 'devise'\n```", null, "```ruby\nDevise.setup do |config|\n  config.mailer_sender = 'your_email@example.com'\nend\n```", null, "```ruby\ndevise_for :users, path_names: { sign_in: \"login\", sign_out: \"logout\" }\n```", "```ruby\nclass Users::PasswordResetController < Devise::PasswordsController\n  def show\n    user = User.find_by(email: params[:email])\n    if user && !user.activated?\n      flash.now[:alert] = \"Your account is not activated yet.\"\n      return render :new\n    end\n  end\n\n  def edit\n    super\n    @token = params[:token]\n  end\n\n  def update\n    super\n    @user.update_attribute(:reset_password_sent_at, Time.zone.now)\n  end\nend\n```", null, null]}
