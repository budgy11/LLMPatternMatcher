{"prompt": "Create a login using Ruby on Rails", "llm_output": "Here is an example of how to create a simple login system using Ruby on Rails:\n\n**Step 1: Generate the scaffold**\n\nRun the following command in your terminal:\n```bash\nrails generate scaffold User name:string email:string password:string\n```\nThis will create a new model, controller, and views for a `User` resource.\n\n**Step 2: Configure authentication**\n\nIn your `config/initializers/session_store.rb` file, add the following code to configure the session store:\n```ruby\nRails.application.config.session_store :cookie_store, key: '_myapp_session'\n```\nThis will store user sessions in a cookie.\n\n**Step 3: Create authentication controller**\n\nCreate a new file called `authentications_controller.rb` in your `controllers` directory:\n```ruby\nclass AuthenticationsController < ApplicationController\n  def create\n    @user = User.find_by(email: params[:email])\n    if @user && @user.authenticate(params[:password])\n      session[:user_id] = @user.id\n      redirect_to root_url, notice: \"Logged in successfully\"\n    else\n      render :new\n    end\n  end\n\n  def new\n    @user = User.new\n  end\n\n  def destroy\n    session[:user_id] = nil\n    redirect_to root_url, notice: \"Logged out successfully\"\n  end\nend\n```\nThis controller handles user authentication and login/logout functionality.\n\n**Step 4: Create authentication routes**\n\nIn your `config/routes.rb` file, add the following code to define authentication routes:\n```ruby\nRails.application.routes.draw do\n  resources :users\n  post '/login', to: 'authentications#create'\n  get '/logout', to: 'authentications#destroy'\nend\n```\nThis defines a new route for login and logout.\n\n**Step 5: Create user model**\n\nIn your `app/models/user.rb` file, add the following code to define the User model:\n```ruby\nclass User < ApplicationRecord\n  has_secure_password\n\n  validates :name, presence: true\n  validates :email, presence: true, uniqueness: true\nend\n```\nThis defines a simple user model with secure password hashing.\n\n**Step 6: Create login form**\n\nCreate a new file called `new.html.erb` in your `app/views/authentications` directory:\n```erb\n<h1>Login</h1>\n\n<%= form_tag '/login' do %>\n  <%= label_tag :email, 'Email:' %>\n  <%= text_field_tag :email %>\n\n  <%= label_tag :password, 'Password:' %>\n  <%= password_field_tag :password %>\n\n  <%= submit_tag 'Login' %>\n<% end %>\n```\nThis creates a simple login form.\n\n**Step 7: Create logout link**\n\nIn your `app/views/layouts/application.html.erb` file, add the following code to create a logout link:\n```erb\n<nav>\n  <% if session[:user_id] %>\n    <%= link_to 'Logout', '/logout' %>\n  <% else %>\n    <%= link_to 'Login', '/login' %>\n  <% end %>\n</nav>\n```\nThis creates a logout link for logged-in users.\n\nThat's it! You now have a simple login system using Ruby on Rails.", "code_blocks": [null, "```ruby\nRails.application.config.session_store :cookie_store, key: '_myapp_session'\n```", "```ruby\nclass AuthenticationsController < ApplicationController\n  def create\n    @user = User.find_by(email: params[:email])\n    if @user && @user.authenticate(params[:password])\n      session[:user_id] = @user.id\n      redirect_to root_url, notice: \"Logged in successfully\"\n    else\n      render :new\n    end\n  end\n\n  def new\n    @user = User.new\n  end\n\n  def destroy\n    session[:user_id] = nil\n    redirect_to root_url, notice: \"Logged out successfully\"\n  end\nend\n```", "```ruby\nRails.application.routes.draw do\n  resources :users\n  post '/login', to: 'authentications#create'\n  get '/logout', to: 'authentications#destroy'\nend\n```", "```ruby\nclass User < ApplicationRecord\n  has_secure_password\n\n  validates :name, presence: true\n  validates :email, presence: true, uniqueness: true\nend\n```", null, null]}
