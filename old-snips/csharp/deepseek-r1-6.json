{"prompt": "Create a search function using csharp", "llm_output": "\n\nHere\u2019s an example of a custom `Search` function written in C#:\n\n```csharp\nusing System;\n\npublic class Util\n{\n    public static bool Search(int[] array, int value)\n    {\n        for (int i = 0; i < array.Length; i++)\n        {\n            if (array[i] == value)\n                return true;\n        }\n        return false;\n    }\n}\n```\n\n### Explanation:\n- The `Search` function takes two parameters: an integer array (`int[] array`) and an integer to search for (`int value`).\n- It iterates through each element of the array using a `for` loop.\n- For each element, it checks if the current element is equal to the value we're searching for.\n- If a match is found, the function returns `true`.\n- If the loop completes without finding a match, the function returns `false`.\n\n### Example Usage:\n```csharp\nint[] numbers = { 10, 20, 30, 40, 50 };\nbool found = Util.Search(numbers, 30);   // Returns true\n\nint[] moreNumbers = { 1, 2, 3 };\nbool notFound = Util.Search(moreNumbers, 4); // Returns false\n```\n\nThis function returns `true` if the value is found in the array and `false` otherwise.", "code_blocks": ["```csharp\nusing System;\n\npublic class Util\n{\n    public static bool Search(int[] array, int value)\n    {\n        for (int i = 0; i < array.Length; i++)\n        {\n            if (array[i] == value)\n                return true;\n        }\n        return false;\n    }\n}\n```", "```csharp\nint[] numbers = { 10, 20, 30, 40, 50 };\nbool found = Util.Search(numbers, 30);   // Returns true\n\nint[] moreNumbers = { 1, 2, 3 };\nbool notFound = Util.Search(moreNumbers, 4); // Returns false\n```"]}
