{"prompt": "Implement a CORS Policy using php", "llm_output": "To implement a Cross-Origin Resource Sharing (CORS) policy in PHP, you can use the `header()` function to add CORS headers to your HTTP responses. Here's an example of how to do it for various scenarios:\n\n### 1. Allow All Origins\n\nIf you want to allow all origins to access your API, you can set the following headers:\n\n```php\n<?php\nheader('Access-Control-Allow-Origin: *');\nheader('Access-Control-Allow-Methods: GET, POST, PUT, DELETE, OPTIONS');\nheader('Access-Control-Allow-Headers: Content-Type, Authorization');\n\n// Rest of your code...\n?>\n```\n\n### 2. Allow Specific Origins\n\nIf you want to allow only specific origins (domains) to access your API:\n\n```php\n<?php\n$allowedOrigins = array('http://example1.com', 'http://example2.com');\nheader('Access-Control-Allow-Origin: ' . implode(',', $allowedOrigins));\n// Rest of the CORS headers...\n?>\n```\n\n### 3. Allow Custom Headers\n\nIf you want to allow custom headers in addition to `Content-Type` and `Authorization`, you can list them as follows:\n\n```php\n<?php\n$allowedHeaders = array('X-Custom-Header', 'Accept');\nheader('Access-Control-Allow-Headers: Content-Type, Authorization, ' . implode(',', $allowedHeaders));\n// Rest of the CORS headers...\n?>\n```\n\n### 4. Handling Preflight (OPTIONS) Requests\n\nTo handle preflight requests, which are made by clients to check if a request is allowed according to the CORS policy, you can add an `if` statement around your CORS headers:\n\n```php\n<?php\nif ($_SERVER['REQUEST_METHOD'] == 'OPTIONS') {\n    header('Access-Control-Allow-Origin: *');\n    // Rest of the CORS headers...\n    exit;\n}\n\n// Your API code here...\n?>\n```\n\n### Example with Specific Allowed Origins and Methods\n\nThis example demonstrates a basic CORS policy setup for specific origins and methods:\n\n```php\n<?php\n$allowedOrigins = array('http://example1.com', 'http://example2.com');\n$allowedMethods = array('GET', 'POST');\n\nheader('Access-Control-Allow-Origin: ' . implode(',', $allowedOrigins));\nheader('Access-Control-Allow-Methods: ' . implode(',', $allowedMethods));\n\nif ($_SERVER['REQUEST_METHOD'] == 'OPTIONS') {\n    exit;\n}\n\n// API code here...\n?>\n```\n\n### Important Considerations\n\n- **Don't Forget to Exit After Handling CORS Preflight Requests:** If you're handling preflight requests, make sure your script exits after setting the necessary headers. This prevents the client from making additional requests with the OPTIONS method.\n- **Be Careful with Wildcards:** Using `*` for allowed origins can pose security risks if not managed properly. It's generally safer to restrict access by domain or IP address.\n\nRemember that CORS policy is just one aspect of securing your API. Always implement other necessary measures like authentication, authorization, and input validation.", "code_blocks": ["```php\n<?php\nheader('Access-Control-Allow-Origin: *');\nheader('Access-Control-Allow-Methods: GET, POST, PUT, DELETE, OPTIONS');\nheader('Access-Control-Allow-Headers: Content-Type, Authorization');\n\n// Rest of your code...\n?>\n```", "```php\n<?php\n$allowedOrigins = array('http://example1.com', 'http://example2.com');\nheader('Access-Control-Allow-Origin: ' . implode(',', $allowedOrigins));\n// Rest of the CORS headers...\n?>\n```", "```php\n<?php\n$allowedHeaders = array('X-Custom-Header', 'Accept');\nheader('Access-Control-Allow-Headers: Content-Type, Authorization, ' . implode(',', $allowedHeaders));\n// Rest of the CORS headers...\n?>\n```", "```php\n<?php\nif ($_SERVER['REQUEST_METHOD'] == 'OPTIONS') {\n    header('Access-Control-Allow-Origin: *');\n    // Rest of the CORS headers...\n    exit;\n}\n\n// Your API code here...\n?>\n```", "```php\n<?php\n$allowedOrigins = array('http://example1.com', 'http://example2.com');\n$allowedMethods = array('GET', 'POST');\n\nheader('Access-Control-Allow-Origin: ' . implode(',', $allowedOrigins));\nheader('Access-Control-Allow-Methods: ' . implode(',', $allowedMethods));\n\nif ($_SERVER['REQUEST_METHOD'] == 'OPTIONS') {\n    exit;\n}\n\n// API code here...\n?>\n```"]}
