null
"```php
<?php
// register.php
$host = 'localhost';
$db   = 'login_db';
$user = 'login_user';
$pass = 'password';

$conn = new mysqli($host, $user, $pass, $db);

if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    $username = $_POST['username'];
    
    // Check if user already exists
    $stmt = $conn->prepare(\"SELECT id FROM users WHERE username = ?\");
    $stmt->bind_param('s', $username);
    $stmt->execute();
    $stmt->store_result();
    
    if ($stmt->num_rows() > 0) {
        die(\"Username already exists!\");
    }
    
    // Hash the password (uses MySQL PASSWORD() function)
    $hashed_password = password_hash($_POST['password'], PASSWORD_DEFAULT); 
    
    $stmt = $conn->prepare(\"INSERT INTO users (username, password) VALUES (?, ?)\");
    $stmt->bind_param('ss', $username, $hashed_password);
    
    if ($stmt->execute()) {
        header(\"Location: login.php\");
        exit();
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Registration</title>
</head>
<body>
    <form method=\"post\">
        Username: <input type=\"text\" name=\"username\"><br>
        Password: <input type=\"password\" name=\"password\"><br>
        <input type=\"submit\" value=\"Register\">
    </form>
</body>
</html>
```"
"```php
<?php
// login.php
session_start();
$host = 'localhost';
$db   = 'login_db';
$user = 'login_user';
$pass = 'password';

$conn = new mysqli($host, $user, $pass, $db);

if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    $username = $_POST['username'];
    
    // Get user data
    $stmt = $conn->prepare(\"SELECT username, password FROM users WHERE username = ?\");
    $stmt->bind_param('s', $username);
    $stmt->execute();
    $stmt->store_result();
    
    if ($stmt->num_rows() === 1) {
        $stmt->bind_result($db_username, $db_password);
        $stmt->fetch();
        
        // Verify hashed password
        if (password_verify($_POST['password'], $db_password)) {
            $_SESSION['username'] = $db_username;
            header(\"Location: dashboard.php\");
            exit();
        }
    }
    
    die(\"Invalid username or password!\");
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login</title>
</head>
<body>
    <form method=\"post\">
        Username: <input type=\"text\" name=\"username\"><br>
        Password: <input type=\"password\" name=\"password\"><br>
        <input type=\"submit\" value=\"Login\">
    </form>
</body>
</html>
```"
"```php
<?php
// dashboard.php
session_start();
if (!isset($_SESSION['username'])) {
    die(\"Access denied!\");
}

echo \"<h1>Welcome, \" . $_SESSION['username'] . \"</h1>\";
?>

<!DOCTYPE html>
<html>
<head>
    <title>Dashboard</title>
</head>
<body>
    <?php if (isset($_SESSION['user_id'])): ?>
        <p>You are logged in!</p>
        <a href=\"logout.php\">Logout</a>
    <?php endif; ?>
</body>
</html>
```"
"```php
<?php
// logout.php
session_start();
unset($_SESSION['username']);
session_destroy();
header(\"Location: login.php\");
exit();
?>
```"
"```php
// Better approach: Use prepared statements properly
$stmt = $conn->prepare(\"SELECT id, username, password FROM users WHERE username = ?\");
$conn->real_connect($host, $user, $pass, $db); // Explicit connection
```"
"```php
// Add anti-token field to forms in login.php/register.php
$token = bin2hex(random_bytes(32));
$_SESSION['csrf_token'] = $token;
?>
<input type=\"hidden\" name=\"csrf_token\" value=\"<?=htmlspecialchars($token)?>\">
```"
"```php
// Add proper error messages without exposing user data
$errors[] = \"Invalid username or password!\";
```"
"```php
<?php
$password_hash = password_hash($_POST['password'], PASSWORD_BCRYPT);
// ... rest of code remains similar but uses BCRYPT instead
?>
```"
"```php
<?php
if (!password_verify($_POST['password'], $db_password)) {
    die(\"Invalid credentials\");
}
?>
```"
