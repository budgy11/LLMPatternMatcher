{"prompt": "Create a search function using ruby", "llm_output": "Certainly! Here's a simple example of a search function in Ruby. Suppose you have an array of items, and you want to find an item that matches a specific criterion or keyword.\n\n### Example: Search Function in Ruby\n\n```ruby\ndef search(items, query)\n  # Use the select method to find all items that include the query\n  results = items.select { |item| item.downcase.include?(query.downcase) }\n  return results\nend\n\n# Example usage\nitems = [\"Apple\", \"Banana\", \"Cherry\", \"Date\", \"Elderberry\"]\nsearch_term = \"an\"\n\nmatches = search(items, search_term)\nputs \"Items matching '#{search_term}':\"\nputs matches\n```\n\n### Explanation:\n- The `search` method takes an array `items` and a `query`.\n- It searches for all items that include the `query` (case-insensitive).\n- It returns an array of matching items.\n- In the example, it searches for `\"an\"`, which matches `\"Banana\"`.\n\n### Output:\n```\nItems matching 'an':\nBanana\n```\n\n---\n\n### Custom Search Function for Hashes\nIf you're searching through more complex data, like an array of hashes:\n\n```ruby\ndef search_users(users, keyword)\n  users.select do |user|\n    user.values.any? { |value| value.to_s.downcase.include?(keyword.downcase) }\n  end\nend\n\n# Example usage:\nusers = [\n  { name: \"Alice\", email: \"alice@example.com\" },\n  { name: \"Bob\", email: \"bob@example.com\" },\n  { name: \"Charlie\", email: \"charlie@domain.com\" }\n]\n\nresults = search_users(users, \"bob\")\nputs results\n```\n\n---\n\nIf you'd like a different kind of search function or have a specific data structure in mind, please provide more details!", "code_blocks": ["```ruby\ndef search(items, query)\n  # Use the select method to find all items that include the query\n  results = items.select { |item| item.downcase.include?(query.downcase) }\n  return results\nend\n\n# Example usage\nitems = [\"Apple\", \"Banana\", \"Cherry\", \"Date\", \"Elderberry\"]\nsearch_term = \"an\"\n\nmatches = search(items, search_term)\nputs \"Items matching '#{search_term}':\"\nputs matches\n```", null, "```ruby\ndef search_users(users, keyword)\n  users.select do |user|\n    user.values.any? { |value| value.to_s.downcase.include?(keyword.downcase) }\n  end\nend\n\n# Example usage:\nusers = [\n  { name: \"Alice\", email: \"alice@example.com\" },\n  { name: \"Bob\", email: \"bob@example.com\" },\n  { name: \"Charlie\", email: \"charlie@domain.com\" }\n]\n\nresults = search_users(users, \"bob\")\nputs results\n```"]}
