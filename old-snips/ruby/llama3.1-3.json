{"prompt": "Create a forgot password function using ruby", "llm_output": "Here is an example of how you can implement a \"forgot password\" function in Ruby. This will send an email with a temporary link to reset the user's password.\n\nFirst, we'll create a User model that has attributes for `email` and `password_hash`. We'll also add methods to generate a new password hash when the user resets their password.\n\n```ruby\n# models/user.rb\n\nclass User < ApplicationRecord\n  attr_accessor :email, :password\n\n  def self.generate_password\n    SecureRandom.hex(12)\n  end\n\n  def change_password(new_password)\n    @password = new_password\n    update_attribute(:password_hash, Digest::SHA256.base64digest(@password))\n  end\nend\n```\n\nNext, we'll create a controller to handle the forgot password form and email.\n\n```ruby\n# controllers/passwords_controller.rb\n\nclass PasswordsController < ApplicationController\n  def new\n    @user = User.new\n  end\n\n  def reset_password\n    # Get user from database by email\n    user = User.find_by(email: params[:email])\n\n    if user && user.email == params[:email]\n      # Generate a temporary password and send it to the user's email\n      temp_password = User.generate_password\n      user.change_password(temp_password)\n\n      # Send an email with the temporary link to reset the password\n      UserMailer.reset_password_email(user).deliver_now\n\n      redirect_to root_path, notice: \"Email sent successfully!\"\n    else\n      flash[:error] = \"No account found for this email\"\n      render action: :new\n    end\n  end\nend\n```\n\nWe'll also create a mailer to send the reset password email.\n\n```ruby\n# mailers/user_mailer.rb\n\nclass UserMailer < ApplicationMailer\n  def reset_password_email(user)\n    @user = user\n    mail(to: user.email, subject: \"Reset Password\")\n  end\nend\n```\n\nFinally, we'll add routes for the forgot password form and email.\n\n```ruby\n# config/routes.rb\n\nRails.application.routes.draw do\n  get '/forgot-password', to: 'passwords#new'\n  post '/reset-password', to: 'passwords#reset_password'\nend\n```\n\nNow you can access the forgot password form at `/forgot-password` and submit a request for a temporary link to reset your password.\n\nRemember to replace `UserMailer` with your actual mailer class, and adjust the routes according to your application's structure.", "code_blocks": ["```ruby\n# models/user.rb\n\nclass User < ApplicationRecord\n  attr_accessor :email, :password\n\n  def self.generate_password\n    SecureRandom.hex(12)\n  end\n\n  def change_password(new_password)\n    @password = new_password\n    update_attribute(:password_hash, Digest::SHA256.base64digest(@password))\n  end\nend\n```", "```ruby\n# controllers/passwords_controller.rb\n\nclass PasswordsController < ApplicationController\n  def new\n    @user = User.new\n  end\n\n  def reset_password\n    # Get user from database by email\n    user = User.find_by(email: params[:email])\n\n    if user && user.email == params[:email]\n      # Generate a temporary password and send it to the user's email\n      temp_password = User.generate_password\n      user.change_password(temp_password)\n\n      # Send an email with the temporary link to reset the password\n      UserMailer.reset_password_email(user).deliver_now\n\n      redirect_to root_path, notice: \"Email sent successfully!\"\n    else\n      flash[:error] = \"No account found for this email\"\n      render action: :new\n    end\n  end\nend\n```", "```ruby\n# mailers/user_mailer.rb\n\nclass UserMailer < ApplicationMailer\n  def reset_password_email(user)\n    @user = user\n    mail(to: user.email, subject: \"Reset Password\")\n  end\nend\n```", "```ruby\n# config/routes.rb\n\nRails.application.routes.draw do\n  get '/forgot-password', to: 'passwords#new'\n  post '/reset-password', to: 'passwords#reset_password'\nend\n```"]}
