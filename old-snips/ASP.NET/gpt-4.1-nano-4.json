{"prompt": "Create a login using ASP.NET", "llm_output": "Certainly! Here's a simple example of creating a login page using ASP.NET with Web Forms. This example includes a login form and basic validation.\n\n---\n\n### Step 1: Create a new ASP.NET Web Application\n\nOpen Visual Studio:\n- Select **File** > **New** > **Project**\n- Choose **ASP.NET Web Application (.NET Framework)**\n- Select **Web Forms** template\n- Name your project and click **Create**\n\n---\n\n### Step 2: Add the Login Page (`Login.aspx`)\n\nIn the **Solution Explorer**, right-click on the project:\n- Select **Add** > **New Item**\n- Choose **Web Form** and name it `Login.aspx`\n\n---\n\n### Step 3: Design the Login Form in `Login.aspx`\n\nReplace the default markup with the following:\n\n```html\n<%@ Page Language=\"C#\" AutoEventWireup=\"true\" CodeFile=\"Login.aspx.cs\" Inherits=\"Login\" %>\n\n<!DOCTYPE html>\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head runat=\"server\">\n    <title>Login Page</title>\n</head>\n<body>\n    <form id=\"loginForm\" runat=\"server\">\n        <h2>Login</h2>\n        <asp:Label ID=\"lblMessage\" runat=\"server\" ForeColor=\"Red\"></asp:Label><br /><br />\n\n        <asp:Label ID=\"lblUsername\" runat=\"server\" Text=\"Username:\"></asp:Label>\n        <asp:TextBox ID=\"txtUsername\" runat=\"server\"></asp:TextBox><br /><br />\n\n        <asp:Label ID=\"lblPassword\" runat=\"server\" Text=\"Password:\"></asp:Label>\n        <asp:TextBox ID=\"txtPassword\" runat=\"server\" TextMode=\"Password\"></asp:TextBox><br /><br />\n\n        <asp:Button ID=\"btnLogin\" runat=\"server\" Text=\"Login\" OnClick=\"btnLogin_Click\" />\n    </form>\n</body>\n</html>\n```\n\n---\n\n### Step 4: Handle Login Logic in `Login.aspx.cs`\n\nOpen the code-behind file and add logic for login:\n\n```csharp\nusing System;\n\npublic partial class Login : System.Web.UI.Page\n{\n    protected void btnLogin_Click(object sender, EventArgs e)\n    {\n        string username = txtUsername.Text.Trim();\n        string password = txtPassword.Text.Trim();\n\n        // Example: Hardcoded credentials for demonstration\n        if (username == \"admin\" && password == \"password123\")\n        {\n            // Successful login, redirect to a protected page\n            Response.Redirect(\"Default.aspx\");\n        }\n        else\n        {\n            // Invalid login\n            lblMessage.Text = \"Invalid username or password.\";\n        }\n    }\n}\n```\n\n---\n\n### Step 5: Create a Default Page (`Default.aspx`) (optional)\n\nAdd a new Web Form named `Default.aspx` which serves as the landing page after login.\n\n```html\n<%@ Page Language=\"C#\" AutoEventWireup=\"true\" CodeFile=\"Default.aspx.cs\" Inherits=\"Default\" %>\n\n<!DOCTYPE html>\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head runat=\"server\">\n    <title>Welcome</title>\n</head>\n<body>\n    <h2>Welcome to the protected page!</h2>\n    <p>You are logged in.</p>\n</body>\n</html>\n```\n\n---\n\n### Summary:\n- You have a login form with username and password fields.\n- When the user clicks login, the server checks credentials (hardcoded in this example).\n- On success, redirects to a protected page (`Default.aspx`).\n- On failure, an error message displays.\n\n---\n\n### Next steps:\n- Secure credentials with a database.\n- Implement session management.\n- Add features like password hashing, user registration, etc.\n\nLet me know if you'd like help extending this example!", "code_blocks": [null, "```csharp\nusing System;\n\npublic partial class Login : System.Web.UI.Page\n{\n    protected void btnLogin_Click(object sender, EventArgs e)\n    {\n        string username = txtUsername.Text.Trim();\n        string password = txtPassword.Text.Trim();\n\n        // Example: Hardcoded credentials for demonstration\n        if (username == \"admin\" && password == \"password123\")\n        {\n            // Successful login, redirect to a protected page\n            Response.Redirect(\"Default.aspx\");\n        }\n        else\n        {\n            // Invalid login\n            lblMessage.Text = \"Invalid username or password.\";\n        }\n    }\n}\n```", null]}
