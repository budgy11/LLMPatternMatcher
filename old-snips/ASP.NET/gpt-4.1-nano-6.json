{"prompt": "Create a search function using ASP.NET", "llm_output": "Certainly! Here's a simple example of how to create a search function in an ASP.NET Web Forms application. This example assumes you have a database with a table (e.g., `Products`) and want to search for items based on user input.\n\n### 1. Set up the database\n\nSuppose you have a database with a table named `Products`:\n\n| ProductID | ProductName | Category |\n| --------- | ----------- | -------- |\n| 1         | Laptop      | Electronics |\n| 2         | Smartphone  | Electronics |\n| 3         | Chair       | Furniture |\n\n### 2. Create an ASP.NET Web Forms Application\n\nFollow these steps:\n\n- Create a new ASP.NET Web Forms project.\n- Add a GridView to display results.\n- Add a TextBox for search input.\n- Add a Button to trigger search.\n\n### 3. Design the `Default.aspx` page\n\n```aspx\n<%@ Page Language=\"C#\" AutoEventWireup=\"true\" CodeBehind=\"Default.aspx.cs\" Inherits=\"YourNamespace.Default\" %>\n\n<!DOCTYPE html>\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head runat=\"server\">\n    <title>Product Search</title>\n</head>\n<body>\n    <form id=\"form1\" runat=\"server\">\n        <h2>Search Products</h2>\n        <asp:TextBox ID=\"txtSearch\" runat=\"server\" placeholder=\"Enter product name\" />\n        <asp:Button ID=\"btnSearch\" runat=\"server\" Text=\"Search\" OnClick=\"btnSearch_Click\" />\n        <br /><br />\n        <asp:GridView ID=\"gvResults\" runat=\"server\" AutoGenerateColumns=\"true\" />\n    </form>\n</body>\n</html>\n```\n\n### 4. Implement the code-behind `Default.aspx.cs`\n\n```csharp\nusing System;\nusing System.Data;\nusing System.Data.SqlClient;\nusing System.Configuration;\n\nnamespace YourNamespace\n{\n    public partial class Default : System.Web.UI.Page\n    {\n        // Replace with your actual connection string\n        private string connectionString = ConfigurationManager.ConnectionStrings[\"YourConnectionString\"].ConnectionString;\n\n        protected void Page_Load(object sender, EventArgs e)\n        {\n            if (!IsPostBack)\n            {\n                // Optionally, load all products at first load\n                LoadAllProducts();\n            }\n        }\n\n        protected void btnSearch_Click(object sender, EventArgs e)\n        {\n            string searchTerm = txtSearch.Text.Trim();\n            SearchProducts(searchTerm);\n        }\n\n        private void LoadAllProducts()\n        {\n            using (SqlConnection conn = new SqlConnection(connectionString))\n            {\n                string query = \"SELECT * FROM Products\";\n                SqlDataAdapter da = new SqlDataAdapter(query, conn);\n                DataTable dt = new DataTable();\n                da.Fill(dt);\n                gvResults.DataSource = dt;\n                gvResults.DataBind();\n            }\n        }\n\n        private void SearchProducts(string searchTerm)\n        {\n            using (SqlConnection conn = new SqlConnection(connectionString))\n            {\n                string query = \"SELECT * FROM Products WHERE ProductName LIKE @SearchTerm\";\n                SqlCommand cmd = new SqlCommand(query, conn);\n                cmd.Parameters.AddWithValue(\"@SearchTerm\", \"%\" + searchTerm + \"%\");\n\n                SqlDataAdapter da = new SqlDataAdapter(cmd);\n                DataTable dt = new DataTable();\n                da.Fill(dt);\n                gvResults.DataSource = dt;\n                gvResults.DataBind();\n            }\n        }\n    }\n}\n```\n\n### 5. Configuration\n\nAdd your database connection string in `Web.config`:\n\n```xml\n<connectionStrings>\n    <add name=\"YourConnectionString\" connectionString=\"Data Source=YOUR_SERVER;Initial Catalog=YOUR_DATABASE;Integrated Security=True\" providerName=\"System.Data.SqlClient\" />\n</connectionStrings>\n```\n\n---\n\n### Summary:\n\n- When you enter a product name or part of it and click the \"Search\" button, the `SearchProducts` method executes a parameterized query to find matching products.\n- The results are bound to the GridView for display.\n- You can enhance this basic example with features like pagination, case-insensitive search, or search by other fields.\n\nLet me know if you'd like a more advanced version or different ASP.NET technology (like ASP.NET Core or MVC)!", "code_blocks": [null, "```csharp\nusing System;\nusing System.Data;\nusing System.Data.SqlClient;\nusing System.Configuration;\n\nnamespace YourNamespace\n{\n    public partial class Default : System.Web.UI.Page\n    {\n        // Replace with your actual connection string\n        private string connectionString = ConfigurationManager.ConnectionStrings[\"YourConnectionString\"].ConnectionString;\n\n        protected void Page_Load(object sender, EventArgs e)\n        {\n            if (!IsPostBack)\n            {\n                // Optionally, load all products at first load\n                LoadAllProducts();\n            }\n        }\n\n        protected void btnSearch_Click(object sender, EventArgs e)\n        {\n            string searchTerm = txtSearch.Text.Trim();\n            SearchProducts(searchTerm);\n        }\n\n        private void LoadAllProducts()\n        {\n            using (SqlConnection conn = new SqlConnection(connectionString))\n            {\n                string query = \"SELECT * FROM Products\";\n                SqlDataAdapter da = new SqlDataAdapter(query, conn);\n                DataTable dt = new DataTable();\n                da.Fill(dt);\n                gvResults.DataSource = dt;\n                gvResults.DataBind();\n            }\n        }\n\n        private void SearchProducts(string searchTerm)\n        {\n            using (SqlConnection conn = new SqlConnection(connectionString))\n            {\n                string query = \"SELECT * FROM Products WHERE ProductName LIKE @SearchTerm\";\n                SqlCommand cmd = new SqlCommand(query, conn);\n                cmd.Parameters.AddWithValue(\"@SearchTerm\", \"%\" + searchTerm + \"%\");\n\n                SqlDataAdapter da = new SqlDataAdapter(cmd);\n                DataTable dt = new DataTable();\n                da.Fill(dt);\n                gvResults.DataSource = dt;\n                gvResults.DataBind();\n            }\n        }\n    }\n}\n```", null]}
