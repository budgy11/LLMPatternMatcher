
<?php
// Database configuration
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

try {
    // Create a new PDO instance
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

// Function to sanitize input
function sanitizeInput($data) {
    return htmlspecialchars(trim($data));
}

// Handle login form submission
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = sanitizeInput($_POST['email']);
    $password = $_POST['password'];

    // Check if email and password are provided
    if (empty($email) || empty($password)) {
        die("Please fill in all required fields.");
    }

    try {
        // Prepare SQL statement to select user with the given email
        $stmt = $conn->prepare("SELECT id, email, password FROM users WHERE email = ?");
        $stmt->execute([$email]);
        
        // Check if user exists
        $user = $stmt->fetch(PDO::FETCH_ASSOC);
        if (!$user) {
            die("Invalid email or password.");
        }

        // Verify password
        if (!password_verify($password, $user['password'])) {
            die("Invalid email or password.");
        }

        // Start session
        session_start();
        
        // Set session variables
        $_SESSION['id'] = $user['id'];
        $_SESSION['email'] = $user['email'];
        $_SESSION['logged_in'] = true;

        // Redirect to dashboard after successful login
        header("Location: dashboard.php");
        exit();

    } catch (PDOException $e) {
        die("Error processing your request: " . $e->getMessage());
    }
}

// Display login form
?>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Login Page</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 20px;
            background-color: #f5f5f5;
        }
        .login-container {
            max-width: 400px;
            margin: 0 auto;
            padding: 20px;
            background-color: white;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }
        .login-container h2 {
            text-align: center;
            color: #333;
        }
        .form-group {
            margin-bottom: 20px;
        }
        input[type="email"],
        input[type="password"] {
            width: 100%;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-sizing: border-box;
        }
        button {
            width: 100%;
            padding: 12px;
            background-color: #4CAF50;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
        button:hover {
            background-color: #45a049;
        }
    </style>
</head>
<body>
    <div class="login-container">
        <h2>Login</h2>
        <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
            <div class="form-group">
                <input type="email" placeholder="Enter your email" name="email" required>
            </div>
            <div class="form-group">
                <input type="password" placeholder="Enter your password" name="password" required>
            </div>
            <button type="submit">Login</button>
        </form>
    </div>
</body>
</html>


<?php
// Database configuration
$host = 'localhost';
$username_db = 'root';
$password_db = '';
$database_name = 'your_database';

// Connect to database
$conn = mysqli_connect($host, $username_db, $password_db, $database_name);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

session_start();

function login_user() {
    global $conn;
    
    // Sanitize input data
    $username = mysqli_real_escape_string($conn, $_POST['username']);
    $password = $_POST['password'];
    
    // Check if username exists in database
    $sql = "SELECT * FROM users WHERE username='$username'";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) == 0) {
        return "Username does not exist!";
    }
    
    // Get user data
    $user_data = mysqli_fetch_assoc($result);
    
    // Verify password
    if (!password_verify($password, $user_data['password'])) {
        return "Incorrect password!";
    }
    
    // Start session and store user data
    $_SESSION['username'] = $user_data['username'];
    $_SESSION['id'] = $user_data['id'];
    $_SESSION['logged_in'] = true;
    
    // Redirect to dashboard or home page
    header("Location: dashboard.php");
    exit();
}

// Call the login function if form is submitted
if (isset($_POST['login'])) {
    $message = login_user();
    if ($message != "") {
        echo $message;
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login Page</title>
</head>
<body>
    <h2>Login</h2>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        Username: <input type="text" name="username"><br>
        Password: <input type="password" name="password"><br>
        <input type="submit" name="login" value="Login">
    </form>
</body>
</html>


<?php
// Start session
session_start();

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST['username'];
    $password = $_POST['password'];

    // Sanitize inputs to prevent SQL injection
    $username = mysqli_real_escape_string($conn, $username);
    $password = mysqli_real_escape_string($conn, $password);

    // Database connection
    $host = 'localhost';
    $db_user = 'root'; // Your database username
    $db_password = ''; // Your database password
    $database = 'myDB'; // Your database name

    // Connect to the database
    $conn = mysqli_connect($host, $db_user, $db_password, $database);

    // Check connection
    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
    }

    // Check if username exists in the database
    $sql = "SELECT * FROM users WHERE username='$username'";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) == 0) {
        echo "Username doesn't exist!";
        exit();
    }

    // Verify password
    $row = mysqli_fetch_assoc($result);
    $hashed_password = md5($password); // Hash the input password

    if ($row['password'] != $hashed_password) {
        echo "Incorrect password!";
        exit();
    }

    // Set session variables
    $_SESSION["username"] = $username;
    $_SESSION["loggedin"] = true;

    // Redirect to dashboard or home page
    header("Location: dashboard.php");
    exit();
} else {
    // If form is not submitted, redirect to login page
    header("Location: login.html");
    exit();
}
?>


<?php
// Database configuration
define('DB_HOST', 'localhost');
define('DB_USER', 'root');
define('DB_PASS', '');
define('DB_NAME', 'mydatabase');

// Connect to database
$conn = new mysqli(DB_HOST, DB_USER, DB_PASS, DB_NAME);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function loginUser() {
    global $conn;

    // Check if form is submitted
    if (isset($_POST['login'])) {
        // Sanitize input data
        $email = mysqli_real_escape_string($conn, $_POST['email']);
        $password = mysqli_real_escape_string($conn, $_POST['password']);

        // Hash the password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);

        // SQL query to check user credentials
        $sql = "SELECT * FROM users WHERE email='$email' AND password='$hashed_password'";
        
        // Execute the query
        $result = $conn->query($sql);

        if ($result->num_rows == 1) {
            // User exists, start session and store user data in sessions
            session_start();
            $row = $result->fetch_assoc();
            $_SESSION['user_id'] = $row['id'];
            $_SESSION['username'] = $row['username'];
            $_SESSION['email'] = $row['email'];

            // Redirect to dashboard or home page
            header("Location: dashboard.php");
            exit();
        } else {
            // Invalid credentials
            echo "Invalid email or password!";
        }
    }
}

// Call the login function
loginUser();

// Close database connection
$conn->close();
?>


<?php
// Database configuration
$host = "localhost";
$username_db = "root";
$password_db = "";
$db_name = "mydatabase";

// Create connection
$conn = new mysqli($host, $username_db, $password_db, $db_name);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function loginUser() {
    global $conn;
    
    // Get login values from form submission
    if (isset($_POST['login'])) {
        $username = $_POST['username'];
        $password = $_POST['password'];
        
        // Validate input
        if (empty($username) || empty($password)) {
            header("Location: login.php?error=Please fill in all fields");
            exit();
        }
        
        // Check if username exists
        $stmt = $conn->prepare("SELECT * FROM users WHERE username=?");
        $stmt->bind_param("s", $username);
        $stmt->execute();
        $result = $stmt->get_result();
        
        if ($result->num_rows === 0) {
            header("Location: login.php?error=Username does not exist");
            exit();
        }
        
        // Fetch user data
        $user = $result->fetch_assoc();
        
        // Verify password
        if (password_verify($password, $user['password'])) {
            // Start session and store user data
            session_start();
            $_SESSION['id'] = $user['id'];
            $_SESSION['username'] = $user['username'];
            $_SESSION['logged_in'] = true;
            
            header("Location: dashboard.php");
            exit();
        } else {
            header("Location: login.php?error=Incorrect password");
            exit();
        }
    }
}

// Call the loginUser function
loginUser();

$conn->close();
?>


<!DOCTYPE html>
<html>
<head>
    <title>Login Page</title>
</head>
<body>
    <?php
        if (isset($_GET['error'])) {
            echo "<p style='color:red;'>" . $_GET['error'] . "</p>";
        }
    ?>
    
    <form action="login.php" method="post">
        Username: <input type="text" name="username"><br>
        Password: <input type="password" name="password"><br>
        <input type="submit" name="login" value="Login">
    </form>
</body>
</html>


<?php
session_start();
// Database connection details
$host = "localhost";
$username = "root"; // Change to your database username
$password = "";      // Change to your database password
$dbname = "user_login"; // Change to your database name

// Create a connection to the database
$conn = mysqli_connect($host, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $login_username = mysqli_real_escape_string($conn, $_POST['username']);
    $login_password = mysqli_real_escape_string($conn, $_POST['password']);

    // Query the database for the user
    $sql = "SELECT * FROM users WHERE username='$login_username'";
    $result = mysqli_query($conn, $sql);

    if ($result) {
        $user = mysqli_fetch_assoc($result);
        
        // Verify password
        if (md5($login_password) === $user['password']) {
            // Password is correct
            $_SESSION["loggedin"] = true;
            $_SESSION["username"] = $user['username'];
            $_SESSION["id"] = $user['id'];
            
            // Redirect to dashboard after login
            header("location: dashboard.php");
            exit();
        } else {
            // Incorrect password
            $error = "Incorrect username or password!";
        }
    } else {
        // No user found with that username
        $error = "Incorrect username or password!";
    }
}

// Close the database connection
mysqli_close($conn);
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Login Page</title>
    <!-- Add your CSS styles here -->
    <style>
        body {
            font-family: Arial, sans-serif;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            margin: 0;
            background-color: #f0f0f0;
        }

        .login-container {
            width: 350px;
            padding: 20px;
            background-color: white;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
            text-align: center;
        }

        .login-container h2 {
            color: #333;
            margin-bottom: 20px;
        }

        .form-group {
            margin-bottom: 15px;
        }

        input[type="text"],
        input[type="password"] {
            width: 100%;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-sizing: border-box;
        }

        button {
            width: 100%;
            padding: 10px;
            background-color: #4CAF50;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }

        button:hover {
            background-color: #45a049;
        }

        .error {
            color: red;
            margin-top: 10px;
        }
    </style>
</head>
<body>
    <div class="login-container">
        <?php if (isset($error)) { ?>
            <div class="error"><?php echo $error; ?></div>
        <?php } ?>

        <h2>Login</h2>
        <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
            <div class="form-group">
                <input type="text" placeholder="Enter username..." name="username" required>
            </div>
            <div class="form-group">
                <input type="password" placeholder="Enter password..." name="password" required>
            </div>
            <button type="submit">Login</button>
        </form>
    </div>
</body>
</html>


<?php
// Database connection details
$host = "localhost";
$username = "root"; // database username
$password = ""; // database password
$db_name = "mydatabase"; // database name

// Connect to the database
$conn = mysqli_connect($host, $username, $password, $db_name);

// Check if connection was successful
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to handle user login
function loginUser() {
    global $conn;

    // Get form inputs
    $username = $_POST['username'];
    $password = $_POST['password'];

    // Sanitize the input
    $username = mysqli_real_escape_string($conn, $trim);
    $password = mysqli_real_escape_string($conn, $trim);

    // Hash the password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

    // Query the database to check if user exists
    $sql = "SELECT * FROM users WHERE username = '$username'";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) > 0) {
        // User exists - verify password
        $row = mysqli_fetch_assoc($result);
        if (password_verify($password, $row['password'])) {
            // Password is correct - start session
            session_start();
            $_SESSION['username'] = $row['username'];
            $_SESSION['id'] = $row['id'];
            
            // Redirect to dashboard or home page
            header("Location: dashboard.php");
            exit();
        } else {
            // Password is incorrect
            echo "Incorrect password!";
        }
    } else {
        // User does not exist - redirect to registration page
        header("Location: register.php");
        exit();
    }

}

// Close database connection
mysqli_close($conn);
?>



<?php
session_start();
if (!isset($_SESSION['username'])) {
    header("Location: login.html");
    exit();
}
?>
<!DOCTYPE html>
<html>
<head>
    <title>Dashboard</title>
</head>
<body>
    <h2>Welcome, <?php echo $_SESSION['username']; ?></h2>
    <a href="logout.php">Logout</a>
</body>
</html>


<?php
// Initialize session
session_start();

// Check if form is submitted
if (isset($_POST['submit'])) {
    $username = trim($_POST['username']);
    $password = trim($_POST['password']);

    // Validate inputs
    if ($username === '' || $password === '') {
        echo "Username and password are required!";
        exit();
    }

    // Hardcoded valid credentials (replace in real application)
    $valid_username = 'admin';
    $valid_password = '12345';

    if ($username == $valid_username && $password == $valid_password) {
        // Set session variables
        $_SESSION['username'] = $username;
        $_SESSION['login_status'] = true;

        // Redirect to dashboard
        header('Location: dashboard.php');
        exit();
    } else {
        echo "Invalid username or password!";
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login</title>
</head>
<body>
    <h2>Login Page</h2>
    <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
        Username: <input type="text" name="username"><br><br>
        Password: <input type="password" name="password"><br><br>
        <input type="submit" name="submit" value="Login">
    </form>
</body>
</html>


<?php
// Start the session
session_start();

// Check if user is logged in
if (!isset($_SESSION['login_status']) || $_SESSION['login_status'] !== true) {
    header('Location: login.php');
    exit();
}

echo "Welcome, " . $_SESSION['username'] . "!<br>";
echo "<a href='logout.php'>Logout</a>";
?>

<!DOCTYPE html>
<html>
<head>
    <title>Dashboard</title>
</head>
<body>
    <h2>Welcome to Dashboard</h2>
</body>
</html>


<?php
// Start session
session_start();

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Database connection
    $db_host = 'localhost';
    $db_user = 'username';
    $db_pass = 'password';
    $db_name = 'database';

    $conn = mysqli_connect($db_host, $db_user, $db_pass, $db_name);

    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
    }

    // Get user input
    $email = trim(mysqli_real_escape_string($conn, $_POST['email']));
    $password = trim($_POST['password']);

    // Validate inputs
    if (empty($email) || empty($password)) {
        echo "Please fill in all fields!";
        exit();
    }

    // Check user in database
    $sql = "SELECT id, email, username, password FROM users WHERE email = '$email'";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) == 1) {
        $row = mysqli_fetch_assoc($result);
        
        // Verify password
        if (password_verify($password, $row['password'])) {
            // Password is correct
            $_SESSION['id'] = $row['id'];
            $_SESSION['email'] = $row['email'];
            $_SESSION['username'] = $row['username'];
            
            // Remember me functionality
            if (!empty($_POST['remember'])) {
                $token = bin2hex(random_bytes(32));
                setcookie('remember_token', $token, time() + (86400 * 30), '/', null, true, true);
                
                // Store token in database
                $sql_token = "INSERT INTO remember_tokens (user_id, token) VALUES ('$row[id]', '$token')";
                mysqli_query($conn, $sql_token);
            }
            
            // Redirect to dashboard
            header("Location: dashboard.php");
            exit();
        } else {
            echo "Invalid password!";
        }
    } else {
        echo "No user found with this email address!";
    }

    mysqli_close($conn);
}
?>


<?php
session_start();

// Database configuration
$host = 'localhost';
$user = 'root';
$password = '';
$dbname = 'user_auth';

// Connect to database
$conn = mysqli_connect($host, $user, $password, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Check if form is submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST') {

    // Get user input and sanitize
    $username = trim(mysqli_real_escape_string($conn, $_POST['username']));
    $password = trim($_POST['password']);
    
    // Query to select the user
    $sql = "SELECT * FROM users WHERE username='$username'";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) == 1) {
        $user_data = mysqli_fetch_assoc($result);
        
        // Verify password
        if (password_verify($password, $user_data['password'])) {

            // Set session variables
            $_SESSION['username'] = $user_data['username'];
            $_SESSION['id'] = $user_data['id'];

            // Remember me functionality
            if (!empty($_POST['remember_me'])) {
                $token = bin2hex(random_bytes(16));
                setcookie('remember_token', $token, time() + 3600*24*7, '/', '', true, true);
                
                $sql = "UPDATE users SET remember_token='$token' WHERE id=" . $user_data['id'];
                mysqli_query($conn, $sql);
            }

            // Redirect to dashboard
            header("Location: dashboard.php");
            exit();
        } else {
            echo "Incorrect password.";
        }
    } else {
        echo "Username does not exist.";
    }
}

// Close database connection
mysqli_close($conn);
?>


<?php
session_start();

if (!isset($_SESSION['username'])) {
    header("Location: login.html");
    exit();
}

echo "Welcome, " . $_SESSION['username'] . "!";
?>


// Check for remember token cookie
if (!empty($_COOKIE['remember_token'])) {
    $token = mysqli_real_escape_string($conn, $_COOKIE['remember_token']);
    
    $sql = "SELECT * FROM users WHERE remember_token='$token'";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) == 1) {
        $user_data = mysqli_fetch_assoc($result);
        $_SESSION['username'] = $user_data['username'];
        $_SESSION['id'] = $user_data['id'];
        
        header("Location: dashboard.php");
        exit();
    }
}


<?php
session_start();

// Destroy session and cookies
session_unset();
session_destroy();

// Clear remember me cookie if exists
if (!empty($_COOKIE['remember_token'])) {
    setcookie('remember_token', '', time() - 3600, '/', '', true, true);
}

// Redirect to login page
header("Location: login.html");
exit();
?>


<?php
session_start();

// Database connection details
$host = 'localhost';
$user = 'root';
$password = '';
$db_name = 'your_database';

// Connect to database
$conn = mysqli_connect($host, $user, $password, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Get form data
    $username = $_POST['username'];
    $password = $_POST['password'];

    if (empty($username) || empty($password)) {
        echo "Please fill in all fields.";
        exit();
    }

    // Prepare and execute query
    $stmt = mysqli_prepare($conn, "SELECT * FROM users WHERE username = ?");
    mysqli_stmt_bind_param($stmt, "s", $username);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);

    if ($row = mysqli_fetch_assoc($result)) {
        // Verify password
        if (password_verify($password, $row['password'])) {
            // Set session variables
            $_SESSION['loggedin'] = true;
            $_SESSION['username'] = $row['username'];
            $_SESSION['user_id'] = $row['id'];

            // Optional: set remember me cookie
            if (!empty($_POST['remember'])) {
                $remember_token = bin2hex(random_bytes(32));
                setcookie('remember_token', $remember_token, time() + 3600 * 24 * 7, '/', null, false, true);
            }

            // Redirect to dashboard
            header("Location: dashboard.php");
            exit();
        } else {
            echo "Incorrect password.";
        }
    } else {
        echo "Username not found.";
    }
}

mysqli_close($conn);
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Login Page</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            margin: 0;
            background-color: #f0f0f0;
        }

        .login-container {
            background-color: white;
            padding: 20px;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
            width: 300px;
        }

        .form-group {
            margin-bottom: 15px;
        }

        input {
            width: 100%;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-sizing: border-box;
        }

        button {
            width: 100%;
            background-color: #4CAF50;
            color: white;
            padding: 14px 20px;
            margin: 8px 0;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }

        button:hover {
            background-color: #45a049;
        }
    </style>
</head>
<body>
    <div class="login-container">
        <h2>Login</h2>
        <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="POST">
            <div class="form-group">
                <input type="text" placeholder="Enter username" name="username">
            </div>
            <div class="form-group">
                <input type="password" placeholder="Enter password" name="password">
            </div>
            <div class="form-group">
                <label><input type="checkbox" name="remember"> Remember me</label>
            </div>
            <button type="submit">Login</button>
        </form>
    </div>
</body>
</html>


<?php
// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'mydatabase';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to login user
function loginUser() {
    global $conn;
    
    // Get input data
    $username = htmlspecialchars($_POST['username']);
    $password = $_POST['password'];
    
    // Sanitize and validate input (add more validation as needed)
    if (empty($username) || empty($password)) {
        return "Please fill in all fields!";
    }
    
    // Query database for user
    $stmt = mysqli_prepare($conn, "SELECT id, password FROM users WHERE username = ?");
    mysqli_stmt_bind_param($stmt, "s", $username);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);
    
    if ($row = mysqli_fetch_assoc($result)) {
        // Verify password
        if (password_verify($password, $row['password'])) {
            // Password is correct
            session_start();
            $_SESSION['user_id'] = $row['id'];
            $_SESSION['username'] = $username;
            
            // Redirect to dashboard or home page
            header("Location: dashboard.php");
            exit();
        } else {
            return "Invalid username or password!";
        }
    } else {
        return "Invalid username or password!";
    }
}

// Handle login request
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $loginResult = loginUser();
    if ($loginResult != null) {
        echo $loginResult;
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login Page</title>
</head>
<body>
    <h2>Login</h2>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <input type="text" name="username" placeholder="Enter username" required><br>
        <input type="password" name="password" placeholder="Enter password" required><br>
        <button type="submit">Login</button>
    </form>
</body>
</html>


<?php
session_start();

$servername = "localhost";
$username_db = "root";
$password_db = "";
$dbname = "login_system";

// Create connection
$conn = new mysqli($servername, $username_db, $password_db, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

if (isset($_POST['submit'])) {
    $username = trim(htmlspecialchars($_POST['username']));
    $password = trim(htmlspecialchars($_POST['password']));

    if (empty($username) || empty($password)) {
        echo "<div style='color:red'>Please fill in all fields</div>";
    } else {
        // Sanitize inputs
        $username = $conn->real_escape_string($username);
        $password = $conn->real_escape_string($password);

        // Query the database
        $sql = "SELECT * FROM users WHERE username='$username' AND password='$password'";
        $result = $conn->query($sql);

        if ($result->num_rows == 0) {
            echo "<div style='color:red'>Invalid username or password</div>";
        } else {
            // Set session variables
            $_SESSION['loggedin'] = true;
            $_SESSION['username'] = $username;
            $_SESSION['user_id'] = $result->fetch_assoc()['id'];
            
            header("Location: dashboard.php");
            exit();
        }
    }
}

// Logout functionality
if (isset($_GET['logout'])) {
    session_destroy();
    header("Location: login.php");
    exit();
}

$conn->close();
?>


<?php
session_start();
if (!isset($_SESSION['loggedin'])) {
    header("Location: login.php");
    exit();
}
?>
<!DOCTYPE html>
<html>
<head>
    <title>Dashboard</title>
</head>
<body>
    Welcome, <?php echo $_SESSION['username']; ?>!
    <br>
    <a href="login.php?logout">Logout</a>
</body>
</html>


<?php
session_start();

// Database configuration
$host = "localhost";
$username = "root";
$password = "";
$dbname = "mydatabase";

// Connect to database
$conn = mysqli_connect($host, $username, $password, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {

    // Get user input
    $email = trim($_POST["email"]);
    $password = $_POST["password"];

    // Validate inputs
    if (empty($email) || empty($password)) {
        echo "<script>alert('Please fill in all fields.');</script>";
        exit();
    }

    // SQL injection prevention using prepared statements
    $stmt = mysqli_prepare($conn, "SELECT id, email, password FROM users WHERE email = ?");
    mysqli_stmt_bind_param($stmt, "s", $email);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);

    if (mysqli_num_rows($result) > 0) {
        // Get user data
        $user = mysqli_fetch_assoc($result);

        // Verify password
        if (password_verify($password, $user["password"])) {

            // Start session and store user data
            $_SESSION['logged_in'] = true;
            $_SESSION['user_id'] = $user['id'];
            $_SESSION['email'] = $user['email'];

            // Regenerate session ID to prevent session fixation attacks
            session_regenerate();

            // Redirect to dashboard or home page
            header("Location: dashboard.php");
            exit();
        } else {
            echo "<script>alert('Incorrect password.');</script>";
        }
    } else {
        echo "<script>alert('Email not found in our records.');</script>";
    }

    mysqli_stmt_close($stmt);
}

// Close database connection
mysqli_close($conn);

?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Login Page</title>
    <style>
        .container {
            max-width: 500px;
            margin: 0 auto;
            padding: 20px;
            text-align: center;
        }
        form {
            background-color: #f2f2f2;
            padding: 20px;
            border-radius: 8px;
        }
        .form-group {
            margin-bottom: 15px;
        }
        input[type="email"],
        input[type="password"] {
            width: 100%;
            padding: 10px;
            margin-top: 5px;
            margin-bottom: 5px;
            border: 1px solid #ddd;
            border-radius: 4px;
        }
        button {
            background-color: #4CAF50;
            color: white;
            padding: 12px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            width: 100%;
        }
        button:hover {
            background-color: #45a049;
        }
        .register-link {
            margin-top: 10px;
            text-align: center;
        }
    </style>
</head>
<body>
    <div class="container">
        <h2>Login to your account</h2>
        <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="POST">
            <div class="form-group">
                <input type="email" name="email" placeholder="Enter your email..." required>
            </div>
            <div class="form-group">
                <input type="password" name="password" placeholder="Enter your password..." required>
            </div>
            <button type="submit">Login</button>
        </form>

        <div class="register-link">
            Don't have an account? <a href="registration.php">Register here</a>.
        </div>
    </div>
</body>
</html>


<?php
session_start();

// Database configuration
$host = "localhost";
$username = "root";
$password = "";
$dbname = "mydatabase";

// Connect to database
$conn = mysqli_connect($host, $username, $password, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {

    // Get user input
    $email = trim($_POST["email"]);
    $password = $_POST["password"];

    // Validate inputs
    if (empty($email) || empty($password)) {
        echo "<script>alert('Please fill in all fields.');</script>";
        exit();
    }

    // Hash the password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

    // Insert user into database
    $stmt = mysqli_prepare($conn, "INSERT INTO users (email, password) VALUES (?, ?)");
    mysqli_stmt_bind_param($stmt, "ss", $email, $hashed_password);
    
    if (mysqli_stmt_execute($stmt)) {
        echo "<script>alert('Registration successful! You can now login.'); window.location.href = 'login.php';</script>";
    } else {
        echo "<script>alert('Error registering user.');</script>";
    }

    mysqli_stmt_close($stmt);
}

// Close database connection
mysqli_close($conn);

?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Registration Page</title>
    <style>
        /* Similar styling as login page */
    </style>
</head>
<body>
    <div class="container">
        <h2>Create an account</h2>
        <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="POST">
            <div class="form-group">
                <input type="email" name="email" placeholder="Enter your email..." required>
            </div>
            <div class="form-group">
                <input type="password" name="password" placeholder="Create a password..." required>
            </div>
            <button type="submit">Register</button>
        </form>

        <div class="register-link">
            Already have an account? <a href="login.php">Login here</a>.
        </div>
    </div>
</body>
</html>


<?php
// Configuration
$host = 'localhost';
$dbname = 'your_database';
$username = 'your_username';
$password = 'your_password';

$max_login_attempts = 5; // Maximum allowed login attempts
$lockout_duration = 60 * 15; // 15 minutes lockout duration

try {
    $pdo = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

    // Create tables if not exists
    $pdo->exec("
        CREATE TABLE IF NOT EXISTS users (
            id INT AUTO_INCREMENT PRIMARY KEY,
            username VARCHAR(50) UNIQUE NOT NULL,
            password_hash VARCHAR(255) NOT NULL,
            last_login DATETIME
        )
    ");
    
    $pdo->exec("
        CREATE TABLE IF NOT EXISTS login_attempts (
            id INT AUTO_INCREMENT PRIMARY KEY,
            username VARCHAR(50) NOT NULL,
            attempt_time DATETIME NOT NULL,
            FOREIGN KEY (username) REFERENCES users(username)
        )
    ");

} catch(PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

// Function to check login attempts
function checkLoginAttempts($pdo, $username) {
    // Check if account is locked out
    $stmt = $pdo->prepare("
        SELECT COUNT(*) as count 
        FROM login_attempts 
        WHERE username = ?
          AND attempt_time > NOW() - INTERVAL 15 MINUTE
    ");
    $stmt->execute([$username]);
    $result = $stmt->fetch(PDO::FETCH_ASSOC);
    
    if ($result['count'] >= $max_login_attempts) {
        return ['locked' => true, 'until' => date('F j, Y H:i:s', strtotime('+15 minutes'))];
    }
    return ['locked' => false];
}

// Function to create session and set cookie
function createSession($user) {
    // Set session variables
    $_SESSION['id'] = $user['id'];
    $_SESSION['username'] = $user['username'];
    $_SESSION['last_login'] = $user['last_login'];
    
    // Set a secure cookie (HTTPS only, HTTP-only, SameSite)
    setcookie('stay_logged_in', session_id(), time() + 3600 * 24 * 7, '/', '', true, true);
}

// Function to handle login failure
function handleLoginFailure($pdo, $username) {
    // Insert failed attempt
    $stmt = $pdo->prepare("
        INSERT INTO login_attempts (username, attempt_time)
        VALUES (?, NOW())
    ");
    $stmt->execute([$username]);
    
    // Check if we've reached max attempts
    $lockCheck = checkLoginAttempts($pdo, $username);
    if ($lockCheck['locked']) {
        return "Account locked. Please try again after " . $lockCheck['until'];
    }
    return "Invalid username or password";
}

// Main login function
function loginUser($pdo, $post) {
    session_start();
    
    // Check if inputs are provided
    if (!isset($post['username'], $post['password'])) {
        return "Username and password are required.";
    }
    
    $username = trim($post['username']);
    $password = trim($post['password']);
    
    // Check if account is locked
    $lockCheck = checkLoginAttempts($pdo, $username);
    if ($lockCheck['locked']) {
        return "Account locked. Please try again after " . $lockCheck['until'];
    }
    
    // Prepare and execute the query
    $stmt = $pdo->prepare("
        SELECT id, username, password_hash, last_login 
        FROM users 
        WHERE username = ?
    ");
    $stmt->execute([$username]);
    $user = $stmt->fetch(PDO::FETCH_ASSOC);
    
    if (!$user) {
        return handleLoginFailure($pdo, $username);
    }
    
    // Verify the password
    if (!password_verify($password, $user['password_hash'])) {
        return handleLoginFailure($pdo, $username);
    }
    
    // Clear login attempts for this user
    $stmt = $pdo->prepare("
        DELETE FROM login_attempts 
        WHERE username = ?
          AND attempt_time < NOW()
    ");
    $stmt->execute([$username]);
    
    // Update last_login time
    $stmt = $pdo->prepare("
        UPDATE users 
        SET last_login = NOW() 
        WHERE id = ?
    ");
    $stmt->execute([$user['id']]);
    
    // Create session and return success
    createSession($user);
    return true;
}

// Example usage:
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $result = loginUser($pdo, $_POST);
    if ($result === true) {
        header("Location: dashboard.php");
        exit();
    } else {
        echo $result;
    }
}
?>


<?php
// Include configuration file
include 'config.php';

function user_login($username, $password) {
    global $conn;

    try {
        // Prevent SQL injection by using prepared statements
        $stmt = $conn->prepare("SELECT id, username, password FROM users WHERE username = ?");
        $stmt->bind_param('s', $username);
        $stmt->execute();
        
        // Get the result
        $result = $stmt->get_result();
        
        if ($result->num_rows === 0) {
            return array(
                'status' => false,
                'message' => "Username not found."
            );
        }

        // Fetch the user data
        $user = $result->fetch_assoc();

        // Verify password
        if (!password_verify($password, $user['password'])) {
            return array(
                'status' => false,
                'message' => "Incorrect password."
            );
        }

        // Start a session
        session_start();
        
        // Store user data in the session
        $_SESSION['username'] = $username;
        $_SESSION['user_id'] = $user['id'];
        
        // Track login attempts
        $_SESSION['last_login_time'] = time();
        $_SESSION['login_count'] = isset($_SESSION['login_count']) ? $_SESSION['login_count'] + 1 : 1;

        // Optional: Set a cookie for "Remember Me" functionality
        if (isset($_POST['remember'])) {
            $token = bin2hex(random_bytes(32));
            
            // Store token in the database
            $stmt_token = $conn->prepare("UPDATE users SET remember_token = ? WHERE id = ?");
            $stmt_token->bind_param('si', $token, $user['id']);
            $stmt_token->execute();
            
            setcookie('remember_token', $token, time() + 3600 * 24 * 7); // Expires after 1 week
        }

        return array(
            'status' => true,
            'message' => "Login successful!",
            'user' => $user
        );

    } catch (Exception $e) {
        return array(
            'status' => false,
            'message' => "An error occurred: " . $e->getMessage()
        );
    }
}
?>


if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $username = $_POST['username'];
    $password = $_POST['password'];

    $login_result = user_login($username, $password);

    if ($login_result['status']) {
        // Redirect to dashboard or home page
        header('Location: dashboard.php');
        exit;
    } else {
        echo $login_result['message'];
    }
}


<?php
// Include database configuration file
include('config.php');

if ($_SERVER['REQUEST_METHOD'] == 'POST' && isset($_POST['submit'])) {
    // Get form data
    $email = htmlspecialchars(trim($_POST['email']));
    $password = htmlspecialchars(trim($_POST['password']));

    // Validate input
    if (empty($email) || empty($password)) {
        $error = "Please fill in all fields.";
        header("Location: login.html?error=" . urlencode($error));
        exit();
    }

    try {
        // Prepare SQL query to select user by email
        $stmt = $pdo->prepare('SELECT * FROM users WHERE email = :email');
        $stmt->execute(['email' => $email]);
        $user = $stmt->fetch(PDO::FETCH_ASSOC);

        if (!$user) {
            $error = "Invalid email or password.";
            header("Location: login.html?error=" . urlencode($error));
            exit();
        }

        // Verify password
        if (password_verify($password, $user['password'])) {
            // Password is correct, create session variables
            $_SESSION['id'] = $user['id'];
            $_SESSION['email'] = $user['email'];
            $_SESSION['logged_in'] = true;

            // Redirect to dashboard or home page
            header('Location: dashboard.php');
            exit();
        } else {
            $error = "Invalid email or password.";
            header("Location: login.html?error=" . urlencode($error));
            exit();
        }

    } catch (PDOException $e) {
        die("Database error: " . $e->getMessage());
    }
}

// If no post data, redirect to login page
header('Location: login.html');
exit();
?>


<?php
session_start();

// Database configuration
$host = 'localhost';
$username_db = 'root';
$password_db = '';
$database = 'login_system';

// Connect to database
$conn = mysqli_connect($host, $username_db, $password_db, $database);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Sanitize input data
    $username = htmlspecialchars($_POST['username']);
    $password = $_POST['password'];

    // Prepare and execute SQL query to check user credentials
    $stmt = mysqli_prepare($conn, "SELECT * FROM users WHERE username = ?");
    mysqli_stmt_bind_param($stmt, 's', $username);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);

    if ($row = mysqli_fetch_assoc($result)) {
        // Verify password
        if (password_verify($password, $row['password'])) {
            // Store user data in session
            $_SESSION['loggedin'] = true;
            $_SESSION['username'] = $row['username'];
            $_SESSION['admin'] = $row['is_admin'];

            // Redirect to dashboard
            header("Location: dashboard.php");
            exit();
        } else {
            $error = "Invalid password.";
        }
    } else {
        $error = "Username not found.";
    }
}

// Close database connection
mysqli_close($conn);

?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login Page</title>
</head>
<body>
    <?php if (isset($error)) { ?>
        <div style="color: red;"><?php echo $error; ?></div>
    <?php } ?>

    <form method="POST" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
        <label>Username:</label><br>
        <input type="text" name="username"><br>
        <label>Password:</label><br>
        <input type="password" name="password"><br>
        <input type="submit" value="Login">
    </form>

    <a href="register.php">Create an account</a>
</body>
</html>


<?php
session_start();

if (!isset($_SESSION['loggedin']) || $_SESSION['loggedin'] !== true) {
    header("Location: login.php");
    exit();
}

?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dashboard</title>
</head>
<body>
    <h1>Welcome to your dashboard, <?php echo $_SESSION['username']; ?>!</h1>
    
    <?php if ($_SESSION['admin'] == 1) { ?>
        <p>You have admin privileges.</p>
    <?php } ?>

    <a href="logout.php">Logout</a>
</body>
</html>


<?php
session_start();
session_unset();
session_destroy();
header("Location: login.php");
exit();
?>


<?php
// Database connection configuration
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

try {
    // Establish database connection
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

// Check if form is submitted
if (isset($_POST['login'])) {
    // Sanitize input data
    $username = htmlspecialchars(strip_tags(trim($_POST['username'])));
    $password = $_POST['password'];

    try {
        // Prepare SQL statement
        $stmt = $conn->prepare("SELECT * FROM users WHERE username = :username OR email = :email");
        $stmt->execute(array(
            ':username' => $username,
            ':email' => $username
        ));

        // Fetch user data
        $row = $stmt->fetch(PDO::FETCH_ASSOC);

        if ($row) {
            // Verify password
            if (password_verify($password, $row['password'])) {
                // Password is correct
                session_start();
                $_SESSION['user_id'] = $row['id'];
                $_SESSION['username'] = $row['username'];
                $_SESSION['email'] = $row['email'];

                // Optional: Generate CSRF token for security
                if (!isset($_SESSION['csrf_token'])) {
                    $_SESSION['csrf_token'] = bin2hex(random_bytes(32));
                }

                // Redirect to dashboard or welcome page
                header("Location: welcome.php");
                exit();
            } else {
                $error_message = "Invalid username or password.";
            }
        } else {
            $error_message = "Invalid username or email.";
        }
    } catch (PDOException $e) {
        die("Error: " . $e->getMessage());
    }
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login Page</title>
    <!-- Add your CSS styles here -->
</head>
<body>
    <?php if (isset($error_message)): ?>
        <div class="error"><?php echo $error_message; ?></div>
    <?php unset($error_message); endif; ?>

    <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="POST">
        <h2>Login</h2>
        <input type="text" name="username" placeholder="Username or Email" required>
        <input type="password" name="password" placeholder="Password" required>
        <input type="hidden" name="csrf_token" value="<?php echo isset($_SESSION['csrf_token']) ? $_SESSION['csrf_token'] : ''; ?>">
        <button type="submit" name="login">Login</button>
    </form>

    <!-- Add your JavaScript here -->
</body>
</html>


<?php
session_start();

// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'mydatabase';

// Connect to database
$conn = new mysqli($host, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function login($mysqli, $username, $password) {
    // Sanitize inputs
    $username = strip_tags($username);
    $password = strip_tags($password);
    
    // Check if username and password are provided
    if (empty($username) || empty($password)) {
        return "Please enter both username and password.";
    }
    
    try {
        // Prepare SQL statement to select user with given username
        $stmt = $mysqli->prepare("SELECT id, username, password, role FROM users WHERE username = ?");
        $stmt->bind_param("s", $username);
        
        $stmt->execute();
        $result = $stmt->get_result();
        
        if ($result->num_rows == 0) {
            return "Invalid credentials.";
        }
        
        // Fetch user data
        $user = $result->fetch_assoc();
        
        // Verify password
        if (!password_verify($password, $user['password'])) {
            return "Invalid credentials.";
        }
        
        // Store user data in session
        $_SESSION['logged_in'] = true;
        $_SESSION['user_id'] = $user['id'];
        $_SESSION['username'] = $user['username'];
        $_SESSION['role'] = $user['role'];
        
        return "success";
        
    } catch (Exception $e) {
        // Return error message if something goes wrong
        return "An error occurred: " . $e->getMessage();
    }
}

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST['username'];
    $password = $_POST['password'];
    
    // Call login function and get result
    $result = login($conn, $username, $password);
    
    if ($result == "success") {
        // Redirect to dashboard or home page based on user role
        if ($_SESSION['role'] == 'admin') {
            header("Location: admin_dashboard.php");
        } else {
            header("Location: user_profile.php");
        }
        exit();
    } else {
        echo $result;
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login Page</title>
</head>
<body>
    <h2>Login Form</h2>
    <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
        Username: <input type="text" name="username"><br>
        Password: <input type="password" name="password"><br>
        <input type="submit" value="Login">
    </form>
</body>
</html>

// Close database connection
$conn->close();
?>


<?php
session_start();

// Database connection parameters
$host = "localhost";
$username = "root";
$password = "";
$db_name = "user_login";

// Connect to database
$conn = new mysqli($host, $username, $password, $db_name);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Sanitize input data
    $email = htmlspecialchars(trim($_POST['email']));
    $password = htmlspecialchars(trim($_POST['password']));

    // Prepare and bind statement
    $stmt = $conn->prepare("SELECT id, email, password FROM users WHERE email = ?");
    $stmt->bind_param("s", $email);

    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows == 1) {
        // User exists
        $row = $result->fetch_assoc();
        
        // Verify password
        if (password_verify($password, $row['password'])) {
            // Password is correct
            
            // Store session variables
            $_SESSION["loggedin"] = true;
            $_SESSION["id"] = $row['id'];
            $_SESSION["email"] = $row['email'];
            
            // Redirect to dashboard or home page
            header("Location: dashboard.php");
            exit();
        } else {
            // Password is incorrect
            echo "<div class='error'>Invalid email or password</div>";
        }
    } else {
        // User doesn't exist
        echo "<div class='error'>Invalid email or password</div>";
    }

    $stmt->close();
    $conn->close();
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Login Page</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            margin: 0;
            background-color: #f0f0f0;
        }

        .login-form {
            background-color: white;
            padding: 20px;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
            width: 300px;
        }

        .form-group {
            margin-bottom: 15px;
        }

        input[type='text'], input[type='password'] {
            width: 100%;
            padding: 8px;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-sizing: border-box;
        }

        button {
            background-color: #4CAF50;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            width: 100%;
        }

        button:hover {
            background-color: #45a049;
        }

        .error {
            color: red;
            margin-top: 10px;
            text-align: center;
        }
    </style>
</head>
<body>
    <div class="login-form">
        <h2>Login</h2>
        <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
            <div class="form-group">
                <input type="text" placeholder="Enter your email..." name="email" required>
            </div>
            <div class="form-group">
                <input type="password" placeholder="Enter your password..." name="password" required>
            </div>
            <button type="submit">Login</button>
        </form>
    </div>
</body>
</html>


<?php
// Database configuration
$host = 'localhost';
$username_db = 'root';
$password_db = '';
$db_name = 'user_login';

// Connect to database
$conn = mysqli_connect($host, $username_db, $password_db, $db_name);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Session start
session_start();

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Sanitize input
    $username = htmlspecialchars($_POST['username']);
    $password = htmlspecialchars($_POST['password']);

    // Query to check username existence
    $sql_username_check = "SELECT id, password FROM users WHERE username = ?";
    $stmt = mysqli_prepare($conn, $sql_username_check);
    
    if ($stmt) {
        mysqli_stmt_bind_param($stmt, "s", $username);
        mysqli_stmt_execute($stmt);
        mysqli_stmt_store_result($stmt);
        
        // Check if username exists
        if (mysqli_stmt_num_rows($stmt) == 1) {
            mysqli_stmt_bind_result($stmt, $id, $stored_password);
            mysqli_stmt_fetch($stmt);
            
            // Verify password
            if (password_verify($password, $stored_password)) {
                // Start session and store user data
                $_SESSION['loggedin'] = true;
                $_SESSION['id'] = $id;
                
                // Redirect to dashboard or home page
                header("location: dashboard.php");
                exit();
            } else {
                echo "Incorrect password.";
            }
        } else {
            echo "Username not found.";
        }
        
        mysqli_stmt_close($stmt);
    } else {
        echo "Error in query preparation.";
    }
}

// Close database connection
mysqli_close($conn);
?>


<?php
// Database configuration
$host = 'localhost';
$username_db = 'root';
$password_db = '';
$db_name = 'user_login';

// Create connection
$conn = new mysqli($host, $username_db, $password_db, $db_name);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

session_start();

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Sanitize input data
    $username = htmlspecialchars($_POST['username']);
    $password = htmlspecialchars($_POST['password']);

    // Hash the password
    $hashed_password = md5($password);

    // Prepare and bind statement to prevent SQL injection
    $stmt = $conn->prepare("SELECT id, username FROM users WHERE username = ?");
    $stmt->bind_param("s", $username);
    
    try {
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            // Fetch user data
            $user = $result->fetch_assoc();

            // Verify password
            $db_password = $user['password']; // This should be the hashed password from your database

            if ($hashed_password == $db_password) {
                // Password matches, start session and redirect
                $_SESSION['id'] = $user['id'];
                $_SESSION['username'] = $user['username'];
                
                header("Location: dashboard.php");
                exit();
            } else {
                echo "Incorrect password!";
            }
        } else {
            echo "Username not found!";
        }
    } catch (Exception $e) {
        // Handle any errors
        echo "Error: " . $e->getMessage();
    }

    $stmt->close();
}

$conn->close();

?>

<!DOCTYPE html>
<html>
<head>
    <title>Login Page</title>
</head>
<body>
    <h2>Login Form</h2>
    <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
        Username: <input type="text" name="username"><br>
        Password: <input type="password" name="password"><br>
        <input type="submit" value="Login">
    </form>
</body>
</html>


class UserAuth {
    private $db;

    public function __construct() {
        try {
            $this->db = new PDO('mysql:host=localhost;dbname=your_database', 'username', 'password');
            $this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
        } catch (PDOException $e) {
            die("Connection failed: " . $e->getMessage());
        }
    }
}


public function login($usernameEmail, $password, $rememberMe = false) {
    try {
        // Sanitize inputs
        $usernameEmail = htmlspecialchars(trim($usernameEmail));
        $password = trim($password);

        if (empty($usernameEmail) || empty($password)) {
            return false; // Missing required fields
        }

        // Prepare the query to select user data where username or email matches
        $stmt = $this->db->prepare("SELECT * FROM users WHERE username = ? OR email = ?");
        $stmt->execute([$usernameEmail, $usernameEmail]);
        $user = $stmt->fetch(PDO::FETCH_ASSOC);

        if (!$user) {
            return false; // User not found
        }

        // Verify password using the stored hash
        if (!password_verify($password, $user['password'])) {
            return false; // Password incorrect
        }

        // Set session variables
        $_SESSION['loggedin'] = true;
        $_SESSION['id'] = $user['id'];
        $_SESSION['username'] = $user['username'];
        $_SESSION['email'] = $user['email'];
        $_SESSION['is_admin'] = ($user['admin'] == 1) ? true : false;

        // Update last activity time
        date_default_timezone_set('UTC');
        $lastActivityTime = date('Y-m-d H:i:s');

        if ($rememberMe) {
            // Generate a secure token for remember me cookie
            $token = bin2hex(random_bytes(32));
            setcookie('remember_me', $token, time() + (86400 * 7), '/', null, true, true); // Secure and HttpOnly

            // Update the user's record with new token and last activity time
            $this->db->prepare("UPDATE users SET remember_token = ?, last_activity = ? WHERE id = ?")
                     ->execute([$token, $lastActivityTime, $user['id']]);
        }

        // Update session last activity time
        $_SESSION['last_activity'] = $lastActivityTime;

        return true;
    } catch (Exception $e) {
        error_log("Login Error: " . $e->getMessage());
        return false;
    }
}


public function logout() {
    // Destroy session data
    $_SESSION = array();
    if (ini_get("session.use_cookies")) {
        $params = session_get_cookie_params();
        setcookie(session_name(), '', time() - 42000,
            $params["path"], $params["domain"],
            $params["secure"], $params["httponly"]);
    }
    session_destroy();

    // Invalidate remember me cookie
    if (isset($_COOKIE['remember_me'])) {
        setcookie('remember_me', '', time() - 3600, '/');
    }

    return true;
}


public function isLoggedIn() {
    // Check for session or remember me cookie
    if (isset($_SESSION['loggedin']) && $_SESSION['loggedin'] == true) {
        return true;
    }

    if (!empty($_COOKIE['remember_me'])) {
        $token = htmlspecialchars(trim($_COOKIE['remember_me']));
        $stmt = $this->db->prepare("SELECT * FROM users WHERE remember_token = ?");
        $stmt->execute([$token]);
        $user = $stmt->fetch(PDO::FETCH_ASSOC);

        if ($user) {
            // Update session
            $_SESSION['loggedin'] = true;
            $_SESSION['id'] = $user['id'];
            $_SESSION['username'] = $user['username'];
            $_SESSION['email'] = $user['email'];
            $_SESSION['is_admin'] = ($user['admin'] == 1) ? true : false;

            // Update last activity time
            date_default_timezone_set('UTC');
            $lastActivityTime = date('Y-m-d H:i:s');

            $this->db->prepare("UPDATE users SET last_activity = ? WHERE id = ?")
                     ->execute([$lastActivityTime, $user['id']]);

            $_SESSION['last_activity'] = $lastActivityTime;
            return true;
        }
    }

    return false;
}


public function isAdmin() {
    if ($this->isLoggedIn()) {
        return $_SESSION['is_admin'];
    }
    return false;
}


<?php
// Include database connection file
include_once("db_connection.php");

function loginUser($email, $password) {
    global $conn;

    // Sanitize inputs
    $email = mysqli_real_escape_string($conn, trim($email));
    $password = mysqli_real_escape_string($conn, trim($password));

    // Check if email exists in the database
    $query = "SELECT * FROM users WHERE email='$email'";
    $result = mysqli_query($conn, $query);

    if ($result && mysqli_num_rows($result) == 1) {
        $row = mysqli_fetch_assoc($result);
        
        // Verify password
        if (password_verify($password, $row['password'])) {
            // Create session variables
            $_SESSION['logged_in'] = true;
            $_SESSION['user_id'] = $row['id'];
            $_SESSION['username'] = $row['username'];
            
            // Redirect to dashboard or home page
            header("Location: dashboard.php");
            exit();
        } else {
            return "Invalid password";
        }
    } else {
        return "Email not found in database";
    }
}

// Example usage:
if (isset($_POST['login'])) {
    $email = $_POST['email'];
    $password = $_POST['password'];
    
    $error = loginUser($email, $password);
    
    if ($error) {
        echo "<p style='color: red;'>$error</p>";
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login Page</title>
</head>
<body>
    <h2>Login</h2>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        Email: <input type="email" name="email" required><br>
        Password: <input type="password" name="password" required><br>
        <input type="submit" name="login" value="Login">
    </form>
</body>
</html>


<?php
session_start();

// Database connection settings
$host = "localhost";
$username = "root"; // your database username
$password = ""; // your database password
$dbname = "login_system";

// Connect to database
$conn = new mysqli($host, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function login($username, $password) {
    global $conn;
    
    // Sanitize input to prevent SQL injection
    $username = mysqli_real_escape_string($conn, $username);
    $password = mysqli_real_escape_string($conn, $password);

    // Prepare the query
    $stmt = $conn->prepare("SELECT id, username, password FROM users WHERE username = ?");
    $stmt->bind_param("s", $username);
    $stmt->execute();
    
    // Get the result
    $result = $stmt->get_result();
    $row = $result->fetch_assoc();

    if ($row) {
        // Verify password
        if (password_verify($password, $row['password'])) {
            // Password is correct
            $_SESSION['loggedin'] = true;
            $_SESSION['id'] = $row['id'];
            $_SESSION['username'] = $row['username'];
            
            return true;
        } else {
            // Incorrect password
            return false;
        }
    } else {
        // Username not found
        return false;
    }
}

// Check if form is submitted
if (isset($_POST['login'])) {
    $user_username = $_POST['username'];
    $user_password = $_POST['password'];
    
    if (!empty($user_username) && !empty($user_password)) {
        if (login($user_username, $user_password)) {
            // Login successful
            echo "Login successful!";
            header("refresh: 3; url=dashboard.php");
        } else {
            // Login failed
            echo "Incorrect username or password!";
            header("refresh: 3; url=index.php");
        }
    } else {
        // Empty fields
        echo "Please fill in all required fields!";
        header("refresh: 3; url=index.php");
    }
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login Page</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            margin: 0;
            background-color: #f0f0f0;
        }
        
        .login-form {
            background-color: white;
            padding: 20px;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
            width: 300px;
        }
        
        .form-group {
            margin-bottom: 15px;
        }
        
        input[type="text"], input[type="password"] {
            width: 100%;
            padding: 8px;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-sizing: border-box;
        }
        
        button {
            width: 100%;
            padding: 10px;
            background-color: #4CAF50;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
        
        button:hover {
            background-color: #45a049;
        }
    </style>
</head>
<body>
    <div class="login-form">
        <h2>Login</h2>
        <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="POST">
            <div class="form-group">
                <label for="username">Username:</label>
                <input type="text" id="username" name="username" required>
            </div>
            <div class="form-group">
                <label for="password">Password:</label>
                <input type="password" id="password" name="password" required>
            </div>
            <button type="submit" name="login">Login</button>
        </form>
        <p>Don't have an account? <a href="register.php">Register here</a>.</p>
    </div>
</body>
</html>


<?php
session_start();
require_once('db_config.php'); // Include your database configuration file

function loginUser($username, $password) {
    try {
        // Sanitize input
        $username = mysqli_real_escape_string($GLOBALS['db'], trim($username));
        $password = trim($password);

        // Check if username exists in the database
        $stmt = $GLOBALS['db']->prepare("SELECT id, password_hash FROM users WHERE username = ?");
        $stmt->bind_param('s', $username);
        $stmt->execute();
        $result = $stmt->get_result();

        if (!$result->num_rows) {
            return ['status' => 'error', 'message' => 'Invalid username or password'];
        }

        // Get user data
        $user_data = $result->fetch_assoc();
        $stored_hash = $user_data['password_hash'];

        // Verify password using bcrypt
        if (!password_verify($password, $stored_hash)) {
            return ['status' => 'error', 'message' => 'Invalid username or password'];
        }

        // Check for failed login attempts
        $stmt = $GLOBALS['db']->prepare("SELECT failed_login_attempts FROM users WHERE id = ?");
        $stmt->bind_param('i', $user_data['id']);
        $stmt->execute();
        $attempts_result = $stmt->get_result();
        $attempts = $attempts_result->fetch_assoc();

        if ($attempts['failed_login_attempts'] >= 3) {
            // Account is locked, send email notification
            sendLockoutEmail($username);
            return ['status' => 'error', 'message' => 'Account locked. Please contact support.'];
        }

        // Reset failed attempts counter
        $stmt = $GLOBALS['db']->prepare("UPDATE users SET failed_login_attempts = 0 WHERE id = ?");
        $stmt->bind_param('i', $user_data['id']);
        $stmt->execute();

        // Start session
        $_SESSION['user_id'] = $user_data['id'];
        $_SESSION['username'] = $username;
        $_SESSION['login_time'] = time();

        // Update last login timestamp
        $stmt = $GLOBALS['db']->prepare("UPDATE users SET last_login = NOW() WHERE id = ?");
        $stmt->bind_param('i', $user_data['id']);
        $stmt->execute();

        return ['status' => 'success', 'message' => 'Successfully logged in'];

    } catch (Exception $e) {
        // Log the error
        error_log("Login Error: " . $e->getMessage());
        return ['status' => 'error', 'message' => 'An error occurred during login'];
    }
}

function sendLockoutEmail($username) {
    // Implement your email notification system here
    $to = 'support@example.com';
    $subject = 'Account Lockout Notification';
    $body = "User $username has been locked out due to multiple failed login attempts.";

    // Use PHPMailer or another email library for production
    mail($to, $subject, $body);
}

// Close database connection
$mysqli->close();

header("Cache-Control: no-store, no-cache, must-revalidate");
header("Pragma: no-cache");

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $username = $_POST['username'];
    $password = $_POST['password'];

    $result = loginUser($username, $password);

    if ($result['status'] === 'success') {
        header('Location: dashboard.php');
    } else {
        echo json_encode($result);
    }
}
?>


<?php
// Include configuration file
include('config.php');

// Initialize variables
$error = "";
$username = "";
$password = "";

// If form submitted
if (isset($_POST['submit'])) {
    // Sanitize input data
    function sanitizeInput($data) {
        $data = trim($data);
        $data = htmlspecialchars($data);
        return $data;
    }

    $username = sanitizeInput($_POST['username']);
    $password = $_POST['password']; // Do not sanitize password

    // Check if username or password is empty
    if (empty($username) || empty($password)) {
        $error = "Username and password are required!";
    } else {
        // Connect to database
        $conn = mysqli_connect(DB_HOST, DB_USER, DB_PASS, DB_NAME);

        // Check connection
        if (!$conn) {
            die("Connection failed: " . mysqli_connect_error());
        }

        // Prepare SQL statement
        $stmt = mysqli_prepare($conn, "SELECT id, username, password FROM users WHERE username = ?");
        
        // Bind parameters
        mysqli_stmt_bind_param($stmt, "s", $username);

        // Execute the query
        mysqli_stmt_execute($stmt);

        // Get result
        $result = mysqli_stmt_get_result($stmt);
        $row = mysqli_fetch_assoc($result);

        // Close statement and connection
        mysqli_stmt_close($stmt);
        mysqli_close($conn);

        // Check if user exists
        if ($row) {
            // Verify password
            if (password_verify($password, $row['password'])) {
                // Start session
                session_start();
                
                // Store user data in session variables
                $_SESSION['id'] = $row['id'];
                $_SESSION['username'] = $row['username'];

                // Redirect to dashboard
                header("Location: dashboard.php");
                exit();
            } else {
                $error = "Invalid username or password!";
            }
        } else {
            $error = "Invalid username or password!";
        }
    }
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Login Page</title>
    <style>
        .container {
            max-width: 400px;
            margin: 0 auto;
            padding: 20px;
            background-color: #f5f5f5;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }
        
        .error {
            color: red;
            margin-bottom: 10px;
        }

        input {
            width: 100%;
            padding: 10px;
            margin: 5px 0;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-sizing: border-box;
        }

        button {
            width: 100%;
            padding: 10px;
            background-color: #4CAF50;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }

        button:hover {
            background-color: #45a049;
        }
    </style>
</head>
<body>
    <div class="container">
        <?php if (!empty($error)) { ?>
            <div class="error"><?php echo $error; ?></div>
        <?php } ?>

        <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
            <h2>Login</h2>
            <input type="text" name="username" placeholder="Enter username" required><br>
            <input type="password" name="password" placeholder="Enter password" required><br>
            <button type="submit" name="submit">Login</button>
        </form>
    </div>
</body>
</html>


<?php
define("DB_HOST", "localhost");
define("DB_USER", "your_username");
define("DB_PASS", "your_password");
define("DB_NAME", "your_database_name");
?>


<?php
session_start();

// Database configuration
$host = 'localhost';
$dbUsername = 'root';
$dbPassword = '';
$dbName = 'user_auth';

// Connect to the database
$conn = new mysqli($host, $dbUsername, $dbPassword, $dbName);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to sanitize input data
function sanitizeInput($data) {
    $data = trim($data);
    $data = stripslashes($data);
    $data = htmlspecialchars($data);
    return $data;
}

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get form data
    $email = sanitizeInput($_POST['email']);
    $password = $_POST['password'];

    // Check if email and password are not empty
    if (empty($email) || empty($password)) {
        echo "<script>alert('Please fill in all fields');</script>";
        exit();
    }

    // Prepare SQL statement to select user by email
    $stmt = $conn->prepare("SELECT id, email, password FROM users WHERE email = ?");
    $stmt->bind_param("s", $email);
    $stmt->execute();

    $result = $stmt->get_result();

    if ($result->num_rows == 1) {
        // User exists
        $row = $result->fetch_assoc();
        
        // Verify password
        if (password_verify($password, $row['password'])) {
            // Password is correct
            
            // Create session variables
            $_SESSION['id'] = $row['id'];
            $_SESSION['email'] = $row['email'];
            
            // Generate a unique identifier for cookies
            $cookie_id = bin2hex(random_bytes(32));
            
            // Set cookie on client side and store it in the database
            setcookie('user_cookie', $cookie_id, time() + (86400 * 7), "/");
            
            // Redirect to dashboard or any other page
            header("Location: dashboard.php");
            exit();
        } else {
            // Incorrect password
            echo "<script>alert('Incorrect email or password');</script>";
        }
    } else {
        // User doesn't exist
        echo "<script>alert('Incorrect email or password');</script>";
    }

    $stmt->close();
}

$conn->close();

?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f2f2f2;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            margin: 0;
        }

        .login-container {
            background-color: white;
            padding: 30px;
            border-radius: 5px;
            box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);
            width: 300px;
        }

        .login-container h2 {
            text-align: center;
            color: #333;
            margin-bottom: 30px;
        }

        .form-group {
            margin-bottom: 20px;
        }

        .form-group label {
            display: block;
            margin-bottom: 5px;
            color: #555;
        }

        .form-group input {
            width: 100%;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-sizing: border-box;
        }

        button {
            width: 100%;
            padding: 10px;
            background-color: #4CAF50;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }

        button:hover {
            background-color: #45a049;
        }

        .register-link {
            text-align: center;
            margin-top: 20px;
        }

        .register-link a {
            color: #4CAF50;
            text-decoration: none;
        }

        .register-link a:hover {
            text-decoration: underline;
        }
    </style>
</head>
<body>
    <div class="login-container">
        <h2>Login</h2>
        <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
            <div class="form-group">
                <label for="email">Email:</label>
                <input type="text" id="email" name="email" placeholder="Enter your email">
            </div>
            <div class="form-group">
                <label for="password">Password:</label>
                <input type="password" id="password" name="password" placeholder="Enter password">
            </div>
            <button type="submit">Login</button>
        </form>
        <div class="register-link">
            Don't have an account? <a href="register.php">Register here</a>
        </div>
    </div>
</body>
</html>


<?php
session_start();

// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$db_name = 'login_system';

// Connect to the database
$conn = mysqli_connect($host, $username, $password, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function login_user() {
    global $conn;

    // Check if form is submitted
    if (isset($_POST['login'])) {
        $email = $_POST['email'];
        $password = $_POST['password'];

        // Sanitize inputs
        $email = htmlspecialchars(strip_tags($email));
        $password = htmlspecialchars(strip_tags($password));

        // Prepare and execute the query using prepared statements
        $stmt = $conn->prepare("SELECT id, email, password FROM users WHERE email = ?");
        $stmt->bind_param("s", $email);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            // Get user data
            $user = $result->fetch_assoc();
            
            // Verify password
            if (password_verify($password, $user['password'])) {
                // Start session and store user data
                $_SESSION['loggedin'] = true;
                $_SESSION['id'] = $user['id'];
                $_SESSION['email'] = $user['email'];

                // Set last login time
                $_SESSION['last_login'] = time();

                // Redirect to dashboard
                header("Location: dashboard.php");
                exit();
            } else {
                // Password doesn't match
                echo "<div class='alert alert-danger'>Incorrect password!</div>";
            }
        } else {
            // Email not found in database
            echo "<div class='alert alert-danger'>Email not found!</div>";
        }

        $stmt->close();
    }
}

// Close the database connection
mysqli_close($conn);
?>


<?php
// Database configuration
$host = 'localhost';
$username_db = 'root';
$password_db = '';
$db_name = 'user_login';

// Create database connection
$conn = new mysqli($host, $username_db, $password_db, $db_name);

// Check if the form is submitted
if (isset($_POST['submit'])) {
    // Get user input values
    $email_username = $_POST['email_username'];
    $password = $_POST['password'];

    try {
        // Prepare the SQL statement to prevent SQL injection
        $stmt = $conn->prepare("SELECT id, username, email, password FROM users WHERE username = ? OR email = ?");
        $stmt->bind_param("ss", $email_username, $email_username);
        
        // Execute the query
        $stmt->execute();
        
        // Get the result
        $result = $stmt->get_result();
        
        // Check if user exists
        if ($result->num_rows == 1) {
            // Fetch user data
            $user = $result->fetch_assoc();
            
            // Verify password
            if (password_verify($password, $user['password'])) {
                // Password is correct
                
                // Start the session
                session_start();
                
                // Store user data in session
                $_SESSION['id'] = $user['id'];
                $_SESSION['username'] = $user['username'];
                $_SESSION['email'] = $user['email'];
                
                // Optional: Remember me functionality
                if (isset($_POST['remember'])) {
                    $remember_token = bin2hex(random_bytes(32));
                    setcookie('remember_token', $remember_token, time() + 3600 * 24 * 7); // Cookie valid for a week
                    
                    // Update database with remember token
                    $update_stmt = $conn->prepare("UPDATE users SET remember_token = ? WHERE id = ?");
                    $update_stmt->bind_param("si", $remember_token, $user['id']);
                    $update_stmt->execute();
                }
                
                // Redirect to dashboard or home page
                header('Location: dashboard.php');
                exit;
            } else {
                echo "Incorrect password!";
            }
        } else {
            echo "User not found! Please check your email/username.";
        }
    } catch (Exception $e) {
        die("An error occurred: " . $e->getMessage());
    }
}

// Close database connection
$conn->close();
?>


<?php
// Include database configuration file
require_once("config/db.php");

function user_login($username, $password) {
    try {
        // Prepare SQL statement to select user with matching username
        $stmt = $pdo->prepare("SELECT * FROM users WHERE username = ?");
        $stmt->bindParam(1, $username);
        $stmt->execute();

        // Check if exactly one row was found
        if ($stmt->rowCount() == 1) {
            $row = $stmt->fetch(PDO::FETCH_ASSOC);

            // Verify password using PHP's built-in password_verify function
            if (password_verify($password, $row['password'])) {
                // Password matches
                return true;
            } else {
                // Incorrect password
                return false;
            }
        } else {
            // No user found with this username
            return false;
        }
    } catch(PDOException $e) {
        // Error occurred
        echo "Error: " . $e->getMessage();
        return false;
    }
}
?>


if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST['username'];
    $password = $_POST['password'];

    if (user_login($username, $password)) {
        // Start session or set cookies here
        echo "Login successful!";
    } else {
        echo "Invalid username or password.";
    }
}


<?php
// Configuration file (config.php)
define('DB_HOST', 'localhost');
define('DB_USER', 'root');
define('DB_PASSWORD', '');
define('DB_NAME', 'mydatabase');

class UserAuth {
    private $conn;

    public function __construct() {
        // Database connection
        $this->conn = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);
        
        if ($this->conn->connect_error) {
            die("Connection failed: " . $this->conn->connect_error);
        }
    }

    public function login($email, $password) {
        try {
            // Sanitize inputs
            $email = mysqli_real_escape_string($this->conn, $email);
            $password = mysqli_real_escape_string($this->conn, $password);

            // Query to check user credentials
            $stmt = $this->conn->prepare("SELECT user_id, password_hash FROM users WHERE email = ?");
            $stmt->bind_param("s", $email);
            $stmt->execute();
            $result = $stmt->get_result();

            if ($result->num_rows == 0) {
                return false; // User not found
            }

            $user = $result->fetch_assoc();

            // Verify password
            if (password_verify($password, $user['password_hash'])) {
                // Start session and store user data
                session_start();
                $_SESSION['user_id'] = $user['user_id'];
                $_SESSION['email'] = $email;
                
                return true; // Login successful
            } else {
                return false; // Invalid password
            }
        } catch (Exception $e) {
            error_log("Login Error: " . $e->getMessage());
            return false;
        }
    }

    public function __destruct() {
        $this->conn->close();
    }
}

// Example usage:
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    include 'config.php';
    $userAuth = new UserAuth();
    
    if ($userAuth->login($_POST['email'], $_POST['password'])) {
        header("Location: dashboard.php");
        exit();
    } else {
        echo "Invalid email or password.";
    }
}
?>


<?php
session_start();
include 'config.php';

class UserAuth {
    // ... existing code ...
    
    public function register($email, $password) {
        try {
            // Hash the password
            $hashedPassword = password_hash($password, PASSWORD_BCRYPT);

            // Insert into database
            $stmt = $this->conn->prepare("INSERT INTO users (email, password_hash) VALUES (?, ?)");
            $stmt->bind_param("ss", $email, $hashedPassword);
            
            if ($stmt->execute()) {
                return true; // Registration successful
            } else {
                return false; // Database error
            }
        } catch (Exception $e) {
            error_log("Registration Error: " . $e->getMessage());
            return false;
        }
    }
}

// Example usage for registration:
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    include 'config.php';
    $userAuth = new UserAuth();
    
    if ($userAuth->register($_POST['email'], $_POST['password'])) {
        echo "Registration successful!";
    } else {
        echo "Registration failed. Please try again.";
    }
}
?>


<?php
session_start();

// Database connection
$host = 'localhost';
$dbusername = 'root';
$dbpassword = '';
$dbname = 'user_auth';

$conn = new mysqli($host, $dbusername, $dbpassword, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to handle login
function loginUser() {
    global $conn;

    // Check if form is submitted
    if (isset($_POST['login'])) {
        // Validate inputs
        $username = trim(htmlspecialchars($_POST['username']));
        $password = trim(htmlspecialchars($_POST['password']));

        // Check if username and password are provided
        if ($username == "" || $password == "") {
            header("Location: login.php?error=empty");
            exit();
        }

        // Prepare SQL statement to prevent SQL injection
        $stmt = $conn->prepare("SELECT id, username, role, status FROM users WHERE (username = ? OR email = ?) AND password = ?");
        
        // Hash the password for comparison
        $hashed_password = md5($password);

        // Bind parameters
        $stmt->bind_param("sss", $username, $username, $hashed_password);

        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            $row = $result->fetch_assoc();
            
            // Check user status (active/inactive)
            if ($row['status'] == 'active') {
                // Set session variables
                $_SESSION['loggedin'] = true;
                $_SESSION['id'] = $row['id'];
                $_SESSION['username'] = $row['username'];
                $_SESSION['role'] = $row['role'];

                // Regenerate session ID to prevent session fixation
                session_regenerate();

                // Redirect based on user role
                if ($row['role'] == 'admin') {
                    header("Location: admin_dashboard.php");
                } else {
                    header("Location: user_profile.php");
                }
                exit();
            } else {
                // User account is inactive
                header("Location: login.php?error=inactive");
                exit();
            }
        } else {
            // Invalid credentials
            header("Location: login.php?error=invalid_credentials");
            exit();
        }

        $stmt->close();
    }
}

// Function to handle logout
function logoutUser() {
    session_unset();
    session_destroy();
    header("Location: login.php");
    exit();
}

// Call the login function if form is submitted
if (isset($_POST['login'])) {
    loginUser();
}

?>


<?php
if (isset($_GET['error'])) {
    $error = $_GET['error'];
    switch ($error) {
        case 'empty':
            echo "Please fill in all required fields!";
            break;
        case 'inactive':
            echo "Your account is currently inactive. Please contact an administrator.";
            break;
        case 'invalid_credentials':
            echo "Invalid username or password!";
            break;
        // Add more error cases as needed
    }
}
?>


<?php
// Database connection configuration
$host = 'localhost';
$username_db = 'root';
$password_db = '';
$database = 'user_login';

// Create database connection
$conn = new mysqli($host, $username_db, $password_db, $database);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// CSRF Token generation function
function generateCsrfToken() {
    if (empty($_SESSION['csrf_token'])) {
        $_SESSION['csrf_token'] = bin2hex(random_bytes(32));
    }
    return $_SESSION['csrf_token'];
}

// Start session
session_start();

// Initialize variables
$error = "";
$loginError = false;

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Retrieve form data
    $username = mysqli_real_escape_string($conn, $_POST["username"]);
    $password = $_POST["password"];
    
    // Validate CSRF Token
    if (empty($_POST['csrf_token']) || $_POST['csrf_token'] !== $_SESSION['csrf_token']) {
        die("Invalid request. Please try again.");
    }
    
    // Check if username exists in the database
    $stmt = $conn->prepare("SELECT id, username, password FROM users WHERE username = ?");
    $stmt->bind_param('s', $username);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows > 0) {
        $row = $result->fetch_assoc();
        
        // Verify password
        if (password_verify($password, $row['password'])) {
            // Password is correct
            
            // Session variables
            $_SESSION["id"] = $row['id'];
            $_SESSION["username"] = $row['username'];
            
            // Regenerate session ID to prevent session fixation attacks
            session_regenerate(true);
            
            // Redirect to dashboard or home page
            header("Location: dashboard.php");
            exit();
        } else {
            // Incorrect password
            $error = "Incorrect username or password";
            $loginError = true;
        }
    } else {
        // Username not found
        $error = "Incorrect username or password";
        $loginError = true;
    }
}

// Close database connection
$conn->close();
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Login Page</title>
    <!-- Add your CSS styles here -->
    <style>
        .error {
            color: red;
            margin-bottom: 10px;
        }
    </style>
</head>
<body>
    <?php if ($loginError) { ?>
        <div class="error"><?php echo $error; ?></div>
    <?php } ?>

    <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
        <!-- CSRF Token -->
        <input type="hidden" name="csrf_token" value="<?php echo generateCsrfToken(); ?>">

        <label for="username">Username:</label><br>
        <input type="text" id="username" name="username" required><br><br>

        <label for="password">Password:</label><br>
        <input type="password" id="password" name="password" required><br><br>

        <button type="submit">Login</button>
    </form>
</body>
</html>


<?php
session_start();

// Database connection parameters
$host = 'localhost';
$username_db = 'root'; // Change this to your database username
$password_db = '';     // Change this to your database password
$dbname = 'mydatabase'; // Change this to your database name

// Connect to the database
$conn = new mysqli($host, $username_db, $password_db, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function login($username, $password, $conn) {
    // Trim whitespace from username and password
    $username = trim($username);
    $password = trim($password);

    // Check if either username or password is empty
    if (empty($username) || empty($password)) {
        return "Username or password cannot be empty.";
    }

    // Prepare the SQL statement to prevent SQL injection
    $stmt = $conn->prepare("SELECT id, username, password FROM users WHERE username = ?");
    $stmt->bind_param("s", $username);
    $stmt->execute();

    // Get the result
    $result = $stmt->get_result();
    
    if ($row = $result->fetch_assoc()) {
        // Verify the password
        if (password_verify($password, $row['password'])) {
            // Password is correct
            // Start session and store user data
            $_SESSION['user_id'] = $row['id'];
            $_SESSION['username'] = $row['username'];
            
            return "Login successful!";
        } else {
            // Incorrect password
            return "Incorrect username or password.";
        }
    } else {
        // Username not found
        return "Incorrect username or password.";
    }

    // Close the statement
    $stmt->close();
}

// Example usage:
if (isset($_POST['login'])) {
    $username = $_POST['username'];
    $password = $_POST['password'];
    
    $result = login($username, $password, $conn);
    
    if ($result === "Login successful!") {
        header("Location: dashboard.php");
    } else {
        echo $result;
    }
}

$conn->close();
?>


<?php
// Database connection details
$host = 'localhost';
$username = 'root'; // Replace with your database username
$password = ''; // Replace with your database password
$db_name = 'mydatabase'; // Replace with your database name

// Create a function for user login
function user_login($username, $password) {
    global $host, $username_db, $password_db, $db_name;
    
    // Connect to the database
    $conn = new mysqli($host, $username, $password, $db_name);
    
    // Check connection
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }
    
    // Prepare and execute the query
    $stmt = $conn->prepare("SELECT * FROM users WHERE username = ?");
    $stmt->bind_param("s", $username);
    $stmt->execute();
    
    // Get the result
    $result = $stmt->get_result();
    
    if ($result->num_rows > 0) {
        // User exists, get user data
        $user = $result->fetch_assoc();
        
        // Verify password
        if (password_verify($password, $user['password'])) {
            // Password is correct, store user session
            $_SESSION['loggedin'] = true;
            $_SESSION['username'] = $user['username'];
            $_SESSION['id'] = $user['id'];
            
            return true; // Login successful
        } else {
            return false; // Incorrect password
        }
    } else {
        return false; // Username not found
    }
}

// Example usage:
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST['username'];
    $password = $_POST['password'];
    
    if (user_login($username, $password)) {
        echo "Login successful!";
        header("Location: dashboard.php");
    } else {
        echo "Invalid username or password.";
    }
}
?>


<?php
session_start();

// Database connection settings
$host = "localhost";
$username_db = "root";
$password_db = "";
$database_name = "user_login";

// Connect to database
$conn = mysqli_connect($host, $username_db, $password_db, $database_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Check if form is submitted
if (isset($_POST['login'])) {
    $username = $_POST['username'];
    $password = $_POST['password'];

    // SQL query to fetch user data based on username
    $sql = "SELECT * FROM users WHERE username = ?";
    
    // Prepare and bind parameters
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, "s", $username);

    // Execute the statement
    mysqli_execute($stmt);
    $result = mysqli_get_result($stmt);
    
    if (mysqli_num_rows($result) == 1) {
        $row = mysqli_fetch_assoc($result);
        
        // Verify password
        if (password_verify($password, $row['password'])) {
            // Password is correct
            
            // Check remember me checkbox
            if (isset($_POST['remember'])) {
                // Set remember me cookie
                $cookie_name = "remember_me";
                $random_string = bin2hex(random_bytes(32));
                $hash = password_hash($random_string, PASSWORD_DEFAULT);
                
                // Update the database with the new hash
                $update_sql = "UPDATE users SET remember_token = ? WHERE id = ?";
                $stmt_update = mysqli_prepare($conn, $update_sql);
                mysqli_stmt_bind_param($stmt_update, "si", $hash, $row['id']);
                mysqli_execute($stmt_update);
                
                // Set cookie that expires in 1 week
                setcookie($cookie_name, $random_string, time() + (7 * 24 * 3600), "/", "", false, true);
            }
            
            // Start session and store user data
            $_SESSION['id'] = $row['id'];
            $_SESSION['username'] = $row['username'];
            $_SESSION['admin'] = $row['is_admin'];
            
            // Redirect to dashboard or home page
            header("Location: dashboard.php");
            exit();
        } else {
            // Password is incorrect
            $error = "Incorrect password!";
        }
    } else {
        // Username not found
        $error = "Username does not exist!";
    }
}

// Close database connection
mysqli_close($conn);
?>


// Register function
if (isset($_POST['register'])) {
    $username = $_POST['username'];
    $password = $_POST['password'];
    
    // Hash the password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);
    
    // SQL query to insert new user
    $sql = "INSERT INTO users (username, password) VALUES (?, ?)";
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, "ss", $username, $hashed_password);
    
    if (mysqli_execute($stmt)) {
        // Registration successful, redirect to login page
        header("Location: login.php");
        exit();
    } else {
        echo "Error registering user: " . mysqli_error($conn);
    }
}


<?php
// Database connection details
$host = 'localhost';
$user = 'username';
$password = 'password';
$dbname = 'mydatabase';

// Create connection
$conn = mysqli_connect($host, $user, $password, $dbname);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function sanitizeInput($data) {
    return htmlspecialchars(strip_tags(trim($data)));
}

// Function to handle user login
function loginUser($email, $password, $conn) {
    // Sanitize inputs
    $email = sanitizeInput($email);
    $password = sanitizeInput($password);

    // Check if email and password are not empty
    if (empty($email) || empty($password)) {
        return "Please fill in all fields";
    }

    // Prepare statement to prevent SQL injection
    $stmt = $conn->prepare("SELECT * FROM users WHERE email = ?");
    $stmt->bind_param("s", $email);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows === 1) {
        // User exists, get user data
        $user = $result->fetch_assoc();

        // Verify password
        if (password_verify($password, $user['password'])) {
            // Password is correct
            session_start();
            $_SESSION['id'] = $user['id'];
            $_SESSION['username'] = $user['username'];
            $_SESSION['email'] = $user['email'];
            $_SESSION['logged_in'] = true;

            // Redirect to dashboard or home page
            header("Location: dashboard.php");
            exit();
        } else {
            return "Incorrect password";
        }
    } else {
        return "No user found with this email address";
    }
}

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get form values
    $email = $_POST['email'];
    $password = $_POST['password'];

    // Call login function and handle errors
    $error = loginUser($email, $password, $conn);
    if ($error) {
        echo "<div style='color: red;'>$error</div>";
    }
}

// Close database connection
mysqli_close($conn);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login Page</title>
</head>
<body>
    <?php
    // Check if user is already logged in
    session_start();
    if (isset($_SESSION['logged_in']) && $_SESSION['logged_in'] === true) {
        header("Location: dashboard.php");
        exit();
    }
    ?>

    <h2>Login Form</h2>
    <form method="POST" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
        Email:<br>
        <input type="email" name="email">
        <br>
        Password:<br>
        <input type="password" name="password">
        <br><br>
        <input type="submit" value="Login">
    </form>
</body>
</html>


// Registration function
function registerUser($username, $email, $password, $conn) {
    // Sanitize inputs
    $username = sanitizeInput($username);
    $email = sanitizeInput($email);
    $password = sanitizeInput($password);

    // Check if username and email are already taken
    $checkQuery = "SELECT * FROM users WHERE username = ? OR email = ?";
    $stmt = $conn->prepare($checkQuery);
    $stmt->bind_param("ss", $username, $email);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        return "Username or email already exists";
    }

    // Hash the password
    $hashedPassword = password_hash($password, PASSWORD_DEFAULT);

    // Insert new user into database
    $insertQuery = "INSERT INTO users (username, email, password) VALUES (?, ?, ?)";
    $stmt = $conn->prepare($insertQuery);
    $stmt->bind_param("sss", $username, $email, $hashedPassword);

    if ($stmt->execute()) {
        return true;
    } else {
        return "Error: " . $stmt->error;
    }
}


<?php
session_start();

// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$db_name = 'mydatabase';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to sanitize input data
function sanitizeInput($data) {
    $data = trim($data);
    $data = stripslashes($data);
    $data = htmlspecialchars($data);
    return $data;
}

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get user inputs
    $email = sanitizeInput($_POST['email']);
    $password = $_POST['password'];

    // Check if email and password are not empty
    if (empty($email) || empty($password)) {
        // Set error message in session
        $_SESSION['msg'] = "Email or Password is empty!";
        header("Location: login.php");
        exit();
    }

    // Prepare SQL query to select user with the given email
    $sql = "SELECT * FROM users WHERE email = ?";
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, "s", $email);

    // Execute the query
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);

    // Check if user exists and password is correct
    if ($row = mysqli_fetch_assoc($result)) {
        // Verify password
        if (password_verify($password, $row['password'])) {
            // Password is correct
            $_SESSION['user_id'] = $row['id'];
            $_SESSION['email'] = $email;
            header("Location: dashboard.php");
            exit();
        } else {
            // Incorrect password
            $_SESSION['msg'] = "Incorrect email or password!";
            header("Location: login.php");
            exit();
        }
    } else {
        // User does not exist
        $_SESSION['msg'] = "User with that email does not exist!";
        header("Location: login.php");
        exit();
    }
}

// Function to show messages
function showMessages() {
    if (isset($_SESSION['msg'])) {
        echo '<div class="alert alert-danger" style="margin-top: 10px;">' . $_SESSION['msg'] . '</div>';
        unset($_SESSION['msg']);
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login Page</title>
</head>
<body>
    <?php showMessages(); ?>

    <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
        Email: <br>
        <input type="email" name="email"> <br>
        Password: <br>
        <input type="password" name="password"> <br>
        <input type="submit" value="Login">
    </form>

    <p>Don't have an account? <a href="register.php">Register here</a>.</p>
</body>
</html>


<?php
// Start session
session_start();

// Include database connection file
include_once("db_connection.php");

// Define variables and initialize with empty values
$username = $password = "";
$username_err = $password_err = "";

// Processing form data when form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {

    // Validate username
    if (empty(trim($_POST["username"]))) {
        $username_err = "Please enter a username.";
    } else {
        $username = trim($_POST["username"]);
    }

    // Validate password
    if (empty(trim($_POST["password"]))) {
        $password_err = "Please enter a password.";
    } else {
        $password = trim($_POST["password"]);
    }

    // Check input errors before accessing the database
    if (empty($username_err) && empty($password_err)) {

        // Sanitize username and password to prevent SQL injection
        $username = mysqli_real_escape_string($db, htmlspecialchars($username));
        $password = mysqli_real_escape_string($db, htmlspecialchars($password));

        // Query the database for user with this username
        $sql = "SELECT id, username, password FROM users WHERE username = ?";
        
        if ($stmt = mysqli_prepare($db, $sql)) {
            
            // Bind variables to the prepared statement as parameters
            mysqli_stmt_bind_param($stmt, "s", $username);

            // Execute the prepared query
            if (mysqli_stmt_execute($stmt)) {

                // Store result
                mysqli_stmt_store_result($stmt);

                // Check if username exists in the database
                if (mysqli_stmt_num_rows($stmt) == 1) {
                    
                    // Bind result variables
                    mysqli_stmt_bind_result($stmt, $id, $username, $hashed_password);
                    mysqli_stmt_fetch($stmt);

                    // Verify password
                    if (password_verify($password, $hashed_password)) {

                        // Password is correct, so start a new session
                        session_regenerate(true); // Prevent session fixation

                        $_SESSION["loggedin"] = true;
                        $_SESSION["id"] = $id;
                        $_SESSION["username"] = $username;

                        // Set up remember me cookie if selected
                        if (!empty($_POST['remember'])) {
                            $cookie_name = "login_cookie";
                            $cookie_value = md5($username . $password . "some_salt");
                            setcookie($cookie_name, $cookie_value, time() + (86400 * 30), "/", "", false, true);
                        }

                        // Redirect to dashboard
                        header("location: dashboard.php");
                        exit();
                    } else {
                        $password_err = "The password you entered was incorrect.";
                    }
                } else {
                    $username_err = "No account found with this username.";
                }
            } else {
                echo "Oops! Something went wrong. Please try again later.";
            }

            // Close statement
            mysqli_stmt_close($stmt);
        }
    }

    // Close database connection
    mysqli_close($db);
}

// If form hasn't been submitted, check for remember me cookie
else if (!empty($_COOKIE['login_cookie'])) {
    $cookie_value = $_COOKIE['login_cookie'];
    
    // Query the database to see if this cookie exists
    $sql = "SELECT id, username, password FROM users WHERE md5(username . password . 'some_salt') = ?";
    
    if ($stmt = mysqli_prepare($db, $sql)) {
        
        mysqli_stmt_bind_param($stmt, "s", $cookie_value);
        
        if (mysqli_stmt_execute($stmt)) {
            mysqli_stmt_store_result($stmt);
            
            if (mysqli_stmt_num_rows($stmt) == 1) {
                // Bind result variables
                mysqli_stmt_bind_result($stmt, $id, $username, $hashed_password);
                mysqli_stmt_fetch($stmt);

                // Set session variables
                $_SESSION["loggedin"] = true;
                $_SESSION["id"] = $id;
                $_SESSION["username"] = $username;

                // Redirect to dashboard
                header("location: dashboard.php");
            }
        }
    }

    mysqli_close($db);
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Login Page</title>
    <style>
        body { font-family: Arial, sans-serif; }
        .wrapper { width: 350px; padding: 20px; margin: 0 auto; }
        .form-group { margin-bottom: 10px; }
        input[type="text"], input[type="password"] { width: 100%; padding: 8px; }
        button { background-color: #4CAF50; color: white; padding: 8px 16px; border: none; cursor: pointer; width: 100%; }
    </style>
</head>
<body>
    <div class="wrapper">
        <?php
            if (!empty($username_err) || !empty($password_err)) {
                echo "<div style='color: red;'>";
                if (!empty($username_err)) {
                    echo $username_err . "<br>";
                }
                if (!empty($password_err)) {
                    echo $password_err;
                }
                echo "</div><br>";
            }
        ?>

        <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
            <div class="form-group">
                <label>Username:</label>
                <input type="text" name="username" value="<?php echo $username; ?>">
            </div>

            <div class="form-group">
                <label>Password:</label>
                <input type="password" name="password">
            </div>

            <div class="form-group">
                <label><input type="checkbox" name="remember"> Remember me</label>
            </div>

            <button type="submit">Login</button>
        </form>
    </div>
</body>
</html>


<?php
$host = 'localhost';
$username_db = 'your_username';
$password_db = 'your_password';
$db_name = 'your_database';

$db = mysqli_connect($host, $username_db, $password_db, $db_name);

if (!$db) {
    die("Connection failed: " . mysqli_connect_error());
}
?>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$db_name = 'my_database';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $db_name);

if (!$conn) {
    die('Could not connect: ' . mysqli_error($conn));
}

session_start();

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Sanitize input
    $email = trim(htmlspecialchars(mysqli_real_escape_string($conn, $_POST['email'])));
    $password = trim(htmlspecialchars(mysqli_real_escape_string($conn, $_POST['password'])));

    if (empty($email) || empty($password)) {
        echo "Please fill in all fields.";
        exit();
    }

    // Query to check user credentials
    $sql = "SELECT id, name, email, password FROM users WHERE email = '$email'";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) == 1) {
        $row = mysqli_fetch_assoc($result);
        
        // Verify password
        if (password_verify($password, $row['password'])) {
            // Start session and store user details
            $_SESSION['id'] = $row['id'];
            $_SESSION['name'] = $row['name'];
            $_SESSION['email'] = $row['email'];
            $_SESSION['login_time'] = time();

            // Redirect to welcome page
            header("Location: welcome.php");
            exit();
        } else {
            echo "Incorrect password.";
            exit();
        }
    } else {
        echo "No user found with this email address.";
        exit();
    }
}

mysqli_close($conn);
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Login Page</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 20px;
            background-color: #f0f0f0;
        }
        .container {
            max-width: 500px;
            margin: 0 auto;
            padding: 20px;
            background-color: white;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }
        .form-group {
            margin-bottom: 15px;
        }
        label {
            display: block;
            margin-bottom: 5px;
        }
        input[type="email"],
        input[type="password"] {
            width: 100%;
            padding: 8px;
            border: 1px solid #ddd;
            border-radius: 4px;
        }
        button {
            background-color: #4CAF50;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            width: 100%;
        }
        button:hover {
            background-color: #45a049;
        }
    </style>
</head>
<body>
    <div class="container">
        <h2>Login</h2>
        <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
            <div class="form-group">
                <label for="email">Email:</label>
                <input type="email" id="email" name="email" required>
            </div>
            <div class="form-group">
                <label for="password">Password:</label>
                <input type="password" id="password" name="password" required>
            </div>
            <button type="submit">Login</button>
        </form>
    </div>
</body>
</html>


$hashed_password = password_hash($password, PASSWORD_DEFAULT);


<?php
// Database connection details
$host = 'localhost';
$username_db = 'root';
$password_db = '';
$database_name = 'login_system';

// Create database connection
$conn = mysqli_connect($host, $username_db, $password_db, $database_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function loginUser($username, $password) {
    global $conn;

    // Sanitize input to prevent SQL injection
    $username = mysqli_real_escape_string($conn, $username);
    $password = mysqli_real_escape_string($conn, $password);

    // Check if username exists in database
    $query = "SELECT * FROM users WHERE username = '$username'";
    $result = mysqli_query($conn, $query);

    if (mysqli_num_rows($result) == 0) {
        return array('status' => 'error', 'message' => 'Account does not exist!');
    }

    // Get user data
    $user_data = mysqli_fetch_assoc($result);
    
    // Verify password
    if (hash_equals($user_data['password'], hash('sha256', $password))) {
        // Password is correct, create session
        session_start();
        $_SESSION['username'] = $username;
        $_SESSION['session_id'] = mysqli_real_escape_string($conn, session_id());
        
        // Generate a random token for security
        $token = bin_rand(32);
        setcookie('auth_token', $token, time() + 3600 * 24 * 30, '/', '', false, true); // Store cookie for 30 days
        
        // Update database with new token and session ID
        $update_query = "UPDATE users SET session_id = '".$_SESSION['session_id']."', auth_token = '$token' WHERE username = '$username'";
        mysqli_query($conn, $update_query);
        
        return array('status' => 'success', 'message' => 'Login successful!');
    } else {
        // Password is incorrect
        return array('status' => 'error', 'message' => 'Incorrect password!');
    }
}

// Example usage:
if (isset($_POST['login'])) {
    $username = $_POST['username'];
    $password = $_POST['password'];
    
    $result = loginUser($username, $password);
    
    if ($result['status'] == 'success') {
        echo "Welcome, " . $_SESSION['username'] . "!";
    } else {
        echo $result['message'];
    }
}
?>


<?php
session_start();
require 'db_connect.php'; // Database connection file

// Check if form is submitted
if (isset($_POST['login'])) {
    $username = $_POST['username'];
    $password = $_POST['password'];

    // Validate input
    if (empty($username) || empty($password)) {
        $error = "Username and password are required!";
    } else {
        // Prepare and bind
        $stmt = $conn->prepare("SELECT id, username, password FROM users WHERE username = ?");
        $stmt->bind_param("s", $username);
        $stmt->execute();
        $stmt->store_result();

        if ($stmt->num_rows > 0) {
            $stmt->bind_result($id, $db_username, $db_password);
            $stmt->fetch();

            // Verify password
            if (password_verify($password, $db_password)) {
                // Password is correct
                $_SESSION['user_id'] = $id;
                $_SESSION['username'] = $db_username;

                // Redirect to dashboard or home page
                header("Location: dashboard.php");
                exit();
            } else {
                $error = "Incorrect password!";
            }
        } else {
            $error = "Username not found!";
        }
    }

    $stmt->close();
    $conn->close();
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login Page</title>
</head>
<body>
    <?php if (isset($error)) { echo "<p style='color:red'>$error</p>"; } ?>
    
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="POST">
        <label for="username">Username:</label><br>
        <input type="text" id="username" name="username"><br>
        
        <label for="password">Password:</label><br>
        <input type="password" id="password" name="password"><br><br>
        
        <input type="submit" name="login" value="Login">
    </form>

    <p>Don't have an account? <a href="register.php">Register here</a></p>
</body>
</html>


<?php
// Replace with your actual database credentials
$host = "localhost";
$user = "root";
$password = "";
$db_name = "your_database";

$conn = mysqli_connect($host, $user, $password, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}
?>


<?php
include("db_connect.php"); // Include your database connection file

function user_login($username, $password, $conn) {
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    $username = $conn->real_escape_string($username);
    $password = $conn->real_escape_string($password);

    $query = "SELECT * FROM users WHERE username = '" . $username . "'";
    $result = $conn->query($query);

    if ($result->num_rows == 1) {
        $row = $result->fetch_assoc();
        if (password_verify($password, $row['password_hash'])) {
            // Set session variables
            $_SESSION['userLoggedIn'] = true;
            $_SESSION['username'] = $row['username'];
            $_SESSION['userId'] = $row['id'];
            return true;
        } else {
            return false;
        }
    } else {
        return false;
    }
}

// Example usage:
if (isset($_POST['login'])) {
    $username = $_POST['username'];
    $password = $_POST['password'];

    if (user_login($username, $password, $conn)) {
        header("Location: welcome.php");
        exit();
    } else {
        echo "Invalid username or password!";
    }
}

$conn->close();
?>


ini_set('session.cookie_httponly', 1);
ini_set('session.cookie_secure', 1); // Use HTTPS only
ini_set('session.use_strict_mode', 1);


<?php
// Database configuration
$host = "localhost";
$username_db = "root"; // Replace with your database username
$password_db = "";    // Replace with your database password
$database = "login_system";

// Connect to the database
$conn = mysqli_connect($host, $username_db, $password_db, $database);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function login() {
    global $conn;
    
    // Check if form is submitted
    if (isset($_POST['login'])) {
        $username = mysqli_real_escape_string($conn, $_POST['username']);
        $password = mysqli_real_escape_string($conn, $_POST['password']);

        // Query the database for the user
        $query = "SELECT * FROM users WHERE username = '$username'";
        $result = mysqli_query($conn, $query);

        if (mysqli_num_rows($result) == 1) {
            $row = mysqli_fetch_assoc($result);
            
            // Verify password
            if (password_verify($password, $row['password'])) {
                // Start session and store user data
                session_start();
                $_SESSION['username'] = $row['username'];
                $_SESSION['email'] = $row['email'];
                $_SESSION['user_id'] = $row['id'];

                // Redirect to dashboard or home page
                header("Location: dashboard.php");
                exit();
            } else {
                echo "Incorrect password!";
            }
        } else {
            echo "Username does not exist!";
        }
    }
}

// Call the login function
login();

?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Login Page</title>
    <!-- Add Bootstrap for styling -->
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
</head>
<body class="bg-light">
    <div class="container mt-5">
        <div class="row justify-content-center">
            <div class="col-md-6 col-lg-4">
                <form method="POST" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
                    <h2 class="text-center mb-4">Login</h2>
                    <div class="form-group">
                        <input type="text" name="username" class="form-control" placeholder="Username" required>
                    </div>
                    <div class="form-group">
                        <input type="password" name="password" class="form-control" placeholder="Password" required>
                    </div>
                    <button type="submit" name="login" class="btn btn-primary btn-block">Login</button>
                </form>
            </div>
        </div>
    </div>
</body>
</html>


<?php
session_start();

// Database connection settings
$host = 'localhost';
$dbUsername = 'root';
$dbPassword = '';
$dbName = 'mydatabase';

// Connect to database
$conn = mysqli_connect($host, $dbUsername, $dbPassword, $dbName);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function login($username, $password, $conn) {
    // Sanitize inputs
    $username = mysqli_real_escape_string($conn, $username);
    $password = mysqli_real_escape_string($conn, $password);

    try {
        // Prepare the SQL statement to prevent SQL injection
        $stmt = $conn->prepare("SELECT * FROM users WHERE username = ?");
        $stmt->bind_param('s', $username);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            // User exists, get user data
            $user = $result->fetch_assoc();

            // Verify password
            if (password_verify($password, $user['password'])) {
                // Password is correct, start session
                $_SESSION['logged_in'] = true;
                $_SESSION['username'] = $user['username'];
                return true;
            } else {
                // Incorrect password
                return false;
            }
        } else {
            // User does not exist
            return false;
        }
    } catch (Exception $e) {
        // Handle any exceptions that occur
        echo "Error: " . $e->getMessage();
        return false;
    }
}

// Example usage:
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $username = $_POST['username'];
    $password = $_POST['password'];

    if (login($username, $password, $conn)) {
        header("Location: dashboard.php");
        exit();
    } else {
        echo "Invalid username or password!";
    }
}

// Close database connection
mysqli_close($conn);
?>


<?php
// Start the session
session_start();

// Include database connection file
include('db_connection.php');

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get username and password from form data
    $username = mysqli_real_escape_string($conn, $_POST['username']);
    $password = mysqli_real_escape_string($conn, $_POST['password']);

    // SQL query to fetch user information
    $sql = "SELECT id, username, password, email FROM users WHERE username = '$username'";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) == 1) {
        // User exists
        $row = mysqli_fetch_assoc($result);
        
        // Verify the password
        if (md5($password) == $row['password']) {
            // Password is correct
            
            // Store user session data
            $_SESSION['loggedin'] = true;
            $_SESSION['id'] = $row['id'];
            $_SESSION['username'] = $row['username'];
            $_SESSION['email'] = $row['email'];

            // Redirect to dashboard or home page
            header("location: dashboard.php");
            exit();
        } else {
            // Password is incorrect
            $error = "Incorrect password!";
        }
    } else {
        // User doesn't exist
        $error = "Username not found!";
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login Page</title>
</head>
<body>
    <?php if (isset($error)) { ?>
        <p style="color: red;"><?php echo $error; ?></p>
    <?php } ?>

    <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
        Username: <input type="text" name="username" required><br>
        Password: <input type="password" name="password" required><br>
        <input type="submit" value="Login">
    </form>

    Don't have an account? <a href="signup.php">Sign Up</a> here.
</body>
</html>


<?php
session_start();

// Database connection details
$host = "localhost";
$username_db = "root";
$password_db = "";
$db_name = "user_login";

// Connect to database
$conn = mysqli_connect($host, $username_db, $password_db, $db_name);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Handle login form submission
if (isset($_POST['login'])) {
    // Get input data
    $username = $_POST['username'];
    $password = $_POST['password'];

    // Sanitize the inputs to prevent SQL injection
    $username = mysqli_real_escape_string($conn, $username);
    $password = mysqli_real_escape_string($conn, $password);

    // Check if username exists in the database
    $sql = "SELECT id, username, password FROM users WHERE username = '$username'";
    $result = mysqli_query($conn, $sql);
    $row = mysqli_fetch_assoc($result);

    if (mysqli_num_rows($result) == 1) {
        // Verify password
        if (password_verify($password, $row['password'])) {
            // Password is correct
            $_SESSION['id'] = $row['id'];
            $_SESSION['username'] = $row['username'];
            
            // Redirect to dashboard or home page
            header("Location: dashboard.php");
            exit();
        } else {
            // Incorrect password
            $error = "Incorrect username or password";
        }
    } else {
        // Username doesn't exist
        $error = "Incorrect username or password";
    }
}

// Close database connection
mysqli_close($conn);

?>

<!DOCTYPE html>
<html>
<head>
    <title>Login Page</title>
    <style>
        body { font-family: Arial, sans-serif; }
        .login-form { max-width: 400px; margin: 50px auto; padding: 20px; border: 1px solid #ddd; }
        .form-group { margin-bottom: 20px; }
    </style>
</head>
<body>
    <div class="login-form">
        <?php if (isset($error)) { ?>
            <div style="color: red;"><?php echo $error ?></div>
        <?php } ?>

        <h1>Login</h1>
        <form method="POST" action="<?php echo $_SERVER['PHP_SELF'] ?>">
            <div class="form-group">
                <label>Username:</label>
                <input type="text" name="username" required>
            </div>
            <div class="form-group">
                <label>Password:</label>
                <input type="password" name="password" required>
            </div>
            <button type="submit" name="login">Login</button>
        </form>
    </div>
</body>
</html>


<?php
session_start();

// Database configuration
$host = "localhost";
$dbUsername = "root";
$dbPassword = "";
$dbName = "test";

// Connect to database
$conn = mysqli_connect($host, $dbUsername, $dbPassword, $dbName);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Sanitize input
    $username = htmlspecialchars(trim($_POST['username']));
    $password = $_POST['password'];

    if (empty($username) || empty($password)) {
        echo "Username or password cannot be empty!";
        exit();
    }

    // Prepare and bind
    $stmt = mysqli_prepare($conn, "SELECT id, username, password FROM users WHERE username = ?");
    mysqli_stmt_bind_param($stmt, "s", $username);
    
    // Execute the query
    if (mysqli_stmt_execute($stmt)) {
        $result = mysqli_stmt_get_result($stmt);
        
        if ($result->num_rows > 0) {
            $user = $result->fetch_assoc();
            
            // Verify password
            if (password_verify($password, $user['password'])) {
                // Set session variables
                $_SESSION['id'] = $user['id'];
                $_SESSION['username'] = $user['username'];
                $_SESSION['login_time'] = time();

                // Optional: Remember me cookie
                $cookieUsername = $username;
                $cookiePassword = $password; // Never store plain password in cookies
                setcookie("remember_username", $cookieUsername, time() + 60*60*24*30); // 30 days
                
                // Redirect to dashboard
                header("Location: dashboard.php");
                exit();
            } else {
                echo "Incorrect password!";
            }
        } else {
            echo "No user found with this username!";
        }
    }
}

// Show login form if not submitted
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login Page</title>
</head>
<body>
    <h2>Login</h2>
    <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
        Username: <input type="text" name="username">
        Password: <input type="password" name="password">
        Remember me: <input type="checkbox" name="remember">
        <input type="submit" value="Login">
    </form>
</body>
</html>


<?php
// Start session
session_start();

// Database connection parameters
$host = 'localhost';
$dbUsername = 'root';
$dbPassword = '';
$dbName = 'my_database';

try {
    // Create database connection using PDO
    $conn = new PDO("mysql:host=$host;dbname=$dbName", $dbUsername, $dbPassword);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        // Sanitize input data to prevent SQL injection
        $username = htmlspecialchars($_POST['username']);
        $password = $_POST['password'];
        
        // Query the database for user with matching username or email
        $stmt = $conn->prepare("SELECT * FROM users WHERE username=? OR email=?");
        $stmt->execute([$username, $username]);
        $user = $stmt->fetch(PDO::FETCH_ASSOC);

        if ($user) {
            // Verify password
            if (password_verify($password, $user['password'])) {
                // Password is correct, start session
                
                // Set session variables
                $_SESSION["user_id"] = $user["id"];
                $_SESSION["username"] = $user["username"];
                $_SESSION["login_time"] = time();
                
                // Remember me functionality
                if (isset($_POST['remember_me'])) {
                    // Set cookie to remember user for 30 days
                    setcookie("username", $username, time() + (86400 * 30), "/", "", false, true);
                    setcookie("password", $password, time() + (86400 * 30), "/", "", false, true);
                }
                
                // Redirect to dashboard
                header("Location: dashboard.php");
                die();
            } else {
                // Password incorrect
                $error = "Invalid username or password.";
            }
        } else {
            // User not found
            $error = "Invalid username or password.";
        }
    }

} catch(PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

// Close database connection
$conn = null;

// If there was an error, redirect back to login with error message
if (isset($error)) {
    header("Location: login.html?error=" . urlencode($error));
} else {
    // No action needed if form wasn't submitted
}
?>


<?php
// Start session
session_start();

// Unset all session variables and destroy the session
session_unset();
session_destroy();

// Delete remember me cookies if they exist
if (isset($_COOKIE["username"]) || isset($_COOKIE["password"])) {
    setcookie("username", "", time() - 3600);
    setcookie("password", "", time() - 3600);
}

// Redirect to login page
header("Location: login.html");
die();
?>


<?php
function loginUser($username, $password) {
    // Check if username or password is empty
    if (empty($username) || empty($password)) {
        throw new Exception("Username and password are required.");
    }

    try {
        // Database connection details
        $db_host = 'localhost';
        $db_username = 'root';
        $db_password = '';
        $db_name = 'test';

        // Create a new mysqli object
        $conn = new mysqli($db_host, $db_username, $db_password, $db_name);

        // Check connection
        if ($conn->connect_error) {
            throw new Exception("Connection failed: " . $conn->connect_error);
        }

        // Prepare the SQL statement to prevent SQL injection
        $stmt = $conn->prepare("SELECT password FROM users WHERE username = ?");
        
        // Bind parameters to the prepared statement
        $stmt->bind_param('s', $username);

        // Execute the query
        $stmt->execute();

        // Get the result
        $result = $stmt->get_result();
        
        if ($row = $result->fetch_assoc()) {
            // Verify password (assuming passwords are stored as plain text)
            if (password_verify($password, $row['password'])) {
                // Password is correct
                
                // Start the session
                session_start();
                
                // Store user data in session
                $_SESSION['username'] = $username;
                $_SESSION['logged_in'] = true;

                // Optional: Remember me cookie
                if (!empty($_POST['remember_me'])) {
                    setcookie('username', $username, time() + 3600); // Cookie expires after 1 hour
                }

                return true; // Login successful
            } else {
                throw new Exception("Invalid password.");
            }
        } else {
            throw new Exception("Username not found.");
        }

    } catch (Exception $e) {
        // Display error message or log the error
        die("Error: " . $e->getMessage());
    } finally {
        // Close database connection
        if ($conn != null) {
            $conn->close();
        }
    }
}

// Usage example:
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    try {
        loginUser($_POST['username'], $_POST['password']);
        header('Location: dashboard.php');
    } catch (Exception $e) {
        echo "Error: " . $e->getMessage();
    }
}
?>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

try {
    // Create database connection
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        // Get form data
        $username = $_POST['username'];
        $password = $_POST['password'];

        // Check if username and password are provided
        if (empty($username) || empty($password)) {
            die("Username or password cannot be empty!");
        }

        // Prepare SQL statement to prevent SQL injection
        $stmt = $conn->prepare("SELECT * FROM users WHERE username = ?");
        $stmt->execute([$username]);
        $user = $stmt->fetch(PDO::FETCH_ASSOC);

        if ($user) {
            // Verify password
            if (password_verify($password, $user['password'])) {
                // Start session and store user data
                session_start();
                $_SESSION['id'] = $user['id'];
                $_SESSION['username'] = $user['username'];
                $_SESSION['email'] = $user['email'];

                // Redirect to dashboard or home page
                header("Location: dashboard.php");
                exit();
            } else {
                die("Incorrect password!");
            }
        } else {
            die("Username not found!");
        }
    }

} catch(PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

// Close database connection
$conn = null;
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login Page</title>
    <style>
        body { font-family: Arial, sans-serif; }
        .login-container { max-width: 400px; margin: 0 auto; padding: 20px; }
        .form-group { margin-bottom: 15px; }
        input { width: 100%; padding: 8px; box-sizing: border-box; }
    </style>
</head>
<body>
    <div class="login-container">
        <h1>Login</h1>
        <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
            <div class="form-group">
                <input type="text" placeholder="Username" name="username" required>
            </div>
            <div class="form-group">
                <input type="password" placeholder="Password" name="password" required>
            </div>
            <button type="submit">Login</button>
        </form>
    </div>
</body>
</html>


<?php
// This code assumes you have a database connection established
session_start();

function login($username, $password, $conn) {
    // Check if username or password is empty
    if (empty($username) || empty($password)) {
        return "Username or Password cannot be empty.";
    }
    
    // Query the database for the user
    $stmt = $conn->prepare("SELECT id, username, password FROM users WHERE username = ?");
    $stmt->bind_param("s", $username);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows == 0) {
        return "Username not found.";
    }
    
    // Get user data
    $user = $result->fetch_assoc();
    
    // Verify password
    if (!password_verify($password, $user['password'])) {
        return "Incorrect Password.";
    }
    
    // Start session and store user data
    $_SESSION['id'] = $user['id'];
    $_SESSION['username'] = $user['username'];
    
    return "Login successful!";
}

// Example usage:
if (isset($_POST['login'])) {
    $username = $_POST['username'];
    $password = $_POST['password'];
    
    $result = login($username, $password, $conn);
    
    if ($result == "Login successful!") {
        header("Location: dashboard.php");
        exit();
    } else {
        echo $result;
    }
}
?>


$password = password_hash($_POST['password'], PASSWORD_DEFAULT);


if (!isset($_COOKIE['username'])) {
    $remember = $_POST['remember'];
    
    if ($remember) {
        setcookie('username', $username, time() + 3600); // Cookie valid for 1 hour
    }
}


<?php
session_start();

// Database connection parameters
$host = 'localhost';
$user = 'root'; // database username
$password = ''; // database password
$db_name = 'testdb';

// Connect to MySQL database
$conn = mysqli_connect($host, $user, $password, $db_name);

// Check if connection was successful
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function login_user() {
    global $conn;

    // Check if form is submitted
    if (isset($_POST['username']) && isset($_POST['password'])) {
        $username = $_POST['username'];
        $password = $_POST['password'];

        // Prevent SQL injection by escaping the inputs
        $username = mysqli_real_escape_string($conn, $username);
        $password = mysqli_real_escape_string($conn, $password);

        // Query the database for the user
        $query = "SELECT * FROM users WHERE username = ?";
        
        if ($stmt = mysqli_prepare($conn, $query)) {
            mysqli_stmt_bind_param($stmt, 's', $username);
            mysqli_stmt_execute($stmt);
            $result = mysqli_stmt_get_result($stmt);
            
            // Check if user exists
            if ($row = mysqli_fetch_assoc($result)) {
                // Verify password
                if (password_verify($password, $row['password'])) {
                    // Password is correct, start the session
                    $_SESSION['user_id'] = $row['id'];
                    $_SESSION['username'] = $row['username'];
                    $_SESSION['login_time'] = time();
                    
                    // Redirect to dashboard or home page
                    header("Location: dashboard.php");
                    exit;
                } else {
                    // Password is incorrect
                    header("Location: login.php?error=incorrect_password");
                    exit;
                }
            } else {
                // User doesn't exist
                header("Location: login.php?error=user_not_found");
                exit;
            }
        }
    } else {
        // Form not submitted yet
        header("Location: login.php");
        exit;
    }
}

// Call the login function
login_user();

// Close database connection
mysqli_close($conn);
?>


<?php
session_start();

// Database connection details
$host = "localhost";
$username = "root";
$password = "";
$db_name = "my_database";

// Connect to database
$conn = mysqli_connect($host, $username, $password, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Check if form is submitted
if (isset($_POST['submit'])) {
    // Get user input
    $email = $_POST['email'];
    $pass = $_POST['password'];

    // Sanitize inputs to prevent SQL injection
    $email = mysqli_real_escape_string($conn, $email);
    $pass = mysqli_real_escape_string($conn, $pass);

    // Hash password
    $hash_pass = md5($pass); // Note: MD5 is not recommended for production; use bcrypt instead

    // Query database
    $sql = "SELECT * FROM users WHERE email='$email'";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) > 0) {
        // Get user data
        $row = mysqli_fetch_assoc($result);
        
        // Verify password
        if ($hash_pass == $row['password']) {
            // Start session and store user details
            $_SESSION['user_id'] = $row['id'];
            $_SESSION['username'] = $row['username'];
            $_SESSION['email'] = $row['email'];
            $_SESSION['login_time'] = time();

            // Redirect to dashboard
            header("Location: dashboard.php");
            exit();
        } else {
            echo "Incorrect password!";
        }
    } else {
        echo "Email does not exist!";
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login Page</title>
</head>
<body>
    <h2>Login Form</h2>
    <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]);?>">
        Email: <input type="email" name="email" required><br><br>
        Password: <input type="password" name="password" required><br><br>
        <input type="submit" name="submit" value="Login">
    </form>
</body>
</html>

// Close database connection
mysqli_close($conn);
?>


<?php
session_start();

// Database connection details
$host = "localhost";
$username = "root";
$password = "";
$db_name = "my_database";

try {
    $conn = new mysqli($host, $username, $password, $db_name);
} catch (Exception $e) {
    die("Connection failed: " . $e->getMessage());
}

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Check if form is submitted
if (isset($_POST['submit'])) {
    $email = $_POST['email'];
    $pass = $_POST['password'];

    // Prepare and bind
    $stmt = $conn->prepare("SELECT id, username, email, password FROM users WHERE email=?");
    $stmt->bind_param("s", $email);
    $stmt->execute();
    
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        $row = $result->fetch_assoc();

        // Verify password
        if (password_verify($pass, $row['password'])) {
            // Start session and store user details
            $_SESSION['user_id'] = $row['id'];
            $_SESSION['username'] = $row['username'];
            $_SESSION['email'] = $row['email'];
            $_SESSION['login_time'] = time();

            // Redirect to dashboard
            header("Location: dashboard.php");
            exit();
        } else {
            echo "Incorrect password!";
        }
    } else {
        echo "Email does not exist!";
    }

    $stmt->close();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login Page</title>
</head>
<body>
    <h2>Login Form</h2>
    <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]);?>">
        Email: <input type="email" name="email" required><br><br>
        Password: <input type="password" name="password" required><br><br>
        <input type="submit" name="submit" value="Login">
    </form>
</body>
</html>

// Close database connection
$conn->close();
?>


<?php
session_start();

// Database connection configuration
$host = "localhost";
$username_db = "root";
$password_db = "";
$database_name = "mydb";

// Create database connection
$conn = mysqli_connect($host, $username_db, $password_db, $database_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function user_login($username, $password) {
    global $conn;

    try {
        // Check if username exists in the database
        $stmt = $conn->prepare("SELECT id, username, password FROM users WHERE username = ?");
        $stmt->bind_param("s", $username);
        $stmt->execute();
        
        $result = $stmt->get_result();
        $user = $result->fetch_assoc();

        if (!$user) {
            return "User not found!";
        }

        // Verify the password
        if (!password_verify($password, $user['password'])) {
            return "Incorrect password!";
        }

        // Start session and store user data
        $_SESSION['id'] = $user['id'];
        $_SESSION['username'] = $user['username'];

        return true;

    } catch (Exception $e) {
        return "Error: " . $e->getMessage();
    }
}

// Example usage:
if (isset($_POST['login'])) {
    $username_input = $_POST['username'];
    $password_input = $_POST['password'];

    $login_result = user_login($username_input, $password_input);

    if ($login_result === true) {
        // Redirect to dashboard or home page
        header("Location: dashboard.php");
        exit();
    } else {
        echo $login_result;
    }
}

// Close database connection
mysqli_close($conn);
?>


<?php
// Database connection configuration
$host = 'localhost';
$user = 'root';
$password = '';
$db_name = 'your_database';

// Create database connection
$conn = mysqli_connect($host, $user, $password, $db_name);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function login_user() {
    global $conn;

    // Check if form is submitted
    if (isset($_POST['login'])) {
        $email = mysqli_real_escape_string($conn, $_POST['email']);
        $password = mysqli_real_escape_string($conn, $_POST['password']);

        // Check for empty fields
        if (empty($email) || empty($password)) {
            return "Please fill in all required fields!";
        }

        // Query the database to check user credentials
        $sql = "SELECT * FROM users WHERE email='$email' LIMIT 1";
        $result = mysqli_query($conn, $sql);
        $user = mysqli_fetch_assoc($result);

        // Check if user exists
        if (!$user) {
            return "Email not found!";
        }

        // Compare passwords (password should be stored as a hash in the database)
        $db_password = $user['password'];
        if ($db_password != md5($password)) {  // Note: Use better hashing algorithms like bcrypt or password_hash()
            return "Incorrect password!";
        }

        // Set session variables
        $_SESSION['id'] = $user['id'];
        $_SESSION['username'] = $user['username'];
        
        // Start the session
        session_start();

        // Redirect to dashboard after login
        header("Location: dashboard.php");
        exit();
    }
}

// Call the function
if (isset($_POST['login'])) {
    $error_message = login_user();
    if ($error_message != '') {
        echo "<div class='alert alert-danger'>" . $error_message . "</div>";
    }
}

// Close database connection
mysqli_close($conn);
?>


$stmt = $conn->prepare("SELECT * FROM users WHERE email=? LIMIT 1");
$stmt->bind_param("s", $email);
$stmt->execute();


// When storing a new password
$hashed_password = password_hash($password, PASSWORD_DEFAULT);

// When verifying
if (password_verify($password, $db_password)) {
    // Password matches
}


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login Page</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 20px;
            background-color: #f0f0f0;
        }
        .login-container {
            max-width: 400px;
            margin: 0 auto;
            background-color: white;
            padding: 20px;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }
        .form-group {
            margin-bottom: 15px;
        }
        input {
            width: 100%;
            padding: 8px;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-sizing: border-box;
        }
        button {
            width: 100%;
            padding: 10px;
            background-color: #4CAF50;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
        button:hover {
            background-color: #45a049;
        }
        .message {
            margin-top: 10px;
            padding: 10px;
            text-align: center;
            font-weight: bold;
        }
        .success {
            background-color: #f8f9fa;
            color: #28a745;
            border: 1px solid #28a745;
        }
        .error {
            background-color: #f8f9fa;
            color: #dc3545;
            border: 1px solid #dc3545;
        }
    </style>
</head>
<body>

<?php
// Database connection details
$host = 'localhost';
$username_db = 'root'; // Change this to your database username
$password_db = '';     // Change this to your database password
$db_name = 'login_system'; // Change this to your database name

// Connect to the database
$conn = mysqli_connect($host, $username_db, $password_db, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Start session
session_start();

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get username and password from POST data
    $username = mysqli_real_escape_string($conn, $_POST['username']);
    $password = mysqli_real_escape_string($conn, $_POST['password']);

    // Query the database for the user
    $sql = "SELECT * FROM users WHERE username='$username'";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) == 1) {
        // User exists, fetch the data
        $user_data = mysqli_fetch_assoc($result);
        
        // Verify password
        if ($password == $user_data['password']) { // Note: In real application, use password_hash() and password_verify()
            echo "<div class='message success'>Login successful!</div>";
            // Start session and store user data
            $_SESSION['loggedin'] = true;
            $_SESSION['username'] = $username;
            
            // Redirect to dashboard or home page
            header("refresh:2;url=dashboard.php");
        } else {
            echo "<div class='message error'>Incorrect password!</div>";
        }
    } else {
        echo "<div class='message error'>Username does not exist!</div>";
    }
}

// Close database connection
mysqli_close($conn);
?>

<div class="login-container">
    <h2>Login</h2>
    <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
        <div class="form-group">
            <input type="text" name="username" placeholder="Enter username" required>
        </div>
        <div class="form-group">
            <input type="password" name="password" placeholder="Enter password" required>
        </div>
        <button type="submit">Login</button>
    </form>
    <p>Don't have an account? <a href="register.php">Register here</a></p>
</div>

</body>
</html>


<?php
// Database connection configuration
define('DB_HOST', 'localhost');
define('DB_USERNAME', 'root');
define('DB_PASSWORD', '');
define('DB_NAME', 'your_database_name');

// Create database connection
function db_connect() {
    $conn = mysqli_connect(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);
    
    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
    }
    return $conn;
}

// Login function
function user_login($username, $password) {
    // Connect to the database
    $conn = db_connect();
    
    // Prepare and sanitize input
    $username = mysqli_real_escape_string($conn, $username);
    $password = mysqli_real_escape_string($conn, $password);
    
    // Query the database for the user
    $query = "SELECT * FROM users WHERE username = ?";
    $stmt = mysqli_prepare($conn, $query);
    mysqli_stmt_bind_param($stmt, "s", $username);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);
    
    if (mysqli_num_rows($result) == 0) {
        // No user found
        return false;
    }
    
    $user = mysqli_fetch_assoc($result);
    
    // Verify password
    if (!password_verify($password, $user['password'])) {
        // Password doesn't match
        return false;
    }
    
    // Start session and store user data
    session_start();
    $_SESSION['id'] = $user['id'];
    $_SESSION['username'] = $user['username'];
    $_SESSION['email'] = $user['email'];
    $_SESSION['admin'] = $user['is_admin'];
    
    return true;
}

// Logout function
function user_logout() {
    session_start();
    session_unset();
    session_destroy();
    header("Location: login.php");
}

// Example usage:
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST['username'];
    $password = $_POST['password'];
    
    if (user_login($username, $password)) {
        // Login successful
        header("Location: dashboard.php");
        exit();
    } else {
        // Login failed
        echo "Invalid username or password";
    }
}
?>


function create_user($username, $email, $raw_password) {
    $conn = db_connect();
    
    // Hash the password
    $hashed_password = password_hash($raw_password, PASSWORD_DEFAULT);
    
    // Prepare and execute query
    $query = "INSERT INTO users (username, email, password) VALUES (?, ?, ?)";
    $stmt = mysqli_prepare($conn, $query);
    mysqli_stmt_bind_param($stmt, "sss", $username, $email, $hashed_password);
    mysqli_stmt_execute($stmt);
    
    return true;
}


<?php
// Include the database connection file
include("db_connection.php");

session_start();

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST['username'];
    $password = $_POST['password'];

    // Prepare and bind
    $stmt = $conn->prepare("SELECT id, username, email, password FROM users WHERE username = ?");
    $stmt->bind_param("s", $username);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        $user = $result->fetch_assoc();
        // Verify password
        if (password_verify($password, $user['password'])) {
            $_SESSION["loggedin"] = true;
            $_SESSION["username"] = $user['username'];
            $_SESSION["email"] = $user['email'];
            
            header("Location: dashboard.php");
            exit();
        } else {
            $error = "Incorrect password!";
        }
    } else {
        $error = "Username does not exist!";
    }

    // Close the statement and connection
    $stmt->close();
    $conn->close();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login Page</title>
</head>
<body>
    <?php if (isset($error)) { echo "<p style='color:red'>$error</p>"; } ?>
    <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
        Username: <input type="text" name="username"><br>
        Password: <input type="password" name="password"><br>
        <input type="submit" value="Login">
    </form>
</body>
</html>


<?php
// Start session
session_start();

// Include configuration file
require_once('config.php');

// Initialize variables
$error = "";
$remember_me_cookie = "";

// Check if form is submitted
if (isset($_POST['submit'])) {
    // Get user input
    $email = trim($_POST['email']);
    $password = trim($_POST['password']);
    
    // Sanitize inputs
    $email = mysqli_real_escape_string($conn, $email);
    $password = mysqli_real_escape_string($conn, $password);

    // Query database for user with provided email
    $query = "SELECT * FROM users WHERE email = ?";
    $stmt = $conn->prepare($query);
    $stmt->bind_param("s", $email);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows == 1) {
        // User exists, get user data
        $user = $result->fetch_assoc();
        
        // Verify password
        if (password_verify($password, $user['password'])) {
            // Password matches
            
            // Set session variables
            $_SESSION['user_id'] = $user['id'];
            $_SESSION['username'] = $user['username'];
            $_SESSION['email'] = $user['email'];
            
            // Remember me functionality
            if (isset($_POST['remember_me'])) {
                $token = bin2hex(random_bytes(32)); // Generate unique token
                $cookie_value = $token . "|" . time() + 30*86400; // Set cookie to expire in 30 days
                
                // Update user's remember_me_token and token_expiration_time in database
                $update_query = "UPDATE users SET remember_me_token = ?, token_expiration_time = ? WHERE id = ?";
                $update_stmt = $conn->prepare($update_query);
                $update_stmt->bind_param("sis", $token, time() + 30*86400, $_SESSION['user_id']);
                $update_stmt->execute();
                
                // Set cookie
                setcookie('remember_me', $cookie_value, time() + 30*86400, '/', null, false, true);
            }
            
            // Redirect to dashboard
            header("Location: dashboard.php");
            exit();
        } else {
            $error = "Incorrect password.";
        }
    } else {
        $error = "Email not found.";
    }
}

// Close database connection
$conn->close();
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Login Page</title>
    <!-- Add your CSS styles here -->
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 20px;
            background-color: #f4f4f4;
        }
        
        .container {
            max-width: 500px;
            margin: 0 auto;
            padding: 20px;
            background-color: white;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }
        
        .error {
            color: red;
            margin-bottom: 10px;
        }
    </style>
</head>
<body>
    <div class="container">
        <?php if (!empty($error)) { ?>
            <div class="error"><?php echo $error; ?></div>
        <?php } ?>

        <h2>Login</h2>
        
        <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
            <input type="email" name="email" placeholder="Enter your email" required><br><br>
            <input type="password" name="password" placeholder="Enter your password" required><br><br>
            <label>
                <input type="checkbox" name="remember_me"> Remember me
            </label><br><br>
            <button type="submit" name="submit">Login</button>
        </form>
        
        <p>Don't have an account? <a href="register.php">Register here</a>.</p>
    </div>
</body>
</html>


<?php
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

$conn = new mysqli($host, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}
?>


<?php
session_start();

// Database connection details
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

try {
    // Create a database connection using PDO
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

    if ($_SERVER['REQUEST_METHOD'] == 'POST') {
        // Sanitize input
        $email = filter_var($_POST['email'], FILTER_SANITIZE_EMAIL);
        $password = $_POST['password'];

        // Prepare the SQL statement to prevent SQL injection
        $stmt = $conn->prepare("SELECT * FROM users WHERE email=:email");
        $stmt->bindParam(':email', $email, PDO::PARAM_STR);
        $stmt->execute();

        $user = $stmt->fetch(PDO::FETCH_ASSOC);

        if ($user) {
            // Verify the password
            if (password_verify($password, $user['password'])) {
                // Password is correct
                session_regenerate(true); // Regenerate session ID for security

                // Store user data in session
                $_SESSION['id'] = $user['id'];
                $_SESSION['username'] = $user['username'];
                $_SESSION['email'] = $user['email'];
                $_SESSION['logged_in'] = true;

                header("Location: dashboard.php"); // Redirect to dashboard
                exit();
            } else {
                // Password is incorrect
                $error_message = "Incorrect email or password.";
            }
        } else {
            // User does not exist
            $error_message = "Incorrect email or password.";
        }
    }
} catch(PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}
?>


<?php
// Database configuration
$host = 'localhost';
$username_db = 'root';
$password_db = '';
$db_name = 'login_system';

// Create connection
function connect_db() {
    global $host, $username_db, $password_db, $db_name;
    $conn = new mysqli($host, $username_db, $password_db, $db_name);
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }
    return $conn;
}

// Login function
function login($username, $password) {
    $conn = connect_db();
    
    // Prepare and bind the query to prevent SQL injection
    $stmt = $conn->prepare("SELECT id, username, password, email, is_active FROM users WHERE username=?");
    $stmt->bind_param("s", $username);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows == 0) {
        return false; // User not found
    }

    $user_data = $result->fetch_assoc();

    // Verify password
    if (!password_verify($password, $user_data['password'])) {
        return false; // Incorrect password
    }

    // Check if account is active
    if ($user_data['is_active'] == 0) {
        return array('success' => false, 'message' => 'Account not activated');
    }

    // If everything is correct
    return array('success' => true, 'data' => $user_data);
}

// Handle login process
if (isset($_POST['login'])) {
    $username = $_POST['username'];
    $password = $_POST['password'];

    $response = login($username, $password);

    if ($response['success']) {
        // Start session and store user data
        session_start();
        $_SESSION['user_id'] = $response['data']['id'];
        $_SESSION['username'] = $response['data']['username'];
        $_SESSION['email'] = $response['data']['email'];
        
        // Set session timeout (30 minutes)
        ini_set('session.cookie_lifetime', 1800);
        ini_set('session.gc_maxlifetime', 1800);

        header("Location: dashboard.php");
    } else {
        echo $response['message'];
    }
}

// Logout function
function logout() {
    session_start();
    session_unset();
    session_destroy();
    header("Location: login.php");
}
?>


<?php
// sanitize_input.php

function sanitizeInput($data) {
    $data = trim($data);
    $data = stripslashes($data);
    return htmlspecialchars($data, ENT_QUOTES, 'UTF-8');
}

?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Login</title>
</head>
<body>
    <?php
    // Configuration
    include_once('config.php');

    if (isset($_POST['submit'])) {
        $username = sanitizeInput($_POST['username']);
        $password = $_POST['password'];
        
        $conn = mysqli_connect(DB_HOST, DB_USER, DB_PASS, DB_NAME);
        if (!$conn) {
            die("Connection failed: " . mysqli_connect_error());
        }
        
        // Prevent SQL Injection
        $username = mysqli_real_escape_string($conn, $username);
        
        $sql = "SELECT id, username, password FROM users WHERE username = '$username'";
        $result = mysqli_query($conn, $sql);
        
        if (mysqli_num_rows($result) > 0) {
            $row = mysqli_fetch_assoc($result);
            $db_password = $row['password'];
            
            // Verify password
            if (md5($password) == $db_password) {
                session_start();
                $_SESSION['user_id'] = $row['id'];
                $_SESSION['username'] = $row['username'];
                
                // Remember me cookie
                setcookie("stayLoggedIn", "yes", time() + 3600*24*7, "/");
                
                header('Location: dashboard.php');
                exit();
            } else {
                echo "<div style='color:red'>Incorrect username or password!</div>";
            }
        } else {
            echo "<div style='color:red'>User doesn't exist!</div>";
        }
        
        mysqli_close($conn);
    }
    ?>

    <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
        Username: <input type="text" name="username"><br>
        Password: <input type="password" name="password"><br>
        Remember Me: <input type="checkbox" name="remember_me"><br>
        <input type="submit" name="submit" value="Login">
    </form>
</body>
</html>


<?php
session_start();

// Database connection
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'login_system';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get username and password from form
    $username = $_POST['username'];
    $password = $_POST['password'];

    // Sanitize inputs
    $username = htmlspecialchars(strip_tags(trim($username)));
    $password = htmlspecialchars(strip_tags(trim($password)));

    // Check if username and password are not empty
    if ($username == "" || $password == "") {
        die("Username or Password cannot be empty");
    }

    try {
        // Prepare statement to select user with the given username
        $stmt = $conn->prepare("SELECT * FROM users WHERE username = ?");
        $stmt->execute([$username]);
        $user = $stmt->fetch(PDO::FETCH_ASSOC);

        if ($user) {
            // Verify password
            if (password_verify($password, $user['password'])) {
                // Password is correct
                $_SESSION['user_id'] = $user['id'];
                $_SESSION['username'] = $user['username'];
                $_SESSION['logged_in'] = true;

                // Check if "Remember Me" checkbox was selected
                if ($_POST['remember_me']) {
                    $cookie_name = 'login_cookie';
                    $cookie_value = $username . '|' . hash('sha256', $password);
                    setcookie($cookie_name, $cookie_value, time() + (86400 * 30), "/", "", true, true); // Secure and HttpOnly
                }

                header("Location: dashboard.php");
                exit();
            } else {
                // Password is incorrect
                die("Incorrect username or password");
            }
        } else {
            // Username not found
            die("Incorrect username or password");
        }
    } catch(PDOException $e) {
        echo "Error: " . $e->getMessage();
    }
}

// Close database connection
$conn = null;
?>


<?php
session_start();
error_reporting(E_ALL);
ini_set('display_errors', 1);

// Database connection details
define("DB_HOST", "localhost");
define("DB_USER", "root");
define("DB_PASS", "");
define("DB_NAME", "user_login");

// Connect to database
$connection = mysqli_connect(DB_HOST, DB_USER, DB_PASS, DB_NAME);
if (!$connection) {
    die("Connection failed: " . mysqli_connect_error());
}

// If form is submitted
if (isset($_POST['submit'])) {
    $username = $_POST['username'];
    $password = $_POST['password'];

    // Sanitize input
    $username = mysqli_real_escape_string($connection, $username);
    $password = mysqli_real_escape_string($connection, $password);

    // Query database for user
    $query = "SELECT * FROM users WHERE username = ?";
    $stmt = $connection->prepare($query);
    $stmt->bind_param("s", $username);
    $stmt->execute();
    
    if ($stmt->errno) {
        die("Database error: " . $stmt->error);
    }

    // Get result
    $result = $stmt->get_result();
    if ($result->num_rows > 0) {
        $user = $result->fetch_assoc();

        // Verify password
        if (password_verify($password, $user['password'])) {
            // Set session variables
            $_SESSION['username'] = $username;
            $_SESSION['logged_in'] = true;

            // Redirect to dashboard
            header("Location: dashboard.php");
            exit();
        } else {
            $error = "Incorrect password";
        }
    } else {
        $error = "Username does not exist";
    }

    $stmt->close();
}

$connection->close();

?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login Page</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 20px;
            background-color: #f0f0f0;
        }
        .container {
            max-width: 400px;
            margin: 0 auto;
            background-color: white;
            padding: 20px;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }
        .form-group {
            margin-bottom: 15px;
        }
        input[type="text"], input[type="password"] {
            width: 100%;
            padding: 8px;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-sizing: border-box;
        }
        button {
            background-color: #4CAF50;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
        button:hover {
            background-color: #45a049;
        }
        .error {
            color: red;
            margin-bottom: 10px;
        }
    </style>
</head>
<body>
    <div class="container">
        <?php if (isset($error)) { ?>
            <div class="error"><?php echo $error; ?></div>
        <?php } ?>
        
        <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
            <div class="form-group">
                <label for="username">Username:</label>
                <input type="text" id="username" name="username" required>
            </div>
            <div class="form-group">
                <label for="password">Password:</label>
                <input type="password" id="password" name="password" required>
            </div>
            <button type="submit" name="submit">Login</button>
        </form>
    </div>
</body>
</html>


<?php
// Include database configuration file
include('config.php');

function loginUser() {
    // Check if form is submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        $username = mysqli_real_escape_string($conn, $_POST['username']);
        $password = $_POST['password'];
        
        // Validate inputs
        if (empty($username) || empty($password)) {
            return "Username and password are required!";
        }
        
        $username = trim($username);
        $password = trim($password);

        // Query the database for user with matching username
        $sql = "SELECT * FROM users WHERE username = '$username'";
        $result = mysqli_query($conn, $sql);

        if (mysqli_num_rows($result) > 0) {
            $row = mysqli_fetch_assoc($result);
            
            // Verify password
            if (password_verify($password, $row['password'])) {
                // Start session and store user details
                session_start();
                $_SESSION['logged_in'] = true;
                $_SESSION['user_id'] = $row['user_id'];
                $_SESSION['username'] = $row['username'];

                // Redirect to dashboard or home page
                header('Location: dashboard.php');
                exit();
            } else {
                return "Incorrect password!";
            }
        } else {
            return "Username does not exist!";
        }
    }
}
?>


<?php
// config.php
$servername = "localhost";
$username = "db_user";
$password = "db_password";
$dbname = "my_database";

// Create connection
$conn = mysqli_connect($servername, $username, $password, $dbname);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}
?>


<?php
session_start();
try {
    // Database connection parameters
    $dbHost = 'localhost';
    $dbName = 'your_database_name';
    $dbUser = 'your_username';
    $dbPass = 'your_password';

    // Connect to the database
    $conn = new PDO("mysql:host=$dbHost;dbname=$dbName", $dbUser, $dbPass);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

    // Sanitize input data
    $username = htmlspecialchars(trim($_POST['username']));
    $password = htmlspecialchars(trim($_POST['password']));

    // Prepare SQL statement to check if the username exists
    $stmt = $conn->prepare("SELECT id, username, password FROM users WHERE username = ?");
    $stmt->bindParam(1, $username);
    $stmt->execute();

    // Check if a user was found
    if ($stmt->rowCount() > 0) {
        $row = $stmt->fetch(PDO::FETCH_ASSOC);

        // Verify the password
        if (password_verify($password, $row['password'])) {
            // Password is correct, start session and store user data
            $_SESSION['user_id'] = $row['id'];
            $_SESSION['username'] = $row['username'];
            $_SESSION['login_time'] = time();

            // Redirect to dashboard or home page
            header('Location: dashboard.php');
            exit();
        } else {
            // Password is incorrect
            die("Invalid username or password");
        }
    } else {
        // Username does not exist
        die("Invalid username or password");
    }

} catch(PDOException $e) {
    // Display error message if something goes wrong
    die("Connection failed: " . $e->getMessage());
}
// Close database connection
$conn = null;
?>


<?php
session_start();

// Database configuration
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

try {
    // Connect to the database
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

    // Check if form is submitted
    if (isset($_POST['username']) && isset($_POST['password'])) {
        $usernameInput = $_POST['username'];
        $passwordInput = $_POST['password'];

        try {
            // Prepare the SQL statement to prevent SQL injection
            $stmt = $conn->prepare("SELECT * FROM users WHERE username = ?");
            $stmt->execute([$usernameInput]);
            $user = $stmt->fetch(PDO::FETCH_ASSOC);

            if ($user) {
                // Verify the password
                if (password_verify($passwordInput, $user['password'])) {
                    // Password is correct, start a session and store user data
                    $_SESSION['id'] = $user['id'];
                    $_SESSION['username'] = $user['username'];
                    
                    // Optional: Set a remember me cookie
                    if (!isset($_COOKIE['remember'])) {
                        $rememberToken = bin2hex(random_bytes(16));
                        setcookie('remember', $rememberToken, time() + 3600 * 24 * 7, '/', null, true, true);
                    }

                    // Redirect to the dashboard or home page
                    header("Location: dashboard.php");
                    die();
                } else {
                    // Password is incorrect
                    throw new Exception("Incorrect password.");
                }
            } else {
                // User does not exist
                throw new Exception("User does not exist.");
            }
        } catch (Exception $e) {
            // Handle database errors or invalid credentials
            echo "Error: " . $e->getMessage();
            exit;
        }
    } else {
        // Form is not submitted, redirect to login page
        header("Location: login.html");
        die();
    }

} catch (PDOException $e) {
    // Handle database connection errors
    echo "Database error: " . $e->getMessage();
    exit;
}


<?php
// registration.php

session_start();

$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

    if (isset($_POST['register'])) {
        $newUsername = $_POST['username'];
        $ newPassword = password_hash($_POST['password'], PASSWORD_DEFAULT); // Securely hash the password

        try {
            $stmt = $conn->prepare("INSERT INTO users (username, password) VALUES (?, ?)");
            $stmt->execute([$newUsername, $newPassword]);

            echo "Registration successful! You can now login.";
        } catch (Exception $e) {
            echo "Error: " . $e->getMessage();
        }
    }

} catch (PDOException $e) {
    echo "Database error: " . $e->getMessage();
}


<?php
session_start();

// Destroy all sessions
$_SESSION = array();

// If it's desired to delete the cookie as well, set its expiration date back
if (ini_get("session.use_cookies")) {
    $params = session_get_cookie_params();
    setcookie(session_name(), '', time() - 42000,
        $params["path"], $params["domain"],
        $params["secure"], $params["httponly"]
    );
}

// Finally, destroy the session
session_destroy();

// Redirect to login page
header("Location: login.html");
exit();


// In login.php, after successful login:
$rememberToken = bin2hex(random_bytes(16));
setcookie('remember', $rememberToken, time() + 3600 * 24 * 7, '/', null, true, true);


// Set session lifetime to 30 minutes
ini_set('session.cookie_lifetime', 1800);


<?php
session_start();

// Database configuration
$host = 'localhost';
$usernameDB = 'root';
$passwordDB = '';
$dbname = 'test';

// Connect to database
$conn = mysqli_connect($host, $usernameDB, $passwordDB, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Check if form is submitted
if (isset($_POST['username']) && isset($_POST['password'])) {

    // Sanitize input to prevent SQL injection
    $username = mysqli_real_escape_string($conn, $_POST['username']);
    $password = $_POST['password'];

    // Query the database for user with this username
    $sql = "SELECT id, username, password FROM users WHERE username='$username'";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) == 1) {
        $row = mysqli_fetch_assoc($result);
        
        // Verify password using password_verify
        if (password_verify($password, $row['password'])) {

            // Start a session and store user data
            $_SESSION['id'] = $row['id'];
            $_SESSION['username'] = $row['username'];
            $_SESSION['email'] = $row['email'];
            $_SESSION['login_time'] = time();
            $_SESSION['session_id'] = session_id();

            // Remember Me functionality
            if (isset($_POST['remember_me'])) {
                $remember_token = bin2hex(random_bytes(32));
                setcookie('remember_me', $remember_token, time() + 30*24*60*60, '/');
                // Store token in database for later use
                $sql_token = "INSERT INTO remember_tokens (user_id, token) VALUES ('{$row['id']}', '$remember_token')";
                mysqli_query($conn, $sql_token);
            }

            // Redirect to dashboard or home page
            header('Location: dashboard.php');
            exit();
        } else {
            // Password is incorrect
            header("Location: login.php?error=Invalid username or password");
            exit();
        }
    } else {
        // No user found with this username
        header("Location: login.php?error=Invalid username or password");
        exit();
    }

} else {
    // If form not submitted, redirect to login page
    header('Location: login.php');
}
?>



// In login.php after successful login:
if (isset($_POST['remember_me'])) {
    $remember_token = bin2hex(random_bytes(32));
    setcookie('username', $username, time() + 30*24*60*60, '/', null, false, true);
    // Set additional cookies if needed
}


// In login.php after starting the session:
$_SESSION['timeout'] = time() + 3600; // 1 hour session duration


<?php
// Include any necessary files (e.g., database connection)
include 'db_connection.php';

// Check if form was submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username_email = mysqli_real_escape_string($conn, trim($_POST['username_email']));
    $password = $_POST['password'];

    // Query the database for user with this username or email
    $sql = "SELECT id, username, email, password FROM users WHERE username = ? OR email = ?";
    
    // Prepare and bind parameters
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, "ss", $username_email, $username_email);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);

    if ($result) {
        $user = mysqli_fetch_assoc($result);
        
        // If user exists and password matches
        if (password_verify($password, $user['password'])) {
            // Start session
            session_start();
            
            // Store user data in session
            $_SESSION['user_id'] = $user['id'];
            $_SESSION['username'] = $user['username'];
            $_SESSION['email'] = $user['email'];
            $_SESSION['login_time'] = time();

            // Redirect to dashboard or home page
            header("Location: dashboard.php");
            exit();
        } else {
            // Password is incorrect
            header("Location: login.html?error=Invalid username/email or password");
            exit();
        }
    } else {
        // No user found with this username/email
        header("Location: login.html?error=Invalid username/email or password");
        exit();
    }

    mysqli_close($conn);
}
?>


<?php
// Database connection details
$hostname = "localhost";
$username_db = "root"; // Change this to your database username
$password_db = "";     // Change this to your database password
$dbname = "user_login";

// Create connection
$conn = mysqli_connect($hostname, $username_db, $password_db, $dbname);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}
?>


<?php
// Include database connection
include 'db_connection.php';

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = mysqli_real_escape_string($conn, trim($_POST['username']));
    $email = mysqli_real_escape_string($conn, trim($_POST['email']));
    $password = password_hash($_POST['password'], PASSWORD_DEFAULT);

    // Check if username or email already exists
    $check_sql = "SELECT id FROM users WHERE username = ? OR email = ?";
    $stmt_check = mysqli_prepare($conn, $check_sql);
    mysqli_stmt_bind_param($stmt_check, "ss", $username, $email);
    mysqli_stmt_execute($stmt_check);
    $result_check = mysqli_stmt_get_result($stmt_check);

    if (mysqli_num_rows($result_check) > 0) {
        // Username or email already exists
        echo "Username or email already exists!";
    } else {
        // Insert new user
        $insert_sql = "INSERT INTO users (username, email, password) VALUES (?, ?, ?)";
        $stmt_insert = mysqli_prepare($conn, $insert_sql);
        mysqli_stmt_bind_param($stmt_insert, "sss", $username, $email, $password);
        
        if (mysqli_stmt_execute($stmt_insert)) {
            // Registration successful
            echo "Registration successful! You can now login.";
        } else {
            // Error occurred
            echo "Error registering user: " . mysqli_error($conn);
        }
    }

    mysqli_close($conn);
}
?>


<?php
session_start();

// Database connection settings
$host = "localhost";
$username_db = "root";
$password_db = "";
$database_name = "user_login";

// Connect to database
$conn = mysqli_connect($host, $username_db, $password_db, $database_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function login() {
    global $conn;

    // Check if form is submitted
    if (isset($_POST['login'])) {
        // Sanitize input data
        $username = htmlspecialchars(trim($_POST['username']));
        $password = htmlspecialchars(trim($_POST['password']));

        // Prepare and execute SQL statement
        $stmt = mysqli_prepare($conn, "SELECT * FROM users WHERE username = ? OR email = ?");
        mysqli_stmt_bind_param($stmt, "ss", $username, $username);
        mysqli_stmt_execute($stmt);
        
        $result = mysqli_stmt_get_result($stmt);
        
        // Check if user exists
        if ($row = mysqli_fetch_assoc($result)) {
            // Verify password
            if (md5($password) === $row['password']) {
                // Set session variables
                $_SESSION['loggedin'] = true;
                $_SESSION['username'] = $row['username'];
                $_SESSION['email'] = $row['email'];

                // Remember me functionality
                if (isset($_POST['remember'])) {
                    setcookie('username', $username, time() + 3600 * 24 * 7);
                }

                // Redirect to dashboard
                header("Location: dashboard.php");
                exit();
            } else {
                $error = "Incorrect password!";
                echo "<script>alert('$error');</script>";
            }
        } else {
            $error = "User not found! Please register first.";
            echo "<script>alert('$error');</script>";
        }
    }
}

// Call the login function
login();

// Close database connection
mysqli_close($conn);
?>


<?php
// Include database connection file
include_once("db_connection.php");

session_start();

if (isset($_POST['login'])) {
    // Get form data
    $username = htmlspecialchars(trim(stripslashes($_POST['username'])));
    $password = htmlspecialchars(trim(stripslashes($_POST['password'])));

    // Sanitize inputs to prevent SQL injection and XSS attacks
    $username = mysqli_real_escape_string($conn, $username);
    $password = mysqli_real_escape_string($conn, $password);

    // Query the database for user with matching username
    $sql = "SELECT * FROM users WHERE username = '$username'";
    $result = mysqli_query($conn, $sql);

    if ($result) {
        $row = mysqli_fetch_assoc($result);
        $db_password = $row['password'];

        // Verify password
        if (md5($password) == $db_password) {
            // Start session and store user data
            $_SESSION['user_id'] = $row['id'];
            $_SESSION['username'] = $row['username'];
            $_SESSION['email'] = $row['email'];

            // Optional: Set a remember me cookie
            if (isset($_POST['remember'])) {
                setcookie('username', $username, time() + 3600); // Cookie expires in 1 hour
            }

            // Redirect to dashboard or home page
            header("Location: dashboard.php");
            exit();
        } else {
            $error = "Invalid username or password";
        }
    } else {
        $error = "Error querying database";
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login Page</title>
</head>
<body>
    <?php if (isset($error)) { ?>
        <div style="color: red;"><?php echo $error; ?></div>
    <?php } ?>

    <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
        Username:<br>
        <input type="text" name="username"><br>
        Password:<br>
        <input type="password" name="password"><br><br>
        Remember me: <input type="checkbox" name="remember"><br><br>
        <input type="submit" name="login" value="Login">
    </form>
</body>
</html>

<?php
// Close database connection
mysqli_close($conn);
?>


// Hashing when creating a new user:
$hashed_password = password_hash($password, PASSWORD_DEFAULT);

// Verifying during login:
if (password_verify($entered_password, $db_password)) {
    // Password matches
}


<?php
// Database connection configuration
$host = "localhost";
$username = "root";
$password = "";
$dbname = "user_login";

// Create database connection
$conn = new mysqli($host, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Start session
session_start();

// Function to sanitize input data
function sanitize($data) {
    return htmlspecialchars(trim($data));
}

// Login function
function user_login() {
    global $conn;

    if (isset($_POST['login'])) {
        // Get form data
        $username = isset($_POST['username']) ? sanitize($_POST['username']) : '';
        $password = isset($_POST['password']) ? $_POST['password'] : '';

        // Validate input
        if (empty($username) || empty($password)) {
            echo "Username and password are required!";
            return;
        }

        // Check for CSRF token (you should implement this)
        // This is a simplified example, so we'll skip CSRF protection

        // Prepare SQL statement to prevent SQL injection
        $stmt = $conn->prepare("SELECT id, username, password FROM users WHERE username = ?");
        $stmt->bind_param("s", $username);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            // Get user data
            $user = $result->fetch_assoc();

            // Verify password (password_hash() and password_verify() are recommended)
            if (password_verify($password, $user['password'])) {
                // Password is correct

                // Start session and store user data
                $_SESSION['logged_in'] = true;
                $_SESSION['user_id'] = $user['id'];
                $_SESSION['username'] = $user['username'];

                // Regenerate session ID to prevent session fixation attacks
                session_regenerate();

                // Redirect to dashboard or home page
                header("Location: dashboard.php");
                exit();
            } else {
                // Password is incorrect
                echo "Incorrect password!";
            }
        } else {
            // Username not found
            echo "Username does not exist!";
        }

        $stmt->close();
    }

    // Display login form if not logged in
    if (!isset($_SESSION['logged_in'])) {
        include 'login_form.php';
    }
}

// Call the login function
user_login();

// Close database connection
$conn->close();
?>


<?php
session_start();

// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$db_name = 'login_system';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Handle login form submission
if (isset($_POST['submit'])) {
    // Sanitize input data
    $email = htmlspecialchars(trim($_POST['email']));
    $pass = htmlspecialchars(trim($_POST['password']));

    // Check if inputs are not empty
    if ($email == "" || $pass == "") {
        $_SESSION['message'] = "Email and password are required";
        header("Location: login.php");
        exit();
    }

    // SQL injection prevention
    $email = mysqli_real_escape_string($conn, $email);
    $pass = mysqli_real_escape_string($conn, $pass);

    // Query the database for user with matching email
    $sql = "SELECT * FROM users WHERE email = '$email'";
    $result = mysqli_query($conn, $sql);

    if (!$result) {
        $_SESSION['message'] = "Error querying database";
        header("Location: login.php");
        exit();
    }

    // Check if user exists
    if (mysqli_num_rows($result) == 0) {
        $_SESSION['message'] = "User not found. Please check your email.";
        header("Location: login.php");
        exit();
    }

    $user_data = mysqli_fetch_assoc($result);

    // Verify password
    if (!password_verify($pass, $user_data['password'])) {
        $_SESSION['message'] = "Incorrect password";
        header("Location: login.php");
        exit();
    }

    // Set session variables
    $_SESSION['id'] = $user_data['id'];
    $_SESSION['email'] = $user_data['email'];
    $_SESSION['username'] = $user_data['username'];
    $_SESSION['logged_in'] = true;

    // Optional: Check if user has exceeded login attempts
    if ($user_data['login_attempts'] >= 3) {
        $_SESSION['message'] = "Account locked. Please contact support.";
        header("Location: login.php");
        exit();
    }

    // Reset login attempts and update last login time
    $reset_login_attempts = "UPDATE users SET login_attempts = 0 WHERE id = {$user_data['id']}";
    mysqli_query($conn, $reset_login_attempts);

    // Redirect to dashboard after successful login
    $_SESSION['message'] = "Welcome back, " . $user_data['username'];
    header("Location: dashboard.php");
    exit();
}

// Close database connection
mysqli_close($conn);
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Login Page</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 20px;
            background-color: #f4f4f4;
        }

        .container {
            max-width: 500px;
            margin: 0 auto;
            background-color: white;
            padding: 30px;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }

        .form-group {
            margin-bottom: 20px;
        }

        input {
            width: 100%;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-sizing: border-box;
        }

        button {
            width: 100%;
            padding: 12px;
            background-color: #4CAF50;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }

        button:hover {
            background-color: #45a049;
        }

        .message {
            margin-top: 10px;
            padding: 10px;
            background-color: #fff3cd;
            border-left: 4px solid #ffc107;
            color: #6c6c6c;
        }
    </style>
</head>
<body>
    <div class="container">
        <?php
        // Display message if exists
        if (isset($_SESSION['message'])) {
            echo "<div class='message'>";
            echo $_SESSION['message'];
            echo "</div>";
            unset($_SESSION['message']);
        }
        ?>

        <h2>Login</h2>
        <form method="POST" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
            <div class="form-group">
                <label for="email">Email:</label>
                <input type="email" id="email" name="email" placeholder="Enter your email">
            </div>

            <div class="form-group">
                <label for="password">Password:</label>
                <input type="password" id="password" name="password" placeholder="Enter your password">
            </div>

            <button type="submit" name="submit">Login</button>
        </form>

        <p>Don't have an account? <a href="register.php">Register here</a></p>
    </div>
</body>
</html>


<?php
session_start();
// Database configuration
$host = 'localhost';
$username_db = 'root';
$password_db = '';
$dbname = 'user_login';

// Create database connection
$conn = new mysqli($host, $username_db, $password_db, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Check if form is submitted
if (isset($_POST['login'])) {
    // Sanitize input data
    function sanitizeInput($data) {
        $data = trim($data);
        $data = stripslashes($data);
        $data = htmlspecialchars($data);
        return $data;
    }

    $username = sanitizeInput($_POST['username']);
    $password = $_POST['password'];

    // Check if username and password are not empty
    if (empty($username) || empty($password)) {
        echo "Username or password cannot be empty!";
    } else {
        // Prepare SQL statement to prevent SQL injection
        $stmt = $conn->prepare("SELECT id, username, password FROM users WHERE username = ?");
        $stmt->bind_param("s", $username);
        $stmt->execute();
        
        // Store result in a variable
        $result = $stmt->get_result();
        
        if ($result->num_rows == 1) {
            // Fetch user data
            $user = $result->fetch_assoc();
            
            // Verify password
            if (password_verify($password, $user['password'])) {
                // Start session and store user data
                $_SESSION['id'] = $user['id'];
                $_SESSION['username'] = $user['username'];
                
                // Regenerate session ID to prevent fixation
                session_regenerate();
                
                // Redirect to dashboard or home page
                header("Location: dashboard.php");
                exit();
            } else {
                echo "Incorrect password!";
            }
        } else {
            echo "User does not exist!";
        }
    }
}

// Close database connection
$conn->close();
?>


$hashed_password = password_hash($password, PASSWORD_DEFAULT);


<?php
// Include database connection file
include_once('db_connection.php');

// Start session
session_start();

// Function to sanitize input
function sanitizeInput($data) {
    $data = trim($data);
    $data = htmlspecialchars($data, ENT_QUOTES, 'UTF-8');
    return $data;
}

// Check if user is already logged in
if (isset($_SESSION['user_id'])) {
    header("Location: dashboard.php");
    exit();
}

// Process login form submission
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get form data
    $username = sanitizeInput($_POST['username']);
    $password = $_POST['password'];
    
    // Check for empty fields
    if (empty($username) || empty($password)) {
        $error = "Please fill in all required fields!";
    } else {
        // Generate CSRF token and validate
        if (!isset($_SESSION['csrf_token']) || $_POST['csrf_token'] != $_SESSION['csrf_token']) {
            die("Invalid CSRF token");
        }
        
        // Prepare SQL query to check user credentials
        $stmt = $conn->prepare("SELECT id, username, password FROM users WHERE username = ?");
        $stmt->bind_param("s", $username);
        $stmt->execute();
        $result = $stmt->get_result();
        
        if ($result->num_rows == 1) {
            // User exists
            $user_data = $result->fetch_assoc();
            $hashed_password = $user_data['password'];
            
            // Verify password
            if (password_verify($password, $hashed_password)) {
                // Password is correct
                $_SESSION['user_id'] = $user_data['id'];
                $_SESSION['logged_in'] = true;
                
                // Remember me functionality
                if (isset($_POST['remember'])) {
                    $cookie_name = "login_cookie";
                    $cookie_value = bin2hex(random_bytes(32)); // Generate random string for cookie
                    setcookie($cookie_name, $cookie_value, time() + (86400 * 7), "/");
                    
                    // Store cookie hash in database
                    $hash = password_hash($cookie_value, PASSWORD_DEFAULT);
                    $stmt = $conn->prepare("UPDATE users SET remember_me_cookie = ? WHERE id = ?");
                    $stmt->bind_param("si", $hash, $user_data['id']);
                    $stmt->execute();
                }
                
                // Redirect to dashboard
                header("Location: dashboard.php");
                exit();
            } else {
                // Password is incorrect
                $error = "Invalid username or password!";
            }
        } else {
            // User does not exist
            $error = "Invalid username or password!";
        }
    }
    
    // Regenerate CSRF token for next request
    $_SESSION['csrf_token'] = bin2hex(random_bytes(32));
} else {
    // Generate CSRF token for GET requests
    if (!isset($_SESSION['csrf_token'])) {
        $_SESSION['csrf_token'] = bin2hex(random_bytes(32));
    }
}

// Close database connection
$conn->close();
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login Page</title>
</head>
<body>
    <?php if (isset($error)) { ?>
        <div style="color: red;"><?php echo $error; ?></div><br>
    <?php } ?>

    <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
        <input type="hidden" name="csrf_token" value="<?php echo $_SESSION['csrf_token']; ?>">
        
        Username:<br>
        <input type="text" name="username"><br><br>
        
        Password:<br>
        <input type="password" name="password"><br><br>
        
        Remember me: 
        <input type="checkbox" name="remember"><br><br>
        
        <input type="submit" value="Login">
    </form>

    <a href="forgot_password.php">Forgot Password?</a><br>
    <a href="register.php">Create New Account</a>
</body>
</html>


<?php
// Database connection details
$host = "localhost";
$username_db = "root"; // Replace with your database username
$password_db = ""; // Replace with your database password
$db_name = "user_login"; // Replace with your database name

// Create connection
$conn = new mysqli($host, $username_db, $password_db, $db_name);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function login_user() {
    global $conn;

    // Get username and password from POST request
    $username = htmlspecialchars($_POST['username']);
    $password = htmlspecialchars($_POST['password']);

    try {
        // Prepare SQL statement to prevent SQL injection
        $stmt = $conn->prepare("SELECT id, username, password FROM users WHERE username = ?");
        $stmt->bind_param("s", $username);
        $stmt->execute();
        
        // Store result in a variable
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            // Fetch user data
            $row = $result->fetch_assoc();

            // Verify password
            if (password_verify($password, $row['password'])) {
                // Create session variables
                $_SESSION['username'] = $row['username'];
                $_SESSION['user_id'] = $row['id'];

                // Redirect to dashboard or home page
                header("Location: dashboard.php");
                exit();
            } else {
                // Password is incorrect
                header("Location: login.php?error=wrong_credentials");
                exit();
            }
        } else {
            // Username not found
            header("Location: login.php?error=user_not_found");
            exit();
        }
    } catch (Exception $e) {
        // Handle any errors
        echo "Error: " . $e->getMessage();
        exit();
    }
}

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    login_user();
}
?>


<?php
// login.php

session_start();

// Database connection details
define('DB_HOST', 'localhost');
define('DB_USER', 'your_username');
define('DB_PASSWORD', 'your_password');
define('DB_NAME', 'your_database');

// Connect to database
$conn = mysqli_connect(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $username = $_POST['username'];
    $password = $_POST['password'];

    // Sanitize the inputs
    $username = mysqli_real_escape_string($conn, $username);
    $password = mysqli_real_escape_string($conn, $password);

    // Check if username exists
    $query = "SELECT id, password FROM users WHERE username = '$username'";
    $result = mysqli_query($conn, $query);

    if (!$result) {
        die("Query failed: " . mysqli_error($conn));
    }

    $row = mysqli_fetch_assoc($result);
    $count = mysqli_num_rows($result);

    if ($count == 0) {
        echo "Error: Username not found.";
        exit();
    } else {
        // Verify the password
        if (password_verify($password, $row['password'])) {
            // Start session and store user details
            $_SESSION['logged_in'] = true;
            $_SESSION['user_id'] = $row['id'];
            $_SESSION['username'] = $username;

            // Redirect to dashboard or home page
            header("Location: dashboard.php");
            exit();
        } else {
            echo "Error: Incorrect password.";
            exit();
        }
    }
}

// If the request method is not POST, show the login form
else {
    ?>
    <form action="login.php" method="post">
        Username: <input type="text" name="username"><br>
        Password: <input type="password" name="password"><br>
        <input type="submit" value="Login">
    </form>
    <?php
}

// Close the database connection
mysqli_close($conn);
?>


<?php
session_start();

// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'mydatabase';

// Connect to database
$conn = new mysqli($host, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function login_user() {
    global $conn;
    
    // Get user input
    $email = $_POST['email'];
    $password = $_POST['password'];

    // Sanitize inputs
    $email = mysqli_real_escape_string($conn, trim($email));
    $password = mysqli_real_escape_string($conn, trim($password));

    // Check if email exists in database
    $sql = "SELECT * FROM users WHERE email='$email'";
    $result = $conn->query($sql);

    if ($result->num_rows == 0) {
        echo "<script>alert('Email does not exist!');</script>";
        return;
    }

    // Get user data
    $row = $result->fetch_assoc();

    // Verify password
    if (password_verify($password, $row['password'])) {
        // Set session variables
        $_SESSION['id'] = $row['id'];
        $_SESSION['username'] = $row['username'];
        $_SESSION['email'] = $row['email'];
        
        // Redirect to dashboard
        header("Location: dashboard.php");
        exit();
    } else {
        echo "<script>alert('Incorrect password!');</script>";
    }
}

// Call login function when form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    login_user();
}
?>


$hashed_password = password_hash($password, PASSWORD_DEFAULT);


<?php
session_start();
session_unset();
session_destroy();
header("Location: login.php");
?>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

// Create connection
$conn = new mysqli($host, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function loginUser() {
    global $conn;

    // Sanitize and validate input data
    if (isset($_POST['email']) && isset($_POST['password'])) {
        $email = htmlspecialchars(strip_tags($_POST['email']));
        $pass = htmlspecialchars(strip_tags($_POST['password']));

        // Check if email and password are provided
        if (empty($email) || empty($pass)) {
            header("Location: login.php?error=Please fill in all fields");
            exit();
        }

        try {
            // Prepare SQL statement to prevent SQL injection
            $stmt = $conn->prepare("SELECT id, email, password FROM users WHERE email = ?");
            $stmt->bind_param("s", $email);
            $stmt->execute();

            // Get result
            $result = $stmt->get_result();
            $user = $result->fetch_assoc();

            if ($result->num_rows > 0) {
                // Verify password
                if (password_verify($pass, $user['password'])) {
                    // Password is correct
                    session_start();
                    $_SESSION['id'] = $user['id'];
                    $_SESSION['email'] = $user['email'];
                    header("Location: dashboard.php");
                    exit();
                } else {
                    // Password doesn't match
                    header("Location: login.php?error=Incorrect password");
                    exit();
                }
            } else {
                // Email not found
                header("Location: login.php?error=Email not found");
                exit();
            }
        } catch (Exception $e) {
            // Handle any errors
            header("Location: login.php?error=" . $e->getMessage());
            exit();
        }
    } else {
        // If form is not submitted correctly
        header("Location: login.php");
        exit();
    }
}

// Call the function when form is submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    loginUser();
}
?>


<?php
// Database connection configuration
$host = 'localhost';
$dbUsername = 'username';
$dbPassword = 'password';
$databaseName = 'mydatabase';

// Connect to database
$conn = mysqli_connect($host, $dbUsername, $dbPassword, $databaseName);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to login user
function loginUser() {
    global $conn;

    // Check if form is submitted
    if (isset($_POST['login'])) {
        $email = $_POST['email'];
        $password = $_POST['password'];

        // Prepare and sanitize inputs
        $email = mysqli_real_escape_string($conn, trim($email));
        $password = mysqli_real_escape_string($conn, trim($password));

        // Check if email exists in database
        $query = "SELECT id, password FROM users WHERE email = ?";
        $stmt = mysqli_prepare($conn, $query);
        mysqli_stmt_bind_param($stmt, 's', $email);
        mysqli_stmt_execute($stmt);

        $result = mysqli_stmt_get_result($stmt);

        if ($row = mysqli_fetch_assoc($result)) {
            // Verify password
            $hashedPassword = $row['password'];
            
            if (password_verify($password, $hashedPassword)) {
                // Password is correct
                session_start();
                $_SESSION['user_id'] = $row['id'];
                $_SESSION['logged_in'] = true;

                header("Location: dashboard.php");
                exit();
            } else {
                // Password is incorrect
                echo "Incorrect password!";
            }
        } else {
            // Email does not exist
            echo "Email does not exist in our database!";
        }
    }
}

// Close database connection
mysqli_close($conn);
?>


<?php
// Database connection configuration
$host = 'localhost';
$dbUsername = 'your_username';
$dbPassword = 'your_password';
$databaseName = 'your_database';

// Connect to database
$conn = mysqli_connect($host, $dbUsername, $dbPassword, $databaseName);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

?>


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login Page</title>
</head>
<body>
    <h2>Login Form</h2>
    <form action="login.php" method="post">
        <input type="text" name="username" placeholder="Username" required><br>
        <input type="password" name="password" placeholder="Password" required><br>
        <button type="submit">Login</button>
    </form>
</body>
</html>


<?php
$servername = "localhost";
$username = "root";
$password = "";
$dbname = "my_login_system";

// Create connection
$conn = mysqli_connect($servername, $username, $password, $dbname);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}
?>


<?php
session_start();

include('db.php');

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $username = mysqli_real_escape_string($conn, $_POST['username']);
    $password = $_POST['password'];

    // Check if username exists in the database
    $sql = "SELECT id, username, password FROM users WHERE username = '$username'";
    $result = mysqli_query($conn, $sql);
    $row = mysqli_fetch_assoc($result);

    if ($row) {
        // Verify password
        if (password_verify($password, $row['password'])) {
            // Password is correct
            $_SESSION['user_id'] = $row['id'];
            $_SESSION['username'] = $row['username'];
            
            // Set a token to prevent session hijacking
            $_SESSION['token'] = bin2hex(random_bytes(32));
            
            // Redirect to dashboard or home page
            header("Location: dashboard.php");
            exit();
        } else {
            // Password is incorrect
            $error = "Invalid username or password!";
            echo $error;
        }
    } else {
        // Username does not exist
        $error = "Invalid username or password!";
        echo $error;
    }
}
?>


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Registration Page</title>
</head>
<body>
    <h2>Register Form</h2>
    <form action="register.php" method="post">
        <input type="text" name="username" placeholder="Username" required><br>
        <input type="password" name="password" placeholder="Password" required><br>
        <button type="submit">Register</button>
    </form>
</body>
</html>


<?php
session_start();

include('db.php');

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $username = mysqli_real_escape_string($conn, $_POST['username']);
    $password = password_hash($_POST['password'], PASSWORD_DEFAULT);

    // Check if username already exists
    $sql = "SELECT id FROM users WHERE username = '$username'";
    $result = mysqli_query($conn, $sql);
    $row = mysqli_fetch_assoc($result);

    if (!$row) {
        // Insert new user into the database
        $sql = "INSERT INTO users (username, password) VALUES ('$username', '$password')";
        if (mysqli_query($conn, $sql)) {
            // Registration successful, redirect to login page
            header("Location: login.php");
            exit();
        } else {
            echo "Error registering user: " . mysqli_error($conn);
        }
    } else {
        echo "Username already exists!";
    }
}
?>


<?php
session_start();

// Destroy the session and clear all cookies
$_SESSION = array();
if (ini_get("session.use_cookies")) {
    $params = session_get_cookie_params();
    setcookie(session_name(), '', time() - 42000,
        $params["path"], $params["domain"],
        $params["secure"], $params["httponly"]);
}
session_destroy();

// Redirect to login page
header("Location: login.php");
exit();
?>


<?php
session_start();

if (!isset($_SESSION['user_id'])) {
    // User is not logged in, redirect to login page
    header("Location: login.php");
    exit();
}

// Verify the token for additional security
if (isset($_GET['token']) && $_GET['token'] === $_SESSION['token']) {
    // Token matches, user is authenticated
} else {
    // Invalid or missing token, redirect to login page
    header("Location: login.php");
    exit();
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dashboard</title>
</head>
<body>
    <h2>Welcome to the Dashboard!</h2>
    <p>Hello <?php echo $_SESSION['username']; ?></p>
    <a href="logout.php">Logout</a>
</body>
</html>


<?php
session_start();

// Database connection details
$host = 'localhost';
$user = 'root';
$password = '';
$dbname = 'mydatabase';

// Connect to database
$conn = new mysqli($host, $user, $password, $dbname);
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Sanitize input data
    $username = mysqli_real_escape_string($conn, $_POST['username']);
    $password = mysqli_real_escape_string($conn, $_POST['password']);

    // Query to check if username exists
    $query = "SELECT * FROM users WHERE username='$username'";
    $result = $conn->query($query);

    if ($result->num_rows == 1) {
        // Get the stored password (assuming it's hashed)
        $row = $result->fetch_assoc();
        $stored_password = $row['password'];

        // Verify password
        if (md5($password) == $stored_password) {
            // Start session and store username in session variable
            $_SESSION['username'] = $username;
            
            // Redirect to welcome page
            header("Location: welcome.php");
            exit();
        } else {
            echo "Invalid credentials!";
        }
    } else {
        echo "Username not found!";
    }
}

$conn->close();
?>


<?php
session_start();
if (!isset($_SESSION['username'])) {
    header("Location: login.html");
    exit();
}
?>

Welcome <?php echo $_SESSION['username']; ?>!
<a href="logout.php">Logout</a>


<?php
session_start();
unset($_SESSION['username']);
session_destroy();
header("Location: login.html");
exit();
?>


<?php
session_start();

// Database configuration
$host = 'localhost';
$dbUsername = 'username';
$dbPassword = 'password';
$dbName = 'database_name';

// Connect to database
$conn = mysqli_connect($host, $dbUsername, $dbPassword, $dbName);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// If form submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {

    // Sanitize input data
    $email = htmlspecialchars(trim($_POST['email']));
    $password = htmlspecialchars(trim($_POST['password']));

    // Check if email exists in database
    $stmt = $conn->prepare("SELECT * FROM users WHERE email = ?");
    $stmt->bind_param("s", $email);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows == 0) {
        echo "<script>alert('Email not found!');</script>";
    } else {
        // Verify password
        $user = $result->fetch_assoc();
        if (password_verify($password, $user['password'])) {
            // Password is correct
            $_SESSION['email'] = $email;
            $_SESSION['user_id'] = $user['id'];
            
            // Set success message
            $_SESSION['message'] = "You are now logged in!";
            
            // Redirect to dashboard
            header("Location: dashboard.php");
            exit();
        } else {
            echo "<script>alert('Incorrect password!');</script>";
        }
    }

    $stmt->close();
}

$conn->close();

?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Login Page</title>
    <style>
        body { 
            font-family: Arial, sans-serif; 
            margin: 0;
            padding: 20px;
        }
        
        .container {
            max-width: 400px;
            margin: auto;
            background-color: #f8f9fa;
            padding: 20px;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }
        
        h1 { 
            text-align: center; 
            color: #333;
        }
        
        .form-group {
            margin-bottom: 20px;
        }
        
        input {
            width: 100%;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-sizing: border-box;
        }
        
        button {
            width: 100%;
            padding: 12px;
            background-color: #4CAF50;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
        
        button:hover {
            background-color: #45a049;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>Login</h1>
        <form action="login.php" method="POST">
            <div class="form-group">
                <label for="email">Email:</label><br>
                <input type="email" id="email" name="email" required><br>
            </div>

            <div class="form-group">
                <label for="password">Password:</label><br>
                <input type="password" id="password" name="password" required><br>
            </div>

            <button type="submit">Login</button>
        </form>
    </div>
</body>
</html>


<?php
// Database configuration
$host = 'localhost';
$username = 'your_username';
$password = 'your_password';
$db_name = 'your_database';

// Create connection
$conn = new mysqli($host, $username, $password, $db_name);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Session start
session_start();

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Sanitize input
    $username = mysqli_real_escape_string($conn, $_POST['username']);
    $password = $_POST['password'];

    // Query to check username and password
    $sql = "SELECT id, username, password FROM users WHERE username = ?";
    
    if ($stmt = $conn->prepare($sql)) {
        $stmt->bind_param("s", $username);
        
        // Execute the query
        $stmt->execute();
        
        // Store result
        $result = $stmt->get_result();
        
        if ($row = $result->fetch_assoc()) {
            // Verify password
            if (password_verify($password, $row['password'])) {
                // Start session and store user data
                $_SESSION['user_id'] = $row['id'];
                $_SESSION['username'] = $row['username'];
                
                // Redirect to dashboard
                header("Location: dashboard.php");
                exit();
            } else {
                echo "Incorrect password!";
            }
        } else {
            echo "Username not found!";
        }
        
        // Close statement
        $stmt->close();
    }

    // Close connection
    $conn->close();
}
?>


$hashed_password = password_hash($password, PASSWORD_DEFAULT);


<?php
// Start session
session_start();

// Include database connection
include('db_connect.php');

if (isset($_POST['login'])) {
    // Get form data
    $username = $_POST['username'];
    $password = $_POST['password'];

    // Function to sanitize input
    function sanitize($data) {
        global $conn;
        return mysqli_real_escape_string($conn, trim($data));
    }

    $username = sanitize($username);
    $password = sanitize($password);

    // Query database for user
    $sql = "SELECT * FROM users WHERE username = '$username'";
    $result = mysqli_query($conn, $sql);

    if (!$result) {
        die("Query failed: " . mysqli_error($conn));
    }

    if (mysqli_num_rows($result) == 0) {
        echo "Username does not exist!";
    } else {
        // Get user data
        $user = mysqli_fetch_assoc($result);
        $hashed_password = $user['password'];

        // Verify password
        if (password_verify($password, $hashed_password)) {
            // Set session variables
            $_SESSION['id'] = $user['id'];
            $_SESSION['username'] = $user['username'];
            
            // Redirect to dashboard or welcome page
            header('Location: welcome.php');
            exit();
        } else {
            echo "Incorrect password!";
        }
    }
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login Page</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            margin: 0;
            background-color: #f0f0f0;
        }

        .login-form {
            background-color: white;
            padding: 20px;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
            width: 300px;
        }

        .form-group {
            margin-bottom: 15px;
        }

        input {
            width: 100%;
            padding: 8px;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-sizing: border-box;
        }

        button {
            width: 100%;
            padding: 10px;
            background-color: #4CAF50;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }

        button:hover {
            background-color: #45a049;
        }
    </style>
</head>
<body>
    <div class="login-form">
        <h2>Login</h2>
        <form method="POST" action="<?php echo htmlspecialchars($_SERVER['PHP_SELF']); ?>">
            <div class="form-group">
                <label for="username">Username:</label>
                <input type="text" id="username" name="username" required>
            </div>
            <div class="form-group">
                <label for="password">Password:</label>
                <input type="password" id="password" name="password" required>
            </div>
            <button type="submit" name="login">Login</button>
        </form>
    </div>
</body>
</html>


<?php
$host = 'localhost';
$username = 'your_username';
$password = 'your_password';
$dbname = 'your_database';

$conn = mysqli_connect($host, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}
?>


<?php
session_start();

// Database configuration
$host = 'localhost';
$username_db = 'root';
$password_db = '';
$db_name = 'mydatabase';

// Connect to database
$conn = new mysqli($host, $username_db, $password_db, $db_name);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Login function
function login($username_email, $password) {
    global $conn;

    try {
        // Sanitize input
        $username_email = htmlspecialchars($username_email);
        $password = htmlspecialchars($password);

        // Check if the username or email exists in the database
        $stmt = $conn->prepare("SELECT id, username, email, password FROM users WHERE username = ? OR email = ?");
        $stmt->bind_param("ss", $username_email, $username_email);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows == 1) {
            $row = $result->fetch_assoc();

            // Verify password
            if (password_verify($password, $row['password'])) {
                // Password is correct
                $_SESSION['id'] = $row['id'];
                $_SESSION['username'] = $row['username'];
                $_SESSION['email'] = $row['email'];
                $_SESSION['logged_in'] = true;
                $_SESSION['login_time'] = time();

                return true;
            } else {
                // Password is incorrect
                throw new Exception("Incorrect password");
            }
        } else {
            // Username or email does not exist
            throw new Exception("Username or email does not exist");
        }

    } catch (Exception $e) {
        echo "Error: " . $e->getMessage();
        return false;
    }
}

// Handle login form submission
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    if (!empty($_POST['username_email']) && !empty($_POST['password'])) {
        $username_email = $_POST['username_email'];
        $password = $_POST['password'];

        if (login($username_email, $password)) {
            // Redirect to dashboard or home page
            header("Location: dashboard.php");
            exit();
        }
    } else {
        echo "Please fill in all fields";
    }
}

// Close database connection
$conn->close();
?>


<?php
session_start();

// Database connection details
$host = 'localhost';
$username_db = 'root';
$password_db = '';
$db_name = 'login_system';

try {
    // Create database connection
    $conn = new mysqli($host, $username_db, $password_db, $db_name);
    
    // Check if connection was successful
    if ($conn->connect_error) {
        throw new Exception("Connection failed: " . $conn->connect_error);
    }

    // Check if form is submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        // Get username and password from form
        $username = $_POST['username'];
        $password = $_POST['password'];

        // Sanitize input to prevent SQL injection
        $username = mysqli_real_escape_string($conn, $username);
        
        // Query the database for user with given username
        $stmt = $conn->prepare("SELECT id, username, password FROM users WHERE username = ?");
        $stmt->bind_param("s", $username);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            // Get user data
            $row = $result->fetch_assoc();
            
            // Verify password
            if (password_verify($password, $row['password'])) {
                // Password is correct, start session and redirect to dashboard
                $_SESSION['user_id'] = $row['id'];
                $_SESSION['username'] = $row['username'];
                
                header("Location: dashboard.php");
                exit();
            } else {
                // Incorrect password
                echo "Invalid username or password!";
            }
        } else {
            // No user found with that username
            echo "Invalid username or password!";
        }
    }

} catch (Exception $e) {
    // Display error message if something goes wrong
    echo "Error: " . $e->getMessage();
}

// Close database connection
$conn->close();
?>


// Example of inserting a new user
$new_username = "test_user";
$new_password = "test_pass"; // Never store plain text passwords in real application

// Hash the password
$hashed_password = password_hash($new_password, PASSWORD_DEFAULT);

$sql = "INSERT INTO users (username, password) VALUES (?, ?)";
$stmt = $conn->prepare($sql);
$stmt->bind_param("ss", $new_username, $hashed_password);
$stmt->execute();


<?php
// Database connection details
$host = "localhost";
$username_db = "root";
$password_db = "";
$db_name = "user_login";

// Connect to database
$conn = mysqli_connect($host, $username_db, $password_db, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function userLogin($email, $password, $conn) {
    // Sanitize input
    $email = mysqli_real_escape_string($conn, $email);
    $password = mysqli_real_escape_string($conn, $password);

    // Check if email or password is empty
    if (empty($email) || empty($password)) {
        return "Email and password are required!";
    }

    // Query to check user credentials
    $sql = "SELECT * FROM users WHERE email = ?";
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, "s", $email);
    mysqli_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);

    if (mysqli_num_rows($result) > 0) {
        // Get user data
        $user = mysqli_fetch_assoc($result);
        
        // Verify password
        if (password_verify($password, $user['password'])) {
            // Password is correct
            
            // Create session variables
            $_SESSION['user_id'] = $user['id'];
            $_SESSION['username'] = $user['username'];
            $_SESSION['email'] = $user['email'];
            $_SESSION['login_time'] = time();

            // Redirect to dashboard or home page
            header("Location: dashboard.php");
            exit();
        } else {
            return "Incorrect password!";
        }
    } else {
        return "No user found with this email!";
    }
}

// Close database connection
mysqli_close($conn);
?>


<?php
$servername = "localhost";
$username_db = "root";
$password_db = "";
$dbname = "user_login";

// Create connection
$conn = new mysqli($servername, $username_db, $password_db, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}
?>


<?php
include('db_connection.php');

function registerUser($username, $password, $conn) {
    // Check if username already exists
    $stmt = $conn->prepare("SELECT id FROM users WHERE username = ?");
    $stmt->bind_param("s", $username);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        return "Username already exists!";
    } else {
        // Hash the password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);

        // Insert new user into database
        $stmt = $conn->prepare("INSERT INTO users (username, password) VALUES (?, ?)");
        $stmt->bind_param("ss", $username, $hashed_password);
        
        if ($stmt->execute()) {
            return "Registration successful!";
        } else {
            return "Error registering user: " . $conn->error;
        }
    }
}
?>


<?php
include('db_connection.php');

function loginUser($username, $password, $conn) {
    // Fetch user data from database
    $stmt = $conn->prepare("SELECT id, username, password FROM users WHERE username = ?");
    $stmt->bind_param("s", $username);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows == 1) {
        $user = $result->fetch_assoc();
        
        // Verify the password
        if (password_verify($password, $user['password'])) {
            // Start session and store user data
            session_start();
            $_SESSION['id'] = $user['id'];
            $_SESSION['username'] = $user['username'];
            
            return "Login successful!";
        } else {
            return "Incorrect password!";
        }
    } else {
        return "Username does not exist!";
    }
}
?>


<?php
include('db_connection.php');
session_start();

if (isset($_POST['username']) && isset($_POST['password'])) {
    $username = $_POST['username'];
    $password = $_POST['password'];

    // Call loginUser function
    include('login_function.php');
    $result = loginUser($username, $password, $conn);

    if ($result == "Login successful!") {
        header("Location: dashboard.php");
    } else {
        echo $result;
    }
}
?>


<?php
session_start();
if (!isset($_SESSION['username'])) {
    header("Location: login.html");
}

echo "Welcome, " . $_SESSION['username'] . "!";
?>


<?php
session_start();
require_once 'config.php'; // Your database configuration file

// Function to sanitize input data
function sanitize($data) {
    $data = trim($data);
    $data = stripslashes($data);
    $data = htmlspecialchars($data, ENT_QUOTES, 'UTF-8');
    return $data;
}

// Handle login form submission
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    // Validate and sanitize input data
    if (empty($_POST['username']) || empty($_POST['password'])) {
        die('Username and password are required!');
    }

    $username = sanitize($_POST['username']);
    $password = $_POST['password'];

    // Generate CSRF token for security
    if (!isset($_SESSION['csrf_token'])) {
        $_SESSION['csrf_token'] = bin2hex(random_bytes(32));
    }
    
    // Check CSRF token (if using a form with POST method)
    if (isset($_POST['csrf_token']) && hash_equals($_SESSION['csrf_token'], $_POST['csrf_token'])) {
        try {
            $stmt = $conn->prepare("SELECT id, username, password FROM users WHERE username = ?");
            $stmt->bind_param('s', $username);
            $stmt->execute();
            
            // Get the result
            $result = $stmt->get_result();
            if ($row = $result->fetch_assoc()) {
                // Verify the password
                if (password_verify($password, $row['password'])) {
                    // Start a session and store user data
                    $_SESSION['user_id'] = $row['id'];
                    $_SESSION['username'] = $row['username'];
                    
                    // Optional: Store login time to track sessions
                    $_SESSION['login_time'] = time();
                    
                    // Redirect to dashboard or home page
                    header("Location: dashboard.php");
                    exit();
                } else {
                    die('Invalid credentials!');
                }
            } else {
                die('Username not found!');
            }
        } catch (mysqli_sql_exception $e) {
            die("Database error occurred: " . $e->getMessage());
        }
    } else {
        die('Invalid CSRF token. Please refresh the page and try again.');
    }
}

// Display login form
function display_login_form() {
    // Generate CSRF token
    if (!isset($_SESSION['csrf_token'])) {
        $_SESSION['csrf_token'] = bin2hex(random_bytes(32));
    }
    
    ?>
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Login</title>
        <!-- Add your CSS styles here -->
        <style>
            .container {
                max-width: 500px;
                margin: 0 auto;
                padding: 20px;
                font-family: Arial, sans-serif;
            }
            .form-group {
                margin-bottom: 15px;
            }
            input[type="text"], input[type="password"] {
                width: 100%;
                padding: 8px;
                border: 1px solid #ddd;
                box-sizing: border-box;
            }
            button {
                background-color: #4CAF50;
                color: white;
                padding: 10px 20px;
                border: none;
                cursor: pointer;
                width: 100%;
            }
            button:hover {
                background-color: #45a049;
            }
        </style>
    </head>
    <body>
        <div class="container">
            <h2>Login</h2>
            <form action="<?php echo htmlspecialchars($_SERVER['PHP_SELF']); ?>" method="POST">
                <input type="hidden" name="csrf_token" value="<?php echo $_SESSION['csrf_token']; ?>">
                <div class="form-group">
                    <input type="text" name="username" placeholder="Enter your username..." required>
                </div>
                <div class="form-group">
                    <input type="password" name="password" placeholder="Enter your password..." required>
                </div>
                <button type="submit">Login</button>
            </form>
            <p>Don't have an account? <a href="register.php">Register here</a></p>
        </div>
    </body>
    </html>
    <?php
}

// Show login form if not logged in
if (!isset($_SESSION['user_id'])) {
    display_login_form();
} else {
    header("Location: dashboard.php");
    exit();
}
?>


<?php
// Database configuration
$host = 'localhost';
$username_db = 'root';
$password_db = '';
$database = 'my_database';

// Create connection
$conn = mysqli_connect($host, $username_db, $password_db, $database);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function user_login($username_or_email, $password) {
    global $conn;

    // Sanitize inputs to prevent SQL injection
    $username_or_email = mysqli_real_escape_string($conn, $username_or_email);
    
    // Query the database for the user with the given username or email
    $query = "SELECT id, password FROM users WHERE username='$username_or_email' OR email='$username_or_email'";
    $result = mysqli_query($conn, $query);

    if ($result) {
        $user = mysqli_fetch_assoc($result);
        
        if ($user && password_verify($password, $user['password'])) {
            // Start a session
            session_start();
            
            // Set session variables
            $_SESSION['user_id'] = $user['id'];
            $_SESSION['logged_in'] = true;
            
            return true;
        }
    }

    return false;
}

// Example usage:
if (isset($_POST['login'])) {
    $username_or_email = $_POST['username_or_email'];
    $password = $_POST['password'];
    
    if (user_login($username_or_email, $password)) {
        // Redirect to dashboard or other page
        header("Location: dashboard.php");
        exit();
    } else {
        echo "Invalid username or password.";
    }
}

// Close the database connection
mysqli_close($conn);
?>


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login Page</title>
</head>
<body>

<?php
// Initialize variables
$error = "";

if (isset($_POST['submit'])) {
    // Retrieve and sanitize input data
    $username = htmlspecialchars(trim($_POST['username']));
    $password = htmlspecialchars(trim($_POST['password']));

    // Database connection parameters
    $host = "localhost";
    $db_username = "root";
    $db_password = "";
    $database = "mydatabase";

    // Connect to database
    $conn = mysqli_connect($host, $db_username, $db_password);
    
    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
    }

    // Select the database
    if (!mysqli_select_db($conn, $database)) {
        die("Database not found");
    }

    // SQL query to check user credentials
    $sql = "SELECT * FROM users WHERE username='" . mysqli_real_escape_string($conn, $username) . "'";
    
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) == 0) {
        $error = "User not found";
    } else {
        $row = mysqli_fetch_array($result, MYSQLI_ASSOC);
        
        // Verify password
        if (password_verify($password, $row['password'])) {
            // Start session and store user data
            session_start();
            $_SESSION['username'] = $username;
            
            // Redirect to dashboard or welcome page
            header("Location: welcome.php");
            exit();
        } else {
            $error = "Incorrect password";
        }
    }

    mysqli_close($conn);
}
?>

<div class="login-box">
    <h2>Login</h2>
    <?php if ($error != "") { ?>
        <p style="color:red;"><?php echo $error; ?></p>
    <?php } ?>

    <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
        <div class="input-group">
            <label>Username</label>
            <input type="text" name="username" required>
        </div>

        <div class="input-group">
            <label>Password</label>
            <input type="password" name="password" required>
        </div>

        <button type="submit" name="submit">Login</button>
    </form>

    <p>Don't have an account? <a href="register.php">Register here</a></p>
</div>

</body>
</html>


<?php
// Start session
session_start();

// Database connection parameters
$host = 'localhost';
$user = 'root';
$password = '';
$database = 'mydatabase';

// Connect to database
$conn = mysqli_connect($host, $user, $password, $database);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Check if form is submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Get user input
    $username = $_POST['username'];
    $password = $_POST['password'];

    // Sanitize the inputs
    $username = mysqli_real_escape_string($conn, $username);
    $password = mysqli_real_escape_string($conn, $password);

    // Query to select user with matching username
    $query = "SELECT * FROM users WHERE username='$username'";
    $result = mysqli_query($conn, $query);

    if (!$result) {
        die("Query failed: " . mysqli_error($conn));
    }

    // Check if user exists
    if (mysqli_num_rows($result) == 1) {
        $row = mysqli_fetch_assoc($result);
        $stored_password = $row['password'];

        // Verify password
        if (password_verify($password, $stored_password)) {
            // Password is correct
            $_SESSION['user_id'] = $row['id'];
            $_SESSION['username'] = $row['username'];
            $_SESSION['email'] = $row['email'];
            
            // Redirect to dashboard or home page
            header("Location: dashboard.php");
            exit();
        } else {
            // Password is incorrect
            echo "Incorrect password!";
        }
    } else {
        // User does not exist
        echo "User does not exist!";
    }
}

// Close database connection
mysqli_close($conn);
?>


$hashed_password = password_hash($plain_password, PASSWORD_DEFAULT);


<?php
// Database connection
$host = 'localhost';
$dbname = 'mydatabase';
$username = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}

// User registration function
function registerUser($username, $email, $password, $conn) {
    // Check if user already exists
    try {
        $stmt = $conn->prepare("SELECT id FROM users WHERE username = :username OR email = :email");
        $stmt->bindParam(':username', $username);
        $stmt->bindParam(':email', $email);
        $stmt->execute();

        if ($stmt->rowCount() > 0) {
            return "Username or email already exists!";
        }

        // Hash password
        $hashedPassword = password_hash($password, PASSWORD_DEFAULT);

        // Insert new user into the database
        $insertStmt = $conn->prepare("INSERT INTO users (username, email, password) VALUES (:username, :email, :password)");
        $insertStmt->bindParam(':username', $username);
        $insertStmt->bindParam(':email', $email);
        $insertStmt->bindParam(':password', $hashedPassword);

        if ($insertStmt->execute()) {
            return "Registration successful!";
        } else {
            return "Error registering user.";
        }
    } catch(PDOException $e) {
        return "Error: " . $e->getMessage();
    }
}

// User login function
function loginUser($usernameEmail, $password, $conn) {
    try {
        // Check if login is with username or email
        $stmt = $conn->prepare("SELECT * FROM users WHERE username = :usernameEmail OR email = :usernameEmail");
        $stmt->bindParam(':usernameEmail', $usernameEmail);
        $stmt->execute();

        $user = $stmt->fetch(PDO::FETCH_ASSOC);

        if (!$user) {
            return "Username or email does not exist!";
        }

        // Verify password
        if (password_verify($password, $user['password'])) {
            // Set session variables
            session_start();
            $_SESSION['id'] = $user['id'];
            $_SESSION['username'] = $user['username'];
            $_SESSION['email'] = $user['email'];

            return "Login successful!";
        } else {
            return "Incorrect password!";
        }
    } catch(PDOException $e) {
        return "Error: " . $e->getMessage();
    }
}

// Example usage:
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    if (isset($_POST['register'])) {
        $username = $_POST['username'];
        $email = $_POST['email'];
        $password = $_POST['password'];

        echo registerUser($username, $email, $password, $conn);
    } elseif (isset($_POST['login'])) {
        $usernameEmail = $_POST['username_email'];
        $password = $_POST['password'];

        echo loginUser($usernameEmail, $password, $conn);
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login/Registration</title>
</head>
<body>
    <!-- Registration Form -->
    <h2>Register</h2>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        Username: <input type="text" name="username"><br>
        Email: <input type="email" name="email"><br>
        Password: <input type="password" name="password"><br>
        <input type="submit" name="register" value="Register">
    </form>

    <!-- Login Form -->
    <h2>Login</h2>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        Username or Email: <input type="text" name="username_email"><br>
        Password: <input type="password" name="password"><br>
        <input type="submit" name="login" value="Login">
    </form>
</body>
</html>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

try {
    // Create database connection
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

    // Check if form is submitted
    if ($_SERVER['REQUEST_METHOD'] == 'POST') {
        $loginEmailOrUsername = $_POST['email_or_username'];
        $loginPassword = $_POST['password'];

        // Prepare the SQL statement to prevent SQL injection
        $stmt = $conn->prepare("SELECT * FROM users WHERE username = :username OR email = :email");
        $stmt->bindParam(':username', $loginEmailOrUsername);
        $stmt->bindParam(':email', $loginEmailOrUsername);
        $stmt->execute();

        // Check if user exists
        $user = $stmt->fetch(PDO::FETCH_ASSOC);

        if ($user) {
            // Verify password
            if (password_verify($loginPassword, $user['password'])) {
                // Password is correct, start session
                session_start();
                $_SESSION['user_id'] = $user['id'];
                $_SESSION['username'] = $user['username'];
                $_SESSION['email'] = $user['email'];

                // Redirect to dashboard or other page
                header("Location: dashboard.php");
                die();
            } else {
                // Password is incorrect
                echo "Incorrect password!";
            }
        } else {
            // User not found
            echo "User not found!";
        }
    }

} catch(PDOException $e) {
    // Handle any database errors
    echo "Error: " . $e->getMessage();
}

// Close the connection
$conn = null;
?>


<?php
session_start();

// Database connection parameters
$host = 'localhost';
$dbUsername = 'root';
$dbPassword = '';
$dbName = 'user_login';

// Create database connection
$conn = mysqli_connect($host, $dbUsername, $dbPassword, $dbName);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Check if form is submitted
if (isset($_POST['login'])) {
    // Sanitize input data
    $username = mysqli_real_escape_string($conn, $_POST['username']);
    $password = mysqli_real_escape_string($conn, $_POST['password']);

    // Validate input fields
    if (empty($username) || empty($password)) {
        echo "Please fill in all required fields!";
        exit();
    }

    // Query the database for user with matching username
    $query = "SELECT * FROM users WHERE username = '$username'";
    $result = mysqli_query($conn, $query);

    if (!$result) {
        die("Query failed: " . mysqli_error($conn));
    }

    // Check if user exists
    if (mysqli_num_rows($result) == 1) {
        $row = mysqli_fetch_assoc($result);
        
        // Verify password
        if ($row['password'] === md5($password)) { // Note: MD5 is not secure for production. Use bcrypt or similar instead.
            // Store user session data
            $_SESSION['username'] = $row['username'];
            $_SESSION['user_id'] = $row['id'];
            $_SESSION['logged_in'] = true;

            // Redirect to dashboard after successful login
            header("Location: dashboard.php");
            exit();
        } else {
            echo "Incorrect password!";
        }
    } else {
        echo "Username not found!";
    }
}

// Close database connection
mysqli_close($conn);
?>


<?php
session_start();

// Database configuration
$host = 'localhost';
$dbUsername = 'root';
$dbPassword = '';
$dbName = 'user_login';

try {
    // Create a new PDO instance
    $conn = new PDO("mysql:host=$host;dbname=$dbName", $dbUsername, $dbPassword);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

if (isset($_POST['login'])) {
    try {
        // Sanitize input data
        $username = $_POST['username'];
        $password = $_POST['password'];

        // Validate input fields
        if (empty($username) || empty($password)) {
            echo "Please fill in all required fields!";
            exit();
        }

        // Prepare the statement to prevent SQL injection
        $stmt = $conn->prepare("SELECT * FROM users WHERE username = ?");
        $stmt->execute([$username]);
        
        $row = $stmt->fetch(PDO::FETCH_ASSOC);

        if ($row) {
            // Verify password (assuming passwords are stored as bcrypt hashes)
            if (password_verify($password, $row['password'])) {
                // Store user session data
                $_SESSION['username'] = $row['username'];
                $_SESSION['user_id'] = $row['id'];
                $_SESSION['logged_in'] = true;

                // Redirect to dashboard after successful login
                header("Location: dashboard.php");
                exit();
            } else {
                echo "Incorrect password!";
            }
        } else {
            echo "Username not found!";
        }
    } catch (PDOException $e) {
        die("Error occurred: " . $e->getMessage());
    }
}

// Close database connection
$conn = null;
?>


<?php
// Configuration file to connect with database
require_once('config.php');

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Filter and sanitize input data
    $email = filter_var(trim($_POST['email']), FILTER_SANITIZE_EMAIL);
    $password = trim($_POST['password']);

    if (empty($email) || empty($password)) {
        header("Location: login.php?error=Email%20or%20Password%20cannot%20be%20empty");
        exit();
    }

    // Connect to the database
    $conn = mysqli_connect(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);

    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
    }

    // Prepare and execute the SQL query
    $stmt = mysqli_prepare($conn, "SELECT user_id, username, password FROM users WHERE email=?");
    mysqli_stmt_bind_param($stmt, "s", $email);
    mysqli_stmt_execute($stmt);

    $result = mysqli_stmt_get_result($stmt);
    
    if (mysqli_num_rows($result) == 0) {
        header("Location: login.php?error=Email%20not%20found");
        exit();
    }

    // Fetch user data
    $row = mysqli_fetch_assoc($result);

    // Verify password
    if (!password_verify($password, $row['password'])) {
        header("Location: login.php?error=Incorrect%20password");
        exit();
    }

    // Start session and store user data
    session_start();
    $_SESSION['user_id'] = $row['user_id'];
    $_SESSION['username'] = $row['username'];
    $_SESSION['logged_in'] = true;

    // Redirect to dashboard or home page
    header("Location: dashboard.php");
    exit();

    // Close the database connection
    mysqli_close($conn);
}
?>


<?php
// Database configuration
define('DB_HOST', 'localhost');
define('DB_USER', 'root');          // Change according to your database user
define('DB_PASSWORD', '');           // Change according to your database password
define('DB_NAME', 'login_system');   // Change according to your database name

// Session configuration
ini_set('session.cookie_httponly', 1);
session_set_cookie_params(0, '/', null, isset($_SERVER["HTTPS"]), true);
?>


<?php
session_start();
if (!isset($_SESSION['logged_in']) || $_SESSION['logged_in'] !== true) {
    header("Location: login.php");
    exit();
}

// Include database connection
require_once('config.php');
$conn = mysqli_connect(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);

echo "Welcome, " . $_SESSION['username'];
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Dashboard</title>
</head>
<body>
    <h2>Welcome to your dashboard</h2>
    
    <a href="logout.php">Logout</a>
</body>
</html>

<?php
mysqli_close($conn);
?>


<?php
session_start();
session_unset();
session_destroy();

// Destroy the session and redirect to login page
header("Location: login.php");
exit();
?>


<?php
// Database connection class
class DBConnection {
    private static $instance = null;
    private $connection;

    private function __construct() {
        // Replace these values with your actual database credentials
        $host = 'localhost';
        $username = 'root';
        $password = '';
        $database = 'your_database';

        try {
            $this->connection = new mysqli($host, $username, $password, $database);
            if ($this->connection->connect_error) {
                throw new Exception("Connection failed: " . $this->connection->connect_error);
            }
        } catch (Exception $e) {
            die('Could not connect to the database: ' . $e->getMessage());
        }
    }

    public static function getInstance() {
        if (self::$instance == null) {
            self::$instance = new DBConnection();
        }
        return self::$instance;
    }

    public function getConnection() {
        return $this->connection;
    }
}

// User login function
function user_login($username, $password) {
    // Sanitize input to prevent SQL injection and XSS attacks
    $username = htmlspecialchars(trim($username));
    $password = htmlspecialchars(trim($password));

    try {
        $db = DBConnection::getInstance();
        $connection = $db->getConnection();

        // Prepare the statement with placeholders
        $stmt = $connection->prepare("SELECT * FROM users WHERE username = ?");
        if (!$stmt) {
            throw new Exception("Prepare failed: " . $connection->error);
        }

        // Bind parameters and execute the query
        $stmt->bind_param('s', $username);
        $result = $stmt->execute();

        if (!$result) {
            throw new Exception("Execute failed: " . $stmt->error);
        }

        // Get the result from the statement
        $result_data = $stmt->get_result();
        $row = $result_data->fetch_assoc();

        if ($row) {
            // Verify password using PHP's built-in password_verify function
            if (password_verify($password, $row['password'])) {
                // Password is correct, start session and store user data
                session_save_path('your_session_dir'); // Set custom session save directory
                session_set_cookie_params(0, '/', null, true); // Secure cookie settings
                session_start();
                
                // Regenerate session ID to prevent session fixation attacks
                session_regenerate(true);

                // Store user data in the session
                $_SESSION['user_id'] = $row['id'];
                $_SESSION['username'] = $row['username'];
                $_SESSION['login_time'] = time();

                // Set session cookie parameters for security
                ini_set('session.cookie_httponly', 'On');
                
                return true;
            }
        }

        // If no user found or password doesn't match, return false
        return false;

    } catch (Exception $e) {
        die('An error occurred: ' . $e->getMessage());
    }
}

// Logout function to destroy the session and unset variables
function logout() {
    session_start();
    $_SESSION = array();
    if (ini_get("session.use_cookies")) {
        $params = session_get_cookie_params();
        setcookie(session_name(), '', time() - 42000,
            $params["path"], $params["domain"],
            $params["secure"], $params["httponly"]
        );
    }
    session_unset();
    session_destroy();
}

// Example usage:
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $username = $_POST['username'];
    $password = $_POST['password'];

    if (user_login($username, $password)) {
        header('Location: dashboard.php');
        exit();
    } else {
        echo "Invalid username or password!";
    }
}
?>


<?php
session_start();

// Database connection details
$host = 'localhost';
$username_db = 'root';
$password_db = '';
$database = 'your_database';

// Create database connection
$conn = new mysqli($host, $username_db, $password_db, $database);

// Check if the form is submitted
if (isset($_POST['login'])) {
    // Sanitize input data
    $username = mysqli_real_escape_string($conn, $_POST['username']);
    $password = mysqli_real_escape_string($conn, $_POST['password']);

    // Query the database for the user
    $sql = "SELECT * FROM users WHERE username='$username'";
    $result = $conn->query($sql);

    if ($result->num_rows == 1) {
        // User exists, verify password
        $row = $result->fetch_assoc();
        if (password_verify($password, $row['password'])) {
            // Password is correct
            $_SESSION['user_id'] = $row['id'];
            $_SESSION['username'] = $row['username'];
            
            // Redirect to dashboard or home page
            header('Location: dashboard.php');
            exit();
        } else {
            // Password is incorrect
            $error = "Invalid username or password!";
        }
    } else {
        // Username does not exist
        $error = "Invalid username or password!";
    }
}

// Close database connection
$conn->close();

// Display error if any
if (isset($error)) {
    echo "<script>alert('$error');</script>";
}
?>


<?php
// Include necessary files
require_once('db_connection.php');

function loginUser($username, $password) {
    // Sanitize inputs to prevent SQL injection
    $username = mysqli_real_escape_string($GLOBALS['conn'], $username);
    $password = mysqli_real_escape_string($GLOBALS['conn'], $password);

    // Query the database for the user
    $sql = "SELECT * FROM users WHERE username='$username'";
    $result = mysqli_query($GLOBALS['conn'], $sql);

    if (mysqli_num_rows($result) == 1) {
        $row = mysqli_fetch_assoc($result);
        
        // Verify password using PHP's password_verify function
        if (password_verify($password, $row['password'])) {
            // Start session and store user data
            session_start();
            $_SESSION['username'] = $row['username'];
            $_SESSION['user_id'] = $row['id'];
            $_SESSION['session_lifetime'] = time() + 3600; // Session valid for 1 hour
            
            return true;
        } else {
            // Incorrect password
            return false;
        }
    } else {
        // User not found
        return false;
    }
}

// Example usage:
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST['username'];
    $password = $_POST['password'];

    if (loginUser($username, $password)) {
        // Redirect to dashboard or protected page
        header("Location: dashboard.php");
        exit();
    } else {
        // Display error message
        echo "Invalid username or password!";
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login Page</title>
</head>
<body>
    <h2>Login Form</h2>
    <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
        Username: <input type="text" name="username"><br>
        Password: <input type="password" name="password"><br>
        <input type="submit" value="Login">
    </form>
</body>
</html>


<?php
$servername = "localhost";
$username = "root"; // Change to your database username
$password = ""; // Change to your database password
$dbname = "your_database"; // Change to your database name

// Create connection
$conn = mysqli_connect($servername, $username, $password, $dbname);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}
?>


function registerUser($username, $password) {
    // Hash the password with a cost of 12 (default is 10)
    $hashed_password = password_hash($password, PASSWORD_DEFAULT, ['cost' => 12]);

    // Insert into database
    $sql = "INSERT INTO users (username, password) VALUES ('$username', '$hashed_password')";
    mysqli_query($GLOBALS['conn'], $sql);
}


<?php
// This function handles user login
function user_login($username, $password) {
    // Connect to the database
    include_once("config.php");
    
    // Sanitize the input data
    $username = mysql_real_escape_string(trim($username));
    $password = mysql_real_escape_string(trim($password));
    
    // Query the database for the username and password
    $sql = "SELECT * FROM users WHERE username='$username' AND password='$password' LIMIT 1";
    $result = mysql_query($sql);
    
    // Check if there was an error in the query
    if (mysql_error()) {
        return false;
    }
    
    // If a user exists, check if the password is correct
    if (mysql_num_rows($result) == 1) {
        // Start a session and store the username in the session variable
        session_start();
        $_SESSION['username'] = $username;
        
        // Return true to indicate successful login
        return true;
    } else {
        // Return false to indicate unsuccessful login
        return false;
    }
    
    // Close the database connection
    mysql_close($con);
}
?>


<?php
session_start(); // Start the session

// Include database configuration
include_once('config.php');

if (isset($_POST['username']) && isset($_POST['password'])) {
    $username = mysqli_real_escape_string($conn, $_POST['username']);
    $password = sha1($_POST['password']); // Hash the password

    try {
        // Check if the user exists
        $sql_check_user = "SELECT COUNT(*) AS count FROM users WHERE username = '$username'";
        $result = $conn->query($sql_check_user);
        
        if ($result && $row = $result->fetch_assoc()) {
            if ($row['count'] != 1) {
                die("Incorrect username or password");
            }
            
            // Get the stored hash
            $sql_get_pass = "SELECT password FROM users WHERE username = '$username'";
            $result_pass = $conn->query($sql_get_pass);
            
            if (!$result_pass || $result_pass->num_rows != 1) {
                die("User not found");
            }
            
            $db_password = $result_pass->fetch_assoc()['password'];
            
            if ($db_password == $password) {
                // Set session variables
                $_SESSION['username'] = $username;
                
                // Optionally, set a cookie for longer persistence
                $cookie_name = "user";
                $cookie_value = $username;
                setcookie($cookie_name, $cookie_value, time() + (86400 * 7), "/"); // Expires in 7 days
                
                // Redirect to dashboard or home page
                header("Location: dashboard.php");
                exit();
            } else {
                die("Incorrect username or password");
            }
        }
    } catch (Exception $e) {
        die("Error: " . $e->getMessage());
    }
}
?>


<?php
$host = 'localhost';
$username_db = 'root';
$password_db = '';
$db_name = 'your_database';

// Create connection
$conn = new mysqli($host, $username_db, $password_db, $db_name);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}
?>


<?php
session_start();

// Check if session exists or user is remembered via cookie
if (!isset($_SESSION['username']) && !isset($_COOKIE['user'])) {
    header("Location: login.php");
    exit();
}
?>


<?php
session_start();

// Destroy session variables
unset($_SESSION['username']);
session_unset();
session_destroy();

// Clear cookies
setcookie("user", "", time() - 3600, "/");
header("Location: login.php");
exit();
?>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

try {
    // Create a database connection
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get username and password from form
    $username = htmlspecialchars(trim($_POST['username']));
    $password = htmlspecialchars(trim($_POST['password']));

    // SQL query to fetch user by username
    $stmt = $conn->prepare("SELECT * FROM users WHERE username = ?");
    $stmt->execute([$username]);
    $user = $stmt->fetch(PDO::FETCH_ASSOC);

    if ($user) {
        // Verify password
        if (password_verify($password, $user['password'])) {
            // Password is correct
            session_start();
            $_SESSION['logged_in'] = true;
            $_SESSION['username'] = $user['username'];
            
            // Redirect to dashboard or home page
            header("Location: dashboard.php");
            exit();
        } else {
            // Incorrect password
            echo "Invalid username or password";
        }
    } else {
        // User doesn't exist
        echo "Invalid username or password";
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login Page</title>
</head>
<body>
    <h2>Login</h2>
    <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
        Username: <input type="text" name="username"><br>
        Password: <input type="password" name="password"><br>
        <input type="submit" value="Login">
    </form>
    <p>Don't have an account? <a href="register.php">Register here</a>.</p>
    <p>Forgot password? <a href="reset_password.php">Reset password</a>.</p>
</body>
</html>


<?php
function user_login($username, $password) {
    // Database connection parameters
    $host = 'localhost';
    $db_username = 'root';
    $db_password = '';
    $database = 'my_database';

    try {
        // Connect to database
        $conn = new PDO("mysql:host=$host;dbname=$database", $db_username, $db_password);
        $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

        // Prepare the query
        $stmt = $conn->prepare("SELECT * FROM users WHERE username = ?");
        $stmt->execute([$username]);
        
        // Check if user exists
        $user = $stmt->fetch(PDO::FETCH_ASSOC);
        if (!$user) {
            return false; // User does not exist
        }

        // Verify password
        if (!password_verify($password, $user['password'])) {
            return false; // Password is incorrect
        }

        // Login successful
        $_SESSION['user_id'] = $user['id'];
        $_SESSION['username'] = $user['username'];
        
        return true;
    } catch(PDOException $e) {
        die("Connection failed: " . $e->getMessage());
    }
}

// Example usage:
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    if (empty($_POST['username']) || empty($_POST['password'])) {
        echo "Username and password are required!";
    } else {
        $username = trim($_POST['username']);
        $password = $_POST['password'];
        
        session_start();
        if (user_login($username, $password)) {
            // Redirect to dashboard or home page
            header("Location: dashboard.php");
            exit();
        } else {
            echo "Invalid username or password!";
        }
    }
}
?>


function register_user($username, $password) {
    // Hash the password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);
    
    // Insert into database
    try {
        $conn = new PDO("mysql:host=$host;dbname=$database", $db_username, $db_password);
        $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

        $stmt = $conn->prepare("INSERT INTO users (username, password) VALUES (?, ?)");
        $stmt->execute([$username, $hashed_password]);
        
        return true;
    } catch(PDOException $e) {
        die("Connection failed: " . $e->getMessage());
    }
}


<?php
session_start();
include 'db.php'; // Include your database connection file

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $email = $_POST['email'];
    $password = $_POST['password'];

    if (empty($email) || empty($password)) {
        echo "Please fill in all fields";
        exit();
    }

    // Sanitize the input
    $email = htmlspecialchars(strip_tags(trim($email)));

    try {
        // Prepare a statement
        $stmt = $pdo->prepare("SELECT * FROM users WHERE email = ?");
        $stmt->execute([$email]);

        // Check if user exists
        $user = $stmt->fetch(PDO::FETCH_ASSOC);
        if (!$user) {
            echo "User does not exist";
            exit();
        }

        // Verify password
        if (!password_verify($password, $user['password'])) {
            echo "Incorrect password";
            exit();
        }

        // If login is successful, create a session
        $_SESSION['id'] = $user['id'];
        $_SESSION['name'] = $user['name'];
        $_SESSION['email'] = $user['email'];

        // Optional: Set a cookie for the user to stay logged in
        setcookie('remember_me', $user['id'], time() + 3600); 

        // Redirect to dashboard or home page
        header("Location: dashboard.php");
        exit();
    } catch (PDOException $e) {
        die("Could not connect to the database " . $e->getMessage());
    }
}
?>


<?php
session_start();

// Database configuration
$host = 'localhost';
$username_db = 'root'; // Change to your database username
$password_db = '';     // Change to your database password
$db_name = 'testdb';

// Connect to the database
$conn = mysqli_connect($host, $username_db, $password_db, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

$error = "";

if (isset($_POST['submit'])) {
    // Sanitize inputs
    $username_email = mysqli_real_escape_string($conn, $_POST['username_email']);
    $password = md5($_POST['password']); // Hash the password

    // Check if either username or email is provided
    $sql = "SELECT * FROM users WHERE username='$username_email' OR email='$username_email'";
    
    $result = mysqli_query($conn, $sql);
    
    if (!$result) {
        die("Query failed: " . mysqli_error($conn));
    }
    
    $row = mysqli_fetch_assoc($result);
    
    // Check if account exists
    if (mysqli_num_rows($result) == 1) {
        // Verify password
        if ($password == $row['password']) {
            // Start session and store user data
            $_SESSION['id'] = $row['id'];
            $_SESSION['username'] = $row['username'];
            $_SESSION['email'] = $row['email'];
            
            // Handle Remember Me functionality
            if (isset($_POST['remember_me'])) {
                $token = bin2hex(random_bytes(32)); // Generate random token
                $cookie_expire = time() + 60 * 60 * 24 * 30; // Cookie expires in 30 days
                
                // Update the user's token in database
                $update_sql = "UPDATE users SET remember_token='$token' WHERE id=" . $_SESSION['id'];
                mysqli_query($conn, $update_sql);
                
                // Set cookies
                setcookie('username', $row['username'], $cookie_expire, '/');
                setcookie('remember_token', $token, $cookie_expire, '/');
            }
            
            // Redirect to dashboard or welcome page
            header("Location: welcome.php");
            exit();
        } else {
            $error = "Incorrect password!";
        }
    } else {
        $error = "Username/Email not found! Please register.";
    }
}

mysqli_close($conn);
?>


<?php
// config.php - Database configuration file
$host = "localhost";
$username_db = "root"; // Replace with your database username
$password_db = "";     // Replace with your database password
$database = "login_system";

// Create connection
$conn = new mysqli($host, $username_db, $password_db, $database);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}
?>


<?php
// index.php - Login page

session_start();
require_once 'config.php';

if (isset($_SESSION['user_id'])) {
    header("Location: dashboard.php");
    exit();
}

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = mysqli_real_escape_string($conn, $_POST['username']);
    $password = $_POST['password'];

    // Use prepared statements to prevent SQL injection
    $stmt = $conn->prepare("SELECT id, username, password FROM users WHERE username = ?");
    $stmt->bind_param("s", $username);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        $user_data = $result->fetch_assoc();
        // Verify the password
        if (password_verify($password, $user_data['password'])) {
            $_SESSION['user_id'] = $user_data['id'];
            $_SESSION['username'] = $user_data['username'];
            header("Location: dashboard.php");
            exit();
        } else {
            $error_message = "Invalid username or password";
        }
    } else {
        $error_message = "Invalid username or password";
    }

    // Close the statement
    $stmt->close();
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Login Page</title>
    <style>
        body { font-family: Arial, sans-serif; }
        .container { max-width: 400px; margin: 50px auto; padding: 20px; }
        form { background-color: #f2f2f2; padding: 10px; border-radius: 5px; }
        input { width: 95%; padding: 8px; margin: 5px 0; }
        button { padding: 8px 16px; background-color: #4CAF50; color: white; border: none; border-radius: 4px; cursor: pointer; }
        button:hover { background-color: #45a049; }
        .error-message { color: red; margin-top: 5px; }
    </style>
</head>
<body>
    <div class="container">
        <?php if (isset($error_message)) : ?>
            <div class="error-message"><?php echo $error_message ?></div>
        <?php endif; ?>

        <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="POST">
            <h2>Login</h2>
            <input type="text" name="username" placeholder="Username" required><br>
            <input type="password" name="password" placeholder="Password" required><br>
            <button type="submit">Login</button>
        </form>

        <p>Don't have an account? <a href="register.php">Register here</a></p>
    </div>
</body>
</html>

<?php
// Close the database connection
$conn->close();
?>


<?php
// dashboard.php - Protected page after login

session_start();

if (!isset($_SESSION['user_id'])) {
    header("Location: index.php");
    exit();
}

require_once 'config.php';

?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Dashboard</title>
    <style>
        body { font-family: Arial, sans-serif; }
        .container { max-width: 600px; margin: 50px auto; padding: 20px; }
        h1 { color: #333; text-align: center; }
        p { color: #666; }
    </style>
</head>
<body>
    <div class="container">
        <h1>Welcome to the Dashboard, <?php echo $_SESSION['username']; ?>!</h1>
        <p>Your user ID is: <?php echo $_SESSION['user_id']; ?></p>
        <a href="logout.php">Logout</a>
    </div>
</body>
</html>

<?php
// Close the database connection
$conn->close();
?>


<?php
// Include database configuration file
include('config.php');

// Initialize message variable
$msg = "";

if (isset($_POST['login'])) {
    // Sanitize input data
    $username = htmlspecialchars(trim($_POST['username']));
    $password = htmlspecialchars(trim($_POST['password']));

    // Check if username and password are not empty
    if (!empty($username) && !empty($password)) {
        // Connect to the database
        $conn = mysqli_connect(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);

        // SQL query to check user credentials
        $sql = "SELECT * FROM users WHERE username = '" . mysqli_real_escape_string($conn, $username) . "'";
        $result = mysqli_query($conn, $sql);

        if ($result) {
            $user_data = mysqli_fetch_assoc($result);
            
            // Check if password matches
            if (password_verify($password, $user_data['password'])) {
                // Password is correct
                session_start();
                
                // Store user data in session variables
                $_SESSION['id'] = $user_data['id'];
                $_SESSION['username'] = $user_data['username'];
                $_SESSION['logged_in'] = true;

                // Remember me functionality
                if (isset($_POST['remember'])) {
                    setcookie('username', $username, time() + 3600 * 24 * 7);
                }

                // Redirect to dashboard
                header("Location: dashboard.php");
                exit();
            } else {
                $msg = "Invalid username or password!";
            }
        } else {
            $msg = "An error occurred while checking your credentials. Please try again.";
        }

        // Close database connection
        mysqli_close($conn);
    } else {
        $msg = "Please fill in all required fields!";
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login Page</title>
</head>
<body>
    <h2>Login Form</h2>
    
    <?php if (!empty($msg)) { ?>
        <div style="color: red;"><?php echo $msg; ?></div><br/>
    <?php } ?>

    <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
        <input type="text" name="username" placeholder="Enter your username" required><br/><br/>
        <input type="password" name="password" placeholder="Enter your password" required><br/><br/>
        <input type="checkbox" name="remember"> Remember me<br/><br/>
        <button type="submit" name="login">Login</button>
    </form>
    
    <p>Don't have an account? <a href="register.php">Register here</a>.</p>
</body>
</html>


<?php
define('DB_HOST', 'localhost');
define('DB_USER', 'root');
define('DB_PASSWORD', '');
define('DB_NAME', 'your_database_name');
?>


<?php
session_start();
include('db_connection.php');

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $username = mysqli_real_escape_string($conn, $_POST['username']);
    $password = $_POST['password'];

    $sql = "SELECT id, username, password FROM users WHERE username = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("s", $username);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($row = $result->fetch_assoc()) {
        if (password_verify($password, $row['password'])) {
            $_SESSION['user_id'] = $row['id'];
            $_SESSION['username'] = $row['username'];
            $_SESSION['logged_in'] = true;

            header("Location: dashboard.php");
            exit();
        } else {
            header("Location: login.html?error=Incorrect password");
            exit();
        }
    } else {
        header("Location: login.html?error=Username not found");
        exit();
    }
}
?>


<?php
$servername = "localhost";
$username_db = "root"; // Your database username
$password_db = "";     // Your database password
$dbname = "your_database"; // Your database name

$conn = new mysqli($servername, $username_db, $password_db, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}
?>


$hashed_password = password_hash($plain_password, PASSWORD_DEFAULT);
// Store $hashed_password in the database


if (isset($_SESSION['logged_in']) && $_SESSION['logged_in'] == true) {
    // User is logged in; proceed accordingly
} else {
    // Redirect to login page
    header("Location: login.html");
    exit();
}


<?php
session_start();
unset($_SESSION['user_id']);
unset($_SESSION['username']);
unset($_SESSION['logged_in']);
session_destroy();

header("Location: login.html");
exit();
?>


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login Page</title>
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
</head>
<body class="bg-light">
    <div class="container mt-5">
        <?php
            // Database connection
            require_once 'db_connection.php';

            $errors = array();
            
            if (isset($_POST['submit'])) {
                $email = mysqli_real_escape_string($conn, $_POST['email']);
                $password = $_POST['password'];
                
                if (empty($email)) {
                    $errors[] = "Email is required";
                }
                if (empty($password)) {
                    $errors[] = "Password is required";
                }

                // Sanitize inputs
                $email = htmlspecialchars(trim($email));
                $password = htmlspecialchars(trim($password));

                // Check if email exists in database
                $query = "SELECT * FROM users WHERE email = ?";
                $stmt = mysqli_prepare($conn, $query);
                mysqli_stmt_bind_param($stmt, "s", $email);
                mysqli_stmt_execute($stmt);
                $result = mysqli_stmt_get_result($stmt);

                if (mysqli_num_rows($result) == 0) {
                    $errors[] = "Email does not exist";
                } else {
                    // Fetch user data
                    $user = mysqli_fetch_assoc($result);
                    
                    // Verify password
                    if (!password_verify($password, $user['password'])) {
                        $errors[] = "Incorrect password";
                    }
                }

                // If no errors, proceed to login
                if (empty($errors)) {
                    // Set session variables
                    $_SESSION['email'] = $email;
                    $_SESSION['logged_in'] = true;
                    
                    // Redirect to dashboard or home page
                    header("Location: dashboard.php");
                    exit();
                }
            }

            // Display errors
            if (!empty($errors)) {
                foreach ($errors as $error) {
                    echo "<div class='alert alert-danger mt-3'>$error</div>";
                }
            }
        ?>

        <form id="loginForm" method="POST">
            <div class="mb-3">
                <label for="email" class="form-label">Email address</label>
                <input type="email" name="email" class="form-control" id="email" required>
            </div>
            <div class="mb-3">
                <label for="password" class="form-label">Password</label>
                <input type="password" name="password" class="form-control" id="password" required>
            </div>
            <button type="submit" name="submit" class="btn btn-primary">Login</button>
        </form>

        <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
        <script>
            $(document).ready(function() {
                $('#loginForm').on('submit', function(e) {
                    e.preventDefault();
                    
                    $.ajax({
                        url: window.location.href,
                        method: 'POST',
                        data: $(this).serialize(),
                        success: function(response) {
                            if ($('.alert-danger').length > 0) {
                                // Display errors
                                $('.alert-danger').show();
                            } else {
                                window.location.href = 'dashboard.php';
                            }
                        },
                        error: function(xhr, status, error) {
                            console.error(error);
                        }
                    });
                });
            });
        </script>
    </div>

    <!-- Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>


<?php
session_start();
include("db_connection.php"); // Include your database connection file

// Check if form was submitted
if (isset($_POST['submit'])) {
    $username = $_POST['username'];
    $password = $_POST['password'];
    
    // Validate input
    if ($username == "" || $password == "") {
        die("Please enter both username and password");
    }
    
    // Prepare SQL statement to prevent SQL injection
    $stmt = mysqli_prepare($conn, "SELECT id, username, password FROM users WHERE username = ?");
    mysqli_stmt_bind_param($stmt, "s", $username);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);
    
    if (mysqli_num_rows($result) == 0) {
        die("Username does not exist");
    }
    
    // Fetch user details
    $user = mysqli_fetch_assoc($result);
    
    // Verify password
    if (!password_verify($password, $user['password'])) {
        die("Incorrect password");
    } else {
        // Start session and store user information
        $_SESSION['user_id'] = $user['id'];
        $_SESSION['username'] = $user['username'];
        $_SESSION['email'] = $user['email']; // Assuming email is stored in the users table
        
        // Regenerate session ID for security
        session_regenerate(true);
        
        // Redirect to dashboard or home page
        header("Location: dashboard.php");
        exit();
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login Page</title>
</head>
<body>
    <h2>Login</h2>
    
    <?php
    if (isset($_GET['error'])) {
        echo "<p style='color:red;'>".$_GET['error']."</p>";
    }
    ?>
    
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        Username: <input type="text" name="username" required><br>
        Password: <input type="password" name="password" required><br>
        <input type="submit" name="submit" value="Login">
    </form>
</body>
</html>


<?php
$host = "localhost";
$username = "root"; // Your database username
$password = ""; // Your database password
$dbname = "your_database_name";

$conn = mysqli_connect($host, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}
?>


$hashed_password = password_hash($password, PASSWORD_DEFAULT);


<?php
// Database configuration
$host = 'localhost';
$dbUsername = 'username';
$dbPassword = 'password';
$database = 'dbname';

// Create connection
$conn = new mysqli($host, $dbUsername, $dbPassword, $database);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Start session
session_start();

// Function to sanitize input
function sanitizeInput($data) {
    $data = trim($data);
    $data = stripslashes($data);
    $data = htmlspecialchars($data);
    return $data;
}

// Check if form is submitted
if (isset($_POST['login'])) {
    // Get user input
    $email = sanitizeInput($_POST['email']);
    $password = $_POST['password'];

    // Validate email and password
    if (empty($email) || empty($password)) {
        echo "Email or password cannot be empty!";
        exit();
    }

    // Check if the user exists in the database
    $stmt = $conn->prepare("SELECT * FROM users WHERE email = ?");
    $stmt->bind_param("s", $email);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows == 1) {
        $user = $result->fetch_assoc();
        
        // Verify password
        if (password_verify($password, $user['password'])) {
            // Start session and store user data
            $_SESSION['loggedin'] = true;
            $_SESSION['id'] = $user['id'];
            $_SESSION['username'] = $user['username'];
            $_SESSION['email'] = $user['email'];

            // Redirect to dashboard or home page
            header("Location: dashboard.php");
            exit();
        } else {
            echo "Incorrect password!";
        }
    } else {
        echo "User with this email does not exist!";
    }
}

// Close connection
$conn->close();

?>

<!DOCTYPE html>
<html>
<head>
    <title>Login Page</title>
    <!-- Add your stylesheets or CSS code here -->
</head>
<body>
    <div class="login-container">
        <h1>Login</h1>
        <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
            <input type="email" name="email" placeholder="Enter your email" required>
            <input type="password" name="password" placeholder="Enter your password" required>
            <button type="submit" name="login">Login</button>
        </form>
        <p>Don't have an account? <a href="register.php">Sign up here</a>.</p>
    </div>
</body>
</html>


<?php
// Include database connection file
include("db_connection.php");

function userLogin($username, $password) {
    global $conn;
    
    // Sanitize input to prevent SQL injection
    $username = mysqli_real_escape_string($conn, $username);
    $password = mysqli_real_escape_string($conn, $password);
    
    // Query the database for the user
    $query = "SELECT * FROM users WHERE username='$username'";
    $result = mysqli_query($conn, $query);
    
    if (mysqli_num_rows($result) == 1) {
        $user = mysqli_fetch_assoc($result);
        
        // Verify password
        if (password_verify($password, $user['password'])) {
            // Password is correct
            
            // Start session
            session_start();
            
            // Store user data in session variables
            $_SESSION['username'] = $user['username'];
            $_SESSION['email'] = $user['email'];
            $_SESSION['user_id'] = $user['id'];
            $_SESSION['logged_in'] = true;
            
            // Optional: Record login attempt
            recordLoginAttempt($user['id'], true);
            
            return true;
        } else {
            // Password is incorrect
            recordLoginAttempt($username, false);
            return false;
        }
    } else {
        // Username not found
        return false;
    }
}

function recordLoginAttempt($userId, $success) {
    global $conn;
    
    $actionDate = date('Y-m-d H:i:s');
    if ($success) {
        $message = "User logged in successfully";
    } else {
        $message = "Failed login attempt";
    }
    
    $query = "INSERT INTO login_attempts (user_id, action_date, success, message)
              VALUES ('$userId', '$actionDate', '".($success ? 1 : 0)."', '$message')";
    mysqli_query($conn, $query);
}

// Example usage:
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $username = $_POST['username'];
    $password = $_POST['password'];
    
    if (userLogin($username, $password)) {
        header("Location: dashboard.php");
        exit();
    } else {
        echo "Invalid username or password!";
    }
}
?>


<?php
// Database configuration
$host = 'localhost';
$db_username = 'root';
$db_password = '';
$db_name = 'mydatabase';

// Connect to database
$conn = mysqli_connect($host, $db_username, $db_password, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to login user
function loginUser() {
    global $conn;
    
    // Check if form is submitted
    if (isset($_POST['submit'])) {
        // Sanitize input data
        $username = htmlspecialchars(trim($_POST['username']));
        $password = htmlspecialchars(trim($_POST['password']));

        // Prepare SQL query to select user with matching username
        $stmt = mysqli_prepare($conn, "SELECT * FROM users WHERE username = ?");
        mysqli_stmt_bind_param($stmt, "s", $username);
        mysqli_stmt_execute($stmt);
        $result = mysqli_stmt_get_result($stmt);

        if ($row = mysqli_fetch_assoc($result)) {
            // Verify password
            if (password_verify($password, $row['password'])) {
                // Password is correct
                session_start();
                $_SESSION['user_id'] = $row['id'];
                $_SESSION['username'] = $row['username'];

                // Redirect to dashboard or home page
                header("Location: dashboard.php");
                exit();
            } else {
                // Incorrect password
                echo "Invalid username or password";
            }
        } else {
            // Username not found
            echo "Invalid username or password";
        }
    }
}

// Call the login function
loginUser();

// Close database connection
mysqli_close($conn);
?>


<?php
// Include database configuration file
include('config.php');

function login_user($username, $password, $mysqli) {
    // Sanitize inputs to prevent SQL injection
    $username = $mysqli->real_escape_string($username);
    $password = $mysqli->real_escape_string($password);

    // Query the database for the user
    $query = "SELECT id, username, password, email FROM users WHERE username = '$username'";
    $result = $mysqli->query($query);

    if ($result->num_rows == 1) {
        $row = $result->fetch_assoc();
        
        // Verify the password using password_verify()
        if (password_verify($password, $row['password'])) {
            // Password is correct
            // Start a session
            session_start();
            
            // Set session variables
            $_SESSION['user_id'] = $row['id'];
            $_SESSION['username'] = $row['username'];
            $_SESSION['email'] = $row['email'];
            $_SESSION['logged_in'] = true;
            
            // Regenerate session ID to prevent fixation attacks
            session_regenerate(true);
            
            return true;
        } else {
            // Password is incorrect
            return false;
        }
    } else {
        // Username not found in database
        return false;
    }
}

// Example usage:
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $username = $_POST['username'];
    $password = $_POST['password'];

    if (login_user($username, $password, $mysqli)) {
        // Login successful, redirect to dashboard
        header("Location: dashboard.php");
        exit();
    } else {
        // Login failed
        $error_message = "Invalid username or password";
    }
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Login</title>
</head>
<body>
    <?php if (!empty($error_message)) { ?>
        <div style="color: red;"><?php echo $error_message; ?></div>
    <?php } ?>

    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        Username:<br>
        <input type="text" name="username"><br><br>
        
        Password:<br>
        <input type="password" name="password"><br><br>
        
        <input type="submit" value="Login">
    </form>
</body>
</html>


<?php
session_start();

// Database connection details
$host = 'localhost';
$username_db = 'root';
$password_db = '';
$db_name = 'mydatabase';

// Connect to database
$conn = mysqli_connect($host, $username_db, $password_db, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Sanitize input
    $username = mysqli_real_escape_string($conn, $_POST['username']);
    $password = mysqli_real_escape_string($conn, $_POST['password']);

    // Query the database for the user
    $sql = "SELECT id, username, password FROM users WHERE username = '$username'";
    $result = mysqli_query($conn, $sql);

    if ($result === false) {
        die("Query failed: " . mysqli_error($conn));
    }

    $row_count = mysqli_num_rows($result);
    
    if ($row_count == 0) {
        echo "Username not found. Please try again.";
    } else {
        // Fetch the user data
        $user_data = mysqli_fetch_assoc($result);
        
        // Verify password
        if (password_verify($password, $user_data['password'])) {
            // Password is correct
            $_SESSION['username'] = $user_data['username'];
            $_SESSION['user_id'] = $user_data['id'];
            
            // Redirect to dashboard or home page
            header("Location: dashboard.php");
            exit();
        } else {
            echo "Incorrect password. Please try again.";
        }
    }
}

// Close the database connection
mysqli_close($conn);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login Page</title>
</head>
<body>
    <h2>Login</h2>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        Username: <input type="text" name="username"><br>
        Password: <input type="password" name="password"><br>
        <input type="submit" value="Login">
    </form>
</body>
</html>


<?php
session_start();
include('db_connection.php'); // Include your database connection file

function loginUser($usernameOrEmail, $password) {
    global $conn;

    // Sanitize input to prevent SQL injection
    $usernameOrEmail = filter_var($usernameOrEmail, FILTER_SANITIZE_STRING);
    $password = filter_var($password, FILTER_SANITIZE_STRING);

    // Check if username or email exists in the database
    $query = "SELECT * FROM users WHERE username = '$usernameOrEmail' OR email = '$usernameOrEmail'";
    $result = mysqli_query($conn, $query);

    if (mysqli_num_rows($result) == 1) {
        $row = mysqli_fetch_assoc($result);
        
        // Verify password
        if (password_verify($password, $row['password'])) {
            // Password is correct

            // Set session variables
            $_SESSION['id'] = $row['id'];
            $_SESSION['username'] = $row['username'];
            $_SESSION['email'] = $row['email'];
            $_SESSION['role'] = $row['role']; // Assuming you have a role column for access control

            return true;
        } else {
            // Password is incorrect
            return "Invalid password";
        }
    } else {
        // Username or email not found
        return "Username or email not found";
    }
}

// Example usage:
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $usernameOrEmail = $_POST['username_or_email'];
    $password = $_POST['password'];

    $loginResult = loginUser($usernameOrEmail, $password);

    if ($loginResult === true) {
        header("Location: dashboard.php"); // Redirect to dashboard
        exit();
    } else {
        echo $loginResult; // Display error message
    }
}
?>


// Add this after successful login
if (isset($_POST['remember'])) {
    // Set expiration time for 1 month
    $expire = time() + 30 * 24 * 60 * 60;

    // Generate a random token
    $token = bin2hex(random_bytes(32));

    // Store the token in cookies
    setcookie('remember_token', $token, $expire);

    // Store the token in database
    $userId = $_SESSION['id'];
    $query = "UPDATE users SET remember_token='$token' WHERE id='$userId'";
    mysqli_query($conn, $query);
}


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'mydatabase';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Error messages array
$error = array();

// Check if form is submitted
if (isset($_POST['login'])) {
    // Sanitize input data
    $email_username = trim(mysqli_real_escape_string($conn, $_POST['email_username']));
    $password_input = trim(mysqli_real_escape_string($conn, $_POST['password']));

    // Check if email/username and password are provided
    if (empty($email_username) || empty($password_input)) {
        $error[] = "Please fill in all fields";
    }

    if (!count($error)) {
        // Prepare query statement to prevent SQL injection
        $stmt = $conn->prepare("SELECT * FROM users WHERE username=? OR email=?");
        $stmt->bind_param('ss', $email_username, $email_username);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            // Get user data
            $user = $result->fetch_assoc();

            // Verify password
            $hash = $user['password'];
            if (password_verify($password_input, $hash)) {

                // Create session variables
                $_SESSION['id'] = $user['id'];
                $_SESSION['name'] = $user['name'];
                $_SESSION['username'] = $user['username'];
                $_SESSION['email'] = $user['email'];

                // Remember me functionality
                if (isset($_POST['remember'])) {
                    setcookie('id', $user['id'], time() + 3600);
                    setcookie('username', $user['username'], time() + 3600);
                }

                // Redirect to dashboard or home page
                header("Location: dashboard.php");
                exit();
            } else {
                $error[] = "Incorrect password";
            }
        } else {
            $error[] = "User not found. Please check your email/username.";
        }
    }

    // Close statement and connection
    $stmt->close();
    $conn->close();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login Page</title>
    <!-- Add some basic styling -->
    <style>
        .error {
            color: red;
            margin-bottom: 10px;
        }
        .login-form {
            width: 300px;
            margin: 0 auto;
            padding: 20px;
            border: 1px solid #ddd;
            border-radius: 5px;
        }
        input[type=text], input[type=password] {
            width: 100%;
            padding: 10px;
            margin: 8px 0;
            box-sizing: border-box;
        }
    </style>
</head>
<body>
    <div class="login-form">
        <?php if (count($error)) { ?>
            <?php foreach ($error as $err) { ?>
                <div class="error"><?php echo $err; ?></div>
            <?php } ?>
        <?php } ?>

        <form action="<?php echo htmlspecialchars($_SERVER['PHP_SELF']); ?>" method="post">
            <input type="text" placeholder="Enter email or username" name="email_username" value="<?php echo $email_username ?>">
            <input type="password" placeholder="Enter password" name="password">
            <label>
                <input type="checkbox" name="remember"> Remember me
            </label>
            <button type="submit" name="login">Login</button>
        </form>

        <p>Don't have an account? <a href="register.php">Sign up here</a></p>
    </div>
</body>
</html>


<?php
// Database configuration
$host = 'localhost';
$username_db = 'root';
$password_db = '';
$db_name = 'login_system';

// Connect to database
$conn = new mysqli($host, $username_db, $password_db, $db_name);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to login user
function loginUser($emailOrUsername, $password) {
    global $conn;
    
    // Sanitize input
    $emailOrUsername = mysqli_real_escape_string($conn, $emailOrUsername);
    $password = mysqli_real_escape_string($conn, $password);

    // Check if the user exists in the database
    $query = "SELECT * FROM users WHERE email = ? OR username = ?";
    
    // Prepare statement
    $stmt = $conn->prepare($query);
    $stmt->bind_param("ss", $emailOrUsername, $emailOrUsername);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        $user = $result->fetch_assoc();
        
        // Verify password
        if (password_verify($password, $user['password'])) {
            // Create session variables
            $_SESSION['id'] = $user['id'];
            $_SESSION['username'] = $user['username'];
            $_SESSION['email'] = $user['email'];
            
            return true;
        } else {
            // Incorrect password
            return false;
        }
    } else {
        // User not found
        return false;
    }
}

// Main login process
if (isset($_POST['login'])) {
    // Get form data
    $emailOrUsername = $_POST['emailOrUsername'];
    $password = $_POST['password'];

    if (!empty($emailOrUsername) && !empty($password)) {
        if (loginUser($emailOrUsername, $password)) {
            header("Location: dashboard.php");
            exit();
        } else {
            $error = "Invalid username/email or password";
        }
    } else {
        $error = "Please fill in all fields";
    }
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Login Page</title>
</head>
<body>
    <?php if (isset($error)) { ?>
        <div style="color: red;"><?php echo $error; ?></div><br>
    <?php } ?>

    <form method="post" action="">
        Email or Username:<br>
        <input type="text" name="emailOrUsername"><br><br>

        Password:<br>
        <input type="password" name="password"><br><br>

        <button type="submit" name="login">Login</button>
    </form>
</body>
</html>


<?php
session_start();

// Database connection details
$host = 'localhost';
$db_username = 'root';
$db_password = '';
$db_name = 'your_database';

// Connect to database
$conn = mysqli_connect($host, $db_username, $db_password, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Sanitize input data
    $username = htmlspecialchars(trim($_POST['username']));
    $password = $_POST['password'];

    if (empty($username) || empty($password)) {
        header("Location: login.html?error=Please fill in all fields");
        exit();
    }

    // Prepare SQL statement to prevent SQL injection
    $stmt = mysqli_prepare($conn, "SELECT * FROM users WHERE username = ?");
    
    if ($stmt === false) {
        die('SQL error: ' . mysqli_error($conn));
    }
    
    mysqli_stmt_bind_param($stmt, "s", $username);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);
    
    if ($row = mysqli_fetch_assoc($result)) {
        // Check password
        if (password_verify($password, $row['password'])) {
            // Start session and store user data
            $_SESSION['user_id'] = $row['id'];
            $_SESSION['username'] = $row['username'];
            
            // Redirect to dashboard or home page
            header("Location: dashboard.php");
            exit();
        } else {
            header("Location: login.html?error=Invalid password");
            exit();
        }
    } else {
        header("Location: login.html?error=Username not found");
        exit();
    }
}

// Close database connection
mysqli_close($conn);
?>


<?php
session_start();

$host = 'localhost';
$db_username = 'root';
$db_password = '';
$db_name = 'your_database';

$conn = mysqli_connect($host, $db_username, $db_password, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = htmlspecialchars(trim($_POST['username']));
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];

    if (empty($username) || empty($password)) {
        header("Location: register.html?error=Please fill in all fields");
        exit();
    }

    if ($password !== $confirm_password) {
        header("Location: register.html?error=Passwords do not match");
        exit();
    }

    // Hash the password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

    $stmt = mysqli_prepare($conn, "INSERT INTO users (username, password) VALUES (?, ?)");
    
    if ($stmt === false) {
        die('SQL error: ' . mysqli_error($conn));
    }
    
    mysqli_stmt_bind_param($stmt, "ss", $username, $hashed_password);
    
    if (mysqli_stmt_execute($stmt)) {
        header("Location: login.html?success=Registration successful! Please login.");
        exit();
    } else {
        header("Location: register.html?error=Error registering user");
        exit();
    }
}

mysqli_close($conn);
?>


<?php
session_start();

if (!isset($_SESSION['username'])) {
    header("Location: login.html");
    exit();
}

echo "Welcome, " . $_SESSION['username'] . "!<br>";
echo "<a href='logout.php'>Logout</a>";
?>


<?php
session_start();

// Destroy all session variables
$_SESSION = array();

// Delete session cookie
if (ini_set('session.cookie_httponly', '1')) {
    $params = session_get_cookie_params();
    setcookie(session_name(), '', time() - 42000,
        $params['path'], $params['domain'],
        $params['secure'], $params['httponly']);
}

// Destroy the session
session_destroy();

header("Location: login.html");
exit();
?>


<?php
// Database configuration
$host = 'localhost';
$dbUsername = 'root';
$dbPassword = '';
$dbName = 'your_database';

function loginUser($username, $password) {
    global $host, $dbUsername, $dbPassword, $dbName;
    
    // Connect to database
    $conn = new mysqli($host, $dbUsername, $dbPassword, $dbName);
    
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
        return false;
    }
    
    // Sanitize input
    $username = $conn->real_escape_string($username);
    $password = $conn->real_escape_string($password);
    
    // Query the database for the user
    $query = "SELECT * FROM users WHERE username = '$username' AND password = '$password'";
    $result = $conn->query($query);
    
    if ($result->num_rows == 1) {
        // User exists, start session
        session_start();
        $_SESSION['username'] = $username;
        $_SESSION['user_id'] = $result->fetch_assoc()['id'];
        return true;
    } else {
        return false;
    }
    
    $conn->close();
}

// Example usage:
if (isset($_POST['login'])) {
    $username = $_POST['username'];
    $password = $_POST['password'];
    
    if (loginUser($username, $password)) {
        header("Location: dashboard.php");
    } else {
        echo "Invalid username or password!";
    }
}
?>


<?php
function loginUser($username, $password) {
    global $host, $dbUsername, $dbPassword, $dbName;
    
    // Connect to database
    $conn = new mysqli($host, $dbUsername, $dbPassword, $dbName);
    
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
        return false;
    }
    
    // Sanitize input
    $username = $conn->real_escape_string($username);
    
    // Query the database for the user
    $query = "SELECT * FROM users WHERE username = '$username'";
    $result = $conn->query($query);
    
    if ($result->num_rows == 1) {
        $user = $result->fetch_assoc();
        if (password_verify($password, $user['password'])) {
            // Password matches, start session
            session_start();
            $_SESSION['username'] = $username;
            $_SESSION['user_id'] = $user['id'];
            return true;
        } else {
            return false;
        }
    } else {
        return false;
    }
    
    $conn->close();
}
?>


<?php
// Include database configuration file
include_once 'config.php';

function loginUser($email, $password) {
    // Check if email and password are provided
    if (empty($email) || empty($password)) {
        return "Please fill in all required fields.";
    }

    global $conn;

    try {
        // Escape user inputs to prevent SQL injection
        $email = mysqli_real_escape_string($conn, $email);
        $password = mysqli_real_escape_string($conn, $password);

        // Query the database for the user with the provided email
        $query = "SELECT id, email, password, role FROM users WHERE email = ?";
        $stmt = $conn->prepare($query);
        $stmt->bind_param("s", $email);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($row = $result->fetch_assoc()) {
            // Verify the password
            if (password_verify($password, $row['password'])) {
                // Create session variables
                $_SESSION['id'] = $row['id'];
                $_SESSION['email'] = $row['email'];
                $_SESSION['role'] = $row['role'];

                // Check if remember me cookie should be set
                if (!empty($_POST['remember'])) {
                    setcookie('email', $email, time() + (3600 * 24 * 7), '/');
                    setcookie('password', $password, time() + (3600 * 24 * 7), '/');
                }

                // Redirect based on user role
                if ($row['role'] == 'admin') {
                    header("Location: admin.php");
                } else {
                    header("Location: dashboard.php");
                }
                exit();
            } else {
                return "Invalid email or password.";
            }
        } else {
            return "Invalid email or password.";
        }

    } catch (Exception $e) {
        return "An error occurred while logging in. Please try again later.";
    }
}

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Call login function and display the result
    $result = loginUser($_POST['email'], $_POST['password']);
    if ($result != "") {
        echo "<div class='error'>$result</div>";
    }
}
?>


<?php
// Database connection settings
$host = 'localhost';
$dbUsername = 'root';
$dbPassword = '';
$dbName = 'your_database';

// Connect to database
$conn = mysqli_connect($host, $dbUsername, $dbPassword, $dbName);

// Check if connection failed
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to handle user login
function loginUser() {
    global $conn;

    // Check if form is submitted
    if (isset($_POST['login'])) {
        // Sanitize input data
        $username = trim(mysqli_real_escape_string($conn, $_POST['username']));
        $password = trim(mysqli_real_escape_string($conn, $_POST['password']));

        // Query to check user credentials
        $sql = "SELECT * FROM users WHERE username = '$username' OR email = '$username'";
        $result = mysqli_query($conn, $sql);

        // Check if query was successful
        if (!$result) {
            die("Query failed: " . mysqli_error($conn));
        }

        // Check if user exists and password is correct
        if (mysqli_num_rows($result) == 1) {
            $user = mysqli_fetch_assoc($result);
            
            // Verify password
            if (!password_verify($password, $user['password'])) {
                return false;
            } else {
                // Start session
                session_start();
                
                // Store user data in session
                $_SESSION['id'] = $user['id'];
                $_SESSION['username'] = $user['username'];
                $_SESSION['email'] = $user['email'];
                $_SESSION['login_time'] = time();

                return true;
            }
        } else {
            // User does not exist or wrong credentials
            return false;
        }
    }

    return false;
}

// Example usage:
if (isset($_POST['login'])) {
    if (loginUser()) {
        header("Location: dashboard.php");
        exit();
    } else {
        echo "Invalid username or password!";
    }
}
?>

<!-- HTML Login Form -->
<form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
    <input type="text" name="username" placeholder="Username or Email" required>
    <input type="password" name="password" placeholder="Password" required>
    <button type="submit" name="login">Login</button>
</form>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

try {
    // Create database connection
    $conn = new PDO("mysql:host=$host;dbname=$ dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        // Get form data
        $username = trim($_POST['username']);
        $password = $_POST['password'];
        
        // Check CSRF token (you should implement this)
        if (!isset($_POST['_token']) || $_POST['_token'] !== $_SESSION['_token']) {
            die("Invalid request");
        }
        
        // Prepare and execute query
        $stmt = $conn->prepare("SELECT * FROM users WHERE username = ?");
        $stmt->execute([$username]);
        
        $user = $stmt->fetch(PDO::FETCH_ASSOC);
        
        if ($user) {
            // Verify password
            if (password_verify($password, $user['password'])) {
                // Start session and store user data
                session_start();
                $_SESSION['logged_in'] = true;
                $_SESSION['username'] = $user['username'];
                
                // Redirect to dashboard or home page
                header("Location: dashboard.php");
                exit();
            } else {
                $error_message = "Invalid username or password";
            }
        } else {
            $error_message = "Invalid username or password";
        }
    }

} catch (PDOException $e) {
    die("Database connection failed: " . $e->getMessage());
}

// Display error message if any
if (isset($error_message)) {
    echo "<div class='error'>$error_message</div>";
}
?>

<!-- HTML Form -->
<form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
    <input type="hidden" name="_token" value="<?php echo isset($_SESSION['_token']) ? $_SESSION['_token'] : ''; ?>">
    <label>Username:</label>
    <input type="text" name="username" required><br>
    
    <label>Password:</label>
    <input type="password" name="password" required><br>
    
    <button type="submit">Login</button>
</form>


session_start();


$password_hash = password_hash($password, PASSWORD_DEFAULT);
// Store $password_hash in the database


<?php
session_start();
include('config.php');

// Check if form is submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $username = mysqli_real_escape_string($conn, $_POST['username']);
    $password = $_POST['password'];

    // Query to check username existence
    $sql = "SELECT id, password FROM users WHERE username = '$username'";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) == 1) {
        $row = mysqli_fetch_assoc($result);
        $storedPasswordHash = $row['password'];
        
        // Verify the password
        if (password_verify($password, $storedPasswordHash)) {
            // Password is correct
            $_SESSION['user_id'] = $row['id'];
            $_SESSION['username'] = $username;
            $_SESSION['login_time'] = time();

            // Invalidate previous sessions for security
            $sessionToken = bin2hex(random_bytes(32));
            $_SESSION['session_token'] = $sessionToken;

            // Update session token in the database
            $updateSql = "UPDATE users SET session_token = '$sessionToken' WHERE id = $row[id]";
            mysqli_query($conn, $updateSql);

            // Redirect to dashboard or home page
            header('Location: dashboard.php');
            exit();
        } else {
            // Password is incorrect
            echo '<script>alert("Incorrect password."); window.location.href="login.html";</script>';
        }
    } else {
        // Username does not exist
        echo '<script>alert("Username not found."); window.location.href="login.html";</script>';
    }
}
?>


<?php
$servername = "localhost";
$usernameDB = "root";
$passwordDB = "";
$dbname = "your_database_name";

// Create connection
$conn = mysqli_connect($servername, $usernameDB, $passwordDB, $dbname);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}
?>


<?php
session_start();
include('config.php'); // Include your database configuration file

function login($username, $password) {
    global $db;

    // Sanitize input
    $username = mysqli_real_escape_string($db, $username);
    $password = mysqli_real_escape_string($db, $password);

    // Query the database for the user
    $query = "SELECT * FROM users WHERE username = '$username'";
    $result = mysqli_query($db, $query);

    if (mysqli_num_rows($result) == 1) {
        $row = mysqli_fetch_assoc($result);
        
        // Verify password
        if (password_verify($password, $row['password'])) {
            // Password is correct
            $_SESSION['user_id'] = $row['id'];
            $_SESSION['username'] = $row['username'];
            $_SESSION['logged_in'] = true;

            // Optional: Set a remember me cookie
            if (!empty($_POST['remember'])) {
                $token = bin2hex(random_bytes(32));
                setcookie('remember_token', $token, time() + (10 * 365 * 24 * 60 * 60), '/', '', true, true);
                // Store token in database
                $update_query = "UPDATE users SET remember_token = '$token' WHERE id = {$row['id']}";
                mysqli_query($db, $update_query);
            }

            return true;
        } else {
            // Password is incorrect
            return false;
        }
    } else {
        // User does not exist
        return false;
    }
}

// Example usage:
if (isset($_POST['login'])) {
    $username = $_POST['username'];
    $password = $_POST['password'];

    if (login($username, $password)) {
        header('Location: dashboard.php');
        exit();
    } else {
        echo "Invalid username or password!";
    }
}
?>


<?php
$db = mysqli_connect('localhost', 'username', 'password', 'database_name');
if (!$db) {
    die("Connection failed: " . mysqli_connect_error());
}
?>


<?php
session_start();

// Database connection details
$db_host = "localhost";
$db_username = "root";
$db_password = "";
$db_name = "user_login";

// Connect to database
$conn = mysqli_connect($db_host, $db_username, $db_password, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Sanitize and validate input data
    $username = mysqli_real_escape_string($conn, $_POST['username']);
    $password = md5($_POST['password']); // Hash the password

    // Query to check if user exists
    $sql = "SELECT * FROM users WHERE username = '$username'";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) == 1) {
        // Get user details
        $row = mysqli_fetch_assoc($result);
        
        // Check password match
        if ($password == $row['password']) {
            // Start session and store user details
            $_SESSION['username'] = $row['username'];
            $_SESSION['user_id'] = $row['id'];
            $_SESSION['logged_in'] = true;
            
            // Redirect to welcome page
            header("Location: welcome.php");
            exit();
        } else {
            echo "Incorrect password!";
        }
    } else {
        echo "Username not found!";
    }
}

mysqli_close($conn);
?>


<?php
// Database configuration
$host = 'localhost';
$username_db = 'root';
$password_db = '';
$database = 'test';

// Connect to the database
$conn = new mysqli($host, $username_db, $password_db, $database);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Start session
session_start();

// Login function
function loginUser() {
    global $conn;

    // Check if form is submitted
    if (isset($_POST['login'])) {
        // Sanitize input data
        $username_email = mysqli_real_escape_string($conn, $_POST['username_email']);
        $password = mysqli_real_escape_string($conn, $_POST['password']);

        // Validate input data
        if (empty($username_email) || empty($password)) {
            $_SESSION['message'] = "Please fill in all fields!";
            header("Location: login.php");
            exit();
        }

        // Query the database for user with provided username or email
        $stmt = $conn->prepare("SELECT * FROM users WHERE username=? OR email=?");
        $stmt->bind_param("ss", $username_email, $username_email);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            $user = $result->fetch_assoc();
            
            // Verify password
            if (password_verify($password, $user['password'])) {
                // Create session variables
                $_SESSION['id'] = $user['id'];
                $_SESSION['username'] = $user['username'];
                $_SESSION['email'] = $user['email'];
                $_SESSION['logged_in'] = true;
                $_SESSION['login_time'] = time();

                // Redirect to dashboard or home page
                header("Location: dashboard.php");
                exit();
            } else {
                // Password is incorrect
                $_SESSION['message'] = "Incorrect password!";
                header("Location: login.php");
                exit();
            }
        } else {
            // User not found
            $_SESSION['message'] = "Username or email does not exist!";
            header("Location: login.php");
            exit();
        }

        $stmt->close();
    }
}

// Close database connection
$conn->close();
?>


<?php
session_start();

// Database configuration
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

try {
    // Create database connection
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

    if (isset($_POST['login'])) {
        // Sanitize input data
        $username = htmlspecialchars(trim($_POST['username']));
        $password = htmlspecialchars(trim($_POST['password']));

        // Check if username exists in the database
        $stmt = $conn->prepare("SELECT * FROM users WHERE username = :username");
        $stmt->bindParam(':username', $username);
        $stmt->execute();
        
        $user = $stmt->fetch(PDO::FETCH_ASSOC);

        if ($user) {
            // Verify password
            if (password_verify($password, $user['password'])) {
                // Create session variables
                $_SESSION['user_id'] = $user['id'];
                $_SESSION['username'] = $user['username'];
                
                // Redirect to dashboard or home page
                header("Location: dashboard.php");
                exit();
            } else {
                // Password is incorrect
                $error = "Incorrect password";
                echo "<script>alert('$error');</script>";
            }
        } else {
            // Username does not exist
            $error = "Username does not exist";
            echo "<script>alert('$error');</script>";
        }
    }

} catch(PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

// If form is not submitted, show login form
if (!isset($_POST['login'])) {
?>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Login Page</title>
</head>
<body>
    <h2>Login</h2>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        Username: <input type="text" name="username"><br><br>
        Password: <input type="password" name="password"><br><br>
        <input type="submit" name="login" value="Login">
    </form>
</body>
</html>
<?php
}
?>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$db_name = 'user_login';

// Create connection
$conn = new mysqli($host, $username, $password, $db_name);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

session_start();

if (isset($_POST['submit'])) {
    // Sanitize input data
    $username = htmlspecialchars(trim($_POST['username']));
    $password = htmlspecialchars(trim($_POST['password']));

    if (empty($username) || empty($password)) {
        $error = "Please fill in all fields!";
    } else {
        // Prevent SQL injection
        $username = $conn->real_escape_string($username);
        
        // Query to check user credentials
        $sql = "SELECT * FROM users WHERE username='$username'";
        $result = $conn->query($sql);

        if ($result->num_rows == 1) {
            $row = $result->fetch_assoc();
            
            // Verify password
            if (password_verify($password, $row['password'])) {
                // Start session and store user data
                $_SESSION['username'] = $row['username'];
                $_SESSION['id'] = $row['id'];
                
                // Set session cookie to expire after 1 hour
                session_set_cookie_params(3600, '/', '/', false, true);
                
                // Redirect to dashboard or home page
                header("Location: dashboard.php");
                exit();
            } else {
                $error = "Incorrect password!";
            }
        } else {
            $error = "Username does not exist!";
        }
    }
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login Page</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f0f0f0;
            margin: 0;
            padding: 20px;
        }
        
        .container {
            max-width: 400px;
            margin: 0 auto;
            background-color: white;
            padding: 20px;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }
        
        .form-group {
            margin-bottom: 15px;
        }
        
        input {
            width: 100%;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-sizing: border-box;
        }
        
        button {
            width: 100%;
            background-color: #4CAF50;
            color: white;
            padding: 14px 20px;
            margin: 8px 0;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
        
        button:hover {
            background-color: #45a049;
        }
        
        .error {
            color: red;
            margin-bottom: 10px;
        }
    </style>
</head>
<body>
    <div class="container">
        <?php if (isset($error)) { ?>
            <div class="error"><?php echo $error; ?></div>
        <?php } ?>

        <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
            <div class="form-group">
                <label for="username">Username:</label>
                <input type="text" id="username" name="username" placeholder="Enter your username">
            </div>

            <div class="form-group">
                <label for="password">Password:</label>
                <input type="password" id="password" name="password" placeholder="Enter your password">
            </div>

            <button type="submit" name="submit">Login</button>
        </form>
    </div>
</body>
</html>


<?php
// Database configuration
$host = 'localhost';
$dbusername = 'root';
$dbpassword = '';
$dbname = 'mydatabase';

// Connect to database
$conn = new mysqli($host, $dbusername, $dbpassword, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to sanitize input
function sanitizeInput($data) {
    $data = trim($data);
    $data = htmlspecialchars($data);
    return $data;
}

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {

    // Get username and password from form
    $username = sanitizeInput($_POST['username']);
    $password = $_POST['password'];

    // Prepare SQL statement to prevent SQL injection
    $stmt = $conn->prepare("SELECT * FROM users WHERE username = ?");
    $stmt->bind_param("s", $username);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        // Get user data
        $user = $result->fetch_assoc();

        // Verify password
        if (password_verify($password, $user['password'])) {

            // Start session
            session_start();
            
            // Set session variables
            $_SESSION['logged_in'] = true;
            $_SESSION['username'] = $username;

            // Redirect to dashboard or home page
            header("Location: dashboard.php");
            exit();

        } else {
            echo "Incorrect password. Please try again.";
        }
    } else {
        echo "Username not found. Please register first.";
    }

    // Close statement and connection
    $stmt->close();
    $conn->close();
}

// If user is already logged in, redirect to dashboard
if (isset($_SESSION['logged_in'])) {
    header("Location: dashboard.php");
    exit();
}
?>


// Get email and password from form data
$user_email = htmlspecialchars($_POST['user_email'], ENT_QUOTES, 'UTF-8');
$user_password = $_POST['user_password'];


// Database credentials
$host = 'localhost';
$username = 'root';
$password = '';
$database = 'your_database';

$conn = new mysqli($host, $username, $password, $database);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}


$stmt = $conn->prepare("SELECT id, password FROM users WHERE email = ?");
$stmt->bind_param("s", $user_email);
$stmt->execute();
$result = $stmt->get_result();

if ($result->num_rows == 1) {
    // User exists; get user data
    $row = $result->fetch_assoc();
    $stored_password = $row['password'];
    
    if (password_verify($user_password, $stored_password)) {
        // Password is correct
        session_start();
        $_SESSION['user_id'] = $row['id'];
        $_SESSION['email'] = $user_email;
        
        // Update last login time (optional)
        date_default_timezone_set('UTC');
        $last_login = date("Y-m-d H:i:s");
        $update_stmt = $conn->prepare("UPDATE users SET last_login = ? WHERE id = ?");
        $update_stmt->bind_param("si", $last_login, $_SESSION['user_id']);
        $update_stmt->execute();
        
        header('Location: dashboard.php');
        exit();
    } else {
        // Password is incorrect
        echo "Invalid email or password!";
    }
} else {
    // Email does not exist in the database
    echo "Email not found!";
}


// Close the database connection
$stmt->close();
$conn->close();


<?php
// Start session
session_start();

// Get email and password from form data
$user_email = htmlspecialchars($_POST['user_email'], ENT_QUOTES, 'UTF-8');
$user_password = $_POST['user_password'];

// Database credentials
$host = 'localhost';
$username = 'root';
$password = '';
$database = 'your_database';

$conn = new mysqli($host, $username, $password, $database);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

$stmt = $conn->prepare("SELECT id, password FROM users WHERE email = ?");
$stmt->bind_param("s", $user_email);
$stmt->execute();
$result = $stmt->get_result();

$errors = array();

if ($result->num_rows == 1) {
    $row = $result->fetch_assoc();
    $stored_password = $row['password'];
    
    if (password_verify($user_password, $stored_password)) {
        $_SESSION['user_id'] = $row['id'];
        $_SESSION['email'] = $user_email;
        
        // Update last login time
        date_default_timezone_set('UTC');
        $last_login = date("Y-m-d H:i:s");
        $update_stmt = $conn->prepare("UPDATE users SET last_login = ? WHERE id = ?");
        $update_stmt->bind_param("si", $last_login, $_SESSION['user_id']);
        $update_stmt->execute();
        
        header('Location: dashboard.php');
        exit();
    } else {
        $errors[] = "Invalid email or password!";
    }
} else {
    $errors[] = "Email not found!";
}

// Close the database connection
$stmt->close();
$conn->close();

if (!empty($errors)) {
    echo "<h3>Error:</h3>";
    foreach ($errors as $error) {
        echo "$error <br />";
    }
}
?>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

try {
    // Create database connection
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

    // Check if form is submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        // Get username and password from form
        $username = htmlspecialchars(trim($_POST['username']));
        $password = $_POST['password'];

        // Validate input
        if (empty($username) || empty($password)) {
            die("Username or password cannot be empty");
        }

        // Check for valid email format
        if (!filter_var($username, FILTER_VALIDATE_EMAIL)) {
            die("Invalid email format");
        }

        // Prepare and execute SQL query to check user credentials
        $stmt = $conn->prepare("SELECT * FROM users WHERE username = ?");
        $stmt->execute([$username]);
        $user = $stmt->fetch(PDO::FETCH_ASSOC);

        if ($user) {
            // Verify password
            if (password_verify($password, $user['password'])) {
                // Check if user is active
                if ($user['is_active'] == 1) {
                    // Start session
                    session_start();

                    // Store user details in session
                    $_SESSION['id'] = $user['id'];
                    $_SESSION['username'] = $user['username'];
                    $_SESSION['email'] = $user['email'];
                    $_SESSION['role'] = $user['role'];

                    // Remember me functionality
                    if (!empty($_POST['remember'])) {
                        setcookie('username', $username, time() + (86400 * 30), '/', null, false, true);
                        setcookie('hash', hash('sha256', $password . $user['salt']), time() + (86400 * 30), '/', null, false, true);
                    }

                    // Redirect to dashboard
                    header("Location: dashboard.php");
                } else {
                    die("Account not activated. Please check your email for activation link.");
                }
            } else {
                die("Incorrect password");
            }
        } else {
            die("Username not found");
        }
    }
} catch (PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}
?>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

try {
    // Create a database connection using PDO
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    die("Could not connect to the database: " . $e->getMessage());
}

function loginUser($email, $password, $conn) {
    // Check if email and password are provided
    if (empty($email) || empty($password)) {
        return false;
    }

    try {
        // Prepare SQL statement to select user with matching email
        $stmt = $conn->prepare("SELECT * FROM users WHERE email = ?");
        $stmt->execute([$email]);
        $user = $stmt->fetch(PDO::FETCH_ASSOC);

        if (!$user) {
            return false; // User does not exist
        }

        // Verify password using the hashed password from the database
        if (!password_verify($password, $user['password'])) {
            return false; // Invalid password
        }

        // Store user session data
        $_SESSION['user'] = [
            'id' => $user['id'],
            'name' => $user['name'],
            'email' => $user['email']
        ];

        // Optional: Set a remember me cookie if needed
        setRememberMeCookie($user['id']);

        return true; // Login successful

    } catch (PDOException $e) {
        error_log("Database error while logging in user: " . $e->getMessage());
        return false;
    }
}

function setRememberMeCookie($userId, $rememberMe = true) {
    if ($rememberMe) {
        $cookieValue = hash('sha256', $userId . time() . uniqid());
        setcookie('remember_me', $cookieValue, time() + 3600 * 24 * 7, '/'); // Cookie valid for 7 days
    }
}

// Example usage:
session_start();
require_once 'login.php';

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $email = $_POST['email'];
    $password = $_POST['password'];

    if (loginUser($email, $password, $conn)) {
        header("Location: dashboard.php");
        exit();
    } else {
        echo "Invalid username or password";
    }
}
?>


function createUser($name, $email, $password, $conn) {
    try {
        // Check if email is already registered
        $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
        $stmt->execute([$email]);
        if ($stmt->rowCount() > 0) {
            return false; // Email already exists
        }

        // Hash the password before storing it
        $hashedPassword = password_hash($password, PASSWORD_DEFAULT);

        // Insert new user into database
        $stmt = $conn->prepare("INSERT INTO users (name, email, password) VALUES (?, ?, ?)");
        $stmt->execute([$name, $email, $hashedPassword]);

        return true; // User created successfully

    } catch (PDOException $e) {
        error_log("Database error while creating user: " . $e->getMessage());
        return false;
    }
}


<?php
session_start();

// Database connection details
$host = 'localhost';
$user = 'root';
$password = '';
$db_name = 'mydatabase';

// Create database connection
$conn = mysqli_connect($host, $user, $password, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to login user
function loginUser() {
    global $conn;

    if (isset($_POST['username']) && isset($_POST['password'])) {
        $username = $_POST['username'];
        $password = $_POST['password'];

        // Prepare SQL statement
        $stmt = $conn->prepare("SELECT id, password FROM users WHERE username = ?");
        $stmt->bind_param("s", $username);
        
        try {
            $stmt->execute();
            $result = $stmt->get_result();
            
            if ($result->num_rows > 0) {
                // Get user data
                $row = $result->fetch_assoc();
                $hashedPassword = $row['password'];
                
                // Verify password
                if (password_verify($password, $hashedPassword)) {
                    // Password is correct, start session
                    $_SESSION['id'] = $row['id'];
                    $_SESSION['username'] = $username;
                    
                    // Redirect to dashboard
                    header("Location: dashboard.php");
                    exit();
                } else {
                    // Password is incorrect
                    echo "Incorrect password";
                }
            } else {
                // User not found
                echo "User not found";
            }
        } catch (Exception $e) {
            // Error handling
            echo "Error: " . $e->getMessage();
        }
    }
}

// Login form HTML
?>
<!DOCTYPE html>
<html>
<head>
    <title>Login Page</title>
</head>
<body>
    <h2>Login</h2>
    
    <?php if (isset($_SESSION['message'])) { ?>
        <p><?php echo $_SESSION['message']; ?></p>
    <?php } ?>

    <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
        Username: <input type="text" name="username" required><br>
        Password: <input type="password" name="password" required><br>
        <input type="submit" value="Login">
    </form>

    <?php
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        loginUser();
    }
    ?>

</body>
</html>


// Hash the password before storing it in the database
$hashedPassword = password_hash($password, PASSWORD_DEFAULT);
$stmt = $conn->prepare("INSERT INTO users (username, password) VALUES (?, ?)");
$stmt->bind_param("ss", $username, $hashedPassword);
$stmt->execute();


<?php
// Connect to the database
$conn = mysqli_connect("localhost", "username", "password", "database_name");
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function user_login($username, $password) {
    global $conn;

    // Sanitize inputs
    $username = htmlspecialchars(stripslashes(trim($username)));
    $password = htmlspecialchars(stripslashes(trim($password)));

    // Check if username exists
    $query = "SELECT * FROM users WHERE username = ?";
    $stmt = mysqli_prepare($conn, $query);
    mysqli_stmt_bind_param($stmt, "s", $username);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);

    if (mysqli_num_rows($result) == 0) {
        return "Username does not exist";
    }

    // Fetch user data
    $row = mysqli_fetch_assoc($result);
    $stored_password = $row['password'];

    // Verify password
    if (md5($password) != $stored_password) {
        return "Incorrect password";
    }

    // Set session variables
    $_SESSION['logged_in'] = true;
    $_SESSION['user_id'] = $row['id'];
    $_SESSION['username'] = $row['username'];

    // Redirect to dashboard
    header('Location: dashboard.php');
    exit();
}

// Check if form is submitted
if (isset($_POST['submit'])) {
    $result = user_login($_POST['username'], $_POST['password']);
    if ($result != true) {
        echo $result;
    }
}
?>


<?php
// Database connection
$host = 'localhost';
$username = 'root';
$password = '';
$db_name = 'mydatabase';

$conn = mysqli_connect($host, $username, $password, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to sanitize input data
function sanitizeInput($data) {
    return htmlspecialchars(trim($data));
}

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {

    // Get username or email and password from form
    $login = isset($_POST['username']) ? $_POST['username'] : '';
    $passwordAttempt = isset($_POST['password']) ? $_POST['password'] : '';

    if (empty($login) || empty($passwordAttempt)) {
        die("Please fill in all required fields.");
    }

    // Use prepared statement to prevent SQL injection
    $stmt = $conn->prepare("SELECT id, username, email, password FROM users WHERE username = ? OR email = ?");
    $stmt->bind_param("ss", $login, $login);
    $stmt->execute();
    
    $result = $stmt->get_result();
    
    if ($result->num_rows == 1) {
        $row = $result->fetch_assoc();
        
        // Check if password is correct
        if (password_verify($passwordAttempt, $row['password'])) {
            // Password verified
            
            // Start session and store user data in session variables
            session_start();
            
            $_SESSION['user_id'] = $row['id'];
            $_SESSION['username'] = $row['username'];
            $_SESSION['email'] = $row['email'];
            
            // Redirect to dashboard or home page
            header("Location: dashboard.php");
            exit();
        } else {
            die("Incorrect password. Please try again.");
        }
    } else {
        die("Username or email not found in our records.");
    }

    // Close statement and connection
    $stmt->close();
    $conn->close();

} else {

    // If form is not submitted, show login form
    echo '
    <form action="' . $_SERVER['PHP_SELF'] . '" method="post">
        <input type="text" name="username" placeholder="Username or Email" required><br>
        <input type="password" name="password" placeholder="Password" required><br>
        <button type="submit">Login</button>
    </form>';
}

?>


<?php
session_start();

// Database connection
$host = "localhost";
$username = "root";
$password = "";
$dbname = "login_system";

$conn = mysqli_connect($host, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to sanitize input
function sanitizeInput($data) {
    return htmlspecialchars(strip_tags(trim($data)));
}

// Handle login form submission
if (isset($_POST['login'])) {

    // Sanitize inputs
    $username = sanitizeInput($_POST['username']);
    $password = sanitizeInput($_POST['password']);

    // Prevent SQL injection and prepare query
    $stmt = mysqli_prepare($conn, "SELECT id, username, password FROM users WHERE username = ?");
    
    if ($stmt) {
        mysqli_stmt_bind_param($stmt, "s", $username);
        mysqli_stmt_execute($stmt);
        mysqli_stmt_store_result($stmt);

        // Get results
        mysqli_stmt_bind_result($stmt, $id, $username, $hashed_password);
        mysqli_stmt_fetch($stmt);

        if (mysqli_num_rows($stmt) == 1) {
            // Verify password
            if (password_verify($password, $hashed_password)) {
                // Create session variables
                $_SESSION['user_id'] = $id;
                $_SESSION['username'] = $username;
                $_SESSION['logged_in'] = true;

                // Redirect to dashboard or home page
                header("Location: dashboard.php");
                exit();
            } else {
                $error = "Invalid username or password.";
            }
        } else {
            $error = "Invalid username or password.";
        }

        mysqli_stmt_close($stmt);
    } else {
        $error = "An error occurred while processing your request.";
    }
}

// Logout function
function logout() {
    session_unset();
    session_destroy();
    header("Location: login.php");
    exit();
}

?>


<?php
// Database configuration
$host = "localhost";
$db_username = "root";
$db_password = "";
$db_name = "mydatabase";

// Connect to the database
$conn = mysqli_connect($host, $db_username, $db_password, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Start session
session_start();

// Check if form was submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Sanitize and trim input values
    $username = htmlspecialchars(trim($_POST['username']));
    $password = htmlspecialchars(trim($_POST['password']));

    // Prepare the SQL statement to prevent SQL injection
    $stmt = mysqli_prepare($conn, "SELECT id, username, password FROM users WHERE username = ?");
    
    if ($stmt === false) {
        die("Prepare failed: " . mysqli_error($conn));
    }

    // Bind parameters
    mysqli_stmt_bind_param($stmt, "s", $username);

    // Execute the statement
    mysqli_stmt_execute($stmt);

    // Store result
    $result = mysqli_stmt_get_result($stmt);

    // Check if a user was found
    if ($row = mysqli_fetch_assoc($result)) {
        // Verify password
        if (password_verify($password, $row['password'])) {
            // Password is correct
            $_SESSION['logged_in'] = true;
            $_SESSION['user_id'] = $row['id'];
            $_SESSION['username'] = $row['username'];

            // Redirect to dashboard or home page
            header("Location: dashboard.php");
            exit();
        } else {
            // Password is incorrect
            $error_message = "Incorrect username or password";
        }
    } else {
        // User not found
        $error_message = "Incorrect username or password";
    }

    mysqli_stmt_close($stmt);
}

// Close database connection
mysqli_close($conn);

?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login Page</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
            background-color: #f0f0f0;
        }
        .container {
            max-width: 500px;
            margin: 0 auto;
            padding: 20px;
            background-color: white;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }
        h1 {
            color: #333;
            text-align: center;
        }
        .form-group {
            margin-bottom: 20px;
        }
        input {
            width: 100%;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-sizing: border-box;
        }
        button {
            width: 100%;
            padding: 10px;
            background-color: #4CAF50;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
        button:hover {
            background-color: #45a049;
        }
        .error-message {
            color: red;
            text-align: center;
            margin-bottom: 10px;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>Login</h1>
        
        <?php
        if (isset($error_message)) {
            echo "<div class='error-message'>$error_message</div>";
        }
        ?>

        <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
            <div class="form-group">
                <input type="text" placeholder="Enter your username" name="username" required>
            </div>

            <div class="form-group">
                <input type="password" placeholder="Enter your password" name="password" required>
            </div>

            <button type="submit">Login</button>
        </form>

        <p style="text-align: center; margin-top: 20px;">
            Don't have an account? <a href="register.php">Register here</a>
        </p>
    </div>
</body>
</html>


<?php
// Database configuration and connection code here...

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Sanitize and trim input values
    $username = htmlspecialchars(trim($_POST['username']));
    $password = htmlspecialchars(trim($_POST['password']));

    // Hash the password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

    // Prepare the SQL statement to prevent SQL injection
    $stmt = mysqli_prepare($conn, "INSERT INTO users (username, password) VALUES (?, ?)");

    if ($stmt === false) {
        die("Prepare failed: " . mysqli_error($conn));
    }

    // Bind parameters
    mysqli_stmt_bind_param($stmt, "ss", $username, $hashed_password);

    // Execute the statement
    if (mysqli_stmt_execute($stmt)) {
        echo "Registration successful! Please login.";
        header("Location: login.php");
        exit();
    } else {
        die("Registration failed: " . mysqli_error($conn));
    }

    mysqli_stmt_close($stmt);
}
?>


<?php
session_start();

// Function to sanitize input data
function sanitize($data) {
    $data = trim($data);
    $data = htmlspecialchars($data);
    return $data;
}

try {
    // Database connection details
    $host = 'localhost';
    $db   = 'your_database_name';
    $user = 'your_username';
    $pass = 'your_password';

    // Create a new PDO instance
    $pdo = new PDO("mysql:host=$host;dbname=$db", $user, $pass);
    $pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        // Sanitize input data
        $username = sanitize($_POST['username']);
        $password = $_POST['password'];

        // Check if username exists in the database
        $stmt = $pdo->prepare("SELECT * FROM users WHERE username = ?");
        $stmt->bindParam(1, $username);
        $stmt->execute();

        $user_data = $stmt->fetch(PDO::FETCH_ASSOC);

        if ($user_data) {
            // Verify password
            if (password_verify($password, $user_data['password'])) {
                // Password is correct
                $_SESSION['logged_in'] = true;
                $_SESSION['username'] = $username;

                // Redirect to dashboard
                header('Location: dashboard.php');
                exit();
            } else {
                // Password is incorrect
                echo "Incorrect password!";
            }
        } else {
            // Username not found
            echo "Username does not exist!";
        }
    }

} catch(PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}
?>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$db_name = 'my_database';

// Connect to the database
$conn = mysqli_connect($host, $username, $password, $db_name);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Session start
session_start();

// If form is submitted
if (isset($_POST['submit'])) {

    // Sanitize input data
    $username = mysqli_real_escape_string($conn, $_POST['username']);
    $password = mysqli_real_escape_string($conn, $_POST['password']);

    // Query the database for user
    $query = "SELECT * FROM users WHERE username='$username'";
    $result = mysqli_query($conn, $query);

    if ($result) {
        $row = mysqli_fetch_assoc($result);
        
        // Check if user exists
        if (mysqli_num_rows($result) == 1) {

            // Verify password
            if ($password === $row['password']) {

                // Start session and store user data
                $_SESSION['username'] = $row['username'];
                $_SESSION['logged_in'] = true;

                // Redirect to dashboard or home page
                header('Location: dashboard.php');
                exit();
            } else {
                echo "<p class='error'>Incorrect password!</p>";
            }
        } else {
            echo "<p class='error'>Username not found!</p>";
        }
    }

}

// Close database connection
mysqli_close($conn);

?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Login Page</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
</head>
<body class="bg-light">
    <div class="container mt-5">
        <div class="row justify-content-center">
            <div class="col-md-6 col-lg-4">
                <div class="card shadow">
                    <div class="card-body">
                        <h3 class="card-title text-center mb-4">Login</h3>
                        <form method="post" action="<?php echo htmlspecialchars($_SERVER['PHP_SELF']); ?>">
                            <div class="mb-3">
                                <label for="username" class="form-label">Username</label>
                                <input type="text" name="username" id="username" class="form-control" required>
                            </div>
                            <div class="mb-4">
                                <label for="password" class="form-label">Password</label>
                                <input type="password" name="password" id="password" class="form-control" required>
                            </div>
                            <button type="submit" name="submit" class="btn btn-primary w-100">Login</button>
                        </form>
                    </div>
                </div>
                <div class="text-center mt-3">
                    <a href="forgot-password.php" class="text-decoration-none">Forgot Password?</a>
                </div>
            </div>
        </div>
    </div>
</body>
</html>


<?php
// Start session
session_start();

// Database connection
$host = "localhost";
$username_db = "root";
$password_db = "";
$db_name = "login_system";

$conn = mysqli_connect($host, $username_db, $password_db, $db_name);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get user inputs
    $username = htmlspecialchars(trim($_POST['username']));
    $password = $_POST['password'];

    // Sanitize inputs and prevent SQL injection
    $username = mysqli_real_escape_string($conn, $username);

    // Query the database for the user
    $sql = "SELECT id, username, password FROM users WHERE username = '$username'";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) == 1) {
        // User exists - get user data
        $row = mysqli_fetch_assoc($result);
        $stored_password = $row['password'];

        // Verify password
        if ($password != md5($stored_password)) { // Note: Using md5 for this example (not recommended for production)
            echo "Incorrect password!";
        } else {
            // Password correct - start session
            $_SESSION['username'] = $username;
            $_SESSION['user_id'] = $row['id'];
            
            // CSRF token generation (optional but recommended)
            if (!isset($_SESSION['csrf_token'])) {
                $_SESSION['csrf_token'] = bin2hex(random_bytes(32));
            }
            
            // Redirect to dashboard or home page
            header("Location: dashboard.php");
            exit();
        }
    } else {
        echo "User does not exist!";
    }
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Login Page</title>
</head>
<body>
    <h2>Login Form</h2>
    <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
        <label for="username">Username:</label><br>
        <input type="text" id="username" name="username"><br>
        <label for="password">Password:</label><br>
        <input type="password" id="password" name="password"><br>
        <input type="submit" value="Login">
    </form>
</body>
</html>


<?php
session_start();

$host = "localhost";
$username_db = "root";
$password_db = "";
$db_name = "login_system";

$conn = new mysqli($host, $username_db, $password_db, $db_name);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = htmlspecialchars(trim($_POST['username']));
    $password = $_POST['password'];

    // Prepare statement
    $stmt = $conn->prepare("SELECT id, username, password FROM users WHERE username = ?");
    $stmt->bind_param("s", $username);
    $stmt->execute();
    
    $result = $stmt->get_result();

    if ($result->num_rows == 1) {
        $row = $result->fetch_assoc();
        $stored_password = $row['password'];

        // Verify password (using md5 for this example)
        if ($password != md5($stored_password)) {
            echo "Incorrect password!";
        } else {
            $_SESSION['username'] = $username;
            $_SESSION['user_id'] = $row['id'];
            
            // Generate CSRF token
            if (!isset($_SESSION['csrf_token'])) {
                $_SESSION['csrf_token'] = bin2hex(random_bytes(32));
            }
            
            header("Location: dashboard.php");
            exit();
        }
    } else {
        echo "User does not exist!";
    }
    
    $stmt->close();
}

$conn->close();

// Rest of the HTML form remains the same
?>


<?php
session_start();

function loginUser($username, $password) {
    // Database connection details
    $host = "localhost";
    $dbUsername = "root";
    $dbPassword = "";
    $dbName = "mydatabase";

    // Connect to database
    $conn = mysqli_connect($host, $dbUsername, $dbPassword, $dbName);
    
    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
    }

    // Sanitize inputs
    $username = mysqli_real_escape_string($conn, $username);
    $password = mysqli_real_escape_string($conn, $password);

    // Check if username exists in the database
    $query = "SELECT * FROM users WHERE username='$username'";
    $result = mysqli_query($conn, $query);

    if (!$result) {
        die("Query failed: " . mysqli_error($conn));
    }

    if (mysqli_num_rows($result) == 0) {
        return array(
            'status' => 'error',
            'message' => 'Username not found'
        );
    }

    // Get the stored password hash
    $row = mysqli_fetch_assoc($result);
    $storedHashedPassword = $row['password'];

    // Compare passwords (assuming you're storing hashed passwords)
    if ($storedHashedPassword == sha1($password)) {
        // Password matches, login successful
        $_SESSION['logged_in'] = true;
        $_SESSION['username'] = $username;

        return array(
            'status' => 'success',
            'message' => 'Login successful'
        );
    } else {
        return array(
            'status' => 'error',
            'message' => 'Incorrect password'
        );
    }

    // Close database connection
    mysqli_close($conn);
}

// Example usage:
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $username = $_POST['username'];
    $password = $_POST['password'];

    $loginResult = loginUser($username, $password);

    if ($loginResult['status'] == 'success') {
        // Redirect to dashboard or home page
        header('Location: dashboard.php');
        exit();
    } else {
        echo $loginResult['message'];
    }
}
?>


<?php
session_start();

function loginUser($username, $password) {
    // Database connection details
    $host = "localhost";
    $dbUsername = "root";
    $dbPassword = "";
    $dbName = "mydatabase";

    // Connect to database
    $conn = mysqli_connect($host, $dbUsername, $dbPassword, $dbName);
    
    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
    }

    // Prepare and bind
    $stmt = $conn->prepare("SELECT * FROM users WHERE username = ?");
    $stmt->bind_param('s', $username);

    // Execute query
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows == 0) {
        return array(
            'status' => 'error',
            'message' => 'Username not found'
        );
    }

    // Get the stored password hash
    $row = $result->fetch_assoc();
    $storedHashedPassword = $row['password'];

    // Compare passwords (assuming you're storing hashed passwords)
    if ($storedHashedPassword == sha1($password)) {
        // Password matches, login successful
        $_SESSION['logged_in'] = true;
        $_SESSION['username'] = $username;

        return array(
            'status' => 'success',
            'message' => 'Login successful'
        );
    } else {
        return array(
            'status' => 'error',
            'message' => 'Incorrect password'
        );
    }

    // Close database connection
    mysqli_close($conn);
}

// Example usage:
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $username = $_POST['username'];
    $password = $_POST['password'];

    $loginResult = loginUser($username, $password);

    if ($loginResult['status'] == 'success') {
        // Redirect to dashboard or home page
        header('Location: dashboard.php');
        exit();
    } else {
        echo $loginResult['message'];
    }
}
?>


<?php
session_start();

// Database configuration
$host = 'localhost';
$db_username = 'root';
$db_password = '';
$db_name = 'your_database';

// Connect to database
$conn = mysqli_connect($host, $db_username, $db_password, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function sanitize_input($data) {
    return htmlspecialchars(trim($data));
}

if (isset($_POST['submit'])) {
    $username = sanitize_input($_POST['username']);
    $password = $_POST['password'];

    // Prepare SQL statement to prevent SQL injection
    $stmt = $conn->prepare("SELECT id, username, password FROM users WHERE username = ?");
    $stmt->bind_param("s", $username);
    
    if ($stmt->execute()) {
        $stmt->store_result();
        
        if ($stmt->num_rows > 0) {
            $stmt->bind_result($id, $username_db, $password_db);
            $stmt->fetch();

            // Verify password
            if (password_verify($password, $password_db)) {
                // Set session variables
                $_SESSION['loggedin'] = true;
                $_SESSION['id'] = $id;
                $_SESSION['username'] = $username_db;

                // Redirect to dashboard or home page
                header("Location: dashboard.php");
                exit();
            } else {
                echo "Invalid password.";
            }
        } else {
            echo "Username not found.";
        }
    }

    $stmt->close();
}

$conn->close();
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Login Page</title>
</head>
<body>
    <h2>Login</h2>
    <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
        <input type="text" name="username" placeholder="Username" required><br>
        <input type="password" name="password" placeholder="Password" required><br>
        <input type="submit" name="submit" value="Login">
    </form>
</body>
</html>

// Logout function
<?php
session_start();

if (isset($_SESSION['loggedin'])) {
    session_unset();
    session_destroy();
}

header("Location: login.php");
exit();
?>


<?php
session_start();
require_once('config.php');

// Check if form was submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Get form data
    $username = htmlspecialchars(trim($_POST['username']));
    $password = $_POST['password'];
    
    try {
        // Connect to database
        $conn = new PDO("mysql:host=" . DB_HOST . ";dbname=" . DB_NAME, DB_USER, DB_PASSWORD);
        
        // Prepare SQL statement
        $stmt = $conn->prepare('SELECT id, username, password, email FROM users WHERE username = :username');
        $stmt->execute(['username' => $username]);
        
        // Fetch user data
        $user = $stmt->fetch(PDO::FETCH_ASSOC);
        
        if (!$user) {
            die("Username does not exist");
        }
        
        // Verify password
        if (!password_verify($password, $user['password'])) {
            die("Incorrect password");
        }
        
        // Start session and store user data
        $_SESSION['id'] = $user['id'];
        $_SESSION['username'] = $user['username'];
        $_SESSION['email'] = $user['email'];
        $_SESSION['token'] = bin2hex(random_bytes(32));
        
        // Check if remember me is enabled
        if (isset($_POST['remember'])) {
            setcookie('username', $username, time() + 60*60*24*7); // Cookie expires after 1 week
            
            // Generate a token and store it in the database or cookie
            $token = bin2hex(random_bytes(32));
            setcookie('token', $token, time() + 60*60*24*7);
        }
        
        // Redirect to dashboard
        header("Location: dashboard.php");
    } catch (PDOException $e) {
        die("Connection failed: " . $e->getMessage());
    }
}
?>


<?php
define('DB_HOST', 'localhost');
define('DB_NAME', 'your_database_name');
define('DB_USER', 'your_username');
define('DB_PASSWORD', 'your_password');
?>


<?php
session_start();

// Database connection details
$host = 'localhost';
$username = 'your_username';
$password = 'your_password';
$db_name = 'your_database';

// Connect to database
$conn = new mysqli($host, $username, $password, $db_name);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get username and password from form
    $username = $_POST['username'];
    $password = $_POST['password'];

    // Prepare statement to prevent SQL injection
    $stmt = $conn->prepare("SELECT id, username, password FROM users WHERE username = ?");
    
    if ($stmt === false) {
        die("Prepare failed: " . $conn->error);
    }

    // Bind parameters
    $stmt->bind_param("s", $username);

    // Execute statement
    $stmt->execute();

    // Get result
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        // Fetch user data
        $user = $result->fetch_assoc();

        // Verify password
        if (password_verify($password, $user['password'])) {
            // Password is correct
            // Start session and store user details
            $_SESSION['logged_in'] = true;
            $_SESSION['user_id'] = $user['id'];
            $_SESSION['username'] = $user['username'];

            // Redirect to dashboard or home page
            header("Location: dashboard.php");
            exit();
        } else {
            // Password is incorrect
            echo "Incorrect password";
        }
    } else {
        // User does not exist
        echo "User does not exist";
    }

    // Close statement and connection
    $stmt->close();
    $conn->close();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login Page</title>
</head>
<body>
    <h2>Login</h2>
    <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
        Username: <input type="text" name="username"><br>
        Password: <input type="password" name="password"><br>
        <input type="submit" value="Login">
    </form>
</body>
</html>


<?php
session_start();

// Database configuration
$host = 'localhost';
$dbname = 'your_database_name';
$user = 'your_username';
$password = 'your_password';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $user, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get email and password from POST request
    $email = isset($_POST['email']) ? $_POST['email'] : '';
    $password = isset($_POST['password']) ? $_POST['password'] : '';

    // Validate input fields are not empty
    if (empty($email) || empty($password)) {
        die("Email and password are required!");
    }

    try {
        // Prepare the SQL statement to select user with given email
        $stmt = $conn->prepare("SELECT * FROM users WHERE email = :email");
        $stmt->bindParam(':email', $email);
        $stmt->execute();

        // Check if user exists
        if ($stmt->rowCount() > 0) {
            $user_data = $stmt->fetch(PDO::FETCH_ASSOC);
            
            // Verify password
            if (password_verify($password, $user_data['password'])) {
                // Password is correct, start session and redirect to dashboard
                $_SESSION['loggedin'] = true;
                $_SESSION['id'] = $user_data['id'];
                $_SESSION['username'] = $user_data['username'];
                
                // Set session cookie parameters
                ini_set('session.cookie_httponly', 1);
                ini_set('session.use_strict_mode', 1);
                ini_set('session.cookie_secure', 1); // Only send cookies over HTTPS
                
                header("Location: dashboard.php");
                die();
            } else {
                // Password is incorrect
                echo "Incorrect password!";
            }
        } else {
            // User does not exist
            echo "User with this email does not exist!";
        }
    } catch(PDOException $e) {
        die("Error occurred while logging in: " . $e->getMessage());
    }
}

// If user is already logged in, redirect to dashboard
if (isset($_SESSION['loggedin']) && $_SESSION['loggedin'] == true) {
    header("Location: dashboard.php");
    die();
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login Page</title>
    <!-- Add your CSS styles here -->
    <style>
        body {
            font-family: Arial, sans-serif;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            margin: 0;
            background-color: #f0f2f5;
        }
        .login-form {
            background-color: white;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
            width: 300px;
        }
        .form-group {
            margin-bottom: 15px;
        }
        input {
            width: 100%;
            padding: 8px;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-sizing: border-box;
        }
        button {
            width: 100%;
            padding: 10px;
            background-color: #4CAF50;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
        button:hover {
            background-color: #45a049;
        }
        .error {
            color: red;
            margin-bottom: 10px;
        }
    </style>
</head>
<body>
    <div class="login-form">
        <h2>Login</h2>
        <?php
        if (isset($_GET['error'])) {
            echo '<div class="error">Invalid email or password!</div>';
        }
        ?>
        <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="POST">
            <div class="form-group">
                <input type="email" name="email" placeholder="Enter your email" required>
            </div>
            <div class="form-group">
                <input type="password" name="password" placeholder="Enter your password" required>
            </div>
            <button type="submit">Login</button>
        </form>
        <p>Don't have an account? <a href="register.php">Register here</a></p>
    </div>
</body>
</html>


<?php  
session_start();
// Database configuration  
require_once("config.php");  

// Check if form is submitted  
if ($_SERVER["REQUEST_METHOD"] == "POST") {  
    // Initialize variables  
    $username = mysqli_real_escape_string($conn, trim($_POST['username']));  
    $password = mysqli_real_escape_string($conn, trim($_POST['password']));  
    
    // Validate input  
    if (empty($username) || empty($password)) {  
        echo "Username or password cannot be empty";  
        exit();  
    }  

    // Query the database for user with matching username  
    $sql = "SELECT * FROM users WHERE username = '$username'";  
    $result = mysqli_query($conn, $sql);  

    if (!$result) {  
        die("Error: " . mysqli_error($conn));  
    }  

    $user = mysqli_fetch_assoc($result);  

    // Check if user exists  
    if (mysqli_num_rows($result) != 1) {  
        echo "Invalid username or password";  
        exit();  
    }  

    // Verify password  
    if ($user['password'] == md5($password)) {  
        // Password is correct, start session and store user data  
        $_SESSION['id'] = $user['id'];  
        $_SESSION['username'] = $user['username'];  
        $_SESSION['logged_in'] = true;  

        // Redirect to dashboard or home page  
        header("Location: dashboard.php");  
        exit();  
    } else {  
        echo "Invalid username or password";  
        exit();  
    }  
}  
?>


<?php  
$servername = "localhost";  
$username_db = "root";  
$password_db = "";  
$dbname = "your_database_name";  

// Create connection  
$conn = mysqli_connect($servername, $username_db, $password_db, $dbname);  

// Check connection  
if (!$conn) {  
    die("Connection failed: " . mysqli_connect_error());  
}  
?>


// In login script after successful authentication  
if (isset($_POST['remember'])) {  
    $hash = md5(uniqid() . $_SERVER['REMOTE_ADDR'] . time());  
    setcookie('remember', $hash, time() + 3600 * 24 * 30); // Cookie valid for 30 days  

    // Update the hash in database  
    $sql = "UPDATE users SET remember_hash='$hash' WHERE id='".$_SESSION['id']."'";  
    mysqli_query($conn, $sql);  
}  


<?php  
session_start();  

unset($_SESSION['id']);  
unset($_SESSION['username']);  
unset($_SESSION['logged_in']);  

// Destroy the session cookie  
setcookie(session_name(), '', time() - 3600);  
session_unset();  
session_destroy();

// Redirect to login page  
header("Location: login.php");  
exit();
?>


<?php  
session_start();  
if (!isset($_SESSION['logged_in']) || $_SESSION['logged_in'] !== true) {  
    header("Location: login.php");  
    exit();  
}  

// Display dashboard content  
echo "Welcome, ".$_SESSION['username']."!";  
?>


<?php
// Database connection
$host = 'localhost';
$dbUsername = 'root';
$dbPassword = '';
$dbName = 'user_login';

$conn = new PDO("mysql:host=$host;dbname=$dbName", $dbUsername, $dbPassword);
$conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

// Session start
session_start();

// Check if user is already logged in
if (isset($_SESSION['user_id'])) {
    header('Location: dashboard.php');
    exit();
}

// Register form submission
if ($_SERVER['REQUEST_METHOD'] == 'POST' && isset($_POST['register'])) {
    $username = $_POST['username'];
    $email = $_POST['email'];
    $password = $_POST['password'];
    
    // Validate input
    if (empty($username) || empty($email) || empty($password)) {
        $error = "All fields are required!";
    } else {
        try {
            // Check if username already exists
            $stmt = $conn->prepare("SELECT id FROM users WHERE username = ?");
            $stmt->execute([$username]);
            $result = $stmt->fetch();
            
            if ($result) {
                $error = "Username already exists!";
            } else {
                // Check if email already exists
                $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
                $stmt->execute([$email]);
                $result = $stmt->fetch();
                
                if ($result) {
                    $error = "Email already exists!";
                } else {
                    // Hash password and insert into database
                    $hashedPassword = password_hash($password, PASSWORD_DEFAULT);
                    
                    $stmt = $conn->prepare("INSERT INTO users (username, email, password) VALUES (?, ?, ?)");
                    $stmt->execute([$username, $email, $hashedPassword]);
                    
                    $success = "Registration successful! Please login.";
                }
            }
        } catch(PDOException $e) {
            $error = "Error: " . $e->getMessage();
        }
    }
}

// Login form submission
if ($_SERVER['REQUEST_METHOD'] == 'POST' && isset($_POST['login'])) {
    $emailOrUsername = $_POST['email_or_username'];
    $password = $_POST['password'];
    
    // Validate input
    if (empty($emailOrUsername) || empty($password)) {
        $error = "All fields are required!";
    } else {
        try {
            // Query user by email or username
            $stmt = $conn->prepare("SELECT * FROM users WHERE email = ? OR username = ?");
            $stmt->execute([$emailOrUsername, $emailOrUsername]);
            $user = $stmt->fetch();
            
            if ($user) {
                // Verify password
                if (password_verify($password, $user['password'])) {
                    // Start session and store user data
                    $_SESSION['user_id'] = $user['id'];
                    $_SESSION['username'] = $user['username'];
                    $_SESSION['email'] = $user['email'];
                    
                    header('Location: dashboard.php');
                    exit();
                } else {
                    $error = "Incorrect password!";
                }
            } else {
                $error = "User not found!";
            }
        } catch(PDOException $e) {
            $error = "Error: " . $e->getMessage();
        }
    }
}

// Check session
if (isset($_SESSION['user_id'])) {
    header('Location: dashboard.php');
    exit();
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login/Registration</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 20px;
        }
        .container {
            max-width: 600px;
            margin: 0 auto;
        }
        form {
            background-color: #f5f5f5;
            padding: 20px;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }
        input {
            width: 100%;
            padding: 10px;
            margin: 10px 0;
            border: 1px solid #ddd;
            box-sizing: border-box;
        }
        button {
            background-color: #4CAF50;
            color: white;
            padding: 10px 20px;
            border: none;
            cursor: pointer;
            width: 100%;
            margin-top: 10px;
        }
        button:hover {
            background-color: #45a049;
        }
        .error {
            color: red;
            margin-bottom: 20px;
        }
        .success {
            color: green;
            margin-bottom: 20px;
        }
    </style>
</head>
<body>
    <div class="container">
        <?php
        if (isset($error)) {
            echo "<div class='error'>$error</div>";
        }
        if (isset($success)) {
            echo "<div class='success'>$success</div>";
        }
        ?>
        
        <!-- Registration Form -->
        <form action="<?php echo htmlspecialchars($_SERVER['PHP_SELF']); ?>" method="POST">
            <h2>Register</h2>
            <input type="text" name="username" placeholder="Username" required>
            <input type="email" name="email" placeholder="Email" required>
            <input type="password" name="password" placeholder="Password" required>
            <button type="submit" name="register">Register</button>
        </form>

        <!-- Login Form -->
        <form action="<?php echo htmlspecialchars($_SERVER['PHP_SELF']); ?>" method="POST">
            <h2>Login</h2>
            <input type="text" name="email_or_username" placeholder="Email or Username" required>
            <input type="password" name="password" placeholder="Password" required>
            <button type="submit" name="login">Login</button>
        </form>
    </div>
</body>
</html>

<?php
// Close database connection
$conn = null;
?>


<?php
// Start the session
session_start();

// Database configuration
$host = 'localhost';
$db_username = 'root';
$db_password = '';
$db_name = 'my_database';

// Connect to the database
$conn = mysqli_connect($host, $db_username, $db_password, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Check if form is submitted
if (isset($_POST['submit'])) {
    // Sanitize input data
    $username = mysqli_real_escape_string($conn, $_POST['username']);
    $password = $_POST['password'];

    // Query to check if username exists
    $sql = "SELECT * FROM users WHERE username='$username' LIMIT 1";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) == 1) {
        // User exists, fetch the user data
        $row = mysqli_fetch_assoc($result);
        
        // Verify password
        if (password_verify($password, $row['password'])) {
            // Password is correct, start session
            $_SESSION['username'] = $username;
            $_SESSION['role'] = $row['role'];
            $_SESSION['start'] = time();
            
            // Redirect to dashboard or home page
            header("Location: dashboard.php");
            exit();
        } else {
            // Password is incorrect
            $error_message = "Incorrect username or password";
        }
    } else {
        // Username does not exist
        $error_message = "Incorrect username or password";
    }
}

// Close database connection
mysqli_close($conn);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login Page</title>
</head>
<body>
    <?php if (isset($error_message)) { ?>
        <p style="color: red;"><?php echo $error_message; ?></p>
    <?php } ?>

    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <label for="username">Username:</label><br>
        <input type="text" id="username" name="username" required><br>

        <label for="password">Password:</label><br>
        <input type="password" id="password" name="password" required><br>

        <input type="submit" name="submit" value="Login">
    </form>
</body>
</html>


if (isset($_POST['remember'])) {
    $cookie_username = $_POST['username'];
    setcookie("username", $cookie_username, time() + 3600); // Cookie expires after 1 hour
}


<?php
session_start();
unset($_SESSION['username']);
unset($_SESSION['role']);
session_unset();
session_destroy();
header("Location: login.php");
exit();
?>


<?php
// Database configuration
$host = "localhost";
$username = "root"; // Change this to your database username
$password = "";     // Change this to your database password
$dbname = "your_database_name";

// Connect to the database
$conn = new mysqli($host, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to login user
function loginUser() {
    global $conn;

    // Check if form is submitted
    if (isset($_POST['login'])) {
        $email = $_POST['email'];
        $password = $_POST['password'];

        // Sanitize input
        $email = htmlspecialchars(strip_tags($email));
        $password = htmlspecialchars(strip_tags($password));

        // Prepare and bind statement to prevent SQL injection
        $stmt = $conn->prepare("SELECT * FROM users WHERE email = ?");
        $stmt->bind_param("s", $email);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($row = $result->fetch_assoc()) {
            // Verify password
            if (password_verify($password, $row['password'])) {
                // Password is correct
                session_start();
                $_SESSION['user_id'] = $row['id'];
                $_SESSION['username'] = $row['username'];
                $_SESSION['email'] = $row['email'];

                if ($row['role'] == 'admin') {
                    header("Location: admin_dashboard.php");
                } else {
                    header("Location: user_dashboard.php");
                }
                exit();
            } else {
                // Password is incorrect
                $message = "Incorrect password!";
                echo "<script type='text/javascript'>alert('$message');</script>";
            }
        } else {
            // Email not found in database
            $message = "Email not found!";
            echo "<script type='text/javascript'>alert('$message');</script>";
        }

        $stmt->close();
    }
}

// Close database connection
$conn->close();

?>


<?php
session_start();

// Database connection parameters
$host = "localhost";
$user = "root";
$password = "";
$db_name = "user_auth";

// Connect to database
$conn = mysqli_connect($host, $user, $password, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {

    // Sanitize input data
    $username = mysqli_real_escape_string($conn, $_POST['username']);
    $password = mysqli_real_escape_string($conn, $_POST['password']);

    // Check for empty fields
    if (empty($username) || empty($password)) {
        header("Location: login_form.php?error=Please fill in all required fields");
        exit();
    }

    // Query to select user with the given username
    $sql = "SELECT * FROM users WHERE username='$username'";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) == 0) {
        header("Location: login_form.php?error=Username does not exist");
        exit();
    }

    // Fetch user data
    $row = mysqli_fetch_assoc($result);
    
    // Check password hash match (assuming passwords are stored as MD5 hashes)
    if (md5($password) != $row['password']) {
        header("Location: login_form.php?error=Invalid username or password");
        exit();
    }

    // Password matched
    $_SESSION["username"] = $username;
    $_SESSION["user_id"] = $row['id'];
    
    // Set last activity time
    $_SESSION['last_activity'] = time();

    // Redirect to dashboard
    header("Location: dashboard.php");
    exit();
} else {
    header("Location: login_form.php?error=Invalid request method");
}

mysqli_close($conn);
?>


<?php
session_start();

// Check if user is not logged in
if (!isset($_SESSION['username'])) {
    header("Location: login_form.php");
}
?>


<?php
session_start();

// Destroy all sessions
$_SESSION = array();
session_destroy();

// Redirect to login page
header("Location: login_form.php");
exit();
?>


<?php
// Include database connection file
include_once("db_connection.php");

// Initialize variables
$email = $password = "";
$errors = array();

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Sanitize input data
    $email = mysqli_real_escape_string($conn, $_POST['email']);
    $password = mysqli_real_escape_string($conn, $_POST['password']);

    // Validate inputs
    if (empty($email)) {
        $errors[] = "Email is required";
    }
    if (empty($password)) {
        $errors[] = "Password is required";
    }

    if (count($errors) == 0) {
        // Query to check user existence
        $sql = "SELECT * FROM users WHERE email='$email'";
        $result = mysqli_query($conn, $sql);

        if (mysqli_num_rows($result) > 0) {
            $user_data = mysqli_fetch_assoc($result);
            
            // Verify password
            if (password_verify($password, $user_data['password'])) {
                // Password is correct
                session_start();
                $_SESSION['user_id'] = $user_data['id'];
                $_SESSION['username'] = $user_data['username'];
                $_SESSION['email'] = $user_data['email'];
                
                // Redirect to dashboard or home page
                header("Location: dashboard.php");
                exit();
            } else {
                $errors[] = "Incorrect password";
            }
        } else {
            $errors[] = "Email not found in our records";
        }
    }
}

// Show error messages if any
if (!empty($errors)) {
    foreach ($errors as $error) {
        echo "<div class='alert alert-danger'>$error</div>";
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login Page</title>
    <!-- Include CSS styles -->
    <style>
        body { font-family: Arial, sans-serif; }
        .container { width: 400px; margin: 0 auto; padding: 20px; }
        input { width: 100%; padding: 8px; margin: 5px 0; }
        button { background-color: #4CAF50; color: white; padding: 10px 20px; border: none; cursor: pointer; width: 100%; }
    </style>
</head>
<body>
    <div class="container">
        <h2>Login</h2>
        <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
            <input type="email" name="email" placeholder="Enter your email" required><br>
            <input type="password" name="password" placeholder="Enter your password" required><br>
            <button type="submit">Login</button>
        </form>
        <p>Don't have an account? <a href="register.php">Sign up here</a>.</p>
    </div>
</body>
</html>


<?php
// Database configuration
$host = 'localhost';
$username_db = 'root'; // Change this to your database username
$password_db = '';     // Change this to your database password
$db_name = 'user_login'; // Change this to your database name

// Create connection
$conn = mysqli_connect($host, $username_db, $password_db, $db_name);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function login($email, $password) {
    global $conn;

    // Sanitize inputs to prevent SQL injection
    $email = mysqli_real_escape_string($conn, $email);
    $password = mysqli_real_escape_string($conn, $password);

    // Query the database for the user with the given email
    $query = "SELECT * FROM users WHERE email='$email'";
    $result = mysqli_query($conn, $query);

    if ($result) {
        $user_data = mysqli_fetch_assoc($result);
        if (mysqli_num_rows($result) == 1) {
            // Verify password
            if (password_verify($password, $user_data['password'])) {
                // Password is correct; start a session or create cookies
                session_start();
                $_SESSION['id'] = $user_data['id'];
                $_SESSION['username'] = $user_data['username'];
                $_SESSION['email'] = $email;
                $_SESSION['logged_in'] = true;

                return true;
            } else {
                // Password is incorrect
                return false;
            }
        } else {
            // No user found with the given email
            return false;
        }
    } else {
        // Query failed
        die("Query error: " . mysqli_error($conn));
    }
}

// Example usage:
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = $_POST['email'];
    $password = $_POST['password'];

    if (login($email, $password)) {
        // Redirect to dashboard or home page
        header("Location: dashboard.php");
        exit();
    } else {
        // Display error message
        echo "Invalid email or password!";
    }
}
?>


<?php
// Database connection
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}

// Function to login user
function loginUser($usernameOrEmail, $password, $conn) {
    // Sanitize input
    $usernameOrEmail = filter_var($usernameOrEmail, FILTER_SANITIZE_STRING);
    $password = filter_var($password, FILTER_SANITIZE_STRING);

    try {
        // Prepare SQL statement
        $stmt = $conn->prepare("SELECT * FROM users WHERE username = :usernameOrEmail OR email = :usernameOrEmail");
        $stmt->bindParam(':usernameOrEmail', $usernameOrEmail);
        $stmt->execute();

        // Check if user exists
        $user = $stmt->fetch(PDO::FETCH_ASSOC);

        if ($user) {
            // Verify password
            if (password_verify($password, $user['password'])) {
                // Password is correct
                session_start();
                $_SESSION['id'] = $user['id'];
                $_SESSION['username'] = $user['username'];
                $_SESSION['email'] = $user['email'];
                $_SESSION['login_time'] = time();

                return true;
            } else {
                // Incorrect password
                return false;
            }
        } else {
            // User not found
            return false;
        }
    } catch (PDOException $e) {
        echo "Error: " . $e->getMessage();
        return false;
    }
}

// Example usage:
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $usernameOrEmail = $_POST['username'];
    $password = $_POST['password'];

    if (loginUser($usernameOrEmail, $password, $conn)) {
        header("Location: dashboard.php");
        exit();
    } else {
        echo "Invalid username/email or password!";
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login Page</title>
</head>
<body>
    <h2>Login</h2>
    <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
        Username/Email: <input type="text" name="username">
        Password: <input type="password" name="password">
        <input type="submit" value="Login">
    </form>
</body>
</html>


function registerUser($username, $email, $password, $conn) {
    // Sanitize inputs
    $username = filter_var($username, FILTER_SANITIZE_STRING);
    $email = filter_var($email, FILTER_SANITIZE_EMAIL);
    $password = filter_var($password, FILTER_SANITIZE_STRING);

    try {
        // Check if username or email already exists
        $stmt = $conn->prepare("SELECT * FROM users WHERE username = :username OR email = :email");
        $stmt->bindParam(':username', $username);
        $stmt->bindParam(':email', $email);
        $stmt->execute();

        if ($stmt->rowCount() > 0) {
            return false; // Username or email already exists
        }

        // Hash password
        $hashedPassword = password_hash($password, PASSWORD_DEFAULT);

        // Insert new user
        $stmt = $conn->prepare("INSERT INTO users (username, email, password) VALUES (:username, :email, :password)");
        $stmt->bindParam(':username', $username);
        $stmt->bindParam(':email', $email);
        $stmt->bindParam(':password', $hashedPassword);

        if ($stmt->execute()) {
            return true; // Registration successful
        } else {
            return false; // Error occurred
        }
    } catch (PDOException $e) {
        echo "Error: " . $e->getMessage();
        return false;
    }
}


<?php
session_start();

function db_connect() {
    $host = 'localhost';
    $db_user = 'root';
    $db_pass = '';
    $database = 'test_db';

    try {
        $conn = new mysqli($host, $db_user, $db_pass, $database);
        if ($conn->connect_error) {
            throw new Exception("Connection failed: " . $conn->connect_error);
        }
        return $conn;
    } catch (Exception $e) {
        die('Could not connect to database: ' . $e->getMessage());
    }
}

function login_user($username, $password) {
    // Check if username and password are provided
    if (empty($username) || empty($password)) {
        return false;
    }

    $conn = db_connect();

    try {
        $stmt = $conn->prepare("SELECT id, username, password FROM users WHERE username = ?");
        $stmt->bind_param("s", $username);

        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows == 0) {
            return false; // No user found
        }

        $user = $result->fetch_assoc();
        $stored_hash = $user['password'];

        if (password_verify($password, $stored_hash)) {
            // Password verified, log in the user
            $_SESSION['username'] = $username;
            $_SESSION['id'] = $user['id'];
            return true;
        } else {
            return false; // Invalid password
        }
    } catch (Exception $e) {
        error_log("Login Error: " . $e->getMessage());
        return false;
    } finally {
        $conn->close();
    }
}
?>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

try {
    // Create database connection
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    die('Connection Failed: ' . $e->getMessage());
}

// Check if form is submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Sanitize user input
    $username = htmlspecialchars(trim($_POST['username']));
    $password = $_POST['password'];

    // Generate CSRF token
    $token = md5(uniqid(rand(), true));

    // Check if CSRF token is valid (you should implement proper CSRF protection)
    if (!isset($_SESSION['csrf_token']) || $_POST['csrf_token'] !== $_SESSION['csrf_token']) {
        die('Invalid CSRF token');
    }

    // Prepare and execute query
    $stmt = $conn->prepare("SELECT * FROM users WHERE username = ?");
    $stmt->execute([$username]);
    $user = $stmt->fetch(PDO::FETCH_ASSOC);

    if (!$user) {
        die('Username not found');
    }

    // Verify password
    if (!password_verify($password, $user['password'])) {
        die('Incorrect password');
    }

    // Start session
    session_start();
    $_SESSION['user_id'] = $user['id'];
    $_SESSION['username'] = $user['username'];
    $_SESSION['csrf_token'] = $token;

    // Regenerate session ID to prevent session fixation
    session_regenerate();

    // Redirect to dashboard or home page
    header('Location: dashboard.php');
    exit();
} else {
    // Generate CSRF token for the form
    session_start();
    if (!isset($_SESSION['csrf_token'])) {
        $_SESSION['csrf_token'] = md5(uniqid(rand(), true));
    }
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login Page</title>
</head>
<body>
    <?php if ($_SERVER['REQUEST_METHOD'] == 'GET') { ?>
        <form action="<?=$_SERVER['PHP_SELF']?>" method="post">
            <input type="hidden" name="csrf_token" value="<?=$_SESSION['csrf_token']?>">
            <label>Username:</label><br>
            <input type="text" name="username"><br>
            <label>Password:</label><br>
            <input type="password" name="password"><br><br>
            <input type="submit" value="Login">
        </form>
    <?php } else { ?>
        <!-- Show login status -->
        <?php if (isset($_SESSION['username'])) { ?>
            <h2>Welcome, <?=$_SESSION['username']?></h2>
            <a href="logout.php">Logout</a>
        <?php } else { ?>
            <h2>Login failed!</h2>
        <?php } ?>
    <?php } ?>

    <!-- Additional security headers -->
    <meta http-equiv="Content-Security-Policy" content="default-src 'self'; script-src 'self' https:; style-src 'self' https:;">
</body>
</html>


<?php
// Database connection
$host = 'localhost';
$user = 'root';
$password = '';
$dbname = 'mydatabase';

// Create connection
$conn = new mysqli($host, $user, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Start the session
session_start();

// Check if form is submitted
if (isset($_POST['submit'])) {

    // Get username and password from POST data
    $username = mysqli_real_escape_string($conn, $_POST['username']);
    $password = mysqli_real_escape_string($conn, $_POST['password']);

    // Prepare the SQL query to prevent SQL injection
    $stmt = $conn->prepare("SELECT id, username, password FROM users WHERE username = ?");
    $stmt->bind_param("s", $username);
    $stmt->execute();

    // Get the result
    $result = $stmt->get_result();
    
    if ($result->num_rows == 1) {
        $user_data = $result->fetch_assoc();
        
        // Verify password
        if (password_verify($password, $user_data['password'])) {
            // Password is correct
            
            // Start session and store user data
            $_SESSION['id'] = $user_data['id'];
            $_SESSION['username'] = $user_data['username'];
            
            // Redirect to dashboard or home page
            header("Location: dashboard.php");
            exit();
        } else {
            // Password is incorrect
            echo "Incorrect password!";
        }
    } else {
        // No user found with this username
        echo "No user found with that username!";
    }

    $stmt->close();
}

// Close the database connection
$conn->close();
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login Page</title>
</head>
<body>
    <h2>Login Form</h2>
    
    <?php
        // Display error message if there is any
        if (isset($error)) {
            echo "<p style='color: red;'>$error</p>";
        }
    ?>
    
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <label for="username">Username:</label>
        <input type="text" name="username" required><br><br>
        
        <label for="password">Password:</label>
        <input type="password" name="password" required><br><br>
        
        <button type="submit" name="submit">Login</button>
    </form>

    <p>Don't have an account? <a href="register.php">Register here</a></p>
</body>
</html>


<?php
// Database configuration
$host = 'localhost';
$db_username = 'root';
$db_password = '';
$db_name = 'user_login';

// Connect to database
$conn = mysqli_connect($host, $db_username, $db_password, $db_name);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Login function
function login($username, $password, $conn) {
    // Sanitize inputs
    $username = mysqli_real_escape_string($conn, $username);
    $password = mysqli_real_escape_string($conn, $password);

    // Query the database for the user
    $sql = "SELECT * FROM users WHERE username='$username' LIMIT 1";
    $result = mysqli_query($conn, $sql);

    if ($result) {
        $user_data = mysqli_fetch_assoc($result);
        
        if (password_verify($password, $user_data['password'])) {
            // Create session variables
            $_SESSION['id'] = $user_data['id'];
            $_SESSION['username'] = $user_data['username'];
            $_SESSION['login_time'] = time();
            
            return true;
        }
    }

    return false;
}

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get username and password from form
    $username = $_POST['username'];
    $password = $_POST['password'];

    // Attempt to login
    if (login($username, $password, $conn)) {
        // Redirect to dashboard or home page
        header("Location: dashboard.php");
        exit();
    } else {
        // Display error message
        echo "Invalid username or password.";
    }
}

// Close database connection
mysqli_close($conn);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login Page</title>
</head>
<body>
    <h2>Login</h2>
    <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
        Username: <input type="text" name="username"><br>
        Password: <input type="password" name="password"><br>
        <input type="submit" value="Login">
    </form>
</body>
</html>


$hashed_password = password_hash($plain_password, PASSWORD_DEFAULT);
$sql = "INSERT INTO users (username, password) VALUES ('$username', '$hashed_password')";


<?php
// Configuration for database connection
define('DB_HOST', 'localhost');
define('DB_USER', 'your_username');
define('DB_PASS', 'your_password');
define('DB_NAME', 'your_database');

function loginUser() {
    // Check if form data is submitted
    if (!isset($_POST['username']) || !isset($_POST['password'])) {
        header("Location: login.php?error=Please enter both username and password.");
        exit();
    }

    $username = $_POST['username'];
    $password = $_POST['password'];

    // Connect to the database
    $conn = mysqli_connect(DB_HOST, DB_USER, DB_PASS, DB_NAME);

    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
    }

    try {
        // Escape input data to prevent SQL injection
        $username = mysqli_real_escape_string($conn, $username);
        
        // Query the database for the user
        $sql = "SELECT id, username, password FROM users WHERE username = '$username'";
        $result = mysqli_query($conn, $sql);

        if (mysqli_num_rows($result) != 1) {
            throw new Exception("Username does not exist.");
        }

        // Fetch user data
        $user = mysqli_fetch_assoc($result);
        
        // Verify password
        if (!password_verify($password, $user['password'])) {
            throw new Exception("Incorrect password.");
        }

        // Start session and store user info
        session_start();
        $_SESSION['id'] = $user['id'];
        $_SESSION['username'] = $user['username'];

        // Redirect to dashboard
        header("Location: dashboard.php");
        exit();

    } catch (Exception $e) {
        // Display error message
        $error = $e->getMessage();
        header("Location: login.php?error=" . urlencode($error));
        exit();
    }

    // Close database connection
    mysqli_close($conn);
}

// Call the function if this file is executed
if (isset($_POST['login'])) {
    loginUser();
}
?>


<?php
session_start();

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Sanitize and validate input
    $username = htmlspecialchars(trim($_POST['username']));
    $password = $_POST['password'];

    // Database connection parameters
    $host = 'localhost';
    $db_username = 'root';  // Change to your DB username
    $db_password = '';      // Change to your DB password
    $database = 'login_system';

    try {
        $conn = new PDO("mysql:host=$host;dbname=$database", $db_username, $db_password);
        $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

        // Prepare statement to select user
        $stmt = $conn->prepare("SELECT * FROM users WHERE username = ?");
        $stmt->execute([$username]);
        $user = $stmt->fetch(PDO::FETCH_ASSOC);

        if ($user) {
            // Verify password
            if (password_verify($password, $user['password'])) {
                // Start session and set user data
                $_SESSION['loggedin'] = true;
                $_SESSION['username'] = $user['username'];
                $_SESSION['id'] = $user['id'];

                // Redirect to dashboard
                header("Location: dashboard.php");
                exit();
            } else {
                $error = "Incorrect password";
            }
        } else {
            $error = "Username not found";
        }

    } catch(PDOException $e) {
        die("Connection failed: " . $e->getMessage());
    }
}

// If no error, redirect or show form again
if (!isset($error)) {
    header("Location: login_form.html");
} else {
    // Include the form with error message
    include('login_form.html');
}
?>


<?php
session_start();

// Database configuration
$host = 'localhost';
$db_username = 'root';
$db_password = '';
$db_name = 'login_system';

// Connect to the database
$conn = new mysqli($host, $db_username, $db_password, $db_name);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// If form is submitted
if (isset($_POST['submit'])) {
    // Get username and password from form
    $username = htmlspecialchars(trim($_POST['username']));
    $password = htmlspecialchars(trim($_POST['password']));

    // Validate inputs
    if ($username == '' || $password == '') {
        $error = "Username and password are required!";
    } else {
        // Escape special characters to prevent SQL injection
        $username = $conn->real_escape_string($username);
        $password = $conn->real_escape_string($password);

        // Query the database for user with given username
        $sql = "SELECT * FROM users WHERE username='$username'";
        $result = $conn->query($sql);

        if ($result->num_rows == 1) {
            $user_data = $result->fetch_assoc();

            // Verify password using PHP's built-in password_verify function
            if (password_verify($password, $user_data['password'])) {
                // Start session and store user data
                $_SESSION['username'] = $user_data['username'];
                $_SESSION['logged_in'] = true;

                // Redirect to welcome page
                header("Location: welcome.php");
                exit();
            } else {
                $error = "Invalid username or password!";
            }
        } else {
            $error = "Invalid username or password!";
        }
    }
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login Page</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f4f4f4;
        }
        .container {
            max-width: 500px;
            margin: 0 auto;
            padding: 20px;
            background-color: white;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }
        h1 {
            color: #333;
            text-align: center;
        }
        .form-group {
            margin-bottom: 20px;
        }
        input {
            width: 100%;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-sizing: border-box;
        }
        button {
            background-color: #4CAF50;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
        button:hover {
            background-color: #45a049;
        }
        .error {
            color: red;
            margin-top: -10px;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>Login</h1>
        <?php if (isset($error)) { ?>
            <p class="error"><?php echo $error ?></p>
        <?php } ?>
        <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]) ?>" method="POST">
            <div class="form-group">
                <input type="text" name="username" placeholder="Username" required>
            </div>
            <div class="form-group">
                <input type="password" name="password" placeholder="Password" required>
            </div>
            <button type="submit" name="submit">Login</button>
        </form>
    </div>
</body>
</html>


<?php
// Database configuration
$host = 'localhost';
$username_db = 'root';
$password_db = '';
$db_name = 'login_system';

// Connect to database
$conn = mysqli_connect($host, $username_db, $password_db, $db_name);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Handle form submission
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get user input
    $username = htmlspecialchars($_POST['username']);
    $password = htmlspecialchars($_POST['password']);

    // Sanitize input (you might want to add more sanitization)
    $username = mysqli_real_escape_string($conn, $username);
    $password = mysqli_real_escape_string($conn, $password);

    // Check if username exists
    $check_username_query = "SELECT id, password FROM users WHERE username='$username'";
    $result = mysqli_query($conn, $check_username_query);

    if (mysqli_num_rows($result) == 0) {
        die("Username not found. Please try again.");
    }

    // Get stored hash
    $row = mysqli_fetch_assoc($result);
    $stored_password_hash = $row['password'];

    // Verify password
    if (password_verify($password, $stored_password_hash)) {
        // Password is correct
        session_start();
        $_SESSION['user_id'] = $row['id'];
        $_SESSION['username'] = $username;
        $_SESSION['login_time'] = time();

        header("Location: welcome.php");
        exit();
    } else {
        die("Incorrect password. Please try again.");
    }
}

// Close database connection
mysqli_close($conn);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login Page</title>
</head>
<body>
    <h2>Login Form</h2>
    <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
        Username: <input type="text" name="username"><br>
        Password: <input type="password" name="password"><br>
        <input type="submit" value="Login">
    </form>
</body>
</html>


$plaintext_password = 'your_password';
$hashed_password = password_hash($plaintext_password, PASSWORD_BCRYPT);
// Store $hashed_password in your database


<?php
session_start();

// Database configuration
$host = 'localhost';
$dbUsername = 'root';
$dbPassword = '';
$dbName = 'user_login';

try {
    // Connect to the database
    $conn = new mysqli($host, $dbUsername, $dbPassword, $dbName);
    
    if ($conn->connect_error) {
        throw new Exception("Connection failed: " . $conn->connect_error);
    }

    // Check if form is submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        // Sanitize input
        $username = $conn->real_escape_string($_POST['username']);
        $password = $_POST['password'];

        // Prepare SQL statement to select user with provided username
        $stmt = $conn->prepare("SELECT id, username, password FROM users WHERE username = ?");
        $stmt->bind_param("s", $username);
        $stmt->execute();
        
        $result = $stmt->get_result();

        if ($result->num_rows == 1) {
            // User exists, verify password
            $user = $result->fetch_assoc();
            
            if (password_verify($password, $user['password'])) {
                // Password is correct, start session
                $_SESSION['user_id'] = $user['id'];
                $_SESSION['username'] = $user['username'];

                // Redirect to dashboard or home page
                header("Location: dashboard.php");
                exit();
            } else {
                // Incorrect password
                $error = "Incorrect username or password";
            }
        } else {
            // User doesn't exist
            $error = "Incorrect username or password";
        }

        // Close statement and connection
        $stmt->close();
    }

} catch (Exception $e) {
    // Handle errors
    $error = "Error logging in: " . $e->getMessage();
}

// Close database connection
$conn->close();

?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login Page</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            margin: 0;
            background-color: #f0f0f0;
        }

        .login-container {
            background-color: white;
            padding: 20px;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
            width: 300px;
        }

        .form-group {
            margin-bottom: 15px;
        }

        input {
            width: 100%;
            padding: 8px;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-sizing: border-box;
        }

        button {
            width: 100%;
            background-color: #4CAF50;
            color: white;
            padding: 10px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }

        button:hover {
            background-color: #45a049;
        }

        .error {
            color: red;
            margin-bottom: 10px;
        }
    </style>
</head>
<body>
    <div class="login-container">
        <?php
        if (isset($error)) {
            echo "<div class='error'>$error</div>";
        }
        ?>
        <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="POST">
            <div class="form-group">
                <input type="text" name="username" placeholder="Enter username" required>
            </div>
            <div class="form-group">
                <input type="password" name="password" placeholder="Enter password" required>
            </div>
            <button type="submit">Login</button>
        </form>
    </div>
</body>
</html>


<?php
session_start();

// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$database = 'mydatabase';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $database);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function user_login() {
    global $conn;

    // Initialize error array
    $errors = array();

    if (isset($_POST['login'])) {
        // Get form data
        $email = $_POST['email'];
        $password = $_POST['password'];

        // Sanitize input
        $email = mysqli_real_escape_string($conn, trim($email));
        $password = mysqli_real_escape_string($conn, trim($password));

        // Check if email and password are not empty
        if (empty($email)) {
            $errors[] = "Email is required";
        }
        if (empty($password)) {
            $errors[] = "Password is required";
        }

        // If no errors, proceed to login
        if (count($errors) == 0) {
            // Query the database for user with this email
            $query = "SELECT * FROM users WHERE email = ?";
            $stmt = mysqli_prepare($conn, $query);
            mysqli_stmt_bind_param($stmt, "s", $email);
            mysqli_stmt_execute($stmt);
            $result = mysqli_stmt_get_result($stmt);

            if (mysqli_num_rows($result) > 0) {
                // User exists, get user data
                $user = mysqli_fetch_assoc($result);
                
                // Verify password
                if (password_verify($password, $user['password'])) {
                    // Password is correct, start session
                    $_SESSION['id'] = $user['id'];
                    $_SESSION['username'] = $user['username'];
                    $_SESSION['email'] = $user['email'];
                    $_SESSION['logged_in'] = true;

                    // Redirect to dashboard
                    header("Location: dashboard.php");
                    exit();
                } else {
                    // Incorrect password
                    $errors[] = "Incorrect password";
                }
            } else {
                // User does not exist
                $errors[] = "Email does not exist";
            }
        }
    }

    return $errors;
}

// Call the login function
$errors = user_login();

?>


<?php
// Database connection details
$host = 'localhost';
$username_db = 'root';
$password_db = '';
$database = 'user_login';

// Connect to database
$conn = mysqli_connect($host, $username_db, $password_db, $database);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

session_start();

if (isset($_POST['submit'])) {
    $username = $_POST['username'];
    $password = $_POST['password'];

    // Sanitize the input
    $username = mysqli_real_escape_string($conn, $username);

    // Query to check if user exists
    $query = "SELECT * FROM users WHERE username='$username'";
    $result = mysqli_query($conn, $query);

    if (mysqli_num_rows($result) == 1) {
        $row = mysqli_fetch_assoc($result);
        
        // Verify password
        if ($password == $row['password']) { 
            // Password verification is correct
            
            $_SESSION['logged_in'] = true;
            $_SESSION['username'] = $username;

            // Redirect to dashboard
            header('Location: dashboard.php');
            exit();
        } else {
            $message = "Incorrect password";
        }
    } else {
        $message = "User does not exist";
    }
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login Page</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
            background-color: #f2f2f2;
        }

        .container {
            max-width: 500px;
            margin: 0 auto;
            padding: 20px;
        }

        .form-group {
            margin-bottom: 15px;
        }

        input[type="text"],
        input[type="password"] {
            width: 100%;
            padding: 8px;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-sizing: border-box;
        }

        button {
            background-color: #4CAF50;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            width: 100%;
        }

        button:hover {
            background-color: #45a049;
        }

        .message {
            color: red;
            margin-bottom: 10px;
        }
    </style>
</head>
<body>
    <div class="container">
        <?php if (isset($message)) { ?>
            <p class="message"><?php echo $message; ?></p>
        <?php } ?>

        <h2>Login Page</h2>
        <form method="POST" action="<?php echo $_SERVER['PHP_SELF']; ?>">
            <div class="form-group">
                <label>Username:</label><br>
                <input type="text" name="username" required>
            </div>

            <div class="form-group">
                <label>Password:</label><br>
                <input type="password" name="password" required>
            </div>

            <button type="submit" name="submit">Login</button>
        </form>

        <p>Don't have an account? <a href="registration.php">Register here</a></p>
    </div>
</body>
</html>


<?php
session_start();
require_once 'config.php';

if (isset($_POST['submit'])) {
    $username = trim($_POST['username']);
    $password = $_POST['password'];

    // Check if username exists
    $query = "SELECT * FROM users WHERE username=?";
    $stmt = $conn->prepare($query);
    $stmt->bind_param('s', $username);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows == 1) {
        $user = $result->fetch_assoc();
        
        // Verify password
        if (password_verify($password, $user['password'])) {
            $_SESSION['logged_in'] = true;
            $_SESSION['username'] = $user['username'];
            $_SESSION['user_id'] = $user['id'];

            header('Location: dashboard.php');
            exit();
        } else {
            $message = "Incorrect password";
        }
    } else {
        $message = "User does not exist";
    }

    $stmt->close();
}
?>


<?php
// Include necessary files or configurations
include('config.php');

function user_login() {
    // Check if form was submitted
    if (isset($_POST['username']) && isset($_POST['password'])) {
        $username = $_POST['username'];
        $password = $_POST['password'];

        // Sanitize input to prevent SQL injection and XSS attacks
        $username = htmlspecialchars(trim($username));
        $password = htmlspecialchars(trim($password));

        // Connect to database
        $conn = mysqli_connect(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);

        // Check connection
        if (!$conn) {
            die("Connection failed: " . mysqli_connect_error());
        }

        // Prepare and bind statement to prevent SQL injection
        $stmt = mysqli_prepare($conn, "SELECT id, username, password FROM users WHERE username = ?");
        mysqli_stmt_bind_param($stmt, "s", $username);
        mysqli_stmt_execute($stmt);
        
        // Store result
        mysqli_stmt_store_result($stmt);
        
        // Check if user exists
        if (mysqli_stmt_num_rows($stmt) > 0) {
            mysqli_stmt_bind_result($stmt, $id, $username, $hashed_password);
            mysqli_stmt_fetch($stmt);

            // Verify password
            if (password_verify($password, $hashed_password)) {
                // Password is correct
                session_start();
                
                // Set session variables
                $_SESSION['loggedin'] = true;
                $_SESSION['username'] = $username;
                $_SESSION['id'] = $id;

                // Regenerate session ID to prevent session fixation attacks
                session_regenerate(true);

                // Optional: Set a remember me cookie
                if (isset($_POST['remember'])) {
                    setcookie('remember_me', $username . ':' . hash_hmac('sha256', $username, SALT), time() + 3600);
                }

                // Redirect to dashboard or home page
                header("Location: dashboard.php");
                exit();
            } else {
                // Password is incorrect
                echo "Incorrect password!";
            }
        } else {
            // User does not exist
            echo "Username does not exist!";
        }

        mysqli_stmt_close($stmt);
        mysqli_close($conn);
    }
}

// Display login form
?>
<!DOCTYPE html>
<html>
<head>
    <title>Login Page</title>
    <style>
        .login-form {
            width: 300px;
            margin: 50px auto;
            padding: 20px;
            border: 1px solid #ccc;
            border-radius: 5px;
        }
    </style>
</head>
<body>
    <div class="login-form">
        <?php if (isset($_GET['error'])) { ?>
            <p style="color: red;">Invalid username or password!</p>
        <?php } ?>
        <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="POST">
            <input type="text" name="username" placeholder="Username" required><br><br>
            <input type="password" name="password" placeholder="Password" required><br><br>
            <label><input type="checkbox" name="remember"> Remember me</label><br><br>
            <input type="submit" value="Login">
        </form>
    </div>
</body>
</html>

<?php
// Call the login function when form is submitted
if (isset($_POST['username']) && isset($_POST['password'])) {
    user_login();
}
?>


<?php
session_start();

function user_login($username, $password) {
    // Database configuration
    $host = 'localhost';
    $dbUsername = 'root';
    $dbPassword = '';
    $dbName = 'test';

    try {
        // Check if username and password are provided
        if (empty($username) || empty($password)) {
            return array('status' => 'error', 'message' => 'Please fill in all fields');
        }

        // Create database connection
        $conn = new mysqli($host, $dbUsername, $dbPassword, $dbName);

        // Escape the username to prevent SQL injection
        $username = $conn->real_escape_string($username);

        // Query the database for the user
        $query = "SELECT * FROM users WHERE username = '$username'";
        $result = $conn->query($query);

        if ($result->num_rows == 0) {
            return array('status' => 'error', 'message' => 'Username or password is incorrect');
        }

        // Fetch the user data
        $user = $result->fetch_assoc();

        // Verify the password
        if (!password_verify($password, $user['password'])) {
            return array('status' => 'error', 'message' => 'Username or password is incorrect');
        }

        // Start session and store user details
        $_SESSION['user_id'] = $user['id'];
        $_SESSION['username'] = $user['username'];
        $_SESSION['role'] = $user['role']; // Assuming a role column exists

        return array('status' => 'success', 'message' => 'Successfully logged in');

    } catch (Exception $e) {
        error_log("Login error: " . $e->getMessage());
        return array('status' => 'error', 'message' => 'An error occurred during login');
    }
}
?>


<?php
session_start();
include 'login_function.php';

if (isset($_POST['username'], $_POST['password'])) {
    $response = user_login($_POST['username'], $_POST['password']);
    if ($response['status'] == 'success') {
        header('Location: dashboard.php');
        exit;
    } else {
        echo $response['message'];
    }
}
?>


<?php
session_start();

// Database configuration
require_once 'config.php';

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $username = htmlspecialchars(trim($_POST['username']));
    $password = htmlspecialchars(trim($_POST['password']));

    // Check if username exists in the database
    $stmt = $conn->prepare("SELECT * FROM users WHERE username = ?");
    $stmt->bind_param("s", $username);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        $user = $result->fetch_assoc();
        // Verify password
        if (password_verify($password, $user['password'])) {
            // Password is correct
            $_SESSION['loggedin'] = true;
            $_SESSION['username'] = $username;
            
            // Redirect to dashboard
            header("Location: dashboard.php");
            exit();
        } else {
            // Incorrect password
            $error = "Incorrect username or password";
        }
    } else {
        // Username doesn't exist
        $error = "Incorrect username or password";
    }
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login Page</title>
    <!-- Add your CSS styles here -->
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 20px;
            background-color: #f5f5f5;
        }
        
        .container {
            max-width: 400px;
            margin: 0 auto;
            background-color: white;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }
        
        .form-group {
            margin-bottom: 15px;
        }
        
        input {
            width: 100%;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-sizing: border-box;
        }
        
        button {
            width: 100%;
            padding: 10px;
            background-color: #4CAF50;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
        
        button:hover {
            background-color: #45a049;
        }
        
        .error-message {
            color: red;
            margin-bottom: 10px;
        }
    </style>
</head>
<body>
    <div class="container">
        <?php if (isset($error)) { ?>
            <div class="error-message"><?php echo $error; ?></div>
        <?php } ?>

        <h2>Login</h2>
        
        <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="POST">
            <div class="form-group">
                <input type="text" placeholder="Enter your username" name="username" required>
            </div>

            <div class="form-group">
                <input type="password" placeholder="Enter your password" name="password" required>
            </div>

            <button type="submit">Login</button>
        </form>

        <p>Don't have an account? <a href="signup.php">Sign up here</a></p>
    </div>
</body>
</html>


<?php
$host = 'localhost';
$username = 'your_username';
$password = 'your_password';
$db_name = 'your_database';

$conn = new mysqli($host, $username, $password, $db_name);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}
?>


<?php
// Start the session
session_start();

// Database connection parameters
$host = 'localhost';
$username = 'root';
$password = '';
$database = 'login_system';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $database);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to sanitize input data
function sanitizeInput($data) {
    $data = trim($data);
    $data = stripslashes($data);
    $data = htmlspecialchars($data);
    return $data;
}

// Check if the user is already logged in
if (isset($_SESSION['loggedin']) && $_SESSION['loggedin'] === true) {
    header('Location: welcome.php');
    exit();
}

// Handle login form submission
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Get form data
    $username = sanitizeInput($_POST['username']);
    $password = $_POST['password'];

    // Check if username and password are provided
    if (empty($username) || empty($password)) {
        $error = "Username or password cannot be empty!";
    } else {
        // Prepare SQL statement to prevent SQL injection
        $stmt = mysqli_prepare($conn, "SELECT id, username, password FROM users WHERE username = ?");
        
        if ($stmt === false) {
            die("Prepare failed: " . mysqli_error($conn));
        }

        mysqli_stmt_bind_param($stmt, 's', $username);
        mysqli_stmt_execute($stmt);

        // Get the result
        $result = mysqli_stmt_get_result($stmt);
        $row = mysqli_fetch_assoc($result);

        if ($row) {
            // Verify password
            if (password_verify($password, $row['password'])) {
                // Password is correct
                $_SESSION['loggedin'] = true;
                $_SESSION['username'] = $row['username'];
                $_SESSION['id'] = $row['id'];

                // Redirect to welcome page
                header('Location: welcome.php');
                exit();
            } else {
                // Incorrect password
                $error = "Incorrect username or password!";
            }
        } else {
            // User doesn't exist
            $error = "Incorrect username or password!";
        }

        mysqli_stmt_close($stmt);
    }
}

// Close database connection
mysqli_close($conn);

?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Login</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 20px;
            background-color: #f5f5f5;
        }
        .container {
            max-width: 400px;
            margin: 0 auto;
            padding: 20px;
            background-color: white;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }
        .error {
            color: red;
            margin-bottom: 10px;
        }
        input {
            width: 100%;
            padding: 10px;
            margin: 5px 0;
            border: 1px solid #ddd;
            border-radius: 4px;
        }
        button {
            width: 100%;
            padding: 10px;
            background-color: #4CAF50;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
        button:hover {
            background-color: #45a049;
        }
    </style>
</head>
<body>
    <div class="container">
        <?php if (isset($error)) { ?>
            <div class="error"><?php echo $error; ?></div>
        <?php } ?>

        <form method="POST" action="<?php echo htmlspecialchars($_SERVER['PHP_SELF']); ?>">
            <input type="text" placeholder="Enter Username" name="username">
            <input type="password" placeholder="Enter Password" name="password">
            <button type="submit">Login</button>
        </form>
    </div>
</body>
</html>


<?php
function userLogin($username, $password) {
    // Database connection details
    $host = "localhost";
    $dbUsername = "root"; 
    $dbPassword = "";
    $dbName = "test";

    try {
        // Create new mysqli object
        $conn = new mysqli($host, $dbUsername, $dbPassword, $dbName);

        // Check connection
        if ($conn->connect_error) {
            throw new Exception("Connection failed: " . $conn->connect_error);
        }

        // Prepare SQL query to select user with given username
        $stmt = $conn->prepare("SELECT id, password FROM users WHERE username = ?");
        $stmt->bind_param("s", $username);

        // Execute the query
        $stmt->execute();

        // Get result
        $result = $stmt->get_result();
        
        if ($row = $result->fetch_assoc()) {
            // Verify password
            if (password_verify($password, $row['password'])) {
                // Password is correct
                return true;
            } else {
                // Password is incorrect
                return false;
            }
        } else {
            // No user found with this username
            return false;
        }

    } catch(Exception $e) {
        // Handle any errors
        echo "Error: " . $e->getMessage();
        return false;
    }
}

// Example usage:
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST['username'];
    $password = $_POST['password'];

    if (userLogin($username, $password)) {
        // Login successful
        session_start();
        $_SESSION['username'] = $username;
        header("Location: dashboard.php");
    } else {
        // Login failed
        echo "Invalid username or password!";
    }
}
?>


<?php
// Database configuration
$host = "localhost";
$username_db = "root"; // Replace with your database username
$password_db = "";     // Replace with your database password
$db_name = "user_login";

// Connect to the database
$conn = mysqli_connect($host, $username_db, $password_db, $db_name);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function login_user() {
    global $conn;

    // Check if form is submitted
    if (isset($_POST['login_submit'])) {
        $email = $_POST['email'];
        $password = $_POST['password'];

        // Validate input
        if (empty($email) || empty($password)) {
            return "Please fill in all fields!";
        }

        // Sanitize inputs to prevent SQL injection
        $email = trim(htmlspecialchars(stripslashes($email)));
        $password = trim(htmlspecialchars(stripslashes($password)));

        // Check if email exists in the database
        $query = "SELECT * FROM users WHERE email = ?";
        
        $stmt = mysqli_prepare($conn, $query);
        mysqli_stmt_bind_param($stmt, "s", $email);

        mysqli_execute($stmt);
        $result = mysqli_get_result($stmt);

        // Check if user exists
        if (mysqli_num_rows($result) > 0) {
            $user = mysqli_fetch_assoc($result);
            
            // Verify password
            if (password_verify($password, $user['password'])) {
                // Password is correct
                session_start();
                
                // Store user data in session variables
                $_SESSION['user_id'] = $user['id'];
                $_SESSION['username'] = $user['username'];
                $_SESSION['email'] = $user['email'];
                $_SESSION['login_time'] = time();

                // Redirect to dashboard or home page
                header("Location: dashboard.php");
                exit();
            } else {
                return "Incorrect password!";
            }
        } else {
            return "User with this email doesn't exist!";
        }
    }
}

// Close database connection
mysqli_close($conn);
?>


<?php
session_start();

// Database configuration
$host = 'localhost';
$dbUsername = 'root';
$dbPassword = '';
$dbName = 'mydatabase';

// Connect to database
$conn = new mysqli($host, $dbUsername, $dbPassword, $dbName);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to sanitize input data
function sanitize($data) {
    return htmlspecialchars(strip_tags(trim($data)));
}

// Check if form is submitted
if (isset($_POST['login'])) {
    // Get user inputs
    $usernameEmail = isset($_POST['username_email']) ? sanitize($_POST['username_email']) : '';
    $password = isset($_POST['password']) ? $_POST['password'] : '';

    // Validate input
    if (empty($usernameEmail)) {
        $_SESSION['error'] = "Please enter your username or email!";
        header("Refresh:0");
        exit();
    }

    if (empty($password)) {
        $_SESSION['error'] = "Please enter your password!";
        header("Refresh:0");
        exit();
    }

    // Check if user exists
    $stmt = $conn->prepare("SELECT * FROM users WHERE username = ? OR email = ?");
    $stmt->bind_param("ss", $usernameEmail, $usernameEmail);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows == 0) {
        $_SESSION['error'] = "Username or email not found!";
        header("Refresh:0");
        exit();
    }

    // Fetch user data
    $row = $result->fetch_assoc();

    // Verify password
    if (!password_verify($password, $row['password'])) {
        $_SESSION['error'] = "Incorrect password!";
        header("Refresh:0");
        exit();
    }

    // Start session and store user data in session variables
    $_SESSION['user_id'] = $row['id'];
    $_SESSION['username'] = $row['username'];
    $_SESSION['logged_in'] = true;

    // Redirect to dashboard or home page
    header("Location: dashboard.php");
}

// Close database connection
$conn->close();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login Page</title>
</head>
<body>
    <?php
    if (isset($_SESSION['error'])) {
        echo "<p style='color:red;'>" . $_SESSION['error'] . "</p>";
        unset($_SESSION['error']);
    }
    ?>

    <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
        <input type="text" name="username_email" placeholder="Username or Email" required><br>
        <input type="password" name="password" placeholder="Password" required><br>
        <input type="submit" name="login" value="Login">
    </form>

    <a href="register.php">Create an account</a>
</body>
</html>


<?php
// Database connection details
$host = "localhost";
$username = "root"; // Replace with your database username
$password = "";     // Replace with your database password
$dbname = "test";   // Replace with your database name

// Connect to the database
$conn = mysqli_connect($host, $username, $password, $dbname);

// Check if connection was successful
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to sanitize input data
function sanitizeInput($data) {
    $data = trim($data);
    $data = stripslashes($data);
    $data = htmlspecialchars($data, ENT_QUOTES, 'UTF-8');
    return $data;
}

// User login function
function userLogin() {
    global $conn;

    // Check if form is submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        // Get input values from the form
        $email = sanitizeInput($_POST['email']);
        $password = $_POST['password'];

        // Sanitize email for SQL query
        $email = mysqli_real_escape_string($conn, $email);

        // Check if Remember Me checkbox is checked
        $remember_me = isset($_POST['remember']);

        // Query to check user credentials
        $query = "SELECT id, username, password FROM users WHERE email='$email'";
        $result = mysqli_query($conn, $query);

        if (!$result) {
            die("Query failed: " . mysqli_error($conn));
        }

        // Check if user exists
        if (mysqli_num_rows($result) == 1) {
            $row = mysqli_fetch_assoc($result);
            $storedPassword = $row['password'];

            // Verify password using PHP's built-in function
            if (password_verify($password, $storedPassword)) {
                // Password is correct, start a session
                session_start();
                
                // Store user details in the session
                $_SESSION['id'] = $row['id'];
                $_SESSION['username'] = $row['username'];
                $_SESSION['email'] = $email;

                // Set Remember Me cookie if selected
                if ($remember_me) {
                    $cookie_value = password_hash($row['username'] . $password, PASSWORD_DEFAULT);
                    setcookie("remember_me", $cookie_value, time() + (86400 * 30), "/");
                }

                // Redirect to dashboard or home page
                header("Location: dashboard.php");
                exit();
            } else {
                // Password is incorrect
                echo "Invalid email or password!";
            }
        } else {
            // No user found with this email
            echo "User not found!";
        }
    } else {
        // If form is not submitted, show login form
        showLoginForm();
    }
}

// Function to display login form
function showLoginForm() {
?>
    <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
        Email: <input type="email" name="email" required><br>
        Password: <input type="password" name="password" required><br>
        Remember Me: <input type="checkbox" name="remember"><br>
        <input type="submit" value="Login">
    </form>
<?php
}

// Call the login function
userLogin();

// Close database connection
mysqli_close($conn);
?>


<?php
session_start();

// Database configuration
$host = 'localhost';
$dbname = 'your_database_name';
$username_db = 'your_username';
$password_db = 'your_password';

try {
    // Connect to the database
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username_db, $password_db);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

// Check if the form is submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Get input values
    $username = $_POST['username'];
    $password = $_POST['password'];

    // Validate inputs
    if (empty($username) || empty($password)) {
        die("Please fill in all required fields.");
    }

    // Prepare the SQL statement to prevent SQL injection
    $stmt = $conn->prepare("SELECT password FROM users WHERE username = ?");
    $stmt->execute([$username]);

    // Check if the user exists
    if ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {
        $stored_password = $row['password'];

        // Verify the password
        if (password_verify($password, $stored_password)) {
            // Password is correct
            // Set session variables
            $_SESSION['username'] = $username;
            $_SESSION['logged_in'] = true;

            // Optionally set a cookie for longer sessions
            $cookie_name = "user_login";
            $cookie_value = serialize(array("username" => $username));
            $cookie_expiry = time() + (86400 * 7); // 1 week

            setcookie($cookie_name, $cookie_value, $cookie_expiry, "/");

            // Redirect to the dashboard or home page
            header("Location: dashboard.php");
            exit();
        } else {
            die("Incorrect password. Please try again.");
        }
    } else {
        die("Username not found. Please check your username and try again.");
    }
}

// Close database connection
$conn = null;

?>

<!DOCTYPE html>
<html>
<head>
    <title>Login Page</title>
    <style type="text/css">
        body { font-family: Arial, sans-serif; max-width: 500px; margin: 0 auto; padding: 20px; }
        .login-form { border: 1px solid #ddd; padding: 20px; margin-top: 50px; }
        .form-group { margin-bottom: 10px; }
        input { width: 100%; padding: 8px; box-sizing: border-box; }
        button { background-color: #4CAF50; color: white; padding: 10px 20px; border: none; cursor: pointer; }
        button:hover { background-color: #45a049; }
    </style>
</head>
<body>
    <div class="login-form">
        <h2>Login</h2>
        <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="POST">
            <div class="form-group">
                <label for="username">Username:</label>
                <input type="text" id="username" name="username" placeholder="Enter your username..." required>
            </div>
            <div class="form-group">
                <label for="password">Password:</label>
                <input type="password" id="password" name="password" placeholder="Enter your password..." required>
            </div>
            <button type="submit">Login</button>
        </form>
    </div>
</body>
</html>


<?php
session_start();
require 'db_connection.php';

if (isset($_POST['action'])) {
    if ($_POST['action'] == "register") {
        // Registration logic
        $email = $_POST['email'];
        $password = $_POST['password'];

        if (empty($email) || empty($password)) {
            $error_msg = "Email and password are required!";
        } else {
            $stmt = $conn->prepare("SELECT COUNT(email) AS count FROM users WHERE email = ?");
            $stmt->bind_param("s", $email);
            $stmt->execute();
            $result = $stmt->get_result()->fetch_assoc();

            if ($result['count'] > 0) {
                $error_msg = "Email already exists!";
            } else {
                $hashed_password = password_hash($password, PASSWORD_DEFAULT);
                $stmt = $conn->prepare("INSERT INTO users (email, password) VALUES (?, ?)");
                $stmt->bind_param("ss", $email, $hashed_password);
                if ($stmt->execute()) {
                    $success_msg = "Registration successful! You can now login.";
                } else {
                    $error_msg = "Error registering user!";
                }
            }
        }
    } elseif ($_POST['action'] == "login") {
        // Login logic
        $email = $_POST['email'];
        $password = $_POST['password'];

        if (empty($email) || empty($password)) {
            $error_msg = "Email and password are required!";
        } else {
            $stmt = $conn->prepare("SELECT * FROM users WHERE email = ?");
            $stmt->bind_param("s", $email);
            $stmt->execute();
            $result = $stmt->get_result();

            if ($result->num_rows == 1) {
                $user_data = $result->fetch_assoc();
                if (password_verify($password, $user_data['password'])) {
                    // Set session variables
                    $_SESSION['user_id'] = $user_data['id'];
                    $_SESSION['email'] = $user_data['email'];
                    header('Location: dashboard.php');
                    exit();
                } else {
                    $error_msg = "Incorrect password!";
                }
            } else {
                $error_msg = "Email does not exist!";
            }
        }
    }
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Login System</title>
</head>
<body>
    <?php
    if (isset($success_msg)) {
        echo "<p style='color: green;'>$success_msg</p>";
    } elseif (isset($error_msg)) {
        echo "<p style='color: red;'>$error_msg</p>";
    }
    ?>

    <h2>Login</h2>
    <form method="POST" action="<?php echo $_SERVER['PHP_SELF']; ?>">
        <input type="email" name="email" placeholder="Enter email" required><br>
        <input type="password" name="password" placeholder="Enter password" required><br>
        <input type="hidden" name="action" value="login">
        <button type="submit">Login</button>
    </form>

    <h2>Register</h2>
    <form method="POST" action="<?php echo $_SERVER['PHP_SELF']; ?>">
        <input type="email" name="email" placeholder="Enter email" required><br>
        <input type="password" name="password" placeholder="Enter password" required><br>
        <input type="hidden" name="action" value="register">
        <button type="submit">Register</button>
    </form>
</body>
</html>

<?php
// Close the database connection
$conn->close();
?>


<?php
session_start();

// Database connection details
$host = "localhost";
$username_db = "root"; // Change this to your database username
$password_db = "";     // Change this to your database password
$dbname = "login_system";

// Connect to the database
$conn = mysqli_connect($host, $username_db, $password_db, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to sanitize input data
function sanitize_input($data) {
    $data = trim($data);
    $data = stripslashes($data);
    $data = htmlspecialchars($data);
    return $data;
}

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Retrieve and sanitize user inputs
    $username = sanitize_input($_POST['username']);
    $password = sanitize_input($_POST['password']);

    // Check if username exists in the database
    $sql = "SELECT * FROM users WHERE username = '$username' LIMIT 1";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) == 0) {
        echo "<script>alert('Username does not exist!');</script>";
    } else {
        // Verify password
        $row = mysqli_fetch_assoc($result);
        $hashed_password = md5($password); // Using MD5 hashing

        if ($row['password'] === $hashed_password) {
            // Set session variables
            $_SESSION['username'] = $username;
            $_SESSION['logged_in'] = true;

            // Redirect to welcome page
            header("Location: welcome.php");
            exit();
        } else {
            echo "<script>alert('Invalid username or password!');</script>";
        }
    }
}

mysqli_close($conn);
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login Page</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            margin: 0;
            background-color: #f0f0f0;
        }
        .login-container {
            padding: 20px;
            width: 300px;
            background-color: white;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }
        input {
            width: 100%;
            padding: 10px;
            margin: 10px 0;
            border: 1px solid #ddd;
            border-radius: 4px;
        }
        button {
            width: 100%;
            padding: 10px;
            background-color: #4CAF50;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
        button:hover {
            background-color: #45a049;
        }
        .signup-link {
            margin-top: 15px;
            text-align: center;
        }
    </style>
</head>
<body>
    <div class="login-container">
        <h2>Login</h2>
        <form action="<?php echo htmlspecialchars($_SERVER['PHP_SELF']); ?>" method="POST">
            <input type="text" placeholder="Enter Username" name="username" required>
            <input type="password" placeholder="Enter Password" name="password" required>
            <button type="submit" name="submit">Login</button>
        </form>
        <div class="signup-link">
            Don't have an account? <a href="signup.php">Sign Up here</a>
        </div>
    </div>
</body>
</html>


<?php
session_start();

// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'mydatabase';

// Create database connection
$conn = mysqli_connect($host, $username, $password, $dbname);

// Check if connection failed
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to sanitize input data
function sanitizeInput($data) {
    $data = trim($data);
    $data = stripslashes($data);
    $data = htmlspecialchars($data);
    return $data;
}

// Check if form is submitted
if (isset($_POST['login'])) {
    // Sanitize and store username/email and password
    $username = sanitizeInput($_POST['username']);
    $password = $_POST['password'];

    // Prepare SQL query to check user credentials
    $sql = "SELECT * FROM users WHERE username = '$username' OR email = '$username'";
    
    // Execute the query
    $result = mysqli_query($conn, $sql);

    if ($result) {
        // Check if user exists
        if (mysqli_num_rows($result) > 0) {
            // Get user data
            $user_data = mysqli_fetch_assoc($result);
            
            // Verify password
            if (password_verify($password, $user_data['password'])) {
                // Set session variables
                $_SESSION['user_id'] = $user_data['id'];
                $_SESSION['username'] = $user_data['username'];
                $_SESSION['logged_in'] = true;
                
                // Remember me functionality
                if (isset($_POST['remember_me'])) {
                    // Generate a random token
                    $token = bin2hex(random_bytes(32));
                    
                    // Update the user's session_token and expiration date in database
                    $sql = "UPDATE users SET session_token = '$token', token_expiration = DATE_ADD(NOW(), INTERVAL 14 DAY) WHERE id = {$user_data['id']}";
                    mysqli_query($conn, $sql);
                    
                    // Set a cookie that expires after 2 weeks
                    setcookie('remember_me', $token, time() + (14 * 86400), '/', '', false, true);
                }
                
                // Redirect to dashboard or home page
                header("Location: dashboard.php");
                exit();
            } else {
                // Password is incorrect
                echo "Incorrect password!";
            }
        } else {
            // User doesn't exist
            echo "No account found with this username/email!";
        }
    } else {
        // Query execution failed
        echo "Error: " . mysqli_error($conn);
    }
}

// Close database connection
mysqli_close($conn);

?>

<!DOCTYPE html>
<html>
<head>
    <title>Login Page</title>
</head>
<body>
    <h2>Login Form</h2>
    <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
        Username or Email: <input type="text" name="username"><br><br>
        Password: <input type="password" name="password"><br><br>
        Remember me: <input type="checkbox" name="remember_me"><br><br>
        <input type="submit" name="login" value="Login">
    </form>
</body>
</html>



<?php
session_start();

// Destroy all sessions
unset($_SESSION['user_id']);
unset($_SESSION['username']);
unset($_SESSION['logged_in']);

// Delete remember me cookie if it exists
if (isset($_COOKIE['remember_me'])) {
    setcookie('remember_me', '', time() - 3600, '/', '', false, true);
}

// Redirect to login page or home page
header("Location: login.php");
exit();
?>


<?php
session_start();

// Database configuration
$host = 'localhost';
$username_db = 'root';
$password_db = '';
$database_name = 'mydatabase';

// Connect to database
$conn = mysqli_connect($host, $username_db, $password_db, $database_name);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Check if form is submitted
if (isset($_POST['submit'])) {
    // Sanitize input data
    $username = htmlspecialchars(trim($_POST['username']));
    $password = htmlspecialchars(trim($_POST['password']));

    // Prepare SQL statement to prevent SQL injection
    $stmt = mysqli_stmt_init($conn);
    if (!mysqli_stmt_prepare($stmt, "SELECT * FROM users WHERE username = ?")) {
        echo "SQL error";
        exit();
    }

    // Bind parameters
    mysqli_stmt_bind_param($stmt, "s", $username);

    // Execute query
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);
    
    if ($row = mysqli_fetch_assoc($result)) {
        // Verify password
        if (password_verify($password, $row['password'])) {
            // Password is correct
            $_SESSION['username'] = $row['username'];
            $_SESSION['id'] = $row['id'];
            $_SESSION['logged_in'] = true;

            // Redirect to dashboard or home page
            header("Location: dashboard.php");
            exit();
        } else {
            // Incorrect password
            $error = "Incorrect username or password!";
        }
    } else {
        // Username not found
        $error = "Incorrect username or password!";
    }

    mysqli_stmt_close($stmt);
}

// Close database connection
mysqli_close($conn);

?>

<!DOCTYPE html>
<html>
<head>
    <title>Login Page</title>
</head>
<body>
    <?php if (isset($error)) { ?>
        <div style="color: red;"><?php echo $error; ?></div>
    <?php } ?>

    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <input type="text" name="username" placeholder="Username" required><br>
        <input type="password" name="password" placeholder="Password" required><br>
        <button type="submit" name="submit">Login</button>
    </form>

    <p>Don't have an account? <a href="signup.php">Create one here</a>.</p>
</body>
</html>


<?php
// Include database connection file
require_once("db_connection.php");

function login_user($username, $password) {
    global $conn;

    // Validate input
    if (empty($username) || empty($password)) {
        return "Username and password are required!";
    }

    // Query the database for user with matching username or email
    $stmt = $conn->prepare("SELECT id, username, password FROM users WHERE username=? OR email=?");
    $stmt->bind_param("ss", $username, $username);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        // Get user data
        $user = $result->fetch_assoc();

        // Verify password
        if (password_verify($password, $user['password'])) {
            // Start session and store user data in session variables
            session_start();
            $_SESSION['id'] = $user['id'];
            $_SESSION['username'] = $user['username'];
            $_SESSION['logged_in'] = true;

            return "Login successful!";
        } else {
            return "Incorrect password!";
        }
    } else {
        return "Username or email not found!";
    }
}

// Example usage:
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST['username'];
    $password = $_POST['password'];

    $login_result = login_user($username, $password);

    if ($login_result === "Login successful!") {
        // Redirect to dashboard or home page
        header("Location: dashboard.php");
        exit();
    } else {
        // Display error message
        echo $login_result;
    }
}

// Database connection file (db_connection.php)
<?php
$host = 'localhost';
$username_db = 'root';
$password_db = '';
$dbname = 'your_database_name';

$conn = new mysqli($host, $username_db, $password_db, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}
?>


<?php
function user_login($username, $password) {
    // Database connection parameters
    $host = "localhost";
    $db_username = "root";
    $db_password = "";
    $dbname = "user_db";

    try {
        // Connect to the database
        $conn = new mysqli($host, $db_username, $db_password, $dbname);

        // Check connection
        if ($conn->connect_error) {
            throw new Exception("Connection failed: " . $conn->connect_error);
        }

        // Prepare SQL query to select user by username
        $stmt = $conn->prepare("SELECT * FROM users WHERE username = ?");
        $stmt->bind_param("s", $username);

        // Execute the query
        $stmt->execute();
        $result = $stmt->get_result();

        // Get user data
        $user = $result->fetch_assoc();

        if (!$user) {
            // No user found with this username
            return null;
        }

        // Verify password
        if (password_verify($password, $user['password'])) {
            // Password is correct

            // Store user session
            session_start();
            $_SESSION['user_id'] = $user['id'];
            $_SESSION['username'] = $user['username'];
            
            return $user;
        } else {
            // Incorrect password
            return null;
        }
    } catch (Exception $e) {
        // Log the error
        error_log("Login Error: " . $e->getMessage());
        return null;
    } finally {
        // Close database connection
        if ($conn) {
            $conn->close();
        }
    }
}

// Example usage:
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST['username'];
    $password = $_POST['password'];

    $logged_in_user = user_login($username, $password);
    
    if ($logged_in_user) {
        // Login successful
        header("Location: dashboard.php");
    } else {
        // Login failed
        echo "Invalid username or password!";
    }
}
?>


<?php
// Database configuration
$host = 'localhost';
$dbUsername = 'your_username';
$dbPassword = 'your_password';
$dbName = 'your_database';

// Connect to the database
$conn = new mysqli($host, $dbUsername, $dbPassword, $dbName);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function loginUser() {
    global $conn;

    // Get form data
    $email = htmlspecialchars($_POST['email']);
    $password = $_POST['password'];

    // Sanitize inputs
    $email = mysqli_real_escape_string($conn, $email);

    // Query the database for the user with this email
    $stmt = $conn->prepare("SELECT id, email, password FROM users WHERE email = ?");
    $stmt->bind_param('s', $email);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        // User exists
        $user = $result->fetch_assoc();

        // Verify password
        if (password_verify($password, $user['password'])) {
            // Password is correct
            session_start();
            $_SESSION['loggedin'] = true;
            $_SESSION['id'] = $user['id'];
            $_SESSION['email'] = $user['email'];

            // Redirect to welcome page
            header("Location: welcome.php");
            exit();
        } else {
            // Password is incorrect
            echo "Incorrect password.";
        }
    } else {
        // User does not exist
        echo "No user found with this email address.";
    }

    $stmt->close();
}

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    loginUser();
}
?>


<?php
session_start();
require_once('db_connect.php'); // Include your database connection file

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $username = htmlspecialchars(trim($_POST['username']));
    $email = htmlspecialchars(trim($_POST['email']));
    $password = $_POST['password'];

    if (empty($username) && empty($email)) {
        die("Please enter username or email");
    }
    if (empty($password)) {
        die("Please enter password");
    }

    // Connect to database
    $conn = mysqli_connect(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);
    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
    }

    // Prepare the query
    $input = !empty($username) ? $username : $email;
    $column = !empty($username) ? 'username' : 'email';
    
    $sql = "SELECT * FROM users WHERE $column = '" . mysqli_real_escape_string($conn, $input) . "'";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) == 0) {
        die("Username or email is incorrect");
    }

    $user = mysqli_fetch_assoc($result);
    
    // Verify password
    if (!password_verify($password, $user['password'])) {
        die("Password is incorrect");
    }

    // Start session and store user data
    session_regenerate(true); // Prevent session fixation
    $_SESSION['logged_in'] = true;
    $_SESSION['user_id'] = $user['id'];
    $_SESSION['username'] = $user['username'];
    $_SESSION['email'] = $user['email'];

    // Close the database connection
    mysqli_close($conn);

    // Redirect to dashboard or home page
    header('Location: dashboard.php');
    exit();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login Page</title>
</head>
<body>
    <?php
    if (isset($_SESSION['message'])) {
        echo "<p>{$_SESSION['message']}</p>";
        unset($_SESSION['message']);
    }
    ?>
    
    <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
        Username or Email: <input type="text" name="username" placeholder="Enter username or email"><br>
        Password: <input type="password" name="password" placeholder="Enter password"><br>
        <input type="submit" value="Login">
    </form>

    <a href="register.php">Create Account</a> |
    <a href="reset_password.php">Forgot Password?</a>
</body>
</html>


<?php
// Database configuration
include('db_config.php');

function login_user($username, $password) {
    // Sanitize inputs to prevent SQL injection
    global $conn;
    
    // Check if username and password are provided
    if (empty($username) || empty($password)) {
        return "Username or password cannot be empty";
    }

    try {
        // Prepare the statement
        $stmt = $conn->prepare("SELECT * FROM users WHERE username = ?");
        $stmt->execute([$username]);
        
        // Fetch user data
        $user = $stmt->fetch(PDO::FETCH_ASSOC);
        
        // Check if user exists and password is correct
        if ($user && password_verify($password, $user['password'])) {
            // Start session
            session_start();
            
            // Store user information in session
            $_SESSION['user_id'] = $user['id'];
            $_SESSION['username'] = $user['username'];
            
            // Regenerate session ID to prevent session fixation
            session_regenerate(true);
            
            return "Login successful!";
        } else {
            return "Invalid username or password";
        }
    } catch (PDOException $e) {
        return "Error: " . $e->getMessage();
    }
}

// Example usage:
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST['username'];
    $password = $_POST['password'];
    
    $result = login_user($username, $password);
    echo $result;
}
?>


<?php
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}
?>


<?php
// Include configuration file
require_once 'config.php';

function loginUser($username, $password) {
    // Initialize error message
    $error = '';

    // Check if form is submitted
    if ($_SERVER['REQUEST_METHOD'] == 'POST') {
        // Sanitize input
        $username = htmlspecialchars(trim($_POST['username']));
        $password = $_POST['password'];

        // Create connection to database
        $conn = new mysqli(DB_HOST, DB_USER, DB_PASS, DB_NAME);

        // Check connection
        if ($conn->connect_error) {
            die("Connection failed: " . $conn->connect_error);
        }

        // Prepare SQL statement to prevent SQL injection
        $stmt = $conn->prepare("SELECT id, username, password FROM users WHERE username = ?");
        $stmt->bind_param("s", $username);

        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            // Fetch user data
            $user = $result->fetch_assoc();

            // Verify password (assuming passwords are hashed)
            if (password_verify($password, $user['password'])) {
                // Password is correct
                // Start session and store user details in session variables
                session_start();
                $_SESSION['id'] = $user['id'];
                $_SESSION['username'] = $user['username'];
                $_SESSION['logged_in'] = true;

                // Redirect to dashboard or home page
                header("Location: dashboard.php");
                exit();
            } else {
                $error = "Invalid password";
            }
        } else {
            $error = "Username not found";
        }

        $stmt->close();
        $conn->close();
    }

    return $error;
}

// Example usage:
if (isset($_POST['login'])) {
    $error_message = loginUser($_POST['username'], $_POST['password']);
    if ($error_message != '') {
        echo $error_message;
    }
}
?>



<?php
// Display any error messages from loginUser function
if (isset($error_message) && $error_message != '') {
    echo "<div class='error'>".$error_message."</div>";
}
?>

<form action="<?php echo $_SERVER['PHP_SELF'];?>" method="post">
    <input type="text" name="username" placeholder="Username" required>
    <input type="password" name="password" placeholder="Password" required>
    <button type="submit" name="login">Login</button>
</form>


<?php
define('DB_HOST', 'localhost');
define('DB_USER', 'your_username');
define('DB_PASS', 'your_password');
define('DB_NAME', 'your_database_name');
?>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$database = 'user_login';

// Create database connection
$conn = new mysqli($host, $username, $password, $database);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to handle user login
function loginUser() {
    global $conn;
    
    // Check if form is submitted
    if (isset($_POST['login'])) {
        $email = mysqli_real_escape_string($conn, $_POST['email']);
        $password = mysqli_real_escape_string($conn, $_POST['password']);

        // Validate email format
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            echo "Invalid email format";
            return;
        }

        // Query to check user credentials
        $query = "SELECT id, name, password FROM users WHERE email = '$email'";
        
        $result = $conn->query($query);

        if ($result->num_rows > 0) {
            $row = $result->fetch_assoc();
            
            // Verify password
            if (password_verify($password, $row['password'])) {
                // Start session
                session_start();
                
                // Store user data in session
                $_SESSION['id'] = $row['id'];
                $_SESSION['name'] = $row['name'];
                $_SESSION['email'] = $email;

                // Redirect to dashboard or home page
                header("Location: dashboard.php");
                exit();
            } else {
                echo "Incorrect password";
            }
        } else {
            echo "Email not found in our database";
        }
    }
}

// Close database connection
$conn->close();

?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login Page</title>
    <style>
        .login-form {
            max-width: 500px;
            margin: 0 auto;
            padding: 20px;
            border: 1px solid #ccc;
            border-radius: 5px;
        }
        
        input {
            width: 100%;
            padding: 10px;
            margin: 8px 0;
            box-sizing: border-box;
        }

        button {
            background-color: #4CAF50;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }

        .error {
            color: red;
            margin-top: 10px;
            font-size: 80%;
        }
    </style>
</head>
<body>
    <div class="login-form">
        <h2>Login</h2>
        <?php
        // Call the login function when form is submitted
        if ($_SERVER["REQUEST_METHOD"] == "POST") {
            loginUser();
        }
        ?>

        <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
            <input type="email" name="email" placeholder="Enter your email" required>
            <input type="password" name="password" placeholder="Enter your password" required>
            <button type="submit" name="login">Login</button>
            
            <?php
            if (isset($_GET['error'])) {
                $error = $_GET['error'];
                echo "<div class='error'>$error</div>";
            }
            ?>
        </form>

        <p>Don't have an account? <a href="register.php">Register here</a></p>
    </div>
</body>
</html>


<?php
session_start();

// Database configuration
$host = 'localhost';
$username_db = 'root';
$password_db = '';
$database = 'login_system';

// Connect to database
$conn = mysqli_connect($host, $username_db, $password_db, $database);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Handle login form submission
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    // Sanitize input data
    $username = htmlspecialchars($_POST['username']);
    $password = htmlspecialchars($_POST['password']);

    // Validate input data
    if (empty($username) || empty($password)) {
        echo "Username and password are required!";
    } else {
        // Check user credentials against the database
        $sql = "SELECT * FROM users WHERE username = '$username'";
        $result = mysqli_query($conn, $sql);

        if ($result && mysqli_num_rows($result) > 0) {
            $user = mysqli_fetch_assoc($result);
            
            // Verify password
            if (md5($password) === $user['password']) {
                // Set session variables
                $_SESSION['username'] = $username;
                $_SESSION['logged_in'] = true;

                // Redirect to welcome page
                header('Location: welcome.php');
                exit();
            } else {
                echo "Incorrect password!";
            }
        } else {
            echo "Username not found!";
        }
    }
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login Page</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f0f0f0;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            margin: 0;
        }

        .login-form {
            background-color: white;
            padding: 20px;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
            width: 300px;
        }

        input[type="text"], input[type="password"] {
            width: 100%;
            padding: 10px;
            margin: 10px 0;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-sizing: border-box;
        }

        button {
            width: 100%;
            padding: 10px;
            background-color: #4CAF50;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }

        button:hover {
            background-color: #45a049;
        }

        .error {
            color: red;
            margin-top: 10px;
        }
    </style>
</head>
<body>
    <div class="login-form">
        <h2>Login</h2>
        <form action="login.php" method="POST">
            <input type="text" placeholder="Enter Username" name="username">
            <input type="password" placeholder="Enter Password" name="password">
            <button type="submit">Login</button>
            <?php
                if (!empty($error)) {
                    echo "<div class='error'>$error</div>";
                }
            ?>
        </form>
        <p>Not registered? <a href="register.php">Register here</a></p>
    </div>
</body>
</html>

<?php
// Close database connection
mysqli_close($conn);
?>


<?php
session_start();

// Database configuration
$host = 'localhost';
$username_db = 'root';
$password_db = '';
$database = 'login_system';

// Connect to database
$conn = mysqli_connect($host, $username_db, $password_db, $database);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Handle registration form submission
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    // Sanitize input data
    $username = htmlspecialchars($_POST['username']);
    $password = htmlspecialchars($_POST['password']);

    // Validate input data
    if (empty($username) || empty($password)) {
        echo "Username and password are required!";
    } else {
        // Check if username already exists
        $sql = "SELECT * FROM users WHERE username = '$username'";
        $result = mysqli_query($conn, $sql);

        if ($result && mysqli_num_rows($result) > 0) {
            echo "Username already exists!";
        } else {
            // Hash the password
            $hashed_password = md5($password);

            // Insert new user into database
            $sql = "INSERT INTO users (username, password) VALUES ('$username', '$hashed_password')";
            if (mysqli_query($conn, $sql)) {
                echo "Registration successful! Please login.";
                header('Location: login.php');
                exit();
            } else {
                echo "Error registering user: " . mysqli_error($conn);
            }
        }
    }
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Registration Page</title>
    <style>
        /* Same styles as login page */
    </style>
</head>
<body>
    <div class="login-form">
        <h2>Register</h2>
        <form action="register.php" method="POST">
            <input type="text" placeholder="Enter Username" name="username">
            <input type="password" placeholder="Enter Password" name="password">
            <button type="submit">Register</button>
            <?php
                if (!empty($error)) {
                    echo "<div class='error'>$error</div>";
                }
            ?>
        </form>
        <p>Already registered? <a href="login.php">Login here</a></p>
    </div>
</body>
</html>

<?php
// Close database connection
mysqli_close($conn);
?>


<?php
// Configuration file (config.php)
$host = 'localhost';
$dbname = 'your_database';
$username = 'your_username';
$password = 'your_password';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}
?>

<?php
// login.php

session_start();

require_once 'config.php';

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get username and password from form data
    $username = $_POST['username'];
    $password = $_POST['password'];

    // Sanitize input
    $username = htmlspecialchars($username, ENT_QUOTES, 'UTF-8');
    $password = htmlspecialchars($password, ENT_QUOTES, 'UTF-8');

    try {
        // Check if username and password are provided
        if (empty($username) || empty($password)) {
            die("Username or password cannot be empty");
        }

        // Query the database for user with the given username
        $stmt = $conn->prepare("SELECT * FROM users WHERE username = ?");
        $stmt->execute([$username]);
        $user = $stmt->fetch(PDO::FETCH_ASSOC);

        if ($user) {
            // Verify password
            if (password_verify($password, $user['password'])) {
                // Start session and store user data
                $_SESSION['logged_in'] = true;
                $_SESSION['user_id'] = $user['id'];
                $_SESSION['username'] = $user['username'];
                $_SESSION['email'] = $user['email'];

                // Redirect to dashboard or home page
                header("Location: dashboard.php");
                exit();
            } else {
                echo "Incorrect password!";
            }
        } else {
            echo "Username not found!";
        }
    } catch (PDOException $e) {
        die("Error occurred: " . $e->getMessage());
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login Page</title>
</head>
<body>
    <h2>Login</h2>
    <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
        Username: <input type="text" name="username">
        Password: <input type="password" name="password">
        <input type="submit" value="Login">
    </form>
</body>
</html>


<?php
session_start();

// Database connection parameters
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'mydatabase';

// Connect to database
$conn = new mysqli($host, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Get login credentials from form
$login_username = $_POST['username'];
$login_password = $_POST['password'];

// Sanitize the inputs to prevent SQL injection
$login_username = $conn->real_escape_string($login_username);

// Query the database for the user
$sql = "SELECT * FROM users WHERE username = '$login_username'";
$result = $conn->query($sql);

if ($result->num_rows == 0) {
    // User not found
    die("Invalid username or password");
}

$user = $result->fetch_assoc();

// Verify the password (assuming passwords are stored as hashes)
if (!password_verify($login_password, $user['password'])) {
    die("Invalid username or password");
}

// Start a session and store user data
$_SESSION['logged_in'] = true;
$_SESSION['user_id'] = $user['id'];
$_SESSION['username'] = $user['username'];

// Set session timeout (30 minutes)
$_SESSION['timeout'] = time() + 30 * 60;

// Remember me functionality
if ($_POST['remember_me']) {
    // Generate a random token
    $token = bin2hex(random_bytes(32));
    
    // Store the token in the database
    $sql = "UPDATE users SET remember_token='$token' WHERE id=" . $user['id'];
    $conn->query($sql);
    
    // Set cookie with token and expiration date
    setcookie('remember_token', $token, time() + (30 * 24 * 60 * 60), '/', null, false, true);
}

// Redirect to dashboard or home page
header("Location: dashboard.php");
exit();
?>


<?php
session_start();

if (!isset($_SESSION['logged_in']) || !$_SESSION['logged_in']) {
    header("Location: login.html");
    exit();
}

// Check session timeout
if (time() > $_SESSION['timeout']) {
    session_unset();
    session_destroy();
    header("Location: login.html");
    exit();
}
?>

Welcome, <?php echo $_SESSION['username']; ?>!


<?php
session_start();

// Unset all session variables
session_unset();
session_destroy();

// Redirect to login page
header("Location: login.html");
exit();
?>


<?php
// Include database connection file
include_once("db_connection.php");

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = mysqli_real_escape_string($conn, $_POST['username']);
    $password = $_POST['password'];

    // Query to check if username exists
    $sql = "SELECT * FROM users WHERE username = '$username'";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) == 1) {
        $row = mysqli_fetch_assoc($result);
        
        // Verify password
        if (password_verify($password, $row['password'])) {
            // Start session
            session_start();
            
            // Set session variables
            $_SESSION['user_id'] = $row['id'];
            $_SESSION['username'] = $row['username'];
            $_SESSION['logged_in'] = true;
            
            // Redirect to dashboard or home page
            header("Location: dashboard.php");
            exit();
        } else {
            echo "Invalid username or password";
        }
    } else {
        echo "Invalid username or password";
    }
}

// Close database connection
mysqli_close($conn);
?>


<?php
$host = "localhost";
$username = "root";
$password = "";
$db_name = "your_database";

$conn = mysqli_connect($host, $username, $password, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}
?>


<?php
session_start();
unset($_SESSION['user_id']);
unset($_SESSION['username']);
unset($_SESSION['logged_in']);
session_unset();
session_destroy();
header("Location: login.php");
exit();
?>


<?php
session_start();

// Database configuration
$host = 'localhost';
$db_username = 'root';
$db_password = '';
$db_name = 'user_login';

// Connect to database
$conn = mysqli_connect($host, $db_username, $db_password, $db_name);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Handle login form submission
if (isset($_POST['submit'])) {
    // Sanitize user inputs
    $username = htmlspecialchars($_POST['username']);
    $password = $_POST['password'];

    // Query the database for user information
    $query = "SELECT password FROM users WHERE username = '" . mysqli_real_escape_string($conn, $username) . "'";
    $result = mysqli_query($conn, $query);
    
    if ($row = mysqli_fetch_assoc($result)) {
        // Verify password
        if (password_verify($password, $row['password'])) {
            // Set session variables
            $_SESSION['username'] = $username;
            $_SESSION['logged_in'] = true;

            // Redirect to welcome page
            header('Location: welcome.php');
            exit();
        } else {
            $error_message = "Invalid username or password";
        }
    } else {
        $error_message = "Invalid username or password";
    }
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login Page</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            margin: 0;
            background-color: #f0f0f0;
        }

        .login-container {
            background-color: white;
            padding: 20px;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
            width: 300px;
        }

        .form-group {
            margin-bottom: 15px;
        }

        input[type="text"],
        input[type="password"] {
            width: 100%;
            padding: 8px;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-sizing: border-box;
        }

        button {
            width: 100%;
            padding: 10px;
            background-color: #4CAF50;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }

        button:hover {
            background-color: #45a049;
        }

        .error-message {
            color: red;
            margin-bottom: 10px;
        }
    </style>
</head>
<body>
    <div class="login-container">
        <?php if (isset($error_message)) { ?>
            <div class="error-message"><?php echo $error_message; ?></div>
        <?php } ?>

        <form action="<?php echo htmlspecialchars($_SERVER['PHP_SELF']); ?>" method="post">
            <div class="form-group">
                <label for="username">Username:</label>
                <input type="text" id="username" name="username" required>
            </div>

            <div class="form-group">
                <label for="password">Password:</label>
                <input type="password" id="password" name="password" required>
            </div>

            <button type="submit" name="submit">Login</button>
        </form>
    </div>
</body>
</html>


<!DOCTYPE html>
<html>
<head>
    <title>Registration Page</title>
</head>
<body>
    <h2>Create New Account</h2>
    <form action="register_process.php" method="post">
        Username: <input type="text" name="username" required><br>
        Password: <input type="password" name="password" required><br>
        Email: <input type="email" name="email" required><br>
        <input type="submit" value="Register">
    </form>
</body>
</html>


<!DOCTYPE html>
<html>
<head>
    <title>Login Page</title>
</head>
<body>
    <h2>Login to Your Account</h2>
    <?php
        // Show error message if exists
        if(isset($_GET['error'])){
            echo "<p style='color:red;'>".$_GET['error']."</p>";
        }
    ?>
    
    <form action="login_process.php" method="post">
        Username: <input type="text" name="username" required><br>
        Password: <input type="password" name="password" required><br>
        <input type="submit" value="Login">
    </form>
    <p>Don't have an account? <a href="register.php">Register here</a></p>
</body>
</html>


<?php
// Include database connection
include 'config.php';

session_start();

if(isset($_POST['username']) && isset($_POST['password'])){
    $username = $_POST['username'];
    $password = $_POST['password'];

    // Prepare and execute query
    $stmt = $conn->prepare("SELECT * FROM users WHERE username=?");
    $stmt->execute([$username]);
    
    $user = $stmt->fetch(PDO::FETCH_ASSOC);
    
    if($user){
        // Verify password
        if(password_verify($password, $user['password'])){
            // Login successful
            $_SESSION['id'] = $user['id'];
            $_SESSION['username'] = $user['username'];
            header("Location: dashboard.php");
            exit();
        } else {
            // Wrong password
            header("Location: login.php?error=Invalid username or password");
            exit();
        }
    } else {
        // User doesn't exist
        header("Location: login.php?error=Invalid username or password");
        exit();
    }
} else {
    header("Location: login.php");
}
?>


<?php
// Include database connection
include 'config.php';

session_start();

if(isset($_POST['username']) && isset($_POST['password']) && isset($_POST['email'])){
    $username = $_POST['username'];
    $password = password_hash($_POST['password'], PASSWORD_DEFAULT);
    $email = $_POST['email'];

    // Check if username already exists
    $stmt = $conn->prepare("SELECT * FROM users WHERE username=?");
    $stmt->execute([$username]);
    
    if($stmt->rowCount() > 0){
        header("Location: register.php?error=Username already exists");
        exit();
    }

    // Insert new user into database
    $stmt = $conn->prepare("INSERT INTO users (username, password, email) VALUES (?, ?, ?)");
    $result = $stmt->execute([$username, $password, $email]);

    if($result){
        header("Location: login.php?success=Registration successful! Please login.");
        exit();
    } else {
        header("Location: register.php?error=Error registering. Try again.");
        exit();
    }
} else {
    header("Location: register.php");
}
?>


<?php
session_start();

if(!isset($_SESSION['id'])){
    header("Location: login.php");
    exit();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Dashboard</title>
</head>
<body>
    <h2>Welcome to Your Dashboard, <?=$_SESSION['username']?>!</h2>
    <a href="logout.php">Logout</a>
</body>
</html>


<?php
session_start();
unset($_SESSION['id']);
unset($_SESSION['username']);
session_destroy();

header("Location: login.php");
exit();
?>


<?php
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'root'; // or your DB username
$password = '';     // or your DB password

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}
?>


<?php
session_start();
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Login Page</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 20px;
            background-color: #f0f0f0;
        }
        .login-container {
            max-width: 400px;
            margin: 0 auto;
            background-color: white;
            padding: 20px;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }
        .form-group {
            margin-bottom: 15px;
        }
        input {
            width: 100%;
            padding: 8px;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-sizing: border-box;
        }
        button {
            width: 100%;
            background-color: #4CAF50;
            color: white;
            padding: 10px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
        button:hover {
            background-color: #45a049;
        }
        .error {
            color: red;
            margin-top: 10px;
        }
    </style>
</head>
<body>
    <div class="login-container">
        <h2>Login</h2>
        <?php
        if (isset($_POST['login'])) {
            $username = htmlspecialchars($_POST['username']);
            $password = htmlspecialchars($_POST['password']);

            // Database connection
            define('DB_HOST', 'localhost');
            define('DB_USER', 'root');
            define('DB_PASS', '');
            define('DB_NAME', 'test');

            $conn = mysqli_connect(DB_HOST, DB_USER, DB_PASS, DB_NAME);
            
            if (!$conn) {
                die("Connection failed: " . mysqli_connect_error());
            }

            // Prepare and sanitize the query
            $sql = "SELECT * FROM users WHERE username='" . mysqli_real_escape_string($conn, $username) . "'";
            $result = mysqli_query($conn, $sql);

            if (!$result) {
                die("Query failed: " . mysqli_error($conn));
            }

            $row = mysqli_fetch_assoc($result);
            
            if ($row && password_verify($password, $row['password'])) {
                // Set session variables
                $_SESSION['loggedin'] = true;
                $_SESSION['username'] = $row['username'];
                
                // Redirect to dashboard
                header("Location: dashboard.php");
                exit();
            } else {
                echo "<div class='error'>Invalid username or password!</div>";
            }

            mysqli_close($conn);
        }
        ?>

        <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
            <div class="form-group">
                <label for="username">Username:</label>
                <input type="text" id="username" name="username" placeholder="Enter your username" required>
            </div>
            <div class="form-group">
                <label for="password">Password:</label>
                <input type="password" id="password" name="password" placeholder="Enter your password" required>
            </div>
            <button type="submit" name="login">Login</button>
        </form>
    </div>
</body>
</html>


<?php
session_start();
include('db_connection.php'); // Include your database connection file

function user_login() {
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        $username = mysqli_real_escape_string($GLOBALS['conn'], $_POST['username']);
        $password = $_POST['password'];

        // Check if username exists
        $sql = "SELECT * FROM users WHERE username='$username'";
        $result = mysqli_query($GLOBALS['conn'], $sql);
        
        if (mysqli_num_rows($result) == 0) {
            echo "<script>alert('Account does not exist!');</script>";
            return;
        }

        // Get user details
        $user = mysqli_fetch_assoc($result);
        
        // Verify password
        if (!password_verify($password, $user['password'])) {
            echo "<script>alert('Incorrect password!');</script>";
            return;
        }

        // On successful login
        $_SESSION['username'] = $username;
        $_SESSION['last_activity'] = time(); // Session timeout implementation

        // Redirect to dashboard or home page
        header("Location: dashboard.php");
        exit();
    }
}

// Call the function when form is submitted
if (isset($_POST['login'])) {
    user_login();
}
?>


<?php
session_start();

// Include database configuration file
include('config.php');

if (isset($_POST['submit'])) {
    $username = htmlspecialchars($_POST['username'], ENT_QUOTES, 'UTF-8');
    $password = htmlspecialchars($_POST['password'], ENT_QUOTES, 'UTF-8');

    // Check if username or email exists in the database
    $query = "SELECT * FROM users WHERE username='" . mysqli_real_escape_string($conn, $username) . "' OR email='" . mysqli_real_escape_string($conn, $username) . "'";
    
    $result = mysqli_query($conn, $query);
    
    if (mysqli_num_rows($result) > 0) {
        // Fetch the user data
        $row = mysqli_fetch_assoc($result);
        
        // Verify password
        if (md5($password) == $row['password']) {
            // Password is correct
            $_SESSION['username'] = $row['username'];
            $_SESSION['email'] = $row['email'];
            $_SESSION['id'] = $row['id'];
            
            // Redirect to dashboard page
            header("Location: dashboard.php");
            exit();
        } else {
            $error_message = "Incorrect username or password!";
        }
    } else {
        $error_message = "User does not exist!";
    }
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Login Page</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f0f0f0;
            margin: 0;
            padding: 0;
        }
        
        .container {
            max-width: 400px;
            margin: 50px auto;
            padding: 20px;
            background-color: white;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }
        
        .form-group {
            margin-bottom: 15px;
        }
        
        input[type="text"], input[type="password"] {
            width: 100%;
            padding: 8px;
            border: 1px solid #ddd;
            border-radius: 4px;
        }
        
        button {
            width: 100%;
            padding: 10px;
            background-color: #4CAF50;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
        
        button:hover {
            background-color: #45a049;
        }
        
        .error {
            color: red;
            margin-bottom: 10px;
        }
    </style>
</head>
<body>
    <div class="container">
        <?php
        if (isset($error_message)) {
            echo "<div class='error'>" . $error_message . "</div>";
        }
        ?>
        
        <h2>Login Form</h2>
        
        <form method="post" action="">
            <div class="form-group">
                <input type="text" name="username" placeholder="Username or Email" required>
            </div>
            
            <div class="form-group">
                <input type="password" name="password" placeholder="Password" required>
            </div>
            
            <button type="submit" name="submit">Login</button>
        </form>
        
        <p>Don't have an account? <a href="signup.php">Sign up here</a></p>
        <p>Forgot password? <a href="recover-password.php">Recover password</a></p>
    </div>
</body>
</html>


<?php
// Database configuration
$host = 'localhost';
$usernameDb = 'root';
$passwordDb = '';
$dbname = 'mydatabase';

// Create database connection
$conn = new mysqli($host, $usernameDb, $passwordDb, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function user_login($username, $password, $conn) {
    try {
        // Prepare SQL statement to prevent SQL injection
        $stmt = $conn->prepare("SELECT id, username, password FROM users WHERE username = ?");
        if (!$stmt) {
            throw new Exception("Prepare failed: " . $conn->error);
        }

        // Bind parameters
        $stmt->bind_param("s", $username);

        // Execute the query
        $stmt->execute();
        $result = $stmt->get_result();

        if ($row = $result->fetch_assoc()) {
            // Verify password
            if (password_verify($password, $row['password'])) {
                // Password is correct, start session or create session variables
                session_start();
                $_SESSION['user_id'] = $row['id'];
                $_SESSION['username'] = $row['username'];
                $_SESSION['login_time'] = time();

                return true;
            } else {
                // Incorrect password
                throw new Exception("Incorrect password");
            }
        } else {
            // User not found
            throw new Exception("User not found");
        }

    } catch (Exception $e) {
        // Handle errors appropriately
        error_log("Login Error: " . $e->getMessage());
        return false;
    }
}

// Example usage:
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $username = $_POST['username'];
    $password = $_POST['password'];

    if (user_login($username, $password, $conn)) {
        // Redirect to dashboard or home page
        header("Location: dashboard.php");
        exit();
    } else {
        // Show error message
        echo "Login failed. Please check your credentials.";
    }
}

// Close database connection
$conn->close();
?>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'login_system';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

// Start session
session_start();

// Register user
if(isset($_POST['register'])) {
    $email = $_POST['email'];
    $password = password_hash($_POST['password'], PASSWORD_DEFAULT);

    try {
        $stmt = $conn->prepare("INSERT INTO users (email, password) VALUES (:email, :password)");
        $stmt->execute(array(
            ':email' => $email,
            ':password' => $password
        ));
        echo "Registration successful!";
    } catch(PDOException $e) {
        die("Error: " . $e->getMessage());
    }
}

// Login user
if(isset($_POST['login'])) {
    $email = $_POST['email'];
    $password = $_POST['password'];

    try {
        $stmt = $conn->prepare("SELECT * FROM users WHERE email = :email");
        $stmt->execute(array(':email' => $email));
        $user = $stmt->fetch(PDO::FETCH_ASSOC);

        if($user) {
            if(password_verify($password, $user['password'])) {
                // Session variables
                $_SESSION['id'] = $user['id'];
                $_SESSION['email'] = $user['email'];
                
                header("Location: welcome.php");
                exit();
            } else {
                echo "Incorrect password!";
            }
        } else {
            echo "User does not exist!";
        }
    } catch(PDOException $e) {
        die("Error: " . $e->getMessage());
    }
}

// Logout user
if(isset($_GET['logout'])) {
    session_unset();
    session_destroy();
    header("Location: index.php");
    exit();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login System</title>
</head>
<body>
    <?php if(!isset($_SESSION['email'])) { ?>
        <!-- Registration Form -->
        <h2>Register</h2>
        <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
            Email: <input type="text" name="email"><br><br>
            Password: <input type="password" name="password"><br><br>
            <input type="submit" name="register" value="Register">
        </form>

        <!-- Login Form -->
        <h2>Login</h2>
        <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
            Email: <input type="text" name="email"><br><br>
            Password: <input type="password" name="password"><br><br>
            <input type="submit" name="login" value="Login">
        </form>
    <?php } else { ?>
        <!-- Welcome message -->
        <h2>Welcome, <?php echo $_SESSION['email']; ?></h2>
        <a href="?logout">Logout</a>
    <?php } ?>
</body>
</html>


<?php
session_start();

// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$db_name = 'my_database';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function login() {
    global $conn;

    // Check if form is submitted
    if (isset($_POST['login'])) {
        $email = mysqli_real_escape_string($conn, $_POST['email']);
        $password = $_POST['password'];

        // Validate inputs
        if (empty($email) || empty($password)) {
            echo "Please fill in all fields";
            return;
        }

        // Query database for user with matching email
        $sql = "SELECT * FROM users WHERE email='$email'";
        $result = mysqli_query($conn, $sql);

        if (mysqli_num_rows($result) == 0) {
            echo "Email not found";
            return;
        }

        $user = mysqli_fetch_assoc($result);
        
        // Verify password
        if (!password_verify($password, $user['password'])) {
            echo "Incorrect password";
            return;
        }

        // Start session and store user data
        $_SESSION['id'] = $user['id'];
        $_SESSION['email'] = $user['email'];
        $_SESSION['name'] = $user['name'];
        $_SESSION['is_admin'] = $user['is_admin'];

        // Redirect to dashboard or home page
        header('Location: dashboard.php');
        exit();
    }
}

login();

mysqli_close($conn);
?>


<?php
session_start();

// Database connection details
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

// Create database connection
$conn = new mysqli($host, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Sanitize input data
    $username_input = htmlspecialchars(trim($_POST['username']));
    $password_input = htmlspecialchars(trim($_POST['password']));

    // Check if username and password are not empty
    if (empty($username_input) || empty($password_input)) {
        echo "Please fill in all fields.";
        exit();
    }

    // Prepare the SQL statement to prevent SQL injection
    $stmt = $conn->prepare("SELECT id, username, password FROM users WHERE username = ?");
    $stmt->bind_param("s", $username_input);
    $stmt->execute();

    $result = $stmt->get_result();
    
    if ($result->num_rows == 1) {
        $row = $result->fetch_assoc();
        
        // Verify the password
        if (password_verify($password_input, $row['password'])) {
            // Password is correct
            $_SESSION['id'] = $row['id'];
            $_SESSION['username'] = $row['username'];
            
            // Redirect to dashboard or home page
            header("Location: dashboard.php");
            exit();
        } else {
            echo "Incorrect password.";
        }
    } else {
        echo "Username not found.";
    }
}

// Close the database connection
$conn->close();
?>


// When creating a new user:
$password_hash = password_hash($password_input, PASSWORD_DEFAULT);
$stmt = $conn->prepare("INSERT INTO users (username, password) VALUES (?, ?)");
$stmt->bind_param("ss", $username_input, $password_hash);
$stmt->execute();


<?php
// Connect to the database
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "myDB";

// Create connection
$conn = mysqli_connect($servername, $username, $password, $dbname);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function login_user() {
    global $conn;

    // Check if form is submitted
    if (isset($_POST['login'])) {
        // Get user input
        $username = $_POST['username'];
        $password = $_POST['password'];

        // Sanitize inputs
        $username = mysqli_real_escape_string($conn, $trim(username));
        $password = mysqli_real_escape_string($conn, trim($password));

        // Query the database for the user
        $sql = "SELECT * FROM users WHERE username='$username' OR email='$username'";
        $result = mysqli_query($conn, $sql);

        if (mysqli_num_rows($result) > 0) {
            // Get user data
            $row = mysqli_fetch_assoc($result);
            
            // Verify password
            if (password_verify($password, $row['password'])) {
                // Start session
                session_start();
                
                // Store user details in session
                $_SESSION['user_id'] = $row['id'];
                $_SESSION['username'] = $row['username'];
                $_SESSION['email'] = $row['email'];
                $_SESSION['login_time'] = time();

                // Optional: Set session timeout
                $_SESSION['timeout'] = time() + 30*60; // 30 minutes
                
                // Redirect to dashboard or home page
                header("Location: dashboard.php");
                exit();
            } else {
                $error = "Incorrect password";
                return $error;
            }
        } else {
            $error = "Username not found";
            return $error;
        }
    }
}

// Call the login function
if (isset($_POST['login'])) {
    $result = login_user();
    if ($result != "") {
        echo $result;
    }
}
?>


$hashed_password = password_hash($plain_password, PASSWORD_DEFAULT);


<?php
// Connect to the database
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "myDB";

// Create connection
$conn = mysqli_connect($servername, $username, $password, $dbname);

function login_user() {
    global $conn;

    if (isset($_POST['login'])) {
        $username = trim($_POST['username']);
        $password = trim($_POST['password']);

        // Prepare SQL statement to prevent injection
        $stmt = mysqli_stmt_init($conn);
        $sql = "SELECT * FROM users WHERE username=? OR email=?";
        
        if (mysqli_stmt_prepare($stmt, $sql)) {
            mysqli_stmt_bind_param($stmt, "ss", $username, $username);
            mysqli_stmt_execute($stmt);
            
            $result = mysqli_stmt_get_result($stmt);
            
            if ($row = mysqli_fetch_assoc($result)) {
                if (password_verify($password, $row['password'])) {
                    session_start();
                    
                    $_SESSION['user_id'] = $row['id'];
                    $_SESSION['username'] = $row['username'];
                    $_SESSION['email'] = $row['email'];
                    $_SESSION['login_time'] = time();
                    $_SESSION['timeout'] = time() + 30*60; // 30 minutes
                    
                    header("Location: dashboard.php");
                    exit();
                } else {
                    return "Incorrect password";
                }
            } else {
                return "Username not found";
            }
        }
    }
}

if (isset($_POST['login'])) {
    $result = login_user();
    if ($result != "") {
        echo $result;
    }
}
?>


<?php
// Database configuration
$host = 'localhost';
$user = 'root';
$password = '';
$dbname = 'user_login';

// Create connection
$conn = new mysqli($host, $user, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function login($username_email, $password) {
    global $conn;
    
    // Sanitize inputs to prevent SQL injection
    $username_email = mysqli_real_escape_string($conn, $username_email);
    $password = mysqli_real_escape_string($conn, $password);

    // Query the database for user with matching username or email
    $sql = "SELECT * FROM users WHERE username='$username_email' OR email='$username_email'";
    $result = $conn->query($sql);

    if ($result->num_rows == 1) {
        $row = $result->fetch_assoc();
        
        // Verify password
        if (password_verify($password, $row['password'])) {
            // Authentication successful
            
            // Start session
            session_start();
            
            // Store user data in session variables
            $_SESSION['id'] = $row['id'];
            $_SESSION['username'] = $row['username'];
            $_SESSION['email'] = $row['email'];
            $_SESSION['login_time'] = time();

            // Redirect to dashboard or home page
            header("Location: dashboard.php");
            exit();
        } else {
            // Password doesn't match
            return "Incorrect password";
        }
    } else {
        // No user found with that username/email
        return "Username or email not found";
    }
}

// Close database connection
$conn->close();
?>


<?php
include 'login_function.php';

if (isset($_POST['submit'])) {
    $username_email = $_POST['username_email'];
    $password = $_POST['password'];

    $error = login($username_email, $password);
    
    if ($error) {
        echo "<div class='error'>$error</div>";
    }
}
?>


<?php
// Database configuration
$host = "localhost";
$username_db = "root";
$password_db = "";
$dbname = "login_system";

// Connect to the database using mysqli
$conn = new mysqli($host, $username_db, $password_db, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function login_user() {
    global $conn;
    
    // Check if form is submitted
    if (isset($_POST['login'])) {
        $username = trim($_POST['username']);
        $password = $_POST['password'];
        
        // Sanitize the username input
        $username = mysqli_real_escape_string($conn, $username);
        
        // Check if username exists in database
        $stmt = $conn->prepare("SELECT id, username, password FROM users WHERE username = ?");
        $stmt->bind_param("s", $username);
        $stmt->execute();
        $result = $stmt->get_result();
        
        if ($result->num_rows > 0) {
            // Get user data
            $user = $result->fetch_assoc();
            
            // Verify password
            if (password_verify($password, $user['password'])) {
                // Start session and store user details
                session_start();
                $_SESSION['id'] = $user['id'];
                $_SESSION['username'] = $user['username'];
                
                // Redirect to dashboard or home page
                header("Location: dashboard.php");
                exit();
            } else {
                // Password is incorrect
                echo "Incorrect password!";
            }
        } else {
            // Username does not exist
            echo "Username does not exist!";
        }
    }
}

// Call the login function
login_user();

// Close database connection
$conn->close();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login Page</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 20px;
            background-color: #f3f3f3;
        }
        .login-container {
            max-width: 400px;
            margin: 0 auto;
            padding: 20px;
            background-color: white;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }
        .form-group {
            margin-bottom: 20px;
        }
        input {
            width: 100%;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-sizing: border-box;
        }
        button {
            width: 100%;
            background-color: #4CAF50;
            color: white;
            padding: 10px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
        button:hover {
            background-color: #45a049;
        }
    </style>
</head>
<body>
    <div class="login-container">
        <h2>Login</h2>
        <form method="POST" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
            <div class="form-group">
                <label for="username">Username:</label>
                <input type="text" id="username" name="username" required>
            </div>
            <div class="form-group">
                <label for="password">Password:</label>
                <input type="password" id="password" name="password" required>
            </div>
            <button type="submit" name="login">Login</button>
        </form>
    </div>
</body>
</html>


<?php
// config.php - Database configuration file
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

// login.php - Login form and processing
session_start();

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Sanitize input data
    $username = htmlspecialchars(trim($_POST['username']));
    $password = $_POST['password'];

    try {
        // Prepare the query to prevent SQL injection
        $stmt = $conn->prepare("SELECT id, username, password FROM users WHERE username = ?");
        $stmt->execute([$username]);
        
        $user = $stmt->fetch(PDO::FETCH_ASSOC);

        if ($user) {
            // Verify the password
            if (password_verify($password, $user['password'])) {
                // Set session variables
                $_SESSION['loggedin'] = true;
                $_SESSION['id'] = $user['id'];
                $_SESSION['username'] = $user['username'];

                // Optional: Set a CSRF token for added security
                if (!isset($_SESSION['csrf_token'])) {
                    $_SESSION['csrf_token'] = bin2hex(random_bytes(32));
                }

                // Redirect to dashboard or home page after successful login
                header("Location: dashboard.php");
                exit();
            } else {
                $error = "Invalid password";
            }
        } else {
            $error = "Username not found";
        }
    } catch (PDOException $e) {
        die("An error occurred: " . $e->getMessage());
    }
}

// Display the login form
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Login Page</title>
</head>
<body>
    <?php if (isset($error)): ?>
        <div style="color: red;"><?php echo $error; ?></div><br>
    <?php endif; ?>

    <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="POST">
        Username:<br>
        <input type="text" name="username" required><br>
        Password:<br>
        <input type="password" name="password" required><br><br>
        <input type="submit" value="Login">
    </form>

    <!-- Optional CSRF token -->
    <input type="hidden" name="csrf_token" value="<?php echo isset($_SESSION['csrf_token']) ? $_SESSION['csrf_token'] : ''; ?>">
</body>
</html>


<?php
// Database configuration file
include('config.php');

function sanitizeInput($data) {
    $data = trim($data);
    $data = stripslashes($data);
    $data = htmlspecialchars($data);
    return $data;
}

function loginUser($usernameOrEmail, $password) {
    global $pdo;

    try {
        // Sanitize inputs
        $usernameOrEmail = sanitizeInput($usernameOrEmail);
        $password = sanitizeInput($password);

        // Check if input fields are not empty
        if (empty($usernameOrEmail) || empty($password)) {
            return "Please fill in all required fields.";
        }

        // Prepare and execute the SQL query
        $stmt = $pdo->prepare("SELECT * FROM users WHERE username = ? OR email = ?");
        $stmt->execute([$usernameOrEmail, $usernameOrEmail]);

        $user = $stmt->fetch(PDO::FETCH_ASSOC);

        if (!$user) {
            return "Invalid username or email.";
        }

        // Verify password
        if (!password_verify($password, $user['password'])) {
            return "Incorrect password.";
        }

        // Set session variables
        $_SESSION['id'] = $user['id'];
        $_SESSION['username'] = $user['username'];
        $_SESSION['email'] = $user['email'];
        $_SESSION['logged_in'] = true;

        // Success login
        return "Login successful.";

    } catch (PDOException $e) {
        die("Connection failed: " . $e->getMessage());
    }
}

// Example usage:

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    if (!empty($_POST['usernameOrEmail']) && !empty($_POST['password'])) {
        $error = loginUser($_POST['usernameOrEmail'], $_POST['password']);
        
        if ($error != "Login successful.") {
            echo "<div class='alert alert-danger'>$error</div>";
        } else {
            // Redirect to dashboard or home page
            header("Location: dashboard.php");
            exit();
        }
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login Page</title>
</head>
<body>
    <?php if (!empty($error)): ?>
        <div class="alert alert-danger"><?php echo $error; ?></div>
    <?php endif; ?>

    <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
        <input type="text" name="usernameOrEmail" placeholder="Username or Email">
        <br>
        <input type="password" name="password" placeholder="Password">
        <br>
        <button type="submit">Login</button>
    </form>

    Don't have an account? <a href="register.php">Register here</a>.
</body>
</html>


<?php
// Database connection details
$host = 'localhost';
$dbname = 'your_database_name';
$dbuser = 'your_database_user';
$dbpass = 'your_database_password';

try {
    // Create database connection
    $conn = new PDO("mysql:host=$host;dbname=$ dbname", $dbuser, $dbpass);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

    function loginUser($username, $password) {
        global $conn;

        // Check if username and password are provided
        if (empty($username) || empty($password)) {
            return "Username and password are required!";
        }

        try {
            // Prepare the query to prevent SQL injection
            $stmt = $conn->prepare("SELECT * FROM users WHERE username = ?");
            $stmt->execute([$username]);
            
            $user = $stmt->fetch(PDO::FETCH_ASSOC);

            if ($user) {
                // Verify password
                if (password_verify($password, $user['password'])) {
                    // Password is correct
                    session_start();
                    $_SESSION['logged_in'] = true;
                    $_SESSION['username'] = $username;
                    
                    // Redirect to dashboard or home page
                    header("Location: dashboard.php");
                    exit();
                } else {
                    return "Incorrect password!";
                }
            } else {
                return "Username not found!";
            }

        } catch (PDOException $e) {
            return "Database error occurred: " . $e->getMessage();
        }
    }

} catch (PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}
?>


// In your login form processing file (e.g., login.php)
session_start();
include 'database_connection.php'; // Include the above code

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST['username'];
    $password = $_POST['password'];

    $result = loginUser($username, $password);

    if ($result === true) {
        // Login successful
        header("Location: dashboard.php");
        exit();
    } else {
        // Display error message
        echo $result;
    }
}


<?php
session_start();

// Database configuration
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

try {
    // Create a database connection using PDO
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Function to sanitize input data
    function sanitize($data) {
        return htmlspecialchars(trim($data));
    }

    $email = sanitize($_POST['email']);
    $password = $_POST['password'];

    // Validate email and password are not empty
    if (empty($email) || empty($password)) {
        die("Email and password are required!");
    }

    // Check if email is valid
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        die("Invalid email format!");
    }

    try {
        // Prepare SQL statement to select user by email
        $stmt = $conn->prepare("SELECT * FROM users WHERE email = :email");
        $stmt->execute(['email' => $email]);
        
        // Check if user exists
        $user = $stmt->fetch(PDO::FETCH_ASSOC);
        if (!$user) {
            die("User does not exist!");
        }

        // Verify password
        if (!password_verify($password, $user['password'])) {
            die("Incorrect password!");
        }

        // Start session and store user data
        $_SESSION['user_id'] = $user['id'];
        $_SESSION['username'] = $user['username'];
        $_SESSION['email'] = $email;
        $_SESSION['logged_in'] = true;

        // Optional: Set last login time
        date_default_timezone_set('UTC');
        $last_login = date('Y-m-d H:i:s');
        
        // Update last login in database
        $updateStmt = $conn->prepare("UPDATE users SET last_login = :last_login WHERE id = :id");
        $updateStmt->execute([
            'last_login' => $last_login,
            'id' => $user['id']
        ]);

        // Optional: Remember me functionality using cookies
        if (isset($_POST['remember'])) {
            setcookie('email', $email, time() + 3600*24*7, '/', null, true, true); // Cookie valid for 7 days
        }

        // Redirect to dashboard or home page
        header("Location: dashboard.php");
        exit();

    } catch (PDOException $e) {
        die("Database error: " . $e->getMessage());
    }
}

// Close database connection
$conn = null;

?>


<?php
session_start();

function loginUser($username, $password) {
    try {
        // Sanitize inputs to prevent SQL injection
        $username = htmlspecialchars(trim($username));
        $password = htmlspecialchars(trim($password));

        // Database connection details
        $host = 'localhost';
        $dbUsername = 'your_db_username';
        $dbPassword = 'your_db_password';
        $dbName = 'your_database_name';

        // Create connection
        $conn = new mysqli($host, $dbUsername, $dbPassword, $dbName);

        // Check connection
        if ($conn->connect_error) {
            throw new Exception("Connection failed: " . $conn->connect_error);
        }

        // Prepare SQL statement to prevent SQL injection
        $stmt = $conn->prepare("SELECT id, username, password FROM users WHERE username = ?");
        $stmt->bind_param("s", $username);

        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows == 0) {
            return array('success' => false, 'message' => 'Invalid username or password');
        }

        $user = $result->fetch_assoc();

        // Verify the password
        if (!password_verify($password, $user['password'])) {
            return array('success' => false, 'message' => 'Invalid username or password');
        }

        // Start session and store user data
        $_SESSION['user_id'] = $user['id'];
        $_SESSION['username'] = $user['username'];

        // Regenerate session ID to prevent session fixation
        session_regenerate(true);

        return array('success' => true, 'message' => 'Login successful!');

    } catch (Exception $e) {
        return array('success' => false, 'message' => 'An error occurred: ' . $e->getMessage());
    } finally {
        // Close database connection
        if ($conn) {
            $conn->close();
        }
    }
}

// Example usage:
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $username = $_POST['username'];
    $password = $_POST['password'];

    $loginResult = loginUser($username, $password);

    if ($loginResult['success']) {
        header('Location: dashboard.php');
        exit();
    } else {
        echo $loginResult['message'];
    }
}
?>


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login Page</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f0f0f0;
            margin: 0;
            padding: 0;
        }
        .container {
            width: 400px;
            margin: 50px auto;
            padding: 20px;
            background-color: white;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }
        .form-group {
            margin-bottom: 15px;
        }
        input {
            width: 100%;
            padding: 8px;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-sizing: border-box;
        }
        button {
            width: 100%;
            background-color: #4CAF50;
            color: white;
            padding: 14px 20px;
            margin: 8px 0;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
        button:hover {
            background-color: #45a049;
        }
        .error {
            color: red;
            margin-bottom: 10px;
        }
    </style>
</head>
<body>
    <div class="container">
        <?php
        session_start();
        
        // Database configuration
        $dbHost = 'localhost';
        $dbUser = 'root';
        $dbPass = '';
        $dbName = 'user_login';

        // Connect to database
        $conn = mysqli_connect($dbHost, $dbUser, $dbPass, $dbName);
        
        if (!$conn) {
            die("Connection failed: " . mysqli_connect_error());
        }

        // Check if form is submitted
        if (isset($_POST['login'])) {
            $username = mysqli_real_escape_string($conn, trim($_POST['username']));
            $password = mysqli_real_escape_string($conn, trim($_POST['password']));

            // Validate inputs
            if (empty($username) || empty($password)) {
                echo "<div class='error'>Please fill in all fields</div>";
            } else {
                try {
                    // Prepare and execute the query
                    $stmt = $conn->prepare("SELECT * FROM users WHERE username = ?");
                    $stmt->bind_param("s", $username);
                    $stmt->execute();
                    $result = $stmt->get_result();

                    if ($row = $result->fetch_assoc()) {
                        // Verify password
                        if (password_verify($password, $row['password'])) {
                            // Start session and store user data
                            $_SESSION['id'] = $row['id'];
                            $_SESSION['username'] = $row['username'];
                            $_SESSION['login_time'] = time();

                            // Redirect to dashboard or home page
                            header("Location: dashboard.php");
                            exit();
                        } else {
                            echo "<div class='error'>Incorrect password</div>";
                        }
                    } else {
                        echo "<div class='error'>Username not found</div>";
                    }
                } catch (Exception $e) {
                    echo "Error: " . $e->getMessage();
                }
            }
        }
        ?>

        <h2>Login Form</h2>
        <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="POST">
            <div class="form-group">
                <input type="text" name="username" placeholder="Username" required>
            </div>
            <div class="form-group">
                <input type="password" name="password" placeholder="Password" required>
            </div>
            <button type="submit" name="login">Login</button>
        </form>
        <p>Forgot password? <a href="#">Click here</a></p>
    </div>
</body>
</html>


<?php
session_start();

// Include database configuration
include('db_config.php');

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Sanitize input data
    $username_email = htmlspecialchars(trim($_POST['username_email']));
    $password = trim($_POST['password']);
    
    try {
        $stmt = $pdo->prepare("SELECT * FROM users WHERE username = :username OR email = :email");
        $stmt->execute(['username' => $username_email, 'email' => $username_email]);
        $user = $stmt->fetch(PDO::FETCH_ASSOC);

        if ($user) {
            // Verify password
            if (password_verify($password, $user['password'])) {
                // Set session variables
                $_SESSION['id'] = $user['id'];
                $_SESSION['username'] = $user['username'];
                $_SESSION['success'] = "You have successfully logged in.";

                // Set remember me cookie
                if (isset($_POST['remember_me'])) {
                    $cookie_value = bin2hex(openssl_random_pseudo_bytes(16));
                    setcookie('remember', $cookie_value, time() + 3600 * 24 * 7, '/', null, true, true);
                    $_SESSION['remember'] = $cookie_value;
                }

                // Redirect to dashboard
                header("Location: dashboard.php");
                exit();
            } else {
                $_SESSION['error'] = "Incorrect password.";
            }
        } else {
            $_SESSION['error'] = "Username or email not found.";
        }
    } catch (PDOException $e) {
        die("Error: " . $e->getMessage());
    }
}
?>
<!DOCTYPE html>
<html>
<head>
    <title>Login</title>
    <!-- Google reCAPTCHA -->
    <script src="https://www.google.com/recaptcha/api.js" async defer></script>
</head>
<body>
<?php
if (isset($_SESSION['error'])) {
    echo "<p style='color: red;'>" . $_SESSION['error'] . "</p>";
    unset($_SESSION['error']);
}
?>
<form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="POST">
    <input type="hidden" name="token" value="<?php echo $_SESSION['csrf_token']; ?>">
    <label>Username or Email:</label>
    <input type="text" name="username_email" required><br>
    
    <label>Password:</label>
    <input type="password" name="password" required><br>
    
    <input type="checkbox" name="remember_me"> Remember me<br>
    
    <!-- reCAPTCHA -->
    <div class="g-recaptcha" data-sitekey="your_site_key"></div><br>
    
    <input type="submit" value="Login">
</form>
<a href="forgot_password.php">Forgot Password?</a>
<script src='https://www.google.com/recaptcha/api.js'></script>
</body>
</html>


<?php
// Database connection parameters
$host = 'localhost';
$username = 'root';
$password = '';
$database = 'your_database';

// Create connection
$conn = new mysqli($host, $username, $password, $database);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}
?>


<?php
session_start();

function user_login($username, $password, $conn) {
    // SQL injection prevention using prepared statements
    $stmt = $conn->prepare("SELECT id, username, password FROM users WHERE username = ?");
    $stmt->bind_param("s", $username);
    
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows == 1) {
        $user_data = $result->fetch_assoc();
        // Verify the password
        if (password_verify($password, $user_data['password'])) {
            // Session management
            $_SESSION['logged_in'] = true;
            $_SESSION['user_id'] = $user_data['id'];
            $_SESSION['username'] = $user_data['username'];
            
            // Optional: Set remember me cookie
            if (isset($_POST['remember_me'])) {
                setcookie('remember_me', $username, time() + 3600);
            }
            
            return true;
        } else {
            return "Incorrect password.";
        }
    } else {
        return "Username not found.";
    }
}
?>


<?php
if (isset($_POST['login'])) {
    $username = $_POST['username'];
    $password = $_POST['password'];
    
    // Call the login function
    $result = user_login($username, $password, $conn);
    
    if ($result === true) {
        header("Location: dashboard.php");
    } else {
        echo "<div class='error'>" . $result . "</div>";
    }
}
?>


<?php
function logout() {
    session_unset();
    session_destroy();
    // Destroy remember me cookie if it exists
    setcookie('remember_me', '', time() - 3600);
    header("Location: login.php");
}
?>


<?php
session_start();
require_once 'db_config.php';

function user_login($username, $password, $conn) {
    try {
        $stmt = $conn->prepare("SELECT id, username, password FROM users WHERE username = ?");
        $stmt->bind_param("s", $username);
        $stmt->execute();
        
        $result = $stmt->get_result();
        
        if ($result->num_rows == 1) {
            $user_data = $result->fetch_assoc();
            
            if (password_verify($password, $user_data['password'])) {
                // Session management
                $_SESSION['logged_in'] = true;
                $_SESSION['user_id'] = $user_data['id'];
                $_SESSION['username'] = $user_data['username'];
                
                return true;
            } else {
                return "Incorrect password.";
            }
        } else {
            return "Username not found.";
        }
    } catch (Exception $e) {
        error_log("Login Error: " . $e->getMessage());
        return "An error occurred during login. Please try again later.";
    }
}

if (isset($_POST['login'])) {
    try {
        $username = $_POST['username'];
        $password = $_POST['password'];
        
        // Validate inputs
        if (empty($username) || empty($password)) {
            throw new Exception("Username and password are required.");
        }
        
        $result = user_login($username, $password, $conn);
        
        if ($result === true) {
            header("Location: dashboard.php");
            exit();
        } else {
            echo "<div class='error'>" . $result . "</div>";
        }
    } catch (Exception $e) {
        echo "<div class='error'>" . $e->getMessage() . "</div>";
    }
}
?>


<?php
// Start session
session_start();

// Database configuration
$host = 'localhost';
$dbusername = 'root';
$dbpassword = '';
$dbname = 'login';

// Connect to database
$conn = new mysqli($host, $dbusername, $dbpassword, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Handle login form submission
if (isset($_POST['username']) && isset($_POST['password'])) {
    // Sanitize input
    $username = mysqli_real_escape_string($conn, $_POST['username']);
    $password = $_POST['password'];

    // Query database for user with provided username
    $sql = "SELECT * FROM users WHERE username = '$username'";
    $result = $conn->query($sql);

    if ($result->num_rows == 0) {
        // User doesn't exist
        $_SESSION['error'] = "Invalid username or password";
    } else {
        // Get user data
        $user = $result->fetch_assoc();
        // Verify password
        if (password_verify($password, $user['password'])) {
            // Password is correct
            $_SESSION['userLoggedIn'] = true;
            $_SESSION['userId'] = $user['id'];
            // Redirect to dashboard or home page
            header("Location: dashboard.php");
            exit();
        } else {
            // Incorrect password
            $_SESSION['error'] = "Invalid username or password";
        }
    }
}

// Close database connection
$conn->close();

?>

<!DOCTYPE html>
<html>
<head>
    <title>Login Page</title>
</head>
<body>
    <?php if (isset($_SESSION['error'])) { ?>
        <div style="color: red; margin-bottom: 10px;"><?php echo $_SESSION['error']; ?></div>
    <?php unset($_SESSION['error']); } ?>

    <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
        Username:<br>
        <input type="text" name="username" required><br>
        Password:<br>
        <input type="password" name="password" required><br><br>
        <input type="submit" value="Login">
    </form>

</body>
</html>


<?php
session_start();

// Database configuration
$host = 'localhost';
$username_db = 'root';
$password_db = '';
$db_name = 'user_login';

// Connect to the database
$conn = new mysqli($host, $username_db, $password_db, $db_name);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Check if form is submitted
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    // Sanitize inputs
    $username = htmlspecialchars(trim($_POST['username']));
    $password = $_POST['password'];

    // Prepare and bind the SQL statement
    $stmt = $conn->prepare("SELECT id, username, password FROM users WHERE username = ?");
    $stmt->bind_param('s', $username);
    $stmt->execute();

    // Get result
    $result = $stmt->get_result();
    if ($result->num_rows === 0) {
        die("Invalid credentials");
    }

    $user = $result->fetch_assoc();

    // Verify password
    if (!password_verify($password, $user['password'])) {
        die("Invalid credentials");
    }

    // Set session variables
    $_SESSION['user_id'] = $user['id'];
    $_SESSION['username'] = $user['username'];
    $_SESSION['login_time'] = time();

    // Redirect to dashboard
    header('Location: dashboard.php');
    exit();
}

// If not logged in, show login form
if (!isset($_SESSION['user_id'])) {
    ?>

    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Login</title>
        <style>
            body {
                font-family: Arial, sans-serif;
                display: flex;
                justify-content: center;
                align-items: center;
                height: 100vh;
                margin: 0;
                background-color: #f0f0f0;
            }
            .container {
                background-color: white;
                padding: 20px;
                border-radius: 5px;
                box-shadow: 0 0 10px rgba(0,0,0,0.1);
                width: 300px;
            }
            h2 {
                text-align: center;
                color: #333;
            }
            .form-group {
                margin-bottom: 15px;
            }
            input[type="text"], input[type="password"] {
                width: 100%;
                padding: 8px;
                border: 1px solid #ddd;
                border-radius: 4px;
                box-sizing: border-box;
            }
            button {
                width: 100%;
                padding: 10px;
                background-color: #4CAF50;
                color: white;
                border: none;
                border-radius: 4px;
                cursor: pointer;
            }
            button:hover {
                background-color: #45a049;
            }
            .error {
                color: red;
                margin-top: 10px;
                text-align: center;
            }
        </style>
    </head>
    <body>
        <div class="container">
            <h2>Login</h2>
            <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
                <div class="form-group">
                    <input type="text" name="username" placeholder="Username" required>
                </div>
                <div class="form-group">
                    <input type="password" name="password" placeholder="Password" required>
                </div>
                <button type="submit">Login</button>
            </form>
        </div>
    </body>
    </html>

    <?php
}
?>


<?php
session_start();

// Database connection
$conn = new mysqli($host, $username_db, $password_db, $db_name);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    $username = htmlspecialchars(trim($_POST['username']));
    $password = $_POST['password'];
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

    $stmt = $conn->prepare("INSERT INTO users (username, password) VALUES (?, ?)");
    $stmt->bind_param('ss', $username, $hashed_password);
    
    if ($stmt->execute()) {
        header('Location: login.php');
    } else {
        die("Error registering user");
    }
}
?>


<?php
session_start();
unset($_SESSION['user_id']);
unset($_SESSION['username']);
unset($_SESSION['login_time']);
session_destroy();

header('Location: login.php');
exit();
?>


<?php
// Database configuration
$host = 'localhost';
$username_db = 'root'; // Your database username
$password_db = '';     // Your database password
$dbname = 'testdb';    // Your database name

// Create connection
$conn = new mysqli($host, $username_db, $password_db, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}
?>


<?php
session_start();

if (isset($_POST['login'])) {
    // Get user inputs
    $username = $_POST['username'];
    $password = $_POST['password'];

    // Sanitize the inputs to prevent SQL injection
    $username = mysqli_real_escape_string($conn, trim($username));
    $password = mysqli_real_escape_string($conn, trim($password));

    // Hash the password (you should use a strong hashing method like bcrypt)
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

    // Query to check if the username and password exist in the database
    $sql = "SELECT * FROM users WHERE username = '$username'";
    $result = $conn->query($sql);

    if ($result->num_rows == 1) {
        // Fetch user data
        $row = $result->fetch_assoc();
        // Verify the password
        if (password_verify($password, $row['password'])) {
            // Start a session and store some user data
            $_SESSION['username'] = $username;
            $_SESSION['user_id'] = $row['id'];
            $_SESSION['logged_in'] = true;

            // Redirect to dashboard or home page
            header("Location: dashboard.php");
            exit();
        } else {
            // Password doesn't match
            $error_message = "Invalid username or password";
        }
    } else {
        // Username doesn't exist
        $error_message = "Invalid username or password";
    }
}
?>


<?php
session_start();
unset($_SESSION['username']);
unset($_SESSION['user_id']);
unset($_SESSION['logged_in']);

// Destroy the session
session_unset();
session_destroy();

// Redirect to login page
header("Location: login.php");
exit();
?>


<?php
// Configuration constants
define('DB_HOST', 'localhost');
define('DB_USER', 'username');
define('DB_PASS', 'password');
define('DB_NAME', 'database_name');

// Database connection
$mysqli = new mysqli(DB_HOST, DB_USER, DB_PASS, DB_NAME);

if ($mysqli->connect_error) {
    die("Connection failed: " . $mysqli->connect_error);
}

// Session start
session_start();

// Login function
function user_login() {
    global $mysqli;

    // Check if form is submitted
    if (isset($_POST['login'])) {
        // Sanitize input
        $username = strip_tags(htmlspecialchars(trim($_POST['username'])));
        $password = strip_tags(htmlspecialchars(trim($_POST['password'])));

        // Validate input
        if ($username == '' || $password == '') {
            echo "<div class='alert alert-danger'>Please fill in all fields</div>";
            return;
        }

        // Check username or email exists in database
        $stmt = $mysqli->prepare("SELECT id, username, password, role FROM users WHERE username = ? OR email = ?");
        $stmt->bind_param('ss', $username, $username);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows == 1) {
            $user = $result->fetch_assoc();

            // Verify password
            if (password_verify($password, $user['password'])) {

                // Set session variables
                $_SESSION['id'] = $user['id'];
                $_SESSION['username'] = $user['username'];
                $_SESSION['role'] = $user['role'];
                $_SESSION['logged_in'] = true;

                // Redirect based on user role
                if ($user['role'] == 'admin') {
                    header("Location: admin_dashboard.php");
                } else {
                    header("Location: user_dashboard.php");
                }
                exit();
            } else {
                echo "<div class='alert alert-danger'>Invalid username or password</div>";
            }
        } else {
            echo "<div class='alert alert-danger'>Invalid username or password</div>";
        }
    }

    // Close statement
    $stmt->close();
}

// Call the login function if form is submitted
if (isset($_POST['login'])) {
    user_login();
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login</title>
    <!-- Add your CSS here -->
</head>
<body>
    <div class="container">
        <h2>Login</h2>
        <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="POST">
            <input type="text" name="username" placeholder="Username or Email" required><br>
            <input type="password" name="password" placeholder="Password" required><br>
            <button type="submit" name="login">Login</button>
        </form>
    </div>

    <!-- Add your scripts here -->
</body>
</html>


<?php
// database connection details
$host = 'localhost';
$user = 'username';
$password = 'password';
$dbname = 'database_name';

// create connection
$conn = new mysqli($host, $user, $password, $dbname);

// check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function login_user($username, $password, $conn) {
    // Sanitize input to prevent SQL injection
    $username = $conn->real_escape_string($username);
    $password = $conn->real_escape_string($password);

    // Query the database for the user
    $query = "SELECT * FROM users WHERE username = '$username'";
    $result = $conn->query($query);

    if ($result->num_rows == 1) {
        $row = $result->fetch_assoc();
        
        // Verify password
        if (password_verify($password, $row['password'])) {
            // Create session variables
            $_SESSION['user_id'] = $row['id'];
            $_SESSION['username'] = $row['username'];
            $_SESSION['last_activity'] = time();

            // Set security-related session options
            ini_set('session.cookie_httponly', 1);
            ini_set('session.cookie_secure', 1);
            session_regenerate(true); // Regenerate session ID to prevent fixation

            return true;
        } else {
            return "Incorrect password";
        }
    } else {
        return "Username does not exist";
    }
}

// Example usage:
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $username = $_POST['username'];
    $password = $_POST['password'];

    // Start session
    session_start();

    $login_result = login_user($username, $password, $conn);

    if ($login_result === true) {
        header("Location: dashboard.php");
        exit();
    } else {
        echo json_encode(['error' => $login_result]);
    }
}
?>


<?php
// Database configuration
$host = 'localhost';
$db_username = 'root';
$db_password = '';
$db_name = 'login_system';

// Connect to database
$conn = mysqli_connect($host, $db_username, $db_password, $db_name);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

session_start();

// If form is submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Sanitize input
    $username = mysqli_real_escape_string($conn, $_POST['username']);
    $password = md5($_POST['password']); // Hash password

    // Check if username exists in database
    $sql = "SELECT * FROM users WHERE username='$username'";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) > 0) {
        $row = mysqli_fetch_assoc($result);
        if ($row['password'] == $password) {
            // Password matches
            $_SESSION['logged_in'] = true;
            $_SESSION['username'] = $username;
            header("Location: dashboard.php");
            exit();
        } else {
            // Password doesn't match
            $error_message = "Invalid username or password!";
        }
    } else {
        // Username doesn't exist
        $error_message = "Invalid username or password!";
    }
}

// Close database connection
mysqli_close($conn);

?>

<!DOCTYPE html>
<html>
<head>
    <title>Login Page</title>
</head>
<body>
    <?php if (isset($error_message)) { ?>
        <p style="color: red;"><?php echo $error_message; ?></p>
    <?php } ?>

    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        Username: <input type="text" name="username"><br>
        Password: <input type="password" name="password"><br>
        <input type="submit" value="Login">
    </form>

    <a href="register.php">Create an account</a>
</body>
</html>


<?php
// Database configuration
$host = 'localhost';
$db_username = 'root';
$db_password = '';
$db_name = 'login_system';

// Connect to database
$conn = mysqli_connect($host, $db_username, $db_password, $db_name);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

session_start();

// If form is submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Sanitize input
    $username = $conn->real_escape_string($_POST['username']);
    
    // Prepare statement to prevent SQL injection
    $stmt = $conn->prepare("SELECT * FROM users WHERE username=?");
    $stmt->bind_param("s", $username);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        $row = $result->fetch_assoc();
        
        // Verify password using PHP's built-in password verification function
        if (password_verify($_POST['password'], $row['password'])) {
            $_SESSION['logged_in'] = true;
            $_SESSION['username'] = $username;
            header("Location: dashboard.php");
            exit();
        } else {
            $error_message = "Invalid username or password!";
        }
    } else {
        $error_message = "Invalid username or password!";
    }
}

// Close database connection
mysqli_close($conn);

?>

<!DOCTYPE html>
<html>
<head>
    <title>Login Page</title>
</head>
<body>
    <?php if (isset($error_message)) { ?>
        <p style="color: red;"><?php echo $error_message; ?></p>
    <?php } ?>

    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        Username: <input type="text" name="username"><br>
        Password: <input type="password" name="password"><br>
        <input type="submit" value="Login">
    </form>

    <a href="register.php">Create an account</a>
</body>
</html>


// When registering a user:
$password_hash = password_hash($_POST['password'], PASSWORD_DEFAULT);
// Store $password_hash in your database


<?php
session_start();
require_once 'db_connection.php'; // Include your database connection file

function user_login($username, $password) {
    global $conn;

    if (!isset($_POST['login'])) {
        return false;
    }

    // Sanitize input
    $username = htmlspecialchars(trim($username));
    $password = htmlspecialchars(trim($password));

    // Check if username and password are not empty
    if (empty($username) || empty($password)) {
        return "Username or password cannot be empty!";
    }

    try {
        // Prepare SQL statement to prevent SQL injection
        $stmt = $conn->prepare("SELECT * FROM users WHERE username = ?");
        $stmt->execute([$username]);
        $user = $stmt->fetch(PDO::FETCH_ASSOC);

        if (!$user) {
            return "Invalid credentials!";
        }

        // Verify password
        if (!password_verify($password, $user['password'])) {
            return "Invalid credentials!";
        }

        // Start session and store user data
        $_SESSION['user_id'] = $user['id'];
        $_SESSION['username'] = $user['username'];
        $_SESSION['email'] = $user['email'];
        $_SESSION['logged_in'] = true;

        return "Login successful!";

    } catch (PDOException $e) {
        // Handle any database errors
        echo "Error: " . $e->getMessage();
        return false;
    }
}

// Example usage:
if ($_SERVER["REQUEST_METHOD"] == "POST" && isset($_POST['login'])) {
    $username = $_POST['username'];
    $password = $_POST['password'];

    $result = user_login($username, $password);

    if ($result === "Login successful!") {
        // Redirect to dashboard or home page
        header("Location: dashboard.php");
        exit();
    } else {
        // Display error message
        echo $result;
    }
}
?>


<?php
function loginUser($username, $password) {
    // Database connection details
    $host = "localhost";
    $db_username = "root";  // Change this to your database username
    $db_password = "";      // Change this to your database password
    $database = "user_login"; // Change this to your database name

    // Connect to the database
    $conn = mysqli_connect($host, $db_username, $db_password, $database);

    // Check connection
    if (!$conn) {
        throw new Exception("Connection failed: " . mysqli_connect_error());
    }

    // Prepare and bind statement
    $stmt = $conn->prepare("SELECT id, username, password, email FROM users WHERE username = ?");
    $stmt->bind_param("s", $username);

    // Execute the query
    if (!$stmt->execute()) {
        throw new Exception("Query execution failed: " . $stmt->error);
    }

    // Get result
    $result = $stmt->get_result();

    if ($result->num_rows == 0) {
        // No user found with this username
        return false;
    }

    // Fetch the user data
    $user = $result->fetch_assoc();

    // Verify password
    if (password_verify($password, $user['password'])) {
        // Password is correct
        session_start();
        $_SESSION['logged_in'] = true;
        $_SESSION['user_id'] = $user['id'];
        $_SESSION['username'] = $user['username'];
        $_SESSION['email'] = $user['email'];

        return true;
    } else {
        // Password is incorrect
        return false;
    }
}

// Example usage:
// try {
//     if (loginUser('test_user', 'test_password')) {
//         echo "Login successful!";
//     } else {
//         echo "Invalid username or password.";
//     }
// } catch (Exception $e) {
//     echo "Error: " . $e->getMessage();
// }

?>


<?php
// Start session
session_start();

// Connect to database (replace with your database credentials)
$host = "localhost";
$username_db = "root";
$password_db = "";
$db_name = "user_login";

$conn = mysqli_connect($host, $username_db, $password_db, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to sanitize input
function sanitizeInput($data) {
    $data = trim($data);
    $data = stripslashes($data);
    $data = htmlspecialchars($data);
    return $data;
}

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Sanitize inputs
    $username = sanitizeInput($_POST['username']);
    $password = $_POST['password'];

    // Validate inputs
    if (empty($username) || empty($password)) {
        header("Location: login.php?error=Please fill in all fields");
        exit();
    }

    // Query database for user
    $stmt = mysqli_prepare($conn, "SELECT id, username, password FROM users WHERE username = ?");
    mysqli_stmt_bind_param($stmt, "s", $username);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);
    
    if (mysqli_num_rows($result) == 1) {
        $row = mysqli_fetch_assoc($result);
        
        // Verify password
        if (password_verify($password, $row['password'])) {
            // Start session and store user data
            $_SESSION['logged_in'] = true;
            $_SESSION['username'] = $row['username'];
            $_SESSION['user_id'] = $row['id'];
            
            // Redirect to dashboard or home page
            header("Location: dashboard.php");
            exit();
        } else {
            // Password is incorrect
            header("Location: login.php?error=Incorrect password");
            exit();
        }
    } else {
        // Username doesn't exist
        header("Location: login.php?error=Username does not exist");
        exit();
    }
}

// Close database connection
mysqli_close($conn);
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Login Page</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
            background-color: #f0f0f0;
        }
        .container {
            width: 300px;
            margin: 50px auto;
            padding: 20px;
            background-color: white;
            border-radius: 4px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }
        .form-group {
            margin-bottom: 15px;
        }
        input[type="text"], input[type="password"] {
            width: 100%;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-sizing: border-box;
        }
        button {
            width: 100%;
            padding: 10px;
            background-color: #4CAF50;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
        button:hover {
            background-color: #45a049;
        }
        .error {
            color: red;
            margin-top: 10px;
        }
    </style>
</head>
<body>
    <div class="container">
        <?php
        if (isset($_GET['error'])) {
            echo "<div class='error'>" . $_GET['error'] . "</div>";
        }
        ?>
        <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
            <h2>Login</h2>
            <div class="form-group">
                <input type="text" placeholder="Enter username" name="username" required>
            </div>
            <div class="form-group">
                <input type="password" placeholder="Enter password" name="password" required>
            </script>
            </div>
            <button type="submit">Login</button>
        </form>
        <p>Don't have an account? <a href="register.php">Register here</a></p>
    </div>
</body>
</html>


<?php
// Sanitize and validate input
$username = sanitizeInput($_POST['username']);
$password = $_POST['password'];
$hashed_password = password_hash($password, PASSWORD_DEFAULT);

// Insert into database
$stmt = mysqli_prepare($conn, "INSERT INTO users (username, password) VALUES (?, ?)");
mysqli_stmt_bind_param($stmt, "ss", $username, $hashed_password);
mysqli_stmt_execute($stmt);
?>


<?php
// Database configuration
$host = 'localhost';
$username_db = 'root';
$password_db = '';
$database_name = 'my_login_system';

// Connect to the database
$conn = new mysqli($host, $username_db, $password_db, $database_name);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

session_start();

// If form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {

    // Get user input and sanitize it
    $username = mysqli_real_escape_string($conn, $_POST['username']);
    $password = mysqli_real_escape_string($conn, $_POST['password']);

    // Query the database for the user
    $sql = "SELECT * FROM users WHERE username = '$username'";
    $result = $conn->query($sql);

    if ($result->num_rows == 1) {

        // Fetch the user data
        $row = $result->fetch_assoc();

        // Verify password
        if (password_verify($password, $row['password'])) {

            // Login successful
            $_SESSION["loggedin"] = true;
            $_SESSION["id"] = $row['id'];
            $_SESSION["username"] = $row['username'];

            // Remember me functionality
            if ($_POST['remember']) {
                setcookie('username', $username, time() + (86400 * 7), "/");
                $random_hash = md5(uniqid());
                $_SESSION["hash"] = $random_hash;
                setcookie("hash", $random_hash, time() + (86400 * 7), "/");
            }

            // Redirect to dashboard
            header("Location: dashboard.php");
            exit();
        } else {

            // Password is incorrect
            echo "Incorrect password";
        }
    } else {

        // User doesn't exist
        echo "Username does not exist";
    }
}

// Close the database connection
$conn->close();

?>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

// Create connection
$conn = new mysqli($host, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Start session
session_start();

// Handle login form submission
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Get username and password from form
    $username = mysqli_real_escape_string($conn, $_POST['username']);
    $password = $_POST['password'];

    // Check if username exists in database
    $sql = "SELECT * FROM users WHERE username='$username'";
    $result = $conn->query($sql);

    if ($result->num_rows == 1) {
        // User exists, verify password
        $row = $result->fetch_assoc();
        if (password_verify($password, $row['password'])) {
            // Password is correct, start session and redirect to dashboard
            $_SESSION['user_id'] = $row['id'];
            $_SESSION['username'] = $row['username'];
            $_SESSION['email'] = $row['email'];
            $_SESSION['role'] = $row['role']; // Assuming you have a role column

            header('Location: dashboard.php');
            exit();
        } else {
            // Password is incorrect
            $error_message = "Incorrect password";
        }
    } else {
        // Username does not exist
        $error_message = "Username does not exist";
    }
}

// Close database connection
$conn->close();
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Login Page</title>
    <style>
        .container {
            max-width: 500px;
            margin: 0 auto;
            padding: 20px;
            font-family: Arial, sans-serif;
        }
        .form-group {
            margin-bottom: 15px;
        }
        input[type="text"],
        input[type="password"] {
            width: 100%;
            padding: 8px;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-sizing: border-box;
        }
        button {
            background-color: #4CAF50;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
        button:hover {
            background-color: #45a049;
        }
        .error {
            color: red;
            margin-bottom: 10px;
        }
    </style>
</head>
<body>
    <div class="container">
        <?php if (isset($error_message)) { ?>
            <div class="error"><?php echo $error_message; ?></div>
        <?php } ?>

        <form method="POST" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
            <h2>Login</h2>
            <div class="form-group">
                <label for="username">Username or Email:</label>
                <input type="text" id="username" name="username" required>
            </div>
            <div class="form-group">
                <label for="password">Password:</label>
                <input type="password" id="password" name="password" required>
            </div>
            <button type="submit">Login</button>
        </form>

        <p>Don't have an account? <a href="register.php">Register here</a>.</p>
    </div>
</body>
</html>


<?php
session_start();

// Database configuration
$host = 'localhost';
$user = 'root';
$password = '';
$dbname = 'mydatabase';

// Create database connection
$conn = mysqli_connect($host, $user, $password, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Sanitize input data
    $usernameOrEmail = trim(mysqli_real_escape_string($conn, $_POST['username_or_email']));
    $password = trim($_POST['password']);

    if (empty($usernameOrEmail) || empty($password)) {
        header("Location: login.php");
        exit();
    }

    // Check if the user exists
    $sql = "SELECT * FROM users WHERE username='$usernameOrEmail' OR email='$usernameOrEmail'";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) == 0) {
        $_SESSION['error'] = 'Username or password is incorrect';
        header("Location: login.php");
        exit();
    }

    // Fetch user data
    $user_data = mysqli_fetch_assoc($result);
    
    // Verify password
    if (!password_verify($password, $user_data['password'])) {
        $_SESSION['error'] = 'Username or password is incorrect';
        header("Location: login.php");
        exit();
    }

    // Start session and store user data
    $_SESSION['id'] = $user_data['id'];
    $_SESSION['username'] = $user_data['username'];

    // Set a success message
    $_SESSION['message'] = 'You have successfully logged in';

    // Remember me functionality
    if (isset($_POST['remember_me'])) {
        $cookie_name = "remember_user";
        $cookie_value = $usernameOrEmail;
        setcookie($cookie_name, $cookie_value, time() + 30 * 24 * 60 * 60);
    }

    // Redirect to dashboard or home page
    header("Location: dashboard.php");
    exit();
} else {
    // If no post data, show login form
    include('login_form.html');
}

mysqli_close($conn);
?>


<?php
session_start();

// Database connection details
$host = 'localhost';
$username_db = 'your_username';
$password_db = 'your_password';
$db_name = 'your_database';

// Create database connection
$conn = mysqli_connect($host, $username_db, $password_db, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Check if form is submitted
if (isset($_POST['login'])) {
    // Sanitize input data to prevent SQL injection
    $username = mysqli_real_escape_string($conn, $_POST['username']);
    $password = $_POST['password'];

    // Query to check if username exists
    $sql = "SELECT * FROM users WHERE username='$username'";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) == 1) {
        // Get user details
        $row = mysqli_fetch_assoc($result);
        
        // Verify password
        if (hash_equals($row['password'], crypt($password, $row['salt']))) {
            // Password is correct
            $_SESSION['username'] = $row['username'];
            $_SESSION['user_id'] = $row['id'];
            $_SESSION['logged_in'] = true;

            // Redirect to dashboard or home page
            header("Location: dashboard.php");
            exit();
        } else {
            // Incorrect password
            $error = "Incorrect username or password!";
        }
    } else {
        // Username does not exist
        $error = "Incorrect username or password!";
    }

    // Close database connection
    mysqli_close($conn);

    if (isset($error)) {
        echo "<div class='error'>$error</div>";
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login Page</title>
    <style>
        .error { color: red; }
    </style>
</head>
<body>
    <h2>Login</h2>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        Username: <input type="text" name="username"><br>
        Password: <input type="password" name="password"><br>
        <input type="submit" name="login" value="Login">
    </form>
</body>
</html>


<?php
session_start();

function loginUser($username, $password) {
    // Sanitize input to prevent SQL injection
    $username = trim(htmlspecialchars($username));
    $password = htmlspecialchars($password);

    // Database connection parameters
    $host = 'localhost';
    $dbUsername = 'root';
    $dbPassword = '';
    $dbName = 'mydatabase';

    try {
        // Connect to the database
        $conn = mysqli_connect($host, $dbUsername, $dbPassword, $dbName);

        if (!$conn) {
            die("Connection failed: " . mysqli_connect_error());
            return false;
        }

        // Check if username exists in the database
        $query = "SELECT * FROM users WHERE username = ?";
        
        if ($stmt = mysqli_prepare($conn, $query)) {
            mysqli_stmt_bind_param($stmt, 's', $username);
            
            if (mysqli_stmt_execute($stmt)) {
                $result = mysqli_stmt_get_result($stmt);
                
                if (mysqli_num_rows($result) == 1) {
                    // Fetch user data
                    $user = mysqli_fetch_assoc($result);
                    
                    // Verify password
                    if (password_verify($password, $user['password'])) {
                        // Password is correct, start session and return true
                        $_SESSION['loggedin'] = true;
                        $_SESSION['username'] = $user['username'];
                        
                        // Optional: Set a session expiration time
                        ini_set('session.cookie_lifetime', 3600); // Session expires after 1 hour
                        
                        return true;
                    } else {
                        // Password is incorrect
                        echo "Invalid username or password";
                        return false;
                    }
                } else {
                    // Username does not exist
                    echo "Invalid username or password";
                    return false;
                }
            } else {
                // Error executing the query
                echo "Error logging in. Please try again later.";
                return false;
            }
        } else {
            // Error preparing the statement
            echo "Error logging in. Please try again later.";
            return false;
        }

    } catch (Exception $e) {
        // Log error for debugging purposes
        error_log("Login error: " . $e->getMessage());
        echo "An error occurred while processing your request.";
        return false;
    }
}

// Example usage:
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $username = $_POST['username'];
    $password = $_POST['password'];

    if (loginUser($username, $password)) {
        // Redirect to dashboard or home page
        header("Location: dashboard.php");
        exit();
    }
}
?>


<?php
session_start();
require 'config.php'; // Database configuration

function loginUser($username, $password) {
    try {
        global $db;
        
        // Sanitize inputs
        $username = htmlspecialchars(trim($username));
        $password = trim($password);
        
        if (empty($username) || empty($password)) {
            throw new Exception('Username and password are required');
        }
        
        // Prepare statement to select user by username
        $stmt = $db->prepare("SELECT id, username, password FROM users WHERE username = :username");
        $stmt->bindParam(':username', $username);
        $stmt->execute();
        
        $user = $stmt->fetch(PDO::FETCH_ASSOC);
        
        if (!$user) {
            throw new Exception('Invalid username or password');
        }
        
        // Verify password
        if (!password_verify($password, $user['password'])) {
            throw new Exception('Invalid username or password');
        }
        
        // Start session and store user data
        $_SESSION['username'] = $user['username'];
        $_SESSION['user_id'] = $user['id'];
        
        // Generate CSRF token
        $_SESSION['csrf_token'] = bin2hex(random_bytes(32));
        
        // Set session timeout
        if (isset($_SESSION['login_time'])) {
            if (time() - $_SESSION['login_time'] > 3600) { // 1 hour
                session_unset();
                throw new Exception('Session timed out. Please login again.');
            }
        } else {
            $_SESSION['login_time'] = time();
        }
        
        return ['success' => true, 'user' => $user];
        
    } catch (PDOException $e) {
        error_log("Database error: " . $e->getMessage());
        throw new Exception('An error occurred while processing your request.');
    } catch (Exception $e) {
        // Log the error
        error_log($e->getMessage());
        return ['success' => false, 'error' => $e->getMessage()];
    }
}

// Example usage:
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    try {
        $result = loginUser($_POST['username'], $_POST['password']);
        
        if ($result['success']) {
            header('Location: dashboard.php');
            exit();
        } else {
            echo '<div class="error">' . htmlspecialchars($result['error']) . '</div>';
        }
    } catch (Exception $e) {
        echo '<div class="error">An error occurred: ' . htmlspecialchars($e->getMessage()) . '</div>';
    }
}
?>


<?php
session_start();

// Database configuration
$host = 'localhost';
$dbname = 'mydatabase';
$username = 'root';
$password = '';

try {
    // Connect to database
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        // Sanitize input data
        $email = htmlspecialchars(trim($_POST['email']));
        $pass = htmlspecialchars(trim($_POST['password']));

        // Validate inputs
        if (empty($email) || empty($pass)) {
            die("Please fill in all fields");
        }

        // Prepare SQL statement to select user with the given email
        $stmt = $conn->prepare("SELECT * FROM users WHERE email = :email");
        $stmt->bindParam(':email', $email);
        $stmt->execute();

        $user = $stmt->fetch(PDO::FETCH_ASSOC);

        if ($user) {
            // Check password
            if (password_verify($pass, $user['password'])) {
                // Password is correct
                session_regenerate(); // Regenerate session ID for security

                $_SESSION['id'] = $user['id'];
                $_SESSION['username'] = $user['username'];

                header("Location: dashboard.php");
                exit();
            } else {
                die("Incorrect password");
            }
        } else {
            die("User does not exist");
        }
    }

} catch (PDOException $e) {
    // Handle database errors
    die("Error: " . $e->getMessage());
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login Page</title>
</head>
<body>
    <h2>Login Form</h2>
    <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
        Email: <input type="text" name="email"><br>
        Password: <input type="password" name="password"><br>
        <input type="submit" value="Login">
    </form>
</body>
</html>


<?php
session_start();

function loginUser($conn) {
    // Check if form has been submitted
    if (!isset($_POST['username'], $_POST['password'])) {
        return false;
    }

    $username = mysqli_real_escape_string($conn, trim($_POST['username']));
    $password = $_POST['password'];

    // Prepare SQL statement to prevent SQL injection
    $stmt = $conn->prepare("SELECT id, username, password FROM users WHERE username = ?");
    if (!$stmt) {
        die("Prepare failed: " . $conn->error);
    }

    $stmt->bind_param('s', $username);
    $stmt->execute();
    $result = $stmt->get_result();

    // Check for existing user
    if ($result->num_rows === 0) {
        return false;
    }

    $user = $result->fetch_assoc();

    // Verify password
    if (!password_verify($password, $user['password'])) {
        return false;
    }

    // Store user data in session
    $_SESSION['loggedin'] = true;
    $_SESSION['username'] = $user['username'];
    $_SESSION['id'] = $user['id'];

    return true;
}
?>


<?php
session_start();
try {
    // Database connection configuration
    $host = 'localhost';
    $dbname = 'your_database_name';
    $username = 'your_username';
    $password = 'your_password';

    // Connect to the database
    $pdo = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

    // Check if form is submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        // Sanitize input data
        $username = filter_input(INPUT_POST, 'username', FILTER_SANITIZE_STRING);
        $password = filter_input(INPUT_POST, 'password', FILTER_SANITIZE_STRING);

        // Prepare SQL statement to select user by username
        $stmt = $pdo->prepare("SELECT id, username, password FROM users WHERE username = ?");
        $stmt->execute([$username]);
        
        // Check if a user exists
        if ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {
            // Verify password
            if (password_verify($password, $row['password'])) {
                // Password is correct, start session and set session variables
                $_SESSION['user_id'] = $row['id'];
                $_SESSION['username'] = $row['username'];

                // Secure the session
                ini_set('session.cookie_httponly', '1');
                if (isset($_SERVER['HTTPS'])) {
                    ini_set('session.cookie_secure', '1');
                }
                
                // Redirect to dashboard or other page after login
                header("Location: dashboard.php");
                exit();
            } else {
                // Incorrect password
                $error = "Invalid username or password";
            }
        } else {
            // No user found with that username
            $error = "Invalid username or password";
        }
    }

} catch(PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

// If no post data, show login form
if (!isset($_POST)) {
    header("Location: login_form.php");
    exit();
}
?>


<?php
session_start();

// Database connection parameters
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'mydatabase';

// Create database connection
$conn = new mysqli($host, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Handle login form submission
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get user input
    $email = mysqli_real_escape_string($conn, $_POST['email']);
    $password = $_POST['password'];

    // Query the database for the user
    $sql = "SELECT id, email, password, name FROM users WHERE email = ?";
    
    if ($stmt = $conn->prepare($sql)) {
        // Bind parameters
        $stmt->bind_param("s", $email);
        
        // Execute the query
        $stmt->execute();
        
        // Get the result
        $result = $stmt->get_result();
        
        if ($row = $result->fetch_assoc()) {
            // Verify password
            if (password_verify($password, $row['password'])) {
                // Password is correct
                // Start a session and store user data
                $_SESSION['loggedin'] = true;
                $_SESSION['id'] = $row['id'];
                $_SESSION['email'] = $row['email'];
                $_SESSION['name'] = $row['name'];
                
                // Optional: Remember me cookie
                if (!empty($_POST['remember'])) {
                    $cookie_name = 'login_cookie';
                    $cookie_value = bin2hex(random_bytes(32)); // Secure random token
                    setcookie($cookie_name, $cookie_value, time() + (86400 * 7), "/");
                    
                    // Store cookie in database for validation
                    $sql_cookie = "UPDATE users SET remember_token = ? WHERE id = ?";
                    $stmt_cookie = $conn->prepare($sql_cookie);
                    $stmt_cookie->bind_param("si", $cookie_value, $row['id']);
                    $stmt_cookie->execute();
                }
                
                // Redirect to dashboard or home page
                header("Location: dashboard.php");
                exit();
            } else {
                // Password is incorrect
                echo "Invalid email or password!";
            }
        } else {
            // User not found
            echo "Invalid email or password!";
        }
        
        // Close the statement
        $stmt->close();
    }

    // Close database connection
    $conn->close();
}
?>


<?php
// Database connection details
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

try {
    // Create a database connection
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

// Sanitize user inputs
function sanitizeInput($data) {
    return htmlspecialchars(strip_tags(trim($data)));
}

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = sanitizeInput($_POST['username']);
    $password = $_POST['password'];

    // Check if username exists in the database
    $stmt = $conn->prepare("SELECT * FROM users WHERE username = ?");
    $stmt->execute([$username]);
    
    $user = $stmt->fetch(PDO::FETCH_ASSOC);

    if ($user) {
        // Verify password
        if (password_verify($password, $user['password'])) {
            // Start session
            session_start();
            
            // Set session variables
            $_SESSION['user_id'] = $user['id'];
            $_SESSION['username'] = $user['username'];
            $_SESSION['logged_in'] = true;

            // Redirect to dashboard or home page
            header("Location: dashboard.php");
            exit();
        } else {
            // Password is incorrect
            $error = "Invalid username or password";
            header("Location: login.php?error=$error");
            exit();
        }
    } else {
        // Username doesn't exist
        $error = "Invalid username or password";
        header("Location: login.php?error=$error");
        exit();
    }
}
?>


// When the user checks "Remember Me"
if (!empty($_POST['remember'])) {
    $cookie_name = 'user_cookie';
    $cookie_value = $username . '|' . $password;
    setcookie($cookie_name, $cookie_value, time() + (86400 * 30), "/");
}

// Check for cookie on subsequent visits
if (!isset($_SESSION['logged_in']) && isset($_COOKIE[$cookie_name])) {
    list($username_from_cookie, $password_from_cookie) = explode('|', $_COOKIE[$cookie_name]);
    
    // Verify username and password against the database
    // If valid, start session as above
}


<?php
session_start();

// Database connection details
$host = 'localhost';
$username_db = 'root'; // Change this to your database username
$password_db = '';     // Change this to your database password
$database = 'user_login'; // Change this to your database name

// Create database connection
$conn = new mysqli($host, $username_db, $password_db, $database);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Initialize variables
$username = $password = "";
$errors = array();

// If form is submitted
if (isset($_POST['submit'])) {
    // Sanitize and validate inputs
    $username = mysqli_real_escape_string($conn, $_POST['username']);
    $password = mysqli_real_escape_string($conn, $_POST['password']);

    if (empty($username)) {
        array_push($errors, "Username is required");
    }
    if (empty($password)) {
        array_push($errors, "Password is required");
    }

    // If there are no errors
    if (count($errors) == 0) {
        // Hash the password
        $hashed_password = md5($password); // Note: MD5 is not secure for real applications; use bcrypt instead

        // Query database to check if username exists
        $query = "SELECT * FROM users WHERE username='$username' AND password='$hashed_password'";
        $result = $conn->query($query);

        if ($result->num_rows == 1) {
            // Set session variables
            $_SESSION['username'] = $username;
            $_SESSION['logged_in'] = true;

            // Redirect to dashboard or home page
            header("location: dashboard.php");
            exit();
        } else {
            array_push($errors, "Incorrect username/password combination");
        }
    }
}

// Close database connection
$conn->close();

?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login Page</title>
    <!-- Add CSS for styling -->
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 40px;
            background-color: #f0f0f0;
        }
        .login-container {
            max-width: 300px;
            margin: 0 auto;
            padding: 20px;
            background-color: white;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }
        .error {
            color: red;
            margin-bottom: 10px;
        }
    </style>
</head>
<body>
    <div class="login-container">
        <?php
        foreach ($errors as $error) {
            echo "<div class='error'>$error</div>";
        }
        ?>
        <form method="POST" action="<?php echo $_SERVER['PHP_SELF']; ?>">
            <p>
                <label for="username">Username:</label><br>
                <input type="text" name="username" id="username">
            </p>
            <p>
                <label for="password">Password:</label><br>
                <input type="password" name="password" id="password">
            </p>
            <p>
                <button type="submit" name="submit">Login</button>
            </p>
        </form>
        <p>Don't have an account? <a href="register.php">Register here</a></p>
    </div>
</body>
</html>

<!-- Security headers -->
<?php
header("Content-Security-Policy: default-src 'self'; script-src 'self' https://example.com");
header("X-Content-Type-Options: nosniff");
header("X-XSS-Protection: 1; mode=block");
?>


// Instead of:
$hashed_password = md5($password);

// Use:
$hashed_password = password_hash($password, PASSWORD_BCRYPT);


<?php
session_start();

// Database connection details
$host = 'localhost';
$username_db = 'root';
$password_db = '';
$database = 'my_database';

// Connect to database
$conn = mysqli_connect($host, $username_db, $password_db, $database);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

if (isset($_POST['submit'])) {
    // Get user input
    $username = $_POST['username'];
    $password = $_POST['password'];

    // Check if username exists in the database
    $sql = "SELECT id, password FROM users WHERE username = ?";
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, "s", $username);
    mysqli_execute($stmt);
    $result = mysqli_get_result($stmt);

    if ($row = mysqli_fetch_assoc($result)) {
        // Verify the password
        if (password_verify($password, $row['password'])) {
            // Password is correct
            $_SESSION['loggedin'] = true;
            $_SESSION['username'] = $username;
            header("Location: welcome.php");
            exit();
        } else {
            // Password is incorrect
            $error = "Incorrect username or password!";
        }
    } else {
        // Username does not exist
        $error = "Incorrect username or password!";
    }
}

// Close database connection
mysqli_close($conn);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login Page</title>
</head>
<body>
    <?php if (isset($error)) { echo "<p>$error</p>"; } ?>
    <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
        Username: <input type="text" name="username"><br>
        Password: <input type="password" name="password"><br>
        <input type="submit" name="submit" value="Login">
    </form>
</body>
</html>


$hashed_password = password_hash($plain_password, PASSWORD_DEFAULT);


<?php
session_start();

// Database connection details
$servername = "localhost";
$usernameDB = "root";
$passwordDB = "";
$dbname = "mydatabase";

// Create database connection
$conn = mysqli_connect($servername, $usernameDB, $passwordDB, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function login_user($usernameOrEmail, $password, $conn) {
    // SQL query to check if user exists with provided username or email
    $sql = "SELECT * FROM users WHERE username = '" . mysqli_real_escape_string($conn, $usernameOrEmail) . "' OR email = '" . mysqli_real_escape_string($conn, $usernameOrEmail) . "'";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) == 1) {
        // User exists, fetch user data
        $row = mysqli_fetch_assoc($result);
        
        // Verify password
        if (password_verify($password, $row['password'])) {
            // Password is correct, create session variables
            $_SESSION['id'] = $row['id'];
            $_SESSION['username'] = $row['username'];
            $_SESSION['email'] = $row['email'];
            $_SESSION['admin'] = $row['is_admin'];  // If you have user roles
            
            return true;
        } else {
            // Password doesn't match
            return false;
        }
    } else {
        // User not found
        return false;
    }
    
    mysqli_free_result($result);
}

// Example usage:
if (isset($_POST['login'])) {
    $usernameOrEmail = $_POST['usernameOrEmail'];
    $password = $_POST['password'];
    
    if (login_user($usernameOrEmail, $password, $conn)) {
        // Redirect to dashboard or home page
        header("Location: dashboard.php");
        exit();
    } else {
        // Display error message
        echo "Invalid username/email or password!";
    }
}

mysqli_close($conn);
?>


<?php
session_start();

// Database connection details
$host = 'localhost';
$user = 'root';
$password = '';
$dbname = 'mydatabase';

// Connect to database
$conn = mysqli_connect($host, $user, $password, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Check if form is submitted
if (isset($_POST['username']) && isset($_POST['password'])) {
    // Sanitize input data
    $username = mysqli_real_escape_string($conn, $_POST['username']);
    $password = $_POST['password'];

    // Validate input
    if ($username == "" || $password == "") {
        die("Please fill in all fields.");
    }

    // Query the database for the user
    $query = "SELECT * FROM users WHERE username='$username'";
    $result = mysqli_query($conn, $query);

    if (mysqli_num_rows($result) == 1) {
        // User exists, verify password
        $row = mysqli_fetch_assoc($result);
        $hashed_password = $row['password'];

        if (password_verify($password, $hashed_password)) {
            // Password is correct, start session
            $_SESSION['id'] = $row['id'];
            $_SESSION['username'] = $row['username'];
            
            // Redirect to dashboard
            header("Location: dashboard.php");
            exit();
        } else {
            // Password incorrect
            die("Incorrect username or password.");
        }
    } else {
        // User doesn't exist
        die("Incorrect username or password.");
    }
}

// Close database connection
mysqli_close($conn);
?>


$password = password_hash($_POST['password'], PASSWORD_DEFAULT);


<?php
session_start();

if (!isset($_SESSION['id'])) {
    header("Location: login.php");
    exit();
}

echo "Welcome, ".$_SESSION['username']."!";
?>


    ini_set('session.cookie_httponly', 1);
    ini_set('session.cookie_secure', 1);
    session_regenerate();
    

4. **Input Validation**: Always validate and sanitize user inputs to prevent attacks.

5. **HTTPS**: Use HTTPS to encrypt data transmission between the client and server.

6. **Error Handling**: Provide meaningful error messages and handle exceptions gracefully.

7. **Remember Me Feature**: If implementing a "remember me" feature, use secure cookies and expiration times.

### Complete Example:

Here's a more complete example with proper error handling and security measures:



<?php
session_start();

// Database connection details
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

try {
    // Create a new PDO instance
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    // Set the PDO error mode to exception
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

function loginUser($conn) {
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        // Sanitize input data
        $username = htmlspecialchars(trim($_POST['username']));
        $password = trim($_POST['password']);
        
        try {
            // Prepare the SQL statement to prevent SQL injection
            $stmt = $conn->prepare("SELECT id, username, password FROM users WHERE username = ?");
            $stmt->execute([$username]);
            
            // Check if user exists
            $user = $stmt->fetch(PDO::FETCH_ASSOC);
            
            if ($user) {
                // Verify the password
                if (password_verify($password, $user['password'])) {
                    // Password is correct
                    
                    // Store user data in session
                    $_SESSION['id'] = $user['id'];
                    $_SESSION['username'] = $user['username'];
                    
                    // Redirect to dashboard or home page
                    header("Location: dashboard.php");
                    exit();
                } else {
                    // Incorrect password
                    $error = "Invalid username or password";
                    echo "<script>alert('$error');</script>";
                }
            } else {
                // User does not exist
                $error = "User does not exist!";
                echo "<script>alert('$error');</script>";
            }
        } catch(PDOException $e) {
            die("Error occurred while logging in: " . $e->getMessage());
        }
    }
}

// Call the login function
loginUser($conn);
?>


<?php

session_start();

function user_login($username, $password) {
    // Check if username and password are provided
    if (empty($username) || empty($password)) {
        return false;
    }

    // Database connection parameters
    $host = 'localhost';
    $db_username = 'root';
    $db_password = '';
    $dbname = 'my_database';

    try {
        // Create database connection
        $conn = new mysqli($host, $db_username, $db_password, $dbname);

        // Check for connection errors
        if ($conn->connect_error) {
            throw new Exception("Connection failed: " . $conn->connect_error);
        }

        // Prepare SQL query to select user by username
        $stmt = $conn->prepare("SELECT id, username, password FROM users WHERE username = ?");
        
        if (!$stmt) {
            throw new Exception("Prepare failed: " . $conn->error);
        }

        // Bind parameters and execute the statement
        $stmt->bind_param('s', $username);
        $stmt->execute();

        // Get the result
        $result = $stmt->get_result();
        
        if ($result->num_rows === 0) {
            // No user found with this username
            return false;
        }

        $user = $result->fetch_assoc();

        // Verify password (assuming passwords are hashed)
        // Using sha1 for example, replace with your hashing method
        if (sha1($password) !== $user['password']) {
            return false;
        }

        // Password is correct, create session variables
        $_SESSION['user_id'] = $user['id'];
        $_SESSION['username'] = $user['username'];

        return true;

    } catch (Exception $e) {
        // Handle any exceptions
        error_log($e->getMessage());
        return false;
    }
}

// Example usage:
if (isset($_POST['login'])) {
    $username = $_POST['username'];
    $password = $_POST['password'];

    if (user_login($username, $password)) {
        header('Location: dashboard.php');
        exit();
    } else {
        echo "Invalid username or password!";
    }
}

?>


// Store password during registration:
$hashed_password = password_hash($password, PASSWORD_DEFAULT);
// Save $hashed_password in database

// Verify password during login:
if (password_verify($submitted_password, $stored_hash)) {
    // Valid password
}


<?php
session_start();
require_once 'db.php';

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $username = mysqli_real_escape_string($conn, $_POST['username']);
    $password = $_POST['password'];

    // Check if username or password is empty
    if (empty($username) || empty($password)) {
        die("Username or password cannot be empty");
    }

    // Query the database for user with provided username or email
    $sql = "SELECT * FROM users WHERE username = ? OR email = ?";
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, "ss", $username, $username);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);

    if (mysqli_num_rows($result) == 0) {
        die("Invalid username or password");
    }

    $user = mysqli_fetch_assoc($result);

    // Verify password
    if (!password_verify($password, $user['password'])) {
        die("Invalid username or password");
    }

    // If authenticated, start session and redirect
    $_SESSION['user_id'] = $user['id'];
    $_SESSION['username'] = $user['username'];
    $_SESSION['email'] = $user['email'];
    $_SESSION['login_time'] = time();

    header("Location: dashboard.php");
    exit();
}
?>


<?php
$servername = "localhost";
$username_db = "root";
$password_db = "";
$dbname = "your_database_name";

$conn = mysqli_connect($servername, $username_db, $password_db, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}
?>


<?php
// Configuration
$host = 'localhost';
$db_username = 'root';
$db_password = '';
$db_name = 'login_example';

// Connect to MySQL database
$conn = mysqli_connect($host, $db_username, $db_password, $db_name);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

session_start();

if (isset($_POST['submit'])) {
    // Sanitize input data
    $username = htmlspecialchars(trim($_POST['username']));
    $password = $_POST['password'];
    
    // Validate username and password
    if (empty($username) || empty($password)) {
        $error = "Username and password are required!";
    } else {
        // Query the database for user
        $sql = "SELECT * FROM users WHERE username = ?";
        $stmt = mysqli_prepare($conn, $sql);
        mysqli_stmt_bind_param($stmt, 's', $username);
        mysqli_stmt_execute($stmt);
        $result = mysqli_stmt_get_result($stmt);
        
        if ($row = mysqli_fetch_assoc($result)) {
            // Verify password
            if (password_verify($password, $row['password'])) {
                // Start session and set session variables
                $_SESSION['username'] = $username;
                
                // Remember me functionality
                if ($_POST['remember_me']) {
                    $cookie_name = 'login_cookie';
                    $cookie_value = $username . '-' . md5($password);
                    setcookie($cookie_name, $cookie_value, time() + (7 * 24 * 60 * 60)); // Expiry in a week
                }
                
                // Redirect to dashboard or home page
                header('Location: dashboard.php');
                exit();
            } else {
                $error = "Invalid username or password!";
            }
        } else {
            $error = "Username not found!";
        }
    }
}

// Close database connection
mysqli_close($conn);
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Login Page</title>
    <style>
        .container {
            max-width: 400px;
            margin: 0 auto;
            padding: 20px;
            text-align: center;
        }
        form {
            background-color: #f5f5f5;
            padding: 20px;
            border-radius: 8px;
        }
    </style>
</head>
<body>
    <div class="container">
        <?php if (isset($error)) { echo "<p style='color:red;'>$error</p>"; } ?>
        
        <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
            <h2>Login</h2>
            <label for="username">Username:</label><br>
            <input type="text" id="username" name="username"><br>
            
            <label for="password">Password:</label><br>
            <input type="password" id="password" name="password"><br><br>
            
            <label><input type="checkbox" name="remember_me"> Remember Me</label><br><br>
            
            <button type="submit" name="submit">Login</button>
        </form><br>
        
        <p>Don't have an account? <a href="register.php">Register here.</a></p>
    </div>
</body>
</html>


<?php
session_start();

// Database configuration
$host = 'localhost';
$dbname = 'mydatabase';
$username = 'root';
$password = '';

try {
    // Connect to the database using PDO
    $pdo = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

// Error messages array
$error_messages = [];

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Check if username and password are provided
    if (empty($_POST['username']) || empty($_POST['password'])) {
        $error_messages[] = "Username or password cannot be empty!";
    } else {
        $username_input = $_POST['username'];
        $password_input = $_POST['password'];

        // Prepare SQL statement to select user by username
        $stmt = $pdo->prepare("SELECT * FROM users WHERE username = ?");
        $stmt->execute([$username_input]);
        $user = $stmt->fetch(PDO::FETCH_ASSOC);

        if ($user) {
            // Verify password
            if (password_verify($password_input, $user['password'])) {
                // Password matches, start session
                $_SESSION['logged_in'] = true;
                $_SESSION['username'] = $user['username'];
                $_SESSION['user_id'] = $user['id'];

                // Regenerate session ID to prevent session fixation attacks
                session_regenerate(true);

                // Optional: Implement CSRF token for subsequent requests
                $_SESSION['csrf_token'] = bin2hex(random_bytes(32));

                // Redirect to dashboard or home page
                header("Location: dashboard.php");
                exit();
            } else {
                $error_messages[] = "Incorrect password!";
            }
        } else {
            $error_messages[] = "Username does not exist!";
        }
    }
}

// CSRF token for form protection (implement in your HTML)
$csrf_token = bin2hex(random_bytes(32));
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Login Page</title>
</head>
<body>
    <?php if (!empty($error_messages)) : ?>
        <?php foreach ($error_messages as $msg) : ?>
            <div style="color: red;"><?php echo $msg; ?></div><br>
        <?php endforeach; ?>
    <?php endif; ?>

    <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
        <input type="hidden" name="csrf_token" value="<?php echo $csrf_token; ?>">
        <label>Username:</label><br>
        <input type="text" name="username"><br><br>

        <label>Password:</label><br>
        <input type="password" name="password"><br><br>

        <input type="submit" value="Login">
    </form>
</body>
</html>


<?php
// Database configuration
$host = "localhost";
$username_db = "root"; // Change to your database username
$password_db = "";    // Change to your database password
$db_name = "testdb";   // Change to your database name

// Create connection
$conn = new mysqli($host, $username_db, $password_db, $db_name);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Start the session
session_start();

// Handle login form submission
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get username or email and password from form
    $username = $conn->real_escape_string($_POST['username']);
    $password = $_POST['password'];

    // Query to check if user exists by username or email
    $query = "SELECT * FROM users WHERE username='$username' OR email='$username' LIMIT 1";
    $result = $conn->query($query);

    if ($result->num_rows == 1) {
        // User exists, get the password hash from database
        $row = $result->fetch_assoc();
        $db_password = $row['password'];

        // Verify the password
        if (password_verify($password, $db_password)) {
            // Password is correct, set session variables
            $_SESSION['id'] = $row['id'];
            $_SESSION['username'] = $row['username'];
            $_SESSION['logged_in'] = true;
            $_SESSION['last_activity'] = time();

            // Redirect to dashboard or home page
            header("Location: dashboard.php");
            exit();
        } else {
            // Password is incorrect
            $error_message = "Invalid username/password combination!";
        }
    } else {
        // User does not exist
        $error_message = "Invalid username/password combination!";
    }

    // Close the result set and connection
    $result->close();
} 

// Close database connection
$conn->close();

// Show error message if any
if (isset($error_message)) {
    echo "<script>alert('$error_message');</script>";
}
?>


<?php
// Database connection details
$host = "localhost";
$username = "root";
$password = "";
$dbname = "login_system";

// Create database connection
$conn = mysqli_connect($host, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function login_user() {
    // Check if form is submitted
    if (isset($_POST['submit'])) {
        $email = trim($_POST['email']);
        $password = trim($_POST['password']);

        // Validate input fields
        if (empty($email) || empty($password)) {
            $error = "Please fill in all required fields!";
            return $error;
        }

        // Prepare and execute the query
        global $conn;

        try {
            // Check if user exists with the given email
            $stmt = mysqli_prepare($conn, "SELECT * FROM users WHERE email = ?");
            mysqli_stmt_bind_param($stmt, "s", $email);
            mysqli_stmt_execute($stmt);
            $result = mysqli_stmt_get_result($stmt);

            if (mysqli_num_rows($result) == 0) {
                return "Email does not exist!";
            }

            // Fetch user data
            $user_data = mysqli_fetch_assoc($result);
            
            // Verify password
            if (!password_verify($password, $user_data['password'])) {
                return "Incorrect password!";
            }

            // Set session variables
            $_SESSION['logged_in'] = true;
            $_SESSION['email'] = $user_data['email'];
            $_SESSION['full_name'] = $user_data['full_name'];

            // Optional: Create a cookie for user identification
            setcookie('user_email', $user_data['email'], time() + 3600, "/", "", false, true);

            // Redirect to dashboard or home page after successful login
            header("Location: dashboard.php");
            exit();
        } catch (Exception $e) {
            return "Error occurred during login: " . $e->getMessage();
        }
    }
}

// Call the login function and capture any errors
$error = login_user();

if ($error) {
    echo "<script>alert('$error');</script>";
}

// Close database connection
mysqli_close($conn);
?>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

try {
    // Create database connection
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

    if ($_SERVER['REQUEST_METHOD'] == 'POST') {
        // Get form data
        $email = $_POST['email'];
        $password = $_POST['password'];

        // Sanitize input
        $email = htmlspecialchars(strip_tags($email));
        $password = htmlspecialchars(strip_tags($password));

        // Prepare and execute SQL statement with prepared statements
        $stmt = $conn->prepare("SELECT id, email, password FROM users WHERE email = ?");
        $stmt->execute([$email]);
        
        // Check if user exists
        $user = $stmt->fetch(PDO::FETCH_ASSOC);

        if ($user) {
            // Verify password
            if (password_verify($password, $user['password'])) {
                // Password is correct
                session_start();
                $_SESSION['loggedin'] = true;
                $_SESSION['id'] = $user['id'];
                $_SESSION['email'] = $user['email'];

                // Redirect to dashboard after login
                header("Location: dashboard.php");
                exit();
            } else {
                // Incorrect password
                $error = "Incorrect email or password.";
            }
        } else {
            // User not found
            $error = "Incorrect email or password.";
        }
    }

} catch(PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

// Show login form
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Login Page</title>
    <!-- Add your CSS styles here -->
    <style>
        body { font-family: Arial, sans-serif; }
        .container { max-width: 500px; margin: 0 auto; padding: 20px; }
        .error { color: red; margin-bottom: 10px; }
    </style>
</head>
<body>
    <div class="container">
        <?php if (isset($error)) : ?>
            <div class="error"><?php echo $error; ?></div>
        <?php endif; ?>

        <h2>Login</h2>
        <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
            <input type="email" name="email" placeholder="Enter your email" required><br><br>
            <input type="password" name="password" placeholder="Enter your password" required><br><br>
            <button type="submit">Login</button>
        </form>
        
        <p>Don't have an account? <a href="register.php">Register here</a>.</p>
        <p>Forgot password? <a href="reset_password.php">Reset password</a>.</p>
    </div>
</body>
</html>


<?php
session_start();

// Database connection parameters
$host = 'localhost';
$usernameDb = 'root'; // Change according to your database username
$passwordDb = '';     // Change according to your database password
$database = 'testdb';  // Change to your database name

// Connect to the database
$conn = mysqli_connect($host, $usernameDb, $passwordDb, $database);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

if (isset($_POST['submit'])) {
    // Retrieve form data
    $username = trim(mysqli_real_escape_string($conn, $_POST['username']));
    $password = trim(mysqli_real_escape_string($conn, $_POST['password']));

    if ($username == "" || $password == "") {
        header("Location: login.php?error=2");
        exit();
    }

    // Prepare the SQL statement
    $stmt = $conn->prepare("SELECT * FROM users WHERE username = ?");
    $stmt->bind_param('s', $username);
    $stmt->execute();

    // Get result and store it in $result
    $result = $stmt->get_result();
    
    if ($result->num_rows == 1) {
        $row = $result->fetch_assoc();
        $storedHashedPassword = $row['password'];

        if (password_verify($password, $storedHashedPassword)) {
            // Password is correct
            $_SESSION['id'] = $row['id'];
            $_SESSION['username'] = $row['username'];
            $_SESSION['login_time'] = time();

            // Redirect to dashboard or home page
            header("Location: dashboard.php");
            exit();
        } else {
            // Password does not match
            header("Location: login.php?error=1");
            exit();
        }
    } else {
        // No user found with that username
        header("Location: login.php?error=1");
        exit();
    }
} else {
    // If form is not submitted, redirect to login page
    header("Location: login.php");
    exit();
}

// Close database connection
mysqli_close($conn);
?>


<?php
// Include database configuration file
include('config.php');

function loginUser($username, $password) {
    // Check if username or password fields are empty
    if (empty($username) || empty($password)) {
        return false;
    }

    try {
        // Prepare SQL statement to select user with the given username
        $stmt = $conn->prepare("SELECT * FROM users WHERE username = ?");
        $stmt->bind_param("s", $username);
        $stmt->execute();
        $result = $stmt->get_result();

        // Check if there was an error executing the query
        if ($result === false) {
            throw new Exception("Database Error: " . $conn->error);
        }

        // Fetch user data
        $user = $result->fetch_assoc();

        // If no user found, return false
        if (!$user) {
            return false;
        }

        // Verify the password
        if (!password_verify($password, $user['password'])) {
            return false;
        }

        // Start a session and store user data in session variables
        session_start();
        $_SESSION['user_id'] = $user['id'];
        $_SESSION['username'] = $user['username'];
        $_SESSION['login_time'] = time();

        // Redirect to dashboard or desired page
        header("Location: dashboard.php");
        exit;

    } catch (Exception $e) {
        // Log the error or return an error message
        error_log($e->getMessage());
        return false;
    }
}

// Example usage:
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $username = $_POST['username'];
    $password = $_POST['password'];

    if (loginUser($username, $password)) {
        // Login successful
    } else {
        // Login failed
        echo "Invalid username or password!";
    }
}
?>


<?php
$servername = "localhost";
$username_db = "root";
$password_db = "";
$dbname = "mydatabase";

// Create connection
$conn = new mysqli($servername, $username_db, $password_db, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}
?>


<?php
// Configuration file (config.php)
$host = 'localhost';
$user = 'root';
$password = '';
$dbname = 'user_login';

$conn = mysqli_connect($host, $user, $password, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Login Page</title>
</head>
<body>
<?php
session_start();

// Check if already logged in
if (isset($_SESSION['user_id'])) {
    header("Location: dashboard.php");
    exit();
}

// Handle login form submission
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Sanitize input
    $email = mysqli_real_escape_string($conn, htmlspecialchars(trim($_POST['email'])));
    $password = trim($_POST['password']);
    
    if (empty($email) || empty($password)) {
        echo "<p style='color:red'>Email and password are required!</p>";
        exit();
    }

    // Check email existence
    $sql = "SELECT * FROM users WHERE email = '$email'";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) == 0) {
        echo "<p style='color:red'>Email does not exist!</p>";
        exit();
    }

    // Get user data
    $user = mysqli_fetch_assoc($result);
    $stored_hashed_password = $user['password'];

    // Verify password
    if (password_verify($password, $stored_hashed_password)) {
        // Login successful
        $_SESSION['user_id'] = $user['id'];
        $_SESSION['username'] = $user['username'];
        
        // Regenerate session ID to prevent fixation attacks
        session_regenerate(true);
        
        // Remember me functionality
        if (isset($_POST['remember'])) {
            $token = bin2hex(random_bytes(32));
            setcookie('remember_me', $token, time() + 604800, '/', null, false, true);
            
            // Update token in database
            $sql_token = "UPDATE users SET remember_token = '$token' WHERE id = ?";
            $stmt = mysqli_prepare($conn, $sql_token);
            mysqli_stmt_bind_param($stmt, 'i', $user['id']);
            mysqli_execute($stmt);
        }
        
        header("Location: dashboard.php");
    } else {
        echo "<p style='color:red'>Incorrect password!</p>";
    }
}
?>

<form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    Email: <input type="email" name="email" required><br>
    Password: <input type="password" name="password" required><br>
    Remember me: <input type="checkbox" name="remember"><br>
    <input type="submit" value="Login">
</form>

<a href="register.php">Create new account</a>
</body>
</html>


<?php
// Database configuration
$host = "localhost";
$username_db = "root"; // Change this to your database username
$password_db = "";    // Change this to your database password
$db_name = "login_system"; // Change this to your database name

// Connect to the database
$conn = new mysqli($host, $username_db, $password_db, $db_name);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Include session
session_start();

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {

    // Sanitize input data
    $username = mysqli_real_escape_string($conn, trim($_POST['username']));
    $password = mysqli_real_escape_string($conn, trim($_POST['password']));

    // Validate input data
    if (empty($username) || empty($password)) {
        echo "Please fill in all fields";
        exit();
    }

    // Check user in the database
    $query = "SELECT * FROM users WHERE username = '$username'";
    $result = $conn->query($query);

    if ($result->num_rows > 0) {
        $user_data = $result->fetch_assoc();

        // Verify password
        if (password_verify($password, $user_data['password'])) {

            // Create session variables
            $_SESSION['user_id'] = $user_data['id'];
            $_SESSION['username'] = $user_data['username'];

            // Redirect to dashboard
            header("Location: dashboard.php");
            exit();
        } else {
            echo "Incorrect password";
        }
    } else {
        echo "No user found with that username";
    }

    $conn->close();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login Page</title>
</head>
<body>
    <h2>Login Form</h2>
    <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
        Username: <input type="text" name="username"><br>
        Password: <input type="password" name="password"><br>
        <input type="submit" value="Login">
    </form>

    <!-- Registration link -->
    Don't have an account? <a href="register.php">Register here</a>
</body>
</html>


<?php
// Database configuration and connection (same as above)

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = mysqli_real_escape_string($conn, trim($_POST['username']));
    $password = mysqli_real_escape_string($conn, trim($_POST['password']));

    if (empty($username) || empty($password)) {
        echo "Please fill in all fields";
        exit();
    }

    // Check if username already exists
    $query = "SELECT username FROM users WHERE username = '$username'";
    $result = $conn->query($query);

    if ($result->num_rows > 0) {
        echo "Username already exists";
        exit();
    }

    // Hash the password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

    // Insert user into database
    $query = "INSERT INTO users (username, password) VALUES ('$username', '$hashed_password')";
    if ($conn->query($query)) {
        echo "Registration successful! Please login.";
        header("Location: login.php");
        exit();
    } else {
        echo "Error registering user";
    }
}

$conn->close();

// Rest of the HTML form (similar to login page but for registration)
?>

<!DOCTYPE html>
<html>
<head>
    <title>Registration Page</title>
</head>
<body>
    <h2>Registration Form</h2>
    <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
        Username: <input type="text" name="username"><br>
        Password: <input type="password" name="password"><br>
        <input type="submit" value="Register">
    </form>

    Already have an account? <a href="login.php">Login here</a>
</body>
</html>


<?php
session_start();

// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'mydatabase';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function user_login() {
    global $conn;

    // Check if form is submitted
    if ($_SERVER['REQUEST_METHOD'] == 'POST') {
        // Get input values and sanitize them
        $email = htmlspecialchars($_POST['email']);
        $password = $_POST['password'];

        // Check if email exists in database
        $stmt = mysqli_prepare($conn, "SELECT id, username, password FROM users WHERE email = ?");
        mysqli_stmt_bind_param($stmt, 's', $email);
        mysqli_stmt_execute($stmt);
        $result = mysqli_stmt_get_result($stmt);

        if (mysqli_num_rows($result) == 0) {
            // Email not found
            return "Email not found!";
        }

        // Fetch user data
        $user = mysqli_fetch_assoc($result);

        // Verify password
        if (!password_verify($password, $user['password'])) {
            return "Incorrect password!";
        }

        // Set session variables
        $_SESSION['user_id'] = $user['id'];
        $_SESSION['username'] = $user['username'];
        $_SESSION['logged_in'] = true;

        // Generate session token (optional)
        $_SESSION['token'] = bin2hex(random_bytes(32));

        // Redirect to dashboard
        header('Location: dashboard.php');
        exit();
    }
}

// Call the login function
if (isset($_POST['login'])) {
    $message = user_login();
    if ($message != '') {
        echo "<script>alert('$message');</script>";
    }
}
?>


function register_user($email, $password, $username) {
    global $conn;

    // Hash the password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

    // Insert user into database
    $stmt = mysqli_prepare($conn, "INSERT INTO users (email, password, username) VALUES (?, ?, ?)");
    mysqli_stmt_bind_param($stmt, 'ssp', $email, $hashed_password, $username);
    return mysqli_stmt_execute($stmt);
}


<?php
// Database connection details
$servername = "localhost";
$username_db = "root";
$password_db = "";
$dbname = "mydatabase";

// Create connection
$conn = new mysqli($servername, $username_db, $password_db, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to handle user login
function loginUser() {
    global $conn;

    // Get username and password from POST request
    $username = mysqli_real_escape_string($conn, $_POST['username']);
    $password = $_POST['password'];

    // Query the database for the user
    $sql = "SELECT * FROM users WHERE username='$username'";
    $result = $conn->query($sql);

    if ($result->num_rows > 0) {
        // User exists, get the user data
        $user = $result->fetch_assoc();

        // Verify password
        if (password_verify($password, $user['password'])) {
            // Password is correct, start session
            session_start();
            $_SESSION['username'] = $user['username'];
            $_SESSION['userid'] = $user['id'];
            
            // Redirect to dashboard or home page
            header("Location: dashboard.php");
            exit();
        } else {
            // Password does not match
            echo "Incorrect password";
        }
    } else {
        // User does not exist
        echo "Username does not exist";
    }
}

// Call the login function if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    loginUser();
}
?>


<?php
session_start();

// Database connection details
$host = 'localhost';
$username = 'root'; // Database username
$password = '';      // Database password
$dbname = 'login_system';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function for user login
function loginUser() {
    global $conn;

    // Check if form is submitted
    if (isset($_POST['login'])) {
        $email_username = $_POST['email_username'];
        $password = $_POST['password'];

        // Validate input
        if (empty($email_username) || empty($password)) {
            $_SESSION['error'] = "Please fill in all fields";
            header("Location: login.php");
            exit();
        }

        // Prepare and bind statement to prevent SQL injection
        $stmt = mysqli_prepare($conn, "SELECT id, username, email, password FROM users WHERE username = ? OR email = ?");
        mysqli_stmt_bind_param($stmt, "ss", $email_username, $email_username);

        // Execute the query
        mysqli_stmt_execute($stmt);
        $result = mysqli_stmt_get_result($stmt);

        if ($row = mysqli_fetch_assoc($result)) {
            // Verify password
            if (password_verify($password, $row['password'])) {
                // Start session and store user data
                $_SESSION['id'] = $row['id'];
                $_SESSION['username'] = $row['username'];
                $_SESSION['email'] = $row['email'];

                // Login successful
                $_SESSION['success'] = "Welcome back, " . $row['username'];
                header("Location: dashboard.php");
                exit();
            } else {
                $_SESSION['error'] = "Incorrect password";
                header("Location: login.php");
                exit();
            }
        } else {
            $_SESSION['error'] = "User does not exist";
            header("Location: login.php");
            exit();
        }
    }
}

// Call the login function
loginUser();

// Close database connection
mysqli_close($conn);
?>


<?php
// Database configuration
$host = 'localhost';
$username_db = 'root';
$password_db = '';
$database_name = 'login_system';

// Connect to database
$conn = mysqli_connect($host, $username_db, $password_db, $database_name);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

session_start();

// Check if form is submitted
if (isset($_POST['submit'])) {
    // Sanitize and validate input data
    $username = htmlspecialchars(trim($_POST['username']));
    $password = htmlspecialchars(trim($_POST['password']));

    // Validate empty fields
    if (empty($username) || empty($password)) {
        echo "Please fill in all required fields!";
        exit();
    }

    // Encrypt password
    $hashed_password = md5($password); // Note: MD5 is not secure for production use

    // Prepare SQL statement to prevent SQL injection
    $stmt = mysqli_prepare($conn, "SELECT id, username FROM users WHERE username = ? AND password = ?");
    mysqli_stmt_bind_param($stmt, "ss", $username, $hashed_password);
    
    // Execute the query
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);

    if ($row = mysqli_fetch_assoc($result)) {
        // Start session and store user data
        $_SESSION['loggedin'] = true;
        $_SESSION['username'] = $row['username'];
        $_SESSION['id'] = $row['id'];

        // Redirect to dashboard or home page
        header("Location: dashboard.php");
        exit();
    } else {
        echo "Invalid username or password!";
    }

    mysqli_stmt_close($stmt);
}

mysqli_close($conn);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login Page</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f0f0f0;
            margin: 0;
            padding: 20px;
        }
        .container {
            max-width: 400px;
            margin: 0 auto;
            background-color: white;
            padding: 20px;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }
        .form-group {
            margin-bottom: 15px;
        }
        input {
            width: 100%;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-sizing: border-box;
        }
        button {
            width: 100%;
            padding: 10px;
            background-color: #4CAF50;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
        button:hover {
            background-color: #45a049;
        }
        .error {
            color: red;
            margin-top: 10px;
        }
    </style>
</head>
<body>
    <div class="container">
        <h2>Login</h2>
        <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
            <div class="form-group">
                <label for="username">Username:</label>
                <input type="text" id="username" name="username" required>
            </div>
            <div class="form-group">
                <label for="password">Password:</label>
                <input type="password" id="password" name="password" required>
            </div>
            <?php if (isset($_GET['error'])) { ?>
                <div class="error"><?php echo $_GET['error']; ?></div>
            <?php } ?>
            <button type="submit" name="submit">Login</button>
        </form>
    </div>
</body>
</html>


<?php
session_start();

// Database connection
$servername = "localhost";
$username_db = "root";
$password_db = "";
$dbname = "testdb";

// Create connection
$conn = mysqli_connect($servername, $username_db, $password_db, $dbname);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to sanitize input
function sanitizeInput($data) {
    $data = trim($data);
    $data = stripslashes($data);
    $data = htmlspecialchars($data);
    return $data;
}

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = sanitizeInput($_POST['username']);
    $password = $_POST['password'];

    // Prevent SQL injection
    $username = mysqli_real_escape_string($conn, $username);

    // Query the database
    $sql = "SELECT * FROM users WHERE username='$username'";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) == 1) {
        $row = mysqli_fetch_assoc($result);
        
        // Verify password
        if (password_verify($password, $row['password'])) {
            // Create session variables
            $_SESSION["username"] = $row['username'];
            $_SESSION["id"] = $row['id'];
            
            // Check for admin access
            if ($row['is_admin'] == 1) {
                $_SESSION["admin"] = true;
            }
            
            echo "Login successful!";
            header("Location: dashboard.php");
            exit();
        } else {
            echo "Incorrect password.";
        }
    } else {
        echo "Username not found.";
    }
}

// Close database connection
mysqli_close($conn);
?>


<?php
session_start();

// Database configuration
$host = 'localhost';
$db_username = 'root';
$db_password = '';
$db_name = 'user_login';

// Connect to the database
$conn = mysqli_connect($host, $db_username, $db_password, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Sanitize input
    $username = mysqli_real_escape_string($conn, $_POST['username']);
    $password = $_POST['password'];

    // Query the database for the user
    $sql = "SELECT * FROM users WHERE username='$username'";
    $result = mysqli_query($conn, $sql);

    if ($result) {
        $row = mysqli_fetch_assoc($result);
        $count = mysqli_num_rows($result);

        if ($count == 1) {
            // Verify password
            if (password_verify($password, $row['password'])) {
                // Start session and store user data
                $_SESSION['user_logged_in'] = true;
                $_SESSION['user_id'] = $row['id'];
                $_SESSION['username'] = $row['username'];

                // Redirect to dashboard or home page
                header("Location: dashboard.php");
                exit();
            } else {
                echo "Incorrect password. Please try again.";
            }
        } else {
            echo "Username does not exist. Please register first.";
        }
    } else {
        die("Query failed: " . mysqli_error($conn));
    }
}

mysqli_close($conn);
?>


<?php
session_start();

// Check if user is already logged in
if (isset($_SESSION['user_id'])) {
    header("Location: dashboard.php");
    die();
}

$error_msg = "";

// Handle form submission
if ($_SERVER["REQUEST_METHOD"] == "POST") {

    // Sanitize input data
    $email = mysqli_real_escape_string($conn, $_POST['email']);
    $password = $_POST['password'];

    // Validate email and password fields
    if (empty($email) || empty($password)) {
        $error_msg = "Please fill in all required fields";
    } else {

        // Connect to the database
        $db_host = 'localhost';
        $db_user = 'username';
        $db_pass = 'password';
        $db_name = 'database_name';

        $conn = mysqli_connect($db_host, $db_user, $db_pass, $db_name);

        if (!$conn) {
            die("Connection failed: " . mysqli_connect_error());
        }

        // Prepare and execute SQL query
        $sql = "SELECT * FROM users WHERE email='$email'";
        $result = mysqli_query($conn, $sql);

        if (mysqli_num_rows($result) == 0) {
            $error_msg = "Invalid email or password";
        } else {

            $row = mysqli_fetch_assoc($result);
            
            // Verify password
            if (!password_verify($password, $row['password'])) {
                $error_msg = "Invalid email or password";
            } else {
                
                // Start session and store user data
                $_SESSION['user_id'] = $row['id'];
                $_SESSION['name'] = $row['name'];
                $_SESSION['email'] = $row['email'];
                $_SESSION['login_time'] = time();

                // Redirect to dashboard or home page
                header("Location: dashboard.php");
                die();
            }
        }

        mysqli_close($conn);
    }
}

// Display login form
?>
<!DOCTYPE html>
<html>
<head>
    <title>Login Page</title>
</head>
<body>
    <?php if (!empty($error_msg)): ?>
        <div style="color: red;"><?php echo $error_msg; ?></div>
    <?php endif; ?>

    <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
        Email:<br>
        <input type="email" name="email" required><br>
        Password:<br>
        <input type="password" name="password" required><br><br>
        <input type="submit" value="Login">
    </form>
</body>
</html>


<?php
// Database connection configuration
$host = 'localhost';
$usernameDB = 'root';
$passwordDB = '';
$dbname = 'test';

// Create database connection
$conn = mysqli_connect($host, $usernameDB, $passwordDB, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

session_start();

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {

    // Get username and password from form data
    $username = mysqli_real_escape_string($conn, $_POST['username']);
    $password = mysqli_real_escape_string($conn, $_POST['password']);

    // Query the database for user with matching username
    $sql = "SELECT * FROM users WHERE username='$username'";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) == 1) {
        $row = mysqli_fetch_assoc($result);
        
        // Check if password matches
        if (md5($password) == $row['password']) {
            $_SESSION['logged_user'] = $username;
            header('Location: dashboard.php');
            exit();
        } else {
            echo "Incorrect password!";
        }
    } else {
        echo "Username does not exist!";
    }

}

// Close database connection
mysqli_close($conn);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login Page</title>
    <style type="text/css">
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
            background-color: #f2f2f2;
        }

        .login-container {
            width: 300px;
            margin: 50px auto;
            padding: 20px;
            background-color: white;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }

        .login-container h1 {
            color: #333;
            text-align: center;
        }

        .form-group {
            margin-bottom: 20px;
        }

        .form-group input {
            width: 100%;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-sizing: border-box;
        }

        button {
            width: 100%;
            padding: 10px;
            background-color: #4CAF50;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }

        button:hover {
            background-color: #45a049;
        }

        .register-link {
            text-align: center;
            margin-top: 20px;
        }

        .register-link a {
            color: #4CAF50;
            text-decoration: none;
        }
    </style>
</head>

<body>
    <div class="login-container">
        <h1>Login</h1>
        <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="POST">
            <div class="form-group">
                <input type="text" name="username" placeholder="Enter username" required>
            </div>
            <div class="form-group">
                <input type="password" name="password" placeholder="Enter password" required>
            </div>
            <button type="submit">Login</button>
        </form>

        <div class="register-link">
            Don't have an account? <a href="#">Register here</a>
        </div>
    </div>
</body>
</html>


<?php
// Database configuration
$host = 'localhost';
$username = 'root'; // Change this to your database username
$password = '';     // Change this to your database password
$dbname = 'mydb';    // Change this to your database name

// Create connection
$conn = mysqli_connect($host, $username, $password, $dbname);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Sanitize input function
function sanitizeInput($data) {
    $data = trim($data);
    $data = stripslashes($data);
    $data = htmlspecialchars($data);
    return $data;
}

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get user input
    $username = sanitizeInput($_POST['username']);
    $password = $_POST['password'];

    // Prevent SQL injection and prepare statement
    $stmt = $conn->prepare("SELECT id, username, password, email FROM users WHERE username = ?");
    $stmt->bind_param("s", $username);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        // Get user data
        $row = $result->fetch_assoc();
        
        // Verify password
        if (password_verify($password, $row['password'])) {
            // Password is correct
            session_start();
            
            // Store user data in session
            $_SESSION["loggedin"] = true;
            $_SESSION["id"] = $row['id'];
            $_SESSION["username"] = $row['username'];
            $_SESSION["email"] = $row['email'];
            
            // Redirect to dashboard
            header("location: dashboard.php");
            exit();
        } else {
            // Password is incorrect
            $error = "Incorrect username or password";
        }
    } else {
        // No user found
        $error = "Incorrect username or password";
    }

    // Close statement
    $stmt->close();
}

// Close connection
$conn->close();

?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Login Page</title>
    <!-- Add your CSS styles here -->
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f0f0f0;
        }
        .container {
            max-width: 500px;
            margin: 0 auto;
            padding: 20px;
            background-color: white;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }
        .form-group {
            margin-bottom: 15px;
        }
        input[type=text], input[type=password] {
            width: 100%;
            padding: 8px;
            border: 1px solid #ddd;
            border-radius: 4px;
        }
        button {
            width: 100%;
            padding: 10px;
            background-color: #4CAF50;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
        button:hover {
            background-color: #45a049;
        }
        .error {
            color: red;
            margin-bottom: 10px;
        }
    </style>
</head>
<body>
    <div class="container">
        <?php if (isset($error)) { ?>
        <div class="error"><?php echo $error; ?></div>
        <?php } ?>

        <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
            <div class="form-group">
                <label for="username">Username:</label>
                <input type="text" id="username" name="username" required>
            </div>

            <div class="form-group">
                <label for="password">Password:</label>
                <input type="password" id="password" name="password" required>
            </div>

            <button type="submit">Login</button>
        </form>
    </div>
</body>
</html>


<?php
// Include necessary files
include 'database_connection.php';

function loginUser($email, $password) {
    // Sanitize inputs
    $email = mysqli_real_escape_string($GLOBALS['db'], $email);
    $password = mysqli_real_escape_string($GLOBALS['db'], $password);

    // Check if email and password are provided
    if (empty($email) || empty($password)) {
        return "Please fill in all required fields";
    }

    // Query the database for user with matching email
    $query = "SELECT * FROM users WHERE email = '$email'";
    $result = mysqli_query($GLOBALS['db'], $query);

    if (mysqli_num_rows($result) == 0) {
        return "Invalid email or password";
    }

    // Get user data
    $user = mysqli_fetch_assoc($result);
    
    // Verify password
    if (md5($password) != $user['password']) {
        return "Invalid email or password";
    }

    // Start session and store user data
    session_start();
    $_SESSION['id'] = $user['id'];
    $_SESSION['name'] = $user['name'];
    $_SESSION['email'] = $user['email'];

    // Redirect to dashboard or home page
    header("Location: dashboard.php");
    exit();
}

// Check if form is submitted
if (isset($_POST['login'])) {
    $email = $_POST['email'];
    $password = $_POST['password'];

    // Call login function and handle any errors
    $error = loginUser($email, $password);
    if ($error) {
        echo "<div class='error'>$error</div>";
    }
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login Page</title>
    <style>
        .login-container {
            width: 300px;
            margin: 50px auto;
            padding: 20px;
            border: 1px solid #ddd;
            border-radius: 5px;
        }
        .error {
            color: red;
            margin-bottom: 10px;
        }
    </style>
</head>
<body>
    <div class="login-container">
        <?php if (isset($_SESSION['id'])) { ?>
            <h2>Welcome, <?php echo $_SESSION['name']; ?></h2>
            <p><a href="logout.php">Logout</a></p>
        <?php } else { ?>
            <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
                <div class="input-group">
                    <label for="email">Email:</label>
                    <input type="email" id="email" name="email" placeholder="Enter your email" required>
                </div>
                <div class="input-group">
                    <label for="password">Password:</label>
                    <input type="password" id="password" name="password" placeholder="Enter your password" required>
                </div>
                <button type="submit" name="login">Login</button>
            </form>
        <?php } ?>
    </div>
</body>
</html>


<?php
session_start();

// Database configuration
$host = 'localhost';
$username_db = 'root';
$password_db = '';
$database = 'login_system';

// Connect to database
$conn = mysqli_connect($host, $username_db, $password_db, $database);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Get login form values
$username = htmlspecialchars($_POST['username']);
$password = htmlspecialchars($_POST['password']);

// Check if username exists in the database
$query_username = "SELECT * FROM users WHERE username='$username'";
$result_username = mysqli_query($conn, $query_username);

if (mysqli_num_rows($result_username) == 0) {
    echo "Username not found!";
    exit();
}

// Verify password
$row = mysqli_fetch_assoc($result_username);
$stored_hashed_password = $row['password'];
$is_password_correct = password_verify($password, $stored_hashed_password);

if (!$is_password_correct) {
    echo "Incorrect password!";
    exit();
}

// Start session and set session variables
$_SESSION['username'] = $username;
$_SESSION['logged_in'] = true;

// Redirect to dashboard or other page
header('Location: dashboard.php');
exit();

// Close database connection
mysqli_close($conn);
?>


<?php
session_start();

// Database connection settings
$host = "localhost";
$username_db = "root"; // Change to your database username
$password_db = "";     // Change to your database password
$db_name = "test_db";  // Change to your database name

// Connect to the database
$conn = mysqli_connect($host, $username_db, $password_db, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

if (isset($_POST['submit'])) {
    $username = htmlspecialchars(trim($_POST['username']));
    $password = htmlspecialchars(trim($_POST['password']));

    if (empty($username) || empty($password)) {
        echo "<p style='color:red'>Username and password are required!</p>";
    } else {
        // Prepare SQL statement to prevent SQL injection
        $stmt = mysqli_prepare($conn, "SELECT * FROM users WHERE username = ?");
        
        if ($stmt === false) {
            die("Prepare failed: " . mysqli_error($conn));
        }
        
        mysqli_stmt_bind_param($stmt, "s", $username);
        mysqli_stmt_execute($stmt);
        $result = mysqli_stmt_get_result($stmt);
        $user = mysqli_fetch_assoc($result);

        if ($user) {
            // Verify password
            if (password_verify($password, $user['password'])) {
                // Start session and set session variables
                $_SESSION['username'] = $user['username'];
                $_SESSION['id'] = $user['id'];
                $_SESSION['logged_in'] = true;

                // Redirect to dashboard or home page
                header("Location: dashboard.php");
                exit();
            } else {
                echo "<p style='color:red'>Incorrect password!</p>";
            }
        } else {
            echo "<p style='color:red'>Username not found!</p>";
        }

        mysqli_stmt_close($stmt);
    }
}

mysqli_close($conn);
?>


ini_set('session.cookie_httponly', 1);
ini_set('session.cookie_secure', 1); // Only use when using HTTPS


$hashed_password = password_hash($password, PASSWORD_DEFAULT);
// Store $hashed_password in the database


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'mydatabase';

// Create connection
$conn = mysqli_connect($host, $username, $password, $dbname);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function loginUser($username, $password) {
    global $conn;
    
    // Sanitize inputs to prevent SQL injection
    $username = mysqli_real_escape_string($conn, $username);
    $password = mysqli_real_escape_string($conn, $password);

    try {
        // Query the database for user with given username
        $stmt = $conn->prepare("SELECT id, password FROM users WHERE username = ?");
        $stmt->bind_param("s", $username);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            // Fetch user data
            $user = $result->fetch_assoc();
            
            // Verify password
            if (password_verify($password, $user['password'])) {
                // Password is correct
                session_start();
                $_SESSION['loggedin'] = true;
                $_SESSION['id'] = $user['id'];
                $_SESSION['username'] = $username;
                
                // Redirect to dashboard or home page
                header("Location: dashboard.php");
                exit();
            } else {
                // Password is incorrect
                return "Incorrect password";
            }
        } else {
            // User does not exist
            return "User not found";
        }
    } catch (Exception $e) {
        // Handle any exceptions that occur during the login process
        error_log("Login error: " . $e->getMessage());
        return "An error occurred during login";
    }
}

// Example usage:
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST['username'];
    $password = $_POST['password'];

    $loginResult = loginUser($username, $password);
    
    if ($loginResult === true) {
        // Login successful
        echo "Login successful!";
    } else {
        // Login failed
        echo $loginResult;
    }
}

// Close database connection
mysqli_close($conn);
?>


<?php
// Start session
session_start();

// Database connection (replace with your database credentials)
$host = 'localhost';
$user = 'root';
$password = '';
$database = 'user_login';

$conn = new mysqli($host, $user, $password, $database);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to sanitize input
function sanitizeInput($data) {
    $data = trim($data);
    $data = stripslashes($data);
    $data = htmlspecialchars($data);
    return $data;
}

if (isset($_POST['login'])) {
    // Get user input
    $username = sanitizeInput($_POST['username']);
    $password = $_POST['password'];

    // Hash password for security
    $hashed_password = hash('sha256', $password);

    // Query to check if username exists in database
    $sql = "SELECT * FROM users WHERE username = ?";
    
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("s", $username);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        // Get user details
        $user_data = $result->fetch_assoc();

        // Compare hashed passwords
        if (hash('sha256', $password) === $user_data['password']) {
            // Login successful, start session and redirect
            $_SESSION['loggedin'] = true;
            $_SESSION['username'] = $user_data['username'];
            $_SESSION['id'] = $user_data['id'];

            header("Location: welcome.php");
            exit();
        } else {
            // Password does not match
            echo "<script>alert('Incorrect password!');</script>";
        }
    } else {
        // Username does not exist
        echo "<script>alert('Username does not exist!');</script>";
    }

    $stmt->close();
}

$conn->close();

// Display login form if not logged in
if (!isset($_SESSION['loggedin'])) {
?>
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Login Page</title>
        <!-- Bootstrap CSS -->
        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    </head>
    <body class="bg-light">
        <div class="container mt-5">
            <div class="row justify-content-center">
                <div class="col-md-6 col-lg-4">
                    <form method="POST" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
                        <h2 class="text-center mb-4">Login</h2>
                        <div class="mb-3">
                            <input type="text" name="username" class="form-control" placeholder="Username" required>
                        </div>
                        <div class="mb-3">
                            <input type="password" name="password" class="form-control" placeholder="Password" required>
                        </div>
                        <button type="submit" name="login" class="btn btn-primary w-100">Login</button>
                    </form>
                </div>
            </div>
        </div>
    </body>
    </html>
<?php
}
?>



<?php
session_start();
if (!isset($_SESSION['loggedin'])) {
    header("Location: login.php");
    exit();
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Welcome Page</title>
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
</head>
<body class="bg-light">
    <div class="container mt-5">
        <h2>Welcome <?php echo $_SESSION['username']; ?>!</h2>
        <a href="logout.php" class="btn btn-primary">Logout</a>
    </div>
</body>
</html>


<?php
session_start();
session_unset(); // Unset all session variables
session_destroy(); // Destroy the session
header("Location: login.php");
exit();
?>


<?php
session_start();

// Database connection details
$host = 'localhost';
$dbUsername = 'root';
$dbPassword = '';
$dbName = 'user_login';

// Create database connection
$conn = mysqli_connect($host, $dbUsername, $dbPassword, $dbName);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function sanitize($data) {
    return htmlspecialchars(strip_tags(trim($data)));
}

if (isset($_POST['submit'])) {
    $username = sanitize($_POST['username']);
    $password = $_POST['password'];

    if (empty($username) || empty($password)) {
        echo "Please fill in all fields!";
    } else {
        // Prepare and execute the SQL query
        $stmt = mysqli_prepare($conn, "SELECT * FROM users WHERE username = ?");
        mysqli_stmt_bind_param($stmt, "s", $username);
        mysqli_execute($stmt);
        $result = mysqli_stmt_get_result($stmt);

        if (mysqli_num_rows($result) == 1) {
            $row = mysqli_fetch_assoc($result);
            if (password_verify($password, $row['password'])) {
                // Password is correct
                $_SESSION['user_id'] = $row['id'];
                $_SESSION['username'] = $row['username'];
                $_SESSION['logged_in'] = true;
                
                // Set session expiry time
                $_SESSION['last_activity'] = time();
                
                header("Location: dashboard.php");
                exit();
            } else {
                echo "Incorrect password!";
            }
        } else {
            echo "No user found with this username!";
        }
    }
}

mysqli_close($conn);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login Page</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            margin: 0;
            background-color: #f0f0f0;
        }

        .login-box {
            background-color: white;
            padding: 20px;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
            width: 300px;
        }

        .form-group {
            margin-bottom: 15px;
        }

        input[type="text"],
        input[type="password"] {
            width: 100%;
            padding: 8px;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-sizing: border-box;
        }

        button {
            background-color: #4CAF50;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            width: 100%;
        }

        button:hover {
            background-color: #45a049;
        }

        .error {
            color: red;
            margin-top: 10px;
        }
    </style>
</head>
<body>
    <div class="login-box">
        <h2>Login</h2>
        <form action="<?php echo htmlspecialchars($_SERVER['PHP_SELF']); ?>" method="post">
            <div class="form-group">
                <input type="text" placeholder="Enter Username" name="username" required>
            </div>
            <div class="form-group">
                <input type="password" placeholder="Enter Password" name="password" required>
            </div>
            <?php
            if (isset($_POST['submit']) && (empty($username) || empty($password))) {
                echo '<div class="error">Please fill in all fields!</div>';
            } elseif (isset($error)) {
                echo '<div class="error">' . $error . '</div>';
            }
            ?>
            <button type="submit" name="submit">Login</button>
        </form>
    </div>
</body>
</html>


<?php
session_start();

// Database connection parameters
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Sanitize inputs
    $email = filter_var($_POST['email'], FILTER_SANITIZE_EMAIL);
    $passwordAttempt = $_POST['password'];

    if (empty($email) || empty($passwordAttempt)) {
        die("Please fill in all required fields.");
    }

    // Prepare SQL statement to prevent SQL injection
    $stmt = $conn->prepare("SELECT id, name, email, password_hash, role FROM users WHERE email = :email");
    $stmt->bindParam(':email', $email);
    $stmt->execute();

    $user = $stmt->fetch(PDO::FETCH_ASSOC);

    if ($user) {
        // Verify the password
        if (password_verify($passwordAttempt, $user['password_hash'])) {
            // Password is correct; start session and store user data
            $_SESSION['logged_in'] = true;
            $_SESSION['user_id'] = $user['id'];
            $_SESSION['username'] = $user['name'];
            $_SESSION['email'] = $user['email'];
            $_SESSION['role'] = $user['role'];

            // Set remember me cookie
            if (!empty($_POST['remember'])) {
                $cookie_value = base64_encode(serialize(array(
                    'id' => $user['id'],
                    'email' => $email,
                    'token' => bin2hex(random_bytes(32))
                )));
                setcookie('remember', $cookie_value, time() + (86400 * 7), '/', '', true, true);
            }

            // Redirect based on user role
            if ($user['role'] === 'admin') {
                header('Location: admin_dashboard.php');
            } else {
                header('Location: dashboard.php');
            }
            exit();
        } else {
            die("Incorrect password. Please try again.");
        }
    } else {
        die("User not found. Please check your email or register.");
    }
} else {
    // If form is accessed directly, redirect to login page
    header('Location: login.php');
    exit();
}

// Close the database connection
$conn = null;
?>


<?php
// Database connection details
$host = 'localhost';
$user = 'username';
$password = 'password';
$db_name = 'database';

// Create database connection
$conn = mysqli_connect($host, $user, $password, $db_name);

// Check if connection failed
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to login user
function loginUser() {
    global $conn;

    // Sanitize input
    $username = htmlspecialchars($_POST['username']);
    $password = $_POST['password'];

    // Check if username exists in database
    $query = "SELECT * FROM users WHERE username = ?";
    $stmt = mysqli_prepare($conn, $query);
    mysqli_stmt_bind_param($stmt, "s", $username);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);

    // If username not found in database
    if (mysqli_num_rows($result) == 0) {
        echo "Username does not exist!";
        return;
    }

    // Get user data
    $row = mysqli_fetch_assoc($result);
    $hashed_password = $row['password'];

    // Verify password
    if (!password_verify($password, $hashed_password)) {
        echo "Incorrect password!";
        return;
    }

    // If login is successful, start session and redirect
    session_start();
    $_SESSION['user_id'] = $row['id'];
    $_SESSION['logged_in'] = true;

    // Redirect to dashboard or home page
    header("Location: dashboard.php");
    exit();
}

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    loginUser();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login Page</title>
</head>
<body>
    <h2>Login</h2>
    <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
        Username: <input type="text" name="username"><br>
        Password: <input type="password" name="password"><br>
        <input type="submit" value="Login">
    </form>
</body>
</html>


<?php
session_start();

// Database configuration
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_database_username';
$password = 'your_database_password';

try {
    // Connect to the database
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

    // Get user input
    $username_login = htmlspecialchars(trim($_POST['username']));
    $password_login = htmlspecialchars(trim($_POST['password']));

    // Prepare and execute SQL query to check if the user exists
    $stmt = $conn->prepare("SELECT * FROM users WHERE username = :username");
    $stmt->bindParam(':username', $username_login);
    $stmt->execute();

    // Fetch the result
    $user = $stmt->fetch(PDO::FETCH_ASSOC);

    if (!$user) {
        throw new Exception('Invalid username or password');
    }

    // Verify password
    if (!password_verify($password_login, $user['password'])) {
        throw new Exception('Invalid username or password');
    }

    // Update last login time
    $stmt = $conn->prepare("UPDATE users SET last_login = NOW() WHERE id = :id");
    $stmt->bindParam(':id', $user['id']);
    $stmt->execute();

    // Start session and store user data
    $_SESSION['user'] = array(
        'id' => $user['id'],
        'username' => $user['username'],
        'email' => $user['email'],
        'role' => $user['role']
    );

} catch (Exception $e) {
    // Handle any errors
    die('Error: ' . $e->getMessage());
}

// Redirect to dashboard or home page after successful login
header('Location: dashboard.php');
exit();
?>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'mydatabase';

// Connect to the database
$conn = new mysqli($host, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to sanitize input data
function sanitizeInput($data) {
    $data = trim($data);
    $data = stripslashes($data);
    $data = htmlspecialchars($data);
    return $data;
}

// Check if form is submitted
if (isset($_POST['submit'])) {
    // Get user input
    $username = sanitizeInput($_POST['username']);
    $password = $_POST['password'];

    // Prevent SQL injection
    $username = $conn->real_escape_string($username);
    $password = $conn->real_escape_string($password);

    // Query the database for the user
    $sql = "SELECT id, username, password FROM users WHERE username = '$username'";
    $result = $conn->query($sql);

    if ($result->num_rows == 1) {
        // User exists, get the stored hash
        $row = $result->fetch_assoc();
        $storedHash = $row['password'];

        // Verify password
        if (password_verify($password, $storedHash)) {
            // Password is correct
            session_start();
            
            // Store user data in session
            $_SESSION['user_id'] = $row['id'];
            $_SESSION['username'] = $row['username'];
            $_SESSION['logged_in'] = true;

            // Redirect to dashboard or home page
            header("Location: dashboard.php");
            exit();
        } else {
            // Password is incorrect
            echo "Invalid username or password";
        }
    } else {
        // User doesn't exist
        echo "Invalid username or password";
    }
}

// Close the database connection
$conn->close();
?>


<?php
// Hash the password before storing in database
$hashedPassword = password_hash($password, PASSWORD_DEFAULT);
?>


<?php
// Check if form was submitted
if (isset($_POST['submit'])) {
    // Get form data
    $username = $_POST['username'];
    $password = $_POST['password'];

    // Clean the input to prevent SQL injection
    $username = mysqli_real_escape_string($conn, $username);
    $password = mysqli_real_escape_string($conn, $password);

    // Database connection
    $servername = "localhost";
    $dbUsername = "root";
    $dbPassword = "";
    $dbname = "test";

    // Create connection
    $conn = mysqli_connect($servername, $dbUsername, $dbPassword, $dbname);

    // Check connection
    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
    }

    // Query to check username existence
    $sql = "SELECT * FROM users WHERE username='$username'";
    $result = mysqli_query($conn, $sql);
    $count = mysqli_num_rows($result);

    if ($count == 0) {
        echo "Invalid username or password";
    } else {
        // Fetch the user data
        $row = mysqli_fetch_assoc($result);
        
        // Verify password
        if (password_verify($password, $row['password'])) {
            // Password is correct
            session_start();
            $_SESSION['user_id'] = $row['id'];
            $_SESSION['username'] = $row['username'];
            
            // Redirect to dashboard
            header("Location: dashboard.php");
            exit();
        } else {
            echo "Invalid username or password";
        }
    }

    // Close the database connection
    mysqli_close($conn);
}
?>


<?php
session_start();

// Database connection
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get form data
    $username = $_POST['username'];
    $password = $_POST['password'];

    try {
        // Prepare the SQL statement
        $stmt = $conn->prepare("SELECT id, username, password FROM users WHERE username = ?");
        $stmt->execute([$username]);

        // Check if user exists
        if ($stmt->rowCount() > 0) {
            $user = $stmt->fetch(PDO::FETCH_ASSOC);
            
            // Verify password
            if (password_verify($password, $user['password'])) {
                // Password is correct
                session_regenerate();
                $_SESSION['loggedin'] = true;
                $_SESSION['username'] = $user['username'];
                $_SESSION['id'] = $user['id'];
                
                // Redirect to dashboard or home page
                header("Location: dashboard.php");
                exit();
            } else {
                // Incorrect password
                $_SESSION['message'] = "Incorrect username or password";
                header("Location: login.php");
                exit();
            }
        } else {
            // User doesn't exist
            $_SESSION['message'] = "User does not exist";
            header("Location: login.php");
            exit();
        }
    } catch(PDOException $e) {
        die("Error occurred: " . $e->getMessage());
    }
}

// Close database connection
$conn = null;
?>


<?php
session_start();

function loginUser($usernameOrEmail, $password, $conn) {
    // Check if username or email exists in the database
    $query = "SELECT * FROM users WHERE username = ? OR email = ?";
    $stmt = $conn->prepare($query);
    $stmt->bind_param("ss", $usernameOrEmail, $usernameOrEmail);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows === 1) {
        // Get user data
        $user = $result->fetch_assoc();

        // Verify password
        if (password_verify($password, $user['password'])) {
            // Password is correct, set session variables
            $_SESSION['id'] = $user['id'];
            $_SESSION['username'] = $user['username'];
            $_SESSION['email'] = $user['email'];

            // Return success message
            return "Login successful!";
        } else {
            // Incorrect password
            return "Invalid password!";
        }
    } else {
        // User doesn't exist
        return "Username or email not found!";
    }

    // Close the statement
    $stmt->close();
}

// Example usage:
// Start by getting input values from a form (e.g., username/email and password)
$usernameOrEmail = $_POST['username_or_email'];
$password = $_POST['password'];

// Call the loginUser function
$resultMessage = loginUser($usernameOrEmail, $password, $conn);

if ($resultMessage === "Login successful!") {
    // Redirect to dashboard or home page
    header("Location: dashboard.php");
} else {
    // Show error message
    echo $resultMessage;
}
?>


<?php
// Configuration
$host = 'localhost';
$dbUsername = 'root'; // Change this to your database username
$dbPassword = '';     // Change this to your database password
$dbName = 'test_db';   // Change this to your database name

try {
    // Set error reporting
    ini_set('display_errors', 1);
    error_reporting(E_ALL);

    // Create connection
    $pdo = new PDO("mysql:host=$host;dbname=$dbName", $dbUsername, $dbPassword);
    $pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

    if (isset($_POST['login'])) {
        // Check if form is submitted

        $usernameOrEmail = $_POST['username'];
        $password = $_POST['password'];

        // Validate input
        if (empty($usernameOrEmail) || empty($password)) {
            die("Please fill in all fields.");
        }

        // Prepare statement to select user from database
        $stmt = $pdo->prepare("SELECT * FROM users WHERE username = ? OR email = ?");
        $stmt->execute([$usernameOrEmail, $usernameOrEmail]);
        $user = $stmt->fetch(PDO::FETCH_ASSOC);

        if ($user) {
            // Verify password
            if (password_verify($password, $user['password'])) {
                // Password is correct
                session_start();

                // Set session variables
                $_SESSION['id'] = $user['id'];
                $_SESSION['username'] = $user['username'];

                // Redirect to dashboard or home page
                header("Location: dashboard.php");
                exit();
            } else {
                // Password is incorrect
                die("Invalid credentials.");
            }
        } else {
            // No user found with this username/email
            die("Invalid credentials.");
        }
    }

} catch (PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login Page</title>
</head>
<body>
    <h2>Login</h2>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <input type="text" name="username" placeholder="Username or Email" required><br><br>
        <input type="password" name="password" placeholder="Password" required><br><br>
        <button type="submit" name="login">Login</button>
    </form>
</body>
</html>


// Password hashing example when registering a new user:
$password = $_POST['password'];
$hashedPassword = password_hash($password, PASSWORD_DEFAULT);


<?php

session_start();

function loginUser($username, $password) {
    // Sanitize inputs to prevent SQL injection
    $username = htmlspecialchars(trim($username));
    $password = htmlspecialchars(trim($password));

    // Database connection parameters
    $host = "localhost";
    $dbUsername = "your_db_user";
    $dbPassword = "your_db_password";
    $dbName = "your_database";

    // Create connection
    $conn = new mysqli($host, $dbUsername, $dbPassword, $dbName);

    // Check connection
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
        return false;
    }

    // Prepare and bind statement to prevent SQL injection
    $stmt = $conn->prepare("SELECT user_id, username, password FROM users WHERE username = ?");
    $stmt->bind_param("s", $username);

    if ($stmt->execute()) {
        $result = $stmt->get_result();
        if ($result->num_rows > 0) {
            // Fetch the result
            $user = $result->fetch_assoc();

            // Verify password
            if (password_verify($password, $user['password'])) {
                // Password is correct

                // Start session and store user data
                $_SESSION['user_id'] = $user['user_id'];
                $_SESSION['username'] = $user['username'];

                // Regenerate session ID to prevent session hijacking
                session_regenerate(true);

                // Optional: Implement remember me functionality
                if (!empty($_POST['remember'])) {
                    setcookie('remember_me', generateToken(), time() + (3600 * 24 * 7), "/", "", false, true);
                }

                $conn->close();
                return true;
            } else {
                // Password is incorrect
                $conn->close();
                return "Invalid username or password.";
            }
        } else {
            // Username not found
            $conn->close();
            return "Username does not exist.";
        }
    } else {
        // Query error
        $conn->close();
        return "An error occurred while logging in. Please try again later.";
    }
}

// Helper function to generate a secure token for remember me cookie
function generateToken() {
    if (function_exists('random_bytes')) {
        $token = random_bytes(32);
    } elseif (function_exists('mcrypt_create_iv')) {
        $token = mcrypt_create_iv(32, MCRYPT_DEV_URANDOM);
    } else {
        $token = bin2hex(openssl_random_pseudo_bytes(32));
    }
    return $token;
}

// Example usage:
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    if (isset($_POST['login'])) {
        $username = $_POST['username'];
        $password = $_POST['password'];

        $loginResult = loginUser($username, $password);

        if ($loginResult === true) {
            header("Location: dashboard.php");
            exit();
        } else {
            echo $loginResult;
        }
    }
}

?>


<?php
session_start();

// Database configuration
$host = "localhost";
$user = "username";
$password = "password";
$db_name = "database_name";

// Connect to database
$conn = new mysqli($host, $user, $password, $db_name);
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function login_user($username, $password, $conn) {
    // Check if username and password are provided
    if (empty($username) || empty($password)) {
        return array(
            'status' => false,
            'message' => "Username and password are required!"
        );
    }

    try {
        // Prepare statement to select user data
        $stmt = $conn->prepare("SELECT id, username, password FROM users WHERE username = ?");
        $stmt->bind_param("s", $username);
        $stmt->execute();
        
        // Get result
        $result = $stmt->get_result();
        
        if ($result->num_rows > 0) {
            $user = $result->fetch_assoc();
            
            // Verify password (password_hash should be used in production)
            $hashed_password = hash('sha256', $password);
            
            if ($user['password'] == $hashed_password) {
                // Password is correct
                $_SESSION['id'] = $user['id'];
                $_SESSION['username'] = $user['username'];
                
                return array(
                    'status' => true,
                    'message' => "Login successful!"
                );
            } else {
                // Incorrect password
                return array(
                    'status' => false,
                    'message' => "Invalid username or password!"
                );
            }
        } else {
            // User not found
            return array(
                'status' => false,
                'message' => "Invalid username or password!"
            );
        }
    } catch (Exception $e) {
        // Error occurred
        return array(
            'status' => false,
            'message' => "An error occurred: " . $e->getMessage()
        );
    }
}

// Check if form was submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $username = $_POST['username'];
    $password = $_POST['password'];
    
    // Call login function
    $result = login_user($username, $password, $conn);
    
    if ($result['status']) {
        // Redirect to dashboard or home page
        header("Location: dashboard.php");
        exit();
    } else {
        echo $result['message'];
    }
}

// Close database connection
$conn->close();
?>


<?php
session_start();
include("db_connection.php"); // Include your database connection file

function user_login($username, $password) {
    global $conn; // Use the global database connection
    
    // Check if username and password are provided
    if (empty($username) || empty($password)) {
        return "Please fill in all fields";
    }

    try {
        // Query the database for the user with the given username
        $stmt = $conn->prepare("SELECT id, username, password, role FROM users WHERE username = ?");
        $stmt->execute([$username]);
        $user = $stmt->fetch(PDO::FETCH_ASSOC);

        // Check if user exists
        if (!$user) {
            return "Username does not exist";
        }

        // Verify the password
        if (!password_verify($password, $user['password'])) {
            return "Incorrect password";
        }

        // Start session and store user data
        $_SESSION['id'] = $user['id'];
        $_SESSION['username'] = $user['username'];
        $_SESSION['role'] = $user['role'];

        // Optional: Implement remember me functionality
        if (isset($_POST['remember'])) {
            $token = bin2hex(random_bytes(32)); // Generate a random token
            $hashed_token = password_hash($token, PASSWORD_DEFAULT);
            
            // Store the token in the database
            $stmt = $conn->prepare("INSERT INTO user_tokens (user_id, token) VALUES (?, ?)");
            $stmt->execute([$user['id'], $hashed_token]);
            
            // Set the cookie to expire in 1 week
            setcookie('remember_me', $token, time() + (7 * 24 * 60 * 60), '/', '', false, true);
        }

        return "success";

    } catch(PDOException $e) {
        // Handle any database errors
        return "An error occurred while logging in: " . $e->getMessage();
    }
}

// Example usage:
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $result = user_login($_POST['username'], $_POST['password']);
    if ($result == "success") {
        header("Location: dashboard.php");
        exit();
    } else {
        echo $result;
    }
}
?>


<?php
// Database configuration
define('DB_HOST', 'localhost');
define('DB_USERNAME', 'username');
define('DB_PASSWORD', 'password');
define('DB_NAME', 'database_name');

function loginUser($email, $password) {
    // Connect to the database
    $conn = mysqli_connect(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);
    
    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
    }

    // Sanitize input data
    $email = mysqli_real_escape_string($conn, $email);

    // Prepare and execute SQL query using prepared statements
    $stmt = $conn->prepare("SELECT user_id, password FROM users WHERE email = ?");
    $stmt->bind_param("s", $email);
    
    $stmt->execute();
    
    // Get the result
    $result = $stmt->get_result();
    $user = $result->fetch_assoc();

    if ($user) {
        // Verify password
        if (password_verify($password, $user['password'])) {
            // Password is correct
            session_start();
            
            // Store user data in session
            $_SESSION['user_id'] = $user['user_id'];
            $_SESSION['logged_in'] = true;
            
            // Optional: Regenerate session ID to prevent session fixation attacks
            session_regenerate(true);
            
            return true;
        } else {
            // Password is incorrect
            echo "Invalid email or password";
            header("Refresh: 2; url=login.php");
            exit();
        }
    } else {
        // User doesn't exist
        echo "Email does not exist!";
        header("Refresh: 2; url=login.php");
        exit();
    }

    $stmt->close();
    $conn->close();
}

// Example of how to use this function
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    if (isset($_POST['email']) && isset($_POST['password'])) {
        loginUser($_POST['email'], $_POST['password']);
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login Page</title>
</head>
<body>
    <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]);?>">
        Email: <input type="text" name="email"><br>
        Password: <input type="password" name="password"><br>
        <input type="submit" value="Login">
    </form>
</body>
</html>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'mydatabase';

// Create connection
$conn = new mysqli($host, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function login_user() {
    global $conn;
    
    // Get user input
    $username = htmlspecialchars(trim($_POST['username']));
    $password = htmlspecialchars(trim($_POST['password']));
    
    // Check if username and password are provided
    if (empty($username) || empty($password)) {
        return "Please fill in all fields";
    }
    
    // Sanitize inputs to prevent SQL injection
    $username = $conn->real_escape_string($username);
    
    // Query the database for the user
    $sql = "SELECT * FROM users WHERE username='$username'";
    $result = $conn->query($sql);
    
    if ($result->num_rows == 1) {
        $user_data = $result->fetch_assoc();
        
        // Verify password
        if (password_verify($password, $user_data['password'])) {
            // Password is correct
            
            // Start session
            session_start();
            
            // Store user data in session
            $_SESSION['username'] = $user_data['username'];
            $_SESSION['id'] = $user_data['id'];
            $_SESSION['logged_in'] = true;
            
            // Redirect to dashboard or home page
            header("Location: dashboard.php");
            exit();
        } else {
            return "Incorrect password";
        }
    } else {
        return "Username not found";
    }
}

// Call the login function and display any error messages
if (isset($_POST['login'])) {
    $error = login_user();
    if ($error) {
        echo $error;
    }
}
?>


<?php 
session_start();

// Database configuration
$host = "localhost";
$usernameDB = "root"; // Change this to your database username
$passwordDB = "";     // Change this to your database password
$database = "users_db"; // Change to your database name

// Connect to the database
$conn = new mysqli($host, $usernameDB, $passwordDB, $database);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Sanitize input
    $username = htmlspecialchars(trim($_POST['username']));
    $password = $_POST['password'];
    
    if (empty($username) || empty($password)) {
        header("Location: login.html?error=Username%20and%20password%20are%20required.");
        exit();
    }
    
    // Prepare the SQL statement
    $stmt = $conn->prepare("SELECT user_id, username, password_hash, full_name FROM users WHERE username = ?");
    $stmt->bind_param("s", $username);
    $stmt->execute();
    
    $result = $stmt->get_result();
    if ($result->num_rows == 0) {
        header("Location: login.html?error=Invalid%20username%20or%20password.");
        exit();
    }
    
    $user = $result->fetch_assoc();
    
    // Verify password
    if (!password_verify($password, $user['password_hash'])) {
        header("Location: login.html?error=Invalid%20username%20or%20password.");
        exit();
    }
    
    // Start session and store user details
    $_SESSION["logged_in"] = true;
    $_SESSION["user_id"] = $user["user_id"];
    $_SESSION["username"] = $user["username"];
    $_SESSION["full_name"] = $user["full_name"];
    
    // Redirect to dashboard or home page
    header("Location: dashboard.php");
    exit();
}
?>


<?php 
session_start();

$host = "localhost";
$usernameDB = "root";
$passwordDB = "";
$database = "users_db";

$conn = new mysqli($host, $usernameDB, $passwordDB, $database);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Sanitize input
    $full_name = htmlspecialchars(trim($_POST['full_name']));
    $username = htmlspecialchars(trim($_POST['username']));
    $password = $_POST['password'];
    
    if (empty($full_name) || empty($username) || empty($password)) {
        header("Location: register.html?error=All%20fields%20are%20required.");
        exit();
    }
    
    // Check if username exists
    $checkUsername = $conn->prepare("SELECT id FROM users WHERE username = ?");
    $checkUsername->bind_param("s", $username);
    $checkUsername->execute();
    
    if ($checkUsername->get_result()->num_rows > 0) {
        header("Location: register.html?error=Username%20already%20exists.");
        exit();
    }
    
    // Hash password
    $hashedPassword = password_hash($password, PASSWORD_DEFAULT);
    
    // Insert into database
    $stmt = $conn->prepare("INSERT INTO users (full_name, username, password_hash) VALUES (?, ?, ?)");
    $stmt->bind_param("sss", $full_name, $username, $hashedPassword);
    
    if ($stmt->execute()) {
        header("Location: register.html?success=Registration%20successful!%20Please%20login.");
    } else {
        echo "Error registering: " . $conn->error;
    }
}
?>


<?php 
session_start();
session_unset();
session_destroy();
header("Location: login.html");
exit();
?>


<?php
// Database connection details
$host = 'localhost';
$username = 'root'; // Change this to your database username
$password = '';     // Change this to your database password
$db_name = 'mydatabase'; // Change this to your database name

// Connect to the database
$conn = mysqli_connect($host, $username, $password, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Check if form is submitted
if (isset($_POST['login'])) {
    // Sanitize input data
    $email_username = mysqli_real_escape_string($conn, $_POST['email_username']);
    $password = mysqli_real_escape_string($conn, $_POST['password']);

    // Prepare the SQL query to prevent SQL injection
    $stmt = $conn->prepare("SELECT id, username, email, password FROM users WHERE username = ? OR email = ?");
    $stmt->bind_param("ss", $email_username, $email_username);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        // Fetch user data
        $user = $result->fetch_assoc();
        
        // Verify password
        if (password_verify($password, $user['password'])) {
            // Password is correct
            session_start();
            $_SESSION['user_id'] = $user['id'];
            $_SESSION['username'] = $user['username'];
            $_SESSION['email'] = $user['email'];
            
            // Redirect to dashboard or home page
            header("Location: dashboard.php");
            exit();
        } else {
            echo "Incorrect password";
        }
    } else {
        echo "No user found with this username/email";
    }
}

mysqli_close($conn);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login Page</title>
</head>
<body>
    <h2>Login</h2>
    <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
        <label>Username or Email:</label><br>
        <input type="text" name="email_username"><br>
        <label>Password:</label><br>
        <input type="password" name="password"><br><br>
        <input type="submit" name="login" value="Login">
    </form>

    <!-- Links for registration and password recovery -->
    <p>Don't have an account? <a href="register.php">Register here</a></p>
    <p>Forgot your password? <a href="reset_password.php">Reset Password</a></p>
</body>
</html>


<?php
// Database configuration
$host = "localhost";
$username_db = "root";
$password_db = "";
$db_name = "mydatabase";

// Connect to database
$conn = mysqli_connect($host, $username_db, $password_db, $db_name);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Check if form is submitted
if (isset($_POST['username']) && isset($_POST['password'])) {
    $username = $_POST['username'];
    $password = $_POST['password'];

    // Sanitize input data to prevent SQL injection
    $username = mysqli_real_escape_string($conn, $username);
    $password = mysqli_real_escape_string($conn, password_hash($password, PASSWORD_DEFAULT));

    // Query database for user with matching username and password
    $query = "SELECT * FROM users WHERE username='$username'";
    $result = mysqli_query($conn, $query);

    if (mysqli_num_rows($result) == 1) {
        $row = mysqli_fetch_assoc($result);
        // Verify the password hash
        if (password_verify($password, $row['password'])) {
            // Set session variables
            $_SESSION['username'] = $username;
            $_SESSION['logged_in'] = true;

            // Redirect to dashboard or home page
            header('Location: dashboard.php');
            exit();
        } else {
            echo "Invalid username or password";
        }
    } else {
        echo "Invalid username or password";
    }
}

// Close database connection
mysqli_close($conn);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login Page</title>
</head>
<body>
    <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
        <label for="username">Username:</label><br>
        <input type="text" id="username" name="username"><br>
        <label for="password">Password:</label><br>
        <input type="password" id="password" name="password"><br>
        <input type="submit" value="Login">
    </form>
</body>
</html>


<?php
// Initialize session
session_start();

// Database connection parameters
$host = 'localhost'; // Replace with your database host
$db_username = 'root'; // Replace with your database username
$db_password = ''; // Replace with your database password
$db_name = 'your_database'; // Replace with your database name

// Connect to MySQL database
$conn = mysqli_connect($host, $db_username, $db_password, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to sanitize input data
function sanitizeInput($data) {
    $data = htmlspecialchars(strip_tags(trim($data)));
    return $data;
}

// Check if form is submitted
if (isset($_POST['login'])) {
    // Retrieve and sanitize input data
    $username_email = sanitizeInput($_POST['username_email']);
    $password = $_POST['password'];

    // Check if input fields are not empty
    if (empty($username_email) || empty($password)) {
        $error = "Please fill in all required fields.";
    } else {
        // Prepare the SQL statement to prevent SQL injection
        $stmt = $conn->prepare("SELECT id, username, email, password FROM users WHERE username = ? OR email = ?");
        $stmt->bind_param("ss", $username_email, $username_email);
        $stmt->execute();
        
        // Get result
        $result = $stmt->get_result();
        $user = $result->fetch_assoc();

        if ($user) {
            // Verify password
            if (password_verify($password, $user['password'])) {
                // Start session and store user data
                $_SESSION['id'] = $user['id'];
                $_SESSION['username'] = $user['username'];
                $_SESSION['logged_in'] = true;

                // Regenerate session ID to prevent session fixation attacks
                session_regenerate(true);

                // Redirect to dashboard or home page
                header("Location: dashboard.php");
                exit();
            } else {
                $error = "Invalid username/email or password.";
            }
        } else {
            $error = "User not found. Please check your credentials or register first.";
        }
    }
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Login Page</title>
    <style>
        body { font-family: Arial, sans-serif; max-width: 500px; margin: 0 auto; padding: 20px; }
        .error { color: red; margin-bottom: 10px; }
        form { border: 1px solid #ccc; padding: 10px; }
        input { width: 100%; padding: 8px; margin: 5px 0; }
    </style>
</head>
<body>
<?php if (isset($error)) : ?>
    <div class="error"><?php echo $error ?></div>
<?php endif; ?>

<form action="<?php echo htmlspecialchars($_SERVER['PHP_SELF']); ?>" method="post">
    <h2>Login</h2>
    <input type="text" name="username_email" placeholder="Username or Email" required><br>
    <input type="password" name="password" placeholder="Password" required><br>
    <button type="submit" name="login">Login</button>
</form>

<p>Don't have an account? <a href="register.php">Register here</a>.</p>
</body>
</html>

<?php
// Close database connection
$conn->close();
?>


<?php
session_start();
require_once 'db_connection.php'; // Include your database connection file

function loginUser() {
    if (isset($_POST['submit'])) {
        $username = trim($_POST['username']);
        $password = trim($_POST['password']);

        // Sanitize inputs to prevent SQL injection
        $username = mysqli_real_escape_string($GLOBALS['conn'], $username);
        $password = mysqli_real_escape_string($GLOBALS['conn'], $password);

        if (empty($username) || empty($password)) {
            echo "Username or password cannot be empty!";
            return;
        }

        // Query the database for the user
        $sql = "SELECT * FROM users WHERE username = '$username'";
        $result = mysqli_query($GLOBALS['conn'], $sql);

        if (mysqli_num_rows($result) == 0) {
            echo "Username not found!";
            return;
        }

        $user_data = mysqli_fetch_assoc($result);
        
        // Verify password
        if (!password_verify($password, $user_data['password'])) {
            echo "Incorrect password!";
            return;
        }

        // Start session and store user data
        $_SESSION['user_id'] = $user_data['id'];
        $_SESSION['username'] = $user_data['username'];

        // Redirect to dashboard or home page
        header("Location: dashboard.php");
        exit();
    }
}

loginUser();

// Close database connection
mysqli_close($GLOBALS['conn']);
?>


// Set session cookie parameters
ini_set('session.cookie_httponly', 1);
ini_set('session.use_strict_mode', 1);

// Regenerate session ID to prevent fixation attacks
session_regenerate();


<?php
$servername = "localhost";
$username_db = "root";
$password_db = "";
$dbname = "your_database";

$conn = mysqli_connect($servername, $username_db, $password_db, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}
?>


<?php
// Database connection parameters
$host = "localhost";
$user = "root";
$password = "";
$db_name = "your_database";

// Connect to database
$conn = new mysqli($host, $user, $password, $db_name);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

session_start();

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Escape user inputs to prevent SQL injection
    $username = $conn->real_escape_string($_POST['username']);
    $password = md5($conn->real_escape_string($_POST['password']));

    // Query the database for the user
    $query = "SELECT * FROM users WHERE username='$username'";
    $result = $conn->query($query);

    if ($result->num_rows == 1) {
        // User exists, check password
        $row = $result->fetch_assoc();
        
        if ($row['password'] == $password) {
            // Password matches, start session
            $_SESSION['username'] = $username;
            $_SESSION['user_id'] = $row['id'];
            
            // Redirect to dashboard or home page
            header("Location: dashboard.php");
            exit();
        } else {
            // Incorrect password
            echo "Incorrect password";
        }
    } else {
        // User does not exist
        echo "Username does not exist";
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login Page</title>
</head>
<body>
    <h2>Login Form</h2>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        Username: <input type="text" name="username"><br>
        Password: <input type="password" name="password"><br>
        <input type="submit" value="Login">
    </form>
</body>
</html>


<?php
// Start the session
session_start();

// Database configuration
$host = 'localhost';
$username_db = 'root';
$password_db = '';
$db_name = 'user_login';

// Connect to database
$conn = mysqli_connect($host, $username_db, $password_db, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Sanitize input data
$email = htmlspecialchars(trim($_POST['email']));
$password = $_POST['password'];

// Validate input fields
if (empty($email) || empty($password)) {
    $error = "Email and password are required!";
    include 'login_form.php';
    exit();
}

// Check email format
if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
    $error = "Invalid email format!";
    include 'login_form.php';
    exit();
}

// Prepare SQL statement to prevent SQL injection
$stmt = mysqli_prepare($conn, "SELECT id, email, password FROM users WHERE email=?");
mysqli_stmt_bind_param($stmt, "s", $email);
mysqli_stmt_execute($stmt);
$result = mysqli_stmt_get_result($stmt);

if ($row = mysqli_fetch_assoc($result)) {
    // Verify password
    if (password_verify($password, $row['password'])) {
        // Password is correct
        $_SESSION['user_id'] = $row['id'];
        $_SESSION['email'] = $row['email'];
        
        // Redirect to welcome page
        header("Location: welcome.php");
        exit();
    } else {
        // Password incorrect
        $error = "Incorrect email or password!";
        include 'login_form.php';
        exit();
    }
} else {
    // User not found
    $error = "Incorrect email or password!";
    include 'login_form.php';
    exit();
}

// Close database connection
mysqli_close($conn);
?>


<?php
session_start();

if (!isset($_SESSION['user_id'])) {
    header("Location: login_form.php");
    exit();
}

echo "Welcome, " . $_SESSION['email'] . "! <br>";
?>

<a href="logout.php">Logout</a>


<?php
session_start();

// Destroy session and cookies
$_SESSION = array();
if (ini_get("session.use_cookies")) {
    $params = session_get_cookie_params();
    setcookie(session_name(), '', time() - 42000,
        $params["path"], $params["domain"],
        $params["secure"], $params["httponly"]);
}
session_destroy();

// Redirect to login page
header("Location: login_form.php");
exit();
?>


<?php
$hashed_password = password_hash($password, PASSWORD_DEFAULT);
// Store $hashed_password in your database
?>


<?php
// Include database configuration file
include('config.php');

function loginUser() {
    // Check if form is submitted
    if (isset($_POST['username']) && isset($_POST['password'])) {
        $username = $_POST['username'];
        $password = $_POST['password'];

        try {
            // Prepare SQL statement to select user based on username
            $stmt = $pdo->prepare("SELECT * FROM users WHERE username = ?");
            $stmt->execute([$username]);
            
            // Check if user exists
            if ($stmt->rowCount() > 0) {
                $user = $stmt->fetch(PDO::FETCH_ASSOC);
                
                // Verify password
                if (password_verify($password, $user['password'])) {
                    // Password is correct, start session and redirect to dashboard
                    session_start();
                    
                    $_SESSION['user_id'] = $user['id'];
                    $_SESSION['username'] = $user['username'];
                    $_SESSION['email'] = $user['email'];
                    $_SESSION['logged_in'] = true;
                    
                    // Optional: Set remember me cookie
                    if (isset($_POST['remember'])) {
                        setcookie('username', $username, time() + 3600 * 24 * 7, '/');
                        setcookie('password', $password, time() + 3600 * 24 * 7, '/');
                    }
                    
                    // Redirect to dashboard
                    header("Location: dashboard.php");
                    exit();
                } else {
                    // Password is incorrect
                    echo "Incorrect password!";
                }
            } else {
                // User does not exist
                echo "Username does not exist!";
            }
        } catch (PDOException $e) {
            die("Connection failed: " . $e->getMessage());
        }
    }
}

// Create login form HTML
function loginForm() {
    ?>
    <form action="<?php $_SERVER['PHP_SELF']; ?>" method="post">
        <input type="text" name="username" placeholder="Username" required>
        <input type="password" name="password" placeholder="Password" required>
        <input type="checkbox" name="remember"> Remember me
        <button type="submit">Login</button>
    </form>
    <?php
}

// Main login function
function main() {
    // Show login form if not logged in
    session_start();
    
    if (!isset($_SESSION['logged_in'])) {
        loginUser();
        loginForm();
    } else {
        header("Location: dashboard.php");
        exit();
    }
}

main();
?>


$hashed_password = password_hash($password, PASSWORD_DEFAULT);
// Store $hashed_password in database


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'mydatabase';

// Create connection
$conn = mysqli_connect($host, $username, $password, $dbname);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function login() {
    // Get form input values
    $username = $_POST['username'];
    $password = $_POST['password'];

    // Sanitize the inputs
    global $conn;
    $username = mysqli_real_escape_string($conn, $username);
    $password = mysqli_real_escape_string($conn, $password);

    // Query database for user with this username or email
    $query = "SELECT id, username, password FROM users WHERE username = '$username' OR email = '$username'";
    
    $result = mysqli_query($conn, $query);

    if (mysqli_num_rows($result) == 1) {
        // User exists - verify password
        $row = mysqli_fetch_assoc($result);
        $hashed_password = $row['password'];
        
        if (password_verify($password, $hashed_password)) {
            // Password matches - start session
            session_start();
            $_SESSION['user_id'] = $row['id'];
            $_SESSION['username'] = $row['username'];
            
            // Redirect to dashboard
            header("Location: dashboard.php");
            exit();
        } else {
            // Incorrect password
            setcookie('login_error', 'Incorrect username or password');
            header("Location: login.php");
            exit();
        }
    } else {
        // User doesn't exist
        setcookie('login_error', 'Incorrect username or password');
        header("Location: login.php");
        exit();
    }
}

// Call the login function if form is submitted
if (isset($_POST['submit'])) {
    login();
}
?>


<?php
session_start();
if (!isset($_SESSION['username'])) {
    header("Location: login.php");
    exit();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Dashboard</title>
</head>
<body>
    <h1>Welcome, <?php echo $_SESSION['username']; ?></h1>
    <a href="logout.php">Logout</a>
</body>
</html>


<?php
session_start();
session_unset();
session_destroy();
header("Location: login.php");
exit();
?>


<?php
// Include database configuration
include('config.php');

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $username = mysqli_real_escape_string($conn, $_POST['username']);
    $password = $_POST['password'];

    // Query to check if username exists
    $query = "SELECT id, username, password FROM users WHERE username = ?";
    $stmt = $conn->prepare($query);
    $stmt->bind_param("s", $username);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows == 1) {
        // Fetch user data
        $user = $result->fetch_assoc();
        // Verify password
        if (password_verify($password, $user['password'])) {
            // Password is correct
            session_start();
            $_SESSION['loggedin'] = true;
            $_SESSION['username'] = $user['username'];
            $_SESSION['id'] = $user['id'];
            
            header("location: dashboard.php");
            exit();
        } else {
            echo "Incorrect password";
        }
    } else {
        // Username not found
        echo "Username does not exist";
    }

    $stmt->close();
} else {
    // If accessed directly, redirect to login page
    header("location: index.html");
}
?>


<?php
$servername = "localhost";
$username = "root";
$password = "";
$dbname = "login_system";

// Create connection
$conn = new mysqli($servername, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}
?>


// Example registration script
<?php
include('config.php');

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $username = mysqli_real_escape_string($conn, $_POST['username']);
    $password = password_hash($_POST['password'], PASSWORD_DEFAULT);
    
    $query = "INSERT INTO users (username, password_hash) VALUES (?, ?)";
    $stmt = $conn->prepare($query);
    $stmt->bind_param("ss", $username, $password);
    
    if ($stmt->execute()) {
        echo "Registration successful!";
    } else {
        echo "Error: " . $stmt->error;
    }
    
    $stmt->close();
}
?>


<?php
// Database connection configuration
$host = "localhost";
$username_db = "root"; // Your database username
$password_db = "";     // Your database password
$dbname = "user_login"; // Your database name

// Create database connection
$conn = mysqli_connect($host, $username_db, $password_db, $dbname);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function userLogin($username, $password, $update_last_login = true) {
    global $conn;

    // SQL query to select the user by username
    $sql = "SELECT user_id, password, last_login FROM users WHERE username = '" . mysqli_real_escape_string($conn, $username) . "'";
    
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) == 1) {
        $row = mysqli_fetch_assoc($result);
        
        // Verify the password
        if (password_verify($password, $row['password'])) {
            // Update last login time if required
            if ($update_last_login) {
                $update_sql = "UPDATE users SET last_login = NOW() WHERE user_id = " . $row['user_id'];
                mysqli_query($conn, $update_sql);
            }
            
            // Start the session and store user details
            session_start();
            $_SESSION['user_id'] = $row['user_id'];
            $_SESSION['username'] = $username;
            $_SESSION['email'] = $row['email']; // Assuming email is stored in your database
            
            return true;
        } else {
            // Incorrect password
            return false;
        }
    } else {
        // User not found
        return false;
    }
}

// Example usage:
if (isset($_POST['login'])) {
    $username = $_POST['username'];
    $password = $_POST['password'];

    if (userLogin($username, $password)) {
        header("Location: dashboard.php");
        exit();
    } else {
        echo "Invalid username or password!";
    }
}
?>


<?php
session_start();

// Database configuration
$host = 'localhost';
$db_username = 'root'; // Change to your database username
$db_password = '';     // Change to your database password
$db_name = 'login_system';

// Connect to the database
$conn = mysqli_connect($host, $db_username, $db_password, $db_name);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to sanitize input data
function sanitize($data) {
    return htmlspecialchars(strip_tags(trim($data)));
}

// Handle login form submission
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = sanitize($_POST['username']);
    $password = $_POST['password'];
    $remember = isset($_POST['remember']) ? 1 : 0;

    // Check if username or email is provided
    if (empty($username) || empty($password)) {
        echo "Please fill in all required fields!";
        exit();
    }

    // Prepare and bind the SQL statement to prevent SQL injection
    $stmt = $conn->prepare("SELECT id, username, email, password FROM users WHERE username = ? OR email = ?");
    $stmt->bind_param("ss", $username, $username);
    $stmt->execute();

    // Get the result
    $result = $stmt->get_result();
    $user = $result->fetch_assoc();

    if ($user) {
        // Verify password
        if (password_verify($password, $user['password'])) {
            // Password is correct
            session_regenerate(true); // Regenerate session to prevent fixation

            $_SESSION['loggedin'] = true;
            $_SESSION['id'] = $user['id'];
            $_SESSION['username'] = $user['username'];
            $_SESSION['email'] = $user['email'];
            $_SESSION['login_time'] = time();

            if ($remember) {
                // Set a cookie to remember the user
                setcookie('rememberme', $user['id'] . '|' . hash_hmac('sha256', $user['username'], $db_password), time() + (86400 * 30)); // Cookie will expire after 30 days
            }

            header("Location: dashboard.php");
            exit();
        } else {
            echo "Incorrect password!";
        }
    } else {
        echo "Username or email not found!";
    }
}

// Close the database connection
mysqli_close($conn);
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login Page</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
</head>
<body>
    <div class="container mt-5">
        <h2 class="text-center mb-4">Login Form</h2>
        <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post" class="col-md-6 offset-md-3">
            <div class="form-group">
                <label for="username">Username or Email:</label>
                <input type="text" name="username" id="username" class="form-control" placeholder="Enter your username or email">
            </div>
            <div class="form-group">
                <label for="password">Password:</label>
                <input type="password" name="password" id="password" class="form-control" placeholder="Enter your password">
            </div>
            <div class="form-group form-check">
                <input type="checkbox" name="remember" class="form-check-input">
                <label class="form-check-label" for="remember">Remember me</label>
            </div>
            <button type="submit" class="btn btn-primary">Login</button><br><br>
            <a href="register.php">Create an account here.</a><br>
            <a href="forgot-password.php">Forgot Password?</a>
        </form>
    </div>

    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.4/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
</body>
</html>


<?php
// Function to handle user login
function userLogin($username, $password) {
    // Database connection parameters
    $host = 'localhost';
    $db_name = 'your_database';
    $db_user = 'your_username';
    $db_pass = 'your_password';

    try {
        // Create a database connection using PDO
        $conn = new PDO("mysql:host=$host;dbname=$db_name", $db_user, $db_pass);
        $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

        // Sanitize input to prevent SQL injection
        $username = htmlspecialchars(trim($username));
        $password = htmlspecialchars(trim($password));

        // Prepare the SQL query
        $stmt = $conn->prepare("SELECT * FROM users WHERE username = ?");
        $stmt->execute([$username]);
        
        // Fetch the user data
        $user = $stmt->fetch(PDO::FETCH_ASSOC);

        // Check if user exists and password matches
        if ($user) {
            // Verify password using password_verify()
            if (password_verify($password, $user['password'])) {
                // Password is correct, start a session
                session_start();
                
                // Store user data in the session
                $_SESSION['user_id'] = $user['id'];
                $_SESSION['username'] = $user['username'];
                $_SESSION['email'] = $user['email'];
                
                return true;
            } else {
                // Password is incorrect
                throw new Exception("Incorrect password");
            }
        } else {
            // User does not exist
            throw new Exception("Username not found");
        }
    } catch (PDOException $e) {
        // Handle database connection errors
        echo "Connection failed: " . $e->getMessage();
        return false;
    } catch (Exception $e) {
        // Handle other errors
        echo $e->getMessage();
        return false;
    }
}

// Example usage:
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $username = $_POST['username'];
    $password = $_POST['password'];

    if (userLogin($username, $password)) {
        // Redirect to dashboard or home page
        header("Location: dashboard.php");
        exit();
    }
}
?>


<?php
session_start();

// Database configuration
$host = 'localhost';
$dbname = 'mydatabase';
$username = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Retrieve username and password from form
    $username = $_POST['username'];
    $password = $_POST['password'];

    if (empty($username) || empty($password)) {
        $error = "Username or password cannot be empty!";
        header("Location: index.php");
        exit();
    }

    // Prepare the SQL statement to prevent SQL injection
    $stmt = $conn->prepare("SELECT * FROM users WHERE username = ?");
    $stmt->execute([$username]);
    
    $user = $stmt->fetch(PDO::FETCH_ASSOC);

    if (!$user) {
        $error = "Username not found!";
        header("Location: index.php");
        exit();
    }

    // Verify password
    if (!password_verify($password, $user['password'])) {
        $error = "Incorrect password!";
        header("Location: index.php");
        exit();
    }

    // Start the session and store user data
    $_SESSION['id'] = $user['id'];
    $_SESSION['username'] = $user['username'];
    $_SESSION['loggedin'] = true;

    // Redirect to dashboard or another page
    header("Location: dashboard.php");
    exit();
}

// Close database connection
$conn = null;
?>


<?php
session_start();

if (!isset($_SESSION['loggedin']) || $_SESSION['loggedin'] !== true) {
    header("Location: index.php");
    exit();
}

echo "<h1>Welcome, " . htmlspecialchars($_SESSION['username']) . "!</h1>";
echo "<a href='logout.php'>Logout</a>";
?>


<?php
session_start();

// Destroy all session data
session_unset();
session_destroy();

// Redirect to login page
header("Location: index.php");
exit();
?>


$hashed_password = password_hash($plain_password, PASSWORD_DEFAULT);


if (password_verify($user_input_password, $hashed_password)) {
    // Valid password
}


<?php
// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'mydatabase';

// Create connection
$conn = new mysqli($host, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

session_start();

// If form is submitted
if (isset($_POST['submit'])) {

    // Sanitize input data
    $username = htmlspecialchars(trim($_POST['username']));
    $password = trim($_POST['password']);

    // Check if username and password are not empty
    if ($username == "" || $password == "") {
        echo "Please fill in all fields!";
        exit();
    }

    // Prepare SQL statement to select user by username
    $stmt = $conn->prepare("SELECT id, username, password FROM users WHERE username = ?");
    $stmt->bind_param("s", $username);
    $stmt->execute();

    // Get result
    $result = $stmt->get_result();
    
    if ($result->num_rows > 0) {
        // Fetch user data
        $user = $result->fetch_assoc();

        // Verify password
        if (password_verify($password, $user['password'])) {

            // Start session and store user data
            $_SESSION['logged_in'] = true;
            $_SESSION['user_id'] = $user['id'];
            $_SESSION['username'] = $user['username'];

            // Optional: Set cookie for remember me feature
            if (isset($_POST['remember'])) {
                $cookie_name = 'login_cookie';
                $cookie_value = $username . ':' . $password;
                setcookie($cookie_name, $cookie_value, time() + 3600); // Cookie expires after 1 hour
            }

            // Redirect to dashboard or home page
            header("Location: dashboard.php");
            exit();
        } else {
            echo "Incorrect password!";
        }
    } else {
        echo "Username not found!";
    }
}

// Close database connection
$conn->close();
?>


<?php
session_start();

// Database configuration
$host = 'localhost';
$dbname = 'mydatabase';
$username = 'root';
$password = '';

try {
    $pdo = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

// Function to sanitize input
function sanitize($data) {
    return htmlspecialchars(trim($data));
}

// Login function
function loginUser() {
    global $pdo;

    if (!empty($_POST['username']) && !empty($_POST['password'])) {
        $username = sanitize($_POST['username']);
        $password = $_POST['password'];

        try {
            // Check both username and email for login
            $stmt = $pdo->prepare("SELECT * FROM users WHERE username = ? OR email = ?");
            $stmt->execute([$username, $username]);
            
            $user = $stmt->fetch(PDO::FETCH_ASSOC);

            if ($user) {
                // Verify password (using md5 for simplicity; consider using bcrypt in production)
                if (md5($password) === $user['password']) {
                    $_SESSION['logged_in'] = true;
                    $_SESSION['username'] = $user['username'];
                    
                    // Optional: Store last login time
                    date_default_timezone_set('UTC');
                    $last_login = date('Y-m-d H:i:s');
                    
                    // Update last login time in database (optional)
                    $updateStmt = $pdo->prepare("UPDATE users SET last_login = ? WHERE id = ?");
                    $updateStmt->execute([$last_login, $user['id']]);
                    
                    header("Location: dashboard.php");
                    exit();
                } else {
                    echo "Incorrect password.";
                }
            } else {
                echo "Username or email does not exist.";
            }
        } catch (PDOException $e) {
            die("Error occurred while logging in: " . $e->getMessage());
        }
    }
}

// Logout function
function logout() {
    session_unset();
    session_destroy();
    header("Location: login.php");
    exit();
}

?>


<?php
session_start();

function loginUser($username, $password) {
    // Sanitize input
    $username = filter_var(trim($username), FILTER_SANITIZE_STRING);
    $password = filter_var(trim($password), FILTER_SANITIZE_STRING);

    if ($username === "" || $password === "") {
        return false;
    }

    // Connect to the database
    include 'db_config.php'; // Make sure to include your database configuration

    // Escape special characters
    $username = mysqli_real_escape_string($conn, $username);

    // Query the database for the user
    $query = "SELECT * FROM users WHERE username = '$username'";
    $result = mysqli_query($conn, $query);
    
    if (!$result) {
        die("Query failed: " . mysqli_error($conn));
    }

    // Check if a user exists with that username
    if (mysqli_num_rows($result) == 1) {
        $user = mysqli_fetch_assoc($result);

        // Verify the password
        if (password_verify($password, $user['password'])) {

            // Create session variables
            $_SESSION['user_id'] = $user['id'];
            $_SESSION['username'] = $user['username'];
            $_SESSION['email'] = $user['email'];
            
            // Optional: Remember me cookie
            if (!empty($_POST['remember_me'])) {
                setcookie('remember_username', $username, time() + (86400 * 30), "/");
            }

            return true;
        }
    }

    // If no user found or password doesn't match
    return false;
}

// Example usage:
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    if (loginUser($_POST['username'], $_POST['password'])) {
        header("Location: dashboard.php");
        exit();
    } else {
        $error_message = "Invalid username or password!";
        // Handle error message display
    }
}
?>


<?php
session_start();

function user_login() {
    // Check if form is submitted
    if ($_SERVER['REQUEST_METHOD'] == 'POST') {
        // Get input values
        $username = $_POST['username'];
        $password = $_POST['password'];

        // Sanitize the input values
        $username = trim($username);
        $password = trim($password);

        // Check if inputs are not empty
        if (empty($username) || empty($password)) {
            die("Username and password are required!");
        }

        // Database connection details
        $host = 'localhost';
        $db_user = 'root';
        $db_pass = '';
        $dbname = 'your_database';

        // Connect to the database
        $conn = mysqli_connect($host, $db_user, $db_pass, $dbname);

        if (!$conn) {
            die("Connection failed: " . mysqli_connect_error());
        }

        // Prepare and bind statement
        $stmt = $conn->prepare("SELECT username, password FROM users WHERE username = ?");
        $stmt->bind_param('s', $username);

        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            // Fetch user data
            $user = $result->fetch_assoc();

            // Verify password
            if (password_verify($password, $user['password'])) {
                // Password is correct
                // Create session variables
                $_SESSION['username'] = $user['username'];
                
                // Redirect to dashboard or welcome page
                header('Location: dashboard.php');
                exit();
            } else {
                die("Incorrect password!");
            }
        } else {
            die("Username not found!");
        }

        // Close the statement and connection
        $stmt->close();
        $conn->close();
    }
}

// Call the login function if form is submitted
if (isset($_POST['submit'])) {
    user_login();
}
?>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'your_database';
$username = 'your_username';
$password = 'your_password';

try {
    // Create database connection
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

    if ($_SERVER['REQUEST_METHOD'] == 'POST') {
        // Get form data
        $username_login = $_POST['username'];
        $password_login = $_POST['password'];

        // Prepare and execute SQL statement
        $stmt = $conn->prepare("SELECT * FROM users WHERE username = :username");
        $stmt->bindParam(':username', $username_login);
        $stmt->execute();

        // Fetch user data
        $user = $stmt->fetch(PDO::FETCH_ASSOC);

        if ($user) {
            // Verify password
            if (password_verify($password_login, $user['password'])) {
                // Start session and store user data
                session_start();
                $_SESSION['username'] = $user['username'];
                $_SESSION['user_id'] = $user['id'];
                
                // Optional: Set remember me cookie
                if (!empty($_POST['remember_me'])) {
                    $cookie_name = 'login_cookie';
                    $cookie_value = $username_login . '|' . md5($password_login);
                    setcookie($cookie_name, $cookie_value, time() + (86400 * 30), "/");
                }

                // Redirect to dashboard or home page
                header("Location: dashboard.php");
                exit();
            } else {
                echo "Invalid username or password";
            }
        } else {
            echo "Invalid username or password";
        }
    }
} catch(PDOException $e) {
    die('Connection failed: ' . $e->getMessage());
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Login Page</title>
    <!-- Add security headers -->
    <meta http-equiv="Content-Security-Policy" content="default-src 'self'">
    <meta http-equiv="X-Content-Type" content="nosniff">
    <meta http-equiv="X-XSS-Protection" content="1; mode=block">
</head>
<body>
    <div class="login-container">
        <h2>Login</h2>
        <form method="post" action="<?php echo htmlspecialchars($_SERVER['PHP_SELF']); ?>">
            <label for="username">Username:</label>
            <input type="text" id="username" name="username" required>

            <label for="password">Password:</label>
            <input type="password" id="password" name="password" required>

            <input type="checkbox" id="remember_me" name="remember_me">
            <label for="remember_me">Remember me</label>

            <button type="submit">Login</button>
        </form>
        <p>Don't have an account? <a href="register.php">Register here</a></p>
    </div>
</body>
</html>


<?php
// Include necessary files or configurations
require_once 'config.php';

session_start();

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get form data
    $email = $_POST['email'];
    $password = $_POST['password'];
    
    // Validate input
    if (empty($email) || empty($password)) {
        die("Email and password are required!");
    }
    
    // Sanitize email
    $email = mysqli_real_escape_string($conn, $email);
    
    // Query database for user with matching email
    $sql = "SELECT * FROM users WHERE email='$email'";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) == 1) {
        $user = mysqli_fetch_assoc($result);
        
        // Verify password
        if (password_verify($password, $user['password'])) {
            // Start session and store user data
            $_SESSION['user_id'] = $user['id'];
            $_SESSION['name'] = $user['name'];
            $_SESSION['email'] = $user['email'];
            $_SESSION['login_time'] = time();
            
            // Redirect to dashboard or home page
            header("Location: dashboard.php");
            exit();
        } else {
            echo "Incorrect password!";
        }
    } else {
        echo "Email not found in our records!";
    }
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Login Page</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f0f0f0;
            margin: 0;
            padding: 20px;
        }
        .container {
            max-width: 400px;
            margin: 0 auto;
            background-color: white;
            padding: 20px;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }
        .form-group {
            margin-bottom: 15px;
        }
        input[type="email"],
        input[type="password"] {
            width: 100%;
            padding: 8px;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-sizing: border-box;
        }
        button {
            background-color: #4CAF50;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
        button:hover {
            background-color: #45a049;
        }
        .error {
            color: red;
            margin-bottom: 10px;
        }
    </style>
</head>
<body>
    <div class="container">
        <?php
        // Show error message if set
        if (isset($_SESSION['error'])) {
            echo "<div class='error'>".$_SESSION['error']."</div>";
            unset($_SESSION['error']);
        }
        ?>
        
        <h2>Login</h2>
        <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="POST">
            <div class="form-group">
                <input type="email" name="email" placeholder="Enter your email..." required>
            </div>
            <div class="form-group">
                <input type="password" name="password" placeholder="Enter your password..." required>
            </div>
            <button type="submit">Login</button>
        </form>
        <p>Don't have an account? <a href="register.php">Register here</a>.</p>
    </div>
</body>
</html>


<?php
session_start();

// Database configuration
$host = 'localhost';
$username_db = 'root';
$password_db = '';
$db_name = 'test';

// Connect to database
$conn = mysqli_connect($host, $username_db, $password_db, $db_name);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Check if form is submitted
if (isset($_POST['submit'])) {
    // Sanitize inputs
    $username = mysqli_real_escape_string($conn, $_POST['username']);
    $password = $_POST['password'];

    // Validate empty fields
    if (empty($username) || empty($password)) {
        die("Please fill in all required fields.");
    }

    try {
        // Prepare the SQL statement to prevent SQL injection
        $stmt = $conn->prepare("SELECT id, username, password FROM users WHERE username = ?");
        $stmt->bind_param("s", $username);
        $stmt->execute();
        
        // Get result
        $result = $stmt->get_result();
        if ($result->num_rows == 1) {
            $user = $result->fetch_assoc();

            // Verify password
            if (password_verify($password, $user['password'])) {
                // Start session and store user data
                $_SESSION['id'] = $user['id'];
                $_SESSION['username'] = $user['username'];

                // Redirect to dashboard
                header("Location: dashboard.php");
                exit();
            } else {
                die("Invalid username or password.");
            }
        } else {
            die("Invalid username or password.");
        }
    } catch (Exception $e) {
        die("An error occurred: " . $e->getMessage());
    }

    // Close statement and connection
    $stmt->close();
    mysqli_close($conn);
}
?>


<?php
session_start();

if (!isset($_SESSION['username'])) {
    header("Location: index.html");
    exit();
}

echo "Welcome, " . $_SESSION['username'] . "!";
?>


$password_hash = password_hash($plaintext_password, PASSWORD_DEFAULT);
// Use $password_hash in your SQL INSERT statement


<?php
session_start();

function user_login($username, $password) {
    // Check if username and password are provided
    if (empty($username) || empty($password)) {
        return "Please fill in all fields";
    }

    try {
        // Database connection settings
        $db = get_db_connection();
        
        // Prepare SQL statement to select user by username
        $stmt = $db->prepare("SELECT id, username, password, email FROM users WHERE username = ?");
        $stmt->bind_param("s", $username);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows == 0) {
            return "Username does not exist";
        }

        // Fetch user data
        $user = $result->fetch_assoc();

        // Verify password
        if (password_verify($password, $user['password'])) {
            // Password is correct - start session and store user details
            $_SESSION['logged_in'] = true;
            $_SESSION['user_id'] = $user['id'];
            $_SESSION['username'] = $user['username'];
            $_SESSION['email'] = $user['email'];

            // Redirect to dashboard or home page
            header("Location: dashboard.php");
            exit();
        } else {
            return "Incorrect password";
        }
    } catch (Exception $e) {
        return "Database error occurred: " . $e->getMessage();
    }
}

// Function to get database connection
function get_db_connection() {
    $host = 'localhost';
    $dbname = 'your_database_name';
    $username = 'your_username';
    $password = 'your_password';

    try {
        $db = new mysqli($host, $username, $password, $dbname);
        
        if ($db->connect_error) {
            throw new Exception("Connection failed: " . $db->connect_error);
        }
        
        return $db;
    } catch (Exception $e) {
        die("Could not connect to database: " . $e->getMessage());
    }
}

// Example usage:
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $username = $_POST['username'];
    $password = $_POST['password'];
    
    $login_result = user_login($username, $password);
    
    if ($login_result != "Success") {
        echo $login_result;
    }
}
?>


<?php
session_start();

// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'mydatabase';

// Create database connection
$conn = new mysqli($host, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function login_user() {
    global $conn;

    // Check if form is submitted
    if (isset($_POST['login'])) {
        // Sanitize input data
        $username = mysqli_real_escape_string($conn, $_POST['username']);
        $password = $_POST['password'];

        // Validate input
        if (empty($username) || empty($password)) {
            echo "Please fill in all fields.";
            return;
        }

        // Query the database for user
        $query = "SELECT * FROM users WHERE username='$username'";
        $result = mysqli_query($conn, $query);

        // Check if user exists
        if (mysqli_num_rows($result) == 1) {
            $row = mysqli_fetch_assoc($result);
            // Verify password
            if ($row['password'] === md5($password)) { 
                // Start session and store user data
                $_SESSION['user_id'] = $row['id'];
                $_SESSION['username'] = $row['username'];
                $_SESSION['login_time'] = time();

                // Redirect to dashboard or home page
                header("Location: dashboard.php");
                exit();
            } else {
                echo "Incorrect password.";
            }
        } else {
            echo "Username not found.";
        }
    }
}

// Call the login function
login_user();

// Close database connection
$conn->close();
?>


<?php
session_start();

// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'mydatabase';

// Create database connection using PDO
try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

function login_user() {
    global $conn;

    // Check if form is submitted
    if (isset($_POST['login'])) {
        try {
            // Prepare the statement
            $stmt = $conn->prepare("SELECT * FROM users WHERE username = ?");
            $stmt->execute([$_POST['username']]);

            // Get user data
            $row = $stmt->fetch(PDO::FETCH_ASSOC);

            // Check if user exists and password is correct
            if ($row && password_verify($_POST['password'], $row['password'])) {
                // Start session and store user data
                $_SESSION['user_id'] = $row['id'];
                $_SESSION['username'] = $row['username'];
                $_SESSION['login_time'] = time();

                // Redirect to dashboard or home page
                header("Location: dashboard.php");
                exit();
            } else {
                echo "Invalid username or password.";
            }
        } catch(PDOException $e) {
            die("Error: " . $e->getMessage());
        }
    }
}

// Call the login function
login_user();

// Close database connection
$conn = null;
?>


<?php
session_start();

function loginUser() {
    // Check if form is submitted
    if (!isset($_POST['username_email']) || !isset($_POST['password'])) {
        return "Please fill in all fields";
    }

    $usernameEmail = $_POST['username_email'];
    $password = $_POST['password'];

    // Database connection
    $dbHost = 'localhost';
    $dbName = 'your_database_name';
    $dbUser = 'your_username';
    $dbPass = 'your_password';

    $conn = new mysqli($dbHost, $dbUser, $dbPass, $dbName);

    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    // Prepare SQL query
    $stmt = $conn->prepare("SELECT id, username, email, password FROM users WHERE username = ? OR email = ?");
    $stmt->bind_param('ss', $usernameEmail, $usernameEmail);

    if (!$stmt->execute()) {
        return "Login error: " . $stmt->error;
    }

    $result = $stmt->get_result();
    if ($result->num_rows === 0) {
        return "Invalid credentials";
    }

    // Fetch user data
    $user = $result->fetch_assoc();

    // Verify password
    if (!password_verify($password, $user['password'])) {
        return "Invalid credentials";
    }

    // Set session variables
    $_SESSION['logged_in'] = true;
    $_SESSION['user_id'] = $user['id'];
    $_SESSION['username'] = $user['username'];
    $_SESSION['email'] = $user['email'];
    $_SESSION['login_time'] = time();

    return "Login successful";

    // Close connection
    $stmt->close();
    $conn->close();
}

// Call the function and handle output
$result = loginUser();
echo $result;
?>


function registerUser($username, $email, $password) {
    // Database connection (same as above)

    // Hash password
    $hashedPassword = password_hash($password, PASSWORD_DEFAULT);

    // Insert into database
    $stmt = $conn->prepare("INSERT INTO users (username, email, password) VALUES (?, ?, ?)");
    $stmt->bind_param('sss', $username, $email, $hashedPassword);

    if ($stmt->execute()) {
        return "Registration successful";
    } else {
        return "Registration error: " . $stmt->error;
    }

    // Close connection
    $stmt->close();
    $conn->close();
}


<?php
session_start();

// Database connection details
$host = 'localhost';
$user = 'root';
$password = '';
$dbname = 'user_login';

// Create database connection
$conn = mysqli_connect($host, $user, $password, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Check if the form was submitted
if (isset($_GET['action']) && $_GET['action'] == 'login') {
    // Sanitize inputs
    $username = mysqli_real_escape_string($conn, $_POST['username']);
    $password = mysqli_real_escape_string($conn, $_POST['password']);

    if ($username && $password) {
        // Hash the password
        $hash_password = sha1($password);

        // Query the database
        $sql = "SELECT * FROM users WHERE username='$username' AND password='$hash_password'";
        $result = mysqli_query($conn, $sql);

        if (mysqli_num_rows($result) == 1) {
            // Start session and set variables
            $_SESSION['logged_in'] = true;
            $_SESSION['user_id'] = $row['id'];
            $_SESSION['username'] = $username;

            // Redirect to dashboard
            header("Location: dashboard.php");
        } else {
            $error = "Invalid username or password!";
        }
    } else {
        $error = "Please enter both username and password!";
    }
}
?>


<?php
// Include necessary files
include_once 'db_connection.php';

function user_login($username, $password) {
    global $conn;

    // Check if username or password are empty
    if (empty($username) || empty($password)) {
        return false;
    }

    try {
        // Prepare the query to prevent SQL injection
        $stmt = $conn->prepare("SELECT user_id, username, password FROM users WHERE username = ?");
        $stmt->bind_param("s", $username);
        $stmt->execute();
        
        // Get the result
        $result = $stmt->get_result();
        
        if ($row = $result->fetch_assoc()) {
            // Verify password
            if (password_verify($password, $row['password'])) {
                // Password is correct, start a session or set cookies here
                session_start();
                $_SESSION['user_id'] = $row['user_id'];
                $_SESSION['username'] = $row['username'];
                $_SESSION['logged_in'] = true;
                
                return true;
            } else {
                // Password doesn't match
                return false;
            }
        } else {
            // Username not found in database
            return false;
        }
    } catch (Exception $e) {
        // Handle any exceptions that occur during the process
        error_log("Error: " . $e->getMessage());
        return false;
    }
}
?>


<?php
include_once 'user_login.php';

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST['username'];
    $password = $_POST['password'];

    if (user_login($username, $password)) {
        // Redirect to dashboard or home page
        header("Location: dashboard.php");
        exit();
    } else {
        // Display error message
        echo "Invalid username or password!";
    }
}
?>


<?php
// Initialize session
session_start();

// Database connection
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'login_system';

$conn = new mysqli($host, $username, $password, $dbname);
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function login_user() {
    global $conn;

    // Check if form is submitted
    if ($_SERVER['REQUEST_METHOD'] == 'POST') {
        $username = $_POST['username'];
        $password = $_POST['password'];

        // Validate input
        if (empty($username) || empty($password)) {
            echo "Username and password are required!";
            return;
        }

        // Prepare query to prevent SQL injection
        $stmt = $conn->prepare("SELECT id, username, password FROM users WHERE username = ?");
        $stmt->bind_param('s', $username);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            // Get user data
            $user = $result->fetch_assoc();
            
            // Verify password
            if (password_verify($password, $user['password'])) {
                // Start session and store user data
                $_SESSION['logged_in'] = true;
                $_SESSION['user_id'] = $user['id'];
                $_SESSION['username'] = $user['username'];
                
                // Optional: Remember me functionality
                if (!empty($_POST['remember'])) {
                    $cookie_name = 'login_cookie';
                    $cookie_value = $user['id'] . ':' . md5($password);
                    setcookie($cookie_name, $cookie_value, time() + (86400 * 7), "/");
                }

                // Redirect to dashboard
                header("Location: dashboard.php");
                exit();
            } else {
                echo "Invalid password!";
            }
        } else {
            echo "Username not found!";
        }
    } else {
        // Show login form
?>
        <form method="POST" action="<?php echo $_SERVER['PHP_SELF']; ?>">
            <input type="text" name="username" placeholder="Enter username">
            <input type="password" name="password" placeholder="Enter password">
            <input type="checkbox" name="remember"> Remember me
            <button type="submit">Login</button>
        </form>
<?php
    }
}

// Call login function
login_user();

// Close database connection
$conn->close();
?>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

// Create database connection
$conn = mysqli_connect($host, $username, $password, $dbname);

// Check if connection failed
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function user_login() {
    global $conn;

    // Check if form has been submitted
    if (!isset($_POST['submit'])) {
        return null;
    }

    // Get username and password from POST data
    $username = $_POST['username'];
    $password = $_POST['password'];

    // Sanitize input to prevent SQL injection
    $username = mysqli_real_escape_string($conn, $username);
    $password = mysqli_real_escape_string($conn, $password);

    // Query the database for user with matching username
    $query = "SELECT * FROM users WHERE username = '$username'";
    $result = mysqli_query($conn, $query);

    // Check if there's a user with that username
    if (mysqli_num_rows($result) == 0) {
        return false; // No user found
    }

    // Get the user data
    $row = mysqli_fetch_assoc($result);
    $stored_password = $row['password'];

    // Verify password using password_verify()
    if (password_verify($password, $stored_password)) {
        // Password matches, store user session variables
        $_SESSION['user_id'] = $row['id'];
        $_SESSION['username'] = $row['username'];
        
        return true; // Login successful
    } else {
        return false; // Incorrect password
    }
}

// Check if login was successful
if (isset($_POST['submit']) && user_login()) {
    echo "Login successful!";
} else {
    // Display login form
    ?>
    <form action="<?php $_PHP_SELF ?>" method="post">
        Username: <input type="text" name="username"><br>
        Password: <input type="password" name="password"><br>
        <input type="submit" name="submit" value="Login">
    </form>
    <?php
}

// Close database connection
mysqli_close($conn);
?>


// config/db.php
<?php
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'user_login';

$conn = mysqli_connect($host, $username, $password, $dbname);
if (!$conn) {
    die('Connection failed: ' . mysqli_connect_error());
}
?>


<?php
session_start();
include('config/db.php');

// Sanitize input
$username = mysqli_real_escape_string($conn, $_POST['username']);
$password = md5($_POST['password']); // Store hashed passwords

$sql = "SELECT * FROM users WHERE username='$username'";
$result = mysqli_query($conn, $sql);

if (mysqli_num_rows($result) == 1) {
    $row = mysqli_fetch_assoc($result);
    if ($password == $row['password']) {
        $_SESSION['user_id'] = $row['id'];
        $_SESSION['username'] = $row['username'];

        // Remember me functionality
        if (isset($_POST['remember_me'])) {
            $hash = sha1($row['username']);
            setcookie("user_id", $row['id'], time() + 3600);
            setcookie("remember_hash", $hash, time() + 3600);
        }

        header('Location: dashboard.php');
    } else {
        echo "Incorrect password!";
    }
} else {
    // After 5 failed attempts, show a message
    if (isset($_SESSION['login_attempts']) && $_SESSION['login_attempts'] >= 5) {
        echo "Too many failed attempts. Please try again later.";
    } else {
        $_SESSION['login_attempts'] = isset($_SESSION['login_attempts']) ? $_SESSION['login_attempts'] + 1 : 1;
        echo "Username doesn't exist!";
        // Add delay for security
        sleep(1);
    }
}

mysqli_close($conn);
?>


// dashboard.php
<?php
session_start();
if (!isset($_SESSION['user_id'])) {
    header('Location: login.php');
}
echo "Welcome, " . $_SESSION['username'] . "!";
?>


// At the beginning of your PHP scripts (e.g., dashboard.php)
session_start();
include('config/db.php');

if (!isset($_SESSION['user_id']) && isset($_COOKIE['remember_hash'])) {
    $hash = $_COOKIE['remember_hash'];
    $sql = "SELECT * FROM users WHERE remember_hash='$hash'";
    $result = mysqli_query($conn, $sql);
    if (mysqli_num_rows($result) == 1) {
        $row = mysqli_fetch_assoc($result);
        $_SESSION['user_id'] = $row['id'];
        $_SESSION['username'] = $row['username'];
    }
}


<?php
session_start();

// Database connection details
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

try {
    // Connect to database using PDO
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get user input and sanitize them
    $username = htmlspecialchars(trim($_POST['username']));
    $password = htmlspecialchars(trim($_POST['password']));

    // Prevent SQL injection by using prepared statements
    $stmt = $conn->prepare("SELECT * FROM users WHERE username = ?");
    $stmt->execute([$username]);
    $user = $stmt->fetch(PDO::FETCH_ASSOC);

    if ($user) {
        // Verify the password
        if (password_verify($password, $user['password'])) {
            // Store user session data
            $_SESSION['loggedin'] = true;
            $_SESSION['id'] = $user['id'];
            $_SESSION['username'] = $user['username'];

            // Redirect to dashboard or home page
            header("Location: dashboard.php");
            exit();
        } else {
            $error = "Incorrect password!";
        }
    } else {
        $error = "Username not found!";
    }
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Login Page</title>
    <!-- Add your CSS styles here -->
    <style>
        .login-form {
            width: 300px;
            margin: 0 auto;
            padding: 20px;
            border: 1px solid #ccc;
            border-radius: 5px;
        }
        .form-group {
            margin-bottom: 10px;
        }
        .form-group label {
            display: block;
            margin-bottom: 5px;
        }
    </style>
</head>
<body>
    <div class="login-form">
        <?php if (isset($error)) { ?>
            <div style="color: red;"><?php echo $error; ?></div>
        <?php } ?>

        <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
            <div class="form-group">
                <label for="username">Username:</label>
                <input type="text" id="username" name="username" required>
            </div>

            <div class="form-group">
                <label for="password">Password:</label>
                <input type="password" id="password" name="password" required>
            </div>

            <button type="submit">Login</button>
        </form>
    </div>
</body>
</html>


// Set session cookie parameters
ini_set('session.cookie_httponly', 1);
ini_set('session.cookie_secure', 1); // Only use sessions over HTTPS
ini_set('session.use_strict_mode', 1);


<?php
session_start();
unset($_SESSION['loggedin']);
unset($_SESSION['id']);
unset($_SESSION['username']);
session_destroy();

// Redirect to login page
header("Location: login.php");
exit();
?>


<?php
// Connect to database
$host = 'localhost';
$username = 'root';
$password = '';
$db_name = 'mydatabase';

$conn = mysqli_connect($host, $username, $password, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Handle login form submission
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    // Sanitize input data
    $username = mysqli_real_escape_string($conn, $_POST['username']);
    $password = mysqli_real_escape_string($conn, $_POST['password']);

    // Check if username and password are provided
    if (empty($username) || empty($password)) {
        die("Username or password cannot be empty");
    }

    // Query the database for user with matching username
    $sql = "SELECT id, password FROM users WHERE username = '$username'";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) === 1) {
        // User exists, verify password
        $row = mysqli_fetch_assoc($result);
        
        // Verify the password (assuming passwords are stored as md5 hashes)
        if (md5($password) === $row['password']) {
            // Password is correct
            session_start();
            $_SESSION['user_id'] = $row['id'];
            header('Location: dashboard.php');
            die();
        } else {
            // Incorrect password
            die("Invalid username or password");
        }
    } else {
        // Username not found
        die("Invalid username or password");
    }
}

// Close database connection
mysqli_close($conn);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login Page</title>
</head>
<body>
    <h2>Login</h2>
    <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
        Username: <input type="text" name="username"><br><br>
        Password: <input type="password" name="password"><br><br>
        <input type="submit" value="Login">
    </form>
</body>
</html>


<?php
// Connect to database
$host = 'localhost';
$username = 'root';
$password = '';
$db_name = 'mydatabase';

$conn = mysqli_connect($host, $username, $password, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

session_start();

// Handle login form submission
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    // Sanitize input data
    $username = mysqli_real_escape_string($conn, $_POST['username']);
    $password = $_POST['password'];

    // Check if username and password are provided
    if (empty($username) || empty($password)) {
        die("Username or password cannot be empty");
    }

    // Query the database for user with matching username
    $sql = "SELECT id, password FROM users WHERE username = '$username'";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) === 1) {
        // User exists, verify password
        $row = mysqli_fetch_assoc($result);
        
        // Verify the password using password_verify()
        if (password_verify($password, $row['password'])) {
            // Password is correct
            $_SESSION['user_id'] = $row['id'];
            header('Location: dashboard.php');
            die();
        } else {
            // Incorrect password
            die("Invalid username or password");
        }
    } else {
        // Username not found
        die("Invalid username or password");
    }
}

// Close database connection
mysqli_close($conn);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login Page</title>
</head>
<body>
    <h2>Login</h2>
    <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
        Username: <input type="text" name="username"><br><br>
        Password: <input type="password" name="password"><br><br>
        <input type="submit" value="Login">
    </form>
</body>
</html>


<?php
session_start();
include 'config.php'; // Database configuration

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $username = mysqli_real_escape_string($conn, $_POST['username']);
    $password = $_POST['password'];

    $stmt = mysqli_prepare($conn, "SELECT id, username, password FROM users WHERE username = ?");
    mysqli_stmt_bind_param($stmt, "s", $username);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);

    if ($row = mysqli_fetch_assoc($result)) {
        if (password_verify($password, $row['password'])) {
            $_SESSION['user_id'] = $row['id'];
            $_SESSION['username'] = $row['username'];
            header("Location: dashboard.php");
            exit();
        } else {
            $error = "Invalid username or password.";
        }
    } else {
        $error = "Invalid username or password.";
    }

    mysqli_stmt_close($stmt);
    mysqli_close($conn);
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login Page</title>
</head>
<body>
    <?php if (isset($error)) { echo "<p>$error</p>"; } ?>
    <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
        Username: <input type="text" name="username">
        Password: <input type="password" name="password">
        <input type="submit" value="Login">
    </form>
</body>
</html>


<?php
// Configuration file (config.php)
$host = 'localhost';
$dbname = 'mydatabase';
$username = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}
?>

<?php
// Registration function
function registerUser($username, $password, $conn) {
    // Check if the username already exists
    $stmt = $conn->prepare("SELECT id FROM users WHERE username = ?");
    $stmt->execute([$username]);
    
    if ($stmt->rowCount() > 0) {
        return false; // Username already exists
    }

    // Hash the password
    $hashedPassword = password_hash($password, PASSWORD_BCRYPT);

    // Insert into database
    $stmt = $conn->prepare("INSERT INTO users (username, password) VALUES (?, ?)");
    $stmt->execute([$username, $hashedPassword]);

    return true;
}

// Login function
function loginUser($username, $password, $conn) {
    global $loginAttempts;

    // Check if user exists
    $stmt = $conn->prepare("SELECT id, username, password FROM users WHERE username = ?");
    $stmt->execute([$username]);
    
    if ($stmt->rowCount() == 0) {
        return false; // User does not exist
    }

    // Get user data
    $user = $stmt->fetch(PDO::FETCH_ASSOC);
    
    // Verify password
    if (!password_verify($password, $user['password'])) {
        return false; // Incorrect password
    }

    // If login is successful, start a session
    session_start();
    $_SESSION['username'] = $user['username'];
    $_SESSION['user_id'] = $user['id'];
    
    return true;
}

// Logout function
function logoutUser() {
    session_start();
    session_unset();
    session_destroy();
}

// Example usage:
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    if (isset($_POST['register'])) {
        // Register new user
        $username = $_POST['username'];
        $password = $_POST['password'];
        
        if (registerUser($username, $password, $conn)) {
            echo "Registration successful!";
        } else {
            echo "Registration failed. Username already exists.";
        }
    } elseif (isset($_POST['login'])) {
        // Login user
        $username = $_POST['username'];
        $password = $_POST['password'];
        
        if (loginUser($username, $password, $conn)) {
            header("Location: dashboard.php");
            exit();
        } else {
            echo "Invalid username or password.";
        }
    } elseif (isset($_GET['logout'])) {
        logoutUser();
        header("Location: login.php");
        exit();
    }
}
?>


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login Page</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f4f4f4;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            margin: 0;
        }

        .login-form {
            background-color: white;
            padding: 20px;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
            width: 300px;
        }

        .form-group {
            margin-bottom: 15px;
        }

        input[type="text"],
        input[type="password"] {
            width: 100%;
            padding: 8px;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-sizing: border-box;
        }

        button {
            width: 100%;
            padding: 10px;
            background-color: #4CAF50;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }

        button:hover {
            background-color: #45a049;
        }
    </style>
</head>
<body>
    <div class="login-form">
        <?php
            // Check if form is submitted
            if (isset($_POST['username']) && isset($_POST['password'])) {
                $username = $_POST['username'];
                $password = $_POST['password'];

                // Database connection
                $dbHost = 'localhost';
                $dbUser = 'root';
                $dbPass = '';
                $dbName = 'login';

                // Connect to database
                $conn = mysqli_connect($dbHost, $dbUser, $dbPass, $dbName);
                
                if (!$conn) {
                    die("Connection failed: " . mysqli_connect_error());
                }

                // Sanitize inputs
                $username = mysqli_real_escape_string($conn, $username);
                $password = mysqli_real_escape_string($conn, $password);

                // Check if user exists
                $sql = "SELECT * FROM users WHERE username='$username'";
                $result = mysqli_query($conn, $sql);

                if ($result->num_rows == 1) {
                    $row = mysqli_fetch_assoc($result);
                    
                    // Verify password
                    if ($row['password'] != $password) {
                        echo "<p style='color:red;'>Incorrect password!</p>";
                    } else {
                        // Start session
                        session_start();
                        $_SESSION['username'] = $row['username'];
                        $_SESSION['user_id'] = $row['id'];

                        // Redirect to dashboard
                        header('Location: dashboard.php');
                        die();
                    }
                } else if ($result->num_rows > 1) {
                    echo "<p style='color:red;'>Multiple users found!</p>";
                } else {
                    echo "<p style='color:red;'>Username not found!</p>";
                }

                // Close database connection
                mysqli_close($conn);
            }
        ?>

        <form action="<?php echo htmlspecialchars($_SERVER['PHP_SELF']); ?>" method="post">
            <div class="form-group">
                <label for="username">Username:</label>
                <input type="text" id="username" name="username" required>
            </div>

            <div class="form-group">
                <label for="password">Password:</label>
                <input type="password" id="password" name="password" placeholder="Enter your password" required>
            </div>

            <button type="submit">Login</button>
        </form>
    </div>
</body>
</html>


<?php
// Function to validate user login
function loginUser($email, $password) {
    // Database connection parameters
    $host = 'localhost';
    $username = 'root';
    $db_password = '';
    $database = 'your_database';

    // Create connection
    $conn = mysqli_connect($host, $username, $db_password, $database);

    // Check connection
    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
    }

    try {
        // Prepare and bind statement to prevent SQL injection
        $stmt = $conn->prepare("SELECT * FROM users WHERE email = ?");
        $stmt->bind_param("s", $email);
        
        // Execute the query
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            // Get user data
            $user = $result->fetch_assoc();
            
            // Verify password
            if (password_verify($password, $user['password'])) {
                return true; // Login successful
            } else {
                return false; // Incorrect password
            }
        } else {
            return false; // User not found
        }
    } catch (mysqli_sql_exception $e) {
        die("An error occurred: " . $e->getMessage());
    }

    // Close connection
    $conn->close();
}
?>


// Get user input
$email = $_POST['email'];
$password = $_POST['password'];

// Call login function
if (loginUser($email, $password)) {
    // Login successful - start session or redirect
    echo "Login successful!";
} else {
    // Login failed - show error message
    echo "Invalid email or password.";
}


// When registering a new user
$hashed_password = password_hash($password, PASSWORD_DEFAULT);


<?php
// Database configuration
$host = 'localhost';
$dbUsername = 'root';
$dbPassword = '';
$dbName = 'user_auth';

// Connect to database
$conn = mysqli_connect($host, $dbUsername, $dbPassword, $dbName);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

session_start();

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $username = mysqli_real_escape_string($conn, $_POST['username']);
    $password = $_POST['password'];

    // Query the database for the username
    $query = "SELECT id, username, password FROM users WHERE username = ?";
    $stmt = mysqli_prepare($conn, $query);
    if ($stmt) {
        mysqli_stmt_bind_param($stmt, 's', $username);
        mysqli_stmt_execute($stmt);
        mysqli_stmt_store_result($stmt);

        if (mysqli_stmt_num_rows($stmt) == 1) {
            mysqli_stmt_bind_result($stmt, $id, $dbUsername, $dbPassword);
            mysqli_stmt_fetch($stmt);

            if (password_verify($password, $dbPassword)) {
                // Login successful
                $_SESSION['loggedin'] = true;
                $_SESSION['username'] = $dbUsername;
                $_SESSION['user_id'] = $id;

                header("Location: dashboard.php");
                exit();
            } else {
                $error = "Invalid credentials!";
            }
        } else {
            $error = "Invalid credentials!";
        }
    }

    mysqli_stmt_close($stmt);
}

mysqli_close($conn);

if (isset($error)) {
    echo $error;
}
?>


<?php
// Database connection details
$host = 'localhost';
$db_name = 'your_database';
$username = 'your_username';
$password = 'your_password';

try {
    // Connect to the database using PDO
    $conn = new PDO("mysql:host=$host;dbname=$db_name", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get username and password from the form
    $username = $_POST['username'];
    $password = $_POST['password'];

    try {
        // Prepare SQL statement to select user with matching username
        $stmt = $conn->prepare("SELECT * FROM users WHERE username = ?");
        $stmt->execute([$username]);
        
        // Fetch the user data
        $user = $stmt->fetch(PDO::FETCH_ASSOC);

        if ($user) {
            // Verify password
            if (password_verify($password, $user['password'])) {
                // Start session
                session_start();
                
                // Store user details in session variables
                $_SESSION['username'] = $user['username'];
                $_SESSION['id'] = $user['id'];
                $_SESSION['login_time'] = time();

                // Redirect to dashboard or home page
                header("Location: dashboard.php");
                exit();
            } else {
                // Incorrect password
                echo "<div class='error'>Invalid username or password</div>";
            }
        } else {
            // User doesn't exist
            echo "<div class='error'>Invalid username or password</div>";
        }
    } catch(PDOException $e) {
        die("Error: " . $e->getMessage());
    }
}

// Close database connection
$conn = null;
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Login Page</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f0f0f0;
        }
        .container {
            max-width: 400px;
            margin: 50px auto;
            padding: 20px;
            background-color: white;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }
        h1 {
            text-align: center;
            color: #333;
        }
        .input-group {
            margin-bottom: 20px;
        }
        input {
            width: 100%;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-sizing: border-box;
        }
        button {
            width: 100%;
            padding: 10px;
            background-color: #4CAF50;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
        button:hover {
            background-color: #45a049;
        }
        .error {
            color: red;
            text-align: center;
            margin-bottom: 10px;
        }
        .success {
            color: green;
            text-align: center;
            margin-bottom: 10px;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>Login</h1>
        
        <?php if (!isset($_POST['username'])) { ?>
        <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
            <div class="input-group">
                <input type="text" placeholder="Enter your username" name="username" required>
            </div>
            <div class="input-group">
                <input type="password" placeholder="Enter your password" name="password" required>
            </div>
            <button type="submit">Login</button>
        </form>
        <?php } else { ?>
        <div class="success"><?php echo $message; ?></div>
        <?php } ?>

        <p>Don't have an account? <a href="register.php">Register here</a>.</p>
    </div>
</body>
</html>


<?php
// Include necessary files or configurations
include_once('config.php');

function userLogin($username, $password) {
    // Check if username and password are provided
    if (empty($username) || empty($password)) {
        return "Please fill in all fields";
    }

    // Connect to the database
    $conn = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);

    // Check connection
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    try {
        // Prepare and bind statement
        $stmt = $conn->prepare("SELECT username, password FROM users WHERE username = ?");
        $stmt->bind_param("s", $username);

        // Execute the query
        $stmt->execute();

        // Get result
        $result = $stmt->get_result();
        $row = $result->fetch_assoc();

        if ($row) {
            // Verify password
            if (password_verify($password, $row['password'])) {
                // Password is correct
                session_start();
                $_SESSION['logged_in'] = true;
                $_SESSION['username'] = $username;

                // Close connection
                $stmt->close();
                $conn->close();

                return "Login successful";
            } else {
                // Password is incorrect
                return "Incorrect password";
            }
        } else {
            // User not found
            return "Username does not exist";
        }

    } catch (Exception $e) {
        return "Error: " . $e->getMessage();
    } finally {
        // Close connection if it exists
        if ($conn) {
            $conn->close();
        }
    }
}

// Example usage:
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST['username'];
    $password = $_POST['password'];

    $loginResult = userLogin($username, $password);

    if ($loginResult === "Login successful") {
        header("Location: dashboard.php");
        exit();
    } else {
        echo $loginResult;
    }
}
?>


<?php
// Include database configuration file
require_once('config.php');

// Function to sanitize input data
function sanitizeInput($data) {
    return htmlspecialchars(trim($data));
}

// Function to check if user is already logged in
function isLoggedIn() {
    return isset($_SESSION['user_id']);
}

if (isLoggedIn()) {
    // Redirect to dashboard or home page if user is already logged in
    header('Location: dashboard.php');
    exit();
}

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = sanitizeInput($_POST['email']);
    $password = $_POST['password'];

    try {
        // Prepare SQL statement to select the user by email
        $stmt = $conn->prepare("SELECT id, email, password FROM users WHERE email=?");
        $stmt->execute([$email]);
        
        $user = $stmt->fetch(PDO::FETCH_ASSOC);
        
        if ($user) {
            // Verify the password
            if (password_verify($password, $user['password'])) {
                // Set session variables
                $_SESSION['user_id'] = $user['id'];
                $_SESSION['email'] = $user['email'];
                
                // Optional: Remember me cookie
                if (isset($_POST['remember'])) {
                    setcookie('remember_me', $user['id'], time() + 3600); // Cookie expires in 1 hour
                }
                
                // Redirect to dashboard or home page
                header('Location: dashboard.php');
                exit();
            } else {
                $error = "Invalid email or password";
            }
        } else {
            $error = "Invalid email or password";
        }
    } catch (PDOException $e) {
        die("Connection failed: " . $e->getMessage());
    }
}
?>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'root'; // or your DB username
$password = ''; // or your DB password

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    die('Connection failed: ' . $e->getMessage());
}
?>


<?php
session_start();

if (!isset($_SESSION['user_id'])) {
    header('Location: login.html');
    exit();
}

// Display user information or other dashboard content here
echo "Welcome, " . $_SESSION['email'] . "!<br>";
echo "<a href='logout.php'>Logout</a>";
?>


<?php
session_start();

// Destroy session data
unset($_SESSION['user_id']);
unset($_SESSION['email']);

// Remove remember me cookie if it exists
if (isset($_COOKIE['remember_me'])) {
    setcookie('remember_me', '', time() - 3600);
}

// Redirect to login page
header('Location: login.html');
exit();
?>


<?php
session_start();
if (isset($_SESSION['username'])) {
    header('Location: dashboard.php');
    exit();
}

// Database configuration
$host = 'localhost';
$user = 'root';
$password = '';
$db_name = 'mydatabase';

// Connect to database
$conn = new mysqli($host, $user, $password, $db_name);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

$username = "";
$password = "";
$error_message = "";

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Function to sanitize input
    function sanitize_input($data) {
        return htmlspecialchars(mysqli_real_escape_string($conn, trim($data)));
    }

    // Get username and password from form
    $username = sanitize_input($_POST['username']);
    $password = $_POST['password'];

    if (empty($username) || empty($password)) {
        $error_message = "Username or password cannot be empty!";
    } else {
        // Prepare query to select user with given username
        $stmt = $conn->prepare("SELECT id, username, password, admin FROM users WHERE username=?");
        $stmt->bind_param("s", $username);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows == 1) {
            // Get user data
            $user = $result->fetch_assoc();

            // Verify password
            if (password_verify($password, $user['password'])) {
                // Password is correct
                $_SESSION['username'] = $user['username'];
                $_SESSION['admin'] = $user['admin'];
                
                // Redirect to dashboard
                header("Location: dashboard.php");
                exit();
            } else {
                // Incorrect password
                $error_message = "Invalid username or password!";
            }
        } else {
            // No user found with this username
            $error_message = "Invalid username or password!";
        }
    }
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login Page</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 40px;
        }
        .login-form {
            max-width: 300px;
            margin: 0 auto;
            padding: 20px;
            border: 1px solid #ccc;
            border-radius: 5px;
        }
        .form-group {
            margin-bottom: 15px;
        }
        input[type="text"], input[type="password"] {
            width: 100%;
            padding: 8px;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-sizing: border-box;
        }
        button {
            width: 100%;
            padding: 10px;
            background-color: #4CAF50;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
        button:hover {
            background-color: #45a049;
        }
        .error {
            color: red;
            margin-bottom: 10px;
        }
    </style>
</head>
<body>
    <div class="login-form">
        <?php if (!empty($error_message)) { ?>
            <div class="error"><?php echo $error_message; ?></div>
        <?php } ?>

        <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
            <div class="form-group">
                <label for="username">Username:</label>
                <input type="text" id="username" name="username" value="<?php echo $username; ?>">
            </div>

            <div class="form-group">
                <label for="password">Password:</label>
                <input type="password" id="password" name="password" value="<?php echo $password; ?>">
            </div>

            <button type="submit">Login</button>
        </form>
    </div>
</body>
</html>


$hashed_password = password_hash($plain_password, PASSWORD_DEFAULT);
// Insert into database using prepared statement


<?php
// Start session
session_start();

// Database connection
$host = "localhost";
$user = "root";
$password = "";
$db_name = "your_database";

$conn = mysqli_connect($host, $user, $password, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Check if form was submitted
if (isset($_POST['login'])) {
    // Get username and password from form
    $username = mysqli_real_escape_string($conn, $_POST['username']);
    $password = md5(mysqli_real_escape_string($conn, $_POST['password']));

    // Query the database for user with matching credentials
    $query = "SELECT * FROM users WHERE username='$username' AND password='$password'";
    $result = mysqli_query($conn, $query);

    if (mysqli_num_rows($result) == 1) {
        // User exists and password matches
        $_SESSION['logged_in'] = true;
        $_SESSION['user_id'] = $row['id'];
        $_SESSION['username'] = $row['username'];

        // Redirect to dashboard or home page
        header("Location: dashboard.php");
        exit();
    } else {
        // Invalid credentials
        $error = "Invalid username or password";
    }
}

// Close database connection
mysqli_close($conn);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login Page</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f0f0f0;
            margin: 0;
            padding: 20px;
        }
        .container {
            max-width: 400px;
            margin: 0 auto;
            background-color: white;
            padding: 20px;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }
        .form-group {
            margin-bottom: 15px;
        }
        input {
            width: 100%;
            padding: 8px;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-sizing: border-box;
        }
        button {
            background-color: #4CAF50;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            width: 100%;
        }
        button:hover {
            background-color: #45a049;
        }
        .error {
            color: red;
            margin-bottom: 10px;
        }
    </style>
</head>
<body>
    <div class="container">
        <h2>Login</h2>
        
        <?php if (isset($error)) { ?>
            <div class="error"><?php echo $error; ?></div>
        <?php } ?>

        <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
            <div class="form-group">
                <input type="text" name="username" placeholder="Enter your username" required>
            </div>
            <div class="form-group">
                <input type="password" name="password" placeholder="Enter your password" required>
            </div>
            <button type="submit" name="login">Login</button>
        </form>
    </div>
</body>
</html>


<?php
session_start();

// Database connection details
$host = "localhost";
$username_db = "root"; // Change to your database username
$password_db = ""; // Change to your database password
$db_name = "test"; // Change to your database name

// Connect to the database
$conn = mysqli_connect($host, $username_db, $password_db, $db_name);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to sanitize input data
function sanitize_input($data) {
    $data = trim($data);
    $data = stripslashes($data);
    $data = htmlspecialchars($data);
    return $data;
}

// Check if form is submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Get user inputs
    $username = sanitize_input($_POST['username']);
    $password = $_POST['password'];

    // Prevent SQL injection
    $username = mysqli_real_escape_string($conn, $username);

    // Query the database for the user
    $sql = "SELECT * FROM users WHERE username='$username'";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) > 0) {
        $row = mysqli_fetch_assoc($result);
        
        // Verify password
        if ($password == $row['password']) { // Note: Password should be hashed in real application
            // Start session and store user data
            $_SESSION['username'] = $row['username'];
            $_SESSION['id'] = $row['id'];
            
            // Redirect to dashboard or home page
            header("Location: dashboard.php");
            exit();
        } else {
            $error = "Incorrect password";
        }
    } else {
        $error = "Username not found";
    }
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login Page</title>
    <!-- Add your CSS styles here -->
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 20px;
        }
        
        .container {
            max-width: 500px;
            margin: 0 auto;
            text-align: center;
        }
        
        form {
            display: inline-block;
            width: 100%;
            background-color: #f0f0f0;
            padding: 20px;
            border-radius: 5px;
        }
        
        input[type="text"], input[type="password"] {
            width: 100%;
            padding: 10px;
            margin: 10px 0;
            box-sizing: border-box;
            border: 1px solid #ddd;
            border-radius: 4px;
        }
        
        button {
            background-color: #4CAF50;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
        
        button:hover {
            background-color: #45a049;
        }
        
        .error {
            color: red;
            margin-top: 10px;
            text-align: center;
        }
    </style>
</head>
<body>
    <div class="container">
        <?php if (isset($error)) { ?>
            <p class="error"><?php echo $error; ?></p>
        <?php } ?>

        <form method="post" action="<?php echo htmlspecialchars($_SERVER['PHP_SELF']); ?>">
            <h2>Login</h2>
            <input type="text" name="username" placeholder="Enter your username" required><br>
            <input type="password" name="password" placeholder="Enter your password" required><br>
            <button type="submit">Login</button>
        </form>
    </div>
</body>
</html>

<?php
// Close database connection
mysqli_close($conn);
?>


$hashed_password = password_hash($plain_text_password, PASSWORD_DEFAULT);


if (password_verify($input_password, $row['password'])) {
    // Password is correct
}


<?php
session_start();

// Database connection configuration
$host = 'localhost';
$dbUsername = 'root';
$dbPassword = '';
$dbName = 'login_system';

try {
    // Create database connection
    $conn = new mysqli($host, $dbUsername, $dbPassword, $dbName);

    if ($conn->connect_error) {
        throw new Exception("Connection failed: " . $conn->connect_error);
    }

    // Check if form is submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        $username = $_POST['username'];
        $password = $_POST['password'];

        // Validate input
        if (empty($username) || empty($password)) {
            throw new Exception("Username and password are required!");
        }

        // Prepare SQL statement to prevent SQL injection
        $stmt = $conn->prepare("SELECT id, username, password FROM users WHERE username = ?");
        $stmt->bind_param("s", $username);
        $stmt->execute();
        
        $result = $stmt->get_result();

        if ($result->num_rows == 0) {
            throw new Exception("Invalid username or password!");
        }

        // Get user data
        $user = $result->fetch_assoc();

        // Verify password
        if (!password_verify($password, $user['password'])) {
            throw new Exception("Invalid username or password!");
        }

        // Start session and set session variables
        $_SESSION['logged_in'] = true;
        $_SESSION['user_id'] = $user['id'];
        $_SESSION['username'] = $user['username'];

        // Redirect to dashboard
        header("Location: dashboard.php");
        exit();
    }
} catch (Exception $e) {
    // Handle any exceptions and display error message
    $error_message = $e->getMessage();
    echo "<script>alert('$error_message');</script>";
}

// Close database connection
$conn->close();
?>


// When registering a new user:
$password = $_POST['password'];
$hashed_password = password_hash($password, PASSWORD_DEFAULT);
// Store $hashed_password in the database


<?php
// Database connection
$host = "localhost";
$username_db = "root";
$password_db = "";
$db_name = "user_auth";

$conn = mysqli_connect($host, $username_db, $password_db, $db_name);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Registration function
function registerUser($username, $password, $conn) {
    // Check if username already exists
    $stmt = $conn->prepare("SELECT id FROM users WHERE username = ?");
    $stmt->bind_param("s", $username);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        return "Username already exists!";
    }

    // Hash the password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

    // Insert user into database
    $stmt = $conn->prepare("INSERT INTO users (username, password_hash) VALUES (?, ?)");
    $stmt->bind_param("ss", $username, $hashed_password);
    if ($stmt->execute()) {
        return "Registration successful!";
    } else {
        return "Error registering user: " . $conn->error;
    }
}

// Login function
function loginUser($username, $password, $conn) {
    // Check if username exists
    $stmt = $conn->prepare("SELECT id, password_hash FROM users WHERE username = ?");
    $stmt->bind_param("s", $username);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows == 0) {
        return "Username not found!";
    }

    // Get user data
    $user_data = $result->fetch_assoc();
    $hashed_password = $user_data['password_hash'];

    // Verify password
    if (password_verify($password, $hashed_password)) {
        // Start session and store user data
        session_start();
        $_SESSION['user_id'] = $user_data['id'];
        $_SESSION['username'] = $username;
        
        // Update last login time
        date_default_timezone_set('UTC');
        $last_login = date('Y-m-d H:i:s');
        $stmt = $conn->prepare("UPDATE users SET last_login = ? WHERE id = ?");
        $stmt->bind_param("si", $last_login, $user_data['id']);
        $stmt->execute();

        return "Login successful!";
    } else {
        return "Incorrect password!";
    }
}

// Logout function
function logoutUser() {
    session_start();
    session_unset();
    session_destroy();
    header("Location: login.php");
}

// Close database connection
$conn->close();
?>


<?php
include('auth_functions.php');

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $username = $_POST['username'];
    $password = $_POST['password'];
    
    $conn = mysqli_connect($host, $username_db, $password_db, $db_name);
    $result = registerUser($username, $password, $conn);
    echo $result;
}
?>


<?php
include('auth_functions.php');

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $username = $_POST['username'];
    $password = $_POST['password'];
    
    $conn = mysqli_connect($host, $username_db, $password_db, $db_name);
    $result = loginUser($username, $password, $conn);
    echo $result;
}
?>


<?php
session_start();
if (!isset($_SESSION['user_id'])) {
    header("Location: login.php");
}

// Display user dashboard content here
echo "Welcome, " . $_SESSION['username'] . "!";
?>


<a href="logout.php">Logout</a>


<?php
session_start();

// Database connection details
$host = "localhost";
$username = "root";
$password = "";
$dbname = "mydatabase";

try {
    // Create database connection
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        // Check if form is submitted
        if (isset($_POST['submit'])) {
            // Sanitize input data
            $username = htmlspecialchars(trim($_POST['username']));
            $password = htmlspecialchars(trim($_POST['password']));

            // Validate input data
            if (empty($username) || empty($password)) {
                die("Username and password are required!");
            }

            // Prepare statement to prevent SQL injection
            $stmt = $conn->prepare("SELECT * FROM users WHERE username = ? AND password = SHA1(?)");
            $stmt->execute([$username, $password]);

            // Check if user exists
            $user = $stmt->fetch(PDO::FETCH_ASSOC);

            if ($user) {
                // Set session variables
                $_SESSION['logged_in'] = true;
                $_SESSION['username'] = $username;

                // Redirect to dashboard or home page
                header("Location: dashboard.php");
                exit();
            } else {
                // Display error message
                echo "Invalid username or password!";
            }
        }
    }

} catch(PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login Page</title>
</head>
<body>
    <h2>Login Form</h2>
    <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]);?>">
        Username: <input type="text" name="username"><br><br>
        Password: <input type="password" name="password"><br><br>
        <input type="submit" name="submit" value="Login">
    </form>
</body>
</html>


<?php
// Database connection configuration
$host = 'localhost';
$username = 'root'; // your database username
$password = ''; // your database password
$db_name = 'user_login'; // your database name

// Create database connection
$conn = mysqli_connect($host, $username, $password, $db_name);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Register function
function register_user($username, $password, $email, $conn) {
    // Sanitize input
    $username = mysqli_real_escape_string($conn, $username);
    $password = mysqli_real_escape_string($conn, $password);
    $email = mysqli_real_escape_string($conn, $email);

    // Check if user already exists
    $check_query = "SELECT username FROM users WHERE username='$username'";
    $result = mysqli_query($conn, $check_query);
    
    if (mysqli_num_rows($result) > 0) {
        return "User already exists!";
    }

    // Hash the password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

    // Insert user into database
    $sql = "INSERT INTO users (username, password, email) VALUES ('$username', '$hashed_password', '$email')";
    
    if (mysqli_query($conn, $sql)) {
        return "Registration successful!";
    } else {
        return "Error: " . mysqli_error($conn);
    }
}

// Login function
function login_user($username, $password, $conn) {
    // Sanitize input
    $username = mysqli_real_escape_string($conn, $username);
    $password = mysqli_real_escape_string($conn, $password);

    // Retrieve user data from database
    $sql = "SELECT * FROM users WHERE username='$username'";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) == 1) {
        $user_data = mysqli_fetch_assoc($result);
        
        // Verify password
        if (password_verify($password, $user_data['password'])) {
            // Start session
            session_start();
            
            // Store user data in session
            $_SESSION['id'] = $user_data['id'];
            $_SESSION['username'] = $user_data['username'];
            $_SESSION['is_admin'] = ($user_data['role'] == 'admin') ? true : false;
            
            return "Login successful!";
        } else {
            return "Invalid username or password!";
        }
    } else {
        return "Invalid username or password!";
    }
}

// Example usage:

if (isset($_POST['register'])) {
    $reg_username = $_POST['username'];
    $reg_password = $_POST['password'];
    $reg_email = $_POST['email'];
    
    $result = register_user($reg_username, $reg_password, $reg_email, $conn);
    echo $result;
}

if (isset($_POST['login'])) {
    $log_username = $_POST['username'];
    $log_password = $_POST['password'];
    
    $result = login_user($log_username, $log_password, $conn);
    echo $result;
}

// Close database connection
mysqli_close($conn);
?>


<?php
// Include database connection file
include("db_connection.php");

function user_login() {
    // Check if form has been submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        $username = $_POST['username'];
        $password = $_POST['password'];

        // Sanitize the inputs to prevent SQL injection
        $username = mysqli_real_escape_string($GLOBALS['db'], $username);
        $password = mysqli_real_escape_string($GLOBALS['db'], $password);

        // Query the database for user with given username
        $query = "SELECT * FROM users WHERE username='$username'";
        $result = mysqli_query($GLOBALS['db'], $query);

        if (!$result) {
            die('Query failed: ' . mysqli_error($GLOBALS['db']));
        }

        $row = mysqli_fetch_assoc($result);
        
        // Check if user exists
        if (mysqli_num_rows($result) == 1) {
            // Verify password
            if ($row['password'] === md5($password)) { 
                // Start session and store user details
                session_start();
                $_SESSION['id'] = $row['id'];
                $_SESSION['username'] = $row['username'];
                
                // Set cookies
                setcookie("id", $row['id'], time() + 3600);
                setcookie("username", $row['username'], time() + 3600);

                // Redirect to dashboard or home page
                header("Location: dashboard.php");
                exit();
            } else {
                echo "Invalid password";
            }
        } else {
            echo "Username not found";
        }

    }
}

// Logout function
function logout() {
    session_start();
    unset($_SESSION['id']);
    unset($_SESSION['username']);
    setcookie("id", "", time() - 3600);
    setcookie("username", "", time() - 3600);
    header("Location: login.php");
}

// Call the login function
if (isset($_POST['login'])) {
    user_login();
}
?>


<?php
$host = "localhost";
$username = "your_db_username";
$password = "your_db_password";
$dbname = "your_database_name";

// Create connection
$conn = mysqli_connect($host, $username, $password, $dbname);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}
?>


<?php
$host = 'localhost';
$dbname = 'user_auth';
$username = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}
?>


<?php
require_once('db.php');

$username = $_POST['username'];
$email = $_POST['email'];
$password = $_POST['password'];

// Sanitize inputs
$username = htmlspecialchars($username);
$email = htmlspecialchars($email);

// Hash password
$hash = password_hash($password, PASSWORD_DEFAULT);

try {
    // Check if username or email already exists
    $stmt = $conn->prepare("SELECT id FROM users WHERE username = :username OR email = :email");
    $stmt->execute(['username' => $username, 'email' => $email]);
    
    if ($stmt->rowCount() > 0) {
        echo "Username or email already exists.";
    } else {
        // Insert new user
        $stmt = $conn->prepare("INSERT INTO users (username, email, password_hash) VALUES (:username, :email, :password)");
        $stmt->execute(['username' => $username, 'email' => $email, 'password' => $hash]);
        
        echo "Registration successful!";
    }
} catch(PDOException $e) {
    echo "Error: " . $e->getMessage();
}
?>


<?php
session_start();
require_once('db.php');

$username_or_email = $_POST['username_or_email'];
$password = $_POST['password'];

try {
    // Query user by username or email
    $stmt = $conn->prepare("SELECT id, password_hash FROM users WHERE username = :input OR email = :input");
    $stmt->execute(['input' => $username_or_email]);
    
    if ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {
        // Verify password
        if (password_verify($password, $row['password_hash'])) {
            // Set session variables
            $_SESSION['user_id'] = $row['id'];
            header("Location: dashboard.php");
            exit();
        } else {
            echo "Incorrect password.";
        }
    } else {
        echo "Username or email not found.";
    }
} catch(PDOException $e) {
    echo "Error: " . $e->getMessage();
}
?>


session_start();
$_SESSION['user_id'] = $row['id'];


<?php
session_start();
unset($_SESSION['user_id']);
session_unset();
session_destroy();
header("Location: login.html");
exit();
?>


<?php
// Include database connection file
include('db_connection.php');

session_start();

if (isset($_POST['login'])) {
    $username = mysqli_real_escape_string($conn, $_POST['username']);
    $password = $_POST['password'];
    
    if ($username == "" || $password == "") {
        $error_msg = "Please fill in all fields!";
    } else {
        // Query to check user existence
        $sql = "SELECT * FROM users WHERE username='$username'";
        $result = mysqli_query($conn, $sql);
        
        if (mysqli_num_rows($result) == 0) {
            $error_msg = "Username does not exist!";
        } else {
            $row = mysqli_fetch_assoc($result);
            // Verify password
            if (!password_verify($password, $row['password'])) {
                $error_msg = "Invalid password!";
            } else {
                // Start session and store user data
                $_SESSION['user_id'] = $row['id'];
                $_SESSION['username'] = $row['username'];
                $_SESSION['login_time'] = time();
                
                // Remember me functionality
                if (isset($_POST['remember'])) {
                    $cookie_value = json_encode(array(
                        'user_id' => $row['id'],
                        'username' => $row['username']
                    ));
                    setcookie('login_cookie', $cookie_value, time() + 30*24*60*60, '/', null, false, true);
                }
                
                // Redirect to dashboard
                header("Location: dashboard.php");
                exit();
            }
        }
    }
}

// Close database connection
mysqli_close($conn);
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Login Page</title>
</head>
<body>
    <?php if (isset($error_msg)) { ?>
        <div style="color: red;"><?php echo $error_msg; ?></div><br>
    <?php } ?>

    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="POST">
        <input type="text" name="username" placeholder="Username"><br><br>
        <input type="password" name="password" placeholder="Password"><br><br>
        <input type="checkbox" name="remember"> Remember Me<br><br>
        <input type="submit" name="login" value="Login">
    </form>
</body>
</html>


<?php
$host = "localhost";
$username_db = "root";
$password_db = "";
$db_name = "your_database";

$conn = mysqli_connect($host, $username_db, $password_db, $db_name);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}
?>


<?php
session_start();

// Database configuration
$host = 'localhost';
$db_username = 'root';
$db_password = '';
$db_name = 'mydatabase';

// Connect to database
$conn = mysqli_connect($host, $db_username, $db_password, $db_name);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Check if form is submitted
if (isset($_POST['login'])) {
    // Sanitize input data
    $username = htmlspecialchars(trim($_POST['username']));
    $password = htmlspecialchars(trim($_POST['password']));

    // Query the database for user with this username
    $sql = "SELECT * FROM users WHERE username = '" . mysqli_real_escape_string($conn, $username) . "'";
    $result = mysqli_query($conn, $sql);

    if ($result && mysqli_num_rows($result) > 0) {
        // Get user data
        $user_data = mysqli_fetch_assoc($result);
        
        // Verify password
        if (password_verify($password, $user_data['password'])) {
            // Set session variables
            $_SESSION['username'] = $user_data['username'];
            $_SESSION['logged_in'] = true;

            // Redirect to dashboard or home page
            header('Location: dashboard.php');
            exit();
        } else {
            echo "Invalid password!";
        }
    } else {
        echo "Username not found!";
    }
}

// Close database connection
mysqli_close($conn);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login Page</title>
</head>
<body>
    <h2>Login</h2>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        Username: <input type="text" name="username"><br><br>
        Password: <input type="password" name="password"><br><br>
        <input type="submit" name="login" value="Login">
    </form>
</body>
</html>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

try {
    // Create a database connection
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    die("Could not connect to the database: " . $e->getMessage());
}

// Function to handle user login
function loginUser($username, $password, $conn) {
    try {
        // Prepare and execute SQL statement to select user with given username
        $stmt = $conn->prepare("SELECT * FROM users WHERE username = ?");
        $stmt->execute([$username]);
        
        // Fetch the result
        $user = $stmt->fetch(PDO::FETCH_ASSOC);
        
        if ($user) {
            // Verify password
            if (password_verify($password, $user['password'])) {
                // Password is correct
                session_start();
                $_SESSION['loggedin'] = true;
                $_SESSION['username'] = $user['username'];
                $_SESSION['userid'] = $user['id'];
                
                return true;
            } else {
                // Incorrect password
                return false;
            }
        } else {
            // User does not exist
            return false;
        }
    } catch(PDOException $e) {
        die("An error occurred: " . $e->getMessage());
    }
}

// Check if form was submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST['username'];
    $password = $_POST['password'];
    
    // Call login function
    if (loginUser($username, $password, $conn)) {
        header("Location: dashboard.php");
        die();
    } else {
        echo "Invalid username or password!";
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login</title>
</head>
<body>
    <h2>Login Page</h2>
    <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
        Username: <input type="text" name="username"><br>
        Password: <input type="password" name="password"><br>
        <input type="submit" value="Login">
    </form>
</body>
</html>


<?php
// Database configuration
$host = 'localhost';
$username_db = 'root';
$password_db = '';
$db_name = 'your_database';

// Connect to the database
$conn = new mysqli($host, $username_db, $password_db, $db_name);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function login_user() {
    global $conn;

    // Get user input
    $email = htmlspecialchars($_POST['email']);
    $password = $_POST['password'];

    // Sanitize the email
    $email = mysqli_real_escape_string($conn, $email);

    // Check if user exists
    $query = "SELECT * FROM users WHERE email = '$email'";
    $result = $conn->query($query);

    if ($result->num_rows == 0) {
        return "User not found!";
    }

    // Get the user data
    $user = $result->fetch_assoc();

    // Verify password
    if (password_verify($password, $user['password'])) {
        // Create session variables
        $_SESSION['id'] = $user['id'];
        $_SESSION['username'] = $user['username'];
        $_SESSION['email'] = $user['email'];
        $_SESSION['admin'] = $user['is_admin'];

        return "Login successful!";
    } else {
        return "Incorrect password!";
    }
}

// Handle login
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    try {
        // Call the login function
        $login_result = login_user();
        
        if ($login_result === "Login successful!") {
            header("Location: dashboard.php");
            exit();
        } else {
            echo $login_result;
        }
    } catch (Exception $e) {
        die("An error occurred: " . $e->getMessage());
    }
}
?>


<?php
function register_user() {
    global $conn;

    // Get user input
    $username = htmlspecialchars($_POST['username']);
    $email = mysqli_real_escape_string($conn, $_POST['email']);
    $password = $_POST['password'];
    
    // Hash the password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

    // Check if email already exists
    $query = "SELECT * FROM users WHERE email = '$email'";
    $result = $conn->query($query);

    if ($result->num_rows > 0) {
        return "Email already exists!";
    }

    // Insert new user into the database
    $sql = "INSERT INTO users (username, email, password)
            VALUES ('$username', '$email', '$hashed_password')";
            
    if ($conn->query($sql)) {
        return "Registration successful! You can now login.";
    } else {
        return "Registration failed. Please try again.";
    }
}
?>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$database = 'login_system';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $database);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Session management
session_start();

// Error messages array
$errors = [];

// Check if form is submitted
if (isset($_POST['login'])) {
    // Get user input
    $username = $_POST['username'];
    $password = $_POST['password'];

    // Validate input
    if (empty($username) || empty($password)) {
        $errors[] = "Username and password are required!";
    }

    // Query database
    if (count($errors) == 0) {
        $stmt = $conn->prepare("SELECT id, username, password FROM users WHERE username = ?");
        $stmt->bind_param("s", $username);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            $user = $result->fetch_assoc();
            if (password_verify($password, $user['password'])) {
                // Start session and store user data
                $_SESSION['id'] = $user['id'];
                $_SESSION['username'] = $user['username'];
                $_SESSION['login_time'] = time();

                // Redirect to dashboard or home page
                header("Location: dashboard.php");
                exit();
            } else {
                $errors[] = "Incorrect password!";
            }
        } else {
            $errors[] = "Username not found!";
        }
    }

    // Close statement and connection
    $stmt->close();
    $conn->close();
}

// Display errors if any
if (!empty($errors)) {
    foreach ($errors as $error) {
        echo "<script>alert('$error');</script>";
    }
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login Page</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f4f4f4;
        }
        .container {
            max-width: 500px;
            margin: 0 auto;
            padding: 20px;
            background-color: white;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }
        .form-group {
            margin-bottom: 20px;
        }
        input {
            width: 100%;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-sizing: border-box;
        }
        button {
            background-color: #4CAF50;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
        button:hover {
            background-color: #45a049;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>Login</h1>
        <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="POST" onsubmit="return validateForm()">
            <div class="form-group">
                <input type="text" name="username" placeholder="Enter your username..." required>
            </div>
            <div class="form-group">
                <input type="password" name="password" placeholder="Enter your password..." required>
            </div>
            <button type="submit" name="login">Login</button>
        </form>
        <p style="margin-top: 10px;">Not registered? <a href="register.php">Register here</a></p>
    </div>

    <script>
        function validateForm() {
            const username = document.querySelector('input[name="username"]').value;
            const password = document.querySelector('input[name="password"]').value;

            if (username.trim() === '' || password.trim() === '') {
                alert("Username and password are required!");
                return false;
            }
            return true;
        }
    </script>
</body>
</html>


<?php
// Database connection details
$host = "localhost";
$username_db = "root"; // your database username
$password_db = "";     // your database password
$database_name = "login_system"; // your database name

// Connect to the database
$conn = mysqli_connect($host, $username_db, $password_db, $database_name);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

session_start();

function login() {
    if (isset($_POST['submit'])) {
        // Sanitize input data
        $username = htmlspecialchars($_POST['username']);
        $password = htmlspecialchars($_POST['password']);

        // Check if username and password are provided
        if (empty($username) || empty($password)) {
            echo "Please fill in all fields!";
            return;
        }

        global $conn;

        // Query to check if the username exists
        $query = "SELECT * FROM users WHERE username='$username'";
        $result = mysqli_query($conn, $query);

        if (mysqli_num_rows($result) == 0) {
            echo "Username does not exist!";
            return;
        }

        // Get the stored password hash
        $row = mysqli_fetch_assoc($result);
        $stored_password = $row['password'];

        // Verify the password against the hash
        if (!password_verify($password, $stored_password)) {
            echo "Incorrect password!";
            return;
        } else {
            // Set session variables
            $_SESSION['username'] = $username;
            $_SESSION['logged_in'] = true;

            // Redirect to dashboard
            header("Location: dashboard.php");
            exit();
        }
    }
}

// Call the login function if form is submitted
if (isset($_POST['submit'])) {
    login();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login Page</title>
</head>
<body>
    <h2>Login Form</h2>
    <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
        Username: <input type="text" name="username"><br><br>
        Password: <input type="password" name="password"><br><br>
        <input type="submit" name="submit" value="Login">
    </form>
</body>
</html>


<?php
session_start();
if (!isset($_SESSION['logged_in']) || $_SESSION['logged_in'] !== true) {
    header("Location: login.php");
    exit();
}
?>
<!DOCTYPE html>
<html>
<head>
    <title>Dashboard</title>
</head>
<body>
    <h2>Welcome, <?php echo $_SESSION['username']; ?>!</h2>
    <a href="logout.php">Logout</a>
</body>
</html>


<?php
session_start();
unset($_SESSION['logged_in']);
unset($_SESSION['username']);
session_unset();
session_destroy();
header("Location: login.php");
exit();
?>


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login</title>
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>
    <div class="container mt-5">
        <h2 class="text-center mb-4">Login to your account</h2>
        <form action="process_login.php" method="POST">
            <div class="mb-3">
                <label for="email" class="form-label">Email address</label>
                <input type="email" name="email" id="email" class="form-control" required>
            </div>
            <div class="mb-4">
                <label for="password" class="form-label">Password</label>
                <input type="password" name="password" id="password" class="form-control" required>
            </div>
            <?php
            if (isset($_SESSION['error'])) {
                echo '<div class="alert alert-danger" role="alert">' . $_SESSION['error'] . '</div>';
                unset($_SESSION['error']);
            }
            ?>
            <button type="submit" name="login_submit" class="btn btn-primary w-100">Login</button>
        </form>
        <p class="text-center mt-3">Don't have an account? <a href="register.php">Register here</a></p>
    </div>

    <!-- Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>


<?php
session_start();
include('config.php');

try {
    $conn = new mysqli(DB_HOST, DB_USER, DB_PASS, DB_NAME);
    
    if ($conn->connect_error) {
        throw new Exception("Connection failed: " . $conn->connect_error);
    }

    if ($_SERVER['REQUEST_METHOD'] == 'POST') {
        $email = $conn->real_escape_string($_POST['email']);
        $password = $_POST['password'];

        // Query the database for the user
        $sql = "SELECT * FROM users WHERE email = ?";
        $stmt = $conn->prepare($sql);
        $stmt->bind_param("s", $email);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows == 1) {
            $user = $result->fetch_assoc();
            
            // Verify the password
            if (password_verify($password, $user['password'])) {
                // Start session and store user data
                $_SESSION['logged_in'] = true;
                $_SESSION['user_id'] = $user['id'];
                $_SESSION['username'] = $user['username'];
                
                // Redirect to dashboard
                header("Location: dashboard.php");
                exit();
            } else {
                // Password is incorrect
                $_SESSION['error'] = "Incorrect password";
                header("Location: login.php");
                exit();
            }
        } else {
            // Email not found
            $_SESSION['error'] = "Email not found";
            header("Location: login.php");
            exit();
        }
    }

    $conn->close();
} catch (Exception $e) {
    $_SESSION['error'] = "An error occurred: " . $e->getMessage();
    header("Location: login.php");
    exit();
}
?>


<?php
define('DB_HOST', 'localhost');
define('DB_USER', 'your_username');
define('DB_PASS', 'your_password');
define('DB_NAME', 'your_database');

try {
    $conn = new mysqli(DB_HOST, DB_USER, DB_PASS, DB_NAME);
} catch (Exception $e) {
    die("Connection failed: " . $e->getMessage());
}
?>


<?php
session_start();

// Database configuration
$host = 'localhost';
$dbUsername = 'username';
$dbPassword = 'password';
$dbName = 'database_name';

try {
    // Connect to the database
    $pdo = new PDO("mysql:host=$host;dbname=$dbName", $dbUsername, $dbPassword);
    $pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        // Get form data
        $username = $_POST['username'];
        $password = $_POST['password'];

        // Check if username and password are provided
        if (empty($username) || empty($password)) {
            die("Username or password cannot be empty");
        }

        // Prepare SQL statement to check user credentials
        $stmt = $pdo->prepare("SELECT * FROM users WHERE username = ?");
        $stmt->execute([$username]);
        $user = $stmt->fetch(PDO::FETCH_ASSOC);

        if (!$user) {
            die("Invalid username or password");
        }

        // Verify password
        if (password_verify($password, $user['password'])) {
            // Set session variables
            $_SESSION['id'] = $user['id'];
            $_SESSION['username'] = $user['username'];
            
            // Regenerate session ID to prevent session hijacking
            session_regenerate(true);

            // Redirect to dashboard or home page
            header("Location: dashboard.php");
            exit();
        } else {
            die("Invalid username or password");
        }
    }

} catch (PDOException $e) {
    die("Database connection failed: " . $e->getMessage());
}
?>


<?php
// Database connection settings
$host = 'localhost';
$username = 'root'; // Change this to your database username
$password = '';      // Change this to your database password
$dbname = 'your_database_name'; // Change this to your database name

// Create connection
$conn = mysqli_connect($host, $username, $password, $dbname);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function user_login() {
    global $conn;

    // Initialize variables
    $loginError = "";
    
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        // Sanitize inputs
        $email = mysqli_real_escape_string($conn, trim($_POST['email']));
        $password = mysqli_real_escape_string($conn, trim($_POST['password']));

        // Validate email format
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            $loginError .= "Invalid email format <br>";
        }

        // Check if fields are not empty
        if (empty($email) || empty($password)) {
            $loginError .= "All fields must be filled out";
        }

        // If no errors, proceed with login
        if ($loginError == "") {
            try {
                // Prepare SQL query to check user credentials
                $sql = "SELECT id, email, password FROM users WHERE email = '$email'";
                $result = mysqli_query($conn, $sql);

                // Check if exactly one row is returned
                if (mysqli_num_rows($result) == 1) {
                    $row = mysqli_fetch_assoc($result);
                    
                    // Verify the password
                    if (password_verify($password, $row['password'])) {
                        // Password matches, start session
                        session_start();
                        
                        // Store user data in session variables
                        $_SESSION['loggedin'] = true;
                        $_SESSION['userid'] = $row['id'];
                        $_SESSION['email'] = $email;
                        
                        // Redirect to dashboard or home page
                        header("Location: dashboard.php");
                        exit();
                    } else {
                        $loginError .= "Incorrect password <br>";
                    }
                } else {
                    $loginError .= "No account found with this email address";
                }
            } catch (Exception $e) {
                $loginError = "An error occurred during login: " . $e->getMessage();
            }
        }

        // Display error message
        if ($loginError != "") {
            echo "<div class='error'>" . $loginError . "</div>";
        }
    }
}

// Close database connection
mysqli_close($conn);
?>


$hashed_password = password_hash($password, PASSWORD_DEFAULT);


session_start();
session_unset();
session_destroy();
header("Location: login.php");
exit();


<?php
session_start();

// Database connection parameters
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

try {
    // Connect to database
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

    // Check if form is submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        // Sanitize input data
        function sanitize($data) {
            return htmlspecialchars(strip_tags(trim($data)));
        }

        $username = sanitize($_POST['username']);
        $password = $_POST['password'];

        // Check if username and password are not empty
        if (empty($username) || empty($password)) {
            die("Username or password cannot be empty");
        }

        // Prepare SQL statement to select user by username
        $stmt = $conn->prepare("SELECT * FROM users WHERE username = ?");
        $stmt->execute([$username]);
        
        // Check if user exists
        $user = $stmt->fetch(PDO::FETCH_ASSOC);
        if (!$user) {
            die("User not found");
        }

        // Verify password
        if (password_verify($password, $user['password'])) {
            // Password is correct
            session_regenerate();
            
            // Set session variables
            $_SESSION['loggedin'] = true;
            $_SESSION['username'] = $username;
            $_SESSION['id'] = $user['id'];
            $_SESSION['role'] = $user['role']; // Assuming you have a role column

            // Redirect to dashboard or home page
            header("Location: dashboard.php");
            exit();
        } else {
            // Password is incorrect
            die("Incorrect password");
        }
    }

} catch(PDOException $e) {
    // Handle any database errors
    die("Connection failed: " . $e->getMessage());
}
?>


<?php
// Start the session
session_start();

// Database configuration
$host = "localhost";
$username_db = "root";
$password_db = "";
$dbname = "mydatabase";

// Connect to database
$conn = new mysqli($host, $username_db, $password_db, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Sanitize input
    $username = htmlspecialchars($_POST['username']);
    $password = $_POST['password'];

    if (empty($username) || empty($password)) {
        echo "Username and password are required!";
        exit();
    }

    // Prepare and bind statement to prevent SQL injection
    $stmt = $conn->prepare("SELECT id, username, password FROM users WHERE username = ?");
    $stmt->bind_param("s", $username);
    $stmt->execute();

    $result = $stmt->get_result();
    if ($result->num_rows == 1) {
        $row = $result->fetch_assoc();
        $hashed_password = $row['password'];

        // Verify password
        if (password_verify($password, $hashed_password)) {
            // Start session and set session variables
            $_SESSION['id'] = $row['id'];
            $_SESSION['username'] = $row['username'];
            $_SESSION['login_time'] = time();

            // Redirect to dashboard or home page
            header("Location: dashboard.php");
            exit();
        } else {
            echo "Incorrect password!";
        }
    } else {
        echo "Username does not exist!";
    }

    $stmt->close();
}

$conn->close();
?>


<?php
session_start();

// Destroy all session variables
unset($_SESSION['id']);
unset($_SESSION['username']);
unset($_SESSION['login_time']);

// Destroy the session cookie
if (isset($_COOKIE[session_name()])) {
    setcookie(session_name(), '', time() - 3600, '/');
}

// Finally, destroy the session
session_destroy();

// Redirect to login page
header("Location: login_form.html");
exit();
?>


<?php
session_start();

$host = "localhost";
$username_db = "root";
$password_db = "";
$dbname = "mydatabase";

$conn = new mysqli($host, $username_db, $password_db, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = htmlspecialchars($_POST['username']);
    $password = $_POST['password'];

    if (empty($username) || empty($password)) {
        echo "Username and password are required!";
        exit();
    }

    // Check if username already exists
    $stmt = $conn->prepare("SELECT id FROM users WHERE username = ?");
    $stmt->bind_param("s", $username);
    $stmt->execute();

    if ($stmt->get_result()->num_rows > 0) {
        echo "Username already exists!";
        exit();
    }

    // Hash the password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

    // Insert into database
    $stmt = $conn->prepare("INSERT INTO users (username, password) VALUES (?, ?)");
    $stmt->bind_param("ss", $username, $hashed_password);
    $result = $stmt->execute();

    if ($result) {
        echo "Registration successful! You can now login.";
    } else {
        echo "Error registering!";
    }

    $stmt->close();
}

$conn->close();
?>


<?php
session_start();

// Database configuration
$host = 'localhost';
$username_db = 'root';
$password_db = '';
$db_name = 'my_database';

// Connect to the database
$conn = mysqli_connect($host, $username_db, $password_db, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function sanitizeInput($data) {
    $data = trim($data);
    $data = htmlspecialchars($data);
    return $data;
}

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get username and password from form
    $username = sanitizeInput($_POST['username']);
    $password = sanitizeInput($_POST['password']);

    // Prevent SQL injection
    $username = mysqli_real_escape_string($conn, $username);
    $password = mysqli_real_escape_string($conn, $password);

    // Check if username exists in the database
    $sql = "SELECT * FROM users WHERE username='$username'";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) == 0) {
        die("Username not found. Please try again.");
    }

    // Get stored password from database
    $row = mysqli_fetch_assoc($result);
    $stored_password = $row['password'];

    // Compare passwords
    if ($password != $stored_password) {
        die("Incorrect password. Please try again.");
    } else {
        // Start session and store user data
        $_SESSION['username'] = $username;
        $_SESSION['logged_in'] = true;

        // Redirect to dashboard or home page
        echo "Login successful!";
        // You can use header('Location: dashboard.php') instead of echo for proper redirection
    }
}

?>

<!DOCTYPE html>
<html>
<head>
    <title>Login Page</title>
    <style>
        .login-form {
            width: 300px;
            margin: 0 auto;
            padding: 20px;
            border: 1px solid #ccc;
            border-radius: 5px;
        }
        .form-group {
            margin-bottom: 10px;
        }
    </style>
</head>
<body>
    <div class="login-form">
        <h2>Login</h2>
        <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="POST">
            <div class="form-group">
                <label for="username">Username:</label>
                <input type="text" id="username" name="username" required>
            </div>
            <div class="form-group">
                <label for="password">Password:</label>
                <input type="password" id="password" name="password" required>
            </div>
            <button type="submit">Login</button>
        </form>
        <p>Don't have an account? <a href="#">Register here</a></p>
    </div>
</body>
</html>


<?php
// Database connection details
$host = 'localhost';
$username_db = 'root';
$password_db = '';
$db_name = 'user_login';

// Create database connection
$conn = new mysqli($host, $username_db, $password_db, $db_name);

// Check if the form is submitted
if (isset($_POST['submit'])) {
    // Sanitize input data to prevent SQL injection
    $username = mysqli_real_escape_string($conn, $_POST['username']);
    $password = mysqli_real_escape_string($conn, $_POST['password']);

    // Check if username exists in the database
    $sql = "SELECT * FROM users WHERE username='$username'";
    $result = $conn->query($sql);

    if ($result->num_rows > 0) {
        // Get user data
        $row = $result->fetch_assoc();

        // Verify password (assuming passwords are stored as MD5 hashes)
        if (md5($password) === $row['password']) {
            // Password is correct, create session variables
            session_start();
            $_SESSION['user_id'] = $row['id'];
            $_SESSION['username'] = $row['username'];
            $_SESSION['email'] = $row['email'];

            // Redirect to dashboard or home page
            header("Location: dashboard.php");
            exit();
        } else {
            echo "Incorrect password.";
        }
    } else {
        echo "Account does not exist.";
    }
}

// Close database connection
$conn->close();

// Display login form
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Login Page</title>
</head>
<body>
    <h1>Login to your account</h1>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <input type="text" name="username" placeholder="Enter username" required><br>
        <input type="password" name="password" placeholder="Enter password" required><br>
        <button type="submit" name="submit">Login</button>
    </form>
</body>
</html>


<?php
session_start();
require_once('db_connection.php');

if (isset($_POST['submit'])) {
    $username = $_POST['username'];
    $password = $_POST['password'];

    // Prepare the statement
    $stmt = $conn->prepare("SELECT * FROM users WHERE username=?");
    $stmt->bind_param("s", $username);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        $row = $result->fetch_assoc();
        if (password_verify($password, $row['password'])) {
            $_SESSION['user_id'] = $row['id'];
            $_SESSION['username'] = $row['username'];
            header("Location: dashboard.php");
            exit();
        } else {
            echo "Incorrect password.";
        }
    } else {
        echo "Account does not exist.";
    }

    // Close the statement
    $stmt->close();
}

// Close database connection
$conn->close();

?>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'username';
$password = 'password';

try {
    // Create database connection
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

// Start session
session_start();

// Check if form is submitted
if (isset($_POST['submit'])) {
    // Get user input
    $username_or_email = $_POST['username'];
    $password = $_POST['password'];

    try {
        // Prepare the SQL statement to check credentials
        $stmt = $conn->prepare("SELECT * FROM users WHERE username = :username OR email = :email");
        $stmt->execute([':username' => $username_or_email, ':email' => $username_or_email]);
        
        $user = $stmt->fetch(PDO::FETCH_ASSOC);

        if ($user) {
            // Verify password
            if (password_verify($password, $user['password'])) {
                // Start session and store user details
                $_SESSION['logged_in'] = true;
                $_SESSION['user_id'] = $user['id'];
                $_SESSION['username'] = $user['username'];
                $_SESSION['email'] = $user['email'];
                $_SESSION['full_name'] = $user['full_name'];
                $_SESSION['role'] = $user['role'];

                // Redirect based on user role
                if ($user['role'] == 'admin') {
                    header("Location: admin_dashboard.php");
                } else {
                    header("Location: user_dashboard.php");
                }
                exit();
            } else {
                // Incorrect password
                $error = "Incorrect username or password";
            }
        } else {
            // User not found
            $error = "User not found. Please check your credentials.";
        }

    } catch(PDOException $e) {
        die("Error occurred: " . $e->getMessage());
    }

} else {
    // If form is not submitted, redirect to login page
    header("Location: login.php");
    exit();
}

// Close database connection
$conn = null;
?>


<?php
session_start();

// Database configuration
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'username';
$password = 'password';

try {
    // Create database connection
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

    if ($_SERVER['REQUEST_METHOD'] == 'POST') {
        // Get form data
        $email = $_POST['email'];
        $password = $_POST['password'];

        // Sanitize input (optional but recommended)
        $email = htmlspecialchars(trim($email));
        $password = htmlspecialchars(trim($password));

        // Prepare SQL statement to check user credentials
        $stmt = $conn->prepare("SELECT * FROM users WHERE email = :email");
        $stmt->execute(['email' => $email]);
        
        $user = $stmt->fetch(PDO::FETCH_ASSOC);

        if ($user) {
            // Verify password
            if (password_verify($password, $user['password'])) {
                // Password is correct; start session and set session variables
                $_SESSION['user_id'] = $user['id'];
                $_SESSION['username'] = $user['username'];

                // Redirect to dashboard or home page
                header("Location: dashboard.php");
                exit();
            } else {
                // Incorrect password
                header("Location: login.php?error=incorrect_credentials");
                exit();
            }
        } else {
            // User not found
            header("Location: login.php?error=incorrect_credentials");
            exit();
        }
    } else {
        // If form was not submitted, redirect to login page
        header("Location: login.php");
        exit();
    }

} catch (PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}
?>


// When registering a new user:
$password = $_POST['password'];
$hashed_password = password_hash($password, PASSWORD_DEFAULT);
// Store $hashed_password in the database


<?php
session_start();

function loginUser($username, $password) {
    // Database connection parameters
    $host = 'localhost';
    $db_username = 'root';
    $db_password = '';
    $database = 'my_database';

    // Connect to the database
    $conn = mysqli_connect($host, $db_username, $db_password, $database);
    
    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
    }

    // Sanitize input
    $username = mysqli_real_escape_string($conn, $username);

    // Query the database for the user
    $sql = "SELECT id, username, password FROM users WHERE username='$username'";
    $result = mysqli_query($conn, $sql);

    if (!$result) {
        die("Query failed: " . mysqli_error($conn));
    }

    $row = mysqli_fetch_assoc($result);
    
    // Check if user exists
    if ($row === null) {
        return ['success' => false, 'message' => 'Invalid username or password'];
    }

    // Verify password
    if (!password_verify($password, $row['password'])) {
        return ['success' => false, 'message' => 'Invalid username or password'];
    }

    // Start session and store user data
    $_SESSION['user_id'] = $row['id'];
    $_SESSION['username'] = $row['username'];

    // Set remember me cookie if enabled
    if (isset($_POST['remember'])) {
        setRememberMeCookie($row['id']);
    }

    return ['success' => true, 'message' => 'Login successful'];
}

function setRememberMeCookie($user_id) {
    $token = bin2hex(random_bytes(32));
    // Store the token in the database associated with the user
    // Query would be something like: UPDATE users SET remember_token='$token' WHERE id=$user_id
    
    // Set cookie to expire after 7 days
    setcookie('remember_me', $token, time() + (7 * 24 * 60 * 60), '/', '', false, true);
}

// Example usage:
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $username = $_POST['username'];
    $password = $_POST['password'];

    $loginResult = loginUser($username, $password);

    if ($loginResult['success']) {
        header('Location: dashboard.php');
        exit();
    } else {
        echo $loginResult['message'];
    }
}
?>


<?php
// Include configuration file (assuming you have one)
include('config.php');

session_start();

// Function to create the login form
function createLoginForm() {
    $form = '
        <html>
            <head>
                <title>Login Page</title>
            </head>
            <body>
                <h1>Login</h1>
                <form method="post" action="">
                    Username: <input type="text" name="username"><br>
                    Password: <input type="password" name="password"><br>
                    <input type="submit" name="submit" value="Login">
                </form>
                <p>Don\'t have an account? <a href="register.php">Register here</a></p>
            </body>
        </html>';
    return $form;
}

// Function to handle login submission
function handleLogin() {
    // Check if form is submitted
    if (!isset($_POST['submit'])) {
        return createLoginForm();
    }

    // Sanitize and validate inputs
    $username = isset($_POST['username']) ? trim(htmlspecialchars($_POST['username'])) : '';
    $password = isset($_POST['password']) ? trim(htmlspecialchars($_POST['password'])) : '';

    if (empty($username) || empty($password)) {
        die('Please fill in all fields!');
    }

    // Connect to the database
    $connection = mysqli_connect(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);

    if (!$connection) {
        die("Connection failed: " . mysqli_connect_error());
    }

    // Prepare and execute the query (using prepared statements)
    $stmt = $connection->prepare("SELECT id, username, password FROM users WHERE username = ?");
    $stmt->bind_param('s', $username);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows === 0) {
        die('Invalid credentials!');
    }

    // Fetch user data
    $user = $result->fetch_assoc();

    // Verify password
    if (!password_verify($password, $user['password'])) {
        die('Invalid credentials!');
    }

    // Set session variables
    $_SESSION['logged_in'] = true;
    $_SESSION['user_id'] = $user['id'];
    $_SESSION['username'] = $user['username'];

    // Redirect to dashboard or home page
    header('Location: dashboard.php');
    exit();
}

// Display login form if not logged in, else redirect
if (isset($_SESSION['logged_in'])) {
    header('Location: dashboard.php');
} else {
    handleLogin();
}
?>



<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Login Page</title>
    <style>
        .container { width: 300px; margin: 0 auto; padding: 20px; }
        .error { color: red; margin-top: 10px; }
        input { margin: 5px 0; padding: 8px; }
    </style>
</head>
<body>
    <div class="container">
        <?php
        if (isset($_POST['username'])) {
            // Database connection settings
            define("DB_HOST", "localhost");
            define("DB_USER", "root");
            define("DB_PASSWORD", "");
            define("DB_NAME", "login_system");

            $connection = mysqli_connect(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);

            if (!$connection) {
                die("Connection failed: " . mysqli_connect_error());
            }

            $username = mysqli_real_escape_string($connection, $_POST['username']);
            $password = md5($_POST['password']);

            // Query to check username or email
            $query = "SELECT * FROM users WHERE username='$username' OR email='$username'";
            $result = mysqli_query($connection, $query);

            if (mysqli_num_rows($result) == 1) {
                $row = mysqli_fetch_assoc($result);
                $db_username = $row['username'];
                $db_password = $row['password'];
                $active = $row['active'];

                if ($password != $db_password) {
                    echo "<div class='error'>Incorrect password!</div>";
                } elseif ($active == 0) {
                    echo "<div class='error'>Account not activated!</div>";
                } else {
                    // Start session and set variables
                    session_start();
                    $_SESSION['user_id'] = $row['id'];
                    $_SESSION['username'] = $db_username;
                    $_SESSION['email'] = $row['email'];
                    $_SESSION['admin'] = $row['is_admin'];

                    // Redirect to dashboard
                    header("Location: dashboard.php");
                    exit();
                }
            } else {
                echo "<div class='error'>Username or email does not exist!</div>";
            }

            mysqli_close($connection);
        }
        ?>

        <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
            <input type="text" name="username" placeholder="Username or Email" required><br>
            <input type="password" name="password" placeholder="Password" required><br>
            <button type="submit">Login</button>
        </form>

        <p>Don't have an account? <a href="register.php">Register here</a>.</p>
    </div>
</body>
</html>


$password = md5($_POST['password']);


$user_password = $_POST['password'];
if (!password_verify($user_password, $row['password'])) {
    // Incorrect password
}


$hashed_password = password_hash($user_password, PASSWORD_DEFAULT);
// Store $hashed_password in the database


$stmt = $connection->prepare("SELECT * FROM users WHERE username=? OR email=?");
$stmt->bind_param("ss", $username, $username);
$stmt->execute();
$result = $stmt->get_result();


<?php
session_start();

// Database connection details
$host = 'localhost';
$db_username = 'root';
$db_password = '';
$db_name = 'mydatabase';

try {
    // Connect to the database
    $conn = mysqli_connect($host, $db_username, $db_password, $db_name);

    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
    }

    // Check if form is submitted
    if ($_SERVER['REQUEST_METHOD'] == 'POST') {

        // Sanitize input data
        $username = mysqli_real_escape_string($conn, trim($_POST['username']));
        $password = $_POST['password'];

        // Check if username and password are not empty
        if (empty($username) || empty($password)) {
            die("Username or password cannot be empty");
        }

        // Query the database for the user
        $query = "SELECT * FROM users WHERE username = '$username'";
        $result = mysqli_query($conn, $query);

        if ($result) {

            if (mysqli_num_rows($result) == 1) {
                $user = mysqli_fetch_assoc($result);
                
                // Verify password
                if (password_verify($password, $user['password'])) {
                    // Password is correct

                    // Store user data in session
                    $_SESSION['user_id'] = $user['id'];
                    $_SESSION['username'] = $user['username'];

                    // Redirect to dashboard or home page
                    header("Location: dashboard.php");
                    exit();
                } else {
                    die("Incorrect password");
                }
            } else {
                die("Username not found");
            }

        } else {
            die("Query failed: " . mysqli_error($conn));
        }

    }

} catch (Exception $e) {
    die("An error occurred: " . $e->getMessage());
}

// Close the database connection
mysqli_close($conn);

?>


<?php
session_start();
unset($_SESSION['user_id']);
unset($_SESSION['username']);
session_destroy();
header("Location: login.php");
exit();
?>


<?php
function user_login($username, $password) {
    // Database configuration
    $db_host = 'localhost';
    $db_username = 'root';
    $db_password = '';
    $db_name = 'mydatabase';

    // Connect to the database
    $conn = mysqli_connect($db_host, $db_username, $db_password, $db_name);
    
    // Check connection
    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
    }

    // Sanitize inputs
    $username = mysqli_real_escape_string($conn, $username);
    $password = mysqli_real_escape_string($conn, $password);

    // Query the database for the user
    $sql = "SELECT * FROM users WHERE username='$username'";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) == 1) {
        // User exists
        $row = mysqli_fetch_assoc($result);
        
        // Verify password
        if (password_verify($password, $row['password'])) {
            // Password is correct
            session_start();
            
            // Store user data in session
            $_SESSION['user_id'] = $row['id'];
            $_SESSION['username'] = $row['username'];
            $_SESSION['login_time'] = time();

            // Redirect to dashboard or home page
            header("Location: dashboard.php");
            exit();
        } else {
            // Password is incorrect
            echo "Incorrect password!";
        }
    } else {
        // User does not exist
        echo "Username does not exist!";
    }

    mysqli_close($conn);
}
?>


<?php
session_start();

// Database connection details
$host = "localhost";
$username_db = "root";
$password_db = "";
$database = "testdb";

// Connect to database
$conn = mysqli_connect($host, $username_db, $password_db, $database);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get username and password from form
    $username = $_POST['username'];
    $password = $_POST['password'];

    // Sanitize inputs to prevent SQL injection
    $username = mysqli_real_escape_string($conn, $username);

    // Query the database for user with this username
    $sql = "SELECT * FROM users WHERE username = '$username'";
    $result = mysqli_query($conn, $sql);

    if ($result) {
        $row = mysqli_fetch_assoc($result);
        
        // Check if password matches
        if (password_verify($password, $row['password'])) {
            // Password is correct
            $_SESSION["username"] = $username;
            $_SESSION["user_id"] = $row['id'];
            
            // Set success message and redirect to dashboard
            $_SESSION["success"] = "You have successfully logged in!";
            header("Location: dashboard.php");
            exit();
        } else {
            // Password is incorrect
            $_SESSION["error"] = "Incorrect username or password.";
        }
    } else {
        // Username not found
        $_SESSION["error"] = "Incorrect username or password.";
    }

    // Close the database connection
    mysqli_close($conn);

} else {
    // If form wasn't submitted, redirect to login page
    header("Location: login.php");
    exit();
}
?>


<?php
session_start();

// Database connection details and other necessary code...

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST['username'];
    $password = $_POST['password'];

    // Hash the password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

    // Insert into database
    $sql = "INSERT INTO users (username, password) VALUES ('$username', '$hashed_password')";
    if (mysqli_query($conn, $sql)) {
        $_SESSION["success"] = "User created successfully!";
        header("Location: login.php");
    } else {
        echo "Error: " . mysqli_error($conn);
    }
}
?>


<?php
// Import required functions
require_once('database_connection.php');

function user_login($username, $password) {
    // Check if username and password are provided
    if (empty($username) || empty($password)) {
        throw new Exception("Username and password are required");
    }

    // Connect to the database
    $conn = get_db_connection();

    try {
        // Prepare SQL statement to prevent SQL injection
        $stmt = $conn->prepare("SELECT id, username, password, failed_attempts, last_attempt FROM users WHERE username = ?");
        $stmt->bind_param("s", $username);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows == 1) {
            // Get user data
            $user = $result->fetch_assoc();

            // Check if account is locked due to too many failed attempts
            if ($user['failed_attempts'] >= 5) {
                throw new Exception("Account locked. Please wait " . (3600 - time() + $user['last_attempt']) / 60 . " minutes before trying again.");
            }

            // Verify password
            if (!password_verify($password, $user['password'])) {
                // Update failed attempts
                $stmt = $conn->prepare("UPDATE users SET failed_attempts = failed_attempts + 1, last_attempt = ? WHERE id = ?");
                $stmt->bind_param("si", time(), $user['id']);
                $stmt->execute();

                throw new Exception("Incorrect password");
            }

            // Reset failed attempts on successful login
            $stmt = $conn->prepare("UPDATE users SET failed_attempts = 0, last_attempt = ? WHERE id = ?");
            $stmt->bind_param("si", time(), $user['id']);
            $stmt->execute();

            // Start session and set user data
            session_start();
            $_SESSION['user_id'] = $user['id'];
            $_SESSION['username'] = $user['username'];
            $_SESSION['login_time'] = time();

            return true;
        } else {
            throw new Exception("Username not found");
        }
    } catch (Exception $e) {
        // Display error message
        echo "Error: " . $e->getMessage();
        return false;
    } finally {
        // Close database connection
        $conn->close();
    }
}

// Example usage:
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    try {
        if (user_login($_POST['username'], $_POST['password'])) {
            header("Location: dashboard.php");
            exit();
        }
    } catch (Exception $e) {
        $error_message = $e->getMessage();
    }
}
?>


<?php
// Include database connection file
include_once("db_connection.php");

function loginUser($username, $password) {
    // Check if form is submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        // Sanitize input data
        $username = mysqli_real_escape_string($dbConnection, $username);
        $password = mysqli_real_escape_string($dbConnection, $password);

        // Query to check if username exists in the database
        $query = "SELECT * FROM users WHERE username='$username'";
        $result = mysqli_query($dbConnection, $query);

        if (mysqli_num_rows($result) == 0) {
            // User does not exist
            setcookie("error", "Username does not exist!", time() + 3600);
            header("Location: login.php");
            exit();
        }

        // Get user data from database
        $user = mysqli_fetch_assoc($result);

        // Verify password
        if (password_verify($password, $user["password"])) {
            // Password is correct
            session_start();
            $_SESSION["id"] = $user["id"];
            $_SESSION["username"] = $user["username"];
            $_SESSION["email"] = $user["email"];

            // Set a cookie for remember me functionality
            setcookie("username", $username, time() + 3600 * 24 * 7); // Cookie expires after 1 week

            // Redirect to dashboard or home page
            header("Location: dashboard.php");
            exit();
        } else {
            // Password is incorrect
            setcookie("error", "Incorrect password!", time() + 3600);
            header("Location: login.php");
            exit();
        }
    }
}
?>


<?php
// Include database configuration file
include 'db_config.php';

function loginUser($username, $password) {
    // Sanitize input data
    $username = trim($username);
    $password = trim($password);

    // Check if username or password is empty
    if (empty($username) || empty($password)) {
        return "Username and password are required!";
    }

    // Prepare SQL statement to check user credentials
    $stmt = mysqli_prepare($conn, "SELECT id, username, password FROM users WHERE username = ?");
    mysqli_stmt_bind_param($stmt, "s", $username);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);

    if ($row = mysqli_fetch_assoc($result)) {
        // Verify password
        if (password_verify($password, $row['password'])) {
            // Password is correct
            session_start();
            $_SESSION['isLoggedIn'] = true;
            $_SESSION['username'] = $row['username'];
            $_SESSION['user_id'] = $row['id'];
            return "Login successful!";
        } else {
            // Password is incorrect
            return "Incorrect password!";
        }
    } else {
        // User does not exist
        return "Username does not exist!";
    }
}

// Connect to the database
$conn = mysqli_connect(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);

if (mysqli_connect_errno()) {
    die("Failed to connect to MySQL: " . mysqli_connect_error());
}

// Check if form is submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $username = $_POST['username'];
    $password = $_POST['password'];
    
    $result = loginUser($username, $password);
    echo $result;
} else {
    // Display login form
?>
<!DOCTYPE html>
<html>
<head>
    <title>Login Page</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 20px;
            background-color: #f5f5f5;
        }
        .container {
            max-width: 400px;
            margin: 0 auto;
            padding: 20px;
            background-color: white;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }
        .form-group {
            margin-bottom: 15px;
        }
        input[type="text"], input[type="password"] {
            width: 100%;
            padding: 8px;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-sizing: border-box;
        }
        button {
            background-color: #4CAF50;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            width: 100%;
        }
        button:hover {
            background-color: #45a049;
        }
        .error {
            color: red;
            margin-bottom: 10px;
        }
    </style>
</head>
<body>
    <div class="container">
        <h2>Login</h2>
        <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
            <div class="form-group">
                <label for="username">Username:</label>
                <input type="text" id="username" name="username" required>
            </div>
            <div class="form-group">
                <label for="password">Password:</label>
                <input type="password" id="password" name="password" required>
            </div>
            <button type="submit">Login</button>
        </form>
        <p style="text-align: center; margin-top: 10px;">
            Don't have an account? <a href="register.php">Register here</a><br>
            Forgot password? <a href="reset_password.php">Reset password</a>
        </p>
    </div>
</body>
</html>

<?php
}
?>


<?php
define('DB_HOST', 'localhost');
define('DB_USER', 'your_username');
define('DB_PASSWORD', 'your_password');
define('DB_NAME', 'your_database_name');
?>


if (isset($_SESSION['isLoggedIn']) && $_SESSION['isLoggedIn'] === true) {
    // User is logged in
} else {
    // User not logged in
}


<?php
session_start();

// Database connection details
$host = 'localhost';
$username_db = 'root'; // Change this to your database username
$password_db = '';     // Change this to your database password
$db_name = 'login_system';

// Connect to MySQL server
$conn = mysqli_connect($host, $username_db, $password_db);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Select the database
mysqli_select_db($conn, $db_name) or die("Database not found.");

// Get user input
$username = $_POST['username'];
$password = $_POST['password'];

// Sanitize inputs to prevent SQL injection
$username = mysqli_real_escape_string($conn, $username);
$password = mysqli_real_escape_string($conn, $password);

// Query the database for the user
$sql = "SELECT * FROM users WHERE username='$username'";
$result = mysqli_query($conn, $sql);

if (mysqli_num_rows($result) == 1) {
    // User exists, now verify password
    $row = mysqli_fetch_assoc($result);
    if (password_verify($password, $row['password'])) {
        // Password is correct, start session and redirect to dashboard
        $_SESSION['username'] = $row['username'];
        $_SESSION['id'] = $row['id'];
        header("Location: dashboard.php");
        exit();
    } else {
        // Password is incorrect
        header("Location: login.html?error=Incorrect username or password.");
        exit();
    }
} else {
    // User does not exist
    header("Location: login.html?error=User does not exist.");
    exit();
}

mysqli_close($conn);
?>


<?php
session_start();

if (!isset($_SESSION['username'])) {
    header("Location: login.html");
    exit();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Dashboard</title>
</head>
<body>
    <h2>Welcome, <?php echo $_SESSION['username']; ?></h2>
    <a href="logout.php">Logout</a>
</body>
</html>


<?php
session_start();
session_unset(); // Unset all session variables
session_destroy(); // Destroy the session
header("Location: login.html");
exit();
?>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'mydatabase';

// Connect to the database
$conn = mysqli_connect($host, $username, $password, $dbname);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function login_user() {
    global $conn;

    // Get form data
    if (isset($_POST['login'])) {
        $username = trim(htmlspecialchars(mysqli_real_escape_string($conn, $_POST['username'])));
        $password = trim(htmlspecialchars(mysqli_real_escape_string($conn, $_POST['password'])));

        // Check if username exists in the database
        $query = "SELECT * FROM users WHERE username='$username'";
        $result = mysqli_query($conn, $query);
        
        if (mysqli_num_rows($result) == 1) {
            $row = mysqli_fetch_assoc($result);
            
            // Verify password
            if (password_verify($password, $row['password'])) {
                // Password is correct
                session_start();
                
                // Set session variables
                $_SESSION['logged_in'] = true;
                $_SESSION['username'] = $username;
                $_SESSION['user_id'] = $row['id'];
                
                // Generate new token to prevent session hijacking
                $_SESSION['token'] = bin2hex(random_bytes(32));
                
                // Unset cookies
                setcookie('PHPSESSID', '', time() - 3600, '/');
                session_regenerate(true);
                
                // Redirect to dashboard or home page
                header("Location: dashboard.php");
                exit();
            } else {
                // Password is incorrect
                $error = "Invalid username or password!";
                echo $error;
            }
        } else {
            // Username does not exist
            $error = "Invalid username or password!";
            echo $error;
        }
    }
}

// Call the login function
login_user();

// Close database connection
mysqli_close($conn);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login Page</title>
</head>
<body>
    <h2>Login</h2>
    
    <?php 
    if (isset($_GET['error'])) {
        echo "<p style='color: red;'>".$_GET['error']."</p>";
    }
    ?>
    
    <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
        <input type="text" name="username" placeholder="Username" required>
        <input type="password" name="password" placeholder="Password" required>
        <button type="submit" name="login">Login</button>
    </form>
    
    <p>Don't have an account? <a href="register.php">Register here</a>.</p>
</body>
</html>


<?php
// Database configuration
$host = 'localhost';
$username_db = 'root';
$password_db = '';
$database_name = 'login_system';

// Connect to the database
$conn = mysqli_connect($host, $username_db, $password_db, $database_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Session start
session_start();

// Check if user is already logged in
if (isset($_SESSION['user_id'])) {
    header('Location: dashboard.php');
    exit();
}

// Handle login form submission
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Sanitize input data
    $username = mysqli_real_escape_string($conn, $_POST['username']);
    $password = $_POST['password'];

    // Query the database for user with this username
    $sql = "SELECT * FROM users WHERE username='$username'";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) == 1) {
        $user_data = mysqli_fetch_assoc($result);
        
        // Verify password
        if (password_verify($password, $user_data['password'])) {
            // Successful login
            $_SESSION['user_id'] = $user_data['id'];
            $_SESSION['username'] = $user_data['username'];
            
            // Set session timeout (30 minutes)
            $_SESSION['timeout'] = time() + 30*60;

            header('Location: dashboard.php');
            exit();
        } else {
            $error_message = "Invalid username or password";
        }
    } else {
        $error_message = "Invalid username or password";
    }
}

// Logout function
if (isset($_GET['logout'])) {
    session_unset();
    session_destroy();
    setcookie('PHPSESSID', '', time() - 3600);
    header('Location: login.php');
    exit();
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Login Page</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 20px;
            background-color: #f5f5f5;
        }
        .container {
            max-width: 500px;
            margin: 0 auto;
            background-color: white;
            padding: 30px;
            border-radius: 4px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }
        .form-group {
            margin-bottom: 15px;
        }
        input[type="text"], input[type="password"] {
            width: 100%;
            padding: 8px;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-sizing: border-box;
        }
        button {
            background-color: #4CAF50;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
        button:hover {
            background-color: #45a049;
        }
        .error {
            color: red;
            margin-bottom: 10px;
        }
    </style>
</head>
<body>
    <div class="container">
        <?php if (isset($error_message)): ?>
            <div class="error"><?php echo $error_message; ?></div>
        <?php endif; ?>

        <h2>Login</h2>
        <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
            <div class="form-group">
                <input type="text" name="username" placeholder="Enter username" required>
            </div>
            <div class="form-group">
                <input type="password" name="password" placeholder="Enter password" required>
            </div>
            <button type="submit">Login</button>
        </form>
        
        <p>Not registered yet? <a href="register.php">Create an account</a></p>
    </div>
</body>
</html>


$hashed_password = password_hash($plain_password, PASSWORD_DEFAULT);


<?php
session_start();

// Database configuration
include 'config.php';

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $username = trim($_POST['username']);
    $password = $_POST['password'];

    // Sanitize inputs to prevent SQL injection
    $username = htmlspecialchars($username);
    $password = htmlspecialchars($password);

    // Prepare and execute the query
    $stmt = $conn->prepare("SELECT * FROM users WHERE username = ? OR email = ?");
    $stmt->execute([$username, $username]);

    $user = $stmt->fetch(PDO::FETCH_ASSOC);

    if ($user) {
        // Verify password
        if (password_verify($password, $user['password'])) {
            // Password is correct
            $_SESSION['logged_in'] = true;
            $_SESSION['username'] = $user['username'];
            $_SESSION['email'] = $user['email'];

            // Redirect to dashboard or home page
            header("Location: dashboard.php");
            exit();
        } else {
            // Incorrect password
            $error_message = "Incorrect username or password!";
        }
    } else {
        // User not found
        $error_message = "User does not exist!";
    }
}

// Close database connection
$conn = null;
?>


// config.php
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}


// registration.php
session_start();

include 'config.php';

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $username = trim($_POST['username']);
    $email = trim($_POST['email']);
    $password = $_POST['password'];
    
    // Hash the password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);
    
    // Prepare and execute the query
    $stmt = $conn->prepare("INSERT INTO users (username, email, password) VALUES (?, ?, ?)");
    $stmt->execute([$username, $email, $hashed_password]);
    
    // Redirect to login page or dashboard
    header("Location: login.php");
    exit();
}


<?php
session_start();

// Database configuration
$host = "localhost";
$username = "root";
$password = "";
$dbname = "login_system";

// Connect to database
$conn = mysqli_connect($host, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Check if form is submitted
if (isset($_POST['submit'])) {
    // Sanitize input data
    $email_or_username = htmlspecialchars(trim($_POST['email_or_username']));
    $password = $_POST['password'];

    // SQL query to check if user exists
    $sql = "SELECT * FROM users WHERE username='$email_or_username' OR email='$email_or_username'";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) == 1) {
        $row = mysqli_fetch_assoc($result);
        
        // Verify password
        if (password_verify($password, $row['password'])) {
            // Set session variables
            $_SESSION['user_id'] = $row['id'];
            $_SESSION['username'] = $row['username'];
            $_SESSION['login_time'] = time();
            
            // Redirect to dashboard or home page
            header("Location: dashboard.php");
            exit();
        } else {
            echo "Incorrect password!";
        }
    } else {
        echo "Username or email does not exist!";
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login Page</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f0f0f0;
            margin: 0;
            padding: 20px;
        }

        .container {
            max-width: 400px;
            margin: 0 auto;
            background-color: white;
            padding: 20px;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }

        .form-group {
            margin-bottom: 15px;
        }

        input {
            width: 100%;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-sizing: border-box;
        }

        button {
            width: 100%;
            padding: 10px;
            background-color: #4CAF50;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }

        button:hover {
            background-color: #45a049;
        }

        .error {
            color: red;
            margin-top: 10px;
        }
    </style>
</head>
<body>
    <div class="container">
        <h2>Login</h2>
        <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
            <div class="form-group">
                <input type="text" placeholder="Enter username or email" name="email_or_username" required>
            </div>
            <div class="form-group">
                <input type="password" placeholder="Enter password" name="password" required>
            </div>
            <button type="submit" name="submit">Login</button>
        </form>
    </div>

    <?php
    if (isset($_SESSION['username'])) {
        echo "<div class='error'>";
        echo "You are already logged in!";
        echo "</div>";
    }
    ?>
</body>
</html>


<?php
session_start();
session_unset();
session_destroy();

// Redirect to login page
header("Location: login.php");
exit();
?>


<?php
session_start();

// Database configuration
$host = 'localhost'; // Replace with your database host
$username_db = 'root'; // Replace with your database username
$password_db = ''; // Replace with your database password
$db_name = 'user_login'; // Replace with your database name

// Connect to the database
$conn = mysqli_connect($host, $username_db, $password_db, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function for user login
function loginUser() {
    global $conn;

    // Check if form is submitted
    if (isset($_POST['submit'])) {
        // Sanitize inputs
        $username = htmlspecialchars(trim(stripslashes($_POST['username'])));
        $password = htmlspecialchars(trim(stripslashes($_POST['password'])));

        // Prepare and bind the query to prevent SQL injection
        $stmt = mysqli_prepare($conn, "SELECT id, username, password FROM users WHERE username = ?");
        mysqli_stmt_bind_param($stmt, "s", $username);
        
        // Execute the statement
        mysqli_stmt_execute($stmt);
        
        // Get result
        $result = mysqli_stmt_get_result($stmt);

        if ($row = mysqli_fetch_assoc($result)) {
            // Verify password
            if (password_verify($password, $row['password'])) {
                // Password is correct
                $_SESSION['id'] = $row['id'];
                $_SESSION['username'] = $row['username'];
                header("Location: dashboard.php");
                exit();
            } else {
                // Incorrect password
                echo "<script>alert('Incorrect username or password');</script>";
            }
        } else {
            // Username not found
            echo "<script>alert('Incorrect username or password');</script>";
        }
    }
}

// Call the login function
loginUser();

// Close database connection
mysqli_close($conn);
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Login Page</title>
</head>
<body>
    <h2>Login</h2>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        Username: <input type="text" name="username"><br><br>
        Password: <input type="password" name="password"><br><br>
        <input type="submit" name="submit" value="Login">
    </form>
</body>
</html>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_database_user';
$password = 'your_database_password';

// Create database connection
$conn = new mysqli($host, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

session_start();

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get form data
    $username = $_POST['username'];
    $password = $_POST['password'];

    if (empty($username) || empty($password)) {
        header("Location: login.php?error=Please fill in all fields");
        exit();
    }

    // Prepare and execute query to prevent SQL injection
    $stmt = $conn->prepare("SELECT id, username, password FROM users WHERE username = ?");
    $stmt->bind_param("s", $username);
    $stmt->execute();
    
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        // Get user data
        $user = $result->fetch_assoc();
        
        // Verify password
        if (password_verify($password, $user['password'])) {
            // Create session variables
            $_SESSION['id'] = $user['id'];
            $_SESSION['username'] = $user['username'];
            $_SESSION['logged_in'] = true;
            
            // Set session timeout
            $_SESSION['timeout'] = time() + 30 * 60; // 30 minutes
            
            // Redirect to dashboard or home page
            header("Location: dashboard.php");
            exit();
        } else {
            // Password is incorrect
            header("Location: login.php?error=Invalid credentials");
            exit();
        }
    } else {
        // Username doesn't exist
        header("Location: login.php?error=Invalid credentials");
        exit();
    }

    $stmt->close();
}

$conn->close();
?>


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Login Form</title>
    <style>
        .container {
            max-width: 500px;
            margin: 0 auto;
            padding: 20px;
            border: 1px solid #ddd;
            border-radius: 5px;
            text-align: center;
        }
        form {
            display: inline-block;
        }
        .form-group {
            margin-bottom: 10px;
        }
        input[type="text"], input[type="password"] {
            width: 200px;
            padding: 8px;
            margin: 5px;
            border: 1px solid #ddd;
            border-radius: 4px;
        }
    </style>
</head>
<body>
    <div class="container">
        <h2>Login</h2>
        <form action="login_action.php" method="post">
            <div class="form-group">
                <label for="username">Username:</label><br>
                <input type="text" id="username" name="username" required>
            </div>
            <div class="form-group">
                <label for="password">Password:</label><br>
                <input type="password" id="password" name="password" required>
            </div><br>
            <button type="submit" name="loginSubmit">Login</button>
        </form>
    </div>
</body>
</html>


<?php
session_start();

// Database configuration
$host = 'localhost';
$username = 'root'; // Change to your database username
$password = '';      // Change to your database password
$db_name = 'login_system';

// Connect to the database
$conn = mysqli_connect($host, $username, $password, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

if (isset($_POST['loginSubmit'])) {
    // Sanitize input data
    $username = mysqli_real_escape_string($conn, $_POST['username']);
    $password = mysqli_real_escape_string($conn, $_POST['password']);

    if ($username == "" || $password == "") {
        echo "Please fill in all fields.";
        exit();
    }

    // Query the database for the user
    $sql = "SELECT * FROM users WHERE username = '$username'";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) == 1) {
        $row = mysqli_fetch_assoc($result);
        $stored_password = $row['password'];

        // Verify the password
        if (md5($password) === $stored_password) {
            // Start session and store user details
            $_SESSION['id'] = $row['id'];
            $_SESSION['username'] = $row['username'];
            $_SESSION['login_time'] = time();

            // Redirect to dashboard or home page
            header("Location: dashboard.php");
        } else {
            echo "Incorrect password.";
        }
    } else {
        echo "Username not found.";
    }
} else {
    echo "Invalid request method.";
}

// Close database connection
mysqli_close($conn);
?>


// registration.php

<?php
session_start();

// Database configuration
$host = 'localhost';
$username = 'root'; // Change to your database username
$password = '';      // Change to your database password
$db_name = 'login_system';

// Connect to the database
$conn = mysqli_connect($host, $username, $password, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

if (isset($_POST['registerSubmit'])) {
    // Sanitize input data
    $username = mysqli_real_escape_string($conn, $_POST['username']);
    $password = md5(mysqli_real_escape_string($conn, $_POST['password']));

    if ($username == "" || $password == "") {
        echo "Please fill in all fields.";
        exit();
    }

    // Check if username already exists
    $sql_check = "SELECT * FROM users WHERE username = '$username'";
    $result_check = mysqli_query($conn, $sql_check);

    if (mysqli_num_rows($result_check) > 0) {
        echo "Username already exists.";
        exit();
    }

    // Insert new user into the database
    $sql_insert = "INSERT INTO users (username, password) VALUES ('$username', '$password')";
    $result_insert = mysqli_query($conn, $sql_insert);

    if ($result_insert) {
        echo "Registration successful. You can now login.";
    } else {
        echo "Error registering: " . mysqli_error($conn);
    }
}

// Close database connection
mysqli_close($conn);
?>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

// Create database connection
$conn = new mysqli($host, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to sanitize input
function sanitizeInput($data) {
    return htmlspecialchars(strip_tags(trim($data)));
}

// Login function
function userLogin($username_or_email, $password, $remember_me = false) {
    global $conn;

    // Sanitize inputs
    $username_or_email = sanitizeInput($username_or_email);
    $password = trim($password);

    try {
        // Check if user exists
        $stmt = $conn->prepare("SELECT * FROM users WHERE username = ? OR email = ?");
        $stmt->bind_param('ss', $username_or_email, $username_or_email);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows == 0) {
            return false; // User doesn't exist
        }

        $user = $result->fetch_assoc();

        // Verify password
        if (!password_verify($password, $user['password'])) {
            return false; // Invalid password
        }

        // Check if user is active
        if ($user['status'] != 'active') {
            return false; // User account not active
        }

        // Set session variables
        $_SESSION['username'] = $user['username'];
        $_SESSION['email'] = $user['email'];
        $_SESSION['user_id'] = $user['id'];
        
        // Regenerate session ID to prevent session fixation attacks
        session_regenerate();

        // Remember me functionality
        if ($remember_me) {
            $cookie_name = 'remember_me';
            $cookie_value = bin2hex(random_bytes(32)); // Generate a random token
            
            setcookie($cookie_name, $cookie_value, time() + (86400 * 7), "/");
            
            // Update the user's session hash in database
            $stmt = $conn->prepare("UPDATE users SET remember_me_token = ? WHERE id = ?");
            $stmt->bind_param('si', $cookie_value, $user['id']);
            $stmt->execute();
        }

        return true; // Login successful

    } catch (Exception $e) {
        error_log("Login error: " . $e->getMessage());
        return false;
    }
}

// Example usage:
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username_or_email = $_POST['username_or_email'];
    $password = $_POST['password'];
    $remember_me = isset($_POST['remember_me']) ? true : false;

    if (userLogin($username_or_email, $password, $remember_me)) {
        // Redirect to dashboard or home page
        header("Location: dashboard.php");
        exit();
    } else {
        // Show error message
        echo "Invalid username/email or password.";
    }
}

// Close database connection
$conn->close();

?>


// For development only:
error_reporting(E_ALL);
ini_set('display_errors', 1);

// In production, you should disable this:
error_reporting(0);
ini_set('display_errors', 0);


// Sample registration code (for testing purposes only)
$password = 'your_password';
$hashed_password = password_hash($password, PASSWORD_BCRYPT);

$stmt = $conn->prepare("INSERT INTO users (username, email, password) VALUES (?, ?, ?)");
$stmt->bind_param('sss', 'testuser', 'test@example.com', $hashed_password);
$stmt->execute();


<?php
session_start();

function loginUser($username, $password, $rememberMe) {
    try {
        // Database connection configuration
        $host = 'localhost';
        $db_name = 'your_database';
        $username_db = 'your_username';
        $password_db = 'your_password';

        // Sanitize inputs to prevent SQL injection
        $username = htmlspecialchars(trim($username));
        $password = trim($password);

        if (empty($username) || empty($password)) {
            throw new Exception("Username and password are required.");
        }

        // Create database connection using PDO
        $conn = new PDO("mysql:host=$host;dbname=$db_name", $username_db, $password_db);
        $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

        // Prepare the SQL statement to select user data
        $stmt = $conn->prepare("SELECT id, username, password FROM users WHERE username = ?");
        $stmt->execute([$username]);
        
        $user = $stmt->fetch(PDO::FETCH_ASSOC);

        if (!$user) {
            throw new Exception("Invalid username or password.");
        }

        // Verify the password
        if (!password_verify($password, $user['password'])) {
            throw new Exception("Invalid username or password.");
        }

        // Store user data in session
        $_SESSION['user_id'] = $user['id'];
        $_SESSION['username'] = $user['username'];
        
        // Set session timeout (e.g., 30 minutes)
        $_SESSION['last_activity'] = time();

        // Handle remember me functionality
        if ($rememberMe) {
            setcookie('remember_me', hash_hmac('sha256', session_id(), $user['password']), time() + 31536000, '/', '', false, true);
        }

        return true;

    } catch (PDOException $e) {
        throw new Exception("Database error: " . $e->getMessage());
    } catch (Exception $e) {
        // Log the error if necessary
        echo $e->getMessage();
        return false;
    }
}

// Example usage:
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $username = $_POST['username'];
    $password = $_POST['password'];
    $rememberMe = isset($_POST['remember_me']) ? true : false;

    try {
        if (loginUser($username, $password, $rememberMe)) {
            header("Location: dashboard.php");
            exit();
        }
    } catch (Exception $e) {
        // Handle the exception
        echo $e->getMessage();
    }
}
?>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

// Connect to the database
try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

// Session management
session_start();

// Function to handle user login
function loginUser() {
    global $conn;

    if ($_SERVER['REQUEST_METHOD'] == 'POST') {
        $username = $_POST['username'];
        $password = $_POST['password'];

        // Prepare and execute SQL statement
        try {
            $stmt = $conn->prepare("SELECT id, username, password FROM users WHERE username = ?");
            $stmt->execute([$username]);
            $user = $stmt->fetch(PDO::FETCH_ASSOC);

            if ($user) {
                // Verify the password
                if (password_verify($password, $user['password'])) {
                    // Store user data in session
                    $_SESSION['logged_in'] = true;
                    $_SESSION['user_id'] = $user['id'];
                    $_SESSION['username'] = $user['username'];

                    // Redirect to dashboard or home page
                    header("Location: dashboard.php");
                    exit();
                } else {
                    echo "Incorrect password!";
                }
            } else {
                echo "Username does not exist!";
            }
        } catch (PDOException $e) {
            die("Error occurred while logging in: " . $e->getMessage());
        }
    }
}

// Logout function
function logoutUser() {
    session_unset();
    session_destroy();
    header("Location: login.php");
    exit();
}

// Check if user is already logged in
if (isset($_SESSION['logged_in']) && $_SESSION['logged_in'] == true) {
    header("Location: dashboard.php");
    exit();
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login Page</title>
    <style>
        .error {
            color: red;
            margin-bottom: 10px;
        }
        .container {
            max-width: 500px;
            margin: 0 auto;
            padding: 20px;
        }
        form {
            display: flex;
            flex-direction: column;
        }
    </style>
</head>
<body>
    <div class="container">
        <?php
        if (isset($_GET['error'])) {
            echo "<div class='error'>Invalid username or password!</div>";
        }
        ?>
        
        <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
            <h2>Login</h2>
            <input type="text" name="username" placeholder="Username" required><br><br>
            <input type="password" name="password" placeholder="Password" required><br><br>
            <button type="submit">Login</button>
        </form>
    </div>
</body>
</html>

<?php
// Call the login function
loginUser();
?>


<?php
// Database connection details
$host = "localhost";
$username_db = "root";
$password_db = "";
$db_name = "test_db";

// Create database connection
$conn = mysqli_connect($host, $username_db, $password_db, $db_name);

// Check if connection was successful
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to handle user login
function loginUser($username, $password) {
    global $conn;
    
    // Sanitize inputs
    $username = mysqli_real_escape_string($conn, $username);
    $password = mysqli_real_escape_string($conn, $password);
    
    // Query the database for the user
    $query = "SELECT * FROM users WHERE username = '$username'";
    $result = mysqli_query($conn, $query);
    
    // Check if user exists
    if (mysqli_num_rows($result) == 1) {
        $user = mysqli_fetch_assoc($result);
        
        // Verify password
        if (md5($password) === $user['password']) {
            // Password is correct
            
            // Start session
            session_start();
            
            // Store user data in session variables
            $_SESSION['id'] = $user['id'];
            $_SESSION['username'] = $user['username'];
            
            // Redirect to dashboard or home page
            header("Location: dashboard.php");
            exit();
        } else {
            return "Invalid username or password";
        }
    } else {
        return "Invalid username or password";
    }
}

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST['username'];
    $password = $_POST['password'];
    
    // Call login function and handle the result
    $error = loginUser($username, $password);
    
    if ($error) {
        echo $error;
    }
}

// Close database connection
mysqli_close($conn);
?>


<?php
// Database connection details
$host = "localhost";
$username_db = "root";
$password_db = "";
$db_name = "test_db";

// Create database connection
$conn = new mysqli($host, $username_db, $password_db, $db_name);

// Check if connection was successful
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to handle user login
function loginUser($username, $password) {
    global $conn;
    
    // Prepare statement to prevent SQL injection
    $stmt = $conn->prepare("SELECT id, username, password FROM users WHERE username = ?");
    $stmt->bind_param("s", $username);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows == 1) {
        $user = $result->fetch_assoc();
        
        // Verify password
        if (password_verify($password, $user['password'])) {
            // Start session
            session_start();
            
            // Store user data in session variables
            $_SESSION['id'] = $user['id'];
            $_SESSION['username'] = $user['username'];
            
            // Redirect to dashboard or home page
            header("Location: dashboard.php");
            exit();
        } else {
            return "Invalid username or password";
        }
    } else {
        return "Invalid username or password";
    }
}

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST['username'];
    $password = $_POST['password'];
    
    // Call login function and handle the result
    $error = loginUser($username, $password);
    
    if ($error) {
        echo $error;
    }
}

// Close database connection
$conn->close();
?>


$hashed_password = password_hash($password, PASSWORD_DEFAULT);
// Store $hashed_password in your database


<?php
// Database configuration
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

try {
    // Create database connection
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

    // Check if form is submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        // Sanitize input
        $username = htmlspecialchars(trim($_POST['username']));
        $password = htmlspecialchars(trim($_POST['password']));

        // Check if both fields are filled
        if (empty($username) || empty($password)) {
            die("Username and password are required!");
        }

        // Prepare statement to select user from database
        $stmt = $conn->prepare("SELECT * FROM users WHERE username = ?");
        $stmt->execute([$username]);
        
        // Fetch the result
        $user = $stmt->fetch(PDO::FETCH_ASSOC);

        // Check if user exists and password matches
        if ($user && password_verify($password, $user['password'])) {
            // Start session
            session_start();
            
            // Store user data in session
            $_SESSION['username'] = $user['username'];
            $_SESSION['id'] = $user['id'];

            // Redirect to dashboard or home page
            header("Location: dashboard.php");
            exit();
        } else {
            // Incorrect username or password
            echo "Incorrect username or password!";
        }
    }

} catch (PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login Page</title>
</head>
<body>
    <h2>Login</h2>
    <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
        Username:<br>
        <input type="text" name="username">
        <br>
        Password:<br>
        <input type="password" name="password">
        <br><br>
        <input type="submit" value="Login">
    </form>
</body>
</html>


<?php
// Database configuration
$host = 'localhost';
$dbUsername = 'root';
$dbPassword = '';
$dbName = 'mydatabase';

// Connect to database
$conn = mysqli_connect($host, $dbUsername, $dbPassword, $dbName);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function sanitize($data) {
    global $conn;
    return mysqli_real_escape_string($conn, trim($data));
}

// Check if form is submitted
if (isset($_POST['submit'])) {
    $email = sanitize($_POST['email']);
    $password = $_POST['password'];

    // Query to check user credentials
    $sql = "SELECT * FROM users WHERE email='" . $email . "'";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) == 1) {
        $row = mysqli_fetch_assoc($result);
        if (password_verify($password, $row['password'])) {
            // Start session
            session_start();
            $_SESSION['user_id'] = $row['id'];
            $_SESSION['username'] = $row['username'];
            $_SESSION['logged_in'] = true;

            // Redirect to dashboard or home page
            header("Location: dashboard.php");
            exit();
        } else {
            echo "<div class='error'>Incorrect password!</div>";
        }
    } else {
        echo "<div class='error'>Email not found!</div>";
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login</title>
    <style>
        .login-form {
            width: 300px;
            margin: 50px auto;
            padding: 20px;
            border: 1px solid #ccc;
            border-radius: 5px;
        }
        .form-group {
            margin-bottom: 15px;
        }
        input {
            width: 100%;
            padding: 8px;
            margin-top: 5px;
            border: 1px solid #ccc;
            border-radius: 4px;
        }
        button {
            background-color: #4CAF50;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
        button:hover {
            background-color: #45a049;
        }
        .error {
            color: red;
            margin-top: 10px;
        }
    </style>
</head>
<body>
    <div class="login-form">
        <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
            <h2>Login</h2>
            <div class="form-group">
                <label>Email:</label><br>
                <input type="email" name="email" required>
            </div>
            <div class="form-group">
                <label>Password:</label><br>
                <input type="password" name="password" required>
            </div>
            <button type="submit" name="submit">Login</button>
        </form>
    </div>
</body>
</html>

<?php
// Close database connection
mysqli_close($conn);
?>


<?php
// Start the session
session_start();

// Include database configuration file
include('config.php');

if (isset($_POST['login'])) {
    $username = trim($_POST['username']);
    $password = trim($_POST['password']);

    // Sanitize input data to prevent SQL injection and XSS attacks
    $username = mysqli_real_escape_string($conn, htmlspecialchars($username));
    $password = mysqli_real_escape_string($conn, htmlspecialchars($password));

    // Hash the password
    $hash_password = md5($password); // Note: MD5 is not secure for production. Use better hashing like bcrypt.

    // Query to check user credentials
    $query = "SELECT * FROM users WHERE username = '$username'";
    $result = mysqli_query($conn, $query);

    if ($result) {
        $row = mysqli_fetch_assoc($result);
        $count = mysqli_num_rows($result);

        if ($count == 1) {
            // Verify the password
            if ($hash_password === $row['password']) {
                // Set session variables
                $_SESSION['user_id'] = $row['id'];
                $_SESSION['username'] = $row['username'];

                // Redirect to dashboard or home page
                header("Location: dashboard.php");
                exit();
            } else {
                echo "Incorrect password";
            }
        } else {
            echo "Username does not exist";
        }
    } else {
        echo "Error in query execution";
    }
}
?>


<?php
session_start();

// Database configuration
$host = 'localhost';
$username_db = 'root';
$password_db = '';
$database = 'login_system';

// Connect to database
$conn = mysqli_connect($host, $username_db, $password_db, $database);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function login_user() {
    global $conn;

    // Check if form is submitted
    if (isset($_POST['login'])) {
        // Sanitize input
        $username = mysqli_real_escape_string($conn, $_POST['username']);
        $password = $_POST['password'];

        // Check if username and password are not empty
        if ($username == "" || $password == "") {
            echo "Please fill in all fields!";
            return;
        }

        // Query the database for the user
        $query = "SELECT * FROM users WHERE username='$username'";
        $result = mysqli_query($conn, $query);

        if (mysqli_num_rows($result) == 1) {
            // User exists, verify password
            $row = mysqli_fetch_assoc($result);
            $hashed_password = $row['password'];

            if (password_verify($password, $hashed_password)) {
                // Password is correct, start session and redirect
                $_SESSION['loggedin'] = true;
                $_SESSION['username'] = $username;

                // Remember me functionality
                if (isset($_POST['remember'])) {
                    $cookie_name = 'login_user';
                    $cookie_value = serialize(array('username' => $username, 'password' => $password));
                    setcookie($cookie_name, $cookie_value, time() + 3600*24*7); // Cookie expires after 1 week
                }

                header("Location: dashboard.php");
                exit();
            } else {
                echo "Incorrect password!";
            }
        } else {
            echo "Username does not exist!";
        }
    }
}

// Call the login function
login_user();

?>


$hashed_password = password_hash($plain_password, PASSWORD_BCRYPT);


<?php
// Include necessary files
include_once('config.php');
include_once('database_connection.php');

function loginUser($username, $password) {
    global $conn;

    // Check if username or password fields are empty
    if (empty($username) || empty($password)) {
        return "Username or password cannot be empty!";
    }

    try {
        // Prepare and execute the SQL statement with placeholders
        $stmt = $conn->prepare("SELECT * FROM users WHERE username = ?");
        $stmt->execute([$username]);

        // Check if a user exists
        if ($stmt->rowCount() > 0) {
            $user = $stmt->fetch(PDO::FETCH_ASSOC);
            // Verify the password
            if (password_verify($password, $user['password'])) {
                // Password is correct - start session and store user data
                session_start();
                $_SESSION['id'] = $user['id'];
                $_SESSION['username'] = $user['username'];
                $_SESSION['email'] = $user['email'];
                
                // Optional: Set a remember me cookie
                if (!empty($_POST['remember'])) {
                    setcookie('remember_me', $username, time() + (86400 * 7), "/");
                }

                return "Login successful!";
            } else {
                return "Incorrect password!";
            }
        } else {
            return "Username does not exist!";
        }
    } catch(PDOException $e) {
        // Return error message
        return $e->getMessage();
    }
}

// Check if form is submitted
if (isset($_POST['login'])) {
    // Sanitize input
    $username = htmlspecialchars(trim($_POST['username']));
    $password = $_POST['password'];

    // Call login function and store result
    $result = loginUser($username, $password);

    // Display result
    echo $result;
}

// Logout functionality
if (isset($_GET['logout'])) {
    session_start();
    session_unset();
    session_destroy();
    setcookie('remember_me', '', time() - 3600);
    header("Location: login.php");
}
?>

<!-- HTML Login Form -->
<!DOCTYPE html>
<html>
<head>
    <title>Login Page</title>
</head>
<body>
    <?php if (isset($_SESSION['username'])) : ?>
        <h2>Welcome, <?php echo $_SESSION['username']; ?>!</h2>
        <a href="?logout">Logout</a>
    <?php else : ?>
        <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
            <input type="text" name="username" placeholder="Username" required>
            <input type="password" name="password" placeholder="Password" required>
            <input type="checkbox" name="remember"> Remember me
            <button type="submit" name="login">Login</button>
        </form>
    <?php endif; ?>
</body>
</html>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'mydatabase';

// Create connection
$conn = new mysqli($host, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function user_login() {
    global $conn;

    // Check if form is submitted
    if (!isset($_POST['submit'])) {
        return false;
    }

    try {
        // Sanitize input data
        $username = htmlspecialchars($_POST['username']);
        $password = $_POST['password'];

        // Prepare and execute the query
        $stmt = $conn->prepare("SELECT id, username, password FROM users WHERE username = ?");
        $stmt->bind_param("s", $username);
        $stmt->execute();
        
        // Get result
        $result = $stmt->get_result();
        $user = $result->fetch_assoc();

        if ($user) {
            // Verify password
            if (password_verify($password, $user['password'])) {
                // Password is correct

                // Start session
                session_start();
                
                // Store user data in session
                $_SESSION['id'] = $user['id'];
                $_SESSION['username'] = $user['username'];
                
                // Set remember me cookie
                if (isset($_POST['remember'])) {
                    setcookie('username', $username, time() + 3600 * 24 * 7); // Cookie expires in a week
                    setcookie('password', $password, time() + 3600 * 24 * 7);
                }

                return true;
            } else {
                // Password is incorrect
                throw new Exception("Invalid username or password");
            }
        } else {
            // User not found
            throw new Exception("Invalid username or password");
        }
    } catch (Exception $e) {
        echo "Error: " . $e->getMessage();
        return false;
    }
}

// Call the login function
if (user_login()) {
    header("Location: dashboard.php"); // Redirect to dashboard after successful login
} else {
    echo "Login failed!";
}
?>


<?php
// login.php

session_start();

// Database configuration
$host = 'localhost';
$username_db = 'root';
$password_db = '';
$db_name = 'mydatabase';

// Connect to database
$conn = mysqli_connect($host, $username_db, $password_db, $db_name);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get username and password from form
    $username = $_POST['username'];
    $password = $_POST['password'];

    // Prevent SQL injection using prepared statements
    $stmt = mysqli_stmt_init($conn);
    if (!mysqli_stmt_prepare($stmt, "SELECT * FROM users WHERE username = ?")) {
        echo "SQL error!";
        exit();
    }

    mysqli_stmt_bind_param($stmt, "s", $username);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);
    $user = mysqli_fetch_assoc($result);

    // Verify password
    if ($user && password_verify($password, $user['password'])) {
        // Start session and store user data
        $_SESSION['logged_in'] = true;
        $_SESSION['user_id'] = $user['id'];
        $_SESSION['username'] = $user['username'];

        // Redirect to dashboard or home page
        header("Location: dashboard.php");
        exit();
    } else {
        echo "Invalid username or password!";
    }
}

?>

<!DOCTYPE html>
<html>
<head>
    <title>Login Page</title>
</head>
<body>
    <h2>Login</h2>
    <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
        Username: <input type="text" name="username"><br>
        Password: <input type="password" name="password"><br>
        <input type="submit" value="Login">
    </form>
</body>
</html>


<?php
// Database connection details
$host = "localhost";
$username_db = "root"; // Change this to your database username
$password_db = "";     // Change this to your database password
$db_name = "login_system"; // Change this to your database name

// Connect to the database
$conn = mysqli_connect($host, $username_db, $password_db, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Check if form is submitted
if (isset($_POST['login'])) {

    // Sanitize inputs
    $username = mysqli_real_escape_string($conn, $_POST['username']);
    $password = mysqli_real_escape_string($conn, $_POST['password']);

    // Query to check if username exists
    $query = "SELECT * FROM users WHERE username='$username'";
    $result = mysqli_query($conn, $query);

    if (mysqli_num_rows($result) == 1) {

        // Get user data
        $row = mysqli_fetch_assoc($result);

        // Verify password
        if (md5($password) === $row['password']) {

            // Start session
            session_start();

            // Set session variables
            $_SESSION['username'] = $row['username'];
            $_SESSION['user_id'] = $row['id'];
            $_SESSION['login_time'] = time();

            // Optionally, set a cookie for remembering the user
            $cookie_name = "remember_me";
            $cookie_value = $row['username'];
            $expires = time() + (86400 * 7); // 7 days
            setcookie($cookie_name, $cookie_value, $expires, "/");

            // Redirect to dashboard or home page
            header("Location: dashboard.php");
            exit();
        } else {
            echo "Incorrect password!";
        }

    } else {
        echo "Username does not exist!";
    }
}

// Close database connection
mysqli_close($conn);
?>


<?php
// Include database configuration file
include('config.php');

function userLogin($username, $password) {
    try {
        // Initialize session
        if (session_status() == PHP_SESSION_NONE) {
            session_start();
            ini_set('session.cookie_httponly', '1');
            ini_set('session.cookie_secure', 1);
            session_regenerate(true);
        }

        // Prepare SQL statement to prevent SQL injection
        $stmt = mysqli_prepare($GLOBALS['db'], "SELECT password FROM users WHERE username = ?");
        
        if ($stmt === false) {
            throw new Exception("Error preparing the query: " . mysqli_error($GLOBALS['db']));
        }
        
        // Bind parameters
        mysqli_stmt_bind_param($stmt, 's', $username);
        
        // Execute the query
        if (mysqli_stmt_execute($stmt) === false) {
            throw new Exception("Query execution failed: " . mysqli_stmt_error($stmt));
        }

        // Get result
        $result = mysqli_stmt_get_result($stmt);

        // Check if exactly one record exists
        if (mysqli_num_rows($result) != 1) {
            return false;
        }

        // Fetch the stored password
        $row = mysqli_fetch_assoc($result);
        $storedPassword = $row['password'];

        // Verify password
        if (!password_verify($password, $storedPassword)) {
            return false;
        }

        // Store user data in session
        $_SESSION['username'] = $username;

        // Fetch additional user details (if needed)
        $stmt = mysqli_prepare($GLOBALS['db'], "SELECT id FROM users WHERE username = ?");
        if ($stmt === false) {
            throw new Exception("Error preparing the query: " . mysqli_error($GLOBALS['db']));
        }
        
        mysqli_stmt_bind_param($stmt, 's', $username);
        if (mysqli_stmt_execute($stmt) === false) {
            throw new Exception("Query execution failed: " . mysqli_stmt_error($stmt));
        }

        $result = mysqli_stmt_get_result($stmt);
        $row = mysqli_fetch_assoc($result);
        $_SESSION['user_id'] = $row['id'];

        // Close the database connection
        mysqli_close($GLOBALS['db']);

        return true;

    } catch (Exception $e) {
        // Log the error or handle it as needed
        error_log("Login error: " . $e->getMessage());
        return false;
    }
}

// Example usage:
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST['username'];
    $password = $_POST['password'];

    if (userLogin($username, $password)) {
        // Login successful
        header("Location: dashboard.php");
    } else {
        // Login failed
        echo "Invalid username or password.";
    }
}
?>


<?php
// Database configuration
$host = 'localhost';
$username_db = 'root'; // Change to your database username
$password_db = '';    // Change to your database password
$db_name = 'user_login';

// Connect to the database
$conn = new mysqli($host, $username_db, $password_db, $db_name);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function login_user() {
    global $conn;

    // Initialize variables
    $username = $password = "";
    $error = "";

    if (isset($_POST['login'])) {
        // Sanitize input
        $username = trim(mysqli_real_escape_string($conn, $_POST['username']));
        $password = trim(mysqli_real_escape_string($conn, $_POST['password']));

        // Validate input
        if (empty($username) || empty($password)) {
            $error = "Please fill in all fields!";
            return;
        }

        // Query database for username
        $query = "SELECT * FROM users WHERE username='$username'";
        $result = $conn->query($query);

        if ($result->num_rows > 0) {
            $user = $result->fetch_assoc();
            $db_password = $user['password'];

            // Verify password
            if (md5($password) == $db_password) {
                // Set session variables
                $_SESSION['username'] = $user['username'];
                $_SESSION['id'] = $user['id'];
                header("location: dashboard.php"); // Redirect to dashboard
                exit();
            } else {
                $error = "Invalid password!";
            }
        } else {
            $error = "Username not found!";
        }
    }

    return $error;
}

// Start session
session_start();

// Handle login form submission
if (isset($_POST['login'])) {
    $error = login_user();
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Login Page</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f0f0f0;
        }
        .container {
            max-width: 400px;
            margin: 50px auto;
            padding: 20px;
            background-color: white;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }
        .error {
            color: red;
            margin-bottom: 10px;
        }
        input {
            width: 100%;
            padding: 8px;
            margin: 5px 0;
            border: 1px solid #ddd;
            box-sizing: border-box;
        }
        button {
            background-color: #4CAF50;
            color: white;
            padding: 10px 20px;
            border: none;
            cursor: pointer;
            width: 100%;
        }
        button:hover {
            background-color: #45a049;
        }
    </style>
</head>
<body>
    <div class="container">
        <?php if (isset($error)) { ?>
            <div class="error"><?php echo $error; ?></div>
        <?php } ?>

        <h1>Login Form</h1>
        <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="POST">
            <input type="text" name="username" placeholder="Enter your username" required>
            <br>
            <input type="password" name="password" placeholder="Enter your password" required>
            <br>
            <button type="submit" name="login">Login</button>
        </form>

        <p>Don't have an account? <a href="register.php">Register here</a>.</p>
    </div>
</body>
</html>


<?php
// Database connection configuration
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    // Set the PDO error mode to exception
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    die('Connection failed: ' . $e->getMessage());
}

// Function to handle user login
function loginUser($conn) {
    session_start();
    
    // Check if form was submitted
    if (isset($_POST['username'], $_POST['password'])) {
        $username = htmlspecialchars(trim($_POST['username']));
        $password = htmlspecialchars(trim($_POST['password']));

        // Prepare the SQL statement to prevent SQL injection
        $stmt = $conn->prepare("SELECT id, username, password FROM users WHERE username = ?");
        $stmt->execute([$username]);
        
        // Check if a user exists with this username
        if ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {
            // Verify the password
            $hash = $row['password'];
            
            if (password_verify($password, $hash)) {
                // Passwords match, set session variables
                $_SESSION['user_id'] = $row['id'];
                $_SESSION['username'] = $row['username'];
                
                // Set CSRF token for security
                $_SESSION['csrf_token'] = bin2hex(random_bytes(32));
                
                // Optional: Remember me functionality
                if (isset($_POST['remember_me'])) {
                    setcookie('user_id', $row['id'], time() + 3600*24*7, '/', '', true, true);
                    setcookie('username', $row['username'], time() + 3600*24*7, '/', '', true, true);
                }
                
                // Redirect to dashboard or home page
                header("Location: /dashboard.php");
                exit();
            } else {
                return "Invalid password";
            }
        } else {
            return "Username not found";
        }
    } else {
        return "Please fill in all fields";
    }
}

// Example usage:
if (isset($_POST['login'])) {
    $error = loginUser($conn);
    if ($error) {
        echo "<div class='alert alert-danger'>$error</div>";
    }
}
?>


<?php
// Database configuration
$host = 'localhost';
$username_db = 'root';
$password_db = '';
$db_name = 'user_login';

// Sanitize input data
function sanitize($data) {
    $data = trim($data);
    $data = stripslashes($data);
    $data = htmlspecialchars($data);
    return $data;
}

// Check if form is submitted
if ($_SERVER['REQUEST_METHOD'] == "POST") {
    $username = sanitize($_POST['username']);
    $password = $_POST['password'];

    // Connect to the database
    $conn = new mysqli($host, $username_db, $password_db, $db_name);

    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    // Prevent SQL injection by using prepared statements
    $stmt = $conn->prepare("SELECT * FROM users WHERE username = ?");
    $stmt->bind_param("s", $username);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        $user_data = $result->fetch_assoc();
        
        // Verify password
        if (password_verify($password, $user_data['password'])) {
            // Start session and set session variables
            session_start();
            $_SESSION['username'] = $user_data['username'];
            $_SESSION['user_id'] = $user_data['id'];
            
            // Regenerate session ID to prevent session fixation attacks
            session_regenerate(true);
            
            // Set CSRF token for security
            if (empty($_SESSION['csrf_token'])) {
                $_SESSION['csrf_token'] = bin2hex(random_bytes(32));
            }
            
            // Redirect to dashboard or home page after successful login
            header("Location: dashboard.php");
            exit();
        } else {
            // Password is incorrect
            echo "Invalid username or password!";
        }
    } else {
        // Username does not exist
        echo "Invalid username or password!";
    }

    $stmt->close();
    $conn->close();
}
?>


<?php
session_start();

// Database configuration
$host = "localhost";
$username_db = "root";
$password_db = "";
$db_name = "mydatabase";

// Connect to database
$conn = mysqli_connect($host, $username_db, $password_db, $db_name);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function login_user() {
    global $conn;

    // Check if form is submitted
    if (isset($_POST['submit'])) {
        // Get form data
        $username = $_POST['username'];
        $password = $_POST['password'];

        // Sanitize the input to prevent SQL injection
        $username = mysqli_real_escape_string($conn, $username);
        $password = mysqli_real_escape_string($conn, $password);

        // Hash the password
        $hashed_password = md5($password); // Note: MD5 is not secure for production. Use better hashing algorithms like bcrypt in real applications.

        // Check if user exists
        $query = "SELECT * FROM users WHERE username = '$username'";
        $result = mysqli_query($conn, $query);

        if (mysqli_num_rows($result) == 1) {
            $row = mysqli_fetch_assoc($result);
            // Compare the hashed password with the stored hash
            if ($hashed_password == $row['password']) {
                // Start session and store user details
                $_SESSION['id'] = $row['id'];
                $_SESSION['username'] = $row['username'];
                
                // Redirect to dashboard or home page
                header("Location: dashboard.php");
                exit();
            } else {
                echo "Invalid password!";
            }
        } else {
            echo "Username not found!";
        }
    }
}

// Call the login function
login_user();

// Close database connection
mysqli_close($conn);
?>

<!-- HTML Form -->
<!DOCTYPE html>
<html>
<head>
    <title>Login Page</title>
</head>
<body>
    <h2>Login</h2>
    <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
        Username: <input type="text" name="username"><br>
        Password: <input type="password" name="password"><br>
        <input type="submit" name="submit" value="Login">
    </form>
</body>
</html>


$stmt = $conn->prepare("SELECT * FROM users WHERE username = ?");
$stmt->bind_param("s", $username);
$stmt->execute();
$result = $stmt->get_result();


// When creating a user:
$hashed_password = password_hash($password, PASSWORD_DEFAULT);

// During login:
if (password_verify($entered_password, $row['password'])) {
    // Valid password
}


ini_set('session.cookie_httponly', 1);
ini_set('session.cookie_secure', 1); // Only use HTTPS
ini_set('session.use_strict_mode', 1);


<?php
session_start();

// Database configuration
$host = "localhost";
$username_db = "root";
$password_db = "";
$db_name = "mydatabase";

// Connect to database
$conn = new mysqli($host, $username_db, $password_db, $db_name);
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function login_user() {
    global $conn;

    if (isset($_POST['submit'])) {
        $username = $_POST['username'];
        $password = $_POST['password'];

        // Prepare and bind
        $stmt = $conn->prepare("SELECT id, username, password FROM users WHERE username = ?");
        $stmt->bind_param("s", $username);
        
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows == 1) {
            $row = $result->fetch_assoc();
            
            if (password_verify($password, $row['password'])) {
                $_SESSION['id'] = $row['id'];
                $_SESSION['username'] = $row['username'];
                
                header("Location: dashboard.php");
                exit();
            } else {
                echo "Invalid password!";
            }
        } else {
            echo "Username not found!";
        }

        $stmt->close();
    }
}

login_user();

$conn->close();
?>

<!-- HTML Form -->
<!DOCTYPE html>
<html>
<head>
    <title>Login Page</title>
</head>
<body>
    <h2>Login</h2>
    <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
        Username: <input type="text" name="username"><br>
        Password: <input type="password" name="password"><br>
        <input type="submit" name="submit" value="Login">
    </form>
</body>
</html>


<?php
session_start();

// Database connection
$host = "localhost";
$user = "root";
$password = "";
$db_name = "test_db";

// Connect to database
$conn = mysqli_connect($host, $user, $password, $db_name);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Check if form is submitted
if (isset($_POST['submit'])) {
    // Get username and password from POST data
    $username = $_POST['username'];
    $password = $_POST['password'];

    // Validate inputs
    if (empty($username) || empty($password)) {
        echo "Username or password cannot be empty!";
        exit();
    }

    // Escape special characters to prevent SQL injection
    $username = mysqli_real_escape_string($conn, $username);

    // Query the database for user with matching username
    $query = "SELECT * FROM users WHERE username='$username'";
    $result = mysqli_query($conn, $query);

    if (!$result) {
        die("Query failed: " . mysqli_error($conn));
    }

    // Check if user exists
    if (mysqli_num_rows($result) == 1) {
        $row = mysqli_fetch_assoc($result);
        
        // Verify password
        if ($password === $row['password']) { 
            // Set session variables
            $_SESSION['username'] = $row['username'];
            $_SESSION['user_id'] = $row['id'];

            // Redirect to dashboard
            header("Location: dashboard.php");
            exit();
        } else {
            echo "Incorrect password!";
        }
    } else {
        echo "Username not found!";
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login Page</title>
    <style>
        .error { color: red; }
        .success { color: green; }
    </style>
</head>
<body>
    <h2>Login Form</h2>
    <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
        Username: <input type="text" name="username"><br><br>
        Password: <input type="password" name="password"><br><br>
        <input type="submit" name="submit" value="Login">
    </form>
</body>
</html>


<?php
// This is the login page where users enter their credentials
session_start();

// Database connection details
$host = 'localhost';
$user = 'root';
$password = '';
$dbname = 'mydatabase';

// Connect to database
$conn = mysqli_connect($host, $user, $password, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Check if form is submitted
if (isset($_POST['login'])) {
    // Get user inputs
    $username = $_POST['username'];
    $pass = $_POST['password'];

    // Sanitize the inputs to prevent SQL injection
    $username = mysqli_real_escape_string($conn, $username);
    $pass = mysqli_real_escape_string($conn, $pass);

    // Query the database for the user
    $sql = "SELECT * FROM users WHERE username='$username'";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) == 1) {
        $row = mysqli_fetch_assoc($result);
        $db_password = $row['password'];

        // Check password
        if ($pass === $db_password) {
            // Password matches
            // Start the session and store user details in it
            $_SESSION['username'] = $row['username'];
            $_SESSION['user_id'] = $row['id'];

            // Redirect to dashboard or home page
            header("Location: dashboard.php");
            exit();
        } else {
            // Password doesn't match
            echo "Invalid username or password";
        }
    } else {
        // Username not found in database
        echo "Invalid username or password";
    }
}

// Close the database connection
mysqli_close($conn);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login Page</title>
    <style>
        body { font-family: Arial, sans-serif; }
        .container { max-width: 500px; margin: 0 auto; padding: 20px; }
        form { background-color: #f2f2f2; padding: 20px; border-radius: 4px; }
    </style>
</head>
<body>
    <div class="container">
        <h1>Login</h1>
        <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
            <input type="text" name="username" placeholder="Username" required><br><br>
            <input type="password" name="password" placeholder="Password" required><br><br>
            <button type="submit" name="login">Login</button>
        </form>
    </div>
</body>
</html>


<?php
session_start();
// Database connection details
$host = "localhost";
$user = "root";
$password = "";
$db_name = "login_system";

// Connect to database
$conn = new mysqli($host, $user, $password, $db_name);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Initialize variables
$username = $password = "";
$errors = array();

// Register user login
if (isset($_POST['login'])) {
    // Get form data
    $username = mysqli_real_escape_string($conn, $_POST['username']);
    $password = mysqli_real_escape_string($conn, $_POST['password']);

    // Form validation
    if (empty($username)) {
        $errors[] = "Username is required";
    }
    if (empty($password)) {
        $errors[] = "Password is required";
    }

    if (count($errors) == 0) {
        $sql = "SELECT * FROM users WHERE username='$username'";
        $result = $conn->query($sql);

        if ($result->num_rows > 0) {
            // Get user details
            $row = $result->fetch_assoc();
            
            // Verify password
            if (password_verify($password, $row['password'])) {
                // Create session variables
                $_SESSION['username'] = $row['username'];
                $_SESSION['admin'] = ($row['role'] == 'admin') ? true : false;
                
                // Redirect to dashboard
                header("Location: dashboard.php");
                exit();
            } else {
                $errors[] = "Incorrect password";
            }
        } else {
            $errors[] = "Username not found";
        }
    }
}

// Close database connection
$conn->close();

?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Login Page</title>
    <style>
        .error { color: red; }
    </style>
</head>
<body>
    <h2>Login Form</h2>
    
    <?php if (count($errors) > 0): ?>
        <div class="error">
            <?php foreach ($errors as $error): ?>
                <?php echo $error; ?><br>
            <?php endforeach; ?>
        </div><br>
    <?php endif; ?>

    <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
        Username: <input type="text" name="username" placeholder="Enter your username"><br><br>
        Password: <input type="password" name="password" placeholder="Enter your password"><br><br>
        <input type="submit" name="login" value="Login">
    </form>

    <p>Don't have an account? <a href="register.php">Register here</a></p>
</body>
</html>


<?php
session_start();

// Database connection settings
$host = 'localhost';
$username_db = 'root';
$password_db = '';
$db_name = 'login_system';

// Connect to MySQL database
$conn = new mysqli($host, $username_db, $password_db, $db_name);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Check if form is submitted
if (isset($_POST['submit'])) {
    $username = $_POST['username'];
    $password = $_POST['password'];

    // Sanitize inputs to prevent SQL injection
    $username = mysqli_real_escape_string($conn, $username);
    $password = mysqli_real_escape_string($conn, $password);

    // Check if username and password are not empty
    if (empty($username) || empty($password)) {
        echo "Please fill in all fields!";
    } else {
        // Query the database for user with matching credentials
        $query = "SELECT * FROM users WHERE username = ?";
        $stmt = $conn->prepare($query);
        $stmt->bind_param("s", $username);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($row = $result->fetch_assoc()) {
            // Verify password
            if (password_verify($password, $row['password'])) {
                // Password is correct, start session
                $_SESSION['user_id'] = $row['id'];
                $_SESSION['username'] = $row['username'];
                
                header("Location: dashboard.php");
                exit();
            } else {
                echo "Incorrect password!";
            }
        } else {
            echo "Username not found!";
        }
    }
}

// Close database connection
$conn->close();
?>


<?php
function login_user($username, $password) {
    try {
        // Database connection (adjust according to your database configuration)
        $db = new PDO('mysql:host=localhost;dbname=test_db', 'root', '');
        
        // Prepare the SQL statement to prevent SQL injection
        $stmt = $db->prepare("SELECT id, username, password FROM users WHERE username = ?");
        $stmt->execute([$username]);
        
        // Fetch the user data
        $user = $stmt->fetch(PDO::FETCH_ASSOC);
        
        if (!$user) {
            throw new Exception("Invalid credentials");
        }
        
        // Verify the password using PHP's built-in password verification function
        if (!password_verify($password, $user['password'])) {
            throw new Exception("Invalid credentials");
        }
        
        // If authentication is successful, return user data or true
        return $user;
    } catch (PDOException $e) {
        die("Database error: " . $e->getMessage());
    } catch (Exception $e) {
        die($e->getMessage());
    }
}
?>


<?php
session_start();
include_once 'login_function.php';

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST['username'];
    $password = $_POST['password'];
    
    try {
        $user = login_user($username, $password);
        if ($user) {
            // Start a session or create cookies
            $_SESSION['user_id'] = $user['id'];
            $_SESSION['username'] = $user['username'];
            
            echo "Login successful!";
            header("Location: dashboard.php");
            exit();
        }
    } catch (Exception $e) {
        echo "Error: " . $e->getMessage();
    }
}
?>


<?php
// Start session
session_start();

// Database connection (replace with your own database credentials)
$host = "localhost";
$username_db = "root";
$password_db = "";
$database = "login_system";

$conn = mysqli_connect($host, $username_db, $password_db, $database);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to sanitize input
function sanitizeInput($data) {
    $data = trim($data);
    $data = htmlspecialchars($data);
    $data = stripslashes($data);
    return $data;
}

// Login function
function login($username, $password, $conn) {
    global $error;

    // Sanitize inputs
    $username = sanitizeInput($username);
    $password = sanitizeInput($password);

    // Check if username exists in database
    $stmt = mysqli_prepare($conn, "SELECT id, username, password FROM users WHERE username = ?");
    mysqli_stmt_bind_param($stmt, "s", $username);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);

    if (mysqli_num_rows($result) == 0) {
        $error = "Username or password is incorrect!";
        return false;
    }

    // Fetch user data
    $user = mysqli_fetch_assoc($result);
    
    // Verify password
    if (!password_verify($password, $user['password'])) {
        $error = "Username or password is incorrect!";
        return false;
    }

    // If login successful, start session and store user details
    $_SESSION['username'] = $user['username'];
    $_SESSION['id'] = $user['id'];
    $_SESSION['logged_in'] = true;

    // Redirect to dashboard
    header("Location: dashboard.php");
    exit();
}

// Check if form is submitted
if (isset($_POST['submit'])) {
    try {
        $username = $_POST['username'];
        $password = $_POST['password'];
        
        login($username, $password, $conn);
    } catch (Exception $e) {
        echo "Error: " . $e->getMessage();
    }
}

?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Login Page</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f0f0f0;
        }
        .container {
            max-width: 400px;
            margin: 0 auto;
            padding: 20px;
            background-color: white;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }
        .form-group {
            margin-bottom: 15px;
        }
        input {
            width: 100%;
            padding: 8px;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-sizing: border-box;
        }
        button {
            background-color: #4CAF50;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
        button:hover {
            background-color: #45a049;
        }
        .error {
            color: red;
            margin-bottom: 10px;
        }
    </style>
</head>
<body>
    <div class="container">
        <?php
        if (isset($error)) {
            echo "<div class='error'>$error</div>";
        }
        ?>
        <h2>Login</h2>
        <form method="POST" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
            <div class="form-group">
                <label for="username">Username:</label><br>
                <input type="text" id="username" name="username" required>
            </div>
            <div class="form-group">
                <label for="password">Password:</label><br>
                <input type="password" id="password" name="password" required>
            </div>
            <button type="submit" name="submit">Login</button>
        </form>
        <p>Don't have an account? <a href="register.php">Register here</a></p>
    </div>
</body>
</html>

<?php
// Close database connection
mysqli_close($conn);
?>


<?php
// login.php

// Start session
session_start();

// Database configuration
$host = 'localhost';
$username_db = 'root';
$password_db = '';
$db_name = 'my_login_system';

// Connect to database
$conn = mysqli_connect($host, $username_db, $password_db, $db_name);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Sanitize input data
function sanitize($data) {
    return htmlspecialchars(trim(stripslashes($data)));
}

// Get username or email and password from form
$username_or_email = '';
$password = '';

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    if (isset($_POST['username']) && !empty($_POST['username'])) {
        $username_or_email = sanitize($_POST['username']);
    }
    
    if (isset($_POST['password']) && !empty($_POST['password'])) {
        $password = sanitize($_POST['password']);
    }

    // Check if username or email exists
    $sql = "SELECT * FROM users WHERE username = '$username_or_email' OR email = '$username_or_email'";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) > 0) {
        // Get user data
        $user_data = mysqli_fetch_assoc($result);
        
        // Verify password
        $hash = $user_data['password'];
        $pass = md5($password); // Note: MD5 is not secure for production, use better hashing
        
        if ($pass == $hash) {
            // Login successful
            
            // Start session and set session variables
            $_SESSION['id'] = $user_data['id'];
            $_SESSION['username'] = $user_data['username'];
            $_SESSION['email'] = $user_data['email'];
            $_SESSION['login_time'] = time();
            
            // Optional: Remember me functionality (expires after 30 days)
            if (isset($_POST['remember'])) {
                $hash = md5($user_data['id'] . $username_or_email);
                setcookie('remember_user', $user_data['id'], time() + 60*60*24*30, '/', null, false, true);
                setcookie('remember_hash', $hash, time() + 60*60*24*30, '/', null, false, true);
            }
            
            // Redirect to dashboard or home page
            header("Location: dashboard.php");
            exit();
        } else {
            // Password incorrect
            header("Location: login.html?error=Incorrect password");
            exit();
        }
    } else {
        // Username/Email not found
        header("Location: login.html?error=Username or Email not found");
        exit();
    }
} else {
    // No POST data received
    header("Location: login.html?error=Invalid request method");
    exit();
}

// Close database connection
mysqli_close($conn);
?>


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login Page</title>
</head>
<body>
    <?php
    session_start();

    // Database configuration
    $host = 'localhost';
    $user = 'root';
    $password = '';
    $database = 'mydb';

    try {
        if (isset($_POST['username']) && isset($_POST['password'])) {
            $username = mysqli_real_escape_string($conn, $_POST['username']);
            $password = $_POST['password'];

            // Create connection
            $conn = new mysqli($host, $user, $password, $database);

            if ($conn->connect_error) {
                throw new Exception("Connection failed: " . $conn->connect_error);
            }

            // Prepare and execute SQL query to select user with given username
            $stmt = $conn->prepare("SELECT * FROM users WHERE username = ?");
            $stmt->bind_param("s", $username);
            $stmt->execute();
            $result = $stmt->get_result();

            if ($result->num_rows == 1) {
                $row = $result->fetch_assoc();
                
                // Verify password
                if (password_verify($password, $row['password'])) {
                    // Create session variables
                    $_SESSION['username'] = $row['username'];
                    $_SESSION['loggedin'] = true;

                    // Redirect to dashboard
                    header("Location: dashboard.php");
                    exit();
                } else {
                    echo "Incorrect password";
                }
            } else {
                echo "Username not found";
            }

            $stmt->close();
            $conn->close();
        }
    } catch (Exception $e) {
        echo "Error: " . $e->getMessage();
    }
    ?>

    <form method="post" action="<?php echo htmlspecialchars($_SERVER['PHP_SELF']); ?>">
        <label for="username">Username:</label>
        <input type="text" id="username" name="username" required>

        <label for="password">Password:</label>
        <input type="password" id="password" name="password" required>

        <button type="submit">Login</button>
    </form>

    <a href="register.php">Create an account</a>
</body>
</html>


<?php
// Function to handle user login
function loginUser($username, $password) {
    // Database connection parameters
    $host = "localhost";
    $db_username = "root"; // Replace with your database username
    $db_password = "";     // Replace with your database password
    $dbname = "mydatabase"; // Replace with your database name

    try {
        // Create a new mysqli connection
        $conn = new mysqli($host, $db_username, $db_password, $dbname);

        // Check for connection errors
        if ($conn->connect_error) {
            die("Connection failed: " . $conn->connect_error);
        }

        // Prepare the SQL statement to prevent SQL injection
        $stmt = $conn->prepare("SELECT id, username, password, login_attempts, last_login_attempt FROM users WHERE username = ?");
        
        if ($stmt === false) {
            die("Prepare error: " . $conn->error);
        }

        // Bind parameters
        $stmt->bind_param('s', $username);

        // Execute the query
        $stmt->execute();

        // Get result
        $result = $stmt->get_result();
        
        if ($row = $result->fetch_assoc()) {
            $stored_password = $row['password'];

            // Verify password using secure hashing
            if (password_verify($password, $stored_password)) {
                // Password is correct

                // Check login attempts
                $loginAttempts = $row['login_attempts'];
                $lastAttemptTime = $row['last_login_attempt'];

                // Prevent brute force attacks
                $currentTime = time();
                if ($lastAttemptTime > $currentTime - 60*10) { // Lock for 10 minutes after 3 failed attempts
                    die("Too many login attempts. Please try again later.");
                }

                // Reset login attempts and update last login time
                $updateStmt = $conn->prepare("UPDATE users SET login_attempts = 0, last_login_attempt = ? WHERE id = ?");
                $updateStmt->bind_param('is', $currentTime, $row['id']);
                $updateStmt->execute();

                // Start session
                session_start();
                $_SESSION['user_id'] = $row['id'];
                $_SESSION['username'] = $username;
                
                // Redirect to dashboard or home page
                header("Location: dashboard.php");
                exit();
            } else {
                // Password is incorrect

                // Update login attempts
                $updateStmt = $conn->prepare("UPDATE users SET login_attempts = login_attempts + 1, last_login_attempt = ? WHERE id = ?");
                $updateStmt->bind_param('is', time(), $row['id']);
                $updateStmt->execute();

                // Display error message
                echo "Invalid username or password";
            }
        } else {
            // User not found
            echo "Invalid username or password";
        }

    } catch (Exception $e) {
        die("Error: " . $e->getMessage());
    }
}

// Example usage:
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST['username'];
    $password = $_POST['password'];

    // Call the login function
    loginUser($username, $password);
}
?>


<?php
session_start();

// Database connection
$host = 'localhost';
$username_db = 'root';
$password_db = '';
$db_name = 'user_login';

$conn = new mysqli($host, $username_db, $password_db, $db_name);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to sanitize input
function sanitizeInput($data) {
    $data = trim($data);
    $data = stripslashes($data);
    $data = htmlspecialchars($data);
    return $data;
}

// Register function
function registerUser($name, $email, $username, $password, $conn) {
    // Sanitize inputs
    $name = sanitizeInput($name);
    $email = sanitizeInput($email);
    $username = sanitizeInput($username);
    $password = sanitizeInput($password);

    // Validate inputs
    if (empty($name) || empty($email) || empty($username) || empty($password)) {
        return "All fields are required!";
    }

    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        return "Invalid email format!";
    }

    // Check if username or email already exists
    $checkQuery = "SELECT * FROM users WHERE username = ? OR email = ?";
    $stmt = $conn->prepare($checkQuery);
    $stmt->bind_param("ss", $username, $email);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        return "Username or email already exists!";
    }

    // Hash the password
    $hashedPassword = password_hash($password, PASSWORD_DEFAULT);

    // Insert into database
    $insertQuery = "INSERT INTO users (name, email, username, password) VALUES (?, ?, ?, ?)";
    $stmt = $conn->prepare($insertQuery);
    $stmt->bind_param("ssss", $name, $email, $username, $hashedPassword);

    if ($stmt->execute()) {
        return "Registration successful! You can now login.";
    } else {
        return "Error registering user!";
    }
}

// Login function
function loginUser($emailOrUsername, $password, $conn) {
    // Sanitize inputs
    $emailOrUsername = sanitizeInput($emailOrUsername);
    $password = sanitizeInput($password);

    // Validate inputs
    if (empty($emailOrUsername) || empty($password)) {
        return "Please fill in all fields!";
    }

    // Check if email or username exists
    $selectQuery = "SELECT * FROM users WHERE username = ? OR email = ?";
    $stmt = $conn->prepare($selectQuery);
    $stmt->bind_param("ss", $emailOrUsername, $emailOrUsername);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows == 1) {
        $user = $result->fetch_assoc();
        
        // Verify password
        if (password_verify($password, $user['password'])) {
            // Check if user is active
            if ($user['status'] == 'active') {
                // Start session and store user data
                $_SESSION['id'] = $user['id'];
                $_SESSION['name'] = $user['name'];
                $_SESSION['email'] = $user['email'];
                $_SESSION['username'] = $user['username'];
                
                // Redirect to dashboard or home page
                header("Location: dashboard.php");
                exit();
            } else {
                return "Your account has been disabled!";
            }
        } else {
            return "Incorrect password!";
        }
    } else {
        return "Username or email does not exist!";
    }
}

// Logout function
function logoutUser() {
    // Unset all session variables
    session_unset();
    
    // Destroy the session cookie
    if (ini_get("session.use_cookies")) {
        $params = session_get_cookie_params();
        setcookie(session_name(), '', time() - 42000,
            $params["path"], $params["domain"],
            $params["secure"], $params["httponly"]
        );
    }
    
    // Destroy the session
    session_destroy();
    
    // Redirect to login page
    header("Location: login.php");
    exit();
}
?>


<?php
// Function to handle user login
function user_login($username, $password) {
    // Start session
    session_start();

    // Database connection parameters
    define("DB_HOST", "localhost");
    define("DB_USER", "root");
    define("DB_PASS", "");
    define("DB_NAME", "test");

    try {
        // Connect to the database
        $db = new mysqli(DB_HOST, DB_USER, DB_PASS, DB_NAME);

        if ($db->connect_error) {
            throw new Exception("Connection failed: " . $db->connect_error);
        }

        // Check if username and password are provided
        if (empty($username) || empty($password)) {
            return [
                'status' => false,
                'message' => 'Username and password are required'
            ];
        }

        // Prepare SQL statement to prevent SQL injection
        $stmt = $db->prepare("SELECT id, username, password FROM users WHERE username = ?");
        $stmt->bind_param("s", $username);
        $stmt->execute();

        // Store the result
        $result = $stmt->get_result();

        if ($result->num_rows === 0) {
            return [
                'status' => false,
                'message' => 'Username not found'
            ];
        }

        // Fetch user data
        $user = $result->fetch_assoc();

        // Verify password
        if (password_verify($password, $user['password'])) {
            // Password is correct
            // Store user session variables
            $_SESSION['user_id'] = $user['id'];
            $_SESSION['username'] = $user['username'];

            return [
                'status' => true,
                'message' => 'Login successful'
            ];
        } else {
            return [
                'status' => false,
                'message' => 'Incorrect password'
            ];
        }

    } catch (Exception $e) {
        // Handle any exceptions
        return [
            'status' => false,
            'message' => 'Error: ' . $e->getMessage()
        ];
    }
}

// Example usage:
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $username = $_POST['username'];
    $password = $_POST['password'];

    $login_result = user_login($username, $password);

    if ($login_result['status']) {
        // Redirect to dashboard or home page
        header('Location: dashboard.php');
        exit();
    } else {
        // Display error message
        echo $login_result['message'];
    }
}
?>


<?php
// Database configuration
$host = 'localhost';
$username_db = 'root';
$password_db = '';
$db_name = 'login_system';

// Connect to database
$conn = new mysqli($host, $username_db, $password_db, $db_name);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function authUser($username, $password, $conn) {
    // Sanitize inputs
    $username = $conn->real_escape_string($username);
    $password = $conn->real_escape_string($password);

    // Prepare and execute SQL query to prevent SQL injection
    $stmt = $conn->prepare("SELECT id, username, email, password FROM users WHERE username = ?");
    $stmt->bind_param('s', $username);
    $stmt->execute();
    
    $result = $stmt->get_result();

    if ($result->num_rows == 1) {
        $user = $result->fetch_assoc();
        
        // Verify the password
        if (password_verify($password, $user['password'])) {
            return $user;
        }
    }

    return false;
}

function loginUser() {
    global $conn;

    // Check if form was submitted
    if (isset($_POST['login'])) {
        $username = $_POST['username'];
        $password = $_POST['password'];

        // Validate inputs
        if (empty($username) || empty($password)) {
            echo "Username and password are required!";
            return;
        }

        // Sanitize inputs
        $username = htmlspecialchars(strip_tags($username));
        $password = htmlspecialchars(strip_tags($password));

        // Authenticate user
        $user = authUser($username, $password, $conn);

        if ($user) {
            // Start session
            session_start();

            // Store user details in session
            $_SESSION['id'] = $user['id'];
            $_SESSION['username'] = $user['username'];
            $_SESSION['email'] = $user['email'];

            // Redirect to dashboard or home page
            header("Location: dashboard.php");
            exit();
        } else {
            echo "Invalid username or password!";
        }
    }
}

// Example usage:
if (isset($_POST['login'])) {
    loginUser();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login Page</title>
</head>
<body>
    <h2>Login to your account</h2>
    <form method="post" action="">
        Username: <input type="text" name="username"><br><br>
        Password: <input type="password" name="password"><br><br>
        <input type="submit" name="login" value="Login">
    </form>
</body>
</html>


<?php
// Database connection
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

// User registration function
function registerUser($email, $username, $password, $conn) {
    // Trim whitespace from inputs
    $email = trim($email);
    $username = trim($username);
    $password = trim($password);

    if (empty($email) || empty($username) || empty($password)) {
        return "Please fill in all fields.";
    }

    // Check if user already exists
    $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
    $stmt->execute([$email]);
    if ($stmt->rowCount() > 0) {
        return "User already exists with this email address.";
    }

    // Hash password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

    // Insert new user into database
    $stmt = $conn->prepare("INSERT INTO users (email, username, password) VALUES (?, ?, ?)");
    try {
        $stmt->execute([$email, $username, $hashed_password]);
        return "Registration successful!";
    } catch(PDOException $e) {
        return "Error registering user: " . $e->getMessage();
    }
}

// User login function
function loginUser($email, $password, $conn) {
    // Trim whitespace from inputs
    $email = trim($email);
    $password = trim($password);

    if (empty($email) || empty($password)) {
        return "Please fill in all fields.";
    }

    // Fetch user data
    $stmt = $conn->prepare("SELECT * FROM users WHERE email = ?");
    $stmt->execute([$email]);
    $user = $stmt->fetch(PDO::FETCH_ASSOC);

    if (!$user) {
        return "Email address not found.";
    }

    // Verify password
    if (!password_verify($password, $user['password'])) {
        return "Incorrect password.";
    }

    // Start session and set user data
    session_start();
    $_SESSION['loggedin'] = true;
    $_SESSION['userid'] = $user['id'];
    $_SESSION['username'] = $user['username'];

    return "Login successful!";
}

// Example usage:
if (isset($_POST['register'])) {
    $email = $_POST['email'];
    $username = $_POST['username'];
    $password = $_POST['password'];
    $result = registerUser($email, $username, $password, $conn);
    echo $result;
} elseif (isset($_POST['login'])) {
    $email = $_POST['email'];
    $password = $_POST['password'];
    $result = loginUser($email, $password, $conn);
    echo $result;
}

// Close database connection
$conn = null;
?>


<?php
// Database connection class
class DB {
    private $host = 'localhost';
    private $username = 'root';
    private $password = '';
    private $database = 'mydatabase';

    public function connect() {
        $conn = mysqli_connect($this->host, $this->username, $this->password, $this->database);
        if (!$conn) {
            die("Connection failed: " . mysqli_connect_error());
        }
        return $conn;
    }

    public function query($sql, $params = array()) {
        $stmt = $this->connect()->prepare($sql);
        if ($stmt === false) {
            die('Query error: ' . mysqli_error($this->connect()));
        }
        $i = 1;
        foreach ($params as $param) {
            $type = gettype($param);
            switch (strtolower($type)) {
                case 'integer':
                    $stmt->bind_param("i", $param);
                    break;
                case 'string':
                    $stmt->bind_param("s", $param);
                    break;
                case 'double':
                    $stmt->bind_param("d", $param);
                    break;
            }
            $i++;
        }
        return $stmt;
    }
}

// Login function
function login($username, $password) {
    $db = new DB();
    
    // Check if username and password are provided
    if (empty($username) || empty($password)) {
        return 'Username or password cannot be empty!';
    }

    // Query the database for the user
    $sql = "SELECT id, username, password FROM users WHERE username = ?";
    $stmt = $db->query($sql, array($username));
    $stmt->execute();
    
    // Check if user exists
    $result = $stmt->get_result();
    if ($result->num_rows == 0) {
        return 'Username not found!';
    }

    // Fetch user data
    $user = $result->fetch_assoc();

    // Verify password
    if (password_verify($password, $user['password'])) {
        // Password is correct
        session_start();
        $_SESSION['username'] = $user['username'];
        $_SESSION['user_id'] = $user['id'];
        return true;
    } else {
        // Password incorrect
        return 'Invalid password!';
    }
}

// Logout function
function logout() {
    session_start();
    session_unset();
    session_destroy();
    header("Location: login.php");
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login Page</title>
</head>
<body>
    <?php
    // Handle login form submission
    if (isset($_POST['username']) && isset($_POST['password'])) {
        $username = $_POST['username'];
        $password = $_POST['password'];

        $result = login($username, $password);
        if ($result === true) {
            header("Location: dashboard.php");
            exit();
        } else {
            echo "<div style='color:red'>$result</div>";
        }
    }
    ?>

    <h2>Login</h2>
    <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
        <input type="text" name="username" placeholder="Username" required><br>
        <input type="password" name="password" placeholder="Password" required><br>
        <button type="submit">Login</button>
    </form>

    <p>Don't have an account? <a href="register.php">Register here</a></p>
</body>
</html>


<?php
// Include the DB class
require_once 'db.php';

// Register function
function register($username, $password) {
    $db = new DB();
    
    // Check if username is already taken
    $sql = "SELECT id FROM users WHERE username = ?";
    $stmt = $db->query($sql, array($username));
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        return 'Username already exists!';
    }

    // Hash the password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

    // Insert new user into database
    $sql = "INSERT INTO users (username, password) VALUES (?, ?)";
    $stmt = $db->query($sql, array($username, $hashed_password));
    if ($stmt === false) {
        return 'Error registering user!';
    }
    
    $stmt->execute();

    // Automatically login the new user
    session_start();
    $_SESSION['username'] = $username;
    $_SESSION['user_id'] = mysqli_insert_id($db->connect());

    return true;
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Registration Page</title>
</head>
<body>
    <?php
    if (isset($_POST['username']) && isset($_POST['password'])) {
        $username = $_POST['username'];
        $password = $_POST['password'];

        $result = register($username, $password);
        if ($result === true) {
            header("Location: dashboard.php");
            exit();
        } else {
            echo "<div style='color:red'>$result</div>";
        }
    }
    ?>

    <h2>Register</h2>
    <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
        <input type="text" name="username" placeholder="Username" required><br>
        <input type="password" name="password" placeholder="Password" required><br>
        <button type="submit">Register</button>
    </form>

    <p>Already have an account? <a href="login.php">Login here</a></p>
</body>
</html>


<?php
// Database connection
$host = "localhost";
$username_db = "root";
$password_db = "";
$db_name = "mydatabase";

try {
    $conn = new PDO("mysql:host=$host;dbname=$db_name", $username_db, $password_db);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}

// Handle login form submission
if(isset($_POST['login'])) {
    // Sanitize input data
    $username = htmlspecialchars(trim($_POST['username']));
    $password = htmlspecialchars(trim($_POST['password']));

    try {
        // Prepare and execute the query
        $stmt = $conn->prepare("SELECT * FROM users WHERE username = ?");
        $stmt->execute([$username]);

        // Check if user exists
        if($row = $stmt->fetch(PDO::FETCH_ASSOC)) {
            // Verify password
            if(password_verify($password, $row['password'])) {
                // Password is correct
                session_start();
                $_SESSION['loggedin'] = true;
                $_SESSION['username'] = $row['username'];
                $_SESSION['user_id'] = $row['id'];

                // Set remember me cookie if checked
                if(isset($_POST['remember'])) {
                    setcookie('username', $username, time() + (86400 * 30), "/");
                    setcookie('password', $password, time() + (86400 * 30), "/");
                }

                // Redirect to dashboard or home page
                header("Location: dashboard.php");
                exit();
            } else {
                // Password is incorrect
                echo "<script>alert('Incorrect username or password');</script>";
            }
        } else {
            // User does not exist
            echo "<script>alert('Incorrect username or password');</script>";
        }

    } catch(PDOException $e) {
        echo "Error: " . $e->getMessage();
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login Page</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
</head>
<body>
    <div class="container mt-5">
        <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
            <div class="form-group">
                <label>Username:</label>
                <input type="text" name="username" class="form-control" placeholder="Enter your username" required>
            </div>
            <div class="form-group">
                <label>Password:</label>
                <input type="password" name="password" class="form-control" placeholder="Enter your password" required>
            </div>
            <div class="form-check">
                <input type="checkbox" name="remember" class="form-check-input">
                <label class="form-check-label">Remember me</label>
            </div>
            <button type="submit" name="login" class="btn btn-primary">Login</button>
        </form>
    </div>
</body>
</html>

<?php
// Optional: Check if user is already logged in
if(isset($_SESSION['loggedin'])) {
    header("Location: dashboard.php");
    exit();
}

// Close the database connection
$conn = null;
?>


// Logout function
if(isset($_GET['logout'])) {
    session_start();
    // Destroy all session variables and cookies
    session_unset();
    session_destroy();
    setcookie('username', '', time() - 3600);
    setcookie('password', '', time() - 3600);
    header("Location: login.php");
    exit();
}


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'mydatabase';

try {
    // Connect to database
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

// Start session
session_start();

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Sanitize input data
    $email = htmlspecialchars(trim($_POST['email']));
    $password = trim($_POST['password']);

    // Check for empty fields
    if (empty($email) || empty($password)) {
        $error = "Please fill in all required fields.";
        header("Location: login.php?error=" . urlencode($error));
        exit();
    }

    // Query the database to check user credentials
    try {
        $stmt = $conn->prepare("SELECT * FROM users WHERE email = ?");
        $stmt->execute([$email]);
        $user = $stmt->fetch(PDO::FETCH_ASSOC);

        if ($user) {
            // Verify password
            if (password_verify($password, $user['password'])) {
                // Store user data in session
                $_SESSION['id'] = $user['id'];
                $_SESSION['name'] = $user['name'];
                $_SESSION['email'] = $user['email'];
                $_SESSION['logged_in'] = true;

                // Optional: Set remember me cookie
                if (!empty($_POST['remember'])) {
                    $cookie_name = "remember_me";
                    $cookie_value = $user['id'] . "|" . md5($user['password']);
                    setcookie($cookie_name, $cookie_value, time() + (86400 * 30), "/");
                }

                // Redirect to dashboard
                header("Location: dashboard.php");
                exit();
            } else {
                // Incorrect password
                $error = "Invalid email or password.";
                header("Location: login.php?error=" . urlencode($error));
                exit();
            }
        } else {
            // User not found
            $error = "Invalid email or password.";
            header("Location: login.php?error=" . urlencode($error));
            exit();
        }
    } catch(PDOException $e) {
        die("Query failed: " . $e->getMessage());
    }
}

// Close database connection
$conn = null;
?>


<?php
session_start();
include_once 'db_connection.php'; // Include your database connection file

function user_login($username, $password) {
    global $conn;

    // Check if the username exists in the database
    $stmt = $conn->prepare("SELECT id, password FROM users WHERE username = ?");
    $stmt->bind_param('s', $username);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($row = $result->fetch_assoc()) {
        // Verify the password using PHP's built-in functions
        $storedHashedPassword = $row['password'];
        $userId = $row['id'];

        if (password_verify($password, $storedHashedPassword)) {
            // Password is correct
            $_SESSION['user_id'] = $userId;
            $_SESSION['username'] = $username;
            return true;
        } else {
            // Password does not match
            return false;
        }
    } else {
        // Username not found in database
        return false;
    }
}

// Handle form submission
if (isset($_POST['login'])) {
    $username = $_POST['username'];
    $password = $_POST['password'];

    if ($username === "" || $password === "") {
        die("Please fill in all fields.");
    }

    if (user_login($username, $password)) {
        // Redirect to dashboard or home page
        header("Location: dashboard.php");
        exit();
    } else {
        echo "Invalid username or password.";
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login Page</title>
</head>
<body>
    <h2>Login Form</h2>
    <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
        Username: <input type="text" name="username"><br>
        Password: <input type="password" name="password"><br>
        <input type="submit" name="login" value="Login">
    </form>
</body>
</html>


<?php
// Database connection
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'login_system';

$conn = new mysqli($host, $username, $password, $dbname);
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function login_user() {
    global $conn;

    // Check if form is submitted
    if (isset($_POST['login'])) {
        $username = $_POST['username'];
        $password = $_POST['password'];

        // Validate inputs
        if (empty($username) || empty($password)) {
            echo "Please fill in all fields.";
            return;
        }

        // Prepare and bind statement to prevent SQL injection
        $stmt = $conn->prepare("SELECT id, username, password FROM users WHERE username = ?");
        $stmt->bind_param("s", $username);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows == 1) {
            $user = $result->fetch_assoc();
            
            // Verify password
            if (password_verify($password, $user['password'])) {
                // Password is correct
                session_start();
                $_SESSION['user_id'] = $user['id'];
                $_SESSION['username'] = $user['username'];
                
                // Optional: Set a remember me cookie
                setcookie('remember_me', base64_encode($username . ":" . $password), time() + (86400 * 7), "/");
                
                header("Location: dashboard.php");
                exit();
            } else {
                echo "Incorrect password.";
            }
        } else {
            echo "Username not found.";
        }

        // Close statement
        $stmt->close();
    }
}

// Logout function
function logout() {
    session_start();
    unset($_SESSION['user_id']);
    unset($_SESSION['username']);
    session_unset();
    session_destroy();
    
    setcookie('remember_me', '', time() - 3600);
    
    header("Location: login.php");
    exit();
}

// CSRF token generation
function generate_csrf_token() {
    if (empty($_SESSION['csrf_token'])) {
        $_SESSION['csrf_token'] = bin2hex(random_bytes(32));
    }
    return $_SESSION['csrf_token'];
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login Page</title>
</head>
<body>
    <?php
    // Display any error messages
    if (!empty($error)) {
        echo "<p class='error'>$error</p>";
    }
    ?>
    
    <h2>Login</h2>
    <form action="<?php echo htmlspecialchars($_SERVER['PHP_SELF']); ?>" method="post">
        <input type="hidden" name="csrf_token" value="<?php echo generate_csrf_token(); ?>">
        
        <label>Username:</label>
        <input type="text" name="username" required><br><br>
        
        <label>Password:</label>
        <input type="password" name="password" required><br><br>
        
        <input type="checkbox" name="remember_me"> Remember me<br><br>
        
        <button type="submit" name="login">Login</button>
    </form>

    <!-- Optional: Include a link for password recovery -->
    <p>Forgot your password? <a href="reset_password.php">Reset it here.</a></p>

    <?php
    // Remember me functionality
    if (isset($_COOKIE['remember_me'])) {
        $cookie = base64_decode($_COOKIE['remember_me']);
        list($username, $password) = explode(":", $cookie);
        
        $_POST['username'] = $username;
        $_POST['password'] = $password;
        login_user();
    }
    
    // Call the login function
    if (isset($_POST['login'])) {
        login_user();
    }
    ?>
</body>
</html>


<?php
// Database connection
$host = 'localhost';
$dbname = 'mydatabase';
$user = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $user, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}

// Function to register a user
function registerUser($username, $email, $password, $conn) {
    // Check if username or email already exists
    $stmt = $conn->prepare("SELECT id FROM users WHERE username = :username OR email = :email");
    $stmt->bindParam(':username', $username);
    $stmt->bindParam(':email', $email);
    $stmt->execute();
    
    if ($stmt->rowCount() > 0) {
        return "Username or email already exists!";
    }
    
    // Hash the password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);
    
    // Insert user into database
    $stmt = $conn->prepare("INSERT INTO users (username, email, password) VALUES (:username, :email, :password)");
    $stmt->bindParam(':username', $username);
    $stmt->bindParam(':email', $email);
    $stmt->bindParam(':password', $hashed_password);
    
    if ($stmt->execute()) {
        return "Registration successful!";
    } else {
        return "Error registering user!";
    }
}

// Function to login a user
function loginUser($username, $password, $conn) {
    // Check if user exists in database
    $stmt = $conn->prepare("SELECT id, username, password FROM users WHERE username = :username");
    $stmt->bindParam(':username', $username);
    $stmt->execute();
    
    $user = $stmt->fetch(PDO::FETCH_ASSOC);
    
    if ($user) {
        // Verify password
        if (password_verify($password, $user['password'])) {
            // Start session and store user data
            session_start();
            $_SESSION['id'] = $user['id'];
            $_SESSION['username'] = $user['username'];
            
            return "Login successful!";
        } else {
            return "Incorrect password!";
        }
    } else {
        return "Username not found!";
    }
}

// Function to check if user is logged in
function isLoggedIn() {
    session_start();
    
    if (!isset($_SESSION['id'])) {
        header("Location: login.php");
        exit();
    }
}

// Logout function
function logoutUser() {
    session_start();
    unset($_SESSION['id']);
    unset($_SESSION['username']);
    session_destroy();
    
    header("Location: login.php");
    exit();
}
?>


<?php
// Function to log in a user
function loginUser($usernameEmail, $password, $type = 'username') {
    // Database connection details
    $host = "localhost";
    $dbUsername = "root";
    $dbPassword = "";
    $dbName = "your_database";

    try {
        // Create database connection
        $conn = new mysqli($host, $dbUsername, $dbPassword, $dbName);

        // Check if connection is successful
        if ($conn->connect_error) {
            die("Connection failed: " . $conn->connect_error);
        }

        // Sanitize input data
        $usernameEmail = $conn->real_escape_string($usernameEmail);
        $password = $conn->real_escape_string($password);

        // Hash the password
        $hashedPassword = hash('sha256', $password);

        // Prepare SQL query based on type (username or email)
        if ($type == 'email') {
            $sql = "SELECT user_id, password FROM users WHERE email = '$usernameEmail'";
        } else {
            $sql = "SELECT user_id, password FROM users WHERE username = '$usernameEmail'";
        }

        // Execute query
        $result = $conn->query($sql);

        if ($result->num_rows > 0) {
            // Get user data
            $row = $result->fetch_assoc();
            
            // Verify password match
            if ($hashedPassword == $row['password']) {
                // Create session variables
                $_SESSION['logged_in'] = true;
                $_SESSION['user_id'] = $row['user_id'];
                
                return array(
                    'success' => true,
                    'message' => 'Successfully logged in!'
                );
            } else {
                // Password doesn't match
                return array(
                    'success' => false,
                    'message' => 'Invalid username/email or password'
                );
            }
        } else {
            // User not found
            return array(
                'success' => false,
                'message' => 'Invalid username/email or password'
            );
        }

    } catch (Exception $e) {
        // Handle any exceptions that occur
        return array(
            'success' => false,
            'message' => 'An error occurred: ' . $e->getMessage()
        );
    }
}

// Example usage:
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $username = $_POST['username'];
    $password = $_POST['password'];

    // Call the login function
    $loginResult = loginUser($username, $password);

    if ($loginResult['success']) {
        header('Location: dashboard.php');
    } else {
        echo $loginResult['message'];
    }
}
?>


<?php
session_start();

// Database configuration
$host = 'localhost';
$dbUsername = 'root';
$dbPassword = '';
$dbName = 'test';

// Connect to database
$conn = new mysqli($host, $dbUsername, $dbPassword, $dbName);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to sanitize input
function sanitizeInput($data) {
    return htmlspecialchars(trim($data));
}

// Handle login form submission
if (isset($_POST['login'])) {
    // Get and sanitize input data
    $email = sanitizeInput($_POST['email']);
    $password = sanitizeInput($_POST['password']);

    // Prepare SQL statement to prevent SQL injection
    $stmt = $conn->prepare("SELECT id, email, password FROM users WHERE email = ?");
    $stmt->bind_param('s', $email);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        // Fetch user data
        $row = $result->fetch_assoc();
        $hashedPassword = $row['password'];

        // Verify password
        if (password_verify($password, $hashedPassword)) {
            // Password is correct
            $_SESSION['user_id'] = $row['id'];
            $_SESSION['email'] = $row['email'];

            // Set cookie for remember me functionality
            $cookie_name = "login";
            $cookie_value = serialize(array(
                'email' => $row['email'],
                'id' => $row['id']
            ));
            setcookie($cookie_name, $cookie_value, time() + 3600 * 24 * 7); // Cookie expires after a week

            // Redirect to dashboard or home page
            header("Location: dashboard.php");
            exit();
        } else {
            // Password is incorrect
            echo "Incorrect password!";
        }
    } else {
        // User does not exist
        echo "User does not exist!";
    }

    $stmt->close();
}

// Close database connection
$conn->close();

?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login Page</title>
</head>
<body>
    <h2>Login Form</h2>
    <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
        Email: <input type="email" name="email" required><br>
        Password: <input type="password" name="password" required><br>
        <input type="submit" name="login" value="Login">
    </form>
</body>
</html>


<?php
session_start();
// Unset all session variables
$_SESSION = array();

// If using cookies, delete them as well
if (isset($_COOKIE['login'])) {
    setcookie('login', '', time() - 3600);
}

// Destroy the session
session_destroy();
header("Location: login.php");
exit();
?>


<?php
session_start();
// Database connection settings
$host = "localhost";
$username_db = "root";
$password_db = "";
$db_name = "mydatabase";

// Connect to database
$conn = mysqli_connect($host, $username_db, $password_db, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Sanitize input data
    $username = htmlspecialchars(trim($_POST['username']));
    $password = htmlspecialchars(trim($_POST['password']));

    // Query the database for user
    $sql = "SELECT * FROM users WHERE username='" . mysqli_real_escape_string($conn, $username) . "'";
    $result = mysqli_query($conn, $sql);

    if ($result) {
        $user = mysqli_fetch_assoc($result);
        
        // Verify password
        if (password_verify($password, $user['password'])) {
            // Set session variables
            $_SESSION['username'] = $user['username'];
            $_SESSION['logged_in'] = true;
            
            // Redirect to dashboard or home page
            header("Location: dashboard.php");
            exit();
        } else {
            $message = "Invalid username or password!";
        }
    } else {
        $message = "Error accessing database!";
    }

    mysqli_close($conn);
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login Page</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f0f0f0;
        }
        .login-container {
            max-width: 400px;
            margin: 50px auto;
            padding: 20px;
            background-color: white;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }
        .login-container h2 {
            color: #333;
            text-align: center;
        }
        .form-group {
            margin-bottom: 20px;
        }
        input {
            width: 100%;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-sizing: border-box;
        }
        button {
            width: 100%;
            padding: 10px;
            background-color: #4CAF50;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
        button:hover {
            background-color: #45a049;
        }
        .message {
            color: red;
            text-align: center;
            margin-bottom: 20px;
        }
    </style>
</head>
<body>
    <div class="login-container">
        <?php if (isset($message)) { ?>
            <div class="message"><?php echo $message; ?></div>
        <?php } ?>

        <h2>Login</h2>
        <form method="POST" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
            <div class="form-group">
                <input type="text" name="username" placeholder="Enter username" required>
            </div>
            <div class="form-group">
                <input type="password" name="password" placeholder="Enter password" required>
            </div>
            <button type="submit">Login</button>
        </form>
    </div>
</body>
</html>


<?php
session_start();

// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$db_name = 'login_system';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to sanitize input data
function sanitize_input($data) {
    $data = trim($data);
    $data = stripslashes($data);
    $data = htmlspecialchars($data);
    return $data;
}

// Check if form is submitted
if (isset($_POST['submit'])) {
    // Get user inputs
    $username = sanitize_input($_POST['username']);
    $password = $_POST['password'];

    // Prevent SQL injection
    $username = mysqli_real_escape_string($conn, $username);

    // Query the database for user information
    $sql = "SELECT * FROM users WHERE username='$username' OR email='$username'";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) == 1) {
        $row = mysqli_fetch_assoc($result);
        
        // Verify password
        if (password_verify($password, $row['password'])) {
            // Password is correct
            $_SESSION['user_id'] = $row['id'];
            $_SESSION['username'] = $row['username'];
            $_SESSION['admin'] = $row['is_admin'];

            // Redirect to dashboard or home page
            header("Location: dashboard.php");
            exit();
        } else {
            // Password is incorrect
            $error_message = "Incorrect password. Please try again.";
        }
    } else {
        // User doesn't exist
        $error_message = "Username or email does not exist.";
    }
}

// Close database connection
mysqli_close($conn);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login Page</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f0f0f0;
            margin: 0;
            padding: 20px;
        }
        .login-container {
            max-width: 500px;
            margin: 0 auto;
            background-color: white;
            padding: 20px;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }
        .error {
            color: red;
            margin-bottom: 10px;
        }
        input {
            width: 100%;
            padding: 10px;
            margin: 10px 0;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-sizing: border-box;
        }
        button {
            background-color: #4CAF50;
            color: white;
            padding: 14px 20px;
            margin: 8px 0;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            width: 100%;
        }
        button:hover {
            background-color: #45a049;
        }
    </style>
</head>
<body>
    <div class="login-container">
        <?php if (isset($error_message)) { ?>
            <div class="error"><?php echo $error_message; ?></div>
        <?php } ?>

        <h2>Login</h2>
        <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
            <input type="text" placeholder="Enter username or email" name="username" required>
            <input type="password" placeholder="Enter password" name="password" required>
            <button type="submit" name="submit">Login</button>
        </form>

        <p>Don't have an account? <a href="register.php">Register here</a>.</p>
    </div>
</body>
</html>


$hashed_password = password_hash($password, PASSWORD_DEFAULT);


<?php
session_start();
// Database connection
$host = "localhost";
$username_db = "root"; // Your database username
$password_db = "";     // Your database password
$dbname = "login_system";

// Connect to database
$conn = new mysqli($host, $username_db, $password_db, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Handle login form submission
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Sanitize input data
    $username = mysqli_real_escape_string($conn, trim($_POST['username']));
    $password = mysqli_real_escape_string($conn, trim($_POST['password']));

    // Check if username exists in database
    $sql = "SELECT * FROM users WHERE username='$username'";
    $result = $conn->query($sql);

    if ($result->num_rows == 0) {
        echo "<script>alert('Username not found!');</script>";
        exit();
    }

    // Get user data
    $user_data = $result->fetch_assoc();
    $hashed_password = $user_data['password'];

    // Verify password
    if (md5($password) === $hashed_password) {
        // Password is correct, set session variables
        $_SESSION['username'] = $username;
        $_SESSION['logged_in'] = true;

        // Redirect to dashboard or home page
        header("Location: dashboard.php");
        exit();
    } else {
        echo "<script>alert('Incorrect password!');</script>";
        exit();
    }
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login Page</title>
    <!-- Add Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
</head>
<body class="bg-light">
    <div class="container mt-5">
        <h2 class="text-center mb-4">Login Page</h2>
        <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="POST" class="row g-3">
            <div class="col-md-6 offset-md-3">
                <div class="mb-3">
                    <label for="username" class="form-label">Username</label>
                    <input type="text" class="form-control" id="username" name="username" required>
                </div>
                <div class="mb-3">
                    <label for="password" class="form-label">Password</label>
                    <input type="password" class="form-control" id="password" name="password" required>
                </div>
                <button type="submit" class="btn btn-primary w-100">Login</button>
            </div>
        </form>
    </div>

    <!-- Add Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>


<?php
// Database connection parameters
$host = "localhost";
$user = "root"; // MySQL username
$password = ""; // MySQL password
$dbname = "login_system";

// Create database connection
$conn = mysqli_connect($host, $user, $password, $dbname);

// Check if the form was submitted
if (isset($_POST['username']) && isset($_POST['password'])) {
    $username = $_POST['username'];
    $password = $_POST['password'];

    // Sanitize inputs to prevent SQL injection
    $username = mysqli_real_escape_string($conn, $username);
    $password = md5(mysqli_real_escape_string($conn, $password)); // Store password as hash in database

    // Query the database for user credentials
    $sql = "SELECT * FROM users WHERE username='$username' AND password='$password'";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) == 1) {
        // Start session
        session_start();
        
        // Set session variables
        $_SESSION['user_id'] = $row['id'];
        $_SESSION['username'] = $username;

        // Redirect to dashboard
        header("Location: dashboard.php");
    } else {
        // Display error message
        echo "<script>alert('Invalid username or password');</script>";
    }
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login Page</title>
    <style>
        .login-container {
            width: 300px;
            margin: 50px auto;
            padding: 20px;
            border: 1px solid #ccc;
            border-radius: 5px;
        }
        .form-group {
            margin-bottom: 15px;
        }
        input {
            width: 100%;
            padding: 8px;
            margin-top: 5px;
            border: 1px solid #ccc;
            border-radius: 4px;
        }
        button {
            width: 100%;
            padding: 10px;
            background-color: #4CAF50;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
        button:hover {
            background-color: #45a049;
        }
    </style>
</head>
<body>
    <div class="login-container">
        <h2>Login</h2>
        <form action="<?php echo htmlspecialchars($_SERVER['PHP_SELF']); ?>" method="POST">
            <div class="form-group">
                <input type="text" name="username" placeholder="Username" required>
            </div>
            <div class="form-group">
                <input type="password" name="password" placeholder="Password" required>
            </div>
            <button type="submit">Login</button>
        </form>
    </div>
</body>
</html>


<?php
session_start();
require_once 'db_connection.php'; // Your database connection file

if (isset($_POST['username'], $_POST['password'])) {
    $username = trim($_POST['username']);
    $password = trim($_POST['password']);

    if (!empty($username) && !empty($password)) {
        // Prepare SQL statement
        $stmt = $conn->prepare("SELECT id, username, password FROM users WHERE username = ?");
        $stmt->bind_param("s", $username);
        $stmt->execute();
        
        $result = $stmt->get_result();
        
        if ($row = $result->fetch_assoc()) {
            // Verify password
            if (password_verify($password, $row['password'])) {
                // Set session variables
                $_SESSION['user_id'] = $row['id'];
                $_SESSION['username'] = $row['username'];
                
                header("Location: dashboard.php");
                exit();
            }
        }

        echo "<script>alert('Invalid username or password');</script>";
    } else {
        echo "<script>alert('Please fill in all fields');</script>";
    }
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <!-- Same as before -->
</head>
<body>
    <div class="login-container">
        <h2>Login</h2>
        <form action="<?php echo htmlspecialchars($_SERVER['PHP_SELF']); ?>" method="POST">
            <div class="form-group">
                <input type="text" name="username" placeholder="Username" required>
            </div>
            <div class="form-group">
                <input type="password" name="password" placeholder="Password" required>
            </div>
            <button type="submit">Login</button>
        </form>
    </div>
</body>
</html>


<?php
$host = "localhost";
$user = "root";
$password = "";
$dbname = "login_system";

try {
    $conn = new mysqli($host, $user, $password, $dbname);
} catch (Exception $e) {
    die("Connection failed: " . $e->getMessage());
}
?>


<?php
// Start session
session_start();

// Database configuration
$host = "localhost";
$user = "root"; // MySQL username
$password = ""; // MySQL password
$dbname = "login_system";

try {
    $conn = new mysqli($host, $user, $password, $dbname);
    
    if ($conn->connect_error) {
        throw new Exception("Connection failed: " . $conn->connect_error);
    }

    if ($_SERVER['REQUEST_METHOD'] === 'POST') {
        // Sanitize input
        $username = htmlspecialchars(trim($_POST['username']));
        $password = htmlspecialchars(trim($_POST['password']));

        // Prepare SQL query to select user with the given username
        $stmt = $conn->prepare("SELECT id, username, password FROM users WHERE username = ?");
        $stmt->bind_param("s", $username);
        
        if ($stmt->execute()) {
            $stmt->bind_result($id, $db_username, $db_password);
            $stmt->fetch();

            // Check if user exists and password is correct
            if (!empty($id)) {
                if (password_verify($password, $db_password)) {
                    // Password matches, start session
                    $_SESSION['user_id'] = $id;
                    $_SESSION['username'] = $username;

                    // Redirect to dashboard or home page
                    header("Location: dashboard.php");
                    exit();
                } else {
                    // Incorrect password
                    echo "<div class='error'>Invalid username or password</div>";
                }
            } else {
                // User not found
                echo "<div class='error'>Invalid username or password</div>";
            }

            $stmt->close();
        }
    }
} catch (Exception $e) {
    die("An error occurred: " . $e->getMessage());
}

$conn->close();

// Display login form
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Login Page</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 20px;
            background-color: #f0f0f0;
        }
        
        .login-form {
            max-width: 300px;
            margin: 0 auto;
            background-color: white;
            padding: 20px;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }
        
        .login-form h2 {
            color: #333;
            text-align: center;
        }
        
        .form-group {
            margin-bottom: 15px;
        }
        
        input {
            width: 100%;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-sizing: border-box;
        }
        
        button {
            width: 100%;
            padding: 10px;
            background-color: #4CAF50;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
        
        button:hover {
            background-color: #45a049;
        }

        .success {
            color: green;
            text-align: center;
            margin-bottom: 10px;
        }

        .error {
            color: red;
            text-align: center;
            margin-bottom: 10px;
        }
    </style>
</head>
<body>
    <div class="login-form">
        <h2>Login</h2>
        <?php
        // Display any error messages here
        if (isset($_GET['error'])) {
            echo "<div class='error'>Invalid username or password</div>";
        }
        ?>

        <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
            <div class="form-group">
                <input type="text" placeholder="Enter your username..." name="username" required>
            </div>

            <div class="form-group">
                <input type="password" placeholder="Enter your password..." name="password" required>
            </div>

            <button type="submit">Login</button>
        </form>

        <p>Don't have an account? <a href="register.php">Register here</a>.</p>
    </div>
</body>
</html>


<?php
// Database configuration
$host = 'localhost';
$dbUsername = 'root';
$dbPassword = '';
$database = 'mydatabase';

try {
    // Connect to database
    $conn = new mysqli($host, $dbUsername, $dbPassword, $database);

    // Check connection
    if ($conn->connect_error) {
        throw new Exception("Connection failed: " . $conn->connect_error);
    }

    // Function for user login
    function loginUser() {
        global $conn;

        // Get post data
        $email = $_POST['email'] ?? '';
        $password = $_POST['password'] ?? '';

        if (empty($email) || empty($password)) {
            return "Email and password are required!";
        }

        try {
            // Prepare statement to select user by email
            $stmt = $conn->prepare("SELECT id, name, email, password FROM users WHERE email = ?");
            $stmt->bind_param("s", $email);
            $stmt->execute();

            // Get result
            $result = $stmt->get_result();
            
            if ($result->num_rows === 0) {
                return "No user found with this email!";
            }

            // Fetch user data
            $user = $result->fetch_assoc();

            // Verify password
            if (!password_verify($password, $user['password'])) {
                return "Incorrect password!";
            }

            // Start session
            session_start();
            
            // Store user data in session
            $_SESSION['user_id'] = $user['id'];
            $_SESSION['username'] = $user['name'];
            $_SESSION['email'] = $user['email'];

            return "Login successful!";

        } catch (Exception $e) {
            error_log("Login Error: " . $e->getMessage());
            return "An error occurred during login. Please try again!";
        }
    }

} catch (Exception $e) {
    die("Error: " . $e->getMessage());
}

// Close database connection
$conn->close();
?>


<?php
session_start();
require_once 'db_connection.php'; // Include your database connection file

function loginUser($usernameOrEmail, $password) {
    global $conn;

    try {
        // Sanitize input to prevent SQL injection
        $usernameOrEmail = mysqli_real_escape_string($conn, trim($usernameOrEmail));
        $password = trim($password);

        // Check if username or email is provided
        if (empty($usernameOrEmail) || empty($password)) {
            throw new Exception("Username/Email and password are required");
        }

        // Prepare the SQL statement using prepared statements to prevent SQL injection
        $stmt = $conn->prepare("
            SELECT 
                id, username, email, password, role
            FROM users
            WHERE (username = ? OR email = ?) AND active = 1
        ");
        
        if (!$stmt) {
            throw new Exception("Error preparing statement");
        }

        // Bind parameters to the prepared statement
        $stmt->bind_param('ss', $usernameOrEmail, $usernameOrEmail);

        // Execute the query
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows === 0) {
            throw new Exception("Invalid username/email or password");
        }

        $user = $result->fetch_assoc();

        // Verify password using PHP's built-in password_verify() function
        if (!password_verify($password, $user['password'])) {
            throw new Exception("Invalid username/email or password");
        }

        // If login is successful, start a session and store user details
        $_SESSION['logged_in'] = true;
        $_SESSION['username'] = $user['username'];
        $_SESSION['user_id'] = $user['id'];
        $_SESSION['role'] = $user['role'];
        
        // Set last login time to current time
        $_SESSION['last_login_time'] = time();

        return true;

    } catch (Exception $e) {
        // Log the error if needed
        // Error handling can be added here
        throw new Exception($e->getMessage());
    }
}

// Example usage:
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    try {
        $usernameOrEmail = $_POST['usernameOrEmail'];
        $password = $_POST['password'];

        if (loginUser($usernameOrEmail, $password)) {
            header("Location: dashboard.php");
            exit();
        }
    } catch (Exception $e) {
        echo "Error: " . $e->getMessage();
    }
}
?>


<?php
session_start();

// Check if the form is submitted
if (isset($_POST['login'])) {
    // Get username and password from the form
    $username = mysqli_real_escape_string($conn, $_POST['username']);
    $password = mysqli_real_escape_string($conn, $_POST['password']);

    // Include database configuration
    include("db_config.php");

    // Check if the user exists in the database
    $query = "SELECT id FROM users WHERE username = '$username'";
    $result = mysqli_query($conn, $query);

    if (mysqli_num_rows($result) == 0) {
        // User doesn't exist
        echo "<div class='error'>Username not found!</div>";
    } else {
        // Get the stored password
        $row = mysqli_fetch_assoc($result);
        $id = $row['id'];
        
        // Verify the password (assuming passwords are stored as MD5 hashes)
        $stored_password_query = "SELECT password FROM users WHERE id = '$id'";
        $stored_password_result = mysqli_query($conn, $stored_password_query);
        $stored_password_row = mysqli_fetch_assoc($stored_password_result);
        $stored_password = $stored_password_row['password'];

        if (md5($password) == $stored_password) {
            // Password matches - login successful
            $_SESSION['user_id'] = $id;
            $_SESSION['username'] = $username;
            
            // Redirect to welcome page
            header('Location: welcome.php');
            exit();
        } else {
            // Password doesn't match
            echo "<div class='error'>Invalid password!</div>";
        }
    }
}
?>


<?php
$host = "localhost";
$username_db = "root";
$password_db = "";
$db_name = "mydatabase";

$conn = mysqli_connect($host, $username_db, $password_db, $db_name);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}
?>


<?php
session_start();
unset($_SESSION['user_id']);
unset($_SESSION['username']);
session_unset();
session_destroy();
header('Location: login.php');
exit();
?>


<?php
function user_login() {
    // Check if form was submitted
    if (!isset($_POST['username']) || !isset($_POST['password'])) {
        header("Location: login.php");
        exit();
    }

    $username = $_POST['username'];
    $password = $_POST['password'];

    // Sanitize input to prevent SQL injection and XSS
    $username = htmlspecialchars($username, ENT_QUOTES);
    $password = htmlspecialchars($password, ENT_QUOTES);

    try {
        // Database connection parameters
        $host = "localhost";
        $db_username = "root";
        $db_password = "";
        $database = "mydatabase";

        // Connect to database
        $conn = new mysqli($host, $db_username, $db_password, $database);

        if ($conn->connect_error) {
            throw new Exception("Connection failed: " . $conn->connect_error);
        }

        // Query the database for user with given username
        $stmt = $conn->prepare("SELECT id, username, password FROM users WHERE username = ?");
        $stmt->bind_param("s", $username);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows === 0) {
            return false;
        }

        // Fetch user data
        $row = $result->fetch_assoc();
        
        // Verify password (password should be hashed in the database)
        $hash = md5($password); // Never use MD5 in production, this is just an example

        if ($row['password'] !== $hash) {
            return false;
        }

        // Start session
        session_start();
        $_SESSION['user_id'] = $row['id'];
        $_SESSION['username'] = $row['username'];
        $_SESSION['logged_in'] = true;

        // Set success message
        $_SESSION['success'] = "You have successfully logged in.";

        // Redirect to dashboard or home page
        header("Location: dashboard.php");
        exit();

    } catch (Exception $e) {
        // Handle exceptions and errors
        echo "Error: " . $e->getMessage();
        return false;
    }
}
?>


<?php
// This is the login form processing code

// Start the session
session_start();

// Include the database configuration file
require_once 'db_config.php';

// Define variables and initialize with empty values
$username = $password = "";
$username_err = $password_err = "";

// Processing form data when form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {

    // Validate username
    if (empty(trim($_POST["username"]))) {
        $username_err = "Please enter your username.";
    } else {
        $username = trim($_POST["username"]);
    }

    // Validate password
    if (empty(trim($_POST["password"]))) {
        $password_err = "Please enter your password.";
    } else {
        $password = trim($_POST["password"]);
    }

    // Check input errors before processing
    if (empty($username_err) && empty($password_err)) {

        // Get username and password from form
        $username = mysqli_real_escape_string($conn, $username);
        $password = mysqli_real_escape_string($conn, $password);

        // Query the database for the user
        $sql = "SELECT id, username, password FROM users WHERE username = ?";
        if ($stmt = mysqli_prepare($conn, $sql)) {

            // Bind variables to the prepared statement as parameters
            mysqli_stmt_bind_param($stmt, "s", $username);

            // Attempt to execute the prepared statement
            if (mysqli_stmt_execute($stmt)) {
                // Store result
                mysqli_stmt_store_result($stmt);

                // Check if username exists in database
                if (mysqli_stmt_num_rows($stmt) == 1) {

                    // Bind result variables
                    mysqli_stmt_bind_result($stmt, $id, $username, $password_hashed);
                    mysqli_stmt_fetch($stmt);

                    // Verify password
                    if (password_verify($password, $password_hashed)) {
                        // Password is correct, so start a new session
                        session_start();

                        // Store data in the session
                        $_SESSION['user_id'] = $id;
                        $_SESSION['username'] = $username;

                        // Redirect user to the dashboard page
                        header("location: dashboard.php");
                    } else {
                        // Display an error message if password is not valid
                        $password_err = "The password you entered was not correct.";
                    }
                } else {
                    // Username doesn't exist, display an error message
                    $username_err = "No account found with that username.";
                }
            } else {
                echo "Oops! Something went wrong. Please try again later.";
            }

            // Close statement
            mysqli_stmt_close($stmt);
        }
    }

    // Close connection
    mysqli_close($conn);
}
?>


<?php
// Database connection details
$host = 'localhost';
$user = 'root';
$password = '';
$database = 'my_database';

// Function to connect to the database
function loginDB() {
    global $host, $user, $password, $database;
    
    // Create connection
    $conn = new mysqli($host, $user, $password, $database);
    
    // Check connection
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }
    return $conn;
}

// Function to login user
function loginUser($username, $password) {
    global $host, $user, $password, $database;
    
    // Check if username and password are provided
    if (empty($username) || empty($password)) {
        return false;
    }
    
    // Connect to database
    $conn = loginDB();
    
    // SQL injection prevention using mysqli_real_escape_string()
    $username = $conn->real_escape_string($username);
    $password = md5($conn->real_escape_string($password)); // Store password as MD5 hash
    
    // Query the database for user
    $sql = "SELECT * FROM users WHERE username='$username' AND password='$password'";
    $result = $conn->query($sql);
    
    if ($result->num_rows == 1) {
        // Start session and set session variables
        session_start();
        $_SESSION['logged_in'] = true;
        $_SESSION['username'] = $username;
        
        return true;
    } else {
        return false;
    }
}

// Function to check if user is logged in
function isLoggedIn() {
    return isset($_SESSION['logged_in']) && $_SESSION['logged_in'];
}

// Function to logout user
function logoutUser() {
    session_start();
    unset($_SESSION['logged_in']);
    unset($_SESSION['username']);
    session_destroy();
    
    // Redirect to login page
    header("Location: login.php");
}

// Example usage:
if (isset($_POST['submit'])) {
    $username = $_POST['username'];
    $password = $_POST['password'];
    
    if (loginUser($username, $password)) {
        echo "Login successful!";
        // Redirect to dashboard
        header("Location: dashboard.php");
    } else {
        echo "Invalid username or password!";
    }
}
?>


<?php
// Database connection details
$host = 'localhost';
$username = 'root'; // Replace with your database username
$password = ''; // Replace with your database password
$db_name = 'mydatabase'; // Replace with your database name

// Create database connection
$conn = new mysqli($host, $username, $password, $db_name);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to sanitize input data
function sanitizeInput($data) {
    $data = trim($data);
    $data = htmlspecialchars($data);
    $data = stripslashes($data);
    return $data;
}

// Function to validate login credentials
function validateLogin($conn, $username, $password) {
    // Check if username or password is empty
    if (empty($username) || empty($password)) {
        return "Username and password are required!";
    }

    // Sanitize input data
    $username = sanitizeInput($username);
    $password = sanitizeInput($password);

    // Prepare SQL statement to prevent SQL injection
    $stmt = $conn->prepare("SELECT id, username, password FROM users WHERE username = ?");
    if ($stmt === false) {
        return "Error: " . $conn->error;
    }

    // Bind parameters
    $stmt->bind_param("s", $username);
    
    // Execute the query
    $stmt->execute();
    
    // Get result
    $result = $stmt->get_result();

    if ($result->num_rows == 0) {
        return "Username not found!";
    }

    // Fetch user data
    $user = $result->fetch_assoc();

    // Verify password
    if (password_verify($password, $user['password'])) {
        // Password is correct
        // Start session
        session_start();
        
        // Set session variables
        $_SESSION['id'] = $user['id'];
        $_SESSION['username'] = $user['username'];
        $_SESSION['logged_in'] = true;

        return "Login successful!";
    } else {
        return "Incorrect password!";
    }
}

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get form data
    $username = $_POST['username'];
    $password = $_POST['password'];

    // Validate login
    $result = validateLogin($conn, $username, $password);
    
    if ($result == "Login successful!") {
        // Redirect to dashboard or home page after login
        header("Location: dashboard.php");
        exit();
    } else {
        echo $result;
    }
}

// Close database connection
$conn->close();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login Page</title>
    <!-- Add your CSS styles here -->
</head>
<body>
    <div class="login-container">
        <h2>Login</h2>
        <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
            <label for="username">Username:</label><br>
            <input type="text" id="username" name="username"><br>
            <label for="password">Password:</label><br>
            <input type="password" id="password" name="password"><br><br>
            <input type="submit" value="Login">
        </form>
    </div>
</body>
</html>


// Hash the password
$hashed_password = password_hash($plain_text_password, PASSWORD_DEFAULT);

// Insert into database
$stmt = $conn->prepare("INSERT INTO users (username, password) VALUES (?, ?)");
$stmt->bind_param("ss", $username, $hashed_password);
$stmt->execute();


<?php
session_start();

// Database connection
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

// Create database connection
$conn = new mysqli($host, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Check if the request method is POST
if ($_SERVER["REQUEST_METHOD"] == "POST") {

    // Get username and password from form data
    $username = $_POST['username'];
    $password = $_POST['password'];

    // Sanitize input
    $username = mysqli_real_escape_string($conn, $username);
    $password = mysqli_real_escape_string($conn, $password);

    // Prepare the SQL query to fetch user data
    $sql = "SELECT * FROM users WHERE username = '$username'";
    $result = $conn->query($sql);

    if ($result->num_rows > 0) {
        // User exists, get user data
        $row = $result->fetch_assoc();

        // Verify password
        if (md5($password) == $row['password']) {

            // Set session variables
            $_SESSION["username"] = $row['username'];
            $_SESSION["user_id"] = $row['id'];
            $_SESSION["logged_in"] = true;

            // Create a session cookie that expires when the browser is closed
            setcookie("login", "true", time() + (86400 * 30), "/");
            
            // Redirect to dashboard or home page
            header("Location: dashboard.php");
            exit();
        } else {
            echo "<script>alert('Invalid username or password!');</script>";
        }
    } else {
        echo "<script>alert('Invalid username or password!');</script>";
    }
}

// Close database connection
$conn->close();

?>

<!DOCTYPE html>
<html>
<head>
    <title>Login Page</title>
</head>
<body>
    <h2>Login Form</h2>
    <form action="<?php echo $_SERVER['PHP_SELF'];?>" method="post">
        Username: <input type="text" name="username"><br>
        Password: <input type="password" name="password"><br>
        <input type="submit" value="Login">
    </form>
</body>
</html>


<?php
// Start session
session_start();

// Database configuration
$host = 'localhost';
$username_db = 'root';
$password_db = '';
$database = 'my_login';

// Connect to database
$conn = new mysqli($host, $username_db, $password_db, $database);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get username and password from form
    $username = htmlspecialchars(trim($_POST['username']));
    $password = htmlspecialchars(trim($_POST['password']));

    // Check if both fields are filled
    if (empty($username) || empty($password)) {
        echo "<p class='error'>Please fill in all required fields</p>";
        exit();
    }

    try {
        // Prepare statement to prevent SQL injection
        $stmt = $conn->prepare("SELECT username, password, id FROM users WHERE username = ?");
        $stmt->bind_param('s', $username);
        $stmt->execute();

        // Get results
        $result = $stmt->get_result();
        $user = $result->fetch_assoc();

        if (!$user) {
            throw new Exception("No user found");
        }

        // Verify password
        if (password_verify($password, $user['password'])) {
            // Successful login
            $_SESSION['username'] = $user['username'];
            $_SESSION['id'] = $user['id'];

            // Remember me functionality
            if (!empty($_POST['remember'])) {
                // Set cookie expiration to 1 week from now
                setcookie('username', $username, time() + (7 * 24 * 60 * 60));
            }

            // Redirect to dashboard or home page
            header("Location: dashboard.php");
            die();
        } else {
            throw new Exception("Incorrect password");
        }
    } catch (Exception $e) {
        echo "<p class='error'>" . $e->getMessage() . "</p>";
    }
}

// Close database connection
$conn->close();

?>


<?php
session_start();

// Database configuration
$host = "localhost";
$user = "root"; // MySQL username
$password = ""; // MySQL password
$db_name = "login_system";

// Connect to the database
$conn = new mysqli($host, $user, $password, $db_name);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to sanitize input data
function sanitizeInput($data) {
    $data = trim($data);
    $data = stripslashes($data);
    $data = htmlspecialchars($data);
    return $data;
}

// Handle login form submission
if (isset($_POST['login'])) {
    // Sanitize and store username and password
    $username = sanitizeInput($_POST['username']);
    $password = sanitizeInput($_POST['password']);

    if ($username == "" || $password == "") {
        die("Username or password cannot be empty");
    }

    // Prevent SQL injection
    $username = $conn->real_escape_string($username);
    
    // Query to select user with the given username
    $query = "SELECT * FROM users WHERE username = '$username' LIMIT 1";
    $result = $conn->query($query);

    if (!$result) {
        die("Query failed: " . $conn->error);
    }

    // Fetch user data
    $user_data = $result->fetch_assoc();

    // Check if username exists and password matches
    if ($result->num_rows > 0) {
        if (md5($password) === $user_data['password']) {
            // Set session variables
            $_SESSION['user_id'] = $user_data['id'];
            $_SESSION['username'] = $user_data['username'];

            // Redirect to dashboard page
            header("Location: dashboard.php");
            exit();
        } else {
            die("Incorrect password");
        }
    } else {
        die("Username does not exist");
    }
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Login Page</title>
</head>
<body>
    <h2>Login Form</h2>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        Username: <input type="text" name="username"><br>
        Password: <input type="password" name="password"><br>
        <input type="submit" name="login" value="Login">
    </form>
</body>
</html>

<?php
// Close database connection
$conn->close();
?>


<?php
session_start();

// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$database = 'my_database';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $database);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Check if form is submitted
if (isset($_POST['login'])) {
    // Sanitize input data
    $username = mysqli_real_escape_string($conn, $_POST['username']);
    $password = mysqli_real_escape_string($conn, $_POST['password']);

    // Query to check user credentials
    $query = "SELECT * FROM users WHERE username = ?";
    $stmt = mysqli_prepare($conn, $query);
    mysqli_stmt_bind_param($stmt, "s", $username);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);

    if ($row = mysqli_fetch_assoc($result)) {
        // Verify password
        if (password_verify($password, $row['password'])) {
            // Start session and store user data
            $_SESSION['id'] = $row['id'];
            $_SESSION['username'] = $row['username'];
            $_SESSION['email'] = $row['email'];
            
            // Redirect to dashboard or home page
            header("Location: dashboard.php");
            exit();
        } else {
            $error = "Incorrect password";
        }
    } else {
        $error = "Username not found";
    }
}

// Close database connection
mysqli_close($conn);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login Page</title>
</head>
<body>
    <?php if (isset($error)) { ?>
        <div style="color: red;"><?php echo $error; ?></div><br>
    <?php } ?>

    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="POST">
        <input type="text" name="username" placeholder="Enter your username" required><br><br>
        <input type="password" name="password" placeholder="Enter your password" required><br><br>
        <button type="submit" name="login">Login</button>
    </form>

    <p>Don't have an account? <a href="register.php">Register here</a></p>

    <?php
    // Auto-refresh after 3 seconds if there's an error
    if (isset($error)) {
        echo '<meta http-equiv="refresh" content="3;url=login.php">';
    }
    ?>
</body>
</html>


<?php
// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$db_name = 'mydatabase';

// Create database connection
$conn = mysqli_connect($host, $username, $password, $db_name);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function loginUser($email, $password, $conn) {
    // Sanitize inputs
    $email = mysqli_real_escape_string($conn, trim($email));
    $password = mysqli_real_escape_string($conn, trim($password));

    try {
        // Check if user exists in the database
        $query = "SELECT id, username, email, password FROM users WHERE email = ? OR username = ?";
        $stmt = mysqli_prepare($conn, $query);
        mysqli_stmt_bind_param($stmt, "ss", $email, $email);
        mysqli_stmt_execute($stmt);
        $result = mysqli_stmt_get_result($stmt);

        if (mysqli_num_rows($result) == 1) {
            $user = mysqli_fetch_assoc($result);

            // Verify password
            if (password_verify($password, $user['password'])) {
                // Password is correct
                session_start();
                $_SESSION['loggedin'] = true;
                $_SESSION['id'] = $user['id'];
                $_SESSION['username'] = $user['username'];
                
                // Optional: Set a session cookie for better security
                if (isset($_COOKIE['PHPSESSID'])) {
                    setcookie('PHPSESSID', session_id(), time() + 3600, '/', '', false, true);
                }

                return "Login successful";
            } else {
                // Password is incorrect
                return "Incorrect password";
            }
        } else {
            // User does not exist
            return "Invalid username or email";
        }
    } catch (Exception $e) {
        // Handle any exceptions
        return "An error occurred: " . $e->getMessage();
    }
}

// Example usage:
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = $_POST['email'];
    $password = $_POST['password'];

    $result = loginUser($email, $password, $conn);
    
    if ($result === "Login successful") {
        header("Location: dashboard.php");
        die();
    } else {
        echo $result;
    }
}

// Close database connection
mysqli_close($conn);
?>


<?php
session_start();

// Database connection details
$host = "localhost";
$username_db = "root";
$password_db = "";
$database = "mydatabase";

// Connect to database
$conn = mysqli_connect($host, $username_db, $password_db, $database);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function for user login
function loginUser() {
    global $conn;
    
    // Check if form is submitted
    if (isset($_POST['login'])) {
        // Get username and password from form
        $username = $_POST['username'];
        $password = $_POST['password'];
        
        // Sanitize inputs to prevent SQL injection
        $username = mysqli_real_escape_string($conn, $username);
        $password = mysqli_real_escape_string($conn, $password);
        
        // Check if username and password are not empty
        if (empty($username) || empty($password)) {
            echo "Please fill in all fields.";
            return;
        }
        
        // Query the database for user with matching username
        $query = "SELECT * FROM users WHERE username='$username'";
        $result = mysqli_query($conn, $query);
        
        if (mysqli_num_rows($result) == 1) {
            // User exists, get hashed password
            $row = mysqli_fetch_assoc($result);
            $hashed_password = $row['password'];
            
            // Verify the password
            if (password_verify($password, $hashed_password)) {
                // Password correct, start session and redirect to dashboard
                $_SESSION['username'] = $username;
                header("Location: dashboard.php");
                exit();
            } else {
                echo "Incorrect username or password.";
            }
        } else {
            echo "Incorrect username or password.";
        }
    }
}

// Call the login function if form is submitted
if (isset($_POST['login'])) {
    loginUser();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login Page</title>
</head>
<body>
    <h2>Login Form</h2>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        Username: <input type="text" name="username" placeholder="Enter your username"><br><br>
        Password: <input type="password" name="password" placeholder="Enter your password"><br><br>
        <input type="submit" name="login" value="Login">
    </form>
    
    <?php
    // Display any error messages here
    if (isset($_GET['error'])) {
        echo $_GET['error'];
    }
    ?>
</body>
</html>

// Close the database connection
mysqli_close($conn);
?>


<?php
session_start();

// Database connection details
$host = "localhost";
$username_db = "root";
$password_db = "";
$database = "mydatabase";

$conn = mysqli_connect($host, $username_db, $password_db, $database);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

if (isset($_POST['register'])) {
    $username = $_POST['username'];
    $password = $_POST['password'];
    
    // Hash the password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);
    
    $query = "INSERT INTO users (username, password) VALUES ('$username', '$hashed_password')";
    
    if (mysqli_query($conn, $query)) {
        echo "Registration successful! Please login.";
        header("Location: login.php");
        exit();
    } else {
        echo "Error registering user: " . mysqli_error($conn);
    }
}

?>

<!DOCTYPE html>
<html>
<head>
    <title>Register Page</title>
</head>
<body>
    <h2>Registration Form</h2>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        Username: <input type="text" name="username"><br><br>
        Password: <input type="password" name="password"><br><br>
        <input type="submit" name="register" value="Register">
    </form>
</body>
</html>

<?php
mysqli_close($conn);
?>


<?php
session_start();

// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'mydatabase';

// Create database connection
$conn = mysqli_connect($host, $username, $password, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

if (isset($_POST['username']) && isset($_POST['password'])) {
    // Sanitize input data
    $username = mysqli_real_escape_string($conn, $_POST['username']);
    $password = mysqli_real_escape_string($conn, $_POST['password']);

    // Query to check user credentials
    $sql = "SELECT * FROM users WHERE username='$username'";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) == 1) {
        $row = mysqli_fetch_assoc($result);
        
        // Verify password
        if (password_verify($password, $row['password'])) {
            // Start session and store user data
            $_SESSION['username'] = $row['username'];
            $_SESSION['user_id'] = $row['id'];
            
            // Set session timeout
            $_SESSION['timeout'] = time() + 30 * 60; // 30 minutes
            
            // Redirect to dashboard or home page
            header("Location: dashboard.php");
            exit();
        } else {
            echo "Invalid password!";
        }
    } else {
        echo "Username not found!";
    }
} else {
    // If form is not submitted, redirect to login page
    header("Location: login.html");
    exit();
}

mysqli_close($conn);
?>


<?php
// Include necessary files
include('db_connection.php');

function user_login() {
    // Check if form is submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        $username = mysqli_real_escape_string($GLOBALS['conn'], $_POST['username']);
        $password = $_POST['password'];

        // Query the database for the user
        $sql = "SELECT * FROM users WHERE username = '$username' OR email = '$username'";
        $result = mysqli_query($GLOBALS['conn'], $sql);

        if (mysqli_num_rows($result) == 1) {
            $row = mysqli_fetch_assoc($result);
            
            // Verify password
            if (password_verify($password, $row['password'])) {
                // Password is correct
                session_start();
                $_SESSION['user_id'] = $row['id'];
                $_SESSION['username'] = $row['username'];
                $_SESSION['email'] = $row['email'];

                // Optional: Remember me cookie
                if (!empty($_POST['remember'])) {
                    setcookie('user_id', $row['id'], time() + (86400 * 30), "/");
                    setcookie('username', $row['username'], time() + (86400 * 30), "/");
                }

                // Redirect to dashboard or home page
                header("Location: dashboard.php");
                exit();
            } else {
                echo "Incorrect password";
            }
        } else {
            echo "Username or email does not exist";
        }
    }
}

// Call the function when form is submitted
if (isset($_POST['login'])) {
    user_login();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login Page</title>
</head>
<body>
    <h2>Login</h2>
    <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
        Username or Email: <input type="text" name="username" required><br>
        Password: <input type="password" name="password" required><br>
        Remember me: <input type="checkbox" name="remember"><br>
        <input type="submit" name="login" value="Login">
    </form>
</body>
</html>


<?php
// Database connection details
$host = 'localhost';
$dbUsername = 'root';
$dbPassword = '';
$dbName = 'login_system';

// Create connection
$conn = mysqli_connect($host, $dbUsername, $dbPassword, $dbName);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function loginUser() {
    global $conn;

    // Check if form is submitted
    if (isset($_POST['login'])) {
        // Sanitize input data
        $username = mysqli_real_escape_string($conn, $_POST['username']);
        $password = mysqli_real_escape_string($conn, $_POST['password']);

        // Query to check user existence
        $query = "SELECT * FROM users WHERE username='$username'";
        $result = mysqli_query($conn, $query);

        if (mysqli_num_rows($result) == 1) {
            $user = mysqli_fetch_assoc($result);
            
            // Verify password
            if (password_verify($password, $user['password'])) {
                // Password is correct
                $_SESSION['user_id'] = $user['id'];
                $_SESSION['username'] = $user['username'];
                
                // Redirect to dashboard or home page
                header('Location: dashboard.php');
                exit();
            } else {
                // Incorrect password
                echo "Incorrect username or password";
            }
        } else {
            // Username does not exist
            echo "Username does not exist";
        }
    } else {
        // Display login form
        ?>
        <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
            <input type="text" name="username" placeholder="Enter username" required>
            <input type="password" name="password" placeholder="Enter password" required>
            <button type="submit" name="login">Login</button>
        </form>
        <?php
    }
}

// Call the login function
loginUser();

// Close database connection
mysqli_close($conn);
?>


function registerUser() {
    global $conn;

    if (isset($_POST['register'])) {
        // Sanitize input data
        $username = mysqli_real_escape_string($conn, $_POST['username']);
        $password = mysqli_real_escape_string($conn, $_POST['password']);

        // Hash the password
        $hashedPassword = password_hash($password, PASSWORD_DEFAULT);

        // Check if username already exists
        $query = "SELECT * FROM users WHERE username='$username'";
        $result = mysqli_query($conn, $query);

        if (mysqli_num_rows($result) > 0) {
            echo "Username already exists";
        } else {
            // Insert new user into database
            $insertQuery = "INSERT INTO users (username, password) VALUES ('$username', '$hashedPassword')";
            if (mysqli_query($conn, $insertQuery)) {
                echo "Registration successful! Please login.";
            } else {
                echo "Error: " . mysqli_error($conn);
            }
        }
    } else {
        // Display registration form
        ?>
        <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
            <input type="text" name="username" placeholder="Enter username" required>
            <input type="password" name="password" placeholder="Enter password" required>
            <button type="submit" name="register">Register</button>
        </form>
        <?php
    }
}


<?php
// Database configuration
$host = 'localhost';
$username_db = 'root'; // Replace with your database username
$password_db = '';     // Replace with your database password
$database = 'testdb';  // Replace with your database name

// Create a connection to the database
$conn = new mysqli($host, $username_db, $password_db, $database);

// Check if connection was successful
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to handle user login
function loginUser($username, $password, $conn) {
    // Sanitize input to prevent SQL injection
    $username = mysqli_real_escape_string($conn, $username);
    $password = mysqli_real_escape_string($conn, $password);

    // Query the database for the user
    $query = "SELECT * FROM users WHERE username='$username'";
    $result = $conn->query($query);

    if ($result->num_rows == 1) {
        $row = $result->fetch_assoc();
        // Verify password
        if (password_verify($password, $row['password'])) {
            // Password is correct, start a session
            session_start();
            $_SESSION['username'] = $username;
            $_SESSION['id'] = $row['id'];
            return true;
        } else {
            // Incorrect password
            return "Incorrect password";
        }
    } else {
        // User does not exist
        return "User does not exist";
    }
}

// Check if form is submitted
if (isset($_POST['login'])) {
    $username = $_POST['username'];
    $password = $_POST['password'];

    $result = loginUser($username, $password, $conn);

    if ($result === true) {
        // Redirect to dashboard or home page
        header("Location: dashboard.php");
        exit();
    } else {
        // Display error message
        echo "<div style='color:red;'>$result</div>";
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login Page</title>
</head>
<body>
    <h2>LOGIN</h2>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        Username: <input type="text" name="username"><br><br>
        Password: <input type="password" name="password"><br><br>
        <input type="submit" name="login" value="Login">
    </form>
</body>
</html>

<?php
// Close database connection
$conn->close();
?>


<?php
session_start();
// Destroy session variables
unset($_SESSION['username']);
unset($_SESSION['id']);
// Destroy the entire session
session_destroy();
// Redirect to login page
header("Location: login.php");
exit();
?>


<?php
// Include database configuration file
include_once('config.php');

if(isset($_POST['submit'])) {
    $username = trim($_POST['username']);
    $password = trim($_POST['password']);

    // Validate inputs
    if(empty($username) || empty($password)) {
        echo "Please fill in all required fields!";
        exit();
    }

    // Prevent SQL injection
    $username = mysqli_real_escape_string($conn, $username);
    $password = mysqli_real_escape_string($conn, $password);

    // Hash the password
    $hashed_password = md5($password); // You can use more secure hashing methods

    // Query database
    $query = "SELECT * FROM users WHERE username='$username' AND password='$hashed_password'";
    $result = mysqli_query($conn, $query);

    if(mysqli_num_rows($result) == 1) {
        // Start session and store user data
        session_start();
        $_SESSION['is_logged_in'] = true;
        $_SESSION['username'] = $username;

        // Redirect to dashboard or another page
        header("Location: dashboard.php");
        exit();
    } else {
        echo "Invalid username or password!";
    }
}

mysqli_close($conn);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login Page</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0 auto;
            padding: 20px;
            max-width: 500px;
        }
        .form-group {
            margin-bottom: 10px;
        }
        input[type="text"], input[type="password"] {
            width: 100%;
            padding: 8px;
            margin-top: 5px;
            border: 1px solid #ddd;
            box-sizing: border-box;
        }
        button {
            background-color: #4CAF50;
            color: white;
            padding: 10px 20px;
            border: none;
            cursor: pointer;
            width: 100%;
        }
        button:hover {
            background-color: #45a049;
        }
        .error {
            color: red;
            margin-top: 10px;
        }
    </style>
</head>
<body>
    <h2>Login Form</h2>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <div class="form-group">
            <label for="username">Username or Email:</label>
            <input type="text" id="username" name="username" required>
        </div>
        <div class="form-group">
            <label for="password">Password:</label>
            <input type="password" id="password" name="password" required>
        </div>
        <?php
        if(isset($_GET['error'])) {
            echo '<div class="error">';
            switch ($_GET['error']) {
                case 'empty':
                    echo "Please fill in all fields.";
                    break;
                case 'invalid':
                    echo "Invalid username or password!";
                    break;
            }
            echo '</div>';
        }
        ?>
        <button type="submit" name="submit">Login</button>
    </form>
</body>
</html>


<?php
// Database connection details
$host = "localhost";
$usernameDb = "root"; // MySQL username
$passwordDb = ""; // MySQL password
$dbname = "login_system";

// Connect to the database
$conn = mysqli_connect($host, $usernameDb, $passwordDb, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Check if form is submitted
if (isset($_POST['submit'])) {
    // Get username and password from form
    $username = mysqli_real_escape_string($conn, $_POST['username']);
    $password = md5(mysqli_real_escape_string($conn, $_POST['password']));

    // SQL query to fetch user data
    $sql = "SELECT * FROM users WHERE username = '$username'";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) == 1) {
        $row = mysqli_fetch_assoc($result);
        if ($password == $row['password']) {
            // Set session variables
            $_SESSION['id'] = $row['id'];
            $_SESSION['username'] = $row['username'];

            // Redirect to dashboard or home page
            header("Location: dashboard.php");
            exit();
        } else {
            echo "Invalid username or password";
        }
    } else {
        echo "Invalid username or password";
    }
}

// Close database connection
mysqli_close($conn);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login Page</title>
</head>
<body>
    <h2>Login Form</h2>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        Username: <input type="text" name="username"><br>
        Password: <input type="password" name="password"><br>
        <input type="submit" name="submit" value="Login">
    </form>
</body>
</html>


<?php
session_start();

// Database configuration
$host = 'localhost';
$dbUsername = 'root';
$dbPassword = '';
$dbName = 'login_system';

// Connect to database
$conn = mysqli_connect($host, $dbUsername, $dbPassword, $dbName);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

if (isset($_POST['login'])) {
    // Sanitize input data
    $username = mysqli_real_escape_string($conn, $_POST['username']);
    $password = $_POST['password'];

    if (empty($username) || empty($password)) {
        echo "<script>alert('Please fill in all fields!')</script>";
        exit();
    }

    // Check user credentials
    $sql = "SELECT * FROM users WHERE username='$username'";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) == 0) {
        echo "<script>alert('Username not found!')</script>";
        exit();
    }

    $user = mysqli_fetch_assoc($result);
    if (!password_verify($password, $user['password'])) {
        echo "<script>alert('Incorrect password!')</script>";
        exit();
    }

    // Start session and store user data
    $_SESSION['user_id'] = $user['id'];
    $_SESSION['username'] = $user['username'];

    // Redirect to dashboard
    header("Location: dashboard.php");
    exit();
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login Page</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
</head>
<body class="bg-light">
    <div class="container mt-5">
        <h2 class="text-center mb-4">Login</h2>
        <form method="POST" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
            <div class="row justify-content-center">
                <div class="col-md-6 col-lg-4">
                    <div class="mb-3">
                        <label for="username" class="form-label">Username</label>
                        <input type="text" class="form-control" id="username" name="username" required>
                    </div>
                    <div class="mb-3">
                        <label for="password" class="form-label">Password</label>
                        <input type="password" class="form-control" id="password" name="password" required>
                    </div>
                    <button type="submit" name="login" class="btn btn-primary w-100">Login</button>
                </div>
            </div>
        </form>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>


$password = $_POST['password'];
$hashedPassword = password_hash($password, PASSWORD_BCRYPT);
// Store $hashedPassword in the database


if (password_verify($submittedPassword, $storedHash)) {
    // Passwords match
} else {
    // Passwords do not match
}


<?php
session_start();

function user_login($username, $password) {
    // Database credentials
    $host = 'localhost';
    $db_username = 'root';
    $db_password = '';
    $database = 'mydatabase';

    // Connect to database
    $conn = mysqli_connect($host, $db_username, $db_password, $database);
    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
    }

    // Sanitize input
    $username = mysqli_real_escape_string($conn, $username);

    // Query the database for the user
    $sql = "SELECT * FROM users WHERE username = '$username'";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) == 1) {
        $row = mysqli_fetch_assoc($result);
        $hashed_password = $row['password'];
        
        // Verify password
        if (password_verify($password, $hashed_password)) {
            // Store user data in session
            $_SESSION['username'] = $username;
            $_SESSION['is_admin'] = ($row['role'] == 'admin') ? true : false;
            
            // Redirect to dashboard or home page
            header("Location: dashboard.php");
            exit();
        } else {
            echo "Invalid password!";
        }
    } else {
        echo "Username not found!";
    }

    mysqli_close($conn);
}

// Example usage:
if (isset($_POST['login'])) {
    $username = $_POST['username'];
    $password = $_POST['password'];
    
    user_login($username, $password);
}
?>


<?php
// Database connection details
$host = 'localhost';
$username = 'root'; // Replace with your database username
$password = '';     // Replace with your database password
$dbname = 'mydatabase'; // Replace with your database name

// Create connection
$conn = new mysqli($host, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function loginUser() {
    global $conn;

    // Get user input from form
    $username = $_POST['username'];
    $password = $_POST['password'];

    // Prevent SQL injection by using prepared statements
    $stmt = $conn->prepare("SELECT * FROM users WHERE username = ?");
    $stmt->bind_param("s", $username);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows == 0) {
        // User doesn't exist
        echo "Username does not exist!";
        header("Location: login.php");
        exit();
    }

    $user = $result->fetch_assoc();

    // Verify password (assuming passwords are stored as hashes)
    if (password_verify($password, $user['password'])) {
        // Password is correct, start session
        session_start();
        $_SESSION['user_id'] = $user['id'];
        $_SESSION['username'] = $user['username'];
        $_SESSION['email'] = $user['email'];

        // Redirect to dashboard or home page
        header("Location: dashboard.php");
        exit();
    } else {
        // Password is incorrect
        echo "Incorrect password!";
        header("Location: login.php");
        exit();
    }
}

// Call the loginUser function if form is submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    loginUser();
}
?>


<?php
session_start();
// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$db_name = 'my_database';

// Create database connection
$conn = new mysqli($host, $username, $password, $db_name);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to sanitize input data
function sanitizeInput($data) {
    $data = trim($data);
    $data = htmlspecialchars($data);
    return $data;
}

// Handle login form submission
if (isset($_POST['submit'])) {
    // Get user inputs
    $login_username = sanitizeInput($_POST['username']);
    $login_password = $_POST['password'];

    // Check if username or email is provided
    if (empty($login_username) || empty($login_password)) {
        echo "Username and password are required!";
    } else {
        // Prepare SQL query to select user from database
        $stmt = $conn->prepare("SELECT * FROM users WHERE username=? OR email=?");
        $stmt->bind_param("ss", $login_username, $login_username);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            // Get user data
            $user_data = $result->fetch_assoc();
            
            // Verify password
            $hashed_password = $user_data['password'];
            if (password_verify($login_password, $hashed_password)) {
                // Password is correct
                // Start session and store user details
                $_SESSION['username'] = $user_data['username'];
                $_SESSION['email'] = $user_data['email'];
                $_SESSION['user_id'] = $user_data['id'];
                
                // Set session cookie to remember login
                setcookie('PHPSESSID', session_id(), time() + 3600, '/', null, true, true);
                
                // Redirect to dashboard or home page
                header("Location: dashboard.php");
                exit();
            } else {
                echo "Incorrect password!";
            }
        } else {
            echo "Username or email not found!";
        }
    }
}

// Close database connection
$conn->close();
?>


<?php
// Include necessary files (e.g., database connection)
include('db_connection.php');

function loginUser() {
    // Check if form is submitted
    if ($_SERVER["REQUEST_METHOD"] === "POST") {
        $username = $_POST['username'];
        $password = $_POST['password'];

        // Sanitize input to prevent SQL injection
        $username = mysqli_real_escape_string($conn, $username);
        $password = mysqli_real_escape_string($conn, $password);

        // Query the database for the user
        $query = "SELECT * FROM users WHERE username = '$username'";
        $result = mysqli_query($conn, $query);

        if (mysqli_num_rows($result) === 1) {
            // User exists
            $row = mysqli_fetch_assoc($result);
            
            // Verify password
            if (password_verify($password, $row['password'])) {
                // Password is correct
                // Create session variables
                $_SESSION['username'] = $row['username'];
                $_SESSION['user_id'] = $row['id'];
                $_SESSION['logged_in'] = true;

                // Redirect to dashboard or home page
                header("Location: dashboard.php");
                exit();
            } else {
                // Password is incorrect
                echo "Incorrect password!";
            }
        } else {
            // User does not exist
            echo "Username does not exist!";
        }
    }
}

// Call the login function
loginUser();

// Close database connection
mysqli_close($conn);
?>


<?php
// Replace these values with your database credentials
$host = 'localhost';
$username_db = 'root';
$password_db = '';
$database_name = 'your_database';

// Create connection
$conn = mysqli_connect($host, $username_db, $password_db, $database_name);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}
?>


<?php
// Database connection details
$host = "localhost";
$username = "root"; // MySQL username
$password = ""; // MySQL password
$database_name = "login_system";

// Connect to the database
$conn = new mysqli($host, $username, $password, $database_name);

// Check for connection errors
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to handle user login
function loginUser($conn) {
    // Check if form is submitted
    if (isset($_POST['login'])) {
        // Get input values
        $username = $_POST['username'];
        $password = $_POST['password'];

        // Sanitize the inputs
        $username = $conn->real_escape_string(trim($username));
        $password = $conn->real_escape_string(trim($password));

        // Query to check if username exists
        $sql = "SELECT * FROM users WHERE username = '$username'";
        $result = $conn->query($sql);

        // Check if user exists and verify password
        if ($result->num_rows > 0) {
            $row = $result->fetch_assoc();
            if (password_verify($password, $row['password'])) {
                // Password is correct
                session_start();
                $_SESSION['user_id'] = $row['id'];
                $_SESSION['username'] = $row['username'];
                $_SESSION['email'] = $row['email'];

                return true;
            } else {
                // Incorrect password
                return false;
            }
        } else {
            // Username doesn't exist
            return false;
        }
    }
}

// Example usage:
if (isset($_POST['login'])) {
    if (loginUser($conn)) {
        echo "Login successful!";
        // Redirect to dashboard or home page
        header("Location: dashboard.php");
        exit();
    } else {
        echo "Invalid username or password.";
    }
}

// Close the database connection
$conn->close();
?>



<?php
session_start();

// Check if the form is submitted
if (isset($_POST['submit'])) {
    // Sanitize and validate input
    $username = htmlspecialchars(trim($_POST['username']));
    $password = htmlspecialchars(trim($_POST['password']));

    // Database connection
    $host = 'localhost';
    $dbUsername = 'root'; // Change to your database username
    $dbPassword = '';     // Change to your database password
    $dbName = 'mydatabase'; // Change to your database name

    // Connect to the database
    $conn = mysqli_connect($host, $dbUsername, $dbPassword, $dbName);

    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
    }

    // Query to check if user exists with either username or email
    $sql = "SELECT * FROM users WHERE username = '$username' OR email = '$username'";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) == 1) {
        // User exists, check password
        $row = mysqli_fetch_assoc($result);
        if ($row['password'] == md5($password)) { // Assuming password is stored as MD5 hash
            // Password matches, start session
            $_SESSION['id'] = $row['id'];
            $_SESSION['username'] = $row['username'];
            $_SESSION['email'] = $row['email'];
            $_SESSION['logged_in'] = true;

            // Redirect to dashboard or home page
            header("Location: dashboard.php");
            exit();
        } else {
            echo "Incorrect password!";
        }
    } else {
        echo "Invalid username or email!";
    }

    mysqli_close($conn);
}
?>


<?php
session_start();
unset($_SESSION['id']);
unset($_SESSION['username']);
unset($_SESSION['email']);
unset($_SESSION['logged_in']);
// Destroy all session variables
$_SESSION = array();

// If using cookies to remember login, delete them here.

// Redirect to login page
header("Location: login.html");
exit();
?>


<?php
session_start();

if (!isset($_SESSION['logged_in'])) {
    header("Location: login.html");
    exit();
}

echo "Welcome, " . $_SESSION['username'] . "!<br>";
echo "<a href='logout.php'>Logout</a>";
?>


<?php
session_start();
require_once 'db_connection.php'; // Include your database connection

if (!isset($_POST['username']) || !isset($_POST['password'])) {
    header("Location: login_form.php?error=Please fill in all fields.");
    exit();
}

$username = htmlspecialchars(trim($_POST['username']));
$password = $_POST['password'];

// Prepare and execute the query
$stmt = $conn->prepare("SELECT id, username, password FROM users WHERE username = ?");
$stmt->bind_param("s", $username);
$stmt->execute();

$result = $stmt->get_result();
$user = $result->fetch_assoc();

if ($user) {
    if (password_verify($password, $user['password'])) {
        $_SESSION['id'] = $user['id'];
        $_SESSION['username'] = $user['username'];
        header("Location: dashboard.php");
        exit();
    } else {
        // Password doesn't match
        header("Location: login_form.php?error=Invalid username or password.");
        exit();
    }
} else {
    // No user found with that username
    header("Location: login_form.php?error=Invalid username or password.");
    exit();
}

$stmt->close();
$conn->close();
?>


<?php
$servername = "localhost";
$username_db = "root";
$password_db = "";
$dbname = "your_database";

// Create connection
$conn = new mysqli($servername, $username_db, $password_db, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}
?>


<?php
session_start();
session_unset();
session_destroy();
header("Location: login_form.php");
exit();
?>


<?php
// Include necessary files (e.g., database configuration)
include_once("header.php");
include_once("config.php");

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST['username'];
    $password = $_POST['password'];

    // Sanitize input data to prevent SQL injection
    $username = htmlspecialchars($username);
    $password = htmlspecialchars($password);

    // Connect to database
    $conn = mysqli_connect(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);

    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
    }

    // Check if username and password are provided
    if (empty($username) || empty($password)) {
        $_SESSION['error'] = 'Please fill in all fields!';
        header('Location: login.php');
        exit();
    }

    // Prepare SQL query to select user data
    $sql = "SELECT * FROM users WHERE username = ?";
    
    // Use prepared statement to prevent SQL injection
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, "s", $username);

    // Execute the query
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);

    if ($row = mysqli_fetch_assoc($result)) {
        // Verify password
        if (password_verify($password, $row['password'])) {
            // Start session and store user data in session variables
            session_start();
            $_SESSION['user_id'] = $row['id'];
            $_SESSION['username'] = $row['username'];
            $_SESSION['email'] = $row['email'];
            $_SESSION['login_time'] = time();

            // Redirect to dashboard or home page
            header('Location: dashboard.php');
            exit();
        } else {
            $_SESSION['error'] = 'Invalid username or password!';
            header('Location: login.php');
            exit();
        }
    } else {
        $_SESSION['error'] = 'User does not exist!';
        header('Location: login.php');
        exit();
    }

    // Close database connection
    mysqli_close($conn);
}
?>


<?php
session_start();

function loginUser() {
    // Check if form was submitted
    if ($_SERVER['REQUEST_METHOD'] == 'POST') {
        $email = $_POST['email'];
        $password = $_POST['password'];

        // Database connection
        require_once('db_connect.php');

        try {
            // Sanitize input
            $email = mysqli_real_escape_string($conn, $email);
            $password = mysqli_real_escape_string($conn, $password);

            // Query to check if user exists
            $stmt = $conn->prepare("SELECT id, email, password, username FROM users WHERE email = ?");
            $stmt->bind_param('s', $email);
            $stmt->execute();
            $result = $stmt->get_result();

            if ($result->num_rows > 0) {
                $user = $result->fetch_assoc();

                // Verify password
                if (password_verify($password, $user['password'])) {
                    // Start session and store user data
                    $_SESSION['loggedin'] = true;
                    $_SESSION['id'] = $user['id'];
                    $_SESSION['email'] = $user['email'];
                    $_SESSION['username'] = $user['username'];

                    // Optional: Set remember me cookie
                    if (!empty($_POST['remember'])) {
                        setcookie('email', $email, time() + (86400 * 7), "/");
                        setcookie('password', md5($password), time() + (86400 * 7), "/");
                    }

                    // Redirect to dashboard or home page
                    header("Location: dashboard.php");
                    exit();
                } else {
                    echo "Incorrect password!";
                }
            } else {
                echo "Email not found!";
            }
        } catch (Exception $e) {
            die("An error occurred: " . $e->getMessage());
        }
    }

    // Show login form
    ?>
    <form method="POST" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
        Email: <input type="email" name="email" required><br>
        Password: <input type="password" name="password" required><br>
        Remember me: <input type="checkbox" name="remember"><br>
        <input type="submit" value="Login">
    </form>
<?php
}

// Call the function
loginUser();
?>


<?php
// Database configuration
$host = 'localhost';
$user = 'root';
$password = '';
$database = 'login_system';

// Create connection
$conn = new mysqli($host, $user, $password, $database);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Start session
session_start();

// Handle form submission
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    // Get form data
    $username = $_POST['username'];
    $password = $_POST['password'];

    // Sanitize input to prevent SQL injection
    $username = $conn->real_escape_string($username);

    // Query the database for the user
    $sql = "SELECT * FROM users WHERE username = '$username'";
    $result = $conn->query($sql);

    if ($result->num_rows === 1) {
        $user_data = $result->fetch_assoc();

        // Verify password
        if (password_verify($password, $user_data['password'])) {
            // Login successful
            $_SESSION['logged_in'] = true;
            $_SESSION['user_id'] = $user_data['id'];
            $_SESSION['username'] = $user_data['username'];

            // Remember me functionality
            if (!empty($_POST['remember'])) {
                setcookie('username', $username, time() + (86400 * 30), "/");
                setcookie('password', $password, time() + (86400 * 30), "/");
            }

            // Redirect to dashboard
            header("Location: dashboard.php");
            exit();
        } else {
            // Incorrect password
            $error = "Invalid username or password";
            echo "<script>alert('$error');</script>";
        }
    } else {
        // User not found
        $error = "Invalid username or password";
        echo "<script>alert('$error');</script>";
    }
}

// Close database connection
$conn->close();
?>


<?php
// Include database connection
require_once 'db_connection.php';

if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    $username = $_POST['username'];
    $password = password_hash($_POST['password'], PASSWORD_DEFAULT);

    // Sanitize input
    $username = $conn->real_escape_string($username);

    // Insert into database
    $sql = "INSERT INTO users (username, password) VALUES ('$username', '$password')";
    
    if ($conn->query($sql)) {
        echo "Registration successful!";
    } else {
        echo "Error: " . $sql . "<br>" . $conn->error;
    }
}

$conn->close();
?>


<?php
// Database configuration file (config.php)
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login Page</title>
</head>
<body>
    <?php
        // Include the database configuration file
        include('config.php');

        session_start();

        if ($_SERVER['REQUEST_METHOD'] == 'POST') {
            $username = $_POST['username'];
            $password = $_POST['password'];

            try {
                // Prepare the SQL statement to prevent SQL injection
                $stmt = $conn->prepare("SELECT id, username, password, role FROM users WHERE username = ?");
                $stmt->execute([$username]);

                $user = $stmt->fetch(PDO::FETCH_ASSOC);

                if ($user) {
                    // Verify the password
                    if (password_verify($password, $user['password'])) {
                        // Store user data in session
                        $_SESSION['id'] = $user['id'];
                        $_SESSION['username'] = $user['username'];
                        $_SESSION['role'] = $user['role'];

                        // Redirect to the dashboard based on user role
                        if ($user['role'] == 'admin') {
                            header('Location: admin_dashboard.php');
                        } else {
                            header('Location: user_dashboard.php');
                        }
                    } else {
                        echo "Incorrect password.";
                    }
                } else {
                    echo "Username not found.";
                }
            } catch(PDOException $e) {
                echo "Error: " . $e->getMessage();
            }
        }
    ?>

    <h2>Login</h2>
    <form method="post" action="<?php echo htmlspecialchars($_SERVER['PHP_SELF']); ?>">
        Username:<br>
        <input type="text" name="username"><br><br>
        Password:<br>
        <input type="password" name="password"><br><br>
        <input type="submit" value="Login">
    </form>
</body>
</html>

<?php
// Close the database connection
$conn = null;
?>


<?php
session_start();

// Database configuration
$host = 'localhost';
$db_username = 'root';
$db_password = '';
$db_name = 'mydatabase';

// Connect to database
$conn = mysqli_connect($host, $db_username, $db_password, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Handle login form submission
if (isset($_POST['submit'])) {
    $username = htmlspecialchars(trim($_POST['username']));
    $password = htmlspecialchars(trim($_POST['password']));

    // Validate input
    if (empty($username) || empty($password)) {
        $error = "Please fill in all fields!";
    } else {
        // Prepare SQL statement to prevent SQL injection
        $stmt = mysqli_prepare($conn, "SELECT * FROM users WHERE username = ?");
        
        if ($stmt === false) {
            die("Prepare failed: " . mysqli_error($conn));
        }

        mysqli_stmt_bind_param($stmt, "s", $username);
        mysqli_stmt_execute($stmt);
        $result = mysqli_stmt_get_result($stmt);

        if (mysqli_num_rows($result) == 0) {
            $error = "Username not found!";
        } else {
            $user = mysqli_fetch_assoc($result);
            // Verify password
            if (password_verify($password, $user['password'])) {
                // Start session and store user data
                $_SESSION['username'] = $username;
                $_SESSION['id'] = $user['id'];
                
                // Redirect to dashboard or home page
                header("Location: dashboard.php");
                exit();
            } else {
                $error = "Incorrect password!";
            }
        }
    }
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login Page</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 20px;
            background-color: #f0f0f0;
        }
        .container {
            max-width: 500px;
            margin: 0 auto;
            padding: 20px;
            background-color: white;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }
        .form-group {
            margin-bottom: 15px;
        }
        input {
            width: 100%;
            padding: 8px;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-sizing: border-box;
        }
        button {
            width: 100%;
            padding: 10px;
            background-color: #4CAF50;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
        button:hover {
            background-color: #45a049;
        }
        .error {
            color: red;
            margin-bottom: 10px;
        }
    </style>
</head>
<body>
    <div class="container">
        <?php if (isset($error)) { ?>
            <div class="error"><?php echo $error; ?></div>
        <?php } ?>

        <h2>Login</h2>

        <form method="POST" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
            <div class="form-group">
                <input type="text" placeholder="Enter username" name="username" required>
            </div>
            <div class="form-group">
                <input type="password" placeholder="Enter password" name="password" required>
            </div>
            <button type="submit" name="submit">Login</button>
        </form>

        <p>Don't have an account? <a href="register.php">Register here</a>.</p>
    </div>
</body>
</html>

<?php
// Close database connection
mysqli_close($conn);
?>


<?php
// Include database connection file
include('db_connection.php');

function loginUser() {
    // Check if form is submitted
    if (isset($_POST['submit'])) {
        $username = $_POST['username'];
        $password = $_POST['password'];

        // Validate input
        if (empty($username) || empty($password)) {
            echo "Username and password are required!";
            return;
        }

        // Query database for user with matching username
        $query = "SELECT * FROM users WHERE username = ?";
        $stmt = mysqli_prepare($db, $query);
        mysqli_stmt_bind_param($stmt, "s", $username);
        mysqli_stmt_execute($stmt);
        $result = mysqli_stmt_get_result($stmt);

        if (mysqli_num_rows($result) == 0) {
            echo "Username not found!";
            return;
        }

        // Fetch user data
        $user = mysqli_fetch_assoc($result);

        // Verify password
        if (!password_verify($password, $user['password'])) {
            echo "Incorrect password!";
            return;
        }

        // Start session and store user data
        session_start();
        $_SESSION['user_id'] = $user['id'];
        $_SESSION['username'] = $user['username'];

        // Optional: Remember me functionality
        if (isset($_POST['remember'])) {
            setcookie('username', $username, time() + 3600); // Cookie valid for 1 hour
        }

        // Redirect to dashboard or home page
        header("Location: dashboard.php");
        exit();
    }
}

// Call the login function
loginUser();

?>


// Registration example
$hashed_password = password_hash($password, PASSWORD_BCRYPT);
$query = "INSERT INTO users (username, password) VALUES (?, ?)";
$stmt = mysqli_prepare($db, $query);
mysqli_stmt_bind_param($stmt, "ss", $username, $hashed_password);
mysqli_stmt_execute($stmt);


<?php
// Database configuration
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

try {
    // Create database connection
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

    // Function to sanitize input
    function sanitize($data) {
        return htmlspecialchars(trim($data));
    }

    // Function to create login form
    function loginForm() {
        echo '
            <form action="login.php" method="post">
                <div>
                    <label for="username">Username:</label><br>
                    <input type="text" id="username" name="username" required>
                </div>
                <div>
                    <label for="password">Password:</label><br>
                    <input type="password" id="password" name="password" required>
                </div>
                <button type="submit" name="login">Login</button>
            </form>
        ';
    }

    // Function to handle login
    function loginUser($conn) {
        if (isset($_POST['login'])) {
            $username = sanitize($_POST['username']);
            $password = $_POST['password'];

            try {
                // Query the database for the user
                $stmt = $conn->prepare("SELECT id, username, password FROM users WHERE username = ?");
                $stmt->execute([$username]);
                $user = $stmt->fetch(PDO::FETCH_ASSOC);

                if (!$user) {
                    echo "Username not found!";
                    return;
                }

                // Verify the password
                if (!password_verify($password, $user['password'])) {
                    echo "Incorrect password!";
                    return;
                }

                // Start session and set user data
                session_start();
                $_SESSION['user_id'] = $user['id'];
                $_SESSION['username'] = $user['username'];

                // Optional: Set success message
                $_SESSION['success'] = "You have successfully logged in.";

                // Redirect to dashboard or home page
                header("Location: dashboard.php");
                exit();
            } catch (PDOException $e) {
                die("Connection failed: " . $e->getMessage());
            }
        }
    }

    // Check if form was submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        loginUser($conn);
    } else {
        loginForm();
    }

} catch (PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}
?>


// Add this at the top of your login page or dashboard
if (isset($_GET['action']) && $_GET['action'] == 'logout') {
    session_unset();
    session_destroy();
    header("Location: login.php");
    exit();
}

// Add a logout link in your navigation:
<a href="?action=logout">Logout</a>


<?php
session_start();

// Database connection details
$host = 'localhost';
$usernameDb = 'root';
$passwordDb = '';
$dbName = 'login_system';

// Connect to database
$conn = mysqli_connect($host, $usernameDb, $passwordDb, $dbName);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Sanitize input data
    $username = mysqli_real_escape_string($conn, $_POST['username']);
    $password = mysqli_real_escape_string($conn, $_POST['password']);

    if (empty($username) || empty($password)) {
        echo "<script>alert('Please fill in all fields!')</script>";
        exit();
    }

    // Query to check if username exists
    $sql = "SELECT * FROM users WHERE username = '$username'";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) == 0) {
        echo "<script>alert('Username not found!')</script>";
        exit();
    }

    // Fetch user data
    $user = mysqli_fetch_assoc($result);
    $dbPassword = $user['password'];

    // Verify password
    if ($password != $dbPassword) {
        echo "<script>alert('Incorrect password!')</script>";
        exit();
    } else {
        // Set session variables
        $_SESSION['username'] = $username;
        $_SESSION['logged_in'] = true;

        // Redirect to dashboard
        header("Location: dashboard.php");
        exit();
    }
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login Page</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f0f0f0;
        }
        .login-container {
            width: 300px;
            margin: 50px auto;
            padding: 20px;
            background-color: white;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }
        .login-container h2 {
            color: #333;
            text-align: center;
        }
        .form-group {
            margin-bottom: 15px;
        }
        .form-group input {
            width: 100%;
            padding: 8px;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-sizing: border-box;
        }
        button {
            width: 100%;
            padding: 10px;
            background-color: #4CAF50;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
        button:hover {
            background-color: #45a049;
        }
        .register-link {
            text-align: center;
            margin-top: 10px;
        }
        .register-link a {
            color: #4CAF50;
            text-decoration: none;
        }
    </style>
</head>
<body>
    <div class="login-container">
        <h2>Login</h2>
        <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]);?>">
            <div class="form-group">
                <input type="text" placeholder="Enter Username" name="username" required>
            </div>
            <div class="form-group">
                <input type="password" placeholder="Enter Password" name="password" required>
            </div>
            <button type="submit">Login</button>
        </form>
        <div class="register-link">
            Don't have an account? <a href="#">Register here</a>
        </div>
    </div>

    <?php
    // Include dashboard content after successful login
    if (isset($_SESSION['logged_in']) && $_SESSION['logged_in'] == true) {
        include 'dashboard.php';
    }
    ?>
</body>
</html>


<?php
// Function to sanitize input data
function sanitize($data) {
    $data = trim($data);
    $data = htmlspecialchars($data);
    $data = stripslashes($data);
    return $data;
}

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get username and password from form data
    $username = sanitize($_POST['username']);
    $password = $_POST['password'];

    // Database connection details
    $host = 'localhost';
    $db_username = 'root';
    $db_password = '';
    $database = 'login_system';

    // Connect to database
    $conn = mysqli_connect($host, $db_username, $db_password, $database);

    // Check connection
    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
    }

    // Prevent SQL injection by escaping special characters
    $username = mysqli_real_escape_string($conn, $username);
    $password = mysqli_real_escape_string($conn, $password);

    // Query to select user with the given username
    $sql = "SELECT * FROM users WHERE username = '$username'";
    $result = mysqli_query($conn, $sql);

    if (!$result) {
        die("Query failed: " . mysqli_error($conn));
    }

    // Check if user exists
    if (mysqli_num_rows($result) == 0) {
        echo "Username does not exist!";
        exit();
    }

    // Fetch user data
    $row = mysqli_fetch_assoc($result);
    
    // Verify password
    if ($password == $row['password']) { // Note: Password is stored in plain text, which is NOT secure
        // Set session variables
        $_SESSION['user_id'] = $row['id'];
        $_SESSION['username'] = $row['username'];
        
        // Redirect to dashboard or home page
        header("Location: dashboard.php");
    } else {
        echo "Incorrect password!";
    }

    // Close database connection
    mysqli_close($conn);
}
?>


<?php
session_start();

// Function to sanitize input data
function sanitize($data) {
    $data = trim($data);
    $data = htmlspecialchars($data);
    $data = stripslashes($data);
    return $data;
}

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = sanitize($_POST['username']);
    $password = $_POST['password'];

    // Database connection details
    $host = 'localhost';
    $db_username = 'root';
    $db_password = '';
    $database = 'login_system';

    $conn = new mysqli($host, $db_username, $db_password, $database);

    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    // Prepare and bind
    $stmt = $conn->prepare("SELECT id, username, password FROM users WHERE username = ?");
    $stmt->bind_param("s", $username);

    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows == 0) {
        echo "Username does not exist!";
        exit();
    }

    $row = $result->fetch_assoc();

    // Verify password
    if (password_verify($password, $row['password'])) {
        $_SESSION['user_id'] = $row['id'];
        $_SESSION['username'] = $row['username'];
        header("Location: dashboard.php");
    } else {
        echo "Incorrect password!";
    }

    $stmt->close();
    $conn->close();
}
?>


<?php
function user_login($username, $password) {
    try {
        // Database connection parameters
        $db_host = 'localhost';
        $db_user = 'root';
        $db_pass = '';
        $db_name = 'mydatabase';

        // Create a database connection
        $conn = new mysqli($db_host, $db_user, $db_pass, $db_name);

        if ($conn->connect_error) {
            throw new Exception("Connection failed: " . $conn->connect_error);
        }

        // Escape special characters to prevent SQL injection
        $username = $conn->real_escape_string($username);

        // Query the database for the user's information
        $sql = "SELECT * FROM users WHERE username = '$username'";
        $result = $conn->query($sql);

        if ($conn->error) {
            throw new Exception("Query error: " . $conn->error);
        }

        // Check if a user exists with that username
        if ($result->num_rows == 0) {
            return false;
        }

        // Fetch the user data
        $user = $result->fetch_assoc();

        // Verify the password
        if (!password_verify($password, $user['password'])) {
            return false;
        }

        // Start a session and store user data in session variables
        session_start();
        $_SESSION['user_id'] = $user['id'];
        $_SESSION['username'] = $user['username'];
        $_SESSION['login_time'] = time();

        // Close the database connection
        $conn->close();

        return true;

    } catch (Exception $e) {
        // Handle exceptions and log errors if necessary
        echo "An error occurred: " . $e->getMessage();
        return false;
    }
}
?>


<?php
session_start();

// Database connection details
$host = 'localhost';
$username = 'your_username';
$password = 'your_password';
$db_name = 'your_database';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Sanitize input data
    $username = htmlspecialchars(trim($_POST['username']));
    $password = htmlspecialchars(trim($_POST['password']));

    // Escape special characters to prevent SQL injection
    $username = mysqli_real_escape_string($conn, $username);
    $password = mysqli_real_escape_string($conn, $password);

    // Hash the password (using md5 for this example - consider using stronger hashing in production)
    $hash_password = md5($password);

    // Query to check user credentials
    $sql = "SELECT * FROM users WHERE username='$username'";
    $result = mysqli_query($conn, $sql);

    if ($result) {
        $row = mysqli_fetch_assoc($result);
        
        if (mysqli_num_rows($result) > 0) {
            // Verify password
            if ($hash_password == $row['password']) {
                // Set session variables
                $_SESSION['user_id'] = $row['id'];
                $_SESSION['username'] = $row['username'];
                
                // Redirect to dashboard or home page
                header("Location: dashboard.php");
                exit();
            } else {
                echo "Invalid password!";
            }
        } else {
            echo "Username not found!";
        }
    } else {
        echo "Error executing query!";
    }

    mysqli_close($conn);
}
?>


<?php
session_start();

if (!isset($_SESSION['username'])) {
    header("Location: login.php");
    exit();
}
?>


<?php
// Database configuration
$host = 'localhost';
$dbUsername = 'root';
$dbPassword = '';
$dbName = 'user_login';

try {
    // Create connection
    $conn = new mysqli($host, $dbUsername, $dbPassword, $dbName);

    // Check connection
    if ($conn->connect_error) {
        throw new Exception("Connection failed: " . $conn->connect_error);
    }

    // Function to sanitize input data
    function sanitizeInput($data) {
        return htmlspecialchars(strip_tags(trim($data)));
    }

    // Function to hash password
    function hashPassword($password) {
        return password_hash($password, PASSWORD_BCRYPT, array('cost' => 12));
    }

    // Function to verify password
    function verifyPassword($plain_password, $hashed_password) {
        return password_verify($plain_password, $hashed_password);
    }

    // Login function
    function loginUser($conn, $email, $password) {
        global $error;

        try {
            if (empty($email) || empty($password)) {
                throw new Exception("Please fill in all required fields");
            }

            $email = sanitizeInput($email);
            $password = sanitizeInput($password);

            // Check if email exists
            $stmt = $conn->prepare("SELECT * FROM users WHERE email = ?");
            $stmt->bind_param("s", $email);
            $stmt->execute();
            $result = $stmt->get_result();

            if ($result->num_rows === 0) {
                throw new Exception("Account does not exist");
            }

            $user = $result->fetch_assoc();

            // Verify password
            if (!verifyPassword($password, $user['password'])) {
                throw new Exception("Incorrect email or password");
            }

            // Start session and store user data
            session_start();
            $_SESSION['logged_in'] = true;
            $_SESSION['user_id'] = $user['id'];
            $_SESSION['username'] = $user['username'];
            $_SESSION['email'] = $user['email'];

            // Set cookies to remember the user (optional)
            setcookie('email', $email, time() + 3600 * 24 * 7, '/', '', false, true);
            setcookie('remember_me', 'yes', time() + 3600 * 24 * 7, '/', '', false, true);

            // Redirect to dashboard
            header("Location: dashboard.php");
            exit();
        } catch (Exception $e) {
            $error = $e->getMessage();
            return false;
        }
    }

    // Check if user is logged in
    function is_logged_in() {
        if (!isset($_SESSION['logged_in']) || $_SESSION['logged_in'] !== true) {
            header("Location: login.php");
            exit();
        }
    }

} catch (Exception $e) {
    die("An error occurred: " . $e->getMessage());
}

// Close the database connection
$conn->close();
?>


<!DOCTYPE html>
<html>
<head>
    <title>Login Page</title>
</head>
<body>
    <?php include_once('login_functions.php'); ?>

    <?php if (!empty($error)) { ?>
        <div style="color: red;"><?php echo $error; ?></div><br>
    <?php } ?>

    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        Email:<br>
        <input type="email" name="email" required><br>
        Password:<br>
        <input type="password" name="password" required><br><br>
        <input type="submit" value="Login">
    </form>

    Don't have an account? <a href="register.php">Register here</a>.
</body>
</html>


<?php
session_start();

// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$db_name = 'mydatabase';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get user input
    $email = mysqli_real_escape_string($conn, $_POST['email']);
    $password = mysqli_real_escape_string($conn, $_POST['password']);

    // Query database for user with matching email
    $sql = "SELECT * FROM users WHERE email='$email'";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) == 1) {
        // User exists, get user data
        $user = mysqli_fetch_assoc($result);
        
        // Verify password
        if (password_verify($password, $user['password'])) {
            // Password is correct, start session
            $_SESSION['user_id'] = $user['id'];
            $_SESSION['username'] = $user['username'];
            
            // Redirect to dashboard or home page
            header("Location: dashboard.php");
            exit();
        } else {
            // Password is incorrect
            $error = "Incorrect email or password";
        }
    } else {
        // User does not exist
        $error = "Incorrect email or password";
    }
}

// Close database connection
mysqli_close($conn);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login</title>
</head>
<body>
    <?php if (isset($error)) { ?>
        <p style="color: red;"><?php echo $error; ?></p>
    <?php } ?>

    <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
        Email: <input type="email" name="email" required><br>
        Password: <input type="password" name="password" required><br>
        <input type="submit" value="Login">
    </form>

    <p>Don't have an account? <a href="register.php">Register here</a></p>
</body>
</html>


<?php
// Database configuration
$host = 'localhost';
$db_username = 'root';
$db_password = '';
$db_name = 'user_login';

// Connect to database
$conn = mysqli_connect($host, $db_username, $db_password, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get username and password from form
    $username_email = htmlspecialchars($_POST['username']);
    $password = $_POST['password'];

    // Sanitize the inputs
    $username_email = mysqli_real_escape_string($conn, $username_email);
    $password = mysqli_real_escape_string($conn, $password);

    // Query to check if username or email exists in database
    $sql = "SELECT * FROM users WHERE username = ? OR email = ?";
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, "ss", $username_email, $username_email);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);

    if ($row = mysqli_fetch_assoc($result)) {
        // Verify password
        if (password_verify($password, $row['password'])) {
            // Start session
            session_start();
            
            // Set session variables
            $_SESSION['user_id'] = $row['id'];
            $_SESSION['username'] = $row['username'];
            $_SESSION['email'] = $row['email'];
            $_SESSION['login_time'] = time();

            // Redirect to dashboard or home page
            header("Location: dashboard.php");
            exit();
        } else {
            echo "Invalid username or password";
        }
    } else {
        echo "Invalid username or password";
    }

    mysqli_close($conn);
}
?>


<?php
session_start();

// Database connection details
$host = 'localhost';
$user = 'root';
$password = '';
$dbname = 'mydatabase';

// Connect to database
$conn = mysqli_connect($host, $user, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

if (isset($_POST['submit'])) {
    // Sanitize input data
    $username = mysqli_real_escape_string($conn, trim($_POST['username']));
    $password = $_POST['password'];

    // Check if username and password are provided
    if (empty($username) || empty($password)) {
        echo "Please fill in all fields";
        exit();
    }

    // Query the database for the user
    $sql = "SELECT * FROM users WHERE username='$username' LIMIT 1";
    $result = mysqli_query($conn, $sql);

    if (!$result) {
        die("Error: " . mysqli_error($conn));
    }

    $user_data = mysqli_fetch_assoc($result);

    // Check if user exists and password is correct
    if ($user_data && password_verify($password, $user_data['password'])) {
        // Set session variables
        $_SESSION['username'] = $user_data['username'];
        $_SESSION['user_id'] = $user_data['id'];
        $_SESSION['logged_in'] = true;

        // Redirect to dashboard or home page
        header("Location: dashboard.php");
        exit();
    } else {
        echo "Invalid username or password";
    }
}

mysqli_close($conn);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login Page</title>
</head>
<body>
    <h2>Login Form</h2>
    <form action="login.php" method="post">
        Username: <input type="text" name="username"><br>
        Password: <input type="password" name="password"><br>
        <input type="submit" name="submit" value="Login">
    </form>
</body>
</html>


<?php
// Include database configuration file
include('config.php');

// Initialize variables
$username = $password = "";
$error = "";

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Sanitize input data
    $username = mysqli_real_escape_string($conn, trim($_POST['username']));
    $password = $_POST['password'];

    // Check if username and password are not empty
    if (empty($username) || empty($password)) {
        $error = "Username and password are required!";
    } else {
        // Query to check if username exists in the database
        $query = "SELECT * FROM users WHERE username = '" . $username . "'";
        $result = mysqli_query($conn, $query);

        if (mysqli_num_rows($result) == 1) {
            $row = mysqli_fetch_assoc($result);
            // Verify password
            if (password_verify($password, $row['password'])) {
                // Password is correct
                session_start();
                $_SESSION['username'] = $row['username'];
                $_SESSION['user_id'] = $row['id'];
                
                // Optional: Set a cookie for remember me functionality
                setcookie('username', $row['username'], time() + 3600);
                setcookie('session_id', session_id(), time() + 3600);

                // Redirect to dashboard or home page
                header("Location: dashboard.php");
                exit();
            } else {
                // Password is incorrect
                $error = "Incorrect username or password!";
            }
        } else {
            // Username does not exist
            $error = "Incorrect username or password!";
        }
    }
}

// Close database connection
mysqli_close($conn);
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Login Page</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f0f0f0;
        }
        .login-container {
            width: 300px;
            margin: 50px auto;
            padding: 20px;
            background-color: white;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }
        .login-container h2 {
            color: #333;
            text-align: center;
            margin-bottom: 20px;
        }
        .form-group {
            margin-bottom: 15px;
        }
        input[type="text"], input[type="password"] {
            width: 100%;
            padding: 8px;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-sizing: border-box;
        }
        button {
            width: 100%;
            padding: 10px;
            background-color: #4CAF50;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
        button:hover {
            background-color: #45a049;
        }
        .error {
            color: red;
            margin-top: 10px;
            text-align: center;
        }
    </style>
</head>
<body>
    <div class="login-container">
        <h2>Login</h2>
        <?php if ($error != "") { ?>
            <div class="error"><?php echo $error; ?></div>
        <?php } ?>

        <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
            <div class="form-group">
                <label for="username">Username:</label>
                <input type="text" id="username" name="username" required>
            </div>
            <div class="form-group">
                <label for="password">Password:</label>
                <input type="password" id="password" name="password" required>
            </div>
            <button type="submit">Login</button>
        </form>
    </div>

    <script>
        // Optional: Add client-side validation
        document.querySelector('form').addEventListener('submit', function(e) {
            const username = this.username.value;
            const password = this.password.value;

            if (username === '' || password === '') {
                alert('Please fill in all fields!');
                e.preventDefault();
            }
        });
    </script>
</body>
</html>


<?php
session_start();

// Database configuration
$host = 'localhost';
$username_db = 'root';
$password_db = '';
$database_name = 'mydb';

// Create connection
$conn = mysqli_connect($host, $username_db, $password_db, $database_name);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// If form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Sanitize input data
    $username = mysqli_real_escape_string($conn, $_POST['username']);
    $password = mysqli_real_escape_string($conn, $_POST['password']);

    // Check if username exists in database (either as username or email)
    $stmt = $conn->prepare("SELECT id, username, password FROM users WHERE username = ? OR email = ?");
    $stmt->bind_param('ss', $username, $username);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        // Get user data
        $row = $result->fetch_assoc();
        $stored_password = $row['password'];

        // Verify password
        if (password_verify($password, $stored_password)) {
            // Password is correct
            // Start session and store user data in session variables
            $_SESSION['user_id'] = $row['id'];
            $_SESSION['username'] = $row['username'];
            $_SESSION['logged_in'] = true;

            // Redirect to dashboard or home page
            header('Location: dashboard.php');
            exit();
        } else {
            // Password is incorrect
            $error_message = "Incorrect password!";
        }
    } else {
        // Username/email not found in database
        $error_message = "Username or email does not exist!";
    }

    mysqli_close($conn);
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login Page</title>
    <style>
        .container {
            width: 300px;
            margin: 0 auto;
            padding: 20px;
            border: 1px solid #ccc;
            border-radius: 5px;
        }
        input {
            width: 100%;
            padding: 8px;
            margin: 8px 0;
            box-sizing: border-box;
        }
        button {
            width: 100%;
            padding: 10px;
            background-color: #4CAF50;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
        button:hover {
            background-color: #45a049;
        }
    </style>
</head>
<body>
    <div class="container">
        <?php
        if (isset($error_message)) {
            echo "<p style='color:red;'>$error_message</p>";
        }
        ?>
        <h3>Login Form</h3>
        <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
            <input type="text" name="username" placeholder="Username or Email" required><br>
            <input type="password" name="password" placeholder="Password" required><br>
            <button type="submit">Login</button>
        </form>
        <p>Don't have an account? <a href="register.php">Register here</a>.</p>
    </div>
</body>
</html>


// In your registration script
$password = $_POST['password'];
$hashed_password = password_hash($password, PASSWORD_DEFAULT);


<?php
// Start session
session_start();

// Include database connection file
include_once("db_connection.php");

function loginUser() {
    // Check if form is submitted
    if (isset($_POST['login'])) {
        $username = $_POST['username'];
        $password = $_POST['password'];

        // Validate input
        if (empty($username) || empty($password)) {
            return "Please fill in all fields";
        }

        try {
            // Prepare statement to select user by username
            $stmt = $conn->prepare("SELECT * FROM users WHERE username = ?");
            $stmt->bind_param("s", $username);
            $stmt->execute();
            
            // Get result
            $result = $stmt->get_result();
            $user = $result->fetch_assoc();

            if (!$user) {
                return "Username does not exist";
            }

            // Verify password
            if (password_verify($password, $user['password'])) {
                // Password is correct
                // Start session and store user data
                $_SESSION['id'] = $user['id'];
                $_SESSION['username'] = $user['username'];
                $_SESSION['first_name'] = $user['first_name'];
                $_SESSION['last_name'] = $user['last_name'];
                $_SESSION['email'] = $user['email'];

                // Redirect to dashboard or home page
                header("Location: dashboard.php");
                exit();
            } else {
                return "Incorrect password";
            }
        } catch (Exception $e) {
            return "Error: " . $e->getMessage();
        }
    }
}

// Call the function if form is submitted
if (isset($_POST['login'])) {
    $error = loginUser();
    if ($error) {
        echo "<div class='error'>$error</div>";
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login Page</title>
    <style>
        .error { color: red; }
    </style>
</head>
<body>
    <h2>Login</h2>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        Username:<br>
        <input type="text" name="username" required><br>
        Password:<br>
        <input type="password" name="password" required><br><br>
        <input type="submit" name="login" value="Login">
    </form>
</body>
</html>


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login Page</title>
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
</head>
<body class="bg-light">
    <div class="container mt-5">
        <h2 class="text-center mb-4">User Login</h2>
        
        <?php
            // Database connection details
            $host = "localhost";
            $db_name = "your_database_name";
            $username = "your_username";
            $password = "your_password";

            try {
                // Create database connection
                $conn = new PDO("mysql:host=$host;dbname=$db_name", $username, $password);
                $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

                if (isset($_POST['login'])) {
                    $input = $_POST['username_email'];
                    $pass = $_POST['password'];

                    // Prepare and execute query
                    $stmt = $conn->prepare("SELECT * FROM users WHERE username LIKE ? OR email LIKE ?");
                    $stmt->bindValue(1, '%' . $input . '%', PDO::PARAM_STR);
                    $stmt->bindValue(2, '%' . $input . '%', PDO::PARAM_STR);
                    $stmt->execute();

                    // Check if any rows found
                    if ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {
                        // Verify password
                        if (password_verify($pass, $row['password'])) {
                            // Start session and store user data
                            session_start();
                            $_SESSION['user_id'] = $row['id'];
                            $_SESSION['username'] = $row['username'];
                            $_SESSION['email'] = $row['email'];

                            // Redirect to dashboard
                            header("Location: dashboard.php");
                            exit();
                        } else {
                            echo "<div class='alert alert-danger'>Invalid username/password!</div>";
                        }
                    } else {
                        echo "<div class='alert alert-danger'>Username or Email not found!</div>";
                    }
                }
            } catch(PDOException $e) {
                echo "Connection failed: " . $e->getMessage();
            }
        ?>

        <form method="POST" action="<?php $_PHP_SELF; ?>">
            <div class="mb-3">
                <input type="text" name="username_email" class="form-control" placeholder="Enter username or email" required>
            </div>
            <div class="mb-4">
                <input type="password" name="password" class="form-control" placeholder="Enter password" required>
            </div>
            <button type="submit" name="login" class="btn btn-primary">Login</button>
        </form>

        <p class="mt-3">Don't have an account? <a href="register.php">Register here</a></p>
    </div>

    <!-- Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>


<?php
// Connect to the database
$host = "localhost";
$username_db = "root";
$password_db = "";
$database = "login";

$conn = mysqli_connect($host, $username_db, $password_db, $database);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

session_start();

// Check if the form has been submitted
if (isset($_POST['submit'])) {
    // Sanitize input data
    $username = trim(mysqli_real_escape_string($conn, htmlspecialchars(stripslashes($_POST['username']))));
    $password = trim(mysqli_real_escape_string($conn, htmlspecialchars(stripslashes($_POST['password']))));

    // Query the database for the username and password
    $sql = "SELECT * FROM users WHERE username='$username'";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) == 1) {
        $row = mysqli_fetch_assoc($result);
        if ($password == md5($row['password'])) {
            // Start the session and set session variables
            $_SESSION['username'] = $username;
            $_SESSION['id'] = $row['id'];
            $_SESSION['logged_in'] = true;

            // Set message for success
            $_SESSION['message'] = "You are now logged in";
            header("location: dashboard.php");
            exit();
        } else {
            // Password doesn't match
            $_SESSION['message'] = "Invalid username or password";
            header("location: login.php");
            exit();
        }
    } else {
        // Username not found
        $_SESSION['message'] = "Invalid username or password";
        header("location: login.php");
        exit();
    }
}

// Close the database connection
mysqli_close($conn);
?>


<?php
session_start();
require_once('database_connection.php');

// Check if form is submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Get form data
    $username = trim($_POST['username']);
    $password = $_POST['password'];

    // Validate input
    if (empty($username) || empty($password)) {
        $error = "Please fill in both username and password";
        header("Location: login.php?error=$error");
        exit();
    }

    try {
        // Prepare SQL statement to select user by username
        $stmt = $conn->prepare("SELECT * FROM users WHERE username = ?");
        $stmt->bind_param("s", $username);
        $stmt->execute();

        // Get result
        $result = $stmt->get_result();
        $user = $result->fetch_assoc();

        if ($user) {
            // Verify password
            if (password_verify($password, $user['password'])) {
                // Password is correct
                $_SESSION['user_id'] = $user['id'];
                $_SESSION['username'] = $user['username'];
                
                // Set session cookie lifetime to 0 (session ends when browser closes)
                ini_set('session.cookie_lifetime', '0');
                
                header("Location: dashboard.php");
                exit();
            } else {
                // Incorrect password
                $error = "Invalid username or password";
                header("Location: login.php?error=$error");
                exit();
            }
        } else {
            // No user found
            $error = "Invalid username or password";
            header("Location: login.php?error=$error");
            exit();
        }
    } catch (Exception $e) {
        // Error occurred
        $error = "An error occurred during login. Please try again later.";
        header("Location: login.php?error=$error");
        exit();
    }
}

// Close database connection
$conn->close();
?>


<?php
// Start the session
session_start();

// Include database connection file
include 'db_connection.php';

// Check if form is submitted
if (isset($_POST['login'])) {
    // Sanitize input data
    $username = mysqli_real_escape_string($conn, $_POST['username']);
    $password = $_POST['password'];

    // Validate input fields
    if (empty($username) || empty($password)) {
        $error = "All fields are required!";
    } else {
        // Query the database for user with this username
        $query = "SELECT * FROM users WHERE username = ?";
        
        // Prepare and bind statement
        $stmt = mysqli_prepare($conn, $query);
        mysqli_stmt_bind_param($stmt, "s", $username);
        mysqli_execute($stmt);
        
        // Get the result
        $result = mysqli_stmt_get_result($stmt);
        
        if ($row = mysqli_fetch_assoc($result)) {
            // Check password
            if (password_verify($password, $row['password'])) {
                // Password is correct
                
                // Store user session variables
                $_SESSION['user_id'] = $row['id'];
                $_SESSION['username'] = $row['username'];
                
                // Check for remember me
                if ($_POST['remember']) {
                    // Set up a cookie that will last for 30 days
                    setcookie('remember_me', $row['remember_token'], time() + (86400 * 30), "/");
                }
                
                // Redirect to dashboard or home page
                header("Location: dashboard.php");
                exit();
            } else {
                $error = "Incorrect password!";
            }
        } else {
            $error = "Username not found!";
        }
    }
}

// Close database connection
mysqli_close($conn);

?>

<!DOCTYPE html>
<html>
<head>
    <title>Login Page</title>
</head>
<body>
    <?php if (isset($error)) { ?>
        <p style="color: red;"><?php echo $error ?></p>
    <?php } ?>

    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <label>Username:</label><br>
        <input type="text" name="username"><br>
        
        <label>Password:</label><br>
        <input type="password" name="password"><br>
        
        <label><input type="checkbox" name="remember"> Remember me</label><br>
        
        <input type="submit" name="login" value="Login">
    </form>

    <p>Don't have an account? <a href="register.php">Register here</a></p>
</body>
</html>


<?php
// login.php

session_start();

// Database connection details
$db_host = 'localhost';
$db_username = 'root';
$db_password = '';
$db_name = 'mydatabase';

// Connect to database
$conn = new mysqli($db_host, $db_username, $db_password, $db_name);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Get username and password from form
$username = $_POST['username'];
$password = $_POST['password'];

// Sanitize input to prevent SQL injection
$username = mysqli_real_escape_string($conn, $username);

// Query to check if username exists
$sql = "SELECT id, username, password FROM users WHERE username = '$username'";
$result = $conn->query($sql);

if ($result->num_rows > 0) {
    // User exists, get stored hash
    $row = $result->fetch_assoc();
    $stored_hash = $row['password'];
    
    // Verify password
    if (md5($password) === $stored_hash) {
        // Password correct
        
        // Start session and set session variables
        $_SESSION['loggedin'] = true;
        $_SESSION['username'] = $username;
        $_SESSION['id'] = $row['id'];
        
        // Optional: Set remember me cookie
        if (isset($_POST['remember'])) {
            $cookie_name = "user_cookie";
            $cookie_value = md5($username . $password);
            setcookie($cookie_name, $cookie_value, time() + 3600); // Cookie valid for 1 hour
        }
        
        // Redirect to dashboard or home page
        header("Location: dashboard.php");
        exit();
    } else {
        // Password incorrect
        $error = "Invalid username or password!";
        header("refresh:2; url=login.html");
        echo "<div class='alert alert-danger mt-4' style='text-align:center;'>$error</div>";
        exit();
    }
} else {
    // Username not found
    $error = "Username does not exist!";
    header("refresh:2; url=login.html");
    echo "<div class='alert alert-danger mt-4' style='text-align:center;'>$error</div>";
    exit();
}

// Close database connection
$conn->close();
?>


<?php
// db_config.php
$DB_HOST = 'localhost';
$DB_USER = 'root';
$DB_PASS = '';
$DB_NAME = 'login_system';

try {
    $conn = new mysqli($DB_HOST, $DB_USER, $DB_PASS, $DB_NAME);
} catch (Exception $e) {
    die("Connection Error: " . $e->getMessage());
}
?>


<?php
session_start();
include('db_config.php');

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Sanitize input
    $username_email = mysqli_real_escape_string($conn, $_POST['username_email']);
    $password = $_POST['password'];

    // Query to check if username or email exists
    $sql = "SELECT * FROM users WHERE username='$username_email' OR email='$username_email'";
    $result = $conn->query($sql);

    if ($result->num_rows == 1) {
        $row = $result->fetch_assoc();
        
        // Verify password
        if (password_verify($password, $row['password'])) {
            // Start session and set session variables
            $_SESSION['user_id'] = $row['id'];
            $_SESSION['username'] = $row['username'];
            $_SESSION['email'] = $row['email'];
            $_SESSION['login_time'] = time();
            
            // Regenerate session ID for security
            session_regenerate(true);
            
            header("Location: dashboard.php");
            exit();
        } else {
            echo "Incorrect password!";
        }
    } else {
        echo "Username or email not found!";
    }
} else {
    echo "Invalid request method!";
}

$conn->close();
?>


<?php
session_start();
if (!isset($_SESSION['user_id'])) {
    header("Location: login.php");
    exit();
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Dashboard</title>
</head>
<body>
    <h1>Welcome to your Dashboard, <?=$_SESSION['username']?>!</h1>
    <a href="logout.php">Logout</a>
</body>
</html>


<?php
session_start();
unset($_SESSION);
session_destroy();
header("Location: login.php");
exit();
?>


<?php
// Database configuration
$host = 'localhost';
$db_username = 'root';
$db_password = '';
$db_name = 'login_system';

// Connect to the database
$conn = mysqli_connect($host, $db_username, $db_password, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Start session
session_start();

// Check if form is submitted
if (isset($_POST['submit'])) {
    // Sanitize inputs
    $username = htmlspecialchars(trim($_POST['username']));
    $password = $_POST['password'];

    // Prepare SQL statement to prevent SQL injection
    $stmt = mysqli_prepare($conn, "SELECT * FROM users WHERE username = ?");
    
    // Bind parameters
    mysqli_stmt_bind_param($stmt, "s", $username);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);

    if ($row = mysqli_fetch_assoc($result)) {
        // Verify password
        if (password_verify($password, $row['password'])) {
            // Password is correct
            $_SESSION['loggedin'] = true;
            $_SESSION['username'] = $username;

            // Redirect to welcome page
            header("Location: welcome.php");
            exit();
        } else {
            // Incorrect password
            $error = "Incorrect username or password";
        }
    } else {
        // No user found
        $error = "Incorrect username or password";
    }

    mysqli_stmt_close($stmt);
}

mysqli_close($conn);

?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login Page</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 40px;
        }
        .login-form {
            max-width: 300px;
            margin: 0 auto;
            padding: 20px;
            border: 1px solid #ccc;
            border-radius: 5px;
        }
        .form-group {
            margin-bottom: 15px;
        }
        input[type="text"], input[type="password"] {
            width: 100%;
            padding: 8px;
            margin-top: 5px;
            border: 1px solid #ccc;
            border-radius: 4px;
        }
        button {
            width: 100%;
            padding: 10px;
            background-color: #4CAF50;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
        button:hover {
            background-color: #45a049;
        }
        .error {
            color: red;
            margin-top: 10px;
        }
    </style>
</head>
<body>
    <div class="login-form">
        <?php if (isset($error)) { ?>
            <div class="error"><?php echo $error; ?></div>
        <?php } ?>

        <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
            <div class="form-group">
                <label for="username">Username:</label>
                <input type="text" id="username" name="username" required>
            </div>

            <div class="form-group">
                <label for="password">Password:</label>
                <input type="password" id="password" name="password" required>
            </div>

            <button type="submit" name="submit">Login</button>
        </form>
    </div>
</body>
</html>


// Hash the password before storing it
$hashed_password = password_hash('testpassword', PASSWORD_DEFAULT);

mysqli_query($conn, "INSERT INTO users (username, password) VALUES ('testuser', '$hashed_password')");


<?php
session_start();

// Database configuration
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

try {
    // Connect to database
    $pdo = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

    if (isset($_POST['submit'])) {
        // Check if form is submitted
        $email_username = $_POST['email_username'];
        $password = $_POST['password'];

        // Validate inputs
        if (empty($email_username) || empty($password)) {
            die("Please fill in all fields.");
        }

        // Query the database for user with provided email or username
        $stmt = $pdo->prepare("SELECT * FROM users WHERE username = :username OR email = :email");
        $stmt->bindParam(':username', $email_username);
        $stmt->bindParam(':email', $email_username);
        $stmt->execute();
        $user = $stmt->fetch(PDO::FETCH_ASSOC);

        if (!$user) {
            die("Invalid credentials.");
        }

        // Verify password
        if (!password_verify($password, $user['password'])) {
            die("Invalid credentials.");
        }

        // Start session and store user data
        $_SESSION['user_id'] = $user['id'];
        $_SESSION['username'] = $user['username'];
        $_SESSION['email'] = $user['email'];

        // Redirect to dashboard or home page
        header("Location: dashboard.php");
        exit();
    }

} catch (PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}
?>


<?php
session_start();

// Database connection details
$host = 'localhost';
$username_db = 'root';
$password_db = '';
$database = 'login_system';

// Connect to database
$conn = mysqli_connect($host, $username_db, $password_db, $database);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Check if form is submitted
if (isset($_POST['submit'])) {
    // Sanitize and retrieve input data
    $username = htmlspecialchars(trim($_POST['username']));
    $password = htmlspecialchars(trim($_POST['password']));

    // Prevent SQL injection
    $username = mysqli_real_escape_string($conn, $username);

    // Query the database for user with matching username
    $query = "SELECT * FROM users WHERE username='$username'";
    $result = mysqli_query($conn, $query);
    
    if (mysqli_num_rows($result) == 1) {
        $row = mysqli_fetch_assoc($result);
        
        // Verify password
        if (md5($password) == $row['password']) {
            // Password is correct
            
            // Start session and store user data
            $_SESSION['username'] = $username;
            $_SESSION['logged_in'] = true;

            // Redirect to dashboard or home page
            header('Location: dashboard.php');
            exit();
        } else {
            // Incorrect password
            echo "Incorrect username or password";
        }
    } else {
        // User not found
        echo "Incorrect username or password";
    }
}

// Close database connection
mysqli_close($conn);
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Login Page</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            margin: 0;
            background-color: #f0f0f0;
        }
        
        .login-container {
            background-color: white;
            padding: 20px;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
            width: 300px;
        }

        input[type="text"], input[type="password"] {
            width: 100%;
            padding: 10px;
            margin: 10px 0;
            border: 1px solid #ddd;
            border-radius: 4px;
        }

        button {
            width: 100%;
            padding: 10px;
            background-color: #4CAF50;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }

        button:hover {
            background-color: #45a049;
        }
    </style>
</head>
<body>
    <div class="login-container">
        <h2>Login</h2>
        <form action="<?php echo htmlspecialchars($_SERVER['PHP_SELF']); ?>" method="POST">
            <input type="text" placeholder="Username" name="username" required>
            <input type="password" placeholder="Password" name="password" required>
            <button type="submit" name="submit">Login</button>
        </form>
    </div>
</body>
</html>


<?php
session_start();

// Database configuration
$host = 'localhost';
$user = 'root'; // Change this to your database username
$password = ''; // Change this to your database password
$database = 'login_system';

// Connect to the database
$conn = new mysqli($host, $user, $password, $database);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function login_user() {
    global $conn;

    // Get input data
    if (isset($_POST['username']) && isset($_POST['password'])) {
        $username = $_POST['username'];
        $password = $_POST['password'];

        // Validate inputs
        if (empty($username) || empty($password)) {
            echo "Username and password are required!";
            return false;
        }

        // Sanitize input data
        $username = mysqli_real_escape_string($conn, $username);

        // Check if username exists in database
        $sql = "SELECT * FROM users WHERE username = ?";
        $stmt = $conn->prepare($sql);
        $stmt->bind_param("s", $username);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows === 1) {
            $user_data = $result->fetch_assoc();
            
            // Verify password
            if (password_verify($password, $user_data['password'])) {
                // Password is correct
                $_SESSION['user_id'] = $user_data['id'];
                $_SESSION['username'] = $user_data['username'];
                
                // Redirect to dashboard or home page
                header("Location: dashboard.php");
                exit();
            } else {
                // Password does not match
                echo "Incorrect password!";
            }
        } else {
            // Username doesn't exist
            echo "Username does not exist!";
        }

        $stmt->close();
    }
}

// Call the login function if form is submitted
if (isset($_POST['login'])) {
    login_user();
}
?>


<?php
session_start();

// Database connection details
$host = 'localhost';
$username_db = 'root';
$password_db = '';
$db_name = 'user_login';

// Connect to the database
$conn = mysqli_connect($host, $username_db, $password_db, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

if (isset($_POST['submit'])) {
    // Get user input
    $username = $_POST['username'];
    $password = $_POST['password'];

    // Sanitize the input to prevent SQL injection
    $username = mysqli_real_escape_string($conn, $username);
    $password = mysqli_real_escape_string($conn, $password);

    // Check if username or email exists in the database
    $sql = "SELECT * FROM users WHERE username='$username' OR email='$username'";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) == 1) {
        // Get user details
        $row = mysqli_fetch_assoc($result);
        
        // Verify password
        if (password_verify($password, $row['password'])) {
            // Start session and store user data
            $_SESSION['loggedin'] = true;
            $_SESSION['id'] = $row['id'];
            $_SESSION['username'] = $row['username'];
            $_SESSION['email'] = $row['email'];
            $_SESSION['admin'] = $row['is_admin'];

            // Redirect based on user role
            if ($_SESSION['admin'] == 1) {
                header("Location: admin_dashboard.php");
                exit();
            } else {
                header("Location: welcome.php");
                exit();
            }
        } else {
            echo "<div class='error'><i class='fas fa-exclamation-circle'></i> Incorrect password!</div>";
        }
    } else {
        echo "<div class='error'><i class='fas fa-exclamation-circle'></i> Username or email not found!</div>";
    }
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login Page</title>
    <!-- Include Font Awesome for icons -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
            background-color: #f3f3f3;
        }

        .login-container {
            background-color: white;
            padding: 2rem;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
            width: 400px;
        }

        h2 {
            color: #333;
            text-align: center;
            margin-bottom: 1rem;
        }

        .form-group {
            margin-bottom: 1rem;
        }

        label {
            display: block;
            margin-bottom: 0.5rem;
            color: #666;
        }

        input {
            width: 100%;
            padding: 0.5rem;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-sizing: border-box;
        }

        button {
            width: 100%;
            padding: 0.8rem;
            background-color: #337ab7;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            font-size: 1rem;
            transition: background-color 0.3s;
        }

        button:hover {
            background-color: #286090;
        }

        .error {
            color: #d9534f;
            margin-bottom: 1rem;
            padding: 0.5rem;
            border-radius: 4px;
            background-color: #f2dede;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .success {
            color: #3c763d;
            margin-bottom: 1rem;
            padding: 0.5rem;
            border-radius: 4px;
            background-color: #dff0d8;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .form-links {
            text-align: center;
            margin-top: 1rem;
        }

        .form-links a {
            color: #337ab7;
            text-decoration: none;
        }

        .form-links a:hover {
            text-decoration: underline;
        }
    </style>
</head>
<body>
    <div class="login-container">
        <h2>Login</h2>
        
        <?php
        // Show error/success messages here if needed
        ?>

        <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
            <div class="form-group">
                <label for="username">Username or Email:</label>
                <input type="text" id="username" name="username" required placeholder="Enter your username or email">
            </div>

            <div class="form-group">
                <label for="password">Password:</label>
                <input type="password" id="password" name="password" required placeholder="Enter your password">
            </div>

            <button type="submit" name="submit">Login</button>
        </form>

        <div class="form-links">
            <a href="#">Forgot Password?</a> |
            <a href="register.php">Create New Account</a>
        </div>
    </div>
</body>
</html>


// Registration function
if (isset($_POST['register'])) {
    $username = $_POST['username'];
    $email = $_POST['email'];
    $password = password_hash($_POST['password'], PASSWORD_DEFAULT);

    // Check if username or email already exists
    $check_sql = "SELECT * FROM users WHERE username='$username' OR email='$email'";
    $result = mysqli_query($conn, $check_sql);
    
    if (mysqli_num_rows($result) > 0) {
        echo "Username or email already exists!";
    } else {
        // Insert new user
        $insert_sql = "INSERT INTO users (username, email, password) VALUES ('$username', '$email', '$password')";
        if (mysqli_query($conn, $insert_sql)) {
            echo "Registration successful! You can now login.";
        } else {
            echo "Error registering: " . mysqli_error($conn);
        }
    }
}


<?php
// Database configuration
$host = "localhost";
$dbname = "your_database_name";
$username = "your_username";
$password = "your_password";

// Create connection
$conn = new mysqli($host, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function login_user() {
    global $conn;

    // Get user input
    $email_username = $_POST['email_username'];
    $password = $_POST['password'];

    if (empty($email_username) || empty($password)) {
        return show_error("Both email/username and password are required");
    }

    // Sanitize inputs
    $email_username = mysqli_real_escape_string($conn, $email_username);
    $password = mysqli_real_escape_string($conn, $password);

    // Prepare SQL statement to check if user exists
    $stmt = $conn->prepare("SELECT * FROM users WHERE username = ? OR email = ?");
    $stmt->bind_param("ss", $email_username, $email_username);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows === 0) {
        return show_error("Invalid credentials");
    }

    // Fetch user data
    $user = $result->fetch_assoc();

    // Verify password
    if (!password_verify($password, $user['password'])) {
        return show_error("Incorrect password");
    }

    // Set session variables
    $_SESSION['logged_in'] = true;
    $_SESSION['user_id'] = $user['id'];
    $_SESSION['username'] = $user['username'];
    $_SESSION['email'] = $user['email'];

    // Optional: Set last login time and update in database
    date_default_timezone_set("UTC");
    $last_login = date("Y-m-d H:i:s");
    $stmt = $conn->prepare("UPDATE users SET last_login = ? WHERE id = ?");
    $stmt->bind_param("si", $last_login, $user['id']);
    $stmt->execute();

    // Redirect to dashboard or home page
    header("Location: dashboard.php");
    exit();
}

function show_error($message) {
    echo "<div class='error'>$message</div>";
    return false;
}
?>


<?php
// Database connection details
$host = "localhost";
$username_db = "root";
$password_db = "";
$database = "user_login";

// Create connection
$conn = mysqli_connect($host, $username_db, $password_db, $database);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

session_start();

// If form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get username and password from form data
    $username = $_POST['username'];
    $password = $_POST['password'];

    // Sanitize input
    $username = stripslashes($username);
    $username = mysqli_real_escape_string($conn, $username);

    $password = stripslashes($password);
    $password = mysqli_real_escape_string($conn, $password);

    // Check if username and password are provided
    if (empty($username) || empty($password)) {
        $error = "Username or Password is invalid";
        echo "<script>alert('$error');</script>";
    } else {
        // Query the database for the user
        $query = "SELECT * FROM users WHERE username='$username'";
        $result = mysqli_query($conn, $query);

        if (mysqli_num_rows($result) == 1) {
            // User exists, verify password
            $row = mysqli_fetch_assoc($result);
            $hash = $row['password'];
            
            // Verify the password using password_verify()
            if (password_verify($password, $hash)) {
                // Password is correct
                $_SESSION['username'] = $username;
                $_SESSION['login'] = true;
                $_SESSION['last_login'] = time();
                
                // Redirect to dashboard or home page
                header("Location: dashboard.php");
                exit();
            } else {
                // Incorrect password
                $error = "Invalid username or password";
                echo "<script>alert('$error');</script>";
            }
        } else {
            // User does not exist
            $error = "User does not exist";
            echo "<script>alert('$error');</script>";
        }
    }
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Login Page</title>
    <!-- Add CSS styles here -->
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f0f0f0;
        }
        .container {
            max-width: 500px;
            margin: 0 auto;
            padding: 20px;
            background-color: white;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }
        .form-group {
            margin-bottom: 20px;
        }
        input {
            width: 100%;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-sizing: border-box;
        }
        button {
            background-color: #4CAF50;
            color: white;
            padding: 14px 20px;
            margin: 8px 0;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            width: 100%;
        }
        button:hover {
            background-color: #45a049;
        }
        .register-link {
            text-align: center;
            margin-top: 20px;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>Login</h1>
        <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
            <div class="form-group">
                <input type="text" name="username" placeholder="Enter username" required>
            </div>
            <div class="form-group">
                <input type="password" name="password" placeholder="Enter password" required>
            </div>
            <button type="submit">Login</button>
        </form>
        <div class="register-link">
            Don't have an account? <a href="register.php">Register here</a>
        </div>
    </div>
</body>
</html>

// Close database connection
mysqli_close($conn);
?>


<?php
// Database connection details and session start
session_start();
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST['username'];
    $password = password_hash($_POST['password'], PASSWORD_DEFAULT);
    
    // Insert into database
    $query = "INSERT INTO users (username, password) VALUES ('$username', '$password')";
    mysqli_query($conn, $query);
    header("Location: login.php");
}
?>


<?php
// Database connection details
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

try {
    // Create a PDO instance
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Retrieve username and password from form
    $username = $_POST['username'];
    $password = $_POST['password'];

    try {
        // Prepare SQL query to select user with given username
        $stmt = $conn->prepare("SELECT * FROM users WHERE username = ?");
        $stmt->execute([$username]);
        
        // Fetch the result
        $user = $stmt->fetch(PDO::FETCH_ASSOC);

        if ($user) {
            // Verify password
            if (password_verify($password, $user['password'])) {
                // Password is correct
                session_start();
                
                // Store user details in session
                $_SESSION["loggedin"] = true;
                $_SESSION["id"] = $user['id'];
                $_SESSION["username"] = $user['username'];

                // Redirect to dashboard or home page
                header("location: dashboard.php");
                exit();
            } else {
                // Password is incorrect
                echo "Incorrect password!";
            }
        } else {
            // User does not exist
            echo "User does not exist!";
        }
    } catch(PDOException $e) {
        echo "Error: " . $e->getMessage();
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login Page</title>
</head>
<body>
    <h2>Login</h2>
    <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
        Username: <input type="text" name="username"><br>
        Password: <input type="password" name="password"><br>
        <input type="submit" value="Login">
    </form>
</body>
</html>


// logout.php
<?php
session_start();
unset($_SESSION["loggedin"]);
unset($_SESSION["id"]);
unset($_SESSION["username"]);
session_destroy();
header("location: login.php");
exit();
?>


<?php
// Start the session
session_start();

// Include database configuration file
include_once('db_config.php');

function loginUser() {
    // Check if form is submitted
    if (!empty($_POST['username']) && !empty($_POST['password'])) {
        $username = $_POST['username'];
        $password = $_POST['password'];

        try {
            // Prepare the query to fetch user data based on username
            $stmt = $pdo->prepare("SELECT id, username, password FROM users WHERE username = ?");
            $stmt->bindParam(1, $username);
            $stmt->execute();

            // Fetch user data
            $row = $stmt->fetch(PDO::FETCH_ASSOC);

            if ($row) {
                // Verify the password
                if (password_verify($password, $row['password'])) {
                    // Password is correct
                    $_SESSION['username'] = $row['username'];
                    $_SESSION['user_id'] = $row['id'];
                    $_SESSION['logged_in'] = true;

                    return "Login successful!";
                } else {
                    // Incorrect password
                    return "Incorrect password. Please try again.";
                }
            } else {
                // User doesn't exist
                return "Username does not exist. Please register first.";
            }

        } catch (PDOException $e) {
            die("Error: " . $e->getMessage());
        }
    } else {
        // Empty fields
        return "Please fill in all required fields!";
    }
}

// Call the login function and store the result
$message = loginUser();

// Redirect to dashboard or show message
if (!empty($_SESSION['logged_in'])) {
    header("Location: dashboard.php");
} else {
    echo $message;
}
?>


<?php

// Database configuration
$servername = "localhost";
$username_db = "username";
$password_db = "password";
$dbname = "myDB";

function user_login($username, $password) {
    // Check if username and password are provided
    if (empty($username) || empty($password)) {
        return array("error" => true, "message" => "Username and password are required");
    }

    // Database connection
    global $servername, $username_db, $password_db, $dbname;
    
    try {
        $conn = new mysqli($servername, $username_db, $password_db, $dbname);
        
        if ($conn->connect_error) {
            return array("error" => true, "message" => "Connection failed: " . $conn->connect_error);
        }

        // Prepare and bind
        $stmt = $conn->prepare("SELECT id, username, password, login_attempts, lockout_time FROM users WHERE username = ?");
        $stmt->bind_param("s", $username);

        $stmt->execute();
        
        $result = $stmt->get_result();

        if ($result->num_rows == 0) {
            return array("error" => true, "message" => "Username does not exist");
        }

        // Fetch the user data
        $user = $result->fetch_assoc();

        // Check for account lockout (too many failed attempts)
        if ($user['login_attempts'] >= 5 && time() < $user['lockout_time']) {
            return array("error" => true, "message" => "Account locked. Please try again later.");
        }

        // Verify password
        if (!password_verify($password, $user['password'])) {
            // Update login attempts and lockout time if necessary
            $new_attempts = $user['login_attempts'] + 1;
            
            if ($new_attempts >= 5) {
                $lockout_time = time() + (5 * 60); // Lock for 5 minutes
            } else {
                $lockout_time = $user['lockout_time'];
            }

            $stmt_update = $conn->prepare("UPDATE users SET login_attempts = ?, lockout_time = ? WHERE id = ?");
            $stmt_update->bind_param("iii", $new_attempts, $lockout_time, $user['id']);
            $stmt_update->execute();

            return array("error" => true, "message" => "Incorrect password");
        }

        // Reset login attempts on successful login
        $stmt_reset = $conn->prepare("UPDATE users SET login_attempts = 0 WHERE id = ?");
        $stmt_reset->bind_param("i", $user['id']);
        $stmt_reset->execute();

        // Start session and store user data
        session_start();
        $_SESSION['username'] = $user['username'];
        $_SESSION['user_id'] = $user['id'];
        $_SESSION['login_time'] = time();

        return array("error" => false, "message" => "Login successful");

    } catch (Exception $e) {
        return array("error" => true, "message" => "An error occurred: " . $e->getMessage());
    }
}

// Example usage:
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST['username'];
    $password = $_POST['password'];

    $result = user_login($username, $password);

    if (!$result['error']) {
        // Redirect to dashboard or home page
        header("Location: dashboard.php");
        exit();
    } else {
        echo $result['message'];
    }
}

$conn->close();

?>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'mydatabase';
$username = 'root';
$password = '';

try {
    // Create connection
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

    if ($_SERVER['REQUEST_METHOD'] == 'POST') {
        // Sanitize input data
        $username_login = $_POST['username'];
        $password_login = $_POST['password'];

        try {
            // Prepare and execute query to check user credentials
            $stmt = $conn->prepare("SELECT * FROM users WHERE username = ?");
            $stmt->execute([$username_login]);

            // Check if user exists
            $user = $stmt->fetch(PDO::FETCH_ASSOC);
            if (!$user) {
                die('Username not found!');
            }

            // Verify password
            if (!password_verify($password_login, $user['password'])) {
                die('Incorrect password!');
            }

            // Start session and store user data
            session_start();
            $_SESSION['id'] = $user['id'];
            $_SESSION['username'] = $user['username'];
            $_SESSION['email'] = $user['email'];
            $_SESSION['role'] = $user['role'];

            // Redirect based on user role
            if ($user['role'] == 'admin') {
                header('Location: admin_dashboard.php');
            } else {
                header('Location: user_dashboard.php');
            }
        } catch(PDOException $e) {
            echo "Error: " . $e->getMessage();
        }

    }
} catch(PDOException $e) {
    die("Could not connect to the database: " . $e->getMessage());
}
?>


// During registration:
$raw_password = $_POST['password'];
$hashed_password = password_hash($raw_password, PASSWORD_DEFAULT);
// Store $hashed_password in your database

// When verifying login:
if (password_verify($entered_password, $hashed_password)) {
    // Password matches
} else {
    // Incorrect password
}


<?php
// Database configuration
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

try {
    // Create a new PDO instance
    $pdo = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    // Set error mode to exception
    $pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

function loginUser($pdo) {
    // Check if form was submitted
    if (!empty($_POST['submit'])) {
        $username = $_POST['username'];
        $password = $_POST['password'];

        try {
            // Prepare and execute the query
            $stmt = $pdo->prepare("SELECT * FROM users WHERE username = ?");
            $stmt->execute([$username]);
            
            // Get the result as an associative array
            $user = $stmt->fetch(PDO::FETCH_ASSOC);
            
            // Check if user exists and password is correct
            if ($user && password_verify($password, $user['password'])) {
                // Start session
                session_start();
                
                // Store user data in session variables
                $_SESSION['user_id'] = $user['id'];
                $_SESSION['username'] = $user['username'];
                $_SESSION['login_time'] = time();

                // Redirect to dashboard or home page
                header("Location: dashboard.php");
                exit();
            } else {
                // Invalid credentials
                $error_message = "Invalid username or password.";
            }
        } catch (PDOException $e) {
            // Handle database errors
            die("An error occurred while accessing the database.");
        }
    }
    
    if (!empty($error_message)) {
        echo "<div class='alert alert-danger'>$error_message</div>";
    }
}

// Call the login function
loginUser($pdo);
?>


<?php
session_start();

// Check if user is already logged in
if (isset($_SESSION['logged_in'])) {
    header("Location: dashboard.php");
    exit();
}

$error = "";

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get form data
    $email = htmlspecialchars(trim($_POST['email']));
    $password = htmlspecialchars(trim($_POST['password']));

    // Validate input
    if (empty($email) || empty($password)) {
        $error = "Please fill in all required fields!";
    } else {
        // Database connection (replace with your actual database credentials)
        $db_host = "localhost";
        $db_user = "username";
        $db_pass = "password";
        $db_name = "database";

        // Connect to MySQL server
        $conn = new mysqli($db_host, $db_user, $db_pass, $db_name);

        // Check connection
        if ($conn->connect_error) {
            die("Connection failed: " . $conn->connect_error);
        }

        // Prevent SQL injection
        $email = $conn->real_escape_string($email);
        
        // Query the database for user with this email
        $sql = "SELECT id, password FROM users WHERE email = '$email'";
        $result = $conn->query($sql);

        if ($result->num_rows == 1) {
            $row = $result->fetch_assoc();
            
            // Verify password
            if (password_verify($password, $row['password'])) {
                // Create session variables
                $_SESSION['logged_in'] = true;
                $_SESSION['user_id'] = $row['id'];
                
                // Redirect to dashboard
                header("Location: dashboard.php");
                exit();
            } else {
                $error = "Invalid email or password!";
            }
        } else {
            $error = "Invalid email or password!";
        }

        // Close database connection
        $conn->close();
    }
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login Page</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f0f0f0;
            margin: 0;
            padding: 20px;
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
        }
        .login-container {
            background-color: white;
            padding: 30px;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
            width: 350px;
        }
        .form-group {
            margin-bottom: 20px;
        }
        input[type="text"],
        input[type="password"] {
            width: 100%;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-sizing: border-box;
        }
        button {
            background-color: #4CAF50;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            width: 100%;
        }
        button:hover {
            background-color: #45a049;
        }
        .error {
            color: red;
            margin-bottom: 10px;
        }
    </style>
</head>
<body>
    <div class="login-container">
        <h2>Login</h2>
        <?php if ($error != "") { ?>
            <div class="error"><?php echo $error; ?></div>
        <?php } ?>
        <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="POST">
            <div class="form-group">
                <input type="text" placeholder="Enter your email..." name="email">
            </div>
            <div class="form-group">
                <input type="password" placeholder="Enter your password..." name="password">
            </div>
            <button type="submit" name="submit">Login</button>
        </form>
    </div>
</body>
</html>


<?php
session_start();

// Check if form is submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Sanitize input data
    $username = trim(mysqli_real_escape_string($conn, $_POST['username']));
    $password = trim($_POST['password']);

    // Validate inputs
    if (empty($username) || empty($password)) {
        die("Username and password are required!");
    }

    // Connect to the database
    require_once 'db_connection.php';

    // Query the database for the user
    $query = "SELECT * FROM users WHERE username='$username'";
    $result = mysqli_query($conn, $query);

    if (mysqli_num_rows($result) == 1) {
        $row = mysqli_fetch_assoc($result);
        $stored_password_hash = $row['password'];

        // Verify the password
        if (password_verify($password, $stored_password_hash)) {
            // Password is correct
            $_SESSION['username'] = $username;
            $_SESSION['logged_in'] = true;

            // Redirect to dashboard or home page
            header("Location: dashboard.php");
            exit();
        } else {
            die("Incorrect password!");
        }
    } else {
        die("Username does not exist!");
    }

    // Close the database connection
    mysqli_close($conn);
}
?>


<?php
$host = 'localhost';
$username_db = 'root';
$password_db = '';
$database = 'my_database';

$conn = mysqli_connect($host, $username_db, $password_db, $database);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}
?>


$password = password_hash($_POST['password'], PASSWORD_DEFAULT);
// Use this hash when storing in your database


<?php
// Start session
session_start();

function user_login($username, $password) {
    // Database connection details
    $host = "localhost";
    $db_username = "root";
    $db_password = "";
    $dbname = "mydatabase";

    // Connect to database
    $conn = mysqli_connect($host, $db_username, $db_password, $dbname);

    // Check connection
    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
    }

    // Sanitize input
    $username = mysqli_real_escape_string($conn, $username);
    $password = mysqli_real_escape_string($conn, $password);

    // Prepare SQL query to select user with the given username
    $stmt = $conn->prepare("SELECT * FROM users WHERE username = ?");
    $stmt->bind_param("s", $username);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows == 1) {
        // Get user data
        $user = $result->fetch_assoc();

        // Verify password
        if (password_verify($password, $user['password'])) {
            // Create session variables
            $_SESSION['username'] = $user['username'];
            $_SESSION['id'] = $user['id'];
            $_SESSION['email'] = $user['email'];

            // Close database connection
            mysqli_close($conn);

            return true;
        } else {
            // Incorrect password
            return false;
        }
    } else {
        // No user found with that username
        return false;
    }
}

// Example usage:
if (isset($_POST['login'])) {
    $username = $_POST['username'];
    $password = $_POST['password'];

    if (user_login($username, $password)) {
        header("Location: dashboard.php");
    } else {
        echo "Invalid username or password";
    }
}
?>


<?php
session_start();

// Database configuration
$host = 'localhost';
$db_user = 'root';
$db_password = '';
$db_name = 'login_system';

// Connect to database
$conn = mysqli_connect($host, $db_user, $db_password, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Check if form is submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Sanitize input data
    $username = htmlspecialchars($_POST['username']);
    $password = htmlspecialchars($_POST['password']);

    // Prepare and execute SQL query
    $stmt = mysqli_prepare($conn, "SELECT * FROM users WHERE username = ?");
    mysqli_stmt_bind_param($stmt, 's', $username);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);

    if (mysqli_num_rows($result) == 0) {
        // User not found
        echo "<script>alert('Username does not exist. Please try again.');
              window.setTimeout(function(){window.location.href='login.php';}, 1500);
              </script>";
        exit();
    }

    $user = mysqli_fetch_assoc($result);

    if (md5($password) !== $user['password']) {
        // Password is incorrect
        echo "<script>alert('Incorrect password. Please try again.');
              window.setTimeout(function(){window.location.href='login.php';}, 1500);
              </script>";
        exit();
    }

    // Start session and store user data
    $_SESSION['username'] = $user['username'];
    $_SESSION['user_id'] = $user['id'];

    // Redirect to welcome page
    header("Location: welcome.php");
    exit();
}

// Close database connection
mysqli_close($conn);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login Page</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            margin: 0;
            background-color: #f0f0f0;
        }
        
        .login-container {
            background-color: white;
            padding: 20px;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
            width: 300px;
        }
        
        .form-group {
            margin-bottom: 15px;
        }
        
        input[type='text'],
        input[type='password'] {
            width: 100%;
            padding: 8px;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-sizing: border-box;
        }
        
        button {
            background-color: #4CAF50;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            width: 100%;
        }
        
        button:hover {
            background-color: #45a049;
        }
    </style>
</head>
<body>
    <div class="login-container">
        <h2>Login</h2>
        <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="POST">
            <div class="form-group">
                <label for="username">Username:</label>
                <input type="text" id="username" name="username" required>
            </div>
            <div class="form-group">
                <label for="password">Password:</label>
                <input type="password" id="password" name="password" required>
            </div>
            <button type="submit">Login</button>
        </form>
    </div>
</body>
</html>


<?php
session_start();

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = trim($_POST['email']);
    $password = $_POST['password'];

    // Database connection parameters
    $host = 'localhost';
    $dbUsername = 'root';
    $dbPassword = '';
    $dbName = 'login';

    try {
        $conn = new PDO("mysql:host=$host;dbname=$dbName", $dbUsername, $dbPassword);
        $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

        // Prepare and execute the query
        $stmt = $conn->prepare("SELECT id, username, password FROM users WHERE email = ?");
        $stmt->execute([$email]);

        $user = $stmt->fetch(PDO::FETCH_ASSOC);

        if ($user) {
            // Verify password
            if (password_verify($password, $user['password'])) {
                // Start session and store user data
                $_SESSION['user_id'] = $user['id'];
                $_SESSION['username'] = $user['username'];
                header("Location: welcome.php");
                exit();
            } else {
                echo "Invalid password!";
            }
        } else {
            echo "Email not found!";
        }

    } catch(PDOException $e) {
        die("Connection failed: " . $e->getMessage());
    }
}
?>


<?php
session_start();

// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$db_name = 'mydatabase';

try {
    $conn = new PDO("mysql:host=$host;dbname=$db_name", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

if (isset($_SESSION['username'])) {
    // User is already logged in
    echo "Welcome back, ".$_SESSION['username']."!";
    exit();
}

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST['username'];
    $password = $_POST['password'];

    try {
        // Prepare SQL statement to select user with matching username
        $stmt = $conn->prepare("SELECT * FROM users WHERE username = :username");
        $stmt->execute([':username' => $username]);
        
        $user = $stmt->fetch(PDO::FETCH_ASSOC);

        if ($user) {
            // Verify password
            if (password_verify($password, $user['password'])) {
                // Password is correct
                session_regenerate(true); // Regenerate session ID to prevent fixation
                $_SESSION['user_id'] = $user['id'];
                $_SESSION['username'] = $user['username'];
                $_SESSION['logged_in'] = true;

                // Optional: Set last login time
                date_default_timezone_set('UTC');
                $last_login = date('Y-m-d H:i:s');
                
                $stmt = $conn->prepare("UPDATE users SET last_login = :last_login WHERE id = :id");
                $stmt->execute([':last_login' => $last_login, ':id' => $user['id']]);

                // Redirect to dashboard or home page
                header("Location: dashboard.php");
                exit();
            } else {
                // Password is incorrect
                $_SESSION['error'] = "Invalid username or password";
            }
        } else {
            // Username not found
            $_SESSION['error'] = "Invalid username or password";
        }
    } catch (PDOException $e) {
        die("An error occurred: " . $e->getMessage());
    }
}

// Close database connection
$conn = null;

// Display login form
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login Page</title>
</head>
<body>
    <?php if (isset($_SESSION['error'])) { ?>
        <div style="color: red;"><?=$_SESSION['error']?></div>
    <?php } ?>

    <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]);?>">
        Username: <input type="text" name="username" required><br>
        Password: <input type="password" name="password" required><br>
        <input type="submit" value="Login">
    </form>

    <?php if (!isset($_SESSION['username'])) { ?>
        <a href="register.php">Create an account</a>
    <?php } ?>

    <?php if (isset($_SESSION['username'])) { ?>
        <a href="logout.php">Logout</a>
    <?php } ?>
</body>
</html>

<?php
// Optional: Destroy session data after request
if (!isset($_SESSION['username'])) {
    $_SESSION = array();
    session_unset();
    session_destroy();
}
?>


<?php
// Database connection settings
$host = 'localhost';
$user = 'root';
$password = '';
$db_name = 'your_database';

// Create database connection
$conn = new mysqli($host, $user, $password, $db_name);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to handle user login
function loginUser() {
    global $conn;

    // Check if form is submitted
    if ($_SERVER['REQUEST_METHOD'] == 'POST') {
        $username = $_POST['username'];
        $password = $_POST['password'];

        // Sanitize input data
        $username = htmlspecialchars(strip_tags($username));
        $password = htmlspecialchars(strip_tags($password));

        // Check if username and password are provided
        if (empty($username) || empty($password)) {
            echo "Username or password cannot be empty.";
            return;
        }

        // Prepare SQL statement to select user
        $stmt = $conn->prepare("SELECT * FROM users WHERE username = ?");
        $stmt->bind_param("s", $username);
        
        if ($stmt->execute()) {
            $result = $stmt->get_result();
            if ($result->num_rows == 1) {
                $user_data = $result->fetch_assoc();

                // Verify password
                if (password_verify($password, $user_data['password'])) {
                    // Set session variables
                    session_start();
                    $_SESSION['user_id'] = $user_data['id'];
                    $_SESSION['logged_in'] = true;
                    
                    // Redirect to dashboard
                    header("Location: dashboard.php");
                    exit();
                } else {
                    echo "Incorrect password.";
                }
            } else {
                echo "Username does not exist.";
            }
        } else {
            echo "Error executing query: " . $stmt->error;
        }

        $stmt->close();
    }
}

// Call the login function
loginUser();

// Close database connection
$conn->close();
?>


session_start();


<?php
session_start();
session_unset();
session_destroy();
header("Location: login.php");
exit();
?>


<?php
session_start();

// Database configuration
$host = "localhost";
$usernameDb = "your_username";
$passwordDb = "your_password";
$database = "login_system";

// Connect to database
$conn = mysqli_connect($host, $usernameDb, $passwordDb, $database);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

if (isset($_POST['submit'])) {
    // Sanitize input data
    $username = mysqli_real_escape_string($conn, $_POST['username']);
    $password = md5(mysqli_real_escape_string($conn, $_POST['password']));

    // Validate input fields
    if (empty($username) || empty($password)) {
        echo "Please fill in all required fields!";
    } else {
        // Check if user exists in database
        $query = "SELECT * FROM users WHERE username='$username'";
        $result = mysqli_query($conn, $query);
        $user_data = mysqli_fetch_assoc($result);

        if (!$user_data) {
            echo "User does not exist!";
        } else {
            // Verify password
            if ($password == $user_data['password']) {
                // Set session variables
                $_SESSION['username'] = $user_data['username'];
                $_SESSION['logged_in'] = true;

                // Redirect to dashboard or home page
                header("Location: dashboard.php");
                exit();
            } else {
                echo "Invalid password!";
            }
        }
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login Page</title>
    <style>
        body { font-family: Arial, sans-serif; }
        .container { max-width: 500px; margin: 0 auto; padding: 20px; }
        .form-group { margin-bottom: 15px; }
        input { width: 100%; padding: 8px; }
        button { background-color: #4CAF50; color: white; padding: 10px 16px; border: none; cursor: pointer; width: 100%; }
        .error { color: red; margin-bottom: 10px; }
    </style>
</head>
<body>
    <div class="container">
        <h2>Login Form</h2>
        <?php if (isset($_GET['error'])) { ?>
            <p class="error"><?php echo $_GET['error']; ?></p>
        <?php } ?>

        <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="POST">
            <div class="form-group">
                <input type="text" placeholder="Enter your username..." name="username" required>
            </div>

            <div class="form-group">
                <input type="password" placeholder="Enter your password..." name="password" required>
            </div>

            <button type="submit" name="submit">Login</button>
        </form>

        <p>Don't have an account? <a href="register.php">Register here</a></p>
    </div>
</body>
</html>


<?php
session_start();
if (!isset($_SESSION['logged_in']) || $_SESSION['logged_in'] !== true) {
    header("Location: login.php");
    exit();
}
?>


<?php
// Start session
session_start();

// Database connection
$host = "localhost";
$username = "root";
$password = "";
$dbname = "login_system";

// Create connection
$conn = new mysqli($host, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Sanitize input data
    $username = mysqli_real_escape_string($conn, $_POST['username']);
    $password = $_POST['password'];

    // Check if username exists in the database
    $sql = "SELECT * FROM users WHERE username='$username'";
    $result = $conn->query($sql);

    if ($result->num_rows > 0) {
        // Get user data
        $row = $result->fetch_assoc();
        $hashed_password = $row['password'];

        // Verify password
        if (password_verify($password, $hashed_password)) {
            // Password is correct
            $_SESSION["username"] = $username;
            echo "Welcome " . $username . "! You have successfully logged in.";
            
            // Redirect to dashboard or home page
            header("Location: dashboard.php");
            exit();
        } else {
            // Incorrect password
            echo "Incorrect username or password";
        }
    } else {
        // Username doesn't exist
        echo "Incorrect username or password";
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login Page</title>
</head>
<body>
    <h2>Login Form</h2>
    <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
        Username: <input type="text" name="username"><br>
        Password: <input type="password" name="password"><br>
        <input type="submit" value="Login">
    </form>
</body>
</html>


<?php
// Start session
session_start();

// Database connection
$host = "localhost";
$username = "root";
$password = "";
$dbname = "login_system";

// Create connection
$conn = new mysqli($host, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Sanitize input data
    $username = mysqli_real_escape_string($conn, $_POST['username']);
    $password = $_POST['password'];

    // Hash the password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

    // Check if username already exists
    $sql = "SELECT * FROM users WHERE username='$username'";
    $result = $conn->query($sql);

    if ($result->num_rows > 0) {
        echo "Username already exists!";
    } else {
        // Insert new user into the database
        $sql = "INSERT INTO users (username, password)
                VALUES ('$username', '$hashed_password')";
        
        if ($conn->query($sql)) {
            echo "New user created successfully! You can now login.";
            header("Location: login.php");
            exit();
        } else {
            echo "Error: " . $sql . "<br>" . $conn->error;
        }
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Registration Page</title>
</head>
<body>
    <h2>Registration Form</h2>
    <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
        Username: <input type="text" name="username"><br>
        Password: <input type="password" name="password"><br>
        <input type="submit" value="Register">
    </form>
</body>
</html>


<?php
// Database configuration
define('DB_HOST', 'localhost');
define('DB_USER', 'root');
define('DB_PASS', '');
define('DB_NAME', 'test_db');

function user_login($username, $password) {
    $result = array();
    
    // Connect to database
    $conn = mysqli_connect(DB_HOST, DB_USER, DB_PASS, DB_NAME);
    
    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
        return;
    }
    
    try {
        // Prepare SQL query
        $stmt = $conn->prepare("SELECT * FROM users WHERE username = ?");
        $stmt->bind_param('s', $username);
        
        if ($stmt->execute()) {
            $result = $stmt->get_result()->fetch_assoc();
            
            if ($result) {
                // Verify password
                if (password_verify($password, $result['password'])) {
                    $result['status'] = 1;
                } else {
                    $result['status'] = 0;
                    $result['message'] = "Incorrect username or password";
                }
            } else {
                $result['status'] = 0;
                $result['message'] = "User not found";
            }
        } else {
            $result['status'] = 0;
            $result['message'] = "Error executing query";
        }
    } catch (Exception $e) {
        $result['status'] = 0;
        $result['message'] = "An error occurred: " . $e->getMessage();
    }
    
    // Close database connection
    mysqli_close($conn);
    
    return $result;
}

// Example usage:
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST['username'];
    $password = $_POST['password'];
    
    $login_result = user_login($username, $password);
    
    if ($login_result['status'] == 1) {
        // Successful login
        session_start();
        $_SESSION['user_id'] = $login_result['id'];
        header("Location: dashboard.php");
    } else {
        // Display error message
        echo "Error: " . $login_result['message'];
    }
}
?>


<?php
session_start();

// Database configuration
$host = 'localhost';
$username_db = 'root';
$password_db = '';
$dbname = 'mydatabase';

// Connect to database
$conn = mysqli_connect($host, $username_db, $password_db, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Check if form is submitted
if (isset($_POST['submit'])) {
    // Sanitize input data
    $username = htmlspecialchars(mysqli_real_escape_string($conn, $_POST['username']));
    $password = htmlspecialchars(mysqli_real_escape_string($conn, $_POST['password']));

    // Query to check if username exists
    $sql = "SELECT * FROM users WHERE username = '$username'";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) == 0) {
        echo "Username does not exist!";
    } else {
        // Get user data
        $user = mysqli_fetch_assoc($result);
        
        // Verify password
        if (md5($password) === $user['password']) {
            // Start session and store user details
            $_SESSION['id'] = $user['id'];
            $_SESSION['username'] = $user['username'];
            $_SESSION['email'] = $user['email'];

            // Redirect to dashboard
            header("Location: dashboard.php");
            exit();
        } else {
            echo "Incorrect password!";
        }
    }
}

// Close database connection
mysqli_close($conn);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login Page</title>
</head>
<body>
    <h2>Login</h2>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="POST">
        <input type="text" name="username" placeholder="Username" required><br>
        <input type="password" name="password" placeholder="Password" required><br>
        <button type="submit" name="submit">Login</button>
    </form>
</body>
</html>


<?php
session_start();
unset($_SESSION['id']);
unset($_SESSION['username']);
unset($_SESSION['email']);
session_destroy();

header("Location: login.php");
exit();
?>


<?php
session_start();
if (!isset($_SESSION['id'])) {
    header("Location: login.php");
    exit();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Dashboard</title>
</head>
<body>
    <h2>Welcome, <?php echo $_SESSION['username']; ?></h2>
    <p>Your email address is: <?php echo $_SESSION['email']; ?></p>
    <a href="logout.php">Logout</a>
</body>
</html>


<?php
session_start();
// Database connection
$host = "localhost";
$username = "root";
$password = "";
$dbname = "login_system";

$conn = mysqli_connect($host, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST['username'];
    $password = md5($_POST['password']);

    // SQL injection prevention using mysqli_real_escape_string
    $username = mysqli_real_escape_string($conn, $username);
    $password = mysqli_real_escape_string($conn, $password);

    // Query to check if the username and password exist in the database
    $sql = "SELECT * FROM users WHERE username='$username' AND password='$password'";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) == 1) {
        // Set session variables
        $_SESSION['loggedin'] = true;
        $_SESSION['username'] = $username;
        
        // Optional: Get user ID from the result
        $row = mysqli_fetch_assoc($result);
        $_SESSION['id'] = $row['id'];
        
        // Redirect to dashboard or home page after login
        header("Location: dashboard.php");
        exit();
    } else {
        // Incorrect password or username
        echo "Invalid username or password!";
    }
}

// Close the database connection
mysqli_close($conn);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login Page</title>
</head>
<body>
    <h2>Login Form</h2>
    <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
        Username: <input type="text" name="username"><br>
        Password: <input type="password" name="password"><br>
        <input type="submit" value="Login">
    </form>
</body>
</html>


<?php
session_start();

// Database connection details
$host = 'localhost';
$user = 'root'; // MySQL username
$password = ''; // MySQL password
$dbname = 'mydatabase'; // Your database name

// Connect to MySQL database
$conn = new mysqli($host, $user, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Check if form is submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Get form data
    $username = $conn->real_escape_string($_POST['username']);
    $password = $_POST['password'];

    // Sanitize and validate input
    $username = filter_var($username, FILTER_SANITIZE_STRING);
    $password = filter_var($password, FILTER_SANITIZE_STRING);

    // Prevent SQL Injection using prepared statements
    $stmt = $conn->prepare("SELECT * FROM users WHERE username = ?");
    $stmt->bind_param('s', $username);
    $stmt->execute();

    // Store result in a variable
    $result = $stmt->get_result();
    
    if ($row = $result->fetch_assoc()) {
        // Verify password
        if (password_verify($password, $row['password'])) {
            // Start session and store user data
            $_SESSION['logged_in'] = true;
            $_SESSION['username'] = $row['username'];
            $_SESSION['user_id'] = $row['id'];
            
            // Redirect to dashboard or home page
            header('Location: dashboard.php');
            exit();
        } else {
            echo "Incorrect password!";
        }
    } else {
        echo "Username not found!";
    }

    // Close statement and connection
    $stmt->close();
} else {
    // If form is not submitted, redirect to login page
    header('Location: index.html');
}

$conn->close();
?>


// Registration code (register.php)
session_start();

$conn = new mysqli($host, $user, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $username = $conn->real_escape_string($_POST['username']);
    $password = $_POST['password'];
    
    // Hash password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);
    
    $stmt = $conn->prepare("INSERT INTO users (username, password) VALUES (?, ?)");
    $stmt->bind_param('ss', $username, $hashed_password);
    $stmt->execute();
    
    echo "Registration successful!";
    $stmt->close();
}

$conn->close();


<?php
function userLogin($username, $password, $db) {
    // Check if username and password are provided
    if (empty($username) || empty($password)) {
        return false;
    }

    try {
        // Sanitize the input
        $username = htmlspecialchars(trim($username));
        $password = htmlspecialchars(trim($password));

        // Prepare SQL statement to prevent SQL injection
        $stmt = $db->prepare("SELECT id, username, password FROM users WHERE username = ?");
        $stmt->execute([$username]);
        
        // Check if a user exists with the provided username
        $user = $stmt->fetch(PDO::FETCH_ASSOC);
        if ($stmt->rowCount() != 1) {
            return false;
        }

        // Verify the password using PHP's built-in password verification function
        if (password_verify($password, $user['password'])) {
            // Password is correct
            return true;
        } else {
            // Password is incorrect
            return false;
        }
    } catch(PDOException $e) {
        // Log any errors to a file or database for debugging purposes
        error_log("Login Error: " . $e->getMessage());
        return false;
    }
}
?>


// Assuming $db is your PDO database connection
if (userLogin($_POST['username'], $_POST['password'], $db)) {
    // Start a session
    session_start();
    $_SESSION['username'] = $_POST['username'];
    $_SESSION['id'] = $userId;  // Get user id from the database

    // Redirect to dashboard or home page
    header("Location: dashboard.php");
} else {
    // Show error message
    echo "Invalid username or password";
}


<?php
// Database configuration
$host = 'localhost';
$dbname = 'mydatabase';
$username = 'root';
$password = '';

try {
    // Create a database connection using PDO
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

    // Check if the form is submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        // Get user input
        $email = trim($_POST['email']);
        $pass = trim($_POST['password']);

        // Validate input
        if (empty($email) || empty($pass)) {
            die("Email and password are required!");
        }

        // Prepare the SQL statement to select the user
        $stmt = $conn->prepare("SELECT id, email, password, name FROM users WHERE email = :email");
        $stmt->bindParam(':email', $email);
        $stmt->execute();

        // Fetch the user data
        $user = $stmt->fetch(PDO::FETCH_ASSOC);

        if ($user) {
            // Verify the password
            if (password_verify($pass, $user['password'])) {
                // Password is correct
                session_start();
                $_SESSION['id'] = $user['id'];
                $_SESSION['name'] = $user['name'];
                $_SESSION['email'] = $user['email'];

                // Redirect to dashboard or home page
                header("Location: dashboard.php");
                exit();
            } else {
                // Password is incorrect
                echo "Incorrect password!";
            }
        } else {
            // No user found with the given email
            echo "No account found with this email!";
        }
    }

} catch (PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login Page</title>
</head>
<body>
    <h2>Login</h2>
    <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
        Email: <input type="text" name="email"><br>
        Password: <input type="password" name="password"><br>
        <input type="submit" value="Login">
    </form>
</body>
</html>


<?php
// Database connection file
include('db_connection.php');

session_start();

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = mysqli_real_escape_string($conn, $_POST['email']);
    $password = $_POST['password'];

    // Hash the password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT, ['cost' => 12]);

    // Query to check user credentials
    $sql = "SELECT * FROM users WHERE email = '$email'";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) == 1) {
        $row = mysqli_fetch_assoc($result);
        
        // Verify password
        if (password_verify($password, $row['password'])) {
            // Start session and store user details
            $_SESSION['id'] = $row['id'];
            $_SESSION['name'] = $row['name'];
            $_SESSION['email'] = $row['email'];
            
            // Redirect to dashboard
            header("Location: dashboard.php");
            exit();
        } else {
            $error = "Invalid email or password";
        }
    } else {
        $error = "Invalid email or password";
    }

    if (isset($error)) {
        echo "<script>alert('$error');</script>";
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login Page</title>
    <style>
        .login-form {
            width: 300px;
            margin: 0 auto;
            padding: 20px;
            border: 1px solid #ccc;
            border-radius: 5px;
        }
        .form-group {
            margin-bottom: 10px;
        }
        input {
            width: 100%;
            padding: 8px;
            margin-top: 5px;
            border: 1px solid #ccc;
            border-radius: 4px;
        }
        button {
            width: 100%;
            padding: 10px;
            background-color: #4CAF50;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
        button:hover {
            background-color: #45a049;
        }
    </style>
</head>
<body>
    <div class="login-form">
        <h2>Login</h2>
        <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
            <div class="form-group">
                <input type="email" name="email" placeholder="Enter your email" required>
            </div>
            <div class="form-group">
                <input type="password" name="password" placeholder="Enter your password" required>
            </div>
            <button type="submit">Login</button>
        </form>
        <p>Don't have an account? <a href="register.php">Register here</a></p>
    </div>
</body>
</html>


<?php
session_start();
require_once('config.php'); // Include your database connection file

function sanitizeInput($data) {
    $data = trim($data);
    $data = htmlspecialchars($data);
    $data = mysqli_real_escape_string($GLOBALS['conn'], $data);
    return $data;
}

if (isset($_POST['login'])) {
    $username = sanitizeInput($_POST['username']);
    $password = $_POST['password'];

    if (empty($username) || empty($password)) {
        die("Username and password are required!");
    }

    // Query the database for the user
    $sql = "SELECT * FROM users WHERE username = ?";
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, "s", $username);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);

    if (mysqli_num_rows($result) == 0) {
        die("Invalid username or password!");
    }

    $user = mysqli_fetch_assoc($result);
    
    // Verify the password
    if (!password_verify($password, $user['password'])) {
        die("Invalid username or password!");
    }

    // Start session and store user data
    $_SESSION['user_id'] = $user['id'];
    $_SESSION['username'] = $user['username'];
    $_SESSION['login_time'] = time();

    // Regenerate the session ID to prevent session fixation attacks
    session_regenerate(true);

    // Redirect to dashboard or home page
    header("Location: dashboard.php");
    exit();
}
?>


<?php
session_start();

// Database connection details
$host = 'localhost';
$username = 'root'; // Change to your database username
$password = '';      // Change to your database password
$db_name = 'my_login_db';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

if (isset($_POST['login'])) {
    // Sanitize input data
    $email = htmlspecialchars(mysqli_real_escape_string($conn, $_POST['email']));
    $password = htmlspecialchars(mysqli_real_escape_string($conn, $_POST['password']));

    // Check if email exists in the database
    $sql = "SELECT * FROM users WHERE email='$email'";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) == 1) {
        $row = mysqli_fetch_assoc($result);
        $hashed_password = $row['password'];

        // Verify password
        if (password_verify($password, $hashed_password)) {
            // Start session and store user data
            $_SESSION['id'] = $row['id'];
            $_SESSION['name'] = $row['name'];
            $_SESSION['email'] = $row['email'];

            // Redirect to dashboard or another page
            header("Location: dashboard.php");
            exit();
        } else {
            echo "Incorrect password!";
        }
    } else {
        echo "Email does not exist!";
    }
}

// Close database connection
mysqli_close($conn);
?>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

try {
    // Create database connection
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

    // Function to sanitize input data
    function sanitizeInput($data) {
        $data = trim($data);
        $data = htmlspecialchars($data);
        return $data;
    }

    // Check if form is submitted
    if (isset($_POST['submit'])) {
        $email = sanitizeInput($_POST['email']);
        $pass = $_POST['password'];

        // Prepare query to check for existing user
        $stmt = $conn->prepare("SELECT * FROM users WHERE email = ?");
        $stmt->execute([$email]);
        
        $row = $stmt->fetch(PDO::FETCH_ASSOC);

        if ($row) {
            // Verify password
            if (password_verify($pass, $row['password'])) {
                // Password is correct
                session_start();
                $_SESSION['id'] = $row['id'];
                $_SESSION['username'] = $row['username'];

                // Redirect to dashboard or home page
                header("Location: dashboard.php");
                exit();
            } else {
                echo "Incorrect password";
            }
        } else {
            echo "User does not exist. Please check your email address.";
        }
    }
} catch (PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}
?>


<?php
session_start();

// Database configuration
$host = "localhost";
$username_db = "root";
$password_db = "";
$db_name = "login_system";

// Connect to database
$conn = new mysqli($host, $username_db, $password_db, $db_name);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

if (isset($_POST['submit'])) {
    // Get form data
    $username = trim($_POST['username']);
    $password = trim($_POST['password']);

    // Validate input
    if (empty($username) || empty($password)) {
        echo "Please fill in all fields";
    } else {
        // Prepare SQL statement to prevent SQL injection
        $stmt = $conn->prepare("SELECT * FROM users WHERE username = ?");
        $stmt->bind_param("s", $username);
        $stmt->execute();
        
        $result = $stmt->get_result();

        if ($result->num_rows == 1) {
            // User exists, verify password
            $user_data = $result->fetch_assoc();
            
            if (password_verify($password, $user_data['password'])) {
                // Password is correct
                $_SESSION['username'] = $user_data['username'];
                $_SESSION['logged_in'] = true;
                
                header("Location: dashboard.php");
                exit();
            } else {
                // Incorrect password
                echo "Incorrect password";
            }
        } else {
            // User does not exist
            echo "Username does not exist";
        }
    }
}

$conn->close();

// Display login form
?>
<!DOCTYPE html>
<html>
<head>
    <title>Login Page</title>
</head>
<body>
    <h2>Login Form</h2>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        Username: <input type="text" name="username"><br>
        Password: <input type="password" name="password"><br>
        <input type="submit" name="submit" value="Login">
    </form>
</body>
</html>


<?php
session_start();
require_once 'config.php'; // Database configuration file

// Function to sanitize input data
function sanitizeInput($data) {
    $data = trim($data);
    $data = stripslashes($data);
    $data = htmlspecialchars($data);
    return $data;
}

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get email and password from form
    $email = sanitizeInput($_POST['email']);
    $password = $_POST['password'];

    try {
        // Connect to the database
        $conn = new PDO("mysql:host=" . DB_HOST . ";dbname=" . DB_NAME, DB_USER, DB_PASS);
        $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

        // Prepare SQL query to fetch user data
        $stmt = $conn->prepare("SELECT * FROM users WHERE email = ?");
        $stmt->execute([$email]);
        $user = $stmt->fetch(PDO::FETCH_ASSOC);

        if ($user) {
            // Verify password
            if (password_verify($password, $user['password'])) {
                // Start session and store user data
                $_SESSION['id'] = $user['id'];
                $_SESSION['username'] = $user['username'];
                $_SESSION['email'] = $user['email'];
                $_SESSION['logged_in'] = true;

                // Remember me functionality
                if (!empty($_POST['remember'])) {
                    // Generate a random token
                    $token = bin2hex(random_bytes(16));
                    $encryptedToken = openssl_encrypt($token, 'AES-256-CBC', HASH_KEY, 0, IV_KEY);

                    setcookie('remember_token', $encryptedToken, time() + (86400 * 30), '/');

                    // Update token in database
                    $stmt = $conn->prepare("UPDATE users SET remember_token = ? WHERE id = ?");
                    $stmt->execute([$token, $user['id']]);
                }

                // Redirect to dashboard
                header('Location: dashboard.php');
                exit();
            } else {
                // Password is incorrect
                $_SESSION['error'] = "Invalid email or password.";
            }
        } else {
            // User doesn't exist
            $_SESSION['error'] = "Invalid email or password.";
        }

    } catch (PDOException $e) {
        die("Connection failed: " . $e->getMessage());
    }
}

// Check for remember me cookie
if (!empty($_COOKIE['remember_token'])) {
    try {
        // Connect to the database
        $conn = new PDO("mysql:host=" . DB_HOST . ";dbname=" . DB_NAME, DB_USER, DB_PASS);
        $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

        // Decrypt token and check in database
        $encryptedToken = $_COOKIE['remember_token'];
        $token = openssl_decrypt($encryptedToken, 'AES-256-CBC', HASH_KEY, 0, IV_KEY);

        $stmt = $conn->prepare("SELECT * FROM users WHERE remember_token = ?");
        $stmt->execute([$token]);
        $user = $stmt->fetch(PDO::FETCH_ASSOC);

        if ($user) {
            // Start session and store user data
            $_SESSION['id'] = $user['id'];
            $_SESSION['username'] = $user['username'];
            $_SESSION['email'] = $user['email'];
            $_SESSION['logged_in'] = true;

            // Redirect to dashboard
            header('Location: dashboard.php');
            exit();
        }

    } catch (PDOException $e) {
        die("Connection failed: " . $e->getMessage());
    }
}

// If no valid session, redirect to login page
if (!isset($_SESSION['logged_in']) || $_SESSION['logged_in'] !== true) {
    header('Location: login.php');
    exit();
}
?>


<?php
define('DB_HOST', 'localhost');
define('DB_NAME', 'your_database_name');
define('DB_USER', 'your_username');
define('DB_PASS', 'your_password');

// Security keys for encryption
define('HASH_KEY', 'your_encryption_key');
define('IV_KEY', 'your_initialization_vector');
?>


<?php
session_start();
include('db_connection.php'); // Include your database connection file

// Check if form is submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST' && isset($_POST['submit'])) {
    $username = $_POST['username'];
    $password = $_POST['password'];

    // Sanitize input to prevent SQL injection
    $username = mysqli_real_escape_string($conn, htmlspecialchars($username));
    $password = mysqli_real_escape_string($conn, htmlspecialchars($password));

    // Check if username and password are not empty
    if (empty($username) || empty($password)) {
        echo "Username or password cannot be empty!";
        exit();
    }

    // Query the database to check user credentials
    $query = "SELECT * FROM users WHERE username = ?";
    $stmt = mysqli_prepare($conn, $query);
    mysqli_stmt_bind_param($stmt, 's', $username);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);

    if ($row = mysqli_fetch_assoc($result)) {
        // Verify password
        if (password_verify($password, $row['password'])) {
            // Password is correct
            $_SESSION['id'] = $row['id'];
            $_SESSION['username'] = $row['username'];
            $_SESSION['email'] = $row['email'];
            
            // Redirect to dashboard or home page
            header("Location: dashboard.php");
            exit();
        } else {
            echo "Incorrect password!";
        }
    } else {
        echo "Username not found!";
    }

    mysqli_close($conn);
}
?>


<?php
// Database connection constants
define('DB_HOST', 'localhost');
define('DB_USER', 'root');
define('DB_PASS', '');
define('DB_NAME', 'mydatabase');

// Create database connection
function db_connect() {
    $mysqli = new mysqli(DB_HOST, DB_USER, DB_PASS, DB_NAME);
    
    if ($mysqli->connect_error) {
        die("Connection failed: " . $mysqli->connect_error);
    }
    return $mysqli;
}

// User login function
function user_login($username, $password) {
    // Escape the inputs to prevent SQL injection
    $username = mysqli_real_escape_string(db_connect(), $username);
    $password = mysqli_real_escape_string(db_connect(), $password);

    // Check if username exists in database
    $query = "SELECT * FROM users WHERE username = '$username'";
    $result = db_connect()->query($query);

    if (!$result->num_rows) {
        return false; // Username does not exist
    }

    // Verify password
    $user_data = $result->fetch_assoc();
    $hash = hash('sha256', $password . $user_data['salt']);

    if ($hash != $user_data['password']) {
        return false; // Password is incorrect
    }

    // Start session and set session variables
    session_start();
    $_SESSION['user_id'] = $user_data['id'];
    $_SESSION['username'] = $user_data['username'];
    $_SESSION['logged_in'] = true;

    if ($user_data['role'] == 'admin') {
        $_SESSION['is_admin'] = true;
    }

    return true; // Login successful
}

// Example usage:
if (isset($_POST['login'])) {
    $username = $_POST['username'];
    $password = $_POST['password'];

    if (user_login($username, $password)) {
        header('Location: dashboard.php');
        exit();
    } else {
        echo "Invalid username or password!";
    }
}
?>


<?php
session_start();

// Database configuration
require_once('config.php');

if (isset($_POST['submit'])) {
    $email = $_POST['email'];
    $password = $_POST['password'];

    // Prepare and execute the SQL query
    $stmt = $pdo->prepare("SELECT * FROM users WHERE email = ?");
    $stmt->execute([$email]);
    
    $user = $stmt->fetch(PDO::FETCH_ASSOC);

    if ($user) {
        // Verify password
        if (password_verify($password, $user['password'])) {
            // Start session and store user data
            $_SESSION['id'] = $user['id'];
            
            // Redirect to dashboard
            header("Location: dashboard.php");
            exit();
        } else {
            $error = "Incorrect password!";
        }
    } else {
        $error = "User does not exist!";
    }
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login Page</title>
    <style>
        .container {
            max-width: 500px;
            margin: 0 auto;
            padding: 20px;
        }
        form {
            background-color: #f2f2f2;
            padding: 20px;
            border-radius: 8px;
        }
        .form-group {
            margin-bottom: 15px;
        }
        input[type="email"],
        input[type="password"] {
            width: 100%;
            padding: 10px;
            margin-top: 5px;
            border: 1px solid #ddd;
            border-radius: 4px;
            resize: vertical;
        }
        button {
            background-color: #4CAF50;
            color: white;
            padding: 12px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
        button:hover {
            background-color: #45a049;
        }
    </style>
</head>
<body>
    <div class="container">
        <h2>Login Page</h2>
        
        <?php
        if (isset($error)) {
            echo "<p style='color: red;'>$error</p>";
        }
        ?>

        <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
            <div class="form-group">
                <label for="email">Email:</label>
                <input type="email" id="email" name="email" required>
            </div>
            
            <div class="form-group">
                <label for="password">Password:</label>
                <input type="password" id="password" name="password" required>
            </div>
            
            <button type="submit" name="submit">Login</button>
        </form>

        <p>Don't have an account? <a href="register.php">Register here</a></p>
    </div>
</body>
</html>


<?php
session_start();

// Database connection details
$host = 'localhost';
$dbUsername = 'root'; // Change this to your database username
$dbPassword = '';     // Change this to your database password
$dbName = 'login_system';

// Connect to the database
$conn = mysqli_connect($host, $dbUsername, $dbPassword, $dbName);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function sanitizeInput($data) {
    $data = htmlspecialchars(strip_tags(trim($data)));
    return $data;
}

if (isset($_POST['login'])) {
    $username = sanitizeInput($_POST['username']);
    $password = $_POST['password'];

    if ($username == "" || $password == "") {
        die("Please fill in all fields.");
    }

    // Prepare and bind
    $stmt = $conn->prepare("SELECT id, username, password FROM users WHERE username=?");
    $stmt->bind_param("s", $username);

    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows == 0) {
        die("Username not found.");
    }

    $row = $result->fetch_assoc();
    $dbPassword = $row['password'];

    // Verify password
    if (!password_verify($password, $dbPassword)) {
        die("Incorrect password.");
    } else {
        // Create session variables
        $_SESSION['user_id'] = $row['id'];
        $_SESSION['username'] = $row['username'];

        // Redirect to dashboard
        header("Location: dashboard.php");
        exit();
    }
}

mysqli_close($conn);
?>


<?php
session_start();
unset($_SESSION['user_id']);
unset($_SESSION['username']);
session_destroy();
header("Location: login.php");
exit();
?>


<?php
// Database configuration
$host = 'localhost';
$username_db = 'root';
$password_db = '';
$db_name = 'login_system';

// Connect to database
$conn = new mysqli($host, $username_db, $password_db, $db_name);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// User login function
function loginUser() {
    global $conn;

    // Check if form is submitted
    if (isset($_POST['login'])) {
        // Sanitize user input
        $username = htmlspecialchars(trim($_POST['username']));
        $password = $_POST['password'];

        if (empty($username) || empty($password)) {
            echo "Please fill in all fields!";
            return;
        }

        // Query the database for the user
        $sql = "SELECT * FROM users WHERE username = ?";
        $stmt = $conn->prepare($sql);
        $stmt->bind_param("s", $username);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows === 1) {
            $user = $result->fetch_assoc();
            // Verify password
            if (password_verify($password, $user['password'])) {
                // Password is correct
                session_start();
                $_SESSION['user_id'] = $user['id'];
                $_SESSION['logged_in'] = true;
                
                header("Location: dashboard.php");
                exit();
            } else {
                echo "Incorrect password!";
            }
        } else {
            echo "Username not found!";
        }
    }
}

// Close database connection
$conn->close();
?>


<?php
session_start();
// Database connection parameters
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'mydatabase';

// Create database connection
$conn = new mysqli($host, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to register a new user
function registerUser($conn, $username, $password, $email) {
    // Hash the password
    $hashedPassword = password_hash($password, PASSWORD_DEFAULT);

    // Prepare SQL statement to insert user data
    $stmt = $conn->prepare("INSERT INTO users (username, password, email) VALUES (?, ?, ?)");
    $stmt->bind_param("sss", $username, $hashedPassword, $email);

    if ($stmt->execute()) {
        return true;
    } else {
        return false;
    }
}

// Function to login user
function loginUser($conn, $username, $password) {
    // Prepare SQL statement to select user by username
    $stmt = $conn->prepare("SELECT id, password FROM users WHERE username = ?");
    $stmt->bind_param("s", $username);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        // Get user data
        $user = $result->fetch_assoc();

        // Verify password
        if (password_verify($password, $user['password'])) {
            // Password is correct
            // Update last login time
            date_default_timezone_set('UTC');
            $current_time = date('Y-m-d H:i:s');
            
            $updateStmt = $conn->prepare("UPDATE users SET last_login = ? WHERE id = ?");
            $updateStmt->bind_param("si", $current_time, $user['id']);
            $updateStmt->execute();

            // Start session and store user data
            $_SESSION['loggedin'] = true;
            $_SESSION['username'] = $username;
            $_SESSION['last_login'] = $current_time;

            return true;
        } else {
            // Password is incorrect
            return false;
        }
    } else {
        // Username not found
        return false;
    }
}

// Check if the registration form was submitted
if (isset($_POST['register'])) {
    $username = $_POST['username'];
    $password = $_POST['password'];
    $email = $_POST['email'];

    if (!empty($username) && !empty($password)) {
        if (registerUser($conn, $username, $password, $email)) {
            echo "Registration successful!";
        } else {
            echo "Registration failed. Please try again.";
        }
    } else {
        echo "Please fill in all required fields.";
    }
}

// Check if the login form was submitted
if (isset($_POST['login'])) {
    $username = $_POST['username'];
    $password = $_POST['password'];

    if (!empty($username) && !empty($password)) {
        if (loginUser($conn, $username, $password)) {
            echo "Login successful!";
            header("Location: dashboard.php");
            exit();
        } else {
            echo "Invalid username or password.";
        }
    } else {
        echo "Please fill in all required fields.";
    }
}

// Close database connection
$conn->close();
?>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

// Create database connection
$conn = new mysqli($host, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to login user
function loginUser() {
    global $conn;

    // Get input values
    $username = $_POST['username'];
    $password = $_POST['password'];

    // Check if username and password are provided
    if (empty($username) || empty($password)) {
        echo "Username or password cannot be empty!";
        return;
    }

    // Query the database for the user
    $stmt = $conn->prepare("SELECT id, username, password FROM users WHERE username = ?");
    $stmt->bind_param("s", $username);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        // Get user data
        $user = $result->fetch_assoc();

        // Verify password
        if (password_verify($password, $user['password'])) {

            // Password is correct
            session_start();
            $_SESSION['id'] = $user['id'];
            $_SESSION['username'] = $user['username'];

            // Redirect to dashboard or home page
            header("Location: dashboard.php");
            exit();
        } else {
            echo "Incorrect password!";
        }
    } else {
        echo "Username not found!";
    }

    $stmt->close();
}

// Call the login function if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    loginUser();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login Page</title>
</head>
<body>
    <h2>Login</h2>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        Username: <input type="text" name="username"><br>
        Password: <input type="password" name="password"><br>
        <input type="submit" value="Login">
    </form>
</body>
</html>


<?php
session_start();

// Database configuration
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

try {
    // Connect to the database
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        // Sanitize input
        $email = htmlspecialchars(trim($_POST['email']));
        $password = trim($_POST['password']);

        // Check if email and password are provided
        if (empty($email) || empty($password)) {
            die("Email and password are required!");
        }

        // Prepare the statement to prevent SQL injection
        $stmt = $conn->prepare("SELECT id, email, password FROM users WHERE email = ?");
        $stmt->execute([$email]);
        $user = $stmt->fetch(PDO::FETCH_ASSOC);

        if ($user) {
            // Verify the password
            if (password_verify($password, $user['password'])) {
                // Start session and store user data
                $_SESSION['user_id'] = $user['id'];
                $_SESSION['email'] = $user['email'];
                $_SESSION['logged_in'] = true;

                // Optional: Set a success message
                setcookie('login_message', 'Login successful!', time() + 2, '/', '', false, true);
                
                header("Location: dashboard.php");
                exit();
            } else {
                // Password doesn't match
                $error = "Invalid email or password!";
            }
        } else {
            // User not found
            $error = "Invalid email or password!";
        }
    }

} catch (PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login Page</title>
</head>
<body>
    <?php if (!empty($error)): ?>
        <p style="color: red;"><?php echo $error; ?></p>
    <?php endif; ?>

    <form method="POST" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
        <label>Email:</label><br>
        <input type="email" name="email" required><br>

        <label>Password:</label><br>
        <input type="password" name="password" required><br>

        <button type="submit">Login</button>
    </form>

    <p>Don't have an account? <a href="register.php">Register here</a>.</p>
</body>
</html>


// Add this at the beginning of the script
session_start();
$csrf_token = bin2hex(random_bytes(32));
$_SESSION['csrf_token'] = $csrf_token;

// Add this to the form
<input type="hidden" name="csrf_token" value="<?php echo $csrf_token; ?>">

// Add this in the login processing section
if (!isset($_POST['csrf_token']) || $_POST['csrf_token'] !== $_SESSION['csrf_token']) {
    die("Invalid CSRF token!");
}


<?php
session_start();

// Database connection parameters
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

try {
    // Create database connection
    $conn = new mysqli($host, $username, $password, $dbname);

    // Check if connection was successful
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    // Function to sanitize input data
    function sanitizeInput($data) {
        return htmlspecialchars(strip_tags(trim($data)));
    }

    // Function to handle login
    function loginUser($conn, $username, $password) {
        global $loginError;

        // Check if username and password are not empty
        if (empty($username) || empty($password)) {
            $loginError = "Please fill in all fields.";
            return false;
        }

        // Sanitize input data
        $username = sanitizeInput($username);
        $password = sanitizeInput($password);

        // Prepare query to check user credentials
        $query = "SELECT id, username, password FROM users WHERE username = ?";
        $stmt = $conn->prepare($query);
        if (!$stmt) {
            throw new Exception("Error preparing statement: " . $conn->error);
        }

        // Bind parameters
        $stmt->bind_param('s', $username);

        // Execute the query
        $result = $stmt->execute();
        if (!$result) {
            throw new Exception("Error executing query: " . $stmt->error);
        }

        // Get result
        $stmt->store_result();

        // Check if user exists
        if ($stmt->num_rows > 0) {
            $stmt->bind_result($id, $dbUsername, $dbPassword);
            $stmt->fetch();

            // Verify password
            if (password_verify($password, $dbPassword)) {
                // Start session and set session variables
                $_SESSION['logged_in'] = true;
                $_SESSION['user_id'] = $id;
                $_SESSION['username'] = $dbUsername;

                // Set CSRF token for security
                $_SESSION['csrf_token'] = bin2hex(random_bytes(32));

                return true;
            } else {
                $loginError = "Invalid username or password.";
                return false;
            }
        } else {
            $loginError = "Invalid username or password.";
            return false;
        }
    }

    // Check if login form was submitted
    if (isset($_POST['username'], $_POST['password'])) {
        $username = $_POST['username'];
        $password = $_POST['password'];

        if (loginUser($conn, $username, $password)) {
            // Redirect to dashboard or home page after successful login
            header("Location: dashboard.php");
            exit();
        } else {
            echo $loginError;
        }
    }

} catch (Exception $e) {
    die("An error occurred: " . $e->getMessage());
}

// Close database connection
$conn->close();

?>


function registerUser($conn, $username, $password) {
    // Sanitize input data
    $username = sanitizeInput($username);
    $password = sanitizeInput($password);

    // Check if username and password are not empty
    if (empty($username) || empty($password)) {
        return false;
    }

    // Check if username already exists
    $query = "SELECT id FROM users WHERE username = ?";
    $stmt = $conn->prepare($query);
    $stmt->bind_param('s', $username);
    $stmt->execute();
    $stmt->store_result();

    if ($stmt->num_rows > 0) {
        return false; // Username already exists
    }

    // Hash the password
    $hashedPassword = password_hash($password, PASSWORD_DEFAULT);

    // Insert new user into database
    $insertQuery = "INSERT INTO users (username, password) VALUES (?, ?)";
    $stmt = $conn->prepare($insertQuery);
    $stmt->bind_param('ss', $username, $hashedPassword);
    $result = $stmt->execute();

    if ($result) {
        return true;
    } else {
        return false;
    }
}


// Security headers
header("X-Content-Type-Options: nosniff");
header("X-Frame-Options: DENY");
header("X-XSS-Protection: 1; mode=block");
header("Referrer-Policy: strict-origin-when-cross-origin");


<?php
session_start();

// Database connection details
$host = "localhost";
$username_db = "root";
$password_db = "";
$database_name = "login_system";

// Connect to database
$conn = mysqli_connect($host, $username_db, $password_db, $database_name);

// Check if connection is successful
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

if (isset($_POST['submit'])) {
    // Sanitize and validate input data
    $username = mysqli_real_escape_string($conn, trim($_POST['username']));
    $password = mysqli_real_escape_string($conn, trim($_POST['password']));

    if ($username == '' || $password == '') {
        echo "Please fill in all fields!";
        exit();
    }

    // Check username and password against database
    $sql = "SELECT * FROM users WHERE username='$username'";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) != 1) {
        echo "Username not found!";
        exit();
    }

    // Get user details
    $row = mysqli_fetch_assoc($result);
    
    // Verify password
    if (password_verify($password, $row['password'])) {
        // Start session and store user data
        $_SESSION['id'] = $row['id'];
        $_SESSION['username'] = $row['username'];
        $_SESSION['email'] = $row['email'];
        
        // Redirect to dashboard or another page
        header("Location: dashboard.php");
    } else {
        echo "Login failed! Incorrect password.";
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login Page</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
</head>
<body class="bg-light">
    <div class="container mt-5">
        <div class="row justify-content-center">
            <div class="col-md-6 col-lg-4">
                <form method="POST" action="<?php echo $_SERVER['PHP_SELF']; ?>">
                    <h3 class="text-center mb-4">Login</h3>
                    <div class="form-group">
                        <input type="text" name="username" class="form-control" placeholder="Username" required>
                    </div>
                    <div class="form-group">
                        <input type="password" name="password" class="form-control" placeholder="Password" required>
                    </div>
                    <button type="submit" name="submit" class="btn btn-primary btn-block">Login</button>
                </form>
                <p class="text-center mt-3">Don't have an account? <a href="register.php">Register here</a></p>
            </div>
        </div>
    </div>

    <!-- Display error messages -->
    <?php
    if (isset($_GET['error'])) {
        $error = $_GET['error'];
        if ($error == "empty") {
            echo '<div class="alert alert-danger">Please fill in all fields!</div>';
        } elseif ($error == "username") {
            echo '<div class="alert alert-danger">Username not found!</div>';
        } elseif ($error == "password") {
            echo '<div class="alert alert-danger">Incorrect password!</div>';
        }
    }
    ?>

</body>
</html>

// Logout functionality
<?php
session_start();
if (isset($_SESSION['id'])) {
    session_unset();
    session_destroy();
}
header("Location: login.php");
?>


$password = password_hash("user_password", PASSWORD_DEFAULT);

