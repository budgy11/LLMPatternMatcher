{"prompt": "Create a user login function using php", "llm_output": "Here's an example of a basic user login function in PHP, which includes user registration and validation:\n\n**`login.php`**\n```php\n<?php\n// Configuration settings\n$databaseHost = 'localhost';\n$databaseUsername = 'your_username';\n$databasePassword = 'your_password';\n$databaseName = 'your_database';\n\n// Create connection to database\n$mysqli = new mysqli($databaseHost, $databaseUsername, $databasePassword, $databaseName);\n\n// Check if the connection was successful\nif ($mysqli->connect_errno) {\n    echo \"Failed to connect to MySQL: (\" . $mysqli->connect_errno . \") \" . $mysqli->connect_error;\n    exit();\n}\n\n// User registration function\nfunction registerUser($username, $email, $password) {\n    // Escape special characters in user input\n    $username = mysqli_real_escape_string($GLOBALS['mysqli'], $username);\n    $email = mysqli_real_escape_string($GLOBALS['mysqli'], $email);\n\n    // Hash password for secure storage\n    $hashedPassword = password_hash($password, PASSWORD_DEFAULT);\n\n    // Prepare query to insert new user into database\n    $sql = \"INSERT INTO users (username, email, password) VALUES (?, ?, ?)\";\n    $stmt = $mysqli->prepare($sql);\n    $stmt->bind_param('sss', $username, $email, $hashedPassword);\n    if ($stmt->execute()) {\n        return true;\n    } else {\n        echo \"Failed to register user: (\" . $mysqli->errno . \") \" . $mysqli->error;\n        exit();\n    }\n}\n\n// User login function\nfunction loginUser($username, $password) {\n    // Escape special characters in user input\n    $username = mysqli_real_escape_string($GLOBALS['mysqli'], $username);\n\n    // Prepare query to select user from database\n    $sql = \"SELECT * FROM users WHERE username = ?\";\n    $stmt = $mysqli->prepare($sql);\n    $stmt->bind_param('s', $username);\n    if ($stmt->execute()) {\n        $result = $stmt->get_result();\n        if ($result->num_rows > 0) {\n            // Fetch user data from result\n            $user = $result->fetch_assoc();\n\n            // Check password against stored hash\n            if (password_verify($password, $user['password'])) {\n                return array('success' => true, 'username' => $username);\n            } else {\n                echo \"Incorrect username or password.\";\n            }\n        } else {\n            echo \"Username not found.\";\n        }\n    } else {\n        echo \"Failed to retrieve user: (\" . $mysqli->errno . \") \" . $mysqli->error;\n    }\n\n    return array('success' => false);\n}\n\n// Register new user\nif (isset($_POST['register'])) {\n    $username = $_POST['username'];\n    $email = $_POST['email'];\n    $password = $_POST['password'];\n\n    if (!empty($username) && !empty($email) && !empty($password)) {\n        registerUser($username, $email, $password);\n    } else {\n        echo \"Please fill in all fields.\";\n    }\n}\n\n// Login existing user\nif (isset($_POST['login'])) {\n    $username = $_POST['username'];\n    $password = $_POST['password'];\n\n    if (!empty($username) && !empty($password)) {\n        $result = loginUser($username, $password);\n        if ($result['success']) {\n            // User logged in successfully\n            session_start();\n            $_SESSION['username'] = $username;\n            echo \"Welcome, $username!\";\n        } else {\n            echo \"Incorrect username or password.\";\n        }\n    } else {\n        echo \"Please fill in all fields.\";\n    }\n}\n?>\n```\nThis example includes two functions: `registerUser()` and `loginUser()`. The `registerUser()` function takes three arguments (`$username`, `$email`, and `$password`) and registers a new user by inserting their data into the database. The `loginUser()` function takes two arguments (`$username` and `$password`) and logs in an existing user by checking their credentials against the stored data.\n\nTo use this script, you'll need to create a MySQL database with a table called `users` that has columns for `id`, `username`, `email`, and `password`. You can modify the connection settings at the top of the script to match your own database configuration.", "code_blocks": ["```php\n<?php\n// Configuration settings\n$databaseHost = 'localhost';\n$databaseUsername = 'your_username';\n$databasePassword = 'your_password';\n$databaseName = 'your_database';\n\n// Create connection to database\n$mysqli = new mysqli($databaseHost, $databaseUsername, $databasePassword, $databaseName);\n\n// Check if the connection was successful\nif ($mysqli->connect_errno) {\n    echo \"Failed to connect to MySQL: (\" . $mysqli->connect_errno . \") \" . $mysqli->connect_error;\n    exit();\n}\n\n// User registration function\nfunction registerUser($username, $email, $password) {\n    // Escape special characters in user input\n    $username = mysqli_real_escape_string($GLOBALS['mysqli'], $username);\n    $email = mysqli_real_escape_string($GLOBALS['mysqli'], $email);\n\n    // Hash password for secure storage\n    $hashedPassword = password_hash($password, PASSWORD_DEFAULT);\n\n    // Prepare query to insert new user into database\n    $sql = \"INSERT INTO users (username, email, password) VALUES (?, ?, ?)\";\n    $stmt = $mysqli->prepare($sql);\n    $stmt->bind_param('sss', $username, $email, $hashedPassword);\n    if ($stmt->execute()) {\n        return true;\n    } else {\n        echo \"Failed to register user: (\" . $mysqli->errno . \") \" . $mysqli->error;\n        exit();\n    }\n}\n\n// User login function\nfunction loginUser($username, $password) {\n    // Escape special characters in user input\n    $username = mysqli_real_escape_string($GLOBALS['mysqli'], $username);\n\n    // Prepare query to select user from database\n    $sql = \"SELECT * FROM users WHERE username = ?\";\n    $stmt = $mysqli->prepare($sql);\n    $stmt->bind_param('s', $username);\n    if ($stmt->execute()) {\n        $result = $stmt->get_result();\n        if ($result->num_rows > 0) {\n            // Fetch user data from result\n            $user = $result->fetch_assoc();\n\n            // Check password against stored hash\n            if (password_verify($password, $user['password'])) {\n                return array('success' => true, 'username' => $username);\n            } else {\n                echo \"Incorrect username or password.\";\n            }\n        } else {\n            echo \"Username not found.\";\n        }\n    } else {\n        echo \"Failed to retrieve user: (\" . $mysqli->errno . \") \" . $mysqli->error;\n    }\n\n    return array('success' => false);\n}\n\n// Register new user\nif (isset($_POST['register'])) {\n    $username = $_POST['username'];\n    $email = $_POST['email'];\n    $password = $_POST['password'];\n\n    if (!empty($username) && !empty($email) && !empty($password)) {\n        registerUser($username, $email, $password);\n    } else {\n        echo \"Please fill in all fields.\";\n    }\n}\n\n// Login existing user\nif (isset($_POST['login'])) {\n    $username = $_POST['username'];\n    $password = $_POST['password'];\n\n    if (!empty($username) && !empty($password)) {\n        $result = loginUser($username, $password);\n        if ($result['success']) {\n            // User logged in successfully\n            session_start();\n            $_SESSION['username'] = $username;\n            echo \"Welcome, $username!\";\n        } else {\n            echo \"Incorrect username or password.\";\n        }\n    } else {\n        echo \"Please fill in all fields.\";\n    }\n}\n?>\n```"]}
