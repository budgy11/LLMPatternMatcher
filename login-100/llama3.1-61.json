{"prompt": "Create a user login function using php", "llm_output": "Here's an example of a simple user login function in PHP. This example assumes you have a table named `users` with the following structure:\n\n```sql\nCREATE TABLE users (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  username VARCHAR(255) NOT NULL,\n  password VARCHAR(255) NOT NULL\n);\n```\n\nAnd here's the corresponding PHP code for the user login function:\n\n**Login Function (login.php):**\n```php\n<?php\n\n// Define a configuration array\n$config = [\n    'dbHost' => 'localhost',\n    'dbUsername' => 'your_username',\n    'dbPassword' => 'your_password',\n    'dbName' => 'your_database'\n];\n\n// Connect to the database\n$conn = new mysqli($config['dbHost'], $config['dbUsername'], $config['dbPassword'], $config['dbName']);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Function to hash a password using SHA-256\nfunction passwordHasher($password) {\n    return sha1(sha1($password));\n}\n\n// Function to check user login credentials\nfunction loginUser($username, $password) {\n    // Check if the username and password are not empty\n    if (empty($username) || empty($password)) {\n        return 'Please fill in both username and password';\n    }\n\n    // Hash the input password for comparison with the stored hash\n    $hashedPassword = passwordHasher($password);\n\n    // SQL query to retrieve user data from the database\n    $sql = \"SELECT * FROM users WHERE username = '$username' AND password = '$hashedPassword'\";\n    $result = $conn->query($sql);\n\n    if ($result->num_rows > 0) {\n        while ($row = $result->fetch_assoc()) {\n            // If user is found, return their ID\n            return $row['id'];\n        }\n    } else {\n        // If no user found, return an error message\n        return 'Invalid username or password';\n    }\n\n    // Close the database connection\n    $conn->close();\n}\n\n// Call the login function with user input (username and password)\nif (!empty($_POST['username']) && !empty($_POST['password'])) {\n    echo loginUser($_POST['username'], $_POST['password']);\n} else {\n    echo 'Please fill in both username and password';\n}\n?>\n```\n\n**Using the Login Function:**\n\nTo use this login function, you'll need to create a simple HTML form to take user input for their username and password. You can then call the `loginUser()` function with these inputs.\n\nHere's an example of how to use it:\n\n```html\n<!-- login.html -->\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Login Page</title>\n</head>\n<body>\n\n<form action=\"login.php\" method=\"post\">\n    Username: <input type=\"text\" name=\"username\"><br><br>\n    Password: <input type=\"password\" name=\"password\"><br><br>\n    <input type=\"submit\" value=\"Login\">\n</form>\n\n<?php echo $_GET['message']; ?>\n\n</body>\n</html>\n```\n\nTo make this work, replace `login.php` with your PHP script's location and navigate to it in a web browser. Enter your username and password, and if they're correct, you should see the user ID returned.\n\nPlease note that using SHA-1 is not secure for password storage due to its weaknesses. Consider upgrading to a stronger hashing algorithm like bcrypt or Argon2.\n\nThis code provides a basic example of how to implement user login functionality in PHP.", "code_blocks": [null, "```php\n<?php\n\n// Define a configuration array\n$config = [\n    'dbHost' => 'localhost',\n    'dbUsername' => 'your_username',\n    'dbPassword' => 'your_password',\n    'dbName' => 'your_database'\n];\n\n// Connect to the database\n$conn = new mysqli($config['dbHost'], $config['dbUsername'], $config['dbPassword'], $config['dbName']);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Function to hash a password using SHA-256\nfunction passwordHasher($password) {\n    return sha1(sha1($password));\n}\n\n// Function to check user login credentials\nfunction loginUser($username, $password) {\n    // Check if the username and password are not empty\n    if (empty($username) || empty($password)) {\n        return 'Please fill in both username and password';\n    }\n\n    // Hash the input password for comparison with the stored hash\n    $hashedPassword = passwordHasher($password);\n\n    // SQL query to retrieve user data from the database\n    $sql = \"SELECT * FROM users WHERE username = '$username' AND password = '$hashedPassword'\";\n    $result = $conn->query($sql);\n\n    if ($result->num_rows > 0) {\n        while ($row = $result->fetch_assoc()) {\n            // If user is found, return their ID\n            return $row['id'];\n        }\n    } else {\n        // If no user found, return an error message\n        return 'Invalid username or password';\n    }\n\n    // Close the database connection\n    $conn->close();\n}\n\n// Call the login function with user input (username and password)\nif (!empty($_POST['username']) && !empty($_POST['password'])) {\n    echo loginUser($_POST['username'], $_POST['password']);\n} else {\n    echo 'Please fill in both username and password';\n}\n?>\n```", null]}
