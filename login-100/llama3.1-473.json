{"prompt": "Create a user login function using php", "llm_output": "**User Login Function in PHP**\n=====================================\n\nBelow is an example of a simple user login function written in PHP. This code assumes you have already set up a database with a `users` table containing the columns `username`, `password`, and `email`.\n\n```php\n// db_config.php (example database connection file)\n<?php\n    $db_host = 'localhost';\n    $db_username = 'your_username';\n    $db_password = 'your_password';\n    $db_name = 'your_database';\n\n    $conn = new mysqli($db_host, $db_username, $db_password, $db_name);\n\n    if ($conn->connect_error) {\n        die(\"Connection failed: \" . $conn->connect_error);\n    }\n?>\n```\n\n```php\n// login.php (user login function)\n<?php\n    include 'db_config.php';\n\n    // Check if form is submitted\n    if (isset($_POST['login'])) {\n\n        // Get input values\n        $username = $_POST['username'];\n        $password = md5($_POST['password']);  // Note: MD5 is not recommended for password hashing in production, use a library like bcrypt or argon2 instead\n\n        // SQL query to select user from database\n        $sql = \"SELECT * FROM users WHERE username='$username' AND password='$password'\";\n        $result = $conn->query($sql);\n\n        if ($result->num_rows > 0) {\n            // User found, log them in\n            while ($row = $result->fetch_assoc()) {\n                session_start();\n                $_SESSION['logged_in'] = true;\n                $_SESSION['username'] = $row['username'];\n                header(\"Location: dashboard.php\");\n                exit;\n            }\n        } else {\n            echo \"Invalid username or password\";\n        }\n\n    } else {\n        // Display login form\n        ?>\n        <form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n            Username: <input type=\"text\" name=\"username\"><br>\n            Password: <input type=\"password\" name=\"password\"><br>\n            <input type=\"submit\" name=\"login\" value=\"Login\">\n        </form>\n        <?php\n    }\n?>\n```\n\n**Notes:**\n\n*   The `md5` function is used for password hashing in this example, but it's **not recommended** to use MD5 for password hashing in production. Use a library like bcrypt or argon2 instead.\n*   This code uses the `mysqli` extension for database connection. You can also use PDO (PHP Data Objects) for better security and performance.\n*   Remember to replace `'your_username'`, `'your_password'`, and `'your_database'` with your actual database credentials in the `db_config.php` file.\n\nThis login function checks if a user's input matches an existing record in the database. If the username and password match, it logs them in by starting a session and setting the relevant variables. The dashboard page (`dashboard.php`) is not included here, but you can create it as needed to display content specific to logged-in users.\n\n**Example Use Cases:**\n\n*   When a user submits the login form with valid credentials, they are redirected to the dashboard page.\n*   If a user enters invalid credentials (e.g., wrong username or password), an error message is displayed.\n\nRemember to follow best practices for security and consider implementing additional measures like CSRF protection.", "code_blocks": ["```php\n// db_config.php (example database connection file)\n<?php\n    $db_host = 'localhost';\n    $db_username = 'your_username';\n    $db_password = 'your_password';\n    $db_name = 'your_database';\n\n    $conn = new mysqli($db_host, $db_username, $db_password, $db_name);\n\n    if ($conn->connect_error) {\n        die(\"Connection failed: \" . $conn->connect_error);\n    }\n?>\n```", "```php\n// login.php (user login function)\n<?php\n    include 'db_config.php';\n\n    // Check if form is submitted\n    if (isset($_POST['login'])) {\n\n        // Get input values\n        $username = $_POST['username'];\n        $password = md5($_POST['password']);  // Note: MD5 is not recommended for password hashing in production, use a library like bcrypt or argon2 instead\n\n        // SQL query to select user from database\n        $sql = \"SELECT * FROM users WHERE username='$username' AND password='$password'\";\n        $result = $conn->query($sql);\n\n        if ($result->num_rows > 0) {\n            // User found, log them in\n            while ($row = $result->fetch_assoc()) {\n                session_start();\n                $_SESSION['logged_in'] = true;\n                $_SESSION['username'] = $row['username'];\n                header(\"Location: dashboard.php\");\n                exit;\n            }\n        } else {\n            echo \"Invalid username or password\";\n        }\n\n    } else {\n        // Display login form\n        ?>\n        <form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n            Username: <input type=\"text\" name=\"username\"><br>\n            Password: <input type=\"password\" name=\"password\"><br>\n            <input type=\"submit\" name=\"login\" value=\"Login\">\n        </form>\n        <?php\n    }\n?>\n```"]}
