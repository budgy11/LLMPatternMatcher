{"prompt": "Create a user login function using php", "llm_output": "Here is an example of a basic user login function in PHP:\n```php\n<?php\n\n// Define database connection settings\n$dbHost = 'localhost';\n$dbUsername = 'your_username';\n$dbPassword = 'your_password';\n$dbName = 'your_database';\n\n// Create database connection\n$conn = new mysqli($dbHost, $dbUsername, $dbPassword, $dbName);\n\n// Check connection\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Define function to handle user login\nfunction loginUser($username, $password) {\n    // Prepare SQL query\n    $stmt = $conn->prepare(\"SELECT * FROM users WHERE username = ? AND password = ?\");\n    \n    // Bind parameters\n    $stmt->bind_param(\"ss\", $username, $password);\n    \n    // Execute query\n    $stmt->execute();\n    \n    // Get result\n    $result = $stmt->get_result();\n    \n    // If user found, return true and user data\n    if ($result->num_rows > 0) {\n        return array(true, $result->fetch_assoc());\n    } else {\n        // Return false for failed login attempt\n        return array(false);\n    }\n}\n\n// Handle form submission (login)\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    $username = $_POST['username'];\n    $password = $_POST['password'];\n    \n    // Hash password before checking against database\n    $hashedPassword = hash('sha256', $password);\n    \n    // Call login function with hashed password\n    $loginResult = loginUser($username, $hashedPassword);\n    \n    if ($loginResult[0]) {\n        // Login successful, set session variables and redirect to protected page\n        $_SESSION['username'] = $loginResult[1]['username'];\n        $_SESSION['user_id'] = $loginResult[1]['id'];\n        \n        header('Location: protected_page.php');\n        exit();\n    } else {\n        // Login failed, display error message\n        echo 'Invalid username or password';\n    }\n}\n\n// Close database connection\n$conn->close();\n\n?>\n```\n**Note:** This is a basic example and should be modified to fit your specific use case. In particular:\n\n* Passwords should not be stored in plaintext; instead, store hashed versions of passwords (using a library like `password_hash()`).\n* Consider using prepared statements with parameterized queries to prevent SQL injection attacks.\n* Add additional error handling and logging mechanisms as needed.\n\n**Example Use Case:**\n\n1. Create a simple HTML form for user input:\n```html\n<form method=\"post\" action=\"login.php\">\n    <input type=\"text\" name=\"username\" placeholder=\"Username\">\n    <input type=\"password\" name=\"password\" placeholder=\"Password\">\n    <button type=\"submit\">Login</button>\n</form>\n```\n2. Save the above PHP code in a file named `login.php`.\n3. When the user submits the form, the `loginUser()` function will be called with their input values.\n4. If the login is successful, the script will redirect the user to a protected page (`protected_page.php`).\n\nRemember to adapt this example to your specific use case and consider implementing additional security measures (e.g., salting passwords, using HTTPS).", "code_blocks": ["```php\n<?php\n\n// Define database connection settings\n$dbHost = 'localhost';\n$dbUsername = 'your_username';\n$dbPassword = 'your_password';\n$dbName = 'your_database';\n\n// Create database connection\n$conn = new mysqli($dbHost, $dbUsername, $dbPassword, $dbName);\n\n// Check connection\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Define function to handle user login\nfunction loginUser($username, $password) {\n    // Prepare SQL query\n    $stmt = $conn->prepare(\"SELECT * FROM users WHERE username = ? AND password = ?\");\n    \n    // Bind parameters\n    $stmt->bind_param(\"ss\", $username, $password);\n    \n    // Execute query\n    $stmt->execute();\n    \n    // Get result\n    $result = $stmt->get_result();\n    \n    // If user found, return true and user data\n    if ($result->num_rows > 0) {\n        return array(true, $result->fetch_assoc());\n    } else {\n        // Return false for failed login attempt\n        return array(false);\n    }\n}\n\n// Handle form submission (login)\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    $username = $_POST['username'];\n    $password = $_POST['password'];\n    \n    // Hash password before checking against database\n    $hashedPassword = hash('sha256', $password);\n    \n    // Call login function with hashed password\n    $loginResult = loginUser($username, $hashedPassword);\n    \n    if ($loginResult[0]) {\n        // Login successful, set session variables and redirect to protected page\n        $_SESSION['username'] = $loginResult[1]['username'];\n        $_SESSION['user_id'] = $loginResult[1]['id'];\n        \n        header('Location: protected_page.php');\n        exit();\n    } else {\n        // Login failed, display error message\n        echo 'Invalid username or password';\n    }\n}\n\n// Close database connection\n$conn->close();\n\n?>\n```", null]}
