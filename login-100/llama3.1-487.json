{"prompt": "Create a user login function using php", "llm_output": "Here is an example of a basic user login function in PHP:\n\n**login.php**\n```php\n<?php\n// Configuration variables\n$db_host = 'localhost';\n$db_username = 'username';\n$db_password = 'password';\n$db_name = 'database';\n\n// Connect to database\n$conn = new mysqli($db_host, $db_username, $db_password, $db_name);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Function to validate user login credentials\nfunction validateLogin($username, $password) {\n    global $conn;\n\n    // SQL query to select user data from database\n    $sql = \"SELECT * FROM users WHERE username = '$username' AND password = '$password'\";\n    $result = $conn->query($sql);\n\n    if ($result->num_rows > 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n// Check for POST request\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    // Get user input from form submission\n    $username = $_POST['username'];\n    $password = $_POST['password'];\n\n    // Validate user login credentials\n    if (validateLogin($username, $password)) {\n        // Login successful, redirect to dashboard\n        header('Location: dashboard.php');\n        exit;\n    } else {\n        // Login failed, display error message\n        echo 'Invalid username or password';\n    }\n}\n\n// Close database connection\n$conn->close();\n?>\n```\n**login.html**\n```html\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Login</title>\n</head>\n<body>\n    <form action=\"login.php\" method=\"post\">\n        <label for=\"username\">Username:</label>\n        <input type=\"text\" id=\"username\" name=\"username\"><br><br>\n        <label for=\"password\">Password:</label>\n        <input type=\"password\" id=\"password\" name=\"password\"><br><br>\n        <input type=\"submit\" value=\"Login\">\n    </form>\n</body>\n</html>\n```\n**How it works:**\n\n1. The user submits their username and password through the login form.\n2. The `login.php` script checks if the request is a POST request (i.e., from the form submission).\n3. If so, it retrieves the user input from the form submission using `$_POST`.\n4. It then calls the `validateLogin()` function to check the user's credentials against the database.\n5. If the credentials are valid, it redirects the user to a dashboard page (e.g., `dashboard.php`).\n6. If the credentials are invalid, it displays an error message.\n\nNote that this is a basic example and you should consider implementing additional security measures such as:\n\n* Hashing passwords instead of storing plain text\n* Using prepared statements to prevent SQL injection\n* Validating user input for SQL queries\n* Implementing session management for secure login functionality\n\nAlso, make sure to update the configuration variables at the top of the script with your own database credentials and name.", "code_blocks": ["```php\n<?php\n// Configuration variables\n$db_host = 'localhost';\n$db_username = 'username';\n$db_password = 'password';\n$db_name = 'database';\n\n// Connect to database\n$conn = new mysqli($db_host, $db_username, $db_password, $db_name);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Function to validate user login credentials\nfunction validateLogin($username, $password) {\n    global $conn;\n\n    // SQL query to select user data from database\n    $sql = \"SELECT * FROM users WHERE username = '$username' AND password = '$password'\";\n    $result = $conn->query($sql);\n\n    if ($result->num_rows > 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n// Check for POST request\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    // Get user input from form submission\n    $username = $_POST['username'];\n    $password = $_POST['password'];\n\n    // Validate user login credentials\n    if (validateLogin($username, $password)) {\n        // Login successful, redirect to dashboard\n        header('Location: dashboard.php');\n        exit;\n    } else {\n        // Login failed, display error message\n        echo 'Invalid username or password';\n    }\n}\n\n// Close database connection\n$conn->close();\n?>\n```", null]}
