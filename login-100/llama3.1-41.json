{"prompt": "Create a user login function using php", "llm_output": "**User Login Function in PHP**\n=====================================\n\nThis example demonstrates a basic user login functionality using PHP. It includes error handling and password hashing for secure authentication.\n\n**Database Schema (Assuming MySQL)**\n-------------------------------------\n\n```sql\nCREATE TABLE users (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  username VARCHAR(255) NOT NULL,\n  email VARCHAR(255) NOT NULL,\n  password VARCHAR(255) NOT NULL\n);\n```\n\n**PHP Login Function**\n----------------------\n\n```php\n<?php\n\n// Configuration variables\ndefine('DB_HOST', 'your_host');\ndefine('DB_USERNAME', 'your_username');\ndefine('DB_PASSWORD', 'your_password');\ndefine('DB_NAME', 'your_database');\n\nfunction dbConnect() {\n  $conn = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);\n  if ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n  }\n  return $conn;\n}\n\nfunction hashPassword($password) {\n  return password_hash($password, PASSWORD_DEFAULT);\n}\n\nfunction login($username, $password) {\n  $conn = dbConnect();\n  $stmt = $conn->prepare(\"SELECT * FROM users WHERE username = ?\");\n  $stmt->bind_param(\"s\", $username);\n  $stmt->execute();\n  $result = $stmt->get_result();\n\n  if ($result->num_rows > 0) {\n    $row = $result->fetch_assoc();\n    if (password_verify($password, $row['password'])) {\n      return true;\n    } else {\n      echo \"Incorrect password\";\n      return false;\n    }\n  } else {\n    echo \"User not found\";\n    return false;\n  }\n\n  $stmt->close();\n  $conn->close();\n}\n\n// Usage example:\n$username = 'your_username';\n$password = 'your_password';\n\nif (login($username, $password)) {\n  echo \"Login successful!\";\n} else {\n  echo \"Invalid username or password.\";\n}\n```\n\n**Security Notes:**\n\n*   Always store passwords securely using a hash function like `password_hash`.\n*   Use prepared statements to prevent SQL injection attacks.\n*   Never store plain text passwords in your database.\n\nRemember to replace the placeholders (`your_host`, `your_username`, `your_password`, `your_database`) with your actual database credentials.", "code_blocks": [null, "```php\n<?php\n\n// Configuration variables\ndefine('DB_HOST', 'your_host');\ndefine('DB_USERNAME', 'your_username');\ndefine('DB_PASSWORD', 'your_password');\ndefine('DB_NAME', 'your_database');\n\nfunction dbConnect() {\n  $conn = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);\n  if ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n  }\n  return $conn;\n}\n\nfunction hashPassword($password) {\n  return password_hash($password, PASSWORD_DEFAULT);\n}\n\nfunction login($username, $password) {\n  $conn = dbConnect();\n  $stmt = $conn->prepare(\"SELECT * FROM users WHERE username = ?\");\n  $stmt->bind_param(\"s\", $username);\n  $stmt->execute();\n  $result = $stmt->get_result();\n\n  if ($result->num_rows > 0) {\n    $row = $result->fetch_assoc();\n    if (password_verify($password, $row['password'])) {\n      return true;\n    } else {\n      echo \"Incorrect password\";\n      return false;\n    }\n  } else {\n    echo \"User not found\";\n    return false;\n  }\n\n  $stmt->close();\n  $conn->close();\n}\n\n// Usage example:\n$username = 'your_username';\n$password = 'your_password';\n\nif (login($username, $password)) {\n  echo \"Login successful!\";\n} else {\n  echo \"Invalid username or password.\";\n}\n```"]}
