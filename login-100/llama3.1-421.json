{"prompt": "Create a user login function using php", "llm_output": "**User Login Function in PHP**\n=====================================\n\nThis is an example of a simple user login function using PHP. It includes password hashing, validation, and database interaction.\n\n### Prerequisites:\n\n* A MySQL database with a `users` table containing columns for `username`, `password`, and other relevant information.\n* The PHP extensions `mysqli` or PDO installed on your server.\n\n### Code:\n```php\n<?php\n\n// Configuration\ndefine('DB_HOST', 'localhost');\ndefine('DB_USER', 'your_username');\ndefine('DB_PASSWORD', 'your_password');\ndefine('DB_NAME', 'your_database');\n\n// Connect to database\nfunction db_connect() {\n  $conn = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);\n  if ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n  }\n  return $conn;\n}\n\n// Hash password function\nfunction hash_password($password) {\n  $salt = uniqid();\n  $hashed_password = crypt($password, '$2y$10$.salt' . $salt);\n  return array('salt' => $salt, 'hashed_password' => $hashed_password);\n}\n\n// Login function\nfunction login_user($username, $password) {\n  // Connect to database\n  $conn = db_connect();\n  \n  // Query users table for username\n  $query = \"SELECT * FROM users WHERE username = '$username'\";\n  $result = $conn->query($query);\n  \n  if ($result->num_rows > 0) {\n    // Get user data from result\n    $user_data = $result->fetch_assoc();\n    \n    // Hash password and compare with stored hash\n    $hashed_password = hash_password($password);\n    if (crypt($user_data['password'], '$2y$10$.salt' . $user_data['salt']) === $hashed_password['hashed_password']) {\n      // Login successful, return user data\n      return array('username' => $username, 'id' => $user_data['id']);\n    } else {\n      // Invalid password, return error message\n      return array('error' => 'Invalid username or password');\n    }\n  } else {\n    // No matching username found, return error message\n    return array('error' => 'No matching username found');\n  }\n}\n\n?>\n```\n### Usage:\n\n```php\n<?php\n\n// Get user input from form\n$username = $_POST['username'];\n$password = $_POST['password'];\n\n// Call login function and store result in variable\n$result = login_user($username, $password);\n\n// Check if login was successful\nif ($result !== false && isset($result['error'])) {\n  echo '<p>' . $result['error'] . '</p>';\n} else {\n  // Login successful, display user data or redirect to dashboard\n  echo '<p>Login successful!</p>';\n}\n\n?>\n```\n### Notes:\n\n* This is a simplified example and you should consider implementing additional security measures such as:\n\t+ Salting passwords\n\t+ Hashing passwords with a strong algorithm (e.g. bcrypt)\n\t+ Using prepared statements to prevent SQL injection attacks\n\t+ Validating user input for length, format, and other constraints\n* You should also store the salt used in password hashing securely, using a separate database or file.\n* This code assumes you have a `users` table with columns for `username`, `password`, `salt`, etc. You may need to adjust the query and field names according to your specific database schema.", "code_blocks": ["```php\n<?php\n\n// Configuration\ndefine('DB_HOST', 'localhost');\ndefine('DB_USER', 'your_username');\ndefine('DB_PASSWORD', 'your_password');\ndefine('DB_NAME', 'your_database');\n\n// Connect to database\nfunction db_connect() {\n  $conn = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);\n  if ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n  }\n  return $conn;\n}\n\n// Hash password function\nfunction hash_password($password) {\n  $salt = uniqid();\n  $hashed_password = crypt($password, '$2y$10$.salt' . $salt);\n  return array('salt' => $salt, 'hashed_password' => $hashed_password);\n}\n\n// Login function\nfunction login_user($username, $password) {\n  // Connect to database\n  $conn = db_connect();\n  \n  // Query users table for username\n  $query = \"SELECT * FROM users WHERE username = '$username'\";\n  $result = $conn->query($query);\n  \n  if ($result->num_rows > 0) {\n    // Get user data from result\n    $user_data = $result->fetch_assoc();\n    \n    // Hash password and compare with stored hash\n    $hashed_password = hash_password($password);\n    if (crypt($user_data['password'], '$2y$10$.salt' . $user_data['salt']) === $hashed_password['hashed_password']) {\n      // Login successful, return user data\n      return array('username' => $username, 'id' => $user_data['id']);\n    } else {\n      // Invalid password, return error message\n      return array('error' => 'Invalid username or password');\n    }\n  } else {\n    // No matching username found, return error message\n    return array('error' => 'No matching username found');\n  }\n}\n\n?>\n```", "```php\n<?php\n\n// Get user input from form\n$username = $_POST['username'];\n$password = $_POST['password'];\n\n// Call login function and store result in variable\n$result = login_user($username, $password);\n\n// Check if login was successful\nif ($result !== false && isset($result['error'])) {\n  echo '<p>' . $result['error'] . '</p>';\n} else {\n  // Login successful, display user data or redirect to dashboard\n  echo '<p>Login successful!</p>';\n}\n\n?>\n```"]}
