{"prompt": "Create a user login function using php", "llm_output": "Here is an example of a simple user login function using PHP:\n\n**login.php**\n```php\n<?php\n\n// Configuration settings\ndefine('DB_HOST', 'your_database_host');\ndefine('DB_USERNAME', 'your_database_username');\ndefine('DB_PASSWORD', 'your_database_password');\ndefine('DB_NAME', 'your_database_name');\n\n// Connect to database\n$conn = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);\n\n// Check connection\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Function to check user credentials\nfunction login_user($username, $password) {\n    // Prepare SQL query\n    $sql = \"SELECT * FROM users WHERE username = ? AND password = ?\";\n    \n    // Bind parameters\n    $stmt = $conn->prepare($sql);\n    $stmt->bind_param(\"ss\", $username, $hashed_password);\n\n    // Execute query\n    if ($stmt->execute()) {\n        $result = $stmt->get_result();\n        \n        // Check if user exists and password is correct\n        if ($result->num_rows > 0) {\n            return true;\n        } else {\n            return false;\n        }\n    } else {\n        return false;\n    }\n}\n\n// Login function\nfunction login($username, $password) {\n    // Hash the password (using a secure hash algorithm like bcrypt or SHA-256)\n    $hashed_password = hash('sha256', $password);\n    \n    // Call login_user function\n    if (login_user($username, $hashed_password)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n// Check if user is already logged in\nfunction check_login() {\n    // Get session data\n    $session_data = $_SESSION['user'];\n    \n    // If no session data, return false\n    if (!isset($session_data)) {\n        return false;\n    } else {\n        return true;\n    }\n}\n\n// Example usage:\nif (isset($_POST['username']) && isset($_POST['password'])) {\n    $username = $_POST['username'];\n    $password = $_POST['password'];\n    \n    // Login user\n    if (login($username, $password)) {\n        echo \"User logged in successfully!\";\n        \n        // Set session data\n        $_SESSION['user'] = array('username' => $username);\n        \n        // Redirect to secure page\n        header(\"Location: secured_page.php\");\n        exit;\n    } else {\n        echo \"Invalid username or password.\";\n    }\n}\n\n// Close connection\n$conn->close();\n\n?>\n```\nThis code uses the following:\n\n* A MySQL database connection\n* Prepared statements with parameter binding for security\n* Secure hash algorithm (SHA-256) to store passwords\n* Session-based login system\n\nYou'll need to modify this example to suit your specific needs, such as:\n\n* Changing the database configuration settings\n* Using a different authentication method (e.g., OAuth)\n* Implementing additional security measures (e.g., CSRF protection)\n\n**Important notes:**\n\n* This is just an example code and should not be used in production without proper testing and validation.\n* Always follow best practices for password hashing and storage to prevent security vulnerabilities.\n* Consider using a PHP framework like Laravel or Symfony for more secure and maintainable authentication systems.", "code_blocks": ["```php\n<?php\n\n// Configuration settings\ndefine('DB_HOST', 'your_database_host');\ndefine('DB_USERNAME', 'your_database_username');\ndefine('DB_PASSWORD', 'your_database_password');\ndefine('DB_NAME', 'your_database_name');\n\n// Connect to database\n$conn = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);\n\n// Check connection\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Function to check user credentials\nfunction login_user($username, $password) {\n    // Prepare SQL query\n    $sql = \"SELECT * FROM users WHERE username = ? AND password = ?\";\n    \n    // Bind parameters\n    $stmt = $conn->prepare($sql);\n    $stmt->bind_param(\"ss\", $username, $hashed_password);\n\n    // Execute query\n    if ($stmt->execute()) {\n        $result = $stmt->get_result();\n        \n        // Check if user exists and password is correct\n        if ($result->num_rows > 0) {\n            return true;\n        } else {\n            return false;\n        }\n    } else {\n        return false;\n    }\n}\n\n// Login function\nfunction login($username, $password) {\n    // Hash the password (using a secure hash algorithm like bcrypt or SHA-256)\n    $hashed_password = hash('sha256', $password);\n    \n    // Call login_user function\n    if (login_user($username, $hashed_password)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n// Check if user is already logged in\nfunction check_login() {\n    // Get session data\n    $session_data = $_SESSION['user'];\n    \n    // If no session data, return false\n    if (!isset($session_data)) {\n        return false;\n    } else {\n        return true;\n    }\n}\n\n// Example usage:\nif (isset($_POST['username']) && isset($_POST['password'])) {\n    $username = $_POST['username'];\n    $password = $_POST['password'];\n    \n    // Login user\n    if (login($username, $password)) {\n        echo \"User logged in successfully!\";\n        \n        // Set session data\n        $_SESSION['user'] = array('username' => $username);\n        \n        // Redirect to secure page\n        header(\"Location: secured_page.php\");\n        exit;\n    } else {\n        echo \"Invalid username or password.\";\n    }\n}\n\n// Close connection\n$conn->close();\n\n?>\n```"]}
