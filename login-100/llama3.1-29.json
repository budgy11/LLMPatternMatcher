{"prompt": "Create a user login function using php", "llm_output": "**User Login Function in PHP**\n=====================================\n\nBelow is an example of a basic user login function in PHP, including HTML and CSS for simplicity. In a real-world application, you would typically separate the presentation logic (HTML) from the business logic (PHP).\n\n### `login.php`\n\n```php\n<?php\n// Configuration settings\n$host = 'localhost';\n$dbname = 'your_database_name';\n$username = 'your_database_username';\n$password = 'your_database_password';\n\n// Connect to database\n$conn = new PDO(\"mysql:host=$host;dbname=$dbname\", $username, $password);\n\n// Check if form submitted\nif (isset($_POST['login'])) {\n    // Retrieve form data\n    $email = $_POST['email'];\n    $password = $_POST['password'];\n\n    // SQL query to validate credentials\n    $stmt = $conn->prepare(\"SELECT * FROM users WHERE email = :email AND password = :password\");\n    $stmt->bindParam(':email', $email);\n    $stmt->bindParam(':password', $password);\n\n    try {\n        $stmt->execute();\n        $result = $stmt->fetch();\n\n        if ($result) {\n            // Login successful, redirect to protected page\n            $_SESSION['email'] = $email;\n            header('Location: dashboard.php');\n            exit();\n        } else {\n            echo \"Invalid email or password\";\n        }\n    } catch (PDOException $e) {\n        echo \"Error: \" . $e->getMessage();\n    }\n\n    // Close database connection\n    $conn = null;\n}\n?>\n\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Login Form</title>\n    <link rel=\"stylesheet\" href=\"style.css\">\n</head>\n\n<body>\n    <form action=\"\" method=\"post\">\n        <label for=\"email\">Email:</label>\n        <input type=\"email\" id=\"email\" name=\"email\" required><br><br>\n        <label for=\"password\">Password:</label>\n        <input type=\"password\" id=\"password\" name=\"password\" required><br><br>\n        <button type=\"submit\" name=\"login\">Login</button>\n    </form>\n</body>\n</html>\n```\n\n### `style.css` (optional)\n\n```css\nbody {\n    font-family: Arial, sans-serif;\n}\n\nform {\n    width: 300px;\n    margin: 50px auto;\n}\n\nlabel {\n    display: block;\n    margin-bottom: 10px;\n}\n```\n\n### Explanation\n\n1. The function `login.php` connects to a MySQL database using PDO.\n2. When the form is submitted, it checks if the email and password match an existing user in the database.\n3. If the credentials are valid, it sets the user's email as a session variable and redirects them to a protected page (`dashboard.php`).\n4. The HTML form includes input fields for email and password, along with a submit button.\n\nRemember to replace `your_database_name`, `your_database_username`, and `your_database_password` with your actual database credentials.\n\n**Security Considerations:**\n\n* This example uses plain text passwords in the database. In a real-world application, consider using a password hashing library (e.g., bcrypt) for enhanced security.\n* The SQL query is vulnerable to SQL injection attacks if not properly sanitized. Use prepared statements or parameterized queries to mitigate this risk.\n\nThis code should be used as a starting point and adapted according to your specific requirements. Consult the official PHP documentation and best practices for securing your application.", "code_blocks": ["```php\n<?php\n// Configuration settings\n$host = 'localhost';\n$dbname = 'your_database_name';\n$username = 'your_database_username';\n$password = 'your_database_password';\n\n// Connect to database\n$conn = new PDO(\"mysql:host=$host;dbname=$dbname\", $username, $password);\n\n// Check if form submitted\nif (isset($_POST['login'])) {\n    // Retrieve form data\n    $email = $_POST['email'];\n    $password = $_POST['password'];\n\n    // SQL query to validate credentials\n    $stmt = $conn->prepare(\"SELECT * FROM users WHERE email = :email AND password = :password\");\n    $stmt->bindParam(':email', $email);\n    $stmt->bindParam(':password', $password);\n\n    try {\n        $stmt->execute();\n        $result = $stmt->fetch();\n\n        if ($result) {\n            // Login successful, redirect to protected page\n            $_SESSION['email'] = $email;\n            header('Location: dashboard.php');\n            exit();\n        } else {\n            echo \"Invalid email or password\";\n        }\n    } catch (PDOException $e) {\n        echo \"Error: \" . $e->getMessage();\n    }\n\n    // Close database connection\n    $conn = null;\n}\n?>\n\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Login Form</title>\n    <link rel=\"stylesheet\" href=\"style.css\">\n</head>\n\n<body>\n    <form action=\"\" method=\"post\">\n        <label for=\"email\">Email:</label>\n        <input type=\"email\" id=\"email\" name=\"email\" required><br><br>\n        <label for=\"password\">Password:</label>\n        <input type=\"password\" id=\"password\" name=\"password\" required><br><br>\n        <button type=\"submit\" name=\"login\">Login</button>\n    </form>\n</body>\n</html>\n```", null]}
