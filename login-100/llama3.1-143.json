{"prompt": "Create a user login function using php", "llm_output": "**User Login Function in PHP**\n=====================================\n\nBelow is an example of a basic user login function using PHP. This function will check the username and password against a database, and return the user's details if valid.\n\n### Database Setup\n\nFirst, you'll need to create a table in your database to store users:\n\n```sql\nCREATE TABLE users (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  username VARCHAR(50) NOT NULL,\n  password VARCHAR(255) NOT NULL,\n  email VARCHAR(100) NOT NULL\n);\n```\n\n### PHP Function\n\nCreate a new file called `login.php` and add the following code:\n\n```php\n<?php\n// Database connection settings\ndefine('DB_HOST', 'localhost');\ndefine('DB_USER', 'your_username');\ndefine('DB_PASSWORD', 'your_password');\ndefine('DB_NAME', 'your_database');\n\n// Connect to database\n$conn = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\nfunction userLogin($username, $password) {\n    // Prepare query\n    $stmt = $conn->prepare(\"SELECT * FROM users WHERE username = ?\");\n    \n    // Bind parameters\n    $stmt->bind_param(\"s\", $username);\n    \n    // Execute query\n    $stmt->execute();\n    \n    // Get result\n    $result = $stmt->get_result();\n    \n    if ($result->num_rows > 0) {\n        // Retrieve user data\n        $row = $result->fetch_assoc();\n        \n        // Check password\n        if (password_verify($password, $row['password'])) {\n            return array(\n                'id' => $row['id'],\n                'username' => $row['username'],\n                'email' => $row['email']\n            );\n        }\n    }\n    \n    return null;\n}\n\n// Example usage:\n$username = $_POST['username'];\n$password = $_POST['password'];\n\n$userData = userLogin($username, $password);\n\nif ($userData) {\n    echo \"User logged in successfully!\";\n} else {\n    echo \"Invalid username or password.\";\n}\n?>\n```\n\n### Explanation\n\nThis code connects to the database using the `mysqli` extension. It then defines a function called `userLogin`, which takes two parameters: `$username` and `$password`. The function prepares a query to select all columns from the `users` table where the username matches, and executes it. If there is at least one row returned (i.e., the user exists in the database), it retrieves the row data using `fetch_assoc()`.\n\nThe code then checks if the provided password is correct by verifying it with the stored hashed password using the `password_verify` function. If the passwords match, the function returns an array containing the user's ID, username, and email address. Otherwise, it returns `null`.\n\nFinally, the example usage at the end of the script demonstrates how to call the `userLogin` function using a form submission.\n\n**Note:** This is a basic implementation and should not be used in production without proper validation, sanitization, and security measures in place (e.g., password hashing, salting, and secure password storage).", "code_blocks": [null, "```php\n<?php\n// Database connection settings\ndefine('DB_HOST', 'localhost');\ndefine('DB_USER', 'your_username');\ndefine('DB_PASSWORD', 'your_password');\ndefine('DB_NAME', 'your_database');\n\n// Connect to database\n$conn = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\nfunction userLogin($username, $password) {\n    // Prepare query\n    $stmt = $conn->prepare(\"SELECT * FROM users WHERE username = ?\");\n    \n    // Bind parameters\n    $stmt->bind_param(\"s\", $username);\n    \n    // Execute query\n    $stmt->execute();\n    \n    // Get result\n    $result = $stmt->get_result();\n    \n    if ($result->num_rows > 0) {\n        // Retrieve user data\n        $row = $result->fetch_assoc();\n        \n        // Check password\n        if (password_verify($password, $row['password'])) {\n            return array(\n                'id' => $row['id'],\n                'username' => $row['username'],\n                'email' => $row['email']\n            );\n        }\n    }\n    \n    return null;\n}\n\n// Example usage:\n$username = $_POST['username'];\n$password = $_POST['password'];\n\n$userData = userLogin($username, $password);\n\nif ($userData) {\n    echo \"User logged in successfully!\";\n} else {\n    echo \"Invalid username or password.\";\n}\n?>\n```"]}
