{"prompt": "Create a user login function using php", "llm_output": "Here's an example of a simple user login function using PHP and MySQL:\n\n**Note:** This is just a basic example, you should consider security best practices (e.g., password hashing, salting) when implementing authentication in your application.\n\n**users table:**\n```sql\nCREATE TABLE users (\n  id INT AUTO_INCREMENT PRIMARY KEY,\n  username VARCHAR(255),\n  password VARCHAR(255)\n);\n```\n\n**login.php:**\n```php\n<?php\n\n// Configuration\n$hostname = 'your_host_name';\n$dbname = 'your_database_name';\n$username = 'your_username';\n$password = 'your_password';\n\n// Connect to database\n$conn = new mysqli($hostname, $username, $password, $dbname);\n\nif ($conn->connect_error) {\n  die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Clean input data\n$username = $_POST['username'];\n$password = $_POST['password'];\n\n// Hash password (basic example using MD5)\n$hashed_password = md5($password);\n\n// SQL query to check user credentials\n$query = \"SELECT * FROM users WHERE username = '$username' AND password = '$hashed_password'\";\n$result = $conn->query($query);\n\nif ($result->num_rows > 0) {\n  // User exists and credentials are correct, log them in\n  while ($row = $result->fetch_assoc()) {\n    session_start();\n    $_SESSION['username'] = $username;\n    header('Location: index.php'); // Redirect to index page after login\n    exit;\n  }\n} else {\n  echo \"Invalid username or password\";\n}\n\n// Close connection\n$conn->close();\n\n?>\n```\n\n**index.html (example):**\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <title>Login</title>\n</head>\n<body>\n\n<form action=\"login.php\" method=\"post\">\n  <input type=\"text\" name=\"username\" placeholder=\"Username\">\n  <input type=\"password\" name=\"password\" placeholder=\"Password\">\n  <button type=\"submit\">Login</button>\n</form>\n\n</body>\n</html>\n```\n\nThis example demonstrates a simple login functionality using PHP and MySQL. However, in a real-world application, you should consider implementing more advanced security measures such as:\n\n1. Password hashing (using libraries like `password_hash` or `bcrypt`)\n2. Salting passwords\n3. Input validation and sanitization\n4. Secure password storage (hashed and salted)\n5. Secure authentication mechanisms (e.g., OAuth)\n\n**Important:** This is just a basic example, do not use it in production without implementing proper security measures!", "code_blocks": [null, "```php\n<?php\n\n// Configuration\n$hostname = 'your_host_name';\n$dbname = 'your_database_name';\n$username = 'your_username';\n$password = 'your_password';\n\n// Connect to database\n$conn = new mysqli($hostname, $username, $password, $dbname);\n\nif ($conn->connect_error) {\n  die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Clean input data\n$username = $_POST['username'];\n$password = $_POST['password'];\n\n// Hash password (basic example using MD5)\n$hashed_password = md5($password);\n\n// SQL query to check user credentials\n$query = \"SELECT * FROM users WHERE username = '$username' AND password = '$hashed_password'\";\n$result = $conn->query($query);\n\nif ($result->num_rows > 0) {\n  // User exists and credentials are correct, log them in\n  while ($row = $result->fetch_assoc()) {\n    session_start();\n    $_SESSION['username'] = $username;\n    header('Location: index.php'); // Redirect to index page after login\n    exit;\n  }\n} else {\n  echo \"Invalid username or password\";\n}\n\n// Close connection\n$conn->close();\n\n?>\n```", null]}
