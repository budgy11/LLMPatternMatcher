{"prompt": "Create a user login function using php", "llm_output": "**User Login Function using PHP**\n=====================================\n\nThis is a basic example of a user login function in PHP. This function will check the username and password against a database, assuming you're using MySQL.\n\n**Files Needed:**\n\n* `config.php` (database connection settings)\n* `user_login.php` (login function)\n\n**config.php**\n```php\n<?php\n\n// Database configuration\n$host = 'localhost';\n$db_name = 'your_database_name';\n$username = 'your_username';\n$password = 'your_password';\n\n$conn = new mysqli($host, $username, $password, $db_name);\n\n?>\n```\n**user_login.php**\n```php\n<?php\n\n// Include the config file for database connection settings\ninclude_once 'config.php';\n\nfunction user_login($username, $password) {\n  // Query to select the user's data from the database\n  $query = \"SELECT * FROM users WHERE username='$username' AND password=SHA1('$password')\";\n  \n  // Execute the query and store the result\n  $result = mysqli_query($conn, $query);\n  \n  // If there is a match (one row is returned), proceed with the login process\n  if ($row = mysqli_fetch_assoc($result)) {\n    session_start();\n    \n    // Set user's data in session variables\n    $_SESSION['username'] = $row['username'];\n    $_SESSION['email'] = $row['email'];\n    $_SESSION['logged_in'] = true;\n    \n    // Redirect to the protected page or a success message\n    header('Location: protected_page.php');\n  } else {\n    // Login failed, display an error message\n    echo 'Invalid username and/or password';\n  }\n}\n\n// Example usage:\nif (isset($_POST['login'])) {\n  $username = $_POST['username'];\n  $password = SHA1($_POST['password']);\n  \n  user_login($username, $password);\n}\n?>\n```\n**Example HTML Form:**\n```html\n<form action=\"user_login.php\" method=\"post\">\n  <label>Username:</label>\n  <input type=\"text\" name=\"username\"><br><br>\n  <label>Password:</label>\n  <input type=\"password\" name=\"password\"><br><br>\n  <input type=\"submit\" name=\"login\" value=\"Login\">\n</form>\n```\n**Note:**\n\n* In a real-world application, you should never store passwords in plain text. Instead, use hashing functions like `SHA1` or better alternatives like bcrypt.\n* Always validate user input and sanitize it before using it in your queries.\n* This example uses `mysqli_query()` function which is outdated. Consider switching to the newer `mysqli_stmt` object for prepared statements.\n\n**Security Considerations:**\n\n* Use a secure password hashing algorithm (e.g., bcrypt) instead of SHA1.\n* Never store passwords in plain text or hash them with an insecure method.\n* Always validate and sanitize user input.\n* Keep your database connection settings secure by using environment variables or .htaccess files.", "code_blocks": ["```php\n<?php\n\n// Database configuration\n$host = 'localhost';\n$db_name = 'your_database_name';\n$username = 'your_username';\n$password = 'your_password';\n\n$conn = new mysqli($host, $username, $password, $db_name);\n\n?>\n```", "```php\n<?php\n\n// Include the config file for database connection settings\ninclude_once 'config.php';\n\nfunction user_login($username, $password) {\n  // Query to select the user's data from the database\n  $query = \"SELECT * FROM users WHERE username='$username' AND password=SHA1('$password')\";\n  \n  // Execute the query and store the result\n  $result = mysqli_query($conn, $query);\n  \n  // If there is a match (one row is returned), proceed with the login process\n  if ($row = mysqli_fetch_assoc($result)) {\n    session_start();\n    \n    // Set user's data in session variables\n    $_SESSION['username'] = $row['username'];\n    $_SESSION['email'] = $row['email'];\n    $_SESSION['logged_in'] = true;\n    \n    // Redirect to the protected page or a success message\n    header('Location: protected_page.php');\n  } else {\n    // Login failed, display an error message\n    echo 'Invalid username and/or password';\n  }\n}\n\n// Example usage:\nif (isset($_POST['login'])) {\n  $username = $_POST['username'];\n  $password = SHA1($_POST['password']);\n  \n  user_login($username, $password);\n}\n?>\n```", null]}
