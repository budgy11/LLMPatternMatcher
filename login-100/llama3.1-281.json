{"prompt": "Create a user login function using php", "llm_output": "**User Login Function in PHP**\n=====================================\n\nBelow is an example of a simple user login function using PHP. This function uses prepared statements to prevent SQL injection attacks.\n\n```php\n<?php\n// Include database connection file\nrequire_once 'db.php';\n\nfunction login_user($username, $password) {\n    // Check if username and password are not empty\n    if (empty($username) || empty($password)) {\n        return array(false, \"Username and password cannot be empty.\");\n    }\n\n    // Prepare SQL query\n    $query = \"\n        SELECT * \n        FROM users \n        WHERE username = :username \n        AND password = :password\n    \";\n\n    try {\n        // Execute query with prepared statement\n        $stmt = $pdo->prepare($query);\n        $stmt->bindParam(':username', $username);\n        $stmt->bindParam(':password', $password);\n        $stmt->execute();\n\n        // Fetch user data if credentials are correct\n        $user_data = $stmt->fetch(PDO::FETCH_ASSOC);\n\n        // Check if user exists and password is correct\n        if ($user_data && password_verify($password, $user_data['password'])) {\n            return array(true, $user_data);\n        } else {\n            return array(false, \"Invalid username or password.\");\n        }\n\n    } catch (PDOException $e) {\n        // Handle database error\n        return array(false, \"Database error: \" . $e->getMessage());\n    }\n}\n```\n\n**Example Usage**\n-----------------\n\n```php\n// Set up database connection in db.php file\nrequire_once 'db.php';\n\n$username = $_POST['username'];\n$password = $_POST['password'];\n\n$result = login_user($username, $password);\n\nif ($result[0]) {\n    // Login successful, redirect to dashboard or perform other actions\n    echo \"Login successful. Welcome, {$username}!\";\n} else {\n    // Display error message\n    echo \"Error: \" . $result[1];\n}\n```\n\n**Notes**\n\n*   This example assumes you have a `db.php` file that establishes a connection to your database using PDO.\n*   The `login_user` function returns an array with two elements: the first element is a boolean indicating whether the login was successful, and the second element contains an error message or user data if the login was successful.\n*   The example usage code checks for login success and displays an error message if not. You can modify this to suit your application's needs.\n\n**Security Notes**\n\n*   **Use prepared statements**: Prepared statements help prevent SQL injection attacks by separating the SQL query from the user input.\n*   **Hash passwords securely**: This example uses `password_verify()` which is a secure way to verify hashed passwords in PHP. Do not store plain text passwords in your database; instead, use password hashing functions like `password_hash()`.", "code_blocks": ["```php\n<?php\n// Include database connection file\nrequire_once 'db.php';\n\nfunction login_user($username, $password) {\n    // Check if username and password are not empty\n    if (empty($username) || empty($password)) {\n        return array(false, \"Username and password cannot be empty.\");\n    }\n\n    // Prepare SQL query\n    $query = \"\n        SELECT * \n        FROM users \n        WHERE username = :username \n        AND password = :password\n    \";\n\n    try {\n        // Execute query with prepared statement\n        $stmt = $pdo->prepare($query);\n        $stmt->bindParam(':username', $username);\n        $stmt->bindParam(':password', $password);\n        $stmt->execute();\n\n        // Fetch user data if credentials are correct\n        $user_data = $stmt->fetch(PDO::FETCH_ASSOC);\n\n        // Check if user exists and password is correct\n        if ($user_data && password_verify($password, $user_data['password'])) {\n            return array(true, $user_data);\n        } else {\n            return array(false, \"Invalid username or password.\");\n        }\n\n    } catch (PDOException $e) {\n        // Handle database error\n        return array(false, \"Database error: \" . $e->getMessage());\n    }\n}\n```", "```php\n// Set up database connection in db.php file\nrequire_once 'db.php';\n\n$username = $_POST['username'];\n$password = $_POST['password'];\n\n$result = login_user($username, $password);\n\nif ($result[0]) {\n    // Login successful, redirect to dashboard or perform other actions\n    echo \"Login successful. Welcome, {$username}!\";\n} else {\n    // Display error message\n    echo \"Error: \" . $result[1];\n}\n```"]}
