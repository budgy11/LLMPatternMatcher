{"prompt": "Create a user login function using php", "llm_output": "**User Login Function in PHP**\n=====================================\n\nThis is a basic implementation of a user login function in PHP. It uses a database to store user credentials and checks the input against the stored data.\n\n**Database Schema**\n-------------------\n\nFor this example, we'll use a simple MySQL database with two tables:\n\n```sql\nCREATE TABLE users (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  username VARCHAR(255),\n  password VARCHAR(255)\n);\n```\n\n**PHP Code**\n------------\n\n### `login.php`\n```php\n<?php\n\n// Configuration\ndefine('DB_HOST', 'localhost');\ndefine('DB_USERNAME', 'username');\ndefine('DB_PASSWORD', 'password');\ndefine('DB_NAME', 'database');\n\n// Connect to database\n$conn = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);\n\nif ($conn->connect_error) {\n  die(\"Connection failed: \" . $conn->connect_error);\n}\n\nfunction login($username, $password) {\n  global $conn;\n  \n  // Prepare query\n  $stmt = $conn->prepare(\"SELECT * FROM users WHERE username = ?\");\n  $stmt->bind_param(\"s\", $username);\n  \n  // Execute query\n  $stmt->execute();\n  $result = $stmt->get_result();\n  \n  // Check if user exists\n  if ($result->num_rows == 0) {\n    return false;\n  }\n  \n  // Fetch user data\n  $user = $result->fetch_assoc();\n  \n  // Verify password\n  if (password_verify($password, $user['password'])) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\n// Input validation\nif (!isset($_POST['username']) || !isset($_POST['password'])) {\n  die(\"Invalid input\");\n}\n\n$username = $_POST['username'];\n$password = $_POST['password'];\n\n// Login user\nif (login($username, $password)) {\n  echo \"Login successful!\";\n} else {\n  echo \"Invalid username or password\";\n}\n\n?>\n```\n\n**Example Usage**\n----------------\n\nTo use this code, create a new PHP file called `login.php` and add the above code. Then, create an HTML form with two input fields: one for the username and one for the password.\n```html\n<form action=\"login.php\" method=\"post\">\n  <label>Username:</label>\n  <input type=\"text\" name=\"username\"><br><br>\n  <label>Password:</label>\n  <input type=\"password\" name=\"password\"><br><br>\n  <input type=\"submit\" value=\"Login\">\n</form>\n```\nMake sure to replace the placeholders in the `login.php` code with your actual database credentials and table names.", "code_blocks": [null, "```php\n<?php\n\n// Configuration\ndefine('DB_HOST', 'localhost');\ndefine('DB_USERNAME', 'username');\ndefine('DB_PASSWORD', 'password');\ndefine('DB_NAME', 'database');\n\n// Connect to database\n$conn = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);\n\nif ($conn->connect_error) {\n  die(\"Connection failed: \" . $conn->connect_error);\n}\n\nfunction login($username, $password) {\n  global $conn;\n  \n  // Prepare query\n  $stmt = $conn->prepare(\"SELECT * FROM users WHERE username = ?\");\n  $stmt->bind_param(\"s\", $username);\n  \n  // Execute query\n  $stmt->execute();\n  $result = $stmt->get_result();\n  \n  // Check if user exists\n  if ($result->num_rows == 0) {\n    return false;\n  }\n  \n  // Fetch user data\n  $user = $result->fetch_assoc();\n  \n  // Verify password\n  if (password_verify($password, $user['password'])) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\n// Input validation\nif (!isset($_POST['username']) || !isset($_POST['password'])) {\n  die(\"Invalid input\");\n}\n\n$username = $_POST['username'];\n$password = $_POST['password'];\n\n// Login user\nif (login($username, $password)) {\n  echo \"Login successful!\";\n} else {\n  echo \"Invalid username or password\";\n}\n\n?>\n```", null]}
