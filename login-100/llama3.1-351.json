{"prompt": "Create a user login function using php", "llm_output": "Here's an example of a basic user login function in PHP:\n\n**login.php**\n```php\n<?php\n// Configuration variables\ndefine('DB_HOST', 'localhost');\ndefine('DB_USER', 'username');\ndefine('DB_PASSWORD', 'password');\ndefine('DB_NAME', 'database');\n\n// Connect to the database\n$conn = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Function to check user credentials\nfunction login_user($username, $password) {\n    // Prepare SQL query\n    $stmt = $conn->prepare(\"SELECT * FROM users WHERE username = ? AND password = ?\");\n    \n    // Bind parameters\n    $stmt->bind_param(\"ss\", $username, $password);\n    \n    // Execute query\n    $stmt->execute();\n    \n    // Get result\n    $result = $stmt->get_result();\n    \n    // Check if user exists and password matches\n    if ($result && $result->num_rows > 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n// Function to login a user\nfunction authenticate_user($username, $password) {\n    // Check user credentials\n    $logged_in = login_user($username, $password);\n    \n    if ($logged_in) {\n        // Create session variables\n        $_SESSION['username'] = $username;\n        \n        return true; // Login successful\n    } else {\n        return false; // Login failed\n    }\n}\n\n// Handle form submission\nif ($_SERVER[\"REQUEST_METHOD\"] == \"POST\") {\n    $username = $_POST['username'];\n    $password = $_POST['password'];\n    \n    if (authenticate_user($username, $password)) {\n        echo 'Login successful!';\n    } else {\n        echo 'Invalid username or password.';\n    }\n}\n?>\n```\nThis example uses prepared statements to prevent SQL injection attacks. It assumes you have a `users` table with columns `username` and `password`.\n\n**How it works:**\n\n1. The script connects to the database using `mysqli`.\n2. The `login_user` function checks if the user's credentials match by executing a SQL query.\n3. The `authenticate_user` function calls `login_user` and, if successful, creates session variables for the logged-in user.\n4. When the form is submitted (using `$_SERVER[\"REQUEST_METHOD\"] == \"POST\"`), the script checks if the login was successful using `authenticate_user`.\n\n**Note:** This example uses basic authentication. For a production environment, you should consider implementing more advanced security measures, such as password hashing and salting.\n\nAlso, remember to include session_start(); at the top of your PHP file (if it's not already there) to enable sessions.\n\nYou can use this function by calling `authenticate_user($username, $password)` in your code.", "code_blocks": ["```php\n<?php\n// Configuration variables\ndefine('DB_HOST', 'localhost');\ndefine('DB_USER', 'username');\ndefine('DB_PASSWORD', 'password');\ndefine('DB_NAME', 'database');\n\n// Connect to the database\n$conn = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Function to check user credentials\nfunction login_user($username, $password) {\n    // Prepare SQL query\n    $stmt = $conn->prepare(\"SELECT * FROM users WHERE username = ? AND password = ?\");\n    \n    // Bind parameters\n    $stmt->bind_param(\"ss\", $username, $password);\n    \n    // Execute query\n    $stmt->execute();\n    \n    // Get result\n    $result = $stmt->get_result();\n    \n    // Check if user exists and password matches\n    if ($result && $result->num_rows > 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n// Function to login a user\nfunction authenticate_user($username, $password) {\n    // Check user credentials\n    $logged_in = login_user($username, $password);\n    \n    if ($logged_in) {\n        // Create session variables\n        $_SESSION['username'] = $username;\n        \n        return true; // Login successful\n    } else {\n        return false; // Login failed\n    }\n}\n\n// Handle form submission\nif ($_SERVER[\"REQUEST_METHOD\"] == \"POST\") {\n    $username = $_POST['username'];\n    $password = $_POST['password'];\n    \n    if (authenticate_user($username, $password)) {\n        echo 'Login successful!';\n    } else {\n        echo 'Invalid username or password.';\n    }\n}\n?>\n```"]}
