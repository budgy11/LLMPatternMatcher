{"prompt": "Create a user login function using php", "llm_output": "Here is an example of a basic user login function in PHP:\n\n**login.php**\n```php\n<?php\n// Configuration\n$db_host = 'localhost';\n$db_username = 'username';\n$db_password = 'password';\n$db_name = 'database';\n\n// Connect to database\n$conn = mysqli_connect($db_host, $db_username, $db_password, $db_name);\nif (!$conn) {\n    die(\"Connection failed: \" . mysqli_connect_error());\n}\n\nfunction login_user($username, $password) {\n    // Prepare SQL query\n    $sql = \"SELECT * FROM users WHERE username = '$username' AND password = '\".mysqli_real_escape_string($conn, $password).\"'\";\n\n    // Execute query and store result\n    $result = mysqli_query($conn, $sql);\n    if (mysqli_num_rows($result) > 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\nfunction verify_user($username, $password) {\n    // Hash password before comparing with stored hash\n    $hashed_password = password_hash($password, PASSWORD_DEFAULT);\n\n    // Prepare SQL query\n    $sql = \"SELECT * FROM users WHERE username = '$username' AND password = '$hashed_password'\";\n\n    // Execute query and store result\n    $result = mysqli_query($conn, $sql);\n    if (mysqli_num_rows($result) > 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    $username = $_POST['username'];\n    $password = $_POST['password'];\n\n    // Login user\n    if (login_user($username, $password)) {\n        echo \"Login successful!\";\n    } else {\n        echo \"Invalid username or password.\";\n    }\n} else {\n    ?>\n    <html>\n    <body>\n    <form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n        Username: <input type=\"text\" name=\"username\"><br><br>\n        Password: <input type=\"password\" name=\"password\"><br><br>\n        <input type=\"submit\" value=\"Login\">\n    </form>\n    <?php\n}\n?>\n```\n**Explanation**\n\nThis example uses the MySQLi extension to connect to a database and store user login information. The `login_user` function takes in the username and password as arguments, prepares an SQL query to check if the credentials are valid, and executes it using `mysqli_query`. If the result is not empty, it returns true; otherwise, it returns false.\n\nThe `verify_user` function is similar but uses `password_hash` to hash the provided password before comparing it with the stored hash.\n\nIn the main script, we check if the form has been submitted (i.e., `$_SERVER['REQUEST_METHOD'] == 'POST'`). If so, we call the `login_user` function with the provided username and password. If the user is logged in successfully, we echo a success message; otherwise, we display an error message.\n\n**Note**\n\nThis example uses basic security measures to protect against SQL injection attacks (e.g., `mysqli_real_escape_string`). However, you should always consider using prepared statements or parameterized queries for improved security and scalability. Additionally, storing passwords in plain text is not recommended; instead, use a secure password hashing library like `password_hash` as shown here.\n\nAlso, remember to replace the placeholders (`$db_host`, `$db_username`, etc.) with your actual database credentials and settings.\n\n**Security Considerations**\n\n*   **Password storage**: Storing passwords in plain text is insecure. Use a secure password hashing algorithm like `password_hash`.\n*   **SQL injection protection**: Always use prepared statements or parameterized queries to prevent SQL injection attacks.\n*   **Input validation**: Validate user input (e.g., username, password) before processing it.\n*   **Error handling**: Handle errors and exceptions properly to avoid exposing sensitive information.\n\nRemember to consult the official PHP documentation for more information on using MySQLi, password hashing, and other security measures.", "code_blocks": ["```php\n<?php\n// Configuration\n$db_host = 'localhost';\n$db_username = 'username';\n$db_password = 'password';\n$db_name = 'database';\n\n// Connect to database\n$conn = mysqli_connect($db_host, $db_username, $db_password, $db_name);\nif (!$conn) {\n    die(\"Connection failed: \" . mysqli_connect_error());\n}\n\nfunction login_user($username, $password) {\n    // Prepare SQL query\n    $sql = \"SELECT * FROM users WHERE username = '$username' AND password = '\".mysqli_real_escape_string($conn, $password).\"'\";\n\n    // Execute query and store result\n    $result = mysqli_query($conn, $sql);\n    if (mysqli_num_rows($result) > 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\nfunction verify_user($username, $password) {\n    // Hash password before comparing with stored hash\n    $hashed_password = password_hash($password, PASSWORD_DEFAULT);\n\n    // Prepare SQL query\n    $sql = \"SELECT * FROM users WHERE username = '$username' AND password = '$hashed_password'\";\n\n    // Execute query and store result\n    $result = mysqli_query($conn, $sql);\n    if (mysqli_num_rows($result) > 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    $username = $_POST['username'];\n    $password = $_POST['password'];\n\n    // Login user\n    if (login_user($username, $password)) {\n        echo \"Login successful!\";\n    } else {\n        echo \"Invalid username or password.\";\n    }\n} else {\n    ?>\n    <html>\n    <body>\n    <form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n        Username: <input type=\"text\" name=\"username\"><br><br>\n        Password: <input type=\"password\" name=\"password\"><br><br>\n        <input type=\"submit\" value=\"Login\">\n    </form>\n    <?php\n}\n?>\n```"]}
