{"prompt": "Create a user login function using php", "llm_output": "Here's an example of a basic user login function in PHP. This example assumes you have a database set up with the following structure:\n\n**users table:**\n\n| Column Name | Data Type |\n| --- | --- |\n| id | int (primary key) |\n| username | varchar(255) |\n| password | varchar(255) |\n\n```php\n<?php\n\n// Check if user has submitted the login form\nif (isset($_POST['username']) && isset($_POST['password'])) {\n\n    // Extract user input from the form\n    $username = $_POST['username'];\n    $password = $_POST['password'];\n\n    // Connect to database\n    $servername = \"localhost\";\n    $usernameDB = \"root\";\n    $passwordDB = \"\";\n    $dbname = \"mydatabase\";\n\n    try {\n        $conn = new PDO(\"mysql:host=$servername;dbname=$dbname\", $usernameDB, $passwordDB);\n        // Set the PDO error mode to exception\n        $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);\n\n        // Prepare and execute SQL query to select user data from database\n        $stmt = $conn->prepare(\"SELECT * FROM users WHERE username = :username\");\n        $stmt->bindParam(':username', $username);\n        $stmt->execute();\n\n        // Fetch the result of the SQL query\n        $user_data = $stmt->fetch(PDO::FETCH_ASSOC);\n\n        if ($user_data) {\n\n            // Check if password matches stored in database\n            if (password_verify($password, $user_data['password'])) {\n\n                // Login successful, redirect to dashboard or other protected page\n                header('Location: dashboard.php');\n                exit;\n\n            } else {\n                echo \"Invalid username or password\";\n            }\n\n        } else {\n            echo \"User not found\";\n        }\n    } catch(PDOException $e) {\n        echo \"Connection failed: \" . $e->getMessage();\n    }\n\n    // Close database connection\n    $conn = null;\n}\n\n?>\n```\n\n**login form (index.php):**\n\n```html\n<form method=\"post\" action=\"<?php echo $_SERVER['PHP_SELF']; ?>\">\n  <input type=\"text\" name=\"username\" placeholder=\"Username\">\n  <input type=\"password\" name=\"password\" placeholder=\"Password\">\n  <button type=\"submit\">Login</button>\n</form>\n```\n\nThis is a basic example. You should consider implementing security measures, such as:\n\n* Hashing and salting passwords (I've used `password_verify` function for this example)\n* Input validation and sanitization\n* Using prepared statements to prevent SQL injection attacks\n\nRemember that this code does not include any error checking or other features you may want in a real-world application.", "code_blocks": ["```php\n<?php\n\n// Check if user has submitted the login form\nif (isset($_POST['username']) && isset($_POST['password'])) {\n\n    // Extract user input from the form\n    $username = $_POST['username'];\n    $password = $_POST['password'];\n\n    // Connect to database\n    $servername = \"localhost\";\n    $usernameDB = \"root\";\n    $passwordDB = \"\";\n    $dbname = \"mydatabase\";\n\n    try {\n        $conn = new PDO(\"mysql:host=$servername;dbname=$dbname\", $usernameDB, $passwordDB);\n        // Set the PDO error mode to exception\n        $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);\n\n        // Prepare and execute SQL query to select user data from database\n        $stmt = $conn->prepare(\"SELECT * FROM users WHERE username = :username\");\n        $stmt->bindParam(':username', $username);\n        $stmt->execute();\n\n        // Fetch the result of the SQL query\n        $user_data = $stmt->fetch(PDO::FETCH_ASSOC);\n\n        if ($user_data) {\n\n            // Check if password matches stored in database\n            if (password_verify($password, $user_data['password'])) {\n\n                // Login successful, redirect to dashboard or other protected page\n                header('Location: dashboard.php');\n                exit;\n\n            } else {\n                echo \"Invalid username or password\";\n            }\n\n        } else {\n            echo \"User not found\";\n        }\n    } catch(PDOException $e) {\n        echo \"Connection failed: \" . $e->getMessage();\n    }\n\n    // Close database connection\n    $conn = null;\n}\n\n?>\n```", null]}
