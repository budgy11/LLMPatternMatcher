{"prompt": "Create a user login function using php", "llm_output": "Here is an example of a basic user login function in PHP:\n\n**login.php**\n```php\n<?php\n// Configuration\n$db_host = 'localhost';\n$db_username = 'your_username';\n$db_password = 'your_password';\n$db_name = 'your_database';\n\n// Connect to database\n$conn = new mysqli($db_host, $db_username, $db_password, $db_name);\n\n// Check connection\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Get user input\n$username = $_POST['username'];\n$password = $_POST['password'];\n\n// Sanitize user input (using prepared statements for security)\n$stmt = $conn->prepare('SELECT * FROM users WHERE username = ?');\n$stmt->bind_param('s', $username);\n$stmt->execute();\n$result = $stmt->get_result();\n\n// Check if user exists\nif ($result->num_rows == 1) {\n    // Get the user's data from the database\n    $row = $result->fetch_assoc();\n\n    // Hash the password and compare it with the one in the database\n    $hashed_password = hash('sha256', $password);\n    if ($hashed_password === $row['password']) {\n        // Login successful, set session variables\n        $_SESSION['username'] = $username;\n        $_SESSION['logged_in'] = true;\n\n        echo \"Login successful!\";\n        header('Location: dashboard.php');\n        exit();\n    } else {\n        echo \"Invalid password\";\n    }\n} else {\n    echo \"User not found\";\n}\n\n// Close database connection\n$conn->close();\n\n?>\n```\n**Note:** This is a basic example, and you should consider implementing additional security measures such as:\n\n* Using a secure password hashing algorithm (e.g., bcrypt)\n* Validating user input to prevent SQL injection attacks\n* Limiting login attempts to prevent brute-force attacks\n\nHere's an explanation of how the code works:\n\n1. The script connects to the database using MySQLi.\n2. It gets the username and password from the `$_POST` array (which is generated by a form submission).\n3. It uses prepared statements with parameterized queries to sanitize the user input and prevent SQL injection attacks.\n4. If the user exists, it hashes the password and compares it with the one in the database. If they match, it sets session variables to indicate that the user has successfully logged in.\n5. Finally, it redirects the user to a dashboard page (which is not included in this example).\n\n**Remember:** This is just an example, and you should adapt it to your specific use case and security requirements.\n\nExample usage:\n\nCreate a login form (`login.html`) with fields for username and password:\n```html\n<form action=\"login.php\" method=\"post\">\n    <input type=\"text\" name=\"username\" placeholder=\"Username\">\n    <input type=\"password\" name=\"password\" placeholder=\"Password\">\n    <button type=\"submit\">Login</button>\n</form>\n```\nWhen the form is submitted, it will redirect to `login.php`, which will authenticate the user and redirect them to a dashboard page (if login is successful).", "code_blocks": ["```php\n<?php\n// Configuration\n$db_host = 'localhost';\n$db_username = 'your_username';\n$db_password = 'your_password';\n$db_name = 'your_database';\n\n// Connect to database\n$conn = new mysqli($db_host, $db_username, $db_password, $db_name);\n\n// Check connection\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Get user input\n$username = $_POST['username'];\n$password = $_POST['password'];\n\n// Sanitize user input (using prepared statements for security)\n$stmt = $conn->prepare('SELECT * FROM users WHERE username = ?');\n$stmt->bind_param('s', $username);\n$stmt->execute();\n$result = $stmt->get_result();\n\n// Check if user exists\nif ($result->num_rows == 1) {\n    // Get the user's data from the database\n    $row = $result->fetch_assoc();\n\n    // Hash the password and compare it with the one in the database\n    $hashed_password = hash('sha256', $password);\n    if ($hashed_password === $row['password']) {\n        // Login successful, set session variables\n        $_SESSION['username'] = $username;\n        $_SESSION['logged_in'] = true;\n\n        echo \"Login successful!\";\n        header('Location: dashboard.php');\n        exit();\n    } else {\n        echo \"Invalid password\";\n    }\n} else {\n    echo \"User not found\";\n}\n\n// Close database connection\n$conn->close();\n\n?>\n```", null]}
