{"prompt": "Create a user login function using php", "llm_output": "Here's an example of how to create a simple user login function using PHP:\n\n**Database Schema**\n\nAssuming you have the following database schema:\n```sql\nCREATE TABLE users (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  username VARCHAR(255) NOT NULL,\n  password VARCHAR(255) NOT NULL\n);\n```\n**Login Function (login.php)**\n\nCreate a new file called `login.php` and add the following code:\n```php\n<?php\n// Define database connection settings\n$servername = \"localhost\";\n$username = \"your_username\";\n$password = \"your_password\";\n$dbname = \"your_database\";\n\n// Create a connection to the database\n$conn = new mysqli($servername, $username, $password, $dbname);\n\n// Check if the connection was successful\nif ($conn->connect_error) {\n  die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Function to login user\nfunction login_user($username, $password) {\n  // Prepare SQL query\n  $stmt = $conn->prepare(\"SELECT * FROM users WHERE username = ?\");\n  $stmt->bind_param(\"s\", $username);\n\n  // Execute query and get result\n  $stmt->execute();\n  $result = $stmt->get_result();\n\n  // Fetch row from result\n  $row = $result->fetch_assoc();\n\n  // Check if user exists\n  if ($row) {\n    // Hash password to compare with stored hash\n    $hash = password_hash($password, PASSWORD_DEFAULT);\n    if (password_verify($hash, $row['password'])) {\n      return true; // User logged in successfully\n    } else {\n      echo \"Invalid username or password\";\n    }\n  } else {\n    echo \"User not found\";\n  }\n\n  // Close prepared statement and connection\n  $stmt->close();\n  $conn->close();\n\n  return false;\n}\n\n// Example usage:\n$username = $_POST['username'];\n$password = $_POST['password'];\n\nif (login_user($username, $password)) {\n  echo \"Login successful!\";\n} else {\n  echo \"Invalid login credentials\";\n}\n?>\n```\n**Explanation**\n\nThis code defines a function called `login_user` that takes in the user's username and password as input. It then:\n\n1. Prepares an SQL query to select all rows from the `users` table where the `username` column matches the input.\n2. Executes the prepared statement and gets the result.\n3. Checks if a row is returned (i.e., the user exists).\n4. If the user exists, it hashes the password using PHP's built-in `password_hash` function to generate a new hash value.\n5. It then compares this new hash value with the stored password in the database by calling `password_verify`.\n6. If both values match, the user is considered logged in successfully.\n\nNote: This code uses prepared statements to prevent SQL injection attacks.\n\n**Example Use Case**\n\nTo use this login function, create a simple HTML form to collect the user's username and password:\n```html\n<form action=\"login.php\" method=\"post\">\n  <input type=\"text\" name=\"username\" placeholder=\"Username\">\n  <input type=\"password\" name=\"password\" placeholder=\"Password\">\n  <button type=\"submit\">Login</button>\n</form>\n```\nWhen the form is submitted, the `login_user` function will be called with the user's input values. If login is successful, it will echo \"Login successful!\". Otherwise, it will display an error message.\n\nRemember to replace the placeholders (`$your_username`, `$your_password`, `$your_database`) with your actual database credentials.", "code_blocks": [null, "```php\n<?php\n// Define database connection settings\n$servername = \"localhost\";\n$username = \"your_username\";\n$password = \"your_password\";\n$dbname = \"your_database\";\n\n// Create a connection to the database\n$conn = new mysqli($servername, $username, $password, $dbname);\n\n// Check if the connection was successful\nif ($conn->connect_error) {\n  die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Function to login user\nfunction login_user($username, $password) {\n  // Prepare SQL query\n  $stmt = $conn->prepare(\"SELECT * FROM users WHERE username = ?\");\n  $stmt->bind_param(\"s\", $username);\n\n  // Execute query and get result\n  $stmt->execute();\n  $result = $stmt->get_result();\n\n  // Fetch row from result\n  $row = $result->fetch_assoc();\n\n  // Check if user exists\n  if ($row) {\n    // Hash password to compare with stored hash\n    $hash = password_hash($password, PASSWORD_DEFAULT);\n    if (password_verify($hash, $row['password'])) {\n      return true; // User logged in successfully\n    } else {\n      echo \"Invalid username or password\";\n    }\n  } else {\n    echo \"User not found\";\n  }\n\n  // Close prepared statement and connection\n  $stmt->close();\n  $conn->close();\n\n  return false;\n}\n\n// Example usage:\n$username = $_POST['username'];\n$password = $_POST['password'];\n\nif (login_user($username, $password)) {\n  echo \"Login successful!\";\n} else {\n  echo \"Invalid login credentials\";\n}\n?>\n```", null]}
