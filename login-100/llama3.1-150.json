{"prompt": "Create a user login function using php", "llm_output": "Here's an example of a simple user login system in PHP:\n\n**Database Setup**\n\nBefore we begin, let's assume you have a database with two tables: `users` and `sessions`. The `users` table has the following structure:\n\n| Field Name | Data Type |\n| --- | --- |\n| id | int (primary key) |\n| username | varchar(50) |\n| password | varchar(255) |\n\nThe `sessions` table has the following structure:\n\n| Field Name | Data Type |\n| --- | --- |\n| id | int (primary key) |\n| user_id | int (foreign key referencing users.id) |\n| session_data | text |\n\n**PHP Code**\n\nCreate a new PHP file named `login.php`. In this file, we'll create the following functions:\n\n```php\n<?php\n\n// Configuration\ndefine('DB_HOST', 'localhost');\ndefine('DB_USERNAME', 'your_username');\ndefine('DB_PASSWORD', 'your_password');\ndefine('DB_NAME', 'your_database');\n\n// Database connection function\nfunction connect_to_db() {\n    $conn = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);\n    if ($conn->connect_error) {\n        die(\"Connection failed: \" . $conn->connect_error);\n    }\n    return $conn;\n}\n\n// Login function\nfunction login_user($username, $password) {\n    // Connect to database\n    $conn = connect_to_db();\n\n    // Query users table for user with matching username and password\n    $stmt = $conn->prepare(\"SELECT * FROM users WHERE username = ? AND password = ?\");\n    $stmt->bind_param(\"ss\", $username, hash('sha256', $password));\n    $stmt->execute();\n    $result = $stmt->get_result();\n\n    // If user exists, create a new session\n    if ($result->num_rows > 0) {\n        $user_data = $result->fetch_assoc();\n        $session_id = generate_session_id($conn);\n        insert_into_sessions($conn, $session_id, $user_data['id']);\n\n        // Return user data and session ID\n        return array(\n            'success' => true,\n            'username' => $username,\n            'session_id' => $session_id,\n            'message' => 'Logged in successfully'\n        );\n    } else {\n        return array('success' => false, 'message' => 'Invalid username or password');\n    }\n\n    // Close database connection\n    $conn->close();\n}\n\n// Generate a unique session ID\nfunction generate_session_id($conn) {\n    return bin2hex(random_bytes(32));\n}\n\n// Insert into sessions table\nfunction insert_into_sessions($conn, $session_id, $user_id) {\n    $stmt = $conn->prepare(\"INSERT INTO sessions (id, user_id, session_data) VALUES (?, ?, ?)\");\n    $stmt->bind_param(\"iss\", $session_id, $user_id, json_encode(array('last_seen' => time())));\n    $stmt->execute();\n}\n\n// Call login_user function\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    $username = $_POST['username'];\n    $password = $_POST['password'];\n\n    // Hash password for security (not shown in this example)\n    $hashed_password = hash('sha256', $password);\n\n    $result = login_user($username, $hashed_password);\n    echo json_encode($result);\n}\n```\n\n**Explanation**\n\nThis script connects to a MySQL database using the `mysqli` extension. It defines three functions:\n\n1.  `connect_to_db`: Connects to the database and returns a connection object.\n2.  `login_user`: Tries to log in a user based on their username and password. If successful, it generates a new session ID, inserts the user's data into the sessions table, and returns an array with user data and session ID.\n3.  `generate_session_id`: Generates a unique session ID using the `random_bytes` function.\n4.  `insert_into_sessions`: Inserts the user's data into the sessions table.\n\nThe script uses prepared statements to prevent SQL injection attacks. The `login_user` function checks if a user exists in the database with the provided username and password. If they do, it creates a new session for that user and returns their data along with the session ID.\n\nTo use this code, create an HTML form with fields for the username and password, and submit it to this PHP file. The `login_user` function will be called when the form is submitted, and it will return a JSON response with the login result.", "code_blocks": ["```php\n<?php\n\n// Configuration\ndefine('DB_HOST', 'localhost');\ndefine('DB_USERNAME', 'your_username');\ndefine('DB_PASSWORD', 'your_password');\ndefine('DB_NAME', 'your_database');\n\n// Database connection function\nfunction connect_to_db() {\n    $conn = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);\n    if ($conn->connect_error) {\n        die(\"Connection failed: \" . $conn->connect_error);\n    }\n    return $conn;\n}\n\n// Login function\nfunction login_user($username, $password) {\n    // Connect to database\n    $conn = connect_to_db();\n\n    // Query users table for user with matching username and password\n    $stmt = $conn->prepare(\"SELECT * FROM users WHERE username = ? AND password = ?\");\n    $stmt->bind_param(\"ss\", $username, hash('sha256', $password));\n    $stmt->execute();\n    $result = $stmt->get_result();\n\n    // If user exists, create a new session\n    if ($result->num_rows > 0) {\n        $user_data = $result->fetch_assoc();\n        $session_id = generate_session_id($conn);\n        insert_into_sessions($conn, $session_id, $user_data['id']);\n\n        // Return user data and session ID\n        return array(\n            'success' => true,\n            'username' => $username,\n            'session_id' => $session_id,\n            'message' => 'Logged in successfully'\n        );\n    } else {\n        return array('success' => false, 'message' => 'Invalid username or password');\n    }\n\n    // Close database connection\n    $conn->close();\n}\n\n// Generate a unique session ID\nfunction generate_session_id($conn) {\n    return bin2hex(random_bytes(32));\n}\n\n// Insert into sessions table\nfunction insert_into_sessions($conn, $session_id, $user_id) {\n    $stmt = $conn->prepare(\"INSERT INTO sessions (id, user_id, session_data) VALUES (?, ?, ?)\");\n    $stmt->bind_param(\"iss\", $session_id, $user_id, json_encode(array('last_seen' => time())));\n    $stmt->execute();\n}\n\n// Call login_user function\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    $username = $_POST['username'];\n    $password = $_POST['password'];\n\n    // Hash password for security (not shown in this example)\n    $hashed_password = hash('sha256', $password);\n\n    $result = login_user($username, $hashed_password);\n    echo json_encode($result);\n}\n```"]}
