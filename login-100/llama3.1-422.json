{"prompt": "Create a user login function using php", "llm_output": "**User Login Function in PHP**\n=====================================\n\nThis example demonstrates a simple user login functionality using PHP. It includes password hashing and verification for secure authentication.\n\n### Database Setup\n\nAssuming you have a database with the following structure:\n```sql\nCREATE TABLE users (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  username VARCHAR(255) NOT NULL,\n  email VARCHAR(255) NOT NULL,\n  password VARCHAR(255) NOT NULL\n);\n```\n### PHP Code\n\n**login.php**\n```php\n<?php\n\n// Configuration\ndefine('DB_HOST', 'localhost');\ndefine('DB_USER', 'your_username');\ndefine('DB_PASSWORD', 'your_password');\ndefine('DB_NAME', 'your_database');\n\n// Connect to database\n$conn = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\nfunction hashPassword($password) {\n    // Use a secure hashing algorithm like bcrypt or argon2\n    return password_hash($password, PASSWORD_BCRYPT);\n}\n\nfunction verifyPassword($password, $hashedPassword) {\n    // Verify the provided password against the hashed one\n    return password_verify($password, $hashedPassword);\n}\n\n// Handle login form submission\nif (isset($_POST['username']) && isset($_POST['password'])) {\n    $username = $_POST['username'];\n    $password = $_POST['password'];\n\n    // Retrieve user data from database\n    $query = \"SELECT * FROM users WHERE username = '$username'\";\n    $result = $conn->query($query);\n\n    if ($result->num_rows > 0) {\n        $user = $result->fetch_assoc();\n        $hashedPassword = $user['password'];\n\n        // Verify password\n        if (verifyPassword($password, $hashedPassword)) {\n            // Login successful, store user data in session\n            $_SESSION['username'] = $username;\n            header('Location: dashboard.php');\n            exit;\n        } else {\n            echo 'Invalid username or password';\n        }\n    } else {\n        echo 'User not found';\n    }\n}\n\n// Close database connection\n$conn->close();\n\n?>\n```\n### Explanation\n\n1. The script connects to the database using the `mysqli` extension.\n2. It defines two functions: `hashPassword()` and `verifyPassword()`, which are used for password hashing and verification, respectively.\n3. When a login form is submitted, it retrieves the user data from the database based on the provided username.\n4. It verifies the provided password against the hashed one using the `verifyPassword()` function.\n5. If the password is valid, it stores the user data in a session and redirects to the dashboard page.\n\n### Security Notes\n\n* Always use secure hashing algorithms like bcrypt or argon2 for password storage.\n* Never store passwords in plain text or use weak hashing algorithms like MD5 or SHA1.\n* Use prepared statements to prevent SQL injection attacks.\n* Verify the user's IP address and other security measures as needed.", "code_blocks": [null, "```php\n<?php\n\n// Configuration\ndefine('DB_HOST', 'localhost');\ndefine('DB_USER', 'your_username');\ndefine('DB_PASSWORD', 'your_password');\ndefine('DB_NAME', 'your_database');\n\n// Connect to database\n$conn = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\nfunction hashPassword($password) {\n    // Use a secure hashing algorithm like bcrypt or argon2\n    return password_hash($password, PASSWORD_BCRYPT);\n}\n\nfunction verifyPassword($password, $hashedPassword) {\n    // Verify the provided password against the hashed one\n    return password_verify($password, $hashedPassword);\n}\n\n// Handle login form submission\nif (isset($_POST['username']) && isset($_POST['password'])) {\n    $username = $_POST['username'];\n    $password = $_POST['password'];\n\n    // Retrieve user data from database\n    $query = \"SELECT * FROM users WHERE username = '$username'\";\n    $result = $conn->query($query);\n\n    if ($result->num_rows > 0) {\n        $user = $result->fetch_assoc();\n        $hashedPassword = $user['password'];\n\n        // Verify password\n        if (verifyPassword($password, $hashedPassword)) {\n            // Login successful, store user data in session\n            $_SESSION['username'] = $username;\n            header('Location: dashboard.php');\n            exit;\n        } else {\n            echo 'Invalid username or password';\n        }\n    } else {\n        echo 'User not found';\n    }\n}\n\n// Close database connection\n$conn->close();\n\n?>\n```"]}
