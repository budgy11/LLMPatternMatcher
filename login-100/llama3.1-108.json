{"prompt": "Create a user login function using php", "llm_output": "Here's an example of a basic user login function using PHP and MySQL:\n\n**Note:** This code uses prepared statements to prevent SQL injection attacks.\n\n**login.php:**\n```php\n<?php\n// Configuration\n$host = 'localhost';\n$dbname = 'your_database_name';\n$username = 'your_database_username';\n$password = 'your_database_password';\n\ntry {\n    // Connect to database\n    $conn = new PDO(\"mysql:host=$host;dbname=$dbname\", $username, $password);\n    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);\n\n    // Process login form submission\n    if ($_SERVER['REQUEST_METHOD'] == 'POST') {\n        $email = $_POST['email'];\n        $password = $_POST['password'];\n\n        // Hash password for comparison (use a library like BCrypt or Argon2)\n        $hashedPassword = hash('sha256', $password);\n\n        // Prepare SQL query\n        $stmt = $conn->prepare(\"SELECT * FROM users WHERE email = :email AND password = :password\");\n        $stmt->bindParam(':email', $email);\n        $stmt->bindParam(':password', $hashedPassword);\n\n        // Execute query and retrieve user data\n        if ($stmt->execute()) {\n            $user = $stmt->fetch();\n            if ($user) {\n                // User found, log them in\n                $_SESSION['uid'] = $user['id'];\n                header('Location: dashboard.php');\n                exit;\n            } else {\n                echo 'Invalid email or password.';\n            }\n        } else {\n            echo 'Error logging in. Please try again later.';\n        }\n    }\n\n} catch (PDOException $e) {\n    echo 'Error connecting to database: ' . $e->getMessage();\n}\n\n// Close connection\n$conn = null;\n?>\n```\n**index.php (login form):**\n```php\n<?php\nrequire_once('login.php');\n\nif (!isset($_SESSION['uid'])) : ?>\n    <form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n        Email: <input type=\"text\" name=\"email\"><br><br>\n        Password: <input type=\"password\" name=\"password\"><br><br>\n        <button type=\"submit\">Login</button>\n    </form>\n<?php endif; ?>\n```\n**Note:**\n\n1. This code assumes you have a `users` table with columns `id`, `email`, and `password`.\n2. The password should be stored in the database using a secure hashing algorithm like BCrypt or Argon2.\n3. In a real-world application, you would want to handle errors and exceptions more robustly.\n4. This code does not implement user authentication after login (e.g., session management). You'll need to add that logic yourself.\n\nRemember to replace the placeholders (`$host`, `$dbname`, `$username`, `$password`) with your actual database credentials!", "code_blocks": ["```php\n<?php\n// Configuration\n$host = 'localhost';\n$dbname = 'your_database_name';\n$username = 'your_database_username';\n$password = 'your_database_password';\n\ntry {\n    // Connect to database\n    $conn = new PDO(\"mysql:host=$host;dbname=$dbname\", $username, $password);\n    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);\n\n    // Process login form submission\n    if ($_SERVER['REQUEST_METHOD'] == 'POST') {\n        $email = $_POST['email'];\n        $password = $_POST['password'];\n\n        // Hash password for comparison (use a library like BCrypt or Argon2)\n        $hashedPassword = hash('sha256', $password);\n\n        // Prepare SQL query\n        $stmt = $conn->prepare(\"SELECT * FROM users WHERE email = :email AND password = :password\");\n        $stmt->bindParam(':email', $email);\n        $stmt->bindParam(':password', $hashedPassword);\n\n        // Execute query and retrieve user data\n        if ($stmt->execute()) {\n            $user = $stmt->fetch();\n            if ($user) {\n                // User found, log them in\n                $_SESSION['uid'] = $user['id'];\n                header('Location: dashboard.php');\n                exit;\n            } else {\n                echo 'Invalid email or password.';\n            }\n        } else {\n            echo 'Error logging in. Please try again later.';\n        }\n    }\n\n} catch (PDOException $e) {\n    echo 'Error connecting to database: ' . $e->getMessage();\n}\n\n// Close connection\n$conn = null;\n?>\n```", "```php\n<?php\nrequire_once('login.php');\n\nif (!isset($_SESSION['uid'])) : ?>\n    <form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n        Email: <input type=\"text\" name=\"email\"><br><br>\n        Password: <input type=\"password\" name=\"password\"><br><br>\n        <button type=\"submit\">Login</button>\n    </form>\n<?php endif; ?>\n```"]}
