{"prompt": "Create a user login function using php", "llm_output": "**User Login Function in PHP**\n=====================================\n\nHere is an example of a simple user login function using PHP and MySQL. This function will check the user's credentials against the database, and return true if they are valid.\n\n**Database Setup**\n\nBefore we can use this function, you'll need to create a MySQL database and table for users. Here's an example SQL command:\n\n```sql\nCREATE TABLE users (\n  id INT AUTO_INCREMENT PRIMARY KEY,\n  username VARCHAR(255),\n  password VARCHAR(255)\n);\n```\n\n**User Login Function**\n-----------------------\n\n```php\n<?php\n\n// Configuration\n$db_host = 'localhost';\n$db_username = 'your_username';\n$db_password = 'your_password';\n$db_name = 'your_database';\n\nfunction login_user($username, $password) {\n  global $db_host, $db_username, $db_password, $db_name;\n\n  // Connect to database\n  $conn = new mysqli($db_host, $db_username, $db_password, $db_name);\n  if ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n  }\n\n  // Get user data from database\n  $sql = \"SELECT * FROM users WHERE username = '$username'\";\n  $result = $conn->query($sql);\n\n  if ($result->num_rows > 0) {\n    // User found, check password\n    while ($row = $result->fetch_assoc()) {\n      if (password_verify($password, $row['password'])) {\n        return true; // Login successful\n      }\n    }\n  }\n\n  return false; // Login failed\n}\n\n?>\n```\n\n**Using the Function**\n------------------------\n\n```php\n<?php\n\n// Get user credentials from form or elsewhere\n$username = $_POST['username'];\n$password = $_POST['password'];\n\n// Call login_user function\nif (login_user($username, $password)) {\n  echo \"Login successful!\";\n} else {\n  echo \"Invalid username or password.\";\n}\n\n?>\n```\n\n**Security Notes**\n\n* Always use prepared statements to prevent SQL injection.\n* Use a secure way of storing passwords, such as `password_hash()` and `password_verify()`.\n* Never store plaintext passwords in your database.\n\nThis is just a basic example, and you should adjust the code to fit your specific needs. Make sure to test it thoroughly before using it in production.", "code_blocks": [null, "```php\n<?php\n\n// Configuration\n$db_host = 'localhost';\n$db_username = 'your_username';\n$db_password = 'your_password';\n$db_name = 'your_database';\n\nfunction login_user($username, $password) {\n  global $db_host, $db_username, $db_password, $db_name;\n\n  // Connect to database\n  $conn = new mysqli($db_host, $db_username, $db_password, $db_name);\n  if ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n  }\n\n  // Get user data from database\n  $sql = \"SELECT * FROM users WHERE username = '$username'\";\n  $result = $conn->query($sql);\n\n  if ($result->num_rows > 0) {\n    // User found, check password\n    while ($row = $result->fetch_assoc()) {\n      if (password_verify($password, $row['password'])) {\n        return true; // Login successful\n      }\n    }\n  }\n\n  return false; // Login failed\n}\n\n?>\n```", "```php\n<?php\n\n// Get user credentials from form or elsewhere\n$username = $_POST['username'];\n$password = $_POST['password'];\n\n// Call login_user function\nif (login_user($username, $password)) {\n  echo \"Login successful!\";\n} else {\n  echo \"Invalid username or password.\";\n}\n\n?>\n```"]}
