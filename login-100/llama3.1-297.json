{"prompt": "Create a user login function using php", "llm_output": "**User Login Function in PHP**\n=====================================\n\nBelow is an example of a user login function written in PHP. This function uses prepared statements to prevent SQL injection attacks.\n\n### `login.php` file\n```php\n<?php\n\n// Configuration settings\n$dbHost = 'localhost';\n$dbUsername = 'root';\n$dbPassword = '';\n$dbName = 'mydatabase';\n\ntry {\n    // Establish database connection\n    $conn = new PDO(\"mysql:host=$dbHost;dbname=$dbName\", $dbUsername, $dbPassword);\n    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);\n\n    function login($username, $password) {\n        global $conn;\n\n        // Query to select user by username and password\n        $stmt = $conn->prepare(\"SELECT * FROM users WHERE username = :username AND password = :password\");\n        $stmt->bindParam(':username', $username);\n        $stmt->bindParam(':password', $password);\n\n        // Execute query and fetch result\n        $stmt->execute();\n        $result = $stmt->fetch(PDO::FETCH_ASSOC);\n\n        if ($result) {\n            // If user exists, return their ID\n            return $result['id'];\n        } else {\n            // If user does not exist or password is incorrect, return false\n            return false;\n        }\n    }\n\n} catch (PDOException $e) {\n    echo 'Connection failed: ' . $e->getMessage();\n}\n\n?>\n```\n### How to use the function\n\n```php\n// Example usage:\n$username = $_POST['username'];\n$password = $_POST['password'];\n\n$userId = login($username, $password);\n\nif ($userId !== false) {\n    // User has logged in successfully. Store their ID in a session variable.\n    $_SESSION['user_id'] = $userId;\n} else {\n    // User has failed to log in. Display an error message or redirect them back to the login page.\n}\n```\n### Security notes\n\n*   This example uses prepared statements to prevent SQL injection attacks.\n*   Store passwords securely using a password hashing algorithm like `password_hash()` and verify them with `password_verify()`.\n*   Avoid hardcoding sensitive information (e.g., database credentials) directly in your code. Instead, consider using environment variables or configuration files.\n\n### Best practices\n\n*   Always handle errors properly by catching exceptions.\n*   Validate user input data before passing it to the database query.\n*   Use prepared statements and parameterized queries to prevent SQL injection attacks.\n*   Store sensitive information securely, such as passwords and API keys.", "code_blocks": ["```php\n<?php\n\n// Configuration settings\n$dbHost = 'localhost';\n$dbUsername = 'root';\n$dbPassword = '';\n$dbName = 'mydatabase';\n\ntry {\n    // Establish database connection\n    $conn = new PDO(\"mysql:host=$dbHost;dbname=$dbName\", $dbUsername, $dbPassword);\n    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);\n\n    function login($username, $password) {\n        global $conn;\n\n        // Query to select user by username and password\n        $stmt = $conn->prepare(\"SELECT * FROM users WHERE username = :username AND password = :password\");\n        $stmt->bindParam(':username', $username);\n        $stmt->bindParam(':password', $password);\n\n        // Execute query and fetch result\n        $stmt->execute();\n        $result = $stmt->fetch(PDO::FETCH_ASSOC);\n\n        if ($result) {\n            // If user exists, return their ID\n            return $result['id'];\n        } else {\n            // If user does not exist or password is incorrect, return false\n            return false;\n        }\n    }\n\n} catch (PDOException $e) {\n    echo 'Connection failed: ' . $e->getMessage();\n}\n\n?>\n```", "```php\n// Example usage:\n$username = $_POST['username'];\n$password = $_POST['password'];\n\n$userId = login($username, $password);\n\nif ($userId !== false) {\n    // User has logged in successfully. Store their ID in a session variable.\n    $_SESSION['user_id'] = $userId;\n} else {\n    // User has failed to log in. Display an error message or redirect them back to the login page.\n}\n```"]}
