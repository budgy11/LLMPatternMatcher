{"prompt": "Create a user login function using php", "llm_output": "Here's an example of a simple user login function using PHP:\n\n**Note:** This is just a basic example and you should consider implementing additional security measures, such as hashing passwords and storing them securely.\n\n### `login.php`\n\n```php\n<?php\n\n// Define database connection settings\n$dbHost = 'localhost';\n$dbUsername = 'your_username';\n$dbPassword = 'your_password';\n$dbName = 'your_database';\n\n// Create a new PDO instance\n$pdo = new PDO('mysql:host=' . $dbHost . ';dbname=' . $dbName, $dbUsername, $dbPassword);\n\n// Define the login function\nfunction user_login($username, $password) {\n    global $pdo;\n\n    // Prepare and execute query to check if username exists\n    $stmt = $pdo->prepare('SELECT * FROM users WHERE username = :username');\n    $stmt->bindParam(':username', $username);\n    $stmt->execute();\n\n    // Fetch user data from database\n    $user_data = $stmt->fetch(PDO::FETCH_ASSOC);\n\n    // Check if password is correct (assuming password is stored as plaintext)\n    if ($user_data && password_verify($password, $user_data['password'])) {\n        // Login successful, return user ID and username\n        return array(\n            'id' => $user_data['id'],\n            'username' => $user_data['username']\n        );\n    } else {\n        // Login failed\n        return false;\n    }\n}\n\n// Example usage:\nif (isset($_POST['login'])) {\n    $username = $_POST['username'];\n    $password = $_POST['password'];\n\n    if ($user_login($username, $password)) {\n        echo 'Login successful!';\n    } else {\n        echo 'Invalid username or password';\n    }\n}\n?>\n```\n\n### `index.php`\n\n```php\n<?php include 'login.php'; ?>\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Login Example</title>\n</head>\n<body>\n\n<form action=\"<?php $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n    Username: <input type=\"text\" name=\"username\"><br><br>\n    Password: <input type=\"password\" name=\"password\"><br><br>\n    <button type=\"submit\" name=\"login\">Login</button>\n</form>\n\n<?php if (isset($user_data)) { ?>\n    You are logged in as <?php echo $user_data['username']; ?>\n<?php } ?>\n\n</body>\n</html>\n```\n\nThis example assumes you have a `users` table with columns `id`, `username`, and `password`. The `login.php` file contains the `user_login()` function, which checks if the provided username and password are valid. The `index.php` file includes the `login.php` script and provides a simple login form.\n\nRemember to replace placeholders (e.g., `your_username`, `your_password`) with your actual database credentials.\n\n**Note:** This example is for illustration purposes only. In a real-world application, you should consider implementing additional security measures, such as:\n\n* Hashing passwords using a library like `password_hash()` and storing the hashed password in the database.\n* Validating user input data to prevent SQL injection attacks.\n* Using prepared statements with parameterized queries to ensure data security.\n\nI hope this example helps! Let me know if you have any questions or need further assistance.", "code_blocks": ["```php\n<?php\n\n// Define database connection settings\n$dbHost = 'localhost';\n$dbUsername = 'your_username';\n$dbPassword = 'your_password';\n$dbName = 'your_database';\n\n// Create a new PDO instance\n$pdo = new PDO('mysql:host=' . $dbHost . ';dbname=' . $dbName, $dbUsername, $dbPassword);\n\n// Define the login function\nfunction user_login($username, $password) {\n    global $pdo;\n\n    // Prepare and execute query to check if username exists\n    $stmt = $pdo->prepare('SELECT * FROM users WHERE username = :username');\n    $stmt->bindParam(':username', $username);\n    $stmt->execute();\n\n    // Fetch user data from database\n    $user_data = $stmt->fetch(PDO::FETCH_ASSOC);\n\n    // Check if password is correct (assuming password is stored as plaintext)\n    if ($user_data && password_verify($password, $user_data['password'])) {\n        // Login successful, return user ID and username\n        return array(\n            'id' => $user_data['id'],\n            'username' => $user_data['username']\n        );\n    } else {\n        // Login failed\n        return false;\n    }\n}\n\n// Example usage:\nif (isset($_POST['login'])) {\n    $username = $_POST['username'];\n    $password = $_POST['password'];\n\n    if ($user_login($username, $password)) {\n        echo 'Login successful!';\n    } else {\n        echo 'Invalid username or password';\n    }\n}\n?>\n```", "```php\n<?php include 'login.php'; ?>\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Login Example</title>\n</head>\n<body>\n\n<form action=\"<?php $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n    Username: <input type=\"text\" name=\"username\"><br><br>\n    Password: <input type=\"password\" name=\"password\"><br><br>\n    <button type=\"submit\" name=\"login\">Login</button>\n</form>\n\n<?php if (isset($user_data)) { ?>\n    You are logged in as <?php echo $user_data['username']; ?>\n<?php } ?>\n\n</body>\n</html>\n```"]}
