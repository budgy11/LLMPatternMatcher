{"prompt": "Create a user login function using php", "llm_output": "Here is an example of a basic user login function in PHP:\n\n**login.php**\n```php\n<?php\n\n// Configuration settings\n$databaseHost = 'localhost';\n$databaseName = 'mydatabase';\n$databaseUsername = 'myusername';\n$databasePassword = 'mypassword';\n\n// Connect to database\n$conn = new mysqli($databaseHost, $databaseUsername, $databasePassword, $databaseName);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Function to hash password (for security)\nfunction password_hasher($password) {\n    return crypt($password, '$2y$10$' . substr(hash('sha256', microtime(true)), 0, 22));\n}\n\n// Login function\nfunction login_user($username, $password) {\n    // Prepare SQL query to select user\n    $sql = \"SELECT * FROM users WHERE username = '$username'\";\n    \n    // Execute query and fetch result\n    $result = $conn->query($sql);\n    if ($result->num_rows > 0) {\n        while ($row = $result->fetch_assoc()) {\n            // Check if hashed password matches input password\n            if (password_verify($password, $row['password'])) {\n                return array(\n                    'success' => true,\n                    'user_id' => $row['id'],\n                    'username' => $row['username']\n                );\n            } else {\n                echo \"Invalid password\";\n                exit();\n            }\n        }\n    } else {\n        echo \"User not found\";\n        exit();\n    }\n}\n\n// Example usage\nif (isset($_POST['login'])) {\n    $username = $_POST['username'];\n    $password = $_POST['password'];\n    \n    $result = login_user($username, $password);\n    \n    if ($result) {\n        // Login successful, store user data in session variable\n        $_SESSION['user'] = $result;\n        \n        echo \"Login successful!\";\n    } else {\n        echo \"Invalid username or password\";\n    }\n}\n\n// Close database connection\n$conn->close();\n\n?>\n```\n**Explanation:**\n\n1. The script first connects to the database using `mysqli`.\n2. A function `password_hasher` is defined to hash passwords for security.\n3. The main `login_user` function takes a `$username` and `$password` as input, selects the corresponding user from the database, and checks if the hashed password matches the input password. If it does, it returns an array with user data.\n4. In the example usage section, we check if the form has been submitted (using `$_POST['login']`). If so, we call the `login_user` function and store the result in a session variable.\n5. Finally, we close the database connection.\n\nNote: This is a basic example and you should consider using more secure practices such as:\n\n* Using prepared statements to prevent SQL injection\n* Using PHP's built-in password hashing functions (e.g., `password_hash()`) instead of rolling your own hash function\n* Validating user input data for security\n* Storing sensitive data securely (e.g., in a encrypted database or using a secure storage solution)\n\n**Example HTML form to test the script:**\n```html\n<form action=\"login.php\" method=\"post\">\n    <label>Username:</label>\n    <input type=\"text\" name=\"username\"><br><br>\n    <label>Password:</label>\n    <input type=\"password\" name=\"password\"><br><br>\n    <input type=\"submit\" name=\"login\" value=\"Login\">\n</form>\n```", "code_blocks": ["```php\n<?php\n\n// Configuration settings\n$databaseHost = 'localhost';\n$databaseName = 'mydatabase';\n$databaseUsername = 'myusername';\n$databasePassword = 'mypassword';\n\n// Connect to database\n$conn = new mysqli($databaseHost, $databaseUsername, $databasePassword, $databaseName);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Function to hash password (for security)\nfunction password_hasher($password) {\n    return crypt($password, '$2y$10$' . substr(hash('sha256', microtime(true)), 0, 22));\n}\n\n// Login function\nfunction login_user($username, $password) {\n    // Prepare SQL query to select user\n    $sql = \"SELECT * FROM users WHERE username = '$username'\";\n    \n    // Execute query and fetch result\n    $result = $conn->query($sql);\n    if ($result->num_rows > 0) {\n        while ($row = $result->fetch_assoc()) {\n            // Check if hashed password matches input password\n            if (password_verify($password, $row['password'])) {\n                return array(\n                    'success' => true,\n                    'user_id' => $row['id'],\n                    'username' => $row['username']\n                );\n            } else {\n                echo \"Invalid password\";\n                exit();\n            }\n        }\n    } else {\n        echo \"User not found\";\n        exit();\n    }\n}\n\n// Example usage\nif (isset($_POST['login'])) {\n    $username = $_POST['username'];\n    $password = $_POST['password'];\n    \n    $result = login_user($username, $password);\n    \n    if ($result) {\n        // Login successful, store user data in session variable\n        $_SESSION['user'] = $result;\n        \n        echo \"Login successful!\";\n    } else {\n        echo \"Invalid username or password\";\n    }\n}\n\n// Close database connection\n$conn->close();\n\n?>\n```", null]}
