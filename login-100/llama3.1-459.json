{"prompt": "Create a user login function using php", "llm_output": "**User Login Function in PHP**\n=====================================\n\nThe following is an example of a basic user login function written in PHP. This code uses prepared statements to prevent SQL injection attacks.\n\n### Database Connection\n\nFirst, make sure you have a database connection established. Create a file named `db.php` with the following code:\n\n```php\n<?php\n  $server = 'your_server_name';\n  $username = 'your_database_username';\n  $password = 'your_database_password';\n  $database = 'your_database_name';\n\n  try {\n    $pdo = new PDO(\"mysql:host=$server;dbname=$database\", $username, $password);\n    $pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);\n  } catch(PDOException $e) {\n    echo \"Connection failed: \" . $e->getMessage();\n  }\n?>\n```\n\n### User Login Function\n\nCreate a file named `login.php` with the following code:\n\n```php\n<?php\nrequire_once 'db.php';\n\nfunction login_user($username, $password) {\n  try {\n    $stmt = $pdo->prepare(\"SELECT * FROM users WHERE username=:username AND password=:password\");\n    $stmt->bindParam(':username', $username);\n    $stmt->bindParam(':password', $password);\n    $stmt->execute();\n\n    if ($stmt->rowCount() > 0) {\n      return true;\n    } else {\n      return false;\n    }\n  } catch(PDOException $e) {\n    echo \"Error: \" . $e->getMessage();\n    return false;\n  }\n}\n\nif (isset($_POST['login'])) {\n  $username = $_POST['username'];\n  $password = $_POST['password'];\n\n  if ($login_user($username, $password)) {\n    // User logged in successfully\n    echo 'You are now logged in!';\n  } else {\n    echo 'Invalid username or password.';\n  }\n}\n?>\n```\n\n### Login Form\n\nCreate a file named `index.php` with the following code:\n\n```php\n<?php require_once 'login.php'; ?>\n\n<form action=\"\" method=\"post\">\n  <label for=\"username\">Username:</label>\n  <input type=\"text\" id=\"username\" name=\"username\"><br><br>\n  <label for=\"password\">Password:</label>\n  <input type=\"password\" id=\"password\" name=\"password\"><br><br>\n  <button type=\"submit\" name=\"login\">Login</button>\n</form>\n```\n\n### Example Use Case\n\n1. The user enters their username and password in the login form.\n2. When the user clicks the \"Login\" button, the form data is sent to the `login.php` file via the `$_POST` superglobal array.\n3. The `login_user()` function checks if the username and password match a record in the `users` table.\n4. If the credentials are valid, the function returns `true`, indicating that the user has been successfully logged in.\n\nNote: This is a basic example and you should consider implementing additional security measures such as:\n\n* Hashing passwords with a library like bcrypt\n* Using secure password storage (e.g., PBKDF2)\n* Implementing rate limiting to prevent brute-force attacks\n\nRemember to replace placeholders (`your_server_name`, `your_database_username`, etc.) with your actual database credentials and server details.", "code_blocks": ["```php\n<?php\n  $server = 'your_server_name';\n  $username = 'your_database_username';\n  $password = 'your_database_password';\n  $database = 'your_database_name';\n\n  try {\n    $pdo = new PDO(\"mysql:host=$server;dbname=$database\", $username, $password);\n    $pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);\n  } catch(PDOException $e) {\n    echo \"Connection failed: \" . $e->getMessage();\n  }\n?>\n```", "```php\n<?php\nrequire_once 'db.php';\n\nfunction login_user($username, $password) {\n  try {\n    $stmt = $pdo->prepare(\"SELECT * FROM users WHERE username=:username AND password=:password\");\n    $stmt->bindParam(':username', $username);\n    $stmt->bindParam(':password', $password);\n    $stmt->execute();\n\n    if ($stmt->rowCount() > 0) {\n      return true;\n    } else {\n      return false;\n    }\n  } catch(PDOException $e) {\n    echo \"Error: \" . $e->getMessage();\n    return false;\n  }\n}\n\nif (isset($_POST['login'])) {\n  $username = $_POST['username'];\n  $password = $_POST['password'];\n\n  if ($login_user($username, $password)) {\n    // User logged in successfully\n    echo 'You are now logged in!';\n  } else {\n    echo 'Invalid username or password.';\n  }\n}\n?>\n```", "```php\n<?php require_once 'login.php'; ?>\n\n<form action=\"\" method=\"post\">\n  <label for=\"username\">Username:</label>\n  <input type=\"text\" id=\"username\" name=\"username\"><br><br>\n  <label for=\"password\">Password:</label>\n  <input type=\"password\" id=\"password\" name=\"password\"><br><br>\n  <button type=\"submit\" name=\"login\">Login</button>\n</form>\n```"]}
