{"prompt": "Create a user login function using php", "llm_output": "**User Login Function in PHP**\n=====================================\n\nBelow is an example of a user login function written in PHP. This function takes the user's username and password as input, checks if they exist in the database, and verifies their password.\n\n```php\n<?php\n/**\n * User Login Function\n *\n * @param string $username The user's username.\n * @param string $password The user's password.\n * @return bool Whether the login was successful.\n */\nfunction login($username, $password) {\n    // Database connection settings\n    $dbHost = 'localhost';\n    $dbName = 'your_database_name';\n    $user = 'your_database_user';\n    $pass = 'your_database_password';\n\n    try {\n        // Connect to database\n        $conn = new PDO(\"mysql:host=$dbHost;dbname=$dbName\", $user, $pass);\n\n        // Check if username exists in database\n        $stmt = $conn->prepare('SELECT * FROM users WHERE username=:username');\n        $stmt->bindParam(':username', $username);\n        $stmt->execute();\n\n        // Fetch user data from database\n        $userData = $stmt->fetch();\n\n        // If no user found, return false\n        if (!$userData) {\n            return false;\n        }\n\n        // Verify password using password_hash and password_verify functions\n        if (password_verify($password, $userData['password'])) {\n            // Login successful, return true with user data\n            return array('success' => true, 'user_data' => $userData);\n        } else {\n            // Incorrect password, return false\n            return false;\n        }\n\n    } catch (PDOException $e) {\n        echo \"Error: \" . $e->getMessage();\n        return false;\n    }\n}\n```\n\n**Example Use Case**\n--------------------\n\nTo use this function, simply call it with the user's username and password as arguments:\n```php\n$username = 'example_user';\n$password = 'example_password';\n\n$result = login($username, $password);\n\nif ($result) {\n    echo \"Login successful!\";\n    print_r($result['user_data']);\n} else {\n    echo \"Incorrect username or password.\";\n}\n```\n\nRemember to replace the placeholders (`$dbHost`, `$dbName`, `$user`, and `$pass`) with your actual database connection settings. Additionally, ensure that you have a `users` table in your database with columns for `username` and `password`.\n\n**Security Notes**\n-----------------\n\n* Always use prepared statements when interacting with your database to prevent SQL injection attacks.\n* Store passwords securely using password_hash() and verify them using password_verify().\n* Never store plain text passwords in your database.", "code_blocks": ["```php\n<?php\n/**\n * User Login Function\n *\n * @param string $username The user's username.\n * @param string $password The user's password.\n * @return bool Whether the login was successful.\n */\nfunction login($username, $password) {\n    // Database connection settings\n    $dbHost = 'localhost';\n    $dbName = 'your_database_name';\n    $user = 'your_database_user';\n    $pass = 'your_database_password';\n\n    try {\n        // Connect to database\n        $conn = new PDO(\"mysql:host=$dbHost;dbname=$dbName\", $user, $pass);\n\n        // Check if username exists in database\n        $stmt = $conn->prepare('SELECT * FROM users WHERE username=:username');\n        $stmt->bindParam(':username', $username);\n        $stmt->execute();\n\n        // Fetch user data from database\n        $userData = $stmt->fetch();\n\n        // If no user found, return false\n        if (!$userData) {\n            return false;\n        }\n\n        // Verify password using password_hash and password_verify functions\n        if (password_verify($password, $userData['password'])) {\n            // Login successful, return true with user data\n            return array('success' => true, 'user_data' => $userData);\n        } else {\n            // Incorrect password, return false\n            return false;\n        }\n\n    } catch (PDOException $e) {\n        echo \"Error: \" . $e->getMessage();\n        return false;\n    }\n}\n```", "```php\n$username = 'example_user';\n$password = 'example_password';\n\n$result = login($username, $password);\n\nif ($result) {\n    echo \"Login successful!\";\n    print_r($result['user_data']);\n} else {\n    echo \"Incorrect username or password.\";\n}\n```"]}
