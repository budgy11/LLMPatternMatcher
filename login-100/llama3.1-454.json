{"prompt": "Create a user login function using php", "llm_output": "Here's an example of how you can create a simple user login function using PHP:\n\n**login.php**\n```php\n<?php\n\n// Define database connection settings\n$host = 'localhost';\n$username = 'root';\n$password = '';\n$dbname = 'users';\n\n// Connect to the database\n$conn = new mysqli($host, $username, $password, $dbname);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\nfunction login() {\n  global $conn;\n\n  // Get user input from form\n  $email = $_POST['email'];\n  $password = md5($_POST['password']);\n\n  // Prepare and execute query\n  $stmt = $conn->prepare(\"SELECT * FROM users WHERE email = ? AND password = ?\");\n  $stmt->bind_param(\"ss\", $email, $password);\n  $stmt->execute();\n\n  // Get result from database\n  $result = $stmt->get_result();\n\n  if ($result->num_rows > 0) {\n    // Login successful, get user data and store in session\n    while($row = $result->fetch_assoc()) {\n      $_SESSION['user_id'] = $row['id'];\n      $_SESSION['email'] = $row['email'];\n      $_SESSION['name'] = $row['name'];\n\n      header(\"Location: dashboard.php\");\n      exit;\n    }\n  } else {\n    // Login failed, display error message\n    echo \"Invalid email or password\";\n  }\n\n  // Close statement and connection\n  $stmt->close();\n  $conn->close();\n}\n\n// Check if form has been submitted\nif (isset($_POST['submit'])) {\n  login();\n} else {\n  // Display login form\n?>\n\n<form action=\"\" method=\"post\">\n  <label>Email:</label>\n  <input type=\"email\" name=\"email\"><br><br>\n  <label>Password:</label>\n  <input type=\"password\" name=\"password\"><br><br>\n  <input type=\"submit\" name=\"submit\" value=\"Login\">\n</form>\n\n<?php\n}\n?>\n```\nThis script connects to a database named `users` and checks if the user's email and password match what's stored in the database. If they do, it logs them in by storing their ID, email, and name in session variables.\n\n**Note:**\n\n* This is a basic example and should not be used for production purposes without proper security measures.\n* It's recommended to use prepared statements with parameterized queries to prevent SQL injection attacks.\n* Also, consider using more secure password hashing algorithms like bcrypt or PBKDF2 instead of MD5.", "code_blocks": ["```php\n<?php\n\n// Define database connection settings\n$host = 'localhost';\n$username = 'root';\n$password = '';\n$dbname = 'users';\n\n// Connect to the database\n$conn = new mysqli($host, $username, $password, $dbname);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\nfunction login() {\n  global $conn;\n\n  // Get user input from form\n  $email = $_POST['email'];\n  $password = md5($_POST['password']);\n\n  // Prepare and execute query\n  $stmt = $conn->prepare(\"SELECT * FROM users WHERE email = ? AND password = ?\");\n  $stmt->bind_param(\"ss\", $email, $password);\n  $stmt->execute();\n\n  // Get result from database\n  $result = $stmt->get_result();\n\n  if ($result->num_rows > 0) {\n    // Login successful, get user data and store in session\n    while($row = $result->fetch_assoc()) {\n      $_SESSION['user_id'] = $row['id'];\n      $_SESSION['email'] = $row['email'];\n      $_SESSION['name'] = $row['name'];\n\n      header(\"Location: dashboard.php\");\n      exit;\n    }\n  } else {\n    // Login failed, display error message\n    echo \"Invalid email or password\";\n  }\n\n  // Close statement and connection\n  $stmt->close();\n  $conn->close();\n}\n\n// Check if form has been submitted\nif (isset($_POST['submit'])) {\n  login();\n} else {\n  // Display login form\n?>\n\n<form action=\"\" method=\"post\">\n  <label>Email:</label>\n  <input type=\"email\" name=\"email\"><br><br>\n  <label>Password:</label>\n  <input type=\"password\" name=\"password\"><br><br>\n  <input type=\"submit\" name=\"submit\" value=\"Login\">\n</form>\n\n<?php\n}\n?>\n```"]}
