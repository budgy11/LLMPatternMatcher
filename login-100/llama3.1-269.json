{"prompt": "Create a user login function using php", "llm_output": "**User Login Function in PHP**\n=====================================\n\nBelow is an example of a user login function in PHP that uses prepared statements to prevent SQL injection attacks.\n\n### `login.php`\n\n```php\n<?php\n\n// Configuration\ndefine('DB_HOST', 'localhost');\ndefine('DB_USER', 'username');\ndefine('DB_PASSWORD', 'password');\ndefine('DB_NAME', 'database');\n\n// Database connection\n$mysqli = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);\n\nif ($mysqli->connect_errno) {\n    echo \"Failed to connect to MySQL: (\" . $mysqli->connect_errno . \") \" . $mysqli->connect_error;\n    exit();\n}\n\nfunction login($username, $password) {\n    global $mysqli;\n\n    // Prepare the query\n    $stmt = $mysqli->prepare(\"SELECT * FROM users WHERE username = ? AND password = ?\");\n    $stmt->bind_param(\"ss\", $username, $password);\n\n    // Execute the query\n    if ($stmt->execute()) {\n        $result = $stmt->get_result();\n\n        if ($row = $result->fetch_assoc()) {\n            // User exists and credentials are correct\n            return true;\n        } else {\n            // Incorrect username or password\n            return false;\n        }\n    }\n\n    // Query execution failed\n    return false;\n}\n\n// Example usage:\nif (isset($_POST['login'])) {\n    $username = $_POST['username'];\n    $password = $_POST['password'];\n\n    if (login($username, $password)) {\n        echo \"Login successful!\";\n    } else {\n        echo \"Invalid username or password.\";\n    }\n}\n?>\n```\n\n### Explanation\n\n*   We define database connection parameters as constants at the top of the script.\n*   The `login` function takes a `$username` and `$password` as arguments. It prepares a query using a prepared statement to select users from the `users` table where the username and password match the provided credentials.\n*   If the query executes successfully, it checks if any rows are returned (i.e., if a user with matching credentials exists). If so, it returns `true`; otherwise, it returns `false`.\n*   Finally, we demonstrate an example usage of the `login` function in the script. When the form is submitted, it calls the `login` function and displays a success or error message based on the result.\n\n### Advice\n\n*   Make sure to replace the database connection parameters (`DB_HOST`, `DB_USER`, etc.) with your actual database credentials.\n*   Use this example as a starting point and modify the SQL query to match your specific database schema.\n*   Always use prepared statements and parameterized queries to prevent SQL injection attacks.\n*   Consider implementing additional security measures, such as password hashing and salting.", "code_blocks": ["```php\n<?php\n\n// Configuration\ndefine('DB_HOST', 'localhost');\ndefine('DB_USER', 'username');\ndefine('DB_PASSWORD', 'password');\ndefine('DB_NAME', 'database');\n\n// Database connection\n$mysqli = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);\n\nif ($mysqli->connect_errno) {\n    echo \"Failed to connect to MySQL: (\" . $mysqli->connect_errno . \") \" . $mysqli->connect_error;\n    exit();\n}\n\nfunction login($username, $password) {\n    global $mysqli;\n\n    // Prepare the query\n    $stmt = $mysqli->prepare(\"SELECT * FROM users WHERE username = ? AND password = ?\");\n    $stmt->bind_param(\"ss\", $username, $password);\n\n    // Execute the query\n    if ($stmt->execute()) {\n        $result = $stmt->get_result();\n\n        if ($row = $result->fetch_assoc()) {\n            // User exists and credentials are correct\n            return true;\n        } else {\n            // Incorrect username or password\n            return false;\n        }\n    }\n\n    // Query execution failed\n    return false;\n}\n\n// Example usage:\nif (isset($_POST['login'])) {\n    $username = $_POST['username'];\n    $password = $_POST['password'];\n\n    if (login($username, $password)) {\n        echo \"Login successful!\";\n    } else {\n        echo \"Invalid username or password.\";\n    }\n}\n?>\n```"]}
