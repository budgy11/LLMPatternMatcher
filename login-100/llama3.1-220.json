{"prompt": "Create a user login function using php", "llm_output": "Here is an example of a simple user login function using PHP:\n\n**login.php**\n```php\n<?php\n// Configuration\n$db_host = 'localhost';\n$db_username = 'your_username';\n$db_password = 'your_password';\n$db_name = 'your_database';\n\n// Connect to database\n$conn = mysqli_connect($db_host, $db_username, $db_password);\nif (!$conn) {\n    die(\"Connection failed: \" . mysqli_error($conn));\n}\n\n// Select database\nmysqli_select_db($conn, $db_name);\n\nfunction login_user($username, $password) {\n  // Check if username and password are not empty\n  if (empty($username) || empty($password)) {\n      return false;\n  }\n\n  // Escape input data to prevent SQL injection\n  $username = mysqli_real_escape_string($conn, $username);\n  $password = mysqli_real_escape_string($conn, $password);\n\n  // Hash password using md5 (not recommended for security reasons)\n  // $hashed_password = md5($password);\n\n  // Query database to check if user exists and password is correct\n  $query = \"SELECT * FROM users WHERE username = '$username' AND password = '$hashed_password'\";\n  $result = mysqli_query($conn, $query);\n  if (mysqli_num_rows($result) == 1) {\n      return true;\n  } else {\n      return false;\n  }\n}\n\nfunction get_user_data($username) {\n  // Query database to retrieve user data\n  $query = \"SELECT * FROM users WHERE username = '$username'\";\n  $result = mysqli_query($conn, $query);\n  if (mysqli_num_rows($result) == 1) {\n      return mysqli_fetch_assoc($result);\n  } else {\n      return null;\n  }\n}\n\n// Example usage:\n$username = $_POST['username'];\n$password = $_POST['password'];\n\nif (login_user($username, $password)) {\n    echo \"Login successful!\";\n    $user_data = get_user_data($username);\n    // Store user data in session or use it as needed\n} else {\n    echo \"Invalid username or password\";\n}\n?>\n```\n**Note:**\n\n* This is a very basic example and not suitable for production use due to security concerns.\n* It's recommended to use a more secure hashing algorithm like bcrypt, and store the hashed passwords securely.\n* This code assumes that you have a `users` table with columns `username` and `password`.\n* The code also uses the deprecated `mysql_*` functions. You should use the newer `mysqli_` or `PDO` extensions instead.\n\nTo make this example more secure:\n\n* Use prepared statements to prevent SQL injection.\n* Use a secure hashing algorithm like bcrypt to hash passwords.\n* Store hashed passwords securely using a library like Hashi.\n* Validate and sanitize user input data to prevent cross-site scripting (XSS) attacks.", "code_blocks": ["```php\n<?php\n// Configuration\n$db_host = 'localhost';\n$db_username = 'your_username';\n$db_password = 'your_password';\n$db_name = 'your_database';\n\n// Connect to database\n$conn = mysqli_connect($db_host, $db_username, $db_password);\nif (!$conn) {\n    die(\"Connection failed: \" . mysqli_error($conn));\n}\n\n// Select database\nmysqli_select_db($conn, $db_name);\n\nfunction login_user($username, $password) {\n  // Check if username and password are not empty\n  if (empty($username) || empty($password)) {\n      return false;\n  }\n\n  // Escape input data to prevent SQL injection\n  $username = mysqli_real_escape_string($conn, $username);\n  $password = mysqli_real_escape_string($conn, $password);\n\n  // Hash password using md5 (not recommended for security reasons)\n  // $hashed_password = md5($password);\n\n  // Query database to check if user exists and password is correct\n  $query = \"SELECT * FROM users WHERE username = '$username' AND password = '$hashed_password'\";\n  $result = mysqli_query($conn, $query);\n  if (mysqli_num_rows($result) == 1) {\n      return true;\n  } else {\n      return false;\n  }\n}\n\nfunction get_user_data($username) {\n  // Query database to retrieve user data\n  $query = \"SELECT * FROM users WHERE username = '$username'\";\n  $result = mysqli_query($conn, $query);\n  if (mysqli_num_rows($result) == 1) {\n      return mysqli_fetch_assoc($result);\n  } else {\n      return null;\n  }\n}\n\n// Example usage:\n$username = $_POST['username'];\n$password = $_POST['password'];\n\nif (login_user($username, $password)) {\n    echo \"Login successful!\";\n    $user_data = get_user_data($username);\n    // Store user data in session or use it as needed\n} else {\n    echo \"Invalid username or password\";\n}\n?>\n```"]}
