{"prompt": "Create a user login function using php", "llm_output": "**User Login Function in PHP**\n=====================================\n\nThis example demonstrates how to create a simple user login function using PHP. We'll store the username and password securely hashed using the `password_hash()` function.\n\n**Database Configuration**\n-------------------------\n\nAssuming you have a database table named `users` with columns `id`, `username`, and `password`. The `password` column stores the hashed password.\n\n```sql\nCREATE TABLE users (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  username VARCHAR(255) NOT NULL,\n  password VARCHAR(255) NOT NULL\n);\n```\n\n**Login Function**\n-----------------\n\nCreate a PHP script named `login.php` to handle user login:\n\n```php\n<?php\n\n// Database connection settings\n$servername = \"localhost\";\n$username = \"your_username\";\n$password = \"your_password\";\n$dbname = \"your_database\";\n\n// Create a database connection\n$conn = new mysqli($servername, $username, $password, $dbname);\n\n// Check connection\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\nfunction login_user() {\n  global $conn;\n\n  // Retrieve username and password from form data\n  $username = $_POST['username'];\n  $password = $_POST['password'];\n\n  // Prepare SQL query to retrieve user data\n  $stmt = $conn->prepare(\"SELECT id, password FROM users WHERE username = ?\");\n  $stmt->bind_param(\"s\", $username);\n\n  // Execute query and fetch result\n  if ($stmt->execute()) {\n    $result = $stmt->get_result();\n    $row = $result->fetch_assoc();\n\n    // Compare provided password with stored hashed password\n    if (password_verify($password, $row['password'])) {\n      echo \"Login successful!\";\n      return true;\n    } else {\n      echo \"Invalid username or password.\";\n      return false;\n    }\n  } else {\n    echo \"Error: \" . $stmt->error;\n    return false;\n  }\n\n  // Close prepared statement\n  $stmt->close();\n}\n\n// Check if form data is submitted\nif (isset($_POST['login'])) {\n  login_user();\n}\n\n// Disconnect from database\n$conn->close();\n\n?>\n```\n\n**Example Usage**\n-----------------\n\nCreate a HTML form to submit the user's credentials:\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n  <title>Login</title>\n</head>\n<body>\n\n<form action=\"login.php\" method=\"post\">\n  <label for=\"username\">Username:</label><br>\n  <input type=\"text\" id=\"username\" name=\"username\"><br>\n  <label for=\"password\">Password:</label><br>\n  <input type=\"password\" id=\"password\" name=\"password\"><br>\n  <input type=\"submit\" value=\"Login\" name=\"login\">\n</form>\n\n<?php if (isset($_POST['login'])) {\n  echo '<p>' . login_user() . '</p>';\n} ?>\n\n</body>\n</html>\n```\n\n**Security Notes**\n\n* Always store sensitive data securely, such as passwords.\n* Use prepared statements to prevent SQL injection attacks.\n* Hash passwords using `password_hash()` and verify them with `password_verify()`.\n* Never store user passwords in plain text.\n\nRemember to replace the placeholders in the database configuration section (`$servername`, `$username`, `$password`, `$dbname`) with your actual database credentials.", "code_blocks": [null, "```php\n<?php\n\n// Database connection settings\n$servername = \"localhost\";\n$username = \"your_username\";\n$password = \"your_password\";\n$dbname = \"your_database\";\n\n// Create a database connection\n$conn = new mysqli($servername, $username, $password, $dbname);\n\n// Check connection\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\nfunction login_user() {\n  global $conn;\n\n  // Retrieve username and password from form data\n  $username = $_POST['username'];\n  $password = $_POST['password'];\n\n  // Prepare SQL query to retrieve user data\n  $stmt = $conn->prepare(\"SELECT id, password FROM users WHERE username = ?\");\n  $stmt->bind_param(\"s\", $username);\n\n  // Execute query and fetch result\n  if ($stmt->execute()) {\n    $result = $stmt->get_result();\n    $row = $result->fetch_assoc();\n\n    // Compare provided password with stored hashed password\n    if (password_verify($password, $row['password'])) {\n      echo \"Login successful!\";\n      return true;\n    } else {\n      echo \"Invalid username or password.\";\n      return false;\n    }\n  } else {\n    echo \"Error: \" . $stmt->error;\n    return false;\n  }\n\n  // Close prepared statement\n  $stmt->close();\n}\n\n// Check if form data is submitted\nif (isset($_POST['login'])) {\n  login_user();\n}\n\n// Disconnect from database\n$conn->close();\n\n?>\n```", null]}
