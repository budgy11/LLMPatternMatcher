{"prompt": "Create a user login function using php", "llm_output": "**User Login Function in PHP**\n=====================================\n\nThis example demonstrates a basic user login functionality using PHP. It includes functions for checking if the username and password are correct, as well as for logging the user in.\n\n### database.php\n```php\n// Define the database connection settings\n$db_host = 'localhost';\n$db_username = 'your_username';\n$db_password = 'your_password';\n$db_name = 'your_database';\n\n// Create a PDO instance\n$pdo = new PDO(\"mysql:host=$db_host;dbname=$db_name\", $db_username, $db_password);\n```\n\n### login.php\n```php\nrequire_once 'database.php';\n\nfunction check_credentials($username, $password) {\n  // Prepare the SQL query to select the user's details from the database\n  $stmt = $pdo->prepare('SELECT * FROM users WHERE username = :username');\n  $stmt->bindParam(':username', $username);\n  \n  try {\n    // Execute the query and retrieve the result\n    $stmt->execute();\n    $result = $stmt->fetch(PDO::FETCH_ASSOC);\n    \n    if ($result) {\n      // Check if the hashed password matches the input password\n      if (password_verify($password, $result['password'])) {\n        return true; // Login successful\n      }\n    } else {\n      return false; // User not found\n    }\n  } catch (PDOException $e) {\n    echo 'Error: ' . $e->getMessage();\n    return false;\n  }\n  \n  return false; // Invalid credentials\n}\n\nfunction login_user($username, $password) {\n  if (check_credentials($username, $password)) {\n    // Set session variables for the logged-in user\n    $_SESSION['username'] = $username;\n    $_SESSION['logged_in'] = true;\n    \n    // Redirect to a secure page or dashboard\n    header('Location: /dashboard');\n    exit;\n  } else {\n    return false; // Login failed\n  }\n}\n```\n\n### usage.php\n```php\nrequire_once 'login.php';\n\n// Form data from the user's input\n$username = $_POST['username'];\n$password = $_POST['password'];\n\nif (isset($_POST['submit'])) {\n  if (login_user($username, $password)) {\n    echo 'Login successful!';\n  } else {\n    echo 'Invalid username or password.';\n  }\n}\n```\n\n### Note:\n\n* This example uses the `password_hash` and `password_verify` functions for password hashing, which is more secure than storing plain text passwords.\n* Make sure to replace `'your_username'`, `'your_password'`, and `'your_database'` with your actual database credentials.\n* In a production environment, it's recommended to use prepared statements and parameterized queries to prevent SQL injection attacks.\n\nExample Use Case:\n\n1. Create a form on the `usage.php` page for users to input their username and password.\n2. When the user submits the form, call the `login_user` function with the provided credentials.\n3. If the login is successful, redirect the user to a secure dashboard or page.", "code_blocks": ["```php\n// Define the database connection settings\n$db_host = 'localhost';\n$db_username = 'your_username';\n$db_password = 'your_password';\n$db_name = 'your_database';\n\n// Create a PDO instance\n$pdo = new PDO(\"mysql:host=$db_host;dbname=$db_name\", $db_username, $db_password);\n```", "```php\nrequire_once 'database.php';\n\nfunction check_credentials($username, $password) {\n  // Prepare the SQL query to select the user's details from the database\n  $stmt = $pdo->prepare('SELECT * FROM users WHERE username = :username');\n  $stmt->bindParam(':username', $username);\n  \n  try {\n    // Execute the query and retrieve the result\n    $stmt->execute();\n    $result = $stmt->fetch(PDO::FETCH_ASSOC);\n    \n    if ($result) {\n      // Check if the hashed password matches the input password\n      if (password_verify($password, $result['password'])) {\n        return true; // Login successful\n      }\n    } else {\n      return false; // User not found\n    }\n  } catch (PDOException $e) {\n    echo 'Error: ' . $e->getMessage();\n    return false;\n  }\n  \n  return false; // Invalid credentials\n}\n\nfunction login_user($username, $password) {\n  if (check_credentials($username, $password)) {\n    // Set session variables for the logged-in user\n    $_SESSION['username'] = $username;\n    $_SESSION['logged_in'] = true;\n    \n    // Redirect to a secure page or dashboard\n    header('Location: /dashboard');\n    exit;\n  } else {\n    return false; // Login failed\n  }\n}\n```", "```php\nrequire_once 'login.php';\n\n// Form data from the user's input\n$username = $_POST['username'];\n$password = $_POST['password'];\n\nif (isset($_POST['submit'])) {\n  if (login_user($username, $password)) {\n    echo 'Login successful!';\n  } else {\n    echo 'Invalid username or password.';\n  }\n}\n```"]}
