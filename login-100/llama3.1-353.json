{"prompt": "Create a user login function using php", "llm_output": "Here's an example of how you can create a simple user login function in PHP:\n\n**`login.php`**\n```php\n<?php\n// Configuration settings\ndefine('DB_HOST', 'localhost');\ndefine('DB_USERNAME', 'root');\ndefine('DB_PASSWORD', '');\ndefine('DB_NAME', 'mydatabase');\n\n// Function to connect to database\nfunction dbConnect() {\n  $conn = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);\n  if ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n  }\n  return $conn;\n}\n\n// Function to login user\nfunction loginUser($username, $password) {\n  // Connect to database\n  $conn = dbConnect();\n\n  // Prepare SQL query\n  $stmt = $conn->prepare(\"SELECT * FROM users WHERE username = ? AND password = ?\");\n  $stmt->bind_param(\"ss\", $username, hash('sha256', $password));\n\n  // Execute query\n  $stmt->execute();\n  $result = $stmt->get_result();\n\n  // Close statement and connection\n  $stmt->close();\n  $conn->close();\n\n  // If result is not empty, return user data\n  if ($result->num_rows > 0) {\n    return $result->fetch_assoc();\n  } else {\n    return false;\n  }\n}\n\n// Example usage:\n$username = 'exampleuser';\n$password = 'examplepassword';\n\nif (loginUser($username, $password)) {\n  // Login successful, print user data\n  echo \"Login successful!\";\n  print_r(loginUser($username, $password));\n} else {\n  // Login failed, print error message\n  echo \"Invalid username or password.\";\n}\n?>\n```\n**`users table in database`**\n\n```sql\nCREATE TABLE users (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  username VARCHAR(255) NOT NULL,\n  password VARCHAR(255) NOT NULL\n);\n```\n\nThis example code includes:\n\n1. A `dbConnect()` function to establish a connection to the database.\n2. A `loginUser()` function that takes in `$username` and hashed `$password`, connects to the database, prepares an SQL query, executes it, and returns user data if the login is successful.\n\nPlease note:\n\n* You should replace the placeholders for `DB_HOST`, `DB_USERNAME`, `DB_PASSWORD`, and `DB_NAME` with your actual database credentials.\n* This example uses a simple SHA-256 hash to store passwords. In production environments, consider using a more secure password hashing algorithm like bcrypt or Argon2.\n* Always validate user input data to prevent SQL injection attacks.\n\nRemember that this is a basic example, you should adapt it to fit your specific needs and requirements.\n\nHope it helps!", "code_blocks": ["```php\n<?php\n// Configuration settings\ndefine('DB_HOST', 'localhost');\ndefine('DB_USERNAME', 'root');\ndefine('DB_PASSWORD', '');\ndefine('DB_NAME', 'mydatabase');\n\n// Function to connect to database\nfunction dbConnect() {\n  $conn = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);\n  if ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n  }\n  return $conn;\n}\n\n// Function to login user\nfunction loginUser($username, $password) {\n  // Connect to database\n  $conn = dbConnect();\n\n  // Prepare SQL query\n  $stmt = $conn->prepare(\"SELECT * FROM users WHERE username = ? AND password = ?\");\n  $stmt->bind_param(\"ss\", $username, hash('sha256', $password));\n\n  // Execute query\n  $stmt->execute();\n  $result = $stmt->get_result();\n\n  // Close statement and connection\n  $stmt->close();\n  $conn->close();\n\n  // If result is not empty, return user data\n  if ($result->num_rows > 0) {\n    return $result->fetch_assoc();\n  } else {\n    return false;\n  }\n}\n\n// Example usage:\n$username = 'exampleuser';\n$password = 'examplepassword';\n\nif (loginUser($username, $password)) {\n  // Login successful, print user data\n  echo \"Login successful!\";\n  print_r(loginUser($username, $password));\n} else {\n  // Login failed, print error message\n  echo \"Invalid username or password.\";\n}\n?>\n```", null]}
