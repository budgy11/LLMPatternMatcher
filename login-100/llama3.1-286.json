{"prompt": "Create a user login function using php", "llm_output": "**User Login Function in PHP**\n================================\n\nHere's an example of a simple user login function using PHP and MySQL. This script will check the username and password against the database, and return a boolean value indicating whether the login was successful.\n\n**Database Schema**\n-----------------\n\nFor this example, we'll assume you have a `users` table with the following columns:\n\n*   `id`\n*   `username`\n*   `password`\n\n```sql\nCREATE TABLE users (\n    id INT PRIMARY KEY AUTO_INCREMENT,\n    username VARCHAR(255),\n    password VARCHAR(255)\n);\n```\n\n**User Login Function**\n---------------------\n\nHere's the PHP function that will handle user login:\n```php\n/**\n * User Login Function\n *\n * @param string $username The username to log in with.\n * @param string $password  The password to use for logging in.\n *\n * @return bool True if the login was successful, false otherwise.\n */\nfunction loginUser($username, $password) {\n    // Connect to database\n    require_once 'dbconfig.php';\n    $mysqli = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);\n\n    // Check connection\n    if ($mysqli->connect_errno) {\n        throw new Exception(\"Failed to connect to MySQL: (\" . $mysqli->connect_errno . \") \" . $mysqli->connect_error);\n    }\n\n    // Prepare query\n    $stmt = $mysqli->prepare(\"SELECT * FROM users WHERE username = ?\");\n    $stmt->bind_param(\"s\", $username);\n\n    // Execute query\n    if (!$stmt->execute()) {\n        throw new Exception(\"Failed to execute query: (\" . $mysqli->errno . \") \" . $mysqli->error);\n    }\n\n    // Get result\n    $result = $stmt->get_result();\n    $user = $result->fetch_assoc();\n\n    // Check password\n    if ($user && password_verify($password, $user['password'])) {\n        return true;\n    } else {\n        return false;\n    }\n}\n```\n\n**Example Usage**\n-----------------\n\nTo use this function, simply call it with the username and password as arguments:\n```php\n$username = 'john';\n$password = 'secret';\n\nif (loginUser($username, $password)) {\n    echo \"Login successful!\";\n} else {\n    echo \"Invalid username or password.\";\n}\n```\n\n**Security Notes**\n-----------------\n\n*   Always hash your passwords using a secure algorithm like `password_hash()`.\n*   Never store plaintext passwords in the database.\n*   Use prepared statements to prevent SQL injection attacks.\n\nRemember to replace `DB_HOST`, `DB_USER`, `DB_PASSWORD`, and `DB_NAME` with your actual database credentials.", "code_blocks": [null, "```php\n/**\n * User Login Function\n *\n * @param string $username The username to log in with.\n * @param string $password  The password to use for logging in.\n *\n * @return bool True if the login was successful, false otherwise.\n */\nfunction loginUser($username, $password) {\n    // Connect to database\n    require_once 'dbconfig.php';\n    $mysqli = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);\n\n    // Check connection\n    if ($mysqli->connect_errno) {\n        throw new Exception(\"Failed to connect to MySQL: (\" . $mysqli->connect_errno . \") \" . $mysqli->connect_error);\n    }\n\n    // Prepare query\n    $stmt = $mysqli->prepare(\"SELECT * FROM users WHERE username = ?\");\n    $stmt->bind_param(\"s\", $username);\n\n    // Execute query\n    if (!$stmt->execute()) {\n        throw new Exception(\"Failed to execute query: (\" . $mysqli->errno . \") \" . $mysqli->error);\n    }\n\n    // Get result\n    $result = $stmt->get_result();\n    $user = $result->fetch_assoc();\n\n    // Check password\n    if ($user && password_verify($password, $user['password'])) {\n        return true;\n    } else {\n        return false;\n    }\n}\n```", "```php\n$username = 'john';\n$password = 'secret';\n\nif (loginUser($username, $password)) {\n    echo \"Login successful!\";\n} else {\n    echo \"Invalid username or password.\";\n}\n```"]}
