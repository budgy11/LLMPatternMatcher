{"prompt": "Create a user login function using php", "llm_output": "Here's an example of a simple user login function in PHP:\n\n**login.php**\n```php\n<?php\n\n// Configuration variables\ndefine('DB_HOST', 'your_host');\ndefine('DB_USER', 'your_username');\ndefine('DB_PASSWORD', 'your_password');\ndefine('DB_NAME', 'your_database');\n\n// Connect to database\nfunction connectToDatabase() {\n  $conn = new PDO(\"mysql:host=\".DB_HOST.\";dbname=\".DB_NAME, DB_USER, DB_PASSWORD);\n  return $conn;\n}\n\n// Check user credentials\nfunction checkCredentials($username, $password) {\n  // Prepare query\n  $query = \"SELECT * FROM users WHERE username = :username\";\n  \n  // Execute query\n  $stmt = connectToDatabase()->prepare($query);\n  $stmt->bindParam(':username', $username);\n  $stmt->execute();\n  \n  // Check if user exists and password is correct\n  if ($stmt->rowCount() > 0) {\n    $row = $stmt->fetch(PDO::FETCH_ASSOC);\n    if (password_verify($password, $row['password'])) {\n      return true;\n    } else {\n      return false;\n    }\n  } else {\n    return false;\n  }\n}\n\n// Login function\nfunction login($username, $password) {\n  // Check user credentials\n  if (checkCredentials($username, $password)) {\n    // If user is logged in, set a session variable to indicate success\n    $_SESSION['logged_in'] = true;\n    $_SESSION['username'] = $username;\n    \n    return true;\n  } else {\n    return false;\n  }\n}\n\n?>\n```\n**example usage**\n```php\n<?php\n\n// Include the login function file\ninclude('login.php');\n\n// User input\n$username = $_POST['username'];\n$password = $_POST['password'];\n\n// Login attempt\nif (login($username, $password)) {\n  echo \"Welcome, $username!\";\n} else {\n  echo \"Invalid username or password.\";\n}\n\n?>\n```\nIn this example:\n\n* We define some configuration variables for our database connection.\n* We create a `connectToDatabase` function to establish a PDO connection to the database.\n* We create a `checkCredentials` function to verify user credentials against the database.\n* We create a `login` function that takes in a username and password, checks the credentials using the `checkCredentials` function, and sets session variables if successful.\n\nNote: This is a simplified example and you should consider implementing additional security measures such as:\n\n* Hashing passwords on registration instead of storing plain text\n* Implementing rate limiting to prevent brute-force attacks\n* Using HTTPS to encrypt user data\n\nAlso note that this example assumes you have the `password_hash` function available in your PHP version (which is necessary for password verification). If not, you can install the PECL extension.", "code_blocks": ["```php\n<?php\n\n// Configuration variables\ndefine('DB_HOST', 'your_host');\ndefine('DB_USER', 'your_username');\ndefine('DB_PASSWORD', 'your_password');\ndefine('DB_NAME', 'your_database');\n\n// Connect to database\nfunction connectToDatabase() {\n  $conn = new PDO(\"mysql:host=\".DB_HOST.\";dbname=\".DB_NAME, DB_USER, DB_PASSWORD);\n  return $conn;\n}\n\n// Check user credentials\nfunction checkCredentials($username, $password) {\n  // Prepare query\n  $query = \"SELECT * FROM users WHERE username = :username\";\n  \n  // Execute query\n  $stmt = connectToDatabase()->prepare($query);\n  $stmt->bindParam(':username', $username);\n  $stmt->execute();\n  \n  // Check if user exists and password is correct\n  if ($stmt->rowCount() > 0) {\n    $row = $stmt->fetch(PDO::FETCH_ASSOC);\n    if (password_verify($password, $row['password'])) {\n      return true;\n    } else {\n      return false;\n    }\n  } else {\n    return false;\n  }\n}\n\n// Login function\nfunction login($username, $password) {\n  // Check user credentials\n  if (checkCredentials($username, $password)) {\n    // If user is logged in, set a session variable to indicate success\n    $_SESSION['logged_in'] = true;\n    $_SESSION['username'] = $username;\n    \n    return true;\n  } else {\n    return false;\n  }\n}\n\n?>\n```", "```php\n<?php\n\n// Include the login function file\ninclude('login.php');\n\n// User input\n$username = $_POST['username'];\n$password = $_POST['password'];\n\n// Login attempt\nif (login($username, $password)) {\n  echo \"Welcome, $username!\";\n} else {\n  echo \"Invalid username or password.\";\n}\n\n?>\n```"]}
