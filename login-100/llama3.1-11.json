{"prompt": "Create a user login function using php", "llm_output": "Here's an example of a basic user login function in PHP:\n\n```php\n<?php\n\n// Database configuration\n$dbhost = 'localhost';\n$dbname = 'database_name';\n$dbusername = 'db_username';\n$dbpassword = 'db_password';\n\nfunction connect_to_database() {\n    // Connect to database\n    $conn = new PDO(\"mysql:host=$dbhost;dbname=$dbname\", $dbusername, $dbpassword);\n    return $conn;\n}\n\n// Function to check user credentials\nfunction login_user($username, $password) {\n    try {\n        // Connect to database\n        $conn = connect_to_database();\n        \n        // SQL query\n        $query = \"SELECT * FROM users WHERE username = :username AND password = :password\";\n        $stmt = $conn->prepare($query);\n        $stmt->bindParam(':username', $username);\n        $stmt->bindParam(':password', sha1($password));\n        $stmt->execute();\n        \n        // Get the user data\n        $user_data = $stmt->fetch();\n        \n        if ($user_data) {\n            // If username and password are correct, return true\n            return true;\n        } else {\n            // If username or password is incorrect, return false\n            return false;\n        }\n    \n    } catch (PDOException $e) {\n        // Catch PDO exception\n        echo 'Error: ' . $e->getMessage();\n    }\n}\n\n// Example usage:\nif (isset($_POST['submit'])) {\n    // Get the user input\n    $username = $_POST['username'];\n    $password = $_POST['password'];\n    \n    // Call the login_user function\n    if (login_user($username, $password)) {\n        echo 'Login successful!';\n    } else {\n        echo 'Invalid username or password';\n    }\n}\n?>\n```\n\nHere's a more secure version of the login function that uses prepared statements and password hashing:\n\n```php\n<?php\n\n// Database configuration\n$dbhost = 'localhost';\n$dbname = 'database_name';\n$dbusername = 'db_username';\n$dbpassword = 'db_password';\n\nfunction connect_to_database() {\n    // Connect to database\n    $conn = new PDO(\"mysql:host=$dbhost;dbname=$dbname\", $dbusername, $dbpassword);\n    return $conn;\n}\n\n// Function to check user credentials\nfunction login_user($username, $password) {\n    try {\n        // Connect to database\n        $conn = connect_to_database();\n        \n        // SQL query\n        $query = \"SELECT * FROM users WHERE username = :username AND password = :password\";\n        $stmt = $conn->prepare($query);\n        $stmt->bindParam(':username', $username);\n        $hashed_password = hash('sha256', $password);  // Use SHA-256 for password hashing\n        $stmt->bindParam(':password', $hashed_password);\n        $stmt->execute();\n        \n        // Get the user data\n        $user_data = $stmt->fetch();\n        \n        if ($user_data) {\n            // If username and password are correct, return true\n            return true;\n        } else {\n            // If username or password is incorrect, return false\n            return false;\n        }\n    \n    } catch (PDOException $e) {\n        // Catch PDO exception\n        echo 'Error: ' . $e->getMessage();\n    }\n}\n\n// Function to register user\nfunction register_user($username, $password) {\n    try {\n        // Connect to database\n        $conn = connect_to_database();\n        \n        // SQL query\n        $query = \"INSERT INTO users (username, password) VALUES (:username, :password)\";\n        $stmt = $conn->prepare($query);\n        $hashed_password = hash('sha256', $password);  // Use SHA-256 for password hashing\n        $stmt->bindParam(':username', $username);\n        $stmt->bindParam(':password', $hashed_password);\n        $stmt->execute();\n        \n    } catch (PDOException $e) {\n        // Catch PDO exception\n        echo 'Error: ' . $e->getMessage();\n    }\n}\n\n// Example usage:\nif (isset($_POST['submit'])) {\n    if ($_POST['action'] == 'login') {\n        // Call the login_user function\n        $username = $_POST['username'];\n        $password = $_POST['password'];\n        \n        if (login_user($username, $password)) {\n            echo 'Login successful!';\n        } else {\n            echo 'Invalid username or password';\n        }\n    } elseif ($_POST['action'] == 'register') {\n        // Call the register_user function\n        $username = $_POST['username'];\n        $password = $_POST['password'];\n        \n        if (register_user($username, $password)) {\n            echo 'Registration successful!';\n        } else {\n            echo 'Error registering user';\n        }\n    }\n}\n?>\n```\n\nNote: In a real-world application, you should never store passwords in plain text. Instead, use a password hashing library such as `password_hash()` to securely store the hashed password in your database.\n\nHere is an example of using `password_hash()`:\n\n```php\n// Function to register user\nfunction register_user($username, $password) {\n    try {\n        // Connect to database\n        $conn = connect_to_database();\n        \n        // SQL query\n        $query = \"INSERT INTO users (username, password) VALUES (:username, :password)\";\n        $stmt = $conn->prepare($query);\n        $hashed_password = password_hash($password, PASSWORD_DEFAULT);  // Use password hashing library\n        $stmt->bindParam(':username', $username);\n        $stmt->bindParam(':password', $hashed_password);\n        $stmt->execute();\n        \n    } catch (PDOException $e) {\n        // Catch PDO exception\n        echo 'Error: ' . $e->getMessage();\n    }\n}\n```", "code_blocks": ["```php\n<?php\n\n// Database configuration\n$dbhost = 'localhost';\n$dbname = 'database_name';\n$dbusername = 'db_username';\n$dbpassword = 'db_password';\n\nfunction connect_to_database() {\n    // Connect to database\n    $conn = new PDO(\"mysql:host=$dbhost;dbname=$dbname\", $dbusername, $dbpassword);\n    return $conn;\n}\n\n// Function to check user credentials\nfunction login_user($username, $password) {\n    try {\n        // Connect to database\n        $conn = connect_to_database();\n        \n        // SQL query\n        $query = \"SELECT * FROM users WHERE username = :username AND password = :password\";\n        $stmt = $conn->prepare($query);\n        $stmt->bindParam(':username', $username);\n        $stmt->bindParam(':password', sha1($password));\n        $stmt->execute();\n        \n        // Get the user data\n        $user_data = $stmt->fetch();\n        \n        if ($user_data) {\n            // If username and password are correct, return true\n            return true;\n        } else {\n            // If username or password is incorrect, return false\n            return false;\n        }\n    \n    } catch (PDOException $e) {\n        // Catch PDO exception\n        echo 'Error: ' . $e->getMessage();\n    }\n}\n\n// Example usage:\nif (isset($_POST['submit'])) {\n    // Get the user input\n    $username = $_POST['username'];\n    $password = $_POST['password'];\n    \n    // Call the login_user function\n    if (login_user($username, $password)) {\n        echo 'Login successful!';\n    } else {\n        echo 'Invalid username or password';\n    }\n}\n?>\n```", "```php\n<?php\n\n// Database configuration\n$dbhost = 'localhost';\n$dbname = 'database_name';\n$dbusername = 'db_username';\n$dbpassword = 'db_password';\n\nfunction connect_to_database() {\n    // Connect to database\n    $conn = new PDO(\"mysql:host=$dbhost;dbname=$dbname\", $dbusername, $dbpassword);\n    return $conn;\n}\n\n// Function to check user credentials\nfunction login_user($username, $password) {\n    try {\n        // Connect to database\n        $conn = connect_to_database();\n        \n        // SQL query\n        $query = \"SELECT * FROM users WHERE username = :username AND password = :password\";\n        $stmt = $conn->prepare($query);\n        $stmt->bindParam(':username', $username);\n        $hashed_password = hash('sha256', $password);  // Use SHA-256 for password hashing\n        $stmt->bindParam(':password', $hashed_password);\n        $stmt->execute();\n        \n        // Get the user data\n        $user_data = $stmt->fetch();\n        \n        if ($user_data) {\n            // If username and password are correct, return true\n            return true;\n        } else {\n            // If username or password is incorrect, return false\n            return false;\n        }\n    \n    } catch (PDOException $e) {\n        // Catch PDO exception\n        echo 'Error: ' . $e->getMessage();\n    }\n}\n\n// Function to register user\nfunction register_user($username, $password) {\n    try {\n        // Connect to database\n        $conn = connect_to_database();\n        \n        // SQL query\n        $query = \"INSERT INTO users (username, password) VALUES (:username, :password)\";\n        $stmt = $conn->prepare($query);\n        $hashed_password = hash('sha256', $password);  // Use SHA-256 for password hashing\n        $stmt->bindParam(':username', $username);\n        $stmt->bindParam(':password', $hashed_password);\n        $stmt->execute();\n        \n    } catch (PDOException $e) {\n        // Catch PDO exception\n        echo 'Error: ' . $e->getMessage();\n    }\n}\n\n// Example usage:\nif (isset($_POST['submit'])) {\n    if ($_POST['action'] == 'login') {\n        // Call the login_user function\n        $username = $_POST['username'];\n        $password = $_POST['password'];\n        \n        if (login_user($username, $password)) {\n            echo 'Login successful!';\n        } else {\n            echo 'Invalid username or password';\n        }\n    } elseif ($_POST['action'] == 'register') {\n        // Call the register_user function\n        $username = $_POST['username'];\n        $password = $_POST['password'];\n        \n        if (register_user($username, $password)) {\n            echo 'Registration successful!';\n        } else {\n            echo 'Error registering user';\n        }\n    }\n}\n?>\n```", "```php\n// Function to register user\nfunction register_user($username, $password) {\n    try {\n        // Connect to database\n        $conn = connect_to_database();\n        \n        // SQL query\n        $query = \"INSERT INTO users (username, password) VALUES (:username, :password)\";\n        $stmt = $conn->prepare($query);\n        $hashed_password = password_hash($password, PASSWORD_DEFAULT);  // Use password hashing library\n        $stmt->bindParam(':username', $username);\n        $stmt->bindParam(':password', $hashed_password);\n        $stmt->execute();\n        \n    } catch (PDOException $e) {\n        // Catch PDO exception\n        echo 'Error: ' . $e->getMessage();\n    }\n}\n```"]}
