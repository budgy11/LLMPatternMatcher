{"prompt": "Create a user login function using php", "llm_output": "**User Login Function in PHP**\n=====================================\n\nBelow is an example of a simple user login function written in PHP. This function will check the username and password against a database table called `users`.\n\n**Database Structure**\n\nFirst, let's assume we have a database table named `users` with the following structure:\n\n```sql\nCREATE TABLE users (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  username VARCHAR(255) NOT NULL,\n  password VARCHAR(255) NOT NULL\n);\n```\n\n**User Login Function**\n------------------------\n\n```php\nfunction login_user($username, $password) {\n  // Connect to the database\n  require_once 'database.php';\n  $conn = new mysqli($db_host, $db_username, $db_password, $db_name);\n\n  if ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n  }\n\n  // Prepare and execute query\n  $stmt = $conn->prepare(\"SELECT * FROM users WHERE username = ?\");\n  $stmt->bind_param(\"s\", $username);\n  $stmt->execute();\n  $result = $stmt->get_result();\n\n  // Check if user exists\n  if ($result->num_rows > 0) {\n    while ($row = $result->fetch_assoc()) {\n      // Compare passwords using password_verify\n      if (password_verify($password, $row['password'])) {\n        return true; // User logged in successfully\n      } else {\n        return false; // Incorrect password\n      }\n    }\n  }\n\n  // If no user exists or incorrect password\n  return false;\n}\n```\n\n**Usage Example**\n-----------------\n\n```php\nrequire_once 'login_user.php';\n\n$username = \"john_doe\";\n$password = \"password123\";\n\nif (login_user($username, $password)) {\n  echo \"User logged in successfully!\";\n} else {\n  echo \"Incorrect username or password.\";\n}\n```\n\nThis function takes two parameters: `$username` and `$password`. It connects to the database using a `mysqli` connection, prepares a query to select the user from the `users` table where the username matches, binds the parameter `$username`, executes the query, and checks if the result is not empty. If it's not empty, it loops through each row and uses `password_verify` to compare the provided password with the hashed password in the database. Finally, it returns a boolean value indicating whether the user has been successfully logged in or not.\n\n**Security Considerations**\n---------------------------\n\n* Always use prepared statements to prevent SQL injection.\n* Use `password_hash` and `password_verify` functions for secure password storage and verification.\n* Hash passwords using `password_hash` before storing them in the database.", "code_blocks": [null, "```php\nfunction login_user($username, $password) {\n  // Connect to the database\n  require_once 'database.php';\n  $conn = new mysqli($db_host, $db_username, $db_password, $db_name);\n\n  if ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n  }\n\n  // Prepare and execute query\n  $stmt = $conn->prepare(\"SELECT * FROM users WHERE username = ?\");\n  $stmt->bind_param(\"s\", $username);\n  $stmt->execute();\n  $result = $stmt->get_result();\n\n  // Check if user exists\n  if ($result->num_rows > 0) {\n    while ($row = $result->fetch_assoc()) {\n      // Compare passwords using password_verify\n      if (password_verify($password, $row['password'])) {\n        return true; // User logged in successfully\n      } else {\n        return false; // Incorrect password\n      }\n    }\n  }\n\n  // If no user exists or incorrect password\n  return false;\n}\n```", "```php\nrequire_once 'login_user.php';\n\n$username = \"john_doe\";\n$password = \"password123\";\n\nif (login_user($username, $password)) {\n  echo \"User logged in successfully!\";\n} else {\n  echo \"Incorrect username or password.\";\n}\n```"]}
