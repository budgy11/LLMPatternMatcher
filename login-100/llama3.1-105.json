{"prompt": "Create a user login function using php", "llm_output": "**User Login Function in PHP**\n================================\n\nThis is an example of a simple user login function written in PHP. It includes form validation, password hashing, and database interaction.\n\n### Database Schema\n\nAssuming you have the following database schema:\n\n```sql\nCREATE TABLE users (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) NOT NULL,\n  password_hash VARCHAR(255) NOT NULL\n);\n```\n\n### PHP Code\n\n**login.php**\n```php\n<?php\n// Configuration variables\ndefine('DB_HOST', 'localhost');\ndefine('DB_USERNAME', 'your_username');\ndefine('DB_PASSWORD', 'your_password');\ndefine('DB_NAME', 'your_database');\n\n// Database connection\nfunction db_connect() {\n  $conn = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);\n  if ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n  }\n  return $conn;\n}\n\n// User login function\nfunction user_login($username, $password) {\n  // Prepare database query\n  $conn = db_connect();\n  $stmt = $conn->prepare(\"SELECT * FROM users WHERE username = ?\");\n  $stmt->bind_param(\"s\", $username);\n  $stmt->execute();\n  $result = $stmt->get_result();\n\n  // Fetch user data\n  $user_data = $result->fetch_assoc();\n\n  // Check if user exists and password is correct\n  if ($user_data && password_verify($password, $user_data['password_hash'])) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\n// Form validation function\nfunction validate_login_form() {\n  // Get form data\n  $username = $_POST['username'];\n  $password = $_POST['password'];\n\n  // Validate input fields\n  if (empty($username) || empty($password)) {\n    return array(\n      'error' => true,\n      'message' => 'Please enter both username and password.'\n    );\n  }\n\n  // Hash the password for comparison\n  $hashed_password = password_hash($password, PASSWORD_DEFAULT);\n\n  // Call user login function\n  if (user_login($username, $hashed_password)) {\n    return array(\n      'error' => false,\n      'message' => 'Login successful!'\n    );\n  } else {\n    return array(\n      'error' => true,\n      'message' => 'Invalid username or password.'\n    );\n  }\n}\n?>\n```\n\n### Example Usage\n\n**login_form.php**\n```php\n<?php\ninclude_once 'login.php';\n\nif (isset($_POST['submit'])) {\n  $result = validate_login_form();\n  if ($result['error']) {\n    echo '<p style=\"color: red;\">' . $result['message'] . '</p>';\n  } else {\n    // User logged in successfully, redirect to protected page\n    header('Location: protected_page.php');\n    exit;\n  }\n}\n?>\n```\n\n**login_form.html**\n```html\n<form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n  <label for=\"username\">Username:</label>\n  <input type=\"text\" id=\"username\" name=\"username\"><br><br>\n  <label for=\"password\">Password:</label>\n  <input type=\"password\" id=\"password\" name=\"password\"><br><br>\n  <button type=\"submit\" name=\"submit\">Login</button>\n</form>\n```\n\nThis is a basic example of user login functionality in PHP. Make sure to adapt it to your specific needs and implement proper security measures, such as password hashing and salting, to protect your users' sensitive information.\n\n**Note:** This code uses the `password_hash` function to hash passwords. It's recommended to use this function instead of rolling your own password hashing mechanism for security reasons. Additionally, consider using a secure password storage library like PHP-Password-Hasher or BCrypt-PHP.", "code_blocks": [null, "```php\n<?php\n// Configuration variables\ndefine('DB_HOST', 'localhost');\ndefine('DB_USERNAME', 'your_username');\ndefine('DB_PASSWORD', 'your_password');\ndefine('DB_NAME', 'your_database');\n\n// Database connection\nfunction db_connect() {\n  $conn = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);\n  if ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n  }\n  return $conn;\n}\n\n// User login function\nfunction user_login($username, $password) {\n  // Prepare database query\n  $conn = db_connect();\n  $stmt = $conn->prepare(\"SELECT * FROM users WHERE username = ?\");\n  $stmt->bind_param(\"s\", $username);\n  $stmt->execute();\n  $result = $stmt->get_result();\n\n  // Fetch user data\n  $user_data = $result->fetch_assoc();\n\n  // Check if user exists and password is correct\n  if ($user_data && password_verify($password, $user_data['password_hash'])) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\n// Form validation function\nfunction validate_login_form() {\n  // Get form data\n  $username = $_POST['username'];\n  $password = $_POST['password'];\n\n  // Validate input fields\n  if (empty($username) || empty($password)) {\n    return array(\n      'error' => true,\n      'message' => 'Please enter both username and password.'\n    );\n  }\n\n  // Hash the password for comparison\n  $hashed_password = password_hash($password, PASSWORD_DEFAULT);\n\n  // Call user login function\n  if (user_login($username, $hashed_password)) {\n    return array(\n      'error' => false,\n      'message' => 'Login successful!'\n    );\n  } else {\n    return array(\n      'error' => true,\n      'message' => 'Invalid username or password.'\n    );\n  }\n}\n?>\n```", "```php\n<?php\ninclude_once 'login.php';\n\nif (isset($_POST['submit'])) {\n  $result = validate_login_form();\n  if ($result['error']) {\n    echo '<p style=\"color: red;\">' . $result['message'] . '</p>';\n  } else {\n    // User logged in successfully, redirect to protected page\n    header('Location: protected_page.php');\n    exit;\n  }\n}\n?>\n```", null]}
