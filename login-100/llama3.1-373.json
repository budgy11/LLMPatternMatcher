{"prompt": "Create a user login function using php", "llm_output": "Here is an example of a simple user login function using PHP:\n```php\n<?php\n\n// Configuration\ndefine('DB_HOST', 'localhost');\ndefine('DB_USER', 'root');\ndefine('DB_PASSWORD', '');\ndefine('DB_NAME', 'mydatabase');\n\n// Connect to database\n$mysqli = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);\n\n// Check if connection failed\nif ($mysqli->connect_errno) {\n    echo \"Failed to connect to MySQL: (\" . $mysqli->connect_errno . \") \" . $mysqli->connect_error;\n    exit();\n}\n\nfunction login_user($username, $password) {\n    // Prepare SQL query\n    $sql = \"SELECT * FROM users WHERE username = ? AND password = ?\";\n\n    // Bind parameters\n    $stmt = $mysqli->prepare($sql);\n    $stmt->bind_param(\"ss\", $username, md5($password));\n\n    // Execute query\n    $stmt->execute();\n\n    // Get result\n    $result = $stmt->get_result();\n\n    // Check if user exists\n    if ($result->num_rows > 0) {\n        // User exists, return true\n        return true;\n    } else {\n        // User does not exist, return false\n        return false;\n    }\n}\n\nfunction register_user($username, $password) {\n    // Prepare SQL query\n    $sql = \"INSERT INTO users (username, password) VALUES (?, ?)\";\n\n    // Bind parameters\n    $stmt = $mysqli->prepare($sql);\n    $stmt->bind_param(\"ss\", $username, md5($password));\n\n    // Execute query\n    $stmt->execute();\n\n    // Get last inserted ID\n    $id = $mysqli->insert_id;\n\n    // Return user data\n    return array(\n        'id' => $id,\n        'username' => $username\n    );\n}\n\n// Example usage:\n$username = \"john\";\n$password = \"password123\";\n\nif (login_user($username, $password)) {\n    echo \"User logged in successfully!\";\n} else {\n    echo \"Invalid username or password.\";\n}\n\n?>\n```\nThis example uses the `mysqli` extension to connect to a MySQL database. The `login_user` function takes two parameters: `$username` and `$password`. It prepares an SQL query that selects all rows from the `users` table where the `username` matches the input, and the `password` (hashed with MD5) also matches. If a row is found, it returns true; otherwise, it returns false.\n\nThe `register_user` function takes two parameters: `$username` and `$password`. It prepares an SQL query that inserts a new user into the `users` table. The password is hashed with MD5 before being inserted into the database. After executing the query, it gets the last inserted ID and returns an array containing the user's data.\n\nNote that this example uses MD5 hashing for simplicity, but in a production environment you should use a more secure hashing algorithm such as bcrypt or PBKDF2.\n\nAlso note that this is just a basic example, you should consider implementing additional security measures such as:\n\n* Input validation\n* Password salting\n* Two-factor authentication\n* Secure password storage (e.g. using a library like PHP-Password-Hasher)\n\nPlease keep in mind that this code is for illustration purposes only and should not be used in production without proper security considerations.", "code_blocks": ["```php\n<?php\n\n// Configuration\ndefine('DB_HOST', 'localhost');\ndefine('DB_USER', 'root');\ndefine('DB_PASSWORD', '');\ndefine('DB_NAME', 'mydatabase');\n\n// Connect to database\n$mysqli = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);\n\n// Check if connection failed\nif ($mysqli->connect_errno) {\n    echo \"Failed to connect to MySQL: (\" . $mysqli->connect_errno . \") \" . $mysqli->connect_error;\n    exit();\n}\n\nfunction login_user($username, $password) {\n    // Prepare SQL query\n    $sql = \"SELECT * FROM users WHERE username = ? AND password = ?\";\n\n    // Bind parameters\n    $stmt = $mysqli->prepare($sql);\n    $stmt->bind_param(\"ss\", $username, md5($password));\n\n    // Execute query\n    $stmt->execute();\n\n    // Get result\n    $result = $stmt->get_result();\n\n    // Check if user exists\n    if ($result->num_rows > 0) {\n        // User exists, return true\n        return true;\n    } else {\n        // User does not exist, return false\n        return false;\n    }\n}\n\nfunction register_user($username, $password) {\n    // Prepare SQL query\n    $sql = \"INSERT INTO users (username, password) VALUES (?, ?)\";\n\n    // Bind parameters\n    $stmt = $mysqli->prepare($sql);\n    $stmt->bind_param(\"ss\", $username, md5($password));\n\n    // Execute query\n    $stmt->execute();\n\n    // Get last inserted ID\n    $id = $mysqli->insert_id;\n\n    // Return user data\n    return array(\n        'id' => $id,\n        'username' => $username\n    );\n}\n\n// Example usage:\n$username = \"john\";\n$password = \"password123\";\n\nif (login_user($username, $password)) {\n    echo \"User logged in successfully!\";\n} else {\n    echo \"Invalid username or password.\";\n}\n\n?>\n```"]}
