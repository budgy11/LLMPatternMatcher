{"prompt": "Create a user review function using php", "llm_output": "<think>\nOkay, I need to create a user review function in PHP. Let me think about how to approach this step by step.\n\nFirst, I should consider what the function needs to do. It should allow users to leave reviews with ratings and text, store them somewhere, probably in a database, display existing reviews, let users edit or delete their own reviews, and maybe handle any errors that come up.\n\nHmm, starting with storing the reviews. The simplest way is to use a MySQL database because it's commonly used and integrates well with PHP. I'll need tables for users and reviews. For the users table, I'll include id, username, email, password, and timestamps. The reviews table will have id, user_id, product_id, rating, text, status (for approval), and timestamps.\n\nNext, the functions needed. A function to add a review, which checks if the user is logged in, validates inputs, inserts into the database, handles errors, and returns success or error messages. Then, a display function that fetches reviews based on product ID, filters them by status, orders them, limits the number shown, and displays each with some formatting.\n\nFor editing and deleting, I'll need to check if the user is the author of the review. The edit function will update the database where the review id matches and the user_id matches the current user. Similarly, delete will remove a review under the same conditions. Both should handle errors like SQL injection or invalid inputs.\n\nI also need to think about security measures. Using prepared statements with mysqli can prevent SQL injection. Ensuring that only logged-in users can edit or delete their reviews is important for security and data integrity.\n\nDisplaying the reviews neatly would be better with a helper function that formats each review into HTML, maybe showing user info, rating stars, text, and timestamps. Adding pagination could help if there are many reviews, but that's optional based on requirements.\n\nPutting it all together, I'll structure the code with functions for adding, displaying, editing, and deleting reviews. Each function will handle its specific task, connect to the database as needed, perform checks, and return appropriate messages or output.\n\nI should also consider error handling throughout each function. For example, checking if the product ID exists before allowing a review, validating that ratings are within 1-5 stars, ensuring text isn't empty, and catching any exceptions in case of database errors.\n\nTesting each part as I go would help catch issues early. Maybe start by setting up the tables, then test adding a review, then displaying it, followed by editing and deleting to ensure everything works smoothly.\n</think>\n\nHere's an example of a user review function using PHP:\n\n```php\n<?php\n// Database connection\n$host = 'localhost';\n$user = 'root';\n$password = '';\n$db_name = 'reviews_db';\n\n$conn = mysqli_connect($host, $user, $password, $db_name);\n\nif (!$conn) {\n    die(\"Connection failed: \" . mysqli_connect_error());\n}\n\n// Function to add a review\nfunction add_review($product_id, $rating, $review_text, $user_id) {\n    global $conn;\n    \n    // Check if the user is logged in (you should implement your own authentication system)\n    if (!$user_id) {\n        return \"You must be logged in to post a review.\";\n    }\n    \n    // Validate input\n    if (!is_numeric($rating) || $rating < 1 || $rating > 5) {\n        return \"Rating must be between 1 and 5 stars.\";\n    }\n    \n    if (empty($review_text)) {\n        return \"Review text cannot be empty.\";\n    }\n    \n    // Escape special characters to prevent SQL injection\n    $product_id = mysqli_real_escape_string($conn, $product_id);\n    $rating = mysqli_real_escape_string($conn, $rating);\n    $review_text = mysqli_real_escape_string($conn, $review_text);\n    $user_id = mysqli_real_escape_string($conn, $user_id);\n    \n    // Insert review into database\n    $sql = \"INSERT INTO reviews (product_id, rating, review_text, user_id) \n            VALUES ($product_id, $rating, '$review_text', $user_id)\";\n            \n    if (!mysqli_query($conn, $sql)) {\n        return \"Error: \" . mysqli_error($conn);\n    }\n    \n    return \"Review added successfully!\";\n}\n\n// Function to display reviews\nfunction display_reviews($product_id) {\n    global $conn;\n    \n    // Escape special characters to prevent SQL injection\n    $product_id = mysqli_real_escape_string($conn, $product_id);\n    \n    // Get reviews from database\n    $sql = \"SELECT r.*, u.username \n            FROM reviews r \n            JOIN users u ON r.user_id = u.id \n            WHERE product_id = $product_id \n            AND status = 'approved' \n            ORDER BY review_date DESC\";\n            \n    $result = mysqli_query($conn, $sql);\n    \n    if (!$result) {\n        die(\"Error: \" . mysqli_error($conn));\n    }\n    \n    // Display reviews\n    while ($row = mysqli_fetch_assoc($result)) {\n        echo \"<div class='review'>\";\n        echo \"<h4>Review by: \" . $row['username'] . \"</h4>\";\n        echo \"<p>Rating: \" . $row['rating'] . \"/5</p>\";\n        echo \"<p>\" . $row['review_text'] . \"</p>\";\n        echo \"<small>Posted on: \" . $row['review_date'] . \"</small>\";\n        echo \"</div><br/>\";\n    }\n}\n\n// Function to edit a review\nfunction edit_review($review_id, $rating, $review_text) {\n    global $conn;\n    \n    // Check if the user is logged in (you should implement your own authentication system)\n    $user_id = $_SESSION['user_id'];\n    \n    // Validate input\n    if (!is_numeric($rating) || $rating < 1 || $rating > 5) {\n        return \"Rating must be between 1 and 5 stars.\";\n    }\n    \n    if (empty($review_text)) {\n        return \"Review text cannot be empty.\";\n    }\n    \n    // Escape special characters to prevent SQL injection\n    $review_id = mysqli_real_escape_string($conn, $review_id);\n    $rating = mysqli_real_escape_string($conn, $rating);\n    $review_text = mysqli_real_escape_string($conn, $review_text);\n    $user_id = mysqli_real_escape_string($conn, $user_id);\n    \n    // Update review in database\n    $sql = \"UPDATE reviews \n            SET rating = $rating, \n                review_text = '$review_text', \n                review_date = NOW() \n            WHERE id = $review_id \n            AND user_id = $user_id\";\n            \n    if (!mysqli_query($conn, $sql)) {\n        return \"Error: \" . mysqli_error($conn);\n    }\n    \n    return \"Review updated successfully!\";\n}\n\n// Function to delete a review\nfunction delete_review($review_id) {\n    global $conn;\n    \n    // Check if the user is logged in (you should implement your own authentication system)\n    $user_id = $_SESSION['user_id'];\n    \n    // Escape special characters to prevent SQL injection\n    $review_id = mysqli_real_escape_string($conn, $review_id);\n    $user_id = mysqli_real_escape_string($conn, $user_id);\n    \n    // Delete review from database\n    $sql = \"DELETE FROM reviews \n            WHERE id = $review_id \n            AND user_id = $user_id\";\n            \n    if (!mysqli_query($conn, $sql)) {\n        return \"Error: \" . mysqli_error($conn);\n    }\n    \n    return \"Review deleted successfully!\";\n}\n\n// Example usage:\nif (isset($_POST['submit_review'])) {\n    $result = add_review(1, $_POST['rating'], $_POST['review_text'], 1);\n    echo $result;\n}\n\ndisplay_reviews(1);\n\nmysqli_close($conn);\n?>\n```\n\nThis code provides the following functionality:\n\n1. Connects to a MySQL database\n2. Adds new reviews with validation\n3. Displays existing reviews in a formatted way\n4. Allows users to edit their own reviews\n5. Allows users to delete their own reviews\n\nTo use this code:\n\n1. Set up your database connection details at the top\n2. Create the necessary tables in your database:\n   - Users table (id, username, email, password)\n   - Reviews table (id, product_id, rating, review_text, user_id)\n\nKey features of this implementation:\n\n- Includes basic input validation\n- Prevents SQL injection through escaping\n- Uses a simple approval system for reviews\n- Only allows users to edit/delete their own reviews\n- Displays reviews in chronological order\n\nRemember to:\n- Implement your own authentication system\n- Add error handling as needed\n- Customize the styling of the displayed reviews\n- Add pagination if you have many reviews\n- Add more fields or functionality as required by your use case\n\nYou might want to add additional features like:\n\n- Review approval system for admin users\n- More detailed user information display\n- Display average rating\n- Add reply functionality for admins\n- Implement a reporting system for inappropriate reviews", "code_blocks": ["```php\n<?php\n// Database connection\n$host = 'localhost';\n$user = 'root';\n$password = '';\n$db_name = 'reviews_db';\n\n$conn = mysqli_connect($host, $user, $password, $db_name);\n\nif (!$conn) {\n    die(\"Connection failed: \" . mysqli_connect_error());\n}\n\n// Function to add a review\nfunction add_review($product_id, $rating, $review_text, $user_id) {\n    global $conn;\n    \n    // Check if the user is logged in (you should implement your own authentication system)\n    if (!$user_id) {\n        return \"You must be logged in to post a review.\";\n    }\n    \n    // Validate input\n    if (!is_numeric($rating) || $rating < 1 || $rating > 5) {\n        return \"Rating must be between 1 and 5 stars.\";\n    }\n    \n    if (empty($review_text)) {\n        return \"Review text cannot be empty.\";\n    }\n    \n    // Escape special characters to prevent SQL injection\n    $product_id = mysqli_real_escape_string($conn, $product_id);\n    $rating = mysqli_real_escape_string($conn, $rating);\n    $review_text = mysqli_real_escape_string($conn, $review_text);\n    $user_id = mysqli_real_escape_string($conn, $user_id);\n    \n    // Insert review into database\n    $sql = \"INSERT INTO reviews (product_id, rating, review_text, user_id) \n            VALUES ($product_id, $rating, '$review_text', $user_id)\";\n            \n    if (!mysqli_query($conn, $sql)) {\n        return \"Error: \" . mysqli_error($conn);\n    }\n    \n    return \"Review added successfully!\";\n}\n\n// Function to display reviews\nfunction display_reviews($product_id) {\n    global $conn;\n    \n    // Escape special characters to prevent SQL injection\n    $product_id = mysqli_real_escape_string($conn, $product_id);\n    \n    // Get reviews from database\n    $sql = \"SELECT r.*, u.username \n            FROM reviews r \n            JOIN users u ON r.user_id = u.id \n            WHERE product_id = $product_id \n            AND status = 'approved' \n            ORDER BY review_date DESC\";\n            \n    $result = mysqli_query($conn, $sql);\n    \n    if (!$result) {\n        die(\"Error: \" . mysqli_error($conn));\n    }\n    \n    // Display reviews\n    while ($row = mysqli_fetch_assoc($result)) {\n        echo \"<div class='review'>\";\n        echo \"<h4>Review by: \" . $row['username'] . \"</h4>\";\n        echo \"<p>Rating: \" . $row['rating'] . \"/5</p>\";\n        echo \"<p>\" . $row['review_text'] . \"</p>\";\n        echo \"<small>Posted on: \" . $row['review_date'] . \"</small>\";\n        echo \"</div><br/>\";\n    }\n}\n\n// Function to edit a review\nfunction edit_review($review_id, $rating, $review_text) {\n    global $conn;\n    \n    // Check if the user is logged in (you should implement your own authentication system)\n    $user_id = $_SESSION['user_id'];\n    \n    // Validate input\n    if (!is_numeric($rating) || $rating < 1 || $rating > 5) {\n        return \"Rating must be between 1 and 5 stars.\";\n    }\n    \n    if (empty($review_text)) {\n        return \"Review text cannot be empty.\";\n    }\n    \n    // Escape special characters to prevent SQL injection\n    $review_id = mysqli_real_escape_string($conn, $review_id);\n    $rating = mysqli_real_escape_string($conn, $rating);\n    $review_text = mysqli_real_escape_string($conn, $review_text);\n    $user_id = mysqli_real_escape_string($conn, $user_id);\n    \n    // Update review in database\n    $sql = \"UPDATE reviews \n            SET rating = $rating, \n                review_text = '$review_text', \n                review_date = NOW() \n            WHERE id = $review_id \n            AND user_id = $user_id\";\n            \n    if (!mysqli_query($conn, $sql)) {\n        return \"Error: \" . mysqli_error($conn);\n    }\n    \n    return \"Review updated successfully!\";\n}\n\n// Function to delete a review\nfunction delete_review($review_id) {\n    global $conn;\n    \n    // Check if the user is logged in (you should implement your own authentication system)\n    $user_id = $_SESSION['user_id'];\n    \n    // Escape special characters to prevent SQL injection\n    $review_id = mysqli_real_escape_string($conn, $review_id);\n    $user_id = mysqli_real_escape_string($conn, $user_id);\n    \n    // Delete review from database\n    $sql = \"DELETE FROM reviews \n            WHERE id = $review_id \n            AND user_id = $user_id\";\n            \n    if (!mysqli_query($conn, $sql)) {\n        return \"Error: \" . mysqli_error($conn);\n    }\n    \n    return \"Review deleted successfully!\";\n}\n\n// Example usage:\nif (isset($_POST['submit_review'])) {\n    $result = add_review(1, $_POST['rating'], $_POST['review_text'], 1);\n    echo $result;\n}\n\ndisplay_reviews(1);\n\nmysqli_close($conn);\n?>\n```"]}
