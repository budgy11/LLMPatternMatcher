{"prompt": "Create a user review function using php", "llm_output": "<think>\nOkay, so the user wants to create a user review function using PHP. Let me think about how to approach this.\n\nFirst, I need to understand what a user review function entails. It should allow users to leave reviews and ratings for something, maybe a product or service. So, the main components would be displaying the form where users can input their reviews, storing that data in a database, retrieving and displaying existing reviews, and calculating things like average rating.\n\nI'll start by setting up the HTML structure for the review section. There should be a form with fields for name, email, rating stars, and the comment text area. I'll need to include JavaScript to handle the star selection so that when a user clicks on a star, it updates the selected value and visual representation.\n\nNext, the PHP part. The form submission needs to process the input data. I should validate each field\u2014make sure name and email aren't empty, validate the email format, and ensure the rating is an integer between 1 and 5. If any validation fails, display error messages.\n\nThen, connecting to a MySQL database. I'll set up a connection using mysqli_connect, making sure to handle any connection errors properly. The reviews table should have columns for review_id (auto-increment), name, email, rating, comment, and timestamp.\n\nAfter inserting the new review into the database, I'll retrieve all existing reviews to display them. For each review, I'll show the user's name, email, formatted date, stars based on their rating, and the comment. Also, calculate the average rating by summing all ratings and dividing by the number of reviews.\n\nSecurity is important here. I should use prepared statements with mysqli to prevent SQL injection attacks. Additionally, sanitize any output data to avoid XSS vulnerabilities.\n\nTesting each part step by step: first, make sure the form displays correctly. Then, check if submitting a review works without errors. Verify that all validations are in place and display appropriate messages when something is wrong. Finally, ensure that reviews are displayed properly with correct average ratings and formatted dates.\n\nI should also consider error handling for database operations\u2014like checking if insertions or selections were successful and providing feedback if they fail.\n\nPutting it all together, the code will have sections for connecting to the database, processing form data, inserting into the table, retrieving reviews, calculating averages, displaying the form and reviews, and closing the database connection.\n\nI need to make sure the code is well-structured, uses best practices like prepared statements, and includes comments where necessary for clarity. Testing each function separately before integrating them will help catch any issues early on.\n</think>\n\nHere's an example of a user review function using PHP:\n\n```php\n<?php\n// Database connection settings\n$host = \"localhost\";\n$username = \"username\";\n$password = \"password\";\n$database = \"reviews_db\";\n\n// Connect to database\n$conn = mysqli_connect($host, $username, $password, $database);\n\nif (!$conn) {\n    die(\"Connection failed: \" . mysqli_connect_error());\n}\n\n// Function to add a new review\nfunction addReview($name, $email, $rating, $comment, $conn) {\n    // Sanitize input data\n    $name = mysqli_real_escape_string($conn, htmlspecialchars($name));\n    $email = mysqli_real_escape_string($conn, htmlspecialchars($email));\n    $comment = mysqli_real_escape_string($conn, htmlspecialchars($comment));\n\n    // Insert review into database\n    $sql = \"INSERT INTO reviews (name, email, rating, comment) \n            VALUES ('$name', '$email', '$rating', '$comment')\";\n    \n    if (mysqli_query($conn, $sql)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n// Function to get all reviews\nfunction getAllReviews($conn) {\n    $sql = \"SELECT * FROM reviews\";\n    $result = mysqli_query($conn, $sql);\n    return $result;\n}\n\n// Function to calculate average rating\nfunction getAverageRating($conn) {\n    $sql = \"SELECT AVG(rating) as average FROM reviews\";\n    $result = mysqli_query($conn, $sql);\n    $row = mysqli_fetch_assoc($result);\n    return round($row['average'], 1); // Round to one decimal place\n}\n\n// Check if review was submitted\nif ($_SERVER[\"REQUEST_METHOD\"] == \"POST\") {\n    $name = $_POST[\"name\"];\n    $email = $_POST[\"email\"];\n    $rating = isset($_POST[\"rating\"]) ? intval($_POST[\"rating\"]) : 0;\n    $comment = $_POST[\"comment\"];\n\n    // Validate input\n    if ($name == \"\" || $email == \"\" || $rating < 1 || $rating > 5) {\n        echo \"Please fill in all fields with valid information!\";\n    } else {\n        addReview($name, $email, $rating, $comment, $conn);\n    }\n}\n\n// Display review form\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>User Reviews</title>\n    <style>\n        .review-form {\n            max-width: 600px;\n            margin: 20px auto;\n            padding: 20px;\n            border: 1px solid #ccc;\n            border-radius: 5px;\n        }\n        \n        .stars {\n            display: inline-block;\n            cursor: pointer;\n            color: gold;\n        }\n\n        .review-list {\n            margin-top: 30px;\n        }\n\n        .review-item {\n            padding: 15px;\n            border-bottom: 1px solid #ccc;\n        }\n    </style>\n</head>\n<body>\n\n<div class=\"review-form\">\n    <h2>Leave a Review</h2>\n    <form method=\"post\" action=\"<?php echo $_SERVER['PHP_SELF']; ?>\">\n        <div style=\"margin-bottom: 10px;\">\n            <label for=\"name\">Name:</label><br>\n            <input type=\"text\" id=\"name\" name=\"name\">\n        </div>\n\n        <div style=\"margin-bottom: 10px;\">\n            <label for=\"email\">Email:</label><br>\n            <input type=\"email\" id=\"email\" name=\"email\">\n        </div>\n\n        <div style=\"margin-bottom: 10px;\">\n            <label>Rating:</label><br>\n            <span class=\"stars\" onclick=\"setRating(5)\">\u2605</span>\n            <span class=\"stars\" onclick=\"setRating(4)\">\u2605</span>\n            <span class=\"stars\" onclick=\"setRating(3)\">\u2605</span>\n            <span class=\"stars\" onclick=\"setRating(2)\">\u2605</span>\n            <span class=\"stars\" onclick=\"setRating(1)\">\u2605</span>\n            <input type=\"hidden\" id=\"rating\" name=\"rating\" value=\"0\">\n        </div>\n\n        <div style=\"margin-bottom: 10px;\">\n            <label for=\"comment\">Comment:</label><br>\n            <textarea id=\"comment\" name=\"comment\" rows=\"4\"></textarea>\n        </div>\n\n        <input type=\"submit\" value=\"Submit Review\">\n    </form>\n</div>\n\n<div class=\"review-list\">\n    <h2>Reviews</h2>\n    <?php\n    $average = getAverageRating($conn);\n    echo \"<p>Average Rating: $average stars</p>\";\n    \n    $reviews = getAllReviews($conn);\n    while ($row = mysqli_fetch_assoc($reviews)) {\n        $stars = str_repeat(\"\u2605\", $row['rating']);\n        $date = date('F j, Y', strtotime($row['timestamp']));\n        \n        echo \"<div class=\\\"review-item\\\">\";\n        echo \"<h3>\" . htmlspecialchars($row['name']) . \"</h3>\";\n        echo \"<p>\" . htmlspecialchars($row['email']) . \" - $stars</p>\";\n        echo \"<small>$date</small><br>\";\n        echo \"<p>\" . htmlspecialchars($row['comment']) . \"</p>\";\n        echo \"</div>\";\n    }\n    ?>\n</div>\n\n<script>\nfunction setRating(rating) {\n    document.getElementById('rating').value = rating;\n    var stars = document.getElementsByClassName('stars');\n    for (var i = 0; i < stars.length; i++) {\n        if (i < rating) {\n            stars[i].style.color = \"gold\";\n        } else {\n            stars[i].style.color = \"#ccc\";\n        }\n    }\n}\n</script>\n\n<?php\n// Close database connection\nmysqli_close($conn);\n?>\n```\n\nThis code provides:\n\n1. A review submission form with:\n   - Name input\n   - Email input\n   - Star rating system (1-5 stars)\n   - Comment textarea\n\n2. Review management functions including:\n   - Adding new reviews to the database\n   - Retrieving and displaying all existing reviews\n   - Calculating and displaying average ratings\n\n3. Features:\n   - Input validation\n   - Database connection handling\n   - Sanitized input/output to prevent SQL injection and XSS attacks\n   - Clean, responsive design\n   - JavaScript functionality for rating selection\n   - Formatted timestamps\n   - Star display based on user ratings\n\nTo use this code:\n\n1. Create a database named `reviews_db` with a table named `reviews` containing the following columns:\n   - review_id (INT AUTO_INCREMENT)\n   - name (VARCHAR(255))\n   - email (VARCHAR(255))\n   - rating (INT)\n   - comment (TEXT)\n   - timestamp (TIMESTAMP DEFAULT CURRENT_TIMESTAMP)\n\n2. Update the database connection settings at the top of the file with your actual database credentials.\n\n3. Host it on a web server with PHP and MySQL support.\n\n4. Access it through a web browser to submit and view reviews.\n\nThe code includes basic error handling and security measures, but you may want to add more robust validation and security features depending on your specific needs.", "code_blocks": ["```php\n<?php\n// Database connection settings\n$host = \"localhost\";\n$username = \"username\";\n$password = \"password\";\n$database = \"reviews_db\";\n\n// Connect to database\n$conn = mysqli_connect($host, $username, $password, $database);\n\nif (!$conn) {\n    die(\"Connection failed: \" . mysqli_connect_error());\n}\n\n// Function to add a new review\nfunction addReview($name, $email, $rating, $comment, $conn) {\n    // Sanitize input data\n    $name = mysqli_real_escape_string($conn, htmlspecialchars($name));\n    $email = mysqli_real_escape_string($conn, htmlspecialchars($email));\n    $comment = mysqli_real_escape_string($conn, htmlspecialchars($comment));\n\n    // Insert review into database\n    $sql = \"INSERT INTO reviews (name, email, rating, comment) \n            VALUES ('$name', '$email', '$rating', '$comment')\";\n    \n    if (mysqli_query($conn, $sql)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n// Function to get all reviews\nfunction getAllReviews($conn) {\n    $sql = \"SELECT * FROM reviews\";\n    $result = mysqli_query($conn, $sql);\n    return $result;\n}\n\n// Function to calculate average rating\nfunction getAverageRating($conn) {\n    $sql = \"SELECT AVG(rating) as average FROM reviews\";\n    $result = mysqli_query($conn, $sql);\n    $row = mysqli_fetch_assoc($result);\n    return round($row['average'], 1); // Round to one decimal place\n}\n\n// Check if review was submitted\nif ($_SERVER[\"REQUEST_METHOD\"] == \"POST\") {\n    $name = $_POST[\"name\"];\n    $email = $_POST[\"email\"];\n    $rating = isset($_POST[\"rating\"]) ? intval($_POST[\"rating\"]) : 0;\n    $comment = $_POST[\"comment\"];\n\n    // Validate input\n    if ($name == \"\" || $email == \"\" || $rating < 1 || $rating > 5) {\n        echo \"Please fill in all fields with valid information!\";\n    } else {\n        addReview($name, $email, $rating, $comment, $conn);\n    }\n}\n\n// Display review form\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>User Reviews</title>\n    <style>\n        .review-form {\n            max-width: 600px;\n            margin: 20px auto;\n            padding: 20px;\n            border: 1px solid #ccc;\n            border-radius: 5px;\n        }\n        \n        .stars {\n            display: inline-block;\n            cursor: pointer;\n            color: gold;\n        }\n\n        .review-list {\n            margin-top: 30px;\n        }\n\n        .review-item {\n            padding: 15px;\n            border-bottom: 1px solid #ccc;\n        }\n    </style>\n</head>\n<body>\n\n<div class=\"review-form\">\n    <h2>Leave a Review</h2>\n    <form method=\"post\" action=\"<?php echo $_SERVER['PHP_SELF']; ?>\">\n        <div style=\"margin-bottom: 10px;\">\n            <label for=\"name\">Name:</label><br>\n            <input type=\"text\" id=\"name\" name=\"name\">\n        </div>\n\n        <div style=\"margin-bottom: 10px;\">\n            <label for=\"email\">Email:</label><br>\n            <input type=\"email\" id=\"email\" name=\"email\">\n        </div>\n\n        <div style=\"margin-bottom: 10px;\">\n            <label>Rating:</label><br>\n            <span class=\"stars\" onclick=\"setRating(5)\">\u2605</span>\n            <span class=\"stars\" onclick=\"setRating(4)\">\u2605</span>\n            <span class=\"stars\" onclick=\"setRating(3)\">\u2605</span>\n            <span class=\"stars\" onclick=\"setRating(2)\">\u2605</span>\n            <span class=\"stars\" onclick=\"setRating(1)\">\u2605</span>\n            <input type=\"hidden\" id=\"rating\" name=\"rating\" value=\"0\">\n        </div>\n\n        <div style=\"margin-bottom: 10px;\">\n            <label for=\"comment\">Comment:</label><br>\n            <textarea id=\"comment\" name=\"comment\" rows=\"4\"></textarea>\n        </div>\n\n        <input type=\"submit\" value=\"Submit Review\">\n    </form>\n</div>\n\n<div class=\"review-list\">\n    <h2>Reviews</h2>\n    <?php\n    $average = getAverageRating($conn);\n    echo \"<p>Average Rating: $average stars</p>\";\n    \n    $reviews = getAllReviews($conn);\n    while ($row = mysqli_fetch_assoc($reviews)) {\n        $stars = str_repeat(\"\u2605\", $row['rating']);\n        $date = date('F j, Y', strtotime($row['timestamp']));\n        \n        echo \"<div class=\\\"review-item\\\">\";\n        echo \"<h3>\" . htmlspecialchars($row['name']) . \"</h3>\";\n        echo \"<p>\" . htmlspecialchars($row['email']) . \" - $stars</p>\";\n        echo \"<small>$date</small><br>\";\n        echo \"<p>\" . htmlspecialchars($row['comment']) . \"</p>\";\n        echo \"</div>\";\n    }\n    ?>\n</div>\n\n<script>\nfunction setRating(rating) {\n    document.getElementById('rating').value = rating;\n    var stars = document.getElementsByClassName('stars');\n    for (var i = 0; i < stars.length; i++) {\n        if (i < rating) {\n            stars[i].style.color = \"gold\";\n        } else {\n            stars[i].style.color = \"#ccc\";\n        }\n    }\n}\n</script>\n\n<?php\n// Close database connection\nmysqli_close($conn);\n?>\n```"]}
