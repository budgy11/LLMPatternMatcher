{"prompt": "Create a user review function using php", "llm_output": "<think>\nOkay, I need to create a user review function using PHP. Let me think about how to approach this.\n\nFirst, the function should allow users to leave reviews and ratings for products or services. So, I'll need a form where they can input their name, email, rating from 1 to 5, and their comment.\n\nNext, I have to handle the submission of this form. The data needs to be validated before saving it into a database. Validation should include checking that all required fields are filled out, the rating is within the valid range, and the email is in the correct format.\n\nOnce the data passes validation, I'll insert it into a MySQL database. I should make sure to use prepared statements with mysqli to prevent SQL injection attacks.\n\nAfter saving the review, I need to display it on the product page. This means retrieving all reviews from the database and showing them, including the user's name, rating as stars, comment, and timestamp.\n\nI also want to calculate and display the average rating based on all submitted reviews. This will give users a quick overview of how popular the product is.\n\nSecurity is important, so I'll implement measures like prepared statements for SQL injection and sanitizing inputs to prevent XSS attacks by escaping output data.\n\nPutting it all together, I'll structure the code into sections: database connection setup, form handling with validation, review submission logic, display of reviews, and average rating calculation. Each part should be clearly defined and commented for better readability.\n\nFinally, I'll test each part step by step to ensure everything works as expected, from submitting a review to displaying it correctly on the page.\n</think>\n\nHere's an example of a user review function in PHP that allows users to submit reviews and ratings for a product/service and displays them:\n\n```php\n<?php\n// Database connection\n$servername = \"localhost\";\n$username = \"username\";\n$password = \"password\";\n$dbname = \"reviews_db\";\n\n// Create connection\n$conn = mysqli_connect($servername, $username, $password, $dbname);\n\n// Check connection\nif (!$conn) {\n    die(\"Connection failed: \" . mysqli_connect_error());\n}\n\n// Function to display reviews\nfunction display_reviews($product_id) {\n    global $conn;\n    \n    // Get all reviews for the product\n    $sql = \"SELECT * FROM reviews WHERE product_id = ? ORDER BY review_date DESC\";\n    $stmt = mysqli_prepare($conn, $sql);\n    mysqli_stmt_bind_param($stmt, \"i\", $product_id);\n    mysqli_stmt_execute($stmt);\n    $result = mysqli_stmt_get_result($stmt);\n\n    // Calculate average rating\n    $average_rating = 0;\n    $total_ratings = 0;\n    \n    while ($row = mysqli_fetch_assoc($result)) {\n        $average_rating += $row['rating'];\n        $total_ratings++;\n    }\n    \n    if ($total_ratings > 0) {\n        $average_rating /= $total_ratings;\n    }\n\n    // Display average rating\n    echo \"<div class='average-rating'>\";\n    echo \"Average Rating: \" . number_format($average_rating, 1) . \"/5\";\n    echo \"</div>\";\n\n    // Display all reviews\n    while ($row = mysqli_fetch_assoc($result)) {\n        $user_name = htmlspecialchars($row['user_name']);\n        $rating = $row['rating'];\n        $comment = htmlspecialchars($row['comment']);\n        $review_date = date('F j, Y g:i a', strtotime($row['review_date']));\n\n        echo \"<div class='review'>\";\n        echo \"<div class='review-header'>\";\n        echo \"<span class='user-name'>$user_name</span>\";\n        echo \"<span class='rating'>\";\n        \n        for ($i = 1; $i <= $rating; $i++) {\n            echo \"<span class='star'>\u2605</span>\";\n        }\n        \n        for ($i = $rating + 1; $i <= 5; $i++) {\n            echo \"<span class='star'>\u2606</span>\";\n        }\n        \n        echo \"</span>\";\n        echo \"<span class='date'>$review_date</span>\";\n        echo \"</div>\";\n        echo \"<div class='comment'>$comment</div>\";\n        echo \"</div>\";\n    }\n}\n\n// Function to handle review submission\nfunction submit_review($product_id, $user_name, $email, $rating, $comment) {\n    global $conn;\n    \n    // Validate input\n    if (empty($user_name) || empty($email) || empty($rating) || empty($comment)) {\n        return \"Please fill in all required fields.\";\n    }\n    \n    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {\n        return \"Please enter a valid email address.\";\n    }\n    \n    if ($rating < 1 || $rating > 5) {\n        return \"Rating must be between 1 and 5.\";\n    }\n    \n    // Sanitize input\n    $user_name = mysqli_real_escape_string($conn, htmlspecialchars($user_name));\n    $email = mysqli_real_escape_string($conn, htmlspecialchars($email));\n    $comment = mysqli_real_escape_string($conn, htmlspecialchars($comment));\n    \n    // Insert review into database\n    $sql = \"INSERT INTO reviews (product_id, user_name, email, rating, comment) \n            VALUES (?, ?, ?, ?, ?)\";\n    \n    $stmt = mysqli_prepare($conn, $sql);\n    mysqli_stmt_bind_param($stmt, \"isiii\", $product_id, $user_name, $email, $rating, $comment);\n    \n    if (mysqli_stmt_execute($stmt)) {\n        return true;\n    } else {\n        return \"Error submitting review: \" . mysqli_error($conn);\n    }\n}\n\n// Example usage:\nif ($_SERVER[\"REQUEST_METHOD\"] == \"POST\") {\n    // Submit review\n    $product_id = 1; // Set your product ID\n    $user_name = $_POST['user_name'];\n    $email = $_POST['email'];\n    $rating = $_POST['rating'];\n    $comment = $_POST['comment'];\n    \n    $result = submit_review($product_id, $user_name, $email, $rating, $comment);\n    \n    if ($result === true) {\n        echo \"Review submitted successfully!\";\n    } else {\n        echo $result;\n    }\n}\n\n// Display all reviews for product ID 1\ndisplay_reviews(1);\n\nmysqli_close($conn);\n?>\n```\n\nThis code includes:\n\n1. **Database Connection**: Connects to a MySQL database where reviews will be stored.\n\n2. **submit_review() Function**:\n   - Validates and sanitizes input data\n   - Checks that all required fields are filled out\n   - Verifies email format\n   - Ensures rating is between 1-5\n   - Inserts review into the database\n\n3. **display_reviews() Function**:\n   - Retrieves reviews from the database for a specific product\n   - Displays user name, rating (as stars), comment, and timestamp\n   - Calculates and displays average rating\n\n4. **Example Usage**:\n   - Handles form submission\n   - Shows how to call the review functions\n\nTo use this code:\n\n1. Create a table named `reviews` in your database with the following columns:\n   - id (INT, AUTO_INCREMENT)\n   - product_id (INT)\n   - user_name (VARCHAR)\n   - email (VARCHAR)\n   - rating (INT)\n   - comment (TEXT)\n   - review_date (DATETIME)\n\n2. Update the database connection details (`$servername`, `$username`, `$password`, `$dbname`).\n\n3. Add a form in your HTML where users can submit reviews:\n\n```html\n<form method=\"post\" action=\"\">\n    <input type=\"text\" name=\"user_name\" placeholder=\"Your Name\" required>\n    <input type=\"email\" name=\"email\" placeholder=\"Email Address\" required>\n    \n    <div class=\"rating\">\n        <span>Rating:</span>\n        <select name=\"rating\" required>\n            <option value=\"\">Select Rating</option>\n            <option value=\"5\">\u2605\u2605\u2605\u2605\u2605 (5)</option>\n            <option value=\"4\">\u2605\u2605\u2605\u2605\u2606 (4)</option>\n            <option value=\"3\">\u2605\u2605\u2605\u2606\u2606 (3)</option>\n            <option value=\"2\">\u2605\u2605\u2606\u2606\u2606 (2)</option>\n            <option value=\"1\">\u2605\u2606\u2606\u2606\u2606 (1)</option>\n        </select>\n    </div>\n\n    <textarea name=\"comment\" placeholder=\"Write your review...\" required></textarea>\n    \n    <button type=\"submit\">Submit Review</button>\n</form>\n```\n\n3. Add CSS styling to make the reviews look nice:\n\n```css\n.review {\n    border: 1px solid #ddd;\n    padding: 20px;\n    margin-bottom: 20px;\n}\n\n.rating .star {\n    color: gold;\n}\n```\n\nThis implementation provides:\n- Secure review submission with input validation\n- Clean and organized display of reviews\n- Average rating calculation\n- Protection against SQL injection and XSS attacks\n\nRemember to:\n- Create your database table before using this code\n- Handle errors appropriately in production\n- Add CAPTCHA or other anti-spam measures for public-facing sites\n- Implement rate limiting to prevent abuse\n- Add user authentication if you want to restrict reviews to registered users", "code_blocks": ["```php\n<?php\n// Database connection\n$servername = \"localhost\";\n$username = \"username\";\n$password = \"password\";\n$dbname = \"reviews_db\";\n\n// Create connection\n$conn = mysqli_connect($servername, $username, $password, $dbname);\n\n// Check connection\nif (!$conn) {\n    die(\"Connection failed: \" . mysqli_connect_error());\n}\n\n// Function to display reviews\nfunction display_reviews($product_id) {\n    global $conn;\n    \n    // Get all reviews for the product\n    $sql = \"SELECT * FROM reviews WHERE product_id = ? ORDER BY review_date DESC\";\n    $stmt = mysqli_prepare($conn, $sql);\n    mysqli_stmt_bind_param($stmt, \"i\", $product_id);\n    mysqli_stmt_execute($stmt);\n    $result = mysqli_stmt_get_result($stmt);\n\n    // Calculate average rating\n    $average_rating = 0;\n    $total_ratings = 0;\n    \n    while ($row = mysqli_fetch_assoc($result)) {\n        $average_rating += $row['rating'];\n        $total_ratings++;\n    }\n    \n    if ($total_ratings > 0) {\n        $average_rating /= $total_ratings;\n    }\n\n    // Display average rating\n    echo \"<div class='average-rating'>\";\n    echo \"Average Rating: \" . number_format($average_rating, 1) . \"/5\";\n    echo \"</div>\";\n\n    // Display all reviews\n    while ($row = mysqli_fetch_assoc($result)) {\n        $user_name = htmlspecialchars($row['user_name']);\n        $rating = $row['rating'];\n        $comment = htmlspecialchars($row['comment']);\n        $review_date = date('F j, Y g:i a', strtotime($row['review_date']));\n\n        echo \"<div class='review'>\";\n        echo \"<div class='review-header'>\";\n        echo \"<span class='user-name'>$user_name</span>\";\n        echo \"<span class='rating'>\";\n        \n        for ($i = 1; $i <= $rating; $i++) {\n            echo \"<span class='star'>\u2605</span>\";\n        }\n        \n        for ($i = $rating + 1; $i <= 5; $i++) {\n            echo \"<span class='star'>\u2606</span>\";\n        }\n        \n        echo \"</span>\";\n        echo \"<span class='date'>$review_date</span>\";\n        echo \"</div>\";\n        echo \"<div class='comment'>$comment</div>\";\n        echo \"</div>\";\n    }\n}\n\n// Function to handle review submission\nfunction submit_review($product_id, $user_name, $email, $rating, $comment) {\n    global $conn;\n    \n    // Validate input\n    if (empty($user_name) || empty($email) || empty($rating) || empty($comment)) {\n        return \"Please fill in all required fields.\";\n    }\n    \n    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {\n        return \"Please enter a valid email address.\";\n    }\n    \n    if ($rating < 1 || $rating > 5) {\n        return \"Rating must be between 1 and 5.\";\n    }\n    \n    // Sanitize input\n    $user_name = mysqli_real_escape_string($conn, htmlspecialchars($user_name));\n    $email = mysqli_real_escape_string($conn, htmlspecialchars($email));\n    $comment = mysqli_real_escape_string($conn, htmlspecialchars($comment));\n    \n    // Insert review into database\n    $sql = \"INSERT INTO reviews (product_id, user_name, email, rating, comment) \n            VALUES (?, ?, ?, ?, ?)\";\n    \n    $stmt = mysqli_prepare($conn, $sql);\n    mysqli_stmt_bind_param($stmt, \"isiii\", $product_id, $user_name, $email, $rating, $comment);\n    \n    if (mysqli_stmt_execute($stmt)) {\n        return true;\n    } else {\n        return \"Error submitting review: \" . mysqli_error($conn);\n    }\n}\n\n// Example usage:\nif ($_SERVER[\"REQUEST_METHOD\"] == \"POST\") {\n    // Submit review\n    $product_id = 1; // Set your product ID\n    $user_name = $_POST['user_name'];\n    $email = $_POST['email'];\n    $rating = $_POST['rating'];\n    $comment = $_POST['comment'];\n    \n    $result = submit_review($product_id, $user_name, $email, $rating, $comment);\n    \n    if ($result === true) {\n        echo \"Review submitted successfully!\";\n    } else {\n        echo $result;\n    }\n}\n\n// Display all reviews for product ID 1\ndisplay_reviews(1);\n\nmysqli_close($conn);\n?>\n```", null, null]}
