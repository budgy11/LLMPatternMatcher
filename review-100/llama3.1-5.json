{"prompt": "Create a user review function using php", "llm_output": "Here is an example of a basic user review system in PHP:\n\n**Database Schema:**\n\n```sql\nCREATE TABLE reviews (\n    id INT PRIMARY KEY AUTO_INCREMENT,\n    product_id INT,\n    user_id INT,\n    rating TINYINT(1),\n    comment TEXT,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\nCREATE TABLE users (\n    id INT PRIMARY KEY AUTO_INCREMENT,\n    username VARCHAR(255) NOT NULL UNIQUE,\n    email VARCHAR(255) NOT NULL UNIQUE\n);\n```\n\n**PHP Code:**\n\n```php\n// Review Model\nclass Review {\n    private $id;\n    private $product_id;\n    private $user_id;\n    private $rating;\n    private $comment;\n\n    public function __construct($id, $product_id, $user_id, $rating, $comment) {\n        $this->id = $id;\n        $this->product_id = $product_id;\n        $this->user_id = $user_id;\n        $this->rating = $rating;\n        $this->comment = $comment;\n    }\n\n    public function getId() {\n        return $this->id;\n    }\n\n    public function getProductID() {\n        return $this->product_id;\n    }\n\n    public function getUserID() {\n        return $this->user_id;\n    }\n\n    public function getRating() {\n        return $this->rating;\n    }\n\n    public function getComment() {\n        return $this->comment;\n    }\n}\n\n// Review Controller\nclass ReviewController {\n    private $db;\n\n    public function __construct($db) {\n        $this->db = $db;\n    }\n\n    public function createReview(Review $review) {\n        // Check if review already exists for user and product\n        $existingReview = $this->getReviewByUserAndProduct($review->getUserID(), $review->getProductID());\n        if ($existingReview !== null) {\n            return \"Review already exists\";\n        }\n\n        // Insert new review into database\n        $sql = \"INSERT INTO reviews (product_id, user_id, rating, comment)\n                VALUES (:product_id, :user_id, :rating, :comment)\";\n        $stmt = $this->db->prepare($sql);\n        $stmt->bindParam(\":product_id\", $review->getProductID());\n        $stmt->bindParam(\":user_id\", $review->getUserID());\n        $stmt->bindParam(\":rating\", $review->getRating());\n        $stmt->bindParam(\":comment\", $review->getComment());\n        $stmt->execute();\n\n        return \"Review created successfully\";\n    }\n\n    public function getReviewsByProduct($product_id) {\n        // Get all reviews for product\n        $sql = \"SELECT * FROM reviews WHERE product_id = :product_id\";\n        $stmt = $this->db->prepare($sql);\n        $stmt->bindParam(\":product_id\", $product_id);\n        $stmt->execute();\n        $reviews = $stmt->fetchAll();\n\n        return $reviews;\n    }\n\n    public function getReviewByUserAndProduct($user_id, $product_id) {\n        // Get review for user and product\n        $sql = \"SELECT * FROM reviews WHERE product_id = :product_id AND user_id = :user_id\";\n        $stmt = $this->db->prepare($sql);\n        $stmt->bindParam(\":product_id\", $product_id);\n        $stmt->bindParam(\":user_id\", $user_id);\n        $stmt->execute();\n        $review = $stmt->fetch();\n\n        return $review;\n    }\n}\n```\n\n**Example Usage:**\n\n```php\n// Create database connection\n$db = new PDO(\"mysql:host=localhost;dbname=mydatabase\", \"username\", \"password\");\n\n// Create review controller\n$reviewController = new ReviewController($db);\n\n// Create new review\n$review = new Review(null, 1, 1, 5, \"Great product!\");\n\n// Create review\n$result = $reviewController->createReview($review);\necho $result; // Output: Review created successfully\n\n// Get all reviews for product\n$product_id = 1;\n$reviews = $reviewController->getReviewsByProduct($product_id);\nforeach ($reviews as $review) {\n    echo \"Rating: {$review['rating']}, Comment: {$review['comment']}<br>\";\n}\n```\n\nThis code provides a basic user review system with functions to create new reviews, get all reviews for a product, and get the review for a specific user and product. The example usage shows how to use these functions to create a new review, get all reviews for a product, and display them on the page.", "code_blocks": [null, "```php\n// Review Model\nclass Review {\n    private $id;\n    private $product_id;\n    private $user_id;\n    private $rating;\n    private $comment;\n\n    public function __construct($id, $product_id, $user_id, $rating, $comment) {\n        $this->id = $id;\n        $this->product_id = $product_id;\n        $this->user_id = $user_id;\n        $this->rating = $rating;\n        $this->comment = $comment;\n    }\n\n    public function getId() {\n        return $this->id;\n    }\n\n    public function getProductID() {\n        return $this->product_id;\n    }\n\n    public function getUserID() {\n        return $this->user_id;\n    }\n\n    public function getRating() {\n        return $this->rating;\n    }\n\n    public function getComment() {\n        return $this->comment;\n    }\n}\n\n// Review Controller\nclass ReviewController {\n    private $db;\n\n    public function __construct($db) {\n        $this->db = $db;\n    }\n\n    public function createReview(Review $review) {\n        // Check if review already exists for user and product\n        $existingReview = $this->getReviewByUserAndProduct($review->getUserID(), $review->getProductID());\n        if ($existingReview !== null) {\n            return \"Review already exists\";\n        }\n\n        // Insert new review into database\n        $sql = \"INSERT INTO reviews (product_id, user_id, rating, comment)\n                VALUES (:product_id, :user_id, :rating, :comment)\";\n        $stmt = $this->db->prepare($sql);\n        $stmt->bindParam(\":product_id\", $review->getProductID());\n        $stmt->bindParam(\":user_id\", $review->getUserID());\n        $stmt->bindParam(\":rating\", $review->getRating());\n        $stmt->bindParam(\":comment\", $review->getComment());\n        $stmt->execute();\n\n        return \"Review created successfully\";\n    }\n\n    public function getReviewsByProduct($product_id) {\n        // Get all reviews for product\n        $sql = \"SELECT * FROM reviews WHERE product_id = :product_id\";\n        $stmt = $this->db->prepare($sql);\n        $stmt->bindParam(\":product_id\", $product_id);\n        $stmt->execute();\n        $reviews = $stmt->fetchAll();\n\n        return $reviews;\n    }\n\n    public function getReviewByUserAndProduct($user_id, $product_id) {\n        // Get review for user and product\n        $sql = \"SELECT * FROM reviews WHERE product_id = :product_id AND user_id = :user_id\";\n        $stmt = $this->db->prepare($sql);\n        $stmt->bindParam(\":product_id\", $product_id);\n        $stmt->bindParam(\":user_id\", $user_id);\n        $stmt->execute();\n        $review = $stmt->fetch();\n\n        return $review;\n    }\n}\n```", "```php\n// Create database connection\n$db = new PDO(\"mysql:host=localhost;dbname=mydatabase\", \"username\", \"password\");\n\n// Create review controller\n$reviewController = new ReviewController($db);\n\n// Create new review\n$review = new Review(null, 1, 1, 5, \"Great product!\");\n\n// Create review\n$result = $reviewController->createReview($review);\necho $result; // Output: Review created successfully\n\n// Get all reviews for product\n$product_id = 1;\n$reviews = $reviewController->getReviewsByProduct($product_id);\nforeach ($reviews as $review) {\n    echo \"Rating: {$review['rating']}, Comment: {$review['comment']}<br>\";\n}\n```"]}
