{"prompt": "Create a user review function using php", "llm_output": "<think>\nAlright, I need to create a PHP function for user reviews. Let me think about what this function should do.\n\nFirst, the function needs to accept parameters like user ID, product ID, rating, and review text. So I'll start by defining the function with these parameters.\n\nNext, I should validate the inputs. The rating must be between 1 and 5. If it's outside this range, I'll throw an exception. Also, I need to make sure that neither the user ID nor the product ID is empty.\n\nAfter validation, I'll connect to the database. I remember using mysqli for database connections. I'll include the database configuration file to get the connection details.\n\nNow, I should check if the user has already reviewed this product. I'll run a SELECT query to see if there's an existing review from this user on the product. If it exists, I'll update the rating and review text instead of inserting a new record.\n\nIf there's no existing review, I'll proceed to insert a new record into the reviews table with the provided details.\n\nI should handle any database errors by catching exceptions and returning an appropriate message or error code.\n\nFinally, after successfully updating or inserting, I'll return a success message. Also, I'll include a try-catch block around the database operations to manage any unexpected errors gracefully.\n\nTesting the function is important. I'll provide example usage with sample parameters to ensure it works as expected.\n</think>\n\nHere's an example of a user review function in PHP:\n\n```php\n<?php\nfunction submit_review($user_id, $product_id, $rating, $review_text) {\n    // Validate input\n    if (!is_numeric($rating) || $rating < 1 || $rating > 5) {\n        throw new Exception(\"Rating must be between 1 and 5\");\n    }\n    \n    if (empty($user_id) || empty($product_id)) {\n        throw new Exception(\"User ID and Product ID are required\");\n    }\n    \n    // Database connection\n    require_once('db_config.php');\n    \n    try {\n        $conn = new mysqli(DB_HOST, DB_USER, DB_PASS, DB_NAME);\n        \n        if ($conn->connect_error) {\n            throw new Exception(\"Database connection failed: \" . $conn->connect_error);\n        }\n        \n        // Check if user has already reviewed this product\n        $check_review_query = \"\n            SELECT review_id \n            FROM reviews \n            WHERE user_id = ? AND product_id = ?\n        \";\n        \n        $stmt = $conn->prepare($check_review_query);\n        $stmt->bind_param(\"ii\", $user_id, $product_id);\n        $stmt->execute();\n        $result = $stmt->get_result();\n        \n        if ($result->num_rows > 0) {\n            // Update existing review\n            $update_review_query = \"\n                UPDATE reviews \n                SET rating = ?, review_text = ?, review_date = CURRENT_TIMESTAMP \n                WHERE user_id = ? AND product_id = ?\n            \";\n            \n            $stmt = $conn->prepare($update_review_query);\n            $stmt->bind_param(\"iisi\", $rating, $review_text, $user_id, $product_id);\n            $stmt->execute();\n        } else {\n            // Insert new review\n            $insert_review_query = \"\n                INSERT INTO reviews (user_id, product_id, rating, review_text, review_date)\n                VALUES (?, ?, ?, ?, CURRENT_TIMESTAMP)\n            \";\n            \n            $stmt = $conn->prepare($insert_review_query);\n            $stmt->bind_param(\"iisi\", $user_id, $product_id, $rating, $review_text);\n            $stmt->execute();\n        }\n        \n        $stmt->close();\n        $conn->close();\n        \n        return \"Review submitted successfully!\";\n    } catch (Exception $e) {\n        // Handle any errors\n        error_log(\"Error submitting review: \" . $e->getMessage());\n        throw new Exception(\"Failed to submit review\");\n    }\n}\n?>\n```\n\nThis function:\n\n1. Accepts user_id, product_id, rating (1-5), and review_text as parameters.\n\n2. Performs basic input validation:\n   - Checks that the rating is a number between 1 and 5\n   - Ensures user_id and product_id are provided\n\n3. Connects to a MySQL database using mysqli\n\n4. Checks if the user has already reviewed this product\n   - If they have, updates their existing review\n   - If not, inserts a new review record\n\n5. Handles errors gracefully with try-catch blocks\n\n6. Returns success message upon completion\n\nTo use this function, you would call it like this:\n\n```php\ntry {\n    $result = submit_review(123, 456, 5, \"Great product!\");\n    echo $result; // Should display \"Review submitted successfully!\"\n} catch (Exception $e) {\n    echo \"Error: \" . $e->getMessage();\n}\n```\n\nNote: This is a basic example and should be adapted to your specific database schema and security requirements. You might want to add:\n\n1. Sanitization of input data\n2. More comprehensive error handling\n3. Rate limiting\n4. Spam prevention measures\n5. IP tracking\n6. Moderation features\n\nMake sure to adjust the database connection details (host, username, password, database name) in the db_config.php file to match your environment.\n\nRemember to handle exceptions properly and consider implementing logging for errors.", "code_blocks": ["```php\n<?php\nfunction submit_review($user_id, $product_id, $rating, $review_text) {\n    // Validate input\n    if (!is_numeric($rating) || $rating < 1 || $rating > 5) {\n        throw new Exception(\"Rating must be between 1 and 5\");\n    }\n    \n    if (empty($user_id) || empty($product_id)) {\n        throw new Exception(\"User ID and Product ID are required\");\n    }\n    \n    // Database connection\n    require_once('db_config.php');\n    \n    try {\n        $conn = new mysqli(DB_HOST, DB_USER, DB_PASS, DB_NAME);\n        \n        if ($conn->connect_error) {\n            throw new Exception(\"Database connection failed: \" . $conn->connect_error);\n        }\n        \n        // Check if user has already reviewed this product\n        $check_review_query = \"\n            SELECT review_id \n            FROM reviews \n            WHERE user_id = ? AND product_id = ?\n        \";\n        \n        $stmt = $conn->prepare($check_review_query);\n        $stmt->bind_param(\"ii\", $user_id, $product_id);\n        $stmt->execute();\n        $result = $stmt->get_result();\n        \n        if ($result->num_rows > 0) {\n            // Update existing review\n            $update_review_query = \"\n                UPDATE reviews \n                SET rating = ?, review_text = ?, review_date = CURRENT_TIMESTAMP \n                WHERE user_id = ? AND product_id = ?\n            \";\n            \n            $stmt = $conn->prepare($update_review_query);\n            $stmt->bind_param(\"iisi\", $rating, $review_text, $user_id, $product_id);\n            $stmt->execute();\n        } else {\n            // Insert new review\n            $insert_review_query = \"\n                INSERT INTO reviews (user_id, product_id, rating, review_text, review_date)\n                VALUES (?, ?, ?, ?, CURRENT_TIMESTAMP)\n            \";\n            \n            $stmt = $conn->prepare($insert_review_query);\n            $stmt->bind_param(\"iisi\", $user_id, $product_id, $rating, $review_text);\n            $stmt->execute();\n        }\n        \n        $stmt->close();\n        $conn->close();\n        \n        return \"Review submitted successfully!\";\n    } catch (Exception $e) {\n        // Handle any errors\n        error_log(\"Error submitting review: \" . $e->getMessage());\n        throw new Exception(\"Failed to submit review\");\n    }\n}\n?>\n```", "```php\ntry {\n    $result = submit_review(123, 456, 5, \"Great product!\");\n    echo $result; // Should display \"Review submitted successfully!\"\n} catch (Exception $e) {\n    echo \"Error: \" . $e->getMessage();\n}\n```"]}
