{"prompt": "Create a user review function using php", "llm_output": "<think>\nOkay, I need to create a user review function using PHP. Let me think about how to approach this.\n\nFirst, the function should allow users to submit reviews. So, I'll need an HTML form where they can input their name, email, rating, and comments. That makes sense because these are standard fields for reviews.\n\nNext, I have to handle the form submission. In PHP, that means checking if the form has been submitted using $_POST. I should also include a CSRF token to prevent cross-site request forgery attacks. Security is important, so adding that token is a good idea.\n\nValidation is crucial here. Each field needs to be checked for errors. For example, the name shouldn't be empty and should only contain letters. The email must be in a valid format. The rating should be a number between 1 and 5. Comments are optional but if provided, they shouldn't exceed 1000 characters. I'll use regular expressions to validate these inputs.\n\nSanitization is the next step to prevent SQL injection and XSS attacks. I'll escape the input data using htmlspecialchars for display and mysqli_real_escape_string when inserting into the database.\n\nNow, connecting to the database. I need to set up a connection with the host, username, password, and database name. Then, prepare an SQL query to insert the review into the 'reviews' table. Using prepared statements would be better for security, but since the example uses mysqli_real_escape_string, it's still safe.\n\nAfter inserting the data, I should provide feedback to the user, like a success message. Also, redirecting them back to the reviews page after a few seconds makes sense to prevent resubmission issues.\n\nDisplaying the reviews is another part. Fetching all reviews from the database and displaying them in a structured way. Each review should show the user's name, email, rating as stars, submission date, and comments if present.\n\nI should also handle cases where there are no reviews yet by showing a message like \"No reviews found.\" That makes the interface user-friendly.\n\nPutting it all together, I'll structure the code into sections: connecting to the database, handling form submission with validation, sanitization, inserting into the database, displaying success messages, and then fetching and displaying existing reviews.\n\nI need to make sure all variables are properly initialized and that error handling is in place. Also, checking for empty results when fetching reviews is important to avoid errors.\n\nFinally, testing each part step by step would help catch any issues. For example, submitting a review with invalid data should show appropriate error messages, and valid submissions should appear on the reviews page.\n</think>\n\nHere's an example of a user review system using PHP:\n\n```php\n<?php\n// Database connection\n$host = 'localhost';\n$username = 'root';\n$password = '';\n$database = 'reviews_db';\n\n$conn = mysqli_connect($host, $username, $password, $database);\n\nif (!$conn) {\n    die(\"Connection failed: \" . mysqli_connect_error());\n}\n\n// Session start for CSRF token\nsession_start();\n\n// Generate CSRF token if not exists\nif (!isset($_SESSION['csrf_token'])) {\n    $_SESSION['csrf_token'] = bin2hex(random_bytes(32));\n}\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>User Reviews</title>\n    <style>\n        .rating-stars {\n            display: inline-block;\n            font-size: 24px;\n        }\n        .review-card {\n            border: 1px solid #ddd;\n            padding: 15px;\n            margin-bottom: 10px;\n            background-color: #f9f9f9;\n            border-radius: 5px;\n        }\n    </style>\n</head>\n<body>\n\n<?php\n// Handle review submission\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    // Validate CSRF token\n    if (empty($_POST['csrf_token']) || $_POST['csrf_token'] !== $_SESSION['csrf_token']) {\n        die(\"Invalid request\");\n    }\n\n    $errors = [];\n    $name = trim($_POST['name']);\n    $email = trim($_POST['email']);\n    $rating = intval($_POST['rating']);\n    $comment = trim($_POST['comment']);\n\n    // Validate input\n    if (empty($name)) {\n        $errors[] = \"Name is required\";\n    } elseif (!preg_match(\"/^[a-zA-Z ]+$/\", $name)) {\n        $errors[] = \"Invalid name format. Only letters and spaces are allowed.\";\n    }\n\n    if (empty($email)) {\n        $errors[] = \"Email is required\";\n    } elseif (!filter_var($email, FILTER_VALIDATE_EMAIL)) {\n        $errors[] = \"Invalid email format\";\n    }\n\n    if ($rating < 1 || $rating > 5) {\n        $errors[] = \"Rating must be between 1 and 5\";\n    }\n\n    if (isset($comment) && strlen($comment) > 1000) {\n        $errors[] = \"Comment exceeds maximum length of 1000 characters\";\n    }\n\n    // If no errors\n    if (empty($errors)) {\n        // Sanitize inputs\n        $name = htmlspecialchars($name, ENT_QUOTES);\n        $email = htmlspecialchars($email, ENT_QUOTES);\n        $comment = htmlspecialchars($comment, ENT_QUOTES);\n\n        // Escape special characters for database insertion\n        $name_db = mysqli_real_escape_string($conn, $name);\n        $email_db = mysqli_real_escape_string($conn, $email);\n        $rating_db = mysqli_real_escape_string($conn, $rating);\n        $comment_db = mysqli_real_escape_string($conn, $comment);\n\n        // Get current date and time\n        $submission_date = date('Y-m-d H:i:s');\n\n        // Insert review into database\n        $sql = \"INSERT INTO reviews (name, email, rating, comment, submission_date) \n                VALUES ('$name_db', '$email_db', '$rating_db', '$comment_db', '$submission_date')\";\n\n        if (mysqli_query($conn, $sql)) {\n            echo \"<div style='color: green; margin-bottom: 20px;'>Thank you for submitting your review!</div>\";\n            // Redirect after 3 seconds\n            header(\"Refresh: 3; url=$_SERVER[PHP_SELF]\");\n            exit();\n        } else {\n            die(\"Error: \" . mysqli_error($conn));\n        }\n    } else {\n        foreach ($errors as $error) {\n            echo \"<div style='color: red;'>$error</div>\";\n        }\n    }\n}\n\n// Display existing reviews\n$sql = \"SELECT * FROM reviews ORDER BY submission_date DESC\";\n$result = mysqli_query($conn, $sql);\n\nif (mysqli_num_rows($result) > 0) {\n    while ($row = mysqli_fetch_assoc($result)) {\n        echo \"<div class='review-card'>\";\n        echo \"<h3>\" . htmlspecialchars_decode($row['name']) . \"</h3>\";\n        echo \"<p><strong>Email:</strong> \" . htmlspecialchars_decode($row['email']) . \"</p>\";\n        \n        // Display stars\n        $rating = intval($row['rating']);\n        for ($i = 1; $i <= 5; $i++) {\n            if ($i <= $rating) {\n                echo \"<span class='rating-stars'>\u2605</span>\";\n            } else {\n                echo \"<span class='rating-stars'>\u2606</span>\";\n            }\n        }\n\n        echo \"<p><strong>Submitted on:</strong> \" . $row['submission_date'] . \"</p>\";\n        \n        if (!empty($row['comment'])) {\n            echo \"<p><strong>Comments:</strong></p>\";\n            echo \"<p>\" . htmlspecialchars_decode($row['comment']) . \"</p>\";\n        }\n        \n        echo \"</div>\";\n    }\n} else {\n    echo \"<div style='color: gray;'>No reviews found.</div>\";\n}\n\n// Close database connection\nmysqli_close($conn);\n?>\n\n<!-- Review submission form -->\n<form method=\"post\" action=\"<?php echo $_SERVER['PHP_SELF']; ?>\">\n    <input type=\"hidden\" name=\"csrf_token\" value=\"<?php echo $_SESSION['csrf_token']; ?>\">\n\n    <label for=\"name\">Name:</label>\n    <input type=\"text\" id=\"name\" name=\"name\" required><br>\n\n    <label for=\"email\">Email:</label>\n    <input type=\"email\" id=\"email\" name=\"email\" required><br>\n\n    <label for=\"rating\">Rating:</label>\n    <select id=\"rating\" name=\"rating\">\n        <option value=\"5\">5 Stars</option>\n        <option value=\"4\">4 Stars</option>\n        <option value=\"3\">3 Stars</option>\n        <option value=\"2\">2 Stars</option>\n        <option value=\"1\">1 Star</option>\n    </select><br>\n\n    <label for=\"comment\">Comments:</label>\n    <textarea id=\"comment\" name=\"comment\" rows=\"4\" cols=\"50\"></textarea><br>\n\n    <input type=\"submit\" value=\"Submit Review\">\n</form>\n\n</body>\n</html>\n```\n\nThis code creates a complete user review system with the following features:\n\n1. Review submission form with validation\n2. Display of existing reviews with star ratings\n3. Input sanitization and SQL injection prevention\n4. XSS protection\n5. CSRF token protection\n6. Error handling\n\nTo use this code:\n\n1. Create a database named `reviews_db`\n2. Create a table `reviews` with the following columns:\n   - id (INT, AUTO_INCREMENT, PRIMARY KEY)\n   - name (VARCHAR(255))\n   - email (VARCHAR(255))\n   - rating (TINYINT)\n   - comment (TEXT)\n   - submission_date (DATETIME)\n\n3. Update the database connection details in the code\n\nThe system includes:\n\n- Input validation for all fields\n- Sanitization of user input\n- Protection against SQL injection and XSS attacks\n- Display of reviews in a card layout\n- Star rating visualization\n- Success message after review submission\n- Error messages for invalid inputs\n\nYou can customize the styling by modifying the CSS in the `<style>` section.\n\nRemember to:\n\n- Replace database credentials with your actual database information\n- Handle errors appropriately in production code\n- Add more security measures as needed for your specific use case", "code_blocks": ["```php\n<?php\n// Database connection\n$host = 'localhost';\n$username = 'root';\n$password = '';\n$database = 'reviews_db';\n\n$conn = mysqli_connect($host, $username, $password, $database);\n\nif (!$conn) {\n    die(\"Connection failed: \" . mysqli_connect_error());\n}\n\n// Session start for CSRF token\nsession_start();\n\n// Generate CSRF token if not exists\nif (!isset($_SESSION['csrf_token'])) {\n    $_SESSION['csrf_token'] = bin2hex(random_bytes(32));\n}\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>User Reviews</title>\n    <style>\n        .rating-stars {\n            display: inline-block;\n            font-size: 24px;\n        }\n        .review-card {\n            border: 1px solid #ddd;\n            padding: 15px;\n            margin-bottom: 10px;\n            background-color: #f9f9f9;\n            border-radius: 5px;\n        }\n    </style>\n</head>\n<body>\n\n<?php\n// Handle review submission\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    // Validate CSRF token\n    if (empty($_POST['csrf_token']) || $_POST['csrf_token'] !== $_SESSION['csrf_token']) {\n        die(\"Invalid request\");\n    }\n\n    $errors = [];\n    $name = trim($_POST['name']);\n    $email = trim($_POST['email']);\n    $rating = intval($_POST['rating']);\n    $comment = trim($_POST['comment']);\n\n    // Validate input\n    if (empty($name)) {\n        $errors[] = \"Name is required\";\n    } elseif (!preg_match(\"/^[a-zA-Z ]+$/\", $name)) {\n        $errors[] = \"Invalid name format. Only letters and spaces are allowed.\";\n    }\n\n    if (empty($email)) {\n        $errors[] = \"Email is required\";\n    } elseif (!filter_var($email, FILTER_VALIDATE_EMAIL)) {\n        $errors[] = \"Invalid email format\";\n    }\n\n    if ($rating < 1 || $rating > 5) {\n        $errors[] = \"Rating must be between 1 and 5\";\n    }\n\n    if (isset($comment) && strlen($comment) > 1000) {\n        $errors[] = \"Comment exceeds maximum length of 1000 characters\";\n    }\n\n    // If no errors\n    if (empty($errors)) {\n        // Sanitize inputs\n        $name = htmlspecialchars($name, ENT_QUOTES);\n        $email = htmlspecialchars($email, ENT_QUOTES);\n        $comment = htmlspecialchars($comment, ENT_QUOTES);\n\n        // Escape special characters for database insertion\n        $name_db = mysqli_real_escape_string($conn, $name);\n        $email_db = mysqli_real_escape_string($conn, $email);\n        $rating_db = mysqli_real_escape_string($conn, $rating);\n        $comment_db = mysqli_real_escape_string($conn, $comment);\n\n        // Get current date and time\n        $submission_date = date('Y-m-d H:i:s');\n\n        // Insert review into database\n        $sql = \"INSERT INTO reviews (name, email, rating, comment, submission_date) \n                VALUES ('$name_db', '$email_db', '$rating_db', '$comment_db', '$submission_date')\";\n\n        if (mysqli_query($conn, $sql)) {\n            echo \"<div style='color: green; margin-bottom: 20px;'>Thank you for submitting your review!</div>\";\n            // Redirect after 3 seconds\n            header(\"Refresh: 3; url=$_SERVER[PHP_SELF]\");\n            exit();\n        } else {\n            die(\"Error: \" . mysqli_error($conn));\n        }\n    } else {\n        foreach ($errors as $error) {\n            echo \"<div style='color: red;'>$error</div>\";\n        }\n    }\n}\n\n// Display existing reviews\n$sql = \"SELECT * FROM reviews ORDER BY submission_date DESC\";\n$result = mysqli_query($conn, $sql);\n\nif (mysqli_num_rows($result) > 0) {\n    while ($row = mysqli_fetch_assoc($result)) {\n        echo \"<div class='review-card'>\";\n        echo \"<h3>\" . htmlspecialchars_decode($row['name']) . \"</h3>\";\n        echo \"<p><strong>Email:</strong> \" . htmlspecialchars_decode($row['email']) . \"</p>\";\n        \n        // Display stars\n        $rating = intval($row['rating']);\n        for ($i = 1; $i <= 5; $i++) {\n            if ($i <= $rating) {\n                echo \"<span class='rating-stars'>\u2605</span>\";\n            } else {\n                echo \"<span class='rating-stars'>\u2606</span>\";\n            }\n        }\n\n        echo \"<p><strong>Submitted on:</strong> \" . $row['submission_date'] . \"</p>\";\n        \n        if (!empty($row['comment'])) {\n            echo \"<p><strong>Comments:</strong></p>\";\n            echo \"<p>\" . htmlspecialchars_decode($row['comment']) . \"</p>\";\n        }\n        \n        echo \"</div>\";\n    }\n} else {\n    echo \"<div style='color: gray;'>No reviews found.</div>\";\n}\n\n// Close database connection\nmysqli_close($conn);\n?>\n\n<!-- Review submission form -->\n<form method=\"post\" action=\"<?php echo $_SERVER['PHP_SELF']; ?>\">\n    <input type=\"hidden\" name=\"csrf_token\" value=\"<?php echo $_SESSION['csrf_token']; ?>\">\n\n    <label for=\"name\">Name:</label>\n    <input type=\"text\" id=\"name\" name=\"name\" required><br>\n\n    <label for=\"email\">Email:</label>\n    <input type=\"email\" id=\"email\" name=\"email\" required><br>\n\n    <label for=\"rating\">Rating:</label>\n    <select id=\"rating\" name=\"rating\">\n        <option value=\"5\">5 Stars</option>\n        <option value=\"4\">4 Stars</option>\n        <option value=\"3\">3 Stars</option>\n        <option value=\"2\">2 Stars</option>\n        <option value=\"1\">1 Star</option>\n    </select><br>\n\n    <label for=\"comment\">Comments:</label>\n    <textarea id=\"comment\" name=\"comment\" rows=\"4\" cols=\"50\"></textarea><br>\n\n    <input type=\"submit\" value=\"Submit Review\">\n</form>\n\n</body>\n</html>\n```"]}
