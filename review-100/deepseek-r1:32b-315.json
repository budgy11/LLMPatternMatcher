{"prompt": "Create a user review function using php", "llm_output": "<think>\nOkay, I need to create a PHP function for handling user reviews. Let me think about how to approach this.\n\nFirst, the function needs to add a review to a database. So, I'll need parameters like review ID, user ID, product ID, rating, and comment. Wait, actually, maybe the IDs can be generated automatically by the database, so perhaps the function shouldn't take them as parameters. That makes sense because using auto-increment is common for primary keys.\n\nNext, I should consider error handling. What if there are issues connecting to the database or inserting data? I need to include try-catch blocks to handle exceptions and display meaningful error messages.\n\nSanitizing inputs is crucial to prevent SQL injection. Using mysqli_real_escape_string will help with that. Also, validating the rating to ensure it's between 1 and 5 makes sense because reviews are typically on a scale of 1 to 5 stars.\n\nI'll need to connect to the database using mysqli_connect. I should store the connection details in a separate config file for security and better organization. That way, if the credentials change, I only have to update them in one place.\n\nThe SQL query should insert into the reviews table with the sanitized inputs. If something goes wrong during execution, mysqli_error will provide details about what happened.\n\nAfter successfully adding the review, it might be useful to return some confirmation, like the new review ID or a success message. Also, updating the product's average rating based on the new review would be beneficial. That way, users see an accurate average when they view the product.\n\nWait, how do I update the average rating? I need another function for that. Maybe create a helper function called update_product_rating that calculates the new average and updates it in the products table. This keeps the code clean and modular.\n\nPutting it all together, the main function will handle inserting the review, while the helper handles updating the product's rating. Testing is important, so I should make sure to test both functions with different scenarios, including edge cases like minimum and maximum ratings.\n\nI also need to consider security best practices. Using prepared statements could be more secure than escaping strings, but since the user asked for a basic function, maybe escaping is sufficient for now. Still, it's something to note for future improvements.\n\nFinally, I should include comments in the code to explain what each part does, making it easier for others to understand and maintain. Oh, and don't forget to include the config file at the beginning so the database connection works.\n</think>\n\nHere's an example of a user review function using PHP:\n\n```php\n<?php\n// Include configuration file\nrequire_once 'config.php';\n\nfunction add_user_review($user_id, $product_id, $rating, $comment) {\n    try {\n        // Connect to database\n        $conn = mysqli_connect(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);\n        \n        if (!$conn) {\n            throw new Exception(\"Could not connect to the database\");\n        }\n        \n        // Sanitize inputs\n        $user_id = mysqli_real_escape_string($conn, $user_id);\n        $product_id = mysqli_real_escape_string($conn, $product_id);\n        $rating = intval($rating);\n        $comment = mysqli_real_escape_string($conn, $comment);\n        \n        // Validate rating (assuming ratings are between 1 and 5)\n        if ($rating < 1 || $rating > 5) {\n            throw new Exception(\"Invalid rating value. Please choose a rating between 1 and 5.\");\n        }\n        \n        // Insert review into database\n        $sql = \"INSERT INTO reviews \n                (user_id, product_id, rating, comment) \n                VALUES ('$user_id', '$product_id', '$rating', '$comment')\";\n                \n        if (!mysqli_query($conn, $sql)) {\n            throw new Exception(\"Error adding review: \" . mysqli_error($conn));\n        }\n        \n        // Get the inserted review ID\n        $review_id = mysqli_insert_id($conn);\n        \n        // Close database connection\n        mysqli_close($conn);\n        \n        return array(\n            'status' => 'success',\n            'message' => 'Review added successfully!',\n            'review_id' => $review_id\n        );\n        \n    } catch (Exception $e) {\n        // Handle exceptions and errors\n        return array(\n            'status' => 'error',\n            'message' => $e->getMessage()\n        );\n    }\n}\n\n// Example usage:\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    $user_id = $_POST['user_id'];\n    $product_id = $_POST['product_id'];\n    $rating = $_POST['rating'];\n    $comment = $_POST['comment'];\n    \n    $result = add_user_review($user_id, $product_id, $rating, $comment);\n    \n    if ($result['status'] == 'success') {\n        echo \"Review added successfully! Review ID: \" . $result['review_id'];\n    } else {\n        echo \"Error adding review: \" . $result['message'];\n    }\n}\n\n// Helper function to update product rating based on new review\nfunction update_product_rating($product_id) {\n    try {\n        $conn = mysqli_connect(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);\n        \n        if (!$conn) {\n            throw new Exception(\"Could not connect to the database\");\n        }\n        \n        // Calculate average rating for the product\n        $sql = \"SELECT AVG(rating) AS avg_rating FROM reviews WHERE product_id = '$product_id'\";\n        $result = mysqli_query($conn, $sql);\n        \n        if (!$result) {\n            throw new Exception(\"Error calculating average rating: \" . mysqli_error($conn));\n        }\n        \n        $row = mysqli_fetch_assoc($result);\n        $avg_rating = number_format($row['avg_rating'], 1, '.', '');\n        \n        // Update product's average rating\n        $update_sql = \"UPDATE products SET avg_rating = '$avg_rating' WHERE product_id = '$product_id'\";\n        if (!mysqli_query($conn, $update_sql)) {\n            throw new Exception(\"Error updating product rating: \" . mysqli_error($conn));\n        }\n        \n        // Close connection\n        mysqli_close($conn);\n        \n    } catch (Exception $e) {\n        // Handle exceptions and errors\n        echo \"Error updating product rating: \" . $e->getMessage();\n    }\n}\n?>\n```\n\nThis PHP function includes the following features:\n\n1. Database connection using mysqli\n\n2. Input sanitization and validation\n\n3. Error handling with try-catch blocks\n\n4. Functions to:\n   - Add a user review\n   - Update product average rating after adding a new review\n   - Display error messages for debugging\n\nTo use this function:\n\n1. Make sure you have a database connection configured in your `config.php` file\n\n2. Create a reviews table with the following columns:\n   - review_id (PRIMARY KEY, AUTO_INCREMENT)\n   - user_id\n   - product_id\n   - rating (integer between 1 and 5)\n   - comment (text)\n\n3. Create a products table with an avg_rating column to store the average rating for each product\n\n4. When adding a new review, call the `add_user_review()` function and pass in the required parameters\n\n5. After adding a review, call the `update_product_rating()` function to update the product's average rating\n\nNote: Make sure to replace the database connection details (DB_HOST, DB_USER, DB_PASSWORD, DB_NAME) in your config.php file with your actual database credentials.\n\nYou can customize this further by:\n\n- Adding more validation rules\n- Implementing pagination for reviews\n- Adding sorting options for reviews\n- Including user authentication checks\n- Adding timestamps for when the review was created\n- Implementing a review editing/deletion system\n\nRemember to always sanitize and validate user inputs to prevent SQL injection attacks and other security issues.", "code_blocks": ["```php\n<?php\n// Include configuration file\nrequire_once 'config.php';\n\nfunction add_user_review($user_id, $product_id, $rating, $comment) {\n    try {\n        // Connect to database\n        $conn = mysqli_connect(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);\n        \n        if (!$conn) {\n            throw new Exception(\"Could not connect to the database\");\n        }\n        \n        // Sanitize inputs\n        $user_id = mysqli_real_escape_string($conn, $user_id);\n        $product_id = mysqli_real_escape_string($conn, $product_id);\n        $rating = intval($rating);\n        $comment = mysqli_real_escape_string($conn, $comment);\n        \n        // Validate rating (assuming ratings are between 1 and 5)\n        if ($rating < 1 || $rating > 5) {\n            throw new Exception(\"Invalid rating value. Please choose a rating between 1 and 5.\");\n        }\n        \n        // Insert review into database\n        $sql = \"INSERT INTO reviews \n                (user_id, product_id, rating, comment) \n                VALUES ('$user_id', '$product_id', '$rating', '$comment')\";\n                \n        if (!mysqli_query($conn, $sql)) {\n            throw new Exception(\"Error adding review: \" . mysqli_error($conn));\n        }\n        \n        // Get the inserted review ID\n        $review_id = mysqli_insert_id($conn);\n        \n        // Close database connection\n        mysqli_close($conn);\n        \n        return array(\n            'status' => 'success',\n            'message' => 'Review added successfully!',\n            'review_id' => $review_id\n        );\n        \n    } catch (Exception $e) {\n        // Handle exceptions and errors\n        return array(\n            'status' => 'error',\n            'message' => $e->getMessage()\n        );\n    }\n}\n\n// Example usage:\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    $user_id = $_POST['user_id'];\n    $product_id = $_POST['product_id'];\n    $rating = $_POST['rating'];\n    $comment = $_POST['comment'];\n    \n    $result = add_user_review($user_id, $product_id, $rating, $comment);\n    \n    if ($result['status'] == 'success') {\n        echo \"Review added successfully! Review ID: \" . $result['review_id'];\n    } else {\n        echo \"Error adding review: \" . $result['message'];\n    }\n}\n\n// Helper function to update product rating based on new review\nfunction update_product_rating($product_id) {\n    try {\n        $conn = mysqli_connect(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);\n        \n        if (!$conn) {\n            throw new Exception(\"Could not connect to the database\");\n        }\n        \n        // Calculate average rating for the product\n        $sql = \"SELECT AVG(rating) AS avg_rating FROM reviews WHERE product_id = '$product_id'\";\n        $result = mysqli_query($conn, $sql);\n        \n        if (!$result) {\n            throw new Exception(\"Error calculating average rating: \" . mysqli_error($conn));\n        }\n        \n        $row = mysqli_fetch_assoc($result);\n        $avg_rating = number_format($row['avg_rating'], 1, '.', '');\n        \n        // Update product's average rating\n        $update_sql = \"UPDATE products SET avg_rating = '$avg_rating' WHERE product_id = '$product_id'\";\n        if (!mysqli_query($conn, $update_sql)) {\n            throw new Exception(\"Error updating product rating: \" . mysqli_error($conn));\n        }\n        \n        // Close connection\n        mysqli_close($conn);\n        \n    } catch (Exception $e) {\n        // Handle exceptions and errors\n        echo \"Error updating product rating: \" . $e->getMessage();\n    }\n}\n?>\n```"]}
