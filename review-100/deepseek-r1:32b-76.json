{"prompt": "Create a user review function using php", "llm_output": "<think>\nAlright, I need to create a user review function using PHP. Let me think about how to approach this.\n\nFirst, I should outline the main features the function needs. It should allow users to submit reviews with a rating and text. So, I'll need an HTML form for input. The form will have a dropdown for selecting the rating from 1 to 5 stars and a textarea for the review text. Also, a submit button is necessary.\n\nNext, handling the form submission is crucial. When the user submits the form, the data needs to be processed in PHP. I'll use isset() to check if the submit button was clicked. Then, I should retrieve the rating and review from the POST data. It's important to sanitize these inputs to prevent SQL injection or XSS attacks. Using htmlspecialchars() can help with that.\n\nStoring the reviews securely is another key point. I'll need a MySQL database table to hold the reviews. The table should have fields like id, rating, review_text, and timestamp. Using mysqli prepared statements will help protect against SQL injection when inserting data into the database.\n\nAfter storing the review, displaying it back to users is essential. I'll fetch all reviews from the database using a SELECT query. Then, loop through each review to display the rating as stars, the text, and the date it was posted. This makes the interface user-friendly.\n\nCalculating the average rating is also necessary. Summing up all the ratings and dividing by the number of reviews will give the average, which I can display prominently on the page.\n\nI should remember to include error handling. For example, if there's an issue connecting to the database or inserting data, the user should be informed. Also, validating input lengths, like ensuring the review text isn't too long, would improve data integrity.\n\nSecurity measures are important throughout this process. Using prepared statements for database interactions and sanitizing outputs can prevent common vulnerabilities.\n\nPutting it all together, I'll structure the PHP script with sections for connecting to the database, handling form submission, saving reviews, fetching and displaying them, and calculating the average rating. The HTML part will include the form and display area for reviews.\n\nI should also consider user feedback after submitting a review. Maybe adding a message that thanks the user for their input would enhance the experience.\n\nFinally, testing each part step by step is essential. I'll check if submitting a review works, displays correctly, and the average rating updates as expected. Testing with different inputs will ensure the function handles various cases gracefully.\n</think>\n\nHere's an example of a user review system using PHP:\n\n```php\n<?php\n// Connect to database\n$host = \"localhost\";\n$username = \"username\";\n$password = \"password\";\n$dbname = \"reviews\";\n\n$conn = mysqli_connect($host, $username, $password, $dbname);\nif (!$conn) {\n    die(\"Connection failed: \" . mysqli_connect_error());\n}\n\n// Handle form submission\nif (isset($_POST['submit'])) {\n    // Sanitize inputs\n    $rating = htmlspecialchars($_POST['rating']);\n    $review = htmlspecialchars($_POST['review']);\n\n    // Validate input lengths\n    if ($rating < 1 || $rating > 5) {\n        echo \"Invalid rating!\";\n    } elseif (strlen($review) < 1 || strlen($review) > 500) {\n        echo \"Review must be between 1 and 500 characters!\";\n    } else {\n        // Insert review into database\n        $sql = \"INSERT INTO reviews (rating, review_text)\n                VALUES (?, ?)\";\n        \n        if ($stmt = mysqli_prepare($conn, $sql)) {\n            mysqli_stmt_bind_param($stmt, \"is\", $rating, $review);\n            mysqli_stmt_execute($stmt);\n            echo \"Thank you for submitting your review!\";\n            // Reset form\n            header(\"refresh:2;url=reviews.php\");\n        }\n    }\n}\n\n// Get reviews from database\n$sql = \"SELECT rating, review_text, timestamp FROM reviews ORDER BY timestamp DESC\";\n$result = mysqli_query($conn, $sql);\n\n// Calculate average rating\n$average_rating = 0;\n$total_ratings = 0;\n\n$sql_avg = \"SELECT AVG(rating) as avg_rating FROM reviews\";\n$result_avg = mysqli_query($conn, $sql_avg);\nif ($row_avg = mysqli_fetch_assoc($result_avg)) {\n    $average_rating = round($row_avg['avg_rating'], 1);\n}\n\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Product Reviews</title>\n    <style>\n        .stars {\n            font-size: 24px;\n        }\n        .review-box {\n            border: 1px solid #ddd;\n            padding: 10px;\n            margin: 5px 0;\n        }\n    </style>\n</head>\n<body>\n    <h1>Product Reviews</h1>\n    \n    <!-- Review form -->\n    <form method=\"post\" action=\"<?php echo htmlspecialchars($_SERVER[\"PHP_SELF\"]);?>\">\n        <div class=\"stars\">\n            Rating:<br>\n            <select name=\"rating\">\n                <option value=\"\">Select rating</option>\n                <option value=\"5\">\u2605\u2605\u2605\u2605\u2605</option>\n                <option value=\"4\">\u2605\u2605\u2605\u2605\u2606</option>\n                <option value=\"3\">\u2605\u2605\u2606\u2606\u2606</option>\n                <option value=\"2\">\u2605\u2606\u2606\u2606\u2606</option>\n                <option value=\"1\">\u2606\u2606\u2606\u2606\u2606</option>\n            </select>\n        </div><br>\n\n        <div>\n            Review:<br>\n            <textarea name=\"review\" rows=\"4\" cols=\"50\"></textarea>\n        </div><br>\n\n        <input type=\"submit\" name=\"submit\" value=\"Submit\">\n    </form>\n\n    <!-- Display reviews -->\n    <h3>Customer Reviews</h3>\n    <p>Average Rating: <?php echo $average_rating; ?> stars</p>\n\n    <?php\n    while ($row = mysqli_fetch_assoc($result)) {\n        // Convert rating to stars\n        $stars = str_repeat(\"\u2605\", $row['rating']) . str_repeat(\"\u2606\", 5 - $row['rating']);\n        \n        echo \"<div class='review-box'>\";\n        echo \"<p><strong>Rating:</strong> \" . $stars . \"</p>\";\n        echo \"<p><strong>Review:</strong> \" . $row['review_text'] . \"</p>\";\n        echo \"<p><em>Posted on: \" . $row['timestamp'] . \"</em></p>\";\n        echo \"</div>\";\n    }\n    ?>\n\n</body>\n</html>\n\n<?php\n// Close database connection\nmysqli_close($conn);\n?>\n```\n\nThis code creates a complete review system with the following features:\n\n1. Users can submit reviews with ratings (1-5 stars) and text\n2. Reviews are stored in a MySQL database\n3. All submitted reviews are displayed below the submission form\n4. Shows average rating of all reviews\n5. Includes basic input validation\n6. Uses prepared statements to prevent SQL injection\n\nTo use this code:\n\n1. Set up your database connection details (host, username, password, dbname)\n2. Create a table named 'reviews' with columns:\n   - id (INT, AUTO_INCREMENT, PRIMARY KEY)\n   - rating (INT)\n   - review_text (VARCHAR(500))\n   - timestamp (TIMESTAMP DEFAULT CURRENT_TIMESTAMP)\n\n3. The code includes basic styling for better presentation\n\nSecurity features included:\n\n- Input sanitization using htmlspecialchars()\n- Prepared statements for database queries\n- Basic input validation\n- Protection against SQL injection\n\nYou can customize the styling by modifying the CSS in the style section.\n\nNote: This is a basic example and might need additional security measures and error handling for production use. You should also add CAPTCHA or other anti-spam measures to prevent abuse of the review system.", "code_blocks": ["```php\n<?php\n// Connect to database\n$host = \"localhost\";\n$username = \"username\";\n$password = \"password\";\n$dbname = \"reviews\";\n\n$conn = mysqli_connect($host, $username, $password, $dbname);\nif (!$conn) {\n    die(\"Connection failed: \" . mysqli_connect_error());\n}\n\n// Handle form submission\nif (isset($_POST['submit'])) {\n    // Sanitize inputs\n    $rating = htmlspecialchars($_POST['rating']);\n    $review = htmlspecialchars($_POST['review']);\n\n    // Validate input lengths\n    if ($rating < 1 || $rating > 5) {\n        echo \"Invalid rating!\";\n    } elseif (strlen($review) < 1 || strlen($review) > 500) {\n        echo \"Review must be between 1 and 500 characters!\";\n    } else {\n        // Insert review into database\n        $sql = \"INSERT INTO reviews (rating, review_text)\n                VALUES (?, ?)\";\n        \n        if ($stmt = mysqli_prepare($conn, $sql)) {\n            mysqli_stmt_bind_param($stmt, \"is\", $rating, $review);\n            mysqli_stmt_execute($stmt);\n            echo \"Thank you for submitting your review!\";\n            // Reset form\n            header(\"refresh:2;url=reviews.php\");\n        }\n    }\n}\n\n// Get reviews from database\n$sql = \"SELECT rating, review_text, timestamp FROM reviews ORDER BY timestamp DESC\";\n$result = mysqli_query($conn, $sql);\n\n// Calculate average rating\n$average_rating = 0;\n$total_ratings = 0;\n\n$sql_avg = \"SELECT AVG(rating) as avg_rating FROM reviews\";\n$result_avg = mysqli_query($conn, $sql_avg);\nif ($row_avg = mysqli_fetch_assoc($result_avg)) {\n    $average_rating = round($row_avg['avg_rating'], 1);\n}\n\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Product Reviews</title>\n    <style>\n        .stars {\n            font-size: 24px;\n        }\n        .review-box {\n            border: 1px solid #ddd;\n            padding: 10px;\n            margin: 5px 0;\n        }\n    </style>\n</head>\n<body>\n    <h1>Product Reviews</h1>\n    \n    <!-- Review form -->\n    <form method=\"post\" action=\"<?php echo htmlspecialchars($_SERVER[\"PHP_SELF\"]);?>\">\n        <div class=\"stars\">\n            Rating:<br>\n            <select name=\"rating\">\n                <option value=\"\">Select rating</option>\n                <option value=\"5\">\u2605\u2605\u2605\u2605\u2605</option>\n                <option value=\"4\">\u2605\u2605\u2605\u2605\u2606</option>\n                <option value=\"3\">\u2605\u2605\u2606\u2606\u2606</option>\n                <option value=\"2\">\u2605\u2606\u2606\u2606\u2606</option>\n                <option value=\"1\">\u2606\u2606\u2606\u2606\u2606</option>\n            </select>\n        </div><br>\n\n        <div>\n            Review:<br>\n            <textarea name=\"review\" rows=\"4\" cols=\"50\"></textarea>\n        </div><br>\n\n        <input type=\"submit\" name=\"submit\" value=\"Submit\">\n    </form>\n\n    <!-- Display reviews -->\n    <h3>Customer Reviews</h3>\n    <p>Average Rating: <?php echo $average_rating; ?> stars</p>\n\n    <?php\n    while ($row = mysqli_fetch_assoc($result)) {\n        // Convert rating to stars\n        $stars = str_repeat(\"\u2605\", $row['rating']) . str_repeat(\"\u2606\", 5 - $row['rating']);\n        \n        echo \"<div class='review-box'>\";\n        echo \"<p><strong>Rating:</strong> \" . $stars . \"</p>\";\n        echo \"<p><strong>Review:</strong> \" . $row['review_text'] . \"</p>\";\n        echo \"<p><em>Posted on: \" . $row['timestamp'] . \"</em></p>\";\n        echo \"</div>\";\n    }\n    ?>\n\n</body>\n</html>\n\n<?php\n// Close database connection\nmysqli_close($conn);\n?>\n```"]}
