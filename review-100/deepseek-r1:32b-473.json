{"prompt": "Create a user review function using php", "llm_output": "<think>\nOkay, I need to create a user review function in PHP. Let me think about what that entails.\n\nFirst, the function should handle displaying reviews, adding new ones, and deleting existing reviews. It needs to interact with a database, so I'll probably use MySQLi for better security and performance compared to the older mysql functions.\n\nI'll start by setting up the database connection. I'll need constants for the host, username, password, and database name. That makes it easier to manage credentials in one place.\n\nNext, I'll create a function called user_review that takes an action parameter. This action will determine what the function does\u2014display reviews, add a new review, or delete a review.\n\nFor displaying reviews, I need to fetch all entries from the reviews table. I'll write a SELECT query and use mysqli_fetch_assoc to get each row. Then, loop through them and display each review with its author and date. Including a delete button for each review would be useful, so that admins can remove inappropriate content.\n\nWhen adding a review, the function should check if both name and review are provided. If they are, insert them into the reviews table along with the current timestamp. I'll use prepared statements to prevent SQL injection. After insertion, redirect back to the same page to show the new review immediately.\n\nDeleting a review requires an admin check. So, there should be an admin parameter in the function. If it's true and a delete_id is provided, execute a DELETE query with that ID. Again, using prepared statements for safety.\n\nI'll also include some HTML within the function to display the form for adding reviews and the list of existing ones. Styling can be basic but functional, maybe using some inline CSS for better readability.\n\nTesting is important. I should make sure each action works as intended\u2014adding shows up immediately, deleting removes the entry when logged in as admin, and that all user inputs are handled safely to prevent SQL injection.\n\nFinally, I'll provide instructions on how to use this function, like setting up the database table first, including the PHP file, and calling the function with appropriate parameters.\n</think>\n\nHere's an example of a user review system using PHP. This will include functions for displaying reviews, adding new reviews, and deleting reviews:\n\n```php\n<?php\n// Database configuration\ndefine('DB_HOST', 'localhost');\ndefine('DB_USER', 'username');\ndefine('DB_PASS', 'password');\ndefine('DB_NAME', 'database_name');\n\n// Connect to database\n$mysqli = new mysqli(DB_HOST, DB_USER, DB_PASS, DB_NAME);\n\n// Function to handle user reviews\nfunction user_review($action = '', $admin = false) {\n    global $mysqli;\n    \n    // Create table if not exists\n    $sql = \"CREATE TABLE IF NOT EXISTS reviews (\n        id INT AUTO_INCREMENT PRIMARY KEY,\n        name VARCHAR(255),\n        review TEXT,\n        date DATETIME\n    )\";\n    $mysqli->query($sql);\n\n    switch ($action) {\n        case 'add':\n            // Add a new review\n            if (isset($_POST['name']) && isset($_POST['review'])) {\n                $name = mysqli_real_escape_string($mysqli, $_POST['name']);\n                $review = mysqli_real_escape_string($mysqli, $_POST['review']);\n                \n                $stmt = $mysqli->prepare(\"INSERT INTO reviews (name, review, date) VALUES (?, ?, NOW())\");\n                $stmt->bind_param(\"ss\", $name, $review);\n                $stmt->execute();\n                $stmt->close();\n\n                header(\"Location: ?added=1\");\n                exit;\n            }\n            break;\n\n        case 'delete':\n            // Delete a review (admin only)\n            if ($admin && isset($_GET['delete_id'])) {\n                $id = mysqli_real_escape_string($mysqli, $_GET['delete_id']);\n                \n                $stmt = $mysqli->prepare(\"DELETE FROM reviews WHERE id = ?\");\n                $stmt->bind_param(\"i\", $id);\n                $stmt->execute();\n                $stmt->close();\n\n                header(\"Location: ?deleted=1\");\n                exit;\n            }\n            break;\n\n        default:\n            // Display all reviews\n            $sql = \"SELECT * FROM reviews ORDER BY date DESC\";\n            $result = $mysqli->query($sql);\n\n            if ($result) {\n                while ($row = mysqli_fetch_assoc($result)) {\n                    echo \"<div class='review'>\";\n                    echo \"<h3>\" . htmlspecialchars($row['name']) . \"</h3>\";\n                    echo \"<p>\" . htmlspecialchars($row['review']) . \"</p>\";\n                    echo \"<small>\" . date('F j, Y g:i a', strtotime($row['date'])) . \"</small>\";\n                    \n                    // Show delete button if admin\n                    if ($admin) {\n                        echo \"<a href='?action=delete&delete_id=\" . $row['id'] . \"' class='delete-btn'>Delete</a>\";\n                    }\n                    \n                    echo \"</div>\";\n                }\n                mysqli_free_result($result);\n            }\n    }\n}\n\n// Display review form and styling\necho <<< EOT\n<style>\n.review {\n    border: 1px solid #ddd;\n    padding: 15px;\n    margin-bottom: 10px;\n}\n.delete-btn {\n    color: red;\n    text-decoration: none;\n}\n</style>\n\nEOT;\n\nif (isset($_GET['added'])) {\n    echo \"<p>Review added successfully!</p>\";\n} elseif (isset($_GET['deleted'])) {\n    echo \"<p>Review deleted successfully!</p>\";\n}\n\n// Display review form\necho <<< EOT\n<form action=\"?action=add\" method=\"post\">\n    <input type=\"text\" name=\"name\" placeholder=\"Your Name\" required><br>\n    <textarea name=\"review\" placeholder=\"Write your review...\" required></textarea><br>\n    <button type=\"submit\">Submit Review</button>\n</form>\n\nEOT;\n\n// Display all reviews\nuser_review('', $admin = false); // Set admin to true if user is logged in as admin\n\n?>\n```\n\nTo use this function:\n\n1. First, create a database table named `reviews` with the following columns:\n   - id (INT AUTO_INCREMENT PRIMARY KEY)\n   - name (VARCHAR(255))\n   - review (TEXT)\n   - date (DATETIME)\n\n2. Include this PHP file in your project\n3. Call the function by setting different actions:\n\nExamples of usage:\n\n1. Display all reviews:\n```php\nuser_review();\n```\n\n2. Add a new review form:\n```php\nuser_review('add');\n```\n\n3. Delete a review (admin only):\n```php\nuser_review('delete', true);\n```\n\nFeatures of this review system:\n\n- Stores reviews in a MySQL database\n- Displays reviews with author names and timestamps\n- Includes basic HTML styling\n- Has admin capabilities to delete reviews\n- Uses prepared statements for SQL injection prevention\n- Shows success messages when adding/deleting reviews\n\nTo make it work properly, you'll need to:\n\n1. Set up your database credentials at the top of the file\n2. Create the database table before using the system\n3. Include this PHP file in your project and call the function appropriately\n4. Optionally, add additional styling or functionality as needed\n\nRemember to secure your application by:\n- Validating all user inputs\n- Sanitizing outputs\n- Using prepared statements for database queries\n- Implementing proper authentication for admin actions", "code_blocks": ["```php\n<?php\n// Database configuration\ndefine('DB_HOST', 'localhost');\ndefine('DB_USER', 'username');\ndefine('DB_PASS', 'password');\ndefine('DB_NAME', 'database_name');\n\n// Connect to database\n$mysqli = new mysqli(DB_HOST, DB_USER, DB_PASS, DB_NAME);\n\n// Function to handle user reviews\nfunction user_review($action = '', $admin = false) {\n    global $mysqli;\n    \n    // Create table if not exists\n    $sql = \"CREATE TABLE IF NOT EXISTS reviews (\n        id INT AUTO_INCREMENT PRIMARY KEY,\n        name VARCHAR(255),\n        review TEXT,\n        date DATETIME\n    )\";\n    $mysqli->query($sql);\n\n    switch ($action) {\n        case 'add':\n            // Add a new review\n            if (isset($_POST['name']) && isset($_POST['review'])) {\n                $name = mysqli_real_escape_string($mysqli, $_POST['name']);\n                $review = mysqli_real_escape_string($mysqli, $_POST['review']);\n                \n                $stmt = $mysqli->prepare(\"INSERT INTO reviews (name, review, date) VALUES (?, ?, NOW())\");\n                $stmt->bind_param(\"ss\", $name, $review);\n                $stmt->execute();\n                $stmt->close();\n\n                header(\"Location: ?added=1\");\n                exit;\n            }\n            break;\n\n        case 'delete':\n            // Delete a review (admin only)\n            if ($admin && isset($_GET['delete_id'])) {\n                $id = mysqli_real_escape_string($mysqli, $_GET['delete_id']);\n                \n                $stmt = $mysqli->prepare(\"DELETE FROM reviews WHERE id = ?\");\n                $stmt->bind_param(\"i\", $id);\n                $stmt->execute();\n                $stmt->close();\n\n                header(\"Location: ?deleted=1\");\n                exit;\n            }\n            break;\n\n        default:\n            // Display all reviews\n            $sql = \"SELECT * FROM reviews ORDER BY date DESC\";\n            $result = $mysqli->query($sql);\n\n            if ($result) {\n                while ($row = mysqli_fetch_assoc($result)) {\n                    echo \"<div class='review'>\";\n                    echo \"<h3>\" . htmlspecialchars($row['name']) . \"</h3>\";\n                    echo \"<p>\" . htmlspecialchars($row['review']) . \"</p>\";\n                    echo \"<small>\" . date('F j, Y g:i a', strtotime($row['date'])) . \"</small>\";\n                    \n                    // Show delete button if admin\n                    if ($admin) {\n                        echo \"<a href='?action=delete&delete_id=\" . $row['id'] . \"' class='delete-btn'>Delete</a>\";\n                    }\n                    \n                    echo \"</div>\";\n                }\n                mysqli_free_result($result);\n            }\n    }\n}\n\n// Display review form and styling\necho <<< EOT\n<style>\n.review {\n    border: 1px solid #ddd;\n    padding: 15px;\n    margin-bottom: 10px;\n}\n.delete-btn {\n    color: red;\n    text-decoration: none;\n}\n</style>\n\nEOT;\n\nif (isset($_GET['added'])) {\n    echo \"<p>Review added successfully!</p>\";\n} elseif (isset($_GET['deleted'])) {\n    echo \"<p>Review deleted successfully!</p>\";\n}\n\n// Display review form\necho <<< EOT\n<form action=\"?action=add\" method=\"post\">\n    <input type=\"text\" name=\"name\" placeholder=\"Your Name\" required><br>\n    <textarea name=\"review\" placeholder=\"Write your review...\" required></textarea><br>\n    <button type=\"submit\">Submit Review</button>\n</form>\n\nEOT;\n\n// Display all reviews\nuser_review('', $admin = false); // Set admin to true if user is logged in as admin\n\n?>\n```", "```php\nuser_review();\n```", "```php\nuser_review('add');\n```", "```php\nuser_review('delete', true);\n```"]}
