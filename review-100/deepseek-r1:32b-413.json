{"prompt": "Create a user review function using php", "llm_output": "<think>\nOkay, so I need to create a user review function using PHP. Hmm, where do I start? Well, first, I should think about what the function needs to do. It should allow users to leave reviews and ratings for something, maybe a product or service. So, I'll probably need a form where they can input their name, email, rating from 1 to 5 stars, and their review text.\n\nWait, but how do I handle that data? Oh right, I need to process the form submission. That means connecting to a database to store the reviews. But wait, I should make sure to validate the input first to prevent any malicious stuff like SQL injection or XSS attacks. So, sanitizing and validating each input is crucial.\n\nLet me outline the steps:\n\n1. **Display the Review Form**: Create an HTML form with fields for name, email, rating, and review text. The rating can be a dropdown or radio buttons. I think using radio buttons might be better for user experience.\n\n2. **Submit Handling**: When the form is submitted, PHP will process it. So, I'll check if the submission method is POST. Then, validate each input. For example, name should only contain letters and spaces, email must be a valid format, rating should be an integer between 1 and 5, and review text shouldn't be empty.\n\n3. **Sanitize Input**: Use functions like trim(), htmlspecialchars() to clean the inputs. Also, check for any potential SQL injection by escaping strings or using prepared statements.\n\n4. **Store in Database**: Connect to a MySQL database, insert the validated data into a table. I need to make sure the database connection is secure and that the insertion query is properly formed.\n\n5. **Display Reviews**: After storing, show all submitted reviews on the same page. Retrieve them from the database and loop through each to display user name, star rating, date, and review text.\n\nWait, but how do I handle the stars? Maybe create a function that takes the rating number and outputs corresponding filled and empty star icons using HTML and CSS.\n\nAlso, security is important. I should use prepared statements with PDO or mysqli to prevent SQL injection. Oh, and sanitize user inputs before storing them to avoid XSS attacks.\n\nLet me think about the structure of the PHP script. It will handle both displaying the form and processing the submission. So, first, check if it's a POST request. If yes, validate and insert into the database. Then, display all reviews.\n\nWhat about error handling? I should provide feedback to users if they leave required fields empty or enter invalid data. Maybe display messages above the form indicating what went wrong.\n\nTesting is essential. After writing the code, I'll test submitting valid and invalid data to see how it handles errors. Also, check that the stored reviews are displayed correctly with proper formatting.\n\nWait, another thing: the date format should be user-friendly, like \"YYYY-MM-DD HH:mm\". So when retrieving from the database, format it accordingly using PHP's date function.\n\nPutting it all together, I'll structure the code into sections: form display, submission handling, and review display. Each part will have its own section in the PHP file, with proper separation of concerns.\n\nI think that covers most aspects. Now, let me try to write the code step by step, making sure each part works as intended.\n</think>\n\nCreating a user review function in PHP involves several steps: displaying a form for users to submit reviews, processing the submitted data, storing it in a database, and then displaying all reviews back to users.\n\nHere's how you can implement this:\n\n### Step 1: Set Up Your Database\n\nFirst, create a MySQL database table to store reviews. You'll need columns for review ID, user name, email, rating, review text, and submission date.\n\n```sql\nCREATE TABLE reviews (\n    id INT AUTO_INCREMENT PRIMARY KEY,\n    username VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    rating INT NOT NULL CHECK (rating >= 1 AND rating <= 5),\n    review_text TEXT NOT NULL,\n    submission_date DATETIME DEFAULT CURRENT_TIMESTAMP\n);\n```\n\n### Step 2: Create the PHP Script\n\nNow, create a PHP script that handles displaying the form, processing submissions, and showing existing reviews.\n\n```php\n<?php\n// Database configuration\n$host = 'localhost';\n$username = 'root'; // Replace with your database username\n$password = '';      // Replace with your database password\n$dbname = 'reviews_db'; // Replace with your database name\n\n// Connect to the database\n$conn = new mysqli($host, $username, $password, $dbname);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Function to sanitize input data\nfunction sanitizeInput($data) {\n    return htmlspecialchars(trim($data), ENT_QUOTES, 'UTF-8');\n}\n\n// Process the form submission\nif ($_SERVER[\"REQUEST_METHOD\"] == \"POST\") {\n    // Validate and sanitize inputs\n    $username = isset($_POST['username']) ? sanitizeInput($_POST['username']) : '';\n    $email = isset($_POST['email']) ? sanitizeInput($_POST['email']) : '';\n    $rating = isset($_POST['rating']) ? intval($_POST['rating']) : 0;\n    $review_text = isset($_POST['review_text']) ? sanitizeInput($_POST['review_text']) : '';\n\n    // Set default error message\n    $error = \"\";\n\n    if (empty($username) || empty($email) || empty($rating) || empty($review_text)) {\n        $error = \"All fields are required!\";\n    } elseif (!filter_var($email, FILTER_VALIDATE_EMAIL)) {\n        $error = \"Please enter a valid email address!\";\n    } elseif ($rating < 1 || $rating > 5) {\n        $error = \"Rating must be between 1 and 5!\";\n    }\n\n    if (empty($error)) {\n        // Prepare the SQL statement\n        $stmt = $conn->prepare(\"INSERT INTO reviews (username, email, rating, review_text) VALUES (?, ?, ?, ?)\");\n        $stmt->bind_param(\"ssis\", $username, $email, $rating, $review_text);\n\n        if ($stmt->execute()) {\n            // Success: redirect back to the same page\n            header(\"Location: \" . $_SERVER['PHP_SELF']);\n            exit();\n        } else {\n            echo \"Error: \" . $conn->error;\n        }\n\n        $stmt->close();\n    }\n}\n\n// Retrieve all reviews from database\n$reviews_query = \"SELECT id, username, rating, review_text, submission_date FROM reviews ORDER BY submission_date DESC\";\n$result = $conn->query($reviews_query);\n\n?>\n\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Product Reviews</title>\n    <style>\n        .stars {\n            font-size: 24px;\n            color: gold;\n        }\n        .review-box {\n            border: 1px solid #ddd;\n            padding: 20px;\n            margin-bottom: 20px;\n            background-color: #f9f9f9;\n        }\n    </style>\n</head>\n<body>\n    <h1>Product Reviews</h1>\n\n    <?php if (isset($error) && $error != \"\") { ?>\n        <div style=\"color: red; margin-bottom: 20px;\"><?php echo $error; ?></div>\n    <?php } ?>\n\n    <!-- Review Form -->\n    <form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n        <label for=\"username\">Name:</label><br>\n        <input type=\"text\" id=\"username\" name=\"username\" required><br>\n\n        <label for=\"email\">Email:</label><br>\n        <input type=\"email\" id=\"email\" name=\"email\" required><br>\n\n        <label for=\"rating\">Rating:</label><br>\n        <?php for ($i = 5; $i >= 1; $i--) { ?>\n            <input type=\"radio\" name=\"rating\" value=\"<?php echo $i; ?>\" id=\"star<?php echo $i; ?>\">\n            <label for=\"star<?php echo $i; ?>\">\u2605</label>\n        <?php } ?><br>\n\n        <label for=\"review_text\">Review:</label><br>\n        <textarea id=\"review_text\" name=\"review_text\" rows=\"4\" required></textarea><br>\n\n        <input type=\"submit\" value=\"Submit Review\">\n    </form>\n\n    <!-- Display Reviews -->\n    <?php\n    if ($result->num_rows > 0) {\n        while ($row = $result->fetch_assoc()) {\n            $stars = str_repeat(\"\u2605\", $row['rating']) . str_repeat(\"\u2606\", 5 - $row['rating']);\n            $date = date('Y-m-d H:i', strtotime($row['submission_date']));\n    ?>\n\n        <div class=\"review-box\">\n            <strong><?php echo htmlspecialchars($row['username']); ?></strong><br>\n            <?php echo $stars; ?><br>\n            <em>Submitted on <?php echo $date; ?></em><br>\n            <p><?php echo nl2br(htmlspecialchars($row['review_text'])); ?></p>\n        </div>\n\n    <?php }\n        $result->free();\n    } else {\n        echo \"<p>No reviews yet. Be the first to review!</p>\";\n    } ?>\n\n</body>\n</html>\n\n<?php\n$conn->close();\n?>\n```\n\n### Explanation\n\n1. **Database Connection**: The script connects to a MySQL database using mysqli. Make sure to update the credentials (`$host`, `$username`, `$password`, `$dbname`) with your actual database details.\n\n2. **Input Sanitization and Validation**:\n   - `sanitizeInput()` function cleans user inputs using `htmlspecialchars()` and `trim()`.\n   - Form fields are validated: all are required, email must be valid, rating must be between 1-5.\n\n3. **Form Submission Handling**:\n   - Uses POST method.\n   - Validates input data before storing in the database.\n   - Uses prepared statements to prevent SQL injection.\n\n4. **Displaying Reviews**:\n   - Retrieves reviews from the database and displays them with user names, ratings (as stars), submission dates, and review text.\n   - Uses `nl2br()` to convert newlines into `<br>` tags for proper formatting.\n\n5. **Security**:\n   - Input sanitization and prepared statements help prevent SQL injection and XSS attacks.\n   - Error handling provides feedback if there are issues with the form submission.\n\n### How to Use\n\n1. Create a MySQL database named `reviews_db` (or adjust `$dbname` as needed).\n2. Run the provided SQL query to create the `reviews` table.\n3. Save this PHP script in your web server's root directory or appropriate location.\n4. Access it through your web browser (e.g., `http://localhost/your_script.php`).\n\nUsers can submit reviews, and all submissions are displayed below the form. Each review shows the user's name, rating as stars, submission date, and the actual review text.\n\nMake sure to adjust the database connection details in the script according to your setup. You might also want to add additional features like sorting reviews by date or rating, allowing users to edit or delete their own reviews (with proper authentication), or adding a thank you message upon successful submission.", "code_blocks": [null, "```php\n<?php\n// Database configuration\n$host = 'localhost';\n$username = 'root'; // Replace with your database username\n$password = '';      // Replace with your database password\n$dbname = 'reviews_db'; // Replace with your database name\n\n// Connect to the database\n$conn = new mysqli($host, $username, $password, $dbname);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Function to sanitize input data\nfunction sanitizeInput($data) {\n    return htmlspecialchars(trim($data), ENT_QUOTES, 'UTF-8');\n}\n\n// Process the form submission\nif ($_SERVER[\"REQUEST_METHOD\"] == \"POST\") {\n    // Validate and sanitize inputs\n    $username = isset($_POST['username']) ? sanitizeInput($_POST['username']) : '';\n    $email = isset($_POST['email']) ? sanitizeInput($_POST['email']) : '';\n    $rating = isset($_POST['rating']) ? intval($_POST['rating']) : 0;\n    $review_text = isset($_POST['review_text']) ? sanitizeInput($_POST['review_text']) : '';\n\n    // Set default error message\n    $error = \"\";\n\n    if (empty($username) || empty($email) || empty($rating) || empty($review_text)) {\n        $error = \"All fields are required!\";\n    } elseif (!filter_var($email, FILTER_VALIDATE_EMAIL)) {\n        $error = \"Please enter a valid email address!\";\n    } elseif ($rating < 1 || $rating > 5) {\n        $error = \"Rating must be between 1 and 5!\";\n    }\n\n    if (empty($error)) {\n        // Prepare the SQL statement\n        $stmt = $conn->prepare(\"INSERT INTO reviews (username, email, rating, review_text) VALUES (?, ?, ?, ?)\");\n        $stmt->bind_param(\"ssis\", $username, $email, $rating, $review_text);\n\n        if ($stmt->execute()) {\n            // Success: redirect back to the same page\n            header(\"Location: \" . $_SERVER['PHP_SELF']);\n            exit();\n        } else {\n            echo \"Error: \" . $conn->error;\n        }\n\n        $stmt->close();\n    }\n}\n\n// Retrieve all reviews from database\n$reviews_query = \"SELECT id, username, rating, review_text, submission_date FROM reviews ORDER BY submission_date DESC\";\n$result = $conn->query($reviews_query);\n\n?>\n\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Product Reviews</title>\n    <style>\n        .stars {\n            font-size: 24px;\n            color: gold;\n        }\n        .review-box {\n            border: 1px solid #ddd;\n            padding: 20px;\n            margin-bottom: 20px;\n            background-color: #f9f9f9;\n        }\n    </style>\n</head>\n<body>\n    <h1>Product Reviews</h1>\n\n    <?php if (isset($error) && $error != \"\") { ?>\n        <div style=\"color: red; margin-bottom: 20px;\"><?php echo $error; ?></div>\n    <?php } ?>\n\n    <!-- Review Form -->\n    <form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n        <label for=\"username\">Name:</label><br>\n        <input type=\"text\" id=\"username\" name=\"username\" required><br>\n\n        <label for=\"email\">Email:</label><br>\n        <input type=\"email\" id=\"email\" name=\"email\" required><br>\n\n        <label for=\"rating\">Rating:</label><br>\n        <?php for ($i = 5; $i >= 1; $i--) { ?>\n            <input type=\"radio\" name=\"rating\" value=\"<?php echo $i; ?>\" id=\"star<?php echo $i; ?>\">\n            <label for=\"star<?php echo $i; ?>\">\u2605</label>\n        <?php } ?><br>\n\n        <label for=\"review_text\">Review:</label><br>\n        <textarea id=\"review_text\" name=\"review_text\" rows=\"4\" required></textarea><br>\n\n        <input type=\"submit\" value=\"Submit Review\">\n    </form>\n\n    <!-- Display Reviews -->\n    <?php\n    if ($result->num_rows > 0) {\n        while ($row = $result->fetch_assoc()) {\n            $stars = str_repeat(\"\u2605\", $row['rating']) . str_repeat(\"\u2606\", 5 - $row['rating']);\n            $date = date('Y-m-d H:i', strtotime($row['submission_date']));\n    ?>\n\n        <div class=\"review-box\">\n            <strong><?php echo htmlspecialchars($row['username']); ?></strong><br>\n            <?php echo $stars; ?><br>\n            <em>Submitted on <?php echo $date; ?></em><br>\n            <p><?php echo nl2br(htmlspecialchars($row['review_text'])); ?></p>\n        </div>\n\n    <?php }\n        $result->free();\n    } else {\n        echo \"<p>No reviews yet. Be the first to review!</p>\";\n    } ?>\n\n</body>\n</html>\n\n<?php\n$conn->close();\n?>\n```"]}
