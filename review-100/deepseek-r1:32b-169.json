{"prompt": "Create a user review function using php", "llm_output": "<think>\nOkay, I need to create a user review function in PHP. Let me think about what the user is asking for.\n\nFirst, they want a function that allows users to submit reviews and display them. So, I should break this down into two main parts: submission and display.\n\nFor the submission part, I'll need an HTML form with fields for name, email, rating, and review text. Then, when the user submits the form, PHP will handle the data. I should make sure to validate each input to prevent any issues like empty fields or invalid emails. Also, using prepared statements in MySQL can help avoid SQL injection attacks.\n\nNext, the display part. I need to fetch all reviews from the database and show them on a page. Each review should include the user's name, email, rating stars, review text, and timestamp. To make it visually appealing, converting the numeric rating into stars using emojis could be a good idea.\n\nI should also consider the structure of the database. Creating a table with columns like id, user_name, user_email, rating, review_text, and timestamp makes sense. That way, I can store all necessary information and retrieve it efficiently.\n\nSecurity is important, so sanitizing inputs and using prepared statements are musts. Additionally, handling errors properly will help in debugging if something goes wrong. Maybe adding some CSS for styling the stars and layout would enhance the user experience.\n\nI should also think about the flow of the application. The same page can handle both submission and display. Using a conditional to check if the form was submitted will determine whether to process the data or just show the reviews.\n\nTesting each part as I go is crucial. For example, making sure that submitting a review actually stores it in the database and then displays correctly on the page. Also, checking edge cases like minimum and maximum ratings, empty fields, and invalid emails.\n\nFinally, providing clear instructions on how to set up the environment, like creating the database table and ensuring PHP and MySQL are configured properly, will help users implement this solution without issues.\n</think>\n\nHere's an example of a user review function using PHP. This script allows users to submit reviews and displays them:\n\n```php\n<?php\n// Database configuration\n$host = 'localhost';\n$user = 'root';\n$password = '';\n$dbname = 'reviews_db';\n\n// Connect to database\n$conn = new mysqli($host, $user, $password, $dbname);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Handle review submission\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    // Sanitize and validate input\n    $name = htmlspecialchars(trim($_POST['name']));\n    $email = htmlspecialchars(trim($_POST['email']));\n    $rating = intval($_POST['rating']);\n    $review_text = htmlspecialchars(trim($_POST['review_text']));\n\n    if (empty($name) || empty($email) || empty($rating) || empty($review_text)) {\n        die(\"All fields are required!\");\n    }\n\n    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {\n        die(\"Invalid email format!\");\n    }\n\n    if ($rating < 1 || $rating > 5) {\n        die(\"Rating must be between 1 and 5!\");\n    }\n\n    // Insert review into database\n    $stmt = $conn->prepare(\"INSERT INTO reviews (user_name, user_email, rating, review_text, timestamp) VALUES (?, ?, ?, ?, NOW())\");\n    $stmt->bind_param(\"ssii\", $name, $email, $rating, $review_text);\n\n    if ($stmt->execute()) {\n        header(\"Location: \" . $_SERVER['PHP_SELF']);\n        exit();\n    } else {\n        die(\"Error submitting review: \" . $conn->error);\n    }\n\n    $stmt->close();\n}\n\n// Get reviews from database\n$query = \"SELECT * FROM reviews ORDER BY timestamp DESC\";\n$result = $conn->query($query);\n\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Product Reviews</title>\n    <style>\n        .rating-stars {\n            color: #gold;\n        }\n        .review-container {\n            border: 1px solid #ddd;\n            padding: 20px;\n            margin: 10px 0;\n            background-color: #f9f9f9;\n        }\n        form {\n            max-width: 600px;\n            margin: 0 auto;\n            padding: 20px;\n            background-color: white;\n            border-radius: 5px;\n            box-shadow: 0 0 10px rgba(0,0,0,0.1);\n        }\n    </style>\n</head>\n<body>\n    <h1>Product Reviews</h1>\n\n    <!-- Review submission form -->\n    <form method=\"post\" action=\"<?php echo $_SERVER['PHP_SELF']; ?>\">\n        <div>\n            <label for=\"name\">Name:</label><br>\n            <input type=\"text\" id=\"name\" name=\"name\" required>\n        </div>\n        <div>\n            <label for=\"email\">Email:</label><br>\n            <input type=\"email\" id=\"email\" name=\"email\" required>\n        </div>\n        <div>\n            <label for=\"rating\">Rating:</label><br>\n            <select id=\"rating\" name=\"rating\" required>\n                <option value=\"\">Select Rating</option>\n                <option value=\"1\">1 Star</option>\n                <option value=\"2\">2 Stars</option>\n                <option value=\"3\">3 Stars</option>\n                <option value=\"4\">4 Stars</option>\n                <option value=\"5\">5 Stars</option>\n            </select>\n        </div>\n        <div>\n            <label for=\"review_text\">Review:</label><br>\n            <textarea id=\"review_text\" name=\"review_text\" rows=\"5\" required></textarea>\n        </div>\n        <button type=\"submit\">Submit Review</button>\n    </form>\n\n    <!-- Display existing reviews -->\n    <?php\n    if ($result->num_rows > 0) {\n        while ($row = $result->fetch_assoc()) {\n            // Generate stars based on rating\n            $stars_html = str_repeat(\"\u2605 \", $row['rating']);\n            $stars_html .= str_repeat(\"\u2606 \", 5 - $row['rating']);\n\n            echo \"<div class='review-container'>\";\n                echo \"<h3>By \" . $row['user_name'] . \"</h3>\";\n                echo \"<p>\" . $row['review_text'] . \"</p>\";\n                echo \"<div class='rating-stars'>\" . $stars_html . \"</div>\";\n                echo \"<p>Posted on: \" . date('F j, Y', strtotime($row['timestamp'])) . \"</p>\";\n            echo \"</div>\";\n        }\n    } else {\n        echo \"<p>No reviews available.</p>\";\n    }\n\n    $conn->close();\n    ?>\n</body>\n</html>\n```\n\nThis script includes:\n\n1. A database connection configuration\n2. A form for submitting new reviews\n3. Input validation and sanitization\n4. Database operations (inserting new reviews and retrieving existing ones)\n5. Display of reviews with rating stars\n6. Basic styling\n\nTo use this script:\n\n1. Create a MySQL database named `reviews_db`\n2. Create a table named `reviews` with the following columns:\n   - id (INT, AUTO_INCREMENT, PRIMARY KEY)\n   - user_name (VARCHAR(255))\n   - user_email (VARCHAR(255))\n   - rating (INT)\n   - review_text (TEXT)\n   - timestamp (DATETIME)\n\n3. Update the database configuration at the top of the script with your actual MySQL credentials\n\nFeatures:\n- Users can submit reviews with name, email, rating (1-5 stars), and text\n- Reviews are stored in a MySQL database\n- All reviews are displayed below the submission form\n- Reviews show user details, rating stars, review text, and timestamp\n- Input validation for all fields\n- Protection against SQL injection using prepared statements\n- Basic error handling\n\nTo customize:\n- Add your own CSS styles to match your website's design\n- Modify the database table structure if needed\n- Adjust the input validation rules as per your requirements\n- Add features like review editing or deletion\n- Implement user authentication if you want to restrict reviews to registered users", "code_blocks": ["```php\n<?php\n// Database configuration\n$host = 'localhost';\n$user = 'root';\n$password = '';\n$dbname = 'reviews_db';\n\n// Connect to database\n$conn = new mysqli($host, $user, $password, $dbname);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Handle review submission\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    // Sanitize and validate input\n    $name = htmlspecialchars(trim($_POST['name']));\n    $email = htmlspecialchars(trim($_POST['email']));\n    $rating = intval($_POST['rating']);\n    $review_text = htmlspecialchars(trim($_POST['review_text']));\n\n    if (empty($name) || empty($email) || empty($rating) || empty($review_text)) {\n        die(\"All fields are required!\");\n    }\n\n    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {\n        die(\"Invalid email format!\");\n    }\n\n    if ($rating < 1 || $rating > 5) {\n        die(\"Rating must be between 1 and 5!\");\n    }\n\n    // Insert review into database\n    $stmt = $conn->prepare(\"INSERT INTO reviews (user_name, user_email, rating, review_text, timestamp) VALUES (?, ?, ?, ?, NOW())\");\n    $stmt->bind_param(\"ssii\", $name, $email, $rating, $review_text);\n\n    if ($stmt->execute()) {\n        header(\"Location: \" . $_SERVER['PHP_SELF']);\n        exit();\n    } else {\n        die(\"Error submitting review: \" . $conn->error);\n    }\n\n    $stmt->close();\n}\n\n// Get reviews from database\n$query = \"SELECT * FROM reviews ORDER BY timestamp DESC\";\n$result = $conn->query($query);\n\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Product Reviews</title>\n    <style>\n        .rating-stars {\n            color: #gold;\n        }\n        .review-container {\n            border: 1px solid #ddd;\n            padding: 20px;\n            margin: 10px 0;\n            background-color: #f9f9f9;\n        }\n        form {\n            max-width: 600px;\n            margin: 0 auto;\n            padding: 20px;\n            background-color: white;\n            border-radius: 5px;\n            box-shadow: 0 0 10px rgba(0,0,0,0.1);\n        }\n    </style>\n</head>\n<body>\n    <h1>Product Reviews</h1>\n\n    <!-- Review submission form -->\n    <form method=\"post\" action=\"<?php echo $_SERVER['PHP_SELF']; ?>\">\n        <div>\n            <label for=\"name\">Name:</label><br>\n            <input type=\"text\" id=\"name\" name=\"name\" required>\n        </div>\n        <div>\n            <label for=\"email\">Email:</label><br>\n            <input type=\"email\" id=\"email\" name=\"email\" required>\n        </div>\n        <div>\n            <label for=\"rating\">Rating:</label><br>\n            <select id=\"rating\" name=\"rating\" required>\n                <option value=\"\">Select Rating</option>\n                <option value=\"1\">1 Star</option>\n                <option value=\"2\">2 Stars</option>\n                <option value=\"3\">3 Stars</option>\n                <option value=\"4\">4 Stars</option>\n                <option value=\"5\">5 Stars</option>\n            </select>\n        </div>\n        <div>\n            <label for=\"review_text\">Review:</label><br>\n            <textarea id=\"review_text\" name=\"review_text\" rows=\"5\" required></textarea>\n        </div>\n        <button type=\"submit\">Submit Review</button>\n    </form>\n\n    <!-- Display existing reviews -->\n    <?php\n    if ($result->num_rows > 0) {\n        while ($row = $result->fetch_assoc()) {\n            // Generate stars based on rating\n            $stars_html = str_repeat(\"\u2605 \", $row['rating']);\n            $stars_html .= str_repeat(\"\u2606 \", 5 - $row['rating']);\n\n            echo \"<div class='review-container'>\";\n                echo \"<h3>By \" . $row['user_name'] . \"</h3>\";\n                echo \"<p>\" . $row['review_text'] . \"</p>\";\n                echo \"<div class='rating-stars'>\" . $stars_html . \"</div>\";\n                echo \"<p>Posted on: \" . date('F j, Y', strtotime($row['timestamp'])) . \"</p>\";\n            echo \"</div>\";\n        }\n    } else {\n        echo \"<p>No reviews available.</p>\";\n    }\n\n    $conn->close();\n    ?>\n</body>\n</html>\n```"]}
