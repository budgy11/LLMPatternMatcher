{"prompt": "Create a user review function using php", "llm_output": "<think>\nOkay, I need to create a PHP function for user reviews. Let me think about what this function should do.\n\nFirst, the function needs to handle different types of user interactions related to reviews. So, it should support actions like adding a new review, deleting an existing one, and updating a review. That makes sense because users might want to edit their reviews or remove them if they change their mind.\n\nI'll start by defining the function with parameters for action, user ID, product ID, comment, rating, and maybe an optional review ID for delete or update actions. The user ID is important to track who's making the review, and product ID links it to a specific product. The comment and rating are the actual content of the review.\n\nNext, I'll use a switch statement based on the action parameter. For adding a new review, I'll need an INSERT SQL query that includes the current timestamp for when the review was added. Using prepared statements with placeholders will help prevent SQL injection attacks.\n\nFor updating a review, I'll have to make sure that only the user who wrote it can edit it. So, in the WHERE clause, I'll include both the review ID and the user ID. This adds a layer of security, ensuring that others can't modify reviews they didn't create.\n\nDeleting a review works similarly; again, checking both the review ID and user ID to prevent unauthorized deletions.\n\nIf none of these actions match, the function should return an error message indicating that the action is invalid.\n\nI also need to handle database connections. The function takes $conn as a parameter, which should be a valid database connection object. This keeps things modular and allows the function to work with any existing connection.\n\nAfter executing each SQL query, I'll check if there were any errors. If so, return an error message; otherwise, return success with details like the affected rows or new review ID where applicable.\n\nWait, in the add case, maybe I should capture the new review's ID after insertion. Using mysqli_insert_id() could be useful for that. But in the current code, it just returns a success message without the ID. Maybe including the ID would be helpful for further processing, like redirecting to the review page.\n\nAlso, considering security, using prepared statements is good, but I should ensure that all inputs are properly sanitized and validated outside this function or within it to prevent any vulnerabilities.\n\nAnother thing is error handling: each case returns an appropriate message, which can be useful for debugging or user feedback. But perhaps including more detailed error messages could help identify issues faster.\n\nI think the structure covers the main functionalities needed. Now, putting it all together into a PHP function with proper SQL queries and error checking.\n</think>\n\nHere's an example of a PHP function that handles user reviews:\n\n```php\nfunction handleUserReview($conn, $action, $user_id, $product_id, $comment = \"\", $rating = 0, $review_id = \"\") {\n    // Sanitize input data\n    $comment = mysqli_real_escape_string($conn, $comment);\n    \n    switch ($action) {\n        case 'add':\n            // Add a new review\n            $sql = \"INSERT INTO reviews (user_id, product_id, comment, rating, created_at) \n                    VALUES (?, ?, ?, ?, NOW())\";\n            \n            if ($stmt = mysqli_prepare($conn, $sql)) {\n                mysqli_stmt_bind_param($stmt, \"iiss\", $user_id, $product_id, $comment, $rating);\n                \n                if (mysqli_stmt_execute($stmt)) {\n                    // Get the last inserted review ID\n                    $review_id = mysqli_insert_id($conn);\n                    return array(\n                        'status' => 'success',\n                        'message' => 'Review added successfully!',\n                        'review_id' => $review_id\n                    );\n                } else {\n                    return array(\n                        'status' => 'error',\n                        'message' => 'Error adding review: ' . mysqli_stmt_error($stmt)\n                    );\n                }\n                mysqli_stmt_close($stmt);\n            }\n            break;\n            \n        case 'update':\n            // Update an existing review\n            $sql = \"UPDATE reviews SET comment=?, rating=? WHERE id=? AND user_id=?\";\n            \n            if ($stmt = mysqli_prepare($conn, $sql)) {\n                mysqli_stmt_bind_param($stmt, \"sisi\", $comment, $rating, $review_id, $user_id);\n                \n                if (mysqli_stmt_execute($stmt)) {\n                    return array(\n                        'status' => 'success',\n                        'message' => 'Review updated successfully!'\n                    );\n                } else {\n                    return array(\n                        'status' => 'error',\n                        'message' => 'Error updating review: ' . mysqli_stmt_error($stmt)\n                    );\n                }\n                mysqli_stmt_close($stmt);\n            }\n            break;\n            \n        case 'delete':\n            // Delete a review\n            $sql = \"DELETE FROM reviews WHERE id=? AND user_id=?\";\n            \n            if ($stmt = mysqli_prepare($conn, $sql)) {\n                mysqli_stmt_bind_param($stmt, \"ii\", $review_id, $user_id);\n                \n                if (mysqli_stmt_execute($stmt)) {\n                    return array(\n                        'status' => 'success',\n                        'message' => 'Review deleted successfully!'\n                    );\n                } else {\n                    return array(\n                        'status' => 'error',\n                        'message' => 'Error deleting review: ' . mysqli_stmt_error($stmt)\n                    );\n                }\n                mysqli_stmt_close($stmt);\n            }\n            break;\n            \n        default:\n            // Invalid action\n            return array(\n                'status' => 'error',\n                'message' => 'Invalid action specified!'\n            );\n    }\n}\n```\n\nThis function can handle three main actions:\n\n1. Adding a new review (action = 'add')\n2. Updating an existing review (action = 'update')\n3. Deleting a review (action = 'delete')\n\nThe function requires the following parameters:\n\n- `$conn` - A valid database connection object\n- `$action` - The action to perform ('add', 'update', or 'delete')\n- `$user_id` - The ID of the user leaving the review\n- `$product_id` - The ID of the product being reviewed\n\nAdditional parameters:\n- `$comment` (optional) - The review comment (required for add and update actions)\n- `$rating` (optional) - The review rating (required for add and update actions, should be between 1 and 5)\n- `$review_id` (optional) - The ID of the review being updated or deleted\n\nThe function uses prepared statements to prevent SQL injection and returns an array with a status ('success' or 'error') and a message.\n\nTo use this function, you would call it like this:\n\nExample for adding a review:\n```php\n$result = handleUserReview($conn, 'add', $user_id, $product_id, $comment, $rating);\n```\n\nExample for updating a review:\n```php\n$result = handleUserReview($conn, 'update', $user_id, $product_id, $new_comment, $new_rating, $review_id);\n```\n\nExample for deleting a review:\n```php\n$result = handleUserReview($conn, 'delete', $user_id, $product_id, \"\", 0, $review_id);\n```\n\nNote: You should replace `$conn` with your actual database connection object and ensure that the `reviews` table exists in your database with appropriate columns.\n\nThe function also includes basic error handling and returns an array with a status and message. You can modify this to suit your specific needs, such as logging errors or displaying user-friendly messages.", "code_blocks": ["```php\nfunction handleUserReview($conn, $action, $user_id, $product_id, $comment = \"\", $rating = 0, $review_id = \"\") {\n    // Sanitize input data\n    $comment = mysqli_real_escape_string($conn, $comment);\n    \n    switch ($action) {\n        case 'add':\n            // Add a new review\n            $sql = \"INSERT INTO reviews (user_id, product_id, comment, rating, created_at) \n                    VALUES (?, ?, ?, ?, NOW())\";\n            \n            if ($stmt = mysqli_prepare($conn, $sql)) {\n                mysqli_stmt_bind_param($stmt, \"iiss\", $user_id, $product_id, $comment, $rating);\n                \n                if (mysqli_stmt_execute($stmt)) {\n                    // Get the last inserted review ID\n                    $review_id = mysqli_insert_id($conn);\n                    return array(\n                        'status' => 'success',\n                        'message' => 'Review added successfully!',\n                        'review_id' => $review_id\n                    );\n                } else {\n                    return array(\n                        'status' => 'error',\n                        'message' => 'Error adding review: ' . mysqli_stmt_error($stmt)\n                    );\n                }\n                mysqli_stmt_close($stmt);\n            }\n            break;\n            \n        case 'update':\n            // Update an existing review\n            $sql = \"UPDATE reviews SET comment=?, rating=? WHERE id=? AND user_id=?\";\n            \n            if ($stmt = mysqli_prepare($conn, $sql)) {\n                mysqli_stmt_bind_param($stmt, \"sisi\", $comment, $rating, $review_id, $user_id);\n                \n                if (mysqli_stmt_execute($stmt)) {\n                    return array(\n                        'status' => 'success',\n                        'message' => 'Review updated successfully!'\n                    );\n                } else {\n                    return array(\n                        'status' => 'error',\n                        'message' => 'Error updating review: ' . mysqli_stmt_error($stmt)\n                    );\n                }\n                mysqli_stmt_close($stmt);\n            }\n            break;\n            \n        case 'delete':\n            // Delete a review\n            $sql = \"DELETE FROM reviews WHERE id=? AND user_id=?\";\n            \n            if ($stmt = mysqli_prepare($conn, $sql)) {\n                mysqli_stmt_bind_param($stmt, \"ii\", $review_id, $user_id);\n                \n                if (mysqli_stmt_execute($stmt)) {\n                    return array(\n                        'status' => 'success',\n                        'message' => 'Review deleted successfully!'\n                    );\n                } else {\n                    return array(\n                        'status' => 'error',\n                        'message' => 'Error deleting review: ' . mysqli_stmt_error($stmt)\n                    );\n                }\n                mysqli_stmt_close($stmt);\n            }\n            break;\n            \n        default:\n            // Invalid action\n            return array(\n                'status' => 'error',\n                'message' => 'Invalid action specified!'\n            );\n    }\n}\n```", "```php\n$result = handleUserReview($conn, 'add', $user_id, $product_id, $comment, $rating);\n```", "```php\n$result = handleUserReview($conn, 'update', $user_id, $product_id, $new_comment, $new_rating, $review_id);\n```", "```php\n$result = handleUserReview($conn, 'delete', $user_id, $product_id, \"\", 0, $review_id);\n```"]}
