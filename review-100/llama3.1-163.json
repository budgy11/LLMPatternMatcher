{"prompt": "Create a user review function using php", "llm_output": "**User Review Function in PHP**\n=====================================\n\nThis is an example of a basic user review system implemented in PHP. The system allows users to submit reviews for products, and admin can approve or reject the reviews.\n\n**Database Schema:**\n\nFor this example, we'll assume you have a database with two tables:\n\n```sql\nCREATE TABLE products (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  description TEXT\n);\n\nCREATE TABLE reviews (\n  id INT PRIMARY KEY,\n  product_id INT,\n  user_id INT,\n  rating TINYINT,\n  review TEXT,\n  approved BOOLEAN DEFAULT FALSE\n);\n```\n\n**PHP Code:**\n\n```php\n// Configuration\nrequire_once 'config.php';\n\n// Database Connection\n$db = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);\n\nif ($db->connect_errno) {\n    echo \"Failed to connect to MySQL: \" . $db->connect_error;\n    exit();\n}\n\n// Review Class\nclass Review {\n  private $id;\n  private $product_id;\n  private $user_id;\n  private $rating;\n  private $review;\n\n  public function __construct($product_id, $user_id, $rating, $review) {\n    $this->product_id = $product_id;\n    $this->user_id = $user_id;\n    $this->rating = $rating;\n    $this->review = $review;\n  }\n\n  // Getters and Setters\n  public function getId() { return $this->id; }\n  public function getProductId() { return $this->product_id; }\n  public function getUserId() { return $this->user_id; }\n  public function getRating() { return $this->rating; }\n  public function getReview() { return $this->review; }\n\n  // Insert Review\n  public static function insert($product_id, $user_id, $rating, $review) {\n    global $db;\n    $query = \"INSERT INTO reviews (product_id, user_id, rating, review) VALUES (?, ?, ?, ?)\";\n    $stmt = $db->prepare($query);\n    $stmt->bind_param(\"iiss\", $product_id, $user_id, $rating, $review);\n    if ($stmt->execute()) {\n      return true;\n    } else {\n      echo \"Error inserting review: \" . $stmt->error;\n      return false;\n    }\n  }\n\n  // Approve Review\n  public static function approve($id) {\n    global $db;\n    $query = \"UPDATE reviews SET approved = TRUE WHERE id = ?\";\n    $stmt = $db->prepare($query);\n    $stmt->bind_param(\"i\", $id);\n    if ($stmt->execute()) {\n      return true;\n    } else {\n      echo \"Error approving review: \" . $stmt->error;\n      return false;\n    }\n  }\n\n  // Get Reviews for Product\n  public static function getReviews($product_id) {\n    global $db;\n    $query = \"SELECT * FROM reviews WHERE product_id = ? AND approved = TRUE\";\n    $stmt = $db->prepare($query);\n    $stmt->bind_param(\"i\", $product_id);\n    if ($stmt->execute()) {\n      return $stmt->get_result();\n    } else {\n      echo \"Error getting reviews: \" . $stmt->error;\n      return null;\n    }\n  }\n}\n```\n\n**Example Usage:**\n\n```php\n// Submit Review\n$review = new Review(1, 1, 5, \"Great product!\");\nif (Review::insert($review->getProductId(), $review->getUserId(), $review->getRating(), $review->getReview())) {\n    echo \"Review submitted successfully!\";\n} else {\n    echo \"Error submitting review.\";\n}\n\n// Approve Review\nif (Review::approve(1)) {\n    echo \"Review approved successfully!\";\n} else {\n    echo \"Error approving review.\";\n}\n\n// Get Reviews for Product\n$reviews = Review::getReviews(1);\nif ($reviews) {\n    while ($row = $reviews->fetch_assoc()) {\n        echo $row['review'] . \"\\n\";\n    }\n} else {\n    echo \"No reviews found.\";\n}\n```\n\nThis code provides a basic user review system with functions for inserting, approving, and retrieving reviews. You can extend this example to fit your specific needs.\n\nNote: This is just an example implementation and you should adapt it to your own database schema and requirements.", "code_blocks": [null, "```php\n// Configuration\nrequire_once 'config.php';\n\n// Database Connection\n$db = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);\n\nif ($db->connect_errno) {\n    echo \"Failed to connect to MySQL: \" . $db->connect_error;\n    exit();\n}\n\n// Review Class\nclass Review {\n  private $id;\n  private $product_id;\n  private $user_id;\n  private $rating;\n  private $review;\n\n  public function __construct($product_id, $user_id, $rating, $review) {\n    $this->product_id = $product_id;\n    $this->user_id = $user_id;\n    $this->rating = $rating;\n    $this->review = $review;\n  }\n\n  // Getters and Setters\n  public function getId() { return $this->id; }\n  public function getProductId() { return $this->product_id; }\n  public function getUserId() { return $this->user_id; }\n  public function getRating() { return $this->rating; }\n  public function getReview() { return $this->review; }\n\n  // Insert Review\n  public static function insert($product_id, $user_id, $rating, $review) {\n    global $db;\n    $query = \"INSERT INTO reviews (product_id, user_id, rating, review) VALUES (?, ?, ?, ?)\";\n    $stmt = $db->prepare($query);\n    $stmt->bind_param(\"iiss\", $product_id, $user_id, $rating, $review);\n    if ($stmt->execute()) {\n      return true;\n    } else {\n      echo \"Error inserting review: \" . $stmt->error;\n      return false;\n    }\n  }\n\n  // Approve Review\n  public static function approve($id) {\n    global $db;\n    $query = \"UPDATE reviews SET approved = TRUE WHERE id = ?\";\n    $stmt = $db->prepare($query);\n    $stmt->bind_param(\"i\", $id);\n    if ($stmt->execute()) {\n      return true;\n    } else {\n      echo \"Error approving review: \" . $stmt->error;\n      return false;\n    }\n  }\n\n  // Get Reviews for Product\n  public static function getReviews($product_id) {\n    global $db;\n    $query = \"SELECT * FROM reviews WHERE product_id = ? AND approved = TRUE\";\n    $stmt = $db->prepare($query);\n    $stmt->bind_param(\"i\", $product_id);\n    if ($stmt->execute()) {\n      return $stmt->get_result();\n    } else {\n      echo \"Error getting reviews: \" . $stmt->error;\n      return null;\n    }\n  }\n}\n```", "```php\n// Submit Review\n$review = new Review(1, 1, 5, \"Great product!\");\nif (Review::insert($review->getProductId(), $review->getUserId(), $review->getRating(), $review->getReview())) {\n    echo \"Review submitted successfully!\";\n} else {\n    echo \"Error submitting review.\";\n}\n\n// Approve Review\nif (Review::approve(1)) {\n    echo \"Review approved successfully!\";\n} else {\n    echo \"Error approving review.\";\n}\n\n// Get Reviews for Product\n$reviews = Review::getReviews(1);\nif ($reviews) {\n    while ($row = $reviews->fetch_assoc()) {\n        echo $row['review'] . \"\\n\";\n    }\n} else {\n    echo \"No reviews found.\";\n}\n```"]}
