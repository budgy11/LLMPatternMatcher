{"prompt": "Create a user review function using php", "llm_output": "<think>\nOkay, I need to create a user review function using PHP. Let me think about how to approach this.\n\nFirst, I should figure out the purpose of the function. It's meant to allow users to leave reviews and ratings for products or services. So, the main components will be capturing user input, storing it in a database, displaying the reviews, calculating the average rating, and showing star ratings visually.\n\nI'll start by setting up the database. I'll need a table to store each review with details like review ID, product ID, user name, email, comment, rating, and timestamp. That makes sense because each review is linked to a specific product and includes user information.\n\nNext, I should handle form submission where users can input their reviews. The form will have fields for name, email, comment, and a rating scale. Using POST method to submit the data securely.\n\nNow, processing the submitted review. I'll need to sanitize the inputs to prevent SQL injection or XSS attacks. Functions like htmlspecialchars and trim can help with that. Then, prepare an SQL statement to insert the new review into the database. Error handling is important here; if something goes wrong during insertion, the user should be informed.\n\nAfter submitting a review, it's good practice to redirect the user back to the product page to avoid resubmission issues. Plus, displaying a thank you message would improve user experience.\n\nThen, I need to display all reviews for a specific product. I'll write an SQL query to fetch all entries where the product ID matches. Loop through each result and format them as HTML elements showing user details, comment, rating stars, and timestamp.\n\nCalculating the average rating is crucial for displaying an overall score. I'll sum all ratings and divide by the number of reviews. Formatting it to two decimal places makes it look neat. Also, dynamically generating star ratings based on the average will make the display more engaging.\n\nStyling is important too. Using CSS to style the review section, each review item, user details, comment, stars, and timestamp will enhance readability. The stars should be visually appealing, maybe using gold color for filled ones and gray for empty.\n\nI should also consider handling cases where there are no reviews yet. Displaying a message like \"No reviews yet\" keeps the interface clean and informative.\n\nPutting it all together, I'll structure the PHP script with functions for inserting and displaying reviews. Including error checking at each step ensures reliability. The HTML form will be part of the same page, and CSS styling will make everything look presentable.\n\nTesting each part as I go is important. For example, after writing the insert function, I can test it by submitting a review and checking if it appears in the database. Similarly, testing the display function to ensure all reviews show up correctly.\n\nI also need to think about security. Using prepared statements with mysqli can help prevent SQL injection. Sanitizing user inputs further protects against XSS attacks.\n\nFinally, I'll make sure the code is well-commented and organized for readability. This makes it easier to maintain or modify in the future.\n</think>\n\nHere's an example of a user review function using PHP:\n\n```php\n<?php\n// Database connection details\n$host = 'localhost';\n$username = 'username';\n$password = 'password';\n$dbname = 'reviews_db';\n\n// Connect to database\n$conn = mysqli_connect($host, $username, $password, $dbname);\n\n// Check connection\nif (!$conn) {\n    die(\"Connection failed: \" . mysqli_connect_error());\n}\n\n// Function to create review table if it doesn't exist\nfunction createReviewTable() {\n    global $conn;\n    \n    $sql = \"CREATE TABLE IF NOT EXISTS reviews (\n        id INT AUTO_INCREMENT PRIMARY KEY,\n        product_id INT NOT NULL,\n        user_name VARCHAR(100) NOT NULL,\n        user_email VARCHAR(100) NOT NULL,\n        comment TEXT NOT NULL,\n        rating INT NOT NULL,\n        timestamp DATETIME DEFAULT CURRENT_TIMESTAMP\n    )\";\n    \n    if (!mysqli_query($conn, $sql)) {\n        echo \"Error creating table: \" . mysqli_error($conn);\n    }\n}\n\n// Function to insert a new review into the database\nfunction insertReview($productId, $userName, $userEmail, $comment, $rating) {\n    global $conn;\n    \n    // Sanitize inputs\n    $userName = htmlspecialchars(trim($userName));\n    $userEmail = htmlspecialchars(trim($userEmail));\n    $comment = htmlspecialchars(trim($comment));\n    $rating = intval($rating);\n    \n    // Prepare SQL statement\n    $stmt = mysqli_prepare($conn, \"INSERT INTO reviews (product_id, user_name, user_email, comment, rating) VALUES (?, ?, ?, ?, ?)\");\n    mysqli_stmt_bind_param($stmt, \"issss\", $productId, $userName, $userEmail, $comment, $rating);\n    \n    if (mysqli_stmt_execute($stmt)) {\n        // Redirect to avoid form resubmission\n        header(\"Location: product.php?id=$productId\");\n        exit();\n    } else {\n        echo \"Error inserting review: \" . mysqli_error($conn);\n    }\n    \n    mysqli_stmt_close($stmt);\n}\n\n// Function to display reviews for a product\nfunction displayReviews($productId) {\n    global $conn;\n    \n    // Get all reviews for the specified product\n    $sql = \"SELECT * FROM reviews WHERE product_id = ? ORDER BY timestamp DESC\";\n    $stmt = mysqli_prepare($conn, $sql);\n    mysqli_stmt_bind_param($stmt, \"i\", $productId);\n    mysqli_stmt_execute($stmt);\n    $result = mysqli_stmt_get_result($stmt);\n    \n    // Calculate average rating\n    $averageRating = calculateAverageRating($productId);\n    \n    echo \"<div class='reviews-container'>\";\n        echo \"<h2>Customer Reviews</h2>\";\n        echo \"<p>Average Rating: \" . number_format($averageRating, 2) . \" / 5</p>\";\n        \n        // Display star rating\n        displayStarRating($averageRating);\n        \n        if (mysqli_num_rows($result) > 0) {\n            while ($row = mysqli_fetch_assoc($result)) {\n                echo \"<div class='review-item'>\";\n                    echo \"<div class='user-details'>\";\n                        echo \"<strong>\" . $row['user_name'] . \"</strong>\";\n                        displayStarRating($row['rating']);\n                    echo \"</div>\";\n                    echo \"<p class='comment'>\" . $row['comment'] . \"</p>\";\n                    echo \"<p class='timestamp'>Posted on: \" . date('F j, Y', strtotime($row['timestamp'])) . \"</p>\";\n                echo \"</div>\";\n            }\n        } else {\n            echo \"<p>No reviews yet.</p>\";\n        }\n    echo \"</div>\";\n    \n    mysqli_stmt_close($stmt);\n}\n\n// Function to calculate average rating\nfunction calculateAverageRating($productId) {\n    global $conn;\n    \n    $sql = \"SELECT AVG(rating) AS average FROM reviews WHERE product_id = ?\";\n    $stmt = mysqli_prepare($conn, $sql);\n    mysqli_stmt_bind_param($stmt, \"i\", $productId);\n    mysqli_stmt_execute($stmt);\n    $result = mysqli_stmt_get_result($stmt);\n    $row = mysqli_fetch_assoc($result);\n    \n    return $row['average'] ?: 0;\n}\n\n// Function to display star rating\nfunction displayStarRating($rating) {\n    $fullStars = intval($rating);\n    $hasHalfStar = ($rating - $fullStars) >= 0.5;\n    \n    echo \"<div class='stars'>\";\n        for ($i = 1; $i <= $fullStars; $i++) {\n            echo \"<span class='star'>\u2605</span>\";\n        }\n        \n        if ($hasHalfStar) {\n            echo \"<span class='star half'>\u2be8</span>\";\n        }\n        \n        // Fill remaining stars with empty\n        for ($i = $fullStars + ($hasHalfStar ? 1 : 0); $i < 5; $i++) {\n            echo \"<span class='star'>\u2606</span>\";\n        }\n    echo \"</div>\";\n}\n\n// Close database connection\nmysqli_close($conn);\n?>\n```\n\nThis code provides the following features:\n\n1. A `createReviewTable()` function to create a reviews table in your database if it doesn't exist.\n\n2. An `insertReview()` function to handle user submissions of new reviews, including:\n   - Input sanitization\n   - Database insertion\n   - Redirect after submission\n\n3. A `displayReviews()` function that shows all reviews for a specific product, including:\n   - Average rating calculation\n   - Individual review display with user details and timestamp\n\n4. A `calculateAverageRating()` function to compute the average rating for a product.\n\n5. A `displayStarRating()` function to show ratings using stars (both full and half stars).\n\nTo use this code:\n\n1. Set up your database connection details at the top of the file.\n\n2. Include this PHP file in your project where you need review functionality.\n\n3. Use the following HTML form for submitting reviews:\n\n```html\n<form action=\"submit_review.php\" method=\"POST\">\n    <input type=\"hidden\" name=\"product_id\" value=\"<?php echo $productId; ?>\">\n    \n    <div class=\"form-group\">\n        <label for=\"name\">Name:</label>\n        <input type=\"text\" id=\"name\" name=\"name\" required>\n    </div>\n\n    <div class=\"form-group\">\n        <label for=\"email\">Email:</label>\n        <input type=\"email\" id=\"email\" name=\"email\" required>\n    </div>\n\n    <div class=\"form-group\">\n        <label for=\"comment\">Comment:</label>\n        <textarea id=\"comment\" name=\"comment\" rows=\"5\" required></textarea>\n    </div>\n\n    <div class=\"form-group\">\n        <label>Rating:</label><br>\n        <input type=\"radio\" name=\"rating\" value=\"5\"> 5\n        <input type=\"radio\" name=\"rating\" value=\"4\"> 4\n        <input type=\"radio\" name=\"rating\" value=\"3\"> 3\n        <input type=\"radio\" name=\"rating\" value=\"2\"> 2\n        <input type=\"radio\" name=\"rating\" value=\"1\"> 1\n    </div>\n\n    <button type=\"submit\">Submit Review</button>\n</form>\n```\n\n4. Add CSS styling to your project:\n\n```css\n.reviews-container {\n    max-width: 800px;\n    margin: 20px auto;\n    padding: 20px;\n}\n\n.review-item {\n    border-bottom: 1px solid #ddd;\n    padding: 15px 0;\n    margin-bottom: 15px;\n}\n\n.user-details {\n    font-size: 1.1em;\n    margin-bottom: 5px;\n}\n\n.stars {\n    display: inline-block;\n}\n\n.star {\n    color: gold;\n    margin-left: 3px;\n}\n\n.star.half {\n    color: gold !important;\n}\n\n.comment {\n    line-height: 1.6;\n}\n\n.timestamp {\n    font-size: 0.9em;\n    color: #666;\n}\n```\n\nTo use the review system:\n\n1. Create a new PHP file (e.g., `submit_review.php`) that includes this code and handles form submission.\n\n2. On your product pages, include the HTML form above and call `displayReviews($productId)` to show reviews for that product.\n\n3. Make sure to set appropriate permissions on your database table and handle any additional error checking as needed for your specific use case.\n\nRemember to customize this code according to your specific needs and ensure proper security measures are in place (e.g., input validation, CSRF protection).", "code_blocks": ["```php\n<?php\n// Database connection details\n$host = 'localhost';\n$username = 'username';\n$password = 'password';\n$dbname = 'reviews_db';\n\n// Connect to database\n$conn = mysqli_connect($host, $username, $password, $dbname);\n\n// Check connection\nif (!$conn) {\n    die(\"Connection failed: \" . mysqli_connect_error());\n}\n\n// Function to create review table if it doesn't exist\nfunction createReviewTable() {\n    global $conn;\n    \n    $sql = \"CREATE TABLE IF NOT EXISTS reviews (\n        id INT AUTO_INCREMENT PRIMARY KEY,\n        product_id INT NOT NULL,\n        user_name VARCHAR(100) NOT NULL,\n        user_email VARCHAR(100) NOT NULL,\n        comment TEXT NOT NULL,\n        rating INT NOT NULL,\n        timestamp DATETIME DEFAULT CURRENT_TIMESTAMP\n    )\";\n    \n    if (!mysqli_query($conn, $sql)) {\n        echo \"Error creating table: \" . mysqli_error($conn);\n    }\n}\n\n// Function to insert a new review into the database\nfunction insertReview($productId, $userName, $userEmail, $comment, $rating) {\n    global $conn;\n    \n    // Sanitize inputs\n    $userName = htmlspecialchars(trim($userName));\n    $userEmail = htmlspecialchars(trim($userEmail));\n    $comment = htmlspecialchars(trim($comment));\n    $rating = intval($rating);\n    \n    // Prepare SQL statement\n    $stmt = mysqli_prepare($conn, \"INSERT INTO reviews (product_id, user_name, user_email, comment, rating) VALUES (?, ?, ?, ?, ?)\");\n    mysqli_stmt_bind_param($stmt, \"issss\", $productId, $userName, $userEmail, $comment, $rating);\n    \n    if (mysqli_stmt_execute($stmt)) {\n        // Redirect to avoid form resubmission\n        header(\"Location: product.php?id=$productId\");\n        exit();\n    } else {\n        echo \"Error inserting review: \" . mysqli_error($conn);\n    }\n    \n    mysqli_stmt_close($stmt);\n}\n\n// Function to display reviews for a product\nfunction displayReviews($productId) {\n    global $conn;\n    \n    // Get all reviews for the specified product\n    $sql = \"SELECT * FROM reviews WHERE product_id = ? ORDER BY timestamp DESC\";\n    $stmt = mysqli_prepare($conn, $sql);\n    mysqli_stmt_bind_param($stmt, \"i\", $productId);\n    mysqli_stmt_execute($stmt);\n    $result = mysqli_stmt_get_result($stmt);\n    \n    // Calculate average rating\n    $averageRating = calculateAverageRating($productId);\n    \n    echo \"<div class='reviews-container'>\";\n        echo \"<h2>Customer Reviews</h2>\";\n        echo \"<p>Average Rating: \" . number_format($averageRating, 2) . \" / 5</p>\";\n        \n        // Display star rating\n        displayStarRating($averageRating);\n        \n        if (mysqli_num_rows($result) > 0) {\n            while ($row = mysqli_fetch_assoc($result)) {\n                echo \"<div class='review-item'>\";\n                    echo \"<div class='user-details'>\";\n                        echo \"<strong>\" . $row['user_name'] . \"</strong>\";\n                        displayStarRating($row['rating']);\n                    echo \"</div>\";\n                    echo \"<p class='comment'>\" . $row['comment'] . \"</p>\";\n                    echo \"<p class='timestamp'>Posted on: \" . date('F j, Y', strtotime($row['timestamp'])) . \"</p>\";\n                echo \"</div>\";\n            }\n        } else {\n            echo \"<p>No reviews yet.</p>\";\n        }\n    echo \"</div>\";\n    \n    mysqli_stmt_close($stmt);\n}\n\n// Function to calculate average rating\nfunction calculateAverageRating($productId) {\n    global $conn;\n    \n    $sql = \"SELECT AVG(rating) AS average FROM reviews WHERE product_id = ?\";\n    $stmt = mysqli_prepare($conn, $sql);\n    mysqli_stmt_bind_param($stmt, \"i\", $productId);\n    mysqli_stmt_execute($stmt);\n    $result = mysqli_stmt_get_result($stmt);\n    $row = mysqli_fetch_assoc($result);\n    \n    return $row['average'] ?: 0;\n}\n\n// Function to display star rating\nfunction displayStarRating($rating) {\n    $fullStars = intval($rating);\n    $hasHalfStar = ($rating - $fullStars) >= 0.5;\n    \n    echo \"<div class='stars'>\";\n        for ($i = 1; $i <= $fullStars; $i++) {\n            echo \"<span class='star'>\u2605</span>\";\n        }\n        \n        if ($hasHalfStar) {\n            echo \"<span class='star half'>\u2be8</span>\";\n        }\n        \n        // Fill remaining stars with empty\n        for ($i = $fullStars + ($hasHalfStar ? 1 : 0); $i < 5; $i++) {\n            echo \"<span class='star'>\u2606</span>\";\n        }\n    echo \"</div>\";\n}\n\n// Close database connection\nmysqli_close($conn);\n?>\n```", null, null]}
