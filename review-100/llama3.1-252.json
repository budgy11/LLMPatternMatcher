{"prompt": "Create a user review function using php", "llm_output": "Here is an example of a basic user review system in PHP:\n\n**database.sql**\n```sql\nCREATE TABLE users (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  name VARCHAR(255),\n  email VARCHAR(255)\n);\n\nCREATE TABLE reviews (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  user_id INT,\n  product_id INT,\n  rating TINYINT,\n  review TEXT,\n  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n```\n\n**review.php**\n```php\n<?php\n\nclass Review {\n  private $db;\n\n  public function __construct() {\n    $this->db = new PDO('mysql:host=localhost;dbname=your_database', 'your_username', 'your_password');\n  }\n\n  public function addReview($user_id, $product_id, $rating, $review) {\n    try {\n      $stmt = $this->db->prepare(\"INSERT INTO reviews (user_id, product_id, rating, review) VALUES (:user_id, :product_id, :rating, :review)\");\n      $stmt->bindParam(':user_id', $user_id);\n      $stmt->bindParam(':product_id', $product_id);\n      $stmt->bindParam(':rating', $rating);\n      $stmt->bindParam(':review', $review);\n      $stmt->execute();\n    } catch (PDOException $e) {\n      echo \"Error: \" . $e->getMessage();\n    }\n  }\n\n  public function getReviews($product_id = null, $user_id = null) {\n    try {\n      if ($product_id && !$user_id) {\n        $stmt = $this->db->prepare(\"SELECT * FROM reviews WHERE product_id = :product_id\");\n        $stmt->bindParam(':product_id', $product_id);\n        $stmt->execute();\n        return $stmt->fetchAll();\n      } elseif (!$product_id && $user_id) {\n        $stmt = $this->db->prepare(\"SELECT * FROM reviews WHERE user_id = :user_id\");\n        $stmt->bindParam(':user_id', $user_id);\n        $stmt->execute();\n        return $stmt->fetchAll();\n      } else {\n        $stmt = $this->db->prepare(\"SELECT * FROM reviews\");\n        $stmt->execute();\n        return $stmt->fetchAll();\n      }\n    } catch (PDOException $e) {\n      echo \"Error: \" . $e->getMessage();\n    }\n  }\n\n  public function deleteReview($review_id) {\n    try {\n      $stmt = $this->db->prepare(\"DELETE FROM reviews WHERE id = :id\");\n      $stmt->bindParam(':id', $review_id);\n      $stmt->execute();\n    } catch (PDOException $e) {\n      echo \"Error: \" . $e->getMessage();\n    }\n  }\n\n  public function updateReview($review_id, $rating, $review) {\n    try {\n      $stmt = $this->db->prepare(\"UPDATE reviews SET rating = :rating, review = :review WHERE id = :id\");\n      $stmt->bindParam(':id', $review_id);\n      $stmt->bindParam(':rating', $rating);\n      $stmt->bindParam(':review', $review);\n      $stmt->execute();\n    } catch (PDOException $e) {\n      echo \"Error: \" . $e->getMessage();\n    }\n  }\n}\n\n?>\n```\n\n**Example usage**\n\n```php\n$review = new Review();\n\n// Add a review\n$user_id = 1;\n$product_id = 1;\n$rating = 5;\n$review_text = \"This product is amazing!\";\n$review->addReview($user_id, $product_id, $rating, $review_text);\n\n// Get reviews for a specific product\n$product_id = 1;\n$reviews = $review->getReviews($product_id);\nprint_r($reviews); // array of review objects\n\n// Delete a review\n$review_id = 1;\n$review->deleteReview($review_id);\n\n// Update a review\n$review_id = 1;\n$rating = 4;\n$review_text = \"This product is great!\";\n$review->updateReview($review_id, $rating, $review_text);\n```\n\nNote that this is just an example and you should modify the code to fit your specific needs. Additionally, make sure to replace `your_database`, `your_username` and `your_password` with your actual database credentials.\n\nThis example includes the following functionality:\n\n*   Add a review\n*   Get reviews for a specific product or user (if specified)\n*   Delete a review\n*   Update a review\n\nPlease note that error handling has been kept simple in this example, but you should adapt it to fit your production environment's needs.", "code_blocks": [null, "```php\n<?php\n\nclass Review {\n  private $db;\n\n  public function __construct() {\n    $this->db = new PDO('mysql:host=localhost;dbname=your_database', 'your_username', 'your_password');\n  }\n\n  public function addReview($user_id, $product_id, $rating, $review) {\n    try {\n      $stmt = $this->db->prepare(\"INSERT INTO reviews (user_id, product_id, rating, review) VALUES (:user_id, :product_id, :rating, :review)\");\n      $stmt->bindParam(':user_id', $user_id);\n      $stmt->bindParam(':product_id', $product_id);\n      $stmt->bindParam(':rating', $rating);\n      $stmt->bindParam(':review', $review);\n      $stmt->execute();\n    } catch (PDOException $e) {\n      echo \"Error: \" . $e->getMessage();\n    }\n  }\n\n  public function getReviews($product_id = null, $user_id = null) {\n    try {\n      if ($product_id && !$user_id) {\n        $stmt = $this->db->prepare(\"SELECT * FROM reviews WHERE product_id = :product_id\");\n        $stmt->bindParam(':product_id', $product_id);\n        $stmt->execute();\n        return $stmt->fetchAll();\n      } elseif (!$product_id && $user_id) {\n        $stmt = $this->db->prepare(\"SELECT * FROM reviews WHERE user_id = :user_id\");\n        $stmt->bindParam(':user_id', $user_id);\n        $stmt->execute();\n        return $stmt->fetchAll();\n      } else {\n        $stmt = $this->db->prepare(\"SELECT * FROM reviews\");\n        $stmt->execute();\n        return $stmt->fetchAll();\n      }\n    } catch (PDOException $e) {\n      echo \"Error: \" . $e->getMessage();\n    }\n  }\n\n  public function deleteReview($review_id) {\n    try {\n      $stmt = $this->db->prepare(\"DELETE FROM reviews WHERE id = :id\");\n      $stmt->bindParam(':id', $review_id);\n      $stmt->execute();\n    } catch (PDOException $e) {\n      echo \"Error: \" . $e->getMessage();\n    }\n  }\n\n  public function updateReview($review_id, $rating, $review) {\n    try {\n      $stmt = $this->db->prepare(\"UPDATE reviews SET rating = :rating, review = :review WHERE id = :id\");\n      $stmt->bindParam(':id', $review_id);\n      $stmt->bindParam(':rating', $rating);\n      $stmt->bindParam(':review', $review);\n      $stmt->execute();\n    } catch (PDOException $e) {\n      echo \"Error: \" . $e->getMessage();\n    }\n  }\n}\n\n?>\n```", "```php\n$review = new Review();\n\n// Add a review\n$user_id = 1;\n$product_id = 1;\n$rating = 5;\n$review_text = \"This product is amazing!\";\n$review->addReview($user_id, $product_id, $rating, $review_text);\n\n// Get reviews for a specific product\n$product_id = 1;\n$reviews = $review->getReviews($product_id);\nprint_r($reviews); // array of review objects\n\n// Delete a review\n$review_id = 1;\n$review->deleteReview($review_id);\n\n// Update a review\n$review_id = 1;\n$rating = 4;\n$review_text = \"This product is great!\";\n$review->updateReview($review_id, $rating, $review_text);\n```"]}
