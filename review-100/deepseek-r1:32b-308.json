{"prompt": "Create a user review function using php", "llm_output": "<think>\nOkay, I need to create a user review function using PHP. Let me think about how to approach this.\n\nFirst, I should figure out what the function needs to do. From the question, it seems like the function should allow users to leave reviews and ratings for products or services. So, I'll need to handle both the display of a form for submitting reviews and displaying existing reviews.\n\nI should start by setting up a database connection because the data will be stored in a MySQL database. That means I'll need to connect using mysqli_connect with the appropriate credentials.\n\nNext, the function should check if the review form has been submitted. If it has, the function needs to insert the new review into the database. But before inserting, I must sanitize the inputs to prevent SQL injection and other attacks. Using mysqli_real_escape_string will help here.\n\nAlso, I need to validate the input. The rating should be an integer between 1 and 5, and both the name and review fields shouldn't be empty. If any validation fails, I'll display appropriate error messages.\n\nAfter handling the submission, the function should retrieve existing reviews from the database. It will fetch all entries from the 'reviews' table, sorted by the date in descending order so that the newest reviews appear first.\n\nFor each review, I'll display the user's name, their rating using stars, the review content, and the date it was posted. The stars can be represented with emoji icons for simplicity.\n\nI should also calculate and display the average rating. This involves fetching the average from the database and then converting that into a star representation.\n\nPutting it all together, the function will first check if the form is submitted, handle the submission, then fetch and display existing reviews along with the average rating.\n\nI should make sure to include error handling for database operations, like checking if queries were successful and displaying errors if they fail. This will help in debugging if something goes wrong.\n\nFinally, I'll test the function by calling it at the end of the script. That way, when the script is run, it will display the review form and the existing reviews as intended.\n</think>\n\nHere's an example of a user review system using PHP:\n\n```php\n<?php\n// Database connection settings\n$host = \"localhost\";\n$username = \"root\";\n$password = \"\";\n$database = \"reviews\";\n\n// Connect to MySQL database\n$conn = mysqli_connect($host, $username, $password, $database);\n\n// Check if connection failed\nif (!$conn) {\n    die(\"Connection failed: \" . mysqli_connect_error());\n}\n\n// Function to handle and display reviews\nfunction user_review_system() {\n    global $conn;\n\n    // Insert new review if form is submitted\n    if ($_SERVER[\"REQUEST_METHOD\"] == \"POST\") {\n        // Sanitize inputs\n        $name = mysqli_real_escape_string($conn, $_POST['name']);\n        $review = mysqli_real_escape_string($conn, $_POST['review']);\n        $rating = intval($_POST['rating']);\n\n        // Validate input\n        if ($rating < 1 || $rating > 5) {\n            echo \"Invalid rating. Please select a rating between 1 and 5.\";\n        } elseif (empty($name) || empty($review)) {\n            echo \"Please fill in all fields.\";\n        } else {\n            // Insert review into database\n            $sql = \"INSERT INTO reviews (name, review, rating, date)\n                    VALUES ('$name', '$review', '$rating', NOW())\";\n            \n            if (!mysqli_query($conn, $sql)) {\n                echo \"Error: \" . mysqli_error($conn);\n            }\n        }\n    }\n\n    // Fetch all reviews from database\n    $sql = \"SELECT * FROM reviews ORDER BY date DESC\";\n    $result = mysqli_query($conn, $sql);\n\n    // Display review form and existing reviews\n    ?>\n    \n    <form method=\"post\" action=\"<?php echo $_SERVER['PHP_SELF']; ?>\">\n        <h3>Leave a Review:</h3>\n        <p>Name:<br>\n            <input type=\"text\" name=\"name\" required>\n        </p>\n        <p>Rating (1-5):<br>\n            <select name=\"rating\" required>\n                <option value=\"\">Select Rating</option>\n                <option value=\"1\">1</option>\n                <option value=\"2\">2</option>\n                <option value=\"3\">3</option>\n                <option value=\"4\">4</option>\n                <option value=\"5\">5</option>\n            </select>\n        </p>\n        <p>Review:<br>\n            <textarea name=\"review\" rows=\"5\" cols=\"40\" required></textarea>\n        </p>\n        <input type=\"submit\" value=\"Submit Review\">\n    </form>\n\n    <?php if (mysqli_num_rows($result) > 0): ?>\n        <h3>Existing Reviews:</h3>\n        <div class=\"reviews\">\n            <?php while ($row = mysqli_fetch_assoc($result)): ?>\n                <div class=\"review\">\n                    <p><strong><?php echo $row['name']; ?></strong></p>\n                    <p>Rating: <?php \n                        // Display stars for rating\n                        $stars = min(5, max(0, (int)$row['rating']));\n                        for ($i = 1; $i <= $stars; $i++) {\n                            echo \"\u2605\";\n                        }\n                        for ($i = $stars + 1; $i <= 5; $i++) {\n                            echo \"\u2606\";\n                        }\n                    ?></p>\n                    <p><?php echo $row['review']; ?></p>\n                    <p><em>Posted on <?php echo date('F j, Y', strtotime($row['date'])); ?></em></p>\n                </div>\n            <?php endwhile; ?>\n        </div>\n\n        // Display average rating\n        $average_rating = mysqli_fetch_assoc(mysqli_query($conn, \"SELECT AVG(rating) as average FROM reviews\"));\n        $average_rating = round($average_rating['average'], 1);\n        echo \"<h4>Average Rating: $average_rating/5</h4>\";\n    <?php endif; ?>\n    \n<?php\n}\n\n// Call the function\nuser_review_system();\n\n// Close database connection\nmysqli_close($conn);\n?>\n```\n\nThis PHP code creates a user review system that:\n\n1. Connects to a MySQL database\n2. Allows users to submit reviews with ratings (1-5 stars)\n3. Stores reviews in the database\n4. Displays existing reviews with user names, ratings, and timestamps\n5. Shows average rating\n\nTo use this code:\n\n1. Create a database named \"reviews\"\n2. Create a table named \"reviews\" with these columns:\n   - id (INT AUTO_INCREMENT PRIMARY KEY)\n   - name (VARCHAR(255))\n   - review (TEXT)\n   - rating (TINYINT)\n   - date (DATETIME)\n\n3. Modify the database connection settings at the top of the file to match your environment\n\nFeatures:\n\n- Review submission form with validation\n- Rating system using stars\n- Display of all reviews in chronological order\n- Average rating calculation\n- Basic error handling\n- Input sanitization\n- Secure SQL queries using mysqli_real_escape_string\n\nNote: This is a basic implementation and should be enhanced for production use. You might want to add:\n\n1. User authentication\n2. Review editing/deletion capabilities\n3. More robust validation and sanitization\n4. Pagination for long lists of reviews\n5. CSS styling\n6. CAPTCHA protection\n7. Spam detection\n\nTo enhance security, consider using prepared statements with mysqli or switching to PDO (PHP Data Objects) extension.\n\nRemember to always validate user input and sanitize database queries to prevent SQL injection attacks.", "code_blocks": ["```php\n<?php\n// Database connection settings\n$host = \"localhost\";\n$username = \"root\";\n$password = \"\";\n$database = \"reviews\";\n\n// Connect to MySQL database\n$conn = mysqli_connect($host, $username, $password, $database);\n\n// Check if connection failed\nif (!$conn) {\n    die(\"Connection failed: \" . mysqli_connect_error());\n}\n\n// Function to handle and display reviews\nfunction user_review_system() {\n    global $conn;\n\n    // Insert new review if form is submitted\n    if ($_SERVER[\"REQUEST_METHOD\"] == \"POST\") {\n        // Sanitize inputs\n        $name = mysqli_real_escape_string($conn, $_POST['name']);\n        $review = mysqli_real_escape_string($conn, $_POST['review']);\n        $rating = intval($_POST['rating']);\n\n        // Validate input\n        if ($rating < 1 || $rating > 5) {\n            echo \"Invalid rating. Please select a rating between 1 and 5.\";\n        } elseif (empty($name) || empty($review)) {\n            echo \"Please fill in all fields.\";\n        } else {\n            // Insert review into database\n            $sql = \"INSERT INTO reviews (name, review, rating, date)\n                    VALUES ('$name', '$review', '$rating', NOW())\";\n            \n            if (!mysqli_query($conn, $sql)) {\n                echo \"Error: \" . mysqli_error($conn);\n            }\n        }\n    }\n\n    // Fetch all reviews from database\n    $sql = \"SELECT * FROM reviews ORDER BY date DESC\";\n    $result = mysqli_query($conn, $sql);\n\n    // Display review form and existing reviews\n    ?>\n    \n    <form method=\"post\" action=\"<?php echo $_SERVER['PHP_SELF']; ?>\">\n        <h3>Leave a Review:</h3>\n        <p>Name:<br>\n            <input type=\"text\" name=\"name\" required>\n        </p>\n        <p>Rating (1-5):<br>\n            <select name=\"rating\" required>\n                <option value=\"\">Select Rating</option>\n                <option value=\"1\">1</option>\n                <option value=\"2\">2</option>\n                <option value=\"3\">3</option>\n                <option value=\"4\">4</option>\n                <option value=\"5\">5</option>\n            </select>\n        </p>\n        <p>Review:<br>\n            <textarea name=\"review\" rows=\"5\" cols=\"40\" required></textarea>\n        </p>\n        <input type=\"submit\" value=\"Submit Review\">\n    </form>\n\n    <?php if (mysqli_num_rows($result) > 0): ?>\n        <h3>Existing Reviews:</h3>\n        <div class=\"reviews\">\n            <?php while ($row = mysqli_fetch_assoc($result)): ?>\n                <div class=\"review\">\n                    <p><strong><?php echo $row['name']; ?></strong></p>\n                    <p>Rating: <?php \n                        // Display stars for rating\n                        $stars = min(5, max(0, (int)$row['rating']));\n                        for ($i = 1; $i <= $stars; $i++) {\n                            echo \"\u2605\";\n                        }\n                        for ($i = $stars + 1; $i <= 5; $i++) {\n                            echo \"\u2606\";\n                        }\n                    ?></p>\n                    <p><?php echo $row['review']; ?></p>\n                    <p><em>Posted on <?php echo date('F j, Y', strtotime($row['date'])); ?></em></p>\n                </div>\n            <?php endwhile; ?>\n        </div>\n\n        // Display average rating\n        $average_rating = mysqli_fetch_assoc(mysqli_query($conn, \"SELECT AVG(rating) as average FROM reviews\"));\n        $average_rating = round($average_rating['average'], 1);\n        echo \"<h4>Average Rating: $average_rating/5</h4>\";\n    <?php endif; ?>\n    \n<?php\n}\n\n// Call the function\nuser_review_system();\n\n// Close database connection\nmysqli_close($conn);\n?>\n```"]}
