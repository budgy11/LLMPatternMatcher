{"prompt": "Create a user review function using php", "llm_output": "<think>\nAlright, the user asked to create a user review function using PHP. I need to figure out what exactly they're looking for. Maybe they want a function that allows users to submit reviews and ratings for something, like a product or service.\n\nFirst, I should outline the basic components needed. They'll probably need an HTML form where users can input their name, email, review text, and select a rating from 1 to 5 stars. So I'll start by drafting that form with appropriate fields and a submit button.\n\nNext, handling the form submission is crucial. The function should process the submitted data. That means checking if all required fields are filled out. If not, display an error message. Also, validating inputs to prevent SQL injection and other security issues. Using prepared statements would be a good approach here.\n\nThen, I'll need to store the reviews in a database. So creating a table to hold review details like ID, product ID, user name, email, review text, rating, and timestamp makes sense. The function should insert the processed data into this table after validation.\n\nDisplaying the reviews is another important part. The function should fetch all reviews from the database for a specific product and display them on the webpage. Each review should show the user's name, their review, the star rating visually, and the date it was posted.\n\nI also need to consider security aspects. Sanitizing inputs to prevent XSS attacks is essential. Additionally, handling errors gracefully by showing messages if something goes wrong during submission or database access.\n\nPutting it all together, I'll structure the code into sections: connecting to the database, processing form data, storing reviews, and displaying them. Making sure each part is clear and well-commented so the user can understand how everything works.\n\nFinally, testing the function with different scenarios\u2014like submitting valid and invalid forms, checking if reviews are stored correctly, and ensuring they display properly. This way, I can make sure the function is robust and handles various cases without issues.\n</think>\n\nHere's an example of a user review system using PHP. This includes functions for displaying reviews, submitting new reviews, and calculating average ratings:\n\n```php\n<?php\n// Database connection\n$host = 'localhost';\n$username = 'root';\n$password = '';\n$dbname = 'reviews_db';\n\n$conn = mysqli_connect($host, $username, $password, $dbname);\n\n// Create table if not exists\n$sql = \"CREATE TABLE IF NOT EXISTS reviews (\n    id INT AUTO_INCREMENT PRIMARY KEY,\n    product_id INT,\n    user_name VARCHAR(255),\n    user_email VARCHAR(255),\n    review_text TEXT,\n    rating INT,\n    review_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)\";\nmysqli_query($conn, $sql);\n\n// Function to display all reviews for a product\nfunction display_reviews($product_id) {\n    global $conn;\n    \n    // Get all reviews from database\n    $sql = \"SELECT * FROM reviews WHERE product_id = ? ORDER BY review_date DESC\";\n    $stmt = mysqli_prepare($conn, $sql);\n    mysqli_stmt_bind_param($stmt, 'i', $product_id);\n    mysqli_stmt_execute($stmt);\n    $result = mysqli_stmt_get_result($stmt);\n\n    if (mysqli_num_rows($result) > 0) {\n        // Calculate average rating\n        $total_ratings = 0;\n        $num_reviews = 0;\n\n        while ($row = mysqli_fetch_assoc($result)) {\n            $total_ratings += $row['rating'];\n            $num_reviews++;\n        }\n\n        $average_rating = $num_reviews > 0 ? number_format(($total_ratings / $num_reviews), 1) : 0;\n        \n        // Reset result pointer\n        mysqli_data_seek($result, 0);\n\n        echo '<div class=\"review-container\">';\n        echo \"<h3>Rating: $average_rating/5 ($num_reviews reviews)</h3>\";\n\n        while ($row = mysqli_fetch_assoc($result)) {\n            echo '<div class=\"review-item\">';\n            echo \"<h4>{$row['user_name']}</h4>\";\n            echo \"<p>{$row['review_text']}</p>\";\n            \n            // Display stars\n            $stars = str_repeat('<i class=\"fas fa-star\"></i>', $row['rating']);\n            $empty_stars = str_repeat('<i class=\"far fa-star\"></i>', 5 - $row['rating']);\n            echo \"<div class=\\\"stars\\\">{$stars}{$empty_stars}</div>\";\n            \n            echo \"<small>Posted on: \" . date('F j, Y', strtotime($row['review_date'])) . \"</small>\";\n            echo '</div>';\n        }\n        echo '</div>';\n    } else {\n        echo '<p>No reviews yet. Be the first to review this product!</p>';\n    }\n}\n\n// Function to submit a new review\nfunction submit_review() {\n    global $conn;\n\n    if (isset($_POST['submit-review'])) {\n        // Validate and sanitize input\n        $product_id = isset($_GET['id']) ? intval($_GET['id']) : 0;\n        $user_name = mysqli_real_escape_string($conn, trim($_POST['review-name']));\n        $user_email = mysqli_real_escape_string($conn, trim($_POST['review-email']));\n        $review_text = mysqli_real_escape_string($conn, trim($_POST['review-text']));\n        $rating = isset($_POST['rating']) ? intval($_POST['rating']) : 0;\n\n        if (empty($user_name) || empty($user_email) || empty($review_text) || $rating < 1 || $rating > 5) {\n            echo '<div class=\"error\">Please fill in all required fields and select a valid rating.</div>';\n            return;\n        }\n\n        // Insert review into database\n        $sql = \"INSERT INTO reviews (product_id, user_name, user_email, review_text, rating) \n                VALUES (?, ?, ?, ?, ?)\";\n        $stmt = mysqli_prepare($conn, $sql);\n        mysqli_stmt_bind_param($stmt, 'isssi', $product_id, $user_name, $user_email, $review_text, $rating);\n\n        if (mysqli_stmt_execute($stmt)) {\n            echo '<div class=\"success\">Thank you for your review!</div>';\n            // Refresh reviews section\n            display_reviews($product_id);\n        } else {\n            echo '<div class=\"error\">Error submitting review. Please try again later.</div>';\n        }\n    }\n}\n\n// Close database connection\nmysqli_close($conn);\n?>\n```\n\nThis code provides:\n\n1. A simple database connection and table creation\n\n2. `display_reviews()` function:\n   - Shows all reviews for a specific product\n   - Calculates and displays average rating\n   - Formats reviews with user name, review text, stars, and date\n\n3. `submit_review()` function:\n   - Handles new review submissions\n   - Validates input data\n   - Stores reviews in the database\n   - Shows success/error messages\n\nTo use this code:\n\n1. Create a form for submitting reviews:\n\n```html\n<form method=\"POST\" action=\"\">\n    <input type=\"text\" name=\"review-name\" placeholder=\"Your Name\" required>\n    <input type=\"email\" name=\"review-email\" placeholder=\"Your Email\" required>\n    <textarea name=\"review-text\" placeholder=\"Write your review...\" required></textarea>\n    \n    <div class=\"rating\">\n        <input type=\"radio\" name=\"rating\" value=\"5\" id=\"5-star\"><label for=\"5-star\">\u2605</label>\n        <input type=\"radio\" name=\"rating\" value=\"4\" id=\"4-star\"><label for=\"4-star\">\u2605</label>\n        <input type=\"radio\" name=\"rating\" value=\"3\" id=\"3-star\"><label for=\"3-star\">\u2605</label>\n        <input type=\"radio\" name=\"rating\" value=\"2\" id=\"2-star\"><label for=\"2-star\">\u2605</label>\n        <input type=\"radio\" name=\"rating\" value=\"1\" id=\"1-star\"><label for=\"1-star\">\u2605</label>\n    </div>\n\n    <button type=\"submit\" name=\"submit-review\">Submit Review</button>\n</form>\n```\n\n2. Display reviews by calling `display_reviews()` with the product ID:\n\n```php\n<?php display_reviews(1); ?>\n```\n\n3. Include Font Awesome for star icons in your HTML head:\n\n```html\n<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css\">\n```\n\nFeatures:\n- Stars are displayed using Font Awesome icons\n- Reviews include user name, email (hidden), review text, and rating\n- Average rating is calculated and displayed\n- Form validation for required fields\n- Basic SQL injection prevention\n\nYou can customize the styling by adding CSS to match your website's design.", "code_blocks": ["```php\n<?php\n// Database connection\n$host = 'localhost';\n$username = 'root';\n$password = '';\n$dbname = 'reviews_db';\n\n$conn = mysqli_connect($host, $username, $password, $dbname);\n\n// Create table if not exists\n$sql = \"CREATE TABLE IF NOT EXISTS reviews (\n    id INT AUTO_INCREMENT PRIMARY KEY,\n    product_id INT,\n    user_name VARCHAR(255),\n    user_email VARCHAR(255),\n    review_text TEXT,\n    rating INT,\n    review_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)\";\nmysqli_query($conn, $sql);\n\n// Function to display all reviews for a product\nfunction display_reviews($product_id) {\n    global $conn;\n    \n    // Get all reviews from database\n    $sql = \"SELECT * FROM reviews WHERE product_id = ? ORDER BY review_date DESC\";\n    $stmt = mysqli_prepare($conn, $sql);\n    mysqli_stmt_bind_param($stmt, 'i', $product_id);\n    mysqli_stmt_execute($stmt);\n    $result = mysqli_stmt_get_result($stmt);\n\n    if (mysqli_num_rows($result) > 0) {\n        // Calculate average rating\n        $total_ratings = 0;\n        $num_reviews = 0;\n\n        while ($row = mysqli_fetch_assoc($result)) {\n            $total_ratings += $row['rating'];\n            $num_reviews++;\n        }\n\n        $average_rating = $num_reviews > 0 ? number_format(($total_ratings / $num_reviews), 1) : 0;\n        \n        // Reset result pointer\n        mysqli_data_seek($result, 0);\n\n        echo '<div class=\"review-container\">';\n        echo \"<h3>Rating: $average_rating/5 ($num_reviews reviews)</h3>\";\n\n        while ($row = mysqli_fetch_assoc($result)) {\n            echo '<div class=\"review-item\">';\n            echo \"<h4>{$row['user_name']}</h4>\";\n            echo \"<p>{$row['review_text']}</p>\";\n            \n            // Display stars\n            $stars = str_repeat('<i class=\"fas fa-star\"></i>', $row['rating']);\n            $empty_stars = str_repeat('<i class=\"far fa-star\"></i>', 5 - $row['rating']);\n            echo \"<div class=\\\"stars\\\">{$stars}{$empty_stars}</div>\";\n            \n            echo \"<small>Posted on: \" . date('F j, Y', strtotime($row['review_date'])) . \"</small>\";\n            echo '</div>';\n        }\n        echo '</div>';\n    } else {\n        echo '<p>No reviews yet. Be the first to review this product!</p>';\n    }\n}\n\n// Function to submit a new review\nfunction submit_review() {\n    global $conn;\n\n    if (isset($_POST['submit-review'])) {\n        // Validate and sanitize input\n        $product_id = isset($_GET['id']) ? intval($_GET['id']) : 0;\n        $user_name = mysqli_real_escape_string($conn, trim($_POST['review-name']));\n        $user_email = mysqli_real_escape_string($conn, trim($_POST['review-email']));\n        $review_text = mysqli_real_escape_string($conn, trim($_POST['review-text']));\n        $rating = isset($_POST['rating']) ? intval($_POST['rating']) : 0;\n\n        if (empty($user_name) || empty($user_email) || empty($review_text) || $rating < 1 || $rating > 5) {\n            echo '<div class=\"error\">Please fill in all required fields and select a valid rating.</div>';\n            return;\n        }\n\n        // Insert review into database\n        $sql = \"INSERT INTO reviews (product_id, user_name, user_email, review_text, rating) \n                VALUES (?, ?, ?, ?, ?)\";\n        $stmt = mysqli_prepare($conn, $sql);\n        mysqli_stmt_bind_param($stmt, 'isssi', $product_id, $user_name, $user_email, $review_text, $rating);\n\n        if (mysqli_stmt_execute($stmt)) {\n            echo '<div class=\"success\">Thank you for your review!</div>';\n            // Refresh reviews section\n            display_reviews($product_id);\n        } else {\n            echo '<div class=\"error\">Error submitting review. Please try again later.</div>';\n        }\n    }\n}\n\n// Close database connection\nmysqli_close($conn);\n?>\n```", null, "```php\n<?php display_reviews(1); ?>\n```", null]}
