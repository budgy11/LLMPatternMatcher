{"prompt": "Create a user review function using php", "llm_output": "<think>\nOkay, I need to create a user review function using PHP. Let me think about how to approach this.\n\nFirst, the function should allow users to submit reviews with a rating and comments. So, I'll need an HTML form where users can input their name, select a star rating, write comments, and submit it. That makes sense.\n\nNext, the reviews need to be stored somewhere. Using a database is the way to go for persistence. I should set up a MySQL table to store each review's details like id, user_id (if logged in), username, rating, comment, date, and status. The status can help moderate reviews before display.\n\nNow, connecting PHP to the database. I'll use mysqli_connect to establish a connection with the database. I need to make sure to include the correct credentials\u2014hostname, username, password, and database name.\n\nHandling form submission is crucial. When the user submits the review, I'll check if the submit button was pressed. Then, I'll retrieve the input values using $_POST. I should sanitize these inputs to prevent SQL injection. Using mysqli_real_escape_string will help with that.\n\nInserting the data into the database requires a query. I'll prepare an INSERT statement with placeholders for each field and execute it after binding the parameters. This helps prevent SQL injection as well.\n\nAfter submission, redirecting the user back to the review page with a success message is good feedback. I can use header(\"Location: ...\") for that.\n\nDisplaying the reviews involves fetching them from the database. I'll write a SELECT query to get all approved reviews and loop through each result to display them on the page. Each review should show the username, rating stars, comment, and date.\n\nFor the star rating display, I can create a function that generates HTML stars based on the rating value. A 5-star system makes sense, so if a user rates 4/5, four stars are filled, and one is empty.\n\nModeration is another aspect. Admins should be able to approve or delete reviews. So, I'll include links for these actions in the display loop. When an admin clicks approve, it updates the status in the database. Deleting removes the review entirely.\n\nI should also handle cases where there are no reviews yet. Displaying a message like \"No reviews yet\" keeps the user informed.\n\nSecurity considerations: Sanitizing inputs, using prepared statements, and ensuring that only admins can moderate reviews by checking admin rights before allowing those actions.\n\nTesting each part step by step is important. Make sure the form submission works, data is stored correctly, reviews display properly, and moderation links function as intended without errors.\n\nPutting it all together, I'll structure the PHP script with sections for database connection, handling submission, fetching and displaying reviews, and functions for stars and status links. Including error handling and proper redirects will make the user experience smoother.\n</think>\n\nHere's an example of a user review system using PHP. This function allows users to submit and view product/service reviews:\n\n```php\n<?php\n// Database configuration\n$host = 'localhost';\n$username_db = 'root';\n$password_db = '';\n$database = 'reviews_db';\n\n// Connect to the database\n$conn = mysqli_connect($host, $username_db, $password_db, $database);\nif (!$conn) {\n    die(\"Connection failed: \" . mysqli_connect_error());\n}\n\n// Function to create review form and display reviews\nfunction userReviewSystem() {\n    global $conn;\n    \n    // Get all reviews from the database\n    $reviewsQuery = \"SELECT * FROM reviews WHERE status = 'approved' ORDER BY date DESC\";\n    $reviewsResult = mysqli_query($conn, $reviewsQuery);\n    \n    // Display review form\n    echo '<div class=\"review-form\">';\n    echo '<h2>Submit a Review</h2>';\n    echo '<form action=\"' . htmlspecialchars($_SERVER[\"PHP_SELF\"]) . '\" method=\"post\">';\n    echo 'Name: <input type=\"text\" name=\"username\" required><br>';\n    echo 'Rating: ';\n    for ($i = 1; $i <= 5; $i++) {\n        echo \"<input type='radio' name='rating' value='$i'>\u2605 \";\n    }\n    echo '<br>Comment: <textarea name=\"comment\" rows=\"4\" cols=\"50\" required></textarea><br>';\n    echo '<input type=\"submit\" name=\"submit_review\" value=\"Submit Review\">';\n    echo '</form>';\n    echo '</div>';\n    \n    // Display existing reviews\n    if (mysqli_num_rows($reviewsResult) > 0) {\n        echo '<h2>Customer Reviews</h2>';\n        while ($row = mysqli_fetch_assoc($reviewsResult)) {\n            $username = $row['username'];\n            $rating = $row['rating'];\n            $comment = $row['comment'];\n            $date = date('F j, Y', strtotime($row['date']));\n            \n            echo '<div class=\"review\">';\n            echo \"<h3>$username</h3>\";\n            displayStars($rating);\n            echo \"<p>Rating: $rating/5</p>\";\n            echo \"<p>$comment</p>\";\n            echo \"<small>Posted on: $date</small>\";\n            echo '</div>';\n        }\n    } else {\n        echo '<p>No reviews yet.</p>';\n    }\n}\n\n// Function to display stars based on rating\nfunction displayStars($rating) {\n    $fullStars = floor($rating);\n    $hasHalfStar = ($rating - $fullStars) >= 0.5;\n    \n    for ($i = 1; $i <= $fullStars; $i++) {\n        echo '\u2605 ';\n    }\n    if ($hasHalfStar) {\n        echo '\u2be8 '; // Half star\n    }\n    for ($i = $fullStars + ($hasHalfStar ? 1 : 0); $i < 5; $i++) {\n        echo '\u2606 '; // Empty star\n    }\n}\n\n// Handle review submission\nif (isset($_POST['submit_review'])) {\n    global $conn;\n    \n    // Sanitize input data\n    $username = mysqli_real_escape_string($conn, $_POST['username']);\n    $rating = filter_var($_POST['rating'], FILTER_VALIDATE_INT);\n    $comment = mysqli_real_escape_string($conn, $_POST['comment']);\n    \n    if ($rating < 1 || $rating > 5) {\n        die(\"Invalid rating value.\");\n    }\n    \n    // Insert review into database\n    $stmt = $conn->prepare(\"INSERT INTO reviews (username, rating, comment) VALUES (?, ?, ?)\");\n    $stmt->bind_param(\"sii\", $username, $rating, $comment);\n    if ($stmt->execute()) {\n        header(\"Location: \" . $_SERVER['PHP_SELF']);\n        exit();\n    } else {\n        die(\"Error submitting review: \" . $stmt->error);\n    }\n}\n\n// Moderate reviews (approve/delete)\nif (isset($_GET['action']) && isset($_GET['review_id'])) {\n    global $conn;\n    $reviewId = mysqli_real_escape_string($conn, $_GET['review_id']);\n    \n    if ($_GET['action'] == 'approve') {\n        $stmt = $conn->prepare(\"UPDATE reviews SET status='approved' WHERE id=?\");\n        $stmt->bind_param(\"i\", $reviewId);\n        if ($stmt->execute()) {\n            header(\"Location: \" . $_SERVER['PHP_SELF']);\n            exit();\n        }\n    } elseif ($_GET['action'] == 'delete') {\n        $stmt = $conn->prepare(\"DELETE FROM reviews WHERE id=?\");\n        $stmt->bind_param(\"i\", $reviewId);\n        if ($stmt->execute()) {\n            header(\"Location: \" . $_SERVER['PHP_SELF']);\n            exit();\n        }\n    }\n}\n\n// Call the review system function\nuserReviewSystem();\n\n// Close database connection\nmysqli_close($conn);\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Product Review System</title>\n    <style>\n        .review {\n            margin: 20px;\n            padding: 15px;\n            border: 1px solid #ddd;\n            border-radius: 5px;\n        }\n        .review-form {\n            margin-bottom: 30px;\n            padding: 20px;\n            background-color: #f5f5f5;\n            border-radius: 5px;\n        }\n    </style>\n</head>\n<body>\n    <h1>Product Review System</h1>\n    \n    <?php userReviewSystem(); ?>\n\n    <!-- Moderation links -->\n    <?php if (isset($_SESSION['admin']) && $_SESSION['admin'] == true) { ?>\n        <div style=\"margin-top: 20px;\">\n            <h3>Moderate Reviews</h3>\n            <?php\n                $moderationQuery = \"SELECT * FROM reviews WHERE status != 'approved'\";\n                $modResult = mysqli_query($conn, $moderationQuery);\n                \n                if (mysqli_num_rows($modResult) > 0) {\n                    while ($row = mysqli_fetch_assoc($modResult)) {\n                        echo \"<div class='review'>\";\n                        echo \"<h3>{$row['username']}</h3>\";\n                        displayStars($row['rating']);\n                        echo \"<p>{$row['comment']}</p>\";\n                        echo \"<a href='?action=approve&review_id={$row['id']}'>Approve</a> | \";\n                        echo \"<a href='?action=delete&review_id={$row['id']}'>Delete</a>\";\n                        echo \"</div>\";\n                    }\n                } else {\n                    echo \"No pending reviews.\";\n                }\n            ?>\n        </div>\n    <?php } ?>\n\n</body>\n</html>\n```\n\nThis code creates a comprehensive review system with the following features:\n\n1. Users can submit reviews with:\n   - Name\n   - Rating (1-5 stars)\n   - Comment\n\n2. Reviews are stored in a MySQL database.\n\n3. All approved reviews are displayed to users.\n\n4. Review moderation features for admins:\n   - Approve pending reviews\n   - Delete unwanted reviews\n\n5. Includes:\n   - Input validation and sanitization\n   - SQL injection prevention\n   - Error handling\n   - Responsive design elements\n\nTo use this code:\n\n1. Create a MySQL database named 'reviews_db'\n\n2. Create a table called 'reviews' with the following structure:\n\n```sql\nCREATE TABLE reviews (\n    id INT AUTO_INCREMENT PRIMARY KEY,\n    username VARCHAR(255),\n    rating INT NOT NULL,\n    comment TEXT NOT NULL,\n    date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    status ENUM('approved', 'pending') DEFAULT 'pending'\n);\n```\n\n3. Update the database connection details at the top of the file\n\n4. To access moderation features, you'll need to set an admin session:\n\n```php\n// Add this somewhere before calling userReviewSystem()\nif (isset($_SESSION['admin'])) {\n    $_SESSION['admin'] = true;\n}\n```\n\nTo improve security:\n\n1. Add proper error handling\n2. Implement CAPTCHA protection for review submissions\n3. Add more validation on the client and server side\n4. Use prepared statements for all database queries\n5. Store user sessions securely\n\nYou can customize this further by:\n- Adding user authentication\n- Including product IDs for reviews specific to products\n- Adding sorting/filtering options for reviews\n- Implementing pagination for large numbers of reviews", "code_blocks": ["```php\n<?php\n// Database configuration\n$host = 'localhost';\n$username_db = 'root';\n$password_db = '';\n$database = 'reviews_db';\n\n// Connect to the database\n$conn = mysqli_connect($host, $username_db, $password_db, $database);\nif (!$conn) {\n    die(\"Connection failed: \" . mysqli_connect_error());\n}\n\n// Function to create review form and display reviews\nfunction userReviewSystem() {\n    global $conn;\n    \n    // Get all reviews from the database\n    $reviewsQuery = \"SELECT * FROM reviews WHERE status = 'approved' ORDER BY date DESC\";\n    $reviewsResult = mysqli_query($conn, $reviewsQuery);\n    \n    // Display review form\n    echo '<div class=\"review-form\">';\n    echo '<h2>Submit a Review</h2>';\n    echo '<form action=\"' . htmlspecialchars($_SERVER[\"PHP_SELF\"]) . '\" method=\"post\">';\n    echo 'Name: <input type=\"text\" name=\"username\" required><br>';\n    echo 'Rating: ';\n    for ($i = 1; $i <= 5; $i++) {\n        echo \"<input type='radio' name='rating' value='$i'>\u2605 \";\n    }\n    echo '<br>Comment: <textarea name=\"comment\" rows=\"4\" cols=\"50\" required></textarea><br>';\n    echo '<input type=\"submit\" name=\"submit_review\" value=\"Submit Review\">';\n    echo '</form>';\n    echo '</div>';\n    \n    // Display existing reviews\n    if (mysqli_num_rows($reviewsResult) > 0) {\n        echo '<h2>Customer Reviews</h2>';\n        while ($row = mysqli_fetch_assoc($reviewsResult)) {\n            $username = $row['username'];\n            $rating = $row['rating'];\n            $comment = $row['comment'];\n            $date = date('F j, Y', strtotime($row['date']));\n            \n            echo '<div class=\"review\">';\n            echo \"<h3>$username</h3>\";\n            displayStars($rating);\n            echo \"<p>Rating: $rating/5</p>\";\n            echo \"<p>$comment</p>\";\n            echo \"<small>Posted on: $date</small>\";\n            echo '</div>';\n        }\n    } else {\n        echo '<p>No reviews yet.</p>';\n    }\n}\n\n// Function to display stars based on rating\nfunction displayStars($rating) {\n    $fullStars = floor($rating);\n    $hasHalfStar = ($rating - $fullStars) >= 0.5;\n    \n    for ($i = 1; $i <= $fullStars; $i++) {\n        echo '\u2605 ';\n    }\n    if ($hasHalfStar) {\n        echo '\u2be8 '; // Half star\n    }\n    for ($i = $fullStars + ($hasHalfStar ? 1 : 0); $i < 5; $i++) {\n        echo '\u2606 '; // Empty star\n    }\n}\n\n// Handle review submission\nif (isset($_POST['submit_review'])) {\n    global $conn;\n    \n    // Sanitize input data\n    $username = mysqli_real_escape_string($conn, $_POST['username']);\n    $rating = filter_var($_POST['rating'], FILTER_VALIDATE_INT);\n    $comment = mysqli_real_escape_string($conn, $_POST['comment']);\n    \n    if ($rating < 1 || $rating > 5) {\n        die(\"Invalid rating value.\");\n    }\n    \n    // Insert review into database\n    $stmt = $conn->prepare(\"INSERT INTO reviews (username, rating, comment) VALUES (?, ?, ?)\");\n    $stmt->bind_param(\"sii\", $username, $rating, $comment);\n    if ($stmt->execute()) {\n        header(\"Location: \" . $_SERVER['PHP_SELF']);\n        exit();\n    } else {\n        die(\"Error submitting review: \" . $stmt->error);\n    }\n}\n\n// Moderate reviews (approve/delete)\nif (isset($_GET['action']) && isset($_GET['review_id'])) {\n    global $conn;\n    $reviewId = mysqli_real_escape_string($conn, $_GET['review_id']);\n    \n    if ($_GET['action'] == 'approve') {\n        $stmt = $conn->prepare(\"UPDATE reviews SET status='approved' WHERE id=?\");\n        $stmt->bind_param(\"i\", $reviewId);\n        if ($stmt->execute()) {\n            header(\"Location: \" . $_SERVER['PHP_SELF']);\n            exit();\n        }\n    } elseif ($_GET['action'] == 'delete') {\n        $stmt = $conn->prepare(\"DELETE FROM reviews WHERE id=?\");\n        $stmt->bind_param(\"i\", $reviewId);\n        if ($stmt->execute()) {\n            header(\"Location: \" . $_SERVER['PHP_SELF']);\n            exit();\n        }\n    }\n}\n\n// Call the review system function\nuserReviewSystem();\n\n// Close database connection\nmysqli_close($conn);\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Product Review System</title>\n    <style>\n        .review {\n            margin: 20px;\n            padding: 15px;\n            border: 1px solid #ddd;\n            border-radius: 5px;\n        }\n        .review-form {\n            margin-bottom: 30px;\n            padding: 20px;\n            background-color: #f5f5f5;\n            border-radius: 5px;\n        }\n    </style>\n</head>\n<body>\n    <h1>Product Review System</h1>\n    \n    <?php userReviewSystem(); ?>\n\n    <!-- Moderation links -->\n    <?php if (isset($_SESSION['admin']) && $_SESSION['admin'] == true) { ?>\n        <div style=\"margin-top: 20px;\">\n            <h3>Moderate Reviews</h3>\n            <?php\n                $moderationQuery = \"SELECT * FROM reviews WHERE status != 'approved'\";\n                $modResult = mysqli_query($conn, $moderationQuery);\n                \n                if (mysqli_num_rows($modResult) > 0) {\n                    while ($row = mysqli_fetch_assoc($modResult)) {\n                        echo \"<div class='review'>\";\n                        echo \"<h3>{$row['username']}</h3>\";\n                        displayStars($row['rating']);\n                        echo \"<p>{$row['comment']}</p>\";\n                        echo \"<a href='?action=approve&review_id={$row['id']}'>Approve</a> | \";\n                        echo \"<a href='?action=delete&review_id={$row['id']}'>Delete</a>\";\n                        echo \"</div>\";\n                    }\n                } else {\n                    echo \"No pending reviews.\";\n                }\n            ?>\n        </div>\n    <?php } ?>\n\n</body>\n</html>\n```", null, "```php\n// Add this somewhere before calling userReviewSystem()\nif (isset($_SESSION['admin'])) {\n    $_SESSION['admin'] = true;\n}\n```"]}
