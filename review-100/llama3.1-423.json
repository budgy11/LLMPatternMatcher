{"prompt": "Create a user review function using php", "llm_output": "Here is an example of a user review function in PHP:\n\n**Database Schema**\n```php\nCREATE TABLE users (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  username VARCHAR(255) NOT NULL,\n  email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE products (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  name VARCHAR(255) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE reviews (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  user_id INT NOT NULL,\n  product_id INT NOT NULL,\n  rating TINYINT NOT NULL,\n  review_text TEXT,\n  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n  FOREIGN KEY (user_id) REFERENCES users(id),\n  FOREIGN KEY (product_id) REFERENCES products(id)\n);\n```\n\n**User Review Function**\n```php\n<?php\n\nfunction add_review($user_id, $product_id, $rating, $review_text = '') {\n  global $db;\n\n  // Validate user and product IDs\n  if (!is_numeric($user_id) || !is_numeric($product_id)) {\n    return array('error' => 'Invalid user or product ID');\n  }\n\n  // Check if review already exists for this user-product pair\n  $existing_review = get_review_by_user_product($db, $user_id, $product_id);\n  if ($existing_review) {\n    return array('error' => 'Review already exists');\n  }\n\n  // Add new review to database\n  $query = \"INSERT INTO reviews (user_id, product_id, rating, review_text)\n            VALUES (:user_id, :product_id, :rating, :review_text)\";\n  $stmt = $db->prepare($query);\n  $stmt->execute(array(\n    ':user_id' => $user_id,\n    ':product_id' => $product_id,\n    ':rating' => $rating,\n    ':review_text' => $review_text\n  ));\n\n  // Return review ID for further use\n  return array('success' => true, 'review_id' => $db->lastInsertId());\n}\n\nfunction get_review_by_user_product($db, $user_id, $product_id) {\n  $query = \"SELECT * FROM reviews WHERE user_id = :user_id AND product_id = :product_id\";\n  $stmt = $db->prepare($query);\n  $stmt->execute(array(':user_id' => $user_id, ':product_id' => $product_id));\n  return $stmt->fetch();\n}\n\nfunction get_reviews_by_product($db, $product_id) {\n  $query = \"SELECT * FROM reviews WHERE product_id = :product_id ORDER BY created_at DESC\";\n  $stmt = $db->prepare($query);\n  $stmt->execute(array(':product_id' => $product_id));\n  return $stmt->fetchAll();\n}\n\nfunction get_reviews_by_user($db, $user_id) {\n  $query = \"SELECT * FROM reviews WHERE user_id = :user_id ORDER BY created_at DESC\";\n  $stmt = $db->prepare($query);\n  $stmt->execute(array(':user_id' => $user_id));\n  return $stmt->fetchAll();\n}\n\nfunction update_review_rating($review_id, $new_rating) {\n  global $db;\n\n  // Validate review ID and new rating\n  if (!is_numeric($review_id) || !is_numeric($new_rating)) {\n    return array('error' => 'Invalid review ID or new rating');\n  }\n\n  // Update review in database\n  $query = \"UPDATE reviews SET rating = :rating WHERE id = :id\";\n  $stmt = $db->prepare($query);\n  $stmt->execute(array(':rating' => $new_rating, ':id' => $review_id));\n\n  return array('success' => true);\n}\n\nfunction delete_review($review_id) {\n  global $db;\n\n  // Validate review ID\n  if (!is_numeric($review_id)) {\n    return array('error' => 'Invalid review ID');\n  }\n\n  // Delete review from database\n  $query = \"DELETE FROM reviews WHERE id = :id\";\n  $stmt = $db->prepare($query);\n  $stmt->execute(array(':id' => $review_id));\n\n  return array('success' => true);\n}\n\n?>\n```\nThis code defines five functions:\n\n1. `add_review()`: Adds a new review to the database for a given user and product.\n2. `get_review_by_user_product()`: Retrieves a review from the database by user ID and product ID.\n3. `get_reviews_by_product()`: Retrieves all reviews for a given product, sorted in descending order by creation time.\n4. `get_reviews_by_user()`: Retrieves all reviews for a given user, sorted in descending order by creation time.\n5. `update_review_rating()`: Updates the rating of an existing review in the database.\n6. `delete_review()`: Deletes a review from the database.\n\nThese functions can be used to interact with the database and manage reviews.", "code_blocks": ["```php\nCREATE TABLE users (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  username VARCHAR(255) NOT NULL,\n  email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE products (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  name VARCHAR(255) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE reviews (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  user_id INT NOT NULL,\n  product_id INT NOT NULL,\n  rating TINYINT NOT NULL,\n  review_text TEXT,\n  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n  FOREIGN KEY (user_id) REFERENCES users(id),\n  FOREIGN KEY (product_id) REFERENCES products(id)\n);\n```", "```php\n<?php\n\nfunction add_review($user_id, $product_id, $rating, $review_text = '') {\n  global $db;\n\n  // Validate user and product IDs\n  if (!is_numeric($user_id) || !is_numeric($product_id)) {\n    return array('error' => 'Invalid user or product ID');\n  }\n\n  // Check if review already exists for this user-product pair\n  $existing_review = get_review_by_user_product($db, $user_id, $product_id);\n  if ($existing_review) {\n    return array('error' => 'Review already exists');\n  }\n\n  // Add new review to database\n  $query = \"INSERT INTO reviews (user_id, product_id, rating, review_text)\n            VALUES (:user_id, :product_id, :rating, :review_text)\";\n  $stmt = $db->prepare($query);\n  $stmt->execute(array(\n    ':user_id' => $user_id,\n    ':product_id' => $product_id,\n    ':rating' => $rating,\n    ':review_text' => $review_text\n  ));\n\n  // Return review ID for further use\n  return array('success' => true, 'review_id' => $db->lastInsertId());\n}\n\nfunction get_review_by_user_product($db, $user_id, $product_id) {\n  $query = \"SELECT * FROM reviews WHERE user_id = :user_id AND product_id = :product_id\";\n  $stmt = $db->prepare($query);\n  $stmt->execute(array(':user_id' => $user_id, ':product_id' => $product_id));\n  return $stmt->fetch();\n}\n\nfunction get_reviews_by_product($db, $product_id) {\n  $query = \"SELECT * FROM reviews WHERE product_id = :product_id ORDER BY created_at DESC\";\n  $stmt = $db->prepare($query);\n  $stmt->execute(array(':product_id' => $product_id));\n  return $stmt->fetchAll();\n}\n\nfunction get_reviews_by_user($db, $user_id) {\n  $query = \"SELECT * FROM reviews WHERE user_id = :user_id ORDER BY created_at DESC\";\n  $stmt = $db->prepare($query);\n  $stmt->execute(array(':user_id' => $user_id));\n  return $stmt->fetchAll();\n}\n\nfunction update_review_rating($review_id, $new_rating) {\n  global $db;\n\n  // Validate review ID and new rating\n  if (!is_numeric($review_id) || !is_numeric($new_rating)) {\n    return array('error' => 'Invalid review ID or new rating');\n  }\n\n  // Update review in database\n  $query = \"UPDATE reviews SET rating = :rating WHERE id = :id\";\n  $stmt = $db->prepare($query);\n  $stmt->execute(array(':rating' => $new_rating, ':id' => $review_id));\n\n  return array('success' => true);\n}\n\nfunction delete_review($review_id) {\n  global $db;\n\n  // Validate review ID\n  if (!is_numeric($review_id)) {\n    return array('error' => 'Invalid review ID');\n  }\n\n  // Delete review from database\n  $query = \"DELETE FROM reviews WHERE id = :id\";\n  $stmt = $db->prepare($query);\n  $stmt->execute(array(':id' => $review_id));\n\n  return array('success' => true);\n}\n\n?>\n```"]}
