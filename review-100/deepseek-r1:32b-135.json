{"prompt": "Create a user review function using php", "llm_output": "<think>\nOkay, the user wants to create a user review function using PHP. I need to figure out what that entails.\n\nFirst, I should consider the main components of a review system. There's capturing user input for reviews, storing them in a database, displaying these reviews on a webpage, and allowing users to rate the product or service.\n\nSo, I'll start by outlining the steps: creating a form for submission, handling the form data with PHP, connecting to a MySQL database to store the reviews, retrieving and displaying them, and adding some validation to ensure everything works smoothly.\n\nI should explain how to set up the HTML form. It needs fields for the user's name, review text, and a rating selection. Using a dropdown or radio buttons makes sense here. I'll include hidden input for the product ID so it knows which item the review is for.\n\nNext, the PHP processing part. I need to sanitize the inputs to prevent SQL injection and XSS attacks. Then, connect to the MySQL database using mysqli to insert the review into a table. Handling errors is important too, so the user gets feedback if something goes wrong.\n\nDisplaying the reviews involves querying the database for all entries related to a specific product. Loop through each result and format them on the page. Including the user's name, their rating with stars, the review text, and the date it was posted makes sense.\n\nI should also think about security best practices. Sanitizing inputs, using prepared statements, validating form data, and ensuring proper error handling are all crucial to make this function secure and reliable.\n\nPutting it all together, I'll write out the code examples for each part: the HTML form, the PHP processing script, and the display section. I'll make sure to explain each step so the user understands how everything works.\n\nFinally, I'll suggest possible enhancements like sorting reviews by date or rating, allowing users to edit or delete their own reviews, adding a thank you message after submission, and implementing a report feature for inappropriate content.\n</think>\n\nHere's an example of a user review function in PHP. This will allow users to submit reviews, store them in a database, and display the reviews on a webpage:\n\n```php\n<?php\n// Database connection details\n$host = 'localhost';\n$username = 'root';\n$password = '';\n$dbname = 'reviews_db';\n\n// Create database connection\n$conn = mysqli_connect($host, $username, $password, $dbname);\nif (!$conn) {\n    die(\"Connection failed: \" . mysqli_connect_error());\n}\n\n// Handle review submission\nif ($_SERVER['REQUEST_METHOD'] == 'POST' && isset($_POST['submit_review'])) {\n    // Sanitize input data\n    $user_name = htmlspecialchars(mysqli_real_escape_string($conn, $_POST['user_name']));\n    $review_text = htmlspecialchars(mysqli_real_escape_string($conn, $_POST['review_text']));\n    $rating = intval($_POST['rating']);\n    $product_id = intval($_POST['product_id']);\n\n    // Insert review into database\n    $sql = \"INSERT INTO reviews (product_id, user_name, rating, review_text, created_at) \n            VALUES ('$product_id', '$user_name', '$rating', '$review_text', NOW())\";\n\n    if (mysqli_query($conn, $sql)) {\n        echo \"<p style='color: green'>Thank you for your review!</p>\";\n    } else {\n        echo \"Error: \" . mysqli_error($conn);\n    }\n}\n\n// Get reviews for product\nfunction get_reviews($product_id) {\n    global $conn;\n    \n    $sql = \"SELECT * FROM reviews WHERE product_id = '$product_id' ORDER BY created_at DESC\";\n    $result = mysqli_query($conn, $sql);\n    \n    if (mysqli_num_rows($result) > 0) {\n        while ($row = mysqli_fetch_assoc($result)) {\n            display_review($row);\n        }\n    } else {\n        echo \"<p>No reviews yet. Be the first to review this product!</p>\";\n    }\n}\n\n// Display individual review\nfunction display_review($review_data) {\n    $stars = str_repeat(\"\u2605\", $review_data['rating']) . str_repeat(\"\u2606\", 5 - $review_data['rating']);\n    \n    echo \"<div class='review-box'>\";\n    echo \"<h3>By \" . $review_data['user_name'] . \"</h3>\";\n    echo \"<p class='stars'>\" . $stars . \"</p>\";\n    echo \"<p>\" . $review_data['review_text'] . \"</p>\";\n    echo \"<small>Posted on: \" . date('F j, Y', strtotime($review_data['created_at'])) . \"</small>\";\n    echo \"</div>\";\n}\n?>\n\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>User Reviews</title>\n    <style>\n        .rating {\n            margin: 10px 0;\n        }\n        \n        .stars {\n            color: #ffd700;\n            font-size: 24px;\n        }\n        \n        .review-box {\n            border: 1px solid #ddd;\n            padding: 15px;\n            margin-bottom: 15px;\n            background-color: #f9f9f9;\n        }\n    </style>\n</head>\n<body>\n\n<h1>Product Reviews</h1>\n\n<!-- Review submission form -->\n<form method=\"post\" action=\"<?php echo $_SERVER['PHP_SELF']; ?>\">\n    <input type=\"hidden\" name=\"product_id\" value=\"1\">\n    \n    <div class=\"rating\">\n        <label for=\"rating\">Rating:</label>\n        <select id=\"rating\" name=\"rating\" required>\n            <option value=\"\">Select Rating</option>\n            <option value=\"5\">\u2605\u2605\u2605\u2605\u2605 - Excellent</option>\n            <option value=\"4\">\u2605\u2605\u2605\u2605\u2606 - Very Good</option>\n            <option value=\"3\">\u2605\u2605\u2605\u2606\u2606 - Average</option>\n            <option value=\"2\">\u2605\u2605\u2606\u2606\u2606 - Poor</option>\n            <option value=\"1\">\u2605\u2606\u2606\u2606\u2606 - Terrible</option>\n        </select>\n    </div>\n\n    <div>\n        <label for=\"user_name\">Name:</label><br>\n        <input type=\"text\" id=\"user_name\" name=\"user_name\" required maxlength=\"50\">\n    </div>\n\n    <div>\n        <label for=\"review_text\">Review:</label><br>\n        <textarea id=\"review_text\" name=\"review_text\" rows=\"4\" cols=\"50\" required></textarea>\n    </div>\n\n    <input type=\"submit\" name=\"submit_review\" value=\"Submit Review\">\n</form>\n\n<!-- Display existing reviews -->\n<?php\n$product_id = 1; // Example product ID\nget_reviews($product_id);\n?>\n\n</body>\n</html>\n```\n\nThis code provides the following features:\n\n1. A review submission form with:\n   - Rating selection (1-5 stars)\n   - User name input\n   - Review text area\n\n2. Reviews are stored in a MySQL database table (`reviews`) with columns:\n   - id (auto-incremented)\n   - product_id (to associate reviews with specific products)\n   - user_name\n   - rating\n   - review_text\n   - created_at (timestamp)\n\n3. Display of existing reviews with:\n   - User name\n   - Star rating\n   - Review text\n   - Date posted\n\n4. Basic security measures including:\n   - Input sanitization\n   - SQL injection prevention\n   - XSS protection\n\nTo use this code:\n\n1. Set up your database with a table named `reviews` (see schema below)\n2. Modify the database connection details at the top of the file\n3. Adjust the product_id as needed for different products\n4. Customize the styling in the CSS section\n\nDatabase schema example:\n\n```sql\nCREATE TABLE reviews (\n    id INT AUTO_INCREMENT PRIMARY KEY,\n    product_id INT NOT NULL,\n    user_name VARCHAR(50) NOT NULL,\n    rating TINYINT NOT NULL CHECK (rating >= 1 AND rating <= 5),\n    review_text TEXT NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n```\n\nEnhancements you might want to add:\n\n- Review validation (e.g., minimum length for reviews)\n- User authentication system\n- Ability to edit or delete reviews\n- Sorting reviews by date, rating, or popularity\n- Pagination for long lists of reviews\n- Report inappropriate content feature\n\nRemember to:\n- Always validate user input\n- Use prepared statements or parameterized queries for database interactions\n- Implement CSRF protection in production environments\n- Add proper error handling and logging", "code_blocks": ["```php\n<?php\n// Database connection details\n$host = 'localhost';\n$username = 'root';\n$password = '';\n$dbname = 'reviews_db';\n\n// Create database connection\n$conn = mysqli_connect($host, $username, $password, $dbname);\nif (!$conn) {\n    die(\"Connection failed: \" . mysqli_connect_error());\n}\n\n// Handle review submission\nif ($_SERVER['REQUEST_METHOD'] == 'POST' && isset($_POST['submit_review'])) {\n    // Sanitize input data\n    $user_name = htmlspecialchars(mysqli_real_escape_string($conn, $_POST['user_name']));\n    $review_text = htmlspecialchars(mysqli_real_escape_string($conn, $_POST['review_text']));\n    $rating = intval($_POST['rating']);\n    $product_id = intval($_POST['product_id']);\n\n    // Insert review into database\n    $sql = \"INSERT INTO reviews (product_id, user_name, rating, review_text, created_at) \n            VALUES ('$product_id', '$user_name', '$rating', '$review_text', NOW())\";\n\n    if (mysqli_query($conn, $sql)) {\n        echo \"<p style='color: green'>Thank you for your review!</p>\";\n    } else {\n        echo \"Error: \" . mysqli_error($conn);\n    }\n}\n\n// Get reviews for product\nfunction get_reviews($product_id) {\n    global $conn;\n    \n    $sql = \"SELECT * FROM reviews WHERE product_id = '$product_id' ORDER BY created_at DESC\";\n    $result = mysqli_query($conn, $sql);\n    \n    if (mysqli_num_rows($result) > 0) {\n        while ($row = mysqli_fetch_assoc($result)) {\n            display_review($row);\n        }\n    } else {\n        echo \"<p>No reviews yet. Be the first to review this product!</p>\";\n    }\n}\n\n// Display individual review\nfunction display_review($review_data) {\n    $stars = str_repeat(\"\u2605\", $review_data['rating']) . str_repeat(\"\u2606\", 5 - $review_data['rating']);\n    \n    echo \"<div class='review-box'>\";\n    echo \"<h3>By \" . $review_data['user_name'] . \"</h3>\";\n    echo \"<p class='stars'>\" . $stars . \"</p>\";\n    echo \"<p>\" . $review_data['review_text'] . \"</p>\";\n    echo \"<small>Posted on: \" . date('F j, Y', strtotime($review_data['created_at'])) . \"</small>\";\n    echo \"</div>\";\n}\n?>\n\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>User Reviews</title>\n    <style>\n        .rating {\n            margin: 10px 0;\n        }\n        \n        .stars {\n            color: #ffd700;\n            font-size: 24px;\n        }\n        \n        .review-box {\n            border: 1px solid #ddd;\n            padding: 15px;\n            margin-bottom: 15px;\n            background-color: #f9f9f9;\n        }\n    </style>\n</head>\n<body>\n\n<h1>Product Reviews</h1>\n\n<!-- Review submission form -->\n<form method=\"post\" action=\"<?php echo $_SERVER['PHP_SELF']; ?>\">\n    <input type=\"hidden\" name=\"product_id\" value=\"1\">\n    \n    <div class=\"rating\">\n        <label for=\"rating\">Rating:</label>\n        <select id=\"rating\" name=\"rating\" required>\n            <option value=\"\">Select Rating</option>\n            <option value=\"5\">\u2605\u2605\u2605\u2605\u2605 - Excellent</option>\n            <option value=\"4\">\u2605\u2605\u2605\u2605\u2606 - Very Good</option>\n            <option value=\"3\">\u2605\u2605\u2605\u2606\u2606 - Average</option>\n            <option value=\"2\">\u2605\u2605\u2606\u2606\u2606 - Poor</option>\n            <option value=\"1\">\u2605\u2606\u2606\u2606\u2606 - Terrible</option>\n        </select>\n    </div>\n\n    <div>\n        <label for=\"user_name\">Name:</label><br>\n        <input type=\"text\" id=\"user_name\" name=\"user_name\" required maxlength=\"50\">\n    </div>\n\n    <div>\n        <label for=\"review_text\">Review:</label><br>\n        <textarea id=\"review_text\" name=\"review_text\" rows=\"4\" cols=\"50\" required></textarea>\n    </div>\n\n    <input type=\"submit\" name=\"submit_review\" value=\"Submit Review\">\n</form>\n\n<!-- Display existing reviews -->\n<?php\n$product_id = 1; // Example product ID\nget_reviews($product_id);\n?>\n\n</body>\n</html>\n```", null]}
