{"prompt": "Create a user review function using php", "llm_output": "<think>\nOkay, I need to create a PHP function for user reviews. Let me think about what this function should do.\n\nFirst, it needs to allow users to submit their reviews. So, I'll need a form with fields like name, email, rating, and comment. That makes sense because collecting basic info helps in displaying the review and also prevents spam by requiring an email.\n\nNext, the function should store these reviews somewhere. Since PHP is server-side, using a database is the way to go. I'll probably use MySQL because it's widely supported. So, I'll need to connect to a database and insert the submitted data into a table. Oh, right, I should sanitize the inputs to prevent SQL injection and XSS attacks. Using prepared statements with mysqli would be good for that.\n\nThen, displaying the reviews is important. The function should fetch all stored reviews from the database and display them on the page. Each review should show the user's name, email (maybe masked for privacy), rating as stars, the comment, and the date it was submitted. I'll need to loop through each review and format them accordingly.\n\nHandling errors is something I shouldn't forget. If there's an issue submitting the review, like missing fields or database errors, the function should inform the user. Maybe displaying error messages above the form would work.\n\nAlso, security measures are crucial. Sanitizing inputs, using prepared statements, and escaping output when displaying can help prevent common vulnerabilities. Plus, adding a CAPTCHA could reduce spam, but that might be an extra step depending on requirements.\n\nPutting it all together, I'll structure the PHP script to handle both form submission and display. At the top, check if the form is submitted, validate inputs, connect to the database, insert data, then fetch and display reviews. Using CSS will make the page look nicer, so including some styles for ratings and layout would enhance user experience.\n\nI should also consider edge cases, like handling empty fields or invalid emails. Making sure the function gracefully handles these situations without crashing is important. Maybe redirecting after submission to avoid resubmission on refresh could be a good idea, but that might depend on how the site is set up.\n\nIn summary, the function will handle form submission with input validation and database storage, then display all reviews in a user-friendly way with proper formatting and security measures.\n</think>\n\nHere's an example of a user review system using PHP. This code includes functions for submitting reviews, displaying reviews, and rating submissions:\n\n```php\n<?php\n// Database configuration\n$host = 'localhost';\n$username = 'username';\n$password = 'password';\n$dbname = 'reviews_db';\n\n// Connect to database\n$conn = mysqli_connect($host, $username, $password, $dbname);\n\nif (!$conn) {\n    die('Connection failed: ' . mysqli_connect_error());\n}\n\n// Function to add a new review\nfunction addReview($name, $email, $rating, $comment, $conn) {\n    // Sanitize inputs\n    $name = htmlspecialchars(strip_tags($name));\n    $email = htmlspecialchars(strip_tags($email));\n    $comment = htmlspecialchars(strip_tags($comment));\n\n    // Check for empty fields\n    if (empty($name) || empty($email) || empty($rating) || empty($comment)) {\n        return 'Please fill in all required fields';\n    }\n\n    // Prepare and bind statement to prevent SQL injection\n    $stmt = $conn->prepare(\"INSERT INTO reviews (name, email, rating, comment, submission_date) VALUES (?, ?, ?, ?, NOW())\");\n    $stmt->bind_param(\"ssis\", $name, $email, $rating, $comment);\n\n    if ($stmt->execute()) {\n        return 'Review submitted successfully!';\n    } else {\n        return 'Error submitting review: ' . $conn->error;\n    }\n}\n\n// Function to display all reviews\nfunction displayReviews($conn) {\n    // Query all reviews from database\n    $result = $conn->query(\"SELECT * FROM reviews ORDER BY submission_date DESC\");\n\n    if ($result->num_rows > 0) {\n        while ($row = $result->fetch_assoc()) {\n            // Display each review with user details and formatted rating stars\n            echo '<div class=\"review\">';\n            echo '<h3>' . htmlspecialchars($row['name']) . '</h3>';\n            echo '<p>Submitted on: ' . $row['submission_date'] . '</p>';\n            echo '<p>Email: ' . substr(htmlspecialchars($row['email']), 0, 3) . '***' . substr(htmlspecialchars($row['email']), strpos(htmlspecialchars($row['email']), '@')) . '</p>';\n            echo '<div class=\"rating\">';\n            for ($i = 1; $i <= 5; $i++) {\n                if ($i <= $row['rating']) {\n                    echo '<span class=\"star\">\u2605</span>';\n                } else {\n                    echo '<span class=\"star\">\u2606</span>';\n                }\n            }\n            echo '</div>';\n            echo '<p>' . htmlspecialchars($row['comment']) . '</p>';\n            echo '</div>';\n        }\n    } else {\n        echo 'No reviews found.';\n    }\n}\n\n// Handle form submission\nif (isset($_POST['submit'])) {\n    $name = $_POST['name'];\n    $email = $_POST['email'];\n    $rating = $_POST['rating'];\n    $comment = $_POST['comment'];\n\n    // Add review to database and display message\n    $message = addReview($name, $email, $rating, $comment, $conn);\n    echo '<div class=\"message\">' . $message . '</div>';\n}\n\n// Close database connection\n$conn->close();\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>User Reviews</title>\n    <style>\n        body {\n            font-family: Arial, sans-serif;\n            max-width: 800px;\n            margin: 0 auto;\n            padding: 20px;\n        }\n        .review {\n            border: 1px solid #ddd;\n            padding: 15px;\n            margin-bottom: 15px;\n        }\n        .rating {\n            display: inline-block;\n            font-size: 24px;\n            color: gold;\n        }\n        .message {\n            color: green;\n            margin-bottom: 20px;\n        }\n    </style>\n</head>\n<body>\n    <h1>Submit a Review</h1>\n    <form method=\"post\" action=\"<?php echo $_SERVER['PHP_SELF']; ?>\">\n        <input type=\"text\" name=\"name\" placeholder=\"Your Name\" required><br><br>\n        <input type=\"email\" name=\"email\" placeholder=\"Your Email\" required><br><br>\n        <label>Rating:</label><br>\n        <select name=\"rating\" required>\n            <option value=\"\">Select Rating</option>\n            <option value=\"1\">1 Star</option>\n            <option value=\"2\">2 Stars</option>\n            <option value=\"3\">3 Stars</option>\n            <option value=\"4\">4 Stars</option>\n            <option value=\"5\">5 Stars</option>\n        </select><br><br>\n        <textarea name=\"comment\" placeholder=\"Your Review\" required></textarea><br><br>\n        <input type=\"submit\" name=\"submit\" value=\"Submit Review\">\n    </form>\n\n    <h2>Reviews</h2>\n    <?php\n    // Reopen database connection for display function\n    $conn = mysqli_connect($host, $username, $password, $dbname);\n    if (!$conn) {\n        die('Connection failed: ' . mysqli_connect_error());\n    }\n    displayReviews($conn);\n    $conn->close();\n    ?>\n</body>\n</html>\n```\n\nThis code creates a complete review system with the following features:\n\n1. A form for submitting reviews (name, email, rating, and comment)\n2. Database storage of reviews\n3. Display of all submitted reviews with user details and ratings\n4. Basic validation and sanitization of inputs\n5. Protection against SQL injection\n6. Formatting of reviews with CSS\n\nTo use this code:\n\n1. Replace the database configuration variables (`$host`, `$username`, `$password`, `$dbname`) with your actual database credentials\n2. Create a table named `reviews` in your database with columns: id, name, email, rating, comment, submission_date\n3. Upload the file to your web server\n\nThe system includes:\n\n- Input validation and sanitization\n- Secure SQL queries using prepared statements\n- Email masking for privacy\n- Star rating display\n- Clean and user-friendly interface\n- Error handling for database operations\n\nYou can customize the CSS styles to match your website's design. Additionally, you might want to add features like:\n\n1. CAPTCHA verification to prevent spam\n2. Review approval system\n3. User authentication\n4. Sorting and filtering options\n5. Pagination for long lists of reviews\n\nRemember to secure your database connection and handle errors appropriately in a production environment.", "code_blocks": ["```php\n<?php\n// Database configuration\n$host = 'localhost';\n$username = 'username';\n$password = 'password';\n$dbname = 'reviews_db';\n\n// Connect to database\n$conn = mysqli_connect($host, $username, $password, $dbname);\n\nif (!$conn) {\n    die('Connection failed: ' . mysqli_connect_error());\n}\n\n// Function to add a new review\nfunction addReview($name, $email, $rating, $comment, $conn) {\n    // Sanitize inputs\n    $name = htmlspecialchars(strip_tags($name));\n    $email = htmlspecialchars(strip_tags($email));\n    $comment = htmlspecialchars(strip_tags($comment));\n\n    // Check for empty fields\n    if (empty($name) || empty($email) || empty($rating) || empty($comment)) {\n        return 'Please fill in all required fields';\n    }\n\n    // Prepare and bind statement to prevent SQL injection\n    $stmt = $conn->prepare(\"INSERT INTO reviews (name, email, rating, comment, submission_date) VALUES (?, ?, ?, ?, NOW())\");\n    $stmt->bind_param(\"ssis\", $name, $email, $rating, $comment);\n\n    if ($stmt->execute()) {\n        return 'Review submitted successfully!';\n    } else {\n        return 'Error submitting review: ' . $conn->error;\n    }\n}\n\n// Function to display all reviews\nfunction displayReviews($conn) {\n    // Query all reviews from database\n    $result = $conn->query(\"SELECT * FROM reviews ORDER BY submission_date DESC\");\n\n    if ($result->num_rows > 0) {\n        while ($row = $result->fetch_assoc()) {\n            // Display each review with user details and formatted rating stars\n            echo '<div class=\"review\">';\n            echo '<h3>' . htmlspecialchars($row['name']) . '</h3>';\n            echo '<p>Submitted on: ' . $row['submission_date'] . '</p>';\n            echo '<p>Email: ' . substr(htmlspecialchars($row['email']), 0, 3) . '***' . substr(htmlspecialchars($row['email']), strpos(htmlspecialchars($row['email']), '@')) . '</p>';\n            echo '<div class=\"rating\">';\n            for ($i = 1; $i <= 5; $i++) {\n                if ($i <= $row['rating']) {\n                    echo '<span class=\"star\">\u2605</span>';\n                } else {\n                    echo '<span class=\"star\">\u2606</span>';\n                }\n            }\n            echo '</div>';\n            echo '<p>' . htmlspecialchars($row['comment']) . '</p>';\n            echo '</div>';\n        }\n    } else {\n        echo 'No reviews found.';\n    }\n}\n\n// Handle form submission\nif (isset($_POST['submit'])) {\n    $name = $_POST['name'];\n    $email = $_POST['email'];\n    $rating = $_POST['rating'];\n    $comment = $_POST['comment'];\n\n    // Add review to database and display message\n    $message = addReview($name, $email, $rating, $comment, $conn);\n    echo '<div class=\"message\">' . $message . '</div>';\n}\n\n// Close database connection\n$conn->close();\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>User Reviews</title>\n    <style>\n        body {\n            font-family: Arial, sans-serif;\n            max-width: 800px;\n            margin: 0 auto;\n            padding: 20px;\n        }\n        .review {\n            border: 1px solid #ddd;\n            padding: 15px;\n            margin-bottom: 15px;\n        }\n        .rating {\n            display: inline-block;\n            font-size: 24px;\n            color: gold;\n        }\n        .message {\n            color: green;\n            margin-bottom: 20px;\n        }\n    </style>\n</head>\n<body>\n    <h1>Submit a Review</h1>\n    <form method=\"post\" action=\"<?php echo $_SERVER['PHP_SELF']; ?>\">\n        <input type=\"text\" name=\"name\" placeholder=\"Your Name\" required><br><br>\n        <input type=\"email\" name=\"email\" placeholder=\"Your Email\" required><br><br>\n        <label>Rating:</label><br>\n        <select name=\"rating\" required>\n            <option value=\"\">Select Rating</option>\n            <option value=\"1\">1 Star</option>\n            <option value=\"2\">2 Stars</option>\n            <option value=\"3\">3 Stars</option>\n            <option value=\"4\">4 Stars</option>\n            <option value=\"5\">5 Stars</option>\n        </select><br><br>\n        <textarea name=\"comment\" placeholder=\"Your Review\" required></textarea><br><br>\n        <input type=\"submit\" name=\"submit\" value=\"Submit Review\">\n    </form>\n\n    <h2>Reviews</h2>\n    <?php\n    // Reopen database connection for display function\n    $conn = mysqli_connect($host, $username, $password, $dbname);\n    if (!$conn) {\n        die('Connection failed: ' . mysqli_connect_error());\n    }\n    displayReviews($conn);\n    $conn->close();\n    ?>\n</body>\n</html>\n```"]}
