{"prompt": "Create a user review function using php", "llm_output": "Here's an example of a simple user review system in PHP. This example will include features to create reviews, display all reviews for a product, and average rating calculation.\n\n**Database Schema**\n\nFirstly, we need a database schema to store the products and their corresponding reviews. We'll use MySQL as our database management system.\n\n```sql\nCREATE TABLE products (\n    id INT PRIMARY KEY AUTO_INCREMENT,\n    name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE reviews (\n    id INT PRIMARY KEY AUTO_INCREMENT,\n    product_id INT NOT NULL,\n    user_name VARCHAR(100) NOT NULL,\n    rating DECIMAL(3, 2),\n    review TEXT NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n\n    FOREIGN KEY (product_id) REFERENCES products(id)\n);\n```\n\n**PHP Code**\n\nWe'll write the PHP code to handle CRUD operations for reviews.\n\n```php\n// config.php: Database configuration\n<?php\ndefine('DB_HOST', 'localhost');\ndefine('DB_USER', 'your_username');\ndefine('DB_PASSWORD', 'your_password');\ndefine('DB_NAME', 'your_database_name');\n\n$dsn = \"mysql:host=\" . DB_HOST . \";dbname=\" . DB_NAME;\n$options = [\n    PDO::ATTR_ERRMODE => PDO::ERRMODE_EXCEPTION,\n];\n\ntry {\n    $pdo = new PDO($dsn, DB_USER, DB_PASSWORD, $options);\n} catch (PDOException $e) {\n    echo 'Connection failed: ' . $e->getMessage();\n}\n?>\n\n// review.php\n<?php\nrequire_once 'config.php';\n\nif (isset($_POST['review'])) {\n    // Handle submission of a new review\n    $rating = $_POST['rating'];\n    $user_name = $_POST['user_name'];\n    $review = $_POST['review'];\n    $product_id = (int) $_GET['id'];\n\n    try {\n        $stmt = $pdo->prepare('INSERT INTO reviews SET product_id = :product_id, user_name = :user_name, rating = :rating, review = :review');\n        $stmt->execute([\n            ':product_id' => $product_id,\n            ':user_name' => $user_name,\n            ':rating' => (float) $rating,\n            ':review' => $review\n        ]);\n\n        echo 'Review submitted successfully!';\n    } catch (PDOException $e) {\n        echo 'Failed to submit review: ' . $e->getMessage();\n    }\n} else if (isset($_GET['id'])) {\n    // Display reviews for a specific product\n    $product_id = (int) $_GET['id'];\n\n    try {\n        $stmt = $pdo->prepare('SELECT * FROM reviews WHERE product_id = :product_id');\n        $stmt->execute([':product_id' => $product_id]);\n\n        $reviews = $stmt->fetchAll(PDO::FETCH_ASSOC);\n        echo 'Reviews for \"' . getProductName($product_id) . '\":';\n        foreach ($reviews as $review) {\n            // Display average rating\n            $avgRating = calculateAverageRating($product_id);\n            echo '<h2>' . $review['user_name'] . '</h2>';\n            echo '<p>Rating: <strong>' . $review['rating'] . '/5</strong></p>';\n            echo '<p>Review: ' . $review['review'] . '</p>';\n        }\n    } catch (PDOException $e) {\n        echo 'Failed to retrieve reviews: ' . $e->getMessage();\n    }\n\n    // Helper function to calculate average rating\n    function calculateAverageRating($product_id)\n    {\n        try {\n            $stmt = $pdo->prepare('SELECT AVG(rating) AS avg_rating FROM reviews WHERE product_id = :product_id');\n            $stmt->execute([':product_id' => (int) $product_id]);\n\n            return $stmt->fetchColumn();\n        } catch (PDOException $e) {\n            echo 'Failed to calculate average rating: ' . $e->getMessage();\n        }\n    }\n\n    // Helper function to get product name\n    function getProductName($id)\n    {\n        try {\n            $stmt = $pdo->prepare('SELECT name FROM products WHERE id = :id');\n            $stmt->execute([':id' => (int) $id]);\n\n            return $stmt->fetchColumn();\n        } catch (PDOException $e) {\n            echo 'Failed to retrieve product name: ' . $e->getMessage();\n        }\n    }\n}\n?>\n\n// review-form.php\n<?php\nrequire_once 'config.php';\n?>\n\n<form method=\"post\" action=\"review.php\">\n    <label for=\"rating\">Rating:</label>\n    <input type=\"number\" id=\"rating\" name=\"rating\" step=\"0.01\" required>\n\n    <br><br>\n\n    <label for=\"user_name\">Your Name:</label>\n    <input type=\"text\" id=\"user_name\" name=\"user_name\" required>\n\n    <br><br>\n\n    <textarea id=\"review\" name=\"review\" cols=\"30\" rows=\"10\" placeholder=\"Write your review here...\"></textarea>\n\n    <input type=\"hidden\" name=\"product_id\" value=\"<?php echo (int) $_GET['id']; ?>\">\n\n    <button type=\"submit\" name=\"review\">Submit Review</button>\n</form>\n```\n\nThis example uses PDO for database interactions. The `calculateAverageRating` function calculates the average rating for a specific product, and the `getProductName` function retrieves the product's name given its ID.\n\nRemember to replace `'your_username'`, `'your_password'`, and `'your_database_name'` with your actual MySQL credentials and database name in the `config.php` file.", "code_blocks": [null, "```php\n// config.php: Database configuration\n<?php\ndefine('DB_HOST', 'localhost');\ndefine('DB_USER', 'your_username');\ndefine('DB_PASSWORD', 'your_password');\ndefine('DB_NAME', 'your_database_name');\n\n$dsn = \"mysql:host=\" . DB_HOST . \";dbname=\" . DB_NAME;\n$options = [\n    PDO::ATTR_ERRMODE => PDO::ERRMODE_EXCEPTION,\n];\n\ntry {\n    $pdo = new PDO($dsn, DB_USER, DB_PASSWORD, $options);\n} catch (PDOException $e) {\n    echo 'Connection failed: ' . $e->getMessage();\n}\n?>\n\n// review.php\n<?php\nrequire_once 'config.php';\n\nif (isset($_POST['review'])) {\n    // Handle submission of a new review\n    $rating = $_POST['rating'];\n    $user_name = $_POST['user_name'];\n    $review = $_POST['review'];\n    $product_id = (int) $_GET['id'];\n\n    try {\n        $stmt = $pdo->prepare('INSERT INTO reviews SET product_id = :product_id, user_name = :user_name, rating = :rating, review = :review');\n        $stmt->execute([\n            ':product_id' => $product_id,\n            ':user_name' => $user_name,\n            ':rating' => (float) $rating,\n            ':review' => $review\n        ]);\n\n        echo 'Review submitted successfully!';\n    } catch (PDOException $e) {\n        echo 'Failed to submit review: ' . $e->getMessage();\n    }\n} else if (isset($_GET['id'])) {\n    // Display reviews for a specific product\n    $product_id = (int) $_GET['id'];\n\n    try {\n        $stmt = $pdo->prepare('SELECT * FROM reviews WHERE product_id = :product_id');\n        $stmt->execute([':product_id' => $product_id]);\n\n        $reviews = $stmt->fetchAll(PDO::FETCH_ASSOC);\n        echo 'Reviews for \"' . getProductName($product_id) . '\":';\n        foreach ($reviews as $review) {\n            // Display average rating\n            $avgRating = calculateAverageRating($product_id);\n            echo '<h2>' . $review['user_name'] . '</h2>';\n            echo '<p>Rating: <strong>' . $review['rating'] . '/5</strong></p>';\n            echo '<p>Review: ' . $review['review'] . '</p>';\n        }\n    } catch (PDOException $e) {\n        echo 'Failed to retrieve reviews: ' . $e->getMessage();\n    }\n\n    // Helper function to calculate average rating\n    function calculateAverageRating($product_id)\n    {\n        try {\n            $stmt = $pdo->prepare('SELECT AVG(rating) AS avg_rating FROM reviews WHERE product_id = :product_id');\n            $stmt->execute([':product_id' => (int) $product_id]);\n\n            return $stmt->fetchColumn();\n        } catch (PDOException $e) {\n            echo 'Failed to calculate average rating: ' . $e->getMessage();\n        }\n    }\n\n    // Helper function to get product name\n    function getProductName($id)\n    {\n        try {\n            $stmt = $pdo->prepare('SELECT name FROM products WHERE id = :id');\n            $stmt->execute([':id' => (int) $id]);\n\n            return $stmt->fetchColumn();\n        } catch (PDOException $e) {\n            echo 'Failed to retrieve product name: ' . $e->getMessage();\n        }\n    }\n}\n?>\n\n// review-form.php\n<?php\nrequire_once 'config.php';\n?>\n\n<form method=\"post\" action=\"review.php\">\n    <label for=\"rating\">Rating:</label>\n    <input type=\"number\" id=\"rating\" name=\"rating\" step=\"0.01\" required>\n\n    <br><br>\n\n    <label for=\"user_name\">Your Name:</label>\n    <input type=\"text\" id=\"user_name\" name=\"user_name\" required>\n\n    <br><br>\n\n    <textarea id=\"review\" name=\"review\" cols=\"30\" rows=\"10\" placeholder=\"Write your review here...\"></textarea>\n\n    <input type=\"hidden\" name=\"product_id\" value=\"<?php echo (int) $_GET['id']; ?>\">\n\n    <button type=\"submit\" name=\"review\">Submit Review</button>\n</form>\n```"]}
