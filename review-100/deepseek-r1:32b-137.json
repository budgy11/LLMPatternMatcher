{"prompt": "Create a user review function using php", "llm_output": "<think>\nOkay, I need to create a user review function using PHP. Let me think about how to approach this.\n\nFirst, I should understand what the function needs to do. It should allow users to submit reviews with a rating and text, store them in a database, display them on a webpage, calculate the average rating, and let users edit or delete their reviews.\n\nI'll start by setting up the database. I'll need a table for reviews that includes fields like review_id, user_id (maybe), product_id, rating, comment, created_at, and updated_at. If I'm tracking users, I should have a separate users table with user details. Also, an average_ratings table to store the average ratings for each product.\n\nNext, connecting to the database is essential. I'll use PHP's mysqli extension because it's secure and efficient. I'll create constants for the database host, username, password, and name to make configuration easy.\n\nNow, onto handling form submissions. When a user submits a review, I need to capture their input. I'll check if the form was submitted using $_POST. Then, validate the inputs to ensure rating is between 1 and 5 and that the comment isn't empty or too long.\n\nInserting the review into the database comes next. I'll use an INSERT query, escaping the inputs to prevent SQL injection. If the insertion fails, I'll throw an exception with the error message.\n\nAfter inserting the review, I need to update the average rating for that product. This involves calculating the new average based on the total ratings and number of reviews so far. I'll first select the current average and count from the average_ratings table. Then, compute the new average by adding the new rating and dividing by the incremented count.\n\nDisplaying the reviews is another step. I'll retrieve all reviews for a specific product using a SELECT query, ordered by when they were created. For each review, I'll display the user's name, date, stars, comment, and edit/delete buttons if it's their own review.\n\nI should also include functions to count the number of reviews and get the average rating for a product. These can be helper functions that query the database and return the necessary values.\n\nFor editing a review, I'll need a form where users can update their comment and rating. This involves fetching the existing review data based on the user's session or ID, displaying it in input fields, and then updating the database upon submission.\n\nDeleting a review requires a confirmation step to prevent accidental deletions. After confirming, I'll remove the review from the reviews table and recalculate the average rating for that product.\n\nSecurity is important here. I'll ensure all inputs are validated and sanitized. Using prepared statements could further enhance security against SQL injection.\n\nSession management is another consideration. Users should be logged in to submit, edit, or delete reviews. I'll check if a user is authenticated before allowing these actions.\n\nTesting each part is crucial. I'll test submitting a review, checking if it appears correctly, editing, and deleting. I'll also verify that the average rating updates accurately when new reviews are added or existing ones are changed.\n\nFinally, error handling should be robust. Using try-catch blocks around database operations will help catch exceptions and display meaningful messages to users instead of raw errors.\n\nPutting it all together, I'll structure the code with functions for each part: connecting to the database, submitting a review, displaying reviews, editing, deleting, counting, and averaging. This modular approach makes the code easier to maintain and extend.\n</think>\n\nHere's an example of a user review system in PHP. This implementation includes:\n\n1. Review submission\n2. Displaying reviews\n3. Calculating average rating\n4. Editing/Deleting reviews\n\n```php\n<?php\n// Database connection settings\n$host = 'localhost';\n$username = 'root';\n$password = '';\n$database = 'reviews_db';\n\ntry {\n    $conn = new mysqli($host, $username, $password, $database);\n    \n    // Check connection\n    if ($conn->connect_error) {\n        throw new Exception(\"Connection failed: \" . $conn->connect_error);\n    }\n\n    // Function to submit a review\n    function submitReview($productId, $userId, $rating, $comment, $conn) {\n        // Sanitize inputs\n        $rating = intval($rating);\n        $comment = mysqli_real_escape_string($conn, htmlspecialchars($comment));\n\n        if ($rating < 1 || $rating > 5) {\n            throw new Exception(\"Invalid rating. Please select a rating between 1 and 5.\");\n        }\n\n        // Insert review into database\n        $sql = \"INSERT INTO reviews (product_id, user_id, rating, comment, created_at)\n                VALUES (?, ?, ?, ?, NOW())\";\n        \n        if ($stmt = $conn->prepare($sql)) {\n            $stmt->bind_param(\"iisi\", $productId, $userId, $rating, $comment);\n            \n            if (!$stmt->execute()) {\n                throw new Exception(\"Error submitting review: \" . $stmt->error);\n            }\n            \n            // Update average rating\n            updateAverageRating($productId, $conn);\n            \n            return true;\n        } else {\n            throw new Exception(\"Error preparing statement: \" . $conn->error);\n        }\n    }\n\n    // Function to get all reviews for a product\n    function getReviews($productId, $conn) {\n        $sql = \"SELECT r.*, u.username FROM reviews r \n                LEFT JOIN users u ON r.user_id = u.id \n                WHERE r.product_id = ?\n                ORDER BY r.created_at DESC\";\n        \n        if ($stmt = $conn->prepare($sql)) {\n            $stmt->bind_param(\"i\", $productId);\n            $stmt->execute();\n            return $stmt->get_result()->fetch_all(MYSQLI_ASSOC);\n        } else {\n            throw new Exception(\"Error preparing statement: \" . $conn->error);\n        }\n    }\n\n    // Function to get average rating\n    function getAverageRating($productId, $conn) {\n        $sql = \"SELECT average_rating FROM average_ratings WHERE product_id = ?\";\n        \n        if ($stmt = $conn->prepare($sql)) {\n            $stmt->bind_param(\"i\", $productId);\n            $stmt->execute();\n            $result = $stmt->get_result()->fetch_assoc();\n            \n            return isset($result['average_rating']) ? number_format($result['average_rating'], 1) : 0;\n        } else {\n            throw new Exception(\"Error preparing statement: \" . $conn->error);\n        }\n    }\n\n    // Function to update average rating\n    function updateAverageRating($productId, $conn) {\n        $sql = \"SELECT COUNT(*) as review_count, SUM(rating) as total_rating \n                FROM reviews WHERE product_id = ?\";\n        \n        if ($stmt = $conn->prepare($sql)) {\n            $stmt->bind_param(\"i\", $productId);\n            $stmt->execute();\n            $result = $stmt->get_result()->fetch_assoc();\n\n            $average = $result['review_count'] > 0 ? \n                ($result['total_rating'] / $result['review_count']) : 0;\n\n            // Update average ratings table\n            $updateSql = \"REPLACE INTO average_ratings (product_id, average_rating) \n                         VALUES (?, ?)\";\n            \n            if ($updateStmt = $conn->prepare($updateSql)) {\n                $updateStmt->bind_param(\"id\", $productId, $average);\n                return $updateStmt->execute();\n            } else {\n                throw new Exception(\"Error preparing update statement: \" . $conn->error);\n            }\n        } else {\n            throw new Exception(\"Error preparing statement: \" . $conn->error);\n        }\n    }\n\n    // Function to edit a review\n    function editReview($reviewId, $newRating, $newComment, $conn) {\n        $newRating = intval($newRating);\n        $newComment = mysqli_real_escape_string($conn, htmlspecialchars($newComment));\n\n        if ($newRating < 1 || $newRating > 5) {\n            throw new Exception(\"Invalid rating. Please select a rating between 1 and 5.\");\n        }\n\n        // Update review in database\n        $sql = \"UPDATE reviews SET rating = ?, comment = ?, updated_at = NOW() \n                WHERE review_id = ?\";\n        \n        if ($stmt = $conn->prepare($sql)) {\n            $stmt->bind_param(\"iis\", $newRating, $newComment, $reviewId);\n            \n            if (!$stmt->execute()) {\n                throw new Exception(\"Error updating review: \" . $stmt->error);\n            }\n            \n            // Update average rating\n            $productId = getProductIdFromReview($reviewId, $conn);\n            updateAverageRating($productId, $conn);\n            \n            return true;\n        } else {\n            throw new Exception(\"Error preparing statement: \" . $conn->error);\n        }\n    }\n\n    // Function to delete a review\n    function deleteReview($reviewId, $conn) {\n        // Delete review from database\n        $sql = \"DELETE FROM reviews WHERE review_id = ?\";\n        \n        if ($stmt = $conn->prepare($sql)) {\n            $stmt->bind_param(\"i\", $reviewId);\n            \n            if (!$stmt->execute()) {\n                throw new Exception(\"Error deleting review: \" . $stmt->error);\n            }\n            \n            // Update average rating\n            $productId = getProductIdFromReview($reviewId, $conn);\n            updateAverageRating($productId, $conn);\n            \n            return true;\n        } else {\n            throw new Exception(\"Error preparing statement: \" . $conn->error);\n        }\n    }\n\n    // Helper function to get product ID from review\n    function getProductIdFromReview($reviewId, $conn) {\n        $sql = \"SELECT product_id FROM reviews WHERE review_id = ?\";\n        \n        if ($stmt = $conn->prepare($sql)) {\n            $stmt->bind_param(\"i\", $reviewId);\n            $stmt->execute();\n            return $stmt->get_result()->fetch_assoc()['product_id'];\n        } else {\n            throw new Exception(\"Error preparing statement: \" . $conn->error);\n        }\n    }\n\n    // Function to count reviews\n    function countReviews($productId, $conn) {\n        $sql = \"SELECT COUNT(*) as review_count FROM reviews WHERE product_id = ?\";\n        \n        if ($stmt = $conn->prepare($sql)) {\n            $stmt->bind_param(\"i\", $productId);\n            $stmt->execute();\n            return $stmt->get_result()->fetch_assoc()['review_count'];\n        } else {\n            throw new Exception(\"Error preparing statement: \" . $conn->error);\n        }\n    }\n\n} catch (Exception $e) {\n    die(\"Error: \" . $e->getMessage());\n}\n?>\n```\n\nThis code provides the following functionality:\n\n1. `submitReview()`: Handles submitting new reviews\n2. `getReviews()`: Retrieves all reviews for a product\n3. `getAverageRating()`: Calculates and returns average rating\n4. `updateAverageRating()`: Updates average rating when reviews change\n5. `editReview()`: Allows users to edit their reviews\n6. `deleteReview()`: Handles review deletion\n7. `countReviews()`: Returns total number of reviews for a product\n\nTo use this system:\n\n1. Create database tables (users, reviews, and average_ratings)\n2. Configure the database connection settings\n3. Include this file in your project\n4. Use the provided functions to implement the desired functionality\n\nMake sure to:\n- Implement user authentication before allowing review submissions\n- Add proper error handling and validation\n- Secure your database queries against SQL injection\n- Sanitize all user inputs\n- Add appropriate HTML forms for submitting and editing reviews\n- Style the output according to your website's design\n\nYou'll need to create these tables in your database:\n\n```sql\nCREATE TABLE users (\n    id INT PRIMARY KEY AUTO_INCREMENT,\n    username VARCHAR(50) NOT NULL UNIQUE,\n    password_hash VARCHAR(255) NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\nCREATE TABLE reviews (\n    review_id INT PRIMARY KEY AUTO_INCREMENT,\n    product_id INT NOT NULL,\n    user_id INT NOT NULL,\n    rating TINYINT NOT NULL,\n    comment TEXT NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (user_id) REFERENCES users(id)\n);\n\nCREATE TABLE average_ratings (\n    product_id INT PRIMARY KEY,\n    average_rating DECIMAL(3,1) DEFAULT 0\n);\n```", "code_blocks": ["```php\n<?php\n// Database connection settings\n$host = 'localhost';\n$username = 'root';\n$password = '';\n$database = 'reviews_db';\n\ntry {\n    $conn = new mysqli($host, $username, $password, $database);\n    \n    // Check connection\n    if ($conn->connect_error) {\n        throw new Exception(\"Connection failed: \" . $conn->connect_error);\n    }\n\n    // Function to submit a review\n    function submitReview($productId, $userId, $rating, $comment, $conn) {\n        // Sanitize inputs\n        $rating = intval($rating);\n        $comment = mysqli_real_escape_string($conn, htmlspecialchars($comment));\n\n        if ($rating < 1 || $rating > 5) {\n            throw new Exception(\"Invalid rating. Please select a rating between 1 and 5.\");\n        }\n\n        // Insert review into database\n        $sql = \"INSERT INTO reviews (product_id, user_id, rating, comment, created_at)\n                VALUES (?, ?, ?, ?, NOW())\";\n        \n        if ($stmt = $conn->prepare($sql)) {\n            $stmt->bind_param(\"iisi\", $productId, $userId, $rating, $comment);\n            \n            if (!$stmt->execute()) {\n                throw new Exception(\"Error submitting review: \" . $stmt->error);\n            }\n            \n            // Update average rating\n            updateAverageRating($productId, $conn);\n            \n            return true;\n        } else {\n            throw new Exception(\"Error preparing statement: \" . $conn->error);\n        }\n    }\n\n    // Function to get all reviews for a product\n    function getReviews($productId, $conn) {\n        $sql = \"SELECT r.*, u.username FROM reviews r \n                LEFT JOIN users u ON r.user_id = u.id \n                WHERE r.product_id = ?\n                ORDER BY r.created_at DESC\";\n        \n        if ($stmt = $conn->prepare($sql)) {\n            $stmt->bind_param(\"i\", $productId);\n            $stmt->execute();\n            return $stmt->get_result()->fetch_all(MYSQLI_ASSOC);\n        } else {\n            throw new Exception(\"Error preparing statement: \" . $conn->error);\n        }\n    }\n\n    // Function to get average rating\n    function getAverageRating($productId, $conn) {\n        $sql = \"SELECT average_rating FROM average_ratings WHERE product_id = ?\";\n        \n        if ($stmt = $conn->prepare($sql)) {\n            $stmt->bind_param(\"i\", $productId);\n            $stmt->execute();\n            $result = $stmt->get_result()->fetch_assoc();\n            \n            return isset($result['average_rating']) ? number_format($result['average_rating'], 1) : 0;\n        } else {\n            throw new Exception(\"Error preparing statement: \" . $conn->error);\n        }\n    }\n\n    // Function to update average rating\n    function updateAverageRating($productId, $conn) {\n        $sql = \"SELECT COUNT(*) as review_count, SUM(rating) as total_rating \n                FROM reviews WHERE product_id = ?\";\n        \n        if ($stmt = $conn->prepare($sql)) {\n            $stmt->bind_param(\"i\", $productId);\n            $stmt->execute();\n            $result = $stmt->get_result()->fetch_assoc();\n\n            $average = $result['review_count'] > 0 ? \n                ($result['total_rating'] / $result['review_count']) : 0;\n\n            // Update average ratings table\n            $updateSql = \"REPLACE INTO average_ratings (product_id, average_rating) \n                         VALUES (?, ?)\";\n            \n            if ($updateStmt = $conn->prepare($updateSql)) {\n                $updateStmt->bind_param(\"id\", $productId, $average);\n                return $updateStmt->execute();\n            } else {\n                throw new Exception(\"Error preparing update statement: \" . $conn->error);\n            }\n        } else {\n            throw new Exception(\"Error preparing statement: \" . $conn->error);\n        }\n    }\n\n    // Function to edit a review\n    function editReview($reviewId, $newRating, $newComment, $conn) {\n        $newRating = intval($newRating);\n        $newComment = mysqli_real_escape_string($conn, htmlspecialchars($newComment));\n\n        if ($newRating < 1 || $newRating > 5) {\n            throw new Exception(\"Invalid rating. Please select a rating between 1 and 5.\");\n        }\n\n        // Update review in database\n        $sql = \"UPDATE reviews SET rating = ?, comment = ?, updated_at = NOW() \n                WHERE review_id = ?\";\n        \n        if ($stmt = $conn->prepare($sql)) {\n            $stmt->bind_param(\"iis\", $newRating, $newComment, $reviewId);\n            \n            if (!$stmt->execute()) {\n                throw new Exception(\"Error updating review: \" . $stmt->error);\n            }\n            \n            // Update average rating\n            $productId = getProductIdFromReview($reviewId, $conn);\n            updateAverageRating($productId, $conn);\n            \n            return true;\n        } else {\n            throw new Exception(\"Error preparing statement: \" . $conn->error);\n        }\n    }\n\n    // Function to delete a review\n    function deleteReview($reviewId, $conn) {\n        // Delete review from database\n        $sql = \"DELETE FROM reviews WHERE review_id = ?\";\n        \n        if ($stmt = $conn->prepare($sql)) {\n            $stmt->bind_param(\"i\", $reviewId);\n            \n            if (!$stmt->execute()) {\n                throw new Exception(\"Error deleting review: \" . $stmt->error);\n            }\n            \n            // Update average rating\n            $productId = getProductIdFromReview($reviewId, $conn);\n            updateAverageRating($productId, $conn);\n            \n            return true;\n        } else {\n            throw new Exception(\"Error preparing statement: \" . $conn->error);\n        }\n    }\n\n    // Helper function to get product ID from review\n    function getProductIdFromReview($reviewId, $conn) {\n        $sql = \"SELECT product_id FROM reviews WHERE review_id = ?\";\n        \n        if ($stmt = $conn->prepare($sql)) {\n            $stmt->bind_param(\"i\", $reviewId);\n            $stmt->execute();\n            return $stmt->get_result()->fetch_assoc()['product_id'];\n        } else {\n            throw new Exception(\"Error preparing statement: \" . $conn->error);\n        }\n    }\n\n    // Function to count reviews\n    function countReviews($productId, $conn) {\n        $sql = \"SELECT COUNT(*) as review_count FROM reviews WHERE product_id = ?\";\n        \n        if ($stmt = $conn->prepare($sql)) {\n            $stmt->bind_param(\"i\", $productId);\n            $stmt->execute();\n            return $stmt->get_result()->fetch_assoc()['review_count'];\n        } else {\n            throw new Exception(\"Error preparing statement: \" . $conn->error);\n        }\n    }\n\n} catch (Exception $e) {\n    die(\"Error: \" . $e->getMessage());\n}\n?>\n```", null]}
