{"prompt": "Create a user review function using php", "llm_output": "**User Review Function in PHP**\n=====================================\n\nThe following code snippet demonstrates a simple implementation of a user review system using PHP. This example assumes you have a database setup with tables for `reviews` and `users`.\n\n### Database Schema\n\nFor this example, we'll assume the following database schema:\n\n```sql\nCREATE TABLE users (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255)\n);\n\nCREATE TABLE reviews (\n  id INT PRIMARY KEY,\n  user_id INT,\n  product_name VARCHAR(255),\n  review_text TEXT,\n  rating TINYINT,\n  FOREIGN KEY (user_id) REFERENCES users(id)\n);\n```\n\n### PHP Code\n\n**`review.php`**\n```php\nclass Review {\n  private $db;\n\n  public function __construct() {\n    $this->db = new PDO('mysql:host=localhost;dbname=your_database', 'username', 'password');\n  }\n\n  /**\n   * Get all reviews for a specific user.\n   *\n   * @param int $user_id User ID\n   * @return array Reviews\n   */\n  public function getUserReviews($user_id) {\n    $stmt = $this->db->prepare('SELECT * FROM reviews WHERE user_id = :user_id');\n    $stmt->bindParam(':user_id', $user_id);\n    $stmt->execute();\n    return $stmt->fetchAll(PDO::FETCH_ASSOC);\n  }\n\n  /**\n   * Add a new review.\n   *\n   * @param array $data Review data\n   * @return int Review ID\n   */\n  public function addReview($data) {\n    $stmt = $this->db->prepare('INSERT INTO reviews (user_id, product_name, review_text, rating) VALUES (:user_id, :product_name, :review_text, :rating)');\n    $stmt->execute(array(\n      ':user_id' => $data['user_id'],\n      ':product_name' => $data['product_name'],\n      ':review_text' => $data['review_text'],\n      ':rating' => $data['rating']\n    ));\n    return $this->db->lastInsertId();\n  }\n\n  /**\n   * Update an existing review.\n   *\n   * @param array $data Review data\n   * @return bool Success\n   */\n  public function updateReview($data) {\n    $stmt = $this->db->prepare('UPDATE reviews SET product_name = :product_name, review_text = :review_text, rating = :rating WHERE id = :id');\n    return $stmt->execute(array(\n      ':id' => $data['id'],\n      ':product_name' => $data['product_name'],\n      ':review_text' => $data['review_text'],\n      ':rating' => $data['rating']\n    ));\n  }\n\n  /**\n   * Delete a review.\n   *\n   * @param int $review_id Review ID\n   * @return bool Success\n   */\n  public function deleteReview($review_id) {\n    $stmt = $this->db->prepare('DELETE FROM reviews WHERE id = :id');\n    return $stmt->execute(array(':id' => $review_id));\n  }\n}\n```\n\n### Example Usage\n\n```php\n$review = new Review();\n\n// Get all reviews for a specific user\n$user_reviews = $review->getUserReviews(1);\nprint_r($user_reviews);\n\n// Add a new review\n$data = array(\n  'user_id' => 1,\n  'product_name' => 'Product X',\n  'review_text' => 'This product is great!',\n  'rating' => 5\n);\n$new_review_id = $review->addReview($data);\necho \"New Review ID: $new_review_id\";\n\n// Update an existing review\n$data['id'] = $new_review_id;\n$review->updateReview($data);\n\n// Delete a review\n$review->deleteReview($new_review_id);\n```\n\nThis code provides basic CRUD operations for managing reviews in your database. You can extend this functionality as needed to fit your specific requirements.\n\n**Remember to replace `your_database`, `username`, and `password` with your actual database credentials.**\n\nPlease note that this is a simplified example and you should consider implementing additional security measures, such as input validation and sanitization, to prevent SQL injection attacks.", "code_blocks": [null, "```php\nclass Review {\n  private $db;\n\n  public function __construct() {\n    $this->db = new PDO('mysql:host=localhost;dbname=your_database', 'username', 'password');\n  }\n\n  /**\n   * Get all reviews for a specific user.\n   *\n   * @param int $user_id User ID\n   * @return array Reviews\n   */\n  public function getUserReviews($user_id) {\n    $stmt = $this->db->prepare('SELECT * FROM reviews WHERE user_id = :user_id');\n    $stmt->bindParam(':user_id', $user_id);\n    $stmt->execute();\n    return $stmt->fetchAll(PDO::FETCH_ASSOC);\n  }\n\n  /**\n   * Add a new review.\n   *\n   * @param array $data Review data\n   * @return int Review ID\n   */\n  public function addReview($data) {\n    $stmt = $this->db->prepare('INSERT INTO reviews (user_id, product_name, review_text, rating) VALUES (:user_id, :product_name, :review_text, :rating)');\n    $stmt->execute(array(\n      ':user_id' => $data['user_id'],\n      ':product_name' => $data['product_name'],\n      ':review_text' => $data['review_text'],\n      ':rating' => $data['rating']\n    ));\n    return $this->db->lastInsertId();\n  }\n\n  /**\n   * Update an existing review.\n   *\n   * @param array $data Review data\n   * @return bool Success\n   */\n  public function updateReview($data) {\n    $stmt = $this->db->prepare('UPDATE reviews SET product_name = :product_name, review_text = :review_text, rating = :rating WHERE id = :id');\n    return $stmt->execute(array(\n      ':id' => $data['id'],\n      ':product_name' => $data['product_name'],\n      ':review_text' => $data['review_text'],\n      ':rating' => $data['rating']\n    ));\n  }\n\n  /**\n   * Delete a review.\n   *\n   * @param int $review_id Review ID\n   * @return bool Success\n   */\n  public function deleteReview($review_id) {\n    $stmt = $this->db->prepare('DELETE FROM reviews WHERE id = :id');\n    return $stmt->execute(array(':id' => $review_id));\n  }\n}\n```", "```php\n$review = new Review();\n\n// Get all reviews for a specific user\n$user_reviews = $review->getUserReviews(1);\nprint_r($user_reviews);\n\n// Add a new review\n$data = array(\n  'user_id' => 1,\n  'product_name' => 'Product X',\n  'review_text' => 'This product is great!',\n  'rating' => 5\n);\n$new_review_id = $review->addReview($data);\necho \"New Review ID: $new_review_id\";\n\n// Update an existing review\n$data['id'] = $new_review_id;\n$review->updateReview($data);\n\n// Delete a review\n$review->deleteReview($new_review_id);\n```"]}
