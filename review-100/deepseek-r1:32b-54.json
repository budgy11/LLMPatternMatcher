{"prompt": "Create a user review function using php", "llm_output": "<think>\nOkay, I need to create a PHP function for user reviews. Let me think about what features are essential.\n\nFirst, the function should handle creating new reviews. So it needs parameters like user ID, product ID, rating, and comment. Maybe optional fields in case someone doesn't provide a comment.\n\nNext, connecting to the database is crucial. I'll use mysqli_connect for that. I should include placeholders for the actual database credentials, so the user can replace them later.\n\nNow, sanitizing inputs is important to prevent SQL injection. Using mysqli_real_escape_string will help with that. Also, validating the rating to ensure it's between 1 and 5 makes sense.\n\nFor inserting the review into the database, I'll prepare an SQL query using placeholders for security. If there's no comment, I'll set it as NULL in the database.\n\nError handling is necessary. Checking if the insert was successful and returning appropriate messages will help debug issues later.\n\nThen, a function to fetch reviews by product ID would be useful. Again, sanitizing the input to prevent SQL injection.\n\nI should include an option to limit the number of reviews fetched, which can be handy for displaying them on a webpage without overwhelming users.\n\nFor each review, I'll format the rating as stars using emojis and return the comments. Combining all these into an array that includes count, ratings average, and formatted reviews will make it easy to display on the frontend.\n\nTesting the functions with sample data would help ensure they work correctly. Also, reminding about security practices like prepared statements or PDO is important for real-world applications.\n\nFinally, I'll outline how to use these functions in a practical scenario, making it easier for someone to implement them into their project.\n</think>\n\nHere's an example of a user review function using PHP that allows users to submit reviews and ratings for products:\n\n```php\n<?php\n// Function to create a new review\nfunction createReview($userId, $productId, $rating, $comment = \"\") {\n    // Database connection details\n    $servername = \"localhost\";\n    $username = \"your_username\";\n    $password = \"your_password\";\n    $dbname = \"your_database\";\n\n    // Create connection\n    $conn = mysqli_connect($servername, $username, $password, $dbname);\n\n    // Check connection\n    if (!$conn) {\n        die(\"Connection failed: \" . mysqli_connect_error());\n    }\n\n    // Sanitize inputs to prevent SQL injection\n    $userId = mysqli_real_escape_string($conn, $userId);\n    $productId = mysqli_real_escape_string($conn, $productId);\n    $rating = intval($rating); // Ensure rating is an integer\n    $comment = mysqli_real_escape_string($conn, $comment);\n\n    // Validate rating (assuming ratings are between 1 and 5)\n    if ($rating < 1 || $rating > 5) {\n        return \"Invalid rating. Please provide a rating between 1 and 5.\";\n    }\n\n    // SQL query to insert the review\n    $sql = \"INSERT INTO reviews (user_id, product_id, rating, comment, created_at)\n            VALUES ('$userId', '$productId', '$rating', '\" . ($comment ? \"'$comment'\" : \"NULL\") . \"', NOW())\";\n\n    if (mysqli_query($conn, $sql)) {\n        // Return success message\n        return \"Review submitted successfully!\";\n    } else {\n        // Return error message\n        return \"Error: \" . mysqli_error($conn);\n    }\n\n    // Close database connection\n    mysqli_close($conn);\n}\n\n// Function to get reviews for a product\nfunction getReviewsByProduct($productId) {\n    // Database connection details\n    $servername = \"localhost\";\n    $username = \"your_username\";\n    $password = \"your_password\";\n    $dbname = \"your_database\";\n\n    // Create connection\n    $conn = mysqli_connect($servername, $username, $password, $dbname);\n\n    // Check connection\n    if (!$conn) {\n        die(\"Connection failed: \" . mysqli_connect_error());\n    }\n\n    // Sanitize input to prevent SQL injection\n    $productId = mysqli_real_escape_string($conn, $productId);\n\n    // SQL query to fetch reviews for the product\n    $sql = \"SELECT * FROM reviews WHERE product_id = '$productId' ORDER BY created_at DESC\";\n    \n    // Optional: Limit the number of reviews returned\n    $limit = 5; // Change this value as needed\n    $sql .= \" LIMIT $limit\";\n\n    $result = mysqli_query($conn, $sql);\n    $reviews = array();\n\n    if ($result) {\n        while ($row = mysqli_fetch_assoc($result)) {\n            $review = array(\n                'id' => $row['id'],\n                'user_id' => $row['user_id'],\n                'product_id' => $row['product_id'],\n                'rating' => $row['rating'],\n                'comment' => $row['comment'],\n                'created_at' => $row['created_at']\n            );\n            array_push($reviews, $review);\n        }\n    } else {\n        // Return error message\n        return \"Error: \" . mysqli_error($conn);\n    }\n\n    // Close database connection\n    mysqli_close($conn);\n\n    return $reviews;\n}\n\n// Example usage:\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    $userId = $_POST['user_id'];\n    $productId = $_POST['product_id'];\n    $rating = $_POST['rating'];\n    $comment = $_POST['comment'];\n\n    // Create a new review\n    $reviewResult = createReview($userId, $productId, $rating, $comment);\n    echo $reviewResult;\n}\n\n// Get reviews for a specific product\n$productReviews = getReviewsByProduct(1); // Replace 1 with the actual product ID\n\n// Calculate average rating and display reviews\nif (is_array($productReviews)) {\n    $totalRating = 0;\n    foreach ($productReviews as $review) {\n        $totalRating += $review['rating'];\n    }\n    $averageRating = $totalRating / count($productReviews);\n\n    echo \"<h3>Product Reviews</h3>\";\n    echo \"<p>Average Rating: \" . number_format($averageRating, 1) . \"/5</p>\";\n\n    foreach ($productReviews as $review) {\n        // Display review details\n        echo \"<div class='review'>\";\n        echo \"<p><strong>\" . str_repeat(\"\u2605\", $review['rating']) . \"</strong></p>\";\n        if (!empty($review['comment'])) {\n            echo \"<p>\" . $review['comment'] . \"</p>\";\n        }\n        echo \"</div>\";\n    }\n}\n?>\n```\n\nThis code provides:\n\n1. A `createReview()` function that:\n   - Accepts user ID, product ID, rating, and optional comment\n   - Sanitizes inputs to prevent SQL injection\n   - Validates the rating (must be between 1-5)\n   - Inserts the review into the database\n\n2. A `getReviewsByProduct()` function that:\n   - Retrieves reviews for a specific product\n   - Orders them by creation date\n   - Optionally limits the number of results returned\n   - Returns an array of review data\n\n3. Example usage for both functions\n\nFeatures:\n\n- Input validation and sanitization\n- Error handling\n- Average rating calculation\n- Review display with star ratings\n- Optional comment field\n- Database connectivity\n\nTo use this code, you'll need to:\n\n1. Replace the database connection details (`$servername`, `$username`, `$password`, `$dbname`) with your actual database credentials\n\n2. Create a `reviews` table in your database with columns:\n   - id (int, auto-increment)\n   - user_id (int)\n   - product_id (int)\n   - rating (tinyint)\n   - comment (text)\n   - created_at (datetime)\n\n3. Adjust the SQL queries and table/column names to match your database schema\n\n4. Add proper error handling and security measures as needed for your application\n\nNote: This is a basic implementation and should be modified according to your specific needs. For production use, consider using prepared statements or an ORM for better security and maintainability.", "code_blocks": ["```php\n<?php\n// Function to create a new review\nfunction createReview($userId, $productId, $rating, $comment = \"\") {\n    // Database connection details\n    $servername = \"localhost\";\n    $username = \"your_username\";\n    $password = \"your_password\";\n    $dbname = \"your_database\";\n\n    // Create connection\n    $conn = mysqli_connect($servername, $username, $password, $dbname);\n\n    // Check connection\n    if (!$conn) {\n        die(\"Connection failed: \" . mysqli_connect_error());\n    }\n\n    // Sanitize inputs to prevent SQL injection\n    $userId = mysqli_real_escape_string($conn, $userId);\n    $productId = mysqli_real_escape_string($conn, $productId);\n    $rating = intval($rating); // Ensure rating is an integer\n    $comment = mysqli_real_escape_string($conn, $comment);\n\n    // Validate rating (assuming ratings are between 1 and 5)\n    if ($rating < 1 || $rating > 5) {\n        return \"Invalid rating. Please provide a rating between 1 and 5.\";\n    }\n\n    // SQL query to insert the review\n    $sql = \"INSERT INTO reviews (user_id, product_id, rating, comment, created_at)\n            VALUES ('$userId', '$productId', '$rating', '\" . ($comment ? \"'$comment'\" : \"NULL\") . \"', NOW())\";\n\n    if (mysqli_query($conn, $sql)) {\n        // Return success message\n        return \"Review submitted successfully!\";\n    } else {\n        // Return error message\n        return \"Error: \" . mysqli_error($conn);\n    }\n\n    // Close database connection\n    mysqli_close($conn);\n}\n\n// Function to get reviews for a product\nfunction getReviewsByProduct($productId) {\n    // Database connection details\n    $servername = \"localhost\";\n    $username = \"your_username\";\n    $password = \"your_password\";\n    $dbname = \"your_database\";\n\n    // Create connection\n    $conn = mysqli_connect($servername, $username, $password, $dbname);\n\n    // Check connection\n    if (!$conn) {\n        die(\"Connection failed: \" . mysqli_connect_error());\n    }\n\n    // Sanitize input to prevent SQL injection\n    $productId = mysqli_real_escape_string($conn, $productId);\n\n    // SQL query to fetch reviews for the product\n    $sql = \"SELECT * FROM reviews WHERE product_id = '$productId' ORDER BY created_at DESC\";\n    \n    // Optional: Limit the number of reviews returned\n    $limit = 5; // Change this value as needed\n    $sql .= \" LIMIT $limit\";\n\n    $result = mysqli_query($conn, $sql);\n    $reviews = array();\n\n    if ($result) {\n        while ($row = mysqli_fetch_assoc($result)) {\n            $review = array(\n                'id' => $row['id'],\n                'user_id' => $row['user_id'],\n                'product_id' => $row['product_id'],\n                'rating' => $row['rating'],\n                'comment' => $row['comment'],\n                'created_at' => $row['created_at']\n            );\n            array_push($reviews, $review);\n        }\n    } else {\n        // Return error message\n        return \"Error: \" . mysqli_error($conn);\n    }\n\n    // Close database connection\n    mysqli_close($conn);\n\n    return $reviews;\n}\n\n// Example usage:\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    $userId = $_POST['user_id'];\n    $productId = $_POST['product_id'];\n    $rating = $_POST['rating'];\n    $comment = $_POST['comment'];\n\n    // Create a new review\n    $reviewResult = createReview($userId, $productId, $rating, $comment);\n    echo $reviewResult;\n}\n\n// Get reviews for a specific product\n$productReviews = getReviewsByProduct(1); // Replace 1 with the actual product ID\n\n// Calculate average rating and display reviews\nif (is_array($productReviews)) {\n    $totalRating = 0;\n    foreach ($productReviews as $review) {\n        $totalRating += $review['rating'];\n    }\n    $averageRating = $totalRating / count($productReviews);\n\n    echo \"<h3>Product Reviews</h3>\";\n    echo \"<p>Average Rating: \" . number_format($averageRating, 1) . \"/5</p>\";\n\n    foreach ($productReviews as $review) {\n        // Display review details\n        echo \"<div class='review'>\";\n        echo \"<p><strong>\" . str_repeat(\"\u2605\", $review['rating']) . \"</strong></p>\";\n        if (!empty($review['comment'])) {\n            echo \"<p>\" . $review['comment'] . \"</p>\";\n        }\n        echo \"</div>\";\n    }\n}\n?>\n```"]}
