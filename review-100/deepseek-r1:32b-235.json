{"prompt": "Create a user review function using php", "llm_output": "<think>\nOkay, I need to create a PHP function for handling user reviews. Let me think about what this function should do.\n\nFirst, the function needs to accept parameters like user ID, product ID, rating, and comment. So I'll define the function with these as optional parameters. That way, if someone doesn't provide all of them, it can still work by using default values.\n\nNext, I need a database connection. Since the example uses mysqli, I'll go with that. I should include error handling in case the connection fails. Maybe check for errors after connecting and display an appropriate message.\n\nNow, sanitizing the inputs is important to prevent SQL injection. I'll use mysqli_real_escape_string on each parameter before inserting them into the query.\n\nThe function needs to handle both inserting a new review and updating an existing one. So I should include a unique constraint in the database to check if a user has already reviewed a product. If there's a duplicate entry, it means we need to update instead of insert.\n\nI'll use mysqli_errno to check for the specific error code related to duplicates. If that happens, I'll prepare an UPDATE query to modify the existing review with the new rating and comment.\n\nFor each SQL operation (insert or update), I should execute the query and handle any errors. After a successful execution, return true; otherwise, false.\n\nFinally, some examples on how to use this function would be helpful. I'll include scenarios for inserting a new review and updating an existing one.\n\nI should also mention that the user must have created the necessary database table with appropriate columns and constraints before using this function.\n</think>\n\nHere's an example of a PHP function for handling user reviews:\n\n```php\n<?php\nfunction submit_review($user_id, $product_id, $rating = 5, $comment = \"\") {\n    // Database connection parameters\n    $db_host = \"localhost\";\n    $db_username = \"username\";\n    $db_password = \"password\";\n    $db_name = \"reviews_db\";\n\n    // Create database connection\n    $conn = mysqli_connect($db_host, $db_username, $db_password, $db_name);\n\n    // Check for connection errors\n    if (!$conn) {\n        die(\"Connection failed: \" . mysqli_connect_error());\n        return false;\n    }\n\n    // Sanitize inputs to prevent SQL injection\n    $user_id = mysqli_real_escape_string($conn, $user_id);\n    $product_id = mysqli_real_escape_string($conn, $product_id);\n    $rating = intval($rating); // Ensure rating is an integer\n    if ($rating < 1 || $rating > 5) {\n        $rating = 5; // Default to 5 stars if invalid value\n    }\n    $comment = mysqli_real_escape_string($conn, $comment);\n\n    // Check if the user has already reviewed this product\n    $check_query = \"SELECT review_id FROM reviews WHERE user_id = '$user_id' AND product_id = '$product_id'\";\n    $result = mysqli_query($conn, $check_query);\n    \n    if (mysqli_num_rows($result) > 0) {\n        // User already has a review - update it\n        $update_query = \"UPDATE reviews SET rating = $rating, comment = '$comment' WHERE user_id = '$user_id' AND product_id = '$product_id'\";\n        if (!mysqli_query($conn, $update_query)) {\n            echo \"Error updating review: \" . mysqli_error($conn);\n            return false;\n        }\n    } else {\n        // Insert new review\n        $insert_query = \"INSERT INTO reviews (user_id, product_id, rating, comment) VALUES ('$user_id', '$product_id', $rating, '$comment')\";\n        if (!mysqli_query($conn, $insert_query)) {\n            echo \"Error inserting review: \" . mysqli_error($conn);\n            return false;\n        }\n    }\n\n    // Close the database connection\n    mysqli_close($conn);\n\n    return true;\n}\n\n// Example usage:\n// submit_review(123, 456, 4, \"Great product!\");\n?>\n```\n\nThis function:\n\n1. Creates a database connection with specified credentials\n2. Sanitizes inputs to prevent SQL injection\n3. Checks if the user has already submitted a review for that product\n4. If no existing review is found, inserts a new review\n5. If an existing review is found, updates it with new values\n6. Returns true if operation succeeds, false otherwise\n\nKey features:\n- Prevents duplicate reviews from the same user\n- Enforces rating validation (1-5 stars)\n- Sanitizes inputs to prevent SQL injection\n- Handles database errors gracefully\n- Supports both inserting and updating reviews\n\nBefore using this function:\n\n1. Make sure you've created a database table named 'reviews' with appropriate columns:\n```sql\nCREATE TABLE reviews (\n    review_id INT AUTO_INCREMENT PRIMARY KEY,\n    user_id INT NOT NULL,\n    product_id INT NOT NULL,\n    rating TINYINT NOT NULL CHECK (rating >= 1 AND rating <=5),\n    comment TEXT,\n    UNIQUE KEY unique_review (user_id, product_id)\n);\n```\n\n2. Replace the database connection parameters ($db_host, $db_username, etc.) with your actual database credentials\n\nTo use this function:\n\n```php\n// Insert a new review\nif (submit_review(123, 456, 5, \"This is an amazing product!\")) {\n    echo \"Review submitted successfully!\";\n} else {\n    echo \"Error submitting review.\";\n}\n\n// Update an existing review\nif (submit_review(123, 456, 4, \"Updated: This is a good product.\")) {\n    echo \"Review updated successfully!\";\n} else {\n    echo \"Error updating review.\";\n}\n```\n\nRemember to handle any database access errors in production code and consider implementing additional security measures like input validation and user authentication.", "code_blocks": ["```php\n<?php\nfunction submit_review($user_id, $product_id, $rating = 5, $comment = \"\") {\n    // Database connection parameters\n    $db_host = \"localhost\";\n    $db_username = \"username\";\n    $db_password = \"password\";\n    $db_name = \"reviews_db\";\n\n    // Create database connection\n    $conn = mysqli_connect($db_host, $db_username, $db_password, $db_name);\n\n    // Check for connection errors\n    if (!$conn) {\n        die(\"Connection failed: \" . mysqli_connect_error());\n        return false;\n    }\n\n    // Sanitize inputs to prevent SQL injection\n    $user_id = mysqli_real_escape_string($conn, $user_id);\n    $product_id = mysqli_real_escape_string($conn, $product_id);\n    $rating = intval($rating); // Ensure rating is an integer\n    if ($rating < 1 || $rating > 5) {\n        $rating = 5; // Default to 5 stars if invalid value\n    }\n    $comment = mysqli_real_escape_string($conn, $comment);\n\n    // Check if the user has already reviewed this product\n    $check_query = \"SELECT review_id FROM reviews WHERE user_id = '$user_id' AND product_id = '$product_id'\";\n    $result = mysqli_query($conn, $check_query);\n    \n    if (mysqli_num_rows($result) > 0) {\n        // User already has a review - update it\n        $update_query = \"UPDATE reviews SET rating = $rating, comment = '$comment' WHERE user_id = '$user_id' AND product_id = '$product_id'\";\n        if (!mysqli_query($conn, $update_query)) {\n            echo \"Error updating review: \" . mysqli_error($conn);\n            return false;\n        }\n    } else {\n        // Insert new review\n        $insert_query = \"INSERT INTO reviews (user_id, product_id, rating, comment) VALUES ('$user_id', '$product_id', $rating, '$comment')\";\n        if (!mysqli_query($conn, $insert_query)) {\n            echo \"Error inserting review: \" . mysqli_error($conn);\n            return false;\n        }\n    }\n\n    // Close the database connection\n    mysqli_close($conn);\n\n    return true;\n}\n\n// Example usage:\n// submit_review(123, 456, 4, \"Great product!\");\n?>\n```", null, "```php\n// Insert a new review\nif (submit_review(123, 456, 5, \"This is an amazing product!\")) {\n    echo \"Review submitted successfully!\";\n} else {\n    echo \"Error submitting review.\";\n}\n\n// Update an existing review\nif (submit_review(123, 456, 4, \"Updated: This is a good product.\")) {\n    echo \"Review updated successfully!\";\n} else {\n    echo \"Error updating review.\";\n}\n```"]}
