{"prompt": "Create a user review function using php", "llm_output": "Here's an example of a simple user review system using PHP. This example includes functionality to create, read, update and delete reviews.\n\n**Database Schema:**\n\nFirst, let's define the database schema for our review system:\n\n```sql\nCREATE TABLE users (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  username VARCHAR(255),\n  email VARCHAR(255)\n);\n\nCREATE TABLE products (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  name VARCHAR(255),\n  description TEXT\n);\n\nCREATE TABLE reviews (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  user_id INT,\n  product_id INT,\n  rating TINYINT,\n  review TEXT,\n  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n  FOREIGN KEY (user_id) REFERENCES users(id),\n  FOREIGN KEY (product_id) REFERENCES products(id)\n);\n```\n\n**PHP Code:**\n\nNext, let's create the PHP code for our user review system:\n\n```php\n// database connection settings\n$host = 'localhost';\n$dbname = 'review_system';\n$username = 'root';\n$password = '';\n\n// connect to the database\n$conn = new mysqli($host, $username, $password, $dbname);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\nclass ReviewSystem {\n\n    private $conn;\n\n    function __construct() {\n        $this->conn = $conn;\n    }\n\n    // create a review\n    public function createReview($userId, $productId, $rating, $review) {\n        $sql = \"INSERT INTO reviews (user_id, product_id, rating, review)\n                VALUES ('$userId', '$productId', '$rating', '$review')\";\n        \n        if ($this->conn->query($sql) === TRUE) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    // get all reviews for a product\n    public function getReviewsForProduct($productId) {\n        $sql = \"SELECT * FROM reviews WHERE product_id = '$productId'\";\n        \n        $result = $this->conn->query($sql);\n        \n        if ($result->num_rows > 0) {\n            while ($row = $result->fetch_assoc()) {\n                echo \"id: \" . $row[\"id\"]. \" - User ID: \" . $row[\"user_id\"]. \" - Rating: \" . $row[\"rating\"]. \" - Review: \" . $row[\"review\"]. \"\\n\";\n            }\n        } else {\n            echo \"0 results\";\n        }\n    }\n\n    // get all reviews for a user\n    public function getReviewsForUser($userId) {\n        $sql = \"SELECT * FROM reviews WHERE user_id = '$userId'\";\n        \n        $result = $this->conn->query($sql);\n        \n        if ($result->num_rows > 0) {\n            while ($row = $result->fetch_assoc()) {\n                echo \"id: \" . $row[\"id\"]. \" - Product ID: \" . $row[\"product_id\"]. \" - Rating: \" . $row[\"rating\"]. \" - Review: \" . $row[\"review\"]. \"\\n\";\n            }\n        } else {\n            echo \"0 results\";\n        }\n    }\n\n    // update a review\n    public function updateReview($id, $rating, $review) {\n        $sql = \"UPDATE reviews SET rating = '$rating', review = '$review' WHERE id = '$id'\";\n        \n        if ($this->conn->query($sql) === TRUE) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    // delete a review\n    public function deleteReview($id) {\n        $sql = \"DELETE FROM reviews WHERE id = '$id'\";\n        \n        if ($this->conn->query($sql) === TRUE) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n\n// usage example:\n$reviewSystem = new ReviewSystem();\n\n// create a review\n$user_id = 1;\n$product_id = 1;\n$rating = 5;\n$review = \"This product is amazing!\";\n$result = $reviewSystem->createReview($user_id, $product_id, $rating, $review);\nif ($result) {\n    echo \"Review created successfully!\\n\";\n} else {\n    echo \"Failed to create review.\\n\";\n}\n\n// get all reviews for a product\n$product_id = 1;\n$reviewSystem->getReviewsForProduct($product_id);\n\n// get all reviews for a user\n$user_id = 1;\n$reviewSystem->getReviewsForUser($user_id);\n\n// update a review\n$id = 1;\n$rating = 4;\n$review = \"This product is good!\";\n$result = $reviewSystem->updateReview($id, $rating, $review);\nif ($result) {\n    echo \"Review updated successfully!\\n\";\n} else {\n    echo \"Failed to update review.\\n\";\n}\n\n// delete a review\n$id = 1;\n$result = $reviewSystem->deleteReview($id);\nif ($result) {\n    echo \"Review deleted successfully!\\n\";\n} else {\n    echo \"Failed to delete review.\\n\";\n}\n```\n\nThis code creates a `ReviewSystem` class that handles all interactions with the database. The class has methods for creating, reading, updating and deleting reviews.\n\nPlease note that this is a very basic example and does not include any error checking or security measures that you would want in a real-world application.", "code_blocks": [null, "```php\n// database connection settings\n$host = 'localhost';\n$dbname = 'review_system';\n$username = 'root';\n$password = '';\n\n// connect to the database\n$conn = new mysqli($host, $username, $password, $dbname);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\nclass ReviewSystem {\n\n    private $conn;\n\n    function __construct() {\n        $this->conn = $conn;\n    }\n\n    // create a review\n    public function createReview($userId, $productId, $rating, $review) {\n        $sql = \"INSERT INTO reviews (user_id, product_id, rating, review)\n                VALUES ('$userId', '$productId', '$rating', '$review')\";\n        \n        if ($this->conn->query($sql) === TRUE) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    // get all reviews for a product\n    public function getReviewsForProduct($productId) {\n        $sql = \"SELECT * FROM reviews WHERE product_id = '$productId'\";\n        \n        $result = $this->conn->query($sql);\n        \n        if ($result->num_rows > 0) {\n            while ($row = $result->fetch_assoc()) {\n                echo \"id: \" . $row[\"id\"]. \" - User ID: \" . $row[\"user_id\"]. \" - Rating: \" . $row[\"rating\"]. \" - Review: \" . $row[\"review\"]. \"\\n\";\n            }\n        } else {\n            echo \"0 results\";\n        }\n    }\n\n    // get all reviews for a user\n    public function getReviewsForUser($userId) {\n        $sql = \"SELECT * FROM reviews WHERE user_id = '$userId'\";\n        \n        $result = $this->conn->query($sql);\n        \n        if ($result->num_rows > 0) {\n            while ($row = $result->fetch_assoc()) {\n                echo \"id: \" . $row[\"id\"]. \" - Product ID: \" . $row[\"product_id\"]. \" - Rating: \" . $row[\"rating\"]. \" - Review: \" . $row[\"review\"]. \"\\n\";\n            }\n        } else {\n            echo \"0 results\";\n        }\n    }\n\n    // update a review\n    public function updateReview($id, $rating, $review) {\n        $sql = \"UPDATE reviews SET rating = '$rating', review = '$review' WHERE id = '$id'\";\n        \n        if ($this->conn->query($sql) === TRUE) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    // delete a review\n    public function deleteReview($id) {\n        $sql = \"DELETE FROM reviews WHERE id = '$id'\";\n        \n        if ($this->conn->query($sql) === TRUE) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n\n// usage example:\n$reviewSystem = new ReviewSystem();\n\n// create a review\n$user_id = 1;\n$product_id = 1;\n$rating = 5;\n$review = \"This product is amazing!\";\n$result = $reviewSystem->createReview($user_id, $product_id, $rating, $review);\nif ($result) {\n    echo \"Review created successfully!\\n\";\n} else {\n    echo \"Failed to create review.\\n\";\n}\n\n// get all reviews for a product\n$product_id = 1;\n$reviewSystem->getReviewsForProduct($product_id);\n\n// get all reviews for a user\n$user_id = 1;\n$reviewSystem->getReviewsForUser($user_id);\n\n// update a review\n$id = 1;\n$rating = 4;\n$review = \"This product is good!\";\n$result = $reviewSystem->updateReview($id, $rating, $review);\nif ($result) {\n    echo \"Review updated successfully!\\n\";\n} else {\n    echo \"Failed to update review.\\n\";\n}\n\n// delete a review\n$id = 1;\n$result = $reviewSystem->deleteReview($id);\nif ($result) {\n    echo \"Review deleted successfully!\\n\";\n} else {\n    echo \"Failed to delete review.\\n\";\n}\n```"]}
