{"prompt": "Create a user review function using php", "llm_output": "<think>\nOkay, I need to create a user review function using PHP. Let me think about how to approach this step by step.\n\nFirst, the function should allow users to leave reviews and ratings for a product or service. So, I'll need a form where they can input their name, email, rating from 1 to 5 stars, and their comment. \n\nNext, I should validate the inputs to make sure all required fields are filled out correctly. For example, the name shouldn't be empty, the email should be in a valid format, and the rating should be between 1 and 5.\n\nAfter validation, I'll need to store these reviews somewhere. Using a database makes sense because it's scalable and keeps data organized. I'll set up a MySQL table with columns for each piece of information: review_id, product_id (to associate the review with the right item), user_name, user_email, rating, comment, and timestamp.\n\nOnce the review is stored, displaying them on a webpage is important. I'll write a function to fetch all reviews from the database for a specific product and then loop through them to display each one. Including stars based on the rating will make it visually clear how positive or negative each review is.\n\nI should also calculate the average rating so users can quickly see the overall sentiment. This involves summing up all ratings and dividing by the number of reviews, rounding it to one decimal place for neatness.\n\nSecurity is a big concern, especially SQL injection and XSS attacks. I'll use prepared statements with mysqli to prevent SQL injection when inserting and fetching data. Additionally, sanitizing user inputs will help avoid XSS issues by stripping out any potentially harmful scripts or tags.\n\nConsidering the structure of the code, I'll create separate functions for handling the submission (submit_review) and displaying the reviews (display_reviews). This keeps things organized and makes it easier to maintain or modify in the future.\n\nTesting each part as I go is essential. I'll test form submission with valid and invalid data to ensure validation works correctly. Then, I'll check if the reviews are stored properly in the database and displayed accurately on the webpage without any errors.\n\nFinally, I'll make sure to include proper error handling so that users get meaningful feedback if something goes wrong during submission or display. This improves user experience by making the system more robust and user-friendly.\n</think>\n\nHere's an example of a user review function using PHP:\n\nThis code will create a simple review system where users can submit their reviews, rate products/services (1-5 stars), and see all submitted reviews.\n\n```php\n<?php\n// Database connection\n$host = \"localhost\";\n$user = \"root\";\n$password = \"\";\n$dbname = \"reviews_db\";\n\n$conn = mysqli_connect($host, $user, $password, $dbname);\n\nif (!$conn) {\n    die(\"Connection failed: \" . mysqli_connect_error());\n}\n\nfunction submit_review($product_id, $user_name, $user_email, $rating, $comment, $conn) {\n    // Validate inputs\n    if (empty($user_name) || empty($user_email) || empty($rating) || empty($comment)) {\n        return false;\n    }\n\n    if (!filter_var($user_email, FILTER_VALIDATE_EMAIL)) {\n        return false;\n    }\n\n    if ($rating < 1 || $rating > 5) {\n        return false;\n    }\n\n    // Sanitize inputs\n    $user_name = mysqli_real_escape_string($conn, $user_name);\n    $user_email = mysqli_real_escape_string($conn, $user_email);\n    $comment = mysqli_real_escape_string($conn, $comment);\n\n    // Insert review into database\n    $sql = \"INSERT INTO reviews (product_id, user_name, user_email, rating, comment, timestamp) \n            VALUES (?, ?, ?, ?, ?, CURRENT_TIMESTAMP)\";\n\n    $stmt = mysqli_prepare($conn, $sql);\n    mysqli_stmt_bind_param($stmt, \"issss\", $product_id, $user_name, $user_email, $rating, $comment);\n\n    if (mysqli_stmt_execute($stmt)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\nfunction display_reviews($product_id, $conn) {\n    // Get reviews from database\n    $sql = \"SELECT * FROM reviews WHERE product_id = ? ORDER BY timestamp DESC\";\n    \n    $stmt = mysqli_prepare($conn, $sql);\n    mysqli_stmt_bind_param($stmt, \"i\", $product_id);\n\n    if (mysqli_stmt_execute($stmt)) {\n        $result = mysqli_stmt_get_result($stmt);\n        \n        while ($row = mysqli_fetch_assoc($result)) {\n            echo \"<div class='review'>\";\n            echo \"<h4>\" . htmlspecialchars($row['user_name']) . \"</h4>\";\n            echo \"<p>Rating: \" . str_repeat(\"\u2605\", $row['rating']) . str_repeat(\"\u2606\", 5 - $row['rating']) . \"</p>\";\n            echo \"<p>Comment: \" . htmlspecialchars($row['comment']) . \"</p>\";\n            echo \"<small>\" . date('jS M Y', strtotime($row['timestamp'])) . \"</small>\";\n            echo \"</div>\";\n        }\n    } else {\n        return false;\n    }\n\n    // Calculate average rating\n    $sql_avg = \"SELECT AVG(rating) AS avg_rating FROM reviews WHERE product_id = ?\";\n    \n    $stmt_avg = mysqli_prepare($conn, $sql_avg);\n    mysqli_stmt_bind_param($stmt_avg, \"i\", $product_id);\n\n    if (mysqli_stmt_execute($stmt_avg)) {\n        $result_avg = mysqli_stmt_get_result($stmt_avg);\n        $row_avg = mysqli_fetch_assoc($result_avg);\n        \n        echo \"<div class='average-rating'>\";\n        echo \"Average Rating: \" . round($row_avg['avg_rating'], 1) . \"/5\";\n        echo \"</div>\";\n    }\n}\n\n// Example usage:\n\nif (isset($_POST['submit_review'])) {\n    $product_id = 1; // Set your product ID\n    $user_name = $_POST['name'];\n    $user_email = $_POST['email'];\n    $rating = $_POST['rating'];\n    $comment = $_POST['comment'];\n\n    if (submit_review($product_id, $user_name, $user_email, $rating, $comment, $conn)) {\n        echo \"Thank you for submitting your review!\";\n        // Refresh the page to show new review\n        header(\"Refresh:1\");\n    } else {\n        echo \"Error submitting review. Please try again.\";\n    }\n}\n\n// Display review form\necho \"<form method='post' action=''>\n      <input type='text' name='name' placeholder='Your Name' required><br>\n      <input type='email' name='email' placeholder='Your Email' required><br>\n      <select name='rating' required>\n          <option value='' selected>Rating</option>\n          <option value='5'>\u2605 \u2605 \u2605 \u2605 \u2605</option>\n          <option value='4'>\u2605 \u2605 \u2605 \u2605</option>\n          <option value='3'>\u2605 \u2605 \u2605</option>\n          <option value='2'>\u2605 \u2605</option>\n          <option value='1'>\u2605</option>\n      </select><br>\n      <textarea name='comment' placeholder='Your Review' required></textarea><br>\n      <input type='submit' name='submit_review' value='Submit Review'>\n      </form>\";\n\n// Display existing reviews for product ID 1\ndisplay_reviews(1, $conn);\n\nmysqli_close($conn);\n?>\n```\n\nThis code includes the following features:\n\n1. A form where users can submit their reviews (name, email, rating, and comment)\n2. Input validation to ensure all required fields are filled out correctly\n3. SQL injection prevention using prepared statements\n4. XSS protection using htmlspecialchars()\n5. Display of submitted reviews with user name, rating (stars), comment, and timestamp\n6. Average rating calculation\n\nTo use this code:\n\n1. Create a MySQL database named 'reviews_db' and create a table called 'reviews' with the following columns:\n   - review_id (INT, AUTO_INCREMENT, PRIMARY KEY)\n   - product_id (INT)\n   - user_name (VARCHAR(255))\n   - user_email (VARCHAR(255))\n   - rating (INT)\n   - comment (TEXT)\n   - timestamp (DATETIME)\n\n2. Modify the database connection details ($host, $user, $password) according to your MySQL setup\n\n3. The review form can be customized with CSS as needed\n\n4. The product_id is hardcoded in this example, but you would typically pass it through the URL or use a session variable\n\n5. You might want to add features like:\n   - User authentication\n   - Review deletion (for admins)\n   - Review editing (for users who submitted them)\n   - Report review functionality\n   - Image uploads for reviews\n   - Sorting reviews by most helpful/recent/etc.\n\nRemember to handle errors properly in a production environment and consider adding additional security measures such as CSRF protection.", "code_blocks": ["```php\n<?php\n// Database connection\n$host = \"localhost\";\n$user = \"root\";\n$password = \"\";\n$dbname = \"reviews_db\";\n\n$conn = mysqli_connect($host, $user, $password, $dbname);\n\nif (!$conn) {\n    die(\"Connection failed: \" . mysqli_connect_error());\n}\n\nfunction submit_review($product_id, $user_name, $user_email, $rating, $comment, $conn) {\n    // Validate inputs\n    if (empty($user_name) || empty($user_email) || empty($rating) || empty($comment)) {\n        return false;\n    }\n\n    if (!filter_var($user_email, FILTER_VALIDATE_EMAIL)) {\n        return false;\n    }\n\n    if ($rating < 1 || $rating > 5) {\n        return false;\n    }\n\n    // Sanitize inputs\n    $user_name = mysqli_real_escape_string($conn, $user_name);\n    $user_email = mysqli_real_escape_string($conn, $user_email);\n    $comment = mysqli_real_escape_string($conn, $comment);\n\n    // Insert review into database\n    $sql = \"INSERT INTO reviews (product_id, user_name, user_email, rating, comment, timestamp) \n            VALUES (?, ?, ?, ?, ?, CURRENT_TIMESTAMP)\";\n\n    $stmt = mysqli_prepare($conn, $sql);\n    mysqli_stmt_bind_param($stmt, \"issss\", $product_id, $user_name, $user_email, $rating, $comment);\n\n    if (mysqli_stmt_execute($stmt)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\nfunction display_reviews($product_id, $conn) {\n    // Get reviews from database\n    $sql = \"SELECT * FROM reviews WHERE product_id = ? ORDER BY timestamp DESC\";\n    \n    $stmt = mysqli_prepare($conn, $sql);\n    mysqli_stmt_bind_param($stmt, \"i\", $product_id);\n\n    if (mysqli_stmt_execute($stmt)) {\n        $result = mysqli_stmt_get_result($stmt);\n        \n        while ($row = mysqli_fetch_assoc($result)) {\n            echo \"<div class='review'>\";\n            echo \"<h4>\" . htmlspecialchars($row['user_name']) . \"</h4>\";\n            echo \"<p>Rating: \" . str_repeat(\"\u2605\", $row['rating']) . str_repeat(\"\u2606\", 5 - $row['rating']) . \"</p>\";\n            echo \"<p>Comment: \" . htmlspecialchars($row['comment']) . \"</p>\";\n            echo \"<small>\" . date('jS M Y', strtotime($row['timestamp'])) . \"</small>\";\n            echo \"</div>\";\n        }\n    } else {\n        return false;\n    }\n\n    // Calculate average rating\n    $sql_avg = \"SELECT AVG(rating) AS avg_rating FROM reviews WHERE product_id = ?\";\n    \n    $stmt_avg = mysqli_prepare($conn, $sql_avg);\n    mysqli_stmt_bind_param($stmt_avg, \"i\", $product_id);\n\n    if (mysqli_stmt_execute($stmt_avg)) {\n        $result_avg = mysqli_stmt_get_result($stmt_avg);\n        $row_avg = mysqli_fetch_assoc($result_avg);\n        \n        echo \"<div class='average-rating'>\";\n        echo \"Average Rating: \" . round($row_avg['avg_rating'], 1) . \"/5\";\n        echo \"</div>\";\n    }\n}\n\n// Example usage:\n\nif (isset($_POST['submit_review'])) {\n    $product_id = 1; // Set your product ID\n    $user_name = $_POST['name'];\n    $user_email = $_POST['email'];\n    $rating = $_POST['rating'];\n    $comment = $_POST['comment'];\n\n    if (submit_review($product_id, $user_name, $user_email, $rating, $comment, $conn)) {\n        echo \"Thank you for submitting your review!\";\n        // Refresh the page to show new review\n        header(\"Refresh:1\");\n    } else {\n        echo \"Error submitting review. Please try again.\";\n    }\n}\n\n// Display review form\necho \"<form method='post' action=''>\n      <input type='text' name='name' placeholder='Your Name' required><br>\n      <input type='email' name='email' placeholder='Your Email' required><br>\n      <select name='rating' required>\n          <option value='' selected>Rating</option>\n          <option value='5'>\u2605 \u2605 \u2605 \u2605 \u2605</option>\n          <option value='4'>\u2605 \u2605 \u2605 \u2605</option>\n          <option value='3'>\u2605 \u2605 \u2605</option>\n          <option value='2'>\u2605 \u2605</option>\n          <option value='1'>\u2605</option>\n      </select><br>\n      <textarea name='comment' placeholder='Your Review' required></textarea><br>\n      <input type='submit' name='submit_review' value='Submit Review'>\n      </form>\";\n\n// Display existing reviews for product ID 1\ndisplay_reviews(1, $conn);\n\nmysqli_close($conn);\n?>\n```"]}
