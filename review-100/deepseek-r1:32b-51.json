{"prompt": "Create a user review function using php", "llm_output": "<think>\nOkay, I need to create a user review function using PHP. Let me think about how to approach this.\n\nFirst, the function should allow users to submit reviews with a rating and comments. So I'll need an HTML form for that. The form should have a dropdown or stars for the rating, probably from 1 to 5, and a text area for comments.\n\nNext, the submitted data needs to be stored in a database. I'll set up a MySQL table named something like 'reviews' with columns for review ID, user name, product ID (since reviews are usually for specific products), rating, comment, and timestamp.\n\nNow, handling the form submission. I'll write PHP code to process the POST data. Before inserting into the database, I need to sanitize the inputs to prevent SQL injection and XSS attacks. Using mysqli_real_escape_string should help with that.\n\nThen, after sanitizing, I'll insert the data into the 'reviews' table using an INSERT query. Also, I should include a check for PHP version to handle deprecated functions like mysql_real_escape_string by using mysqli instead.\n\nNow, displaying the reviews is important. I'll create another function to fetch and display them. It should calculate the average rating. For each review, show the user name, rating as stars, comment, and timestamp formatted nicely.\n\nI'll use a SELECT query to get all reviews for a specific product ID, ordered by submission date. Then loop through each result to display them. The average rating is calculated by summing all ratings and dividing by the count of reviews.\n\nStyling with CSS will make it look nice. I'll add star icons using a class that applies background or font Awesome icons. Also, format the timestamp into a human-readable date.\n\nError handling should be included in case there are no reviews yet or database errors occur. Using try-catch blocks can help manage exceptions and display appropriate messages to the user.\n\nI should also consider security aspects like prepared statements for SQL injection prevention, but since I'm using mysqli_real_escape_string, it's a step in that direction. Additionally, sanitizing the output with htmlspecialchars when displaying comments is crucial to prevent XSS attacks.\n\nTesting each part step by step: form submission works, data inserts into the database correctly, reviews are fetched and displayed properly, average rating is accurate, and error handling shows correct messages.\n\nPutting it all together, I'll write the HTML form, the PHP functions for submitting and displaying reviews, include necessary CSS styles, and ensure everything is connected in a single PHP file or appropriately included as needed.\n</think>\n\nHere's an example of a user review function using PHP:\n\n```php\n<?php\n// Database configuration\n$host = 'localhost';\n$user = 'username';\n$password = 'password';\n$db_name = 'reviews_db';\n\n// Connect to the database\n$conn = mysqli_connect($host, $user, $password, $db_name);\n\n// Create reviews table if it doesn't exist\n$sql = \"CREATE TABLE IF NOT EXISTS reviews (\n    id INT AUTO_INCREMENT PRIMARY KEY,\n    user_name VARCHAR(255),\n    product_id INT,\n    rating INT,\n    comment TEXT,\n    timestamp DATETIME\n)\";\n\nmysqli_query($conn, $sql);\n\n// Function to submit a review\nfunction submitReview() {\n    global $conn;\n    \n    // Check if form is submitted\n    if ($_SERVER['REQUEST_METHOD'] == 'POST') {\n        // Sanitize inputs\n        $user_name = mysqli_real_escape_string($conn, $_POST['user_name']);\n        $product_id = mysqli_real_escape_string($conn, $_POST['product_id']);\n        $rating = intval($_POST['rating']);\n        $comment = mysqli_real_escape_string($conn, $_POST['comment']);\n        \n        // Insert review into database\n        $sql = \"INSERT INTO reviews (user_name, product_id, rating, comment, timestamp)\n                VALUES ('$user_name', '$product_id', '$rating', '$comment', NOW())\";\n        \n        if (!mysqli_query($conn, $sql)) {\n            die('Error submitting review: ' . mysqli_error($conn));\n        }\n    }\n}\n\n// Function to display reviews\nfunction displayReviews($product_id) {\n    global $conn;\n    \n    // Get reviews for product\n    $sql = \"SELECT * FROM reviews WHERE product_id = '$product_id' ORDER BY timestamp DESC\";\n    $result = mysqli_query($conn, $sql);\n    \n    if (mysqli_num_rows($result) > 0) {\n        echo '<div class=\"reviews\">';\n        \n        // Calculate average rating\n        $sum_ratings = 0;\n        $count = 0;\n        while ($row = mysqli_fetch_assoc($result)) {\n            $sum_ratings += $row['rating'];\n            $count++;\n        }\n        $average_rating = number_format(($sum_ratings / $count), 1);\n        \n        echo '<div class=\"average-rating\">';\n        echo '<h3>Average Rating:</h3>';\n        echo '<p>' . $average_rating . '/5</p>';\n        echo '</div>';\n        \n        // Reset result pointer\n        mysqli_data_seek($result, 0);\n        \n        while ($row = mysqli_fetch_assoc($result)) {\n            $user_name = htmlspecialchars($row['user_name']);\n            $rating = $row['rating'];\n            $comment = htmlspecialchars($row['comment']);\n            $timestamp = date('M j, Y g:i a', strtotime($row['timestamp']));\n            \n            echo '<div class=\"review\">';\n            echo '<div class=\"review-header\">';\n            echo '<span class=\"user-name\">' . $user_name . '</span>';\n            echo '<div class=\"rating\">';\n            for ($i = 1; $i <= 5; $i++) {\n                if ($i <= $rating) {\n                    echo '<span class=\"star\">\u2605</span>';\n                } else {\n                    echo '<span class=\"star\">\u2606</span>';\n                }\n            }\n            echo '</div>';\n            echo '</div>';\n            echo '<p class=\"comment\">' . $comment . '</p>';\n            echo '<small class=\"timestamp\">' . $timestamp . '</small>';\n            echo '</div>';\n        }\n        \n        echo '</div>';\n    } else {\n        echo 'No reviews yet.';\n    }\n}\n\n// Close database connection\nmysqli_close($conn);\n?>\n```\n\nHere's the corresponding HTML form for submitting reviews:\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Product Review</title>\n    <style>\n        .review-form {\n            max-width: 600px;\n            margin: 20px auto;\n            padding: 20px;\n            border: 1px solid #ccc;\n            border-radius: 5px;\n        }\n        \n        .star-rating {\n            display: flex;\n            gap: 5px;\n        }\n        \n        .star {\n            font-size: 24px;\n            cursor: pointer;\n            color: #999;\n        }\n        \n        .star:hover {\n            color: gold;\n        }\n        \n        textarea {\n            width: 100%;\n            height: 100px;\n            margin: 10px 0;\n            padding: 5px;\n            box-sizing: border-box;\n        }\n    </style>\n</head>\n<body>\n\n<div class=\"review-form\">\n    <h2>Submit Your Review</h2>\n    <form method=\"post\" action=\"<?php echo $_SERVER['PHP_SELF']; ?>\">\n        <input type=\"hidden\" name=\"product_id\" value=\"1\">\n        \n        <label for=\"user_name\">Your Name:</label><br>\n        <input type=\"text\" id=\"user_name\" name=\"user_name\" required><br><br>\n\n        <label for=\"rating\">Rating:</label><div class=\"star-rating\">\n            <input type=\"radio\" id=\"5-star\" name=\"rating\" value=\"5\">\n            <label for=\"5-star\" class=\"star\">\u2605</label>\n            <input type=\"radio\" id=\"4-star\" name=\"rating\" value=\"4\">\n            <label for=\"4-star\" class=\"star\">\u2605</label>\n            <input type=\"radio\" id=\"3-star\" name=\"rating\" value=\"3\">\n            <label for=\"3-star\" class=\"star\">\u2605</label>\n            <input type=\"radio\" id=\"2-star\" name=\"rating\" value=\"2\">\n            <label for=\"2-star\" class=\"star\">\u2605</label>\n            <input type=\"radio\" id=\"1-star\" name=\"rating\" value=\"1\">\n            <label for=\"1-star\" class=\"star\">\u2605</label>\n        </div><br>\n\n        <label for=\"comment\">Comment:</label><br>\n        <textarea id=\"comment\" name=\"comment\" required></textarea><br><br>\n\n        <button type=\"submit\">Submit Review</button>\n    </form>\n</div>\n\n<?php\n// Display reviews with the form\ndisplayReviews(1);\n?>\n\n</body>\n</html>\n```\n\nFeatures of this review system:\n\n1. Users can submit their reviews with a rating (1-5 stars) and comments\n\n2. Reviews are stored in a MySQL database table\n\n3. The system displays all reviews for a product, showing:\n   - User name\n   - Rating stars\n   - Comment text\n   - Submission timestamp\n   - Average rating\n\n4. Reviews are ordered by submission date (most recent first)\n\n5. Input sanitization to prevent SQL injection and XSS attacks\n\n6. Error handling for database operations\n\n7. Clean, responsive design with CSS styling\n\nTo use this system:\n\n1. Set up your database credentials in the PHP script\n\n2. Make sure the database table is created\n\n3. Include both the PHP code and HTML form on your webpage\n\n4. Adjust the product_id value as needed for different products\n\nYou can customize the appearance by modifying the CSS styles, and extend functionality by adding features like:\n\n- User authentication\n- Review moderation\n- Sorting options (newest/oldest/highest rated)\n- Reply to reviews\n- Report inappropriate content\n- More detailed user profiles\n\nRemember to:\n- Use prepared statements or PDO for better security\n- Implement CSRF protection\n- Add validation on both client and server sides\n- Handle database connection errors properly\n- Keep your code clean and maintainable", "code_blocks": ["```php\n<?php\n// Database configuration\n$host = 'localhost';\n$user = 'username';\n$password = 'password';\n$db_name = 'reviews_db';\n\n// Connect to the database\n$conn = mysqli_connect($host, $user, $password, $db_name);\n\n// Create reviews table if it doesn't exist\n$sql = \"CREATE TABLE IF NOT EXISTS reviews (\n    id INT AUTO_INCREMENT PRIMARY KEY,\n    user_name VARCHAR(255),\n    product_id INT,\n    rating INT,\n    comment TEXT,\n    timestamp DATETIME\n)\";\n\nmysqli_query($conn, $sql);\n\n// Function to submit a review\nfunction submitReview() {\n    global $conn;\n    \n    // Check if form is submitted\n    if ($_SERVER['REQUEST_METHOD'] == 'POST') {\n        // Sanitize inputs\n        $user_name = mysqli_real_escape_string($conn, $_POST['user_name']);\n        $product_id = mysqli_real_escape_string($conn, $_POST['product_id']);\n        $rating = intval($_POST['rating']);\n        $comment = mysqli_real_escape_string($conn, $_POST['comment']);\n        \n        // Insert review into database\n        $sql = \"INSERT INTO reviews (user_name, product_id, rating, comment, timestamp)\n                VALUES ('$user_name', '$product_id', '$rating', '$comment', NOW())\";\n        \n        if (!mysqli_query($conn, $sql)) {\n            die('Error submitting review: ' . mysqli_error($conn));\n        }\n    }\n}\n\n// Function to display reviews\nfunction displayReviews($product_id) {\n    global $conn;\n    \n    // Get reviews for product\n    $sql = \"SELECT * FROM reviews WHERE product_id = '$product_id' ORDER BY timestamp DESC\";\n    $result = mysqli_query($conn, $sql);\n    \n    if (mysqli_num_rows($result) > 0) {\n        echo '<div class=\"reviews\">';\n        \n        // Calculate average rating\n        $sum_ratings = 0;\n        $count = 0;\n        while ($row = mysqli_fetch_assoc($result)) {\n            $sum_ratings += $row['rating'];\n            $count++;\n        }\n        $average_rating = number_format(($sum_ratings / $count), 1);\n        \n        echo '<div class=\"average-rating\">';\n        echo '<h3>Average Rating:</h3>';\n        echo '<p>' . $average_rating . '/5</p>';\n        echo '</div>';\n        \n        // Reset result pointer\n        mysqli_data_seek($result, 0);\n        \n        while ($row = mysqli_fetch_assoc($result)) {\n            $user_name = htmlspecialchars($row['user_name']);\n            $rating = $row['rating'];\n            $comment = htmlspecialchars($row['comment']);\n            $timestamp = date('M j, Y g:i a', strtotime($row['timestamp']));\n            \n            echo '<div class=\"review\">';\n            echo '<div class=\"review-header\">';\n            echo '<span class=\"user-name\">' . $user_name . '</span>';\n            echo '<div class=\"rating\">';\n            for ($i = 1; $i <= 5; $i++) {\n                if ($i <= $rating) {\n                    echo '<span class=\"star\">\u2605</span>';\n                } else {\n                    echo '<span class=\"star\">\u2606</span>';\n                }\n            }\n            echo '</div>';\n            echo '</div>';\n            echo '<p class=\"comment\">' . $comment . '</p>';\n            echo '<small class=\"timestamp\">' . $timestamp . '</small>';\n            echo '</div>';\n        }\n        \n        echo '</div>';\n    } else {\n        echo 'No reviews yet.';\n    }\n}\n\n// Close database connection\nmysqli_close($conn);\n?>\n```", null]}
