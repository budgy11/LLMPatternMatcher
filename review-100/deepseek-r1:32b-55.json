{"prompt": "Create a user review function using php", "llm_output": "<think>\nOkay, the user wants me to create a user review function using PHP. Let me think about how to approach this.\n\nFirst, I need to understand what a user review system entails. It should allow users to leave reviews and ratings for something, maybe a product or service. So, I'll need a way for users to input their reviews and display them afterward.\n\nI should start by setting up a form where users can enter their name, email, rating, and comment. That makes sense because it's straightforward and collects necessary information.\n\nNext, the data needs to be stored somewhere. Using a MySQL database is a good choice here. I'll need to create a table to hold the reviews, including fields like review ID, user details, rating, comment, and timestamp. This will help in retrieving and displaying the reviews later.\n\nSecurity is important, so I should make sure to sanitize the inputs to prevent SQL injection or XSS attacks. Using functions like mysqli_real_escape_string can help with that.\n\nAfter submitting the form, the data should be inserted into the database. Then, I'll redirect the user back to the review page so they can see their new review along with others.\n\nNow, displaying the reviews is another key part. I'll need to fetch all entries from the reviews table, order them by the most recent first. For each review, display the user's name, email, rating as stars, comment, and the date it was posted.\n\nCalculating the average rating would be useful too. I can do this by averaging the ratings in the database and displaying it prominently at the top of the page.\n\nI should also include validation to ensure all required fields are filled out before submitting. This prevents empty or incomplete reviews from being added to the database.\n\nConsidering the user experience, a clean and simple interface is best. Using PHP within an HTML structure will allow me to embed the dynamic content easily. Styling with CSS can make it look nicer, but I'll keep the focus on functionality for now.\n\nPutting it all together, the main steps are: create the form, handle form submission, store data in the database, retrieve and display reviews, calculate average rating, and ensure everything is secure and validated.\n\nI think that covers the basics. Now, I can outline the code structure, starting with connecting to the database, handling the POST request, inserting into the table, then fetching and displaying the reviews.\n</think>\n\nHere's an example of a user review system in PHP:\n\n```php\n<?php\n// Database connection\n$host = 'localhost';\n$username = 'root';\n$password = '';\n$dbname = 'reviews_db';\n\n$conn = mysqli_connect($host, $username, $password, $dbname);\n\n// Create reviews table if not exists\n$sql = \"CREATE TABLE IF NOT EXISTS reviews (\n    id INT AUTO_INCREMENT PRIMARY KEY,\n    user_name VARCHAR(100),\n    user_email VARCHAR(100),\n    rating INT,\n    comment TEXT,\n    timestamp DATETIME\n)\";\n\nmysqli_query($conn, $sql);\n\n// Handle form submission\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    // Sanitize inputs\n    $name = mysqli_real_escape_string($conn, $_POST['name']);\n    $email = mysqli_real_escape_string($conn, $_POST['email']);\n    $rating = (int)$_POST['rating'];\n    $comment = mysqli_real_escape_string($conn, $_POST['comment']);\n\n    // Insert into database\n    $sql = \"INSERT INTO reviews (user_name, user_email, rating, comment, timestamp) \n            VALUES ('$name', '$email', $rating, '$comment', NOW())\";\n\n    if (mysqli_query($conn, $sql)) {\n        header(\"Location: $_SERVER[PHP_SELF]\");\n        exit();\n    } else {\n        echo \"Error submitting review: \" . mysqli_error($conn);\n    }\n}\n\n// Get all reviews\n$sql = \"SELECT * FROM reviews ORDER BY timestamp DESC\";\n$result = mysqli_query($conn, $sql);\n$reviews = mysqli_fetch_all($result, MYSQLI_ASSOC);\n\n// Calculate average rating\n$total_ratings = 0;\n$count = count($reviews);\nif ($count > 0) {\n    foreach ($reviews as $review) {\n        $total_ratings += $review['rating'];\n    }\n    $average_rating = $total_ratings / $count;\n} else {\n    $average_rating = 0;\n}\n?>\n\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>User Reviews</title>\n    <style>\n        .review-container {\n            max-width: 800px;\n            margin: 0 auto;\n            padding: 20px;\n        }\n        .rating-stars {\n            color: #ffd700;\n        }\n        .review-item {\n            border-bottom: 1px solid #ddd;\n            padding-bottom: 15px;\n            margin-bottom: 15px;\n        }\n    </style>\n</head>\n<body>\n    <div class=\"review-container\">\n        <?php if (!empty($average_rating)) { ?>\n            <h2>Average Rating: <?php echo number_format($average_rating, 1); ?> stars</h2>\n        <?php } ?>\n\n        <h2>Leave a Review</h2>\n        <form method=\"POST\" action=\"<?php echo $_SERVER['PHP_SELF']; ?>\">\n            <div>\n                <label for=\"name\">Name:</label><br>\n                <input type=\"text\" id=\"name\" name=\"name\" required>\n            </div>\n\n            <div>\n                <label for=\"email\">Email:</label><br>\n                <input type=\"email\" id=\"email\" name=\"email\" required>\n            </div>\n\n            <div>\n                <label for=\"rating\">Rating:</label><br>\n                <select id=\"rating\" name=\"rating\" required>\n                    <option value=\"\">Choose a rating</option>\n                    <option value=\"5\">5 stars</option>\n                    <option value=\"4\">4 stars</option>\n                    <option value=\"3\">3 stars</option>\n                    <option value=\"2\">2 stars</option>\n                    <option value=\"1\">1 star</option>\n                </select>\n            </div>\n\n            <div>\n                <label for=\"comment\">Comment:</label><br>\n                <textarea id=\"comment\" name=\"comment\" rows=\"5\" required></textarea>\n            </div>\n\n            <button type=\"submit\">Submit Review</button>\n        </form>\n\n        <?php if (!empty($reviews)) { ?>\n            <h2>Reviews</h2>\n            <?php foreach ($reviews as $review) { ?>\n                <div class=\"review-item\">\n                    <h3><?php echo htmlspecialchars($review['user_name']); ?></h3>\n                    <p><?php echo htmlspecialchars($review['user_email']); ?></p>\n                    <div class=\"rating-stars\">\n                        <?php \n                            $stars = str_repeat('\u2605 ', $review['rating']);\n                            echo $stars;\n                        ?>\n                    </div>\n                    <p><?php echo nl2br(htmlspecialchars($review['comment'])); ?></p>\n                    <small>Posted on: <?php echo date('F j, Y', strtotime($review['timestamp'])); ?></small>\n                </div>\n            <?php } ?>\n        <?php } else { ?>\n            <p>No reviews yet. Be the first to leave a review!</p>\n        <?php } ?>\n    </div>\n</body>\n</html>\n```\n\nThis code creates a user review system with the following features:\n\n1. Users can submit their name, email, rating (1-5 stars), and comment\n2. Reviews are stored in a MySQL database\n3. All reviews are displayed below the submission form\n4. Each review shows:\n   - User's name\n   - Email address\n   - Star rating\n   - Comment\n   - Date posted\n5. Average rating is calculated and displayed at the top\n6. Basic validation and sanitization is implemented\n\nTo use this code:\n\n1. Set up a MySQL database with the appropriate credentials in the connection section\n2. Create the reviews table by running the SQL query\n3. Save the file with a .php extension\n4. Open it in a web browser\n\nThe system includes:\n- Form validation\n- Input sanitization\n- Database operations (insert, select)\n- Display of reviews\n- Average rating calculation\n- Basic styling\n\nYou can customize the styling by modifying the CSS within the style tags.\n\nNote: This is a basic implementation and might need additional security measures for production use. Consider adding:\n- CSRF protection\n- Input validation\n- Email verification\n- Rate limiting\n- CAPTCHA protection\n- Secure password hashing (if adding user authentication)\n\nYou can also enhance it by:\n- Adding user authentication\n- Implementing edit/delete functionality for reviews\n- Adding more fields to the review form\n- Including a rating summary (e.g., number of 5-star, 4-star, etc. ratings)\n- Adding sorting options for reviews", "code_blocks": ["```php\n<?php\n// Database connection\n$host = 'localhost';\n$username = 'root';\n$password = '';\n$dbname = 'reviews_db';\n\n$conn = mysqli_connect($host, $username, $password, $dbname);\n\n// Create reviews table if not exists\n$sql = \"CREATE TABLE IF NOT EXISTS reviews (\n    id INT AUTO_INCREMENT PRIMARY KEY,\n    user_name VARCHAR(100),\n    user_email VARCHAR(100),\n    rating INT,\n    comment TEXT,\n    timestamp DATETIME\n)\";\n\nmysqli_query($conn, $sql);\n\n// Handle form submission\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    // Sanitize inputs\n    $name = mysqli_real_escape_string($conn, $_POST['name']);\n    $email = mysqli_real_escape_string($conn, $_POST['email']);\n    $rating = (int)$_POST['rating'];\n    $comment = mysqli_real_escape_string($conn, $_POST['comment']);\n\n    // Insert into database\n    $sql = \"INSERT INTO reviews (user_name, user_email, rating, comment, timestamp) \n            VALUES ('$name', '$email', $rating, '$comment', NOW())\";\n\n    if (mysqli_query($conn, $sql)) {\n        header(\"Location: $_SERVER[PHP_SELF]\");\n        exit();\n    } else {\n        echo \"Error submitting review: \" . mysqli_error($conn);\n    }\n}\n\n// Get all reviews\n$sql = \"SELECT * FROM reviews ORDER BY timestamp DESC\";\n$result = mysqli_query($conn, $sql);\n$reviews = mysqli_fetch_all($result, MYSQLI_ASSOC);\n\n// Calculate average rating\n$total_ratings = 0;\n$count = count($reviews);\nif ($count > 0) {\n    foreach ($reviews as $review) {\n        $total_ratings += $review['rating'];\n    }\n    $average_rating = $total_ratings / $count;\n} else {\n    $average_rating = 0;\n}\n?>\n\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>User Reviews</title>\n    <style>\n        .review-container {\n            max-width: 800px;\n            margin: 0 auto;\n            padding: 20px;\n        }\n        .rating-stars {\n            color: #ffd700;\n        }\n        .review-item {\n            border-bottom: 1px solid #ddd;\n            padding-bottom: 15px;\n            margin-bottom: 15px;\n        }\n    </style>\n</head>\n<body>\n    <div class=\"review-container\">\n        <?php if (!empty($average_rating)) { ?>\n            <h2>Average Rating: <?php echo number_format($average_rating, 1); ?> stars</h2>\n        <?php } ?>\n\n        <h2>Leave a Review</h2>\n        <form method=\"POST\" action=\"<?php echo $_SERVER['PHP_SELF']; ?>\">\n            <div>\n                <label for=\"name\">Name:</label><br>\n                <input type=\"text\" id=\"name\" name=\"name\" required>\n            </div>\n\n            <div>\n                <label for=\"email\">Email:</label><br>\n                <input type=\"email\" id=\"email\" name=\"email\" required>\n            </div>\n\n            <div>\n                <label for=\"rating\">Rating:</label><br>\n                <select id=\"rating\" name=\"rating\" required>\n                    <option value=\"\">Choose a rating</option>\n                    <option value=\"5\">5 stars</option>\n                    <option value=\"4\">4 stars</option>\n                    <option value=\"3\">3 stars</option>\n                    <option value=\"2\">2 stars</option>\n                    <option value=\"1\">1 star</option>\n                </select>\n            </div>\n\n            <div>\n                <label for=\"comment\">Comment:</label><br>\n                <textarea id=\"comment\" name=\"comment\" rows=\"5\" required></textarea>\n            </div>\n\n            <button type=\"submit\">Submit Review</button>\n        </form>\n\n        <?php if (!empty($reviews)) { ?>\n            <h2>Reviews</h2>\n            <?php foreach ($reviews as $review) { ?>\n                <div class=\"review-item\">\n                    <h3><?php echo htmlspecialchars($review['user_name']); ?></h3>\n                    <p><?php echo htmlspecialchars($review['user_email']); ?></p>\n                    <div class=\"rating-stars\">\n                        <?php \n                            $stars = str_repeat('\u2605 ', $review['rating']);\n                            echo $stars;\n                        ?>\n                    </div>\n                    <p><?php echo nl2br(htmlspecialchars($review['comment'])); ?></p>\n                    <small>Posted on: <?php echo date('F j, Y', strtotime($review['timestamp'])); ?></small>\n                </div>\n            <?php } ?>\n        <?php } else { ?>\n            <p>No reviews yet. Be the first to leave a review!</p>\n        <?php } ?>\n    </div>\n</body>\n</html>\n```"]}
