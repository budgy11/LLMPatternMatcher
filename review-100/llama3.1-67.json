{"prompt": "Create a user review function using php", "llm_output": "**User Review Function in PHP**\n====================================\n\nBelow is an example of a simple user review function written in PHP. This function will allow you to create reviews for products, users can rate and comment on the product.\n\n### Database Schema\n\nBefore we dive into the code, let's define the database schema:\n\n```sql\nCREATE TABLE products (\n  id INT AUTO_INCREMENT PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  description TEXT NOT NULL\n);\n\nCREATE TABLE reviews (\n  id INT AUTO_INCREMENT PRIMARY KEY,\n  product_id INT NOT NULL,\n  user_id INT NOT NULL,\n  rating TINYINT(1) NOT NULL CHECK (rating BETWEEN 1 AND 5),\n  comment TEXT NOT NULL,\n  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n  FOREIGN KEY (product_id) REFERENCES products(id),\n  FOREIGN KEY (user_id) REFERENCES users(id)\n);\n```\n\n### PHP Function\n\nNow let's define the user review function in PHP:\n\n```php\n<?php\n\nfunction create_review($product_id, $rating, $comment) {\n  // Check if product exists\n  if (!exists_product($product_id)) {\n    return array(\"error\" => \"Product not found\");\n  }\n\n  // Create new review\n  $review = array(\n    \"product_id\" => $product_id,\n    \"rating\" => $rating,\n    \"comment\" => $comment\n  );\n\n  // Insert review into database\n  try {\n    db_connect();\n    query(\"INSERT INTO reviews (product_id, rating, comment) VALUES (:product_id, :rating, :comment)\", array(\n      \":product_id\" => $product_id,\n      \":rating\" => $rating,\n      \":comment\" => $comment\n    ));\n    close_db();\n  } catch (PDOException $e) {\n    return array(\"error\" => \"Failed to create review\");\n  }\n\n  // Return success message\n  return array(\"success\" => \"Review created successfully\");\n}\n\nfunction get_reviews($product_id) {\n  // Check if product exists\n  if (!exists_product($product_id)) {\n    return array(\"error\" => \"Product not found\");\n  }\n\n  // Get reviews from database\n  try {\n    db_connect();\n    $reviews = query(\"SELECT * FROM reviews WHERE product_id = :product_id\", array(\n      \":product_id\" => $product_id\n    ));\n    close_db();\n\n    // Format reviews as JSON\n    foreach ($reviews as &$review) {\n      $review[\"rating\"] = (int)$review[\"rating\"];\n    }\n    return json_encode($reviews);\n  } catch (PDOException $e) {\n    return array(\"error\" => \"Failed to retrieve reviews\");\n  }\n}\n\nfunction exists_product($product_id) {\n  // Check if product exists in database\n  try {\n    db_connect();\n    $result = query(\"SELECT * FROM products WHERE id = :id\", array(\n      \":id\" => $product_id\n    ));\n    close_db();\n\n    return !empty($result);\n  } catch (PDOException $e) {\n    return false;\n  }\n}\n\n?>\n```\n\n### Example Usage\n\nTo use the `create_review` function, call it with the product ID, rating, and comment as arguments:\n\n```php\n$review_data = create_review(1, 4, \"Great product!\");\nprint_r($review_data);\n```\n\nThis will output an array containing a success message or an error message.\n\nSimilarly, to use the `get_reviews` function, call it with the product ID as an argument and print the returned JSON string:\n\n```php\n$reviews = get_reviews(1);\necho $reviews;\n```\n\nThis will output a JSON string containing all reviews for the specified product.", "code_blocks": [null, "```php\n<?php\n\nfunction create_review($product_id, $rating, $comment) {\n  // Check if product exists\n  if (!exists_product($product_id)) {\n    return array(\"error\" => \"Product not found\");\n  }\n\n  // Create new review\n  $review = array(\n    \"product_id\" => $product_id,\n    \"rating\" => $rating,\n    \"comment\" => $comment\n  );\n\n  // Insert review into database\n  try {\n    db_connect();\n    query(\"INSERT INTO reviews (product_id, rating, comment) VALUES (:product_id, :rating, :comment)\", array(\n      \":product_id\" => $product_id,\n      \":rating\" => $rating,\n      \":comment\" => $comment\n    ));\n    close_db();\n  } catch (PDOException $e) {\n    return array(\"error\" => \"Failed to create review\");\n  }\n\n  // Return success message\n  return array(\"success\" => \"Review created successfully\");\n}\n\nfunction get_reviews($product_id) {\n  // Check if product exists\n  if (!exists_product($product_id)) {\n    return array(\"error\" => \"Product not found\");\n  }\n\n  // Get reviews from database\n  try {\n    db_connect();\n    $reviews = query(\"SELECT * FROM reviews WHERE product_id = :product_id\", array(\n      \":product_id\" => $product_id\n    ));\n    close_db();\n\n    // Format reviews as JSON\n    foreach ($reviews as &$review) {\n      $review[\"rating\"] = (int)$review[\"rating\"];\n    }\n    return json_encode($reviews);\n  } catch (PDOException $e) {\n    return array(\"error\" => \"Failed to retrieve reviews\");\n  }\n}\n\nfunction exists_product($product_id) {\n  // Check if product exists in database\n  try {\n    db_connect();\n    $result = query(\"SELECT * FROM products WHERE id = :id\", array(\n      \":id\" => $product_id\n    ));\n    close_db();\n\n    return !empty($result);\n  } catch (PDOException $e) {\n    return false;\n  }\n}\n\n?>\n```", "```php\n$review_data = create_review(1, 4, \"Great product!\");\nprint_r($review_data);\n```", "```php\n$reviews = get_reviews(1);\necho $reviews;\n```"]}
