{"prompt": "Create a user review function using php", "llm_output": "Here's an example of how you can create a simple user review system in PHP. This will allow users to submit reviews for products, and display all the reviews.\n\n**Database Schema**\n\nWe'll assume we have a database schema with two tables: `products` and `reviews`.\n\n```sql\nCREATE TABLE products (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  name VARCHAR(255) NOT NULL,\n  description TEXT NOT NULL\n);\n\nCREATE TABLE reviews (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  product_id INT NOT NULL,\n  user_name VARCHAR(255) NOT NULL,\n  review_text TEXT NOT NULL,\n  rating TINYINT NOT NULL,\n  FOREIGN KEY (product_id) REFERENCES products(id)\n);\n```\n\n**PHP Code**\n\nCreate a file called `review_system.php` and add the following code:\n\n```php\n<?php\n\n// Connect to database\n$dsn = 'mysql:host=localhost;dbname=your_database';\n$username = 'your_username';\n$password = 'your_password';\n\ntry {\n    $pdo = new PDO($dsn, $username, $password);\n} catch (PDOException $e) {\n    echo 'Connection failed: ' . $e->getMessage();\n    exit;\n}\n\n// Function to add a review\nfunction add_review($product_id, $user_name, $review_text, $rating) {\n    global $pdo;\n\n    try {\n        $stmt = $pdo->prepare('INSERT INTO reviews (product_id, user_name, review_text, rating) VALUES (:product_id, :user_name, :review_text, :rating)');\n        $stmt->execute([\n            'product_id' => $product_id,\n            'user_name' => $user_name,\n            'review_text' => $review_text,\n            'rating' => $rating\n        ]);\n\n        return true;\n    } catch (PDOException $e) {\n        echo 'Error adding review: ' . $e->getMessage();\n        return false;\n    }\n}\n\n// Function to get reviews for a product\nfunction get_reviews($product_id) {\n    global $pdo;\n\n    try {\n        $stmt = $pdo->prepare('SELECT * FROM reviews WHERE product_id = :product_id');\n        $stmt->execute(['product_id' => $product_id]);\n        return $stmt->fetchAll();\n    } catch (PDOException $e) {\n        echo 'Error fetching reviews: ' . $e->getMessage();\n        return null;\n    }\n}\n\n// Example usage\nif ($_SERVER['REQUEST_METHOD'] === 'POST') {\n    if (isset($_POST['submit_review'])) {\n        // Add a new review\n        add_review(\n            $_POST['product_id'],\n            $_POST['user_name'],\n            $_POST['review_text'],\n            $_POST['rating']\n        );\n    }\n}\n\n// Get reviews for a product\n$reviews = get_reviews(1); // Replace with the ID of the product\n\n?>\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Reviews</title>\n</head>\n<body>\n\n<h1>Reviews for Product 1:</h1>\n\n<?php if ($reviews) : ?>\n    <?php foreach ($reviews as $review) : ?>\n        <div>\n            <p><?= $review['user_name'] ?> gave this product <?= $review['rating'] ?>/5 stars.</p>\n            <p><?= $review['review_text'] ?></p>\n        </div>\n    <?php endforeach; ?>\n<?php else : ?>\n    <p>No reviews yet!</p>\n<?php endif; ?>\n\n<h2>Leave a review:</h2>\n\n<form action=\"<?= $_SERVER['PHP_SELF'] ?>\" method=\"post\">\n    <label for=\"product_id\">Product ID:</label>\n    <input type=\"text\" id=\"product_id\" name=\"product_id\"><br><br>\n    <label for=\"user_name\">Your Name:</label>\n    <input type=\"text\" id=\"user_name\" name=\"user_name\"><br><br>\n    <label for=\"review_text\">Review:</label>\n    <textarea id=\"review_text\" name=\"review_text\"></textarea><br><br>\n    <label for=\"rating\">Rating (1-5):</label>\n    <input type=\"number\" id=\"rating\" name=\"rating\"><br><br>\n    <button type=\"submit\" name=\"submit_review\">Submit Review</button>\n</form>\n\n</body>\n</html>\n```\n\nThis code provides two functions: `add_review` to add a new review for a product, and `get_reviews` to fetch all reviews for a specific product. The example usage at the end demonstrates how to use these functions to display reviews for a product and allow users to submit their own reviews.\n\nNote that this is a basic implementation and you may want to add additional functionality such as user authentication, validation, and error handling depending on your requirements.", "code_blocks": [null, "```php\n<?php\n\n// Connect to database\n$dsn = 'mysql:host=localhost;dbname=your_database';\n$username = 'your_username';\n$password = 'your_password';\n\ntry {\n    $pdo = new PDO($dsn, $username, $password);\n} catch (PDOException $e) {\n    echo 'Connection failed: ' . $e->getMessage();\n    exit;\n}\n\n// Function to add a review\nfunction add_review($product_id, $user_name, $review_text, $rating) {\n    global $pdo;\n\n    try {\n        $stmt = $pdo->prepare('INSERT INTO reviews (product_id, user_name, review_text, rating) VALUES (:product_id, :user_name, :review_text, :rating)');\n        $stmt->execute([\n            'product_id' => $product_id,\n            'user_name' => $user_name,\n            'review_text' => $review_text,\n            'rating' => $rating\n        ]);\n\n        return true;\n    } catch (PDOException $e) {\n        echo 'Error adding review: ' . $e->getMessage();\n        return false;\n    }\n}\n\n// Function to get reviews for a product\nfunction get_reviews($product_id) {\n    global $pdo;\n\n    try {\n        $stmt = $pdo->prepare('SELECT * FROM reviews WHERE product_id = :product_id');\n        $stmt->execute(['product_id' => $product_id]);\n        return $stmt->fetchAll();\n    } catch (PDOException $e) {\n        echo 'Error fetching reviews: ' . $e->getMessage();\n        return null;\n    }\n}\n\n// Example usage\nif ($_SERVER['REQUEST_METHOD'] === 'POST') {\n    if (isset($_POST['submit_review'])) {\n        // Add a new review\n        add_review(\n            $_POST['product_id'],\n            $_POST['user_name'],\n            $_POST['review_text'],\n            $_POST['rating']\n        );\n    }\n}\n\n// Get reviews for a product\n$reviews = get_reviews(1); // Replace with the ID of the product\n\n?>\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Reviews</title>\n</head>\n<body>\n\n<h1>Reviews for Product 1:</h1>\n\n<?php if ($reviews) : ?>\n    <?php foreach ($reviews as $review) : ?>\n        <div>\n            <p><?= $review['user_name'] ?> gave this product <?= $review['rating'] ?>/5 stars.</p>\n            <p><?= $review['review_text'] ?></p>\n        </div>\n    <?php endforeach; ?>\n<?php else : ?>\n    <p>No reviews yet!</p>\n<?php endif; ?>\n\n<h2>Leave a review:</h2>\n\n<form action=\"<?= $_SERVER['PHP_SELF'] ?>\" method=\"post\">\n    <label for=\"product_id\">Product ID:</label>\n    <input type=\"text\" id=\"product_id\" name=\"product_id\"><br><br>\n    <label for=\"user_name\">Your Name:</label>\n    <input type=\"text\" id=\"user_name\" name=\"user_name\"><br><br>\n    <label for=\"review_text\">Review:</label>\n    <textarea id=\"review_text\" name=\"review_text\"></textarea><br><br>\n    <label for=\"rating\">Rating (1-5):</label>\n    <input type=\"number\" id=\"rating\" name=\"rating\"><br><br>\n    <button type=\"submit\" name=\"submit_review\">Submit Review</button>\n</form>\n\n</body>\n</html>\n```"]}
