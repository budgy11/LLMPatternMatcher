{"prompt": "Create a user review function using php", "llm_output": "**User Review Function in PHP**\n=====================================\n\nThis code snippet provides a basic implementation of a user review system. It includes functions to add, retrieve, update, and delete reviews.\n\n### Database Schema\n\nFor this example, we'll assume the following database schema:\n\n```sql\nCREATE TABLE users (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  username VARCHAR(255) NOT NULL,\n  email VARCHAR(255) NOT NULL UNIQUE\n);\n\nCREATE TABLE products (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  title VARCHAR(255) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE reviews (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  product_id INT NOT NULL,\n  user_id INT NOT NULL,\n  rating TINYINT NOT NULL CHECK (rating BETWEEN 1 AND 5),\n  review_text TEXT NOT NULL,\n  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n  FOREIGN KEY (product_id) REFERENCES products(id),\n  FOREIGN KEY (user_id) REFERENCES users(id)\n);\n```\n\n### PHP Code\n\n```php\n// db.php: Database connection settings\n$host = 'localhost';\n$dbname = 'reviews_database';\n$username = 'your_username';\n$password = 'your_password';\n\ntry {\n    $conn = new PDO(\"mysql:host=$host;dbname=$dbname\", $username, $password);\n} catch (PDOException $e) {\n    echo 'Connection failed: ' . $e->getMessage();\n}\n\n// Review model\nclass Review {\n    private $id;\n    private $product_id;\n    private $user_id;\n    private $rating;\n    private $review_text;\n\n    public function __construct($id, $product_id, $user_id, $rating, $review_text) {\n        $this->id = $id;\n        $this->product_id = $product_id;\n        $this->user_id = $user_id;\n        $this->rating = $rating;\n        $this->review_text = $review_text;\n    }\n\n    public function getId() { return $this->id; }\n    public function getProductID() { return $this->product_id; }\n    public function getUserID() { return $this->user_id; }\n    public function getRating() { return $this->rating; }\n    public function getReviewText() { return $this->review_text; }\n}\n\n// Review service\nclass ReviewService {\n    private $conn;\n\n    public function __construct($conn) {\n        $this->conn = $conn;\n    }\n\n    // Add a new review\n    public function addReview(Review $review) {\n        $stmt = $this->conn->prepare(\"INSERT INTO reviews (product_id, user_id, rating, review_text) VALUES (:product_id, :user_id, :rating, :review_text)\");\n        $stmt->bindParam(':product_id', $review->getProductID());\n        $stmt->bindParam(':user_id', $review->getUserID());\n        $stmt->bindParam(':rating', $review->getRating());\n        $stmt->bindParam(':review_text', $review->getReviewText());\n        return $stmt->execute();\n    }\n\n    // Get all reviews for a product\n    public function getReviewsForProduct($product_id) {\n        $stmt = $this->conn->prepare(\"SELECT * FROM reviews WHERE product_id = :product_id\");\n        $stmt->bindParam(':product_id', $product_id);\n        return $stmt->execute() ? $stmt->fetchAll(PDO::FETCH_ASSOC) : array();\n    }\n\n    // Get all reviews for a user\n    public function getReviewsForUser($user_id) {\n        $stmt = $this->conn->prepare(\"SELECT * FROM reviews WHERE user_id = :user_id\");\n        $stmt->bindParam(':user_id', $user_id);\n        return $stmt->execute() ? $stmt->fetchAll(PDO::FETCH_ASSOC) : array();\n    }\n\n    // Update an existing review\n    public function updateReview(Review $review, $id) {\n        $stmt = $this->conn->prepare(\"UPDATE reviews SET rating = :rating, review_text = :review_text WHERE id = :id\");\n        $stmt->bindParam(':rating', $review->getRating());\n        $stmt->bindParam(':review_text', $review->getReviewText());\n        $stmt->bindParam(':id', $id);\n        return $stmt->execute();\n    }\n\n    // Delete a review\n    public function deleteReview($id) {\n        $stmt = $this->conn->prepare(\"DELETE FROM reviews WHERE id = :id\");\n        $stmt->bindParam(':id', $id);\n        return $stmt->execute();\n    }\n}\n\n// Example usage:\n$review_service = new ReviewService($conn);\n\n// Add a new review\n$review = new Review(1, 1, 1, 5, \"Great product!\");\nif ($review_service->addReview($review)) {\n    echo \"Review added successfully!\";\n} else {\n    echo \"Error adding review.\";\n}\n\n// Get all reviews for a product\n$product_id = 1;\n$reviews = $review_service->getReviewsForProduct($product_id);\nforeach ($reviews as $review) {\n    echo \"Rating: {$review['rating']}, Review Text: {$review['review_text']}\\n\";\n}\n```\n\nThis code provides a basic implementation of a user review system, including functions to add, retrieve, update, and delete reviews. You can extend this example by adding more features, such as review moderation or product categorization.\n\nRemember to replace the placeholders in `db.php` with your actual database credentials and schema.\n\nPlease note that this is a simplified example, you should consider implementing additional security measures (like sanitizing input data) and error handling for production environments.", "code_blocks": [null, "```php\n// db.php: Database connection settings\n$host = 'localhost';\n$dbname = 'reviews_database';\n$username = 'your_username';\n$password = 'your_password';\n\ntry {\n    $conn = new PDO(\"mysql:host=$host;dbname=$dbname\", $username, $password);\n} catch (PDOException $e) {\n    echo 'Connection failed: ' . $e->getMessage();\n}\n\n// Review model\nclass Review {\n    private $id;\n    private $product_id;\n    private $user_id;\n    private $rating;\n    private $review_text;\n\n    public function __construct($id, $product_id, $user_id, $rating, $review_text) {\n        $this->id = $id;\n        $this->product_id = $product_id;\n        $this->user_id = $user_id;\n        $this->rating = $rating;\n        $this->review_text = $review_text;\n    }\n\n    public function getId() { return $this->id; }\n    public function getProductID() { return $this->product_id; }\n    public function getUserID() { return $this->user_id; }\n    public function getRating() { return $this->rating; }\n    public function getReviewText() { return $this->review_text; }\n}\n\n// Review service\nclass ReviewService {\n    private $conn;\n\n    public function __construct($conn) {\n        $this->conn = $conn;\n    }\n\n    // Add a new review\n    public function addReview(Review $review) {\n        $stmt = $this->conn->prepare(\"INSERT INTO reviews (product_id, user_id, rating, review_text) VALUES (:product_id, :user_id, :rating, :review_text)\");\n        $stmt->bindParam(':product_id', $review->getProductID());\n        $stmt->bindParam(':user_id', $review->getUserID());\n        $stmt->bindParam(':rating', $review->getRating());\n        $stmt->bindParam(':review_text', $review->getReviewText());\n        return $stmt->execute();\n    }\n\n    // Get all reviews for a product\n    public function getReviewsForProduct($product_id) {\n        $stmt = $this->conn->prepare(\"SELECT * FROM reviews WHERE product_id = :product_id\");\n        $stmt->bindParam(':product_id', $product_id);\n        return $stmt->execute() ? $stmt->fetchAll(PDO::FETCH_ASSOC) : array();\n    }\n\n    // Get all reviews for a user\n    public function getReviewsForUser($user_id) {\n        $stmt = $this->conn->prepare(\"SELECT * FROM reviews WHERE user_id = :user_id\");\n        $stmt->bindParam(':user_id', $user_id);\n        return $stmt->execute() ? $stmt->fetchAll(PDO::FETCH_ASSOC) : array();\n    }\n\n    // Update an existing review\n    public function updateReview(Review $review, $id) {\n        $stmt = $this->conn->prepare(\"UPDATE reviews SET rating = :rating, review_text = :review_text WHERE id = :id\");\n        $stmt->bindParam(':rating', $review->getRating());\n        $stmt->bindParam(':review_text', $review->getReviewText());\n        $stmt->bindParam(':id', $id);\n        return $stmt->execute();\n    }\n\n    // Delete a review\n    public function deleteReview($id) {\n        $stmt = $this->conn->prepare(\"DELETE FROM reviews WHERE id = :id\");\n        $stmt->bindParam(':id', $id);\n        return $stmt->execute();\n    }\n}\n\n// Example usage:\n$review_service = new ReviewService($conn);\n\n// Add a new review\n$review = new Review(1, 1, 1, 5, \"Great product!\");\nif ($review_service->addReview($review)) {\n    echo \"Review added successfully!\";\n} else {\n    echo \"Error adding review.\";\n}\n\n// Get all reviews for a product\n$product_id = 1;\n$reviews = $review_service->getReviewsForProduct($product_id);\nforeach ($reviews as $review) {\n    echo \"Rating: {$review['rating']}, Review Text: {$review['review_text']}\\n\";\n}\n```"]}
