{"prompt": "Create a user review function using php", "llm_output": "<think>\nAlright, I need to create a user review function using PHP. Let me think about how to approach this.\n\nFirst, the function needs to allow users to submit reviews. So, I'll need an HTML form where they can input their name, email, rating, and comments. That makes sense because it's user-friendly and collects necessary data.\n\nNext, I should handle the form submission with PHP. When the user submits the form, the data needs to be processed. I remember that using POST method is standard for forms like this, so I'll set up the form action to point to a PHP script that processes the input.\n\nSecurity is important here. I should sanitize the inputs to prevent SQL injection and XSS attacks. Using htmlspecialchars can help with escaping special characters, and functions like trim can remove any unnecessary whitespace. Also, filtering the rating to ensure it's between 1 and 5 will keep the data consistent.\n\nNow, connecting to a MySQL database is essential for storing the reviews. I'll use mysqli_connect because it's more secure and efficient than the older mysql functions. I need to make sure to include proper error handling in case the connection fails or there's an issue with the query execution.\n\nStoring the review involves inserting the sanitized data into the database. The table should have columns for id, name, email, rating, comments, and a timestamp. Using prepared statements can help prevent SQL injection, but I'll use mysqli_real_escape_string as another layer of security.\n\nAfter successfully submitting the review, it would be nice to display a confirmation message instead of just redirecting. This gives immediate feedback to the user. However, if there's an error during submission, showing an appropriate message is crucial so the user knows something went wrong.\n\nDisplaying all reviews on the same page adds functionality. I'll write a separate function that fetches all entries from the database and displays them. Formatting each review with HTML elements like divs and using inline styles can make it look clean and organized.\n\nCalculating the average rating is another feature to include. This involves fetching all ratings, summing them up, and dividing by the number of reviews. If there are no reviews yet, I should handle that case gracefully to avoid division by zero errors.\n\nPutting it all together, I'll structure the PHP script with functions for sanitizing input, submitting reviews, displaying reviews, and calculating the average. The HTML form will be included at the top so users can submit new reviews without leaving the page.\n\nTesting each part is important. I'll check if the form submission correctly inserts into the database, ensure that the displayed reviews match what's stored, and verify that the average rating updates correctly when new reviews are added.\n\nFinally, I should provide instructions on how to use the code, including setting up the database table and customizing it as needed. This helps anyone using the script to implement it smoothly without issues.\n</think>\n\nHere's a PHP function for creating a user review system:\n\n```php\n<?php\n// Connect to MySQL database\n$host = 'localhost';\n$username = 'username';\n$password = 'password';\n$dbname = 'reviews';\n\n$conn = mysqli_connect($host, $username, $password, $dbname);\n\nif (!$conn) {\n    die(\"Connection failed: \" . mysqli_connect_error());\n}\n\nfunction sanitizeInput($data) {\n    // Sanitize input to prevent SQL injection and XSS\n    return htmlspecialchars(trim($data));\n}\n\nfunction submitReview($name, $email, $rating, $comments, $conn) {\n    global $conn;\n    \n    // Sanitize inputs\n    $name = sanitizeInput($name);\n    $email = sanitizeInput($email);\n    $rating = intval($rating); // Ensure rating is an integer\n    $comments = sanitizeInput($comments);\n    \n    // Validate input\n    if ($rating < 1 || $rating > 5) {\n        return \"Invalid rating. Please select a rating between 1 and 5.\";\n    }\n    \n    // Insert review into database\n    $sql = \"INSERT INTO reviews (name, email, rating, comments)\n            VALUES ('$name', '$email', $rating, '$comments')\";\n            \n    if (!mysqli_query($conn, $sql)) {\n        return \"Error: \" . mysqli_error($conn);\n    }\n    \n    return \"Review submitted successfully!\";\n}\n\nfunction displayReviews($conn) {\n    global $conn;\n    \n    $sql = \"SELECT * FROM reviews ORDER BY timestamp DESC\";\n    $result = mysqli_query($conn, $sql);\n    \n    if (mysqli_num_rows($result) > 0) {\n        while ($row = mysqli_fetch_assoc($result)) {\n            echo \"<div class='review'>\";\n            echo \"<h3>\" . $row['name'] . \"</h3>\";\n            echo \"<p>Rating: \" . str_repeat(\"\u2605\", $row['rating']) . \"</p>\";\n            echo \"<p>Comments: \" . $row['comments'] . \"</p>\";\n            echo \"<small>\" . date('F j, Y g:i a', strtotime($row['timestamp'])) . \"</small>\";\n            echo \"</div>\";\n        }\n    } else {\n        echo \"No reviews yet!\";\n    }\n}\n\nfunction calculateAverageRating($conn) {\n    global $conn;\n    \n    $sql = \"SELECT AVG(rating) as average FROM reviews\";\n    $result = mysqli_query($conn, $sql);\n    $row = mysqli_fetch_assoc($result);\n    \n    if ($row['average'] == 0 || !$row['average']) {\n        return \"No ratings yet!\";\n    } else {\n        return round($row['average'], 1) . \"/5\";\n    }\n}\n?>\n```\n\nThis code includes the following features:\n\n1. A form for submitting reviews\n2. Input validation and sanitization\n3. Database connection and operations\n4. Display of all submitted reviews\n5. Calculation of average rating\n\nHere's how to use it:\n\n1. First, set up your MySQL database and create a table named `reviews` with the following columns:\n   - id (INT, AUTO_INCREMENT)\n   - name (VARCHAR)\n   - email (VARCHAR)\n   - rating (INT)\n   - comments (TEXT)\n   - timestamp (TIMESTAMP)\n\n2. In your HTML file, include this PHP code at the top.\n\n3. Add a form for submitting reviews:\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Product Reviews</title>\n    <style>\n        .review {\n            border: 1px solid #ddd;\n            padding: 20px;\n            margin: 10px 0;\n            background-color: #f9f9f9;\n            border-radius: 5px;\n        }\n        .review-form {\n            margin-bottom: 30px;\n        }\n    </style>\n</head>\n<body>\n\n<?php\nif ($_SERVER[\"REQUEST_METHOD\"] == \"POST\") {\n    $name = $_POST['name'];\n    $email = $_POST['email'];\n    $rating = $_POST['rating'];\n    $comments = $_POST['comments'];\n    \n    $result = submitReview($name, $email, $rating, $comments, $conn);\n    echo \"<div style='color: green; margin-bottom: 20px;'>$result</div>\";\n}\n\n// Display the review form\necho \"<form class='review-form' method='post'>\";\necho \"<label for='name'>Name:</label><br>\";\necho \"<input type='text' id='name' name='name' required><br>\";\necho \"<label for='email'>Email:</label><br>\";\necho \"<input type='email' id='email' name='email' required><br>\";\necho \"<label for='rating'>Rating:</label><br>\";\necho \"<select id='rating' name='rating' required>\n        <option value='1'>1 Star</option>\n        <option value='2'>2 Stars</option>\n        <option value='3'>3 Stars</option>\n        <option value='4'>4 Stars</option>\n        <option value='5'>5 Stars</option>\n      </select><br>\";\necho \"<label for='comments'>Comments:</label><br>\";\necho \"<textarea id='comments' name='comments' rows='5' cols='40' required></textarea><br>\";\necho \"<input type='submit' value='Submit Review'>\";\necho \"</form>\";\n?>\n\n<h2>All Reviews</h2>\n<?php displayReviews($conn); ?>\n\n<h3>Current Average Rating:</h3>\n<?php echo calculateAverageRating($conn); ?>\n\n</body>\n</html>\n```\n\nThis implementation includes:\n\n- Basic security measures (input sanitization and validation)\n- Error handling\n- Display of reviews in a clean format\n- Average rating calculation\n- Timestamp for each review\n\nYou can customize the styling by modifying the CSS in the `<style>` section.\n\nRemember to replace the database connection details (`$host`, `$username`, `$password`, `$dbname`) with your actual MySQL credentials.", "code_blocks": ["```php\n<?php\n// Connect to MySQL database\n$host = 'localhost';\n$username = 'username';\n$password = 'password';\n$dbname = 'reviews';\n\n$conn = mysqli_connect($host, $username, $password, $dbname);\n\nif (!$conn) {\n    die(\"Connection failed: \" . mysqli_connect_error());\n}\n\nfunction sanitizeInput($data) {\n    // Sanitize input to prevent SQL injection and XSS\n    return htmlspecialchars(trim($data));\n}\n\nfunction submitReview($name, $email, $rating, $comments, $conn) {\n    global $conn;\n    \n    // Sanitize inputs\n    $name = sanitizeInput($name);\n    $email = sanitizeInput($email);\n    $rating = intval($rating); // Ensure rating is an integer\n    $comments = sanitizeInput($comments);\n    \n    // Validate input\n    if ($rating < 1 || $rating > 5) {\n        return \"Invalid rating. Please select a rating between 1 and 5.\";\n    }\n    \n    // Insert review into database\n    $sql = \"INSERT INTO reviews (name, email, rating, comments)\n            VALUES ('$name', '$email', $rating, '$comments')\";\n            \n    if (!mysqli_query($conn, $sql)) {\n        return \"Error: \" . mysqli_error($conn);\n    }\n    \n    return \"Review submitted successfully!\";\n}\n\nfunction displayReviews($conn) {\n    global $conn;\n    \n    $sql = \"SELECT * FROM reviews ORDER BY timestamp DESC\";\n    $result = mysqli_query($conn, $sql);\n    \n    if (mysqli_num_rows($result) > 0) {\n        while ($row = mysqli_fetch_assoc($result)) {\n            echo \"<div class='review'>\";\n            echo \"<h3>\" . $row['name'] . \"</h3>\";\n            echo \"<p>Rating: \" . str_repeat(\"\u2605\", $row['rating']) . \"</p>\";\n            echo \"<p>Comments: \" . $row['comments'] . \"</p>\";\n            echo \"<small>\" . date('F j, Y g:i a', strtotime($row['timestamp'])) . \"</small>\";\n            echo \"</div>\";\n        }\n    } else {\n        echo \"No reviews yet!\";\n    }\n}\n\nfunction calculateAverageRating($conn) {\n    global $conn;\n    \n    $sql = \"SELECT AVG(rating) as average FROM reviews\";\n    $result = mysqli_query($conn, $sql);\n    $row = mysqli_fetch_assoc($result);\n    \n    if ($row['average'] == 0 || !$row['average']) {\n        return \"No ratings yet!\";\n    } else {\n        return round($row['average'], 1) . \"/5\";\n    }\n}\n?>\n```", null]}
