{"prompt": "Create a search function using csharp", "llm_output": "Below is an example of how you can create a simple search function in C#. This example assumes you have a list of objects that you want to search through based on some criteria.\n\n```csharp\nusing System;\nusing System.Collections.Generic;\n\n// Define a class for the items being searched\npublic class Item\n{\n    public string Name { get; set; }\n    public string Description { get; set; }\n}\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        // Create some sample data\n        List<Item> inventory = new List<Item>\n        {\n            new Item {Name = \"Apple\", Description = \"Fresh fruit\"},\n            new Item {Name = \"Banana\", Description = \"Tasty snack\"},\n            new Item {Name = \"Orange\", Description = \"Juicy and sweet\"},\n            new Item {Name = \"Pineapple\", Description = \"Exotic fruit\"},\n            new Item {Name = \"Grapes\", Description = \"Small, round fruits\"}\n        };\n\n        // Define a search function\n        List<Item> SearchItems(List<Item> items, string searchTerm)\n        {\n            return items.FindAll(i => i.Name.ToLower().Contains(searchTerm.ToLower()) || \n                                        i.Description.ToLower().Contains(searchTerm.ToLower()));\n        }\n\n        // Example usage:\n        Console.Write(\"Enter search term: \");\n        string searchQuery = Console.ReadLine();\n\n        List<Item> results = SearchItems(inventory, searchQuery);\n\n        if (results.Count > 0)\n        {\n            Console.WriteLine(\"Search results:\");\n            foreach (var item in results)\n            {\n                Console.WriteLine($\"Name: {item.Name}, Description: {item.Description}\");\n            }\n        }\n        else\n        {\n            Console.WriteLine(\"No matches found.\");\n        }\n\n        Console.ReadKey();\n    }\n}\n```\n\nThis example includes the following:\n\n1. **Item Class**: A simple class to represent items that are being searched through.\n2. **SearchItems Method**: This is a static method that takes in a list of `Item` objects and a search term. It uses LINQ's `FindAll` method to return all items where the name or description (after converting both to lowercase for case-insensitive comparison) contains the search term.\n\nThis code is straightforward, easy to follow, and demonstrates how you can create a basic search function in C# that works with your data structures.", "code_blocks": ["```csharp\nusing System;\nusing System.Collections.Generic;\n\n// Define a class for the items being searched\npublic class Item\n{\n    public string Name { get; set; }\n    public string Description { get; set; }\n}\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        // Create some sample data\n        List<Item> inventory = new List<Item>\n        {\n            new Item {Name = \"Apple\", Description = \"Fresh fruit\"},\n            new Item {Name = \"Banana\", Description = \"Tasty snack\"},\n            new Item {Name = \"Orange\", Description = \"Juicy and sweet\"},\n            new Item {Name = \"Pineapple\", Description = \"Exotic fruit\"},\n            new Item {Name = \"Grapes\", Description = \"Small, round fruits\"}\n        };\n\n        // Define a search function\n        List<Item> SearchItems(List<Item> items, string searchTerm)\n        {\n            return items.FindAll(i => i.Name.ToLower().Contains(searchTerm.ToLower()) || \n                                        i.Description.ToLower().Contains(searchTerm.ToLower()));\n        }\n\n        // Example usage:\n        Console.Write(\"Enter search term: \");\n        string searchQuery = Console.ReadLine();\n\n        List<Item> results = SearchItems(inventory, searchQuery);\n\n        if (results.Count > 0)\n        {\n            Console.WriteLine(\"Search results:\");\n            foreach (var item in results)\n            {\n                Console.WriteLine($\"Name: {item.Name}, Description: {item.Description}\");\n            }\n        }\n        else\n        {\n            Console.WriteLine(\"No matches found.\");\n        }\n\n        Console.ReadKey();\n    }\n}\n```"]}
