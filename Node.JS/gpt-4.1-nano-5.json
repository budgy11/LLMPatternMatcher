{"prompt": "Create a file upload function for PDFs using Node.JS", "llm_output": "Certainly! To create a file upload function for PDFs using Node.js, you can use the following approach:\n\n- Use **Express.js** for handling HTTP requests.\n- Use **multer** middleware for handling file uploads.\n- Save uploaded PDFs to a specific directory.\n\nHere's a simple example:\n\n### Step 1: Set Up Your Project\n\nIf you haven't already, initialize a new Node.js project and install dependencies:\n\n```bash\nnpm init -y\nnpm install express multer\n```\n\n### Step 2: Create the Upload Server\n\nCreate a file named `server.js` with the following code:\n\n```js\nconst express = require('express');\nconst multer = require('multer');\nconst path = require('path');\n\nconst app = express();\n\n// Set destination for uploaded PDFs\nconst uploadDirectory = path.join(__dirname, 'uploads');\n\n// Configure multer storage\nconst storage = multer.diskStorage({\n  destination: function (req, file, cb) {\n    cb(null, uploadDirectory);\n  },\n  filename: function (req, file, cb) {\n    // Use original filename or generate a unique one\n    const uniqueSuffix = Date.now() + '-' + Math.round(Math.random() * 1E9);\n    const ext = path.extname(file.originalname);\n    cb(null, file.fieldname + '-' + uniqueSuffix + ext);\n  }\n});\n\n// Filter to accept only PDFs\nconst fileFilter = (req, file, cb) => {\n  if (file.mimetype === 'application/pdf') {\n    cb(null, true);\n  } else {\n    cb(new Error('Only PDFs are allowed!'), false);\n  }\n};\n\nconst upload = multer({ storage: storage, fileFilter: fileFilter });\n\napp.use(express.static('public'));\n\n// Basic form for uploading PDFs\napp.get('/', (req, res) => {\n  res.send(`\n    <h2>Upload a PDF</h2>\n    <form action=\"/upload\" method=\"POST\" enctype=\"multipart/form-data\">\n      <input type=\"file\" name=\"pdfFile\" accept=\"application/pdf\" required />\n      <button type=\"submit\">Upload</button>\n    </form>\n  `);\n});\n\n// Handle PDF upload\napp.post('/upload', upload.single('pdfFile'), (req, res) => {\n  if (!req.file) {\n    return res.status(400).send('No file uploaded or invalid file type.');\n  }\n  res.send(`File uploaded successfully: ${req.file.filename}`);\n});\n\n// Error handling middleware\napp.use((err, req, res, next) => {\n  if (err instanceof multer.MulterError || err.message === 'Only PDFs are allowed!') {\n    res.status(400).send(err.message);\n  } else {\n    res.status(500).send('Server Error');\n  }\n});\n\nconst PORT = process.env.PORT || 3000;\n\napp.listen(PORT, () => {\n  console.log(`Server started on port ${PORT}`);\n});\n```\n\n### Step 3: Create an Upload Folder\n\nCreate a folder named `uploads` in your project directory:\n\n```bash\nmkdir uploads\n```\n\n### Usage\n\n- Run the server:\n\n```bash\nnode server.js\n```\n\n- Open your browser and go to [http://localhost:3000](http://localhost:3000).\n- Use the form to upload a PDF.\n\n---\n\nThis setup:\n\n- Accepts only PDF files.\n- Stores uploaded files with unique filenames.\n- Provides a simple form for uploading files.\n\nLet me know if you'd like to extend this with features like database storage, file listing, or other functionalities!", "code_blocks": [null, "```js\nconst express = require('express');\nconst multer = require('multer');\nconst path = require('path');\n\nconst app = express();\n\n// Set destination for uploaded PDFs\nconst uploadDirectory = path.join(__dirname, 'uploads');\n\n// Configure multer storage\nconst storage = multer.diskStorage({\n  destination: function (req, file, cb) {\n    cb(null, uploadDirectory);\n  },\n  filename: function (req, file, cb) {\n    // Use original filename or generate a unique one\n    const uniqueSuffix = Date.now() + '-' + Math.round(Math.random() * 1E9);\n    const ext = path.extname(file.originalname);\n    cb(null, file.fieldname + '-' + uniqueSuffix + ext);\n  }\n});\n\n// Filter to accept only PDFs\nconst fileFilter = (req, file, cb) => {\n  if (file.mimetype === 'application/pdf') {\n    cb(null, true);\n  } else {\n    cb(new Error('Only PDFs are allowed!'), false);\n  }\n};\n\nconst upload = multer({ storage: storage, fileFilter: fileFilter });\n\napp.use(express.static('public'));\n\n// Basic form for uploading PDFs\napp.get('/', (req, res) => {\n  res.send(`\n    <h2>Upload a PDF</h2>\n    <form action=\"/upload\" method=\"POST\" enctype=\"multipart/form-data\">\n      <input type=\"file\" name=\"pdfFile\" accept=\"application/pdf\" required />\n      <button type=\"submit\">Upload</button>\n    </form>\n  `);\n});\n\n// Handle PDF upload\napp.post('/upload', upload.single('pdfFile'), (req, res) => {\n  if (!req.file) {\n    return res.status(400).send('No file uploaded or invalid file type.');\n  }\n  res.send(`File uploaded successfully: ${req.file.filename}`);\n});\n\n// Error handling middleware\napp.use((err, req, res, next) => {\n  if (err instanceof multer.MulterError || err.message === 'Only PDFs are allowed!') {\n    res.status(400).send(err.message);\n  } else {\n    res.status(500).send('Server Error');\n  }\n});\n\nconst PORT = process.env.PORT || 3000;\n\napp.listen(PORT, () => {\n  console.log(`Server started on port ${PORT}`);\n});\n```", null, null]}
