{"prompt": "Create a forgot password function using php", "llm_output": "Here is an example of how you can create a \"Forgot Password\" function in PHP:\n\n**Database Table Structure:**\n\nFor this example, let's assume we have the following table structure:\n```sql\nCREATE TABLE users (\n  id INT PRIMARY KEY,\n  email VARCHAR(255) NOT NULL,\n  password_hash VARCHAR(255) NOT NULL,\n  reset_token VARCHAR(255),\n  reset_expires TIMESTAMP\n);\n```\n**PHP Code:**\n\nFirst, let's create a PHP file that will handle the \"Forgot Password\" functionality. We'll call it `forgot_password.php`.\n```php\n<?php\n\n// Include database connection settings\nrequire_once 'db_config.php';\n\n// Check if form has been submitted\nif ($_SERVER['REQUEST_METHOD'] === 'POST') {\n  // Get email from form input\n  $email = $_POST['email'];\n\n  // Validate email\n  if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {\n    echo 'Invalid email address';\n    exit;\n  }\n\n  // Query database for user with matching email\n  $query = \"SELECT * FROM users WHERE email = '$email'\";\n  $result = mysqli_query($conn, $query);\n\n  // If user exists, send reset token via email and update database\n  if ($row = mysqli_fetch_assoc($result)) {\n    // Generate random reset token\n    $reset_token = bin2hex(random_bytes(32));\n\n    // Send email with reset link (we'll use a simple link for demonstration purposes)\n    $to      = $email;\n    $subject = 'Reset Password';\n    $message = 'Click here to reset your password: <a href=\"' . $_SERVER['HTTP_HOST'] . '/reset_password.php?token=' . $reset_token . '\">Reset</a>';\n    $headers = 'From: info@example.com' . \"\\r\\n\" .\n      'Content-Type: text/html; charset=UTF-8';\n    mail($to, $subject, $message, $headers);\n\n    // Update database with reset token\n    $query = \"UPDATE users SET reset_token = '$reset_token', reset_expires = NOW() + INTERVAL 1 HOUR WHERE email = '$email'\";\n    mysqli_query($conn, $query);\n\n    echo 'Reset link sent to your email';\n  } else {\n    echo 'Email address not found in our database';\n  }\n}\n\n?>\n```\n**HTML Form:**\n\nNow let's create a simple HTML form that will send the user's email to our `forgot_password.php` script.\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <title>Forgot Password</title>\n</head>\n<body>\n\n<h2>Forgot Password</h2>\n\n<form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n  <input type=\"email\" name=\"email\" placeholder=\"Enter your email address\">\n  <button type=\"submit\">Send Reset Link</button>\n</form>\n\n<?php\n// If form has been submitted, display message or error\nif ($_SERVER['REQUEST_METHOD'] === 'POST') {\n  echo '<p>' . $_POST['email'] . '</p>';\n}\n?>\n\n</body>\n</html>\n```\n**Reset Password Page:**\n\nCreate a new page called `reset_password.php` that will handle the password reset process.\n```php\n<?php\n\n// Include database connection settings\nrequire_once 'db_config.php';\n\n// Check if form has been submitted\nif ($_SERVER['REQUEST_METHOD'] === 'POST') {\n  // Get token from URL parameter\n  $token = $_GET['token'];\n\n  // Validate token (we'll use a simple validation for demonstration purposes)\n  if (!empty($token)) {\n    // Query database for user with matching token\n    $query = \"SELECT * FROM users WHERE reset_token = '$token'\";\n    $result = mysqli_query($conn, $query);\n\n    // If user exists, update password and remove reset token from database\n    if ($row = mysqli_fetch_assoc($result)) {\n      // Get new password from form input\n      $new_password = $_POST['password'];\n\n      // Hash new password (we'll use a simple hashing algorithm for demonstration purposes)\n      $hashed_password = hash('sha256', $new_password);\n\n      // Update database with new password\n      $query = \"UPDATE users SET password_hash = '$hashed_password' WHERE reset_token = '$token'\";\n      mysqli_query($conn, $query);\n\n      echo 'Password updated successfully';\n    } else {\n      echo 'Invalid token';\n    }\n  }\n}\n\n?>\n```\n**HTML Form:**\n\nCreate a simple HTML form that will send the new password to our `reset_password.php` script.\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <title>Reset Password</title>\n</head>\n<body>\n\n<h2>Reset Password</h2>\n\n<form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n  <input type=\"hidden\" name=\"token\" value=\"<?php echo $_GET['token']; ?>\">\n  <label for=\"password\">New Password:</label>\n  <input type=\"password\" id=\"password\" name=\"password\">\n  <button type=\"submit\">Reset Password</button>\n</form>\n\n<?php\n// If form has been submitted, display message or error\nif ($_SERVER['REQUEST_METHOD'] === 'POST') {\n  echo '<p>' . $_POST['token'] . '</p>';\n}\n?>\n\n</body>\n</html>\n```\nThis is a basic example of how you can create a \"Forgot Password\" functionality using PHP. Note that this code does not include any security measures, such as email verification or password hashing, and should not be used in production without further modifications.\n\n**Note:** This example uses `mysqli` for database interactions, which is considered outdated. For new projects, consider using a more modern extension like `PDO`. Additionally, make sure to sanitize user input and validate tokens thoroughly to prevent security vulnerabilities.", "code_blocks": [null, "```php\n<?php\n\n// Include database connection settings\nrequire_once 'db_config.php';\n\n// Check if form has been submitted\nif ($_SERVER['REQUEST_METHOD'] === 'POST') {\n  // Get email from form input\n  $email = $_POST['email'];\n\n  // Validate email\n  if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {\n    echo 'Invalid email address';\n    exit;\n  }\n\n  // Query database for user with matching email\n  $query = \"SELECT * FROM users WHERE email = '$email'\";\n  $result = mysqli_query($conn, $query);\n\n  // If user exists, send reset token via email and update database\n  if ($row = mysqli_fetch_assoc($result)) {\n    // Generate random reset token\n    $reset_token = bin2hex(random_bytes(32));\n\n    // Send email with reset link (we'll use a simple link for demonstration purposes)\n    $to      = $email;\n    $subject = 'Reset Password';\n    $message = 'Click here to reset your password: <a href=\"' . $_SERVER['HTTP_HOST'] . '/reset_password.php?token=' . $reset_token . '\">Reset</a>';\n    $headers = 'From: info@example.com' . \"\\r\\n\" .\n      'Content-Type: text/html; charset=UTF-8';\n    mail($to, $subject, $message, $headers);\n\n    // Update database with reset token\n    $query = \"UPDATE users SET reset_token = '$reset_token', reset_expires = NOW() + INTERVAL 1 HOUR WHERE email = '$email'\";\n    mysqli_query($conn, $query);\n\n    echo 'Reset link sent to your email';\n  } else {\n    echo 'Email address not found in our database';\n  }\n}\n\n?>\n```", null, "```php\n<?php\n\n// Include database connection settings\nrequire_once 'db_config.php';\n\n// Check if form has been submitted\nif ($_SERVER['REQUEST_METHOD'] === 'POST') {\n  // Get token from URL parameter\n  $token = $_GET['token'];\n\n  // Validate token (we'll use a simple validation for demonstration purposes)\n  if (!empty($token)) {\n    // Query database for user with matching token\n    $query = \"SELECT * FROM users WHERE reset_token = '$token'\";\n    $result = mysqli_query($conn, $query);\n\n    // If user exists, update password and remove reset token from database\n    if ($row = mysqli_fetch_assoc($result)) {\n      // Get new password from form input\n      $new_password = $_POST['password'];\n\n      // Hash new password (we'll use a simple hashing algorithm for demonstration purposes)\n      $hashed_password = hash('sha256', $new_password);\n\n      // Update database with new password\n      $query = \"UPDATE users SET password_hash = '$hashed_password' WHERE reset_token = '$token'\";\n      mysqli_query($conn, $query);\n\n      echo 'Password updated successfully';\n    } else {\n      echo 'Invalid token';\n    }\n  }\n}\n\n?>\n```", null]}
