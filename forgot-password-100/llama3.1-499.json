{"prompt": "Create a forgot password function using php", "llm_output": "Here's an example of how you can create a \"Forgot Password\" function in PHP:\n\n**Database Setup**\n\nFirst, we'll need to set up our database table for storing user credentials. Let's assume we have a `users` table with the following structure:\n```sql\nCREATE TABLE users (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  username VARCHAR(255) NOT NULL,\n  email VARCHAR(255) NOT NULL,\n  password_hash VARCHAR(255) NOT NULL\n);\n```\n**PHP Code**\n\nHere's an example of how you can create a \"Forgot Password\" function in PHP:\n```php\n<?php\n\n// Configuration settings\n$site_url = 'http://example.com';\n$db_host = 'localhost';\n$db_username = 'your_username';\n$db_password = 'your_password';\n\n// Function to send password reset email\nfunction send_reset_email($email, $token) {\n  // Set up email headers\n  $headers = 'From: Password Reset <passwordreset@example.com>' . \"\\r\\n\" .\n             'MIME-Version: 1.0' . \"\\r\\n\" .\n             'Content-type: text/html; charset=utf-8' . \"\\r\\n\";\n\n  // Send email using PHPMailer (or your preferred email library)\n  $msg = '<html><body><p>Please click the link below to reset your password:</p>';\n  $msg .= '<a href=\"' . $site_url . '/reset-password?token=' . $token . '\">Reset Password</a></body></html>';\n\n  mail($email, 'Password Reset', $msg, $headers);\n}\n\n// Function to handle forgot password request\nfunction forgot_password() {\n  // Get the email address from the form submission\n  $email = $_POST['email'];\n\n  // Query database for user with matching email address\n  $conn = new mysqli($db_host, $db_username, $db_password);\n  if ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n  }\n\n  $sql = \"SELECT * FROM users WHERE email = '$email'\";\n  $result = $conn->query($sql);\n\n  // Check if user exists\n  if ($result->num_rows > 0) {\n    // Get the user ID and password hash from the query result\n    $row = $result->fetch_assoc();\n    $user_id = $row['id'];\n    $password_hash = $row['password_hash'];\n\n    // Generate a random token for password reset\n    $token = bin2hex(random_bytes(16));\n\n    // Update the user's password hash with the new token\n    $sql = \"UPDATE users SET password_hash = '$token' WHERE id = '$user_id'\";\n    $conn->query($sql);\n\n    // Send email to user with password reset link\n    send_reset_email($email, $token);\n  }\n\n  // Close database connection\n  $conn->close();\n\n  // Output success message or redirect user to login page\n}\n\n// Handle form submission\nif (isset($_POST['submit'])) {\n  forgot_password();\n}\n\n?>\n```\n**HTML Form**\n\nHere's an example of how you can create the HTML form for users to submit their email addresses:\n```html\n<!DOCTYPE html>\n<html>\n<head>\n  <title>Forgot Password</title>\n</head>\n<body>\n\n  <!-- Form to submit email address -->\n  <form action=\"<?php echo $site_url; ?>/forgot-password\" method=\"post\">\n    <input type=\"email\" name=\"email\" placeholder=\"Enter your email address\">\n    <button type=\"submit\" name=\"submit\">Send Reset Link</button>\n  </form>\n\n  <!-- Output success message or error messages -->\n  <?php if (isset($_POST['success'])): ?>\n    <p>Password reset link sent to your email!</p>\n  <?php elseif (isset($_POST['error'])): ?>\n    <p>Error sending password reset link. Please try again.</p>\n  <?php endif; ?>\n\n</body>\n</html>\n```\n**Security Notes**\n\n* Make sure to validate user input (e.g., email address) to prevent SQL injection attacks.\n* Use a secure method for generating the password token, such as `bin2hex(random_bytes(16))`.\n* Use HTTPS encryption when sending emails or storing sensitive data in your database.\n\nThis is just a basic example of how you can create a \"Forgot Password\" function in PHP. You may want to add additional features, such as:\n\n* Token expiration (e.g., after 30 minutes)\n* Multiple password reset attempts (e.g., to prevent abuse)\n* User authentication for resetting passwords\n\nRemember to adapt this code to your specific use case and requirements!", "code_blocks": [null, "```php\n<?php\n\n// Configuration settings\n$site_url = 'http://example.com';\n$db_host = 'localhost';\n$db_username = 'your_username';\n$db_password = 'your_password';\n\n// Function to send password reset email\nfunction send_reset_email($email, $token) {\n  // Set up email headers\n  $headers = 'From: Password Reset <passwordreset@example.com>' . \"\\r\\n\" .\n             'MIME-Version: 1.0' . \"\\r\\n\" .\n             'Content-type: text/html; charset=utf-8' . \"\\r\\n\";\n\n  // Send email using PHPMailer (or your preferred email library)\n  $msg = '<html><body><p>Please click the link below to reset your password:</p>';\n  $msg .= '<a href=\"' . $site_url . '/reset-password?token=' . $token . '\">Reset Password</a></body></html>';\n\n  mail($email, 'Password Reset', $msg, $headers);\n}\n\n// Function to handle forgot password request\nfunction forgot_password() {\n  // Get the email address from the form submission\n  $email = $_POST['email'];\n\n  // Query database for user with matching email address\n  $conn = new mysqli($db_host, $db_username, $db_password);\n  if ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n  }\n\n  $sql = \"SELECT * FROM users WHERE email = '$email'\";\n  $result = $conn->query($sql);\n\n  // Check if user exists\n  if ($result->num_rows > 0) {\n    // Get the user ID and password hash from the query result\n    $row = $result->fetch_assoc();\n    $user_id = $row['id'];\n    $password_hash = $row['password_hash'];\n\n    // Generate a random token for password reset\n    $token = bin2hex(random_bytes(16));\n\n    // Update the user's password hash with the new token\n    $sql = \"UPDATE users SET password_hash = '$token' WHERE id = '$user_id'\";\n    $conn->query($sql);\n\n    // Send email to user with password reset link\n    send_reset_email($email, $token);\n  }\n\n  // Close database connection\n  $conn->close();\n\n  // Output success message or redirect user to login page\n}\n\n// Handle form submission\nif (isset($_POST['submit'])) {\n  forgot_password();\n}\n\n?>\n```", null]}
