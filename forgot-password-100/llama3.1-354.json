{"prompt": "Create a forgot password function using php", "llm_output": "Here's an example of how you can create a \"forgot password\" function in PHP:\n\n**Database Schema:**\n```sql\nCREATE TABLE users (\n  id INT PRIMARY KEY,\n  email VARCHAR(255) NOT NULL,\n  password_hash CHAR(60) NOT NULL\n);\n```\n**PHP Code:**\n```php\n// Require the configuration file\nrequire_once 'config.php';\n\n// Define a function to send a password reset email\nfunction send_password_reset_email($email) {\n  // Connect to the database\n  $db = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);\n  \n  if ($db->connect_errno > 0) {\n    die('Connection failed: ' . $db->connect_error());\n  }\n  \n  // Get the user's ID and password hash from the database\n  $stmt = $db->prepare(\"SELECT id, password_hash FROM users WHERE email = ?\");\n  $stmt->bind_param(\"s\", $email);\n  $stmt->execute();\n  $result = $stmt->get_result();\n  \n  if ($result->num_rows === 0) {\n    // If the user doesn't exist, send an error message\n    echo 'Error: User not found';\n    return;\n  }\n  \n  // Get the user's ID and password hash from the result\n  $user_id = $result->fetch_assoc()['id'];\n  $password_hash = $result->fetch_assoc()['password_hash'];\n  \n  // Generate a random password reset token\n  $token = bin2hex(random_bytes(32));\n  \n  // Insert the token into the database\n  $stmt = $db->prepare(\"INSERT INTO password_resets (user_id, token) VALUES (?, ?)\");\n  $stmt->bind_param(\"is\", $user_id, $token);\n  $stmt->execute();\n  \n  // Send an email to the user with a link to reset their password\n  $subject = 'Reset your password';\n  $message = '\n    <p>Dear ' . $email . ',</p>\n    <p>You are receiving this email because we received a request to reset your password.</p>\n    <p>To reset your password, click on the following link:</p>\n    <a href=\"' . $_SERVER['HTTP_HOST'] . '/reset-password?token=' . urlencode($token) . '\">Reset Password</a>\n  ';\n  \n  // Use PHPMailer or any other email library to send the email\n  $mail = new PHPMailer();\n  $mail->isHTML(true);\n  $mail->setFrom('no-reply@example.com', 'Password Reset');\n  $mail->addAddress($email);\n  $mail->Subject($subject);\n  $mail->Body($message);\n  \n  if (!$mail->send()) {\n    echo 'Error: Email not sent';\n    return;\n  }\n}\n\n// Define a function to reset the user's password\nfunction reset_password($token) {\n  // Connect to the database\n  $db = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);\n  \n  if ($db->connect_errno > 0) {\n    die('Connection failed: ' . $db->connect_error());\n  }\n  \n  // Get the user's ID from the database using the token\n  $stmt = $db->prepare(\"SELECT id FROM password_resets WHERE token = ?\");\n  $stmt->bind_param(\"s\", $token);\n  $stmt->execute();\n  $result = $stmt->get_result();\n  \n  if ($result->num_rows === 0) {\n    // If the token is invalid, send an error message\n    echo 'Error: Invalid token';\n    return;\n  }\n  \n  // Get the user's ID from the result\n  $user_id = $result->fetch_assoc()['id'];\n  \n  // Reset the user's password using a new password\n  $new_password = 'newpassword'; // Replace with a secure way to get the new password from the user\n  $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);\n  \n  // Update the user's password in the database\n  $stmt = $db->prepare(\"UPDATE users SET password_hash = ? WHERE id = ?\");\n  $stmt->bind_param(\"si\", $hashed_password, $user_id);\n  $stmt->execute();\n}\n```\n**Usage:**\n\n1. Create a form with an email input field and a submit button.\n2. When the form is submitted, call the `send_password_reset_email` function with the user's email address as an argument.\n3. The function will send an email to the user with a link to reset their password.\n4. When the user clicks on the link, they will be redirected to a page where they can enter their new password and submit it.\n5. Call the `reset_password` function with the token from the URL as an argument.\n\n**Note:**\n\n* This code uses the PHPMailer library to send emails. You'll need to install this library in your project.\n* You should replace the `DB_HOST`, `DB_USER`, `DB_PASSWORD`, and `DB_NAME` constants with your actual database credentials.\n* You should use a secure way to get the new password from the user, such as using a password input field or an email form with a CAPTCHA.\n* This code is for illustration purposes only and you should adapt it to your specific needs.", "code_blocks": [null, "```php\n// Require the configuration file\nrequire_once 'config.php';\n\n// Define a function to send a password reset email\nfunction send_password_reset_email($email) {\n  // Connect to the database\n  $db = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);\n  \n  if ($db->connect_errno > 0) {\n    die('Connection failed: ' . $db->connect_error());\n  }\n  \n  // Get the user's ID and password hash from the database\n  $stmt = $db->prepare(\"SELECT id, password_hash FROM users WHERE email = ?\");\n  $stmt->bind_param(\"s\", $email);\n  $stmt->execute();\n  $result = $stmt->get_result();\n  \n  if ($result->num_rows === 0) {\n    // If the user doesn't exist, send an error message\n    echo 'Error: User not found';\n    return;\n  }\n  \n  // Get the user's ID and password hash from the result\n  $user_id = $result->fetch_assoc()['id'];\n  $password_hash = $result->fetch_assoc()['password_hash'];\n  \n  // Generate a random password reset token\n  $token = bin2hex(random_bytes(32));\n  \n  // Insert the token into the database\n  $stmt = $db->prepare(\"INSERT INTO password_resets (user_id, token) VALUES (?, ?)\");\n  $stmt->bind_param(\"is\", $user_id, $token);\n  $stmt->execute();\n  \n  // Send an email to the user with a link to reset their password\n  $subject = 'Reset your password';\n  $message = '\n    <p>Dear ' . $email . ',</p>\n    <p>You are receiving this email because we received a request to reset your password.</p>\n    <p>To reset your password, click on the following link:</p>\n    <a href=\"' . $_SERVER['HTTP_HOST'] . '/reset-password?token=' . urlencode($token) . '\">Reset Password</a>\n  ';\n  \n  // Use PHPMailer or any other email library to send the email\n  $mail = new PHPMailer();\n  $mail->isHTML(true);\n  $mail->setFrom('no-reply@example.com', 'Password Reset');\n  $mail->addAddress($email);\n  $mail->Subject($subject);\n  $mail->Body($message);\n  \n  if (!$mail->send()) {\n    echo 'Error: Email not sent';\n    return;\n  }\n}\n\n// Define a function to reset the user's password\nfunction reset_password($token) {\n  // Connect to the database\n  $db = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);\n  \n  if ($db->connect_errno > 0) {\n    die('Connection failed: ' . $db->connect_error());\n  }\n  \n  // Get the user's ID from the database using the token\n  $stmt = $db->prepare(\"SELECT id FROM password_resets WHERE token = ?\");\n  $stmt->bind_param(\"s\", $token);\n  $stmt->execute();\n  $result = $stmt->get_result();\n  \n  if ($result->num_rows === 0) {\n    // If the token is invalid, send an error message\n    echo 'Error: Invalid token';\n    return;\n  }\n  \n  // Get the user's ID from the result\n  $user_id = $result->fetch_assoc()['id'];\n  \n  // Reset the user's password using a new password\n  $new_password = 'newpassword'; // Replace with a secure way to get the new password from the user\n  $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);\n  \n  // Update the user's password in the database\n  $stmt = $db->prepare(\"UPDATE users SET password_hash = ? WHERE id = ?\");\n  $stmt->bind_param(\"si\", $hashed_password, $user_id);\n  $stmt->execute();\n}\n```"]}
