{"prompt": "Create a forgot password function using php", "llm_output": "Here's an example of how to create a \"forgot password\" function using PHP. This example assumes that you have a database with user information, including the `username`, `email`, and `password` (hashed).\n\n### Database Schema\n\nBefore we start coding, let's assume our database schema is as follows:\n\n```sql\nCREATE TABLE users (\n    id INT AUTO_INCREMENT PRIMARY KEY,\n    username VARCHAR(255) NOT NULL UNIQUE,\n    email VARCHAR(255) NOT NULL UNIQUE,\n    password VARCHAR(255) NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n```\n\n### PHP Code\n\nCreate a new PHP file, e.g., `forgot_password.php`. We'll create the necessary functions to handle the forgot password process.\n\n```php\n// Include configuration and database connection\nrequire_once 'config.php';\n\nfunction sendPasswordResetEmail($username, $email) {\n    // Generate reset link (example: http://example.com/reset-password/<hash>)\n    $resetHash = bin2hex(random_bytes(16));\n    $resetLink = 'http://' . $_SERVER['HTTP_HOST'] . '/reset-password.php?username=' . urlencode($username) . '&hash=' . $resetHash;\n\n    // Send email with reset link\n    $to      = $email;\n    $subject = 'Reset Your Password';\n    $message = '\n        <html>\n            <body>\n                You are receiving this email because you requested to reset your password.\n\n                Please click on the following link to reset your password: \n                <a href=\"' . $resetLink . '\">' . $resetLink . '</a>\n\n                If you did not request a password reset, no further action is required.\n            </body>\n        </html>\n    ';\n\n    // Send email using PHPMailer or mail() function\n    if (mail($to, $subject, $message)) {\n        echo \"Email sent successfully.\";\n    } else {\n        echo \"Error sending email.\";\n    }\n\n    // Store reset hash in database for later verification\n    $query = \"INSERT INTO password_resets (username, reset_hash) VALUES (:username, :reset_hash)\";\n    $stmt = $pdo->prepare($query);\n    $stmt->bindParam(':username', $username);\n    $stmt->bindParam(':reset_hash', $resetHash);\n    return $stmt->execute();\n}\n\nif (isset($_POST['submit'])) {\n    // Get user input\n    $email = trim($_POST['email']);\n    $username = get_username_from_email($email); // Replace with actual function\n\n    if (!$username) {\n        echo \"Email not found.\";\n    } else {\n        sendPasswordResetEmail($username, $email);\n        echo \"An email has been sent to reset your password.\";\n    }\n}\n\nfunction get_username_from_email($email) {\n    // Replace this function with actual implementation\n    global $pdo;\n    $query = \"SELECT username FROM users WHERE email=:email\";\n    $stmt = $pdo->prepare($query);\n    $stmt->bindParam(':email', $email);\n    return $stmt->execute() ? $stmt->fetchColumn() : null;\n}\n```\n\n### Security Considerations\n\n- Always validate user input to prevent SQL injection attacks.\n- Use prepared statements with parameterized queries to ensure data security.\n- Generate a random reset hash (e.g., using `random_bytes`) and store it in the database for verification later.", "code_blocks": [null, "```php\n// Include configuration and database connection\nrequire_once 'config.php';\n\nfunction sendPasswordResetEmail($username, $email) {\n    // Generate reset link (example: http://example.com/reset-password/<hash>)\n    $resetHash = bin2hex(random_bytes(16));\n    $resetLink = 'http://' . $_SERVER['HTTP_HOST'] . '/reset-password.php?username=' . urlencode($username) . '&hash=' . $resetHash;\n\n    // Send email with reset link\n    $to      = $email;\n    $subject = 'Reset Your Password';\n    $message = '\n        <html>\n            <body>\n                You are receiving this email because you requested to reset your password.\n\n                Please click on the following link to reset your password: \n                <a href=\"' . $resetLink . '\">' . $resetLink . '</a>\n\n                If you did not request a password reset, no further action is required.\n            </body>\n        </html>\n    ';\n\n    // Send email using PHPMailer or mail() function\n    if (mail($to, $subject, $message)) {\n        echo \"Email sent successfully.\";\n    } else {\n        echo \"Error sending email.\";\n    }\n\n    // Store reset hash in database for later verification\n    $query = \"INSERT INTO password_resets (username, reset_hash) VALUES (:username, :reset_hash)\";\n    $stmt = $pdo->prepare($query);\n    $stmt->bindParam(':username', $username);\n    $stmt->bindParam(':reset_hash', $resetHash);\n    return $stmt->execute();\n}\n\nif (isset($_POST['submit'])) {\n    // Get user input\n    $email = trim($_POST['email']);\n    $username = get_username_from_email($email); // Replace with actual function\n\n    if (!$username) {\n        echo \"Email not found.\";\n    } else {\n        sendPasswordResetEmail($username, $email);\n        echo \"An email has been sent to reset your password.\";\n    }\n}\n\nfunction get_username_from_email($email) {\n    // Replace this function with actual implementation\n    global $pdo;\n    $query = \"SELECT username FROM users WHERE email=:email\";\n    $stmt = $pdo->prepare($query);\n    $stmt->bindParam(':email', $email);\n    return $stmt->execute() ? $stmt->fetchColumn() : null;\n}\n```"]}
