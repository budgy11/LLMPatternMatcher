{"prompt": "Create a forgot password function using php", "llm_output": "Here is an example of how you can create a \"Forgot Password\" function in PHP:\n\n**Database Schema**\n\nFor this example, let's assume we have a `users` table with the following columns:\n\n| Column Name | Data Type | Description |\n| --- | --- | --- |\n| id | int | Unique user ID |\n| email | varchar(255) | User's email address |\n| password | varchar(255) | Hashed user password |\n\n**Forgot Password Function**\n\nWe'll create a function called `forgot_password()` that takes the user's email address as input. If the email is found in our database, we'll send an email with a temporary link to reset their password.\n```php\n// functions.php\n\nfunction forgot_password($email) {\n  // Check if email exists in database\n  $query = \"SELECT * FROM users WHERE email = '$email'\";\n  $result = mysqli_query($conn, $query);\n\n  if (mysqli_num_rows($result) == 0) {\n    // Email not found, return error message\n    echo \"Email not found.\";\n    return;\n  }\n\n  // Email exists, generate a random password reset token\n  $token = bin2hex(random_bytes(32));\n  $token_expires_at = date(\"Y-m-d H:i:s\", strtotime(\"+1 hour\"));\n\n  // Update user's password reset token in database\n  $query = \"UPDATE users SET password_reset_token = '$token', password_reset_expires_at = '$token_expires_at' WHERE email = '$email'\";\n  mysqli_query($conn, $query);\n\n  // Send email with password reset link\n  send_password_reset_email($token, $email);\n}\n\nfunction send_password_reset_email($token, $email) {\n  // Set up email variables\n  $subject = \"Password Reset Request\";\n  $body = \"Click here to reset your password: <a href='\" . URL . \"/reset-password?token=\" . $token . \"'>Reset Password</a>\";\n  $from_email = \"your-email@example.com\";\n\n  // Send email using PHPMailer or another library\n  // ...\n}\n```\n**Password Reset Function**\n\nTo complete the process, we'll create a function called `reset_password()` that takes the password reset token as input. If the token is valid and hasn't expired, we'll prompt the user to enter their new password.\n```php\n// functions.php\n\nfunction reset_password($token) {\n  // Check if token exists in database\n  $query = \"SELECT * FROM users WHERE password_reset_token = '$token'\";\n  $result = mysqli_query($conn, $query);\n\n  if (mysqli_num_rows($result) == 0) {\n    // Token not found or has expired, return error message\n    echo \"Invalid token.\";\n    return;\n  }\n\n  // Token exists and hasn't expired, prompt user to enter new password\n  $new_password = $_POST['new_password'];\n  $confirm_new_password = $_POST['confirm_new_password'];\n\n  if ($new_password !== $confirm_new_password) {\n    // Passwords don't match, return error message\n    echo \"Passwords do not match.\";\n    return;\n  }\n\n  // Update user's password in database\n  $query = \"UPDATE users SET password = '$new_password', password_reset_token = NULL WHERE password_reset_token = '$token'\";\n  mysqli_query($conn, $query);\n\n  // User's password has been updated successfully!\n  echo \"Password reset successful!\";\n}\n```\n**Usage**\n\nTo use this code, simply call the `forgot_password()` function with the user's email address as input:\n```php\nforgot_password($_POST['email']);\n```\nThis will send an email to the user with a password reset link. When they click on the link, it will take them to the password reset page, where they can enter their new password.\n\nNote that this is just a basic example and you should implement additional security measures such as:\n\n* Hashing the password before storing it in the database\n* Validating user input to prevent SQL injection attacks\n* Using a secure connection (HTTPS) for email communication\n* Implementing a rate limiter to prevent brute-force attacks", "code_blocks": ["```php\n// functions.php\n\nfunction forgot_password($email) {\n  // Check if email exists in database\n  $query = \"SELECT * FROM users WHERE email = '$email'\";\n  $result = mysqli_query($conn, $query);\n\n  if (mysqli_num_rows($result) == 0) {\n    // Email not found, return error message\n    echo \"Email not found.\";\n    return;\n  }\n\n  // Email exists, generate a random password reset token\n  $token = bin2hex(random_bytes(32));\n  $token_expires_at = date(\"Y-m-d H:i:s\", strtotime(\"+1 hour\"));\n\n  // Update user's password reset token in database\n  $query = \"UPDATE users SET password_reset_token = '$token', password_reset_expires_at = '$token_expires_at' WHERE email = '$email'\";\n  mysqli_query($conn, $query);\n\n  // Send email with password reset link\n  send_password_reset_email($token, $email);\n}\n\nfunction send_password_reset_email($token, $email) {\n  // Set up email variables\n  $subject = \"Password Reset Request\";\n  $body = \"Click here to reset your password: <a href='\" . URL . \"/reset-password?token=\" . $token . \"'>Reset Password</a>\";\n  $from_email = \"your-email@example.com\";\n\n  // Send email using PHPMailer or another library\n  // ...\n}\n```", "```php\n// functions.php\n\nfunction reset_password($token) {\n  // Check if token exists in database\n  $query = \"SELECT * FROM users WHERE password_reset_token = '$token'\";\n  $result = mysqli_query($conn, $query);\n\n  if (mysqli_num_rows($result) == 0) {\n    // Token not found or has expired, return error message\n    echo \"Invalid token.\";\n    return;\n  }\n\n  // Token exists and hasn't expired, prompt user to enter new password\n  $new_password = $_POST['new_password'];\n  $confirm_new_password = $_POST['confirm_new_password'];\n\n  if ($new_password !== $confirm_new_password) {\n    // Passwords don't match, return error message\n    echo \"Passwords do not match.\";\n    return;\n  }\n\n  // Update user's password in database\n  $query = \"UPDATE users SET password = '$new_password', password_reset_token = NULL WHERE password_reset_token = '$token'\";\n  mysqli_query($conn, $query);\n\n  // User's password has been updated successfully!\n  echo \"Password reset successful!\";\n}\n```", "```php\nforgot_password($_POST['email']);\n```"]}
