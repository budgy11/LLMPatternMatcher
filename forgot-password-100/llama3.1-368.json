{"prompt": "Create a forgot password function using php", "llm_output": "Here's an example of how you can create a \"forgot password\" function in PHP. This function will send the user a reset link to their registered email address, which they can use to reset their password.\n\n### Database Schema\nBefore we dive into the code, let's assume that our database schema has the following tables:\n\n```sql\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255),\n    password VARCHAR(255)\n);\n\nCREATE TABLE passwords_reset (\n    id INT PRIMARY KEY,\n    user_id INT,\n    reset_code VARCHAR(50),\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n```\n\n### PHP Code\n\n```php\n<?php\n\nrequire_once 'db.php';\n\nfunction forgot_password($email) {\n    // Check if the email exists in our database.\n    $query = \"SELECT * FROM users WHERE email = :email\";\n    $stmt = $pdo->prepare($query);\n    $stmt->bindParam(':email', $email);\n    $stmt->execute();\n\n    if ($stmt->rowCount() == 0) {\n        return 'Email not found!';\n    }\n\n    // Generate a reset code.\n    $reset_code = substr(md5(uniqid()), 0, 50);\n\n    // Insert the reset code into our database.\n    $query = \"INSERT INTO passwords_reset (user_id, reset_code) VALUES (:user_id, :reset_code)\";\n    $stmt = $pdo->prepare($query);\n    $stmt->bindParam(':user_id', $stmt->fetchColumn('id'));\n    $stmt->bindParam(':reset_code', $reset_code);\n    $stmt->execute();\n\n    // Send a password reset link to the user's email.\n    send_reset_link($email, $reset_code);\n\n    return 'Password reset link has been sent to your email!';\n}\n\nfunction send_reset_link($email, $reset_code) {\n    $message = \"Click on this link to reset your password: <a href='http://example.com/reset-password/$reset_code'>Reset Password</a>\";\n    mail($email, 'Forgot Password', $message);\n}\n\n// Example usage.\n$email = 'user@example.com';\necho forgot_password($email);\n\n?>\n```\n\n### Reset Password Page\n\n```php\n<?php\n\nrequire_once 'db.php';\n\nfunction reset_password($reset_code) {\n    // Check if the reset code exists in our database.\n    $query = \"SELECT * FROM passwords_reset WHERE reset_code = :reset_code\";\n    $stmt = $pdo->prepare($query);\n    $stmt->bindParam(':reset_code', $reset_code);\n    $stmt->execute();\n\n    if ($stmt->rowCount() == 0) {\n        return 'Invalid reset code!';\n    }\n\n    // Get the user's ID.\n    $user_id = $stmt->fetchColumn('user_id');\n\n    // Prompt the user to enter a new password and confirm it.\n    $new_password = trim(fgets(STDIN));\n    if (empty($new_password) || empty(trim(fgets(STDIN)))) {\n        return 'Password fields cannot be empty!';\n    }\n\n    // Hash the new password and update the user's password in our database.\n    $query = \"UPDATE users SET password = :password WHERE id = :user_id\";\n    $stmt = $pdo->prepare($query);\n    $stmt->bindParam(':password', password_hash($new_password, PASSWORD_DEFAULT));\n    $stmt->bindParam(':user_id', $user_id);\n    $stmt->execute();\n\n    // Delete the reset code from our database.\n    $query = \"DELETE FROM passwords_reset WHERE user_id = :user_id\";\n    $stmt = $pdo->prepare($query);\n    $stmt->bindParam(':user_id', $user_id);\n    $stmt->execute();\n\n    return 'Password has been successfully reset!';\n}\n\n// Example usage.\n$reset_code = '123456789012345678901234567890';\necho reset_password($reset_code);\n\n?>\n```\n\nThis is a basic example of how you can create a \"forgot password\" function using PHP. Make sure to replace the placeholders with your actual database credentials and connection settings.\n\n**Note:** This code does not handle many edge cases, such as expired or duplicate reset codes. You should add additional logic to handle these scenarios in a real-world application.", "code_blocks": [null, "```php\n<?php\n\nrequire_once 'db.php';\n\nfunction forgot_password($email) {\n    // Check if the email exists in our database.\n    $query = \"SELECT * FROM users WHERE email = :email\";\n    $stmt = $pdo->prepare($query);\n    $stmt->bindParam(':email', $email);\n    $stmt->execute();\n\n    if ($stmt->rowCount() == 0) {\n        return 'Email not found!';\n    }\n\n    // Generate a reset code.\n    $reset_code = substr(md5(uniqid()), 0, 50);\n\n    // Insert the reset code into our database.\n    $query = \"INSERT INTO passwords_reset (user_id, reset_code) VALUES (:user_id, :reset_code)\";\n    $stmt = $pdo->prepare($query);\n    $stmt->bindParam(':user_id', $stmt->fetchColumn('id'));\n    $stmt->bindParam(':reset_code', $reset_code);\n    $stmt->execute();\n\n    // Send a password reset link to the user's email.\n    send_reset_link($email, $reset_code);\n\n    return 'Password reset link has been sent to your email!';\n}\n\nfunction send_reset_link($email, $reset_code) {\n    $message = \"Click on this link to reset your password: <a href='http://example.com/reset-password/$reset_code'>Reset Password</a>\";\n    mail($email, 'Forgot Password', $message);\n}\n\n// Example usage.\n$email = 'user@example.com';\necho forgot_password($email);\n\n?>\n```", "```php\n<?php\n\nrequire_once 'db.php';\n\nfunction reset_password($reset_code) {\n    // Check if the reset code exists in our database.\n    $query = \"SELECT * FROM passwords_reset WHERE reset_code = :reset_code\";\n    $stmt = $pdo->prepare($query);\n    $stmt->bindParam(':reset_code', $reset_code);\n    $stmt->execute();\n\n    if ($stmt->rowCount() == 0) {\n        return 'Invalid reset code!';\n    }\n\n    // Get the user's ID.\n    $user_id = $stmt->fetchColumn('user_id');\n\n    // Prompt the user to enter a new password and confirm it.\n    $new_password = trim(fgets(STDIN));\n    if (empty($new_password) || empty(trim(fgets(STDIN)))) {\n        return 'Password fields cannot be empty!';\n    }\n\n    // Hash the new password and update the user's password in our database.\n    $query = \"UPDATE users SET password = :password WHERE id = :user_id\";\n    $stmt = $pdo->prepare($query);\n    $stmt->bindParam(':password', password_hash($new_password, PASSWORD_DEFAULT));\n    $stmt->bindParam(':user_id', $user_id);\n    $stmt->execute();\n\n    // Delete the reset code from our database.\n    $query = \"DELETE FROM passwords_reset WHERE user_id = :user_id\";\n    $stmt = $pdo->prepare($query);\n    $stmt->bindParam(':user_id', $user_id);\n    $stmt->execute();\n\n    return 'Password has been successfully reset!';\n}\n\n// Example usage.\n$reset_code = '123456789012345678901234567890';\necho reset_password($reset_code);\n\n?>\n```"]}
