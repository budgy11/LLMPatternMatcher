{"prompt": "Create a forgot password function using php", "llm_output": "Here's an example of how to create a \"forgot password\" functionality in PHP. This will involve sending a reset password link to the user's email, which they can use to reset their password.\n\n**Database Structure:**\n\nFirst, let's assume we have a database table called `users` with the following columns:\n\n| Column Name | Data Type | Description |\n| --- | --- | --- |\n| id | int | Unique user ID |\n| username | varchar(255) | User's username |\n| email | varchar(255) | User's email address |\n| password | varchar(255) | Hashed user password (using a library like `password_hash`) |\n\n**PHP Code:**\n\nHere's the PHP code to handle the \"forgot password\" functionality:\n\n```php\n<?php\n\n// Configuration\ndefine('RESET_LINK_EXPIRE', 3600); // 1 hour in seconds\ndefine('PASSWORD_RESET_TEMPLATE', 'reset_password.php');\n\n// Function to send email with reset link\nfunction send_reset_email($user_email, $username, $reset_link) {\n    // Email settings (use your own)\n    $from_email = 'your-email@example.com';\n    $from_name = 'Your App Name';\n\n    $subject = 'Reset Password Link for ' . $username;\n\n    // Mailer\n    $mailer = new PHPMailer();\n\n    // Email body\n    $email_body = '<p>Hello ' . $username . ',</p>\n                    <p>Click the link below to reset your password:</p>\n                    <p><a href=\"' . $reset_link . '\">' . $reset_link . '</a></p>';\n\n    // Send email\n    try {\n        $mailer->From = $from_email;\n        $mailer->FromName = $from_name;\n        $mailer->AddAddress($user_email);\n        $mailer->Subject = $subject;\n        $mailer->Body = $email_body;\n        $mailer->IsHTML(true);\n        if (!$mailer->Send()) {\n            throw new Exception('Error sending email: ' . $mailer->ErrorInfo);\n        }\n    } catch (Exception $e) {\n        echo 'Email not sent: ' . $e->getMessage();\n    }\n}\n\n// Function to handle reset password request\nfunction reset_password_request($username, $email) {\n    // Check if user exists in database\n    $conn = new mysqli('your-host', 'your-username', 'your-password', 'your-database');\n    if ($conn->connect_error) {\n        die(\"Connection failed: \" . $conn->connect_error);\n    }\n\n    $sql = \"SELECT * FROM users WHERE username = '$username' AND email = '$email'\";\n    $result = $conn->query($sql);\n\n    if ($result->num_rows > 0) {\n        // User exists, generate reset link\n        $reset_link = 'http://your-app.com/reset-password.php?token=' . bin2hex(random_bytes(16));\n\n        // Store reset link in database (optional)\n        $conn->query(\"INSERT INTO password_resets (user_id, reset_token, created_at) VALUES ((SELECT id FROM users WHERE username = '$username' AND email = '$email'), '\" . md5($reset_link) . \"', NOW())\");\n\n        send_reset_email($email, $username, $reset_link);\n    }\n\n    $conn->close();\n}\n\n// Handle form submission\nif (isset($_POST['submit'])) {\n    $username = $_POST['username'];\n    $email = $_POST['email'];\n\n    reset_password_request($username, $email);\n\n    echo 'Reset password link sent to your email.';\n}\n\n?>\n```\n\n**Form:**\n\nYou'll need a simple form for users to enter their username and email address:\n\n```html\n<form action=\"\" method=\"post\">\n    <label>Username:</label>\n    <input type=\"text\" name=\"username\"><br><br>\n    <label>Email Address:</label>\n    <input type=\"email\" name=\"email\"><br><br>\n    <input type=\"submit\" name=\"submit\" value=\"Send Reset Link\">\n</form>\n```\n\n**Reset Password Page:**\n\nFinally, you'll need to create a page (e.g., `reset_password.php`) that accepts the reset token and allows users to input their new password:\n\n```php\n<?php\n\n// Configuration\ndefine('PASSWORD_RESET_TOKEN', $_GET['token']);\n\n// Check if token is valid\n$conn = new mysqli('your-host', 'your-username', 'your-password', 'your-database');\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n$sql = \"SELECT * FROM password_resets WHERE reset_token = '\" . md5(PASSWORD_RESET_TOKEN) . \"' AND created_at > NOW() - INTERVAL 1 HOUR\";\n$result = $conn->query($sql);\n\nif ($result->num_rows == 0) {\n    echo 'Invalid token. Please try again.';\n} else {\n    // Token is valid, let user reset password\n    if (isset($_POST['new_password'])) {\n        // Update user's password in database\n        $user_id = $_SESSION['user_id']; // Assuming you're storing the user ID in a session variable\n\n        $new_password = $_POST['new_password'];\n        $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);\n\n        $conn->query(\"UPDATE users SET password = '$hashed_password' WHERE id = '$user_id'\");\n\n        echo 'Password reset successfully!';\n    }\n\n    // Display form to user\n?>\n\n<form action=\"\" method=\"post\">\n    <label>New Password:</label>\n    <input type=\"password\" name=\"new_password\"><br><br>\n    <input type=\"submit\" name=\"submit\" value=\"Reset Password\">\n</form>\n\n<?php } ?>\n```\n\nNote that this is just a basic example and you should adjust it to fit your specific needs. Additionally, make sure to store the reset token securely in the database (using a hash function) and don't expose it to the user directly.", "code_blocks": ["```php\n<?php\n\n// Configuration\ndefine('RESET_LINK_EXPIRE', 3600); // 1 hour in seconds\ndefine('PASSWORD_RESET_TEMPLATE', 'reset_password.php');\n\n// Function to send email with reset link\nfunction send_reset_email($user_email, $username, $reset_link) {\n    // Email settings (use your own)\n    $from_email = 'your-email@example.com';\n    $from_name = 'Your App Name';\n\n    $subject = 'Reset Password Link for ' . $username;\n\n    // Mailer\n    $mailer = new PHPMailer();\n\n    // Email body\n    $email_body = '<p>Hello ' . $username . ',</p>\n                    <p>Click the link below to reset your password:</p>\n                    <p><a href=\"' . $reset_link . '\">' . $reset_link . '</a></p>';\n\n    // Send email\n    try {\n        $mailer->From = $from_email;\n        $mailer->FromName = $from_name;\n        $mailer->AddAddress($user_email);\n        $mailer->Subject = $subject;\n        $mailer->Body = $email_body;\n        $mailer->IsHTML(true);\n        if (!$mailer->Send()) {\n            throw new Exception('Error sending email: ' . $mailer->ErrorInfo);\n        }\n    } catch (Exception $e) {\n        echo 'Email not sent: ' . $e->getMessage();\n    }\n}\n\n// Function to handle reset password request\nfunction reset_password_request($username, $email) {\n    // Check if user exists in database\n    $conn = new mysqli('your-host', 'your-username', 'your-password', 'your-database');\n    if ($conn->connect_error) {\n        die(\"Connection failed: \" . $conn->connect_error);\n    }\n\n    $sql = \"SELECT * FROM users WHERE username = '$username' AND email = '$email'\";\n    $result = $conn->query($sql);\n\n    if ($result->num_rows > 0) {\n        // User exists, generate reset link\n        $reset_link = 'http://your-app.com/reset-password.php?token=' . bin2hex(random_bytes(16));\n\n        // Store reset link in database (optional)\n        $conn->query(\"INSERT INTO password_resets (user_id, reset_token, created_at) VALUES ((SELECT id FROM users WHERE username = '$username' AND email = '$email'), '\" . md5($reset_link) . \"', NOW())\");\n\n        send_reset_email($email, $username, $reset_link);\n    }\n\n    $conn->close();\n}\n\n// Handle form submission\nif (isset($_POST['submit'])) {\n    $username = $_POST['username'];\n    $email = $_POST['email'];\n\n    reset_password_request($username, $email);\n\n    echo 'Reset password link sent to your email.';\n}\n\n?>\n```", null, "```php\n<?php\n\n// Configuration\ndefine('PASSWORD_RESET_TOKEN', $_GET['token']);\n\n// Check if token is valid\n$conn = new mysqli('your-host', 'your-username', 'your-password', 'your-database');\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n$sql = \"SELECT * FROM password_resets WHERE reset_token = '\" . md5(PASSWORD_RESET_TOKEN) . \"' AND created_at > NOW() - INTERVAL 1 HOUR\";\n$result = $conn->query($sql);\n\nif ($result->num_rows == 0) {\n    echo 'Invalid token. Please try again.';\n} else {\n    // Token is valid, let user reset password\n    if (isset($_POST['new_password'])) {\n        // Update user's password in database\n        $user_id = $_SESSION['user_id']; // Assuming you're storing the user ID in a session variable\n\n        $new_password = $_POST['new_password'];\n        $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);\n\n        $conn->query(\"UPDATE users SET password = '$hashed_password' WHERE id = '$user_id'\");\n\n        echo 'Password reset successfully!';\n    }\n\n    // Display form to user\n?>\n\n<form action=\"\" method=\"post\">\n    <label>New Password:</label>\n    <input type=\"password\" name=\"new_password\"><br><br>\n    <input type=\"submit\" name=\"submit\" value=\"Reset Password\">\n</form>\n\n<?php } ?>\n```"]}
