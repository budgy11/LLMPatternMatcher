{"prompt": "Create a forgot password function using php", "llm_output": "**Forgot Password Function in PHP**\n=====================================\n\nHere is an example of a basic forgot password function using PHP. This function will send a password reset link to the user's email address.\n\n### Database Schema\n\nWe assume that you have a `users` table with the following columns:\n\n* `id`: The user ID (primary key)\n* `email`: The user's email address\n* `password`: The user's password (hashed using a password hashing algorithm like bcrypt or PBKDF2)\n\n### PHP Code\n\n```php\n<?php\n\n// Configuration\ndefine('PASSWORD_RESET_LINK_EXPIRE', 3600); // expire in 1 hour\ndefine('PASSWORD_RESET_LINK_SECRET', 'your-secret-key'); // secret key for token generation\n\n// Forgot Password Function\nfunction forgot_password($email) {\n    // Get user data from database\n    $user = get_user_by_email($email);\n\n    if ($user === false) {\n        return array('error' => 'User not found');\n    }\n\n    // Generate a password reset link\n    $token = generate_reset_token($user->id, PASSWORD_RESET_LINK_EXPIRE);\n    $reset_link = $_SERVER['HTTP_HOST'] . '/password-reset/' . $token;\n\n    // Send email with password reset link\n    send_password_reset_email($email, $reset_link);\n\n    return array('success' => 'Password reset link sent to your email');\n}\n\n// Get user data by email function\nfunction get_user_by_email($email) {\n    // Query database to retrieve user data\n    $query = \"SELECT * FROM users WHERE email = '$email'\";\n    $result = mysqli_query($conn, $query);\n\n    if ($result === false) {\n        return false;\n    }\n\n    return $result->fetch_assoc();\n}\n\n// Generate password reset token function\nfunction generate_reset_token($user_id, $expire_in) {\n    // Use a secret key and the user ID to generate a unique token\n    $token = hash_hmac('sha256', $user_id . time(), PASSWORD_RESET_LINK_SECRET);\n    return $token;\n}\n\n// Send password reset email function\nfunction send_password_reset_email($email, $reset_link) {\n    // Set up email headers and body\n    $subject = 'Reset Your Password';\n    $body = \"Click the link below to reset your password:\\n\\n\" . $reset_link;\n\n    // Send email using PHP's mail() function or a library like SwiftMailer\n    // ...\n}\n\n// Handle password reset request (e.g. via POST)\nif ($_SERVER['REQUEST_METHOD'] === 'POST') {\n    $email = $_POST['email'];\n    $result = forgot_password($email);\n\n    if ($result['success']) {\n        echo json_encode(array('message' => 'Password reset link sent to your email'));\n    } else {\n        echo json_encode($result);\n    }\n}\n?>\n```\n\n### Explanation\n\n1. The `forgot_password` function takes an email address as input and returns a success message or an error message.\n2. It retrieves the user data from the database using the `get_user_by_email` function.\n3. If the user is found, it generates a password reset link using the `generate_reset_token` function.\n4. The password reset link is sent to the user's email address using the `send_password_reset_email` function.\n\n### Notes\n\n* This is a basic example and you should consider implementing additional security measures, such as:\n\t+ Using a more secure password hashing algorithm (e.g. bcrypt).\n\t+ Validating user input data.\n\t+ Implementing rate limiting to prevent brute-force attacks.\n\t+ Storing the password reset token securely (e.g. using a database column with limited access rights).\n* This example uses PHP's built-in `mail()` function to send emails, but you may want to use a library like SwiftMailer for more flexibility and security features.", "code_blocks": ["```php\n<?php\n\n// Configuration\ndefine('PASSWORD_RESET_LINK_EXPIRE', 3600); // expire in 1 hour\ndefine('PASSWORD_RESET_LINK_SECRET', 'your-secret-key'); // secret key for token generation\n\n// Forgot Password Function\nfunction forgot_password($email) {\n    // Get user data from database\n    $user = get_user_by_email($email);\n\n    if ($user === false) {\n        return array('error' => 'User not found');\n    }\n\n    // Generate a password reset link\n    $token = generate_reset_token($user->id, PASSWORD_RESET_LINK_EXPIRE);\n    $reset_link = $_SERVER['HTTP_HOST'] . '/password-reset/' . $token;\n\n    // Send email with password reset link\n    send_password_reset_email($email, $reset_link);\n\n    return array('success' => 'Password reset link sent to your email');\n}\n\n// Get user data by email function\nfunction get_user_by_email($email) {\n    // Query database to retrieve user data\n    $query = \"SELECT * FROM users WHERE email = '$email'\";\n    $result = mysqli_query($conn, $query);\n\n    if ($result === false) {\n        return false;\n    }\n\n    return $result->fetch_assoc();\n}\n\n// Generate password reset token function\nfunction generate_reset_token($user_id, $expire_in) {\n    // Use a secret key and the user ID to generate a unique token\n    $token = hash_hmac('sha256', $user_id . time(), PASSWORD_RESET_LINK_SECRET);\n    return $token;\n}\n\n// Send password reset email function\nfunction send_password_reset_email($email, $reset_link) {\n    // Set up email headers and body\n    $subject = 'Reset Your Password';\n    $body = \"Click the link below to reset your password:\\n\\n\" . $reset_link;\n\n    // Send email using PHP's mail() function or a library like SwiftMailer\n    // ...\n}\n\n// Handle password reset request (e.g. via POST)\nif ($_SERVER['REQUEST_METHOD'] === 'POST') {\n    $email = $_POST['email'];\n    $result = forgot_password($email);\n\n    if ($result['success']) {\n        echo json_encode(array('message' => 'Password reset link sent to your email'));\n    } else {\n        echo json_encode($result);\n    }\n}\n?>\n```"]}
