{"prompt": "Create a forgot password function using php", "llm_output": "**Forgot Password Function in PHP**\n=====================================\n\nThis example demonstrates a basic implementation of a forgot password function using PHP. The system will send an email to the user with a reset link containing a token that can be used to change their password.\n\n**Database Schema**\n-------------------\n\nFor this example, we'll assume a simple database schema with two tables: `users` and `password_resets`.\n\n```sql\nCREATE TABLE users (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  email VARCHAR(255) UNIQUE NOT NULL,\n  password_hash VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE password_resets (\n  token VARCHAR(255) PRIMARY KEY,\n  user_id INT,\n  expires_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP + INTERVAL 1 HOUR\n);\n```\n\n**PHP Code**\n-------------\n\n### `forgot_password.php`\n```php\n<?php\n\n// Configuration\n$secretKey = 'your-secret-key-here';\n\nfunction sendEmail($to, $subject, $body) {\n  $headers = \"From: your-email@example.com\\r\\n\";\n  mail($to, $subject, $body, $headers);\n}\n\nfunction generateToken() {\n  return bin2hex(random_bytes(32));\n}\n\nfunction verifyToken($token) {\n  global $db;\n  $stmt = $db->prepare('SELECT user_id FROM password_resets WHERE token = ?');\n  $stmt->execute([$token]);\n  return $stmt->fetchColumn();\n}\n\nfunction resetPassword() {\n  global $db;\n  if (isset($_POST['password']) && isset($_POST['confirm_password'])) {\n    $password = $_POST['password'];\n    $confirm_password = $_POST['confirm_password'];\n    if ($password === $confirm_password) {\n      $token = generateToken();\n      $stmt = $db->prepare('INSERT INTO password_resets (token, user_id, expires_at) VALUES (?, ?, NOW())');\n      $stmt->execute([$token, 1]); // Replace with actual user ID\n      return ['success' => true];\n    } else {\n      return ['error' => 'Passwords do not match.'];\n    }\n  }\n}\n\n// Handle forgot password request\nif (isset($_POST['email'])) {\n  $email = $_POST['email'];\n  $stmt = $db->prepare('SELECT id FROM users WHERE email = ?');\n  $stmt->execute([$email]);\n  if ($row = $stmt->fetch()) {\n    $token = generateToken();\n    $stmt = $db->prepare('INSERT INTO password_resets (token, user_id) VALUES (?, ?)');\n    $stmt->execute([$token, $row['id']]);\n    sendEmail($email, 'Reset Password', \"Click here to reset your password: <a href=\\\"reset-password.php?token=$token\\\">Reset</a>\");\n  } else {\n    return ['error' => 'Email not found.'];\n  }\n}\n\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n  <title>Forgot Password</title>\n</head>\n<body>\n  <?php if (isset($_POST['email'])): ?>\n    <p>Password reset email sent to your email address.</p>\n  <?php else: ?>\n    <h1>Forgot Password</h1>\n    <form action=\"\" method=\"post\">\n      <label>Email:</label>\n      <input type=\"text\" name=\"email\">\n      <button type=\"submit\">Submit</button>\n    </form>\n  <?php endif; ?>\n</body>\n</html>\n```\n\n### `reset-password.php`\n```php\n<?php\n\n// Configuration\n$secretKey = 'your-secret-key-here';\n\nfunction verifyToken($token) {\n  global $db;\n  $stmt = $db->prepare('SELECT user_id FROM password_resets WHERE token = ?');\n  $stmt->execute([$token]);\n  return $stmt->fetchColumn();\n}\n\nfunction resetPassword() {\n  global $db;\n  if (isset($_POST['password']) && isset($_POST['confirm_password'])) {\n    $password = $_POST['password'];\n    $confirm_password = $_POST['confirm_password'];\n    if ($password === $confirm_password) {\n      $token = $_GET['token'];\n      $user_id = verifyToken($token);\n      if ($user_id !== false) {\n        $stmt = $db->prepare('UPDATE users SET password_hash = ? WHERE id = ?');\n        $stmt->execute([hash_password($password), $user_id]);\n        return ['success' => true];\n      } else {\n        return ['error' => 'Invalid token.'];\n      }\n    } else {\n      return ['error' => 'Passwords do not match.'];\n    }\n  }\n}\n\n// Handle reset password request\nif (isset($_GET['token'])) {\n  $token = $_GET['token'];\n  if ($user_id = verifyToken($token)) {\n    ?>\n    <h1>Reset Password</h1>\n    <form action=\"\" method=\"post\">\n      <label>New Password:</label>\n      <input type=\"password\" name=\"password\">\n      <label>Confirm New Password:</label>\n      <input type=\"password\" name=\"confirm_password\">\n      <button type=\"submit\">Submit</button>\n    </form>\n    <?php\n  } else {\n    return ['error' => 'Invalid token.'];\n  }\n}\n\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n  <title>Reset Password</title>\n</head>\n<body>\n  <?php if (isset($_POST['password'])): ?>\n    <p>Password updated successfully.</p>\n  <?php endif; ?>\n</body>\n</html>\n\n```\n\n**Note:** This example assumes a simple `hash_password` function to hash the new password. You should replace this with your own password hashing library or implementation.\n\nThis implementation uses a token-based system to reset passwords. When a user requests a password reset, an email is sent with a unique token that can be used to update their password. The token expires after one hour to prevent unauthorized access.\n\nRemember to modify the `forgot_password.php` and `reset-password.php` files to match your specific database schema and configuration.", "code_blocks": [null, "```php\n<?php\n\n// Configuration\n$secretKey = 'your-secret-key-here';\n\nfunction sendEmail($to, $subject, $body) {\n  $headers = \"From: your-email@example.com\\r\\n\";\n  mail($to, $subject, $body, $headers);\n}\n\nfunction generateToken() {\n  return bin2hex(random_bytes(32));\n}\n\nfunction verifyToken($token) {\n  global $db;\n  $stmt = $db->prepare('SELECT user_id FROM password_resets WHERE token = ?');\n  $stmt->execute([$token]);\n  return $stmt->fetchColumn();\n}\n\nfunction resetPassword() {\n  global $db;\n  if (isset($_POST['password']) && isset($_POST['confirm_password'])) {\n    $password = $_POST['password'];\n    $confirm_password = $_POST['confirm_password'];\n    if ($password === $confirm_password) {\n      $token = generateToken();\n      $stmt = $db->prepare('INSERT INTO password_resets (token, user_id, expires_at) VALUES (?, ?, NOW())');\n      $stmt->execute([$token, 1]); // Replace with actual user ID\n      return ['success' => true];\n    } else {\n      return ['error' => 'Passwords do not match.'];\n    }\n  }\n}\n\n// Handle forgot password request\nif (isset($_POST['email'])) {\n  $email = $_POST['email'];\n  $stmt = $db->prepare('SELECT id FROM users WHERE email = ?');\n  $stmt->execute([$email]);\n  if ($row = $stmt->fetch()) {\n    $token = generateToken();\n    $stmt = $db->prepare('INSERT INTO password_resets (token, user_id) VALUES (?, ?)');\n    $stmt->execute([$token, $row['id']]);\n    sendEmail($email, 'Reset Password', \"Click here to reset your password: <a href=\\\"reset-password.php?token=$token\\\">Reset</a>\");\n  } else {\n    return ['error' => 'Email not found.'];\n  }\n}\n\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n  <title>Forgot Password</title>\n</head>\n<body>\n  <?php if (isset($_POST['email'])): ?>\n    <p>Password reset email sent to your email address.</p>\n  <?php else: ?>\n    <h1>Forgot Password</h1>\n    <form action=\"\" method=\"post\">\n      <label>Email:</label>\n      <input type=\"text\" name=\"email\">\n      <button type=\"submit\">Submit</button>\n    </form>\n  <?php endif; ?>\n</body>\n</html>\n```", "```php\n<?php\n\n// Configuration\n$secretKey = 'your-secret-key-here';\n\nfunction verifyToken($token) {\n  global $db;\n  $stmt = $db->prepare('SELECT user_id FROM password_resets WHERE token = ?');\n  $stmt->execute([$token]);\n  return $stmt->fetchColumn();\n}\n\nfunction resetPassword() {\n  global $db;\n  if (isset($_POST['password']) && isset($_POST['confirm_password'])) {\n    $password = $_POST['password'];\n    $confirm_password = $_POST['confirm_password'];\n    if ($password === $confirm_password) {\n      $token = $_GET['token'];\n      $user_id = verifyToken($token);\n      if ($user_id !== false) {\n        $stmt = $db->prepare('UPDATE users SET password_hash = ? WHERE id = ?');\n        $stmt->execute([hash_password($password), $user_id]);\n        return ['success' => true];\n      } else {\n        return ['error' => 'Invalid token.'];\n      }\n    } else {\n      return ['error' => 'Passwords do not match.'];\n    }\n  }\n}\n\n// Handle reset password request\nif (isset($_GET['token'])) {\n  $token = $_GET['token'];\n  if ($user_id = verifyToken($token)) {\n    ?>\n    <h1>Reset Password</h1>\n    <form action=\"\" method=\"post\">\n      <label>New Password:</label>\n      <input type=\"password\" name=\"password\">\n      <label>Confirm New Password:</label>\n      <input type=\"password\" name=\"confirm_password\">\n      <button type=\"submit\">Submit</button>\n    </form>\n    <?php\n  } else {\n    return ['error' => 'Invalid token.'];\n  }\n}\n\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n  <title>Reset Password</title>\n</head>\n<body>\n  <?php if (isset($_POST['password'])): ?>\n    <p>Password updated successfully.</p>\n  <?php endif; ?>\n</body>\n</html>\n\n```"]}
