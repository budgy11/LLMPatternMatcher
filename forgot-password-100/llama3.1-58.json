{"prompt": "Create a forgot password function using php", "llm_output": "Here's an example of how you can create a \"Forgot Password\" function in PHP:\n\n**Note:** This is a basic example and you should consider implementing security measures like email verification and password reset token to prevent unauthorized access.\n\n**Database Schema:**\n\nAssuming you have the following database schema:\n```sql\nCREATE TABLE users (\n  id INT PRIMARY KEY,\n  username VARCHAR(255),\n  email VARCHAR(255),\n  password_hash VARCHAR(255)\n);\n```\n**PHP Code:**\n```php\n// Forgot Password Function\n\nfunction forgot_password($username) {\n  // Get user data from the database\n  $user = get_user_by_username($username);\n\n  if (!$user) {\n    return array('error' => 'Username not found');\n  }\n\n  // Generate a reset token\n  $reset_token = bin2hex(random_bytes(16));\n\n  // Update user data with reset token in the database\n  update_user_with_reset_token($user['id'], $reset_token);\n\n  // Send password reset email to the user's email address\n  send_password_reset_email($user, $reset_token);\n}\n\n// Get user by username function\n\nfunction get_user_by_username($username) {\n  global $db;\n  $query = \"SELECT * FROM users WHERE username = '$username'\";\n  $result = mysqli_query($db, $query);\n\n  if (mysqli_num_rows($result) > 0) {\n    return mysqli_fetch_assoc($result);\n  }\n\n  return false;\n}\n\n// Update user with reset token function\n\nfunction update_user_with_reset_token($user_id, $reset_token) {\n  global $db;\n  $query = \"UPDATE users SET password_reset_token = '$reset_token' WHERE id = '$user_id'\";\n  mysqli_query($db, $query);\n}\n\n// Send password reset email function\n\nfunction send_password_reset_email($user, $reset_token) {\n  $to = $user['email'];\n  $subject = 'Password Reset';\n  $body = \"Please click on the following link to reset your password: <a href='http://example.com/reset-password?token=\" . $reset_token . \"'>Reset Password</a>\";\n\n  mail($to, $subject, $body);\n}\n\n// Check if the user has a valid reset token function\n\nfunction check_reset_token($token) {\n  global $db;\n  $query = \"SELECT * FROM users WHERE password_reset_token = '$token'\";\n  $result = mysqli_query($db, $query);\n\n  if (mysqli_num_rows($result) > 0) {\n    return true; // User has a valid reset token\n  }\n\n  return false;\n}\n\n// Reset user's password function\n\nfunction reset_password($token, $new_password) {\n  global $db;\n\n  if (!check_reset_token($token)) {\n    return array('error' => 'Invalid or expired reset token');\n  }\n\n  // Update user data with new password in the database\n  update_user_with_new_password($new_password);\n}\n```\n**Example Usage:**\n\n1. When the user clicks on the \"Forgot Password\" link, they will be taken to a page where they enter their username.\n2. After submitting the form, the `forgot_password()` function is called with the entered username as an argument.\n3. The function retrieves the user data from the database and generates a reset token using the `bin2hex(random_bytes(16))` function.\n4. The user's email address is updated in the database with the new password reset token.\n5. An email is sent to the user's email address with a link to reset their password.\n\n**Reset Password Link:**\n\n```html\n<a href=\"http://example.com/reset-password?token=<?php echo $reset_token; ?>\">\n  Reset Password\n</a>\n```\n**Password Reset Form:**\n\n```html\n<form action=\"\" method=\"post\">\n  <label for=\"new_password\">New Password:</label>\n  <input type=\"password\" id=\"new_password\" name=\"new_password\"><br><br>\n  <input type=\"submit\" value=\"Reset Password\">\n</form>\n```\n**PHP Code for Reset Password Form:**\n\n```php\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n  $token = $_GET['token'];\n  $new_password = $_POST['new_password'];\n\n  if ($token && !empty($new_password)) {\n    reset_password($token, $new_password);\n  } else {\n    echo 'Invalid or expired reset token';\n  }\n}\n```\nThis is a basic example and should be modified to fit your specific requirements. Additionally, you may want to implement email verification and password reset token expiration to prevent unauthorized access.", "code_blocks": [null, "```php\n// Forgot Password Function\n\nfunction forgot_password($username) {\n  // Get user data from the database\n  $user = get_user_by_username($username);\n\n  if (!$user) {\n    return array('error' => 'Username not found');\n  }\n\n  // Generate a reset token\n  $reset_token = bin2hex(random_bytes(16));\n\n  // Update user data with reset token in the database\n  update_user_with_reset_token($user['id'], $reset_token);\n\n  // Send password reset email to the user's email address\n  send_password_reset_email($user, $reset_token);\n}\n\n// Get user by username function\n\nfunction get_user_by_username($username) {\n  global $db;\n  $query = \"SELECT * FROM users WHERE username = '$username'\";\n  $result = mysqli_query($db, $query);\n\n  if (mysqli_num_rows($result) > 0) {\n    return mysqli_fetch_assoc($result);\n  }\n\n  return false;\n}\n\n// Update user with reset token function\n\nfunction update_user_with_reset_token($user_id, $reset_token) {\n  global $db;\n  $query = \"UPDATE users SET password_reset_token = '$reset_token' WHERE id = '$user_id'\";\n  mysqli_query($db, $query);\n}\n\n// Send password reset email function\n\nfunction send_password_reset_email($user, $reset_token) {\n  $to = $user['email'];\n  $subject = 'Password Reset';\n  $body = \"Please click on the following link to reset your password: <a href='http://example.com/reset-password?token=\" . $reset_token . \"'>Reset Password</a>\";\n\n  mail($to, $subject, $body);\n}\n\n// Check if the user has a valid reset token function\n\nfunction check_reset_token($token) {\n  global $db;\n  $query = \"SELECT * FROM users WHERE password_reset_token = '$token'\";\n  $result = mysqli_query($db, $query);\n\n  if (mysqli_num_rows($result) > 0) {\n    return true; // User has a valid reset token\n  }\n\n  return false;\n}\n\n// Reset user's password function\n\nfunction reset_password($token, $new_password) {\n  global $db;\n\n  if (!check_reset_token($token)) {\n    return array('error' => 'Invalid or expired reset token');\n  }\n\n  // Update user data with new password in the database\n  update_user_with_new_password($new_password);\n}\n```", null, null, "```php\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n  $token = $_GET['token'];\n  $new_password = $_POST['new_password'];\n\n  if ($token && !empty($new_password)) {\n    reset_password($token, $new_password);\n  } else {\n    echo 'Invalid or expired reset token';\n  }\n}\n```"]}
