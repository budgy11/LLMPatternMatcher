{"prompt": "Create a forgot password function using php", "llm_output": "Here is an example of a simple \"Forgot Password\" function in PHP, including email verification and password reset:\n\n**Database Schema**\n\nAssuming you have the following table structure in your database:\n```sql\nCREATE TABLE users (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  username VARCHAR(255),\n  email VARCHAR(255) UNIQUE,\n  password_hash VARCHAR(255)\n);\n```\n**PHP Code**\n```php\n// forgot_password.php\n\nrequire_once 'config.php'; // Include database configuration file\nrequire_once 'functions.php'; // Include functions for hashing and verifying passwords\n\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n  $username = $_POST['username'];\n  $email = $_POST['email'];\n\n  // Validate input data\n  if (empty($username) || empty($email)) {\n    echo \"Please enter both username and email\";\n    exit;\n  }\n\n  // Check if user exists\n  $query = \"SELECT * FROM users WHERE username = '$username' AND email = '$email'\";\n  $result = mysqli_query($conn, $query);\n  if (mysqli_num_rows($result) == 0) {\n    echo \"No account found with the provided credentials\";\n    exit;\n  }\n\n  // Generate password reset token\n  $token = bin2hex(random_bytes(32));\n  $expires = date('Y-m-d H:i:s', strtotime('+1 hour'));\n\n  // Store token in database\n  $query = \"UPDATE users SET password_reset_token = '$token', expires_at = '$expires' WHERE username = '$username'\";\n  mysqli_query($conn, $query);\n\n  // Send email with reset link\n  sendPasswordResetEmail($email, $token);\n}\n\nfunction sendPasswordResetEmail($email, $token) {\n  $subject = 'Reset Your Password';\n  $body = '\n    <p>Click the link below to reset your password:</p>\n    <a href=\"' . $_SERVER['HTTP_HOST'] . '/reset_password.php?token=' . $token . '\">Reset Password</a>\n  ';\n\n  mail($email, $subject, $body);\n}\n\n// Display form for entering username and email\n?>\n<form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n  <label>Username:</label>\n  <input type=\"text\" name=\"username\"><br><br>\n  <label>Email:</label>\n  <input type=\"email\" name=\"email\"><br><br>\n  <button type=\"submit\">Send Reset Link</button>\n</form>\n```\n**config.php**\n```php\n<?php\n\n// Database connection settings\ndefine('DB_HOST', 'your_host');\ndefine('DB_USERNAME', 'your_username');\ndefine('DB_PASSWORD', 'your_password');\ndefine('DB_NAME', 'your_database');\n\n$conn = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);\n\nif ($conn->connect_error) {\n  die(\"Connection failed: \" . $conn->connect_error);\n}\n\n?>\n```\n**functions.php**\n```php\n<?php\n\nfunction hashPassword($password) {\n  // Hash password using a secure algorithm (e.g., bcrypt)\n  return password_hash($password, PASSWORD_BCRYPT);\n}\n\nfunction verifyPassword($hashed_password, $input_password) {\n  // Verify input password against the hashed password\n  return password_verify($input_password, $hashed_password);\n}\n?>\n```\n**reset_password.php**\n```php\n<?php\n\nrequire_once 'config.php';\nrequire_once 'functions.php';\n\nif ($_SERVER['REQUEST_METHOD'] == 'GET') {\n  $token = $_GET['token'];\n  $query = \"SELECT * FROM users WHERE password_reset_token = '$token'\";\n  $result = mysqli_query($conn, $query);\n  if (mysqli_num_rows($result) > 0) {\n    // Get user data from database\n    $user_data = mysqli_fetch_assoc($result);\n\n    // Display form for entering new password\n?>\n<form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n  <label>New Password:</label>\n  <input type=\"password\" name=\"new_password\"><br><br>\n  <label>Confirm New Password:</label>\n  <input type=\"password\" name=\"confirm_new_password\"><br><br>\n  <button type=\"submit\">Reset Password</button>\n  <input type=\"hidden\" name=\"token\" value=\"<?php echo $token; ?>\">\n</form>\n\n<?php\n  } else {\n    echo \"Invalid reset token\";\n  }\n}\n\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n  $new_password = $_POST['new_password'];\n  $confirm_new_password = $_POST['confirm_new_password'];\n  $token = $_POST['token'];\n\n  if ($new_password != $confirm_new_password) {\n    echo \"Passwords do not match\";\n  } else {\n    // Update user password in database\n    $hashed_password = hashPassword($new_password);\n    $query = \"UPDATE users SET password_hash = '$hashed_password', password_reset_token = NULL, expires_at = NULL WHERE password_reset_token = '$token'\";\n    mysqli_query($conn, $query);\n\n    echo \"Password updated successfully\";\n  }\n}\n\n?>\n```\nThis code provides a basic example of how to implement a forgot password feature using PHP. When the user submits their username and email, an email is sent with a reset link containing a token that can be used to update the password.\n\nPlease note that this is just a starting point, and you should consider implementing additional security measures, such as:\n\n* Using a secure password hashing algorithm (e.g., bcrypt)\n* Verifying the user's identity before updating their password\n* Implementing rate limiting for password reset requests\n* Storing sensitive data in an encrypted format\n\nAlso, make sure to test this code thoroughly and adapt it to your specific needs.", "code_blocks": [null, "```php\n// forgot_password.php\n\nrequire_once 'config.php'; // Include database configuration file\nrequire_once 'functions.php'; // Include functions for hashing and verifying passwords\n\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n  $username = $_POST['username'];\n  $email = $_POST['email'];\n\n  // Validate input data\n  if (empty($username) || empty($email)) {\n    echo \"Please enter both username and email\";\n    exit;\n  }\n\n  // Check if user exists\n  $query = \"SELECT * FROM users WHERE username = '$username' AND email = '$email'\";\n  $result = mysqli_query($conn, $query);\n  if (mysqli_num_rows($result) == 0) {\n    echo \"No account found with the provided credentials\";\n    exit;\n  }\n\n  // Generate password reset token\n  $token = bin2hex(random_bytes(32));\n  $expires = date('Y-m-d H:i:s', strtotime('+1 hour'));\n\n  // Store token in database\n  $query = \"UPDATE users SET password_reset_token = '$token', expires_at = '$expires' WHERE username = '$username'\";\n  mysqli_query($conn, $query);\n\n  // Send email with reset link\n  sendPasswordResetEmail($email, $token);\n}\n\nfunction sendPasswordResetEmail($email, $token) {\n  $subject = 'Reset Your Password';\n  $body = '\n    <p>Click the link below to reset your password:</p>\n    <a href=\"' . $_SERVER['HTTP_HOST'] . '/reset_password.php?token=' . $token . '\">Reset Password</a>\n  ';\n\n  mail($email, $subject, $body);\n}\n\n// Display form for entering username and email\n?>\n<form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n  <label>Username:</label>\n  <input type=\"text\" name=\"username\"><br><br>\n  <label>Email:</label>\n  <input type=\"email\" name=\"email\"><br><br>\n  <button type=\"submit\">Send Reset Link</button>\n</form>\n```", "```php\n<?php\n\n// Database connection settings\ndefine('DB_HOST', 'your_host');\ndefine('DB_USERNAME', 'your_username');\ndefine('DB_PASSWORD', 'your_password');\ndefine('DB_NAME', 'your_database');\n\n$conn = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);\n\nif ($conn->connect_error) {\n  die(\"Connection failed: \" . $conn->connect_error);\n}\n\n?>\n```", "```php\n<?php\n\nfunction hashPassword($password) {\n  // Hash password using a secure algorithm (e.g., bcrypt)\n  return password_hash($password, PASSWORD_BCRYPT);\n}\n\nfunction verifyPassword($hashed_password, $input_password) {\n  // Verify input password against the hashed password\n  return password_verify($input_password, $hashed_password);\n}\n?>\n```", "```php\n<?php\n\nrequire_once 'config.php';\nrequire_once 'functions.php';\n\nif ($_SERVER['REQUEST_METHOD'] == 'GET') {\n  $token = $_GET['token'];\n  $query = \"SELECT * FROM users WHERE password_reset_token = '$token'\";\n  $result = mysqli_query($conn, $query);\n  if (mysqli_num_rows($result) > 0) {\n    // Get user data from database\n    $user_data = mysqli_fetch_assoc($result);\n\n    // Display form for entering new password\n?>\n<form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n  <label>New Password:</label>\n  <input type=\"password\" name=\"new_password\"><br><br>\n  <label>Confirm New Password:</label>\n  <input type=\"password\" name=\"confirm_new_password\"><br><br>\n  <button type=\"submit\">Reset Password</button>\n  <input type=\"hidden\" name=\"token\" value=\"<?php echo $token; ?>\">\n</form>\n\n<?php\n  } else {\n    echo \"Invalid reset token\";\n  }\n}\n\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n  $new_password = $_POST['new_password'];\n  $confirm_new_password = $_POST['confirm_new_password'];\n  $token = $_POST['token'];\n\n  if ($new_password != $confirm_new_password) {\n    echo \"Passwords do not match\";\n  } else {\n    // Update user password in database\n    $hashed_password = hashPassword($new_password);\n    $query = \"UPDATE users SET password_hash = '$hashed_password', password_reset_token = NULL, expires_at = NULL WHERE password_reset_token = '$token'\";\n    mysqli_query($conn, $query);\n\n    echo \"Password updated successfully\";\n  }\n}\n\n?>\n```"]}
