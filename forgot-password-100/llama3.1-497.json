{"prompt": "Create a forgot password function using php", "llm_output": "Here is an example of how you can create a \"forgot password\" function in PHP. This will include two pages: one for the user to submit their email address, and another to send them a reset link via email.\n\n**Step 1: Create a database table to store user information**\n\nCreate a new MySQL database table called `users` with the following columns:\n\n```sql\nCREATE TABLE users (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  username VARCHAR(255),\n  password_hash VARCHAR(255),\n  email VARCHAR(255)\n);\n```\n\n**Step 2: Create the forgot password page (forgot_password.php)**\n\nCreate a new PHP file called `forgot_password.php` with the following code:\n\n```php\n<?php\n// Define database connection settings\n$host = 'localhost';\n$dbname = 'your_database_name';\n$username = 'your_username';\n$password = 'your_password';\n\n// Connect to the database\n$conn = new mysqli($host, $username, $password, $dbname);\n\nif ($conn->connect_error) {\n  die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Check if form has been submitted\nif ($_SERVER[\"REQUEST_METHOD\"] == \"POST\") {\n\n  // Get user input\n  $email = $_POST['email'];\n\n  // Query database to check for matching email address\n  $sql = \"SELECT * FROM users WHERE email = '$email'\";\n  $result = $conn->query($sql);\n\n  if ($result->num_rows > 0) {\n    // If a match is found, send the user an email with reset link\n    $user_id = $result->fetch_assoc()['id'];\n\n    // Generate a random password reset token\n    $token = bin2hex(random_bytes(32));\n\n    // Store the token in the database\n    $sql = \"UPDATE users SET password_reset_token = '$token' WHERE id = '$user_id'\";\n    $conn->query($sql);\n\n    // Send email with reset link\n    $to = $email;\n    $subject = 'Password Reset Link';\n    $message = '\n      <p>Click the following link to reset your password:</p>\n      <p><a href=\"' . $_SERVER['HTTP_HOST'] . '/reset_password.php?token=' . $token . '\">Reset Password</a></p>\n    ';\n    mail($to, $subject, $message);\n\n    echo '<div class=\"alert alert-success\">Email sent with reset link!</div>';\n  } else {\n    echo '<div class=\"alert alert-danger\">No account found with this email address.</div>';\n  }\n}\n\n// Close the database connection\n$conn->close();\n?>\n\n<form method=\"post\" action=\"<?php echo $_SERVER['PHP_SELF']; ?>\">\n  <input type=\"email\" name=\"email\" placeholder=\"Email Address\">\n  <button type=\"submit\">Send Reset Link</button>\n</form>\n```\n\n**Step 3: Create the password reset page (reset_password.php)**\n\nCreate a new PHP file called `reset_password.php` with the following code:\n\n```php\n<?php\n// Define database connection settings\n$host = 'localhost';\n$dbname = 'your_database_name';\n$username = 'your_username';\n$password = 'your_password';\n\n// Connect to the database\n$conn = new mysqli($host, $username, $password, $dbname);\n\nif ($conn->connect_error) {\n  die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Check if form has been submitted\nif ($_SERVER[\"REQUEST_METHOD\"] == \"POST\") {\n\n  // Get user input\n  $token = $_POST['token'];\n  $new_password = $_POST['new_password'];\n\n  // Query database to check for matching token and password reset status\n  $sql = \"SELECT * FROM users WHERE password_reset_token = '$token'\";\n  $result = $conn->query($sql);\n\n  if ($result->num_rows > 0) {\n    // If a match is found, update the user's password\n    $user_id = $result->fetch_assoc()['id'];\n\n    // Generate a new password hash\n    $new_password_hash = password_hash($new_password, PASSWORD_DEFAULT);\n\n    // Update the user's password in the database\n    $sql = \"UPDATE users SET password_hash = '$new_password_hash', password_reset_token = NULL WHERE id = '$user_id'\";\n    $conn->query($sql);\n\n    echo '<div class=\"alert alert-success\">Password updated successfully!</div>';\n  } else {\n    echo '<div class=\"alert alert-danger\">Invalid token.</div>';\n  }\n}\n\n// Close the database connection\n$conn->close();\n?>\n\n<form method=\"post\" action=\"<?php echo $_SERVER['PHP_SELF']; ?>\">\n  <input type=\"hidden\" name=\"token\" value=\"<?php echo $_GET['token']; ?>\">\n  <label>New Password:</label>\n  <input type=\"password\" name=\"new_password\">\n  <button type=\"submit\">Change Password</button>\n</form>\n```\n\nThis code creates two pages: one for submitting an email address to send a password reset link, and another for resetting the password. The `forgot_password.php` page checks if the user's email address matches any in the database, and if so, sends an email with a reset link. The `reset_password.php` page updates the user's password when they submit their new password.\n\nPlease note that this is just an example code, you should adjust it to fit your specific needs and also add security measures such as validating user input, preventing SQL injection attacks, etc.\n\nAlso, make sure to replace `'your_database_name'`, `'your_username'` and `'your_password'` with your actual database credentials.", "code_blocks": [null, "```php\n<?php\n// Define database connection settings\n$host = 'localhost';\n$dbname = 'your_database_name';\n$username = 'your_username';\n$password = 'your_password';\n\n// Connect to the database\n$conn = new mysqli($host, $username, $password, $dbname);\n\nif ($conn->connect_error) {\n  die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Check if form has been submitted\nif ($_SERVER[\"REQUEST_METHOD\"] == \"POST\") {\n\n  // Get user input\n  $email = $_POST['email'];\n\n  // Query database to check for matching email address\n  $sql = \"SELECT * FROM users WHERE email = '$email'\";\n  $result = $conn->query($sql);\n\n  if ($result->num_rows > 0) {\n    // If a match is found, send the user an email with reset link\n    $user_id = $result->fetch_assoc()['id'];\n\n    // Generate a random password reset token\n    $token = bin2hex(random_bytes(32));\n\n    // Store the token in the database\n    $sql = \"UPDATE users SET password_reset_token = '$token' WHERE id = '$user_id'\";\n    $conn->query($sql);\n\n    // Send email with reset link\n    $to = $email;\n    $subject = 'Password Reset Link';\n    $message = '\n      <p>Click the following link to reset your password:</p>\n      <p><a href=\"' . $_SERVER['HTTP_HOST'] . '/reset_password.php?token=' . $token . '\">Reset Password</a></p>\n    ';\n    mail($to, $subject, $message);\n\n    echo '<div class=\"alert alert-success\">Email sent with reset link!</div>';\n  } else {\n    echo '<div class=\"alert alert-danger\">No account found with this email address.</div>';\n  }\n}\n\n// Close the database connection\n$conn->close();\n?>\n\n<form method=\"post\" action=\"<?php echo $_SERVER['PHP_SELF']; ?>\">\n  <input type=\"email\" name=\"email\" placeholder=\"Email Address\">\n  <button type=\"submit\">Send Reset Link</button>\n</form>\n```", "```php\n<?php\n// Define database connection settings\n$host = 'localhost';\n$dbname = 'your_database_name';\n$username = 'your_username';\n$password = 'your_password';\n\n// Connect to the database\n$conn = new mysqli($host, $username, $password, $dbname);\n\nif ($conn->connect_error) {\n  die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Check if form has been submitted\nif ($_SERVER[\"REQUEST_METHOD\"] == \"POST\") {\n\n  // Get user input\n  $token = $_POST['token'];\n  $new_password = $_POST['new_password'];\n\n  // Query database to check for matching token and password reset status\n  $sql = \"SELECT * FROM users WHERE password_reset_token = '$token'\";\n  $result = $conn->query($sql);\n\n  if ($result->num_rows > 0) {\n    // If a match is found, update the user's password\n    $user_id = $result->fetch_assoc()['id'];\n\n    // Generate a new password hash\n    $new_password_hash = password_hash($new_password, PASSWORD_DEFAULT);\n\n    // Update the user's password in the database\n    $sql = \"UPDATE users SET password_hash = '$new_password_hash', password_reset_token = NULL WHERE id = '$user_id'\";\n    $conn->query($sql);\n\n    echo '<div class=\"alert alert-success\">Password updated successfully!</div>';\n  } else {\n    echo '<div class=\"alert alert-danger\">Invalid token.</div>';\n  }\n}\n\n// Close the database connection\n$conn->close();\n?>\n\n<form method=\"post\" action=\"<?php echo $_SERVER['PHP_SELF']; ?>\">\n  <input type=\"hidden\" name=\"token\" value=\"<?php echo $_GET['token']; ?>\">\n  <label>New Password:</label>\n  <input type=\"password\" name=\"new_password\">\n  <button type=\"submit\">Change Password</button>\n</form>\n```"]}
