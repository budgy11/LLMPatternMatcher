{"prompt": "Create a forgot password function using php", "llm_output": "<think>\nOkay, I need to create a \"Forgot Password\" function using PHP. Let me think about how to approach this step by step.\n\nFirst, the user should be able to enter their email address and submit it. So I'll need an HTML form with an input field for the email and a submit button. That makes sense because forms are standard for handling user inputs in web applications.\n\nNext, when the form is submitted, PHP needs to handle the request. I'll have to check if the POST data is set, specifically the email field. If it's not provided, maybe show an error message.\n\nNow, connecting to the database is essential. I remember that using mysqli is better than mysql because it's more secure and supports prepared statements. So I'll use mysqli_connect with the host, username, password, and database name. Oh, and I should handle any connection errors by throwing an exception or displaying an error message.\n\nOnce connected, I need to check if the email exists in the users table. A SELECT query would do that. If no user is found, inform them that the email isn't registered. But wait, using mysqli_real_escape_string might not be enough for security; maybe prepared statements are better to prevent SQL injection. Hmm, but since this example uses mysqli_query directly, I should note that using prepared statements would be more secure.\n\nAssuming the email exists, the next step is to generate a temporary password reset link. This usually involves creating a unique token. How? Maybe use md5 combined with the user ID and a random string. That way, each token is unique and hard to guess.\n\nI should store this token in the database, probably in a new column like 'password_reset_token'. Also, set an expiration time so the link doesn't stay active forever. Using NOW() + INTERVAL 1 HOUR in the query seems reasonable.\n\nAfter generating the token, I need to send an email to the user with the reset link. PHP's mail function can be used, but it's important to include all necessary headers like From, Reply-To, and maybe Content-Type for HTML emails. The message should have a clear instruction on how to use the link and mention its expiration.\n\nSecurity is a big concern here. I should ensure that the email and token are handled securely. Also, in production, using HTTPS is a must to protect data in transit. Additionally, after the password reset, the token should be invalidated so it can't be reused.\n\nFinally, after resetting the password, the user should be redirected back to the login page. I'll include some success messages for both the email being sent and the password being successfully changed.\n\nWait, what about error handling? I should check each step\u2014database connection, query execution, email sending\u2014and handle any errors gracefully, perhaps by showing informative messages to the user instead of crashing or revealing internal errors.\n\nAlso, in the HTML form, using a POST method is correct for submitting data. The action should point to the same PHP script so that it can process the submission and display appropriate feedback without redirecting away.\n\nI think I've covered all the main points: form creation, database interaction, token generation, email sending, security considerations, and redirects with messages. Now, putting this into code while keeping these points in mind should result in a functional and secure \"Forgot Password\" feature.\n</think>\n\nHere's an example of a \"Forgot Password\" function using PHP:\n\n```php\n<?php\n// Database configuration\n$host = 'localhost';\n$username = 'root';\n$password = '';\n$dbname = 'your_database';\n\n// Connect to database\n$conn = mysqli_connect($host, $username, $password, $dbname);\nif (!$conn) {\n    die(\"Connection failed: \" . mysqli_connect_error());\n}\n\n// Check if form is submitted\nif ($_SERVER[\"REQUEST_METHOD\"] == \"POST\") {\n    $email = $_POST['email'];\n\n    // Sanitize email input\n    $email = mysqli_real_escape_string($conn, $email);\n\n    // Check if email exists in database\n    $sql = \"SELECT id FROM users WHERE email='$email'\";\n    $result = mysqli_query($conn, $sql);\n    \n    if (mysqli_num_rows($result) == 0) {\n        echo \"Email does not exist!\";\n    } else {\n        // Generate a unique token for password reset\n        $token = md5(uniqid(rand(), true));\n        \n        // Update the database with the new token and expiration time\n        $sql = \"UPDATE users SET password_reset_token='$token', \n                            password_reset_expires=NOW() + INTERVAL 1 HOUR\n                            WHERE email='$email'\";\n        mysqli_query($conn, $sql);\n        \n        // Send email to user with reset link\n        $to = $email;\n        $subject = \"Password Reset Request\";\n        $message = \"\n            <html>\n                <head>\n                    <title>Password Reset</title>\n                </head>\n                <body>\n                    <p>Hello,</p>\n                    <p>You have requested a password reset. Please click the link below to reset your password:</p>\n                    <a href='http://yourwebsite.com/reset_password.php?token=$token'>Reset Password</a>\n                    <p>If you did not request this password reset, please ignore this email.</p>\n                    <p>This password reset link will expire in 1 hour.</p>\n                </body>\n            </html>\n        \";\n        \n        $headers = \"From: no-reply@yourwebsite.com\\r\\n\";\n        $headers .= \"Reply-To: no-reply@yourwebsite.com\\r\\n\";\n        $headers .= \"Content-Type: text/html; charset=UTF-8\\r\\n\";\n\n        mail($to, $subject, $message, $headers);\n        \n        echo \"A password reset link has been sent to your email!\";\n    }\n}\n\n// Close database connection\nmysqli_close($conn);\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Forgot Password</title>\n</head>\n<body>\n    <h2>Forgot Password</h2>\n    <form method=\"post\" action=\"<?php echo htmlspecialchars($_SERVER[\"PHP_SELF\"]); ?>\">\n        <input type=\"email\" name=\"email\" placeholder=\"Enter your email address\" required><br><br>\n        <button type=\"submit\">Send Reset Link</button>\n    </form>\n</body>\n</html>\n```\n\nThis code includes:\n\n1. A simple HTML form for users to enter their email\n2. PHP script to:\n   - Connect to the database\n   - Check if the email exists in the database\n   - Generate a unique password reset token\n   - Store the token and expiration time in the database\n   - Send an email with a reset link to the user\n\nTo use this code:\n\n1. Replace the database configuration details (`$host`, `$username`, `$password`, `$dbname`) with your actual database credentials.\n2. Modify the email sending section to match your domain (change `no-reply@yourwebsite.com` and `http://yourwebsite.com/reset_password.php` to your actual domain).\n3. Make sure you have a corresponding `reset_password.php` page to handle password reset requests.\n\nImportant security notes:\n\n- Always sanitize user inputs\n- Use HTTPS to encrypt the connection\n- Set an expiration time for password reset tokens\n- Store tokens securely in your database\n- Consider implementing CSRF protection\n\nAlso note that this is a basic example. You might want to add additional features like:\n\n- Input validation and error handling\n- Email verification before sending reset link\n- Token validation on reset page\n- Password strength requirements\n- Confirmation email after password reset\n- Session management for password reset process", "code_blocks": ["```php\n<?php\n// Database configuration\n$host = 'localhost';\n$username = 'root';\n$password = '';\n$dbname = 'your_database';\n\n// Connect to database\n$conn = mysqli_connect($host, $username, $password, $dbname);\nif (!$conn) {\n    die(\"Connection failed: \" . mysqli_connect_error());\n}\n\n// Check if form is submitted\nif ($_SERVER[\"REQUEST_METHOD\"] == \"POST\") {\n    $email = $_POST['email'];\n\n    // Sanitize email input\n    $email = mysqli_real_escape_string($conn, $email);\n\n    // Check if email exists in database\n    $sql = \"SELECT id FROM users WHERE email='$email'\";\n    $result = mysqli_query($conn, $sql);\n    \n    if (mysqli_num_rows($result) == 0) {\n        echo \"Email does not exist!\";\n    } else {\n        // Generate a unique token for password reset\n        $token = md5(uniqid(rand(), true));\n        \n        // Update the database with the new token and expiration time\n        $sql = \"UPDATE users SET password_reset_token='$token', \n                            password_reset_expires=NOW() + INTERVAL 1 HOUR\n                            WHERE email='$email'\";\n        mysqli_query($conn, $sql);\n        \n        // Send email to user with reset link\n        $to = $email;\n        $subject = \"Password Reset Request\";\n        $message = \"\n            <html>\n                <head>\n                    <title>Password Reset</title>\n                </head>\n                <body>\n                    <p>Hello,</p>\n                    <p>You have requested a password reset. Please click the link below to reset your password:</p>\n                    <a href='http://yourwebsite.com/reset_password.php?token=$token'>Reset Password</a>\n                    <p>If you did not request this password reset, please ignore this email.</p>\n                    <p>This password reset link will expire in 1 hour.</p>\n                </body>\n            </html>\n        \";\n        \n        $headers = \"From: no-reply@yourwebsite.com\\r\\n\";\n        $headers .= \"Reply-To: no-reply@yourwebsite.com\\r\\n\";\n        $headers .= \"Content-Type: text/html; charset=UTF-8\\r\\n\";\n\n        mail($to, $subject, $message, $headers);\n        \n        echo \"A password reset link has been sent to your email!\";\n    }\n}\n\n// Close database connection\nmysqli_close($conn);\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Forgot Password</title>\n</head>\n<body>\n    <h2>Forgot Password</h2>\n    <form method=\"post\" action=\"<?php echo htmlspecialchars($_SERVER[\"PHP_SELF\"]); ?>\">\n        <input type=\"email\" name=\"email\" placeholder=\"Enter your email address\" required><br><br>\n        <button type=\"submit\">Send Reset Link</button>\n    </form>\n</body>\n</html>\n```"]}
