{"prompt": "Create a forgot password function using php", "llm_output": "Here's an example of how you can create a \"Forgot Password\" functionality in PHP:\n\n**Database Schema:**\n\nFor this example, we'll assume that our database has the following schema:\n```sql\nCREATE TABLE users (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  username VARCHAR(255) NOT NULL,\n  email VARCHAR(255) NOT NULL,\n  password_hash VARCHAR(255) NOT NULL\n);\n```\n**PHP Code:**\n\nCreate a new file called `forgot_password.php` and add the following code:\n```php\n<?php\n\n// Configuration variables\ndefine('DB_HOST', 'your_host');\ndefine('DB_USER', 'your_username');\ndefine('DB_PASSWORD', 'your_password');\ndefine('DB_NAME', 'your_database');\n\n// Connect to database\n$conn = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Function to send password reset email\nfunction send_password_reset_email($email)\n{\n    // Generate a random token\n    $token = bin2hex(random_bytes(16));\n\n    // Update the user's token in the database\n    $sql = \"UPDATE users SET password_reset_token = '$token' WHERE email = '$email'\";\n    if ($conn->query($sql) === TRUE) {\n        echo \"Email sent with password reset link\\n\";\n    } else {\n        echo \"Error updating token: \" . $conn->error . \"\\n\";\n    }\n\n    // Send the password reset email\n    $subject = 'Password Reset Request';\n    $body = '\n    <html>\n      <head>\n        <title>Password Reset Request</title>\n      </head>\n      <body>\n        <p>Hello,\n        \n        You have requested to reset your password. Click on the following link to reset your password:\n        \n        <a href=\"' . $_SERVER['HTTP_HOST'] . '/reset_password.php?token=' . $token . '\">Reset Password</a>\n        \n        If you did not request this, please ignore this email.\n        \n      </body>\n    </html>';\n    mail($email, $subject, $body);\n}\n\n// Handle the form submission\nif ($_SERVER['REQUEST_METHOD'] === 'POST') {\n    $email = $_POST['email'];\n\n    // Validate the input\n    if (empty($email)) {\n        echo \"Email address is required.\";\n        exit;\n    }\n\n    // Send the password reset email\n    send_password_reset_email($email);\n}\n\n// Display the form\n?>\n<form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n  <label for=\"email\">Email:</label>\n  <input type=\"text\" id=\"email\" name=\"email\"><br><br>\n  <button type=\"submit\">Send Password Reset Link</button>\n</form>\n```\n**Explanation:**\n\n1. The code above assumes that you have a database with the schema defined above.\n2. When a user submits the form, it checks if the input is valid and sends an email to the user with a password reset link.\n3. The password reset link includes a unique token that is generated randomly for each request.\n4. When the user clicks on the link, it will redirect them to `reset_password.php` page where they can enter their new password.\n\n**Note:**\n\n1. This code assumes that you have a basic understanding of PHP and MySQL.\n2. You should replace `your_host`, `your_username`, `your_password`, and `your_database` with your actual database credentials.\n3. Make sure to secure your password reset token by storing it in the user's session or using a secure cookie.\n\n**Reset Password Code:**\n\nCreate a new file called `reset_password.php` and add the following code:\n```php\n<?php\n\n// Configuration variables\ndefine('DB_HOST', 'your_host');\ndefine('DB_USER', 'your_username');\ndefine('DB_PASSWORD', 'your_password');\ndefine('DB_NAME', 'your_database');\n\n// Connect to database\n$conn = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Function to update password\nfunction update_password($token, $password)\n{\n    // Get the user's ID from the token\n    $sql = \"SELECT id FROM users WHERE password_reset_token = '$token'\";\n    if ($result = $conn->query($sql)) {\n        while ($row = $result->fetch_assoc()) {\n            $user_id = $row['id'];\n\n            // Update the user's password in the database\n            $hashed_password = password_hash($password, PASSWORD_DEFAULT);\n            $sql = \"UPDATE users SET password = '$hashed_password' WHERE id = '$user_id'\";\n            if ($conn->query($sql) === TRUE) {\n                echo \"Password updated successfully.\";\n            } else {\n                echo \"Error updating password: \" . $conn->error . \"\\n\";\n            }\n\n            // Remove the token from the database\n            $sql = \"UPDATE users SET password_reset_token = NULL WHERE id = '$user_id'\";\n            if ($conn->query($sql) === TRUE) {\n                echo \"Token removed successfully.\";\n            } else {\n                echo \"Error removing token: \" . $conn->error . \"\\n\";\n            }\n        }\n\n        $result->free();\n    } else {\n        echo \"Error getting user ID: \" . $conn->error . \"\\n\";\n    }\n}\n\n// Handle the form submission\nif ($_SERVER['REQUEST_METHOD'] === 'POST') {\n    $token = $_POST['token'];\n    $password = $_POST['password'];\n\n    // Validate the input\n    if (empty($token) || empty($password)) {\n        echo \"Token and password are required.\";\n        exit;\n    }\n\n    // Update the user's password\n    update_password($token, $password);\n}\n\n// Display the form\n?>\n<form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n  <label for=\"token\">Token:</label>\n  <input type=\"text\" id=\"token\" name=\"token\"><br><br>\n  <label for=\"password\">New Password:</label>\n  <input type=\"password\" id=\"password\" name=\"password\"><br><br>\n  <button type=\"submit\">Reset Password</button>\n</form>\n```\nThis code updates the user's password in the database and removes the token after the password is updated. Make sure to secure your password reset token by storing it in the user's session or using a secure cookie.", "code_blocks": [null, "```php\n<?php\n\n// Configuration variables\ndefine('DB_HOST', 'your_host');\ndefine('DB_USER', 'your_username');\ndefine('DB_PASSWORD', 'your_password');\ndefine('DB_NAME', 'your_database');\n\n// Connect to database\n$conn = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Function to send password reset email\nfunction send_password_reset_email($email)\n{\n    // Generate a random token\n    $token = bin2hex(random_bytes(16));\n\n    // Update the user's token in the database\n    $sql = \"UPDATE users SET password_reset_token = '$token' WHERE email = '$email'\";\n    if ($conn->query($sql) === TRUE) {\n        echo \"Email sent with password reset link\\n\";\n    } else {\n        echo \"Error updating token: \" . $conn->error . \"\\n\";\n    }\n\n    // Send the password reset email\n    $subject = 'Password Reset Request';\n    $body = '\n    <html>\n      <head>\n        <title>Password Reset Request</title>\n      </head>\n      <body>\n        <p>Hello,\n        \n        You have requested to reset your password. Click on the following link to reset your password:\n        \n        <a href=\"' . $_SERVER['HTTP_HOST'] . '/reset_password.php?token=' . $token . '\">Reset Password</a>\n        \n        If you did not request this, please ignore this email.\n        \n      </body>\n    </html>';\n    mail($email, $subject, $body);\n}\n\n// Handle the form submission\nif ($_SERVER['REQUEST_METHOD'] === 'POST') {\n    $email = $_POST['email'];\n\n    // Validate the input\n    if (empty($email)) {\n        echo \"Email address is required.\";\n        exit;\n    }\n\n    // Send the password reset email\n    send_password_reset_email($email);\n}\n\n// Display the form\n?>\n<form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n  <label for=\"email\">Email:</label>\n  <input type=\"text\" id=\"email\" name=\"email\"><br><br>\n  <button type=\"submit\">Send Password Reset Link</button>\n</form>\n```", "```php\n<?php\n\n// Configuration variables\ndefine('DB_HOST', 'your_host');\ndefine('DB_USER', 'your_username');\ndefine('DB_PASSWORD', 'your_password');\ndefine('DB_NAME', 'your_database');\n\n// Connect to database\n$conn = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Function to update password\nfunction update_password($token, $password)\n{\n    // Get the user's ID from the token\n    $sql = \"SELECT id FROM users WHERE password_reset_token = '$token'\";\n    if ($result = $conn->query($sql)) {\n        while ($row = $result->fetch_assoc()) {\n            $user_id = $row['id'];\n\n            // Update the user's password in the database\n            $hashed_password = password_hash($password, PASSWORD_DEFAULT);\n            $sql = \"UPDATE users SET password = '$hashed_password' WHERE id = '$user_id'\";\n            if ($conn->query($sql) === TRUE) {\n                echo \"Password updated successfully.\";\n            } else {\n                echo \"Error updating password: \" . $conn->error . \"\\n\";\n            }\n\n            // Remove the token from the database\n            $sql = \"UPDATE users SET password_reset_token = NULL WHERE id = '$user_id'\";\n            if ($conn->query($sql) === TRUE) {\n                echo \"Token removed successfully.\";\n            } else {\n                echo \"Error removing token: \" . $conn->error . \"\\n\";\n            }\n        }\n\n        $result->free();\n    } else {\n        echo \"Error getting user ID: \" . $conn->error . \"\\n\";\n    }\n}\n\n// Handle the form submission\nif ($_SERVER['REQUEST_METHOD'] === 'POST') {\n    $token = $_POST['token'];\n    $password = $_POST['password'];\n\n    // Validate the input\n    if (empty($token) || empty($password)) {\n        echo \"Token and password are required.\";\n        exit;\n    }\n\n    // Update the user's password\n    update_password($token, $password);\n}\n\n// Display the form\n?>\n<form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n  <label for=\"token\">Token:</label>\n  <input type=\"text\" id=\"token\" name=\"token\"><br><br>\n  <label for=\"password\">New Password:</label>\n  <input type=\"password\" id=\"password\" name=\"password\"><br><br>\n  <button type=\"submit\">Reset Password</button>\n</form>\n```"]}
