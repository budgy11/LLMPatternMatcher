{"prompt": "Create a forgot password function using php", "llm_output": "Here is an example of a \"Forgot Password\" function using PHP:\n\n**forgot_password.php**\n```php\n<?php\n\n// Define the database connection parameters\n$db_host = 'localhost';\n$db_username = 'your_database_username';\n$db_password = 'your_database_password';\n$db_name = 'your_database_name';\n\n// Create a connection to the database\n$conn = new mysqli($db_host, $db_username, $db_password, $db_name);\n\n// Check if the connection was successful\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Define the function to send the password reset email\nfunction send_reset_email($email) {\n    // Generate a random password and store it in a session variable\n    $password = rand(100000, 999999); // Generate a 6-digit random number\n    $_SESSION['password'] = $password;\n\n    // SQL query to update the user's password\n    $sql = \"UPDATE users SET password = '$password' WHERE email = '$email'\";\n    if ($conn->query($sql) === TRUE) {\n        // Send an email with the new password and a link to reset it\n        $to = $email;\n        $subject = 'Reset your password';\n        $body = '\n            Dear user,\n            \n            Your temporary password is: '.$password.'\n            \n            Click on this link to reset your password: <a href=\"reset_password.php?email='.$email.'&token='.uniqid().'\">Reset Password</a>\n            ';\n        mail($to, $subject, $body);\n\n        echo 'Email sent successfully!';\n    } else {\n        echo 'Error updating user data: ' . $conn->error;\n    }\n}\n\n// Check if the form has been submitted\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    // Get the email address from the form input\n    $email = $_POST['email'];\n\n    // Validate the email address\n    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {\n        echo 'Invalid email address';\n        return;\n    }\n\n    // Call the function to send the password reset email\n    send_reset_email($email);\n}\n\n// Close the database connection\n$conn->close();\n\n?>\n```\n**reset_password.php**\n```php\n<?php\n\n// Define the database connection parameters (same as above)\n\n// Check if the form has been submitted\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    // Get the email address and token from the URL query string\n    $email = $_GET['email'];\n    $token = $_GET['token'];\n\n    // SQL query to update the user's password (using the session variable)\n    $sql = \"UPDATE users SET password = '\".$_SESSION['password'].\"' WHERE email = '$email' AND token = '$token'\";\n    if ($conn->query($sql) === TRUE) {\n        echo 'Password reset successfully!';\n    } else {\n        echo 'Error updating user data: ' . $conn->error;\n    }\n}\n\n// Close the database connection\n$conn->close();\n\n?>\n```\n**Explanation**\n\n1. The `forgot_password.php` script checks if the form has been submitted using `$_SERVER['REQUEST_METHOD'] == 'POST'`.\n2. If the form has been submitted, it extracts the email address from the form input and validates it using `filter_var()`.\n3. It then calls the `send_reset_email()` function, which generates a random password, updates the user's password in the database, and sends an email with the new password and a link to reset it.\n4. The `reset_password.php` script checks if the form has been submitted using `$_SERVER['REQUEST_METHOD'] == 'POST'`.\n5. If the form has been submitted, it extracts the email address and token from the URL query string and updates the user's password in the database using the session variable.\n\n**Example Use Case**\n\n1. The user visits the \"Forgot Password\" page and submits their email address.\n2. The script sends an email with a temporary password and a link to reset it.\n3. The user clicks on the link, which directs them to the `reset_password.php` script with their email address and token in the URL query string.\n4. The script updates the user's password in the database using the session variable.\n\nNote that this is just an example and you should modify it to fit your specific needs. You may also want to add additional security measures, such as hashing and salting passwords.", "code_blocks": ["```php\n<?php\n\n// Define the database connection parameters\n$db_host = 'localhost';\n$db_username = 'your_database_username';\n$db_password = 'your_database_password';\n$db_name = 'your_database_name';\n\n// Create a connection to the database\n$conn = new mysqli($db_host, $db_username, $db_password, $db_name);\n\n// Check if the connection was successful\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Define the function to send the password reset email\nfunction send_reset_email($email) {\n    // Generate a random password and store it in a session variable\n    $password = rand(100000, 999999); // Generate a 6-digit random number\n    $_SESSION['password'] = $password;\n\n    // SQL query to update the user's password\n    $sql = \"UPDATE users SET password = '$password' WHERE email = '$email'\";\n    if ($conn->query($sql) === TRUE) {\n        // Send an email with the new password and a link to reset it\n        $to = $email;\n        $subject = 'Reset your password';\n        $body = '\n            Dear user,\n            \n            Your temporary password is: '.$password.'\n            \n            Click on this link to reset your password: <a href=\"reset_password.php?email='.$email.'&token='.uniqid().'\">Reset Password</a>\n            ';\n        mail($to, $subject, $body);\n\n        echo 'Email sent successfully!';\n    } else {\n        echo 'Error updating user data: ' . $conn->error;\n    }\n}\n\n// Check if the form has been submitted\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    // Get the email address from the form input\n    $email = $_POST['email'];\n\n    // Validate the email address\n    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {\n        echo 'Invalid email address';\n        return;\n    }\n\n    // Call the function to send the password reset email\n    send_reset_email($email);\n}\n\n// Close the database connection\n$conn->close();\n\n?>\n```", "```php\n<?php\n\n// Define the database connection parameters (same as above)\n\n// Check if the form has been submitted\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    // Get the email address and token from the URL query string\n    $email = $_GET['email'];\n    $token = $_GET['token'];\n\n    // SQL query to update the user's password (using the session variable)\n    $sql = \"UPDATE users SET password = '\".$_SESSION['password'].\"' WHERE email = '$email' AND token = '$token'\";\n    if ($conn->query($sql) === TRUE) {\n        echo 'Password reset successfully!';\n    } else {\n        echo 'Error updating user data: ' . $conn->error;\n    }\n}\n\n// Close the database connection\n$conn->close();\n\n?>\n```"]}
