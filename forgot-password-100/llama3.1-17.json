{"prompt": "Create a forgot password function using php", "llm_output": "Here is an example of a simple \"forgot password\" function using PHP. This script will send an email to the user with a reset link that contains a temporary password.\n\n**Security Note:** This example stores passwords in plaintext for simplicity, but in a real application you should use a secure password hashing algorithm (like bcrypt or Argon2) and store only the hashed value.\n\n**`forgot_password.php`:**\n```php\n<?php\n\n// Database connection settings\n$dbHost = 'localhost';\n$dbUsername = 'username';\n$dbPassword = 'password';\n$dbName = 'database';\n\n// Email configuration\n$fromEmail = 'your-email@example.com';\n$fromName = 'Your Website';\n\n// Set password reset token length\n$tokenLength = 64;\n\n// Create a connection to the database\n$conn = new mysqli($dbHost, $dbUsername, $dbPassword, $dbName);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Check if form was submitted\nif (isset($_POST['email'])) {\n\n    // Validate email address\n    $email = trim($_POST['email']);\n    $email = filter_var($email, FILTER_VALIDATE_EMAIL);\n\n    if ($email === false) {\n        echo 'Invalid email';\n        exit;\n    }\n\n    // Check if user exists in database\n    $query = \"SELECT * FROM users WHERE email = '$email'\";\n    $result = $conn->query($query);\n\n    if ($result->num_rows > 0) {\n\n        // Generate password reset token\n        $token = bin2hex(random_bytes($tokenLength));\n\n        // Update user's token in database\n        $query = \"UPDATE users SET password_reset_token = '$token' WHERE email = '$email'\";\n        $conn->query($query);\n\n        // Send email with password reset link\n        $subject = 'Reset Your Password';\n        $body = \"\n            <p>Dear $email,</p>\n            <p>To reset your password, click the following link:</p>\n            <a href='reset_password.php?token=$token'>$token</a>\n            <p>This link will only work for 1 hour.</p>\n            \";\n        $headers = 'From: ' . $fromName . ' <' . $fromEmail . '>' . \"\\r\\n\" .\n            'Reply-To: ' . $fromEmail . \"\\r\\n\" .\n            'X-Mailer: PHP/' . phpversion();\n\n        mail($email, $subject, $body, $headers);\n\n        echo 'A password reset link has been sent to your email. Please check your inbox.';\n    } else {\n        echo 'User not found';\n    }\n}\n\n?>\n```\n**`reset_password.php`:**\n```php\n<?php\n\n// Database connection settings\n$dbHost = 'localhost';\n$dbUsername = 'username';\n$dbPassword = 'password';\n$dbName = 'database';\n\n// Email configuration\n$fromEmail = 'your-email@example.com';\n$fromName = 'Your Website';\n\n// Set password reset token length\n$tokenLength = 64;\n\n// Create a connection to the database\n$conn = new mysqli($dbHost, $dbUsername, $dbPassword, $dbName);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Check if form was submitted\nif (isset($_POST['password'])) {\n\n    // Validate password and confirm password\n    $password = trim($_POST['password']);\n    $confirmPassword = trim($_POST['confirm_password']);\n\n    if ($password !== $confirmPassword) {\n        echo 'Passwords do not match';\n        exit;\n    }\n\n    // Check if token is valid\n    $token = $_GET['token'];\n    $query = \"SELECT * FROM users WHERE password_reset_token = '$token'\";\n    $result = $conn->query($query);\n\n    if ($result->num_rows > 0) {\n\n        // Update user's password in database\n        $query = \"UPDATE users SET password = '$password' WHERE password_reset_token = '$token'\";\n        $conn->query($query);\n\n        // Delete token from database\n        $query = \"DELETE FROM users WHERE password_reset_token = '$token'\";\n        $conn->query($query);\n\n        echo 'Password updated successfully';\n    } else {\n        echo 'Invalid token';\n    }\n}\n\n?>\n```\n**Usage:**\n\n1. User goes to the forgot password page and submits their email address.\n2. The script checks if the user exists in the database, generates a password reset token, updates the user's token in the database, and sends an email with a password reset link.\n3. The user clicks on the password reset link in the email, which redirects them to the `reset_password.php` page.\n4. On this page, the user enters their new password and confirm password, then submits the form.\n5. If the passwords match and the token is valid, the script updates the user's password in the database and deletes the token.\n\nRemember to replace the placeholders with your actual database credentials and email configuration settings!", "code_blocks": ["```php\n<?php\n\n// Database connection settings\n$dbHost = 'localhost';\n$dbUsername = 'username';\n$dbPassword = 'password';\n$dbName = 'database';\n\n// Email configuration\n$fromEmail = 'your-email@example.com';\n$fromName = 'Your Website';\n\n// Set password reset token length\n$tokenLength = 64;\n\n// Create a connection to the database\n$conn = new mysqli($dbHost, $dbUsername, $dbPassword, $dbName);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Check if form was submitted\nif (isset($_POST['email'])) {\n\n    // Validate email address\n    $email = trim($_POST['email']);\n    $email = filter_var($email, FILTER_VALIDATE_EMAIL);\n\n    if ($email === false) {\n        echo 'Invalid email';\n        exit;\n    }\n\n    // Check if user exists in database\n    $query = \"SELECT * FROM users WHERE email = '$email'\";\n    $result = $conn->query($query);\n\n    if ($result->num_rows > 0) {\n\n        // Generate password reset token\n        $token = bin2hex(random_bytes($tokenLength));\n\n        // Update user's token in database\n        $query = \"UPDATE users SET password_reset_token = '$token' WHERE email = '$email'\";\n        $conn->query($query);\n\n        // Send email with password reset link\n        $subject = 'Reset Your Password';\n        $body = \"\n            <p>Dear $email,</p>\n            <p>To reset your password, click the following link:</p>\n            <a href='reset_password.php?token=$token'>$token</a>\n            <p>This link will only work for 1 hour.</p>\n            \";\n        $headers = 'From: ' . $fromName . ' <' . $fromEmail . '>' . \"\\r\\n\" .\n            'Reply-To: ' . $fromEmail . \"\\r\\n\" .\n            'X-Mailer: PHP/' . phpversion();\n\n        mail($email, $subject, $body, $headers);\n\n        echo 'A password reset link has been sent to your email. Please check your inbox.';\n    } else {\n        echo 'User not found';\n    }\n}\n\n?>\n```", "```php\n<?php\n\n// Database connection settings\n$dbHost = 'localhost';\n$dbUsername = 'username';\n$dbPassword = 'password';\n$dbName = 'database';\n\n// Email configuration\n$fromEmail = 'your-email@example.com';\n$fromName = 'Your Website';\n\n// Set password reset token length\n$tokenLength = 64;\n\n// Create a connection to the database\n$conn = new mysqli($dbHost, $dbUsername, $dbPassword, $dbName);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Check if form was submitted\nif (isset($_POST['password'])) {\n\n    // Validate password and confirm password\n    $password = trim($_POST['password']);\n    $confirmPassword = trim($_POST['confirm_password']);\n\n    if ($password !== $confirmPassword) {\n        echo 'Passwords do not match';\n        exit;\n    }\n\n    // Check if token is valid\n    $token = $_GET['token'];\n    $query = \"SELECT * FROM users WHERE password_reset_token = '$token'\";\n    $result = $conn->query($query);\n\n    if ($result->num_rows > 0) {\n\n        // Update user's password in database\n        $query = \"UPDATE users SET password = '$password' WHERE password_reset_token = '$token'\";\n        $conn->query($query);\n\n        // Delete token from database\n        $query = \"DELETE FROM users WHERE password_reset_token = '$token'\";\n        $conn->query($query);\n\n        echo 'Password updated successfully';\n    } else {\n        echo 'Invalid token';\n    }\n}\n\n?>\n```"]}
