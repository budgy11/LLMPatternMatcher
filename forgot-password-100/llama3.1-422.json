{"prompt": "Create a forgot password function using php", "llm_output": "Here is an example of how you can create a \"forgot password\" function in PHP:\n\n**Note:** This example uses a simple `password_hash` and `password_verify` implementation for security. In a real-world application, consider using a more robust library like Bcrypt or Hashids.\n\n**Database Schema:**\n\nFor this example, we'll assume you have the following database table structure:\n```sql\nCREATE TABLE users (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  email VARCHAR(255) NOT NULL UNIQUE,\n  password VARCHAR(255) NOT NULL\n);\n```\n**Forgot Password Function (PHP):**\n```php\nfunction forgotPassword($email) {\n  // Check if user exists in database\n  $stmt = $mysqli->prepare(\"SELECT * FROM users WHERE email = ?\");\n  $stmt->bind_param(\"s\", $email);\n  $stmt->execute();\n  $result = $stmt->get_result();\n\n  if ($result->num_rows == 0) {\n    // User not found, return error message\n    echo \"User not found\";\n    return;\n  }\n\n  // Generate random password and store in database\n  $password = substr(md5(uniqid(rand(), true)), 0, 8);\n  $hashPassword = password_hash($password, PASSWORD_DEFAULT);\n\n  $stmt = $mysqli->prepare(\"UPDATE users SET password = ? WHERE email = ?\");\n  $stmt->bind_param(\"ss\", $hashPassword, $email);\n  $stmt->execute();\n\n  // Send password reset link to user's email\n  sendEmailResetLink($email, $password);\n}\n\n// Function to send password reset link via email (example using PHPMailer)\nfunction sendEmailResetLink($email, $password) {\n  require_once 'PHPMailer/PHPMailer.php';\n  require_once 'PHPMailer/Exception.php';\n\n  $mail = new PHPMailer\\PHPMailer\\PHPMailer();\n\n  $mail->isSMTP();\n  $mail->Host = 'smtp.example.com';\n  $mail->Port = 587;\n  $mail->SMTPAuth = true;\n  $mail->Username = 'your-email@example.com';\n  $mail->Password = 'your-password';\n\n  $mail->setFrom('your-email@example.com', 'Your Name');\n  $mail->addAddress($email);\n  $mail->Subject = 'Reset Your Password';\n\n  $passwordResetLink = \"http://example.com/reset-password?token=\" . md5(uniqid(rand(), true)) . \"&email=$email\";\n  $mail->Body = \"Click on this link to reset your password: $passwordResetLink\";\n\n  if (!$mail->send()) {\n    echo 'Message could not be sent.';\n    echo 'Mailer Error: ' . $mail->ErrorInfo;\n  } else {\n    echo 'Message has been sent';\n  }\n}\n```\n**Password Reset Function (PHP):**\n```php\nfunction resetPassword($token, $email) {\n  // Check if token matches email in database\n  $stmt = $mysqli->prepare(\"SELECT * FROM users WHERE email = ? AND password_reset_token = ?\");\n  $stmt->bind_param(\"ss\", $email, $token);\n  $stmt->execute();\n  $result = $stmt->get_result();\n\n  if ($result->num_rows == 0) {\n    // Token not found, return error message\n    echo \"Invalid token\";\n    return;\n  }\n\n  // Get user's current password and hash it for comparison\n  $stmt = $mysqli->prepare(\"SELECT password FROM users WHERE email = ?\");\n  $stmt->bind_param(\"s\", $email);\n  $stmt->execute();\n  $currentPassword = $stmt->get_result()->fetch_array()['password'];\n\n  if (password_verify($currentPassword, $result['password'])) {\n    // User's current password matches the one in database\n    echo \"You are already logged in\";\n    return;\n  }\n\n  // Reset user's password and remove token from database\n  $newPassword = substr(md5(uniqid(rand(), true)), 0, 8);\n  $hashNewPassword = password_hash($newPassword, PASSWORD_DEFAULT);\n\n  $stmt = $mysqli->prepare(\"UPDATE users SET password = ?, password_reset_token = NULL WHERE email = ?\");\n  $stmt->bind_param(\"ss\", $hashNewPassword, $email);\n  $stmt->execute();\n\n  echo \"Your password has been reset successfully\";\n}\n```\n**Example Usage:**\n\nTo use the `forgotPassword` function, call it with a user's email address as an argument:\n```php\nforgotPassword('example@example.com');\n```\nThis will send a password reset link to the specified email address. To complete the password reset process, the user must click on the provided link and fill out the form with their new password.\n\nTo use the `resetPassword` function, call it with the token and email address as arguments:\n```php\nresetPassword(md5(uniqid(rand(), true)), 'example@example.com');\n```\nThis will update the user's password in the database and remove the token. If the token is invalid or has already been used, the function will return an error message.\n\nRemember to replace `your-email@example.com` and `smtp.example.com` with your actual email address and SMTP server settings.\n\nNote that this is a basic implementation and you should consider adding additional security measures such as:\n\n* Token expiration\n* IP address blocking for multiple attempts\n* Email verification before resetting password\n\nAlso, make sure to test the code thoroughly in a controlled environment before deploying it on a live website.", "code_blocks": [null, "```php\nfunction forgotPassword($email) {\n  // Check if user exists in database\n  $stmt = $mysqli->prepare(\"SELECT * FROM users WHERE email = ?\");\n  $stmt->bind_param(\"s\", $email);\n  $stmt->execute();\n  $result = $stmt->get_result();\n\n  if ($result->num_rows == 0) {\n    // User not found, return error message\n    echo \"User not found\";\n    return;\n  }\n\n  // Generate random password and store in database\n  $password = substr(md5(uniqid(rand(), true)), 0, 8);\n  $hashPassword = password_hash($password, PASSWORD_DEFAULT);\n\n  $stmt = $mysqli->prepare(\"UPDATE users SET password = ? WHERE email = ?\");\n  $stmt->bind_param(\"ss\", $hashPassword, $email);\n  $stmt->execute();\n\n  // Send password reset link to user's email\n  sendEmailResetLink($email, $password);\n}\n\n// Function to send password reset link via email (example using PHPMailer)\nfunction sendEmailResetLink($email, $password) {\n  require_once 'PHPMailer/PHPMailer.php';\n  require_once 'PHPMailer/Exception.php';\n\n  $mail = new PHPMailer\\PHPMailer\\PHPMailer();\n\n  $mail->isSMTP();\n  $mail->Host = 'smtp.example.com';\n  $mail->Port = 587;\n  $mail->SMTPAuth = true;\n  $mail->Username = 'your-email@example.com';\n  $mail->Password = 'your-password';\n\n  $mail->setFrom('your-email@example.com', 'Your Name');\n  $mail->addAddress($email);\n  $mail->Subject = 'Reset Your Password';\n\n  $passwordResetLink = \"http://example.com/reset-password?token=\" . md5(uniqid(rand(), true)) . \"&email=$email\";\n  $mail->Body = \"Click on this link to reset your password: $passwordResetLink\";\n\n  if (!$mail->send()) {\n    echo 'Message could not be sent.';\n    echo 'Mailer Error: ' . $mail->ErrorInfo;\n  } else {\n    echo 'Message has been sent';\n  }\n}\n```", "```php\nfunction resetPassword($token, $email) {\n  // Check if token matches email in database\n  $stmt = $mysqli->prepare(\"SELECT * FROM users WHERE email = ? AND password_reset_token = ?\");\n  $stmt->bind_param(\"ss\", $email, $token);\n  $stmt->execute();\n  $result = $stmt->get_result();\n\n  if ($result->num_rows == 0) {\n    // Token not found, return error message\n    echo \"Invalid token\";\n    return;\n  }\n\n  // Get user's current password and hash it for comparison\n  $stmt = $mysqli->prepare(\"SELECT password FROM users WHERE email = ?\");\n  $stmt->bind_param(\"s\", $email);\n  $stmt->execute();\n  $currentPassword = $stmt->get_result()->fetch_array()['password'];\n\n  if (password_verify($currentPassword, $result['password'])) {\n    // User's current password matches the one in database\n    echo \"You are already logged in\";\n    return;\n  }\n\n  // Reset user's password and remove token from database\n  $newPassword = substr(md5(uniqid(rand(), true)), 0, 8);\n  $hashNewPassword = password_hash($newPassword, PASSWORD_DEFAULT);\n\n  $stmt = $mysqli->prepare(\"UPDATE users SET password = ?, password_reset_token = NULL WHERE email = ?\");\n  $stmt->bind_param(\"ss\", $hashNewPassword, $email);\n  $stmt->execute();\n\n  echo \"Your password has been reset successfully\";\n}\n```", "```php\nforgotPassword('example@example.com');\n```", "```php\nresetPassword(md5(uniqid(rand(), true)), 'example@example.com');\n```"]}
