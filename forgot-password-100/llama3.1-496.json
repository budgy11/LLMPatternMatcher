{"prompt": "Create a forgot password function using php", "llm_output": "Here is an example of a \"Forgot Password\" function in PHP:\n\n**password_reset.php**\n```php\n<?php\n\n// Set up database connection (e.g. via PDO)\n$dsn = 'mysql:host=localhost;dbname=mydatabase';\n$username = 'myusername';\n$password = 'mypassword';\n\ntry {\n    $conn = new PDO($dsn, $username, $password);\n} catch (PDOException $e) {\n    echo 'Connection failed: ' . $e->getMessage();\n    exit;\n}\n\n// Check if form has been submitted\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n\n    // Retrieve user input\n    $email = $_POST['email'];\n\n    // Validate email address\n    if (filter_var($email, FILTER_VALIDATE_EMAIL)) {\n        // Prepare SQL query to retrieve user ID and password reset token\n        $stmt = $conn->prepare('SELECT id, password_reset_token FROM users WHERE email = :email');\n        $stmt->bindParam(':email', $email);\n        $stmt->execute();\n\n        // Fetch result (should be a single row)\n        $user = $stmt->fetch(PDO::FETCH_ASSOC);\n\n        if ($user) {\n            // Generate new password reset token\n            $newToken = bin2hex(random_bytes(32));\n\n            // Update user record with new token and current timestamp\n            $stmt = $conn->prepare('UPDATE users SET password_reset_token = :token, last_updated = NOW() WHERE id = :id');\n            $stmt->bindParam(':token', $newToken);\n            $stmt->bindParam(':id', $user['id']);\n            $stmt->execute();\n\n            // Send email with password reset link\n            sendPasswordResetEmail($email, $newToken);\n\n            echo 'A password reset email has been sent to your email address. Please check your inbox.';\n        } else {\n            echo 'No user found with that email address.';\n        }\n    } else {\n        echo 'Invalid email address';\n    }\n} else {\n\n    // Display form\n?>\n\n<form action=\"\" method=\"post\">\n    <label for=\"email\">Email Address:</label>\n    <input type=\"email\" id=\"email\" name=\"email\" required>\n\n    <button type=\"submit\">Send Password Reset Link</button>\n</form>\n\n<?php\n\n}\n\n// Function to send password reset email\nfunction sendPasswordResetEmail($email, $token) {\n    // Set up SMTP connection (e.g. via PHPMailer)\n    require_once 'PHPMailer/PHPMailerAutoload.php';\n    $mail = new PHPMailer;\n\n    $mail->isSMTP();\n    $mail->Host = 'smtp.example.com';\n    $mail->Port = 587;\n    $mail->SMTPAuth = true;\n    $mail->Username = 'myusername@example.com';\n    $mail->Password = 'mypassword';\n\n    $mail->setFrom('no-reply@example.com', 'My Website');\n    $mail->addAddress($email);\n    $mail->Subject = 'Reset Your Password';\n    $mail->Body = 'Click the link below to reset your password:\n\n<a href=\"' . $_SERVER['HTTP_HOST'] . '/password_reset.php?token=' . $token . '\">Reset Password</a>';\n\n    if (!$mail->send()) {\n        echo 'Error sending email: ' . $mail->ErrorInfo;\n    } else {\n        // Email sent successfully\n    }\n}\n\n?>\n```\nThis code creates a simple \"Forgot Password\" form that allows users to enter their email address. When the form is submitted, it checks if the email address is valid and then retrieves the user's ID and password reset token from the database. If the user has not already requested a password reset for this account, it generates a new password reset token and updates the user record with the new token.\n\nThe code also includes a function `sendPasswordResetEmail` that sends an email to the user with a link to reset their password. The email is sent using PHPMailer, but you can replace this with your preferred email library or service.\n\nTo use this code, simply save it as `password_reset.php` and create a database connection (e.g. via PDO). When a user submits the form, the script will retrieve the user's ID and password reset token from the database and send an email to the user with a link to reset their password.\n\n**Example Use Case:**\n\nLet's say a user wants to reset their password for their account on your website. They navigate to the \"Forgot Password\" page and enter their email address in the form. When they submit the form, the script checks if the email address is valid and then retrieves the user's ID and password reset token from the database.\n\nIf the user has not already requested a password reset for this account, it generates a new password reset token and updates the user record with the new token. The script then sends an email to the user with a link to reset their password.\n\nThe user clicks on the link in the email to reset their password, which redirects them to a form where they can enter their new password. Once they submit this form, the script hashes the new password and updates the user record with the new password.\n\nNote that this is just an example of how you might implement a \"Forgot Password\" function using PHP, and you should consider implementing additional security measures (e.g. rate limiting, CAPTCHAs) to prevent brute-force attacks on your website.", "code_blocks": ["```php\n<?php\n\n// Set up database connection (e.g. via PDO)\n$dsn = 'mysql:host=localhost;dbname=mydatabase';\n$username = 'myusername';\n$password = 'mypassword';\n\ntry {\n    $conn = new PDO($dsn, $username, $password);\n} catch (PDOException $e) {\n    echo 'Connection failed: ' . $e->getMessage();\n    exit;\n}\n\n// Check if form has been submitted\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n\n    // Retrieve user input\n    $email = $_POST['email'];\n\n    // Validate email address\n    if (filter_var($email, FILTER_VALIDATE_EMAIL)) {\n        // Prepare SQL query to retrieve user ID and password reset token\n        $stmt = $conn->prepare('SELECT id, password_reset_token FROM users WHERE email = :email');\n        $stmt->bindParam(':email', $email);\n        $stmt->execute();\n\n        // Fetch result (should be a single row)\n        $user = $stmt->fetch(PDO::FETCH_ASSOC);\n\n        if ($user) {\n            // Generate new password reset token\n            $newToken = bin2hex(random_bytes(32));\n\n            // Update user record with new token and current timestamp\n            $stmt = $conn->prepare('UPDATE users SET password_reset_token = :token, last_updated = NOW() WHERE id = :id');\n            $stmt->bindParam(':token', $newToken);\n            $stmt->bindParam(':id', $user['id']);\n            $stmt->execute();\n\n            // Send email with password reset link\n            sendPasswordResetEmail($email, $newToken);\n\n            echo 'A password reset email has been sent to your email address. Please check your inbox.';\n        } else {\n            echo 'No user found with that email address.';\n        }\n    } else {\n        echo 'Invalid email address';\n    }\n} else {\n\n    // Display form\n?>\n\n<form action=\"\" method=\"post\">\n    <label for=\"email\">Email Address:</label>\n    <input type=\"email\" id=\"email\" name=\"email\" required>\n\n    <button type=\"submit\">Send Password Reset Link</button>\n</form>\n\n<?php\n\n}\n\n// Function to send password reset email\nfunction sendPasswordResetEmail($email, $token) {\n    // Set up SMTP connection (e.g. via PHPMailer)\n    require_once 'PHPMailer/PHPMailerAutoload.php';\n    $mail = new PHPMailer;\n\n    $mail->isSMTP();\n    $mail->Host = 'smtp.example.com';\n    $mail->Port = 587;\n    $mail->SMTPAuth = true;\n    $mail->Username = 'myusername@example.com';\n    $mail->Password = 'mypassword';\n\n    $mail->setFrom('no-reply@example.com', 'My Website');\n    $mail->addAddress($email);\n    $mail->Subject = 'Reset Your Password';\n    $mail->Body = 'Click the link below to reset your password:\n\n<a href=\"' . $_SERVER['HTTP_HOST'] . '/password_reset.php?token=' . $token . '\">Reset Password</a>';\n\n    if (!$mail->send()) {\n        echo 'Error sending email: ' . $mail->ErrorInfo;\n    } else {\n        // Email sent successfully\n    }\n}\n\n?>\n```"]}
