{"prompt": "Create a forgot password function using php", "llm_output": "Here is an example of a forgotten password function using PHP, including email verification and password reset:\n\n**Database Schema**\n\nFor this example, we'll assume you have a database with the following schema:\n```sql\nCREATE TABLE users (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  username VARCHAR(255) NOT NULL,\n  email VARCHAR(255) NOT NULL,\n  password_hash VARCHAR(255) NOT NULL\n);\n```\n**Forgot Password Function**\n\nCreate a new PHP file, e.g., `forgot_password.php`, and add the following code:\n```php\n<?php\n\nrequire_once 'db.php'; // assume you have a db.php file for database connection settings\n\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n  $email = $_POST['email'];\n\n  // Check if user exists\n  $stmt = $pdo->prepare(\"SELECT * FROM users WHERE email = :email\");\n  $stmt->bindParam(':email', $email);\n  $stmt->execute();\n  $user = $stmt->fetch();\n\n  if (!$user) {\n    echo 'Email not found';\n    exit;\n  }\n\n  // Generate random token for password reset\n  $token = bin2hex(random_bytes(32));\n\n  // Store token in database\n  $stmt = $pdo->prepare(\"UPDATE users SET password_reset_token = :token WHERE email = :email\");\n  $stmt->bindParam(':token', $token);\n  $stmt->bindParam(':email', $email);\n  $stmt->execute();\n\n  // Send email with reset link\n  $subject = 'Reset your password';\n  $body = '\n    Click this link to reset your password:\n    <a href=\"' . $_SERVER['REQUEST_SCHEME'] . '://' . $_SERVER['HTTP_HOST'] . '/reset_password.php?email=' . urlencode($email) . '&token=' . $token . '\">Reset Password</a>\n  ';\n  mail($email, $subject, $body);\n\n  echo 'Email sent with reset link';\n} else {\n  // Render form for user to enter email\n?>\n\n<form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n  <input type=\"text\" name=\"email\" placeholder=\"Enter your email address\">\n  <button type=\"submit\">Send Reset Link</button>\n</form>\n\n<?php } ?>\n```\n**Reset Password Function**\n\nCreate another PHP file, e.g., `reset_password.php`, and add the following code:\n```php\n<?php\n\nrequire_once 'db.php'; // assume you have a db.php file for database connection settings\n\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n  $email = $_POST['email'];\n  $token = $_POST['token'];\n\n  // Check if token is valid\n  $stmt = $pdo->prepare(\"SELECT * FROM users WHERE email = :email AND password_reset_token = :token\");\n  $stmt->bindParam(':email', $email);\n  $stmt->bindParam(':token', $token);\n  $stmt->execute();\n  $user = $stmt->fetch();\n\n  if (!$user) {\n    echo 'Invalid token';\n    exit;\n  }\n\n  // Prompt user to enter new password\n?>\n\n<form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n  <input type=\"password\" name=\"new_password\" placeholder=\"Enter your new password\">\n  <button type=\"submit\">Reset Password</button>\n</form>\n\n<?php } else {\n  // Render form for user to enter email and token\n?>\n\n<form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n  <input type=\"text\" name=\"email\" placeholder=\"Enter your email address\">\n  <input type=\"hidden\" name=\"token\" value=\"<?php echo $_GET['token']; ?>\">\n  <button type=\"submit\">Reset Password</button>\n</form>\n\n<?php } ?>\n```\n**Security Notes**\n\n* Make sure to store the password reset token securely in the database.\n* Use a secure method for sending emails (e.g., using an SMTP server).\n* Use PHP's built-in `random_bytes` function to generate cryptographically secure random numbers.\n* Use prepared statements and parameterized queries to prevent SQL injection attacks.\n\nThis is just a basic example, and you should adapt it to your specific use case. Additionally, consider implementing additional security measures, such as:\n\n* Expire the password reset token after a certain period of time\n* Limit the number of attempts to reset the password\n* Use a more secure method for storing passwords (e.g., bcrypt or Argon2)\n\nI hope this helps! Let me know if you have any questions or need further assistance.", "code_blocks": [null, "```php\n<?php\n\nrequire_once 'db.php'; // assume you have a db.php file for database connection settings\n\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n  $email = $_POST['email'];\n\n  // Check if user exists\n  $stmt = $pdo->prepare(\"SELECT * FROM users WHERE email = :email\");\n  $stmt->bindParam(':email', $email);\n  $stmt->execute();\n  $user = $stmt->fetch();\n\n  if (!$user) {\n    echo 'Email not found';\n    exit;\n  }\n\n  // Generate random token for password reset\n  $token = bin2hex(random_bytes(32));\n\n  // Store token in database\n  $stmt = $pdo->prepare(\"UPDATE users SET password_reset_token = :token WHERE email = :email\");\n  $stmt->bindParam(':token', $token);\n  $stmt->bindParam(':email', $email);\n  $stmt->execute();\n\n  // Send email with reset link\n  $subject = 'Reset your password';\n  $body = '\n    Click this link to reset your password:\n    <a href=\"' . $_SERVER['REQUEST_SCHEME'] . '://' . $_SERVER['HTTP_HOST'] . '/reset_password.php?email=' . urlencode($email) . '&token=' . $token . '\">Reset Password</a>\n  ';\n  mail($email, $subject, $body);\n\n  echo 'Email sent with reset link';\n} else {\n  // Render form for user to enter email\n?>\n\n<form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n  <input type=\"text\" name=\"email\" placeholder=\"Enter your email address\">\n  <button type=\"submit\">Send Reset Link</button>\n</form>\n\n<?php } ?>\n```", "```php\n<?php\n\nrequire_once 'db.php'; // assume you have a db.php file for database connection settings\n\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n  $email = $_POST['email'];\n  $token = $_POST['token'];\n\n  // Check if token is valid\n  $stmt = $pdo->prepare(\"SELECT * FROM users WHERE email = :email AND password_reset_token = :token\");\n  $stmt->bindParam(':email', $email);\n  $stmt->bindParam(':token', $token);\n  $stmt->execute();\n  $user = $stmt->fetch();\n\n  if (!$user) {\n    echo 'Invalid token';\n    exit;\n  }\n\n  // Prompt user to enter new password\n?>\n\n<form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n  <input type=\"password\" name=\"new_password\" placeholder=\"Enter your new password\">\n  <button type=\"submit\">Reset Password</button>\n</form>\n\n<?php } else {\n  // Render form for user to enter email and token\n?>\n\n<form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n  <input type=\"text\" name=\"email\" placeholder=\"Enter your email address\">\n  <input type=\"hidden\" name=\"token\" value=\"<?php echo $_GET['token']; ?>\">\n  <button type=\"submit\">Reset Password</button>\n</form>\n\n<?php } ?>\n```"]}
