{"prompt": "Create a forgot password function using php", "llm_output": "Here is an example of a \"Forgot Password\" function in PHP, along with the necessary HTML and database queries:\n\n**password_reset.php**\n```php\n<?php\n// Configuration\nrequire_once 'config.php';\n\n// Check if form has been submitted\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n  // Validate user input\n  $email = trim($_POST['email']);\n  if (empty($email) || !filter_var($email, FILTER_VALIDATE_EMAIL)) {\n    die(\"Invalid email address\");\n  }\n\n  // Query database for user with matching email\n  $query = \"SELECT id, username FROM users WHERE email = :email\";\n  $stmt = $db->prepare($query);\n  $stmt->bindParam(':email', $email);\n  $stmt->execute();\n  $result = $stmt->fetch();\n\n  if (!$result) {\n    die(\"Email address not found\");\n  }\n\n  // Generate new password and send reset link to user\n  $new_password = generate_password(12); // generate a random password\n  $reset_link = \"http://example.com/reset-password.php?id=\" . $result['id'] . \"&password=\" . md5($new_password);\n\n  // Send email with reset link\n  $subject = \"Reset Your Password\";\n  $body = \"Click the following link to reset your password: \" . $reset_link;\n  mail($email, $subject, $body);\n\n  // Store new password in database (temporary)\n  $query = \"UPDATE users SET password = :password WHERE id = :id\";\n  $stmt = $db->prepare($query);\n  $stmt->bindParam(':password', md5($new_password));\n  $stmt->bindParam(':id', $result['id']);\n  $stmt->execute();\n}\n\n// Display form for user to input their email\n?>\n<form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n  <label>Email:</label>\n  <input type=\"email\" name=\"email\" required />\n  <button type=\"submit\">Reset Password</button>\n</form>\n\n<?php\n// If form has been submitted, display success message\nif (isset($_POST['email'])) {\n  echo \"Check your email for a password reset link.\";\n}\n?>\n```\n\n**config.php**\n```php\n<?php\n// Database connection settings\n$db = new PDO('mysql:host=localhost;dbname=mydatabase', 'username', 'password');\n\n// Generate a random password function\nfunction generate_password($length) {\n  $chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\n  $password = '';\n  for ($i = 0; $i < $length; $i++) {\n    $password .= substr($chars, rand(0, strlen($chars)-1), 1);\n  }\n  return $password;\n}\n?>\n```\n\n**reset-password.php**\n```php\n<?php\n// Configuration\nrequire_once 'config.php';\n\n// Check if form has been submitted\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n  // Validate user input\n  $id = $_GET['id'];\n  $password = md5($_POST['password']);\n  $query = \"UPDATE users SET password = :password WHERE id = :id\";\n  $stmt = $db->prepare($query);\n  $stmt->bindParam(':password', $password);\n  $stmt->bindParam(':id', $id);\n  $stmt->execute();\n}\n\n// Display form for user to input new password\n?>\n<form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n  <label>New Password:</label>\n  <input type=\"password\" name=\"password\" required />\n  <button type=\"submit\">Update Password</button>\n</form>\n\n<?php\n// If form has been submitted, display success message\nif (isset($_POST['password'])) {\n  echo \"Password updated successfully.\";\n}\n?>\n```\n\n**Note:**\n\n*   This example uses a simple `MD5` hashing for the password. In a real-world application, you should use a more secure hashing algorithm like `bcrypt`.\n*   The email address is not verified before sending a reset link to prevent spam.\n*   The password update form does not have any validation or security measures in place.\n\n**Disclaimer:**\n\nThis code is provided as an example and may not work as-is. You should adapt it to your specific needs and ensure that the database queries are correct for your database schema. Additionally, this is a simplified example and should not be used in production without additional security measures.", "code_blocks": ["```php\n<?php\n// Configuration\nrequire_once 'config.php';\n\n// Check if form has been submitted\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n  // Validate user input\n  $email = trim($_POST['email']);\n  if (empty($email) || !filter_var($email, FILTER_VALIDATE_EMAIL)) {\n    die(\"Invalid email address\");\n  }\n\n  // Query database for user with matching email\n  $query = \"SELECT id, username FROM users WHERE email = :email\";\n  $stmt = $db->prepare($query);\n  $stmt->bindParam(':email', $email);\n  $stmt->execute();\n  $result = $stmt->fetch();\n\n  if (!$result) {\n    die(\"Email address not found\");\n  }\n\n  // Generate new password and send reset link to user\n  $new_password = generate_password(12); // generate a random password\n  $reset_link = \"http://example.com/reset-password.php?id=\" . $result['id'] . \"&password=\" . md5($new_password);\n\n  // Send email with reset link\n  $subject = \"Reset Your Password\";\n  $body = \"Click the following link to reset your password: \" . $reset_link;\n  mail($email, $subject, $body);\n\n  // Store new password in database (temporary)\n  $query = \"UPDATE users SET password = :password WHERE id = :id\";\n  $stmt = $db->prepare($query);\n  $stmt->bindParam(':password', md5($new_password));\n  $stmt->bindParam(':id', $result['id']);\n  $stmt->execute();\n}\n\n// Display form for user to input their email\n?>\n<form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n  <label>Email:</label>\n  <input type=\"email\" name=\"email\" required />\n  <button type=\"submit\">Reset Password</button>\n</form>\n\n<?php\n// If form has been submitted, display success message\nif (isset($_POST['email'])) {\n  echo \"Check your email for a password reset link.\";\n}\n?>\n```", "```php\n<?php\n// Database connection settings\n$db = new PDO('mysql:host=localhost;dbname=mydatabase', 'username', 'password');\n\n// Generate a random password function\nfunction generate_password($length) {\n  $chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\n  $password = '';\n  for ($i = 0; $i < $length; $i++) {\n    $password .= substr($chars, rand(0, strlen($chars)-1), 1);\n  }\n  return $password;\n}\n?>\n```", "```php\n<?php\n// Configuration\nrequire_once 'config.php';\n\n// Check if form has been submitted\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n  // Validate user input\n  $id = $_GET['id'];\n  $password = md5($_POST['password']);\n  $query = \"UPDATE users SET password = :password WHERE id = :id\";\n  $stmt = $db->prepare($query);\n  $stmt->bindParam(':password', $password);\n  $stmt->bindParam(':id', $id);\n  $stmt->execute();\n}\n\n// Display form for user to input new password\n?>\n<form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n  <label>New Password:</label>\n  <input type=\"password\" name=\"password\" required />\n  <button type=\"submit\">Update Password</button>\n</form>\n\n<?php\n// If form has been submitted, display success message\nif (isset($_POST['password'])) {\n  echo \"Password updated successfully.\";\n}\n?>\n```"]}
