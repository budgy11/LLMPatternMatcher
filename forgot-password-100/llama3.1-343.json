{"prompt": "Create a forgot password function using php", "llm_output": "Here's an example of how to create a \"Forgot Password\" functionality in PHP. This will involve sending a reset link to the user's email address.\n\n**Note:** This is a basic implementation and may not cover all security considerations, such as password hashing or salting, which are essential for storing passwords securely.\n\n```php\n// Database connection settings\n$servername = \"localhost\";\n$username = \"username\";\n$password = \"password\";\n$dbname = \"database_name\";\n\n// Create connection\n$conn = new mysqli($servername, $username, $password, $dbname);\n\n// Check connection\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Function to send password reset link via email\nfunction sendResetLink($email) {\n    // Get user data from database (assuming 'users' table)\n    $sql = \"SELECT id, name, email FROM users WHERE email = '$email'\";\n    $result = $conn->query($sql);\n\n    if ($result->num_rows > 0) {\n        while ($row = $result->fetch_assoc()) {\n            // Generate random password\n            $new_password = substr(str_shuffle('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'), 0, 12);\n            echo \"New Password: $new_password <br>\";\n\n            // Update user data with new password (hashed for security)\n            $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);\n\n            $sql = \"UPDATE users SET password = '$hashed_password' WHERE email = '$email'\";\n            if ($conn->query($sql) === TRUE) {\n                echo \"Password updated <br>\";\n            } else {\n                echo \"Error updating user data: \" . $conn->error;\n            }\n        }\n\n        // Send reset link via email (using PHPMailer or mail() function)\n        $email_body = \"\n            Dear $row[name],\n\n            Your new password is: $new_password\n            Please log in to your account with this new password.\n\n            Best regards,\n            [Your Name]\n        \";\n\n        // Using PHPMailer for simplicity, but you may want to use a more secure method like sending an email using mail()\n        require 'PHPMailer/PHPMailer.php';\n        require 'PHPMailer/SMTP.php';\n\n        $mail = new PHPMailer\\PHPMailer\\PHPMailer(true);\n        try {\n            $mail->isSMTP();\n            $mail->Host       = 'smtp.example.com'; // Replace with your SMTP server\n            $mail->SMTPAuth   = true;\n            $mail->Username   = 'username@example.com'; // Replace with your email address\n            $mail->Password   = 'password';\n            $mail->Port       = 587;\n\n            $mail->setFrom('from@example.com', 'Your Name');\n            $mail->addAddress($email, '');\n            $mail->Subject = 'Reset Password';\n            $mail->Body    = $email_body;\n            $mail->AltBody = '';\n\n            if ($mail->send()) {\n                echo \"Email sent successfully\";\n            } else {\n                echo \"Error sending email: \" . $mail->ErrorInfo;\n            }\n        } catch (Exception $e) {\n            echo \"Message could not be sent. Mailer Error: {$mail->ErrorInfo}\";\n        }\n\n    } else {\n        echo \"No user found with this email address\";\n    }\n}\n\n// Test the function\nsendResetLink('example@example.com');\n```\n\n**How it works:**\n\n1.  The `sendResetLink` function takes an email address as a parameter and attempts to retrieve the corresponding user data from the database.\n2.  If the email exists in the database, it generates a random password, updates the user's password (hashed for security), and sends a reset link via email using PHPMailer or the mail() function.\n3.  The new password is sent to the user's email address.\n\n**Remember:**\n\n*   This example uses a very basic approach for storing passwords securely; in a real-world application, you should use established libraries like `password_hash` and follow best practices for storing passwords securely.\n*   Always handle potential errors and exceptions in your code.", "code_blocks": ["```php\n// Database connection settings\n$servername = \"localhost\";\n$username = \"username\";\n$password = \"password\";\n$dbname = \"database_name\";\n\n// Create connection\n$conn = new mysqli($servername, $username, $password, $dbname);\n\n// Check connection\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Function to send password reset link via email\nfunction sendResetLink($email) {\n    // Get user data from database (assuming 'users' table)\n    $sql = \"SELECT id, name, email FROM users WHERE email = '$email'\";\n    $result = $conn->query($sql);\n\n    if ($result->num_rows > 0) {\n        while ($row = $result->fetch_assoc()) {\n            // Generate random password\n            $new_password = substr(str_shuffle('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'), 0, 12);\n            echo \"New Password: $new_password <br>\";\n\n            // Update user data with new password (hashed for security)\n            $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);\n\n            $sql = \"UPDATE users SET password = '$hashed_password' WHERE email = '$email'\";\n            if ($conn->query($sql) === TRUE) {\n                echo \"Password updated <br>\";\n            } else {\n                echo \"Error updating user data: \" . $conn->error;\n            }\n        }\n\n        // Send reset link via email (using PHPMailer or mail() function)\n        $email_body = \"\n            Dear $row[name],\n\n            Your new password is: $new_password\n            Please log in to your account with this new password.\n\n            Best regards,\n            [Your Name]\n        \";\n\n        // Using PHPMailer for simplicity, but you may want to use a more secure method like sending an email using mail()\n        require 'PHPMailer/PHPMailer.php';\n        require 'PHPMailer/SMTP.php';\n\n        $mail = new PHPMailer\\PHPMailer\\PHPMailer(true);\n        try {\n            $mail->isSMTP();\n            $mail->Host       = 'smtp.example.com'; // Replace with your SMTP server\n            $mail->SMTPAuth   = true;\n            $mail->Username   = 'username@example.com'; // Replace with your email address\n            $mail->Password   = 'password';\n            $mail->Port       = 587;\n\n            $mail->setFrom('from@example.com', 'Your Name');\n            $mail->addAddress($email, '');\n            $mail->Subject = 'Reset Password';\n            $mail->Body    = $email_body;\n            $mail->AltBody = '';\n\n            if ($mail->send()) {\n                echo \"Email sent successfully\";\n            } else {\n                echo \"Error sending email: \" . $mail->ErrorInfo;\n            }\n        } catch (Exception $e) {\n            echo \"Message could not be sent. Mailer Error: {$mail->ErrorInfo}\";\n        }\n\n    } else {\n        echo \"No user found with this email address\";\n    }\n}\n\n// Test the function\nsendResetLink('example@example.com');\n```"]}
