{"prompt": "Create a forgot password function using php", "llm_output": "Here is an example of a \"Forgot Password\" function in PHP:\n\n**Database Schema**\n\nAssuming we have a `users` table with the following columns:\n```sql\nCREATE TABLE users (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  email VARCHAR(255) NOT NULL,\n  password_hash VARCHAR(255) NOT NULL,\n  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n```\n**PHP Code**\n```php\n// config.php (assuming you have a database connection configuration file)\nrequire 'config.php';\n\n// functions.php (assuming you have a custom functions file)\nfunction send_reset_email($email, $token) {\n  // Send an email with the reset link\n  $to = $email;\n  $subject = \"Reset Your Password\";\n  $body = \"Click here to reset your password: <a href='http://example.com/reset-password?token=\" . $token . \"'>Reset Password</a>\";\n  mail($to, $subject, $body);\n}\n\nfunction forgot_password() {\n  // Get the email from the form\n  $email = $_POST['email'];\n\n  // Check if the email exists in the database\n  $query = \"SELECT * FROM users WHERE email = :email\";\n  $stmt = $pdo->prepare($query);\n  $stmt->bindParam(':email', $email);\n  $stmt->execute();\n  $user = $stmt->fetch();\n\n  if ($user) {\n    // Generate a random token\n    $token = bin2hex(random_bytes(16));\n\n    // Update the user's reset token in the database\n    $query = \"UPDATE users SET reset_token = :token WHERE email = :email\";\n    $stmt = $pdo->prepare($query);\n    $stmt->bindParam(':token', $token);\n    $stmt->bindParam(':email', $email);\n    $stmt->execute();\n\n    // Send a reset email to the user\n    send_reset_email($email, $token);\n\n    // Display a success message to the user\n    echo \"Password reset link sent to your email.\";\n  } else {\n    // Display an error message if the email is not found\n    echo \"Email not found in our records.\";\n  }\n}\n\n// Handle form submission\nif (isset($_POST['submit'])) {\n  forgot_password();\n}\n```\n**HTML Form**\n```html\n<!-- form.php -->\n<form action=\"\" method=\"post\">\n  <input type=\"email\" name=\"email\" placeholder=\"Enter your email\">\n  <button type=\"submit\" name=\"submit\">Submit</button>\n</form>\n```\nHere's how it works:\n\n1. When the user submits the form, the `forgot_password()` function is called with their email as an argument.\n2. The function checks if the email exists in the database by running a SELECT query.\n3. If the email is found, a random token is generated using PHP's `random_bytes` and `bin2hex` functions.\n4. The token is stored in the user's record in the `reset_token` column.\n5. An email with a reset link is sent to the user using the `send_reset_email()` function.\n6. If everything goes well, the user receives an email with a link to reset their password.\n\nNote: This is a simplified example and you should consider implementing additional security measures such as:\n\n* Hashing the token in the database\n* Using a secure method for sending emails (e.g., using a library like SwiftMailer)\n* Validating the token before allowing the user to change their password\n\nAlso, make sure to test this code thoroughly on your development environment before deploying it to production.", "code_blocks": [null, "```php\n// config.php (assuming you have a database connection configuration file)\nrequire 'config.php';\n\n// functions.php (assuming you have a custom functions file)\nfunction send_reset_email($email, $token) {\n  // Send an email with the reset link\n  $to = $email;\n  $subject = \"Reset Your Password\";\n  $body = \"Click here to reset your password: <a href='http://example.com/reset-password?token=\" . $token . \"'>Reset Password</a>\";\n  mail($to, $subject, $body);\n}\n\nfunction forgot_password() {\n  // Get the email from the form\n  $email = $_POST['email'];\n\n  // Check if the email exists in the database\n  $query = \"SELECT * FROM users WHERE email = :email\";\n  $stmt = $pdo->prepare($query);\n  $stmt->bindParam(':email', $email);\n  $stmt->execute();\n  $user = $stmt->fetch();\n\n  if ($user) {\n    // Generate a random token\n    $token = bin2hex(random_bytes(16));\n\n    // Update the user's reset token in the database\n    $query = \"UPDATE users SET reset_token = :token WHERE email = :email\";\n    $stmt = $pdo->prepare($query);\n    $stmt->bindParam(':token', $token);\n    $stmt->bindParam(':email', $email);\n    $stmt->execute();\n\n    // Send a reset email to the user\n    send_reset_email($email, $token);\n\n    // Display a success message to the user\n    echo \"Password reset link sent to your email.\";\n  } else {\n    // Display an error message if the email is not found\n    echo \"Email not found in our records.\";\n  }\n}\n\n// Handle form submission\nif (isset($_POST['submit'])) {\n  forgot_password();\n}\n```", null]}
