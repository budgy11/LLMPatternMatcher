{"prompt": "Create a forgot password function using php", "llm_output": "Here is an example of a basic \"forgot password\" function in PHP, which sends an email to the user with a link to reset their password. This example uses the `mysqli` extension for MySQL database interactions and assumes that you have a table named `users` with columns `email`, `password_hash` (or any other name you prefer).\n\n**Database schema**\n\n```sql\nCREATE TABLE users (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  email VARCHAR(255) NOT NULL,\n  password_hash VARCHAR(255) NOT NULL\n);\n```\n\n**PHP code**\n\nCreate a new PHP file, e.g., `forgot_password.php`, and add the following code:\n```php\n<?php\n\n// Configuration\n$db_host = 'your_database_host';\n$db_user = 'your_database_username';\n$db_pass = 'your_database_password';\n$db_name = 'your_database_name';\n\n// Create connection\n$conn = new mysqli($db_host, $db_user, $db_pass, $db_name);\n\n// Check connection\nif ($conn->connect_error) {\n  die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Define function to reset password\nfunction reset_password($email, $password_new) {\n  global $conn;\n  \n  // Select user by email\n  $sql = \"SELECT * FROM users WHERE email = '$email'\";\n  $result = $conn->query($sql);\n  \n  if ($result->num_rows > 0) {\n    while ($row = $result->fetch_assoc()) {\n      // Reset password using password_hash()\n      $new_password_hash = password_hash($password_new, PASSWORD_DEFAULT);\n      \n      // Update user data\n      $sql = \"UPDATE users SET password_hash = '$new_password_hash' WHERE email = '$email'\";\n      if ($conn->query($sql) === TRUE) {\n        echo \"Password has been updated\";\n      } else {\n        echo \"Error updating password: \" . $conn->error;\n      }\n    }\n  } else {\n    echo \"User not found with this email\";\n  }\n}\n\n// Check if form was submitted\nif ($_SERVER[\"REQUEST_METHOD\"] == \"POST\") {\n  // Get email and new password from form\n  $email = $_POST['email'];\n  $password_new = $_POST['new_password'];\n\n  // Reset password\n  reset_password($email, $password_new);\n}\n\n// If email only was submitted (no new password), generate a reset link\nif (isset($_GET[\"email\"]) && !isset($_GET[\"token\"])) {\n  $email = $_GET[\"email\"];\n  \n  // Generate random token for reset link\n  $token = substr(str_shuffle(\"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"), 0, 32);\n  \n  // Insert new record into tokens table (or use a session cookie)\n  $sql = \"INSERT INTO tokens (email, token) VALUES ('$email', '$token')\";\n  if ($conn->query($sql) === TRUE) {\n    // Send email with reset link\n    send_reset_email($email, $token);\n  } else {\n    echo \"Error generating reset link: \" . $conn->error;\n  }\n}\n\n// Function to send password reset email\nfunction send_reset_email($email, $token) {\n  // Email content (you can customize this)\n  $subject = 'Reset your password';\n  $message = \"\n  <p>Dear user,</p>\n  <p>To reset your password, click on the following link:</p>\n  <p><a href='https://your-website.com/reset_password.php?email=$email&token=$token'>Reset Password</a></p>\n  \";\n  \n  // Send email using PHPMailer (or use a library like SwiftMailer)\n  $headers = 'From: your-email@example.com' . \"\\r\\n\" .\n             'Reply-To: your-email@example.com' . \"\\r\\n\" .\n             'X-Mailer: PHP/' . phpversion();\n  \n  mail($email, $subject, $message, $headers);\n}\n\n?>\n```\n\n**How it works**\n\n1. The user visits `forgot_password.php?email=user@example.com` (replace with their email).\n2. If a new password is provided in the form, the function resets the password for that user.\n3. If only an email is provided, a reset link is generated and sent to the user via email.\n\n**Note**: This example uses basic email sending using PHP's `mail()` function. You may want to use a library like PHPMailer or SwiftMailer for more advanced features and better security. Additionally, ensure you have a `tokens` table (or use sessions) to store reset tokens securely.\n\nThis is just an example and should be adapted to your specific database schema, configuration, and requirements.", "code_blocks": [null, "```php\n<?php\n\n// Configuration\n$db_host = 'your_database_host';\n$db_user = 'your_database_username';\n$db_pass = 'your_database_password';\n$db_name = 'your_database_name';\n\n// Create connection\n$conn = new mysqli($db_host, $db_user, $db_pass, $db_name);\n\n// Check connection\nif ($conn->connect_error) {\n  die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Define function to reset password\nfunction reset_password($email, $password_new) {\n  global $conn;\n  \n  // Select user by email\n  $sql = \"SELECT * FROM users WHERE email = '$email'\";\n  $result = $conn->query($sql);\n  \n  if ($result->num_rows > 0) {\n    while ($row = $result->fetch_assoc()) {\n      // Reset password using password_hash()\n      $new_password_hash = password_hash($password_new, PASSWORD_DEFAULT);\n      \n      // Update user data\n      $sql = \"UPDATE users SET password_hash = '$new_password_hash' WHERE email = '$email'\";\n      if ($conn->query($sql) === TRUE) {\n        echo \"Password has been updated\";\n      } else {\n        echo \"Error updating password: \" . $conn->error;\n      }\n    }\n  } else {\n    echo \"User not found with this email\";\n  }\n}\n\n// Check if form was submitted\nif ($_SERVER[\"REQUEST_METHOD\"] == \"POST\") {\n  // Get email and new password from form\n  $email = $_POST['email'];\n  $password_new = $_POST['new_password'];\n\n  // Reset password\n  reset_password($email, $password_new);\n}\n\n// If email only was submitted (no new password), generate a reset link\nif (isset($_GET[\"email\"]) && !isset($_GET[\"token\"])) {\n  $email = $_GET[\"email\"];\n  \n  // Generate random token for reset link\n  $token = substr(str_shuffle(\"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"), 0, 32);\n  \n  // Insert new record into tokens table (or use a session cookie)\n  $sql = \"INSERT INTO tokens (email, token) VALUES ('$email', '$token')\";\n  if ($conn->query($sql) === TRUE) {\n    // Send email with reset link\n    send_reset_email($email, $token);\n  } else {\n    echo \"Error generating reset link: \" . $conn->error;\n  }\n}\n\n// Function to send password reset email\nfunction send_reset_email($email, $token) {\n  // Email content (you can customize this)\n  $subject = 'Reset your password';\n  $message = \"\n  <p>Dear user,</p>\n  <p>To reset your password, click on the following link:</p>\n  <p><a href='https://your-website.com/reset_password.php?email=$email&token=$token'>Reset Password</a></p>\n  \";\n  \n  // Send email using PHPMailer (or use a library like SwiftMailer)\n  $headers = 'From: your-email@example.com' . \"\\r\\n\" .\n             'Reply-To: your-email@example.com' . \"\\r\\n\" .\n             'X-Mailer: PHP/' . phpversion();\n  \n  mail($email, $subject, $message, $headers);\n}\n\n?>\n```"]}
