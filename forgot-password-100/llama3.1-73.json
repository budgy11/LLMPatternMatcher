{"prompt": "Create a forgot password function using php", "llm_output": "Here is an example of how you can create a \"forgot password\" function using PHP:\n\n**Database Schema**\n\nAssuming you have a database table named `users` with the following schema:\n```sql\nCREATE TABLE users (\n  id INT PRIMARY KEY,\n  email VARCHAR(255) NOT NULL,\n  password_hash VARCHAR(255) NOT NULL\n);\n```\n**PHP Code**\n```php\n<?php\n\n// Configuration\n$db_host = 'your_database_host';\n$db_username = 'your_database_username';\n$db_password = 'your_database_password';\n$db_name = 'your_database_name';\n\n// Connect to database\n$conn = new mysqli($db_host, $db_username, $db_password, $db_name);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Function to check if email exists in database\nfunction emailExists($email) {\n  global $conn;\n  $query = \"SELECT * FROM users WHERE email = '$email'\";\n  $result = $conn->query($query);\n  return ($result->num_rows > 0);\n}\n\n// Function to send password reset email\nfunction sendResetEmail($email, $passwordResetToken) {\n  global $conn;\n  $subject = 'Password Reset Request';\n  $body = \"Click the link below to reset your password:\nhttp://yourwebsite.com/reset-password?token=$passwordResetToken\";\n  mail($email, $subject, $body);\n}\n\n// Function to update user's password\nfunction updatePassword($email, $newPassword) {\n  global $conn;\n  $query = \"UPDATE users SET password_hash = '$newPassword' WHERE email = '$email'\";\n  $conn->query($query);\n}\n\n// Handle forgot password form submission\nif (isset($_POST['forgot_password'])) {\n  $email = $_POST['email'];\n\n  // Check if email exists in database\n  if (emailExists($email)) {\n    // Generate random password reset token\n    $passwordResetToken = bin2hex(random_bytes(32));\n\n    // Update user's password to be a temporary token\n    updatePassword($email, $passwordResetToken);\n\n    // Send password reset email\n    sendResetEmail($email, $passwordResetToken);\n  } else {\n    echo \"Email not found.\";\n  }\n}\n\n?>\n```\n**HTML Form**\n```html\n<form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n  <label for=\"email\">Enter your email:</label>\n  <input type=\"email\" id=\"email\" name=\"email\"><br><br>\n  <button type=\"submit\" name=\"forgot_password\">Forgot Password</button>\n</form>\n```\n**Password Reset Page**\n\nCreate a new PHP page named `reset-password.php` that will handle the password reset form submission. This page should also be connected to the database.\n```php\n<?php\n\n// Configuration\n$db_host = 'your_database_host';\n$db_username = 'your_database_username';\n$db_password = 'your_database_password';\n$db_name = 'your_database_name';\n\n// Connect to database\n$conn = new mysqli($db_host, $db_username, $db_password, $db_name);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Function to verify password reset token\nfunction verifyToken($token) {\n  global $conn;\n  $query = \"SELECT * FROM users WHERE password_hash = '$token'\";\n  $result = $conn->query($query);\n  return ($result->num_rows > 0);\n}\n\n// Handle password reset form submission\nif (isset($_POST['reset_password'])) {\n  $token = $_POST['token'];\n  $newPassword = $_POST['new_password'];\n\n  // Verify password reset token\n  if (verifyToken($token)) {\n    // Update user's password to new password\n    updatePassword($email, $newPassword);\n  } else {\n    echo \"Invalid token.\";\n  }\n}\n\n?>\n```\n**HTML Form**\n```html\n<form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n  <label for=\"token\">Enter your password reset token:</label>\n  <input type=\"text\" id=\"token\" name=\"token\"><br><br>\n  <label for=\"new_password\">Enter your new password:</label>\n  <input type=\"password\" id=\"new_password\" name=\"new_password\"><br><br>\n  <button type=\"submit\" name=\"reset_password\">Reset Password</button>\n</form>\n```\nThis is a basic implementation of a \"forgot password\" function using PHP. Note that this code assumes you have a database table named `users` with columns `id`, `email`, and `password_hash`. You will need to modify the code to match your specific database schema.\n\nAlso, keep in mind that storing passwords as temporary tokens is not recommended. In a production environment, you should use a secure password hashing algorithm like bcrypt or Argon2 to store user passwords securely.", "code_blocks": [null, "```php\n<?php\n\n// Configuration\n$db_host = 'your_database_host';\n$db_username = 'your_database_username';\n$db_password = 'your_database_password';\n$db_name = 'your_database_name';\n\n// Connect to database\n$conn = new mysqli($db_host, $db_username, $db_password, $db_name);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Function to check if email exists in database\nfunction emailExists($email) {\n  global $conn;\n  $query = \"SELECT * FROM users WHERE email = '$email'\";\n  $result = $conn->query($query);\n  return ($result->num_rows > 0);\n}\n\n// Function to send password reset email\nfunction sendResetEmail($email, $passwordResetToken) {\n  global $conn;\n  $subject = 'Password Reset Request';\n  $body = \"Click the link below to reset your password:\nhttp://yourwebsite.com/reset-password?token=$passwordResetToken\";\n  mail($email, $subject, $body);\n}\n\n// Function to update user's password\nfunction updatePassword($email, $newPassword) {\n  global $conn;\n  $query = \"UPDATE users SET password_hash = '$newPassword' WHERE email = '$email'\";\n  $conn->query($query);\n}\n\n// Handle forgot password form submission\nif (isset($_POST['forgot_password'])) {\n  $email = $_POST['email'];\n\n  // Check if email exists in database\n  if (emailExists($email)) {\n    // Generate random password reset token\n    $passwordResetToken = bin2hex(random_bytes(32));\n\n    // Update user's password to be a temporary token\n    updatePassword($email, $passwordResetToken);\n\n    // Send password reset email\n    sendResetEmail($email, $passwordResetToken);\n  } else {\n    echo \"Email not found.\";\n  }\n}\n\n?>\n```", null, "```php\n<?php\n\n// Configuration\n$db_host = 'your_database_host';\n$db_username = 'your_database_username';\n$db_password = 'your_database_password';\n$db_name = 'your_database_name';\n\n// Connect to database\n$conn = new mysqli($db_host, $db_username, $db_password, $db_name);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Function to verify password reset token\nfunction verifyToken($token) {\n  global $conn;\n  $query = \"SELECT * FROM users WHERE password_hash = '$token'\";\n  $result = $conn->query($query);\n  return ($result->num_rows > 0);\n}\n\n// Handle password reset form submission\nif (isset($_POST['reset_password'])) {\n  $token = $_POST['token'];\n  $newPassword = $_POST['new_password'];\n\n  // Verify password reset token\n  if (verifyToken($token)) {\n    // Update user's password to new password\n    updatePassword($email, $newPassword);\n  } else {\n    echo \"Invalid token.\";\n  }\n}\n\n?>\n```", null]}
