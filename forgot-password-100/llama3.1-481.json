{"prompt": "Create a forgot password function using php", "llm_output": "Here is an example of how you can create a \"forgot password\" function in PHP:\n\n**Database Setup**\n\nLet's assume we have a database table called `users` with the following columns:\n\n* `id`: unique identifier for each user\n* `email`: email address associated with the account\n* `password`: hashed password (we'll use a library like `password_hash` to store passwords securely)\n\n```sql\nCREATE TABLE users (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  email VARCHAR(255) NOT NULL,\n  password VARCHAR(255) NOT NULL\n);\n```\n\n**PHP Code**\n\nCreate a new PHP file called `forgot_password.php`. This will handle the logic for sending an email with a reset link to the user's email address.\n```php\n<?php\n\n// Configuration settings\n$secret_key = 'your_secret_key_here'; // replace with your secret key\n$reset_link_expires_in_minutes = 30; // link expires after 30 minutes\n\n// Database connection settings\n$db_host = 'localhost';\n$db_username = 'your_db_username';\n$db_password = 'your_db_password';\n$db_name = 'your_db_name';\n\n// Connect to database\n$conn = new mysqli($db_host, $db_username, $db_password, $db_name);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Function to send password reset email\nfunction send_reset_email($email, $reset_link)\n{\n    // Set email headers\n    $headers = 'From: Your Email <your-email@example.com>' . \"\\r\\n\" .\n        'Content-Type: text/html; charset=UTF-8' . \"\\r\\n\";\n\n    // Send email using PHP mail function\n    if (mail($email, 'Reset Your Password', $reset_link, $headers)) {\n        echo \"Email sent successfully!\";\n    } else {\n        echo \"Failed to send email.\";\n    }\n}\n\n// Function to check if user exists and generate reset link\nfunction check_user_exists_and_generate_reset_link($email)\n{\n    global $conn;\n\n    // Query database for user existence\n    $sql = \"SELECT * FROM users WHERE email='\" . mysqli_real_escape_string($conn, $email) . \"'\";\n    $result = $conn->query($sql);\n\n    if ($result->num_rows > 0) {\n        // Get user ID from result\n        $user_id = $result->fetch_assoc()['id'];\n\n        // Generate reset link using secret key and user ID\n        $reset_link = 'https://example.com/reset-password/' . urlencode(base64_encode($secret_key . ':' . $user_id));\n\n        return $reset_link;\n    } else {\n        echo \"User does not exist.\";\n        return null;\n    }\n}\n\n// Handle forgot password request\nif (isset($_POST['email'])) {\n    // Get email from form submission\n    $email = $_POST['email'];\n\n    // Check if user exists and generate reset link\n    $reset_link = check_user_exists_and_generate_reset_link($email);\n\n    if ($reset_link !== null) {\n        // Send password reset email with generated reset link\n        send_reset_email($email, $reset_link);\n    }\n}\n\n// Close database connection\n$conn->close();\n\n?>\n```\n\n**HTML/JavaScript Code**\n\nCreate an HTML form to handle user input for the forgot password feature. In this example, we'll use JavaScript to submit the form asynchronously and display a success message after submitting.\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Forgot Password</title>\n    <style>\n        body {\n            font-family: Arial, sans-serif;\n        }\n    </style>\n</head>\n<body>\n\n<h2>Forgot Password?</h2>\n\n<form id=\"forgot-password-form\" method=\"post\">\n    <input type=\"email\" name=\"email\" placeholder=\"Enter your email address\">\n    <button type=\"submit\">Send Reset Link</button>\n</form>\n\n<div id=\"success-message\"></div>\n\n<script src=\"https://code.jquery.com/jquery-3.6.0.min.js\"></script>\n<script>\n    $(document).ready(function() {\n        $('#forgot-password-form').submit(function(event) {\n            event.preventDefault();\n\n            var email = $('#email').val();\n\n            $.ajax({\n                type: 'POST',\n                url: 'forgot_password.php',\n                data: { email: email },\n                success: function(data) {\n                    console.log(data);\n                    if (data === \"Email sent successfully!\") {\n                        $('#success-message').html('A password reset link has been sent to your email address.');\n                        // You can also redirect the user to a login page or display a form for them to enter their new password\n                    } else {\n                        $('#success-message').html(data);\n                    }\n                },\n                error: function(xhr, status, error) {\n                    console.log(error);\n                    $('#success-message').html('An error occurred. Please try again later.');\n                }\n            });\n        });\n    });\n</script>\n\n</body>\n</html>\n```\n\nThis code provides a basic implementation of a forgot password feature using PHP and JavaScript. You can customize it according to your specific requirements and security standards.\n\nRemember to replace the placeholder values (e.g., `your_secret_key_here`, `example.com`) with actual values from your application.\n\nPlease note that this example uses a simplified approach for generating reset links, which may not be suitable for production environments. Consider using more secure methods, such as token-based authentication or QR codes, depending on your specific use case.", "code_blocks": [null, "```php\n<?php\n\n// Configuration settings\n$secret_key = 'your_secret_key_here'; // replace with your secret key\n$reset_link_expires_in_minutes = 30; // link expires after 30 minutes\n\n// Database connection settings\n$db_host = 'localhost';\n$db_username = 'your_db_username';\n$db_password = 'your_db_password';\n$db_name = 'your_db_name';\n\n// Connect to database\n$conn = new mysqli($db_host, $db_username, $db_password, $db_name);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Function to send password reset email\nfunction send_reset_email($email, $reset_link)\n{\n    // Set email headers\n    $headers = 'From: Your Email <your-email@example.com>' . \"\\r\\n\" .\n        'Content-Type: text/html; charset=UTF-8' . \"\\r\\n\";\n\n    // Send email using PHP mail function\n    if (mail($email, 'Reset Your Password', $reset_link, $headers)) {\n        echo \"Email sent successfully!\";\n    } else {\n        echo \"Failed to send email.\";\n    }\n}\n\n// Function to check if user exists and generate reset link\nfunction check_user_exists_and_generate_reset_link($email)\n{\n    global $conn;\n\n    // Query database for user existence\n    $sql = \"SELECT * FROM users WHERE email='\" . mysqli_real_escape_string($conn, $email) . \"'\";\n    $result = $conn->query($sql);\n\n    if ($result->num_rows > 0) {\n        // Get user ID from result\n        $user_id = $result->fetch_assoc()['id'];\n\n        // Generate reset link using secret key and user ID\n        $reset_link = 'https://example.com/reset-password/' . urlencode(base64_encode($secret_key . ':' . $user_id));\n\n        return $reset_link;\n    } else {\n        echo \"User does not exist.\";\n        return null;\n    }\n}\n\n// Handle forgot password request\nif (isset($_POST['email'])) {\n    // Get email from form submission\n    $email = $_POST['email'];\n\n    // Check if user exists and generate reset link\n    $reset_link = check_user_exists_and_generate_reset_link($email);\n\n    if ($reset_link !== null) {\n        // Send password reset email with generated reset link\n        send_reset_email($email, $reset_link);\n    }\n}\n\n// Close database connection\n$conn->close();\n\n?>\n```", null]}
