{"prompt": "Create a forgot password function using php", "llm_output": "Here is an example of a \"Forgot Password\" functionality using PHP, HTML, and CSS. This will send a new password to the user's email address.\n\n**Note:** Before you start implementing this, make sure you have the following:\n\n* A PHP server (e.g., Apache)\n* MySQL installed on your system\n* The PHP PDO extension enabled\n\n### Database Schema\n\nFirst, let's create a database schema for our users table. Create a new SQL file and add the following code:\n```sql\nCREATE TABLE IF NOT EXISTS `users` (\n  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,\n  `email` varchar(255) NOT NULL,\n  `password` char(60) NOT NULL,\n  PRIMARY KEY (`id`)\n);\n```\n### PHP Code\n\nCreate a new file named `forgot_password.php`. Add the following code:\n```php\n<?php\n\n// Configuration settings\ndefine('DB_HOST', 'localhost');\ndefine('DB_USER', 'your_username');\ndefine('DB_PASSWORD', 'your_password');\ndefine('DB_NAME', 'your_database');\n\n// Connect to database\ntry {\n    $pdo = new PDO(\"mysql:host=\" . DB_HOST . \";dbname=\" . DB_NAME, DB_USER, DB_PASSWORD);\n} catch (PDOException $e) {\n    exit('Error: ' . $e->getMessage());\n}\n\n// Form submission handling\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n\n    // Get form data\n    $email = $_POST['email'];\n\n    // Validate email address\n    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {\n        echo \"Invalid email address.\";\n        exit;\n    }\n\n    // Find user by email address\n    $stmt = $pdo->prepare('SELECT * FROM users WHERE email = :email');\n    $stmt->bindParam(':email', $email);\n    $stmt->execute();\n\n    // Get the result\n    $user = $stmt->fetch();\n\n    if (!$user) {\n        echo \"Email not found.\";\n        exit;\n    }\n\n    // Generate new password and send to user via email\n    $newPassword = substr(md5(uniqid(mt_rand(), true)), 0, 8);\n    $to      = $email;\n    $subject = 'Your New Password';\n    $message = 'New password: ' . $newPassword;\n    $headers = 'From: your_email@example.com' . \"\\r\\n\" .\n        'Reply-To: no-reply@example.com' . \"\\r\\n\" .\n        'X-Mailer: PHP/' . phpversion();\n\n    mail($to, $subject, $message, $headers);\n\n    echo \"A new password has been sent to your email address.\";\n} else {\n\n?>\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Forgot Password</title>\n    <style>\n        body {\n            font-family: Arial, sans-serif;\n            text-align: center;\n        }\n    </style>\n</head>\n\n<body>\n\n<form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n    Email Address: <br>\n    <input type=\"text\" name=\"email\"><br><br>\n    <input type=\"submit\" value=\"Submit\">\n</form>\n\n<?php } ?>\n```\n### How it Works\n\nHere's a step-by-step explanation:\n\n1. When the user submits the form, the PHP script checks if the `REQUEST_METHOD` is POST.\n2. It validates the email address using the `filter_var()` function.\n3. If the email address is valid, it queries the database to find the user with the matching email address.\n4. If a user is found, it generates a new password using the `substr(md5(uniqid(mt_rand(), true)), 0, 8)` function and sends an email with the new password to the user's email address.\n\n**Note:** This code uses the PHP mail() function to send emails. Make sure you have a working mail server configured on your system for this to work correctly.", "code_blocks": [null, "```php\n<?php\n\n// Configuration settings\ndefine('DB_HOST', 'localhost');\ndefine('DB_USER', 'your_username');\ndefine('DB_PASSWORD', 'your_password');\ndefine('DB_NAME', 'your_database');\n\n// Connect to database\ntry {\n    $pdo = new PDO(\"mysql:host=\" . DB_HOST . \";dbname=\" . DB_NAME, DB_USER, DB_PASSWORD);\n} catch (PDOException $e) {\n    exit('Error: ' . $e->getMessage());\n}\n\n// Form submission handling\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n\n    // Get form data\n    $email = $_POST['email'];\n\n    // Validate email address\n    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {\n        echo \"Invalid email address.\";\n        exit;\n    }\n\n    // Find user by email address\n    $stmt = $pdo->prepare('SELECT * FROM users WHERE email = :email');\n    $stmt->bindParam(':email', $email);\n    $stmt->execute();\n\n    // Get the result\n    $user = $stmt->fetch();\n\n    if (!$user) {\n        echo \"Email not found.\";\n        exit;\n    }\n\n    // Generate new password and send to user via email\n    $newPassword = substr(md5(uniqid(mt_rand(), true)), 0, 8);\n    $to      = $email;\n    $subject = 'Your New Password';\n    $message = 'New password: ' . $newPassword;\n    $headers = 'From: your_email@example.com' . \"\\r\\n\" .\n        'Reply-To: no-reply@example.com' . \"\\r\\n\" .\n        'X-Mailer: PHP/' . phpversion();\n\n    mail($to, $subject, $message, $headers);\n\n    echo \"A new password has been sent to your email address.\";\n} else {\n\n?>\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Forgot Password</title>\n    <style>\n        body {\n            font-family: Arial, sans-serif;\n            text-align: center;\n        }\n    </style>\n</head>\n\n<body>\n\n<form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n    Email Address: <br>\n    <input type=\"text\" name=\"email\"><br><br>\n    <input type=\"submit\" value=\"Submit\">\n</form>\n\n<?php } ?>\n```"]}
