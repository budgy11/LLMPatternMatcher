{"prompt": "Create a forgot password function using php", "llm_output": "Here is an example of how to create a \"Forgot Password\" function in PHP:\n\n**Note:** This example uses a simple database with usernames and passwords. In a real-world application, you should use a secure password hashing library like `password_hash()` and store the salted hash in your database.\n\n**Database Schema:**\n```sql\nCREATE TABLE users (\n  id INT PRIMARY KEY,\n  username VARCHAR(255),\n  password VARCHAR(255)\n);\n```\n**PHP Code:**\n\nCreate a new file called `forgot_password.php` with the following code:\n```php\n<?php\n\n// Configuration\n$database = 'your_database_name';\n$username = 'your_username';\n$password = 'your_password';\n\n// Connect to database\n$conn = new mysqli($database, $username, $password);\n\n// Check connection\nif ($conn->connect_error) {\n  die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Function to send password reset email\nfunction sendResetEmail($email) {\n  // Email configuration (replace with your SMTP settings)\n  $server = 'your_smtp_server';\n  $port = 587;\n  $username = 'your_email_username';\n  $password = 'your_email_password';\n\n  // Mail transport settings\n  $transport = Swift_SmtpTransport::newInstance($server, $port)\n    ->setUsername($username)\n    ->setPassword($password);\n\n  // Create a message\n  $message = Swift_Message::newInstance()\n    ->setSubject('Reset your password')\n    ->setFrom(array('your_email@example.com' => 'Your Name'))\n    ->setTo(array($email))\n    ->setBody('Click this link to reset your password: <a href=\"' . $_SERVER['REQUEST_URI'] . '?reset=' . md5($email) . '\">Reset Password</a>');\n\n  // Send the email\n  $mailer = Swift_Mailer::newInstance($transport);\n  if ($mailer->send($message)) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\n// Handle forgot password form submission\nif (isset($_POST['forgot_password'])) {\n  $email = $_POST['email'];\n\n  // Validate email address\n  if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {\n    echo 'Invalid email address';\n    exit();\n  }\n\n  // Query database for user with matching email address\n  $sql = \"SELECT * FROM users WHERE email = '$email'\";\n  $result = $conn->query($sql);\n  $user = $result->fetch_assoc();\n\n  if ($user) {\n    // Send password reset email\n    sendResetEmail($email);\n\n    echo 'Password reset link has been sent to your email';\n  } else {\n    echo 'No user with that email address exists';\n  }\n}\n\n// Display forgot password form\n?>\n<form action=\"\" method=\"post\">\n  <input type=\"email\" name=\"email\" placeholder=\"Enter your email address\">\n  <button type=\"submit\" name=\"forgot_password\">Forgot Password</button>\n</form>\n```\n**How it works:**\n\n1. The user submits the forgot password form with their email address.\n2. The script validates the email address and queries the database for a user with matching email address.\n3. If a user is found, the script sends an email to that user's email address with a link to reset their password.\n4. The email contains a unique token (md5 of the email address) that will be used to validate the password reset request.\n\n**Security Notes:**\n\n1. This example uses a simple `MD5` hash for the password reset token. In a real-world application, use a more secure hashing algorithm like `bcrypt`.\n2. The script assumes that the database is securely stored and accessible only to authorized users.\n3. Always validate user input on server-side to prevent SQL injection attacks.\n\nThis example provides a basic \"Forgot Password\" function using PHP and MySQL. You should adapt it to your specific needs and security requirements.", "code_blocks": [null, "```php\n<?php\n\n// Configuration\n$database = 'your_database_name';\n$username = 'your_username';\n$password = 'your_password';\n\n// Connect to database\n$conn = new mysqli($database, $username, $password);\n\n// Check connection\nif ($conn->connect_error) {\n  die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Function to send password reset email\nfunction sendResetEmail($email) {\n  // Email configuration (replace with your SMTP settings)\n  $server = 'your_smtp_server';\n  $port = 587;\n  $username = 'your_email_username';\n  $password = 'your_email_password';\n\n  // Mail transport settings\n  $transport = Swift_SmtpTransport::newInstance($server, $port)\n    ->setUsername($username)\n    ->setPassword($password);\n\n  // Create a message\n  $message = Swift_Message::newInstance()\n    ->setSubject('Reset your password')\n    ->setFrom(array('your_email@example.com' => 'Your Name'))\n    ->setTo(array($email))\n    ->setBody('Click this link to reset your password: <a href=\"' . $_SERVER['REQUEST_URI'] . '?reset=' . md5($email) . '\">Reset Password</a>');\n\n  // Send the email\n  $mailer = Swift_Mailer::newInstance($transport);\n  if ($mailer->send($message)) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\n// Handle forgot password form submission\nif (isset($_POST['forgot_password'])) {\n  $email = $_POST['email'];\n\n  // Validate email address\n  if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {\n    echo 'Invalid email address';\n    exit();\n  }\n\n  // Query database for user with matching email address\n  $sql = \"SELECT * FROM users WHERE email = '$email'\";\n  $result = $conn->query($sql);\n  $user = $result->fetch_assoc();\n\n  if ($user) {\n    // Send password reset email\n    sendResetEmail($email);\n\n    echo 'Password reset link has been sent to your email';\n  } else {\n    echo 'No user with that email address exists';\n  }\n}\n\n// Display forgot password form\n?>\n<form action=\"\" method=\"post\">\n  <input type=\"email\" name=\"email\" placeholder=\"Enter your email address\">\n  <button type=\"submit\" name=\"forgot_password\">Forgot Password</button>\n</form>\n```"]}
