{"prompt": "Create a forgot password function using php", "llm_output": "Here is an example of how to create a forgot password function in PHP:\n\n**Password Reset Code**\n```php\n<?php\n\n// Define the database connection settings\n$db_host = 'localhost';\n$db_username = 'your_username';\n$db_password = 'your_password';\n$db_name = 'your_database';\n\n// Connect to the database\n$conn = new mysqli($db_host, $db_username, $db_password, $db_name);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Define the email validation function\nfunction validate_email($email) {\n    if (filter_var($email, FILTER_VALIDATE_EMAIL)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n// Define the password reset function\nfunction forgot_password($email) {\n    // Check if the user exists in the database\n    $query = \"SELECT * FROM users WHERE email = '$email'\";\n    $result = $conn->query($query);\n\n    if ($result->num_rows > 0) {\n        // Get the user's ID and name from the result set\n        $row = $result->fetch_assoc();\n        $user_id = $row['id'];\n        $name = $row['name'];\n\n        // Generate a random password reset token\n        $token = bin2hex(random_bytes(32));\n\n        // Insert the token into the database for this user\n        $query = \"UPDATE users SET password_reset_token = '$token' WHERE id = '$user_id'\";\n        $conn->query($query);\n\n        // Send an email with a link to reset the password\n        send_password_reset_email($email, $name, $token);\n    } else {\n        return false; // Email not found in database\n    }\n}\n\n// Define the function to send the password reset email\nfunction send_password_reset_email($email, $name, $token) {\n    // Send an email with a link to reset the password\n    $subject = 'Reset your password';\n    $body = '\n        Dear ' . $name . ',\n        \n        To reset your password, click on this link:\n        <a href=\"http://yourwebsite.com/reset-password.php?email=' . $email . '&token=' . $token . '\">Reset Password</a>\n        \n        Best regards,\n        Your Website\n    ';\n\n    // Send the email using PHP's mail function or a library like SwiftMailer\n    // For example:\n    mail($email, $subject, $body);\n}\n\n?>\n```\n**Password Reset Form Code**\n```php\n<?php\n\n// Include the forgot password function code above\ninclude 'forgot_password.php';\n\nif (isset($_POST['submit'])) {\n    $email = $_POST['email'];\n    if (validate_email($email)) {\n        // Call the forgot password function to generate a new token and send an email\n        forgot_password($email);\n        echo 'Email sent with reset link.';\n    } else {\n        echo 'Invalid email address';\n    }\n}\n\n?>\n\n<form action=\"\" method=\"post\">\n    <label for=\"email\">Email:</label>\n    <input type=\"text\" name=\"email\" id=\"email\"><br><br>\n    <input type=\"submit\" name=\"submit\" value=\"Send Email with Reset Link\">\n</form>\n```\n**Reset Password Page Code**\n```php\n<?php\n\n// Include the forgot password function code above\ninclude 'forgot_password.php';\n\nif (isset($_GET['email']) && isset($_GET['token'])) {\n    $email = $_GET['email'];\n    $token = $_GET['token'];\n\n    // Validate the token and reset the password if it's valid\n    validate_token($email, $token);\n}\n\n?>\n\n<form action=\"\" method=\"post\">\n    <label for=\"new_password\">New Password:</label>\n    <input type=\"password\" name=\"new_password\" id=\"new_password\"><br><br>\n    <label for=\"confirm_new_password\">Confirm New Password:</label>\n    <input type=\"password\" name=\"confirm_new_password\" id=\"confirm_new_password\"><br><br>\n    <input type=\"submit\" name=\"reset\" value=\"Reset Password\">\n</form>\n\n<?php\nfunction validate_token($email, $token) {\n    // Check if the token is valid for this user\n    $query = \"SELECT * FROM users WHERE email = '$email' AND password_reset_token = '$token'\";\n    $result = $conn->query($query);\n\n    if ($result->num_rows > 0) {\n        // If the token is valid, reset the password to a new random value\n        $row = $result->fetch_assoc();\n        $user_id = $row['id'];\n        $new_password = bin2hex(random_bytes(32));\n\n        // Update the user's password in the database\n        $query = \"UPDATE users SET password = '$new_password' WHERE id = '$user_id'\";\n        $conn->query($query);\n\n        echo 'Password reset successfully.';\n    } else {\n        return false; // Token not valid for this user\n    }\n}\n?>\n```\nThis is just a basic example, and you should adapt it to your specific needs. Make sure to replace `http://yourwebsite.com` with the URL of your website, and also add proper error handling and security measures.\n\nNote: This code does not include any encryption or hashing for passwords, which is essential for secure password storage. You should use a library like PHPass or a framework like Laravel that includes built-in password management functions.", "code_blocks": ["```php\n<?php\n\n// Define the database connection settings\n$db_host = 'localhost';\n$db_username = 'your_username';\n$db_password = 'your_password';\n$db_name = 'your_database';\n\n// Connect to the database\n$conn = new mysqli($db_host, $db_username, $db_password, $db_name);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Define the email validation function\nfunction validate_email($email) {\n    if (filter_var($email, FILTER_VALIDATE_EMAIL)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n// Define the password reset function\nfunction forgot_password($email) {\n    // Check if the user exists in the database\n    $query = \"SELECT * FROM users WHERE email = '$email'\";\n    $result = $conn->query($query);\n\n    if ($result->num_rows > 0) {\n        // Get the user's ID and name from the result set\n        $row = $result->fetch_assoc();\n        $user_id = $row['id'];\n        $name = $row['name'];\n\n        // Generate a random password reset token\n        $token = bin2hex(random_bytes(32));\n\n        // Insert the token into the database for this user\n        $query = \"UPDATE users SET password_reset_token = '$token' WHERE id = '$user_id'\";\n        $conn->query($query);\n\n        // Send an email with a link to reset the password\n        send_password_reset_email($email, $name, $token);\n    } else {\n        return false; // Email not found in database\n    }\n}\n\n// Define the function to send the password reset email\nfunction send_password_reset_email($email, $name, $token) {\n    // Send an email with a link to reset the password\n    $subject = 'Reset your password';\n    $body = '\n        Dear ' . $name . ',\n        \n        To reset your password, click on this link:\n        <a href=\"http://yourwebsite.com/reset-password.php?email=' . $email . '&token=' . $token . '\">Reset Password</a>\n        \n        Best regards,\n        Your Website\n    ';\n\n    // Send the email using PHP's mail function or a library like SwiftMailer\n    // For example:\n    mail($email, $subject, $body);\n}\n\n?>\n```", "```php\n<?php\n\n// Include the forgot password function code above\ninclude 'forgot_password.php';\n\nif (isset($_POST['submit'])) {\n    $email = $_POST['email'];\n    if (validate_email($email)) {\n        // Call the forgot password function to generate a new token and send an email\n        forgot_password($email);\n        echo 'Email sent with reset link.';\n    } else {\n        echo 'Invalid email address';\n    }\n}\n\n?>\n\n<form action=\"\" method=\"post\">\n    <label for=\"email\">Email:</label>\n    <input type=\"text\" name=\"email\" id=\"email\"><br><br>\n    <input type=\"submit\" name=\"submit\" value=\"Send Email with Reset Link\">\n</form>\n```", "```php\n<?php\n\n// Include the forgot password function code above\ninclude 'forgot_password.php';\n\nif (isset($_GET['email']) && isset($_GET['token'])) {\n    $email = $_GET['email'];\n    $token = $_GET['token'];\n\n    // Validate the token and reset the password if it's valid\n    validate_token($email, $token);\n}\n\n?>\n\n<form action=\"\" method=\"post\">\n    <label for=\"new_password\">New Password:</label>\n    <input type=\"password\" name=\"new_password\" id=\"new_password\"><br><br>\n    <label for=\"confirm_new_password\">Confirm New Password:</label>\n    <input type=\"password\" name=\"confirm_new_password\" id=\"confirm_new_password\"><br><br>\n    <input type=\"submit\" name=\"reset\" value=\"Reset Password\">\n</form>\n\n<?php\nfunction validate_token($email, $token) {\n    // Check if the token is valid for this user\n    $query = \"SELECT * FROM users WHERE email = '$email' AND password_reset_token = '$token'\";\n    $result = $conn->query($query);\n\n    if ($result->num_rows > 0) {\n        // If the token is valid, reset the password to a new random value\n        $row = $result->fetch_assoc();\n        $user_id = $row['id'];\n        $new_password = bin2hex(random_bytes(32));\n\n        // Update the user's password in the database\n        $query = \"UPDATE users SET password = '$new_password' WHERE id = '$user_id'\";\n        $conn->query($query);\n\n        echo 'Password reset successfully.';\n    } else {\n        return false; // Token not valid for this user\n    }\n}\n?>\n```"]}
