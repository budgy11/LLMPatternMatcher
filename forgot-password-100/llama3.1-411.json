{"prompt": "Create a forgot password function using php", "llm_output": "Here is an example of how to create a \"forgot password\" function using PHP:\n\n**Database Schema**\n\nFor this example, let's assume we have a database table called `users` with the following columns:\n\n| Column Name | Data Type | Description |\n| --- | --- | --- |\n| id | int | Unique user ID |\n| email | varchar(255) | User's email address |\n| password | varchar(255) | User's password (hashed using SHA-256) |\n\n**PHP Code**\n\n```php\n<?php\n\n// Configuration settings\ndefine('DB_HOST', 'localhost');\ndefine('DB_USERNAME', 'your_username');\ndefine('DB_PASSWORD', 'your_password');\ndefine('DB_NAME', 'your_database');\n\n// Connect to the database\n$conn = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Function to send password reset email\nfunction sendPasswordResetEmail($email) {\n    // Generate a random token for password reset\n    $token = bin2hex(random_bytes(16));\n\n    // Update user's password reset token in the database\n    $sql = \"UPDATE users SET password_reset_token = '$token' WHERE email = '$email'\";\n    if ($conn->query($sql) === TRUE) {\n        // Send an email with a link to reset password\n        $subject = 'Reset your password';\n        $message = \"\n            <p>Hello User,\n            \n            To reset your password, click on the following link:\n            http://your-website.com/reset-password.php?token=$token\n            \n            Best regards,\n            Your Website Team\n        \";\n        \n        // Send email using PHPMailer or another library of your choice\n        mail($email, $subject, $message);\n    } else {\n        echo \"Error updating user's password reset token: \" . $conn->error;\n    }\n}\n\n// Function to handle forgot password form submission\nfunction forgotPasswordHandler() {\n    // Get the email address from the form input\n    $email = $_POST['email'];\n\n    // Check if email exists in the database\n    $sql = \"SELECT * FROM users WHERE email = '$email'\";\n    $result = $conn->query($sql);\n    \n    if ($result->num_rows > 0) {\n        // If email exists, send password reset email\n        sendPasswordResetEmail($email);\n    } else {\n        echo \"Error: Email not found.\";\n    }\n}\n\n// Handle forgot password form submission\nif (isset($_POST['submit'])) {\n    forgotPasswordHandler();\n} else {\n    // Display the forgot password form\n    ?>\n    <form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n        <label for=\"email\">Email:</label>\n        <input type=\"text\" id=\"email\" name=\"email\"><br><br>\n        <input type=\"submit\" name=\"submit\" value=\"Submit\">\n    </form>\n    <?php\n}\n?>\n```\n\n**Explanation**\n\nThis code defines two functions: `sendPasswordResetEmail()` and `forgotPasswordHandler()`. The former sends an email with a link to reset the password, while the latter handles the forgot password form submission.\n\nHere's how it works:\n\n1. When the user submits the forgot password form, the data is sent to the server via POST.\n2. The `forgotPasswordHandler()` function checks if the email address exists in the database. If it does, it calls the `sendPasswordResetEmail()` function to send an email with a link to reset the password.\n3. In the `sendPasswordResetEmail()` function, a random token is generated and stored in the user's record in the database. This token is used as a URL parameter when sending the password reset link via email.\n4. The email contains a link to the password reset page with the token as a parameter. When the user clicks on this link, it redirects them to the password reset page.\n\n**Security Considerations**\n\n* Always hash passwords using a secure algorithm (SHA-256 or stronger) and store them in the database securely.\n* Use HTTPS (SSL/TLS) to encrypt data transmitted between the client and server.\n* Validate all input data (e.g., email address, token) to prevent SQL injection attacks.\n* Regularly review and update your code to ensure it remains secure.\n\nNote that this is a basic example, and you should consider implementing additional security measures, such as:\n\n* Password reset token expiration\n* IP blocking for multiple failed login attempts\n* Two-factor authentication (2FA)\n* Secure password hashing algorithms", "code_blocks": ["```php\n<?php\n\n// Configuration settings\ndefine('DB_HOST', 'localhost');\ndefine('DB_USERNAME', 'your_username');\ndefine('DB_PASSWORD', 'your_password');\ndefine('DB_NAME', 'your_database');\n\n// Connect to the database\n$conn = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Function to send password reset email\nfunction sendPasswordResetEmail($email) {\n    // Generate a random token for password reset\n    $token = bin2hex(random_bytes(16));\n\n    // Update user's password reset token in the database\n    $sql = \"UPDATE users SET password_reset_token = '$token' WHERE email = '$email'\";\n    if ($conn->query($sql) === TRUE) {\n        // Send an email with a link to reset password\n        $subject = 'Reset your password';\n        $message = \"\n            <p>Hello User,\n            \n            To reset your password, click on the following link:\n            http://your-website.com/reset-password.php?token=$token\n            \n            Best regards,\n            Your Website Team\n        \";\n        \n        // Send email using PHPMailer or another library of your choice\n        mail($email, $subject, $message);\n    } else {\n        echo \"Error updating user's password reset token: \" . $conn->error;\n    }\n}\n\n// Function to handle forgot password form submission\nfunction forgotPasswordHandler() {\n    // Get the email address from the form input\n    $email = $_POST['email'];\n\n    // Check if email exists in the database\n    $sql = \"SELECT * FROM users WHERE email = '$email'\";\n    $result = $conn->query($sql);\n    \n    if ($result->num_rows > 0) {\n        // If email exists, send password reset email\n        sendPasswordResetEmail($email);\n    } else {\n        echo \"Error: Email not found.\";\n    }\n}\n\n// Handle forgot password form submission\nif (isset($_POST['submit'])) {\n    forgotPasswordHandler();\n} else {\n    // Display the forgot password form\n    ?>\n    <form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n        <label for=\"email\">Email:</label>\n        <input type=\"text\" id=\"email\" name=\"email\"><br><br>\n        <input type=\"submit\" name=\"submit\" value=\"Submit\">\n    </form>\n    <?php\n}\n?>\n```"]}
