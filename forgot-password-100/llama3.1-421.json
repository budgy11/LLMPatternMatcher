{"prompt": "Create a forgot password function using php", "llm_output": "Here is an example of how you can create a \"forgot password\" function in PHP:\n\n**Database Schema:**\n\nAssuming you have a database table called `users` with the following columns:\n```sql\nCREATE TABLE users (\n  id INT PRIMARY KEY,\n  email VARCHAR(255) NOT NULL UNIQUE,\n  password VARCHAR(255) NOT NULL,\n  reset_token VARCHAR(255),\n  reset_token_expires TIMESTAMP\n);\n```\n**PHP Code:**\n\nCreate a new PHP file called `forgot_password.php`:\n```php\n<?php\n\n// Configuration\n$db_host = 'localhost';\n$db_username = 'your_username';\n$db_password = 'your_password';\n$db_name = 'your_database';\n\n// Connect to database\n$conn = new mysqli($db_host, $db_username, $db_password, $db_name);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\nfunction generate_reset_token() {\n  // Generate a random token using uuid extension\n  return bin2hex(random_bytes(32));\n}\n\n// Check if form has been submitted\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n\n  // Retrieve input values\n  $email = $_POST['email'];\n\n  // Validate email address\n  if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {\n    die('Invalid email address');\n  }\n\n  // Query database to retrieve user record\n  $query = \"SELECT * FROM users WHERE email = '$email'\";\n  $result = $conn->query($query);\n\n  if ($result->num_rows == 1) {\n\n    // Retrieve user record\n    $user = $result->fetch_assoc();\n\n    // Generate reset token\n    $reset_token = generate_reset_token();\n    $reset_token_expires = date('Y-m-d H:i:s', strtotime('+1 hour'));\n\n    // Update database with new reset token and expiration time\n    $query = \"UPDATE users SET reset_token = '$reset_token', reset_token_expires = '$reset_token_expires' WHERE id = '$user[id]'\";\n    $result = $conn->query($query);\n\n    if ($result) {\n      // Send email with password reset link\n      $subject = 'Reset your password';\n      $message = \"\n        Dear user,\n\n        You have requested to reset your password. Click on the following link to reset it:\n\n        <a href='http://your-website.com/reset_password.php?email=$email&reset_token=$reset_token'>\n          Reset Password\n        </a>\n\n        Best regards,\n        Your Website Team\n      \";\n\n      // Send email using PHPMailer or another library\n      $mail = new PHPMailer();\n      $mail->isSMTP();\n      $mail->Host = 'smtp.example.com';\n      $mail->Port = 587;\n      $mail->SMTPAuth = true;\n      $mail->Username = 'your-smtp-username';\n      $mail->Password = 'your-smtp-password';\n      $mail->setFrom('no-reply@example.com', 'Your Website');\n      $mail->addAddress($email);\n      $mail->Subject = $subject;\n      $mail->Body = $message;\n\n      if (!$mail->send()) {\n        echo 'Error sending email: ' . $mail->ErrorInfo;\n      } else {\n        echo \"Email sent successfully!\";\n      }\n    } else {\n      die(\"Failed to update reset token\");\n    }\n\n  } else {\n    die('User not found');\n  }\n\n}\n\n// Close database connection\n$conn->close();\n\n?>\n```\n**Explanation:**\n\n1. The script first checks if the form has been submitted using `$_SERVER['REQUEST_METHOD'] == 'POST'`.\n2. It retrieves the input values (email address) from the form.\n3. It validates the email address using `filter_var()` function.\n4. It queries the database to retrieve the user record with the provided email address.\n5. If a user record is found, it generates a random reset token using `generate_reset_token()` function and updates the database with new reset token and expiration time.\n6. It sends an email with password reset link to the user's email address.\n\n**Reset Password Page:**\n\nCreate a new PHP file called `reset_password.php`:\n```php\n<?php\n\n// Configuration\n$db_host = 'localhost';\n$db_username = 'your_username';\n$db_password = 'your_password';\n$db_name = 'your_database';\n\n// Connect to database\n$conn = new mysqli($db_host, $db_username, $db_password, $db_name);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\nfunction validate_reset_token() {\n  // Validate reset token and expiration time\n  // ...\n}\n\n// Check if form has been submitted\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n\n  // Retrieve input values (reset token and new password)\n  $reset_token = $_POST['reset_token'];\n  $new_password = $_POST['new_password'];\n\n  // Validate reset token using `validate_reset_token()` function\n  if (!validate_reset_token($reset_token)) {\n    die('Invalid or expired reset token');\n  }\n\n  // Retrieve user record from database\n  $query = \"SELECT * FROM users WHERE reset_token = '$reset_token'\";\n  $result = $conn->query($query);\n\n  if ($result->num_rows == 1) {\n\n    // Update user password in database\n    $query = \"UPDATE users SET password = '$new_password' WHERE id = '$user[id]'\";\n    $result = $conn->query($query);\n\n    if ($result) {\n      echo 'Password updated successfully!';\n    } else {\n      die('Failed to update password');\n    }\n\n  } else {\n    die('Reset token not found');\n  }\n\n}\n\n// Close database connection\n$conn->close();\n\n?>\n```\n**Explanation:**\n\n1. The script first checks if the form has been submitted using `$_SERVER['REQUEST_METHOD'] == 'POST'`.\n2. It retrieves the input values (reset token and new password) from the form.\n3. It validates the reset token using `validate_reset_token()` function.\n4. If the reset token is valid, it retrieves the user record from the database based on the provided reset token.\n5. It updates the user password in the database with the provided new password.\n\nNote that this is a basic example and you should consider implementing additional security measures such as hashing and salting passwords, as well as protecting against SQL injection attacks.", "code_blocks": [null, "```php\n<?php\n\n// Configuration\n$db_host = 'localhost';\n$db_username = 'your_username';\n$db_password = 'your_password';\n$db_name = 'your_database';\n\n// Connect to database\n$conn = new mysqli($db_host, $db_username, $db_password, $db_name);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\nfunction generate_reset_token() {\n  // Generate a random token using uuid extension\n  return bin2hex(random_bytes(32));\n}\n\n// Check if form has been submitted\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n\n  // Retrieve input values\n  $email = $_POST['email'];\n\n  // Validate email address\n  if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {\n    die('Invalid email address');\n  }\n\n  // Query database to retrieve user record\n  $query = \"SELECT * FROM users WHERE email = '$email'\";\n  $result = $conn->query($query);\n\n  if ($result->num_rows == 1) {\n\n    // Retrieve user record\n    $user = $result->fetch_assoc();\n\n    // Generate reset token\n    $reset_token = generate_reset_token();\n    $reset_token_expires = date('Y-m-d H:i:s', strtotime('+1 hour'));\n\n    // Update database with new reset token and expiration time\n    $query = \"UPDATE users SET reset_token = '$reset_token', reset_token_expires = '$reset_token_expires' WHERE id = '$user[id]'\";\n    $result = $conn->query($query);\n\n    if ($result) {\n      // Send email with password reset link\n      $subject = 'Reset your password';\n      $message = \"\n        Dear user,\n\n        You have requested to reset your password. Click on the following link to reset it:\n\n        <a href='http://your-website.com/reset_password.php?email=$email&reset_token=$reset_token'>\n          Reset Password\n        </a>\n\n        Best regards,\n        Your Website Team\n      \";\n\n      // Send email using PHPMailer or another library\n      $mail = new PHPMailer();\n      $mail->isSMTP();\n      $mail->Host = 'smtp.example.com';\n      $mail->Port = 587;\n      $mail->SMTPAuth = true;\n      $mail->Username = 'your-smtp-username';\n      $mail->Password = 'your-smtp-password';\n      $mail->setFrom('no-reply@example.com', 'Your Website');\n      $mail->addAddress($email);\n      $mail->Subject = $subject;\n      $mail->Body = $message;\n\n      if (!$mail->send()) {\n        echo 'Error sending email: ' . $mail->ErrorInfo;\n      } else {\n        echo \"Email sent successfully!\";\n      }\n    } else {\n      die(\"Failed to update reset token\");\n    }\n\n  } else {\n    die('User not found');\n  }\n\n}\n\n// Close database connection\n$conn->close();\n\n?>\n```", "```php\n<?php\n\n// Configuration\n$db_host = 'localhost';\n$db_username = 'your_username';\n$db_password = 'your_password';\n$db_name = 'your_database';\n\n// Connect to database\n$conn = new mysqli($db_host, $db_username, $db_password, $db_name);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\nfunction validate_reset_token() {\n  // Validate reset token and expiration time\n  // ...\n}\n\n// Check if form has been submitted\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n\n  // Retrieve input values (reset token and new password)\n  $reset_token = $_POST['reset_token'];\n  $new_password = $_POST['new_password'];\n\n  // Validate reset token using `validate_reset_token()` function\n  if (!validate_reset_token($reset_token)) {\n    die('Invalid or expired reset token');\n  }\n\n  // Retrieve user record from database\n  $query = \"SELECT * FROM users WHERE reset_token = '$reset_token'\";\n  $result = $conn->query($query);\n\n  if ($result->num_rows == 1) {\n\n    // Update user password in database\n    $query = \"UPDATE users SET password = '$new_password' WHERE id = '$user[id]'\";\n    $result = $conn->query($query);\n\n    if ($result) {\n      echo 'Password updated successfully!';\n    } else {\n      die('Failed to update password');\n    }\n\n  } else {\n    die('Reset token not found');\n  }\n\n}\n\n// Close database connection\n$conn->close();\n\n?>\n```"]}
