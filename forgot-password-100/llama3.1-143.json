{"prompt": "Create a forgot password function using php", "llm_output": "Here's an example of how you can create a \"forgot password\" function in PHP:\n\n**Note:** This is a basic example and does not include any validation or security measures that would be recommended for a production application.\n\n**Database Setup:**\n```php\nCREATE TABLE users (\n  id INT AUTO_INCREMENT,\n  email VARCHAR(255),\n  password_hash VARCHAR(255)\n);\n\nCREATE TABLE reset_passwords (\n  id INT AUTO_INCREMENT,\n  user_id INT,\n  token VARCHAR(32),\n  expires_at DATETIME\n);\n```\n**PHP Code:**\n\n**`forgot-password.php`:**\n```php\n<?php\n\n// Configuration\n$secret_key = 'your-secret-key';\n$db_name = 'your-database-name';\n\n// Connect to database\n$conn = new mysqli($db['host'], $db['username'], $db['password'], $db_name);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\nfunction sendResetEmail($email, $token)\n{\n    // Your email sending library here\n    mail($email, 'Reset Password', 'Click this link to reset your password: http://your-website.com/reset-password/' . $token);\n}\n\nfunction generateToken()\n{\n    return bin2hex(random_bytes(16));\n}\n\nif ($_SERVER['REQUEST_METHOD'] === 'POST') {\n    $email = $_POST['email'];\n    $query = \"SELECT id FROM users WHERE email = '$email'\";\n    $result = $conn->query($query);\n\n    if ($result->num_rows > 0) {\n        while ($row = $result->fetch_assoc()) {\n            $user_id = $row['id'];\n\n            // Generate a token and store it in the database\n            $token = generateToken();\n            $insert_query = \"INSERT INTO reset_passwords (user_id, token) VALUES ('$user_id', '$token')\";\n            $conn->query($insert_query);\n\n            // Send the email with the token\n            sendResetEmail($email, $token);\n        }\n    } else {\n        echo 'No account found';\n    }\n\n} else {\n    ?>\n    <form method=\"post\">\n        <input type=\"text\" name=\"email\" placeholder=\"Your Email\">\n        <button type=\"submit\">Send Reset Link</button>\n    </form>\n    <?php\n}\n?>\n```\n**`reset-password.php`:**\n```php\n<?php\n\n// Configuration\n$secret_key = 'your-secret-key';\n$db_name = 'your-database-name';\n\n// Connect to database\n$conn = new mysqli($db['host'], $db['username'], $db['password'], $db_name);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\nfunction verifyToken($token)\n{\n    // Check if token is valid and not expired\n    $query = \"SELECT id FROM reset_passwords WHERE token = '$token'\";\n    $result = $conn->query($query);\n\n    if ($result->num_rows > 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\nfunction generateNewPassword()\n{\n    // Generate a new password\n    return bin2hex(random_bytes(16));\n}\n\nif ($_SERVER['REQUEST_METHOD'] === 'POST') {\n    $token = $_POST['token'];\n    $new_password = $_POST['password'];\n\n    if (verifyToken($token)) {\n        // Update the user's password\n        $query = \"UPDATE users SET password_hash = '$new_password' WHERE id = (SELECT user_id FROM reset_passwords WHERE token = '$token')\";\n        $conn->query($query);\n\n        // Delete the reset password entry\n        $query = \"DELETE FROM reset_passwords WHERE token = '$token'\";\n        $conn->query($query);\n    } else {\n        echo 'Invalid token';\n    }\n\n} else {\n    ?>\n    <form method=\"post\">\n        <input type=\"hidden\" name=\"token\" value=\"<?php echo $_GET['token']; ?>\">\n        <input type=\"password\" name=\"password\" placeholder=\"New Password\">\n        <button type=\"submit\">Reset Password</button>\n    </form>\n    <?php\n}\n?>\n```\n**How it works:**\n\n1. When the user clicks on the \"Forgot Password\" link, they are redirected to a form where they enter their email address.\n2. The script checks if an account with that email exists in the database. If it does, it generates a token and stores it in the `reset_passwords` table along with the user's ID.\n3. The script sends an email to the user with a link containing the token.\n4. When the user clicks on the link, they are redirected to the `reset-password.php` page where they can enter their new password.\n5. The script verifies the token and if it is valid, updates the user's password in the database.\n\n**Note:** This is a basic example and does not include any security measures such as token expiration or password hashing. In a production application, you would want to add these features to prevent abuse and ensure that passwords are stored securely.", "code_blocks": ["```php\nCREATE TABLE users (\n  id INT AUTO_INCREMENT,\n  email VARCHAR(255),\n  password_hash VARCHAR(255)\n);\n\nCREATE TABLE reset_passwords (\n  id INT AUTO_INCREMENT,\n  user_id INT,\n  token VARCHAR(32),\n  expires_at DATETIME\n);\n```", "```php\n<?php\n\n// Configuration\n$secret_key = 'your-secret-key';\n$db_name = 'your-database-name';\n\n// Connect to database\n$conn = new mysqli($db['host'], $db['username'], $db['password'], $db_name);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\nfunction sendResetEmail($email, $token)\n{\n    // Your email sending library here\n    mail($email, 'Reset Password', 'Click this link to reset your password: http://your-website.com/reset-password/' . $token);\n}\n\nfunction generateToken()\n{\n    return bin2hex(random_bytes(16));\n}\n\nif ($_SERVER['REQUEST_METHOD'] === 'POST') {\n    $email = $_POST['email'];\n    $query = \"SELECT id FROM users WHERE email = '$email'\";\n    $result = $conn->query($query);\n\n    if ($result->num_rows > 0) {\n        while ($row = $result->fetch_assoc()) {\n            $user_id = $row['id'];\n\n            // Generate a token and store it in the database\n            $token = generateToken();\n            $insert_query = \"INSERT INTO reset_passwords (user_id, token) VALUES ('$user_id', '$token')\";\n            $conn->query($insert_query);\n\n            // Send the email with the token\n            sendResetEmail($email, $token);\n        }\n    } else {\n        echo 'No account found';\n    }\n\n} else {\n    ?>\n    <form method=\"post\">\n        <input type=\"text\" name=\"email\" placeholder=\"Your Email\">\n        <button type=\"submit\">Send Reset Link</button>\n    </form>\n    <?php\n}\n?>\n```", "```php\n<?php\n\n// Configuration\n$secret_key = 'your-secret-key';\n$db_name = 'your-database-name';\n\n// Connect to database\n$conn = new mysqli($db['host'], $db['username'], $db['password'], $db_name);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\nfunction verifyToken($token)\n{\n    // Check if token is valid and not expired\n    $query = \"SELECT id FROM reset_passwords WHERE token = '$token'\";\n    $result = $conn->query($query);\n\n    if ($result->num_rows > 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\nfunction generateNewPassword()\n{\n    // Generate a new password\n    return bin2hex(random_bytes(16));\n}\n\nif ($_SERVER['REQUEST_METHOD'] === 'POST') {\n    $token = $_POST['token'];\n    $new_password = $_POST['password'];\n\n    if (verifyToken($token)) {\n        // Update the user's password\n        $query = \"UPDATE users SET password_hash = '$new_password' WHERE id = (SELECT user_id FROM reset_passwords WHERE token = '$token')\";\n        $conn->query($query);\n\n        // Delete the reset password entry\n        $query = \"DELETE FROM reset_passwords WHERE token = '$token'\";\n        $conn->query($query);\n    } else {\n        echo 'Invalid token';\n    }\n\n} else {\n    ?>\n    <form method=\"post\">\n        <input type=\"hidden\" name=\"token\" value=\"<?php echo $_GET['token']; ?>\">\n        <input type=\"password\" name=\"password\" placeholder=\"New Password\">\n        <button type=\"submit\">Reset Password</button>\n    </form>\n    <?php\n}\n?>\n```"]}
