{"prompt": "Create a forgot password function using php", "llm_output": "Here's an example of how you can create a \"Forgot Password\" function in PHP:\n\n**Step 1: Create a form for the user to enter their email address**\n\n```php\n<?php\n// Include configuration file (database connection, etc.)\nrequire_once 'config.php';\n\n// Check if form has been submitted\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    // Retrieve email address from form\n    $email = $_POST['email'];\n\n    // Check if email is valid\n    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {\n        echo 'Invalid email address';\n        exit;\n    }\n\n    // Check if user exists in database\n    $query = \"SELECT * FROM users WHERE email = '$email'\";\n    $result = mysqli_query($conn, $query);\n    $user = mysqli_fetch_assoc($result);\n\n    // If user exists, send password reset link to their email\n    if ($user) {\n        // Generate a random token for the password reset\n        $token = bin2hex(random_bytes(16));\n\n        // Update user's token in database\n        $query = \"UPDATE users SET token = '$token' WHERE email = '$email'\";\n        mysqli_query($conn, $query);\n\n        // Send email with password reset link\n        $subject = 'Reset your password';\n        $body = \"Click this link to reset your password: <a href='http://your-website.com/reset-password.php?email=$email&token=$token'>Reset Password</a>\";\n        $headers = 'From: no-reply@your-website.com' . \"\\r\\n\" .\n                   'Content-Type: text/html; charset=UTF-8';\n        mail($email, $subject, $body, $headers);\n\n        echo 'A password reset link has been sent to your email';\n    } else {\n        echo 'User does not exist';\n    }\n} else {\n?>\n<form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n    <input type=\"text\" name=\"email\" placeholder=\"Enter your email address\">\n    <button type=\"submit\">Send password reset link</button>\n</form>\n<?php\n}\n?>\n```\n\n**Step 2: Create a page to display the password reset form**\n\n```php\n<?php\n// Include configuration file (database connection, etc.)\nrequire_once 'config.php';\n\n// Check if token is valid\nif (!empty($_GET['token'])) {\n    $email = $_GET['email'];\n    $token = $_GET['token'];\n\n    // Retrieve user's data from database\n    $query = \"SELECT * FROM users WHERE email = '$email' AND token = '$token'\";\n    $result = mysqli_query($conn, $query);\n    $user = mysqli_fetch_assoc($result);\n\n    // If user exists and token is valid, display password reset form\n    if ($user) {\n        ?>\n<form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n    <input type=\"password\" name=\"new_password\" placeholder=\"Enter new password\">\n    <button type=\"submit\">Reset Password</button>\n    <?php\n} else {\n    // If token is invalid, display error message\n    echo 'Invalid or expired token';\n}\n?>\n```\n\n**Step 3: Update user's password in database**\n\n```php\n<?php\n// Include configuration file (database connection, etc.)\nrequire_once 'config.php';\n\n// Check if form has been submitted\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    // Retrieve email address and new password from form\n    $email = $_GET['email'];\n    $new_password = $_POST['new_password'];\n\n    // Update user's password in database\n    $query = \"UPDATE users SET password = '$new_password' WHERE email = '$email'\";\n    mysqli_query($conn, $query);\n\n    echo 'Password has been updated';\n}\n?>\n```\n\n**Security notes:**\n\n* Always validate and sanitize user input to prevent SQL injection attacks.\n* Use prepared statements or parameterized queries instead of string concatenation to avoid SQL injection vulnerabilities.\n* Hash passwords before storing them in the database using a strong hashing algorithm like bcrypt.\n* Store a random token in the user's session or database instead of their email address to protect against brute-force attacks.\n\n**Commit message:**\n\n\"Added 'Forgot Password' functionality with password reset link sent via email\"\n\nNote: This is just an example and you should adjust it according to your needs. Also, make sure to handle errors and exceptions properly in a production environment.", "code_blocks": ["```php\n<?php\n// Include configuration file (database connection, etc.)\nrequire_once 'config.php';\n\n// Check if form has been submitted\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    // Retrieve email address from form\n    $email = $_POST['email'];\n\n    // Check if email is valid\n    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {\n        echo 'Invalid email address';\n        exit;\n    }\n\n    // Check if user exists in database\n    $query = \"SELECT * FROM users WHERE email = '$email'\";\n    $result = mysqli_query($conn, $query);\n    $user = mysqli_fetch_assoc($result);\n\n    // If user exists, send password reset link to their email\n    if ($user) {\n        // Generate a random token for the password reset\n        $token = bin2hex(random_bytes(16));\n\n        // Update user's token in database\n        $query = \"UPDATE users SET token = '$token' WHERE email = '$email'\";\n        mysqli_query($conn, $query);\n\n        // Send email with password reset link\n        $subject = 'Reset your password';\n        $body = \"Click this link to reset your password: <a href='http://your-website.com/reset-password.php?email=$email&token=$token'>Reset Password</a>\";\n        $headers = 'From: no-reply@your-website.com' . \"\\r\\n\" .\n                   'Content-Type: text/html; charset=UTF-8';\n        mail($email, $subject, $body, $headers);\n\n        echo 'A password reset link has been sent to your email';\n    } else {\n        echo 'User does not exist';\n    }\n} else {\n?>\n<form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n    <input type=\"text\" name=\"email\" placeholder=\"Enter your email address\">\n    <button type=\"submit\">Send password reset link</button>\n</form>\n<?php\n}\n?>\n```", "```php\n<?php\n// Include configuration file (database connection, etc.)\nrequire_once 'config.php';\n\n// Check if token is valid\nif (!empty($_GET['token'])) {\n    $email = $_GET['email'];\n    $token = $_GET['token'];\n\n    // Retrieve user's data from database\n    $query = \"SELECT * FROM users WHERE email = '$email' AND token = '$token'\";\n    $result = mysqli_query($conn, $query);\n    $user = mysqli_fetch_assoc($result);\n\n    // If user exists and token is valid, display password reset form\n    if ($user) {\n        ?>\n<form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n    <input type=\"password\" name=\"new_password\" placeholder=\"Enter new password\">\n    <button type=\"submit\">Reset Password</button>\n    <?php\n} else {\n    // If token is invalid, display error message\n    echo 'Invalid or expired token';\n}\n?>\n```", "```php\n<?php\n// Include configuration file (database connection, etc.)\nrequire_once 'config.php';\n\n// Check if form has been submitted\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    // Retrieve email address and new password from form\n    $email = $_GET['email'];\n    $new_password = $_POST['new_password'];\n\n    // Update user's password in database\n    $query = \"UPDATE users SET password = '$new_password' WHERE email = '$email'\";\n    mysqli_query($conn, $query);\n\n    echo 'Password has been updated';\n}\n?>\n```"]}
