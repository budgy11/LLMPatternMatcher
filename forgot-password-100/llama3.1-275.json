{"prompt": "Create a forgot password function using php", "llm_output": "Here's an example of how to create a \"Forgot Password\" function in PHP:\n\n**Database Schema:**\n\nLet's assume we have the following database schema for users:\n```sql\nCREATE TABLE users (\n  id INT PRIMARY KEY,\n  username VARCHAR(255) NOT NULL,\n  password_hash VARCHAR(255) NOT NULL,\n  email VARCHAR(255) NOT NULL\n);\n```\n**PHP Code:**\n```php\n<?php\n\n// Configuration\n$db_host = 'localhost';\n$db_username = 'your_username';\n$db_password = 'your_password';\n$db_name = 'your_database';\n\n// Connect to database\n$conn = new mysqli($db_host, $db_username, $db_password, $db_name);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\nfunction forgotPassword($usernameOrEmail) {\n  // Check if username or email exists in the database\n  $query = \"SELECT * FROM users WHERE username = '$usernameOrEmail' OR email = '$usernameOrEmail'\";\n  $result = $conn->query($query);\n\n  if ($result->num_rows > 0) {\n    // Get user data from result set\n    while($row = $result->fetch_assoc()) {\n      $userId = $row['id'];\n      $userEmail = $row['email'];\n\n      // Generate a password reset token\n      $token = bin2hex(random_bytes(32));\n\n      // Update user's password reset token in database\n      $query = \"UPDATE users SET password_reset_token = '$token' WHERE id = '$userId'\";\n      $conn->query($query);\n\n      // Send email with password reset link to user\n      sendPasswordResetEmail($userEmail, $token);\n    }\n  } else {\n    echo \"Error: No account found with the provided username or email.\";\n  }\n\n  return true;\n}\n\nfunction sendPasswordResetEmail($email, $token) {\n  // Email settings\n  $from = 'your_email@example.com';\n  $subject = 'Password Reset Link';\n\n  // Create password reset link\n  $resetLink = \"http://example.com/reset-password.php?token=$token\";\n\n  // Set email headers and body\n  $headers = \"From: $from\\n\";\n  $headers .= \"MIME-Version: 1.0\\n\";\n  $headers .= \"Content-Type: text/html; charset=UTF-8\\n\";\n\n  $body = '<html><body>';\n  $body .= 'Hello!<br>';\n  $body .= 'To reset your password, click the following link:<br>';\n  $body .= '<a href=\"' . $resetLink . '\">Reset Password</a><br>';\n  $body .= '</body></html>';\n\n  // Send email using PHPMailer or mail()\n}\n\nfunction resetPassword($token) {\n  // Check if token is valid\n  $query = \"SELECT * FROM users WHERE password_reset_token = '$token'\";\n  $result = $conn->query($query);\n\n  if ($result->num_rows > 0) {\n    while($row = $result->fetch_assoc()) {\n      $userId = $row['id'];\n\n      // Get new password from user\n      $newPassword = $_POST['new_password'];\n      $confirmPassword = $_POST['confirm_password'];\n\n      // Validate new password and confirm password\n      if ($newPassword === $confirmPassword && strlen($newPassword) >= 8) {\n        // Update user's password in database\n        $query = \"UPDATE users SET password_hash = '$newPassword' WHERE id = '$userId'\";\n        $conn->query($query);\n\n        // Delete password reset token from database\n        $query = \"DELETE FROM users WHERE password_reset_token = '$token'\";\n        $conn->query($query);\n      } else {\n        echo \"Error: New passwords do not match or are too short.\";\n      }\n    }\n  } else {\n    echo \"Error: Invalid password reset token.\";\n  }\n\n  return true;\n}\n\n// Call forgotPassword function\nif (isset($_POST['forgot_password'])) {\n  forgotPassword($_POST['username_or_email']);\n}\n\n?>\n```\n**Explanation:**\n\nThis PHP code creates a basic \"Forgot Password\" system. When the user submits their username or email, it checks if there is an account associated with that information in the database. If there is, it generates a password reset token and updates the user's record in the database. The user then receives an email with a password reset link that contains the generated token.\n\nThe `resetPassword` function takes care of updating the user's actual password after they enter their new password on the \"Reset Password\" page. It checks if the provided new password matches the confirm password, and updates the user's password hash in the database accordingly.\n\n**Note:** This is a basic example and should not be used as-is for production environments. Make sure to implement proper security measures such as using prepared statements to prevent SQL injection attacks.", "code_blocks": [null, "```php\n<?php\n\n// Configuration\n$db_host = 'localhost';\n$db_username = 'your_username';\n$db_password = 'your_password';\n$db_name = 'your_database';\n\n// Connect to database\n$conn = new mysqli($db_host, $db_username, $db_password, $db_name);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\nfunction forgotPassword($usernameOrEmail) {\n  // Check if username or email exists in the database\n  $query = \"SELECT * FROM users WHERE username = '$usernameOrEmail' OR email = '$usernameOrEmail'\";\n  $result = $conn->query($query);\n\n  if ($result->num_rows > 0) {\n    // Get user data from result set\n    while($row = $result->fetch_assoc()) {\n      $userId = $row['id'];\n      $userEmail = $row['email'];\n\n      // Generate a password reset token\n      $token = bin2hex(random_bytes(32));\n\n      // Update user's password reset token in database\n      $query = \"UPDATE users SET password_reset_token = '$token' WHERE id = '$userId'\";\n      $conn->query($query);\n\n      // Send email with password reset link to user\n      sendPasswordResetEmail($userEmail, $token);\n    }\n  } else {\n    echo \"Error: No account found with the provided username or email.\";\n  }\n\n  return true;\n}\n\nfunction sendPasswordResetEmail($email, $token) {\n  // Email settings\n  $from = 'your_email@example.com';\n  $subject = 'Password Reset Link';\n\n  // Create password reset link\n  $resetLink = \"http://example.com/reset-password.php?token=$token\";\n\n  // Set email headers and body\n  $headers = \"From: $from\\n\";\n  $headers .= \"MIME-Version: 1.0\\n\";\n  $headers .= \"Content-Type: text/html; charset=UTF-8\\n\";\n\n  $body = '<html><body>';\n  $body .= 'Hello!<br>';\n  $body .= 'To reset your password, click the following link:<br>';\n  $body .= '<a href=\"' . $resetLink . '\">Reset Password</a><br>';\n  $body .= '</body></html>';\n\n  // Send email using PHPMailer or mail()\n}\n\nfunction resetPassword($token) {\n  // Check if token is valid\n  $query = \"SELECT * FROM users WHERE password_reset_token = '$token'\";\n  $result = $conn->query($query);\n\n  if ($result->num_rows > 0) {\n    while($row = $result->fetch_assoc()) {\n      $userId = $row['id'];\n\n      // Get new password from user\n      $newPassword = $_POST['new_password'];\n      $confirmPassword = $_POST['confirm_password'];\n\n      // Validate new password and confirm password\n      if ($newPassword === $confirmPassword && strlen($newPassword) >= 8) {\n        // Update user's password in database\n        $query = \"UPDATE users SET password_hash = '$newPassword' WHERE id = '$userId'\";\n        $conn->query($query);\n\n        // Delete password reset token from database\n        $query = \"DELETE FROM users WHERE password_reset_token = '$token'\";\n        $conn->query($query);\n      } else {\n        echo \"Error: New passwords do not match or are too short.\";\n      }\n    }\n  } else {\n    echo \"Error: Invalid password reset token.\";\n  }\n\n  return true;\n}\n\n// Call forgotPassword function\nif (isset($_POST['forgot_password'])) {\n  forgotPassword($_POST['username_or_email']);\n}\n\n?>\n```"]}
