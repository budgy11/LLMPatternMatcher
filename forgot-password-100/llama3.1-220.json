{"prompt": "Create a forgot password function using php", "llm_output": "Here is an example of a basic \"Forgot Password\" functionality in PHP. This script will send the user's email with a link to reset their password.\n\n**Note:** This is just an example, you should adjust it according to your database schema and security needs.\n\n### Database Setup\nFirst, we need to update our database table `users` (assuming it has a `username`, `email`, and `password` fields) to include a `reset_token` field. We'll use this token for password reset.\n\n```sql\nALTER TABLE users ADD COLUMN reset_token VARCHAR(255);\n```\n\n### PHP Code\n\n#### forgot_password.php\n```php\n<?php\n// Configuration\ndefine('SALT', 'your_salt_here'); // Replace with your own salt\ndefine('RESET_LINK_EXPIRE_MINUTES', 30); // Link expires in 30 minutes\n\n// Database connection\n$db_host = 'localhost';\n$db_username = 'your_username';\n$db_password = 'your_password';\n$db_name = 'your_database';\n\n$mysqli = new mysqli($db_host, $db_username, $db_password, $db_name);\nif ($mysqli->connect_errno) {\n    echo \"Failed to connect to MySQL: (\" . $mysqli->connect_errno . \") \" . $mysqli->connect_error;\n}\n\n// Check if form has been submitted\nif (isset($_POST['username'])) {\n    // Get the user data from database\n    $sql = 'SELECT email FROM users WHERE username = ?';\n    $stmt = $mysqli->prepare($sql);\n    $stmt->bind_param('s', $_POST['username']);\n    $stmt->execute();\n    $result = $stmt->get_result();\n    \n    if ($result->num_rows > 0) {\n        // Generate reset token\n        $token = bin2hex(random_bytes(32));\n        \n        // Update user with new reset token\n        $sql = 'UPDATE users SET reset_token = ? WHERE username = ?';\n        $stmt = $mysqli->prepare($sql);\n        $stmt->bind_param('ss', $token, $_POST['username']);\n        $stmt->execute();\n        \n        // Send email with password reset link\n        sendPasswordResetEmail($_POST['username'], $token);\n        \n        echo \"A password reset link has been sent to your email.\";\n    } else {\n        echo \"Username not found.\";\n    }\n}\n\n// Function to send password reset email\nfunction sendPasswordResetEmail($username, $token)\n{\n    // Email configuration\n    $email_config = [\n        'host' => 'smtp.example.com',\n        'port' => 587,\n        'user' => 'your_email@example.com',\n        'pass' => 'your_password',\n        'from_name' => 'Your Name',\n        'from_email' => 'your_email@example.com'\n    ];\n    \n    // Email content\n    $subject = \"Reset your password\";\n    $body = \"\n    <p>Hello $username,</p>\n    <p>Click the following link to reset your password: <a href='http://example.com/reset-password.php?token=$token'>Reset Password</a></p>\n    \";\n    \n    // Send email using PHPMailer\n    $mail = new PHPMailer(true);\n    $mail->isSMTP();\n    $mail->Host       = $email_config['host'];\n    $mail->Port       = $email_config['port'];\n    $mail->Username   = $email_config['user'];\n    $mail->Password   = $email_config['pass'];\n    $mail->setFrom($email_config['from_email'], $email_config['from_name']);\n    $mail->addAddress($_POST['username']);\n    $mail->Subject  = $subject;\n    $mail->Body     = $body;\n    \n    try {\n        if (!$mail->send()) {\n            echo 'Mailer Error: ' . $mail->ErrorInfo;\n        } else {\n            // Update token expiration time\n            $token_expires_at = date('Y-m-d H:i:s', strtotime('+' . RESET_LINK_EXPIRE_MINUTES . ' minutes'));\n            updateTokenExpiration($token, $token_expires_at);\n        }\n    } catch (Exception $e) {\n        echo 'Message could not be sent. Mailer Error: ', $mail->ErrorInfo;\n    }\n}\n\n// Function to update token expiration time\nfunction updateTokenExpiration($token, $expires_at)\n{\n    // Update the user's reset token with its expiration date\n    global $mysqli;\n    \n    $sql = \"UPDATE users SET reset_token = ?, expires_at = ? WHERE reset_token = ?\";\n    $stmt = $mysqli->prepare($sql);\n    $stmt->bind_param('sss', '', $expires_at, $token);\n    $stmt->execute();\n}\n\n// Close database connection\n$mysqli->close();\n\n?>\n```\n\n#### reset-password.php\n```php\n<?php\n// Configuration\ndefine('SALT', 'your_salt_here'); // Replace with your own salt\n\n// Database connection\n$db_host = 'localhost';\n$db_username = 'your_username';\n$db_password = 'your_password';\n$db_name = 'your_database';\n\n$mysqli = new mysqli($db_host, $db_username, $db_password, $db_name);\nif ($mysqli->connect_errno) {\n    echo \"Failed to connect to MySQL: (\" . $mysqli->connect_errno . \") \" . $mysqli->connect_error;\n}\n\n// Check if token has expired\nif (isset($_GET['token'])) {\n    // Get user data from database\n    $sql = 'SELECT expires_at FROM users WHERE reset_token = ?';\n    $stmt = $mysqli->prepare($sql);\n    $stmt->bind_param('s', $_GET['token']);\n    $stmt->execute();\n    $result = $stmt->get_result();\n    \n    if ($result->num_rows > 0) {\n        // Get the expiration date\n        $expiration_date = $result->fetch_assoc()['expires_at'];\n        \n        // Check if token has expired\n        if (strtotime($expiration_date) < strtotime('now')) {\n            echo \"Password reset link has expired.\";\n        } else {\n            // Update user data with new password\n            updateUserData($_GET['token']);\n        }\n    } else {\n        echo \"Invalid token.\";\n    }\n}\n\n// Function to update user data with new password\nfunction updateUserData($token)\n{\n    // Get the current timestamp\n    $current_timestamp = date('Y-m-d H:i:s');\n    \n    // Check if user has updated their data recently (to prevent brute-force attacks)\n    $sql = 'SELECT created_at FROM users WHERE reset_token = ?';\n    $stmt = $mysqli->prepare($sql);\n    $stmt->bind_param('s', $token);\n    $stmt->execute();\n    $result = $stmt->get_result();\n    \n    if ($result->num_rows > 0) {\n        // Get the created date\n        $created_date = $result->fetch_assoc()['created_at'];\n        \n        // Check if user has updated their data recently\n        if (strtotime($current_timestamp) - strtotime($created_date) < 60 * 15) { // 15 minutes\n            echo \"You have attempted to reset your password too quickly. Please try again later.\";\n        } else {\n            // Update the user's password\n            $new_password = $_POST['password'];\n            $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);\n            \n            $sql = 'UPDATE users SET password = ?, last_updated_at = ? WHERE reset_token = ?';\n            $stmt = $mysqli->prepare($sql);\n            $stmt->bind_param('sss', $hashed_password, $current_timestamp, $token);\n            $stmt->execute();\n            \n            echo \"Your password has been successfully updated.\";\n        }\n    } else {\n        echo \"Invalid token.\";\n    }\n}\n\n// Close database connection\n$mysqli->close();\n\n?>\n```\n\n### Notes\n\n*   This example uses `PHPMailer` to send emails. You need to download and install it.\n*   The `reset_token` is valid for 30 minutes. After that, you can remove the token from the user's account.\n*   Always use prepared statements when interacting with your database.\n*   Make sure to update the configuration variables (like `db_host`, `db_username`, etc.) according to your actual database setup.\n\nThis example should give you a basic idea of how to implement a \"Forgot Password\" functionality using PHP.", "code_blocks": [null, "```php\n<?php\n// Configuration\ndefine('SALT', 'your_salt_here'); // Replace with your own salt\ndefine('RESET_LINK_EXPIRE_MINUTES', 30); // Link expires in 30 minutes\n\n// Database connection\n$db_host = 'localhost';\n$db_username = 'your_username';\n$db_password = 'your_password';\n$db_name = 'your_database';\n\n$mysqli = new mysqli($db_host, $db_username, $db_password, $db_name);\nif ($mysqli->connect_errno) {\n    echo \"Failed to connect to MySQL: (\" . $mysqli->connect_errno . \") \" . $mysqli->connect_error;\n}\n\n// Check if form has been submitted\nif (isset($_POST['username'])) {\n    // Get the user data from database\n    $sql = 'SELECT email FROM users WHERE username = ?';\n    $stmt = $mysqli->prepare($sql);\n    $stmt->bind_param('s', $_POST['username']);\n    $stmt->execute();\n    $result = $stmt->get_result();\n    \n    if ($result->num_rows > 0) {\n        // Generate reset token\n        $token = bin2hex(random_bytes(32));\n        \n        // Update user with new reset token\n        $sql = 'UPDATE users SET reset_token = ? WHERE username = ?';\n        $stmt = $mysqli->prepare($sql);\n        $stmt->bind_param('ss', $token, $_POST['username']);\n        $stmt->execute();\n        \n        // Send email with password reset link\n        sendPasswordResetEmail($_POST['username'], $token);\n        \n        echo \"A password reset link has been sent to your email.\";\n    } else {\n        echo \"Username not found.\";\n    }\n}\n\n// Function to send password reset email\nfunction sendPasswordResetEmail($username, $token)\n{\n    // Email configuration\n    $email_config = [\n        'host' => 'smtp.example.com',\n        'port' => 587,\n        'user' => 'your_email@example.com',\n        'pass' => 'your_password',\n        'from_name' => 'Your Name',\n        'from_email' => 'your_email@example.com'\n    ];\n    \n    // Email content\n    $subject = \"Reset your password\";\n    $body = \"\n    <p>Hello $username,</p>\n    <p>Click the following link to reset your password: <a href='http://example.com/reset-password.php?token=$token'>Reset Password</a></p>\n    \";\n    \n    // Send email using PHPMailer\n    $mail = new PHPMailer(true);\n    $mail->isSMTP();\n    $mail->Host       = $email_config['host'];\n    $mail->Port       = $email_config['port'];\n    $mail->Username   = $email_config['user'];\n    $mail->Password   = $email_config['pass'];\n    $mail->setFrom($email_config['from_email'], $email_config['from_name']);\n    $mail->addAddress($_POST['username']);\n    $mail->Subject  = $subject;\n    $mail->Body     = $body;\n    \n    try {\n        if (!$mail->send()) {\n            echo 'Mailer Error: ' . $mail->ErrorInfo;\n        } else {\n            // Update token expiration time\n            $token_expires_at = date('Y-m-d H:i:s', strtotime('+' . RESET_LINK_EXPIRE_MINUTES . ' minutes'));\n            updateTokenExpiration($token, $token_expires_at);\n        }\n    } catch (Exception $e) {\n        echo 'Message could not be sent. Mailer Error: ', $mail->ErrorInfo;\n    }\n}\n\n// Function to update token expiration time\nfunction updateTokenExpiration($token, $expires_at)\n{\n    // Update the user's reset token with its expiration date\n    global $mysqli;\n    \n    $sql = \"UPDATE users SET reset_token = ?, expires_at = ? WHERE reset_token = ?\";\n    $stmt = $mysqli->prepare($sql);\n    $stmt->bind_param('sss', '', $expires_at, $token);\n    $stmt->execute();\n}\n\n// Close database connection\n$mysqli->close();\n\n?>\n```", "```php\n<?php\n// Configuration\ndefine('SALT', 'your_salt_here'); // Replace with your own salt\n\n// Database connection\n$db_host = 'localhost';\n$db_username = 'your_username';\n$db_password = 'your_password';\n$db_name = 'your_database';\n\n$mysqli = new mysqli($db_host, $db_username, $db_password, $db_name);\nif ($mysqli->connect_errno) {\n    echo \"Failed to connect to MySQL: (\" . $mysqli->connect_errno . \") \" . $mysqli->connect_error;\n}\n\n// Check if token has expired\nif (isset($_GET['token'])) {\n    // Get user data from database\n    $sql = 'SELECT expires_at FROM users WHERE reset_token = ?';\n    $stmt = $mysqli->prepare($sql);\n    $stmt->bind_param('s', $_GET['token']);\n    $stmt->execute();\n    $result = $stmt->get_result();\n    \n    if ($result->num_rows > 0) {\n        // Get the expiration date\n        $expiration_date = $result->fetch_assoc()['expires_at'];\n        \n        // Check if token has expired\n        if (strtotime($expiration_date) < strtotime('now')) {\n            echo \"Password reset link has expired.\";\n        } else {\n            // Update user data with new password\n            updateUserData($_GET['token']);\n        }\n    } else {\n        echo \"Invalid token.\";\n    }\n}\n\n// Function to update user data with new password\nfunction updateUserData($token)\n{\n    // Get the current timestamp\n    $current_timestamp = date('Y-m-d H:i:s');\n    \n    // Check if user has updated their data recently (to prevent brute-force attacks)\n    $sql = 'SELECT created_at FROM users WHERE reset_token = ?';\n    $stmt = $mysqli->prepare($sql);\n    $stmt->bind_param('s', $token);\n    $stmt->execute();\n    $result = $stmt->get_result();\n    \n    if ($result->num_rows > 0) {\n        // Get the created date\n        $created_date = $result->fetch_assoc()['created_at'];\n        \n        // Check if user has updated their data recently\n        if (strtotime($current_timestamp) - strtotime($created_date) < 60 * 15) { // 15 minutes\n            echo \"You have attempted to reset your password too quickly. Please try again later.\";\n        } else {\n            // Update the user's password\n            $new_password = $_POST['password'];\n            $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);\n            \n            $sql = 'UPDATE users SET password = ?, last_updated_at = ? WHERE reset_token = ?';\n            $stmt = $mysqli->prepare($sql);\n            $stmt->bind_param('sss', $hashed_password, $current_timestamp, $token);\n            $stmt->execute();\n            \n            echo \"Your password has been successfully updated.\";\n        }\n    } else {\n        echo \"Invalid token.\";\n    }\n}\n\n// Close database connection\n$mysqli->close();\n\n?>\n```"]}
