{"prompt": "Create a forgot password function using php", "llm_output": "**Forgot Password Function in PHP**\n=====================================\n\nThis example demonstrates how to create a forgot password function using PHP, MySQL, and email validation. We will use the `PHPMailer` library for sending emails.\n\n**Requirements:**\n\n* PHP 5.6+\n* MySQL 5.7+\n* PHPMailer library (install via Composer: `composer require phpmailer/phpmailer`)\n* Email service provider with SMTP support\n\n**Database Schema:**\n```sql\nCREATE TABLE users (\n    id INT AUTO_INCREMENT PRIMARY KEY,\n    email VARCHAR(255) NOT NULL UNIQUE,\n    password_hash VARCHAR(255) NOT NULL\n);\n```\n**Forgot Password Function:**\n\n`forgot_password.php`\n```php\n<?php\n\nrequire_once 'vendor/autoload.php'; // Load PHPMailer library\n\nuse PHPMailer\\PHPMailer\\PHPMailer;\nuse PHPMailer\\PHPMailer\\Exception;\n\n// Configuration\n$mail = new PHPMailer(true);\n\n$mail->isSMTP();\n$mail->Host = 'smtp.example.com';\n$mail->Port = 587;\n$mail->Username = 'your_email@example.com';\n$mail->Password = 'your_password';\n\n$mail->setFrom('your_email@example.com', 'Your Name');\n\n// Function to send password reset link via email\nfunction forgot_password($email) {\n    global $mail;\n\n    // Retrieve user data from database\n    $query = \"SELECT id, password_hash FROM users WHERE email = :email\";\n    $stmt = $db->prepare($query);\n    $stmt->bindParam(':email', $email);\n    $stmt->execute();\n\n    if ($user = $stmt->fetch()) {\n        // Generate new password and hash\n        $new_password = bin2hex(random_bytes(16));\n        $new_password_hash = password_hash($new_password, PASSWORD_DEFAULT);\n\n        // Update user data in database\n        $query = \"UPDATE users SET password_hash = :password_hash WHERE id = :id\";\n        $stmt = $db->prepare($query);\n        $stmt->bindParam(':password_hash', $new_password_hash);\n        $stmt->bindParam(':id', $user['id']);\n        $stmt->execute();\n\n        // Send email with password reset link\n        $link = 'http://example.com/reset-password.php?id=' . $user['id'] . '&token=' . hash('sha256', $new_password);\n        $mail->addAddress($email);\n        $mail->Subject = 'Password Reset Link';\n        $mail->Body = 'Click this link to reset your password: ' . $link;\n        $mail->send();\n\n        return $new_password; // Return new password\n    } else {\n        throw new Exception('User not found');\n    }\n}\n\n// Handle form submission\nif ($_SERVER['REQUEST_METHOD'] === 'POST') {\n    $email = $_POST['email'];\n    try {\n        $new_password = forgot_password($email);\n        echo \"A password reset link has been sent to your email.\";\n    } catch (Exception $e) {\n        echo \"Error: \" . $e->getMessage();\n    }\n} else {\n    // Display form\n    ?>\n    <form action=\"\" method=\"post\">\n        <label>Email:</label>\n        <input type=\"email\" name=\"email\" required>\n        <button type=\"submit\">Send Password Reset Link</button>\n    </form>\n    <?php\n}\n```\n**Reset Password Function:**\n\n`reset-password.php`\n```php\n<?php\n\n// Configuration\n$db = new PDO('mysql:host=localhost;dbname=your_database', 'your_username', 'your_password');\n\n// Retrieve user data from database using ID and token\n$query = \"SELECT * FROM users WHERE id = :id AND password_hash = :password_hash\";\n$stmt = $db->prepare($query);\n$stmt->bindParam(':id', $_GET['id']);\n$stmt->bindParam(':password_hash', hash('sha256', $_POST['token']));\n$stmt->execute();\n\nif ($user = $stmt->fetch()) {\n    // Update user data in database\n    $new_password = $_POST['new_password'];\n    $new_password_hash = password_hash($new_password, PASSWORD_DEFAULT);\n    $query = \"UPDATE users SET password_hash = :password_hash WHERE id = :id\";\n    $stmt = $db->prepare($query);\n    $stmt->bindParam(':password_hash', $new_password_hash);\n    $stmt->bindParam(':id', $user['id']);\n    $stmt->execute();\n\n    echo \"Your password has been updated successfully.\";\n} else {\n    throw new Exception('Invalid token');\n}\n?>\n<form action=\"\" method=\"post\">\n    <label>New Password:</label>\n    <input type=\"password\" name=\"new_password\" required>\n    <button type=\"submit\">Update Password</button>\n</form>\n```\n**Usage:**\n\n1. Send a POST request to `forgot_password.php` with the user's email as input.\n2. The system will send an email with a password reset link.\n3. Click on the link in the email to access `reset-password.php`.\n4. Enter your new password and submit the form.\n\nNote that this is a basic example and should be adapted to fit your specific use case. Additionally, make sure to secure your database credentials and follow best practices for password storage and encryption.", "code_blocks": [null, "```php\n<?php\n\nrequire_once 'vendor/autoload.php'; // Load PHPMailer library\n\nuse PHPMailer\\PHPMailer\\PHPMailer;\nuse PHPMailer\\PHPMailer\\Exception;\n\n// Configuration\n$mail = new PHPMailer(true);\n\n$mail->isSMTP();\n$mail->Host = 'smtp.example.com';\n$mail->Port = 587;\n$mail->Username = 'your_email@example.com';\n$mail->Password = 'your_password';\n\n$mail->setFrom('your_email@example.com', 'Your Name');\n\n// Function to send password reset link via email\nfunction forgot_password($email) {\n    global $mail;\n\n    // Retrieve user data from database\n    $query = \"SELECT id, password_hash FROM users WHERE email = :email\";\n    $stmt = $db->prepare($query);\n    $stmt->bindParam(':email', $email);\n    $stmt->execute();\n\n    if ($user = $stmt->fetch()) {\n        // Generate new password and hash\n        $new_password = bin2hex(random_bytes(16));\n        $new_password_hash = password_hash($new_password, PASSWORD_DEFAULT);\n\n        // Update user data in database\n        $query = \"UPDATE users SET password_hash = :password_hash WHERE id = :id\";\n        $stmt = $db->prepare($query);\n        $stmt->bindParam(':password_hash', $new_password_hash);\n        $stmt->bindParam(':id', $user['id']);\n        $stmt->execute();\n\n        // Send email with password reset link\n        $link = 'http://example.com/reset-password.php?id=' . $user['id'] . '&token=' . hash('sha256', $new_password);\n        $mail->addAddress($email);\n        $mail->Subject = 'Password Reset Link';\n        $mail->Body = 'Click this link to reset your password: ' . $link;\n        $mail->send();\n\n        return $new_password; // Return new password\n    } else {\n        throw new Exception('User not found');\n    }\n}\n\n// Handle form submission\nif ($_SERVER['REQUEST_METHOD'] === 'POST') {\n    $email = $_POST['email'];\n    try {\n        $new_password = forgot_password($email);\n        echo \"A password reset link has been sent to your email.\";\n    } catch (Exception $e) {\n        echo \"Error: \" . $e->getMessage();\n    }\n} else {\n    // Display form\n    ?>\n    <form action=\"\" method=\"post\">\n        <label>Email:</label>\n        <input type=\"email\" name=\"email\" required>\n        <button type=\"submit\">Send Password Reset Link</button>\n    </form>\n    <?php\n}\n```", "```php\n<?php\n\n// Configuration\n$db = new PDO('mysql:host=localhost;dbname=your_database', 'your_username', 'your_password');\n\n// Retrieve user data from database using ID and token\n$query = \"SELECT * FROM users WHERE id = :id AND password_hash = :password_hash\";\n$stmt = $db->prepare($query);\n$stmt->bindParam(':id', $_GET['id']);\n$stmt->bindParam(':password_hash', hash('sha256', $_POST['token']));\n$stmt->execute();\n\nif ($user = $stmt->fetch()) {\n    // Update user data in database\n    $new_password = $_POST['new_password'];\n    $new_password_hash = password_hash($new_password, PASSWORD_DEFAULT);\n    $query = \"UPDATE users SET password_hash = :password_hash WHERE id = :id\";\n    $stmt = $db->prepare($query);\n    $stmt->bindParam(':password_hash', $new_password_hash);\n    $stmt->bindParam(':id', $user['id']);\n    $stmt->execute();\n\n    echo \"Your password has been updated successfully.\";\n} else {\n    throw new Exception('Invalid token');\n}\n?>\n<form action=\"\" method=\"post\">\n    <label>New Password:</label>\n    <input type=\"password\" name=\"new_password\" required>\n    <button type=\"submit\">Update Password</button>\n</form>\n```"]}
