{"prompt": "Create a forgot password function using php", "llm_output": "Here is an example of how to create a \"Forgot Password\" function in PHP:\n\n**Note:** This is a basic example and you should consider implementing additional security measures, such as email verification and secure password storage.\n\n**Database Structure:**\n```sql\nCREATE TABLE users (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  username VARCHAR(255),\n  password_hash VARCHAR(255)\n);\n```\n**PHP Code:**\n\n**forgot_password.php**\n```php\n<?php\n\nrequire_once 'config.php'; // database connection settings\n\nif ($_SERVER['REQUEST_METHOD'] === 'POST') {\n    $username = $_POST['username'];\n    $email = $_POST['email'];\n\n    if (empty($username) || empty($email)) {\n        echo \"Please enter both username and email\";\n        exit;\n    }\n\n    try {\n        // Get user data from database\n        $stmt = $pdo->prepare(\"SELECT * FROM users WHERE username = :username AND email = :email\");\n        $stmt->execute([':username' => $username, ':email' => $email]);\n        $user = $stmt->fetch();\n\n        if ($user) {\n            // Generate a password reset token\n            $token = bin2hex(random_bytes(32));\n\n            // Store the token in the database (you can use a separate table for tokens)\n            $stmt = $pdo->prepare(\"INSERT INTO password_reset_tokens (user_id, token) VALUES (:user_id, :token)\");\n            $stmt->execute([':user_id' => $user['id'], ':token' => $token]);\n\n            // Send the reset link to the user's email\n            $subject = \"Password Reset Link\";\n            $body = \"<a href='\" . $_SERVER['HTTP_HOST'] . \"/reset_password.php?token=\" . $token . \"'>Click here to reset your password</a>\";\n            sendEmail($email, $subject, $body);\n\n            echo \"A password reset link has been sent to your email.\";\n        } else {\n            echo \"Username or email is incorrect\";\n        }\n    } catch (PDOException $e) {\n        echo \"Error: \" . $e->getMessage();\n    }\n} else {\n    // Display the form\n?>\n\n<form action=\"\" method=\"post\">\n  <label for=\"username\">Username:</label>\n  <input type=\"text\" id=\"username\" name=\"username\"><br><br>\n  <label for=\"email\">Email:</label>\n  <input type=\"email\" id=\"email\" name=\"email\"><br><br>\n  <button type=\"submit\">Send Password Reset Link</button>\n</form>\n\n<?php\n}\n```\n\n**reset_password.php**\n```php\n<?php\n\nrequire_once 'config.php'; // database connection settings\n\nif ($_SERVER['REQUEST_METHOD'] === 'POST') {\n    $token = $_POST['token'];\n    $newPassword = $_POST['newPassword'];\n\n    if (empty($token) || empty($newPassword)) {\n        echo \"Please enter both token and new password\";\n        exit;\n    }\n\n    try {\n        // Get user data from database using the token\n        $stmt = $pdo->prepare(\"SELECT * FROM users WHERE id IN (SELECT user_id FROM password_reset_tokens WHERE token = :token)\");\n        $stmt->execute([':token' => $token]);\n        $user = $stmt->fetch();\n\n        if ($user) {\n            // Update the user's password\n            $newPasswordHash = password_hash($newPassword, PASSWORD_DEFAULT);\n            $stmt = $pdo->prepare(\"UPDATE users SET password_hash = :password_hash WHERE id = :id\");\n            $stmt->execute([':password_hash' => $newPasswordHash, ':id' => $user['id']]);\n\n            // Delete the token from the database\n            $stmt = $pdo->prepare(\"DELETE FROM password_reset_tokens WHERE token = :token AND user_id = :user_id\");\n            $stmt->execute([':token' => $token, ':user_id' => $user['id']]);\n\n            echo \"Password updated successfully!\";\n        } else {\n            echo \"Invalid token\";\n        }\n    } catch (PDOException $e) {\n        echo \"Error: \" . $e->getMessage();\n    }\n} else {\n    // Display the form\n?>\n\n<form action=\"\" method=\"post\">\n  <label for=\"token\">Token:</label>\n  <input type=\"text\" id=\"token\" name=\"token\"><br><br>\n  <label for=\"newPassword\">New Password:</label>\n  <input type=\"password\" id=\"newPassword\" name=\"newPassword\"><br><br>\n  <button type=\"submit\">Reset Password</button>\n</form>\n\n<?php\n}\n```\n\n**config.php**\n```php\n// Database connection settings\n$pdo = new PDO('mysql:host=localhost;dbname=your_database', 'username', 'password');\n```\n\nThis example uses the `bin2hex` function to generate a random token, which is then stored in the database and sent to the user's email. The user can use this token to reset their password by submitting it on the `reset_password.php` page.\n\nNote that you should implement additional security measures, such as:\n\n* Email verification\n* Secure password storage (e.g., using a library like BCrypt)\n* Input validation and sanitization\n* Regularly updating dependencies and plugins\n\nThis is just a basic example to give you an idea of how to create a \"Forgot Password\" function in PHP.", "code_blocks": [null, "```php\n<?php\n\nrequire_once 'config.php'; // database connection settings\n\nif ($_SERVER['REQUEST_METHOD'] === 'POST') {\n    $username = $_POST['username'];\n    $email = $_POST['email'];\n\n    if (empty($username) || empty($email)) {\n        echo \"Please enter both username and email\";\n        exit;\n    }\n\n    try {\n        // Get user data from database\n        $stmt = $pdo->prepare(\"SELECT * FROM users WHERE username = :username AND email = :email\");\n        $stmt->execute([':username' => $username, ':email' => $email]);\n        $user = $stmt->fetch();\n\n        if ($user) {\n            // Generate a password reset token\n            $token = bin2hex(random_bytes(32));\n\n            // Store the token in the database (you can use a separate table for tokens)\n            $stmt = $pdo->prepare(\"INSERT INTO password_reset_tokens (user_id, token) VALUES (:user_id, :token)\");\n            $stmt->execute([':user_id' => $user['id'], ':token' => $token]);\n\n            // Send the reset link to the user's email\n            $subject = \"Password Reset Link\";\n            $body = \"<a href='\" . $_SERVER['HTTP_HOST'] . \"/reset_password.php?token=\" . $token . \"'>Click here to reset your password</a>\";\n            sendEmail($email, $subject, $body);\n\n            echo \"A password reset link has been sent to your email.\";\n        } else {\n            echo \"Username or email is incorrect\";\n        }\n    } catch (PDOException $e) {\n        echo \"Error: \" . $e->getMessage();\n    }\n} else {\n    // Display the form\n?>\n\n<form action=\"\" method=\"post\">\n  <label for=\"username\">Username:</label>\n  <input type=\"text\" id=\"username\" name=\"username\"><br><br>\n  <label for=\"email\">Email:</label>\n  <input type=\"email\" id=\"email\" name=\"email\"><br><br>\n  <button type=\"submit\">Send Password Reset Link</button>\n</form>\n\n<?php\n}\n```", "```php\n<?php\n\nrequire_once 'config.php'; // database connection settings\n\nif ($_SERVER['REQUEST_METHOD'] === 'POST') {\n    $token = $_POST['token'];\n    $newPassword = $_POST['newPassword'];\n\n    if (empty($token) || empty($newPassword)) {\n        echo \"Please enter both token and new password\";\n        exit;\n    }\n\n    try {\n        // Get user data from database using the token\n        $stmt = $pdo->prepare(\"SELECT * FROM users WHERE id IN (SELECT user_id FROM password_reset_tokens WHERE token = :token)\");\n        $stmt->execute([':token' => $token]);\n        $user = $stmt->fetch();\n\n        if ($user) {\n            // Update the user's password\n            $newPasswordHash = password_hash($newPassword, PASSWORD_DEFAULT);\n            $stmt = $pdo->prepare(\"UPDATE users SET password_hash = :password_hash WHERE id = :id\");\n            $stmt->execute([':password_hash' => $newPasswordHash, ':id' => $user['id']]);\n\n            // Delete the token from the database\n            $stmt = $pdo->prepare(\"DELETE FROM password_reset_tokens WHERE token = :token AND user_id = :user_id\");\n            $stmt->execute([':token' => $token, ':user_id' => $user['id']]);\n\n            echo \"Password updated successfully!\";\n        } else {\n            echo \"Invalid token\";\n        }\n    } catch (PDOException $e) {\n        echo \"Error: \" . $e->getMessage();\n    }\n} else {\n    // Display the form\n?>\n\n<form action=\"\" method=\"post\">\n  <label for=\"token\">Token:</label>\n  <input type=\"text\" id=\"token\" name=\"token\"><br><br>\n  <label for=\"newPassword\">New Password:</label>\n  <input type=\"password\" id=\"newPassword\" name=\"newPassword\"><br><br>\n  <button type=\"submit\">Reset Password</button>\n</form>\n\n<?php\n}\n```", "```php\n// Database connection settings\n$pdo = new PDO('mysql:host=localhost;dbname=your_database', 'username', 'password');\n```"]}
