{"prompt": "Create a forgot password function using php", "llm_output": "Here's an example of how you can implement a \"Forgot Password\" functionality in PHP:\n\n**Database Schema**\n\nFirst, let's assume we have a database schema with the following tables:\n\n```sql\nCREATE TABLE users (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  email VARCHAR(255) NOT NULL,\n  password VARCHAR(255) NOT NULL,\n  reset_token VARCHAR(255),\n  reset_expires TIMESTAMP DEFAULT CURRENT_TIMESTAMP + INTERVAL 30 MINUTE\n);\n```\n\n**PHP Code**\n\nCreate a PHP file (e.g., `forgot_password.php`) with the following code:\n\n```php\n<?php\n\n// Configuration\n$dbHost = 'localhost';\n$dbUsername = 'username';\n$dbPassword = 'password';\n$dbName = 'database_name';\n\n// Connect to database\n$conn = new mysqli($dbHost, $dbUsername, $dbPassword, $dbName);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\nfunction sendResetEmail($email, $resetToken) {\n    // You can use a library like PHPMailer or SwiftMailer to send emails\n    // For simplicity, we'll just print the email content\n    echo \"Subject: Reset Password\\n\";\n    echo \"To: $email\\n\";\n    echo \"Content-Type: text/plain; charset=utf-8\\n\";\n    echo \"\\n\";\n    echo \"Click here to reset your password: http://example.com/reset_password.php?token=$resetToken\\n\";\n}\n\nfunction generateResetToken() {\n    // Generate a random token\n    return bin2hex(random_bytes(32));\n}\n\nif (isset($_POST['email'])) {\n    $email = $_POST['email'];\n    \n    // Check if user exists in database\n    $query = \"SELECT * FROM users WHERE email = '$email'\";\n    $result = $conn->query($query);\n    \n    if ($result->num_rows > 0) {\n        // User found, generate reset token and send email\n        $resetToken = generateResetToken();\n        \n        // Update user record with new reset token\n        $updateQuery = \"UPDATE users SET reset_token = '$resetToken' WHERE email = '$email'\";\n        $conn->query($updateQuery);\n        \n        // Send reset email to user\n        sendResetEmail($email, $resetToken);\n    } else {\n        echo \"User not found!\";\n    }\n} else {\n    ?>\n    \n    <form action=\"\" method=\"post\">\n        Email: <input type=\"text\" name=\"email\"><br>\n        <input type=\"submit\" value=\"Send reset email\">\n    </form>\n    \n    <?php\n}\n\n?>\n```\n\n**How it Works**\n\n1. The user submits their email address to the `forgot_password.php` script.\n2. The script checks if a user with the submitted email exists in the database.\n3. If the user exists, a random reset token is generated and stored in the user's record.\n4. A password reset email is sent to the user containing a link to a `reset_password.php` script (not shown here).\n5. The user clicks on the link in the email, which sends them to the `reset_password.php` script with the reset token as a query parameter.\n\n**Security Considerations**\n\n* Always hash and store passwords securely using a library like PHPass or Argon2.\n* Use HTTPS to encrypt data transmitted between the client and server.\n* Limit the time window during which the reset token is valid (e.g., 30 minutes).\n* Verify the user's email address before sending the password reset link.", "code_blocks": [null, "```php\n<?php\n\n// Configuration\n$dbHost = 'localhost';\n$dbUsername = 'username';\n$dbPassword = 'password';\n$dbName = 'database_name';\n\n// Connect to database\n$conn = new mysqli($dbHost, $dbUsername, $dbPassword, $dbName);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\nfunction sendResetEmail($email, $resetToken) {\n    // You can use a library like PHPMailer or SwiftMailer to send emails\n    // For simplicity, we'll just print the email content\n    echo \"Subject: Reset Password\\n\";\n    echo \"To: $email\\n\";\n    echo \"Content-Type: text/plain; charset=utf-8\\n\";\n    echo \"\\n\";\n    echo \"Click here to reset your password: http://example.com/reset_password.php?token=$resetToken\\n\";\n}\n\nfunction generateResetToken() {\n    // Generate a random token\n    return bin2hex(random_bytes(32));\n}\n\nif (isset($_POST['email'])) {\n    $email = $_POST['email'];\n    \n    // Check if user exists in database\n    $query = \"SELECT * FROM users WHERE email = '$email'\";\n    $result = $conn->query($query);\n    \n    if ($result->num_rows > 0) {\n        // User found, generate reset token and send email\n        $resetToken = generateResetToken();\n        \n        // Update user record with new reset token\n        $updateQuery = \"UPDATE users SET reset_token = '$resetToken' WHERE email = '$email'\";\n        $conn->query($updateQuery);\n        \n        // Send reset email to user\n        sendResetEmail($email, $resetToken);\n    } else {\n        echo \"User not found!\";\n    }\n} else {\n    ?>\n    \n    <form action=\"\" method=\"post\">\n        Email: <input type=\"text\" name=\"email\"><br>\n        <input type=\"submit\" value=\"Send reset email\">\n    </form>\n    \n    <?php\n}\n\n?>\n```"]}
