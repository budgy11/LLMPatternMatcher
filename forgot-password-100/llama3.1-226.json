{"prompt": "Create a forgot password function using php", "llm_output": "**Forgot Password Function in PHP**\n=====================================\n\n### Overview\n\nThis is a basic implementation of a forgot password feature using PHP. It sends an email to the user with a link to reset their password.\n\n### Requirements\n\n* PHP 7.x\n* Email account configured on your server (e.g., Gmail, Outlook)\n* A database to store user information (e.g., MySQL)\n\n### Code\n\n**forgot_password.php**\n```php\n<?php\n\n// Configuration variables\ndefine('EMAIL_HOST', 'your_email_host');\ndefine('EMAIL_PORT', 587);\ndefine('EMAIL_USERNAME', 'your_email_username');\ndefine('EMAIL_PASSWORD', 'your_email_password');\n\n// Database connection\n$db = new mysqli(\"localhost\", \"username\", \"password\", \"database\");\n\n// Check if form was submitted\nif ($_SERVER['REQUEST_METHOD'] === 'POST') {\n    // Get user's email address from form submission\n    $email = $_POST['email'];\n\n    // Query database to retrieve user data\n    $query = \"SELECT * FROM users WHERE email = '$email'\";\n    $result = $db->query($query);\n\n    if ($result->num_rows > 0) {\n        // User exists, generate password reset link and send email\n        $row = $result->fetch_assoc();\n        $user_id = $row['id'];\n        $token = bin2hex(random_bytes(32));\n        $hashed_token = hash('sha256', $token);\n\n        // Update user's token in database\n        $query = \"UPDATE users SET password_reset_token = '$hashed_token' WHERE id = '$user_id'\";\n        $db->query($query);\n\n        // Send email with password reset link\n        send_password_reset_email($email, $token);\n    } else {\n        echo 'Email address not found.';\n    }\n} else {\n    // Display forgot password form\n    display_forgot_password_form();\n}\n\n// Function to send password reset email\nfunction send_password_reset_email($email, $token) {\n    // Create password reset link\n    $link = 'http://yourdomain.com/reset-password.php?token=' . $token;\n\n    // Set up email headers and body\n    $headers = \"From: your_email_username\\nContent-Type: text/plain\";\n    $body = \"Click on this link to reset your password: $link\";\n\n    // Send email using PHP's mail function\n    if (mail($email, 'Password Reset', $body, $headers)) {\n        echo 'Email sent successfully.';\n    } else {\n        echo 'Error sending email.';\n    }\n}\n\n// Function to display forgot password form\nfunction display_forgot_password_form() {\n    ?>\n    <form action=\"\" method=\"post\">\n        <label for=\"email\">Email address:</label>\n        <input type=\"text\" id=\"email\" name=\"email\"><br><br>\n        <button type=\"submit\">Send reset link</button>\n    </form>\n    <?php\n}\n\n?>\n```\n\n**reset-password.php**\n```php\n<?php\n\n// Configuration variables (same as forgot_password.php)\ndefine('EMAIL_HOST', 'your_email_host');\ndefine('EMAIL_PORT', 587);\ndefine('EMAIL_USERNAME', 'your_email_username');\ndefine('EMAIL_PASSWORD', 'your_email_password');\n\n// Database connection (same as forgot_password.php)\n$db = new mysqli(\"localhost\", \"username\", \"password\", \"database\");\n\n// Check if token is valid\nif ($_GET['token']) {\n    $hashed_token = $_GET['token'];\n    $query = \"SELECT * FROM users WHERE password_reset_token = '$hashed_token'\";\n    $result = $db->query($query);\n\n    if ($result->num_rows > 0) {\n        // Token is valid, display reset form\n        display_reset_password_form();\n    } else {\n        echo 'Invalid token.';\n    }\n} else {\n    echo 'No token provided.';\n}\n\n// Function to display reset password form\nfunction display_reset_password_form() {\n    ?>\n    <form action=\"\" method=\"post\">\n        <label for=\"password\">New password:</label>\n        <input type=\"text\" id=\"password\" name=\"password\"><br><br>\n        <button type=\"submit\">Reset password</button>\n    </form>\n    <?php\n}\n\n// Check if form was submitted\nif ($_SERVER['REQUEST_METHOD'] === 'POST') {\n    // Get new password from form submission\n    $new_password = $_POST['password'];\n\n    // Query database to update user's password\n    $query = \"UPDATE users SET password = '$new_password', password_reset_token = '' WHERE id = (SELECT id FROM users WHERE password_reset_token = '$_GET[token]')\";\n    $db->query($query);\n\n    echo 'Password reset successfully.';\n}\n\n?>\n```\n\n### How it works\n\n1. The user visits the forgot password page and submits their email address.\n2. The script checks if a user with that email exists in the database, and if so, generates a token (a random string) and updates the user's record in the database with this token.\n3. An email is sent to the user with a link to reset their password, which includes the generated token.\n4. When the user clicks on the link, they are taken to the reset password page, where they can enter a new password.\n5. If the token is valid (i.e., matches the one in the database), the script updates the user's password and removes the token from their record.\n\nNote: This implementation assumes that you have email sending capabilities set up on your server. You may need to modify the `send_password_reset_email` function to work with your specific email configuration.", "code_blocks": ["```php\n<?php\n\n// Configuration variables\ndefine('EMAIL_HOST', 'your_email_host');\ndefine('EMAIL_PORT', 587);\ndefine('EMAIL_USERNAME', 'your_email_username');\ndefine('EMAIL_PASSWORD', 'your_email_password');\n\n// Database connection\n$db = new mysqli(\"localhost\", \"username\", \"password\", \"database\");\n\n// Check if form was submitted\nif ($_SERVER['REQUEST_METHOD'] === 'POST') {\n    // Get user's email address from form submission\n    $email = $_POST['email'];\n\n    // Query database to retrieve user data\n    $query = \"SELECT * FROM users WHERE email = '$email'\";\n    $result = $db->query($query);\n\n    if ($result->num_rows > 0) {\n        // User exists, generate password reset link and send email\n        $row = $result->fetch_assoc();\n        $user_id = $row['id'];\n        $token = bin2hex(random_bytes(32));\n        $hashed_token = hash('sha256', $token);\n\n        // Update user's token in database\n        $query = \"UPDATE users SET password_reset_token = '$hashed_token' WHERE id = '$user_id'\";\n        $db->query($query);\n\n        // Send email with password reset link\n        send_password_reset_email($email, $token);\n    } else {\n        echo 'Email address not found.';\n    }\n} else {\n    // Display forgot password form\n    display_forgot_password_form();\n}\n\n// Function to send password reset email\nfunction send_password_reset_email($email, $token) {\n    // Create password reset link\n    $link = 'http://yourdomain.com/reset-password.php?token=' . $token;\n\n    // Set up email headers and body\n    $headers = \"From: your_email_username\\nContent-Type: text/plain\";\n    $body = \"Click on this link to reset your password: $link\";\n\n    // Send email using PHP's mail function\n    if (mail($email, 'Password Reset', $body, $headers)) {\n        echo 'Email sent successfully.';\n    } else {\n        echo 'Error sending email.';\n    }\n}\n\n// Function to display forgot password form\nfunction display_forgot_password_form() {\n    ?>\n    <form action=\"\" method=\"post\">\n        <label for=\"email\">Email address:</label>\n        <input type=\"text\" id=\"email\" name=\"email\"><br><br>\n        <button type=\"submit\">Send reset link</button>\n    </form>\n    <?php\n}\n\n?>\n```", "```php\n<?php\n\n// Configuration variables (same as forgot_password.php)\ndefine('EMAIL_HOST', 'your_email_host');\ndefine('EMAIL_PORT', 587);\ndefine('EMAIL_USERNAME', 'your_email_username');\ndefine('EMAIL_PASSWORD', 'your_email_password');\n\n// Database connection (same as forgot_password.php)\n$db = new mysqli(\"localhost\", \"username\", \"password\", \"database\");\n\n// Check if token is valid\nif ($_GET['token']) {\n    $hashed_token = $_GET['token'];\n    $query = \"SELECT * FROM users WHERE password_reset_token = '$hashed_token'\";\n    $result = $db->query($query);\n\n    if ($result->num_rows > 0) {\n        // Token is valid, display reset form\n        display_reset_password_form();\n    } else {\n        echo 'Invalid token.';\n    }\n} else {\n    echo 'No token provided.';\n}\n\n// Function to display reset password form\nfunction display_reset_password_form() {\n    ?>\n    <form action=\"\" method=\"post\">\n        <label for=\"password\">New password:</label>\n        <input type=\"text\" id=\"password\" name=\"password\"><br><br>\n        <button type=\"submit\">Reset password</button>\n    </form>\n    <?php\n}\n\n// Check if form was submitted\nif ($_SERVER['REQUEST_METHOD'] === 'POST') {\n    // Get new password from form submission\n    $new_password = $_POST['password'];\n\n    // Query database to update user's password\n    $query = \"UPDATE users SET password = '$new_password', password_reset_token = '' WHERE id = (SELECT id FROM users WHERE password_reset_token = '$_GET[token]')\";\n    $db->query($query);\n\n    echo 'Password reset successfully.';\n}\n\n?>\n```"]}
