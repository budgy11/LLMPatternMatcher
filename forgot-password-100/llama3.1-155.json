{"prompt": "Create a forgot password function using php", "llm_output": "**Forgot Password Function in PHP**\n=====================================\n\nThis example demonstrates a simple \"forgot password\" functionality, where the user can submit their email address to receive a password reset link. The code uses PHP's `mail()` function to send an email with a temporary password.\n\n**Database Schema**\n-------------------\n\nAssuming you have a `users` table in your database with the following structure:\n```sql\nCREATE TABLE users (\n  id INT PRIMARY KEY,\n  username VARCHAR(255),\n  password_hash VARCHAR(255),\n  email VARCHAR(255)\n);\n```\n**PHP Code**\n-------------\n\nCreate a new file called `forgot_password.php` and add the following code:\n```php\n<?php\n\n// Configuration\ndefine('RECOVERY_PASSWORD_LINK', 'http://example.com/recover-password');\ndefine('EMAIL_ADDRESS', 'your-email@example.com');\n\n// Connect to database\n$db = mysqli_connect('localhost', 'username', 'password', 'database_name');\n\nif (!$db) {\n    die('Connection failed: ' . mysqli_connect_error());\n}\n\n// Process form submission\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    $email = $_POST['email'];\n\n    // Query to retrieve user data (replace with your actual query)\n    $query = \"SELECT * FROM users WHERE email = '$email'\";\n    $result = mysqli_query($db, $query);\n\n    if ($result->num_rows > 0) {\n        // User exists, generate a new password\n        $new_password = str_random(8);\n        update_password($new_password, $email);\n        \n        // Send recovery link via email\n        send_recovery_link_email($email, $new_password);\n    } else {\n        echo 'Email not found';\n    }\n}\n\n// Helper functions\n\nfunction generate_reset_link() {\n    return RECOVERY_PASSWORD_LINK . '?token=' . urlencode(bin2hex(random_bytes(16)));\n}\n\nfunction update_password($new_password, $email) {\n    // Update user's password (replace with your actual query)\n    $query = \"UPDATE users SET password_hash = '$new_password' WHERE email = '$email'\";\n    mysqli_query($db, $query);\n}\n\nfunction send_recovery_link_email($email, $new_password) {\n    $subject = 'Password Recovery Link';\n    $body = 'Click here to reset your password: ' . generate_reset_link();\n    mail($email, $subject, $body, 'From: ' . EMAIL_ADDRESS);\n}\n\n?>\n```\n**Explanation**\n\n1. The script connects to the database using `mysqli_connect()`.\n2. It checks if the form has been submitted (via `$_SERVER['REQUEST_METHOD']`).\n3. If the form is submitted, it queries the database to retrieve the user's data based on their email address.\n4. If a matching user is found, it generates a new password using `str_random()`.\n5. It updates the user's password in the database (replace with your actual query).\n6. Finally, it sends an email with a recovery link using `mail()`.\n\n**HTML Form**\n-------------\n\nCreate a basic HTML form to accept the user's email address:\n```html\n<form action=\"forgot_password.php\" method=\"post\">\n    <input type=\"email\" name=\"email\" placeholder=\"Email Address\" required>\n    <button type=\"submit\">Send Recovery Link</button>\n</form>\n```\n**Security Notes**\n\n* This is a simplified example. In production, you should consider implementing additional security measures such as:\n\t+ Hashing and salting passwords\n\t+ Email verification\n\t+ Token-based authentication for password reset\n\t+ Secure password storage (e.g., using bcrypt or PBKDF2)\n* Always use prepared statements to prevent SQL injection attacks.\n* Make sure to update the `RECOVERY_PASSWORD_LINK` constant with your actual URL.\n\nRemember, this is a basic example and you should adapt it to fit your specific needs.", "code_blocks": [null, "```php\n<?php\n\n// Configuration\ndefine('RECOVERY_PASSWORD_LINK', 'http://example.com/recover-password');\ndefine('EMAIL_ADDRESS', 'your-email@example.com');\n\n// Connect to database\n$db = mysqli_connect('localhost', 'username', 'password', 'database_name');\n\nif (!$db) {\n    die('Connection failed: ' . mysqli_connect_error());\n}\n\n// Process form submission\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    $email = $_POST['email'];\n\n    // Query to retrieve user data (replace with your actual query)\n    $query = \"SELECT * FROM users WHERE email = '$email'\";\n    $result = mysqli_query($db, $query);\n\n    if ($result->num_rows > 0) {\n        // User exists, generate a new password\n        $new_password = str_random(8);\n        update_password($new_password, $email);\n        \n        // Send recovery link via email\n        send_recovery_link_email($email, $new_password);\n    } else {\n        echo 'Email not found';\n    }\n}\n\n// Helper functions\n\nfunction generate_reset_link() {\n    return RECOVERY_PASSWORD_LINK . '?token=' . urlencode(bin2hex(random_bytes(16)));\n}\n\nfunction update_password($new_password, $email) {\n    // Update user's password (replace with your actual query)\n    $query = \"UPDATE users SET password_hash = '$new_password' WHERE email = '$email'\";\n    mysqli_query($db, $query);\n}\n\nfunction send_recovery_link_email($email, $new_password) {\n    $subject = 'Password Recovery Link';\n    $body = 'Click here to reset your password: ' . generate_reset_link();\n    mail($email, $subject, $body, 'From: ' . EMAIL_ADDRESS);\n}\n\n?>\n```", null]}
