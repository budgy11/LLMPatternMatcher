{"prompt": "Create a forgot password function using php", "llm_output": "Here is an example of how to create a \"forgot password\" function in PHP. This example uses a simple database table to store user information, but you would replace this with your own database schema and connection code.\n\n**Note:** Before implementing this code, ensure that it is secure by validating and sanitizing all inputs.\n\n**Database Schema:**\n\n```sql\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    email VARCHAR(255) NOT NULL UNIQUE,\n    password_hash VARCHAR(255) NOT NULL\n);\n```\n\n**PHP Code (forgot_password.php):**\n```php\n<?php\n\n// Include database connection settings\nrequire_once 'db_config.php';\n\n// Set error reporting level\nerror_reporting(E_ALL);\n\n// Set password reset time limit to 1 hour\n$reset_time_limit = 3600;\n\nfunction send_reset_email($email) {\n    // Send email with password reset link\n    $to      = $email;\n    $subject = 'Password Reset';\n    $message = '\n        <html>\n            <body>\n                <p>Dear User, please click on the following link to reset your password.</p>\n                <a href=\"' . $_SERVER['HTTP_HOST'] . '/reset_password.php?token=' . generate_reset_token($email) . '\">Reset Password</a>\n            </body>\n        </html>\n    ';\n\n    // Send email using PHPMailer or mail() function\n    $headers = 'From: no-reply@example.com' . \"\\r\\n\" .\n               'Content-type: text/html; charset=UTF-8';\n    mail($to, $subject, $message, $headers);\n}\n\nfunction generate_reset_token($email) {\n    // Generate random token for password reset\n    return md5(uniqid(mt_rand(), true)) . md5(uniqid(mt_rand(), true));\n}\n\nfunction verify_reset_token($token, $email) {\n    // Verify password reset token and email\n    global $db;\n    $query = \"SELECT * FROM users WHERE email = '$email' AND password_reset_token = '$token'\";\n    $result = mysqli_query($db, $query);\n    return mysqli_num_rows($result) > 0;\n}\n\nfunction update_password($token, $new_password) {\n    // Update user's password using the reset token\n    global $db;\n    $query = \"UPDATE users SET password_hash = SHA1('$new_password'), password_reset_token = '' WHERE password_reset_token = '$token'\";\n    mysqli_query($db, $query);\n}\n\nif (isset($_POST['submit'])) {\n    // Validate form input\n    if (!empty($_POST['email']) && filter_var($_POST['email'], FILTER_VALIDATE_EMAIL)) {\n        send_reset_email($_POST['email']);\n        echo 'Email sent with password reset link';\n    } else {\n        echo 'Invalid email address';\n    }\n} elseif (isset($_GET['token'])) {\n    // Verify reset token and display password update form\n    $reset_token = $_GET['token'];\n    $email = get_reset_email_from_token($reset_token);\n    if ($email !== false && verify_reset_token($reset_token, $email)) {\n        echo '<h2>Reset Password</h2>';\n        echo '<form action=\"update_password.php\" method=\"post\">';\n        echo '<input type=\"hidden\" name=\"token\" value=\"' . $reset_token . '\">';\n        echo '<label for=\"new_password\">New Password:</label><br>';\n        echo '<input type=\"password\" id=\"new_password\" name=\"new_password\"><br>';\n        echo '<button type=\"submit\" name=\"update_password\">Update Password</button>';\n        echo '</form>';\n    } else {\n        echo 'Invalid reset token or email';\n    }\n}\n\nfunction get_reset_email_from_token($token) {\n    // Get user's email from the reset token\n    global $db;\n    $query = \"SELECT email FROM users WHERE password_reset_token = '$token'\";\n    $result = mysqli_query($db, $query);\n    return mysqli_fetch_assoc($result)['email'];\n}\n\n?>\n```\n\n**PHP Code (update_password.php):**\n```php\n<?php\n\nrequire_once 'forgot_password.php';\n\nif (isset($_POST['update_password'])) {\n    // Update user's password using the reset token\n    update_password($_POST['token'], $_POST['new_password']);\n    echo 'Password updated successfully!';\n}\n\n?>\n```\n\n**Explanation:**\n\n1.  **send_reset_email() function:** Sends an email with a password reset link to the specified email address.\n2.  **generate_reset_token() function:** Generates a random token for the password reset process using MD5 and uniqid.\n3.  **verify_reset_token() function:** Verifies the password reset token by checking if it matches the one stored in the database for the given email.\n4.  **update_password() function:** Updates the user's password in the database using the provided new password and reset token.\n5.  **get_reset_email_from_token() function:** Retrieves the user's email from the database based on the provided reset token.\n\n**Use Cases:**\n\n1.  When a user requests to reset their password, they will be sent an email with a password reset link.\n2.  The user can then click on this link to update their password using the `update_password.php` file.\n3.  After updating the password, the reset token is removed from the database to prevent further unauthorized access.\n\n**Security Considerations:**\n\n1.  **Input Validation:** Always validate and sanitize user input to prevent SQL injection and other security vulnerabilities.\n2.  **Password Storage:** Store passwords securely using a library like PHPass or Password Hashing.\n3.  **Reset Token Expiration:** Set an expiration time for the reset token (e.g., 1 hour) to prevent brute-force attacks.\n\nThis example demonstrates how to create a basic \"forgot password\" functionality with security features in mind. However, consider implementing additional security measures based on your specific application requirements.", "code_blocks": [null, "```php\n<?php\n\n// Include database connection settings\nrequire_once 'db_config.php';\n\n// Set error reporting level\nerror_reporting(E_ALL);\n\n// Set password reset time limit to 1 hour\n$reset_time_limit = 3600;\n\nfunction send_reset_email($email) {\n    // Send email with password reset link\n    $to      = $email;\n    $subject = 'Password Reset';\n    $message = '\n        <html>\n            <body>\n                <p>Dear User, please click on the following link to reset your password.</p>\n                <a href=\"' . $_SERVER['HTTP_HOST'] . '/reset_password.php?token=' . generate_reset_token($email) . '\">Reset Password</a>\n            </body>\n        </html>\n    ';\n\n    // Send email using PHPMailer or mail() function\n    $headers = 'From: no-reply@example.com' . \"\\r\\n\" .\n               'Content-type: text/html; charset=UTF-8';\n    mail($to, $subject, $message, $headers);\n}\n\nfunction generate_reset_token($email) {\n    // Generate random token for password reset\n    return md5(uniqid(mt_rand(), true)) . md5(uniqid(mt_rand(), true));\n}\n\nfunction verify_reset_token($token, $email) {\n    // Verify password reset token and email\n    global $db;\n    $query = \"SELECT * FROM users WHERE email = '$email' AND password_reset_token = '$token'\";\n    $result = mysqli_query($db, $query);\n    return mysqli_num_rows($result) > 0;\n}\n\nfunction update_password($token, $new_password) {\n    // Update user's password using the reset token\n    global $db;\n    $query = \"UPDATE users SET password_hash = SHA1('$new_password'), password_reset_token = '' WHERE password_reset_token = '$token'\";\n    mysqli_query($db, $query);\n}\n\nif (isset($_POST['submit'])) {\n    // Validate form input\n    if (!empty($_POST['email']) && filter_var($_POST['email'], FILTER_VALIDATE_EMAIL)) {\n        send_reset_email($_POST['email']);\n        echo 'Email sent with password reset link';\n    } else {\n        echo 'Invalid email address';\n    }\n} elseif (isset($_GET['token'])) {\n    // Verify reset token and display password update form\n    $reset_token = $_GET['token'];\n    $email = get_reset_email_from_token($reset_token);\n    if ($email !== false && verify_reset_token($reset_token, $email)) {\n        echo '<h2>Reset Password</h2>';\n        echo '<form action=\"update_password.php\" method=\"post\">';\n        echo '<input type=\"hidden\" name=\"token\" value=\"' . $reset_token . '\">';\n        echo '<label for=\"new_password\">New Password:</label><br>';\n        echo '<input type=\"password\" id=\"new_password\" name=\"new_password\"><br>';\n        echo '<button type=\"submit\" name=\"update_password\">Update Password</button>';\n        echo '</form>';\n    } else {\n        echo 'Invalid reset token or email';\n    }\n}\n\nfunction get_reset_email_from_token($token) {\n    // Get user's email from the reset token\n    global $db;\n    $query = \"SELECT email FROM users WHERE password_reset_token = '$token'\";\n    $result = mysqli_query($db, $query);\n    return mysqli_fetch_assoc($result)['email'];\n}\n\n?>\n```", "```php\n<?php\n\nrequire_once 'forgot_password.php';\n\nif (isset($_POST['update_password'])) {\n    // Update user's password using the reset token\n    update_password($_POST['token'], $_POST['new_password']);\n    echo 'Password updated successfully!';\n}\n\n?>\n```"]}
