{"prompt": "Create a forgot password function using php", "llm_output": "**Forgot Password Function in PHP**\n=====================================\n\nThis is an example of a simple \"forgot password\" function that uses PHP and a database to send a reset link to the user's email. Please note that this is just a basic example and you should consider implementing additional security measures, such as:\n\n* Email verification\n* Secure password hashing (e.g., bcrypt)\n* Rate limiting for reset requests\n\n**Database Setup**\n-----------------\n\nFor this example, we'll assume you have a MySQL database with the following table:\n\n```sql\nCREATE TABLE users (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  email VARCHAR(255) UNIQUE NOT NULL,\n  password VARCHAR(255) NOT NULL,\n  reset_token VARCHAR(255),\n  reset_expires TIMESTAMP DEFAULT CURRENT_TIMESTAMP + INTERVAL 1 HOUR\n);\n```\n\n**PHP Code**\n-------------\n\n### **forgot_password.php**\n\n```php\n<?php\n\n// Configuration\ndefine('DB_HOST', 'your_host');\ndefine('DB_USER', 'your_user');\ndefine('DB_PASSWORD', 'your_password');\ndefine('DB_NAME', 'your_database');\n\n// Connect to database\n$conn = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);\n\nif ($conn->connect_error) {\n  die(\"Connection failed: \" . $conn->connect_error);\n}\n\nfunction sendResetLink($email) {\n  // Generate a random token\n  $token = bin2hex(random_bytes(32));\n\n  // Update user's reset token and expiration time\n  $sql = \"UPDATE users SET reset_token = '$token', reset_expires = NOW() + INTERVAL 1 HOUR WHERE email = '$email'\";\n  if ($conn->query($sql) === TRUE) {\n    // Send email with reset link\n    sendEmail($email, $token);\n  } else {\n    echo \"Error updating user's reset token: \" . $conn->error;\n  }\n}\n\nfunction sendEmail($email, $token) {\n  // Generate reset link\n  $resetLink = \"http://your-website.com/reset-password?token=$token\";\n\n  // Email content\n  $subject = \"Reset Password\";\n  $body = \"Click the following link to reset your password: $resetLink\";\n\n  // Send email using PHPMailer or any other library\n  mail($email, $subject, $body);\n}\n\n// Handle forgot password form submission\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n  $email = $_POST['email'];\n  sendResetLink($email);\n} else {\n  echo \"Invalid request method\";\n}\n\n$conn->close();\n?>\n```\n\n### **reset_password.php**\n\n```php\n<?php\n\n// Configuration\ndefine('DB_HOST', 'your_host');\ndefine('DB_USER', 'your_user');\ndefine('DB_PASSWORD', 'your_password');\ndefine('DB_NAME', 'your_database');\n\n// Connect to database\n$conn = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);\n\nif ($conn->connect_error) {\n  die(\"Connection failed: \" . $conn->connect_error);\n}\n\nfunction resetPassword($token) {\n  // Get user's email from token\n  $sql = \"SELECT email FROM users WHERE reset_token = '$token'\";\n  $result = $conn->query($sql);\n\n  if ($result->num_rows > 0) {\n    while ($row = $result->fetch_assoc()) {\n      // Allow user to reset password\n      echo \"Password successfully reset\";\n      break;\n    }\n  } else {\n    echo \"Invalid token or expired\";\n  }\n\n  $conn->close();\n}\n\n// Handle reset link submission\nif ($_SERVER['REQUEST_METHOD'] == 'GET') {\n  $token = $_GET['token'];\n  resetPassword($token);\n} else {\n  echo \"Invalid request method\";\n}\n?>\n```\n\n**Usage**\n--------\n\n1. User visits the forgot password page and enters their email address.\n2. The PHP script generates a random token and sends an email with a reset link to the user's email.\n3. User clicks on the reset link, which leads them to a new page where they can enter a new password.\n\nNote that this is just a basic example, and you should consider implementing additional security measures to protect your users' accounts.", "code_blocks": [null, "```php\n<?php\n\n// Configuration\ndefine('DB_HOST', 'your_host');\ndefine('DB_USER', 'your_user');\ndefine('DB_PASSWORD', 'your_password');\ndefine('DB_NAME', 'your_database');\n\n// Connect to database\n$conn = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);\n\nif ($conn->connect_error) {\n  die(\"Connection failed: \" . $conn->connect_error);\n}\n\nfunction sendResetLink($email) {\n  // Generate a random token\n  $token = bin2hex(random_bytes(32));\n\n  // Update user's reset token and expiration time\n  $sql = \"UPDATE users SET reset_token = '$token', reset_expires = NOW() + INTERVAL 1 HOUR WHERE email = '$email'\";\n  if ($conn->query($sql) === TRUE) {\n    // Send email with reset link\n    sendEmail($email, $token);\n  } else {\n    echo \"Error updating user's reset token: \" . $conn->error;\n  }\n}\n\nfunction sendEmail($email, $token) {\n  // Generate reset link\n  $resetLink = \"http://your-website.com/reset-password?token=$token\";\n\n  // Email content\n  $subject = \"Reset Password\";\n  $body = \"Click the following link to reset your password: $resetLink\";\n\n  // Send email using PHPMailer or any other library\n  mail($email, $subject, $body);\n}\n\n// Handle forgot password form submission\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n  $email = $_POST['email'];\n  sendResetLink($email);\n} else {\n  echo \"Invalid request method\";\n}\n\n$conn->close();\n?>\n```", "```php\n<?php\n\n// Configuration\ndefine('DB_HOST', 'your_host');\ndefine('DB_USER', 'your_user');\ndefine('DB_PASSWORD', 'your_password');\ndefine('DB_NAME', 'your_database');\n\n// Connect to database\n$conn = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);\n\nif ($conn->connect_error) {\n  die(\"Connection failed: \" . $conn->connect_error);\n}\n\nfunction resetPassword($token) {\n  // Get user's email from token\n  $sql = \"SELECT email FROM users WHERE reset_token = '$token'\";\n  $result = $conn->query($sql);\n\n  if ($result->num_rows > 0) {\n    while ($row = $result->fetch_assoc()) {\n      // Allow user to reset password\n      echo \"Password successfully reset\";\n      break;\n    }\n  } else {\n    echo \"Invalid token or expired\";\n  }\n\n  $conn->close();\n}\n\n// Handle reset link submission\nif ($_SERVER['REQUEST_METHOD'] == 'GET') {\n  $token = $_GET['token'];\n  resetPassword($token);\n} else {\n  echo \"Invalid request method\";\n}\n?>\n```"]}
