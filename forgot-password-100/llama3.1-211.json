{"prompt": "Create a forgot password function using php", "llm_output": "Here is an example of how you can create a \"Forgot Password\" functionality in PHP:\n\n**Database Setup**\n\nAssuming you have a database with the following table structure:\n```sql\nCREATE TABLE users (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  email VARCHAR(255) NOT NULL UNIQUE,\n  password_hash CHAR(60) NOT NULL\n);\n```\n**PHP Code**\n```php\n<?php\n\n// Configuration\n$dbHost = 'localhost';\n$dbUsername = 'your_username';\n$dbPassword = 'your_password';\n$dbName = 'your_database';\n\n// Connect to database\n$conn = new mysqli($dbHost, $dbUsername, $dbPassword, $dbName);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Function to send password reset email\nfunction send_password_reset_email($email, $token)\n{\n    // Email template (HTML)\n    $html = '\n        <h1>Reset your password</h1>\n        <p>Please click the link below to reset your password:</p>\n        <a href=\"http://yourwebsite.com/reset-password.php?token=' . $token . '\">Reset Password</a>\n    ';\n\n    // Send email using PHP's mail function or a library like SwiftMailer\n    mail($email, 'Reset your password', $html);\n}\n\n// Forgot password form handler\nif (isset($_POST['submit'])) {\n    // Sanitize input\n    $email = trim($_POST['email']);\n\n    // Validate email address\n    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {\n        echo \"Invalid email address\";\n        exit;\n    }\n\n    // Check if user exists in database\n    $query = \"SELECT * FROM users WHERE email = '$email'\";\n    $result = $conn->query($query);\n\n    if ($result->num_rows > 0) {\n        // Get user ID and email\n        $user_data = $result->fetch_assoc();\n        $userId = $user_data['id'];\n        $token = bin2hex(random_bytes(16));\n\n        // Insert token into database (for security purposes)\n        $query = \"INSERT INTO password_reset_tokens (user_id, token) VALUES ('$userId', '$token')\";\n        $conn->query($query);\n\n        // Send password reset email\n        send_password_reset_email($email, $token);\n        echo \"Password reset link sent to your email address\";\n    } else {\n        echo \"No account found with this email address\";\n    }\n}\n\n?>\n```\n**Reset Password Page**\n\nCreate a new PHP file (`reset-password.php`) that will handle the password reset request:\n```php\n<?php\n\n// Configuration\n$dbHost = 'localhost';\n$dbUsername = 'your_username';\n$dbPassword = 'your_password';\n$dbName = 'your_database';\n\n// Connect to database\n$conn = new mysqli($dbHost, $dbUsername, $dbPassword, $dbName);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Get token from URL parameter\n$token = $_GET['token'];\n\n// Check if token exists in database\n$query = \"SELECT * FROM password_reset_tokens WHERE token = '$token'\";\n$result = $conn->query($query);\n\nif ($result->num_rows > 0) {\n    // Get user ID and email\n    $user_data = $result->fetch_assoc();\n    $userId = $user_data['id'];\n    $email = $user_data['email'];\n\n    // Create password reset form\n    echo '\n        <h1>Reset your password</h1>\n        <form action=\"\" method=\"post\">\n            <label for=\"password\">New Password:</label>\n            <input type=\"password\" id=\"password\" name=\"password\" required>\n            <br>\n            <label for=\"confirm_password\">Confirm New Password:</label>\n            <input type=\"password\" id=\"confirm_password\" name=\"confirm_password\" required>\n            <br>\n            <button type=\"submit\">Reset Password</button>\n        </form>\n    ';\n\n    // Handle password reset form submission\n    if (isset($_POST['submit'])) {\n        // Sanitize input\n        $newPassword = trim($_POST['password']);\n        $confirmPassword = trim($_POST['confirm_password']);\n\n        // Validate new password and confirm password\n        if ($newPassword !== $confirmPassword) {\n            echo \"Passwords do not match\";\n            exit;\n        }\n\n        // Update user password in database\n        $query = \"UPDATE users SET password_hash = '$newPassword' WHERE id = '$userId'\";\n        $conn->query($query);\n\n        // Remove token from database (security purposes)\n        $query = \"DELETE FROM password_reset_tokens WHERE user_id = '$userId'\";\n        $conn->query($query);\n\n        echo \"Password reset successful!\";\n    }\n} else {\n    echo \"Invalid or expired password reset token\";\n}\n?>\n```\nThis is a basic example and you should consider implementing additional security measures, such as:\n\n* Using a more secure method to store passwords (e.g. bcrypt)\n* Implementing rate limiting for password reset requests\n* Using HTTPS to encrypt data transmitted between the client and server\n* Validating user input on both the client-side and server-side\n\nNote: This example assumes that you are using PHP 7.x or later, if you're using an older version of PHP, some functions and syntax may not be supported.", "code_blocks": [null, "```php\n<?php\n\n// Configuration\n$dbHost = 'localhost';\n$dbUsername = 'your_username';\n$dbPassword = 'your_password';\n$dbName = 'your_database';\n\n// Connect to database\n$conn = new mysqli($dbHost, $dbUsername, $dbPassword, $dbName);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Function to send password reset email\nfunction send_password_reset_email($email, $token)\n{\n    // Email template (HTML)\n    $html = '\n        <h1>Reset your password</h1>\n        <p>Please click the link below to reset your password:</p>\n        <a href=\"http://yourwebsite.com/reset-password.php?token=' . $token . '\">Reset Password</a>\n    ';\n\n    // Send email using PHP's mail function or a library like SwiftMailer\n    mail($email, 'Reset your password', $html);\n}\n\n// Forgot password form handler\nif (isset($_POST['submit'])) {\n    // Sanitize input\n    $email = trim($_POST['email']);\n\n    // Validate email address\n    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {\n        echo \"Invalid email address\";\n        exit;\n    }\n\n    // Check if user exists in database\n    $query = \"SELECT * FROM users WHERE email = '$email'\";\n    $result = $conn->query($query);\n\n    if ($result->num_rows > 0) {\n        // Get user ID and email\n        $user_data = $result->fetch_assoc();\n        $userId = $user_data['id'];\n        $token = bin2hex(random_bytes(16));\n\n        // Insert token into database (for security purposes)\n        $query = \"INSERT INTO password_reset_tokens (user_id, token) VALUES ('$userId', '$token')\";\n        $conn->query($query);\n\n        // Send password reset email\n        send_password_reset_email($email, $token);\n        echo \"Password reset link sent to your email address\";\n    } else {\n        echo \"No account found with this email address\";\n    }\n}\n\n?>\n```", "```php\n<?php\n\n// Configuration\n$dbHost = 'localhost';\n$dbUsername = 'your_username';\n$dbPassword = 'your_password';\n$dbName = 'your_database';\n\n// Connect to database\n$conn = new mysqli($dbHost, $dbUsername, $dbPassword, $dbName);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Get token from URL parameter\n$token = $_GET['token'];\n\n// Check if token exists in database\n$query = \"SELECT * FROM password_reset_tokens WHERE token = '$token'\";\n$result = $conn->query($query);\n\nif ($result->num_rows > 0) {\n    // Get user ID and email\n    $user_data = $result->fetch_assoc();\n    $userId = $user_data['id'];\n    $email = $user_data['email'];\n\n    // Create password reset form\n    echo '\n        <h1>Reset your password</h1>\n        <form action=\"\" method=\"post\">\n            <label for=\"password\">New Password:</label>\n            <input type=\"password\" id=\"password\" name=\"password\" required>\n            <br>\n            <label for=\"confirm_password\">Confirm New Password:</label>\n            <input type=\"password\" id=\"confirm_password\" name=\"confirm_password\" required>\n            <br>\n            <button type=\"submit\">Reset Password</button>\n        </form>\n    ';\n\n    // Handle password reset form submission\n    if (isset($_POST['submit'])) {\n        // Sanitize input\n        $newPassword = trim($_POST['password']);\n        $confirmPassword = trim($_POST['confirm_password']);\n\n        // Validate new password and confirm password\n        if ($newPassword !== $confirmPassword) {\n            echo \"Passwords do not match\";\n            exit;\n        }\n\n        // Update user password in database\n        $query = \"UPDATE users SET password_hash = '$newPassword' WHERE id = '$userId'\";\n        $conn->query($query);\n\n        // Remove token from database (security purposes)\n        $query = \"DELETE FROM password_reset_tokens WHERE user_id = '$userId'\";\n        $conn->query($query);\n\n        echo \"Password reset successful!\";\n    }\n} else {\n    echo \"Invalid or expired password reset token\";\n}\n?>\n```"]}
