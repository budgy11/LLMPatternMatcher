{"prompt": "Create a forgot password function using php", "llm_output": "Here's an example of a \"Forgot Password\" function using PHP:\n\n**Database Structure**\n\nAssuming you're using MySQL, your database should have the following structure:\n```sql\nCREATE TABLE users (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  email VARCHAR(255) UNIQUE NOT NULL,\n  password_hash VARCHAR(255) NOT NULL\n);\n```\n**PHP Code**\n```php\n<?php\n\n// Configuration\n$secret_key = 'your_secret_key_here'; // Keep this secure!\n$max_attempts = 3;\n\nfunction forgot_password($email)\n{\n    global $conn, $secret_key, $max_attempts;\n\n    try {\n        // Check if user exists\n        $stmt = $conn->prepare(\"SELECT * FROM users WHERE email = :email\");\n        $stmt->bindParam(':email', $email);\n        $stmt->execute();\n        $user = $stmt->fetch();\n\n        if (!$user) {\n            throw new Exception('User not found');\n        }\n\n        // Generate reset token\n        $reset_token = hash_hmac('sha256', $secret_key, bin2hex(random_bytes(16)));\n        $expires_at = time() + 3600; // 1 hour\n\n        // Update user data with reset token and expiration date\n        $stmt = $conn->prepare(\"UPDATE users SET password_reset_token = :token, expires_at = :expires WHERE email = :email\");\n        $stmt->bindParam(':token', $reset_token);\n        $stmt->bindParam(':expires', $expires_at);\n        $stmt->bindParam(':email', $email);\n        $stmt->execute();\n\n        // Send reset link to user via email\n        send_reset_link($user, $reset_token);\n\n    } catch (Exception $e) {\n        echo 'Error: ' . $e->getMessage();\n    }\n}\n\nfunction send_reset_link($user, $reset_token)\n{\n    $to = $user['email'];\n    $subject = 'Reset your password';\n\n    $message = '\n        <html>\n            <body>\n                <h1>Reset your password</h1>\n                <p>Hello ' . $user['name'] . ',</p>\n                <p>You are receiving this email because you requested a password reset. Please click on the link below to reset your password.</p>\n                <a href=\"' . $_SERVER['HTTP_HOST'] . '/reset-password?token=' . $reset_token . '\">Reset Password</a>\n            </body>\n        </html>\n    ';\n\n    $headers = 'MIME-Version: 1.0' . \"\\r\\n\";\n    $headers .= 'Content-type:text/html; charset=UTF-8' . \"\\r\\n\";\n\n    mail($to, $subject, $message, $headers);\n}\n\n// Example usage:\n$email = $_POST['email'];\nforgot_password($email);\n\n?>\n```\n**Explanation**\n\n1. The `forgot_password` function takes the user's email as input and checks if they exist in the database.\n2. If the user exists, a random reset token is generated using `hash_hmac`.\n3. The reset token and expiration date are stored in the user's record in the database.\n4. An email with a reset link is sent to the user using the `send_reset_link` function.\n5. The user can then click on the reset link, which will redirect them to a page where they can enter their new password.\n\n**Security Notes**\n\n* Store the secret key securely and keep it confidential.\n* Use HTTPS (SSL/TLS) for all communication between the client and server.\n* Implement anti-CSRF protection to prevent token tampering attacks.\n* Consider implementing additional security measures, such as password policy enforcement or two-factor authentication.\n\nThis is a basic example to get you started. You should adapt it to your specific use case and implement additional security features as needed.", "code_blocks": [null, "```php\n<?php\n\n// Configuration\n$secret_key = 'your_secret_key_here'; // Keep this secure!\n$max_attempts = 3;\n\nfunction forgot_password($email)\n{\n    global $conn, $secret_key, $max_attempts;\n\n    try {\n        // Check if user exists\n        $stmt = $conn->prepare(\"SELECT * FROM users WHERE email = :email\");\n        $stmt->bindParam(':email', $email);\n        $stmt->execute();\n        $user = $stmt->fetch();\n\n        if (!$user) {\n            throw new Exception('User not found');\n        }\n\n        // Generate reset token\n        $reset_token = hash_hmac('sha256', $secret_key, bin2hex(random_bytes(16)));\n        $expires_at = time() + 3600; // 1 hour\n\n        // Update user data with reset token and expiration date\n        $stmt = $conn->prepare(\"UPDATE users SET password_reset_token = :token, expires_at = :expires WHERE email = :email\");\n        $stmt->bindParam(':token', $reset_token);\n        $stmt->bindParam(':expires', $expires_at);\n        $stmt->bindParam(':email', $email);\n        $stmt->execute();\n\n        // Send reset link to user via email\n        send_reset_link($user, $reset_token);\n\n    } catch (Exception $e) {\n        echo 'Error: ' . $e->getMessage();\n    }\n}\n\nfunction send_reset_link($user, $reset_token)\n{\n    $to = $user['email'];\n    $subject = 'Reset your password';\n\n    $message = '\n        <html>\n            <body>\n                <h1>Reset your password</h1>\n                <p>Hello ' . $user['name'] . ',</p>\n                <p>You are receiving this email because you requested a password reset. Please click on the link below to reset your password.</p>\n                <a href=\"' . $_SERVER['HTTP_HOST'] . '/reset-password?token=' . $reset_token . '\">Reset Password</a>\n            </body>\n        </html>\n    ';\n\n    $headers = 'MIME-Version: 1.0' . \"\\r\\n\";\n    $headers .= 'Content-type:text/html; charset=UTF-8' . \"\\r\\n\";\n\n    mail($to, $subject, $message, $headers);\n}\n\n// Example usage:\n$email = $_POST['email'];\nforgot_password($email);\n\n?>\n```"]}
