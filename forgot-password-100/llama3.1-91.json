{"prompt": "Create a forgot password function using php", "llm_output": "Here is an example of how you can create a \"forgot password\" function using PHP:\n\n**Database Schema**\n\nLet's assume we have a database table called `users` with the following columns:\n\n* `id`: unique identifier for each user\n* `username`: username chosen by the user\n* `email`: email address associated with the user account\n* `password`: hashed password (using a library like PHPass or bcrypt)\n* `reset_token`: token used to reset the password\n\n**Forgot Password Function**\n\n```php\n<?php\n\n// Assuming we have a database connection object called $db\n\nfunction forgot_password($username, $email) {\n  // Retrieve user data from database based on username and email\n  $query = \"SELECT * FROM users WHERE username = '$username' AND email = '$email'\";\n  $result = mysqli_query($db, $query);\n  \n  if (mysqli_num_rows($result) > 0) {\n    // Generate a reset token and store it in the user's record\n    $reset_token = bin2hex(random_bytes(16));\n    $update_query = \"UPDATE users SET reset_token = '$reset_token' WHERE username = '$username' AND email = '$email'\";\n    mysqli_query($db, $update_query);\n    \n    // Send an email to the user with a password reset link\n    send_password_reset_email($email, $reset_token);\n  } else {\n    echo \"Username and/or email not found.\";\n  }\n}\n\nfunction send_password_reset_email($email, $reset_token) {\n  // Generate a password reset link (e.g., https://example.com/reset-password?token=xyz123)\n  $reset_link = \"https://example.com/reset-password?token=$reset_token\";\n  \n  // Send an email to the user with instructions on how to reset their password\n  $subject = \"Reset Your Password\";\n  $body = \"\n    <p>Hello $username,</p>\n    <p>To reset your password, please click on this link:</p>\n    <a href='$reset_link'>$reset_link</a>\n  \";\n  \n  // Use a library like PHPMailer or SwiftMailer to send the email\n}\n\n// Example usage:\nforgot_password(\"john\", \"john@example.com\");\n\n?>\n```\n\n**Reset Password Function**\n\nWhen the user clicks on the password reset link, they will be taken to a page where they can enter their new password. Here's an example of how you could implement the reset password function:\n\n```php\n<?php\n\nfunction reset_password($token) {\n  // Retrieve the user's data from database based on the token\n  $query = \"SELECT * FROM users WHERE reset_token = '$token'\";\n  $result = mysqli_query($db, $query);\n  \n  if (mysqli_num_rows($result) > 0) {\n    // Update the user's password in the database\n    $new_password = trim($_POST['password']);\n    $hash_password = hash_password($new_password); // Use a library like PHPass or bcrypt to hash the password\n    $update_query = \"UPDATE users SET password = '$hash_password', reset_token = '' WHERE reset_token = '$token'\";\n    mysqli_query($db, $update_query);\n    \n    echo \"Password updated successfully!\";\n  } else {\n    echo \"Invalid token.\";\n  }\n}\n\nfunction hash_password($password) {\n  // Use a library like PHPass or bcrypt to hash the password\n}\n\n// Example usage:\nif (isset($_POST['token'])) {\n  reset_password(trim($_POST['token']));\n}\n?>\n```\n\nNote that this is just an example implementation, and you should adapt it to your specific use case. Also, make sure to follow best practices for secure coding, such as using prepared statements or parameterized queries instead of concatenating user input into SQL queries.", "code_blocks": ["```php\n<?php\n\n// Assuming we have a database connection object called $db\n\nfunction forgot_password($username, $email) {\n  // Retrieve user data from database based on username and email\n  $query = \"SELECT * FROM users WHERE username = '$username' AND email = '$email'\";\n  $result = mysqli_query($db, $query);\n  \n  if (mysqli_num_rows($result) > 0) {\n    // Generate a reset token and store it in the user's record\n    $reset_token = bin2hex(random_bytes(16));\n    $update_query = \"UPDATE users SET reset_token = '$reset_token' WHERE username = '$username' AND email = '$email'\";\n    mysqli_query($db, $update_query);\n    \n    // Send an email to the user with a password reset link\n    send_password_reset_email($email, $reset_token);\n  } else {\n    echo \"Username and/or email not found.\";\n  }\n}\n\nfunction send_password_reset_email($email, $reset_token) {\n  // Generate a password reset link (e.g., https://example.com/reset-password?token=xyz123)\n  $reset_link = \"https://example.com/reset-password?token=$reset_token\";\n  \n  // Send an email to the user with instructions on how to reset their password\n  $subject = \"Reset Your Password\";\n  $body = \"\n    <p>Hello $username,</p>\n    <p>To reset your password, please click on this link:</p>\n    <a href='$reset_link'>$reset_link</a>\n  \";\n  \n  // Use a library like PHPMailer or SwiftMailer to send the email\n}\n\n// Example usage:\nforgot_password(\"john\", \"john@example.com\");\n\n?>\n```", "```php\n<?php\n\nfunction reset_password($token) {\n  // Retrieve the user's data from database based on the token\n  $query = \"SELECT * FROM users WHERE reset_token = '$token'\";\n  $result = mysqli_query($db, $query);\n  \n  if (mysqli_num_rows($result) > 0) {\n    // Update the user's password in the database\n    $new_password = trim($_POST['password']);\n    $hash_password = hash_password($new_password); // Use a library like PHPass or bcrypt to hash the password\n    $update_query = \"UPDATE users SET password = '$hash_password', reset_token = '' WHERE reset_token = '$token'\";\n    mysqli_query($db, $update_query);\n    \n    echo \"Password updated successfully!\";\n  } else {\n    echo \"Invalid token.\";\n  }\n}\n\nfunction hash_password($password) {\n  // Use a library like PHPass or bcrypt to hash the password\n}\n\n// Example usage:\nif (isset($_POST['token'])) {\n  reset_password(trim($_POST['token']));\n}\n?>\n```"]}
