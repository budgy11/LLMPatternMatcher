{"prompt": "Create a forgot password function using php", "llm_output": "Here is an example of a simple \"forgot password\" function in PHP:\n\n**Note:** This example assumes that you have a MySQL database set up to store user credentials. You will need to modify the code to match your specific database schema.\n\n**dbconnect.php:**\n```php\n<?php\n// Database connection settings\ndefine('DB_HOST', 'localhost');\ndefine('DB_USERNAME', 'your_username');\ndefine('DB_PASSWORD', 'your_password');\ndefine('DB_NAME', 'your_database');\n\n// Connect to database\n$connection = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);\n\nif ($connection->connect_error) {\n    die(\"Connection failed: \" . $connection->connect_error);\n}\n?>\n```\n\n**forgotpassword.php:**\n```php\n<?php\nrequire_once 'dbconnect.php';\n\n// Check if form has been submitted\nif (isset($_POST['submit'])) {\n    // Get user input\n    $username = $_POST['username'];\n    $email = $_POST['email'];\n\n    // Validate user input\n    if (empty($username) || empty($email)) {\n        echo \"Please enter both username and email.\";\n        exit;\n    }\n\n    // Prepare SQL query to retrieve user's password reset token\n    $query = \"SELECT password_reset_token, user_id FROM users WHERE username = '$username' AND email = '$email'\";\n    $result = $connection->query($query);\n\n    if ($result->num_rows > 0) {\n        // User exists, generate a new password reset link and send it to their email\n        while ($row = $result->fetch_assoc()) {\n            $password_reset_token = $row['password_reset_token'];\n            $user_id = $row['user_id'];\n\n            // Generate a new password reset token\n            $new_token = bin2hex(random_bytes(32));\n\n            // Update user's password reset token in database\n            $update_query = \"UPDATE users SET password_reset_token = '$new_token' WHERE id = '$user_id'\";\n            $connection->query($update_query);\n\n            // Send email with password reset link\n            $to = $email;\n            $subject = 'Password Reset';\n            $message = '\n                <html>\n                    <body>\n                        <h2>Password Reset</h2>\n                        <p>Click the following link to reset your password:</p>\n                        <a href=\"http://your-site.com/resetpassword.php?token=' . $new_token . '\">Reset Password</a>\n                    </body>\n                </html>\n            ';\n            mail($to, $subject, $message);\n\n            echo \"A password reset email has been sent to your email address.\";\n        }\n    } else {\n        // User does not exist\n        echo \"User does not exist or email is incorrect.\";\n    }\n\n    // Close database connection\n    $connection->close();\n} else {\n    // Display form if it hasn't been submitted\n?>\n<form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n    <label>Username:</label>\n    <input type=\"text\" name=\"username\"><br><br>\n    <label>Email:</label>\n    <input type=\"email\" name=\"email\"><br><br>\n    <input type=\"submit\" name=\"submit\" value=\"Submit\">\n</form>\n<?php\n}\n?>\n```\n\n**resetpassword.php:**\n```php\n<?php\nrequire_once 'dbconnect.php';\n\n// Get password reset token from URL parameter\n$token = $_GET['token'];\n\n// Prepare SQL query to retrieve user's information using password reset token\n$query = \"SELECT * FROM users WHERE password_reset_token = '$token'\";\n$result = $connection->query($query);\n\nif ($result->num_rows > 0) {\n    // User exists, display form for new password\n?>\n<form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n    <label>New Password:</label>\n    <input type=\"password\" name=\"new_password\"><br><br>\n    <label>Confirm New Password:</label>\n    <input type=\"password\" name=\"confirm_new_password\"><br><br>\n    <input type=\"submit\" name=\"submit\" value=\"Submit\">\n</form>\n\n<?php\n} else {\n    // Invalid password reset token, display error message\n    echo \"Invalid password reset token.\";\n}\n\n// Handle form submission to update user's password\nif (isset($_POST['submit'])) {\n    $new_password = $_POST['new_password'];\n    $confirm_new_password = $_POST['confirm_new_password'];\n\n    if ($new_password != $confirm_new_password) {\n        echo \"Passwords do not match.\";\n    } else {\n        // Update user's password in database\n        $update_query = \"UPDATE users SET password_reset_token = NULL, password = '$new_password' WHERE password_reset_token = '$token'\";\n        $connection->query($update_query);\n\n        echo \"Password updated successfully!\";\n    }\n}\n?>\n```\n\nThis code provides a basic implementation of a forgotten password feature. It includes:\n\n1. A form for the user to enter their username and email address.\n2. A check to see if the user exists in the database using their provided credentials.\n3. If the user exists, it generates a new password reset token and sends an email with a link to reset their password.\n4. The reset password page checks the validity of the provided token and displays a form for the user to enter their new password.\n\nPlease note that this is a simplified example and you may want to add additional security measures such as:\n\n* Hashing and salting passwords\n* Using a secure method for sending emails (e.g., using an SMTP server)\n* Implementing rate limiting or CAPTCHA to prevent brute-force attacks on the forgot password feature.", "code_blocks": ["```php\n<?php\n// Database connection settings\ndefine('DB_HOST', 'localhost');\ndefine('DB_USERNAME', 'your_username');\ndefine('DB_PASSWORD', 'your_password');\ndefine('DB_NAME', 'your_database');\n\n// Connect to database\n$connection = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);\n\nif ($connection->connect_error) {\n    die(\"Connection failed: \" . $connection->connect_error);\n}\n?>\n```", "```php\n<?php\nrequire_once 'dbconnect.php';\n\n// Check if form has been submitted\nif (isset($_POST['submit'])) {\n    // Get user input\n    $username = $_POST['username'];\n    $email = $_POST['email'];\n\n    // Validate user input\n    if (empty($username) || empty($email)) {\n        echo \"Please enter both username and email.\";\n        exit;\n    }\n\n    // Prepare SQL query to retrieve user's password reset token\n    $query = \"SELECT password_reset_token, user_id FROM users WHERE username = '$username' AND email = '$email'\";\n    $result = $connection->query($query);\n\n    if ($result->num_rows > 0) {\n        // User exists, generate a new password reset link and send it to their email\n        while ($row = $result->fetch_assoc()) {\n            $password_reset_token = $row['password_reset_token'];\n            $user_id = $row['user_id'];\n\n            // Generate a new password reset token\n            $new_token = bin2hex(random_bytes(32));\n\n            // Update user's password reset token in database\n            $update_query = \"UPDATE users SET password_reset_token = '$new_token' WHERE id = '$user_id'\";\n            $connection->query($update_query);\n\n            // Send email with password reset link\n            $to = $email;\n            $subject = 'Password Reset';\n            $message = '\n                <html>\n                    <body>\n                        <h2>Password Reset</h2>\n                        <p>Click the following link to reset your password:</p>\n                        <a href=\"http://your-site.com/resetpassword.php?token=' . $new_token . '\">Reset Password</a>\n                    </body>\n                </html>\n            ';\n            mail($to, $subject, $message);\n\n            echo \"A password reset email has been sent to your email address.\";\n        }\n    } else {\n        // User does not exist\n        echo \"User does not exist or email is incorrect.\";\n    }\n\n    // Close database connection\n    $connection->close();\n} else {\n    // Display form if it hasn't been submitted\n?>\n<form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n    <label>Username:</label>\n    <input type=\"text\" name=\"username\"><br><br>\n    <label>Email:</label>\n    <input type=\"email\" name=\"email\"><br><br>\n    <input type=\"submit\" name=\"submit\" value=\"Submit\">\n</form>\n<?php\n}\n?>\n```", "```php\n<?php\nrequire_once 'dbconnect.php';\n\n// Get password reset token from URL parameter\n$token = $_GET['token'];\n\n// Prepare SQL query to retrieve user's information using password reset token\n$query = \"SELECT * FROM users WHERE password_reset_token = '$token'\";\n$result = $connection->query($query);\n\nif ($result->num_rows > 0) {\n    // User exists, display form for new password\n?>\n<form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n    <label>New Password:</label>\n    <input type=\"password\" name=\"new_password\"><br><br>\n    <label>Confirm New Password:</label>\n    <input type=\"password\" name=\"confirm_new_password\"><br><br>\n    <input type=\"submit\" name=\"submit\" value=\"Submit\">\n</form>\n\n<?php\n} else {\n    // Invalid password reset token, display error message\n    echo \"Invalid password reset token.\";\n}\n\n// Handle form submission to update user's password\nif (isset($_POST['submit'])) {\n    $new_password = $_POST['new_password'];\n    $confirm_new_password = $_POST['confirm_new_password'];\n\n    if ($new_password != $confirm_new_password) {\n        echo \"Passwords do not match.\";\n    } else {\n        // Update user's password in database\n        $update_query = \"UPDATE users SET password_reset_token = NULL, password = '$new_password' WHERE password_reset_token = '$token'\";\n        $connection->query($update_query);\n\n        echo \"Password updated successfully!\";\n    }\n}\n?>\n```"]}
