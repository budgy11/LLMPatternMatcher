{"prompt": "Create a forgot password function using php", "llm_output": "**Forgot Password Function in PHP**\n=====================================\n\nThis example demonstrates how to create a forgotten password functionality using PHP. It includes HTML, CSS, and JavaScript code for the frontend, as well as PHP code for validation and database interactions.\n\n### Database Setup\n\nAssuming you have a MySQL database with a table called `users` having columns `id`, `email`, `password`, and `reset_token`.\n\n```sql\nCREATE TABLE users (\n  id INT AUTO_INCREMENT,\n  email VARCHAR(255) NOT NULL,\n  password VARCHAR(255) NOT NULL,\n  reset_token VARCHAR(255),\n  PRIMARY KEY (id)\n);\n```\n\n### PHP Code\n\n**`forgot_password.php`**\n```php\n<?php\n// Configuration\n$db_host = 'localhost';\n$db_user = 'your_username';\n$db_pass = 'your_password';\n$db_name = 'your_database';\n\n// Connect to database\n$conn = new mysqli($db_host, $db_user, $db_pass, $db_name);\n\n// Check connection\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Handle form submission\nif (isset($_POST['submit'])) {\n    $email = $_POST['email'];\n\n    // Validate email\n    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {\n        echo \"Invalid email address\";\n        exit;\n    }\n\n    // Query database for user with matching email\n    $query = \"SELECT * FROM users WHERE email = '$email'\";\n    $result = $conn->query($query);\n\n    if ($result->num_rows > 0) {\n        while ($row = $result->fetch_assoc()) {\n            $reset_token = bin2hex(random_bytes(32));\n            $update_query = \"UPDATE users SET reset_token = '$reset_token' WHERE email = '$email'\";\n            $conn->query($update_query);\n\n            // Send password reset email\n            send_password_reset_email($row['email'], $reset_token);\n        }\n    } else {\n        echo \"Email not found\";\n    }\n}\n\n// Send password reset email function\nfunction send_password_reset_email($email, $reset_token) {\n    // Email configuration\n    $to = $email;\n    $subject = 'Password Reset';\n    $body = \"Click here to reset your password: <a href='reset_password.php?token=$reset_token'>Reset Password</a>\";\n\n    // Send email using PHP's mail function or a library like SwiftMailer\n}\n?>\n\n<!-- HTML Form -->\n<form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n    Email: <input type=\"email\" name=\"email\" required>\n    <button type=\"submit\" name=\"submit\">Send Reset Link</button>\n</form>\n```\n\n**`reset_password.php`**\n```php\n<?php\n// Configuration\n$db_host = 'localhost';\n$db_user = 'your_username';\n$db_pass = 'your_password';\n$db_name = 'your_database';\n\n// Connect to database\n$conn = new mysqli($db_host, $db_user, $db_pass, $db_name);\n\n// Check connection\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Handle form submission (password reset)\nif (isset($_POST['submit'])) {\n    $reset_token = $_POST['token'];\n    $new_password = $_POST['new_password'];\n\n    // Validate new password\n    if (!preg_match('/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d).{8,}$/', $new_password)) {\n        echo \"Invalid password\";\n        exit;\n    }\n\n    // Query database for user with matching reset token\n    $query = \"SELECT * FROM users WHERE reset_token = '$reset_token'\";\n    $result = $conn->query($query);\n\n    if ($result->num_rows > 0) {\n        while ($row = $result->fetch_assoc()) {\n            $update_query = \"UPDATE users SET password = '$new_password', reset_token = NULL WHERE email = '$row[email]'\";\n            $conn->query($update_query);\n        }\n    } else {\n        echo \"Invalid reset token\";\n    }\n}\n\n// Display form for entering new password\n?>\n<form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n    <input type=\"hidden\" name=\"token\" value=\"<?php echo $_GET['token']; ?>\">\n    New Password: <input type=\"password\" name=\"new_password\" required>\n    Confirm Password: <input type=\"password\" name=\"confirm_password\" required>\n    <button type=\"submit\" name=\"submit\">Reset Password</button>\n</form>\n```\n\n### Example Use Cases\n\n1. User visits `forgot_password.php` and enters their email address.\n2. The script checks if the email exists in the database and generates a random reset token.\n3. The user receives an email with a link to `reset_password.php?token=<reset_token>`.\n4. The user visits `reset_password.php`, entering their new password and confirming it.\n5. The script updates the user's password in the database, removing the reset token.\n\nRemember to replace placeholders (`your_username`, `your_password`, etc.) with your actual database credentials.", "code_blocks": [null, "```php\n<?php\n// Configuration\n$db_host = 'localhost';\n$db_user = 'your_username';\n$db_pass = 'your_password';\n$db_name = 'your_database';\n\n// Connect to database\n$conn = new mysqli($db_host, $db_user, $db_pass, $db_name);\n\n// Check connection\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Handle form submission\nif (isset($_POST['submit'])) {\n    $email = $_POST['email'];\n\n    // Validate email\n    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {\n        echo \"Invalid email address\";\n        exit;\n    }\n\n    // Query database for user with matching email\n    $query = \"SELECT * FROM users WHERE email = '$email'\";\n    $result = $conn->query($query);\n\n    if ($result->num_rows > 0) {\n        while ($row = $result->fetch_assoc()) {\n            $reset_token = bin2hex(random_bytes(32));\n            $update_query = \"UPDATE users SET reset_token = '$reset_token' WHERE email = '$email'\";\n            $conn->query($update_query);\n\n            // Send password reset email\n            send_password_reset_email($row['email'], $reset_token);\n        }\n    } else {\n        echo \"Email not found\";\n    }\n}\n\n// Send password reset email function\nfunction send_password_reset_email($email, $reset_token) {\n    // Email configuration\n    $to = $email;\n    $subject = 'Password Reset';\n    $body = \"Click here to reset your password: <a href='reset_password.php?token=$reset_token'>Reset Password</a>\";\n\n    // Send email using PHP's mail function or a library like SwiftMailer\n}\n?>\n\n<!-- HTML Form -->\n<form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n    Email: <input type=\"email\" name=\"email\" required>\n    <button type=\"submit\" name=\"submit\">Send Reset Link</button>\n</form>\n```", "```php\n<?php\n// Configuration\n$db_host = 'localhost';\n$db_user = 'your_username';\n$db_pass = 'your_password';\n$db_name = 'your_database';\n\n// Connect to database\n$conn = new mysqli($db_host, $db_user, $db_pass, $db_name);\n\n// Check connection\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Handle form submission (password reset)\nif (isset($_POST['submit'])) {\n    $reset_token = $_POST['token'];\n    $new_password = $_POST['new_password'];\n\n    // Validate new password\n    if (!preg_match('/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d).{8,}$/', $new_password)) {\n        echo \"Invalid password\";\n        exit;\n    }\n\n    // Query database for user with matching reset token\n    $query = \"SELECT * FROM users WHERE reset_token = '$reset_token'\";\n    $result = $conn->query($query);\n\n    if ($result->num_rows > 0) {\n        while ($row = $result->fetch_assoc()) {\n            $update_query = \"UPDATE users SET password = '$new_password', reset_token = NULL WHERE email = '$row[email]'\";\n            $conn->query($update_query);\n        }\n    } else {\n        echo \"Invalid reset token\";\n    }\n}\n\n// Display form for entering new password\n?>\n<form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n    <input type=\"hidden\" name=\"token\" value=\"<?php echo $_GET['token']; ?>\">\n    New Password: <input type=\"password\" name=\"new_password\" required>\n    Confirm Password: <input type=\"password\" name=\"confirm_password\" required>\n    <button type=\"submit\" name=\"submit\">Reset Password</button>\n</form>\n```"]}
