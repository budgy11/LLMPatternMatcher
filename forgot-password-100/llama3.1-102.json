{"prompt": "Create a forgot password function using php", "llm_output": "Here is an example of how to create a forgot password function in PHP:\n\n**Database Schema**\n\nFor this example, let's assume we have the following database schema:\n```sql\nCREATE TABLE users (\n  id INT PRIMARY KEY,\n  email VARCHAR(255) NOT NULL,\n  password_hash CHAR(60)\n);\n```\n**Forgot Password Function**\n\nCreate a new file called `forgot_password.php` and add the following code:\n```php\n<?php\n\n// Include the database connection settings\nrequire_once 'db_settings.php';\n\n// Check if the form has been submitted\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n  // Get the email from the form submission\n  $email = $_POST['email'];\n\n  // Validate the email address\n  if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {\n    echo \"Invalid email address\";\n    exit;\n  }\n\n  // Query the database to retrieve the user's ID and password hash\n  $query = \"SELECT id, password_hash FROM users WHERE email = :email\";\n  $stmt = $pdo->prepare($query);\n  $stmt->bindParam(':email', $email);\n  $stmt->execute();\n  $user = $stmt->fetch();\n\n  if ($user) {\n    // Generate a new random password\n    $new_password = substr(str_shuffle('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'), 0, 12);\n\n    // Update the user's password in the database\n    $query = \"UPDATE users SET password_hash = :password_hash WHERE id = :id\";\n    $stmt = $pdo->prepare($query);\n    $stmt->bindParam(':password_hash', hash('sha256', $new_password));\n    $stmt->bindParam(':id', $user['id']);\n    $stmt->execute();\n\n    // Send an email to the user with their new password\n    $subject = \"Forgot Password\";\n    $body = \"Your new password is: $new_password\";\n    $from_email = 'your_email@example.com';\n    $to_email = $email;\n    sendEmail($from_email, $to_email, $subject, $body);\n  } else {\n    echo \"No user found with that email address\";\n  }\n}\n\n// Function to send an email using PHPMailer\nfunction sendEmail($from_email, $to_email, $subject, $body) {\n  require_once 'PHPMailerAutoload.php';\n  $mail = new PHPMailer();\n  $mail->isSMTP();\n  $mail->Host = 'smtp.example.com';\n  $mail->Port = 587;\n  $mail->CharSet = 'UTF-8';\n  $mail->From = $from_email;\n  $mail->FromName = 'Your Name';\n  $mail->addAddress($to_email);\n  $mail->Subject = $subject;\n  $mail->Body = $body;\n  if (!$mail->send()) {\n    echo \"Error sending email: \";\n    print_r($mail->ErrorInfo);\n  }\n}\n\n?>\n```\n**HTML Form**\n\nCreate a new file called `forgot_password_form.php` and add the following code:\n```html\n<form action=\"forgot_password.php\" method=\"post\">\n  <label for=\"email\">Email:</label>\n  <input type=\"text\" id=\"email\" name=\"email\"><br><br>\n  <input type=\"submit\" value=\"Submit\">\n</form>\n```\n**How it Works**\n\n1. The user submits the forgot password form with their email address.\n2. The PHP script checks if the email is valid and queries the database to retrieve the user's ID and password hash.\n3. If a user is found, a new random password is generated and the user's password in the database is updated.\n4. An email is sent to the user with their new password.\n\nNote: This code uses a simple SHA-256 hashing algorithm for password storage, which is not recommended for production use. You should consider using a more secure password hashing library like bcrypt or Argon2 instead.", "code_blocks": [null, "```php\n<?php\n\n// Include the database connection settings\nrequire_once 'db_settings.php';\n\n// Check if the form has been submitted\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n  // Get the email from the form submission\n  $email = $_POST['email'];\n\n  // Validate the email address\n  if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {\n    echo \"Invalid email address\";\n    exit;\n  }\n\n  // Query the database to retrieve the user's ID and password hash\n  $query = \"SELECT id, password_hash FROM users WHERE email = :email\";\n  $stmt = $pdo->prepare($query);\n  $stmt->bindParam(':email', $email);\n  $stmt->execute();\n  $user = $stmt->fetch();\n\n  if ($user) {\n    // Generate a new random password\n    $new_password = substr(str_shuffle('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'), 0, 12);\n\n    // Update the user's password in the database\n    $query = \"UPDATE users SET password_hash = :password_hash WHERE id = :id\";\n    $stmt = $pdo->prepare($query);\n    $stmt->bindParam(':password_hash', hash('sha256', $new_password));\n    $stmt->bindParam(':id', $user['id']);\n    $stmt->execute();\n\n    // Send an email to the user with their new password\n    $subject = \"Forgot Password\";\n    $body = \"Your new password is: $new_password\";\n    $from_email = 'your_email@example.com';\n    $to_email = $email;\n    sendEmail($from_email, $to_email, $subject, $body);\n  } else {\n    echo \"No user found with that email address\";\n  }\n}\n\n// Function to send an email using PHPMailer\nfunction sendEmail($from_email, $to_email, $subject, $body) {\n  require_once 'PHPMailerAutoload.php';\n  $mail = new PHPMailer();\n  $mail->isSMTP();\n  $mail->Host = 'smtp.example.com';\n  $mail->Port = 587;\n  $mail->CharSet = 'UTF-8';\n  $mail->From = $from_email;\n  $mail->FromName = 'Your Name';\n  $mail->addAddress($to_email);\n  $mail->Subject = $subject;\n  $mail->Body = $body;\n  if (!$mail->send()) {\n    echo \"Error sending email: \";\n    print_r($mail->ErrorInfo);\n  }\n}\n\n?>\n```", null]}
