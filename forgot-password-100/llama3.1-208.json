{"prompt": "Create a forgot password function using php", "llm_output": "Here is an example of how you can implement a \"Forgot Password\" functionality using PHP, including sending a reset link via email. This example uses the `mysqli` extension to interact with your database.\n\n### Database Schema\nFirst, let's define our database schema for storing user information and passwords securely (hashed). We'll use `password_hash()` for password hashing:\n\n```sql\nCREATE TABLE users (\n  id INT AUTO_INCREMENT,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) NOT NULL,\n  password VARCHAR(255),\n  PRIMARY KEY(id)\n);\n```\n\n### PHP Code\n\n**`forgot_password.php`**\n\nThis script handles the forgot password functionality, sending a reset link to the user's email.\n\n```php\n<?php\n\nrequire_once 'db_config.php'; // Assuming you have db_config.php for database connection settings\n\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    $email = $_POST['email'];\n\n    // Query to check if user exists\n    $query = \"SELECT * FROM users WHERE email = '$email'\";\n    $result = mysqli_query($link, $query);\n    \n    // If query returns true and user is found\n    if (mysqli_num_rows($result) > 0) {\n        // Get the user's data\n        $user_data = mysqli_fetch_assoc($result);\n\n        // Generate a unique token for password reset\n        $token = bin2hex(random_bytes(32));\n\n        // Update the token in database with current timestamp\n        $update_query = \"UPDATE users SET token = '$token', last_updated = NOW() WHERE email = '$email'\";\n        mysqli_query($link, $update_query);\n\n        // Email settings\n        $to_email = $user_data['email'];\n        $subject = 'Password Reset Link';\n        $body = \"\n            <p>Hello, $user_data[username]</p>\n            <p>Click on this link to reset your password: \n                <a href='http://example.com/reset_password.php?token=$token'>\n                    Reset Password\n                </a>\n            </p>\";\n\n        // Send email via PHPMailer or mail()\n        // For simplicity, we'll use the built-in mail() function here.\n\n        $headers = 'MIME-Version: 1.0' . \"\\r\\n\";\n        $headers .= 'Content-type:text/html; charset=iso-8859-1' . \"\\r\\n\";\n\n        mail($to_email, $subject, $body, $headers);\n\n        echo \"Email sent successfully!\";\n    } else {\n        echo \"No user found with this email.\";\n    }\n}\n\n?>\n\n<form method=\"POST\">\n  <input type=\"email\" name=\"email\" placeholder=\"Enter your email address\">\n  <button type=\"submit\">Send Reset Link</button>\n</form>\n```\n\n### Explanation\n\n1. **Database Setup:** The script requires a database setup to store user information, including their email and hashed password.\n\n2. **Password Hashing**: When creating new users or resetting passwords, consider using `password_hash()` for secure hashing.\n\n3. **Email Sending:** This example uses the built-in PHP mail() function to send an email with a password reset link.\n\n4. **Reset Password Link:** The link sent in the email should redirect the user to a page where they can enter their new password (e.g., `reset_password.php`).\n\n### Additional Security Measures\n\n- Always use HTTPS for sending and receiving sensitive information like passwords.\n- Implement proper error handling and security checks.\n- Use prepared statements (`mysqli_prepare()`, etc.) instead of direct query strings.\n- Regularly update your PHP version and database management system (DBMS) for improved security.\n\nRemember, this is a basic implementation. Depending on your specific requirements, you may need to enhance it with additional features like secure password hashing, handling multiple reset links at once, or implementing two-factor authentication.", "code_blocks": [null, "```php\n<?php\n\nrequire_once 'db_config.php'; // Assuming you have db_config.php for database connection settings\n\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    $email = $_POST['email'];\n\n    // Query to check if user exists\n    $query = \"SELECT * FROM users WHERE email = '$email'\";\n    $result = mysqli_query($link, $query);\n    \n    // If query returns true and user is found\n    if (mysqli_num_rows($result) > 0) {\n        // Get the user's data\n        $user_data = mysqli_fetch_assoc($result);\n\n        // Generate a unique token for password reset\n        $token = bin2hex(random_bytes(32));\n\n        // Update the token in database with current timestamp\n        $update_query = \"UPDATE users SET token = '$token', last_updated = NOW() WHERE email = '$email'\";\n        mysqli_query($link, $update_query);\n\n        // Email settings\n        $to_email = $user_data['email'];\n        $subject = 'Password Reset Link';\n        $body = \"\n            <p>Hello, $user_data[username]</p>\n            <p>Click on this link to reset your password: \n                <a href='http://example.com/reset_password.php?token=$token'>\n                    Reset Password\n                </a>\n            </p>\";\n\n        // Send email via PHPMailer or mail()\n        // For simplicity, we'll use the built-in mail() function here.\n\n        $headers = 'MIME-Version: 1.0' . \"\\r\\n\";\n        $headers .= 'Content-type:text/html; charset=iso-8859-1' . \"\\r\\n\";\n\n        mail($to_email, $subject, $body, $headers);\n\n        echo \"Email sent successfully!\";\n    } else {\n        echo \"No user found with this email.\";\n    }\n}\n\n?>\n\n<form method=\"POST\">\n  <input type=\"email\" name=\"email\" placeholder=\"Enter your email address\">\n  <button type=\"submit\">Send Reset Link</button>\n</form>\n```"]}
