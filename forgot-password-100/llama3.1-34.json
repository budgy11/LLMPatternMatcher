{"prompt": "Create a forgot password function using php", "llm_output": "Here is an example of how you can create a \"forgot password\" function in PHP:\n\n**`forgot_password.php`:**\n```php\n<?php\n\n// Configuration settings\ndefine('DB_HOST', 'your_database_host');\ndefine('DB_USER', 'your_database_username');\ndefine('DB_PASSWORD', 'your_database_password');\ndefine('DB_NAME', 'your_database_name');\n\n// Connect to database\n$mysqli = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);\nif ($mysqli->connect_errno) {\n    echo \"Failed to connect to MySQL: (\" . $mysqli->connect_errno . \") \" . $mysqli->connect_error;\n    exit();\n}\n\n// Set POST variables from form submission\n$email = $_POST['email'];\n$token = md5(uniqid(mt_rand(), true));\n\n// Check if email is in database\n$stmt = $mysqli->prepare(\"SELECT id, email FROM users WHERE email = ?\");\n$stmt->bind_param('s', $email);\n$stmt->execute();\n$result = $stmt->get_result();\n\nif ($result->num_rows > 0) {\n    // Email found in database, generate and send password reset token\n    $row = $result->fetch_assoc();\n    $token = base64_encode(serialize($row));\n    $subject = 'Reset your password';\n    $message = 'Click this link to reset your password: <a href=\"http://your-website.com/reset_password.php?token=' . $token . '\">Reset Password</a>';\n    mail($email, $subject, $message);\n\n    // Store token in database for future use\n    $stmt2 = $mysqli->prepare(\"UPDATE users SET password_token = ? WHERE email = ?\");\n    $stmt2->bind_param('ss', $token, $email);\n    $stmt2->execute();\n} else {\n    echo 'Email not found in database';\n}\n\n// Close connection to database\n$mysqli->close();\n\n?>\n```\n**`reset_password.php`:**\n```php\n<?php\n\n// Configuration settings\ndefine('DB_HOST', 'your_database_host');\ndefine('DB_USER', 'your_database_username');\ndefine('DB_PASSWORD', 'your_database_password');\ndefine('DB_NAME', 'your_database_name');\n\n// Connect to database\n$mysqli = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);\nif ($mysqli->connect_errno) {\n    echo \"Failed to connect to MySQL: (\" . $mysqli->connect_errno . \") \" . $mysqli->connect_error;\n    exit();\n}\n\n// Get token from URL parameter\n$token = base64_decode($_GET['token']);\n$token_array = unserialize($token);\n\n// Check if token is valid and matches email in database\n$stmt = $mysqli->prepare(\"SELECT id, email FROM users WHERE password_token = ? AND email = ?\");\n$stmt->bind_param('ss', $token, $token_array['email']);\n$stmt->execute();\n$result = $stmt->get_result();\n\nif ($result->num_rows > 0) {\n    // Token is valid, prompt user to enter new password\n    echo 'Enter your new password: <input type=\"password\" name=\"new_password\">';\n    echo '<input type=\"submit\" value=\"Reset Password\">';\n\n    // Update database with new password when form submitted\n    if ($_POST['new_password']) {\n        $stmt2 = $mysqli->prepare(\"UPDATE users SET password = ? WHERE id = ?\");\n        $stmt2->bind_param('ss', $_POST['new_password'], $token_array['id']);\n        $stmt2->execute();\n\n        // Clear token from database\n        $stmt3 = $mysqli->prepare(\"UPDATE users SET password_token = NULL WHERE email = ?\");\n        $stmt3->bind_param('s', $token_array['email']);\n        $stmt3->execute();\n    }\n} else {\n    echo 'Invalid or expired token';\n}\n\n// Close connection to database\n$mysqli->close();\n\n?>\n```\n**How it works:**\n\n1. The user submits their email address through the `forgot_password.php` page.\n2. The script checks if the email is in the database, and generates a random token using MD5 and base64 encoding.\n3. If the email is found, an email is sent to the user with a link to reset their password.\n4. When the user clicks on the link, they are taken to `reset_password.php` where they can enter a new password.\n5. The script checks if the token is valid and matches the email in the database, and updates the password accordingly.\n\nNote that this is just an example and you should consider implementing additional security measures such as:\n\n* Using a more secure method of generating tokens (e.g. JWT)\n* Implementing rate limiting to prevent abuse\n* Storing passwords securely using bcrypt or another hashing algorithm\n* Validating user input on both the forgot password and reset password pages", "code_blocks": ["```php\n<?php\n\n// Configuration settings\ndefine('DB_HOST', 'your_database_host');\ndefine('DB_USER', 'your_database_username');\ndefine('DB_PASSWORD', 'your_database_password');\ndefine('DB_NAME', 'your_database_name');\n\n// Connect to database\n$mysqli = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);\nif ($mysqli->connect_errno) {\n    echo \"Failed to connect to MySQL: (\" . $mysqli->connect_errno . \") \" . $mysqli->connect_error;\n    exit();\n}\n\n// Set POST variables from form submission\n$email = $_POST['email'];\n$token = md5(uniqid(mt_rand(), true));\n\n// Check if email is in database\n$stmt = $mysqli->prepare(\"SELECT id, email FROM users WHERE email = ?\");\n$stmt->bind_param('s', $email);\n$stmt->execute();\n$result = $stmt->get_result();\n\nif ($result->num_rows > 0) {\n    // Email found in database, generate and send password reset token\n    $row = $result->fetch_assoc();\n    $token = base64_encode(serialize($row));\n    $subject = 'Reset your password';\n    $message = 'Click this link to reset your password: <a href=\"http://your-website.com/reset_password.php?token=' . $token . '\">Reset Password</a>';\n    mail($email, $subject, $message);\n\n    // Store token in database for future use\n    $stmt2 = $mysqli->prepare(\"UPDATE users SET password_token = ? WHERE email = ?\");\n    $stmt2->bind_param('ss', $token, $email);\n    $stmt2->execute();\n} else {\n    echo 'Email not found in database';\n}\n\n// Close connection to database\n$mysqli->close();\n\n?>\n```", "```php\n<?php\n\n// Configuration settings\ndefine('DB_HOST', 'your_database_host');\ndefine('DB_USER', 'your_database_username');\ndefine('DB_PASSWORD', 'your_database_password');\ndefine('DB_NAME', 'your_database_name');\n\n// Connect to database\n$mysqli = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);\nif ($mysqli->connect_errno) {\n    echo \"Failed to connect to MySQL: (\" . $mysqli->connect_errno . \") \" . $mysqli->connect_error;\n    exit();\n}\n\n// Get token from URL parameter\n$token = base64_decode($_GET['token']);\n$token_array = unserialize($token);\n\n// Check if token is valid and matches email in database\n$stmt = $mysqli->prepare(\"SELECT id, email FROM users WHERE password_token = ? AND email = ?\");\n$stmt->bind_param('ss', $token, $token_array['email']);\n$stmt->execute();\n$result = $stmt->get_result();\n\nif ($result->num_rows > 0) {\n    // Token is valid, prompt user to enter new password\n    echo 'Enter your new password: <input type=\"password\" name=\"new_password\">';\n    echo '<input type=\"submit\" value=\"Reset Password\">';\n\n    // Update database with new password when form submitted\n    if ($_POST['new_password']) {\n        $stmt2 = $mysqli->prepare(\"UPDATE users SET password = ? WHERE id = ?\");\n        $stmt2->bind_param('ss', $_POST['new_password'], $token_array['id']);\n        $stmt2->execute();\n\n        // Clear token from database\n        $stmt3 = $mysqli->prepare(\"UPDATE users SET password_token = NULL WHERE email = ?\");\n        $stmt3->bind_param('s', $token_array['email']);\n        $stmt3->execute();\n    }\n} else {\n    echo 'Invalid or expired token';\n}\n\n// Close connection to database\n$mysqli->close();\n\n?>\n```"]}
