{"prompt": "Create a forgot password function using php", "llm_output": "Here is an example of how you can implement a \"Forgot Password\" function in PHP:\n\n**Database Table Structure**\n\nAssuming we have a database table named `users` with the following structure:\n```sql\nCREATE TABLE users (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  email VARCHAR(255) NOT NULL,\n  password_hash VARCHAR(255) NOT NULL\n);\n```\n**PHP Code**\n```php\n// forgot_password.php\n\nrequire_once 'database.php'; // assumes database connection script is in a file named database.php\n\nif (isset($_POST['email'])) {\n    $email = $_POST['email'];\n    $query = \"SELECT * FROM users WHERE email = '$email'\";\n    $result = mysqli_query($conn, $query);\n\n    if ($result->num_rows > 0) {\n        // User exists, generate password reset token\n        $user = $result->fetch_assoc();\n        $token = bin2hex(random_bytes(32));\n        update_password_reset_token($user['id'], $token);\n        send_password_reset_email($email, $token);\n    } else {\n        echo \"Email not found\";\n    }\n} elseif (isset($_POST['token'])) {\n    // Password reset token was provided\n    $token = $_POST['token'];\n    $query = \"SELECT * FROM users WHERE password_reset_token = '$token'\";\n    $result = mysqli_query($conn, $query);\n\n    if ($result->num_rows > 0) {\n        // User exists with matching token\n        $user = $result->fetch_assoc();\n        echo \"<form action='reset_password.php' method='post'>\n            <label for='new_password'>New Password:</label>\n            <input type='password' id='new_password' name='new_password'>\n            <input type='hidden' name='token' value='$token'>\n            <button type='submit'>Reset Password</button>\n        </form>\";\n    } else {\n        echo \"Invalid token\";\n    }\n}\n\nfunction update_password_reset_token($user_id, $token) {\n    // Update password reset token in database\n    $query = \"UPDATE users SET password_reset_token = '$token' WHERE id = '$user_id'\";\n    mysqli_query($conn, $query);\n}\n\nfunction send_password_reset_email($email, $token) {\n    // Send email with password reset link\n    $subject = 'Password Reset Request';\n    $body = \"Click this link to reset your password: <a href='reset_password.php?token=$token'>$token</a>\";\n    mail($email, $subject, $body);\n}\n```\n**Explanation**\n\nThis script uses a POST request to handle two scenarios:\n\n1. **Forgot Password**: When the user submits their email address, we query the database for a matching record. If found, we generate a random password reset token using `bin2hex(random_bytes(32))` and update the corresponding user's record in the database with the new token. We then send an email to the user with a link containing the password reset token.\n2. **Password Reset**: When the user clicks on the password reset link, they are redirected to this script with their `token` as a query parameter. If the token is valid, we display a form allowing them to enter their new password.\n\n**Note**\n\nThis implementation assumes you have already set up email sending using PHP's `mail()` function or a third-party library like PHPMailer. You should also ensure that your database connection script (`database.php`) is properly configured and secured.\n\nRemember to update the SQL queries to match your specific database schema and consider implementing additional security measures, such as hashing and salting passwords and verifying user input using prepared statements.", "code_blocks": [null, "```php\n// forgot_password.php\n\nrequire_once 'database.php'; // assumes database connection script is in a file named database.php\n\nif (isset($_POST['email'])) {\n    $email = $_POST['email'];\n    $query = \"SELECT * FROM users WHERE email = '$email'\";\n    $result = mysqli_query($conn, $query);\n\n    if ($result->num_rows > 0) {\n        // User exists, generate password reset token\n        $user = $result->fetch_assoc();\n        $token = bin2hex(random_bytes(32));\n        update_password_reset_token($user['id'], $token);\n        send_password_reset_email($email, $token);\n    } else {\n        echo \"Email not found\";\n    }\n} elseif (isset($_POST['token'])) {\n    // Password reset token was provided\n    $token = $_POST['token'];\n    $query = \"SELECT * FROM users WHERE password_reset_token = '$token'\";\n    $result = mysqli_query($conn, $query);\n\n    if ($result->num_rows > 0) {\n        // User exists with matching token\n        $user = $result->fetch_assoc();\n        echo \"<form action='reset_password.php' method='post'>\n            <label for='new_password'>New Password:</label>\n            <input type='password' id='new_password' name='new_password'>\n            <input type='hidden' name='token' value='$token'>\n            <button type='submit'>Reset Password</button>\n        </form>\";\n    } else {\n        echo \"Invalid token\";\n    }\n}\n\nfunction update_password_reset_token($user_id, $token) {\n    // Update password reset token in database\n    $query = \"UPDATE users SET password_reset_token = '$token' WHERE id = '$user_id'\";\n    mysqli_query($conn, $query);\n}\n\nfunction send_password_reset_email($email, $token) {\n    // Send email with password reset link\n    $subject = 'Password Reset Request';\n    $body = \"Click this link to reset your password: <a href='reset_password.php?token=$token'>$token</a>\";\n    mail($email, $subject, $body);\n}\n```"]}
