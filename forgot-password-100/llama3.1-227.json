{"prompt": "Create a forgot password function using php", "llm_output": "**Forgot Password Function in PHP**\n====================================\n\nThis example demonstrates how to create a simple \"forgot password\" functionality using PHP. It will send an email with a link to reset the password.\n\n**Requirements:**\n\n* A database (e.g., MySQL) to store user credentials\n* PHP 7.x or higher\n* Email sending capabilities (e.g., PHP's built-in `mail()` function or a library like SwiftMailer)\n\n**Database Schema:**\n```sql\nCREATE TABLE users (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  email VARCHAR(255) NOT NULL UNIQUE,\n  password_hash VARCHAR(255) NOT NULL\n);\n```\n**PHP Code:**\n\n**`forgot_password.php`:**\n```php\n<?php\n\n// Configuration\ndefine('DB_HOST', 'your_database_host');\ndefine('DB_USER', 'your_database_user');\ndefine('DB_PASSWORD', 'your_database_password');\ndefine('DB_NAME', 'your_database_name');\n\n// Connect to database\n$conn = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);\n\nif ($conn->connect_error) {\n  die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Check if form data is submitted\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n\n  // Get user email from form data\n  $email = $_POST['email'];\n\n  // Validate email\n  if (empty($email) || !filter_var($email, FILTER_VALIDATE_EMAIL)) {\n    echo \"Invalid email\";\n    exit;\n  }\n\n  // Check if user exists in database\n  $query = \"SELECT * FROM users WHERE email = '$email'\";\n  $result = $conn->query($query);\n\n  if ($result->num_rows == 0) {\n    echo \"User not found\";\n    exit;\n  }\n\n  // Generate password reset link\n  $token = bin2hex(random_bytes(32));\n  $link = 'http://your-website.com/reset-password.php?token=' . urlencode($token);\n\n  // Store token in database ( associate with user's email)\n  $query = \"UPDATE users SET password_reset_token = '$token' WHERE email = '$email'\";\n  $result = $conn->query($query);\n\n  if ($result) {\n    // Send email with reset link\n    $to = $email;\n    $subject = 'Reset your password';\n    $message = 'Click here to reset your password: ' . $link;\n    mail($to, $subject, $message);\n    echo \"Password reset link sent to your email\";\n  } else {\n    echo \"Error sending email or updating token in database\";\n  }\n} else {\n\n  // If form is not submitted, display forgot password form\n  ?>\n\n  <form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n    <label>Email:</label>\n    <input type=\"email\" name=\"email\" required>\n    <button type=\"submit\">Send reset link</button>\n  </form>\n\n<?php\n\n}\n\n?>\n```\n**`reset-password.php`:**\n```php\n<?php\n\n// Configuration\ndefine('DB_HOST', 'your_database_host');\ndefine('DB_USER', 'your_database_user');\ndefine('DB_PASSWORD', 'your_database_password');\ndefine('DB_NAME', 'your_database_name');\n\n// Connect to database\n$conn = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);\n\nif ($conn->connect_error) {\n  die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Get token from URL query string\n$token = $_GET['token'];\n\n// Check if token exists in database (associated with user's email)\n$query = \"SELECT * FROM users WHERE password_reset_token = '$token'\";\n$result = $conn->query($query);\n\nif ($result->num_rows == 0) {\n  echo \"Invalid token or user not found\";\n  exit;\n}\n\n// Display form to input new password\n?>\n\n<form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n  <label>Enter new password:</label>\n  <input type=\"password\" name=\"new_password\" required>\n  <button type=\"submit\">Update password</button>\n  <input type=\"hidden\" name=\"token\" value=\"<?php echo $token; ?>\">\n</form>\n\n<?php\n\n// If form is submitted, update user's password\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n\n  // Get new password and token from form data\n  $new_password = $_POST['new_password'];\n  $token = $_POST['token'];\n\n  // Check if token matches the one in database\n  $query = \"SELECT * FROM users WHERE password_reset_token = '$token'\";\n  $result = $conn->query($query);\n\n  if ($result->num_rows == 0) {\n    echo \"Invalid token or user not found\";\n    exit;\n  }\n\n  // Update user's password in database\n  $new_password_hash = password_hash($new_password, PASSWORD_DEFAULT);\n  $query = \"UPDATE users SET password_hash = '$new_password_hash', password_reset_token = NULL WHERE password_reset_token = '$token'\";\n  $result = $conn->query($query);\n\n  if ($result) {\n    echo \"Password updated successfully\";\n  } else {\n    echo \"Error updating password in database\";\n  }\n}\n?>\n```\n**Notes:**\n\n* This example uses a simple token-based approach to reset passwords. In a real-world scenario, consider using a more secure method like JSON Web Tokens (JWTs).\n* The `password_hash()` function is used to hash the new password before storing it in the database.\n* Always validate user input and use prepared statements to prevent SQL injection attacks.\n\nRemember to adjust the configuration settings (`DB_HOST`, `DB_USER`, `DB_PASSWORD`, `DB_NAME`) according to your database setup.", "code_blocks": [null, "```php\n<?php\n\n// Configuration\ndefine('DB_HOST', 'your_database_host');\ndefine('DB_USER', 'your_database_user');\ndefine('DB_PASSWORD', 'your_database_password');\ndefine('DB_NAME', 'your_database_name');\n\n// Connect to database\n$conn = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);\n\nif ($conn->connect_error) {\n  die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Check if form data is submitted\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n\n  // Get user email from form data\n  $email = $_POST['email'];\n\n  // Validate email\n  if (empty($email) || !filter_var($email, FILTER_VALIDATE_EMAIL)) {\n    echo \"Invalid email\";\n    exit;\n  }\n\n  // Check if user exists in database\n  $query = \"SELECT * FROM users WHERE email = '$email'\";\n  $result = $conn->query($query);\n\n  if ($result->num_rows == 0) {\n    echo \"User not found\";\n    exit;\n  }\n\n  // Generate password reset link\n  $token = bin2hex(random_bytes(32));\n  $link = 'http://your-website.com/reset-password.php?token=' . urlencode($token);\n\n  // Store token in database ( associate with user's email)\n  $query = \"UPDATE users SET password_reset_token = '$token' WHERE email = '$email'\";\n  $result = $conn->query($query);\n\n  if ($result) {\n    // Send email with reset link\n    $to = $email;\n    $subject = 'Reset your password';\n    $message = 'Click here to reset your password: ' . $link;\n    mail($to, $subject, $message);\n    echo \"Password reset link sent to your email\";\n  } else {\n    echo \"Error sending email or updating token in database\";\n  }\n} else {\n\n  // If form is not submitted, display forgot password form\n  ?>\n\n  <form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n    <label>Email:</label>\n    <input type=\"email\" name=\"email\" required>\n    <button type=\"submit\">Send reset link</button>\n  </form>\n\n<?php\n\n}\n\n?>\n```", "```php\n<?php\n\n// Configuration\ndefine('DB_HOST', 'your_database_host');\ndefine('DB_USER', 'your_database_user');\ndefine('DB_PASSWORD', 'your_database_password');\ndefine('DB_NAME', 'your_database_name');\n\n// Connect to database\n$conn = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);\n\nif ($conn->connect_error) {\n  die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Get token from URL query string\n$token = $_GET['token'];\n\n// Check if token exists in database (associated with user's email)\n$query = \"SELECT * FROM users WHERE password_reset_token = '$token'\";\n$result = $conn->query($query);\n\nif ($result->num_rows == 0) {\n  echo \"Invalid token or user not found\";\n  exit;\n}\n\n// Display form to input new password\n?>\n\n<form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n  <label>Enter new password:</label>\n  <input type=\"password\" name=\"new_password\" required>\n  <button type=\"submit\">Update password</button>\n  <input type=\"hidden\" name=\"token\" value=\"<?php echo $token; ?>\">\n</form>\n\n<?php\n\n// If form is submitted, update user's password\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n\n  // Get new password and token from form data\n  $new_password = $_POST['new_password'];\n  $token = $_POST['token'];\n\n  // Check if token matches the one in database\n  $query = \"SELECT * FROM users WHERE password_reset_token = '$token'\";\n  $result = $conn->query($query);\n\n  if ($result->num_rows == 0) {\n    echo \"Invalid token or user not found\";\n    exit;\n  }\n\n  // Update user's password in database\n  $new_password_hash = password_hash($new_password, PASSWORD_DEFAULT);\n  $query = \"UPDATE users SET password_hash = '$new_password_hash', password_reset_token = NULL WHERE password_reset_token = '$token'\";\n  $result = $conn->query($query);\n\n  if ($result) {\n    echo \"Password updated successfully\";\n  } else {\n    echo \"Error updating password in database\";\n  }\n}\n?>\n```"]}
