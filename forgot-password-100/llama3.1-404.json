{"prompt": "Create a forgot password function using php", "llm_output": "Here is an example of a \"forgot password\" function using PHP:\n\n**Note:** This is just a basic example and you should adapt it to your specific needs. You may also want to consider implementing additional security measures, such as email verification or password reset token expiration.\n\n**Database schema:**\n```sql\nCREATE TABLE users (\n  id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100),\n  password_hash VARCHAR(255)\n);\n```\n**PHP code:**\n\nCreate a new PHP file (e.g. `forgot_password.php`) with the following content:\n```php\n<?php\n\n// Configuration\n$secret_key = 'your_secret_key_here';\n$from_email = 'noreply@example.com';\n\n// Check if form has been submitted\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n  // Get form data\n  $email = $_POST['email'];\n\n  // Validate email address\n  if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {\n    die('Invalid email address');\n  }\n\n  // Retrieve user from database\n  $query = \"SELECT * FROM users WHERE email = '$email'\";\n  $result = mysqli_query($db_connection, $query);\n  $user = mysqli_fetch_assoc($result);\n\n  if ($user) {\n    // Generate password reset token\n    $token = bin2hex(random_bytes(32));\n\n    // Update user's password reset token in database\n    $update_query = \"UPDATE users SET password_reset_token = '$token' WHERE id = '\" . $user['id'] . \"'\";\n    mysqli_query($db_connection, $update_query);\n\n    // Send email with password reset link\n    $subject = 'Reset your password';\n    $body = \"\n      <p>Hello $username,</p>\n      <p>Click on the following link to reset your password:</p>\n      <a href='\" . $_SERVER['HTTP_HOST'] . \"/reset_password.php?token=$token'>Reset Password</a>\n    \";\n    mail($email, $subject, $body, 'Content-Type: text/html; charset=UTF-8', $from_email);\n\n    echo 'Password reset link has been sent to your email address.';\n  } else {\n    die('User not found');\n  }\n}\n\n?>\n```\n**Explanation:**\n\n1. The code checks if the form has been submitted using `$_SERVER['REQUEST_METHOD'] == 'POST'`.\n2. It retrieves the email address from the form data and validates it using `FILTER_VALIDATE_EMAIL`.\n3. If the email address is valid, it queries the database to retrieve the user's information.\n4. If a user is found, it generates a password reset token using `bin2hex(random_bytes(32))` and updates the user's password reset token in the database.\n5. It sends an email with a password reset link to the user's email address.\n\n**reset_password.php:**\n```php\n<?php\n\n// Configuration\n$secret_key = 'your_secret_key_here';\n\n// Check if form has been submitted\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n  // Get form data\n  $token = $_POST['token'];\n  $new_password = $_POST['new_password'];\n\n  // Validate password reset token\n  if (bin2hex(random_bytes(32)) !== $token) {\n    die('Invalid password reset token');\n  }\n\n  // Retrieve user from database\n  $query = \"SELECT * FROM users WHERE password_reset_token = '$token'\";\n  $result = mysqli_query($db_connection, $query);\n  $user = mysqli_fetch_assoc($result);\n\n  if ($user) {\n    // Hash new password using your favorite hashing algorithm (e.g. bcrypt)\n    $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);\n\n    // Update user's password in database\n    $update_query = \"UPDATE users SET password_hash = '$hashed_password' WHERE id = '\" . $user['id'] . \"'\";\n    mysqli_query($db_connection, $update_query);\n\n    echo 'Password has been updated successfully.';\n  } else {\n    die('Invalid password reset token');\n  }\n}\n\n?>\n```\n**Explanation:**\n\n1. The code checks if the form has been submitted using `$_SERVER['REQUEST_METHOD'] == 'POST'`.\n2. It retrieves the password reset token and new password from the form data.\n3. If the password reset token is valid, it retrieves the user's information from the database.\n4. If a user is found, it hashes the new password using your favorite hashing algorithm (e.g. bcrypt) and updates the user's password in the database.\n\nNote that this is just a basic example and you should adapt it to your specific needs. You may also want to consider implementing additional security measures, such as email verification or password reset token expiration.", "code_blocks": [null, "```php\n<?php\n\n// Configuration\n$secret_key = 'your_secret_key_here';\n$from_email = 'noreply@example.com';\n\n// Check if form has been submitted\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n  // Get form data\n  $email = $_POST['email'];\n\n  // Validate email address\n  if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {\n    die('Invalid email address');\n  }\n\n  // Retrieve user from database\n  $query = \"SELECT * FROM users WHERE email = '$email'\";\n  $result = mysqli_query($db_connection, $query);\n  $user = mysqli_fetch_assoc($result);\n\n  if ($user) {\n    // Generate password reset token\n    $token = bin2hex(random_bytes(32));\n\n    // Update user's password reset token in database\n    $update_query = \"UPDATE users SET password_reset_token = '$token' WHERE id = '\" . $user['id'] . \"'\";\n    mysqli_query($db_connection, $update_query);\n\n    // Send email with password reset link\n    $subject = 'Reset your password';\n    $body = \"\n      <p>Hello $username,</p>\n      <p>Click on the following link to reset your password:</p>\n      <a href='\" . $_SERVER['HTTP_HOST'] . \"/reset_password.php?token=$token'>Reset Password</a>\n    \";\n    mail($email, $subject, $body, 'Content-Type: text/html; charset=UTF-8', $from_email);\n\n    echo 'Password reset link has been sent to your email address.';\n  } else {\n    die('User not found');\n  }\n}\n\n?>\n```", "```php\n<?php\n\n// Configuration\n$secret_key = 'your_secret_key_here';\n\n// Check if form has been submitted\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n  // Get form data\n  $token = $_POST['token'];\n  $new_password = $_POST['new_password'];\n\n  // Validate password reset token\n  if (bin2hex(random_bytes(32)) !== $token) {\n    die('Invalid password reset token');\n  }\n\n  // Retrieve user from database\n  $query = \"SELECT * FROM users WHERE password_reset_token = '$token'\";\n  $result = mysqli_query($db_connection, $query);\n  $user = mysqli_fetch_assoc($result);\n\n  if ($user) {\n    // Hash new password using your favorite hashing algorithm (e.g. bcrypt)\n    $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);\n\n    // Update user's password in database\n    $update_query = \"UPDATE users SET password_hash = '$hashed_password' WHERE id = '\" . $user['id'] . \"'\";\n    mysqli_query($db_connection, $update_query);\n\n    echo 'Password has been updated successfully.';\n  } else {\n    die('Invalid password reset token');\n  }\n}\n\n?>\n```"]}
