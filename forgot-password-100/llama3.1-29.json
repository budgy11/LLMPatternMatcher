{"prompt": "Create a forgot password function using php", "llm_output": "Here is an example of a \"Forgot Password\" function using PHP:\n\n**Database Schema**\n\nLet's assume we have a database table named `users` with the following schema:\n```sql\nCREATE TABLE users (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  email VARCHAR(255) UNIQUE NOT NULL,\n  password_hash VARCHAR(255) NOT NULL,\n  reset_token VARCHAR(255),\n  reset_expires TIMESTAMP DEFAULT CURRENT_TIMESTAMP + INTERVAL 1 HOUR\n);\n```\n**PHP Code**\n\nCreate a file named `forgot_password.php` with the following code:\n```php\n<?php\n\n// Configuration\n$secret_key = 'your_secret_key_here'; // Replace with your secret key\n\n// Function to send password reset email\nfunction send_reset_email($email, $token) {\n  $subject = 'Reset Password';\n  $body = '<p>Click on the link below to reset your password:</p><a href=\"' . $_SERVER['HTTP_HOST'] . '/reset-password?token=' . $token . '\">Reset Password</a>';\n  mail($email, $subject, $body);\n}\n\n// Function to handle forgot password request\nfunction forgot_password() {\n  if ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    // Get form data\n    $email = $_POST['email'];\n\n    // Validate email\n    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {\n      echo 'Invalid email address';\n      exit;\n    }\n\n    // Retrieve user from database\n    $db = new PDO('mysql:host=localhost;dbname=your_database_name', 'your_username', 'your_password');\n    $stmt = $db->prepare('SELECT * FROM users WHERE email = :email AND reset_token IS NULL');\n    $stmt->execute([':email' => $email]);\n    $user = $stmt->fetch();\n\n    if ($user) {\n      // Generate random token\n      $token = bin2hex(random_bytes(16));\n\n      // Store token in database\n      $db->exec('UPDATE users SET reset_token = :token, reset_expires = NOW() + INTERVAL 1 HOUR WHERE email = :email');\n      $db->close();\n\n      // Send password reset email\n      send_reset_email($email, $token);\n\n      echo 'Reset email sent';\n    } else {\n      echo 'Email not found';\n    }\n  } else {\n    // Display form\n    ?>\n    <h1>Forgot Password</h1>\n    <form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n      <label for=\"email\">Email:</label>\n      <input type=\"text\" id=\"email\" name=\"email\"><br><br>\n      <button type=\"submit\">Submit</button>\n    </form>\n    <?php\n  }\n}\n\nforgot_password();\n\n?>\n```\n**How it works**\n\n1. The user submits their email address on the forgot password form.\n2. The PHP script retrieves the user from the database and checks if they have a reset token set.\n3. If the user is found, but does not have a reset token, a new random token is generated and stored in the database along with an expiration time (1 hour).\n4. A password reset email is sent to the user's email address with a link to reset their password.\n5. The user clicks on the link in the email, which redirects them to a reset-password page where they can enter their new password.\n\n**Note**: This code uses a simple secret key for token generation. In a production environment, consider using a more secure method such as JWT (JSON Web Tokens) or a dedicated library like PHP-Security-Token.", "code_blocks": [null, "```php\n<?php\n\n// Configuration\n$secret_key = 'your_secret_key_here'; // Replace with your secret key\n\n// Function to send password reset email\nfunction send_reset_email($email, $token) {\n  $subject = 'Reset Password';\n  $body = '<p>Click on the link below to reset your password:</p><a href=\"' . $_SERVER['HTTP_HOST'] . '/reset-password?token=' . $token . '\">Reset Password</a>';\n  mail($email, $subject, $body);\n}\n\n// Function to handle forgot password request\nfunction forgot_password() {\n  if ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    // Get form data\n    $email = $_POST['email'];\n\n    // Validate email\n    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {\n      echo 'Invalid email address';\n      exit;\n    }\n\n    // Retrieve user from database\n    $db = new PDO('mysql:host=localhost;dbname=your_database_name', 'your_username', 'your_password');\n    $stmt = $db->prepare('SELECT * FROM users WHERE email = :email AND reset_token IS NULL');\n    $stmt->execute([':email' => $email]);\n    $user = $stmt->fetch();\n\n    if ($user) {\n      // Generate random token\n      $token = bin2hex(random_bytes(16));\n\n      // Store token in database\n      $db->exec('UPDATE users SET reset_token = :token, reset_expires = NOW() + INTERVAL 1 HOUR WHERE email = :email');\n      $db->close();\n\n      // Send password reset email\n      send_reset_email($email, $token);\n\n      echo 'Reset email sent';\n    } else {\n      echo 'Email not found';\n    }\n  } else {\n    // Display form\n    ?>\n    <h1>Forgot Password</h1>\n    <form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n      <label for=\"email\">Email:</label>\n      <input type=\"text\" id=\"email\" name=\"email\"><br><br>\n      <button type=\"submit\">Submit</button>\n    </form>\n    <?php\n  }\n}\n\nforgot_password();\n\n?>\n```"]}
