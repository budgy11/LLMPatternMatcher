{"prompt": "Create a forgot password function using php", "llm_output": "**Forgot Password Function in PHP**\n=====================================\n\nThis example demonstrates how to create a forgotten password functionality for user authentication. It includes the following steps:\n\n1. **Check if the email exists**: Verify that the provided email address is registered with your system.\n2. **Generate a new password**: Create a random password and send it to the user's email address via an email notification.\n3. **Store the new password**: Update the user's account with the newly generated password.\n\n**Note:** This example assumes you have already set up user registration, login, and database storage using PHP.\n\n### Database Schema\n\nFor this example, we'll assume a `users` table with the following columns:\n\n| Column Name | Data Type |\n| --- | --- |\n| id | int (primary key) |\n| email | varchar(255) |\n| password | varchar(255) |\n\n### PHP Code: forgot_password.php\n```php\n<?php\n\n// Configuration\ndefine('EMAIL_SERVER', 'smtp.gmail.com');\ndefine('FROM_EMAIL', 'your_email@gmail.com');\ndefine('PASSWORD_RESET_TEMPLATE', 'password_reset.html');\n\n// Function to send email notification\nfunction sendEmailNotification($to, $subject, $body) {\n    // Set up mail server connection\n    $mail = mail();\n    $mail->isSMTP();\n    $mail->Host = EMAIL_SERVER;\n    $mail->Port = 587;\n    $mail->SMTPAuth = true;\n    $mail->Username = FROM_EMAIL;\n    $mail->Password = 'your_password';\n\n    // Set email parameters\n    $mail->setFrom(FROM_EMAIL, 'Your Name');\n    $mail->addAddress($to);\n\n    // Send email\n    $mail->isHTML(true);\n    $mail->Subject = $subject;\n    $mail->Body = $body;\n\n    if ($mail->send()) {\n        echo \"Email sent successfully!\";\n    } else {\n        echo \"Error sending email: \" . $mail->ErrorInfo;\n    }\n}\n\n// Function to generate random password\nfunction generateRandomPassword() {\n    $length = 8;\n    $characters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\n    $password = '';\n\n    for ($i = 0; $i < $length; $i++) {\n        $password .= $characters[rand(0, strlen($characters) - 1)];\n    }\n\n    return $password;\n}\n\n// Function to reset password\nfunction resetPassword($email) {\n    // Check if email exists in database\n    $query = \"SELECT * FROM users WHERE email = :email\";\n    $stmt = $pdo->prepare($query);\n    $stmt->execute([':email' => $email]);\n\n    if ($row = $stmt->fetch()) {\n        // Generate random password\n        $newPassword = generateRandomPassword();\n\n        // Update user's account with new password\n        $query = \"UPDATE users SET password = :password WHERE email = :email\";\n        $stmt = $pdo->prepare($query);\n        $stmt->execute([':password' => $newPassword, ':email' => $email]);\n\n        // Send email notification with new password\n        $body = '';\n        $body .= 'Your new password is: ' . $newPassword;\n        sendEmailNotification($email, 'Password Reset', $body);\n\n        echo \"New password sent to your email address!\";\n    } else {\n        echo \"No account found with the provided email address.\";\n    }\n}\n\n// Handle form submission\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    $email = $_POST['email'];\n\n    if (!empty($email)) {\n        resetPassword($email);\n    } else {\n        echo \"Please enter your email address to reset password.\";\n    }\n}\n?>\n```\n### HTML Form: forgot_password.html\n```html\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Forgot Password</title>\n</head>\n<body>\n    <h1>Forgot Password</h1>\n\n    <form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n        <label for=\"email\">Email:</label>\n        <input type=\"email\" id=\"email\" name=\"email\"><br><br>\n        <button type=\"submit\">Reset Password</button>\n    </form>\n</body>\n</html>\n```\n### Email Template: password_reset.html\n```html\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Password Reset</title>\n</head>\n<body>\n    <h1>Password Reset</h1>\n\n    <p>Your new password is: <?php echo $newPassword; ?></p>\n\n    <button onclick=\"window.location.href='login.php';\">Return to Login</button>\n</body>\n</html>\n```\n**Note:** Make sure to replace `your_email@gmail.com` and `'your_password'` with your actual email address and password.\n\nThis example provides a basic implementation of a forgotten password functionality. You can customize the code to fit your specific requirements and integrate it with your existing user registration and login systems.", "code_blocks": ["```php\n<?php\n\n// Configuration\ndefine('EMAIL_SERVER', 'smtp.gmail.com');\ndefine('FROM_EMAIL', 'your_email@gmail.com');\ndefine('PASSWORD_RESET_TEMPLATE', 'password_reset.html');\n\n// Function to send email notification\nfunction sendEmailNotification($to, $subject, $body) {\n    // Set up mail server connection\n    $mail = mail();\n    $mail->isSMTP();\n    $mail->Host = EMAIL_SERVER;\n    $mail->Port = 587;\n    $mail->SMTPAuth = true;\n    $mail->Username = FROM_EMAIL;\n    $mail->Password = 'your_password';\n\n    // Set email parameters\n    $mail->setFrom(FROM_EMAIL, 'Your Name');\n    $mail->addAddress($to);\n\n    // Send email\n    $mail->isHTML(true);\n    $mail->Subject = $subject;\n    $mail->Body = $body;\n\n    if ($mail->send()) {\n        echo \"Email sent successfully!\";\n    } else {\n        echo \"Error sending email: \" . $mail->ErrorInfo;\n    }\n}\n\n// Function to generate random password\nfunction generateRandomPassword() {\n    $length = 8;\n    $characters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\n    $password = '';\n\n    for ($i = 0; $i < $length; $i++) {\n        $password .= $characters[rand(0, strlen($characters) - 1)];\n    }\n\n    return $password;\n}\n\n// Function to reset password\nfunction resetPassword($email) {\n    // Check if email exists in database\n    $query = \"SELECT * FROM users WHERE email = :email\";\n    $stmt = $pdo->prepare($query);\n    $stmt->execute([':email' => $email]);\n\n    if ($row = $stmt->fetch()) {\n        // Generate random password\n        $newPassword = generateRandomPassword();\n\n        // Update user's account with new password\n        $query = \"UPDATE users SET password = :password WHERE email = :email\";\n        $stmt = $pdo->prepare($query);\n        $stmt->execute([':password' => $newPassword, ':email' => $email]);\n\n        // Send email notification with new password\n        $body = '';\n        $body .= 'Your new password is: ' . $newPassword;\n        sendEmailNotification($email, 'Password Reset', $body);\n\n        echo \"New password sent to your email address!\";\n    } else {\n        echo \"No account found with the provided email address.\";\n    }\n}\n\n// Handle form submission\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    $email = $_POST['email'];\n\n    if (!empty($email)) {\n        resetPassword($email);\n    } else {\n        echo \"Please enter your email address to reset password.\";\n    }\n}\n?>\n```", null, null]}
