{"prompt": "Create a forgot password function using php", "llm_output": "Here is an example of how you can create a \"Forgot Password\" functionality in PHP:\n\n**Step 1: Database Setup**\n\nFirst, we need to set up our database with the necessary tables. Let's assume we have a `users` table with columns for `username`, `email`, and `password`.\n\n```sql\nCREATE TABLE users (\n    id INT PRIMARY KEY AUTO_INCREMENT,\n    username VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    password VARCHAR(255) NOT NULL\n);\n```\n\n**Step 2: PHP Code**\n\nCreate a new file called `forgot_password.php` and add the following code:\n\n```php\n<?php\n\n// Configuration\ndefine('BASE_URL', 'http://example.com');\ndefine('RESET_PASSWORD_KEY', 'your_secret_key_here'); // Change this to a secret key\n\n// Database Connection\n$dsn = 'mysql:host=localhost;dbname=your_database_name';\n$user = 'your_username';\n$password = 'your_password';\n\ntry {\n    $pdo = new PDO($dsn, $user, $password);\n} catch (PDOException $e) {\n    echo 'Connection failed: ' . $e->getMessage();\n}\n\n// Form Submission\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    $email = $_POST['email'];\n    \n    // Validate Email\n    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {\n        echo 'Invalid email address';\n        exit;\n    }\n    \n    // Retrieve User from Database\n    $stmt = $pdo->prepare('SELECT * FROM users WHERE email = :email');\n    $stmt->bindParam(':email', $email);\n    $stmt->execute();\n    $user_data = $stmt->fetch();\n    \n    if ($user_data) {\n        // Generate Random Password and Send Email\n        $new_password = generateRandomPassword();\n        $reset_link = BASE_URL . '/reset-password.php?email=' . urlencode($email) . '&key=' . md5($RESET_PASSWORD_KEY . $email);\n        \n        // Send Email with New Password\n        sendEmail($user_data['username'], $new_password, $reset_link);\n        \n        echo 'A new password has been sent to your email. Please check your inbox.';\n    } else {\n        echo 'No user found with this email address';\n    }\n}\n\n// Helper Functions\nfunction generateRandomPassword() {\n    $chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^&*()_+~`|}{[]:;?><,./-=';\n    return substr(str_shuffle($chars), 0, 12);\n}\n\nfunction sendEmail($username, $new_password, $reset_link) {\n    $to = $email;\n    $subject = 'Reset Password for ' . $username;\n    $body = 'Hello ' . $username . ', <br> Your new password is: ' . $new_password . '<br> Please click on the following link to reset your password:<br><a href=\"' . $reset_link . '\">Reset Password</a>';\n    \n    // Send Email using PHPMailer or mail()\n}\n\n?>\n```\n\n**Step 3: HTML Form**\n\nCreate an HTML form that users can submit to request a password reset:\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Forgot Password</title>\n</head>\n<body>\n    <h1>Forgot Password</h1>\n    \n    <form action=\"<?php echo BASE_URL . '/forgot_password.php'; ?>\" method=\"post\">\n        <input type=\"email\" name=\"email\" placeholder=\"Email Address\"><br><br>\n        <input type=\"submit\" value=\"Request Password Reset\">\n    </form>\n</body>\n</html>\n```\n\n**Step 4: Email Verification**\n\nCreate a new file called `reset-password.php` to verify the user's email address and reset their password:\n\n```php\n<?php\n\n// Configuration\ndefine('BASE_URL', 'http://example.com');\ndefine('RESET_PASSWORD_KEY', 'your_secret_key_here'); // Change this to a secret key\n\n// Database Connection\n$dsn = 'mysql:host=localhost;dbname=your_database_name';\n$user = 'your_username';\n$password = 'your_password';\n\ntry {\n    $pdo = new PDO($dsn, $user, $password);\n} catch (PDOException $e) {\n    echo 'Connection failed: ' . $e->getMessage();\n}\n\n// Form Submission\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    $email = $_GET['email'];\n    $key = $_GET['key'];\n    \n    // Validate Key and Email\n    if (!isset($email) || !isset($key)) {\n        echo 'Invalid request';\n        exit;\n    }\n    \n    // Verify Key and Email\n    $stmt = $pdo->prepare('SELECT * FROM users WHERE email = :email AND key = :key');\n    $stmt->bindParam(':email', $email);\n    $stmt->bindParam(':key', md5($RESET_PASSWORD_KEY . $email));\n    $stmt->execute();\n    $user_data = $stmt->fetch();\n    \n    if ($user_data) {\n        // Update Password\n        $new_password = $_POST['new_password'];\n        \n        // Validate New Password\n        if (!preg_match('/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/', $new_password)) {\n            echo 'Invalid new password';\n            exit;\n        }\n        \n        // Update Password in Database\n        $stmt = $pdo->prepare('UPDATE users SET password = :password WHERE email = :email');\n        $stmt->bindParam(':password', md5($new_password));\n        $stmt->bindParam(':email', $email);\n        $stmt->execute();\n        \n        echo 'Your password has been updated successfully';\n    } else {\n        echo 'Invalid request';\n    }\n}\n\n// HTML Form\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Reset Password</title>\n</head>\n<body>\n    <?php if (isset($_GET['email'])) { ?>\n        <h1>Reset Password for <?= $_GET['email']; ?></h1>\n        \n        <form action=\"<?php echo BASE_URL . '/reset-password.php?email=' . urlencode($_GET['email']) . '&key=' . md5(RESET_PASSWORD_KEY . $_GET['email']); ?>\" method=\"post\">\n            <input type=\"password\" name=\"new_password\" placeholder=\"New Password\"><br><br>\n            <input type=\"submit\" value=\"Update Password\">\n        </form>\n    <?php } ?>\n</body>\n</html>\n```\n\nThis is a basic example of how you can create a \"Forgot Password\" functionality in PHP. You should modify the code to fit your specific needs and add additional security measures as necessary.\n\nRemember to change the `RESET_PASSWORD_KEY` to a secret key that only you know, and make sure to store it securely on your server.\n\nAlso, note that this is just an example and you should consider implementing additional security measures such as:\n\n* Hashing and salting passwords\n* Using a secure password reset protocol (e.g. OAuth)\n* Implementing rate limiting for password reset requests\n* Storing user data securely in a database\n\nI hope this helps! Let me know if you have any questions or need further assistance.", "code_blocks": [null, "```php\n<?php\n\n// Configuration\ndefine('BASE_URL', 'http://example.com');\ndefine('RESET_PASSWORD_KEY', 'your_secret_key_here'); // Change this to a secret key\n\n// Database Connection\n$dsn = 'mysql:host=localhost;dbname=your_database_name';\n$user = 'your_username';\n$password = 'your_password';\n\ntry {\n    $pdo = new PDO($dsn, $user, $password);\n} catch (PDOException $e) {\n    echo 'Connection failed: ' . $e->getMessage();\n}\n\n// Form Submission\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    $email = $_POST['email'];\n    \n    // Validate Email\n    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {\n        echo 'Invalid email address';\n        exit;\n    }\n    \n    // Retrieve User from Database\n    $stmt = $pdo->prepare('SELECT * FROM users WHERE email = :email');\n    $stmt->bindParam(':email', $email);\n    $stmt->execute();\n    $user_data = $stmt->fetch();\n    \n    if ($user_data) {\n        // Generate Random Password and Send Email\n        $new_password = generateRandomPassword();\n        $reset_link = BASE_URL . '/reset-password.php?email=' . urlencode($email) . '&key=' . md5($RESET_PASSWORD_KEY . $email);\n        \n        // Send Email with New Password\n        sendEmail($user_data['username'], $new_password, $reset_link);\n        \n        echo 'A new password has been sent to your email. Please check your inbox.';\n    } else {\n        echo 'No user found with this email address';\n    }\n}\n\n// Helper Functions\nfunction generateRandomPassword() {\n    $chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^&*()_+~`|}{[]:;?><,./-=';\n    return substr(str_shuffle($chars), 0, 12);\n}\n\nfunction sendEmail($username, $new_password, $reset_link) {\n    $to = $email;\n    $subject = 'Reset Password for ' . $username;\n    $body = 'Hello ' . $username . ', <br> Your new password is: ' . $new_password . '<br> Please click on the following link to reset your password:<br><a href=\"' . $reset_link . '\">Reset Password</a>';\n    \n    // Send Email using PHPMailer or mail()\n}\n\n?>\n```", null, "```php\n<?php\n\n// Configuration\ndefine('BASE_URL', 'http://example.com');\ndefine('RESET_PASSWORD_KEY', 'your_secret_key_here'); // Change this to a secret key\n\n// Database Connection\n$dsn = 'mysql:host=localhost;dbname=your_database_name';\n$user = 'your_username';\n$password = 'your_password';\n\ntry {\n    $pdo = new PDO($dsn, $user, $password);\n} catch (PDOException $e) {\n    echo 'Connection failed: ' . $e->getMessage();\n}\n\n// Form Submission\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    $email = $_GET['email'];\n    $key = $_GET['key'];\n    \n    // Validate Key and Email\n    if (!isset($email) || !isset($key)) {\n        echo 'Invalid request';\n        exit;\n    }\n    \n    // Verify Key and Email\n    $stmt = $pdo->prepare('SELECT * FROM users WHERE email = :email AND key = :key');\n    $stmt->bindParam(':email', $email);\n    $stmt->bindParam(':key', md5($RESET_PASSWORD_KEY . $email));\n    $stmt->execute();\n    $user_data = $stmt->fetch();\n    \n    if ($user_data) {\n        // Update Password\n        $new_password = $_POST['new_password'];\n        \n        // Validate New Password\n        if (!preg_match('/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/', $new_password)) {\n            echo 'Invalid new password';\n            exit;\n        }\n        \n        // Update Password in Database\n        $stmt = $pdo->prepare('UPDATE users SET password = :password WHERE email = :email');\n        $stmt->bindParam(':password', md5($new_password));\n        $stmt->bindParam(':email', $email);\n        $stmt->execute();\n        \n        echo 'Your password has been updated successfully';\n    } else {\n        echo 'Invalid request';\n    }\n}\n\n// HTML Form\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Reset Password</title>\n</head>\n<body>\n    <?php if (isset($_GET['email'])) { ?>\n        <h1>Reset Password for <?= $_GET['email']; ?></h1>\n        \n        <form action=\"<?php echo BASE_URL . '/reset-password.php?email=' . urlencode($_GET['email']) . '&key=' . md5(RESET_PASSWORD_KEY . $_GET['email']); ?>\" method=\"post\">\n            <input type=\"password\" name=\"new_password\" placeholder=\"New Password\"><br><br>\n            <input type=\"submit\" value=\"Update Password\">\n        </form>\n    <?php } ?>\n</body>\n</html>\n```"]}
