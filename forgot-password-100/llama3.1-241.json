{"prompt": "Create a forgot password function using php", "llm_output": "Here is an example of how to create a \"forgot password\" function using PHP:\n\n**Note:** This example uses PHP's built-in `password_hash` and `password_verify` functions for password hashing. Make sure you have the latest version of PHP installed.\n\n**Database Table:**\n```sql\nCREATE TABLE users (\n  id INT PRIMARY KEY,\n  email VARCHAR(255) NOT NULL,\n  password_hash VARCHAR(255) NOT NULL\n);\n```\n**PHP Code:**\n\nCreate a new file called `forgot_password.php` and add the following code:\n```php\n<?php\n\n// Configuration\ndefine('SITE_URL', 'https://example.com');\ndefine('DB_HOST', 'localhost');\ndefine('DB_USER', 'your_username');\ndefine('DB_PASSWORD', 'your_password');\ndefine('DB_NAME', 'your_database');\n\n// Database connection\n$conn = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\nfunction send_reset_email($email) {\n  // Generate a reset link with a token\n  $token = bin2hex(random_bytes(16));\n  $reset_link = SITE_URL . '/reset_password.php?token=' . $token;\n\n  // Send email using your preferred method (e.g. PHPMailer)\n  $subject = 'Reset Password';\n  $body = \"Click this link to reset your password: $reset_link\";\n  mail($email, $subject, $body);\n\n  return $token;\n}\n\nfunction check_reset_token($token) {\n  // Query the database for a user with the matching token\n  $sql = \"SELECT * FROM users WHERE reset_token = '$token'\";\n  $result = $conn->query($sql);\n  if ($result->num_rows > 0) {\n    return true; // Token is valid\n  } else {\n    return false; // Token is invalid or doesn't exist\n  }\n}\n\nfunction reset_password($email, $new_password) {\n  // Hash the new password\n  $password_hash = password_hash($new_password, PASSWORD_DEFAULT);\n\n  // Update the user's record in the database\n  $sql = \"UPDATE users SET password_hash = '$password_hash' WHERE email = '$email'\";\n  if ($conn->query($sql)) {\n    return true; // Password updated successfully\n  } else {\n    return false; // Error updating password\n  }\n}\n\n// Forgot password form submission handler\nif (isset($_POST['submit'])) {\n  $email = $_POST['email'];\n  $reset_token = send_reset_email($email);\n\n  if ($reset_token) {\n    echo \"Email sent with reset link.\";\n  } else {\n    echo \"Error sending email.\";\n  }\n}\n\n// Reset password form submission handler\nif (isset($_GET['token'])) {\n  $token = $_GET['token'];\n  if (check_reset_token($token)) {\n    // Display the reset password form\n    ?>\n    <form action=\"\" method=\"post\">\n      <input type=\"password\" name=\"new_password\" placeholder=\"New Password\">\n      <button type=\"submit\">Reset Password</button>\n      <input type=\"hidden\" name=\"email\" value=\"<?php echo $_SESSION['email']; ?>\">\n    </form>\n    <?php\n  } else {\n    // Token is invalid or doesn't exist\n    echo \"Invalid token.\";\n  }\n}\n\n// Reset password form submission handler (continued)\nif (isset($_POST['submit'])) {\n  $new_password = $_POST['new_password'];\n  if (reset_password($_SESSION['email'], $new_password)) {\n    echo \"Password updated successfully!\";\n  } else {\n    echo \"Error updating password.\";\n  }\n}\n\n?>\n```\n**How it works:**\n\n1. The user submits the forgot password form with their email address.\n2. A reset link with a unique token is generated and sent to the user's email.\n3. When the user clicks on the reset link, the `check_reset_token` function checks if the token is valid and exists in the database.\n4. If the token is valid, the user is displayed a form to enter their new password.\n5. Once the user submits the form, the `reset_password` function updates the user's record in the database with the hashed new password.\n\n**Security notes:**\n\n* Always use secure communication protocols (HTTPS) when sending emails or submitting forms.\n* Use a reliable email library like PHPMailer to send emails securely.\n* Hash passwords using the latest version of PHP's `password_hash` function.\n* Store reset tokens securely and never store them in plain text.\n\nThis is just an example code, you may need to modify it according to your specific requirements and database schema.", "code_blocks": [null, "```php\n<?php\n\n// Configuration\ndefine('SITE_URL', 'https://example.com');\ndefine('DB_HOST', 'localhost');\ndefine('DB_USER', 'your_username');\ndefine('DB_PASSWORD', 'your_password');\ndefine('DB_NAME', 'your_database');\n\n// Database connection\n$conn = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\nfunction send_reset_email($email) {\n  // Generate a reset link with a token\n  $token = bin2hex(random_bytes(16));\n  $reset_link = SITE_URL . '/reset_password.php?token=' . $token;\n\n  // Send email using your preferred method (e.g. PHPMailer)\n  $subject = 'Reset Password';\n  $body = \"Click this link to reset your password: $reset_link\";\n  mail($email, $subject, $body);\n\n  return $token;\n}\n\nfunction check_reset_token($token) {\n  // Query the database for a user with the matching token\n  $sql = \"SELECT * FROM users WHERE reset_token = '$token'\";\n  $result = $conn->query($sql);\n  if ($result->num_rows > 0) {\n    return true; // Token is valid\n  } else {\n    return false; // Token is invalid or doesn't exist\n  }\n}\n\nfunction reset_password($email, $new_password) {\n  // Hash the new password\n  $password_hash = password_hash($new_password, PASSWORD_DEFAULT);\n\n  // Update the user's record in the database\n  $sql = \"UPDATE users SET password_hash = '$password_hash' WHERE email = '$email'\";\n  if ($conn->query($sql)) {\n    return true; // Password updated successfully\n  } else {\n    return false; // Error updating password\n  }\n}\n\n// Forgot password form submission handler\nif (isset($_POST['submit'])) {\n  $email = $_POST['email'];\n  $reset_token = send_reset_email($email);\n\n  if ($reset_token) {\n    echo \"Email sent with reset link.\";\n  } else {\n    echo \"Error sending email.\";\n  }\n}\n\n// Reset password form submission handler\nif (isset($_GET['token'])) {\n  $token = $_GET['token'];\n  if (check_reset_token($token)) {\n    // Display the reset password form\n    ?>\n    <form action=\"\" method=\"post\">\n      <input type=\"password\" name=\"new_password\" placeholder=\"New Password\">\n      <button type=\"submit\">Reset Password</button>\n      <input type=\"hidden\" name=\"email\" value=\"<?php echo $_SESSION['email']; ?>\">\n    </form>\n    <?php\n  } else {\n    // Token is invalid or doesn't exist\n    echo \"Invalid token.\";\n  }\n}\n\n// Reset password form submission handler (continued)\nif (isset($_POST['submit'])) {\n  $new_password = $_POST['new_password'];\n  if (reset_password($_SESSION['email'], $new_password)) {\n    echo \"Password updated successfully!\";\n  } else {\n    echo \"Error updating password.\";\n  }\n}\n\n?>\n```"]}
