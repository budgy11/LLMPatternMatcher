{"prompt": "Create a forgot password function using php", "llm_output": "Here is an example of how you can create a \"Forgot Password\" functionality in PHP:\n\n**Step 1: Database Schema**\n\nFirst, let's assume we have a table called `users` with the following columns:\n```sql\nCREATE TABLE users (\n    id INT PRIMARY KEY AUTO_INCREMENT,\n    email VARCHAR(255) NOT NULL,\n    password VARCHAR(255) NOT NULL,\n    reset_token VARCHAR(255)\n);\n```\n**Step 2: PHP Code**\n\nCreate a new PHP file called `forgot_password.php` and add the following code:\n```php\n<?php\n\n// Configuration\nrequire_once 'config.php';\n\n// Get user input\n$email = $_POST['email'];\n\n// Validate email address\nif (!filter_var($email, FILTER_VALIDATE_EMAIL)) {\n    echo \"Invalid email address.\";\n    exit;\n}\n\n// Retrieve user data from database\n$stmt = $mysqli->prepare(\"SELECT * FROM users WHERE email = ?\");\n$stmt->bind_param('s', $email);\n$stmt->execute();\n$result = $stmt->get_result();\n\nif ($result->num_rows == 0) {\n    echo \"Email address not found.\";\n    exit;\n}\n\n// Get user data\n$user_data = $result->fetch_assoc();\n\n// Generate reset token\n$reset_token = bin2hex(random_bytes(32));\n$update_stmt = $mysqli->prepare(\"UPDATE users SET reset_token = ? WHERE email = ?\");\n$update_stmt->bind_param('ss', $reset_token, $email);\n$update_stmt->execute();\n\n// Send password reset email (insert your own email sending code here)\n$subject = \"Password Reset\";\n$body = \"Hello, please click the following link to reset your password: <a href='http://example.com/reset_password.php?token=\" . $reset_token . \"'>Reset Password</a>\";\nmail($user_data['email'], $subject, $body);\n\necho \"A password reset email has been sent to your email address.\";\n\n?>\n```\n**Step 3: Explanation**\n\nHere's what the code does:\n\n1. It first validates the user input (email address) using a filter.\n2. If the email is valid, it tries to retrieve the corresponding user data from the database using prepared statements.\n3. If no user data is found, it displays an error message and exits.\n4. If a user is found, it generates a random reset token using PHP's `random_bytes()` function.\n5. It updates the user's record in the database with the new reset token.\n6. Finally, it sends a password reset email to the user using PHP's `mail()` function (you'll need to insert your own email sending code here).\n\n**Step 4: Reset Password**\n\nCreate another PHP file called `reset_password.php` and add the following code:\n```php\n<?php\n\n// Configuration\nrequire_once 'config.php';\n\n// Get reset token from URL parameter\n$token = $_GET['token'];\n\n// Retrieve user data from database using reset token\n$stmt = $mysqli->prepare(\"SELECT * FROM users WHERE reset_token = ?\");\n$stmt->bind_param('s', $token);\n$stmt->execute();\n$result = $stmt->get_result();\n\nif ($result->num_rows == 0) {\n    echo \"Invalid reset token.\";\n    exit;\n}\n\n// Get user data\n$user_data = $result->fetch_assoc();\n\n// Display password reset form\n?>\n<form action=\"\" method=\"post\">\n    <label for=\"password\">New Password:</label>\n    <input type=\"password\" id=\"password\" name=\"password\"><br><br>\n    <label for=\"confirm_password\">Confirm New Password:</label>\n    <input type=\"password\" id=\"confirm_password\" name=\"confirm_password\"><br><br>\n    <input type=\"submit\" value=\"Reset Password\">\n</form>\n\n<?php\nif (isset($_POST['password'])) {\n    // Validate new password and confirm password\n    if ($_POST['password'] !== $_POST['confirm_password']) {\n        echo \"Passwords do not match.\";\n        exit;\n    }\n\n    // Update user's record in database with new password\n    $stmt = $mysqli->prepare(\"UPDATE users SET password = ? WHERE id = ?\");\n    $stmt->bind_param('si', md5($_POST['password']), $user_data['id']);\n    $stmt->execute();\n\n    // Delete reset token from user's record in database\n    $update_stmt = $mysqli->prepare(\"UPDATE users SET reset_token = NULL WHERE id = ?\");\n    $update_stmt->bind_param('i', $user_data['id']);\n    $update_stmt->execute();\n\n    echo \"Password has been successfully updated.\";\n}\n?>\n```\n**Step 5: Explanation**\n\nHere's what the code does:\n\n1. It first retrieves the user data from the database using the reset token.\n2. If no user data is found, it displays an error message and exits.\n3. It displays a password reset form to the user.\n4. When the user submits the form, it validates the new password and confirm password fields.\n5. If the passwords match, it updates the user's record in the database with the new password using prepared statements.\n6. Finally, it deletes the reset token from the user's record in the database.\n\nNote: This is a basic example and you should add additional security measures such as hashing the password before storing it in the database, and validating user input to prevent SQL injection attacks.", "code_blocks": [null, "```php\n<?php\n\n// Configuration\nrequire_once 'config.php';\n\n// Get user input\n$email = $_POST['email'];\n\n// Validate email address\nif (!filter_var($email, FILTER_VALIDATE_EMAIL)) {\n    echo \"Invalid email address.\";\n    exit;\n}\n\n// Retrieve user data from database\n$stmt = $mysqli->prepare(\"SELECT * FROM users WHERE email = ?\");\n$stmt->bind_param('s', $email);\n$stmt->execute();\n$result = $stmt->get_result();\n\nif ($result->num_rows == 0) {\n    echo \"Email address not found.\";\n    exit;\n}\n\n// Get user data\n$user_data = $result->fetch_assoc();\n\n// Generate reset token\n$reset_token = bin2hex(random_bytes(32));\n$update_stmt = $mysqli->prepare(\"UPDATE users SET reset_token = ? WHERE email = ?\");\n$update_stmt->bind_param('ss', $reset_token, $email);\n$update_stmt->execute();\n\n// Send password reset email (insert your own email sending code here)\n$subject = \"Password Reset\";\n$body = \"Hello, please click the following link to reset your password: <a href='http://example.com/reset_password.php?token=\" . $reset_token . \"'>Reset Password</a>\";\nmail($user_data['email'], $subject, $body);\n\necho \"A password reset email has been sent to your email address.\";\n\n?>\n```", "```php\n<?php\n\n// Configuration\nrequire_once 'config.php';\n\n// Get reset token from URL parameter\n$token = $_GET['token'];\n\n// Retrieve user data from database using reset token\n$stmt = $mysqli->prepare(\"SELECT * FROM users WHERE reset_token = ?\");\n$stmt->bind_param('s', $token);\n$stmt->execute();\n$result = $stmt->get_result();\n\nif ($result->num_rows == 0) {\n    echo \"Invalid reset token.\";\n    exit;\n}\n\n// Get user data\n$user_data = $result->fetch_assoc();\n\n// Display password reset form\n?>\n<form action=\"\" method=\"post\">\n    <label for=\"password\">New Password:</label>\n    <input type=\"password\" id=\"password\" name=\"password\"><br><br>\n    <label for=\"confirm_password\">Confirm New Password:</label>\n    <input type=\"password\" id=\"confirm_password\" name=\"confirm_password\"><br><br>\n    <input type=\"submit\" value=\"Reset Password\">\n</form>\n\n<?php\nif (isset($_POST['password'])) {\n    // Validate new password and confirm password\n    if ($_POST['password'] !== $_POST['confirm_password']) {\n        echo \"Passwords do not match.\";\n        exit;\n    }\n\n    // Update user's record in database with new password\n    $stmt = $mysqli->prepare(\"UPDATE users SET password = ? WHERE id = ?\");\n    $stmt->bind_param('si', md5($_POST['password']), $user_data['id']);\n    $stmt->execute();\n\n    // Delete reset token from user's record in database\n    $update_stmt = $mysqli->prepare(\"UPDATE users SET reset_token = NULL WHERE id = ?\");\n    $update_stmt->bind_param('i', $user_data['id']);\n    $update_stmt->execute();\n\n    echo \"Password has been successfully updated.\";\n}\n?>\n```"]}
