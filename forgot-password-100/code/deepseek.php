
<?php
// Database connection details
$host = 'localhost';
$username = 'your_username';
$password = 'your_password';
$database = 'your_database';

// Connect to database
$conn = new mysqli($host, $username, $password, $database);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

if (isset($_POST['email'])) {
    $email = $_POST['email'];
    
    // Validate email format
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        header("Location: forgot_password_form.php?error=Invalid%20email%20format");
        exit();
    }
    
    // Check if email exists in database
    $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
    $stmt->bind_param("s", $email);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows == 0) {
        header("Location: forgot_password_form.php?error=Email%20not%20found");
        exit();
    }
    
    // Generate reset token
    $resetToken = bin2hex(random_bytes(16));
    $expires = strtotime('+30 minutes');
    
    // Update database with reset token and expiration time
    $stmt = $conn->prepare("UPDATE users SET reset_token = ?, reset_expires = ? WHERE email = ?");
    $stmt->bind_param("sis", $resetToken, $expires, $email);
    $stmt->execute();
    
    // Send reset password email
    $to = $email;
    $subject = "Reset Your Password";
    $message = "
        <html>
            <body>
                <h2>Forgot Password?</h2>
                <p>Please click the link below to reset your password:</p>
                <a href='http://your_website.com/reset_password.php?id=" . $id . "&token=" . $resetToken . "'>Reset Password</a>
                <br><br>
                <p>If you didn't request a password reset, please ignore this email.</p>
            </body>
        </html>
    ";
    
    $headers = "MIME-Version: 1.0" . "\r
";
    $headers .= "Content-type:text/html;charset=UTF-8" . "\r
";
    $headers .= "From: your_email@example.com" . "\r
";
    
    mail($to, $subject, $message, $headers);
    
    header("Location: forgot_password_form.php?error=Password%20reset%20link%20sent%20to%20your%20email");
    exit();
}
?>


<?php
// Database connection details
$host = 'localhost';
$username = 'your_username';
$password = 'your_password';
$database = 'your_database';

// Connect to database
$conn = new mysqli($host, $username, $password, $database);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

if (isset($_GET['id']) && isset($_GET['token'])) {
    $id = $_GET['id'];
    $token = $_GET['token'];
    
    // Check if token exists and hasn't expired
    $stmt = $conn->prepare("SELECT id, reset_token, reset_expires FROM users WHERE id = ?");
    $stmt->bind_param("i", $id);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows == 0) {
        header("Location: forgot_password_form.php?error=Invalid%20link");
        exit();
    }
    
    $row = $result->fetch_assoc();
    if ($row['reset_token'] != $token || $row['reset_expires'] < time()) {
        header("Location: forgot_password_form.php?error=Expired%20or%20invalid%20link");
        exit();
    }
    
} elseif (isset($_POST['id']) && isset($_POST['token'])) {
    $id = $_POST['id'];
    $token = $_POST['token'];
    $newPassword = $_POST['new_password'];
    $confirmPassword = $_POST['confirm_password'];
    
    if ($newPassword != $confirmPassword) {
        header("Location: reset_password.php?id=$id&token=$token&error=Passwords%20do%20not%20match");
        exit();
    }
    
    // Update password
    $hashedPassword = password_hash($newPassword, PASSWORD_DEFAULT);
    
    $stmt = $conn->prepare("UPDATE users SET password = ?, reset_token = NULL WHERE id = ?");
    $stmt->bind_param("si", $hashedPassword, $id);
    $stmt->execute();
    
    // Clear the reset token
    $stmt = $conn->prepare("UPDATE users SET reset_token = NULL, reset_expires = NULL WHERE id = ?");
    $stmt->bind_param("i", $id);
    $stmt->execute();
    
    header("Location: login.php?success=Password%20reset%20successful");
    exit();
}
?>


<?php
// Include the database configuration file
include_once 'db_config.php';

if (isset($_POST['reset_password'])) {
    $email = $_POST['email'];
    
    // Check if email exists in the database
    $stmt = $mysqli->prepare("SELECT id, username FROM users WHERE email = ?");
    $stmt->bind_param('s', $email);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        // Generate a random token
        $token = bin2hex(random_bytes(32));
        
        // Update the token in the database
        $updateStmt = $mysqli->prepare("UPDATE users SET reset_token = ?, reset_expires = DATE_ADD(NOW(), INTERVAL 1 HOUR) WHERE email = ?");
        $updateStmt->bind_param('ss', $token, $email);
        $updateStmt->execute();
        
        // Send the password reset link to the user's email
        $to = $email;
        $subject = "Password Reset Request";
        $message = "
            <html>
                <head>
                    <title>Password Reset</title>
                </head>
                <body style='font-family: Arial, sans-serif;'>
                    <h2>Forgot Password?</h2>
                    <p>We received a password reset request. Click the button below to reset your password.</p>
                    <a href='http://yourwebsite.com/reset-password.php?token=$token' style='background-color: #4CAF50;color: white;padding: 16px 24px;text-decoration: none;border-radius: 4px;display: inline-block;'>Reset Password</a>
                    <br><br>
                    <p>If you didn't request a password reset, you can safely ignore this email.</p>
                </body>
            </html>";
        $headers = "MIME-Version: 1.0" . "\r
";
        $headers .= "Content-type:text/html;charset=UTF-8" . "\r
";
        $headers .= "From: yourwebsite.com <noreply@yourwebsite.com>" . "\r
";

        if (mail($to, $subject, $message, $headers)) {
            // Password reset link sent successfully
            echo "<script>alert('A password reset link has been sent to your email address.');</script>";
            header("Location: index.php");
        } else {
            // Error sending the email
            echo "<script>alert('An error occurred while sending the password reset email. Please try again later.');</script>";
        }
    } else {
        // Email not found in database
        echo "<script>alert('This email address is not registered with us.');</script>";
    }
}
?>


<?php
session_start();
require_once 'db_connection.php'; // Include your database connection file

// Function to generate a random string for the token
function generateToken($length = 32) {
    $characters = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';
    $token = '';
    for ($i = 0; $i < $length; $i++) {
        $token .= $characters[rand(0, strlen($characters) - 1)];
    }
    return $token;
}

// Function to send the reset password email
function sendResetEmail($email, $resetToken) {
    $to = $email;
    $subject = "Password Reset Request";
    $message = "Please click on the following link to reset your password: 

";
    $message .= "http://yourwebsite.com/reset_password.php?token=" . $resetToken . "

";
    $message .= "If you did not request this password reset, please ignore this email.
";
    $headers = "From: no-reply@yourwebsite.com\r
";
    mail($to, $subject, $message, $headers);
}

// Check if the POST request is for password reset
if ($_SERVER['REQUEST_METHOD'] == 'POST' && isset($_POST['reset_request'])) {
    $email = $_POST['email'];
    
    // Sanitize and validate input
    $email = mysqli_real_escape_string($conn, trim($email));
    if (empty($email)) {
        die("Email is required.");
    }
    
    // Check if email exists in the database
    $sql = "SELECT id FROM users WHERE email='$email'";
    $result = mysqli_query($conn, $sql);
    if (!$result) {
        die("Query failed: " . mysqli_error($conn));
    }
    
    if (mysqli_num_rows($result) == 0) {
        echo "Email not found in our records.";
    } else {
        // Generate a reset token
        $resetToken = generateToken();
        
        // Set the expiration time for the token (30 minutes from now)
        $expirationTime = date('Y-m-d H:i:s', strtotime('+30 minutes'));
        
        // Update the users table with the reset token and expiration time
        $sqlUpdate = "UPDATE users SET reset_token='$resetToken', reset_expires='$expirationTime' WHERE email='$email'";
        if (mysqli_query($conn, $sqlUpdate)) {
            sendResetEmail($email, $resetToken);
            echo "A password reset link has been sent to your email address.";
        } else {
            die("Error updating record: " . mysqli_error($conn));
        }
    }
}

// Close the database connection
mysqli_close($conn);
?>


<?php
session_start();
require_once 'db_connection.php'; // Include your database connection file

if ($_SERVER['REQUEST_METHOD'] == 'GET' && isset($_GET['token'])) {
    $resetToken = $_GET['token'];
    
    // Check if the token exists in the database and has not expired
    $sql = "SELECT id, reset_expires FROM users WHERE reset_token='$resetToken'";
    $result = mysqli_query($conn, $sql);
    
    if (!$result) {
        die("Query failed: " . mysqli_error($conn));
    }
    
    if (mysqli_num_rows($result) == 0) {
        echo "Invalid or expired token.";
        exit();
    }
    
    // Get the user's data
    $row = mysqli_fetch_assoc($result);
    $userId = $row['id'];
    $resetExpires = $row['reset_expires'];
    
    // Check if the token has expired
    if (strtotime($resetExpires) < time()) {
        echo "Token has expired.";
        exit();
    }
}
?>
<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
<?php if (isset($_GET['token'])) { ?>
    <h2>Reset Your Password</h2>
    <form method="POST" action="<?php echo $_SERVER['PHP_SELF']; ?>">
        <input type="hidden" name="reset_token" value="<?php echo $resetToken; ?>" />
        <label>New Password:</label><br />
        <input type="password" name="new_password" required /><br />
        <label>Confirm New Password:</label><br />
        <input type="password" name="confirm_new_password" required /><br />
        <input type="submit" value="Reset Password" />
    </form>
<?php } else { ?>
    <p>No token provided. Please request a password reset again.</p>
<?php } ?>

<?php
// Handle the password reset when form is submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST' && isset($_POST['reset_token'])) {
    $resetToken = $_POST['reset_token'];
    $newPassword = $_POST['new_password'];
    $confirmNewPassword = $_POST['confirm_new_password'];
    
    if ($newPassword != $confirmNewPassword) {
        die("Passwords do not match.");
    }
    
    // Hash the new password
    $hashedPassword = password_hash($newPassword, PASSWORD_DEFAULT);
    
    // Update the database with the new password and clear the reset token
    $sql = "UPDATE users SET password='$hashedPassword', reset_token='', reset_expires='' WHERE reset_token='$resetToken'";
    if (mysqli_query($conn, $sql)) {
        echo "Password has been successfully updated.";
    } else {
        die("Error updating password: " . mysqli_error($conn));
    }
}

mysqli_close($conn);
?>
</body>
</html>


<?php
require 'PHPMailer/PHPMailer.php';
require 'PHPMailer/Exception.php';

function forgot_password($email) {
    // Database connection details
    $host = "localhost";
    $db_username = "username";
    $db_password = "password";
    $database = "myDB";

    try {
        // Connect to the database
        $conn = new mysqli($host, $db_username, $db_password, $database);

        if ($conn->connect_error) {
            throw new Exception("Database connection failed: " . $conn->connect_error);
        }

        // Check if email exists in users table
        $stmt = $conn->prepare("SELECT user_id FROM users WHERE email = ?");
        $stmt->bind_param('s', $email);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows === 0) {
            return array(
                'status' => false,
                'message' => "Email not found in our records."
            );
        }

        // Generate a random token
        $token = md5(random_bytes(32));
        $expires = date("Y-m-d H:i:s", time() + 1800); // Expired after 30 minutes

        // Check if existing reset token exists and delete it
        $stmt = $conn->prepare("DELETE FROM reset_tokens WHERE user_id = ?");
        $user_id = $result->fetch_assoc()['user_id'];
        $stmt->bind_param('i', $user_id);
        $stmt->execute();

        // Insert new token into the table
        $stmt = $conn->prepare("INSERT INTO reset_tokens (user_id, reset_token, reset_expires) VALUES (?, ?, ?)");
        $stmt->bind_param('iss', $user_id, $token, $expires);
        $result = $stmt->execute();

        if (!$result) {
            throw new Exception("Error inserting token into database: " . $conn->error);
        }

        // Send email
        $mail = new PHPMailer\PHPMailer\PHPMailer();
        $mail->isSMTP();
        $mail->Host = 'smtp.example.com';
        $mail->Port = 587;
        $mail->SMTPAuth = true;
        $mail->Username = 'your_email@example.com';
        $mail->Password = 'your_password';

        $mail->setFrom('your_email@example.com', 'Your Name');
        $mail->addAddress($email);
        $mail->Subject = "Reset Your Password";

        // Email content
        $reset_link = "http://example.com/reset.php?token=" . $token;
        $body = "Click the following link to reset your password: <br><a href=$reset_link>Reset Password</a><br><br>
                The link will expire in 30 minutes. If you didn't request this, please ignore and your password will remain unchanged.";

        $mail->Body = $body;

        if (!$mail->send()) {
            throw new Exception("Email could not be sent. Error: " . $mail->ErrorInfo);
        }

        return array(
            'status' => true,
            'message' => "An email has been sent to your address."
        );

    } catch (Exception $e) {
        // Handle exceptions
        error_log($e->getMessage());
        return array(
            'status' => false,
            'message' => "Error: " . $e->getMessage()
        );
    }
}
?>


<?php
// Include database connection
include('db_connection.php');

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $email = trim($_POST['email']);
    
    // Validate email
    if (empty($email) || !filter_var($email, FILTER_VALIDATE_EMAIL)) {
        die("Please enter a valid email address");
    }
    
    // Check if email exists in database
    $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
    $stmt->bind_param('s', $email);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows === 0) {
        die("No account found with this email address");
    }
    
    // Generate reset token
    $token = bin2hex(openssl_random_pseudo_bytes(32));
    $expires = date('Y-m-d H:i:s', time() + (10 * 60)); // Token expires after 10 minutes
    
    // Store token in database
    $stmt = $conn->prepare("INSERT INTO password_reset (user_id, token, expires) VALUES (?, ?, ?)");
    $stmt->bind_param('iss', $result->fetch_assoc()['id'], $token, $expires);
    $stmt->execute();
    
    // Send reset email
    $resetLink = "http://yourdomain.com/reset_password.php?token=$token";
    $to = $email;
    $subject = "Password Reset Request";
    $message = "Please click the following link to reset your password: 
$resetLink

This link will expire in 10 minutes.";
    
    mail($to, $subject, $message);
    
    // Redirect back to login page or show success message
    header("Location: forgot_password_success.php");
    exit();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <h2>Forgot Password</h2>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <input type="email" name="email" placeholder="Enter your email address" required><br><br>
        <button type="submit">Reset Password</button>
    </form>
</body>
</html>


<?php
// Include database connection
include('db_connection.php');

if ($_SERVER['REQUEST_METHOD'] == 'GET') {
    $token = $_GET['token'];
    
    // Validate token
    if (empty($token)) {
        die("Invalid reset link");
    }
    
    // Check if token exists and is valid
    $stmt = $conn->prepare("SELECT user_id, expires FROM password_reset WHERE token = ?");
    $stmt->bind_param('s', $token);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows === 0) {
        die("Invalid or expired reset link");
    }
    
    $row = $result->fetch_assoc();
    if (strtotime($row['expires']) < time()) {
        die("Reset link has expired. Please request a new one.");
    }
    
    // Store user ID in session
    $_SESSION['reset_user_id'] = $row['user_id'];
    
    // Redirect to password reset form
    header("Location: change_password.php");
    exit();
}
?>


<?php
// Include database connection
include('db_connection.php');

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $password = trim($_POST['password']);
    $confirm_password = trim($_POST['confirm_password']);
    
    // Validate input
    if (empty($password) || empty($confirm_password)) {
        die("Please fill in all fields");
    }
    
    if ($password !== $confirm_password) {
        die("Passwords do not match");
    }
    
    // Check password strength
    if (!preg_match('/^[a-zA-Z0-9]{8,}$/', $password)) {
        die("Password must be at least 8 characters long and contain only letters and numbers");
    }
    
    // Get user ID from session
    if (!isset($_SESSION['reset_user_id'])) {
        die("Invalid request");
    }
    
    $user_id = $_SESSION['reset_user_id'];
    unset($_SESSION['reset_user_id']);
    
    // Hash the password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);
    
    // Update user's password
    $stmt = $conn->prepare("UPDATE users SET password = ? WHERE id = ?");
    $stmt->bind_param('si', $hashed_password, $user_id);
    $stmt->execute();
    
    // Clear reset token
    $stmt = $conn->prepare("DELETE FROM password_reset WHERE user_id = ?");
    $stmt->bind_param('i', $user_id);
    $stmt->execute();
    
    // Redirect to login page
    header("Location: login.php?success=1");
    exit();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <h2>Reset Password</h2>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        New Password: <input type="password" name="password" required><br><br>
        Confirm Password: <input type="password" name="confirm_password" required><br><br>
        <button type="submit">Change Password</button>
    </form>
</body>
</html>


<?php
// Database connection
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}

// Generate a random token
function generateToken($length = 32) {
    $token = bin2hex(random_bytes($length));
    return $token;
}

// Check if the reset password link was clicked
if (isset($_GET['reset'])) {
    // Get token from URL
    $token = $_GET['reset'];
    
    // Validate token in database
    $stmt = $conn->prepare("SELECT * FROM users WHERE reset_token = :token AND token_expires > NOW()");
    $stmt->bindParam(':token', $token);
    $stmt->execute();
    $user = $stmt->fetch(PDO::FETCH_ASSOC);
    
    if ($user) {
        // Show password reset form
        ?>
        <form action="reset-password.php" method="POST">
            <input type="hidden" name="token" value="<?php echo $token; ?>">
            New Password: <input type="password" name="new_password"><br>
            Confirm Password: <input type="password" name="confirm_password"><br>
            <input type="submit" name="reset_password" value="Reset Password">
        </form>
        <?php
    } else {
        echo "Invalid or expired reset link.";
    }
}

// Handle password reset form submission
if (isset($_POST['reset_password'])) {
    $token = $_POST['token'];
    $new_password = $_POST['new_password'];
    $confirm_password = $_POST['confirm_password'];
    
    // Validate passwords match
    if ($new_password != $confirm_password) {
        die("Passwords do not match.");
    }
    
    // Update password in database
    $stmt = $conn->prepare("UPDATE users SET password = :password, reset_token = NULL WHERE reset_token = :token");
    $stmt->bindParam(':password', $new_password);
    $stmt->bindParam(':token', $token);
    $stmt->execute();
    
    echo "Password successfully updated!";
}

// Forgot Password Form
if (isset($_POST['forgot'])) {
    $email = $_POST['email'];
    
    // Check if email exists in database
    $stmt = $conn->prepare("SELECT * FROM users WHERE email = :email");
    $stmt->bindParam(':email', $email);
    $stmt->execute();
    $user = $stmt->fetch(PDO::FETCH_ASSOC);
    
    if ($user) {
        // Generate reset token and set expiration time
        $token = generateToken();
        $expires = date('Y-m-d H:i:s', strtotime('+1 hour'));
        
        // Update database with new token and expiration
        $stmt = $conn->prepare("UPDATE users SET reset_token = :token, token_expires = :expires WHERE email = :email");
        $stmt->bindParam(':token', $token);
        $stmt->bindParam(':expires', $expires);
        $stmt->bindParam(':email', $email);
        $stmt->execute();
        
        // Send reset link to user's email
        $reset_link = "http://yourdomain.com/reset-password.php?reset=" . $token;
        $to = $email;
        $subject = "Password Reset Request";
        $message = "Click the following link to reset your password: $reset_link
This link will expire in 1 hour.";
        
        // Send email
        mail($to, $subject, $message);
        
        echo "A password reset link has been sent to your email address.";
    } else {
        echo "Email not found in our records.";
    }
}
?>


<?php
// Database connection details
$host = 'localhost';
$username = 'your_username';
$password = 'your_password';
$database = 'your_database';

// Connect to the database
$conn = mysqli_connect($host, $username, $password, $database);

// Check if connection failed
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Session start
session_start();

// Function to generate random token
function generateToken() {
    return md5(uniqid(rand(), true));
}

// Forgot password function
function forgotPassword($email, $conn) {
    // Validate email format
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        return "Invalid email format";
    }

    // Check if email exists in the database
    $sql = "SELECT id FROM users WHERE email = ?";
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, "s", $email);
    mysqli_stmt_execute($stmt);
    mysqli_stmt_store_result($stmt);

    if (mysqli_stmt_num_rows($stmt) == 0) {
        return "Email not found in our records";
    }

    // Generate reset token
    $token = generateToken();
    $expires = date('Y-m-d H:i:s', time() + 3600); // Token expires after 1 hour

    // Insert reset token into database
    $sql = "INSERT INTO password_resets (user_id, token, expires) VALUES (?, ?, ?)";
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, "iss", $id, $token, $expires);

    // Get user id from email
    mysqli_stmt_execute($sqlCheck);
    mysqli_stmt_store_result($sqlCheck);
    mysqli_stmt_bind_result($sqlCheck, $id);
    mysqli_stmt_fetch($sqlCheck);

    if (!mysqli_stmt_execute($stmt)) {
        return "Error resetting password";
    }

    // Send reset email
    $to = $email;
    $subject = "Password Reset Request";
    $message = "
        <html>
            <body>
                <p>Click the link below to reset your password:</p>
                <a href='http://example.com/reset-password.php?token=$token'>Reset Password</a>
                <br><br>
                This link will expire in 1 hour.
            </body>
        </html>
    ";
    $headers = "MIME-Version: 1.0" . "\r
";
    $headers .= "Content-type:text/html;charset=UTF-8" . "\r
";
    $headers .= "From: <your-email@example.com>" . "\r
";

    if (!mail($to, $subject, $message, $headers)) {
        return "Error sending email";
    }

    return "Password reset link sent to your email";
}

// Reset password function
function resetPassword($token, $newPassword, $conn) {
    // Check if token exists and is valid
    $sql = "SELECT user_id FROM password_resets WHERE token = ? AND expires > NOW()";
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, "s", $token);
    mysqli_stmt_execute($stmt);

    if (mysqli_stmt_num_rows($stmt) == 0) {
        return "Invalid or expired reset link";
    }

    // Get user id
    mysqli_stmt_store_result($stmt);
    mysqli_stmt_bind_result($stmt, $user_id);
    mysqli_stmt_fetch($stmt);

    // Update password
    $hash = password_hash($newPassword, PASSWORD_DEFAULT);
    $sql = "UPDATE users SET password = ? WHERE id = ?";
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, "si", $hash, $user_id);
    
    if (!mysqli_stmt_execute($stmt)) {
        return "Error updating password";
    }

    // Delete used token
    $sql = "DELETE FROM password_resets WHERE token = ?";
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, "s", $token);
    mysqli_stmt_execute($stmt);

    return "Password updated successfully";
}

// Close database connection
mysqli_close($conn);
?>


<?php
include('database_connection.php');

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = $_POST['email'];
    $result = forgotPassword($email, $conn);
    
    if ($result === "Email not found in our records") {
        echo "<p style='color:red;'>$result</p>";
    } else if ($result === "Invalid email format") {
        echo "<p style='color:red;'>$result</p>";
    } else if ($result === "Error resetting password") {
        echo "<p style='color:red;'>$result</p>";
    } else if ($result === "Password reset link sent to your email") {
        echo "<p style='color:green;'>A password reset link has been sent to your email address.</p>";
    }
}
?>


<?php
include('database_connection.php');

if (isset($_GET['token'])) {
    $token = $_GET['token'];
    
    if (isset($_POST['new_password']) && isset($_POST['confirm_password'])) {
        $newPassword = $_POST['new_password'];
        $confirmPassword = $_POST['confirm_password'];
        
        if ($newPassword !== $confirmPassword) {
            die("Passwords do not match");
        }
        
        $result = resetPassword($token, $newPassword, $conn);
        echo "<p style='color:green;'>$result</p>";
    } else {
        // Show password reset form
        ?>
        <form action="<?php echo $_SERVER['PHP_SELF']; ?>?token=<?php echo $token; ?>" method="post">
            <input type="password" name="new_password" placeholder="Enter new password" required>
            <input type="password" name="confirm_password" placeholder="Confirm new password" required>
            <button type="submit">Reset Password</button>
        </form>
        <?php
    }
} else {
    die("Invalid request");
}
?>


<?php
// Configuration file (config.php)
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'mydatabase';

$conn = mysqli_connect($host, $username, $password, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Forgot Password Form
// index.php

<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <?php
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        // Get email from form
        $email = $_POST['email'];
        
        // Sanitize the email
        $email = mysqli_real_escape_string($conn, $email);
        
        // Check if email exists in database
        $sql = "SELECT id FROM users WHERE email='$email'";
        $result = mysqli_query($conn, $sql);
        
        if (mysqli_num_rows($result) == 0) {
            echo "<p class='error'>Email does not exist!</p>";
            exit();
        }
        
        // Generate a random token
        $token = bin2hex(random_bytes(32));
        
        // Update the token and expiration time in database
        $expires = time() + 3600; // expires after 1 hour
        
        $sql = "UPDATE users SET reset_token='$token', token_expires=$expires WHERE email='$email'";
        mysqli_query($conn, $sql);
        
        // Send email with reset link
        $to = $email;
        $subject = 'Password Reset';
        $body = "Click the following link to reset your password:

";
        $body .= "http://example.com/reset_password.php?token=$token

";
        $body .= "This link will expire in 1 hour.";
        
        $headers = "From: admin@example.com\r
";
        $headers .= "MIME-Version: 1.0\r
";
        $headers .= "Content-type: text/plain; charset=UTF-8\r
";
        
        if (mail($to, $subject, $body, $headers)) {
            echo "<p>We've sent you an email with reset instructions!</p>";
            header("refresh:5;url=login.php");
        } else {
            echo "<p>Error sending email. Please try again later.</p>";
        }
    }
    ?>
    
    <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
        Email: <input type="text" name="email">
        <input type="submit" value="Reset Password">
    </form>
</body>
</html>

// Reset Password Page
// reset_password.php

<?php
if (isset($_GET['token'])) {
    $token = mysqli_real_escape_string($conn, $_GET['token']);
    
    // Check if token exists and hasn't expired
    $sql = "SELECT * FROM users WHERE reset_token='$token' AND token_expires > " . time();
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) == 0) {
        die("Invalid or expired token.");
    }
} else {
    die("No token provided.");
}

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get new password
    $new_password = mysqli_real_escape_string($conn, $_POST['password']);
    
    // Update the password
    $sql = "UPDATE users SET password='" . md5($new_password) . "', reset_token=NULL, token_expires=NULL WHERE reset_token='$token'";
    mysqli_query($conn, $sql);
    
    // Redirect to login page
    header("Location: login.php");
    exit();
}
?>
<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
        New Password: <input type="password" name="password">
        Confirm Password: <input type="password" name="confirm_password">
        <input type="submit" value="Reset Password">
    </form>
</body>
</html>

// Close database connection
mysqli_close($conn);
?>


<?php
session_start();

// Database configuration
$host = 'localhost';
$dbname = 'mydatabase';
$username = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

// Forgot Password Function
function forgotPassword($email) {
    global $conn;

    // Check if email exists in the database
    $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
    $stmt->execute([$email]);
    $user = $stmt->fetch(PDO::FETCH_ASSOC);

    if ($user) {
        // Generate a random token for password reset
        $token = bin2hex(random_bytes(16));

        // Store the token in the database with an expiration time
        $expiration_time = date("Y-m-d H:i:s", strtotime("+30 minutes"));
        
        $stmt = $conn->prepare("INSERT INTO password_reset (user_id, token, expires_at) 
                               VALUES (?, ?, ?)");
        $stmt->execute([$user['id'], $token, $expiration_time]);

        // Send reset password email
        if (sendResetPasswordEmail($email, $token)) {
            return "Password reset instructions have been sent to your email.";
        } else {
            return "An error occurred while sending the password reset email. Please try again later.";
        }
    } else {
        return "No account exists with this email address.";
    }
}

// Function to send reset password email
function sendResetPasswordEmail($email, $token) {
    $to = $email;
    $subject = "Password Reset Request";
    
    // Create the link for password reset
    $resetLink = "http://".$_SERVER['HTTP_HOST']."/reset_password.php?token=".$token;
    
    $message = "
        <html>
            <head>
                <title>Password Reset</title>
            </head>
            <body>
                <h2>Password Reset Request</h2>
                <p>Please click the following link to reset your password:</p>
                <a href='".$resetLink."'>".$resetLink."</a><br><br>
                <i>This link will expire in 30 minutes.</i>
            </body>
        </html>
    ";

    // Set headers for email
    $headers = "MIME-Version: 1.0" . "\r
";
    $headers .= "Content-type:text/html;charset=UTF-8" . "\r
";
    $headers .= "From: <your_email@example.com>" . "\r
"; // Change this to your email

    // Send the email
    if (mail($to, $subject, $message, $headers)) {
        return true;
    } else {
        return false;
    }
}

// Example usage:
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $email = $_POST['email'];
    $result = forgotPassword($email);
    echo $result;
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Forgot Password</title>
</head>
<body>
    <?php if (isset($_SESSION['message'])) { ?>
        <p style="color: red;"><?php echo $_SESSION['message']; ?></p>
        <?php unset($_SESSION['message']); } ?>

    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <label for="email">Email:</label><br>
        <input type="text" id="email" name="email"><br><br>
        <input type="submit" value="Submit">
    </form>
</body>
</html>


<?php
session_start();
include('db_connect.php'); // Database connection file

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $email = $_POST['email'];
    $username = $_POST['username'];

    // Check if either email or username is provided
    if (empty($email) && empty($username)) {
        die("Please enter your email or username.");
    }

    // Query the database based on provided input
    $query = "SELECT * FROM users WHERE ";
    $params = [];
    if (!empty($email)) {
        $query .= "email = ? OR";
        $params[] = $email;
    }
    if (!empty($username)) {
        $query .= " username = ?";
        $params[] = $username;
    }
    // Remove the trailing 'OR' if both are provided
    if (count($params) > 1) {
        $query = substr($query, 0, -3);
    }

    try {
        $stmt = $conn->prepare($query);
        $stmt->execute($params);
        $user = $stmt->fetch(PDO::FETCH_ASSOC);

        if (!$user) {
            die("No account found with this email or username.");
        }

        // Generate temporary password
        $chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^&*()';
        $temp_password = substr(str_shuffle($chars), 0, 12);

        // Hash the temporary password
        $hashed_temp_password = password_hash($temp_password, PASSWORD_DEFAULT);

        // Update the database with temporary password
        $update_query = "UPDATE users SET password = ?, temp_password_expires = DATE_ADD(NOW(), INTERVAL 24 HOUR) WHERE id = ?";
        $stmt = $conn->prepare($update_query);
        $stmt->execute([$hashed_temp_password, $user['id']]);

        // Send email with temporary password
        $to = $email ? $email : $user['email'];
        $subject = "Your New Temporary Password";
        $body = "Dear " . $user['username'] . ",

Your temporary password is: " . $temp_password . "
Please log in and change it immediately.
This password will expire in 24 hours.";
        $headers = "From: no-reply@example.com";

        if (mail($to, $subject, $body, $headers)) {
            echo "A temporary password has been sent to your email address.";
        } else {
            die("Failed to send the email. Please try again later.");
        }

    } catch(PDOException $e) {
        die("Database error: " . $e->getMessage());
    }
}
?>


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Forgot Password</title>
</head>
<body>
    <h2>Forgot Password</h2>
    <form action="send_reset_email.php" method="post">
        <label for="email">Email:</label><br>
        <input type="email" id="email" name="email" required><br><br>
        <button type="submit">Request Reset</button>
    </form>
    <?php
    if (isset($_GET['error'])) {
        echo "<p style='color:red;'>" . $_GET['error'] . "</p>";
    }
    ?>
</body>
</html>


<?php
include('db_connection.php');

if (isset($_POST['email'])) {
    $email = $_POST['email'];
    
    // Check if email exists in the database
    $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
    $stmt->bind_param("s", $email);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($row = $result->fetch_assoc()) {
        // Generate a random token
        $token = bin2hex(random_bytes(16));
        
        // Update the user's reset token and expiration time
        $expires = date('Y-m-d H:i:s', strtotime('+1 hour'));
        $stmt = $conn->prepare("UPDATE users SET reset_token = ?, reset_expires = ? WHERE email = ?");
        $stmt->bind_param("sss", $token, $expires, $email);
        $stmt->execute();

        // Send the reset email
        $reset_link = "http://$_SERVER[HTTP_HOST]/reset_password.php?token=$token";
        
        $to = $email;
        $subject = 'Password Reset Request';
        $message = "
            <html>
                <head></head>
                <body>
                    <p>Please click the link below to reset your password:</p>
                    <a href='$reset_link'>Reset Password</a><br>
                    <small>This link will expire in 1 hour.</small>
                </body>
            </html>
        ";
        $headers = "From: no-reply@yourdomain.com\r
";
        $headers .= "MIME-Version: 1.0\r
";
        $headers .= "Content-Type: text/html; charset=UTF-8\r
";

        mail($to, $subject, $message, $headers);

        echo "<script>alert('Password reset email has been sent!');</script>";
        echo "<script>window.location.href = 'login.php';</script>";
    } else {
        header("Location: forgot_password.php?error=Email%20not%20found.");
    }
}
?>


<?php
include('db_connection.php');

if (!isset($_GET['token'])) {
    header("Location: forgot_password.php?error=No%20token%20provided.");
    exit();
}

$token = $_GET['token'];

// Check if token is valid and not expired
$stmt = $conn->prepare("
    SELECT id, email 
    FROM users 
    WHERE reset_token = ? AND reset_expires > NOW()
");
$stmt->bind_param("s", $token);
$stmt->execute();
$result = $stmt->get_result();

if (!$row = $result->fetch_assoc()) {
    header("Location: forgot_password.php?error=Invalid%20or%20expired%20link.");
    exit();
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Reset Password</title>
</head>
<body>
    <h2>Reset Password</h2>
    <?php
    if (isset($_GET['error'])) {
        echo "<p style='color:red;'>" . $_GET['error'] . "</p>";
    }
    ?>
    <form action="reset_password.php" method="post">
        <input type="hidden" name="token" value="<?php echo $token; ?>">
        <label for="new_password">New Password:</label><br>
        <input type="password" id="new_password" name="new_password" required><br><br>
        <label for="confirm_password">Confirm New Password:</label><br>
        <input type="password" id="confirm_password" name="confirm_password" required><br><br>
        <button type="submit">Reset Password</button>
    </form>
</body>
</html>

<?php
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $token = $_POST['token'];
    $new_password = $_POST['new_password'];
    $confirm_password = $_POST['confirm_password'];

    if ($new_password !== $confirm_password) {
        header("Location: reset_password.php?token=$token&error=Passwords%20do%20not%20match.");
        exit();
    }

    // Check token again (security measure)
    $stmt = $conn->prepare("
        SELECT id, email 
        FROM users 
        WHERE reset_token = ? AND reset_expires > NOW()
    ");
    $stmt->bind_param("s", $token);
    $stmt->execute();
    $result = $stmt->get_result();

    if (!$row = $result->fetch_assoc()) {
        header("Location: forgot_password.php?error=Invalid%20or%20expired%20link.");
        exit();
    }

    // Update the password
    $new_password_hashed = password_hash($new_password, PASSWORD_DEFAULT);
    
    $stmt = $conn->prepare("
        UPDATE users 
        SET password = ?, reset_token = NULL, reset_expires = NULL 
        WHERE id = ?
    ");
    $stmt->bind_param("si", $new_password_hashed, $row['id']);
    $stmt->execute();

    echo "<script>alert('Password has been reset successfully!');</script>";
    echo "<script>window.location.href = 'login.php';</script>";
}
?>


<?php
$servername = "localhost";
$username = "root";
$password = "";
$dbname = "your_database";

$conn = new mysqli($servername, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}
?>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

// Connect to database
$conn = new mysqli($host, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Sanitize input
    $email = $conn->real_escape_string($_POST['email']);
    
    // Check if email exists in database
    $sql = "SELECT id, username FROM users WHERE email = '$email'";
    $result = $conn->query($sql);
    
    if ($result->num_rows == 0) {
        die("Email not found in our records.");
    }
    
    $row = $result->fetch_assoc();
    $userId = $row['id'];
    $username = $row['username'];
    
    // Generate a random temporary password
    $tempPassword = generateTempPassword();
    
    // Store the temporary password in database with an expiration time
    $expirationTime = date('Y-m-d H:i:s', strtotime('+30 minutes'));
    
    $sql = "UPDATE users SET temp_password='$tempPassword', temp_password_expires='$expirationTime' WHERE id = '$userId'";
    if (!$conn->query($sql)) {
        die("Error storing temporary password: " . $conn->error);
    }
    
    // Send email with temporary password
    sendResetEmail($email, $username, $tempPassword, $expirationTime);
    
    echo "A temporary password has been sent to your email address.";
} else {
    echo "Invalid request method.";
}

function generateTempPassword() {
    $chars = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^&*()_+=-";
    $length = 12;
    return substr(str_shuffle($chars), 0, $length);
}

function sendResetEmail($email, $username, $tempPassword, $expirationTime) {
    $to = $email;
    $subject = "Password Reset Instructions";
    
    $message = "Dear $username,

We have received a request to reset your password. Please use the following temporary password to log in and reset your password:

Temporary Password: $tempPassword
Expiration Time: $expirationTime

Please note that this temporary password will expire at $expirationTime. After logging in with the temporary password, you will be prompted to set a new password.

If you did not request a password reset, please ignore this email or contact our support team immediately.

Best regards,
The Support Team";
    
    mail($to, $subject, $message);
}

$conn->close();
?>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

// Connect to database
$conn = new mysqli($host, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Sanitize input
    $username = $conn->real_escape_string($_POST['username']);
    $password = $_POST['password'];
    
    // Check if temporary password is valid
    $sql = "SELECT id, temp_password, temp_password_expires FROM users WHERE username = '$username'";
    $result = $conn->query($sql);
    
    if ($result->num_rows == 0) {
        die("Username not found.");
    }
    
    $row = $result->fetch_assoc();
    $userId = $row['id'];
    $storedTempPassword = $row['temp_password'];
    $expirationTime = $row['temp_password_expires'];
    
    // Check if the provided password matches the temporary password and is not expired
    if ($password == $storedTempPassword && time() < strtotime($expirationTime)) {
        // Redirect to password reset page
        header("Location: reset-password.php");
        exit();
    } else {
        echo "Invalid password or password has expired.";
    }
}

$conn->close();
?>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

// Connect to database
$conn = new mysqli($host, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Sanitize input
    $newPassword = $_POST['new_password'];
    $confirmNewPassword = $_POST['confirm_new_password'];
    
    if ($newPassword != $confirmNewPassword) {
        die("Passwords do not match.");
    }
    
    // Hash the new password
    $hashedPassword = password_hash($newPassword, PASSWORD_DEFAULT);
    
    // Update the user's password in the database
    $sql = "UPDATE users SET password='$hashedPassword', temp_password=null, temp_password_expires=null WHERE id = ?";
    
    if ($stmt = $conn->prepare($sql)) {
        $stmt->bind_param("i", $userId);
        
        if (!$stmt->execute()) {
            die("Error updating password: " . $stmt->error);
        }
        
        echo "Password updated successfully!";
        header("Location: login.php");
    } else {
        die("Prepare failed: " . $conn->error);
    }
}

$conn->close();
?>


<?php
// Include configuration file
require_once 'config.php';

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $email = trim($_POST['email']);
    
    // Validate email format
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        $error = "Please enter a valid email address!";
    } else {
        // Check if email exists in the database
        $sql = "SELECT id FROM users WHERE email = ?";
        $stmt = mysqli_prepare($conn, $sql);
        mysqli_stmt_bind_param($stmt, "s", $email);
        mysqli_stmt_execute($stmt);
        mysqli_stmt_store_result($stmt);
        
        if (mysqli_stmt_num_rows($stmt) == 0) {
            $error = "No account found with this email address!";
        } else {
            // Generate a random token
            $token = bin2hex(random_bytes(16));
            $expires = date('Y-m-d H:i:s', strtotime('+30 minutes'));
            
            // Update the database with the reset token and expiration time
            $sql = "UPDATE users SET password_reset_token = ?, password_reset_expires = ? WHERE email = ?";
            $stmt = mysqli_prepare($conn, $sql);
            mysqli_stmt_bind_param($stmt, "sss", $token, $expires, $email);
            mysqli_stmt_execute($stmt);
            
            // Send the reset email
            $to = $email;
            $subject = "Password Reset Request";
            $message = "
                <html>
                    <body>
                        <h2>Password Reset</h2>
                        <p>Please click the following link to reset your password:</p>
                        <a href='http://yourdomain.com/reset-password.php?token=$token'>Reset Password</a><br><br>
                        <small>This link will expire in 30 minutes.</small>
                    </body>
                </html>
            ";
            $headers = "MIME-Version: 1.0\r
";
            $headers .= "Content-type: text/html; charset=UTF-8\r
";
            $headers .= "From: Your Website <noreply@yourdomain.com>\r
";
            
            if (mail($to, $subject, $message, $headers)) {
                echo "<p>Email sent! Please check your inbox to reset your password.</p>";
            } else {
                $error = "An error occurred while sending the email. Please try again!";
            }
        }
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f0f0f0;
            margin: 0;
            padding: 20px;
        }
        .container {
            max-width: 500px;
            margin: 0 auto;
            background-color: white;
            padding: 30px;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }
        .form-group {
            margin-bottom: 20px;
        }
        input[type="email"] {
            width: 100%;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-sizing: border-box;
        }
        button {
            background-color: #4CAF50;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
        button:hover {
            background-color: #45a049;
        }
        .error {
            color: red;
            margin-bottom: 20px;
        }
    </style>
</head>
<body>
    <div class="container">
        <?php if (isset($error)) { ?>
            <div class="error"><?php echo $error; ?></div>
        <?php } ?>
        
        <h1>Forgot Password</h1>
        <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
            <div class="form-group">
                <input type="email" name="email" placeholder="Enter your email address" required>
            </div>
            <button type="submit">Reset Password</button>
        </form>
    </div>
</body>
</html>

<?php
// Close database connection
mysqli_close($conn);
?>


<?php
require_once 'config.php';

if (!isset($_GET['token'])) {
    die("Invalid request");
}

$token = $_GET['token'];
$current_time = date('Y-m-d H:i:s');

// Check if token exists and hasn't expired
$sql = "SELECT id, email FROM users WHERE password_reset_token = ? AND password_reset_expires > ?";
$stmt = mysqli_prepare($conn, $sql);
mysqli_stmt_bind_param($stmt, "ss", $token, $current_time);
mysqli_stmt_execute($stmt);
mysqli_stmt_store_result($stmt);

if (mysqli_stmt_num_rows($stmt) == 0) {
    die("Invalid or expired token");
}

// Show password reset form
?>

<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
    <style>
        /* Add your CSS styles here */
    </style>
</head>
<body>
    <div class="container">
        <h1>Reset Your Password</h1>
        <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>?token=<?php echo $token; ?>" method="post">
            <input type="password" name="new_password" placeholder="Enter new password" required>
            <button type="submit">Submit</button>
        </form>
    </div>
</body>
</html>

<?php
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $new_password = trim($_POST['new_password']);
    $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);
    
    // Update the password and clear the reset token
    $sql = "UPDATE users SET password = ?, password_reset_token = NULL WHERE password_reset_token = ?";
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, "ss", $hashed_password, $token);
    mysqli_stmt_execute($stmt);
    
    echo "Password reset successfully!";
}
?>


<?php
// Database connection
$servername = "localhost";
$username = "root";
$password = "";
$dbname = "your_database";

$conn = new mysqli($servername, $username, $password, $dbname);
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to generate a random token
function generateToken() {
    $token = bin2hex(random_bytes(16));
    return $token;
}

// Function to send password reset email
function sendResetEmail($email, $token) {
    $to = $email;
    $subject = "Password Reset Request";
    
    $message = "You have requested a password reset. Click the following link to reset your password:

";
    $message .= "http://your-site.com/reset-password.php?token=" . $token . "

";
    $message .= "If you did not request this, please ignore this email.";

    $headers = "From: no-reply@your-site.com" . "\r
";
    
    return mail($to, $subject, $message, $headers);
}

// Reset password function
function resetPassword($token, $new_password) {
    global $conn;
    
    // Hash the new password
    $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);
    
    // Update the password and token in database
    $sql = "UPDATE users SET password = ?, reset_token = NULL WHERE reset_token = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("ss", $hashed_password, $token);
    
    return $stmt->execute();
}

// Check if a token exists in the database
function isValidToken($token) {
    global $conn;
    
    $sql = "SELECT * FROM users WHERE reset_token = ? AND reset_expires > NOW()";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("s", $token);
    $stmt->execute();
    $result = $stmt->get_result();
    
    return $result->num_rows > 0;
}

// Mark token as used
function markTokenAsUsed($token) {
    global $conn;
    
    $sql = "UPDATE users SET reset_token = NULL WHERE reset_token = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("s", $token);
    
    return $stmt->execute();
}

// Handle password reset request
if (isset($_POST['email'])) {
    $email = $_POST['email'];
    
    // Check if email exists in database
    $sql = "SELECT * FROM users WHERE email = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("s", $email);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows > 0) {
        // Generate a new token
        $token = generateToken();
        
        // Store the token and expiration time in database (valid for 1 hour)
        $sql = "UPDATE users SET reset_token = ?, reset_expires = DATE_ADD(NOW(), INTERVAL 1 HOUR) WHERE email = ?";
        $stmt = $conn->prepare($sql);
        $stmt->bind_param("ss", $token, $email);
        $stmt->execute();
        
        // Send reset email
        sendResetEmail($email, $token);
        
        echo "Password reset link has been sent to your email.";
    } else {
        echo "Email not found in our records.";
    }
}

// Reset password page (after clicking the link)
if (isset($_GET['token'])) {
    $token = $_GET['token'];
    
    if (!isValidToken($token)) {
        die("Invalid or expired token.");
    }
    
    // Show reset form
    ?>
    <form method="post" action="">
        <input type="password" name="new_password" placeholder="New Password">
        <input type="password" name="confirm_password" placeholder="Confirm New Password">
        <input type="hidden" name="token" value="<?php echo $token; ?>">
        <button type="submit">Reset Password</button>
    </form>
    <?php
}

// Process the password reset
if (isset($_POST['new_password']) && isset($_POST['confirm_password'])) {
    $new_password = $_POST['new_password'];
    $confirm_password = $_POST['confirm_password'];
    $token = $_POST['token'];

    if ($new_password !== $confirm_password) {
        die("Passwords do not match.");
    }

    if (strlen($new_password) < 6) {
        die("Password must be at least 6 characters long.");
    }

    if (!isValidToken($token)) {
        die("Invalid or expired token.");
    }

    // Reset password
    resetPassword($token, $new_password);
    
    // Mark token as used
    markTokenAsUsed($token);

    echo "Password has been successfully reset!";
}
?>


<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 20px;
            background-color: #f0f0f0;
        }
        .container {
            max-width: 500px;
            margin: 0 auto;
            background-color: white;
            padding: 30px;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }
        .form-group {
            margin-bottom: 20px;
        }
        input[type="email"] {
            width: 100%;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-sizing: border-box;
        }
        button {
            background-color: #4CAF50;
            color: white;
            padding: 14px 20px;
            margin: 8px 0;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            width: 100%;
        }
        button:hover {
            background-color: #45a049;
        }
    </style>
</head>
<body>
    <div class="container">
        <h2>Forgot Password</h2>
        <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
            <div class="form-group">
                <input type="email" name="email" placeholder="Enter your email address" required>
            </div>
            <button type="submit">Reset Password</button>
        </form>
    </div>
    
    <?php
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        include 'db_connection.php';
        
        $email = mysqli_real_escape_string($conn, $_POST['email']);
        
        // Check if email exists in the database
        $sql = "SELECT * FROM users WHERE email = '$email'";
        $result = mysqli_query($conn, $sql);
        
        if (mysqli_num_rows($result) == 1) {
            $token = bin2hex(random_bytes(32)); // Generate a unique token
            $expires = date("Y-m-d H:i:s", time() + 3600); // Token expires in 1 hour
            
            // Store the token and expiration time in the database
            $sql_token = "INSERT INTO password_reset (email, token, expires) VALUES ('$email', '$token', '$expires')";
            if (mysqli_query($conn, $sql_token)) {
                // Send reset email
                $reset_link = "http://$_SERVER[HTTP_HOST]/reset_password.php?token=$token";
                
                $to = $email;
                $subject = "Password Reset Request";
                $message = "
                    <html>
                        <body>
                            <h2>Password Reset</h2>
                            <p>Please click the following link to reset your password:</p>
                            <a href='$reset_link'>Reset Password</a><br><br>
                            <small>If you didn't request a password reset, please ignore this email.</small>
                        </body>
                    </html>";
                $headers = "From: noreply@yourdomain.com\r
";
                $headers .= "MIME-Version: 1.0\r
";
                $headers .= "Content-Type: text/html; charset=UTF-8\r
";
                
                if (mail($to, $subject, $message, $headers)) {
                    echo "<p>Reset link has been sent to your email address.</p>";
                } else {
                    echo "<p>Error sending email. Please try again later.</p>";
                }
            }
        } else {
            echo "<p>Email not found in our records. Please try again with a valid email address.</p>";
        }
        
        mysqli_close($conn);
    }
    ?>
</body>
</html>


<?php
include 'db_connection.php';

if (isset($_GET['token'])) {
    $token = $_GET['token'];
    
    // Check if token exists and is valid
    $sql = "SELECT * FROM password_reset WHERE token = '$token'";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) == 1) {
        $row = mysqli_fetch_assoc($result);
        
        // Check if token has expired
        $expires = $row['expires'];
        if ($expires < date("Y-m-d H:i:s")) {
            echo "<p>Sorry, this reset link has expired. Please request a new password reset.</p>";
        } else {
    ?>
            <!DOCTYPE html>
            <html>
            <head>
                <title>Reset Password</title>
                <style>
                    body {
                        font-family: Arial, sans-serif;
                        margin: 0;
                        padding: 20px;
                        background-color: #f0f0f0;
                    }
                    .container {
                        max-width: 500px;
                        margin: 0 auto;
                        background-color: white;
                        padding: 30px;
                        border-radius: 5px;
                        box-shadow: 0 0 10px rgba(0,0,0,0.1);
                    }
                    .form-group {
                        margin-bottom: 20px;
                    }
                    input[type="password"] {
                        width: 100%;
                        padding: 10px;
                        border: 1px solid #ddd;
                        border-radius: 4px;
                        box-sizing: border-box;
                    }
                    button {
                        background-color: #4CAF50;
                        color: white;
                        padding: 14px 20px;
                        margin: 8px 0;
                        border: none;
                        border-radius: 4px;
                        cursor: pointer;
                        width: 100%;
                    }
                    button:hover {
                        background-color: #45a049;
                    }
                </style>
            </head>
            <body>
                <div class="container">
                    <h2>Reset Password</h2>
                    <form action="<?php echo $_SERVER['PHP_SELF']; ?>?token=<?php echo $token; ?>" method="post">
                        <div class="form-group">
                            <input type="password" name="new_password" placeholder="Enter new password" required>
                        </div>
                        <div class="form-group">
                            <input type="password" name="confirm_password" placeholder="Confirm password" required>
                        </div>
                        <button type="submit">Reset Password</button>
                    </form>
                </div>
                
                <?php
                if ($_SERVER["REQUEST_METHOD"] == "POST") {
                    $new_password = $_POST['new_password'];
                    $confirm_password = $_POST['confirm_password'];
                    
                    if ($new_password === $confirm_password) {
                        // Validate password strength (example: at least 8 characters)
                        if (strlen($new_password) < 8) {
                            echo "<p>Password must be at least 8 characters long.</p>";
                        } else {
                            // Update the user's password
                            $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);
                            
                            $email = $row['email'];
                            
                            $sql_update = "UPDATE users SET password = '$hashed_password' WHERE email = '$email'";
                            if (mysqli_query($conn, $sql_update)) {
                                // Delete the token after reset
                                $sql_delete = "DELETE FROM password_reset WHERE token = '$token'";
                                mysqli_query($conn, $sql_delete);
                                
                                echo "<p>Password has been updated successfully!</p>";
                                header("Refresh: 2; url=login.php");
                            } else {
                                echo "<p>Error updating password. Please try again.</p>";
                            }
                        }
                    } else {
                        echo "<p>Passwords do not match. Please try again.</p>";
                    }
                }
                ?>
            </body>
            </html>
    <?php
        }
    } else {
        echo "<p>Invalid or missing reset token. Please request a new password reset.</p>";
    }
} else {
    echo "<p>Invalid request. No token provided.</p>";
}
?>


<?php
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "mydatabase";

// Create connection
$conn = mysqli_connect($servername, $username, $password, $dbname);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}
?>


<?php
// Database connection
$host = 'localhost';
$user = 'username';
$password = 'password';
$dbname = 'database_name';

$conn = mysqli_connect($host, $user, $password, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function sendResetEmail($email, $username, $token) {
    $to = $email;
    $subject = "Password Reset Request";
    
    $message = "
        <html>
            <head></head>
            <body>
                <p>Hello $username,</p>
                <p>We received a request to reset your password. Please click the link below to reset it:</p>
                <a href='http://yourwebsite.com/reset-password.php?token=$token'>Reset Password</a>
                <p>If you did not make this request, please ignore this email.</p>
            </body>
        </html>
    ";
    
    $headers = "MIME-Version: 1.0" . "\r
";
    $headers .= "Content-type:text/html;charset=UTF-8" . "\r
";
    $headers .= "From: noreply@yourwebsite.com" . "\r
";
    
    mail($to, $subject, $message, $headers);
}

function forgotPassword($conn, $username) {
    try {
        // Check if user exists
        $stmt = $conn->prepare("SELECT email FROM users WHERE username = ?");
        $stmt->bind_param('s', $username);
        $stmt->execute();
        $result = $stmt->get_result();
        
        if ($result->num_rows == 0) {
            return false;
        }
        
        $user = $result->fetch_assoc();
        $email = $user['email'];
        
        // Generate a random token
        $token = bin2hex(random_bytes(16));
        
        // Store token and expiration time in database
        $expires = date('Y-m-d H:i:s', strtotime('+1 hour'));
        
        $stmt = $conn->prepare("INSERT INTO password_reset (username, token, expires) VALUES (?, ?, ?)");
        $stmt->bind_param('sss', $username, $token, $expires);
        $stmt->execute();
        
        // Send reset email
        sendResetEmail($email, $username, $token);
        
        return true;
    } catch (Exception $e) {
        echo "Error: " . $e->getMessage();
        return false;
    }
}

// Example usage:
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $username = $_POST['username'];
    
    if (forgotPassword($conn, $username)) {
        echo "An email has been sent with instructions to reset your password.";
    } else {
        echo "Username not found.";
    }
}

mysqli_close($conn);
?>


<?php
session_start();

if (!isset($_GET['token'])) {
    die("Invalid request.");
}

$token = $_GET['token'];

$conn = mysqli_connect($host, $user, $password, $dbname);

// Verify token and expiration time
$stmt = $conn->prepare("SELECT username FROM password_reset WHERE token = ? AND expires > NOW()");
$stmt->bind_param('s', $token);
$stmt->execute();
$result = $stmt->get_result();

if ($result->num_rows == 0) {
    die("Invalid or expired token.");
}

$user = $result->fetch_assoc();
$username = $user['username'];

// If form submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $newPassword = $_POST['password'];
    
    // Validate password (add your own validation rules)
    if (strlen($newPassword) < 8) {
        die("Password must be at least 8 characters.");
    }
    
    // Update the user's password
    $stmt = $conn->prepare("UPDATE users SET password = ? WHERE username = ?");
    $hashedPassword = password_hash($newPassword, PASSWORD_DEFAULT);
    $stmt->bind_param('ss', $hashedPassword, $username);
    $stmt->execute();
    
    // Remove token from database
    $stmt = $conn->prepare("DELETE FROM password_reset WHERE token = ?");
    $stmt->bind_param('s', $token);
    $stmt->execute();
    
    echo "Password updated successfully!";
}

// Show reset form
?>
<form method="post">
    <input type="password" name="password" placeholder="New Password" required>
    <button type="submit">Reset Password</button>
</form>
<?php
mysqli_close($conn);
?>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'mydatabase';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get email from form
    $email = mysqli_real_escape_string($conn, $_POST['email']);

    // Check if email exists in database
    $sql = "SELECT id FROM users WHERE email='$email'";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) == 0) {
        // Email doesn't exist
        $error = "Email address does not exist";
    } else {
        // Generate reset token and expiration time
        $reset_token = md5(rand(1000, 9999).time());
        $expires = date('Y-m-d H:i:s', strtotime('+1 hour'));

        // Update database with reset token and expiration time
        $sql = "UPDATE users SET reset_token='$reset_token', reset_expires='$expires' WHERE email='$email'";
        mysqli_query($conn, $sql);

        // Send password reset link to user's email
        $to = $email;
        $subject = "Password Reset Request";
        $message = "Please click the following link to reset your password: http://example.com/reset-password.php?token=$reset_token";
        $headers = "From: noreply@example.com\r
";
        $headers .= "Content-Type: text/html; charset=UTF-8\r
";

        if (mail($to, $subject, $message, $headers)) {
            // Redirect back to forgot password page with success message
            header("Location: forgot-password.php?success=1");
            exit();
        } else {
            // Error sending email
            $error = "An error occurred while sending the reset link. Please try again later.";
        }
    }
}

// Close database connection
mysqli_close($conn);
?>


<?php
session_start();
include 'db_connect.php'; // Include your database connection file
require 'PHPMailer/PHPMailer.php';
require 'PHPMailer/SMTP.php';

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = mysqli_real_escape_string($conn, $_POST['email']);

    if (empty($email)) {
        die("Email is required!");
    }

    // Check if email exists
    $sql = "SELECT * FROM users WHERE email = '$email'";
    $result = mysqli_query($conn, $sql);
    $count = mysqli_num_rows($result);

    if ($count == 0) {
        echo "Email not found. Please check your email address.";
    } else {
        // Generate temporary password
        $alphabet = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890';
        $temp_password = substr(str_shuffle($alphabet), 0, 8);

        // Hash the temporary password
        $hashed_password = password_hash($temp_password, PASSWORD_DEFAULT);

        // Update the database
        $sql_update = "UPDATE users SET password = '$hashed_password', reset_time=NOW() WHERE email='$email'";
        if (mysqli_query($conn, $sql_update)) {
            // Send email with temporary password
            $mail = new PHPMailer\PHPMailer();
            $mail->isSMTP();
            $mail->Host = 'smtp.example.com';
            $mail->Port = 587;
            $mail->SMTPAuth = true;
            $mail->Username = 'your_email@example.com';
            $mail->Password = 'your_password';

            $mail->setFrom('your_email@example.com', 'Reset Password');
            $mail->addAddress($email);
            $mail->isHTML(true);

            $mail->Subject = 'Temporary Password Reset';
            $mail->Body = "Your temporary password is: <b>$temp_password</b><br>
                          Please login and change your password.";

            if (!$mail->send()) {
                echo 'Mailer Error: ' . $mail->ErrorInfo;
            } else {
                echo "A temporary password has been sent to your email.";
            }
        } else {
            echo "Error updating record: " . mysqli_error($conn);
        }
    }
}
?>


<?php
session_start();

// Database connection file
include("db_connection.php");

if (isset($_POST['reset'])) {
    $email = htmlspecialchars(strip_tags(filter_var($_POST['email'], FILTER_SANITIZE_EMAIL)));

    // Check if email exists in the database
    $query = "SELECT * FROM users WHERE email = '" . mysqli_real_escape_string($conn, $email) . "'";
    $result = mysqli_query($conn, $query);
    $row = mysqli_fetch_array($result);

    if (!$row) {
        die("Email does not exist");
    } else {
        // Generate a random token
        $token = bin2hex(random_bytes(16));
        
        // Update the token and expiry time in the database
        $updateTokenQuery = "UPDATE users SET reset_token = '$token', reset_expiry = NOW() + INTERVAL 2 HOUR WHERE email = '" . mysqli_real_escape_string($conn, $email) . "'";
        $updateResult = mysqli_query($conn, $updateTokenQuery);

        // Send the password reset link to user's email
        require 'PHPMailer/PHPMailer.php';
        require 'PHPMailer/Exception.php';
        require 'PHPMailer/SMTP.php';

        $mail = new PHPMailer\PHPMailer();

        try {
            $mail->isSMTP();
            $mail->Host = 'smtp.example.com'; // Replace with your SMTP host
            $mail->SMTPAuth = true;
            $mail->Username = 'your_email@example.com';
            $mail->Password = 'your_password';
            $mail->Port = 587;

            $mail->setFrom('your_email@example.com', 'Reset Password');
            $mail->addAddress($email);
            $mail->Subject = 'Password Reset Request';

            $link = "http://example.com/reset_password.php?token=" . $token;
            $body = "<p>You requested a password reset. Click the link below to reset your password:</p><br>";
            $body .= "<a href='" . $link . "'>" . $link . "</a><br><br>";
            $body .= "<p>If you did not request this password reset, please ignore this email.</p>";

            $mail->msgHTML($body);

            $mail->send();
            echo "Password reset link has been sent to your email.";
        } catch (Exception $e) {
            echo "Could not send the password reset mail. Error: ", $mail->ErrorInfo;
        }

        // Redirect back to login page
        header("Location: login.php");
    }
}

?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Forgot Password</title>
</head>
<body>
    <h2>Forgot Password</h2>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <label for="email">Enter your email:</label><br>
        <input type="email" id="email" name="email" required><br>
        <input type="submit" value="Reset Password" name="reset">
    </form>
</body>
</html>


<?php
// Include database configuration
require('config.php');

if (isset($_GET['token'])) {
    $token = $_GET['token'];
    
    // Check if token exists and is valid
    $stmt = $conn->prepare("SELECT id, reset_token, reset_expires FROM users WHERE reset_token = ?");
    $stmt->bind_param("s", $token);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        $row = $result->fetch_assoc();
        // Check if token has expired
        if (strtotime($row['reset_expires']) < time()) {
            echo "Sorry, your password reset link has expired.";
            exit;
        }
        
        // If the token is valid and not expired, display password reset form
        ?>

        <!DOCTYPE html>
        <html lang="en">
        <head>
            <meta charset="UTF-8">
            <title>Reset Password</title>
        </head>
        <body>
            <h2>Reset Password</h2>
            <form action="<?php echo $_SERVER['PHP_SELF']; ?>?token=<?php echo $token; ?>" method="post">
                <input type="password" name="new_password" placeholder="Enter new password" required><br><br>
                <input type="password" name="confirm_password" placeholder="Confirm new password" required><br><br>
                <button type="submit" name="change">Change Password</button>
                <input type="hidden" name="token" value="<?php echo $token; ?>">
            </form>

        <?php
    } else {
        echo "Invalid or expired token.";
    }
} elseif (isset($_POST['change'])) {
    // Update the password
    $new_password = $_POST['new_password'];
    $confirm_password = $_POST['confirm_password'];
    $token = $_POST['token'];

    if ($new_password == $confirm_password) {
        // Check token validity again
        $stmt = $conn->prepare("SELECT id FROM users WHERE reset_token = ?");
        $stmt->bind_param("s", $token);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            // Update the password and clear the token
            $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);
            $stmt = $conn->prepare("UPDATE users SET password = ?, reset_token = NULL WHERE reset_token = ?");
            $stmt->bind_param("ss", $hashed_password, $token);
            $stmt->execute();

            echo "Password has been successfully changed. <a href='login.php'>Click here to login</a>";
        } else {
            echo "Invalid or expired token.";
        }
    } else {
        echo "Passwords do not match.";
    }
}

// Close the database connection
$conn->close();
?>


<?php
$servername = "localhost";
$username = "root";
$password = "";
$dbname = "myDB";

// Create connection
$conn = new mysqli($servername, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}
?>


<?php
// Include database connection
include('db_connect.php');

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get input email or username
    $input = trim($_POST['email_username']);
    
    if (empty($input)) {
        die("Please enter your email or username");
    }
    
    // Prepare SQL statement to check user existence
    $stmt = $conn->prepare("SELECT id, email FROM users WHERE email = ? OR username = ?");
    $stmt->bind_param("ss", $input, $input);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows == 0) {
        die("No account found with that email or username");
    }
    
    // Get user data
    $user = $result->fetch_assoc();
    
    // Generate reset token
    $resetToken = bin2hex(random_bytes(16));
    $tokenExpiry = date('Y-m-d H:i:s', strtotime('+1 hour'));
    
    // Store token in database
    $stmt = $conn->prepare("UPDATE users SET reset_token = ?, reset_expiry = ? WHERE id = ?");
    $stmt->bind_param("sss", $resetToken, $tokenExpiry, $user['id']);
    if (!$stmt->execute()) {
        die("An error occurred. Please try again later");
    }
    
    // Send reset email
    $to = $user['email'];
    $subject = "Password Reset Request";
    $message = "Please click the following link to reset your password:

";
    $message .= "http://yourwebsite.com/reset-password.php?token=" . $resetToken;
    $headers = "From: no-reply@yourwebsite.com" . "\r
";
    
    if (!mail($to, $subject, $message, $headers)) {
        die("Error sending email. Please try again later");
    }
    
    echo "A password reset link has been sent to your email address.";
}
?>


<?php
// This code should be added to reset-password.php after verifying the token

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $newPassword = trim($_POST['new_password']);
    
    if (empty($newPassword)) {
        die("Please enter a new password");
    }
    
    // Hash the new password
    $hashedPassword = password_hash($newPassword, PASSWORD_DEFAULT);
    
    // Update password in database
    $stmt = $conn->prepare("UPDATE users SET password = ?, reset_token = NULL, reset_expiry = NULL WHERE id = ?");
    $stmt->bind_param("si", $hashedPassword, $user['id']);
    
    if (!$stmt->execute()) {
        die("An error occurred. Please try again");
    }
    
    echo "Your password has been updated successfully!";
}
?>


// forgot_password.php

<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <h2>Forgot Password</h2>
    <form action="forgot_password_handler.php" method="post">
        <label for="email">Email:</label><br>
        <input type="email" id="email" name="email" required><br><br>
        <input type="submit" value="Reset Password">
    </form>
</body>
</html>


// forgot_password_handler.php

<?php
require 'db_connect.php'; // Include your database connection file

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = mysqli_real_escape_string($conn, $_POST['email']);

    // Check if the email exists in the database
    $sql = "SELECT id FROM users WHERE email='$email'";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) == 1) {
        // Generate a random token
        $token = bin2hex(random_bytes(32));
        
        // Insert the token into the database with an expiration time
        $expires = date('Y-m-d H:i:s', strtotime('+1 hour'));
        $sql = "INSERT INTO password_reset (user_id, token, expires) 
                VALUES ('$email', '$token', '$expires')";
        
        if(mysqli_query($conn, $sql)){
            // Send the reset link to the user's email
            $resetLink = "http://yourdomain.com/reset_password.php?token=$token";
            send_reset_email($email, $resetLink);
            echo "A password reset link has been sent to your email.";
        } else {
            echo "Error: Could not request password reset." . mysqli_error($conn);
        }
    } else {
        echo "Email does not exist in our records.";
    }
}

function send_reset_email($email, $resetLink) {
    // Use PHPMailer or any other email library to send emails
    require 'PHPMailer/PHPMailer.php';
    require 'PHPMailer/Exception.php';
    
    try {
        $mail = new PHPMailer();
        $mail->isSMTP(); // Set mailer to use SMTP
        $mail->Host = 'smtp.gmail.com'; // Specify main and backup server
        $mail->SMTPAuth = true; // Enable SMTP authentication
        $mail->Username = 'your Gmail address'; // SMTP username
        $mail->Password = 'your Gmail password'; // SMTP password
        $mail->SMTPSecure = 'tls'; // Enable TLS encryption, `ssl` also acceptable
        $mail->Port = 587; // TCP port to connect to
        
        $mail->setFrom('your Gmail address', 'Your Name');
        $mail->addAddress($email);
        
        $mail->Subject = 'Password Reset Request';
        $mail->Body    = "Click the following link to reset your password: $resetLink";
        
        if (!$mail->send()) {
            echo 'Mailer Error: ' . $mail->ErrorInfo;
        }
    } catch (Exception $e) {
        echo 'Message could not be sent. Mailer Error: ', $e->getMessage();
    }
}
?>


// reset_password.php

<?php
require 'db_connect.php';

if (isset($_GET['token'])) {
    $token = mysqli_real_escape_string($conn, $_GET['token']);
    
    // Check if the token is valid and not expired
    $sql = "SELECT user_id FROM password_reset 
            WHERE token='$token' AND expires > NOW()";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) == 1) {
        $row = mysqli_fetch_assoc($result);
        $user_id = $row['user_id'];
        
        // Display the password reset form
        ?>
        <form action="reset_password_handler.php" method="post">
            <input type="hidden" name="token" value="<?php echo $token; ?>">
            <label for="new_password">New Password:</label><br>
            <input type="password" id="new_password" name="new_password" required><br><br>
            <label for="confirm_password">Confirm Password:</label><br>
            <input type="password" id="confirm_password" name="confirm_password" required><br><br>
            <input type="submit" value="Reset Password">
        </form>
        <?php
    } else {
        echo "Invalid or expired token.";
    }
} else {
    echo "No token provided.";
}
?>


// reset_password_handler.php

<?php
require 'db_connect.php';

if (isset($_POST['token'])) {
    $token = mysqli_real_escape_string($conn, $_POST['token']);
    $new_password = mysqli_real_escape_string($conn, $_POST['new_password']);
    $confirm_password = mysqli_real_escape_string($conn, $_POST['confirm_password']);
    
    if ($new_password == $confirm_password) {
        // Check if the token is valid and not expired
        $sql = "SELECT user_id FROM password_reset 
                WHERE token='$token' AND expires > NOW()";
        $result = mysqli_query($conn, $sql);
        
        if (mysqli_num_rows($result) == 1) {
            $row = mysqli_fetch_assoc($result);
            $user_id = $row['user_id'];
            
            // Update the user's password
            $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);
            $sql = "UPDATE users SET password='$hashed_password' WHERE id='$user_id'";
            if (mysqli_query($conn, $sql)) {
                echo "Password has been reset successfully.";
                
                // Delete the used token
                $sql = "DELETE FROM password_reset WHERE token='$token'";
                mysqli_query($conn, $sql);
            } else {
                echo "Error: Could not reset password." . mysqli_error($conn);
            }
        } else {
            echo "Invalid or expired token.";
        }
    } else {
        echo "Passwords do not match.";
    }
} else {
    echo "No token provided.";
}
?>


<?php
session_start();

// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$db_name = 'mydatabase';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

if (isset($_POST['submit'])) {
    $email = trim($_POST['email']);

    // Validate email
    if (empty($email)) {
        $_SESSION['status'] = "Email is required!";
        header("Location: forgot_password.php");
        exit();
    }

    if (!preg_match("/^\S+@\S+\.\S+$/", $email)) {
        $_SESSION['status'] = "Invalid email format!";
        header("Location: forgot_password.php");
        exit();
    }

    // Check if email exists in database
    $query = "SELECT id FROM users WHERE email='$email'";
    $result = mysqli_query($conn, $query);

    if (!$result) {
        die("Query failed: " . mysqli_error($conn));
    }

    if (mysqli_num_rows($result) == 0) {
        $_SESSION['status'] = "Email does not exist!";
        header("Location: forgot_password.php");
        exit();
    } else {
        // Generate a unique token
        $token = bin2hex(random_bytes(16));
        $expires = date('Y-m-d H:i:s', time() + 3600); // Token expires after 1 hour

        // Update the database with the token and expiration time
        $updateQuery = "UPDATE users SET reset_token='$token', reset_expires='$expires' WHERE email='$email'";
        if (mysqli_query($conn, $updateQuery)) {
            // Send email to user
            $to = $email;
            $subject = "Password Reset Request";
            $message = "
                <html>
                    <head></head>
                    <body>
                        <h2>Password Reset</h2>
                        <p>Please click the following link to reset your password:</p>
                        <a href='http://localhost/reset_password.php?token=$token'>Reset Password</a><br>
                        <p>If you didn't request a password reset, please ignore this email.</p>
                    </body>
                </html>
            ";
            $headers = "MIME-Version: 1.0" . "\r
";
            $headers .= "Content-type:text/html;charset=UTF-8" . "\r
";
            $headers .= "From: admin@example.com" . "\r
";

            // Using PHPMailer for better email reliability
            require 'PHPMailer/PHPMailer.php';
            require 'PHPMailer/Exception.php';
            require 'PHPMailer/OAuth.php';

            try {
                $mail = new PHPMailer\PHPMailer();
                $mail->isSMTP();
                $mail->Host = 'smtp.example.com'; // SMTP server
                $mail->SMTPAuth = true;
                $mail->Username = 'your@example.com';
                $mail->Password = 'yourpassword';
                $mail->setFrom('from@example.com', 'Mailer');
                $mail->addAddress($to);
                $mail->isHTML(true);
                $mail->Subject = $subject;
                $mail->Body    = $message;

                if ($mail->send()) {
                    $_SESSION['status'] = "An email has been sent to your address!";
                    header("refresh:5; url=login.php");
                    exit();
                } else {
                    echo 'Mailer Error: ' . $mail->ErrorInfo;
                }
            } catch (Exception $e) {
                echo "Message could not be sent. Mailer Error: {$e}";
            }

        } else {
            die("Update failed: " . mysqli_error($conn));
        }
    }
}

mysqli_close($conn);
?>


<?php
session_start();

// Database configuration
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

// If form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = filter_var($_POST['email'], FILTER_VALIDATE_EMAIL);

    if (!$email) {
        die("Please enter a valid email address.");
    }

    // Check if email exists in database
    try {
        $stmt = $conn->prepare("SELECT id FROM users WHERE email = :email");
        $stmt->bindParam(':email', $email);
        $stmt->execute();
        $result = $stmt->fetch(PDO::FETCH_ASSOC);

        if (!$result) {
            die("Email does not exist in our records.");
        }

        // Generate reset token
        $resetToken = bin2hex(random_bytes(32));
        $expires = time() + 7200; // Token expires after 2 hours

        // Insert reset token into database
        $stmt = $conn->prepare("INSERT INTO password_resets (user_id, token, expires) VALUES (:user_id, :token, :expires)");
        $stmt->bindParam(':user_id', $result['id']);
        $stmt->bindParam(':token', $resetToken);
        $stmt->bindParam(':expires', $expires);
        $stmt->execute();

        // Send reset email
        $to = $email;
        $subject = "Password Reset Request";
        $message = "
            <html>
                <head></head>
                <body>
                    <p>Please click the following link to reset your password:</p>
                    <a href='http://yourwebsite.com/reset-password.php?token=$resetToken'>Reset Password</a>
                    <br><br>
                    This link will expire in 2 hours.
                </body>
            </html>";
        $headers = "MIME-Version: 1.0\r
";
        $headers .= "Content-type: text/html; charset=UTF-8\r
";
        $headers .= "From: yourwebsite@example.com\r
";

        mail($to, $subject, $message, $headers);

        echo "We've sent a password reset link to your email address.";
    } catch (PDOException $e) {
        die("Error processing your request: " . $e->getMessage());
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <h2>Forgot Password</h2>
    <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
        <input type="email" name="email" placeholder="Enter your email address" required><br><br>
        <button type="submit">Reset Password</button>
    </form>
</body>
</html>



<?php
session_start();

// Database configuration
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

// Check if token exists in URL
if (!isset($_GET['token'])) {
    die("No valid token provided.");
}

$resetToken = $_GET['token'];

try {
    // Verify the reset token
    $stmt = $conn->prepare("SELECT user_id, expires FROM password_resets WHERE token = :token");
    $stmt->bindParam(':token', $resetToken);
    $stmt->execute();
    $result = $stmt->fetch(PDO::FETCH_ASSOC);

    if (!$result) {
        die("Invalid reset token.");
    }

    // Check if token has expired
    if ($result['expires'] < time()) {
        die("This reset link has expired.");
    }
} catch (PDOException $e) {
    die("Error processing your request: " . $e->getMessage());
}

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    try {
        // Update password
        $newPassword = $_POST['password'];
        $user_id = $result['user_id'];

        // Hash the new password
        $hashedPassword = password_hash($newPassword, PASSWORD_DEFAULT);

        $stmt = $conn->prepare("UPDATE users SET password = :password WHERE id = :id");
        $stmt->bindParam(':password', $hashedPassword);
        $stmt->bindParam(':id', $user_id);
        $stmt->execute();

        // Invalidate reset token
        $stmt = $conn->prepare("DELETE FROM password_resets WHERE user_id = :id");
        $stmt->bindParam(':id', $user_id);
        $stmt->execute();

        echo "Your password has been updated successfully!";
    } catch (PDOException $e) {
        die("Error updating your password: " . $e->getMessage());
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <h2>Reset Password</h2>
    <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"] . '?token=' . $resetToken); ?>" method="post">
        <input type="password" name="password" placeholder="Enter new password" required><br><br>
        <button type="submit">Update Password</button>
    </form>
</body>
</html>



<?php
// Database configuration
$host = 'localhost';
$dbname = 'mydatabase';
$username = 'root';
$password = '';

try {
    // Create a new PDO instance
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    // Set the PDO error mode to exception
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    die("Could not connect to the database: " . $e->getMessage());
}

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get email from POST request
    $email = $_POST['email'];
    
    // Validate input
    if (empty($email)) {
        die(json_encode(array('status' => 'error', 'message' => 'Email is required!')));
    }
    
    // Check if email exists in the database
    $stmt = $conn->prepare("SELECT id FROM users WHERE email = :email");
    $stmt->bindParam(':email', $email);
    $stmt->execute();
    
    $user = $stmt->fetch(PDO::FETCH_ASSOC);
    
    if (!$user) {
        die(json_encode(array('status' => 'error', 'message' => 'No account found with this email!')));
    }
    
    // Generate a random token
    $token = bin2hex(random_bytes(16));
    $expires = date('Y-m-d H:i:s', time() + 3600); // Token expires in 1 hour
    
    // Update the database with new token and expiration time
    $stmt = $conn->prepare("UPDATE users SET reset_token = :token, reset_expires = :expires WHERE id = :id");
    $stmt->bindParam(':token', $token);
    $stmt->bindParam(':expires', $expires);
    $stmt->bindParam(':id', $user['id']);
    
    if (!$stmt->execute()) {
        die(json_encode(array('status' => 'error', 'message' => 'Internal error! Please try again later.')));
    }
    
    // Send reset email
    $to = $email;
    $subject = "Password Reset Request";
    $message = "
        <html>
            <body>
                <h2>Password Reset</h2>
                <p>Please click the following link to reset your password:</p>
                <a href='http://example.com/reset-password.php?token=$token'>Reset Password</a><br>
                <small>This link will expire in 30 minutes.</small>
            </body>
        </html>
    ";
    
    $headers = "MIME-Version: 1.0" . "\r
";
    $headers .= "Content-type:text/html;charset=UTF-8" . "\r
";
    $headers .= "From: <yourname@example.com>" . "\r
";
    
    if (mail($to, $subject, $message, $headers)) {
        die(json_encode(array('status' => 'success', 'message' => 'Password reset email has been sent to your inbox!')));
    } else {
        die(json_encode(array('status' => 'error', 'message' => 'Failed to send password reset email. Please try again later.')));
    }
}
?>


<?php
session_start();
include('db_connect.php'); // Include your database connection

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = mysqli_real_escape_string($conn, $_POST['email']);
    
    // Check if email exists in the database
    $sql = "SELECT id, username FROM users WHERE email = '$email'";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) > 0) {
        $row = mysqli_fetch_assoc($result);
        $user_id = $row['id'];
        $username = $row['username'];
        
        // Generate a random token
        $token = bin2hex(random_bytes(16));
        
        // Store the token and expiration time in the database
        $expiration_time = time() + 3600; // Token expires after 1 hour
        
        $sql = "INSERT INTO password_reset (user_id, token, expires) 
                VALUES ('$user_id', '$token', '$expiration_time')";
        
        if (mysqli_query($conn, $sql)) {
            // Send email with reset link
            $reset_link = "http://$_SERVER[HTTP_HOST]/reset-password.php?token=$token";
            
            $to = $email;
            $subject = "Password Reset Request";
            $message = "Dear $username,

You have requested to reset your password.
Please click the following link to reset your password within the next hour:
$reset_link

If you did not request this, please ignore this email.";
            
            $headers = "From: no-reply@$_SERVER[HTTP_HOST]";
            
            if (mail($to, $subject, $message, $headers)) {
                echo "<p>Email sent! Please check your inbox to reset your password.</p>";
            } else {
                echo "<p>Error sending email. Please try again later.</p>";
            }
        }
    } else {
        echo "<p>Email not found in our records!</p>";
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <h2>Forgot Password</h2>
    <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
        <label>Email:</label><br>
        <input type="email" name="email" required><br><br>
        <input type="submit" value="Submit">
    </form>
</body>
</html>


<?php
session_start();
include('db_connect.php'); // Include your database connection

if (!isset($_GET['token'])) {
    die("Invalid request!");
}

$token = mysqli_real_escape_string($conn, $_GET['token']);

// Check if token exists and is valid
$sql = "SELECT id, user_id, expires FROM password_reset WHERE token = '$token'";
$result = mysqli_query($conn, $sql);

if (mysqli_num_rows($result) > 0) {
    $row = mysqli_fetch_assoc($result);
    $reset_id = $row['id'];
    $user_id = $row['user_id'];
    $expires = $row['expires'];
    
    if ($expires < time()) {
        // Token has expired
        echo "<p>Password reset link has expired!</p>";
        exit();
    }
} else {
    // Invalid token
    echo "<p>Invalid password reset link!</p>";
    exit();
}

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $new_password = mysqli_real_escape_string($conn, $_POST['new_password']);
    
    if (empty($new_password)) {
        echo "<p>Please enter a new password!</p>";
    } else {
        // Update the user's password
        $sql = "UPDATE users SET password = '$new_password' WHERE id = '$user_id'";
        
        if (mysqli_query($conn, $sql)) {
            // Invalidate the reset token
            $sql = "DELETE FROM password_reset WHERE id = '$reset_id'";
            mysqli_query($conn, $sql);
            
            echo "<p>Password updated successfully! You can now login with your new password.</p>";
        } else {
            echo "<p>Error updating password!</p>";
        }
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <h2>Reset Password</h2>
    <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
        <label>New Password:</label><br>
        <input type="password" name="new_password" required><br><br>
        <input type="submit" value="Change Password">
    </form>
</body>
</html>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

// Connect to database
$conn = new mysqli($host, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to handle forgot password
function forgotPassword($email) {
    global $conn;

    // Sanitize input email
    $email = trim($email);
    $email = stripslashes($email);
    $email = htmlspecialchars($email);

    // Check if email exists in database
    $sql = "SELECT * FROM users WHERE email = '$email'";
    $result = $conn->query($sql);

    if ($result->num_rows == 0) {
        return "Email not found!";
    }

    // Generate a random token for password reset
    $token = bin2hex(random_bytes(16));

    // Update the token in database (assuming there's a 'reset_token' column)
    $sql = "UPDATE users SET reset_token = '$token' WHERE email = '$email'";
    $conn->query($sql);

    // Set the expiration time for the token (e.g., 2 hours from now)
    $expiration_time = date("Y-m-d H:i:s", time() + 7200);

    // Update the expiration time in database (assuming there's a 'reset_expires' column)
    $sql = "UPDATE users SET reset_expires = '$expiration_time' WHERE email = '$email'";
    $conn->query($sql);

    // Send password reset email
    $to = $email;
    $subject = "Password Reset Request";
    
    // Email headers
    $headers = "From: your_email@example.com\r
";
    $headers .= "Reply-To: your_email@example.com\r
";
    $headers .= "Content-Type: text/html; charset=UTF-8\r
";

    // Email content
    $message = "
        <html>
        <body>
            <h2>Password Reset</h2>
            <p>We received a request to reset your password. Click the link below to set up a new password:</p>
            <a href='http://yourwebsite.com/reset-password.php?token=$token'>Reset Password</a>
            <p>If you didn't request this password reset, you can safely ignore this email.</p>
        </body>
        </html>
    ";

    // Send email
    if (mail($to, $subject, $message, $headers)) {
        return "Password reset link has been sent to your email!";
    } else {
        return "Error sending password reset email. Please try again.";
    }
}

// Example usage when form is submitted:
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    if (!empty($_POST['email'])) {
        $message = forgotPassword($_POST['email']);
        echo $message;
    } else {
        echo "Please enter your email!";
    }
}
?>

<!-- HTML Form -->
<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <h2>Forgot Password</h2>
    <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
        <input type="email" name="email" placeholder="Enter your email" required><br><br>
        <button type="submit">Reset Password</button>
    </form>
</body>
</html>


<?php
// Database configuration
$host = "localhost";
$db_name = "mydatabase";
$username = "root";
$password = "";

try {
    $conn = new PDO("mysql:host=$host;dbname=$db_name", $username, $password);
} catch(PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

function forgotPassword($email) {
    global $conn;

    // Check if email exists
    $stmt = $conn->prepare("SELECT id FROM users WHERE email = :email");
    $stmt->bindParam(':email', $email);
    $stmt->execute();

    if ($stmt->rowCount() == 0) {
        return "Email not found!";
    }

    // Generate a random token
    $token = bin2hex(random_bytes(16));
    
    // Insert the token into database
    $insertStmt = $conn->prepare("INSERT INTO password_resets (email, token) VALUES (:email, :token)");
    $insertStmt->bindParam(':email', $email);
    $insertStmt->bindParam(':token', $token);
    $insertStmt->execute();

    // Send email to user
    $to = $email;
    $subject = "Reset Password";
    $message = "Please click the following link to reset your password:

" .
               "http://example.com/reset-password.php?token=$token

" .
               "If you didn't request this password reset, please ignore this email.";
    
    $headers = "From: noreply@example.com\r
";
    mail($to, $subject, $message, $headers);

    return "Password reset link has been sent to your email!";
}

function resetPassword($token, $newPassword) {
    global $conn;

    // Check if token exists
    $stmt = $conn->prepare("SELECT id, email FROM password_resets WHERE token = :token");
    $stmt->bindParam(':token', $token);
    $stmt->execute();

    if ($stmt->rowCount() == 0) {
        return "Invalid or expired reset token!";
    }

    // Update the user's password
    list($id, $email) = $stmt->fetch();
    
    $hashPassword = password_hash($newPassword, PASSWORD_DEFAULT);
    $updateStmt = $conn->prepare("UPDATE users SET password = :password WHERE email = :email");
    $updateStmt->bindParam(':password', $hashPassword);
    $updateStmt->bindParam(':email', $email);
    $updateStmt->execute();

    // Delete the token after reset
    $deleteStmt = $conn->prepare("DELETE FROM password_resets WHERE token = :token");
    $deleteStmt->bindParam(':token', $token);
    $deleteStmt->execute();

    return "Password updated successfully!";
}

// Usage example:

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    if (isset($_POST['email'])) {
        // Handle forgot password request
        $email = $_POST['email'];
        echo forgotPassword($email);
    }
} elseif (isset($_GET['token'])) {
    // Display reset password form or handle password update
    $token = $_GET['token'];

    if ($_SERVER['REQUEST_METHOD'] == 'POST') {
        if (isset($_POST['new_password'])) {
            $password = $_POST['new_password'];
            echo resetPassword($token, $password);
        }
    } else {
        // Show the reset password form
        echo "<h2>Reset Password</h2>";
        echo "<form method='post'>";
        echo "New Password: <input type='password' name='new_password'><br>";
        echo "Confirm Password: <input type='password' name='confirm_password'><br>";
        echo "<input type='submit' value='Reset Password'>";
        echo "</form>";
    }
}
?>


<?php
session_start();
include('db_connection.php');

if (isset($_POST['email'])) {
    $email = mysqli_real_escape_string($conn, $_POST['email']);
    
    // Check if email exists in the database
    $sql = "SELECT id FROM users WHERE email = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("s", $email);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows > 0) {
        // Generate a random token
        $token = bin2hex(random_bytes(16));
        
        // Store the token and expiration time in the database
        $expires = date('Y-m-d H:i:s', strtotime('+1 hour'));
        $sql = "UPDATE users SET reset_token = ?, reset_expires = ? WHERE email = ?";
        $stmt = $conn->prepare($sql);
        $stmt->bind_param("sss", $token, $expires, $email);
        $stmt->execute();
        
        // Send the reset link to the user's email
        $to = $email;
        $subject = "Password Reset Request";
        $message = "Please click the following link to reset your password:

" .
                   "http://example.com/reset_password.php?token=$token

".
                   "This link will expire in one hour.";
        
        if (mail($to, $subject, $message)) {
            $_SESSION['message'] = "A password reset link has been sent to your email address.";
            header("Location: forgot_password.php");
            exit();
        } else {
            $_SESSION['error'] = "Failed to send the reset link. Please try again.";
            header("Location: forgot_password.php");
            exit();
        }
    } else {
        $_SESSION['error'] = "Email not found in our records.";
        header("Location: forgot_password.php");
        exit();
    }
}
?>


<?php
session_start();
include('db_connection.php');

if (!isset($_GET['token'])) {
    $_SESSION['error'] = "No token provided.";
    header("Location: forgot_password.php");
    exit();
}

$token = mysqli_real_escape_string($conn, $_GET['token']);

// Check if the token exists and hasn't expired
$sql = "SELECT id, reset_expires FROM users WHERE reset_token = ?";
$stmt = $conn->prepare($sql);
$stmt->bind_param("s", $token);
$stmt->execute();
$result = $stmt->get_result();

if ($result->num_rows == 0) {
    $_SESSION['error'] = "Invalid or expired token.";
    header("Location: forgot_password.php");
    exit();
}

$user = $result->fetch_assoc();
$expires = $user['reset_expires'];

// Check if the token has expired
if (strtotime($expires) < time()) {
    // Expired, delete the token and redirect
    $sql = "UPDATE users SET reset_token = NULL, reset_expires = NULL WHERE id = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("i", $user['id']);
    $stmt->execute();
    
    $_SESSION['error'] = "Token has expired. Please request a new password reset.";
    header("Location: forgot_password.php");
    exit();
}

// If everything is valid, show the password reset form
?>
<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <?php if (isset($_SESSION['error'])) { ?>
        <p style="color: red;"><?php echo $_SESSION['error']; ?></p>
    <?php unset($_SESSION['error']); } ?>

    <h2>Reset Your Password</h2>
    <form action="reset_password.php?token=<?php echo $token; ?>" method="post">
        New Password: <input type="password" name="new_password" required><br>
        Confirm Password: <input type="password" name="confirm_password" required><br>
        <button type="submit">Reset Password</button>
    </form>
</body>
</html>

<?php
// Handle the password reset submission
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $new_password = $_POST['new_password'];
    $confirm_password = $_POST['confirm_password'];

    if ($new_password != $confirm_password) {
        $_SESSION['error'] = "Passwords do not match.";
        header("Location: reset_password.php?token=$token");
        exit();
    }

    // Update the password in the database
    $sql = "UPDATE users SET password = ?, reset_token = NULL, reset_expires = NULL WHERE reset_token = ?";
    $stmt = $conn->prepare($sql);
    $hashedPassword = password_hash($new_password, PASSWORD_DEFAULT);
    $stmt->bind_param("ss", $hashedPassword, $token);
    $stmt->execute();

    $_SESSION['message'] = "Your password has been successfully updated!";
    header("Location: login.php");
    exit();
}
?>


<?php
$servername = "localhost";
$username = "root";
$password = "";
$dbname = "your_database_name";

// Create connection
$conn = new mysqli($servername, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}
?>


<?php
session_start();
include_once 'includes/dbconnect.php';
require 'PHPMailer/PHPMailerAutoload.php';

// Generate a random token
function generateToken() {
    return bin2hex(random_bytes(32));
}

// Check if email exists
function checkEmailExists($email, $conn) {
    $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
    $stmt->bind_param('s', $email);
    $stmt->execute();
    $result = $stmt->get_result();
    
    return $result->num_rows > 0;
}

// Insert token into database
function insertToken($token, $email, $conn) {
    // Delete existing tokens for this email
    $deleteStmt = $conn->prepare("DELETE FROM password_resets WHERE email = ?");
    $deleteStmt->bind_param('s', $email);
    $deleteStmt->execute();

    // Insert new token with expiration (1 hour)
    $expiration = date('Y-m-d H:i:s', time() + 3600);
    $insertStmt = $conn->prepare("INSERT INTO password_resets (token, email, expires) VALUES (?, ?, ?)");
    $insertStmt->bind_param('sss', $token, $email, $expiration);
    return $insertStmt->execute();
}

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $email = trim($_POST['email']);
    
    if (empty($email)) {
        $_SESSION['message'] = "Please enter your email address!";
        header("Location: forgot-password.php");
        exit();
    }

    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        $_SESSION['message'] = "Please enter a valid email address!";
        header("Location: forgot-password.php");
        exit();
    }

    $conn = dbconnect();

    if (checkEmailExists($email, $conn)) {
        $token = generateToken();
        
        // Insert token into database
        if (insertToken($token, $email, $conn)) {
            // Send email with reset link
            $mail = new PHPMailer;
            $mail->isSMTP();
            $mail->Host = 'smtp.example.com'; // Replace with your SMTP host
            $mail->SMTPAuth = true;
            $mail->Username = 'your_email@example.com'; // Replace with your email
            $mail->Password = 'your_password'; // Replace with your password
            $mail->Port = 587; // Or whatever port you use
            
            $mail->setFrom('no-reply@example.com', 'Example');
            $mail->addAddress($email);
            
            $reset_link = "http://example.com/reset-password.php?token=$token";
            $mail->Subject = 'Password Reset Request';
            $mail->Body    = "Please click the following link to reset your password: 
$reset_link";
            $mail->AltBody = "Please visit this URL to reset your password: $reset_link";
            
            if (!$mail->send()) {
                $_SESSION['message'] = 'An error occurred while sending the email. Please try again later.';
                header("Location: forgot-password.php");
                exit();
            }
            
            $_SESSION['message'] = "We've sent you a password reset link! Check your email.";
        } else {
            $_SESSION['message'] = 'An error occurred while processing your request. Please try again later.';
        }
    } else {
        $_SESSION['message'] = "Email address not found in our records!";
    }

    header("Location: forgot-password.php");
} else {
    // Display form
    require_once 'forgot-password-form.php';
}
?>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

try {
    // Create database connection
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        // Check if form was submitted
        $email = $_POST['email'];
        
        if (empty($email)) {
            die("Please enter your email address.");
        }
        
        // Validate email format
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            die("Invalid email format.");
        }
        
        // Check if email exists in the database
        $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
        $stmt->execute([$email]);
        $user = $stmt->fetch(PDO::FETCH_ASSOC);
        
        if (!$user) {
            die("Email not found in our records.");
        }
        
        // Generate a random token
        $token = bin2hex(openssl_random_pseudo_bytes(16));
        $expires = date('Y-m-d H:i:s', time() + 3600); // Token expires after 1 hour
        
        // Store the token in the database
        $stmt = $conn->prepare("INSERT INTO reset_tokens (user_id, token, expires) VALUES (?, ?, ?)");
        $stmt->execute([$user['id'], $token, $expires]);
        
        // Send email to user with password reset instructions
        require 'PHPMailer/PHPMailer.php';
        require 'PHPMailer/SMTP.php';
        require 'PHPMailer/Exception.php';

        $mail = new PHPMailer\PHPMailer();
        try {
            $mail->isSMTP();
            $mail->Host = 'smtp.gmail.com'; // Set SMTP server
            $mail->SMTPAuth = true;
            $mail->Username = 'your_email@gmail.com';
            $mail->Password = 'your_app_specific_password';
            $mail->SMTPSecure = PHPMailer::ENCRYPTION_SMTPS;
            $mail->Port = 465;

            $mail->setFrom('your_email@gmail.com', 'Reset Password');
            $mail->addAddress($email);
            
            $resetLink = "http://example.com/reset-password.php?token=$token";
            
            $mail->isHTML(false);
            $mail->Subject = 'Password Reset Instructions';
            $mail->Body = "To reset your password, please click the following link:

$resetLink

If you did not request a password reset, please ignore this email.
The link will expire in 1 hour.";

            $mail->send();
            
            // Redirect back to forgot password page with success message
            header("Location: forgot-password.php?message=We've sent an email with instructions on how to reset your password.");
            exit;
        } catch (Exception $e) {
            echo "Message could not be sent. Mailer Error: {$mail->ErrorInfo}";
        }
    }
} catch(PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}
?>


<?php
// Database connection and token verification would go here

// Check if token exists and is valid (not expired)
if ($tokenIsValid) {
    // Allow user to enter new password
}
?>


<?php
// forgot_password.php

require 'database_connection.php'; // Include your database connection file

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = $_POST['email'];

    // Check if email exists in the database
    $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
    $stmt->bind_param("s", $email);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows === 0) {
        echo "Email not registered!";
        exit();
    }

    // Generate a random token
    $token = bin2hex(random_bytes(16));
    $expires = date("Y-m-d H:i:s", time() + 3600); // Token expires in 1 hour

    // Insert the token into the database
    $stmt = $conn->prepare("INSERT INTO password_reset (user_id, token, expires) 
                           SELECT id, ?, ? FROM users WHERE email = ?");
    $stmt->bind_param("sss", $token, $expires, $email);
    $result = $stmt->execute();

    if (!$result) {
        die("Error: " . $conn->error);
    }

    // Send reset email
    $to = $email;
    $subject = "Password Reset Request";
    
    $headers = "From: your_email@example.com\r
";
    $headers .= "Reply-To: your_email@example.com\r
";
    $headers .= "X-Mailer: PHP/" . phpversion();

    $message = "To reset your password, click the following link:

";
    $message .= "http://yourwebsite.com/reset_password.php?token=" . urlencode($token) . "

";
    $message .= "If you did not request a password reset, please ignore this email.";

    if (mail($to, $subject, $message, $headers)) {
        echo "An email has been sent to your address. Please check your inbox.";
    } else {
        echo "There was an error sending the email!";
    }

    // Close database connection
    $conn->close();
}


<?php
// reset_password.php

require 'database_connection.php'; // Include your database connection file

session_start();

if (isset($_GET['token'])) {
    $token = $_GET['token'];

    // Check if token exists in the database and hasn't expired
    $stmt = $conn->prepare("SELECT user_id, email FROM password_reset 
                           WHERE token = ? AND expires > NOW()");
    $stmt->bind_param("s", $token);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows === 0) {
        die("Invalid or expired reset link!");
    }

    // Store user data in session
    $row = $result->fetch_assoc();
    $_SESSION['reset_user_id'] = $row['user_id'];
    $_SESSION['reset_email'] = $row['email'];

    // Close database connection
    $conn->close();

    // Redirect to password reset form
    header("Location: change_password.php");
} else {
    die("No token provided!");
}


<?php
// change_password.php

require 'database_connection.php'; // Include your database connection file

session_start();

if (isset($_SESSION['reset_user_id']) && isset($_POST['new_password'])) {
    $userId = $_SESSION['reset_user_id'];
    $newPassword = password_hash($_POST['new_password'], PASSWORD_DEFAULT);

    // Update the user's password
    $stmt = $conn->prepare("UPDATE users SET password = ? WHERE id = ?");
    $stmt->bind_param("si", $newPassword, $userId);
    $result = $stmt->execute();

    if ($result) {
        // Clear the session variables and redirect to login page
        unset($_SESSION['reset_user_id']);
        unset($_SESSION['reset_email']);
        header("Location: login.php");
    } else {
        die("Error updating password!");
    }

    // Close database connection
    $conn->close();
} else {
    die("Invalid request!");
}


<?php
// Database connection file (db.php)
<?php
$host = "localhost";
$username = "root";
$password = "";
$dbname = "mydatabase";

$conn = new mysqli($host, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}
?>

// Forgot Password Form (forgot.php)
<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <h2>Forgot Password</h2>
    <form action="forgot_process.php" method="post">
        <input type="text" name="username_email" placeholder="Username or Email" required><br><br>
        <button type="submit">Reset Password</button>
    </form>
</body>
</html>

// Forgot Password Process (forgot_process.php)
<?php
include('db.php');

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username_email = $_POST['username_email'];
    
    // Check if email or username exists in the database
    $sql = "SELECT id, email FROM users WHERE username='$username_email' OR email='$username_email'";
    $result = $conn->query($sql);
    
    if ($result->num_rows > 0) {
        $row = $result->fetch_assoc();
        $user_id = $row['id'];
        $email = $row['email'];
        
        // Generate a random token
        $token = bin2hex(random_bytes(16));
        $expires = date('Y-m-d H:i:s', time() + 3600); // Token expires after 1 hour
        
        // Store the token in the database
        $sql_token = "INSERT INTO password_resets (user_id, token, created_at) VALUES ('$user_id', '$token', now())";
        if ($conn->query($sql_token)) {
            // Send email with reset link
            $reset_link = "http://example.com/reset.php?token=$token";
            
            $to = $email;
            $subject = "Password Reset Request";
            $message = "Click the following link to reset your password:

$reset_link

This link will expire in 1 hour.";
            $headers = "From: noreply@example.com\r
";
            
            if (mail($to, $subject, $message, $headers)) {
                echo "Password reset email has been sent!";
            } else {
                echo "Failed to send password reset email.";
            }
        }
    } else {
        echo "Username or email not found in our records.";
    }
}
?>

// Reset Password Page (reset.php)
<?php
include('db.php');

if (isset($_GET['token'])) {
    $token = $_GET['token'];
    
    // Check if token exists and is valid
    $sql = "SELECT * FROM password_resets WHERE token='$token' AND created_at >= NOW() - INTERVAL 1 HOUR";
    $result = $conn->query($sql);
    
    if ($result->num_rows > 0) {
        // Show reset form
?>
<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <h2>Reset Password</h2>
    <form action="reset_process.php" method="post">
        <input type="password" name="new_password" placeholder="New Password" required><br><br>
        <input type="hidden" name="token" value="<?php echo $token; ?>">
        <button type="submit">Reset Password</button>
    </form>
</body>
</html>
<?php
    } else {
        // Token invalid or expired
        echo "Invalid or expired reset link.";
    }
} else {
    // No token provided
    echo "No reset request found.";
}
?>

// Reset Password Process (reset_process.php)
<?php
include('db.php');

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $token = $_POST['token'];
    $new_password = password_hash($_POST['new_password'], PASSWORD_DEFAULT);
    
    // Check if token exists and is valid
    $sql_check_token = "SELECT * FROM password_resets WHERE token='$token' AND created_at >= NOW() - INTERVAL 1 HOUR";
    $result = $conn->query($sql_check_token);
    
    if ($result->num_rows > 0) {
        // Update user's password
        $row = $result->fetch_assoc();
        $user_id = $row['user_id'];
        
        $sql_update_password = "UPDATE users SET password='$new_password' WHERE id='$user_id'";
        if ($conn->query($sql_update_password)) {
            // Delete the token after reset
            $sql_delete_token = "DELETE FROM password_resets WHERE token='$token'";
            if ($conn->query($sql_delete_token)) {
                echo "Password has been reset successfully!";
            }
        } else {
            echo "Error updating password.";
        }
    } else {
        echo "Invalid or expired reset link.";
    }
}
?>


<?php
// Include database connection
include('db_connection.php');

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = $_POST['email'];
    
    // Validate email format
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        die("Invalid email format");
    }
    
    // Check if email exists in the database
    $sql = "SELECT id FROM users WHERE email = ?";
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, "s", $email);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);
    
    if (mysqli_num_rows($result) == 0) {
        die("Email not found in our records");
    }
    
    // Generate reset token
    $reset_token = bin2hex(random_bytes(16));
    $expires = date('Y-m-d H:i:s', time() + 3600); // Token expires after 1 hour
    
    // Update the database with the reset token and expiration time
    $update_sql = "UPDATE users SET reset_token = ?, reset_expires = ? WHERE email = ?";
    $stmt = mysqli_prepare($conn, $update_sql);
    mysqli_stmt_bind_param($stmt, "sss", $reset_token, $expires, $email);
    mysqli_stmt_execute($stmt);
    
    // Send the reset link to the user's email
    $to = $email;
    $subject = "Password Reset Request";
    $message = "
        <html>
            <body>
                <h2>Password Reset</h2>
                <p>Please click the following link to reset your password:</p>
                <a href='http://example.com/password_reset.php?token=" . $reset_token . "'>Reset Password</a><br><br>
                <small>This link will expire in 1 hour.</small>
            </body>
        </html>
    ";
    
    // Set headers for email
    $headers = "MIME-Version: 1.0" . "\r
";
    $headers .= "Content-type:text/html;charset=UTF-8" . "\r
";
    $headers .= "From: <your_email@example.com>" . "\r
";
    
    mail($to, $subject, $message, $headers);
    
    echo "A password reset link has been sent to your email address.";
}
?>


<?php
// Include database connection
include('db_connection.php');

if (isset($_GET['token'])) {
    $token = $_GET['token'];
    
    // Check if token exists and is valid
    $sql = "SELECT id, reset_token, reset_expires FROM users WHERE reset_token = ?";
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, "s", $token);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);
    
    if (mysqli_num_rows($result) == 0) {
        die("Invalid or expired token");
    }
    
    $row = mysqli_fetch_assoc($result);
    // Check if token has expired
    if ($row['reset_expires'] < date('Y-m-d H:i:s')) {
        die("Token has expired. Please request a new password reset.");
    }
    
    // If everything is valid, display the password reset form
    ?>
    <!DOCTYPE html>
    <html>
    <head>
        <title>Reset Password</title>
    </head>
    <body>
        <h2>Reset Password</h2>
        <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
            <input type="hidden" name="token" value="<?php echo $token; ?>">
            <label for="new_password">New Password:</label><br>
            <input type="password" id="new_password" name="new_password" required><br><br>
            <input type="submit" value="Reset Password">
        </form>
    </body>
    </html>
    <?php
} else {
    die("No token provided");
}
?>



<?php
// Add this after the opening PHP tag in password_reset.php

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $token = $_POST['token'];
    $new_password = $_POST['new_password'];
    
    // Update the database with the new password and clear the reset token
    $update_sql = "UPDATE users SET password = ?, reset_token = NULL, reset_expires = NULL WHERE reset_token = ?";
    $stmt = mysqli_prepare($conn, $update_sql);
    mysqli_stmt_bind_param($stmt, "ss", password_hash($new_password, PASSWORD_DEFAULT), $token);
    
    if (mysqli_stmt_execute($stmt)) {
        echo "Password has been successfully updated!";
    } else {
        die("Error updating password");
    }
}
?>


<?php
// config.php - Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'mydatabase';

// Create database connection
$conn = mysqli_connect($host, $username, $password, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
<?php
session_start();

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = $_POST['email'];
    
    // Validate email
    if (empty($email)) {
        echo "Email is required!";
        exit();
    }
    
    // Check if email exists in database
    $sql = "SELECT id, username FROM users WHERE email = ?";
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, "s", $email);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);
    
    if (mysqli_num_rows($result) == 0) {
        echo "Email not found!";
        exit();
    }
    
    // Generate reset token
    $token = bin2hex(random_bytes(16));
    $expires = date('Y-m-d H:i:s', time() + 3600); // Token expires in 1 hour
    
    // Insert token into database
    $sql = "INSERT INTO password_reset (user_id, token, expires) VALUES (?, ?, ?)";
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, "iss", $id, $token, $expires);
    mysqli_stmt_execute($stmt);
    
    // Send reset email
    $reset_url = "http://$_SERVER[HTTP_HOST]/reset-password.php?token=$token";
    $to = $email;
    $subject = "Password Reset Request";
    $message = "Please click the following link to reset your password: 
$reset_url";
    $headers = "From: noreply@yourdomain.com\r
";
    
    if (mail($to, $subject, $message, $headers)) {
        echo "Reset email has been sent!";
    } else {
        echo "Failed to send reset email!";
    }
}
?>
<form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
    <input type="email" name="email" placeholder="Enter your email">
    <button type="submit">Send Reset Link</button>
</form>
<a href="login.php">Back to Login</a>
</body>
</html>

<?php
// reset-password.php
session_start();

if (!isset($_GET['token'])) {
    die("Invalid request!");
}

$token = $_GET['token'];

// Check if token exists and is valid
$sql = "SELECT id, user_id FROM password_reset WHERE token = ? AND expires > NOW()";
$stmt = mysqli_prepare($conn, $sql);
mysqli_stmt_bind_param($stmt, "s", $token);
mysqli_stmt_execute($stmt);
$result = mysqli_stmt_get_result($stmt);

if (mysqli_num_rows($result) == 0) {
    die("Invalid or expired token!");
}

$row = mysqli_fetch_assoc($result);
$user_id = $row['user_id'];

// Process password reset
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $new_password = $_POST['password'];
    
    // Update user's password
    $sql = "UPDATE users SET password = ? WHERE id = ?";
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, "si", password_hash($new_password, PASSWORD_DEFAULT), $user_id);
    mysqli_stmt_execute($stmt);
    
    // Delete the reset token
    $sql = "DELETE FROM password_reset WHERE token = ?";
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, "s", $token);
    mysqli_stmt_execute($stmt);
    
    echo "Password has been reset successfully!";
}
?>
<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
<form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
    <input type="password" name="password" placeholder="Enter new password">
    <button type="submit">Reset Password</button>
</form>
<a href="login.php">Back to Login</a>
</body>
</html>

<?php
// Important security considerations:
1. Use prepared statements for database queries
2. Hash passwords using password_hash()
3. Implement CSRF protection
4. Add email verification link expiration
5. Store tokens securely in the database
6. Use HTTPS for all password-related operations

To use this implementation:

1. Create a database table called `password_reset` with columns:
   - id (INT, AUTO_INCREMENT)
   - user_id (INT)
   - token (VARCHAR(255))
   - expires (DATETIME)

2. Update the `config.php` file with your database credentials

3. Add this functionality to your login page by linking to forgot-password.php
</think>

To implement a "Forgot Password" function in PHP, follow these steps:

1. **Create a Database Table**:
   First, set up a table to store password reset tokens.

   sql
   CREATE TABLE password_reset (
       id INT AUTO_INCREMENT PRIMARY KEY,
       user_id INT NOT NULL,
       token VARCHAR(255) NOT NULL,
       expires DATETIME NOT NULL,
       FOREIGN KEY (user_id) REFERENCES users(id)
   );
   

2. **Create the Forgot Password Form**:
   Add a form in your login page for users to input their email.

3. **Send Reset Email**:
   When a user submits their email, check if it exists and generate a reset token. Send this token via email.

4. **Reset Password Page**:
   Create a page where users can enter their new password using the provided token. Validate the token and update the password.

5. **Security Best Practices**:
   - Use prepared statements to prevent SQL injection.
   - Hash passwords with `password_hash()`.
   - Implement CSRF protection.
   - Expire tokens after a certain period (e.g., 1 hour).
   - Use HTTPS for all password-related operations.

6. **Example Code Structure**:

   - **config.php**: Database connection settings.
   - **forgot-password.php**: Handles email submission and token generation.
   - **reset-password.php**: Validates the token and updates the password.

Here's a simplified version of the code:



<?php
// Database connection details
$host = "localhost";
$username = "username";
$password = "password";
$dbname = "mydatabase";

// Connect to database
$conn = new mysqli($host, $username, $password, $dbname);
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get email from form
    $email = $_POST['email'];
    
    // Check if user exists
    $sql = "SELECT id FROM users WHERE email=?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("s", $email);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows == 0) {
        // User not found
        header("Location: forgot_password.php?error=Email%20not%20found");
        exit();
    } else {
        // Generate reset token and expiry time
        $token = bin2hex(random_bytes(16)); // Secure random token
        $expires = date('Y-m-d H:i:s', time() + 3600); // Token expires in 1 hour
        
        // Update database with reset token
        $sql = "UPDATE users SET reset_token=?, reset_expiry=? WHERE email=?";
        $stmt = $conn->prepare($sql);
        $stmt->bind_param("sss", $token, $expires, $email);
        $stmt->execute();
        
        // Send reset link to user's email
        $to = $email;
        $subject = "Password Reset Request";
        $reset_link = "http://example.com/reset_password.php?token=$token";
        $message = "<html><body>
                    <h2>Password Reset</h2>
                    <p>We received a password reset request. Click the link below to reset your password:</p>
                    <a href='$reset_link'>Reset Password</a>
                    <p>If you did not request this, please ignore this email.</p>
                   </body></html>";
        
        $headers = "MIME-Version: 1.0\r
";
        $headers .= "Content-Type: text/html; charset=UTF-8\r
";
        $headers .= "From: no-reply@example.com\r
";
        
        if (mail($to, $subject, $message, $headers)) {
            // Success
            header("Location: forgot_password.php?success=1");
            exit();
        } else {
            // Email sending failed
            header("Location: forgot_password.php?error=Email%20sending%20failed");
            exit();
        }
    }
}
?>


<?php
session_start();

// Database configuration
$host = 'localhost';
$dbname = 'mydatabase';
$username = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

// Generate a random token
function generateToken() {
    return bin2hex(openssl_random_pseudo_bytes(16));
}

// Send reset password email
function sendResetEmail($email, $token) {
    $to = $email;
    $subject = 'Password Reset Request';
    
    $message = '
        <html>
            <head></head>
            <body>
                <h2>Password Reset</h2>
                <p>Please click the link below to reset your password:</p>
                <a href="http://localhost/reset_password.php?token=' . $token . '">Reset Password</a>
                <br><br>
                <small>This link will expire in 1 hour.</small>
            </body>
        </html>
    ';
    
    // Set headers for email
    $headers = 'MIME-Version: 1.0' . "\r
";
    $headers .= 'Content-type: text/html; charset=UTF-8' . "\r
";
    $headers .= 'From: noreply@example.com' . "\r
";
    
    return mail($to, $subject, $message, $headers);
}

// Reset password function
function resetPassword($conn, $email) {
    // Generate token and expiration time (1 hour from now)
    $token = generateToken();
    $expires = date('Y-m-d H:i:s', strtotime('+1 hour'));
    
    try {
        // Insert token into database
        $stmt = $conn->prepare("INSERT INTO password_resets (email, token, expires) VALUES (?, ?, ?)");
        $stmt->execute([$email, $token, $expires]);
        
        // Send reset email
        if (sendResetEmail($email, $token)) {
            return true;
        } else {
            throw new Exception('Failed to send reset email');
        }
    } catch (PDOException $e) {
        die("Error: " . $e->getMessage());
    }
}

// Handle form submission
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $email = $_POST['email'];
    
    try {
        // Check if email exists in database
        $stmt = $conn->prepare('SELECT id FROM users WHERE email = ?');
        $stmt->execute([$email]);
        
        if ($stmt->rowCount() > 0) {
            if (resetPassword($conn, $email)) {
                echo '<p>We have sent a password reset link to your email address.</p>';
            } else {
                echo '<p>Failed to send the password reset email. Please try again later.</p>';
            }
        } else {
            echo '<p>Email not found in our records.</p>';
        }
    } catch (PDOException $e) {
        die("Error: " . $e->getMessage());
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <h2>Forgot Password</h2>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <label for="email">Email:</label><br>
        <input type="email" id="email" name="email" required><br><br>
        <input type="submit" value="Send Reset Link">
    </form>
</body>
</html>


<?php
session_start();

// Database configuration
$host = 'localhost';
$dbname = 'mydatabase';
$username = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

// Validate reset token
if (isset($_GET['token'])) {
    try {
        $token = $_GET['token'];
        
        // Check if token exists and hasn't expired
        $stmt = $conn->prepare('SELECT email, expires FROM password_resets WHERE token = ?');
        $stmt->execute([$token]);
        
        if ($stmt->rowCount() > 0) {
            $row = $stmt->fetch(PDO::FETCH_ASSOC);
            
            // Check if token has expired
            if (strtotime($row['expires']) < time()) {
                echo '<p>Password reset link has expired. Please request a new one.</p>';
                exit();
            }
        } else {
            echo '<p>Invalid password reset token.</p>';
            exit();
        }
    } catch (PDOException $e) {
        die("Error: " . $e->getMessage());
    }
} else {
    header('Location: forgot_password.php');
}

// Handle password reset form submission
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    try {
        $token = $_GET['token'];
        $newPassword = $_POST['password'];
        
        // Update user's password
        $stmt = $conn->prepare('UPDATE users SET password = ? WHERE email = (SELECT email FROM password_resets WHERE token = ?)');
        $stmt->execute([password_hash($newPassword, PASSWORD_DEFAULT), $token]);
        
        // Delete the reset token
        $deleteStmt = $conn->prepare('DELETE FROM password_resets WHERE token = ?');
        $deleteStmt->execute([$token]);
        
        echo '<p>Password has been successfully updated!</p>';
    } catch (PDOException $e) {
        die("Error: " . $e->getMessage());
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <?php if (!isset($_GET['token'])) : ?>
        <h2>Password Reset</h2>
        <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
            <label for="password">New Password:</label><br>
            <input type="password" id="password" name="password" required><br><br>
            <input type="submit" value="Reset Password">
        </form>
    <?php else : ?>
        <h2>Invalid Request</h2>
        <p>Please use the reset link sent to your email.</p>
    <?php endif; ?>
</body>
</html>


<?php
include('db_connection.php');

$emailOrUsername = $_POST['email_or_username'];
$userData = getUserByEmailOrUsername($emailOrUsername);

if ($userData) {
    $token = generateResetToken();
    $expires = date("Y-m-d H:i:s", time() + 30 * 60);
    
    // Store token in database
    storeResetToken($userData['id'], $token, $expires);
    
    // Send email with reset link
    $resetLink = "http://$_SERVER[HTTP_HOST]/reset_password.php?token=$token&id=" . $ userData['id'];
    sendResetEmail($userData['email'], $resetLink);
    
    echo "<h2>Check your email for the reset link.</h2>";
} else {
    header("Location: forgot_password.php?error=No%20account%20found");
}
?>


function generateResetToken() {
    return hash('sha256', uniqid(rand(), true));
}


function getUserByEmailOrUsername($emailOrUsername) {
    global $conn;
    $stmt = $conn->prepare("SELECT id, email FROM users WHERE email=? OR username=?");
    $stmt->bind_param("ss", $emailOrUsername, $emailOrUsername);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows > 0) {
        return $result->fetch_assoc();
    }
    return false;
}

function storeResetToken($userId, $token, $expires) {
    global $conn;
    // Delete any existing tokens for this user
    $deleteStmt = $conn->prepare("DELETE FROM password_resets WHERE user_id=?");
    $deleteStmt->bind_param("i", $userId);
    $deleteStmt->execute();
    
    $insertStmt = $conn->prepare("INSERT INTO password_resets (token, user_id, expires_at) VALUES (?, ?, ?)");
    $insertStmt->bind_param("sis", $token, $userId, $expires);
    return $insertStmt->execute();
}


function sendResetEmail($email, $link) {
    $to = $email;
    $subject = "Password Reset Request";
    $message = "Click the link below to reset your password:
$link";
    
    mail($to, $subject, $message);
}


<?php
include('db_connection.php');

if (!isset($_GET['token']) || !isset($_GET['id'])) {
    die("Invalid request");
}

$userId = $_GET['id'];
$token = $_GET['token'];

// Validate token
$result = validateResetToken($userId, $token);

if (!$result) {
    die("Invalid or expired reset link. Please request a new one.");
}
?>
<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <h2>Reset Password</h2>
    <?php if (isset($_GET['error'])) { ?>
        <p style="color:red;"><?php echo $_GET['error']; ?></p>
    <?php } ?>

    <form action="reset_password_process.php" method="post">
        <input type="hidden" name="token" value="<?php echo $token; ?>">
        <input type="password" name="new_password" placeholder="New Password" required><br>
        <input type="password" name="confirm_password" placeholder="Confirm Password" required><br>
        <button type="submit">Reset Password</button>
    </form>
</body>
</html>


<?php
include('db_connection.php');

if (!isset($_POST['token'], $_POST['new_password'], $_POST['confirm_password'])) {
    die("Invalid request");
}

$token = $_POST['token'];
$newPassword = $_POST['new_password'];
$confirmPassword = $_POST['confirm_password'];

// Validate token
$result = validateResetTokenByValue($token);
if (!$result) {
    header("Location: reset_password.php?error=Invalid%20or%20expired%20link");
    exit();
}

if ($newPassword !== $confirmPassword) {
    header("Location: reset_password.php?error=Passwords%20do%20not%20match");
    exit();
}

// Update password
updateUserPassword($result['user_id'], $newPassword);

// Clear token
deleteResetToken($token);

echo "<h2>Password successfully reset. <a href='login.php'>Login here</a>.</h2>";
?>


function validateResetTokenByValue($token) {
    global $conn;
    $stmt = $conn->prepare("SELECT * FROM password_resets WHERE token=? AND expires_at > NOW()");
    $stmt->bind_param("s", $token);
    $stmt->execute();
    
    if ($result = $stmt->get_result()) {
        return $result->fetch_assoc();
    }
    return false;
}

function validateResetToken($userId, $token) {
    global $conn;
    $stmt = $conn->prepare("SELECT * FROM password_resets WHERE user_id=? AND token=? AND expires_at > NOW()");
    $stmt->bind_param("is", $userId, $token);
    $stmt->execute();
    
    if ($result = $stmt->get_result()) {
        return $result->fetch_assoc();
    }
    return false;
}

function deleteUserPassword($userId, $newPassword) {
    global $conn;
    $hash = password_hash($newPassword, PASSWORD_DEFAULT);
    $stmt = $conn->prepare("UPDATE users SET password_hash=? WHERE id=?");
    $stmt->bind_param("si", $hash, $userId);
    return $stmt->execute();
}

function deleteResetToken($token) {
    global $conn;
    $stmt = $conn->prepare("DELETE FROM password_resets WHERE token=?");
    $stmt->bind_param("s", $token);
    return $stmt->execute();
}


<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <?php
        if (isset($_POST['reset'])) {
            include('db_connection.php'); // Include your database connection

            $email = mysqli_real_escape_string($conn, $_POST['email']);
            
            // Check if email exists in the database
            $sql = "SELECT id FROM users WHERE email='$email'";
            $result = mysqli_query($conn, $sql);
            
            if (mysqli_num_rows($result) == 0) {
                echo "<p class='error'>Email not found!</p>";
            } else {
                // Generate a random token
                $token = bin2hex(random_bytes(32));
                
                // Calculate expiry time (1 hour from now)
                $expiry_time = date('Y-m-d H:i:s', strtotime('+1 hour'));
                
                // Update the user's record with the new token and expiry time
                $update_sql = "UPDATE users SET reset_token='$token', reset_expiry='$expiry_time' WHERE email='$email'";
                mysqli_query($conn, $update_sql);
                
                // Send the password reset email
                require 'PHPMailer/PHPMailer.php';
                require 'PHPMailer/SMTP.php';
                require 'PHPMailer/Exception.php';

                try {
                    $mail = new PHPMailer\PHPMailer\PHPMailer();
                    $mail->isSMTP();
                    $mail->Host = 'smtp.example.com'; // Replace with your SMTP server
                    $mail->SMTPAuth = true;
                    $mail->Username = 'your_email@example.com';
                    $mail->Password = 'your_password';
                    $mail->SMTPSecure = PHPMailer\PHPMailer\PHPMailer::ENCRYPTION_STARTTLS;
                    
                    $mail->setFrom('your_email@example.com', 'Your Name');
                    $mail->addAddress($email);
                    
                    $mail->isHTML(true);
                    $mail->Subject = 'Password Reset Request';
                    $mail->Body    = "Please click the following link to reset your password:<br><br>
                                    http://example.com/reset-password.php?token=$token<br><br>
                                    This link will expire in 1 hour.";
                    
                    $mail->send();
                    
                    echo "<p>A password reset link has been sent to your email address.</p>";
                } catch (Exception $e) {
                    echo "Error: Could not send email. Please try again later.";
                }
            }
        }
    ?>
    
    <form method="post">
        <input type="email" name="email" placeholder="Enter your email" required>
        <button type="submit" name="reset">Reset Password</button>
    </form>
</body>
</html>


<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <?php
        include('db_connection.php'); // Include your database connection
        
        if (!isset($_GET['token'])) {
            header("Location: forgot-password.php");
            exit();
        }
        
        $token = mysqli_real_escape_string($conn, $_GET['token']);
        
        // Check if token exists and hasn't expired
        $sql = "SELECT id FROM users WHERE reset_token='$token' AND reset_expiry > NOW()";
        $result = mysqli_query($conn, $sql);
        
        if (mysqli_num_rows($result) == 0) {
            echo "<p class='error'>Invalid or expired token!</p>";
            exit();
        }
    ?>
    
    <form method="post" action="reset-password-process.php">
        <input type="password" name="new_password" placeholder="Enter new password" required>
        <input type="password" name="confirm_password" placeholder="Confirm password" required>
        <button type="submit">Reset Password</button>
    </form>
</body>
</html>


<?php
session_start();

include('db_connection.php'); // Include your database connection

if (!isset($_POST['new_password']) || !isset($_POST['confirm_password'])) {
    header("Location: forgot-password.php");
    exit();
}

$token = mysqli_real_escape_string($conn, $_GET['token']);

// Check if token exists and hasn't expired
$sql = "SELECT id FROM users WHERE reset_token='$token' AND reset_expiry > NOW()";
$result = mysqli_query($conn, $sql);

if (mysqli_num_rows($result) == 0) {
    echo "<p class='error'>Invalid or expired token!</p>";
    exit();
}

if ($_POST['new_password'] != $_POST['confirm_password']) {
    echo "<p class='error'>Passwords do not match!</p>";
    exit();
}

$new_password = password_hash($_POST['new_password'], PASSWORD_DEFAULT);

// Update the user's password
$sql = "UPDATE users SET password='$new_password', reset_token='', reset_expiry='' WHERE reset_token='$token'";
mysqli_query($conn, $sql);

echo "<p>Password successfully reset!</p>";
?>


<?php
// Database configuration
$host = 'localhost';
$username = 'root'; // Change this to your database username
$password = '';     // Change this to your database password
$database = 'test_db'; // Change this to your database name

// Connect to the database
$conn = mysqli_connect($host, $username, $password, $database);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Check if form is submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Get email from form
    $email = mysqli_real_escape_string($conn, $_POST['email']);

    // Check if email exists in the database
    $sql = "SELECT id FROM users WHERE email='$email'";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) == 0) {
        // Email does not exist
        echo "<p class='error'>This email does not exist in our records.</p>";
    } else {
        // Generate a random token
        $token = bin2hex(random_bytes(32)); // Generate a 64-character hexadecimal string

        // Update the user's record with the new token and expiration time (current timestamp + 30 minutes)
        $expiration_time = time() + (30 * 60); // 30 minutes
        $sql = "UPDATE users SET reset_token='$token', reset_expires=$expiration_time WHERE email='$email'";
        mysqli_query($conn, $sql);

        // Send the password reset link to user's email
        $to = $email;
        $subject = 'Password Reset Request';
        $message = "<html>
                    <head>
                        <title>Password Reset</title>
                    </head>
                    <body>
                        <h2>Password Reset Request</h2>
                        <p>Hello,</p>
                        <p>A password reset request was received for your account. Click the link below to reset your password:</p>
                        <a href='http://localhost/reset-password.php?token=$token'>Reset Password</a>
                        <p>If you did not request this password reset, you can safely ignore this email.</p>
                        <p>This password reset link will expire in 30 minutes.</p>
                    </body>
                  </html>";
        $headers = "From: admin@example.com\r
";
        $headers .= "MIME-Version: 1.0\r
";
        $headers .= "Content-Type: text/html; charset=UTF-8\r
";

        if (mail($to, $subject, $message, $headers)) {
            echo "<p>We've sent a password reset link to your email address.</p>";
        } else {
            echo "<p>There was an error sending the email. Please try again later.</p>";
        }
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
    <style>
        .container {
            width: 400px;
            margin: 50px auto;
            padding: 20px;
            border: 1px solid #ccc;
            border-radius: 5px;
        }
        .error {
            color: red;
            margin-bottom: 10px;
        }
    </style>
</head>
<body>
    <div class="container">
        <h2>Forgot Password</h2>
        <?php if ($_SERVER['REQUEST_METHOD'] == 'POST') { ?>
            <p id="message"><?php echo isset($message) ? $message : ''; ?></p>
        <?php } else { ?>
            <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
                <input type="email" name="email" placeholder="Enter your email address" required><br><br>
                <input type="submit" value="Send Reset Link">
            </form>
        <?php } ?>
    </div>
</body>
</html>

<?php
// Close the database connection
mysqli_close($conn);
?>


<?php
// Database configuration
$host = 'localhost';
$username = 'root'; // Change this to your database username
$password = '';     // Change this to your database password
$database = 'test_db'; // Change this to your database name

// Connect to the database
$conn = mysqli_connect($host, $username, $password, $database);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Get token from URL
if (isset($_GET['token'])) {
    $token = $_GET['token'];

    // Check if the token exists and hasn't expired
    $sql = "SELECT id, reset_token, reset_expires FROM users WHERE reset_token='$token'";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) == 1) {
        $row = mysqli_fetch_assoc($result);
        
        // Check if token has expired
        if ($row['reset_expires'] > time()) {
            // Show password reset form
            ?>

<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
    <style>
        .container {
            width: 400px;
            margin: 50px auto;
            padding: 20px;
            border: 1px solid #ccc;
            border-radius: 5px;
        }
    </style>
</head>
<body>
    <div class="container">
        <h2>Reset Password</h2>
        <?php if ($_SERVER['REQUEST_METHOD'] == 'POST') { ?>
            <?php
            // Handle password reset
            $new_password = mysqli_real_escape_string($conn, $_POST['password']);
            $confirm_password = mysqli_real_escape_string($conn, $_POST['confirm_password']);

            if ($new_password != $confirm_password) {
                echo "<p class='error'>Passwords do not match. Please try again.</p>";
            } else {
                // Update the password
                $hash = md5($new_password); // You should use a better hashing method like bcrypt in production
                $sql = "UPDATE users SET password='$hash', reset_token='', reset_expires=0 WHERE id=" . $row['id'];
                mysqli_query($conn, $sql);
                
                echo "<p>Password has been reset. Please <a href='login.php'>click here</a> to login.</p>";
            }
            ?>
        <?php } else { ?>
            <form action="<?php echo $_SERVER['PHP_SELF']; ?>?token=<?php echo $token; ?>" method="post">
                New Password: <input type="password" name="password" required><br>
                Confirm Password: <input type="password" name="confirm_password" required><br><br>
                <input type="submit" value="Reset Password">
            </form>
        <?php } ?>
    </div>
</body>
</html>

<?php
        } else {
            // Token has expired
            echo "<p>Password reset token has expired. Please request a new password reset link.</p>";
        }
    } else {
        // Invalid token
        echo "<p>Invalid password reset token. Please request a new password reset link.</p>";
    }
} else {
    // No token provided
    header("Location: forgot-password.php");
    exit();
}

// Close the database connection
mysqli_close($conn);
?>


<?php
// forgot-password.php

// Database configuration
$host = 'localhost';
$username = 'your_username';
$password = 'your_password';
$dbname = 'your_database';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get email from form
    $email = mysqli_real_escape_string($conn, $_POST['email']);

    // Check if email exists in database
    $sql = "SELECT id FROM users WHERE email='$email'";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) == 0) {
        echo "Email not found. Please check your email address.";
        exit();
    }

    // Generate a random token
    $token = bin2hex(random_bytes(32));

    // Store the token in database with expiration time
    $expires = date("Y-m-d H:i:s", strtotime("+1 hour"));
    $sql = "INSERT INTO password_resets (email, token, expires) VALUES ('$email', '$token', '$expires')";
    
    if (!mysqli_query($conn, $sql)) {
        echo "Error: " . mysqli_error($conn);
        exit();
    }

    // Send the reset link to user's email
    $reset_link = "http://$_SERVER[HTTP_HOST]/reset-password.php?token=$token";
    $to = $email;
    $subject = "Password Reset Request";
    $message = "
        <html>
            <body>
                <h2>Password Reset</h2>
                <p>We received a request to reset your password. Click the link below to reset it:</p>
                <a href='$reset_link'>Reset Password</a><br><br>
                <small>This link will expire in 1 hour.</small>
            </body>
        </html>";
    $headers = "MIME-Version: 1.0" . "\r
";
    $headers .= "Content-type:text/html;charset=UTF-8" . "\r
";
    $headers .= "From: noreply@$_SERVER[HTTP_HOST]" . "\r
";

    if (mail($to, $subject, $message, $headers)) {
        echo "We've sent a password reset link to your email. Please check your inbox.";
    } else {
        echo "Error sending email.";
    }

} else {
    // If accessed directly without form submission
    header("Location: forgot-password-form.php");
}

mysqli_close($conn);
?>


<?php
// reset-password.php

session_start();

// Database configuration
$host = 'localhost';
$username = 'your_username';
$password = 'your_password';
$dbname = 'your_database';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

if (!isset($_GET['token'])) {
    header("Location: forgot-password-form.php");
    exit();
}

$token = mysqli_real_escape_string($conn, $_GET['token']);

// Check if token exists and is valid
$sql = "SELECT * FROM password_resets WHERE token='$token'";
$result = mysqli_query($conn, $sql);

if (mysqli_num_rows($result) == 0) {
    echo "Invalid or expired reset link.";
    exit();
}

$row = mysqli_fetch_assoc($result);
$expires = $row['expires'];

// Check if token has expired
if ($expires < date("Y-m-d H:i:s")) {
    // Delete expired token
    $sql = "DELETE FROM password_resets WHERE token='$token'";
    mysqli_query($conn, $sql);
    echo "Reset link has expired. Please request a new reset link.";
    exit();
}

// If form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get new password from form
    $new_password = mysqli_real_escape_string($conn, $_POST['password']);
    
    // Hash the password (you should use password_hash in production)
    $hashed_password = md5($new_password);  // For example purposes only

    // Update user's password
    $sql = "SELECT email FROM password_resets WHERE token='$token'";
    $result = mysqli_query($conn, $sql);
    $email = mysqli_fetch_assoc($result)['email'];

    $sql = "UPDATE users SET password='$hashed_password' WHERE email='$email'";
    if (!mysqli_query($conn, $sql)) {
        echo "Error updating password: " . mysqli_error($conn);
        exit();
    }

    // Delete the token after use
    $sql = "DELETE FROM password_resets WHERE token='$token'";
    mysqli_query($conn, $sql);

    echo "Password reset successful. You can now login with your new password.";
    exit();
}

// Display reset form if not submitted yet
?>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Reset Password</title>
</head>
<body>
    <h2>Reset Password</h2>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <label for="password">New Password:</label><br>
        <input type="password" id="password" name="password"><br><br>
        <input type="submit" value="Reset Password">
    </form>
</body>
</html>

<?php
mysqli_close($conn);
?>


<?php
// Database connection details
$host = 'localhost';
$dbUsername = 'root';
$dbPassword = '';
$dbName = 'mydatabase';

// Connect to database
$conn = new mysqli($host, $dbUsername, $dbPassword, $dbName);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

$emailOrUsername = $_POST['email_or_username'];

// Check if the email or username exists in the database
$sql = "SELECT * FROM users WHERE email='$emailOrUsername' OR username='$emailOrUsername'";
$result = $conn->query($sql);

if ($result->num_rows == 0) {
    die("Email or username does not exist.");
}

$row = $result->fetch_assoc();

// Generate a random token
$token = bin2hex(random_bytes(16));

// Store the token in the database with an expiration time (e.g., 1 hour)
$currentDate = date('Y-m-d H:i:s');
$expirationDate = date('Y-m-d H:i:s', strtotime($currentDate . ' + 1 hour'));

$sql = "UPDATE users SET reset_token='$token', token_expiration='$expirationDate' WHERE id=" . $row['id'];
$conn->query($sql);

// Send email with the reset link
$to = $emailOrUsername;
$subject = "Password Reset Request";
$message = "Please click the following link to reset your password: http://example.com/reset_password.php?token=$token";
$headers = "From: webmaster@example.com";

mail($to, $subject, $message, $headers);

echo "An email with a reset link has been sent to you.";

$conn->close();
?>


<?php
session_start();

// Check if token is provided
if (!isset($_GET['token'])) {
    die("Invalid request.");
}

$token = $_GET['token'];

// Database connection details
$host = 'localhost';
$dbUsername = 'root';
$dbPassword = '';
$dbName = 'mydatabase';

$conn = new mysqli($host, $dbUsername, $dbPassword, $dbName);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Check if the token exists and is valid
$sql = "SELECT * FROM users WHERE reset_token='$token' AND token_expiration > NOW()";
$result = $conn->query($sql);

if ($result->num_rows == 0) {
    die("Invalid or expired token.");
}

// Show password reset form
?>

<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <h2>Reset Password</h2>
    <form action="reset_password.php" method="post">
        <input type="password" name="new_password" placeholder="Enter new password" required>
        <br><br>
        <input type="password" name="confirm_password" placeholder="Confirm new password" required>
        <br><br>
        <button type="submit">Reset Password</button>
    </form>
</body>
</html>

<?php
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $newPassword = $_POST['new_password'];
    $confirmPassword = $_POST['confirm_password'];

    if ($newPassword !== $confirmPassword) {
        die("Passwords do not match.");
    }

    // Update the password in the database
    $hashedPassword = password_hash($newPassword, PASSWORD_DEFAULT);
    $sql = "UPDATE users SET password='$hashedPassword', reset_token='', token_expiration='' WHERE reset_token='$token'";
    if ($conn->query($sql)) {
        echo "Password has been reset successfully!";
    } else {
        die("Error resetting password.");
    }
}

$conn->close();
?>


<?php
// Database configuration
require_once 'config.php';

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = trim($_POST['email']);
    
    // Validate input email
    if (empty($email)) {
        die("Email is required!");
    }
    
    // Sanitize email to prevent SQL injection
    $email = mysqli_real_escape_string($conn, $email);
    
    // Check if the email exists in the database
    $sql = "SELECT id FROM users WHERE email = '$email'";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) == 0) {
        die("Email not found!");
    }
    
    // Generate a random token
    $token = bin2hex(random_bytes(16));
    
    // Store the token in the database with an expiration time
    $expires = date('Y-m-d H:i:s', strtotime('+1 hour'));
    $sql = "INSERT INTO password_reset (user_id, token, expires) VALUES (?, ?, ?)";
    
    if ($stmt = mysqli_prepare($conn, $sql)) {
        // Bind variables to the prepared statement as parameters
        mysqli_stmt_bind_param($stmt, "sss", $email, $token, $expires);
        
        // Execute the prepared statement
        if (!mysqli_stmt_execute($stmt)) {
            die("Error: " . mysqli_error($conn));
        }
        
        // Close the statement and reset for reuse
        mysqli_stmt_close($stmt);
    } else {
        die("Error: " . mysqli_error($conn));
    }
    
    // Send email with password reset link
    $to = $email;
    $subject = "Password Reset Request";
    $message = "Please click the following link to reset your password:

";
    $message .= "http://yourdomain.com/reset_password.php?token=$token";
    $headers = "From: yourname@yourdomain.com\r
";
    
    if (mail($to, $subject, $message, $headers)) {
        echo "Password reset email has been sent to $email.";
    } else {
        die("Error sending email!");
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <h2>Forgot Password</h2>
    <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
        Email: <input type="email" name="email" required><br>
        <input type="submit" value="Reset Password">
    </form>
</body>
</html>


<?php
require_once 'config.php';

if (isset($_GET['token'])) {
    $token = $_GET['token'];
    
    // Check if the token is valid and not expired
    $sql = "SELECT user_id FROM password_reset WHERE token = ? AND expires > NOW()";
    if ($stmt = mysqli_prepare($conn, $sql)) {
        mysqli_stmt_bind_param($stmt, "s", $token);
        mysqli_stmt_execute($stmt);
        mysqli_stmt_store_result($stmt);
        
        if (mysqli_stmt_num_rows($stmt) == 0) {
            die("Invalid or expired token!");
        }
    }
    
    // Show password reset form
    ?>
    <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
        New Password: <input type="password" name="new_password" required><br>
        Confirm Password: <input type="password" name="confirm_password" required><br>
        <input type="hidden" name="token" value="<?php echo $token; ?>">
        <input type="submit" value="Reset Password">
    </form>
    
    <?php
} else {
    die("No token provided!");
}

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $new_password = trim($_POST['new_password']);
    $confirm_password = trim($_POST['confirm_password']);
    $token = $_POST['token'];
    
    // Validate password match and length
    if ($new_password != $confirm_password) {
        die("Passwords do not match!");
    }
    
    if (strlen($new_password) < 6) {
        die("Password must be at least 6 characters long!");
    }
    
    // Hash the new password
    $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);
    
    // Update the user's password in the database
    $sql = "UPDATE users SET password = ? WHERE id = (SELECT user_id FROM password_reset WHERE token = ?)";
    
    if ($stmt = mysqli_prepare($conn, $sql)) {
        mysqli_stmt_bind_param($stmt, "ss", $hashed_password, $token);
        
        if (!mysqli_stmt_execute($stmt)) {
            die("Error updating password: " . mysqli_error($conn));
        }
        
        // Delete the reset token
        $sql = "DELETE FROM password_reset WHERE token = ?";
        $delete_stmt = mysqli_prepare($conn, $sql);
        mysqli_stmt_bind_param($delete_stmt, "s", $token);
        mysqli_stmt_execute($delete_stmt);
        
        echo "Password has been reset successfully!";
    }
}
?>


<?php
// Database connection
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

// Function to generate a temporary password
function generateTempPassword($length = 12) {
    $chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^&*()';
    $randomString = substr(str_shuffle($chars), 0, $length);
    return $randomString;
}

// Handle form submission
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = $_POST['email'];
    
    // Check if email exists in the database
    $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
    $stmt->execute([$email]);
    $result = $stmt->fetch(PDO::FETCH_ASSOC);
    
    if ($result) {
        $userId = $result['id'];
        
        // Generate temporary password
        $tempPassword = generateTempPassword();
        
        // Set expiration time (e.g., 30 minutes from now)
        $expirationTime = date('Y-m-d H:i:s', strtotime('+30 minutes'));
        
        // Update the database with temp password and expiration time
        $stmt = $conn->prepare("UPDATE users SET temp_password = ?, password_expired = ? WHERE id = ?");
        $stmt->execute([$tempPassword, $expirationTime, $userId]);
        
        // Send email to user
        require 'PHPMailer/PHPMailer.php';
        require 'PHPMailer/Exception.php';
        require 'PHPMailer/SMTP.php';
        
        try {
            $mail = new PHPMailer\PHPMailer();
            $mail->isSMTP();
            $mail->Host = 'smtp.example.com'; // Replace with your SMTP server
            $mail->SMTPAuth = true;
            $mail->Username = 'your_email@example.com'; // Your email address
            $mail->Password = 'your_email_password'; // Your email password
            $mail->Port = 587; // Or another port number
            
            $mail->setFrom('your_email@example.com', 'Your Name');
            $mail->addAddress($email, '');
            
            $mail->Subject = 'Temporary Password';
            $mail->Body    = "Your temporary password is: $tempPassword 

Please login and change your password immediately.";
            
            $mail->send();
            
            echo "A temporary password has been sent to your email address.";
        } catch (Exception $e) {
            echo "Message could not be sent. Mailer Error: {$mail->ErrorInfo}";
        }
    } else {
        echo "Email does not exist in our database.";
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <h2>Forgot Password</h2>
    <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
        Email: <input type="text" name="email"><br><br>
        <input type="submit" value="Submit">
    </form>
</body>
</html>


<?php
// Include database connection
include('db_connection.php');

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $email = mysqli_real_escape_string($conn, $_POST['email']);

    // Check if email exists in database
    $query = "SELECT user_id FROM users WHERE email='$email'";
    $result = mysqli_query($conn, $query);

    if (mysqli_num_rows($result) == 1) {
        // Generate a unique token
        $token = bin2hex(random_bytes(32));
        $expires = date('Y-m-d H:i:s', time() + 3600); // Token expires in 1 hour

        // Clear existing tokens for the user
        $clearQuery = "DELETE FROM password_reset WHERE email='$email'";
        mysqli_query($conn, $clearQuery);

        // Insert new token into database
        $insertQuery = "INSERT INTO password_reset (email, token, expires) 
                        VALUES ('$email', '$token', '$expires')";
        if (!mysqli_query($conn, $insertQuery)) {
            die('Error inserting token: ' . mysqli_error($conn));
        }

        // Send email with reset link
        $resetLink = "http://yourdomain.com/reset-password.php?token=$token";
        $subject = "Password Reset Request";
        $message = "Please click the following link to reset your password:

$resetLink

If you did not request this, please ignore this email.";
        
        if (mail($email, $subject, $message)) {
            echo "<p>Email sent! Please check your inbox.</p>";
        } else {
            echo "<p>Error sending email. Please try again later.</p>";
        }
    } else {
        echo "<p>Email not found in our records.</p>";
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <h2>Forgot Password</h2>
    <form action="<?php echo $_SERVER['PHP_SELF'];?>" method="post">
        Enter your email: <input type="email" name="email" required><br>
        <input type="submit" value="Send Reset Link">
    </form>
</body>
</html>


<?php
include('db_connection.php');

if (!isset($_GET['token']) || strlen($_GET['token']) != 64) {
    die("Invalid token");
}

$token = mysqli_real_escape_string($conn, $_GET['token']);

// Check if token exists and is not expired
$query = "SELECT email FROM password_reset 
          WHERE token='$token' AND expires > NOW()";
$result = mysqli_query($conn, $query);

if (mysqli_num_rows($result) != 1) {
    die("Invalid or expired token");
}

$email = mysqli_fetch_assoc($result)['email'];

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Update the password
    $newPassword = mysqli_real_escape_string($conn, $_POST['password']);
    $hashedPassword = password_hash($newPassword, PASSWORD_DEFAULT);

    // Update user's password
    $updateQuery = "UPDATE users 
                    SET password='$hashedPassword' 
                    WHERE email='$email'";
    if (!mysqli_query($conn, $updateQuery)) {
        die("Error updating password: " . mysqli_error($conn));
    }

    // Clear the reset token
    $clearQuery = "DELETE FROM password_reset WHERE email='$email'";
    mysqli_query($conn, $clearQuery);

    echo "<p>Password updated successfully!</p>";
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <h2>Reset Your Password</h2>
    <form action="<?php echo $_SERVER['PHP_SELF'];?>" method="post">
        New Password: <input type="password" name="password" required><br>
        Confirm Password: <input type="password" name="confirm_password" required><br>
        <?php
        if ($_SERVER['REQUEST_METHOD'] == 'POST' && $_POST['password'] != $_POST['confirm_password']) {
            echo "<p>Passwords do not match. Please try again.</p>";
        }
        ?>
        <input type="submit" value="Reset Password">
    </form>
</body>
</html>


<?php
$host = 'localhost';
$username = 'root';
$password = '';
$database = 'your_database';

$conn = mysqli_connect($host, $username, $password, $database);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}
?>


<?php
include('db.php');

if (isset($_POST['email'])) {
    $email = $_POST['email'];
    
    // Check if email exists in the database
    $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
    $stmt->bind_param("s", $email);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows > 0) {
        // Generate a random token
        $token = bin2hex(random_bytes(32));
        
        // Set the token expiration time (e.g., 1 hour from now)
        $expires = date('Y-m-d H:i:s', strtotime('+1 hour'));
        
        // Update the user's record with the new token and expiration time
        $updateStmt = $conn->prepare("UPDATE users SET reset_token = ?, reset_expires = ? WHERE email = ?");
        $updateStmt->bind_param("sss", $token, $expires, $email);
        $updateStmt->execute();
        
        // Send the password reset link to the user's email
        $resetLink = "http://example.com/reset-password.php?token=" . $token;
        sendPasswordResetEmail($email, $resetLink);
        
        echo "A password reset link has been sent to your email address.";
    } else {
        echo "This email address does not exist in our records.";
    }
} else {
    echo "No email provided.";
}
?>

<?php
// Function to send the password reset email
function sendPasswordResetEmail($email, $resetLink) {
    $to = $email;
    $subject = "Password Reset Request";
    $message = "Please click the following link to reset your password: 
" . $resetLink;
    $headers = "From: no-reply@example.com\r
";
    
    // You might want to use PHPMailer or another email library here
    mail($to, $subject, $message, $headers);
}
?>


<?php
include('db.php');

if (isset($_POST['token']) && isset($_POST['new_password'])) {
    $token = $_POST['token'];
    $newPassword = $_POST['new_password'];
    
    // Check if the token exists in the database and is still valid
    $stmt = $conn->prepare("SELECT id, reset_expires FROM users WHERE reset_token = ?");
    $stmt->bind_param("s", $token);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows > 0) {
        $row = $result->fetch_assoc();
        
        // Check if the token has expired
        if (strtotime($row['reset_expires']) < time()) {
            echo "This password reset link has expired. Please request a new one.";
            exit;
        }
        
        // Update the user's password and clear the reset token
        $updateStmt = $conn->prepare("UPDATE users SET password = ?, reset_token = NULL, reset_expires = NULL WHERE id = ?");
        $updateStmt->bind_param("si", md5($newPassword), $row['id']);
        $updateStmt->execute();
        
        // Redirect the user to the login page
        header("Location: login.php?message=Password+reset+successful.");
    } else {
        echo "Invalid or expired password reset link.";
    }
} else {
    echo "No token or password provided.";
}
?>


<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <?php
        session_start();
        
        if ($_SERVER["REQUEST_METHOD"] == "POST") {
            $email = $_POST['email'];
            
            // Database connection
            $conn = mysqli_connect("localhost", "username", "password", "database");
            if (!$conn) {
                die("Connection failed: " . mysqli_connect_error());
            }
            
            // Check if email exists in the database
            $sql = "SELECT id FROM users WHERE email = ?";
            $stmt = mysqli_prepare($conn, $sql);
            mysqli_stmt_bind_param($stmt, "s", $email);
            mysqli_execute($stmt);
            $result = mysqli_stmt_get_result($stmt);
            
            if (mysqli_num_rows($result) > 0) {
                // Generate a random token
                $token = md5(uniqid(rand(), true));
                
                // Store the token in the database with an expiration time
                $expires = date('Y-m-d H:i:s', strtotime('+1 hour'));
                $sql = "INSERT INTO password_reset (user_id, token, expires) VALUES (?, ?, ?)";
                $stmt = mysqli_prepare($conn, $sql);
                mysqli_stmt_bind_param($stmt, "iss", $row['id'], $token, $expires);
                mysqli_execute($stmt);
                
                // Send email to the user
                $reset_link = "http://yourdomain.com/reset_password.php?token=" . $token;
                $to = $email;
                $subject = "Password Reset Request";
                $message = "Please click the following link to reset your password: 
" . $reset_link;
                $headers = "From: noreply@yourdomain.com";
                
                if (mail($to, $subject, $message, $headers)) {
                    echo "An email has been sent to you with a password reset link.";
                } else {
                    echo "There was an error sending the email. Please try again later.";
                }
            } else {
                echo "This email does not exist in our system.";
            }
            
            mysqli_close($conn);
        }
    ?>
    
    <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
        Email: <input type="text" name="email"><br>
        <input type="submit" value="Submit">
    </form>
</body>
</html>


<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <?php
        session_start();
        
        if (!isset($_GET['token'])) {
            die("Invalid request. Please go back and try again.");
        }
        
        $token = $_GET['token'];
        
        // Database connection
        $conn = mysqli_connect("localhost", "username", "password", "database");
        if (!$conn) {
            die("Connection failed: " . mysqli_connect_error());
        }
        
        // Check token validity
        $sql = "SELECT user_id, expires FROM password_reset WHERE token = ?";
        $stmt = mysqli_prepare($conn, $sql);
        mysqli_stmt_bind_param($stmt, "s", $token);
        mysqli_execute($stmt);
        $result = mysqli_stmt_get_result($stmt);
        
        if (mysqli_num_rows($result) == 0) {
            die("Invalid or expired token. Please request a new password reset.");
        }
        
        $row = mysqli_fetch_assoc($result);
        $expires = $row['expires'];
        
        // Check if token has expired
        if (strtotime($expires) < time()) {
            die("This password reset link has expired. Please request a new one.");
        }
        
        if ($_SERVER["REQUEST_METHOD"] == "POST") {
            $password = $_POST['password'];
            $confirm_password = $_POST['confirm_password'];
            
            if ($password != $confirm_password) {
                echo "Passwords do not match. Please try again.";
            } else {
                // Update the password
                $sql = "UPDATE users SET password = ? WHERE id = ?";
                $stmt = mysqli_prepare($conn, $sql);
                mysqli_stmt_bind_param($stmt, "si", md5($password), $row['user_id']);
                mysqli_execute($stmt);
                
                // Delete the token after use
                $sql = "DELETE FROM password_reset WHERE token = ?";
                $stmt = mysqli_prepare($conn, $sql);
                mysqli_stmt_bind_param($stmt, "s", $token);
                mysqli_execute($stmt);
                
                echo "Your password has been reset successfully. Please <a href='login.php'>click here</a> to login.";
            }
        } else {
            // Display the password reset form
    ?>
    
    <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>?token=<?php echo $token; ?>" method="post">
        New Password: <input type="password" name="password"><br>
        Confirm Password: <input type="password" name="confirm_password"><br>
        <input type="submit" value="Reset Password">
    </form>
    
    <?php
        }
        
        mysqli_close($conn);
    ?>
</body>
</html>


<?php
// database connection
$host = 'localhost';
$dbname = 'mydatabase';
$username = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

// Step 1: Show reset password form
if ($_SERVER["REQUEST_METHOD"] == "GET" && isset($_GET['email'])) {
    // Check if email exists in database
    $email = $_GET['email'];
    $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
    $stmt->execute([$email]);
    $user = $stmt->fetch();
    
    if ($user) {
        // Generate reset token and expiration time
        $resetToken = bin2hex(random_bytes(16));
        $expirationTime = date('Y-m-d H:i:s', strtotime('+1 hour'));
        
        // Store token in database
        $stmt = $conn->prepare("INSERT INTO password_resets (user_id, token, expires_at) VALUES (?, ?, ?)");
        $stmt->execute([$user['id'], $resetToken, $expirationTime]);
        
        // Send reset email
        $to = $email;
        $subject = "Password Reset Request";
        $message = "Please click the following link to reset your password: http://example.com/reset-password.php?token=$resetToken";
        $headers = "From: no-reply@example.com";
        
        mail($to, $subject, $message, $headers);
        
        echo "A password reset link has been sent to your email.";
    } else {
        echo "Email not found in our records.";
    }
}

// Step 2: Reset password page
if ($_SERVER["REQUEST_METHOD"] == "GET" && isset($_GET['token'])) {
    // Validate token and display reset form
    $token = $_GET['token'];
    $stmt = $conn->prepare("SELECT * FROM password_resets WHERE token = ? AND expires_at > NOW()");
    $stmt->execute([$token]);
    $reset = $stmt->fetch();
    
    if ($reset) {
        // Show reset form
        ?>
        <form action="reset-password.php" method="POST">
            <input type="hidden" name="token" value="<?php echo $token; ?>">
            <input type="password" name="new_password" placeholder="New Password" required>
            <button type="submit">Reset Password</button>
        </form>
        <?php
    } else {
        echo "Invalid or expired reset token.";
    }
}

// Step 3: Process password reset
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $token = $_POST['token'];
    $newPassword = $_POST['new_password'];
    
    // Validate token and update password
    $stmt = $conn->prepare("SELECT * FROM password_resets WHERE token = ? AND expires_at > NOW()");
    $stmt->execute([$token]);
    $reset = $stmt->fetch();
    
    if ($reset) {
        // Update user's password
        $hashedPassword = password_hash($newPassword, PASSWORD_DEFAULT);
        $stmt = $conn->prepare("UPDATE users SET password = ? WHERE id = ?");
        $stmt->execute([$hashedPassword, $reset['user_id']]);
        
        // Delete used token
        $stmt = $conn->prepare("DELETE FROM password_resets WHERE token = ?");
        $stmt->execute([$token]);
        
        echo "Your password has been reset successfully!";
    } else {
        echo "Invalid or expired reset token.";
    }
}

// Close database connection
$conn = null;
?>


<?php
// Include database connection
include 'db_connection.php';

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = $_POST['email'];
    
    // Check if the email exists in the database
    $query = "SELECT id FROM users WHERE email = ?";
    $stmt = mysqli_prepare($conn, $query);
    mysqli_stmt_bind_param($stmt, "s", $email);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);
    
    if (mysqli_num_rows($result) > 0) {
        // Generate a unique token
        $token = md5(uniqid() . time());
        
        // Store the token in the database with an expiration time
        $expirTime = date("Y-m-d H:i:s", time() + 3600); // Token expires after 1 hour
        
        $query = "INSERT INTO password_reset (user_id, token, expires) 
                  VALUES (?, ?, ?)";
        $stmt = mysqli_prepare($conn, $query);
        mysqli_stmt_bind_param($stmt, "iss", $email, $token, $expirTime);
        
        if (mysqli_stmt_execute($stmt)) {
            // Send email to user
            $to = $email;
            $subject = "Password Reset Request";
            $message = "
                <html>
                    <head></head>
                    <body>
                        <h2>Password Reset</h2>
                        <p>Please click the following link to reset your password:</p>
                        <a href='http://your-site.com/reset_password.php?token=$token'>Reset Password</a>
                        <br><br>
                        If you did not request this, please ignore this email.
                    </body>
                </html>";
            $headers = "MIME-Version: 1.0" . "\r
";
            $headers .= "Content-type:text/html;charset=UTF-8" . "\r
";
            
            mail($to, $subject, $message, $headers);
            
            echo "<div style='color:green'>An email has been sent to your account with instructions to reset your password.</div>";
        }
    } else {
        echo "<div style='color:red'>Email does not exist in our database.</div>";
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <h2>Forgot Password</h2>
    <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
        Email: <input type="email" name="email" required><br>
        <input type="submit" value="Submit">
    </form>
</body>
</html>


<?php
// Include database connection
include 'db_connection.php';

if ($_SERVER["REQUEST_METHOD"] == "GET") {
    $token = $_GET['token'];
    
    // Check if token exists and hasn't expired
    $query = "SELECT * FROM password_reset 
              WHERE token = ? AND expires > NOW()";
    $stmt = mysqli_prepare($conn, $query);
    mysqli_stmt_bind_param($stmt, "s", $token);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);
    
    if (mysqli_num_rows($result) == 0) {
        die("<div style='color:red'>Invalid or expired token. Please request a new password reset.</div>");
    }
}

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $token = $_GET['token'];
    $newPassword = $_POST['password'];
    
    // Update the user's password
    $query = "UPDATE users SET 
                password = md5(?) 
              WHERE id = (
                  SELECT user_id FROM password_reset 
                  WHERE token = ?
              )";
    $stmt = mysqli_prepare($conn, $query);
    mysqli_stmt_bind_param($stmt, "ss", $newPassword, $token);
    
    if (mysqli_stmt_execute($stmt)) {
        // Invalidate the token
        $query = "DELETE FROM password_reset WHERE token = ?";
        $stmt = mysqli_prepare($conn, $query);
        mysqli_stmt_bind_param($stmt, "s", $token);
        mysqli_stmt_execute($stmt);
        
        echo "<div style='color:green'>Password updated successfully. Please login with your new password.</div>";
    } else {
        die("<div style='color:red'>There was an error updating your password. Please try again later.</div>");
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <?php if ($_SERVER["REQUEST_METHOD"] == "GET"): ?>
        <h2>Reset Password</h2>
        <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>?token=<?php echo $token; ?>" method="post">
            New Password: <input type="password" name="password" required><br>
            Confirm Password: <input type="password" name="confirm_password" required><br>
            <?php
                if (isset($_POST['password']) && $_POST['password'] != $_POST['confirm_password']) {
                    echo "<div style='color:red'>Passwords do not match!</div>";
                }
            ?>
            <input type="submit" value="Reset Password">
        </form>
    <?php endif; ?>
</body>
</html>


<?php
// Database configuration
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "myDB";

// Create connection
$conn = mysqli_connect($servername, $username, $password, $dbname);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// If form is submitted
if (isset($_POST['reset_password'])) {

    // Sanitize email input
    $email = mysqli_real_escape_string($conn, $_POST['email']);

    // Check if email exists in the database
    $check_email_query = "SELECT id FROM users WHERE email='$email'";
    $result = mysqli_query($conn, $check_email_query);

    if (mysqli_num_rows($result) == 0) {
        // Email not found
        echo "<script>alert('Email not found!');</script>";
    } else {

        // Generate a random token for password reset
        $token = bin2hex(openssl_random_pseudo_bytes(16));
        
        // Set the expiration time (1 hour from now)
        $expiring_time = date("Y-m-d H:i:s", strtotime("+1 hour"));

        // Update the users table with the new token and expiring time
        $update_token_query = "UPDATE users SET reset_token='$token', reset_expires='$expiring_time' WHERE email='$email'";
        mysqli_query($conn, $update_token_query);

        // Send password reset link to user's email
        $reset_link = "http://".$_SERVER['HTTP_HOST']."/reset_password.php?token=$token";
        
        $to = $email;
        $subject = "Password Reset Request";
        $message = "
            <html>
                <head>
                    <title>Password Reset</title>
                </head>
                <body>
                    <h2>Password Reset Request</h2>
                    <p>Please click the following link to reset your password:</p>
                    <a href='$reset_link'>$reset_link</a><br /><br />
                    <small>This link will expire in 1 hour.</small>
                </body>
            </html>
        ";
        $headers = "From: webmaster@example.com" . "\r
";
        $headers .= "Content-type: text/html; charset=UTF-8" . "\r
";

        // Send email
        if (mail($to, $subject, $message, $headers)) {
            // Email sent successfully
            echo "<script>alert('Password reset link has been sent to your email!');</script>";
            header("Location: forgot_password.php");
            exit();
        } else {
            // Error sending email
            echo "<script>alert('Error sending password reset link. Please try again!');</script>";
        }
    }
}

// Close database connection
mysqli_close($conn);
?>


<?php
session_start();
require_once 'config.php';

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $email = $_POST['email'];
    
    // Check if email exists in database
    $stmt = $pdo->prepare("SELECT id FROM users WHERE email = ?");
    $stmt->execute([$email]);
    
    if ($stmt->rowCount() > 0) {
        // Generate a random token
        $token = bin2hex(random_bytes(16));
        
        // Store the token and expiration time in the database
        $expiration_time = date('Y-m-d H:i:s', strtotime('+1 hour'));
        $pdo->prepare("UPDATE users SET reset_token = ?, reset_expires = ? WHERE email = ?")
            ->execute([$token, $expiration_time, $email]);
        
        // Send email with reset link
        $resetLink = "http://".$_SERVER['HTTP_HOST']."/reset.php?token=".$token;
        sendResetEmail($email, $resetLink);
        
        echo "An email has been sent to you. Please check your inbox.";
    } else {
        die("This email does not exist in our database.");
    }
}

// Function to send reset email
function sendResetEmail($email, $link) {
    $to = $email;
    $subject = 'Password Reset Request';
    
    $message = '
        <html>
            <body>
                <h2>Password Reset</h2>
                <p>We received a password reset request. Click the link below to reset your password:</p>
                <a href="'.$link.'">'.$link.'</a><br><br>
                <p>If you did not request this, please ignore this email.</p>
            </body>
        </html>';
    
    $headers = 'MIME-Version: 1.0' . "\r
";
    $headers .= 'Content-type: text/html; charset=UTF-8' . "\r
";
    $headers .= 'From: <your_email@example.com>' . "\r
";
    
    mail($to, $subject, $message, $headers);
}
?>


<?php
session_start();
require_once 'config.php';

if (!isset($_GET['token']) || empty($_GET['token'])) {
    die("No token provided.");
}

$token = $_GET['token'];

// Check if token exists and is valid
$stmt = $pdo->prepare("SELECT id, reset_expires FROM users WHERE reset_token = ?");
$stmt->execute([$token]);
$user = $stmt->fetch();

if (!$user) {
    die("Invalid or expired token.");
}

$current_time = date('Y-m-d H:i:s');
if ($current_time > $user['reset_expires']) {
    die("Token has expired. Please request a new password reset.");
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <h2>Reset Password</h2>
    <form action="reset.php?token=<?php echo $token; ?>" method="post">
        <label for="password">New Password:</label><br>
        <input type="password" id="password" name="password" required><br><br>
        
        <label for="confirm_password">Confirm Password:</label><br>
        <input type="password" id="confirm_password" name="confirm_password" required><br><br>
        
        <input type="submit" value="Reset Password">
    </form>
</body>
</html>


<?php
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $token = $_GET['token'];
    
    // Check if token exists and is valid
    $stmt = $pdo->prepare("SELECT id FROM users WHERE reset_token = ?");
    $stmt->execute([$token]);
    $user = $stmt->fetch();
    
    if (!$user) {
        die("Invalid or expired token.");
    }
    
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];
    
    if ($password != $confirm_password) {
        die("Passwords do not match.");
    }
    
    // Hash the password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);
    
    // Update the user's password and clear the reset token
    $pdo->prepare("UPDATE users SET password = ?, reset_token = NULL WHERE id = ?")
        ->execute([$hashed_password, $user['id']]);
        
    // Delete the token from the database
    $pdo->prepare("DELETE FROM users WHERE reset_token = ?")
        ->execute([$token]);
    
    echo "Your password has been successfully updated!";
}
?>


<?php
$host = 'localhost';
$dbname = 'your_database_name';
$user = 'your_username';
$password = 'your_password';

try {
    $pdo = new PDO("mysql:host=$host;dbname=$dbname", $user, $password);
    $pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}
?>


<?php
// Database configuration
require_once('db_connection.php'); // Include your database connection file

function generateNewPassword() {
    $chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^&*';
    $length = 12;
    $password = substr(str_shuffle($chars), 0, $length);
    return $password;
}

function forgotPassword($email) {
    global $conn;

    try {
        // Check if email exists in the database
        $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
        $stmt->bind_param("s", $email);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            // Generate a new password
            $new_password = generateNewPassword();
            $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);

            // Update the user's password in the database
            $update_stmt = $conn->prepare("UPDATE users SET password = ? WHERE email = ?");
            $update_stmt->bind_param("ss", $hashed_password, $email);
            $update_stmt->execute();

            // Send new password to the user's email
            sendPasswordEmail($email, $new_password);

            return "Password reset successful. Check your email for the new password.";
        } else {
            return "Email address not found in our records.";
        }
    } catch (Exception $e) {
        return "Error occurred while resetting password: " . $e->getMessage();
    }
}

function sendPasswordEmail($email, $password) {
    $to = $email;
    $subject = 'Password Reset';
    $message = "Your new password is: " . $password . "

Please login and change your password immediately.";
    
    // Set headers
    $headers = 'From: webmaster@example.com' . "\r
";
    $headers .= 'Reply-To: webmaster@example.com' . "\r
";
    $headers .= 'X-Mailer: PHP/' . phpversion();

    mail($to, $subject, $message, $headers);
}

// Example usage:
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $email = $_POST['email'];
    
    // Sanitize input
    $email = filter_var($email, FILTER_SANITIZE_EMAIL);
    
    if (empty($email)) {
        echo "Email address is required!";
    } else {
        $result = forgotPassword($email);
        echo $result;
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <h2>Forgot Password</h2>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <input type="email" name="email" placeholder="Enter your email address" required><br><br>
        <input type="submit" value="Reset Password">
    </form>
</body>
</html>


<?php
// Database configuration
$DB_HOST = 'localhost';
$DB_USER = 'username';
$DB_PASS = 'password';
$DB_NAME = 'database_name';

// Connect to database
$conn = new mysqli($DB_HOST, $DB_USER, $DB_PASS, $DB_NAME);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function sendPasswordResetEmail($email, $token) {
    $to = $email;
    $subject = 'Password Reset Request';
    $message = '
        <html>
            <body>
                <h2>Password Reset</h2>
                <p>Please click the link below to reset your password:</p>
                <a href="http://yourwebsite.com/reset-password.php?token=' . $token . '">Reset Password</a>
                <br><br>
                <p>If you did not request this password reset, please ignore this email.</p>
            </body>
        </html>';
    $headers = "MIME-Version: 1.0" . "\r
";
    $headers .= "Content-type:text/html;charset=UTF-8" . "\r
";
    
    mail($to, $subject, $message, $headers);
}

function forgotPassword($email) {
    global $conn;
    
    // Check if email exists in database
    $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
    $stmt->bind_param("s", $email);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows === 0) {
        return "Email not found in our database!";
    }
    
    // Generate reset token
    $token = bin2hex(mt_rand());
    $expires = date('Y-m-d H:i:s', time() + 3600); // Token expires after 1 hour
    
    // Update the reset token and expiration time in the database
    $stmt = $conn->prepare("UPDATE users SET reset_token = ?, reset_expires = ? WHERE email = ?");
    $stmt->bind_param("sss", $token, $expires, $email);
    $stmt->execute();
    
    // Send password reset link to user's email
    sendPasswordResetEmail($email, $token);
    
    return "Password reset instructions have been sent to your email!";
}

function validateResetToken($token) {
    global $conn;
    
    // Check if token exists and hasn't expired
    $stmt = $conn->prepare("SELECT id, email FROM users WHERE reset_token = ? AND reset_expires > ?");
    $stmt->bind_param("ss", $token, date('Y-m-d H:i:s'));
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows === 0) {
        return false;
    }
    
    return $result->fetch_assoc();
}

function resetPassword($token, $newPassword) {
    global $conn;
    
    // Validate token
    $user = validateResetToken($token);
    if (!$user) {
        return "Invalid or expired reset link!";
    }
    
    // Hash the new password
    $hashedPassword = password_hash($newPassword, PASSWORD_DEFAULT);
    
    // Update the user's password in the database
    $stmt = $conn->prepare("UPDATE users SET password = ?, reset_token = NULL, reset_expires = NULL WHERE email = ?");
    $stmt->bind_param("ss", $hashedPassword, $user['email']);
    $stmt->execute();
    
    return "Your password has been successfully reset!";
}

// Example usage:
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = $_POST['email'];
    $result = forgotPassword($email);
    echo $result;
}

// Reset password example
if (isset($_GET['token'])) {
    if (!empty($_POST)) {
        $newPassword = $_POST['password'];
        $result = resetPassword($_GET['token'], $newPassword);
        echo $result;
    }
}
?>


<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <?php
    // Check if form is submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        $email = $_POST['email'];
        
        // Validate email
        if (empty($email)) {
            echo "Email is required";
            exit();
        }
        
        // Connect to database
        include 'db.php';
        
        // Check if email exists in database
        $sql = "SELECT id FROM users WHERE email = ?";
        $stmt = $conn->prepare($sql);
        $stmt->bind_param("s", $email);
        $stmt->execute();
        $result = $stmt->get_result();
        
        if ($result->num_rows > 0) {
            // Generate reset token
            $token = md5(uniqid(rand(), true));
            
            // Store token and expiration time in database
            $expiretime = time() + 3600; // Token expires after 1 hour
            $sql = "UPDATE users SET reset_token = ?, reset_expires = ? WHERE email = ?";
            $stmt = $conn->prepare($sql);
            $stmt->bind_param("sis", $token, $expiretime, $email);
            $stmt->execute();
            
            // Send password reset link to user's email
            $to = $email;
            $subject = "Password Reset Request";
            $message = "Please click on the following link to reset your password: http://yourwebsite.com/reset-password.php?token=$token";
            $headers = "From: noreply@yourwebsite.com" . "\r
";
            
            if (mail($to, $subject, $message, $headers)) {
                echo "Password reset email has been sent to your email address.";
            } else {
                echo "Error sending email. Please try again later.";
            }
        } else {
            echo "Email not found in our database.";
        }
    }
    ?>
    
    <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
        Email: <input type="text" name="email">
        <input type="submit" value="Submit">
    </form>
</body>
</html>


<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <?php
    // Check if token is provided in URL
    if (!isset($_GET['token'])) {
        die("Invalid request");
    }
    
    $token = $_GET['token'];
    
    // Connect to database
    include 'db.php';
    
    // Get user details based on token
    $sql = "SELECT id, reset_token, reset_expires FROM users WHERE reset_token = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("s", $token);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows == 0) {
        die("Invalid token");
    }
    
    // Check if token has expired
    $row = $result->fetch_assoc();
    if ($row['reset_expires'] < time()) {
        die("Token has expired. Please request a new password reset.");
    }
    
    // If form is submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        $password = $_POST['password'];
        
        // Validate password
        if (empty($password)) {
            echo "Password is required";
            exit();
        }
        
        if (strlen($password) < 8) {
            echo "Password must be at least 8 characters long";
            exit();
        }
        
        // Hash the password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);
        
        // Update user's password in database
        $sql = "UPDATE users SET password = ?, reset_token = '', reset_expires = '' WHERE id = ?";
        $stmt = $conn->prepare($sql);
        $stmt->bind_param("si", $hashed_password, $row['id']);
        $stmt->execute();
        
        // Redirect to login page
        header("Location: login.php");
        exit();
    }
    ?>
    
    <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
        New Password: <input type="password" name="password">
        <input type="submit" value="Reset Password">
    </form>
</body>
</html>


<?php
// Database configuration
$host = 'localhost';
$db_username = 'username';
$db_password = 'password';
$db_name = 'database';

// Create database connection
$conn = new mysqli($host, $db_username, $db_password, $db_name);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Check if form is submitted
if (isset($_POST['email'])) {
    $email = $_POST['email'];
    
    // Validate email
    if (empty($email)) {
        echo "Email is required!";
        exit;
    }
    
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        echo "Invalid email format!";
        exit;
    }

    // Check if email exists in database
    $sql = "SELECT id FROM users WHERE email = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param('s', $email);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows === 0) {
        echo "Email not registered!";
        exit;
    }

    // Generate reset token
    $token = bin2hex(random_bytes(32));
    $expires = date('Y-m-d H:i:s', time() + 3600); // Token expires in 1 hour

    // Update database with reset token and expiration time
    $sql = "UPDATE users SET reset_token = ?, expires_at = ? WHERE email = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param('sss', $token, $expires, $email);
    $stmt->execute();

    // Send password reset email
    require 'PHPMailer/PHPMailer.php';
    require 'PHPMailer/Exception.php';
    require 'PHPMailer/SMTP.php';

    try {
        $mail = new PHPMailer\PHPMailer();
        $mail->isSMTP();
        $mail->Host = 'smtp.example.com'; // Replace with your SMTP server
        $mail->SMTPAuth = true;
        $mail->Username = 'your_email@example.com';
        $mail->Password = 'your_password';
        $mail->SMTPSecure = 'tls';
        $mail->Port = 587;

        $mail->setFrom('your_email@example.com', 'Your Name');
        $mail->addAddress($email);

        $reset_link = "http://example.com/reset-password.php?token=" . $token;
        $mail->isHTML(true);
        $mail->Subject = 'Password Reset Request';
        $mail->Body = '
            <h1>Password Reset</h1>
            <p>We received a request to reset your password. Click the link below to set up a new password:</p>
            <a href="' . $reset_link . '">Reset Password</a>
            <p>This link will expire in 1 hour.</p>
        ';

        if ($mail->send()) {
            echo "Password reset email has been sent!";
        } else {
            echo "Error sending email: " . $mail->ErrorInfo;
        }
    } catch (Exception $e) {
        echo "Error: " . $e->getMessage();
    }

    // Close database connection
    $stmt->close();
    $conn->close();
}
?>


<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <h2>Forgot Password</h2>
    <form action="process_forgot.php" method="post">
        <label>Email or Username:</label><br>
        <input type="text" name="email_username" required><br><br>
        <button type="submit">Request Reset</button>
    </form>
</body>
</html>


<?php
include('db_connection.php');

// Get input
$email_username = $_POST['email_username'];

// Check if user exists with this email or username
$sql = "SELECT id, email FROM users WHERE email = '$email_username' OR username = '$email_username'";
$result = mysqli_query($conn, $sql);

if (mysqli_num_rows($result) == 0) {
    // User not found
    header("Location: forgot_password.php?error=no_user");
    exit();
}

// Generate random token
$token = bin2hex(random_bytes(20));
$expires = date('Y-m-d H:i:s', strtotime('+1 hour'));

// Store token in database
$sql_token = "INSERT INTO password_resets (user_id, token, expires) VALUES (?, ?, ?)";
$stmt = mysqli_prepare($conn, $sql_token);
mysqli_stmt_bind_param($stmt, "iss", $id, $token, $expires);

// Get user ID from previous query
$row = mysqli_fetch_assoc($result);
$id = $row['id'];

mysqli_stmt_execute($stmt);

// Send email with reset link
$reset_link = "http://$_SERVER[HTTP_HOST]/reset_password.php?token=$token";
$to = $email_username;
$subject = 'Password Reset Request';
$message = "Click the following link to reset your password: $reset_link

If you didn't request this, please ignore this email.";

mail($to, $subject, $message);

// Redirect back to forgot page with success message
header("Location: forgot_password.php?success=true");
exit();
?>


<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <?php
    include('db_connection.php');

    // Check if token is provided
    if (!isset($_GET['token'])) {
        die("Invalid request");
    }

    $token = $_GET['token'];
    
    // Get token details from database
    $sql = "SELECT * FROM password_resets WHERE token = '$token'";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) == 0) {
        die("Invalid or expired token");
    }

    $row = mysqli_fetch_assoc($result);
    
    // Check if token has expired
    $expires = strtotime($row['expires']);
    if ($expires < time()) {
        die("Token has expired. Please request a new password reset.");
    }

    // Show password reset form
    ?>

    <h2>Reset Password</h2>
    <form action="process_reset.php" method="post">
        <input type="hidden" name="token" value="<?php echo $token; ?>">
        <label>New Password:</label><br>
        <input type="password" name="new_password" required><br><br>
        <button type="submit">Reset Password</button>
    </form>

</body>
</html>


<?php
include('db_connection.php');

// Validate token
if (!isset($_POST['token']) || !isset($_POST['new_password'])) {
    die("Invalid request");
}

$token = $_POST['token'];
$new_password = $_POST['new_password'];

$sql_token = "SELECT * FROM password_resets WHERE token = '$token'";
$result_token = mysqli_query($conn, $sql_token);

if (mysqli_num_rows($result_token) == 0) {
    die("Invalid or expired token");
}

$row_token = mysqli_fetch_assoc($result_token);
$expires = strtotime($row_token['expires']);

if ($expires < time()) {
    die("Token has expired. Please request a new password reset.");
}

// Update user's password
$user_id = $row_token['user_id'];
$new_password_hashed = password_hash($new_password, PASSWORD_DEFAULT);

$sql_update = "UPDATE users SET password = '$new_password_hashed' WHERE id = '$user_id'";
mysqli_query($conn, $sql_update);

// Delete the token after use
$sql_delete = "DELETE FROM password_resets WHERE token = '$token'";
mysqli_query($conn, $sql_delete);

// Redirect to success page
header("Location: reset_success.php");
exit();
?>


<!DOCTYPE html>
<html>
<head>
    <title>Password Reset Successful</title>
</head>
<body>
    <h2>Your password has been successfully reset!</h2>
    <p>You can now <a href="login.php">log in</a> with your new password.</p>
</body>
</html>


<?php
// Database connection file (replace with your own database connection)
include("your_database.php");

function forgotPassword($email) {
    global $conn;

    // Check if email exists in the database
    $query = "SELECT id, username FROM users WHERE email = ?";
    $stmt = $conn->prepare($query);
    $stmt->bind_param("s", $email);
    $stmt->execute();
    
    $result = $stmt->get_result();
    
    if ($result->num_rows == 0) {
        return "Email not found!";
    }
    
    // Generate reset token and expiration time
    $resetToken = bin2hex(random_bytes(16));
    $expirationTime = date('Y-m-d H:i:s', strtotime('+1 hour'));
    
    // Update the database with reset token and expiration time
    $updateQuery = "UPDATE users SET password_reset_token = ?, password_reset_expires = ? WHERE email = ?";
    $stmt = $conn->prepare($updateQuery);
    $stmt->bind_param("sss", $resetToken, $expirationTime, $email);
    $stmt->execute();
    
    // Send reset email
    $to = $email;
    $subject = "Password Reset Request";
    
    $headers = "From: yourwebsite@example.com\r
";
    $headers .= "Content-Type: text/html; charset=UTF-8\r
";
    
    $message = "
        <html>
            <head>
                <title>Password Reset</title>
            </head>
            <body>
                <h2>Password Reset Request</h2>
                <p>Hello,</p>
                <p>We received a request to reset your password. Click the link below to reset it:</p>
                <a href='http://yourwebsite.com/reset-password.php?token=$resetToken'>Reset Password</a><br><br>
                <p>If you didn't request this password reset, you can safely ignore this email.</p>
                <p>Best regards,<br>Your Website Team</p>
            </body>
        </html>
    ";
    
    if (mail($to, $subject, $message, $headers)) {
        return "Password reset link has been sent to your email!";
    } else {
        return "Failed to send password reset email!";
    }
}

// Example usage:
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = $_POST['email'];
    
    // Sanitize input
    $email = filter_var($email, FILTER_SANITIZE_EMAIL);
    
    if (filter_var($email, FILTER_VALIDATE_EMAIL)) {
        echo forgotPassword($email);
    } else {
        echo "Invalid email format!";
    }
}
?>


<?php
include('db_connect.php');

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = $_POST['email'];
    
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        die("Invalid email format");
    }
    
    $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
    $stmt->bind_param("s", $email);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows == 0) {
        die("Email not found");
    }
    
    $user_id = $result->fetch_assoc()['id'];
    $token = bin2hex(openssl_random_pseudo_bytes(16));
    
    $stmt = $conn->prepare("INSERT INTO password_resets (user_id, token, created_at) VALUES (?, ?, NOW())");
    $stmt->bind_param("is", $user_id, $token);
    $stmt->execute();
    
    send_reset_email($email, $token);
    echo "Reset link sent to your email!";
}

function send_reset_email($email, $token) {
    $to = $email;
    $subject = "Password Reset Request";
    $message = "Click this link to reset your password: http://example.com/reset_password.php?token=" . $token;
    $headers = "From: no-reply@example.com\r
" .
               "Reply-To: no-reply@example.com\r
" .
               "X-Mailer: PHP/" . phpversion();
    
    mail($to, $subject, $message, $headers);
}
?>


<?php
include('db_connect.php');

if (!isset($_GET['token'])) {
    die("No token provided");
}

$token = $_GET['token'];
$current_time = date('Y-m-d H:i:s');

$stmt = $conn->prepare("
    SELECT pr.id, u.id AS user_id 
    FROM password_resets pr 
    JOIN users u ON pr.user_id = u.id 
    WHERE pr.token = ? AND pr.created_at > NOW() - INTERVAL 1 HOUR
");
$stmt->bind_param("s", $token);
$stmt->execute();
$result = $stmt->get_result();

if ($result->num_rows == 0) {
    die("Invalid or expired token");
}

$user_data = $result->fetch_assoc();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <h2>Reset Password</h2>
    <form action="update_password.php" method="post">
        <input type="hidden" name="user_id" value="<?php echo $user_data['user_id']; ?>">
        <input type="hidden" name="reset_id" value="<?php echo $user_data['id']; ?>">
        <label for="password">New Password:</label><br>
        <input type="password" id="password" name="password"><br><br>
        <label for="confirm_password">Confirm Password:</label><br>
        <input type="password" id="confirm_password" name="confirm_password"><br><br>
        <input type="submit" value="Reset Password">
    </form>
</body>
</html>


<?php
include('db_connect.php');

if (!isset($_POST['user_id'], $_POST['reset_id'], $_POST['password'], $_POST['confirm_password'])) {
    die("Missing data");
}

$user_id = $_POST['user_id'];
$reset_id = $_POST['reset_id'];
$password = $_POST['password'];
$confirm_password = $_POST['confirm_password'];

if ($password !== $confirm_password) {
    die("Passwords do not match");
}

$password_hash = password_hash($password, PASSWORD_DEFAULT);

$stmt = $conn->prepare("
    UPDATE users 
    SET password = ?
    WHERE id = ? 
    AND (
        SELECT 1 
        FROM password_resets 
        WHERE id = ? 
        AND created_at > NOW() - INTERVAL 1 HOUR
    ) IS NOT NULL
");
$stmt->bind_param("siii", $password_hash, $user_id, $reset_id);
$stmt->execute();

$rows_affected = $stmt->affected_rows;

if ($rows_affected === 0) {
    die("Invalid or expired reset request");
}

// Delete the used reset token
$conn->query("DELETE FROM password_resets WHERE id = $reset_id");

echo "Password successfully updated!";
?>


<?php
session_start();
include('db_connection.php');

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = $_POST['email'];
    
    // Sanitize email input
    $email = htmlspecialchars($email, ENT_QUOTES, 'UTF-8');
    $email = trim($email);
    
    if (empty($email)) {
        die("Email is required.");
    }
    
    // Check if email exists in the database using prepared statement
    $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
    $stmt->bind_param("s", $email);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows > 0) {
        // Generate token and expiration time
        $token = bin2hex(random_bytes(32));
        $expires = date('Y-m-d H:i:s', strtotime('+1 hour'));
        
        // Insert token into the database
        $stmt_insert = $conn->prepare("INSERT INTO password_reset (user_id, token, expires) 
                                      VALUES (?, ?, ?)");
        $row = $result->fetch_assoc();
        $stmt_insert->bind_param("iss", $row['id'], $token, $expires);
        $stmt_insert->execute();
        
        // Send email with reset link
        $reset_url = "http://$_SERVER[HTTP_HOST]/reset_password.php?token=$token";
        $to = $email;
        $subject = 'Password Reset Request';
        $message = "Please click the following link to reset your password:
$reset_url";
        
        if (mail($to, $subject, $message)) {
            echo "An email has been sent with instructions to reset your password.";
        } else {
            die("Failed to send email.");
        }
    } else {
        // For security, don't reveal if email doesn't exist
        echo "If an account exists with this email, a reset link will be sent shortly.";
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <h2>Forgot Password</h2>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <label for="email">Email:</label><br>
        <input type="text" id="email" name="email"><br><br>
        <button type="submit">Reset Password</button>
    </form>
</body>
</html>


<?php
session_start();
include('db_connection.php');

if (!isset($_GET['token'])) {
    die("Invalid request.");
}

$token = $_GET['token'];

// Check token validity
$stmt = $conn->prepare("SELECT user_id, expires FROM password_reset WHERE token = ?");
$stmt->bind_param("s", $token);
$stmt->execute();
$result = $stmt->get_result();

if ($result->num_rows == 0) {
    die("Invalid or expired reset link.");
}

$row = $result->fetch_assoc();
$expires = $row['expires'];
$current_time = date('Y-m-d H:i:s');

if ($current_time > $expires) {
    die("Reset link has expired. Please request a new one.");
}

// If token is valid, allow password change
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $new_password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];
    
    if ($new_password !== $confirm_password) {
        die("Passwords do not match.");
    }
    
    // Hash the new password
    $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);
    
    // Update user's password
    $stmt_update = $conn->prepare("UPDATE users SET password = ? WHERE id = ?");
    $stmt_update->bind_param("si", $hashed_password, $row['user_id']);
    $stmt_update->execute();
    
    // Invalidate the token
    $stmt_delete = $conn->prepare("DELETE FROM password_reset WHERE token = ?");
    $stmt_delete->bind_param("s", $token);
    $stmt_delete->execute();
    
    echo "Password has been reset successfully. You can now login with your new password.";
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <h2>Reset Password</h2>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <label for="password">New Password:</label><br>
        <input type="password" id="password" name="password"><br><br>
        <label for="confirm_password">Confirm Password:</label><br>
        <input type="password" id="confirm_password" name="confirm_password"><br><br>
        <button type="submit">Reset Password</button>
    </form>
</body>
</html>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'root';
$password = '';

try {
    // Create database connection
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        $email = $_POST['email'];
        
        // Check if email exists in the database
        $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
        $stmt->execute([$email]);
        $user = $stmt->fetch(PDO::FETCH_ASSOC);

        if ($user) {
            // Generate reset token
            $resetToken = bin2hex(random_bytes(16));
            
            // Set expiration time (e.g., 1 hour)
            $expires = date('Y-m-d H:i:s', time() + 3600);
            
            // Update the database with the reset token and expiration
            $stmt = $conn->prepare("UPDATE users SET reset_token = ?, reset_expires = ? WHERE email = ?");
            $stmt->execute([$resetToken, $expires, $email]);
            
            // Send password reset email
            $to = $email;
            $subject = "Password Reset Request";
            $message = "
                <html>
                    <body>
                        <h2>Password Reset</h2>
                        <p>Please click the following link to reset your password:</p>
                        <a href='http://yourwebsite.com/reset-password.php?token=$resetToken'>Reset Password</a><br><br>
                        <small>This link will expire in 1 hour.</small>
                    </body>
                </html>
            ";
            
            // Set email headers
            $headers = "MIME-Version: 1.0\r
";
            $headers .= "Content-type: text/html; charset=UTF-8\r
";
            $headers .= "From: yourwebsite@example.com\r
";
            
            mail($to, $subject, $message, $headers);
            
            echo "A password reset link has been sent to your email.";
        } else {
            echo "Email address not found in our database.";
        }
    }
} catch(PDOException $e) {
    echo "Error: " . $e->getMessage();
}

$conn = null;
?>


<?php
if (isset($_GET['token'])) {
    $token = $_GET['token'];
    
    try {
        // Database connection
        $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
        $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

        // Check if token exists and hasn't expired
        $stmt = $conn->prepare("SELECT id FROM users WHERE reset_token = ? AND reset_expires > NOW()");
        $stmt->execute([$token]);
        $user = $stmt->fetch(PDO::FETCH_ASSOC);

        if ($user) {
            if ($_SERVER["REQUEST_METHOD"] == "POST") {
                $newPassword = $_POST['password'];
                
                // Update password in the database
                $stmt = $conn->prepare("UPDATE users SET password = ?, reset_token = NULL, reset_expires = NULL WHERE id = ?");
                $stmt->execute([password_hash($newPassword, PASSWORD_DEFAULT), $user['id']]);
                
                echo "Your password has been successfully updated!";
            } else {
                // Display password reset form
                ?>
                <form method="post" action="<?php echo $_SERVER['PHP_SELF'] . '?token=' . $token; ?>">
                    New Password: <input type="password" name="password"><br>
                    Confirm Password: <input type="password" name="confirm_password"><br>
                    <input type="submit" value="Reset Password">
                </form>
                <?php
            }
        } else {
            echo "Invalid or expired reset token.";
        }
    } catch(PDOException $e) {
        echo "Error: " . $e->getMessage();
    }
} else {
    echo "No token provided.";
}
?>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$database = 'my_database';

try {
    // Connect to the database
    $conn = new mysqli($host, $username, $password, $database);
    
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    // Check if form is submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        // Validate email input
        $email = trim($_POST['email']);
        
        if (empty($email)) {
            throw new Exception("Email cannot be empty");
        }
        
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            throw new Exception("Invalid email format");
        }

        // Check if email exists in the database
        $sql = "SELECT id FROM users WHERE email = ?";
        $stmt = $conn->prepare($sql);
        $stmt->bind_param('s', $email);
        $stmt->execute();
        
        $result = $stmt->get_result();
        
        if ($result->num_rows == 0) {
            throw new Exception("No account found with this email address");
        }

        // Generate reset token
        $token = bin2hex(random_bytes(32)); // Generates a 64-character token
        $expires = date('Y-m-d H:i:s', time() + 3600); // Token expires after 1 hour

        // Insert token into database
        $sql = "INSERT INTO password_resets (token, user_id, created_at, expires) VALUES (?, ?, ?, ?)";
        $stmt = $conn->prepare($sql);
        $stmt->bind_param('ssss', $token, $result->fetch_assoc()['id'], date('Y-m-d H:i:s'), $expires);
        $stmt->execute();

        // Send reset password email
        $resetLink = "http://example.com/reset-password.php?token=$token&email=$email";
        
        $to = $email;
        $subject = "Password Reset Request";
        $message = "
            <html>
            <body>
                <p>We received a request to reset your password. Click the link below to reset it:</p>
                <a href='$resetLink'>$resetLink</a>
                <br><br>
                <small>If you did not make this request, please ignore this email.</small>
            </body>
            </html>
        ";
        
        $headers = "MIME-Version: 1.0\r
";
        $headers .= "Content-Type: text/html; charset=UTF-8\r
";
        $headers .= "From: webmaster@example.com\r
";

        if (mail($to, $subject, $message, $headers)) {
            echo "<h2>Check your email!</h2>";
            echo "<p>We've sent a password reset link to your email address. Please check your inbox and click on the provided link to reset your password.</p>";
        } else {
            throw new Exception("Failed to send reset password email");
        }
    }

} catch (Exception $e) {
    // Display error message
    echo "<h2>Error!</h2>";
    echo "<p>" . htmlspecialchars($e->getMessage()) . "</p>";
}

// Close database connection
if (isset($conn)) {
    $conn->close();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <h1>Forgot Password</h1>
    <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
        <input type="email" name="email" placeholder="Enter your email address" required><br>
        <button type="submit">Reset Password</button>
    </form>
</body>
</html>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'mydatabase';
$username = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

// Generate random string for token
function generateToken($length = 32) {
    return bin2hex(random_bytes($length));
}

// Function to send password reset email
function sendPasswordResetEmail($email, $token) {
    $to = $email;
    $subject = 'Password Reset Request';
    $message = "Click the following link to reset your password: 

";
    $message .= "http://example.com/reset-password.php?token=$token

";
    $message .= "This link will expire in 1 hour.";
    
    $headers = "From: no-reply@example.com\r
";
    $headers .= "Reply-To: no-reply@example.com\r
";
    $headers .= "X-Mailer: PHP/" . phpversion();
    
    mail($to, $subject, $message, $headers);
}

// Check if email exists in database
function checkEmailExists($conn, $email) {
    $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
    $stmt->execute([$email]);
    return $stmt->rowCount() > 0;
}

// Create password reset request
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = $_POST['email'];
    
    if (checkEmailExists($conn, $email)) {
        // Generate token and store in database with expiration time
        $token = generateToken();
        $expires = date("Y-m-d H:i:s", strtotime("+1 hour"));
        
        $stmt = $conn->prepare("INSERT INTO password_resets (email, token, expires) VALUES (?, ?, ?)");
        $stmt->execute([$email, $token, $expires]);
        
        // Send reset email
        sendPasswordResetEmail($email, $token);
        
        echo "A password reset link has been sent to your email address.";
    } else {
        echo "Email not found in our records. Please check your email and try again.";
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <h2>Forgot Password</h2>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <input type="email" name="email" placeholder="Enter your email address" required><br><br>
        <button type="submit">Send Reset Link</button>
    </form>
</body>
</html>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'mydatabase';
$username = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

// Check if token is valid
function validateToken($conn, $token) {
    $stmt = $conn->prepare("SELECT * FROM password_resets WHERE token = ? AND expires > NOW()");
    $stmt->execute([$token]);
    return $stmt->fetch(PDO::FETCH_ASSOC);
}

if (isset($_GET['token'])) {
    $token = $_GET['token'];
    $resetData = validateToken($conn, $token);
    
    if (!$resetData) {
        die("Invalid or expired reset token.");
    }
} else {
    die("No token provided.");
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <h2>Reset Password</h2>
    <form action="reset-password.php?token=<?php echo $token; ?>" method="post">
        <input type="password" name="new_password" placeholder="Enter new password" required><br><br>
        <input type="password" name="confirm_password" placeholder="Confirm new password" required><br><br>
        <button type="submit">Reset Password</button>
    </form>
</body>
</html>

<?php
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $token = $_GET['token'];
    $resetData = validateToken($conn, $token);
    
    if (!$resetData) {
        die("Invalid or expired reset token.");
    }
    
    $new_password = $_POST['new_password'];
    $confirm_password = $_POST['confirm_password'];
    
    if ($new_password != $confirm_password) {
        die("Passwords do not match.");
    }
    
    // Hash the new password
    $hashedPassword = password_hash($new_password, PASSWORD_DEFAULT);
    
    // Update user's password in database
    $stmt = $conn->prepare("UPDATE users SET password = ? WHERE email = ?");
    $stmt->execute([$hashedPassword, $resetData['email']]);
    
    // Delete the reset token
    $stmt = $conn->prepare("DELETE FROM password_resets WHERE token = ?");
    $stmt->execute([$token]);
    
    echo "Your password has been successfully updated. <a href='login.php'>Click here to login</a>";
}
?>


<?php
// Database connection
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
} catch(PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <h2>Forgot Password</h2>
    <?php
    if (isset($_GET['error'])) {
        echo "<p style='color:red;'>".$_GET['error']."</p>";
    }
    ?>
    <form action="forgot.php" method="post">
        <input type="email" name="email" placeholder="Enter your email" required><br><br>
        <input type="submit" value="Reset Password">
    </form>
</body>
</html>


<?php
// Database connection
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
} catch(PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = $_POST['email'];

    // Check if email exists in the database
    $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
    $stmt->execute([$email]);
    $row = $stmt->fetch();

    if ($row) {
        $token = bin2hex(random_bytes(16)); // Generate a random token

        // Store the token in the database
        $time = date('Y-m-d H:i:s');
        $stmt = $conn->prepare("INSERT INTO password_resets (user_id, token, created_at) VALUES (?, ?, ?)");
        $stmt->execute([$row['id'], $token, $time]);

        // Send email to the user
        $to = $email;
        $subject = "Password Reset Request";
        $message = "
            <html>
                <body>
                    <p>We received a password reset request. Click the link below to reset your password:</p>
                    <a href='http://localhost/reset.php?token=".$token."'>Reset Password</a>
                    <br><br>
                    <p>If you didn't request this, please ignore this email.</p>
                </body>
            </html>";
        $headers = "MIME-Version: 1.0" . "\r
";
        $headers .= "Content-type:text/html;charset=UTF-8" . "\r
";
        $headers .= "From: your_email@example.com" . "\r
";

        mail($to, $subject, $message, $headers);

        echo "<h3>Check your email for a password reset link.</h3>";
    } else {
        header("Location: index.php?error=Email%20not%20found");
        exit();
    }
}


<?php
// Database connection
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
} catch(PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

if (!isset($_GET['token'])) {
    header("Location: index.php?error=No%20token%20provided");
    exit();
}

$token = $_GET['token'];
?>

<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <?php
    if (isset($_POST['submit'])) {
        $new_password = $_POST['password'];
        $confirm_password = $_POST['confirm_password'];

        if ($new_password != $confirm_password) {
            echo "<p style='color:red;'>Passwords do not match!</p>";
            exit();
        }

        // Check if the token is valid
        $stmt = $conn->prepare("SELECT user_id, created_at FROM password_resets WHERE token = ?");
        $stmt->execute([$token]);
        $row = $stmt->fetch();

        if (!$row) {
            echo "<p style='color:red;'>Invalid or expired token!</p>";
            exit();
        }

        // Check if the token is not expired (e.g., valid for 1 hour)
        $created_at = $row['created_at'];
        $time_diff = strtotime(date('Y-m-d H:i:s')) - strtotime($created_at);

        if ($time_diff > 3600) { // 1 hour in seconds
            echo "<p style='color:red;'>Token has expired!</p>";
            exit();
        }

        // Update the user's password
        $stmt = $conn->prepare("UPDATE users SET password = ? WHERE id = ?");
        $hashed_password = password_hash($new_password, PASSWORD_BCRYPT);
        $stmt->execute([$hashed_password, $row['user_id']]);

        // Delete the token from the database
        $stmt = $conn->prepare("DELETE FROM password_resets WHERE token = ?");
        $stmt->execute([$token]);

        echo "<h3>Password reset successful! You can now login with your new password.</h3>";
    }
    ?>

    <form method="post">
        <input type="password" name="password" placeholder="New Password" required><br><br>
        <input type="password" name="confirm_password" placeholder="Confirm Password" required><br><br>
        <input type="submit" name="submit" value="Reset Password">
    </form>
</body>
</html>


<?php
session_start();

// Database connection details
$host = 'localhost';
$user = 'root';
$password = '';
$dbname = 'mydatabase';

// Connect to database
$conn = new mysqli($host, $user, $password, $dbname);
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get the email from POST request
    $email = $_POST['email'];
    
    // Validate email format
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        $_SESSION['error'] = "Invalid email format!";
        header("Location: forgot_password.html");
        exit();
    }

    // Check if the email exists in the database
    $sql = "SELECT id FROM users WHERE email=?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("s", $email);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows == 0) {
        $_SESSION['error'] = "Email not found in our records!";
        header("Location: forgot_password.html");
        exit();
    }

    // Generate a unique token for password reset
    $token = bin2hex(random_bytes(16));
    $expires = date('Y-m-d H:i:s', time() + 3600); // Token expires after 1 hour

    // Insert the token into the database
    $sql = "INSERT INTO password_resets (user_id, token, created_at, expires_at) 
            VALUES (?, ?, ?, ?)";
    $stmt = $conn->prepare($sql);
    $row = $result->fetch_assoc();
    $stmt->bind_param("ssss", $row['id'], $token, date('Y-m-d H:i:s'), $expires);

    if (!$stmt->execute()) {
        $_SESSION['error'] = "An error occurred. Please try again later!";
        header("Location: forgot_password.html");
        exit();
    }

    // Send email with reset link
    $to = $email;
    $subject = "Password Reset Request";
    $message = "
        <html>
            <head>
                <title>Password Reset</title>
            </head>
            <body>
                <h2>Password Reset Request</h2>
                <p>Please click the following link to reset your password:</p>
                <a href='http://localhost/reset_password.php?token=$token'>Reset Password</a>
                <p>If you did not request a password reset, please ignore this email.</p>
            </body>
        </html>
    ";
    $headers = "MIME-Version: 1.0" . "\r
";
    $headers .= "Content-type:text/html;charset=UTF-8" . "\r
";
    $headers .= "From: <your-email@example.com>" . "\r
";

    if (mail($to, $subject, $message, $headers)) {
        $_SESSION['success'] = "A password reset link has been sent to your email!";
        header("Location: forgot_password.html");
    } else {
        $_SESSION['error'] = "An error occurred while sending the email. Please try again later!";
        header("Location: forgot_password.html");
    }
}

$conn->close();
?>


<?php
session_start();

// Database connection details
$host = 'localhost';
$user = 'root';
$password = '';
$dbname = 'mydatabase';

// Connect to database
$conn = new mysqli($host, $user, $password, $dbname);
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

if (isset($_GET['token'])) {
    // Validate the token
    $token = $_GET['token'];
    
    $sql = "SELECT * FROM password_resets WHERE token=? AND expires_at > NOW()";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("s", $token);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows == 0) {
        $_SESSION['error'] = "Invalid or expired token!";
        header("Location: forgot_password.html");
        exit();
    }

    // Get user ID from the token
    $row = $result->fetch_assoc();
    $user_id = $row['user_id'];
} else {
    $_SESSION['error'] = "No token provided!";
    header("Location: forgot_password.html");
    exit();
}

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get new password and confirm
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];

    if ($password != $confirm_password) {
        $_SESSION['error'] = "Passwords do not match!";
        header("Location: reset_password.php?token=$token");
        exit();
    }

    // Update the password in the database
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

    $sql = "UPDATE users SET password=? WHERE id=?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("si", $hashed_password, $user_id);

    if (!$stmt->execute()) {
        $_SESSION['error'] = "An error occurred while updating the password!";
        header("Location: reset_password.php?token=$token");
        exit();
    }

    // Delete the token after use
    $sql = "DELETE FROM password_resets WHERE token=?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("s", $token);
    $stmt->execute();

    $_SESSION['success'] = "Your password has been reset successfully!";
    header("Location: login.php");
}

$conn->close();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 20px;
            background-color: #f0f0f0;
        }
        .container {
            max-width: 500px;
            margin: 0 auto;
            background-color: white;
            padding: 30px;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }
        .form-group {
            margin-bottom: 20px;
        }
        input {
            width: 100%;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-sizing: border-box;
        }
        button {
            background-color: #4CAF50;
            color: white;
            padding: 14px 20px;
            margin: 8px 0;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            width: 100%;
        }
        button:hover {
            background-color: #45a049;
        }
    </style>
</head>
<body>
    <div class="container">
        <?php
        if (isset($_SESSION['error'])) {
            echo "<p style='color: red; margin-bottom: 10px;'>$_SESSION[error]</p>";
            unset($_SESSION['error']);
        }
        ?>
        <h2>Reset Password</h2>
        <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
            <input type="hidden" name="token" value="<?php echo $token; ?>">
            <div class="form-group">
                <label for="password">New Password:</label>
                <input type="password" id="password" name="password" required>
            </div>
            <div class="form-group">
                <label for="confirm_password">Confirm New Password:</label>
                <input type="password" id="confirm_password" name="confirm_password" required>
            </div>
            <button type="submit">Reset Password</button>
        </form>
    </div>
</body>
</html>


<?php
include('db_connection.php');

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = trim($_POST['email']);

    // Validate email input
    if (empty($email)) {
        header("Location: forgot_password_form.php?error=Email is required");
        exit();
    }

    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        header("Location: forgot_password_form.php?error=Invalid email format");
        exit();
    }

    // Check if email exists in the database
    $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
    $stmt->bind_param("s", $email);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows === 0) {
        header("Location: forgot_password_form.php?error=Email does not exist");
        exit();
    }

    // Generate reset token and expiration time
    $resetToken = bin2hex(random_bytes(16));
    $expirationTime = date('Y-m-d H:i:s', strtotime('+30 minutes'));

    // Update the database with the reset token and expiration time
    $updateStmt = $conn->prepare("UPDATE users SET reset_token = ?, reset_expires = ? WHERE email = ?");
    $updateStmt->bind_param("sss", $resetToken, $expirationTime, $email);
    $updateStmt->execute();

    // Send password reset email
    $to = $email;
    $subject = "Password Reset Request";
    $message = "
        <html>
            <body>
                <h2>Password Reset</h2>
                <p>Please click the following link to reset your password:</p>
                <a href='http://example.com/reset_password.php?token=".$resetToken."'>Reset Password</a><br><br>
                <i>This link will expire in 30 minutes.</i>
            </body>
        </html>";
    $headers = "MIME-Version: 1.0" . "\r
";
    $headers .= "Content-type:text/html;charset=UTF-8" . "\r
";
    $headers .= "From: <noreply@example.com>" . "\r
";

    if (mail($to, $subject, $message, $headers)) {
        header("Location: forgot_password_form.php?success=Password reset email sent successfully");
    } else {
        header("Location: forgot_password_form.php?error=Failed to send password reset email");
    }
}
?>


<?php
// forgot_password.php

require_once 'db_connect.php'; // Include your database connection file

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = trim($_POST['email']);
    
    if (empty($email)) {
        die("Email is required!");
    }
    
    // Check if email is valid
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        die("Invalid email format!");
    }
    
    // Check if email exists in the database
    $sql = "SELECT id FROM users WHERE email = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("s", $email);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows == 0) {
        die("Email not found in our records!");
    }
    
    // Generate a random token
    $token = bin2hex(random_bytes(16));
    $expires = date('Y-m-d H:i:s', time() + 3600); // Token expires after 1 hour
    
    // Store the token in the database
    $sql_token = "INSERT INTO password_reset (user_id, token, expires) 
                 VALUES (?, ?, ?)";
    $stmt_token = $conn->prepare($sql_token);
    $row = $result->fetch_assoc();
    $stmt_token->bind_param("iss", $row['id'], $token, $expires);
    
    if ($stmt_token->execute()) {
        // Send email with reset link
        $reset_link = "http://your-site.com/reset_password.php?token=" . $token;
        
        $to = $email;
        $subject = "Password Reset Request";
        $message = "You requested a password reset. Click this link to reset your password: 

" . $reset_link;
        $headers = "From: your-site@example.com";
        
        if (mail($to, $subject, $message)) {
            echo "A password reset email has been sent to your inbox.";
        } else {
            die("Failed to send the email!");
        }
    } else {
        die("Error creating reset token! Please try again.");
    }
    
    // Close statements and connection
    $stmt->close();
    $stmt_token->close();
    $conn->close();
}
?>


<?php
// reset_password.php

require_once 'db_connect.php'; // Include your database connection file

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = trim($_POST['email']);
    $password = $_POST['password'];
    $token = $_POST['token'];
    
    if (empty($email) || empty($password) || empty($token)) {
        die("All fields are required!");
    }
    
    // Check token validity
    $sql_token = "SELECT * FROM password_reset 
                 WHERE token = ? AND expires > NOW()";
    $stmt_token = $conn->prepare($sql_token);
    $stmt_token->bind_param("s", $token);
    $stmt_token->execute();
    $token_result = $stmt_token->get_result();
    
    if ($token_result->num_rows == 0) {
        die("Invalid or expired token!");
    }
    
    // Check email
    $sql_user = "SELECT id FROM users WHERE email = ?";
    $stmt_user = $conn->prepare($sql_user);
    $stmt_user->bind_param("s", $email);
    $stmt_user->execute();
    $user_result = $stmt_user->get_result();
    
    if ($user_result->num_rows == 0) {
        die("Email not found in our records!");
    }
    
    // Update password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);
    $sql_update = "UPDATE users SET password = ? WHERE id = ?";
    $stmt_update = $conn->prepare($sql_update);
    $row_user = $user_result->fetch_assoc();
    $stmt_update->bind_param("si", $hashed_password, $row_user['id']);
    
    if ($stmt_update->execute()) {
        // Delete used token
        $sql_delete_token = "DELETE FROM password_reset WHERE token = ?";
        $stmt_delete_token = $conn->prepare($sql_delete_token);
        $stmt_delete_token->bind_param("s", $token);
        $stmt_delete_token->execute();
        
        echo "Password has been reset successfully!";
    } else {
        die("Error resetting password! Please try again.");
    }
    
    // Close statements and connection
    $stmt_token->close();
    $stmt_user->close();
    $stmt_update->close();
    $conn->close();
}
?>


<?php
// Change password.php file
session_start();

include('connection.php');

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = $_POST['email'];
    
    // Check if email is valid
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        $_SESSION['status'] = "Invalid email format";
        header("Location: forgot_password.php");
        exit();
    }

    // Query to check if email exists in the database
    $query = "SELECT * FROM users WHERE email = ?";
    $stmt = mysqli_prepare($conn, $query);
    mysqli_stmt_bind_param($stmt, "s", $email);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);

    if (mysqli_num_rows($result) == 0) {
        $_SESSION['status'] = "Email does not exist";
        header("Location: forgot_password.php");
        exit();
    } else {
        // Generate a random token
        $token = bin2hex(mt_rand());
        
        // Update the token and expiration time in the database
        $expirTime = date('Y-m-d H:i:s', strtotime('+1 hour'));
        
        $updateQuery = "UPDATE users SET reset_token = ?, reset_expires = ? WHERE email = ?";
        $stmtUpdate = mysqli_prepare($conn, $updateQuery);
        mysqli_stmt_bind_param($stmtUpdate, "sss", $token, $expirTime, $email);
        mysqli_stmt_execute($stmtUpdate);

        // Send the password reset link to the user's email
        require 'PHPMailer/PHPMailer.php';
        require 'PHPMailer/SMTP.php';
        require 'PHPMailer/Exception.php';

        $mail = new PHPMailer\PHPMailer();
        
        try {
            $mail->isSMTP();
            $mail->Host = 'smtp.example.com'; // Replace with your SMTP server
            $mail->SMTPAuth = true;
            $mail->Username = 'your_email@example.com';
            $mail->Password = 'your_password';
            $mail->Port = 587;

            $mail->setFrom('your_email@example.com', 'Reset Password');
            $mail->addAddress($email);
            $mail->isHTML(true);

            $mail->Subject = 'Password Reset Request';
            $resetLink = "http://localhost/reset_password.php?token=" . $token;
            $mail->Body = '<p>We received a request to reset your password. Click the link below to reset it:</p><br>
                          <a href="' . $resetLink . '">Reset Password</a>';

            $mail->send();
            
            $_SESSION['status'] = "Password reset email sent successfully";
            header("Location: forgot_password.php");
        } catch (Exception $e) {
            $_SESSION['status'] = "Error sending password reset email: " . $e->getMessage();
            header("Location: forgot_password.php");
        }
    }
} else {
    // If form is not submitted, redirect to forgot password page
    header("Location: forgot_password.php");
}

mysqli_close($conn);
?>


<?php
include 'db_connection.php'; // Include your database connection file

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = mysqli_real_escape_string($conn, $_POST['email']);
    
    // Check if email exists in the database
    $sql = "SELECT id FROM users WHERE email = '$email'";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) == 0) {
        // Email doesn't exist
        header("Location: forgot_password.php?error=Email%20not%20found");
        exit();
    } else {
        // Generate reset token and store it in the database
        $token = md5(uniqid(rand(), true));
        $expiration_time = date('Y-m-d H:i:s', time() + 3600); // Token expires after 1 hour
        
        $sql = "INSERT INTO password_reset (user_id, token, expiration) 
                VALUES ('$email', '$token', '$expiration_time')";
        
        if (mysqli_query($conn, $sql)) {
            // Send reset email
            $to = $email;
            $subject = "Password Reset Request";
            $message = "
                <html>
                    <head></head>
                    <body>
                        <p>Please click the following link to reset your password:</p>
                        <a href='http://yourdomain.com/reset_password.php?token=$token'>Reset Password</a><br><br>
                        This link will expire in 1 hour.
                    </body>
                </html>";
            $headers = "MIME-Version: 1.0" . "\r
";
            $headers .= "Content-type:text/html;charset=UTF-8" . "\r
";
            $headers .= "From: <your_email@example.com>" . "\r
";
            
            mail($to, $subject, $message, $headers);
            
            header("Location: forgot_password.php?error=Reset%20link%20sent%20to%20your%20email");
            exit();
        } else {
            echo "Error: " . mysqli_error($conn);
        }
    }
}
?>


<?php
include 'db_connection.php'; // Include your database connection file

if (!isset($_GET['token'])) {
    header("Location: forgot_password.php?error=Invalid%20link");
    exit();
}

$token = mysqli_real_escape_string($conn, $_GET['token']);

// Check if token exists and is valid
$sql = "SELECT * FROM password_reset WHERE token = '$token'";
$result = mysqli_query($conn, $sql);

if (mysqli_num_rows($result) == 0) {
    header("Location: forgot_password.php?error=Invalid%20or%20expired%20link");
    exit();
} else {
    // Get the user data
    $row = mysqli_fetch_assoc($result);
    $expiration_time = $row['expiration'];
    
    if ($expiration_time < date('Y-m-d H:i:s')) {
        header("Location: forgot_password.php?error=Token%20has%20expired");
        exit();
    }
}

// If the token is valid, show the password reset form
?>

<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <?php
        if (isset($_GET['error'])) {
            echo "<p style='color:red;'>" . $_GET['error'] . "</p>";
        }
    ?>
    
    <form action="reset_password_process.php" method="POST">
        <input type="password" name="new_password" placeholder="Enter new password" required><br><br>
        <input type="password" name="confirm_password" placeholder="Confirm new password" required><br><br>
        <input type="hidden" name="token" value="<?php echo $token; ?>">
        <input type="submit" value="Reset Password">
    </form>
</body>
</html>


<?php
include 'db_connection.php'; // Include your database connection file

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $token = mysqli_real_escape_string($conn, $_POST['token']);
    $new_password = mysqli_real_escape_string($conn, $_POST['new_password']);
    $confirm_password = mysqli_real_escape_string($conn, $_POST['confirm_password']);

    // Check if the passwords match
    if ($new_password != $confirm_password) {
        header("Location: reset_password.php?token=$token&error=Passwords%20do%20not%20match");
        exit();
    }

    // Validate token again
    $sql = "SELECT * FROM password_reset WHERE token = '$token'";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) == 0) {
        header("Location: forgot_password.php?error=Invalid%20link");
        exit();
    } else {
        // Get the user data
        $row = mysqli_fetch_assoc($result);
        $expiration_time = $row['expiration'];
        
        if ($expiration_time < date('Y-m-d H:i:s')) {
            header("Location: forgot_password.php?error=Token%20has%20expired");
            exit();
        }
    }

    // Update the password
    $user_id = $row['user_id'];
    $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);
    
    $sql = "UPDATE users SET password = '$hashed_password' WHERE id = '$user_id'";
    if (mysqli_query($conn, $sql)) {
        // Clear the reset token
        $sql_delete = "DELETE FROM password_reset WHERE token = '$token'";
        mysqli_query($conn, $sql_delete);
        
        header("Location: login.php?success=Password%20reset%20successful");
        exit();
    } else {
        echo "Error updating password: " . mysqli_error($conn);
    }
}
?>


<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <h2>Forgot Password</h2>
    <?php
    // Show any error messages here
    if (isset($_GET['error'])) {
        echo "<p style='color:red'>" . $_GET['error'] . "</p>";
    }
    ?>

    <form action="forgot_password.php" method="post">
        <label for="email">Email:</label><br>
        <input type="email" id="email" name="email" required><br><br>
        <input type="submit" value="Reset Password">
    </form>
</body>
</html>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'mydatabase';

// Connect to database
$conn = new mysqli($host, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {

    // Sanitize email input
    $email = filter_var($_POST['email'], FILTER_SANITIZE_EMAIL);

    // Validate email format
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        header("Location: forgot_password_form.php?error=Invalid+Email+Format");
        exit();
    }

    // Check if email exists in database
    $sql = "SELECT id FROM users WHERE email = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("s", $email);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows == 0) {
        header("Location: forgot_password_form.php?error=Email+not+found");
        exit();
    }

    // Generate reset token
    $reset_token = md5(uniqid(rand(), true));
    $expires = date('Y-m-d H:i:s', time() + 3600); // Token expires in 1 hour

    // Update the database with the reset token and expiration time
    $update_sql = "UPDATE users SET reset_token = ?, reset_expires = ? WHERE email = ?";
    $update_stmt = $conn->prepare($update_sql);
    $update_stmt->bind_param("sss", $reset_token, $expires, $email);
    $update_stmt->execute();

    // Close statements and connection
    $stmt->close();
    $update_stmt->close();
    $conn->close();

    // Send reset email
    $to = $email;
    $subject = "Password Reset Request";
    
    $message = "
        <html>
            <head>
                <title>Password Reset</title>
            </head>
            <body>
                <h2>Password Reset</h2>
                <p>Please click the following link to reset your password:</p>
                <a href='http://yourwebsite.com/reset_password.php?token=" . $reset_token . "'>Reset Password</a><br><br>
                <p>If you did not request a password reset, please ignore this email.</p>
                <p>This password reset link will expire in 1 hour.</p>
            </body>
        </html>
    ";
    
    // Additional headers
    $headers = "From: yourwebsite@example.com\r
";
    $headers .= "Reply-To: yourwebsite@example.com\r
";
    $headers .= "X-Mailer: PHP/" . phpversion();
    $headers .= "MIME-Version: 1.0\r
";
    $headers .= "Content-Type: text/html; charset=UTF-8\r
";

    // Send the email
    if (mail($to, $subject, $message, $headers)) {
        header("Location: forgot_password_form.php?error=Password+reset+link+sent+to+your+email");
    } else {
        header("Location: forgot_password_form.php?error=Failed+to+send+password+reset+email");
    }
}
?>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'mydatabase';

// Connect to database
$conn = new mysqli($host, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Get the token from URL
$token = isset($_GET['token']) ? $_GET['token'] : '';

if (empty($token)) {
    header("Location: forgot_password_form.php?error=Invalid+reset+link");
    exit();
}

// Check if the reset request is valid and not expired
$sql = "SELECT id, email FROM users WHERE reset_token = ? AND reset_expires > NOW()";
$stmt = $conn->prepare($sql);
$stmt->bind_param("s", $token);
$stmt->execute();
$result = $stmt->get_result();

if ($result->num_rows == 0) {
    header("Location: forgot_password_form.php?error=Invalid+or+expired+reset+link");
    exit();
}

$user_data = $result->fetch_assoc();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <h2>Reset Password</h2>
    
    <?php
    // Show any error messages here
    if (isset($_GET['error'])) {
        echo "<p style='color:red'>" . $_GET['error'] . "</p>";
    }
    ?>

    <form action="reset_password.php?token=<?php echo $token; ?>" method="post">
        <label for="new_password">New Password:</label><br>
        <input type="password" id="new_password" name="new_password" required><br><br>
        
        <label for="confirm_password">Confirm Password:</label><br>
        <input type="password" id="confirm_password" name="confirm_password" required><br><br>
        
        <input type="submit" value="Reset Password">
    </form>

<?php
if ($_SERVER["REQUEST_METHOD"] == "POST") {

    $new_password = $_POST['new_password'];
    $confirm_password = $_POST['confirm_password'];

    if ($new_password !== $confirm_password) {
        header("Location: reset_password.php?token=$token&error=Passwords+do+not+match");
        exit();
    }

    // Hash the new password
    $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);

    // Update the user's password and clear the reset token
    $update_sql = "UPDATE users SET password = ?, reset_token = NULL, reset_expires = NULL WHERE email = ?";
    $update_stmt = $conn->prepare($update_sql);
    $update_stmt->bind_param("ss", $hashed_password, $user_data['email']);
    
    if ($update_stmt->execute()) {
        header("Location: login.php?message=Password+reset+successful!+Please+login+with+your+new+password");
        exit();
    } else {
        header("Location: reset_password.php?token=$token&error=Error+updating+password");
    }

    $update_stmt->close();
}

$stmt->close();
$conn->close();
?>
</body>
</html>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'mydatabase';

// Connect to database
$conn = new mysqli($host, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Check if form is submitted
if (isset($_POST['email'])) {
    // Validate email
    $email = filter_var($_POST['email'], FILTER_VALIDATE_EMAIL);
    
    if (!$email) {
        die("Invalid email format");
    }

    // Prepare and execute the query to check if email exists
    $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
    $stmt->bind_param("s", $email);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows === 0) {
        die("No account found with this email");
    }

    // Generate a unique token
    $token = bin2hex(random_bytes(16));
    
    // Calculate the expiration time (e.g., 1 hour from now)
    $expiration_time = date('Y-m-d H:i:s', strtotime('+1 hour'));

    // Update the database with the token and expiration time
    $update_stmt = $conn->prepare("UPDATE users SET reset_token = ?, reset_expiry = ? WHERE email = ?");
    $update_stmt->bind_param("sss", $token, $expiration_time, $email);
    
    if (!$update_stmt->execute()) {
        die("An error occurred. Please try again.");
    }

    // Send the password reset email
    require 'PHPMailer/PHPMailer.php';
    require 'PHPMailer/Exception.php';
    require 'PHPMailer/OAuth.php';
    require 'PHPMailer/SMTP.php';

    $mail = new PHPMailer\PHPMailer\PHPMailer();

    try {
        // Server settings
        $mail->isSMTP();
        $mail->Host = 'smtp.example.com';
        $mail->SMTPAuth = true;
        $mail->Username = 'your-email@example.com';
        $mail->Password = 'your-password';
        $mail->Port = 587;
        
        // Enable encryption, if required
        $mail->SMTPSecure = PHPMailer\PHPMailer\PHPMailer::ENCRYPTION_STARTTLS;

        // Recipients
        $mail->setFrom('your-email@example.com', 'Your Name');
        $mail->addAddress($email);

        // Content
        $mail->isHTML(true);
        $mail->Subject = 'Password Reset Request';
        $mail->Body    = "Please click the following link to reset your password:<br><br>
                          http://yourdomain.com/reset-password.php?token=$token<br><br>
                          This link will expire in 1 hour.";

        $mail->send();
        
        // Redirect to a success page or show a message
        header("Location: forgot-password-success.php");
        exit();
    } catch (Exception $e) {
        echo "Message could not be sent. Mailer Error: {$mail->ErrorInfo}";
    }
}

// Close database connection
$conn->close();
?>


<?php
include('db_connect.php'); // Include your database connection file

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = htmlspecialchars($_POST['email']);

    // Sanitize input to prevent SQL injection
    $email = strip_tags($email);
    
    try {
        // Prepare the query
        $stmt = $pdo->prepare("SELECT * FROM users WHERE email = ?");
        $stmt->execute([$email]);
        
        // Check if user exists
        if ($stmt->rowCount() > 0) {
            // Generate a random token
            function generateResetToken($length = 40) {
                $token = bin2hex(random_bytes($length));
                return $token;
            }
            
            $reset_token = generateResetToken();
            
            // Update the user's reset token and timestamp in the database
            $updateStmt = $pdo->prepare("UPDATE users SET reset_token = ?, reset_time = ? WHERE email = ?");
            $updateStmt->execute([$reset_token, time(), $email]);
            
            // Send an email to the user with the reset link
            $to = $email;
            $subject = "Password Reset Request";
            $message = "
                <html>
                    <head>
                        <title>Password Reset</title>
                    </head>
                    <body>
                        <p>We received a password reset request. Click the link below to reset your password:</p>
                        <a href='http://yourwebsite.com/reset_password.php?token=" . $reset_token . "'>Reset Password</a>
                        <br><br>
                        <p>If you did not request this, please ignore this email.</p>
                    </body>
                </html>
            ";
            $headers = "MIME-Version: 1.0" . "\r
";
            $headers .= "Content-type:text/html;charset=UTF-8" . "\r
";
            $headers .= 'From: <your_email@example.com>' . "\r
";
            
            mail($to, $subject, $message, $headers);
            
            echo "An email has been sent to you with instructions on how to reset your password.";
        } else {
            echo "Email not found. Please check if you entered the correct email address.";
        }
    } catch(PDOException $e) {
        echo "Error: " . $e->getMessage();
    }
}
?>


<?php
include('db_connect.php'); // Include your database connection file

if (isset($_GET['token'])) {
    $token = $_GET['token'];
    
    try {
        // Check if the token exists and is valid
        $stmt = $pdo->prepare("SELECT * FROM users WHERE reset_token = ? AND reset_time > ?");
        $stmt->execute([$token, time() - 3600]); // Token expires after 1 hour
        
        if ($stmt->rowCount() == 0) {
            die("Invalid or expired token.");
        }
    } catch(PDOException $e) {
        echo "Error: " . $e->getMessage();
    }
    
    // Display the password reset form
    ?>
    <html>
    <head>
        <title>Reset Password</title>
    </head>
    <body>
        <h2>Reset Password</h2>
        <form action="update_password.php" method="post">
            <input type="hidden" name="token" value="<?php echo $token; ?>">
            <label for="new_password">New Password:</label><br>
            <input type="password" id="new_password" name="new_password"><br><br>
            <label for="confirm_password">Confirm Password:</label><br>
            <input type="password" id="confirm_password" name="confirm_password"><br><br>
            <input type="submit" value="Reset Password">
        </form>
    </body>
    </html>
    <?php
} else {
    die("No token provided.");
}
?>


<?php
include('db_connect.php'); // Include your database connection file

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $token = $_POST['token'];
    $new_password = htmlspecialchars($_POST['new_password']);
    $confirm_password = htmlspecialchars($_POST['confirm_password']);
    
    // Check if passwords match
    if ($new_password != $confirm_password) {
        die("Passwords do not match.");
    }
    
    try {
        // Verify the token exists and is valid
        $stmt = $pdo->prepare("SELECT * FROM users WHERE reset_token = ? AND reset_time > ?");
        $stmt->execute([$token, time() - 3600]);
        
        if ($stmt->rowCount() == 0) {
            die("Invalid or expired token.");
        }
        
        // Get user data
        $user = $stmt->fetch(PDO::FETCH_ASSOC);
        
        // Update the password
        $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);
        
        $updateStmt = $pdo->prepare("UPDATE users SET password = ?, reset_token = NULL WHERE id = ?");
        $updateStmt->execute([$hashed_password, $user['id']]);
        
        // Redirect to login page or show success message
        echo "Password has been successfully updated. <a href='login.php'>Click here to log in</a>";
    } catch(PDOException $e) {
        echo "Error: " . $e->getMessage();
    }
}
?>


<?php
try {
    $pdo = new PDO('mysql:host=localhost;dbname=your_database', 'username', 'password');
    $pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}
?>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$db_name = 'mydatabase';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $db_name);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to handle password reset request
function forgotPassword() {
    global $conn;

    // Check if form is submitted
    if (isset($_POST['submit'])) {
        $email = $_POST['email'];
        $username = $_POST['username'];

        // Validate inputs
        if (empty($email) && empty($username)) {
            echo "Please enter either your email or username.";
            return;
        }

        // Sanitize inputs to prevent SQL injection
        $email = mysqli_real_escape_string($conn, trim($email));
        $username = mysqli_real_escape_string($conn, trim($username));

        // Check if user exists with the provided email or username
        $query = "SELECT * FROM users WHERE email='$email' OR username='$username'";
        $result = mysqli_query($conn, $query);

        if (!$result) {
            die("Query failed: " . mysqli_error($conn));
        }

        // If user found
        if (mysqli_num_rows($result) == 1) {
            $row = mysqli_fetch_assoc($result);
            $user_id = $row['id'];

            // Generate a random token for password reset
            $token = bin2hex(random_bytes(32));
            
            // Store the token in database with an expiration time
            $expires = date('Y-m-d H:i:s', strtotime('+1 hour'));
            $query = "INSERT INTO password_resets (user_id, token, expires) 
                      VALUES ('$user_id', '$token', '$expires')";
            $result = mysqli_query($conn, $query);

            if (!$result) {
                die("Query failed: " . mysqli_error($conn));
            }

            // Send reset link to user's email
            $reset_link = "http://$_SERVER[HTTP_HOST]/reset-password.php?token=$token";
            $to = $email;
            $subject = "Password Reset Request";
            $message = "Please click the following link to reset your password:
$reset_link

This link will expire in 1 hour.";
            
            // Set headers
            $headers = "From: noreply@$_SERVER[HTTP_HOST]\r
";
            $headers .= "Reply-To: noreply@$_SERVER[HTTP_HOST]\r
";
            $headers .= "X-Mailer: PHP/" . phpversion();

            if (mail($to, $subject, $message, $headers)) {
                echo "A password reset link has been sent to your email address.";
            } else {
                echo "There was an error sending the email. Please try again later.";
            }
        } else {
            echo "No user found with that email or username.";
        }
    }
}

// Call the function
forgotPassword();

// Close database connection
mysqli_close($conn);
?>


<?php
session_start();
require_once 'db_connection.php'; // Include your database connection file

function sendResetPasswordEmail($email, $token) {
    $to = $email;
    $subject = "Password Reset Request";
    
    $message = "<html>
        <body>
            <h2>Password Reset</h2>
            <p>Please click the link below to reset your password:</p>
            <a href='http://example.com/reset_password.php?token=$token'>Reset Password</a>
            <br><br>
            <p>If you did not request a password reset, please ignore this email.</p>
        </body>
    </html>";
    
    $headers = "MIME-Version: 1.0" . "\r
";
    $headers .= "Content-type:text/html;charset=UTF-8" . "\r
";
    $headers .= "From: webmaster@example.com" . "\r
";
    
    mail($to, $subject, $message, $headers);
}

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    if (isset($_POST['email'])) {
        $email = mysqli_real_escape_string($conn, $_POST['email']);
        
        // Check if email exists in database
        $sql = "SELECT id FROM users WHERE email = '$email'";
        $result = mysqli_query($conn, $sql);
        
        if (mysqli_num_rows($result) > 0) {
            // Generate a random token
            $token = bin2hex(random_bytes(16));
            
            // Store the token in the database
            $expires = date('Y-m-d H:i:s', time() + 3600); // Token expires after 1 hour
            
            $sql = "INSERT INTO password_reset (email, token, expires) 
                    VALUES ('$email', '$token', '$expires')";
            mysqli_query($conn, $sql);
            
            // Send reset password email
            sendResetPasswordEmail($email, $token);
            
            echo "A password reset link has been sent to your email address.";
        } else {
            echo "Email not found in our database.";
        }
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <h2>Forgot Password</h2>
    
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <label for="email">Email:</label><br>
        <input type="email" id="email" name="email" required><br><br>
        <input type="submit" value="Reset Password">
    </form>
</body>
</html>


<?php
session_start();
require_once 'db_connection.php';

if (isset($_GET['token'])) {
    $token = mysqli_real_escape_string($conn, $_GET['token']);
    
    // Check if token exists and is valid
    $sql = "SELECT * FROM password_reset 
            WHERE token = '$token' AND expires > NOW()";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) == 1) {
        $row = mysqli_fetch_assoc($result);
        
        // Show reset form
        ?>
        <html>
        <head>
            <title>Reset Password</title>
        </head>
        <body>
            <h2>Reset Password</h2>
            
            <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
                <label for="new_password">New Password:</label><br>
                <input type="password" id="new_password" name="new_password" required><br><br>
                <input type="hidden" name="email" value="<?php echo $row['email']; ?>">
                <input type="submit" value="Change Password">
            </form>
        </body>
        </html>
        <?php
    } else {
        die("Invalid or expired token.");
    }
}

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    if (isset($_POST['new_password']) && isset($_POST['email'])) {
        $password = mysqli_real_escape_string($conn, $_POST['new_password']);
        $email = mysqli_real_escape_string($conn, $_POST['email']);
        
        // Update the user's password
        $sql = "UPDATE users 
                SET password = SHA1('$password') 
                WHERE email = '$email'";
        mysqli_query($conn, $sql);
        
        // Delete the reset token
        $sql = "DELETE FROM password_reset 
                WHERE email = '$email'";
        mysqli_query($conn, $sql);
        
        echo "Password has been successfully updated.";
    }
}
?>


<?php
require 'database_connection.php';

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = mysqli_real_escape_string($conn, $_POST['email']);
    
    // Check if email exists in the database
    $sql = "SELECT id FROM users WHERE email = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("s", $email);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows > 0) {
        // Generate reset token and expiration time
        $token = bin2hex(random_bytes(16));
        $expires = time() + 3600; // Token expires in 1 hour
        
        // Store the token in the database
        $sql = "INSERT INTO password_resets (user_id, token, expires) VALUES (?, ?, ?)";
        $stmt = $conn->prepare($sql);
        $row = $result->fetch_assoc();
        $stmt->bind_param("iss", $row['id'], $token, $expires);
        $stmt->execute();
        
        // Send reset email
        $reset_url = "http://your-site.com/reset_password.php?token=" . $token;
        $to = $email;
        $subject = "Password Reset Request";
        $message = "Click the following link to reset your password: 
" . $reset_url;
        
        mail($to, $subject, $message);
        
        // Redirect back to login page with success message
        header("Location: login.php?msg=Reset email sent");
        exit();
    } else {
        echo "Email not found in our records.";
    }
}
?>


<?php
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    require 'database_connection.php';
    
    $token = $_GET['token'];
    $new_password = password_hash($_POST['new_password'], PASSWORD_DEFAULT);
    
    // Check token validity and expiration
    $sql = "SELECT * FROM password_resets WHERE token = ? AND expires > ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("si", $token, time());
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows == 1) {
        // Update the user's password
        $row = $result->fetch_assoc();
        
        $sql = "UPDATE users SET password = ? WHERE id = ?";
        $stmt = $conn->prepare($sql);
        $stmt->bind_param("si", $new_password, $row['user_id']);
        $stmt->execute();
        
        // Delete the used token
        $sql = "DELETE FROM password_resets WHERE token = ?";
        $stmt = $conn->prepare($sql);
        $stmt->bind_param("s", $token);
        $stmt->execute();
        
        // Redirect back to login page with success message
        header("Location: login.php?msg=Password reset successful");
        exit();
    } else {
        die("Invalid or expired token. Please request a new reset.");
    }
}
?>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'mydatabase';
$username = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get email from form
    $email = $_POST['email'];

    // Check if email exists in database
    $stmt = $conn->prepare("SELECT * FROM users WHERE email = :email");
    $stmt->execute(['email' => $email]);
    $user = $stmt->fetch(PDO::FETCH_ASSOC);

    if ($user) {
        // Generate random token
        $token = bin2hex(random_bytes(32));

        // Store token in database with expiration time (e.g., 1 hour)
        $expiration_time = date('Y-m-d H:i:s', strtotime('+1 hour'));
        
        $stmt = $conn->prepare("UPDATE users SET reset_token = :token, reset_expiry = :expiry WHERE email = :email");
        $stmt->execute([
            'token' => $token,
            'expiry' => $expiration_time,
            'email' => $email
        ]);

        // Send password reset email
        $to = $email;
        $subject = "Password Reset Request";
        
        $message = "<html>
                    <head>
                        <title>Password Reset</title>
                    </head>
                    <body>
                        <h2>Password Reset Request</h2>
                        <p>Hello,</p>
                        <p>We received a password reset request for your account. Click the link below to reset your password:</p>
                        <a href='http://example.com/reset-password.php?token=$token'>Reset Password</a>
                        <p>If you did not request this password reset, please ignore this email.</p>
                        <p>This link will expire in 1 hour.</p>
                    </body>
                   </html>";
        
        $headers = "MIME-Version: 1.0" . "\r
";
        $headers .= "Content-type:text/html;charset=UTF-8" . "\r
";
        $headers .= "From: example@example.com" . "\r
";

        mail($to, $subject, $message, $headers);
        
        echo "Password reset email has been sent to your email address.";
    } else {
        echo "Email not found in our records. Please try again.";
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <h2>Forgot Password</h2>
    <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
        <label>Email:</label><br>
        <input type="email" name="email" required><br><br>
        <input type="submit" value="Request Password Reset">
    </form>
</body>
</html>


<?php
session_start();

if ($_SERVER["REQUEST_METHOD"] == "GET") {
    $token = $_GET['token'];

    // Check if token exists and is valid
    $stmt = $conn->prepare("SELECT * FROM users WHERE reset_token = :token AND reset_expiry > NOW()");
    $stmt->execute(['token' => $token]);
    $user = $stmt->fetch(PDO::FETCH_ASSOC);

    if ($user) {
        $_SESSION['reset_token'] = $token;
        // Display password reset form
        ?>
        <!DOCTYPE html>
        <html>
        <head>
            <title>Reset Password</title>
        </head>
        <body>
            <h2>Reset Password</h2>
            <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
                <label>New Password:</label><br>
                <input type="password" name="new_password" required><br><br>
                <label>Confirm New Password:</label><br>
                <input type="password" name="confirm_password" required><br><br>
                <input type="submit" value="Reset Password">
            </form>
        </body>
        </html>
        <?php
    } else {
        echo "Invalid or expired token. Please request a new password reset.";
        // Redirect to forgot password page after some time
        header("Refresh: 3; url=forgot-password.php");
    }
}

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    if (isset($_SESSION['reset_token'])) {
        $token = $_SESSION['reset_token'];
        
        $new_password = $_POST['new_password'];
        $confirm_password = $_POST['confirm_password'];

        if ($new_password == $confirm_password) {
            // Hash the new password
            $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);

            // Update password in database
            $stmt = $conn->prepare("UPDATE users SET password = :password, reset_token = NULL, reset_expiry = NULL WHERE reset_token = :token");
            $stmt->execute([
                'password' => $hashed_password,
                'token' => $token
            ]);

            // Clear session token and redirect to login page
            unset($_SESSION['reset_token']);
            header("Location: login.php");
        } else {
            echo "Passwords do not match. Please try again.";
        }
    } else {
        echo "Invalid request. Please start over.";
    }
}
?>


<?php
session_start();
require_once 'db_connection.php';

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = filter_var($_POST['email'], FILTER_SANITIZE_EMAIL);
    
    if (filter_var($email, FILTER_VALIDATE_EMAIL)) {
        // Check if email exists in the database
        $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
        $stmt->bind_param("s", $email);
        $stmt->execute();
        
        if ($stmt->fetch()) {
            $token = bin2hex(random_bytes(32));
            $expires = date('Y-m-d H:i:s', strtotime('+1 hour'));
            
            // Store token and expiration
            $resetStmt = $conn->prepare("INSERT INTO password_reset (user_id, token, expires) VALUES (?, ?, ?)");
            $resetStmt->bind_param("iss", $userId, $token, $expires);
            $resetStmt->execute();
            
            // Send reset email
            $subject = 'Password Reset Request';
            $message = "Please click the link to reset your password:

http://example.com/reset_password.php?token=$token";
            $headers = 'From: no-reply@example.com' . "\r
" .
                      'Reply-To: no-reply@example.com' . "\r
" .
                      'X-Mailer: PHP/' . phpversion();
            
            mail($email, $subject, $message, $headers);
            
            echo "An email has been sent with instructions to reset your password.";
        } else {
            echo "Email does not exist in our records.";
        }
    } else {
        echo "Please enter a valid email address.";
    }
}
?>


<?php
session_start();
require_once 'db_connection.php';

$token = isset($_GET['token']) ? $_GET['token'] : '';
$currentDate = date('Y-m-d H:i:s');

if ($token) {
    $stmt = $conn->prepare("SELECT user_id FROM password_reset WHERE token = ? AND expires > ?");
    $stmt->bind_param("ss", $token, $currentDate);
    $stmt->execute();
    
    if ($stmt->fetch()) {
        if ($_SERVER["REQUEST_METHOD"] == "POST") {
            $newPassword = $_POST['password'];
            $confirmPassword = $_POST['confirm_password'];
            
            if ($newPassword === $confirmPassword) {
                $hashedPassword = password_hash($newPassword, PASSWORD_DEFAULT);
                
                // Update user's password
                $updateStmt = $conn->prepare("UPDATE users SET password = ? WHERE id = ?");
                $updateStmt->bind_param("si", $hashedPassword, $userId);
                $updateStmt->execute();
                
                // Invalidate token
                $deleteStmt = $conn->prepare("DELETE FROM password_reset WHERE token = ?");
                $deleteStmt->bind_param("s", $token);
                $deleteStmt->execute();
                
                echo "Password reset successful!";
            } else {
                echo "Passwords do not match.";
            }
        } else {
            // Display password reset form
            ?>
            <form method="post">
                New Password: <input type="password" name="password"><br>
                Confirm Password: <input type="password" name="confirm_password"><br>
                <input type="submit" value="Reset Password">
            </form>
            <?php
        }
    } else {
        echo "Invalid or expired token.";
    }
} else {
    echo "No token provided.";
}
?>


<?php
session_start();

// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'mydatabase';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Check if form is submitted
if (isset($_POST['email'])) {
    // Sanitize input
    $email = htmlspecialchars($_POST['email']);

    // Query to check if email exists
    $stmt = $conn->prepare("SELECT id, reset_token FROM users WHERE email = ?");
    $stmt->bind_param("s", $email);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows == 0) {
        // Email not found
        $_SESSION['message'] = "Email address not registered!";
        header('Location: forgot_password.html');
        exit();
    } else {
        // Generate a unique reset token
        $token = bin2hex(random_bytes(16));
        
        // Update the user's reset token and expiration time in database
        $stmt = $conn->prepare("UPDATE users SET reset_token = ?, reset_expires = NOW() + INTERVAL 1 HOUR WHERE email = ?");
        $stmt->bind_param("ss", $token, $email);
        $stmt->execute();

        // Send password reset link to user's email
        $to = $email;
        $subject = "Password Reset Request";
        $message = "
            <html>
                <head>
                    <title>Password Reset</title>
                </head>
                <body>
                    <h2>Password Reset</h2>
                    <p>Please click the following link to reset your password:</p>
                    <a href='http://localhost/reset_password.php?token=$token'>Reset Password</a><br><br>
                    <p>If you did not request a password reset, please ignore this email.</p>
                    <p>This password reset link will expire in 1 hour.</p>
                </body>
            </html>
        ";
        $headers = "MIME-Version: 1.0\r
";
        $headers .= "Content-Type: text/html; charset=UTF-8\r
";

        mail($to, $subject, $message, $headers);

        $_SESSION['message'] = "A password reset link has been sent to your email!";
        header('Location: login.php');
        exit();
    }
}
?>


<?php
session_start();

// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'mydatabase';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Check if token is provided
if (!isset($_GET['token'])) {
    $_SESSION['message'] = "Invalid reset link!";
    header('Location: forgot_password.html');
    exit();
}

$token = $_GET['token'];

// Verify the reset token and check its expiration
$stmt = $conn->prepare("SELECT id, reset_token FROM users WHERE reset_token = ? AND reset_expires > NOW()");
$stmt->bind_param("s", $token);
$stmt->execute();
$result = $stmt->get_result();

if ($result->num_rows == 0) {
    $_SESSION['message'] = "Invalid or expired reset link!";
    header('Location: forgot_password.html');
    exit();
}

// If token is valid, show password reset form
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $password = htmlspecialchars($_POST['password']);
    $confirm_password = htmlspecialchars($_POST['confirm_password']);

    if ($password != $confirm_password) {
        $_SESSION['message'] = "Passwords do not match!";
        header('Location: reset_password.php?token='.$token);
        exit();
    }

    // Update the user's password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

    $stmt = $conn->prepare("UPDATE users SET password = ?, reset_token = NULL WHERE reset_token = ?");
    $stmt->bind_param("ss", $hashed_password, $token);
    $stmt->execute();

    $_SESSION['message'] = "Password has been reset successfully!";
    header('Location: login.php');
    exit();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <?php
    if (isset($_SESSION['message'])) {
        echo "<p>" . $_SESSION['message'] . "</p>";
        unset($_SESSION['message']);
    }
    ?>
    <h2>Reset Password</h2>
    <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
        <input type="hidden" name="token" value="<?php echo $token; ?>">
        <label for="password">New Password:</label><br>
        <input type="password" id="password" name="password" required><br><br>
        <label for="confirm_password">Confirm Password:</label><br>
        <input type="password" id="confirm_password" name="confirm_password" required><br><br>
        <input type="submit" value="Reset Password">
    </form>
</body>
</html>


<?php
session_start();

if (isset($_SESSION['message'])) {
    echo "<p>" . $_SESSION['message'] . "</p>";
    unset($_SESSION['message']);
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login</title>
</head>
<body>
    <h2>Login</h2>
    <form action="validate_login.php" method="post">
        <label for="email">Email:</label><br>
        <input type="text" id="email" name="email"><br><br>
        <label for="password">Password:</label><br>
        <input type="password" id="password" name="password"><br><br>
        <input type="submit" value="Login">
    </form>
    <a href="forgot_password.html">Forgot Password?</a>
</body>
</html>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$db_name = 'mydatabase';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $db_name);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Start session
session_start();

// Check if form is submitted
if (isset($_POST['reset'])) {
    // Sanitize input
    $email = htmlspecialchars(trim($_POST['email']));
    
    // Check if email is not empty
    if ($email == "") {
        echo "Please enter your email address.";
    } else {
        // Check if user exists with this email
        $sql = "SELECT * FROM users WHERE email = '$email'";
        $result = mysqli_query($conn, $sql);
        
        if (mysqli_num_rows($result) > 0) {
            // Generate reset token
            $token = bin2hex(random_bytes(16));
            
            // Update database with reset token and expiration time
            $expires = date('Y-m-d H:i:s', strtotime('+1 hour'));
            $sql = "UPDATE users SET reset_token = '$token', reset_expires = '$expires' WHERE email = '$email'";
            mysqli_query($conn, $sql);
            
            // Send reset password link to user's email
            $reset_link = "http://$_SERVER[HTTP_HOST]/reset-password.php?token=$token";
            $to = $email;
            $subject = "Password Reset Request";
            $message = "Please click the following link to reset your password:
$reset_link
This link will expire in 1 hour.";
            
            // Set mail headers
            $headers = 'From: noreply@yourdomain.com' . "\r
" .
                        'Reply-To: noreply@yourdomain.com' . "\r
" .
                        'X-Mailer: PHP/' . phpversion();
                        
            if (mail($to, $subject, $message, $headers)) {
                echo "A password reset link has been sent to your email.";
            } else {
                echo "Failed to send reset link. Please try again later.";
            }
        } else {
            echo "No account found with this email address.";
        }
    }
}
?>

<!-- Forgot Password Form -->
<form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
    <input type="email" name="email" placeholder="Enter your email/username" required>
    <button type="submit" name="reset">Reset Password</button>
</form>

// Reset Password Page (reset-password.php)
<?php
session_start();

// Check if token is provided and valid
if (!isset($_GET['token']) || empty($_GET['token'])) {
    die("Invalid reset link.");
}

$conn = mysqli_connect($host, $username, $password, $db_name);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Get token from URL
$token = $_GET['token'];

// Check if token exists and is not expired
$sql = "SELECT * FROM users WHERE reset_token = '$token' AND reset_expires > NOW()";
$result = mysqli_query($conn, $sql);

if (mysqli_num_rows($result) == 0) {
    die("Reset link has expired or is invalid.");
}

// Check if form is submitted
if (isset($_POST['new_password'])) {
    // Sanitize input
    $new_password = htmlspecialchars(trim($_POST['new_password']));
    
    if ($new_password == "") {
        echo "Please enter a new password.";
    } else {
        // Update password in database
        $sql = "UPDATE users SET password = '$new_password', reset_token = NULL, reset_expires = NULL WHERE reset_token = '$token'";
        mysqli_query($conn, $sql);
        
        echo "Password has been successfully updated!";
    }
}
?>

<!-- Reset Password Form -->
<form action="<?php echo $_SERVER['PHP_SELF']; ?>?token=<?php echo $token; ?>" method="post">
    <input type="password" name="new_password" placeholder="Enter new password" required>
    <button type="submit">Change Password</button>
</form>



<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <h2>Forgot Password</h2>
    <?php
    if (isset($_GET['error'])) {
        echo "<p style='color:red;'>".$_GET['error']."</p>";
    }
    ?>
    <form action="forgot_password_handler.php" method="post">
        Email: <input type="email" name="email" required><br>
        <input type="submit" value="Reset Password">
    </form>
</body>
</html>


<?php
session_start();
include('db_connection.php');

$email = $_POST['email'];
$check_email = "SELECT id FROM users WHERE email='$email'";
$result = mysqli_query($conn, $check_email);

if (mysqli_num_rows($result) == 0) {
    header("Location: forgot_password.php?error=Email%20not%20found.");
} else {
    // Generate token
    $token = bin2hex(random_bytes(16));
    // Expiry time: current time + 30 minutes
    $expiry_time = date('Y-m-d H:i:s', strtotime('+30 minutes'));
    
    // Insert into password_resets table
    $insert_token = "INSERT INTO password_resets (user_id, token, created_at) 
                    VALUES ('$email', '$token', '$expiry_time')";
    mysqli_query($conn, $insert_token);
    
    // Send email
    $subject = 'Password Reset Request';
    $message = "Click the link to reset your password: http://example.com/reset_password.php?token=$token";
    $headers = 'From: yoursite@example.com' . "\r
" .
               'Reply-To: yoursite@example.com' . "\r
" .
               'X-Mailer: PHP/' . phpversion();
    
    mail($email, $subject, $message, $headers);
    
    header("Location: forgot_password.php?error=Password%20reset%20link%20sent.");
}
?>


<?php
session_start();
include('db_connection.php');

if (isset($_GET['token'])) {
    $token = $_GET['token'];
    
    // Check if token exists and is valid
    $check_token = "SELECT user_id, created_at 
                   FROM password_resets 
                   WHERE token='$token'";
    $result = mysqli_query($conn, $check_token);
    
    if (mysqli_num_rows($result) == 0) {
        header("Location: forgot_password.php?error=Invalid%20or%20expired%20link.");
        exit();
    }
    
    $row = mysqli_fetch_assoc($result);
    $user_id = $row['user_id'];
    $created_at = $row['created_at'];
    
    // Check if token has expired
    $current_time = date('Y-m-d H:i:s');
    if ($current_time > $created_at) {
        header("Location: forgot_password.php?error=Password%20reset%20link%20expired.");
        exit();
    }
} else {
    // No token provided, redirect to forgot password
    header("Location: forgot_password.php");
    exit();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <?php if (isset($_GET['error'])) { ?>
        <p style="color:red;"><?php echo $_GET['error']; ?></p>
    <?php } else { ?>
        <h2>Reset Password</h2>
        <form action="reset_password_handler.php" method="post">
            New Password: <input type="password" name="new_password" required><br>
            Confirm Password: <input type="password" name="confirm_password" required><br>
            <input type="hidden" name="token" value="<?php echo $token; ?>">
            <input type="submit" value="Reset">
        </form>
    <?php } ?>
</body>
</html>


<?php
session_start();
include('db_connection.php');

if (isset($_POST['token']) && isset($_POST['new_password']) && isset($_POST['confirm_password'])) {
    $token = $_POST['token'];
    $new_password = $_POST['new_password'];
    $confirm_password = $_POST['confirm_password'];
    
    if ($new_password != $confirm_password) {
        header("Location: reset_password.php?token=$token&error=Passwords%20do%20not%20match.");
        exit();
    }
    
    // Hash the password
    $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);
    
    // Update user's password
    $update_query = "UPDATE users 
                    SET password='$hashed_password' 
                    WHERE id IN (SELECT user_id FROM password_resets WHERE token='$token')";
    mysqli_query($conn, $update_query);
    
    // Delete the token from password_resets table
    $delete_token = "DELETE FROM password_resets WHERE token='$token'";
    mysqli_query($conn, $delete_token);
    
    header("Location: login.php?success=Password%20reset%20successful.");
} else {
    header("Location: reset_password.php?error=Invalid%20request.");
}
?>


<?php
session_start();
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$db_name = 'your_database';

// Create database connection
$conn = mysqli_connect($host, $username, $password, $db_name);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// If form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    if (isset($_POST['email'])) {
        // Get email from POST request and sanitize it
        $email = htmlspecialchars(trim($_POST['email']));

        // Check if email exists in the database
        $query = "SELECT * FROM users WHERE email = '$email'";
        $result = mysqli_query($conn, $query);

        if (mysqli_num_rows($result) == 0) {
            // Email not found in database
            echo "<script>alert('Email not registered!'); window.location.href='forgot_password.php';</script>";
            exit();
        }

        // Generate a random token for password reset
        $token = md5(time() . rand());
        $timestamp = time();

        // Update the user's record with the new token and timestamp
        $updateQuery = "UPDATE users SET reset_token = '$token', reset_timestamp = '$timestamp' WHERE email = '$email'";
        if (mysqli_query($conn, $updateQuery)) {
            // Send password reset email to user
            $subject = "Password Reset Request";
            $message = "Please click the following link to reset your password: 

";
            $message .= "http://yourwebsite.com/reset_password.php?token=" . $token;
            $headers = "From: yourname@yourdomain.com";

            if (mail($email, $subject, $message, $headers)) {
                // Email sent successfully
                echo "<script>alert('Password reset email has been sent to your email address!'); window.location.href='forgot_password.php';</script>";
            } else {
                // Error sending email
                echo "<script>alert('Error sending password reset email. Please try again later.'); window.location.href='forgot_password.php';</script>";
            }
        } else {
            // Error updating database
            echo "Error: " . $updateQuery . "<br>" . mysqli_error($conn);
        }
    }
}

// Close database connection
mysqli_close($conn);
?>


<?php
session_start();
// Database configuration (same as before)
$host = 'localhost';
$username = 'root';
$password = '';
$db_name = 'your_database';

$conn = mysqli_connect($host, $username, $password, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

if (isset($_GET['token'])) {
    // Check if token exists and is valid
    $token = htmlspecialchars(trim($_GET['token']));

    // Check if token has expired (e.g., after 1 hour)
    $timestamp = time();
    $expiration_time = $timestamp - 3600; // 1 hour ago

    $query = "SELECT * FROM users WHERE reset_token = '$token' AND reset_timestamp > '$expiration_time'";
    $result = mysqli_query($conn, $query);

    if (mysqli_num_rows($result) == 1) {
        // Token is valid
        if ($_SERVER["REQUEST_METHOD"] == "POST") {
            // Get new password from POST request and sanitize it
            $new_password = htmlspecialchars(trim($_POST['password']));
            $confirm_password = htmlspecialchars(trim($_POST['confirm_password']));

            if ($new_password == $confirm_password) {
                // Update the user's password
                $updateQuery = "UPDATE users SET password = '" . md5($new_password) . "', reset_token = NULL, reset_timestamp = NULL WHERE reset_token = '$token'";
                
                if (mysqli_query($conn, $updateQuery)) {
                    echo "<script>alert('Password updated successfully!'); window.location.href='login.php';</script>";
                } else {
                    echo "Error updating password: " . mysqli_error($conn);
                }
            } else {
                echo "<script>alert('Passwords do not match!');</script>";
            }
        }

        // Display password reset form
        ?>
        <h2>Reset Password</h2>
        <form action="reset_password.php?token=<?php echo $token; ?>" method="post">
            New Password: <input type="password" name="password" required><br>
            Confirm Password: <input type="password" name="confirm_password" required><br>
            <input type="submit" value="Reset Password">
        </form>
        <?php
    } else {
        // Invalid or expired token
        echo "<script>alert('Invalid or expired reset link!'); window.location.href='forgot_password.php';</script>";
    }
} else {
    // No token provided
    echo "<script>alert('No reset link provided!'); window.location.href='forgot_password.php';</script>";
}

mysqli_close($conn);
?>


<?php
// Include database configuration file
include 'db_config.php';

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = $_POST['email'];

    // Check if email exists in the database
    $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
    $stmt->bind_param('s', $email);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        // Generate a unique token
        $token = md5(rand(1000, 9999));
        
        // Insert the token into the database
        $stmt = $conn->prepare("INSERT INTO password_reset (user_id, token, created_at) 
                              VALUES (?, ?, NOW())");
        $stmt->bind_param('is', $result->fetch_assoc()['id'], $token);
        $stmt->execute();

        // Send email to user with reset link
        $to = $email;
        $subject = "Password Reset Request";
        $message = "Please click the following link to reset your password: http://example.com/reset_password.php?token=$token";
        
        // Set up mail headers
        $headers = "From: admin@example.com\r
";
        $headers .= "Reply-To: admin@example.com\r
";
        $headers .= "X-Mailer: PHP/" . phpversion();

        // Send email
        if (mail($to, $subject, $message, $headers)) {
            echo "An email has been sent to you with instructions on how to reset your password.";
        } else {
            echo "There was an error sending the email. Please try again later.";
        }
    } else {
        echo "Email address not found in our records.";
    }
}
$conn->close();
?>


<?php
// Include database configuration file
include 'db_config.php';

if ($_SERVER["REQUEST_METHOD"] == "GET") {
    $token = $_GET['token'];

    // Check if token exists and is valid
    $stmt = $conn->prepare("SELECT * FROM password_reset 
                           WHERE token = ? AND created_at > NOW() - INTERVAL 1 HOUR");
    $stmt->bind_param('s', $token);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        // Show reset form
        ?>
        <html>
            <body>
                <h2>Reset Password</h2>
                <form action="reset_password.php" method="post">
                    <label for="password">New Password:</label><br>
                    <input type="password" id="password" name="password"><br><br>
                    <input type="hidden" name="token" value="<?php echo $token; ?>">
                    <input type="submit" value="Reset Password">
                </form>
            </body>
        </html>
        <?php
    } else {
        // Token invalid or expired
        die("Invalid or expired token. Please try requesting a password reset again.");
    }
} elseif ($_SERVER["REQUEST_METHOD"] == "POST") {
    $token = $_POST['token'];
    $password = $_POST['password'];

    // Check if token exists and is valid
    $stmt = $conn->prepare("SELECT * FROM password_reset 
                           WHERE token = ? AND created_at > NOW() - INTERVAL 1 HOUR");
    $stmt->bind_param('s', $token);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        // Update user's password
        $row = $result->fetch_assoc();
        
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);
        
        $update_stmt = $conn->prepare("UPDATE users 
                                      SET password = ? 
                                      WHERE id = ?");
        $update_stmt->bind_param('si', $hashed_password, $row['user_id']);
        $update_stmt->execute();

        // Delete the token
        $delete_stmt = $conn->prepare("DELETE FROM password_reset WHERE token = ?");
        $delete_stmt->bind_param('s', $token);
        $delete_stmt->execute();

        echo "Your password has been reset successfully!";
    } else {
        die("Invalid or expired token. Please try requesting a password reset again.");
    }
}
$conn->close();
?>


<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <h2>Forgot Password</h2>
    <?php
        if (isset($_GET['error'])) {
            echo "<p style='color:red;'>".$_GET['error']."</p>";
        }
    ?>
    <form action="reset-password.php" method="post">
        <input type="email" name="email" placeholder="Enter your email" required><br>
        <button type="submit">Reset Password</button>
    </form>
</body>
</html>


<?php
require_once 'db-connection.php';

if (isset($_POST['email'])) {
    $email = trim($_POST['email']);
    
    // Validate email
    if (empty($email) || !filter_var($email, FILTER_VALIDATE_EMAIL)) {
        header("Location: reset-password-form.php?error=Invalid%20email%20format");
        exit();
    }

    // Check if email exists in database
    $sql = "SELECT id FROM users WHERE email = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("s", $email);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows === 0) {
        header("Location: reset-password-form.php?error=No%20account%20found%20with%20this%20email");
        exit();
    }

    // Generate random token
    $token = bin2hex(random_bytes(16));
    $expires = date('Y-m-d H:i:s', time() + 3600); // Token expires after 1 hour

    // Update database with token and expiration
    $sql = "UPDATE users SET reset_token = ?, reset_expires = ? WHERE email = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("sss", $token, $expires, $email);
    $stmt->execute();

    // Send email with reset link
    $to = $email;
    $subject = "Password Reset Request";
    $message = "
        <html>
            <body>
                <h2>Password Reset</h2>
                <p>Please click the following link to reset your password:</p>
                <a href='http://localhost/reset-password.php?token=$token'>Reset Password</a><br><br>
                <small>If you didn't request this password reset, please ignore this email.</small>
            </body>
        </html>
    ";
    $headers = "MIME-Version: 1.0" . "\r
";
    $headers .= "Content-type:text/html;charset=UTF-8" . "\r
";
    $headers .= "From: <your_email@example.com>" . "\r
";

    mail($to, $subject, $message, $headers);

    // Redirect back to login page with success message
    header("Location: login.php?message=Password%20reset%20link%20sent%20to%20your%20email");
    exit();
}
?>


<?php
session_start();
require_once 'db-connection.php';

if (isset($_GET['token'])) {
    $token = trim($_GET['token']);
    
    // Check if token exists in database and is not expired
    $sql = "SELECT id, email FROM users WHERE reset_token = ? AND reset_expires > NOW()";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("s", $token);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows === 0) {
        die("Invalid or expired token. Please request a new password reset.");
        header("refresh:5; url=reset-password-form.php");
        exit();
    }

    // Store email in session for later use
    $user = $result->fetch_assoc();
    $_SESSION['email'] = $user['email'];
    $_SESSION['token'] = $token;
} else {
    die("No token provided.");
}

if (isset($_POST['password'])) {
    if (!isset($_SESSION['email']) || !isset($_SESSION['token'])) {
        die("Session expired. Please request a new password reset.");
    }

    $password = trim($_POST['password']);
    $confirm_password = trim($_POST['confirm_password']);

    // Validate password
    if ($password !== $confirm_password) {
        die("Passwords do not match. Please try again.");
        header("refresh:2; url=".$_SERVER['PHP_SELF']."?token=".$_SESSION['token']);
        exit();
    }

    if (strlen($password) < 8) {
        die("Password must be at least 8 characters long.");
        header("refresh:2; url=".$_SERVER['PHP_SELF']."?token=".$_SESSION['token']);
        exit();
    }

    // Update password in database
    $email = $_SESSION['email'];
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);
    
    $sql = "UPDATE users SET password = ?, reset_token = NULL WHERE email = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("ss", $hashed_password, $email);
    $stmt->execute();

    // Clear session variables
    unset($_SESSION['email']);
    unset($_SESSION['token']);

    header("Location: login.php?message=Password%20reset%20successful");
    exit();
}

?>
<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <h2>Reset Password</h2>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>?token=<?php echo $token; ?>" method="post">
        New Password: <input type="password" name="password" required><br>
        Confirm Password: <input type="password" name="confirm_password" required><br>
        <button type="submit">Reset</button>
    </form>
</body>
</html>


<?php
session_start();
include('db_connection.php');

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $email = $_POST['email'];
    
    // Sanitize email input
    $email = filter_var($email, FILTER_SANITIZE_EMAIL);
    
    try {
        $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
        $stmt->execute([$email]);
        
        if ($stmt->rowCount() > 0) {
            // Generate reset token and expiry time
            $token = bin2hex(random_bytes(32));
            $expiry = date('Y-m-d H:i:s', strtotime('+1 hour'));
            
            // Update the user's record with the new token and expiry
            $updateStmt = $conn->prepare("UPDATE users SET reset_token = ?, reset_expiry = ? WHERE email = ?");
            $updateStmt->execute([$token, $expiry, $email]);
            
            // Send password reset email
            send_reset_email($email, $token);
            
            // Redirect to success page or show message
            header('Location: reset_link_sent.php');
            exit();
        } else {
            // Email not found in database
            $_SESSION['error'] = "Email address not registered.";
            header('Location: forgot_password_form.php');
            exit();
        }
    } catch (PDOException $e) {
        die("Database error: " . $e->getMessage());
    }
}
?>


function send_reset_email($email, $token) {
    $to = $email;
    $subject = "Password Reset Request";
    
    // Create reset URL (ensure you set the correct domain)
    $resetUrl = 'http://yourdomain.com/reset_password.php?token=' . $token;
    
    $message = "
        <html>
        <body>
            <h2>Password Reset</h2>
            <p>We received a request to reset your password. Click the link below to reset it:</p>
            <a href='$resetUrl'>Reset Password</a><br><br>
            <small>If you didn't request this, please ignore this email.</small>
        </body>
        </html>
    ";
    
    // Set headers for HTML email
    $headers = "MIME-Version: 1.0" . "\r
";
    $headers .= "Content-type:text/html;charset=UTF-8" . "\r
";
    $headers .= "From: <your_email@example.com>" . "\r
";
    
    mail($to, $subject, $message, $headers);
}


<?php
session_start();
include('db_connection.php');

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $token = $_SESSION['reset_token'];
    $new_password = $_POST['new_password'];
    $confirm_password = $_POST['confirm_password'];
    
    if ($new_password != $confirm_password) {
        $_SESSION['error'] = "Passwords do not match.";
        header('Location: reset_password_form.php');
        exit();
    }
    
    try {
        // Verify token and expiry
        $stmt = $conn->prepare("SELECT id, email FROM users WHERE reset_token = ? AND reset_expiry > NOW()");
        $stmt->execute([$token]);
        
        if ($stmt->rowCount() == 1) {
            // Update password
            $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);
            
            $updateStmt = $conn->prepare("UPDATE users SET password = ?, reset_token = null, reset_expiry = null WHERE email = ?");
            $updateStmt->execute([$hashed_password, $email]);
            
            $_SESSION['success'] = "Password has been updated successfully.";
            header('Location: login.php');
            exit();
        } else {
            // Invalid or expired token
            $_SESSION['error'] = "Invalid or expired reset link. Please request a new password reset.";
            header('Location: forgot_password_form.php');
            exit();
        }
    } catch (PDOException $e) {
        die("Database error: " . $e->getMessage());
    }
}
?>


<?php
// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'your_database';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Check if form is submitted
if (isset($_POST['submit'])) {
    $email = $_POST['email'];
    
    // Validate input
    if (empty($email)) {
        echo "<p class='error'>Please enter your email address.</p>";
    } else {
        // Check if email exists in database
        $sql = "SELECT * FROM users WHERE email='" . mysqli_real_escape_string($conn, $email) . "'";
        $result = mysqli_query($conn, $sql);
        
        if (mysqli_num_rows($result) == 0) {
            echo "<p class='error'>Email address not found.</p>";
        } else {
            // Generate a random token
            $token = bin2hex(openssl_random_pseudo_bytes(16));
            
            // Update the token in database
            $sql = "UPDATE users SET reset_token='" . mysqli_real_escape_string($conn, $token) . "' WHERE email='" . mysqli_real_escape_string($conn, $email) . "'";
            mysqli_query($conn, $sql);
            
            // Send email to user
            $to = $email;
            $subject = 'Reset Password';
            $message = "Click the following link to reset your password: http://yourwebsite.com/reset_password.php?token=" . $token . "&id=" . mysqli_insert_id($conn);
            $headers = 'From: yourwebsite@example.com';
            
            // Using PHPMailer is better for production
            if (mail($to, $subject, $message, $headers)) {
                echo "<p>Password reset link has been sent to your email address.</p>";
            } else {
                echo "<p>There was an error sending the password reset link.</p>";
            }
        }
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
    <style>
        .container {
            max-width: 500px;
            margin: 0 auto;
            padding: 20px;
        }
        .error {
            color: red;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>Forgot Password</h1>
        <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
            <input type="email" name="email" placeholder="Enter your email address" required><br><br>
            <input type="submit" name="submit" value="Send Reset Link">
        </form>
    </div>
</body>
</html>

<?php
// Close database connection
mysqli_close($conn);
?>


<?php
// Get token and user ID from URL
if (!isset($_GET['token']) || !isset($_GET['id'])) {
    die("Invalid request");
}

$token = $_GET['token'];
$user_id = $_GET['id'];

// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'your_database';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Check if token is valid
$sql = "SELECT * FROM users WHERE reset_token='" . mysqli_real_escape_string($conn, $token) . "' AND id=" . mysqli_real_escape_string($conn, $user_id);
$result = mysqli_query($conn, $sql);

if (mysqli_num_rows($result) == 0) {
    die("Invalid token or user ID");
}

// If token is valid, display password reset form
?>

<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
    <style>
        .container {
            max-width: 500px;
            margin: 0 auto;
            padding: 20px;
        }
        .error {
            color: red;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>Reset Password</h1>
        <form action="reset_password_script.php" method="post">
            <input type="hidden" name="token" value="<?php echo $token; ?>">
            <input type="hidden" name="id" value="<?php echo $user_id; ?>">
            <input type="password" name="new_password" placeholder="Enter new password" required><br><br>
            <input type="password" name="confirm_password" placeholder="Confirm new password" required><br><br>
            <input type="submit" name="submit" value="Reset Password">
        </form>
    </div>
</body>
</html>

<?php
// Close database connection
mysqli_close($conn);
?>


<?php
if (!isset($_POST['token']) || !isset($_POST['id'])) {
    die("Invalid request");
}

$token = $_POST['token'];
$user_id = $_POST['id'];
$new_password = $_POST['new_password'];
$confirm_password = $_POST['confirm_password'];

// Validate password strength
function validatePassword($password) {
    if (strlen($password) < 8) {
        return false;
    }
    
    if (!preg_match("#[0-9]#", $password)) {
        return false;
    }
    
    if (!preg_match("#[A-Z]#", $password)) {
        return false;
    }
    
    return true;
}

// Check if passwords match
if ($new_password != $confirm_password) {
    die("Passwords do not match");
}

// Check password strength
if (!validatePassword($new_password)) {
    die("Password must be at least 8 characters long and contain at least one uppercase letter and one number.");
}

// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'your_database';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Update password in database
$sql = "UPDATE users SET password='" . mysqli_real_escape_string($conn, md5($new_password)) . "', reset_token=NULL WHERE reset_token='" . mysqli_real_escape_string($conn, $token) . "' AND id=" . mysqli_real_escape_string($conn, $user_id);
mysqli_query($conn, $sql);

// Close database connection
mysqli_close($conn);

// Redirect to login page
header("Location: http://yourwebsite.com/login.php");
exit();
?>


<?php
session_start();
include('db_connection.php');

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = mysqli_real_escape_string($conn, $_POST['email']);
    
    // Check if email exists in the database
    $sql = "SELECT id FROM users WHERE email='$email'";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) > 0) {
        // Generate a random token
        $token = bin2hex(random_bytes(16));
        $expires = date('Y-m-d H:i:s', time() + 3600); // Token expires after 1 hour
        
        // Store the token in the database
        $sql_token = "INSERT INTO reset_password_tokens (user_id, token, expires) 
                     VALUES ('" . mysqli_insert_id($conn) . "', '$token', '$expires')";
        
        if (mysqli_query($conn, $sql_token)) {
            // Send email to user with reset password link
            $to = $email;
            $subject = "Reset Password";
            $message = "Please click the following link to reset your password: 
                       http://yourwebsite.com/reset_password.php?token=$token";
            $headers = "From: noreply@yourwebsite.com";
            
            mail($to, $subject, $message, $headers);
            echo "An email has been sent to you with a password reset link.";
        }
    } else {
        echo "Email does not exist in our database.";
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
        Email: <input type="text" name="email"><br><br>
        <input type="submit" value="Submit">
    </form>
</body>
</html>


<?php
session_start();
include('db_connection.php');

// Check if token is provided in URL
if (!isset($_GET['token'])) {
    die("Invalid request.");
}

$token = mysqli_real_escape_string($conn, $_GET['token']);

// Get user data based on the token
$sql = "SELECT * FROM reset_password_tokens WHERE token='$token'";
$result = mysqli_query($conn, $sql);

if (mysqli_num_rows($result) == 0) {
    die("Invalid or expired token.");
}

$row = mysqli_fetch_array($result);
$expires = $row['expires'];
$user_id = $row['user_id'];

// Check if token has expired
if ($expires < date('Y-m-d H:i:s')) {
    die("Token has expired. Please request a new password reset link.");
}

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $new_password = mysqli_real_escape_string($conn, $_POST['new_password']);
    $confirm_password = mysqli_real_escape_string($conn, $_POST['confirm_password']);
    
    if ($new_password != $confirm_password) {
        die("Passwords do not match.");
    }
    
    // Update the user's password
    $sql_update = "UPDATE users SET password='$new_password' WHERE id='$user_id'";
    mysqli_query($conn, $sql_update);
    
    // Delete the reset token
    $sql_delete = "DELETE FROM reset_password_tokens WHERE token='$token'";
    mysqli_query($conn, $sql_delete);
    
    echo "Password has been updated successfully!";
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
        New Password: <input type="password" name="new_password"><br><br>
        Confirm Password: <input type="password" name="confirm_password"><br><br>
        <input type="submit" value="Change Password">
    </form>
</body>
</html>


<?php
session_start();

// Database connection details
$host = 'localhost';
$username_db = 'root';
$password_db = '';
$db_name = 'your_database';

// Create database connection
$conn = new mysqli($host, $username_db, $password_db, $db_name);

// Check if the form is submitted
if (isset($_POST['reset'])) {
    // Get user email/username from input
    $email = $_POST['email'];
    
    try {
        // Query to check if email exists in database
        $stmt = $conn->prepare("SELECT * FROM users WHERE email=?");
        $stmt->bind_param("s", $email);
        $stmt->execute();
        $result = $stmt->get_result();
        
        if ($result->num_rows == 1) {
            // Generate temporary password
            $alphabet = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890!@#$%^&*()';
            $temp_pass = substr(str_shuffle($alphabet), 0, 12);
            
            // Hash the temporary password before storing it in database
            $hashed_temp_pass = password_hash($temp_pass, PASSWORD_DEFAULT);
            
            // Update user's password with temporary password
            $update_stmt = $conn->prepare("UPDATE users SET password=? WHERE email=?");
            $update_stmt->bind_param("ss", $hashed_temp_pass, $email);
            $update_stmt->execute();
            
            // Send email to user with temporary password
            $to = $email;
            $subject = 'Your Temporary Password';
            $message = "Dear User,

Your temporary password is: $temp_pass

Please login and change your password immediately.

Best regards,
Your Website Team";
            $headers = 'From: noreply@yourwebsite.com' . "\r
" .
                       'Reply-To: noreply@yourwebsite.com' . "\r
" .
                       'X-Mailer: PHP/' . phpversion();
            
            mail($to, $subject, $message, $headers);
            
            // Redirect to login page with success message
            header("Location: login.php?success=1");
            exit();
        } else {
            // Email doesn't exist in database
            $_SESSION['error'] = "Email address not found in our records!";
            header("Location: forgot_password.php");
            exit();
        }
    } catch (mysqli_sql_exception $e) {
        // Handle any database errors
        $_SESSION['error'] = "An error occurred while processing your request. Please try again later.";
        header("Location: forgot_password.php");
        exit();
    }
}

// Close database connection
$conn->close();

?>

<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 20px;
            background-color: #f5f5f5;
        }
        .container {
            max-width: 400px;
            margin: 0 auto;
            background-color: white;
            padding: 20px;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }
        .form-group {
            margin-bottom: 15px;
        }
        input {
            width: 100%;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-sizing: border-box;
        }
        button {
            width: 100%;
            padding: 10px;
            background-color: #4CAF50;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
        button:hover {
            background-color: #45a049;
        }
        .alert {
            padding: 10px;
            margin-bottom: 20px;
            border-radius: 5px;
        }
        .alert-danger {
            background-color: #f2d7d5;
            color: #c72526;
            border: 1px solid #b91c18;
        }
        .alert-success {
            background-color: #d4edda;
            color: #155724;
            border: 1px solid #103c12;
        }
    </style>
</head>
<body>
    <div class="container">
        <?php
        if (isset($_SESSION['error'])) {
            echo '<div class="alert alert-danger">' . $_SESSION['error'] . '</div>';
            unset($_SESSION['error']);
        } elseif (isset($_GET['success']) && $_GET['success'] == 1) {
            echo '<div class="alert alert-success">A temporary password has been sent to your email address!</div>';
        }
        ?>
        <h2>Forgot Password</h2>
        <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
            <div class="form-group">
                <input type="email" name="email" placeholder="Enter your email or username" required>
            </div>
            <button type="submit" name="reset">Reset Password</button>
        </form>
    </div>
</body>
</html>


<?php
// Database connection
$host = 'localhost';
$username = 'root';
$password = '';
$database = 'your_database';

$conn = mysqli_connect($host, $username, $password, $database);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function sendResetEmail($email, $token) {
    $to = $email;
    $subject = "Password Reset Request";
    $message = "
        <html>
            <head>
                <title>Password Reset</title>
            </head>
            <body>
                <h2>Password Reset Request</h2>
                <p>Please click the link below to reset your password:</p>
                <a href='http://localhost/reset-password.php?token=" . $token . "'>Reset Password</a>
                <br><br>
                <small>This link will expire in 30 minutes.</small>
            </body>
        </html>";
    $headers = "MIME-Version: 1.0\r
";
    $headers .= "Content-type: text/html; charset=UTF-8\r
";
    $headers .= "From: noreply@example.com\r
";

    mail($to, $subject, $message, $headers);
}

if (isset($_POST['reset'])) {
    $email = $_POST['email'];
    $email = mysqli_real_escape_string($conn, $email);

    // Check if email exists in database
    $check_email_query = "SELECT id FROM users WHERE email='$email'";
    $result = mysqli_query($conn, $check_email_query);
    
    if (mysqli_num_rows($result) > 0) {
        $user_id = mysqli_fetch_assoc($result)['id'];
        
        // Generate reset token
        $token = bin2hex(random_bytes(16));
        $expires = date('Y-m-d H:i:s', strtotime('+30 minutes'));
        
        // Store token in database
        $store_token_query = "INSERT INTO password_reset (user_id, token, expires) VALUES ('$user_id', '$token', '$expires')";
        if (mysqli_query($conn, $store_token_query)) {
            sendResetEmail($email, $token);
            echo "Password reset link has been sent to your email address.";
        } else {
            echo "Error storing token: " . mysqli_error($conn);
        }
    } else {
        echo "Email not found in our records!";
    }
}

// Reset password form
if (isset($_GET['token'])) {
    $token = $_GET['token'];
    
    // Check if token is valid and not expired
    $check_token_query = "
        SELECT 
            pr.id, 
            u.id AS user_id,
            pr.expires 
        FROM 
            password_reset pr 
        JOIN 
            users u ON pr.user_id = u.id 
        WHERE 
            pr.token='$token'
    ";
    
    $result = mysqli_query($conn, $check_token_query);
    
    if (mysqli_num_rows($result) > 0) {
        $row = mysqli_fetch_assoc($result);
        
        // Check if token is expired
        if ($row['expires'] < date('Y-m-d H:i:s')) {
            echo "Token has expired!";
            exit();
        }
        
        // Display reset form
        if (isset($_POST['new_password'])) {
            $new_password = $_POST['new_password'];
            $confirm_password = $_POST['confirm_password'];
            
            if ($new_password == $confirm_password) {
                // Hash the new password
                $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);
                
                // Update user's password
                $update_query = "UPDATE users SET password='$hashed_password' WHERE id='" . $row['user_id'] . "'";
                if (mysqli_query($conn, $update_query)) {
                    // Delete the reset token
                    $delete_token_query = "DELETE FROM password_reset WHERE id='" . $row['id'] . "'";
                    mysqli_query($conn, $delete_token_query);
                    
                    echo "Password has been successfully updated!";
                } else {
                    echo "Error updating password: " . mysqli_error($conn);
                }
            } else {
                echo "Passwords do not match!";
            }
        }
        
        // Display form
        ?>
        <form method="post">
            New Password: <input type="password" name="new_password"><br>
            Confirm Password: <input type="password" name="confirm_password"><br>
            <input type="submit" name="reset_password" value="Reset Password">
        </form>
        <?php
    } else {
        echo "Invalid or expired token!";
    }
}

// Close database connection
mysqli_close($conn);
?>


<?php
include('db_connection.php');

// Check if form is submitted
if (isset($_POST['email']) || isset($_POST['username'])) {
    $email = $_POST['email'] ?? '';
    $username = $_POST['username'] ?? '';

    // Sanitize inputs
    $email = mysqli_real_escape_string($conn, $email);
    $username = mysqli_real_escape_string($conn, $username);

    // Check if user exists with the given email or username
    $sql = "SELECT * FROM users WHERE email='$email' OR username='$username'";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) == 1) {
        // Generate reset token
        $reset_token = bin2hex(random_bytes(16));

        // Update the database with the new reset token and expiration time
        $expiration_time = date('Y-m-d H:i:s', strtotime('+1 hour'));
        $sql = "UPDATE users SET reset_token='$reset_token', reset_token_expires='$expiration_time' WHERE email='$email' OR username='$username'";
        mysqli_query($conn, $sql);

        // Send reset password email
        $to = $email;
        $subject = 'Password Reset Request';
        $message = "
            <html>
                <head></head>
                <body>
                    <h2>Password Reset</h2>
                    <p>Please click the following link to reset your password:</p>
                    <a href='http://yourwebsite.com/reset_password.php?token=$reset_token'>Reset Password</a>
                    <p>If you did not request this, please ignore this email.</p>
                </body>
            </html>
        ";
        $headers = "MIME-Version: 1.0" . "\r
";
        $headers .= "Content-type:text/html;charset=UTF-8" . "\r
";
        mail($to, $subject, $message, $headers);

        echo "A password reset link has been sent to your email address.";
    } else {
        echo "Email or username does not exist in our records.";
    }
}
?>


<?php
include('db_connection.php');

// Check if token is provided
if (!isset($_GET['token'])) {
    die("Invalid request.");
}

$reset_token = mysqli_real_escape_string($conn, $_GET['token']);

// Get user details based on reset token
$sql = "SELECT * FROM users WHERE reset_token='$reset_token'";
$result = mysqli_query($conn, $sql);

if (mysqli_num_rows($result) != 1) {
    die("Invalid or expired reset link.");
}

$user_data = mysqli_fetch_assoc($result);
$expiration_time = $user_data['reset_token_expires'];

// Check if token has expired
if (strtotime($expiration_time) < time()) {
    die("Reset link has expired. Please request a new password reset.");
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <h2>Reset Password</h2>
    <form action="reset_password.php" method="post">
        <input type="password" name="new_password" placeholder="Enter new password" required><br>
        <input type="password" name="confirm_password" placeholder="Confirm new password" required><br>
        <input type="hidden" name="token" value="<?php echo $reset_token; ?>">
        <input type="submit" value="Reset Password">
    </form>
</body>
</html>

<?php
// Process reset password form submission
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $new_password = $_POST['new_password'];
    $confirm_password = $_POST['confirm_password'];
    $token = $_POST['token'];

    if ($new_password != $confirm_password) {
        die("Passwords do not match.");
    }

    // Hash the new password
    $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);

    // Update the user's password and reset token
    $sql = "UPDATE users SET password='$hashed_password', reset_token='', reset_token_expires='' WHERE reset_token='$token'";
    mysqli_query($conn, $sql);

    echo "Password has been successfully updated!";
}
?>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'mydatabase';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function sendPasswordResetEmail($email, $token, $resetLink) {
    // Email content
    $to = $email;
    $subject = 'Password Reset Request';
    $message = "
        <html>
        <body>
            <p>Hello,</p>
            <p>We received a request to reset your password. Click the link below to reset it:</p>
            <a href='$resetLink'>Reset Password</a><br><br>
            <p>If you didn't request this password reset, please ignore this email.</p>
        </body>
        </html>";
    $headers = "MIME-Version: 1.0" . "\r
";
    $headers .= "Content-type:text/html;charset=UTF-8" . "\r
";
    
    // Send email
    mail($to, $subject, $message, $headers);
}

function generateToken() {
    return md5(uniqid(rand(), true));
}

// forgot_password.php - form for entering email
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $email = mysqli_real_escape_string($conn, $_POST['email']);

    // Check if email exists in database
    $sql = "SELECT id FROM users WHERE email = '$email'";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) > 0) {
        $token = generateToken();
        $expires = time() + 3600; // Token expires in 1 hour

        // Store token in database
        $sql_token = "INSERT INTO password_reset (user_id, token, expires) VALUES ('" . mysqli_insert_id($conn) . "', '$token', '$expires')";
        mysqli_query($conn, $sql_token);

        // Send reset email
        sendPasswordResetEmail($email, $token, 'http://example.com/reset_password.php?token=' . $token);
        echo "Check your email for the password reset link!";
    } else {
        echo "Email not found in our database.";
    }
}

// reset_password.php - form for resetting password
if (isset($_GET['token'])) {
    $token = mysqli_real_escape_string($conn, $_GET['token']);

    // Check if token exists and hasn't expired
    $sql = "SELECT * FROM password_reset WHERE token = '$token' AND expires > " . time();
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) == 1) {
        // Show reset form
        ?>
        <form action="reset_password_handler.php" method="post">
            New Password: <input type="password" name="new_password"><br>
            Confirm Password: <input type="password" name="confirm_password"><br>
            <input type="hidden" name="token" value="<?php echo $token; ?>">
            <input type="submit" value="Reset Password">
        </form>
        <?php
    } else {
        echo "Invalid or expired token.";
    }
}

// reset_password_handler.php - process password reset
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $token = mysqli_real_escape_string($conn, $_POST['token']);
    $new_password = mysqli_real_escape_string($conn, $_POST['new_password']);
    $confirm_password = mysqli_real_escape_string($conn, $_POST['confirm_password']);

    if ($new_password != $confirm_password) {
        echo "Passwords do not match!";
        exit();
    }

    // Check if token is valid and not expired
    $sql = "SELECT * FROM password_reset WHERE token = '$token' AND expires > " . time();
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) == 1) {
        $row = mysqli_fetch_assoc($result);
        $user_id = $row['user_id'];

        // Update password
        $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);
        $sql_update = "UPDATE users SET password = '$hashed_password' WHERE id = '$user_id'";
        mysqli_query($conn, $sql_update);

        // Delete token after use
        $sql_delete = "DELETE FROM password_reset WHERE token = '$token'";
        mysqli_query($conn, $sql_delete);

        echo "Password reset successfully!";
    } else {
        echo "Invalid or expired token.";
    }
}

mysqli_close($conn);
?>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'your_database_name';
$dbusername = 'your_username';
$dbpassword = 'your_password';

// Connect to database
$conn = new mysqli($host, $dbusername, $dbpassword, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = $_POST['email'];
    
    // Validate email input
    if (empty($email)) {
        echo "Email is required";
        exit();
    }
    
    // Query to check if email exists in the database
    $sql = "SELECT id FROM users WHERE email=?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("s", $email);
    $stmt->execute();
    
    $result = $stmt->get_result();
    
    if ($result->num_rows === 0) {
        echo "Email does not exist in our records";
        exit();
    }
    
    // Generate reset token
    $reset_token = bin2hex(random_bytes(32));
    
    // Update the database with the new reset token
    $sql_update = "UPDATE users SET password_reset_token=?, password_reset_expires=DATE_ADD(NOW(), INTERVAL 1 HOUR) WHERE email=?";
    $stmt_update = $conn->prepare($sql_update);
    $stmt_update->bind_param("ss", $reset_token, $email);
    $stmt_update->execute();
    
    // Send reset link to user's email
    $to = $email;
    $subject = "Password Reset Request";
    $message = "
        <html>
        <head></head>
        <body>
            <h2>Password Reset</h2>
            <p>We received a request to reset your password. Click the link below to reset it:</p>
            <a href='http://yourwebsite.com/reset_password.php?token=" . $reset_token . "'>Reset Password</a>
            <br><br>
            <small>This link will expire in 1 hour.</small>
        </body>
        </html>
    ";
    $headers = "MIME-Version: 1.0" . "\r
";
    $headers .= "Content-type:text/html;charset=UTF-8" . "\r
";
    
    mail($to, $subject, $message, $headers);
    
    // Redirect back to forgot password page
    header("Location: forgot_password.php?msg=reset_link_sent");
    exit();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <?php if (isset($_GET['msg'])) { ?>
        <p><?php echo $_GET['msg']; ?></p>
    <?php } ?>

    <h2>Forgot Password</h2>
    <form action="process_forgot.php" method="post">
        <label>Email:</label><br>
        <input type="email" name="email" required><br><br>
        <input type="submit" value="Reset Password">
    </form>
</body>
</html>


<?php
// Database connection
$host = "localhost";
$username = "root";
$password = "";
$dbname = "mydatabase";

$conn = mysqli_connect($host, $username, $password, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Helper function to send emails
function sendEmail($email, $resetLink) {
    $to = $email;
    $subject = "Password Reset Request";
    $message = "Please click the following link to reset your password:

$resetLink

If you did not request this password reset, please ignore this email.";
    $headers = "From: noreply@yourdomain.com";

    mail($to, $subject, $message, $headers);
}
?>


<?php
// forgot-password.php

require_once 'db_connection.php';

if (isset($_POST['email'])) {
    $email = $_POST['email'];
    
    // Check if email exists in database
    $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
    $stmt->bind_param('s', $email);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        // Generate a random token
        $token = bin2hex(random_bytes(16));
        
        // Update the user's record with the new token
        $updateStmt = $conn->prepare("UPDATE users SET reset_token = ? WHERE email = ?");
        $updateStmt->bind_param('ss', $token, $email);
        $updateStmt->execute();

        // Send password reset link to user's email
        $resetLink = "http://yourdomain.com/reset-password.php?token=" . $token;
        sendEmail($email, $resetLink);

        echo "A password reset link has been sent to your email.";
    } else {
        echo "This email does not exist in our records.";
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <h2>Forgot Password</h2>
    <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
        <label for="email">Enter your email:</label><br>
        <input type="email" id="email" name="email" required><br>
        <input type="submit" value="Reset Password">
    </form>
</body>
</html>


<?php
// reset-password.php

require_once 'db_connection.php';

if (isset($_GET['token'])) {
    $token = $_GET['token'];
    
    // Check if token exists and is valid
    $stmt = $conn->prepare("SELECT id FROM users WHERE reset_token = ?");
    $stmt->bind_param('s', $token);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        // Show password reset form
        ?>
        <!DOCTYPE html>
        <html>
        <head>
            <title>Reset Password</title>
        </head>
        <body>
            <h2>Reset Password</h2>
            <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
                <input type="hidden" name="token" value="<?php echo $token; ?>">
                <label for="new_password">Enter new password:</label><br>
                <input type="password" id="new_password" name="new_password" required><br>
                <label for="confirm_password">Confirm new password:</label><br>
                <input type="password" id="confirm_password" name="confirm_password" required><br>
                <input type="submit" value="Reset Password">
            </form>
        </body>
        </html>
        <?php
    } else {
        echo "Invalid or expired token.";
    }
}

if (isset($_POST['new_password'], $_POST['confirm_password'])) {
    $token = $_POST['token'];
    $newPassword = $_POST['new_password'];
    $confirmPassword = $_POST['confirm_password'];

    if ($newPassword == $confirmPassword) {
        // Hash the new password
        $hashedPassword = password_hash($newPassword, PASSWORD_DEFAULT);
        
        // Update the user's password and clear the reset token
        $updateStmt = $conn->prepare("UPDATE users SET password = ?, reset_token = NULL WHERE reset_token = ?");
        $updateStmt->bind_param('ss', $hashedPassword, $token);
        $updateStmt->execute();

        echo "Your password has been successfully updated.";
        
        // Optionally: Log the user in or redirect to login page
    } else {
        echo "Passwords do not match. Please try again.";
    }
}
?>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

// Create connection
$conn = new mysqli($host, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to handle forgot password request
function forgotPassword($email) {
    global $conn;

    // Check if email exists in the database
    $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
    $stmt->bind_param("s", $email);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows == 0) {
        return "Email not found!";
    }

    // Generate a new random password
    $new_password = rand(1000, 9999); // You can modify this to generate more secure passwords

    // Update the database with the new password
    $stmt = $conn->prepare("UPDATE users SET password = ? WHERE email = ?");
    $stmt->bind_param("ss", $new_password, $email);
    $stmt->execute();

    // Send the new password to the user's email
    $to = $email;
    $subject = "Password Reset Request";
    $message = "Your new password is: " . $new_password . "
Please login and change your password.";
    $headers = "From: noreply@example.com" . "\r
" .
               "CC: example@example.com";

    if (mail($to, $subject, $message, $headers)) {
        return "Password reset successful! Check your email for the new password.";
    } else {
        return "Error sending password reset email!";
    }
}

// Example usage:
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = $_POST['email'];
    $result = forgotPassword($email);
    echo $result;
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <h2>Forgot Password</h2>
    <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
        Email: <input type="text" name="email"><br>
        <input type="submit" value="Submit">
    </form>
</body>
</html>


<?php
// Database connection
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'mydatabase';

$conn = new mysqli($host, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Get user input
$email = $_POST['email'];

// Query to check if the email exists in the database
$sql = "SELECT * FROM users WHERE email = '$email' OR username = '$email'";
$result = $conn->query($sql);

if ($result->num_rows == 0) {
    die("No account found with this email or username");
}

// Generate a random token for password reset
$token = bin2hex(random_bytes(16));

// Insert the token into the database along with expiration time (current time + 2 hours)
$current_time = time();
$expiration_time = $current_time + 7200; // 7200 seconds is 2 hours

$sql = "UPDATE users SET reset_token = '$token', reset_expires = '$expiration_time' WHERE email = '$email'";
$result = $conn->query($sql);

if (!$result) {
    die("An error occurred while saving the reset token");
}

// Send an email to the user with the reset link
$to = $email;
$subject = "Password Reset Request";
$message = "Please click on this link to reset your password: http://yourwebsite.com/reset_password.php?token=$token

If you did not request a password reset, please ignore this email.";
$headers = "From: webmaster@yourwebsite.com";

mail($to, $subject, $message, $headers);

echo "An email with instructions has been sent to your email address.";

$conn->close();
?>


<?php
// Database connection
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'mydatabase';

$conn = new mysqli($host, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Get the token from the URL
$token = $_GET['token'];

// Check if the token exists and hasn't expired
$sql = "SELECT * FROM users WHERE reset_token = '$token' AND reset_expires > CURRENT_TIMESTAMP";
$result = $conn->query($sql);

if ($result->num_rows == 0) {
    die("This reset link is invalid or has expired");
}

// If the token is valid, display a form to enter the new password
?>
<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <h2>Reset Password</h2>
    <form action="reset_password.php" method="post">
        <input type="hidden" name="token" value="<?php echo $token; ?>">
        <input type="password" name="new_password" placeholder="Enter new password" required>
        <input type="password" name="confirm_password" placeholder="Confirm new password" required>
        <button type="submit">Reset Password</button>
    </form>
</body>
</html>

<?php
// Handle the form submission to reset the password
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $token = $_POST['token'];
    $new_password = $_POST['new_password'];
    $confirm_password = $_POST['confirm_password'];

    if ($new_password != $confirm_password) {
        die("Passwords do not match");
    }

    // Hash the new password
    $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);

    // Update the user's password and clear the reset token
    $sql = "UPDATE users SET password = '$hashed_password', reset_token = NULL, reset_expires = NULL WHERE reset_token = '$token'";
    $result = $conn->query($sql);

    if (!$result) {
        die("An error occurred while updating your password");
    }

    echo "Your password has been reset successfully!";

    $conn->close();
}
?>


<?php
// Database connection
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'your_database';

$conn = mysqli_connect($host, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

if (isset($_POST['reset_password'])) {
    $email = $_POST['email'];
    
    // Sanitize email input
    $email = mysqli_real_escape_string($conn, $email);
    
    // Check if user exists with the provided email
    $query = "SELECT * FROM users WHERE email='$email'";
    $result = mysqli_query($conn, $query);
    
    if (mysqli_num_rows($result) == 0) {
        // Email not found in database
        header("Location: forgot_password_form.php?status=error");
        exit();
    } else {
        // Generate a unique token for password reset
        $token = md5(uniqid(rand(), true));
        
        // Update the token and expiration time in the database
        $expiration_time = date('Y-m-d H:i:s', strtotime('+1 hour'));
        $update_query = "UPDATE users SET reset_token='$token', reset_token_expires='$expiration_time' WHERE email='$email'";
        mysqli_query($conn, $update_query);
        
        // Send reset password email
        $to = $email;
        $subject = "Password Reset Request";
        $message = "
            <html>
                <head></head>
                <body>
                    <p>You requested a password reset. Please click the link below to reset your password:</p>
                    <a href='http://yourwebsite.com/reset_password.php?token=$token'>Reset Password</a>
                    <br><br>
                    <p>If you did not request this, please ignore this email.</p>
                </body>
            </html>
        ";
        
        $headers = "MIME-Version: 1.0" . "\r
";
        $headers .= "Content-type:text/html;charset=UTF-8" . "\r
";
        $headers .= "From: yourwebsite.com <noreply@yourwebsite.com>" . "\r
";
        
        mail($to, $subject, $message, $headers);
        
        // Redirect to login page with success message
        header("Location: forgot_password_form.php?status=success");
        exit();
    }
}

mysqli_close($conn);
?>


<?php
// Database connection
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'your_database';

$conn = mysqli_connect($host, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

if (isset($_GET['token'])) {
    $token = $_GET['token'];
    
    // Verify if the token exists and is valid
    $query = "SELECT * FROM users WHERE reset_token='$token' AND reset_token_expires > NOW()";
    $result = mysqli_query($conn, $query);
    
    if (mysqli_num_rows($result) == 0) {
        echo "<h2>Password Reset Link Expired</h2>";
        echo "<p>Your password reset link has expired or is invalid.</p>";
    } else {
        // Show the password reset form
        ?>
        <h2>Reset Password</h2>
        <form action="reset_password.php?token=<?php echo $token ?>" method="post">
            <div>
                <label for="new_password">New Password:</label><br>
                <input type="password" id="new_password" name="new_password" required>
            </div><br>
            <button type="submit" name="reset_password">Reset Password</button>
        </form>
        <?php
    }
} else {
    // Invalid request
    echo "<h2>Error</h2>";
    echo "<p>Invalid password reset request.</p>";
}

if (isset($_POST['reset_password'])) {
    $token = $_GET['token'];
    $new_password = md5($_POST['new_password']);  // Store hashed password
    
    // Update the user's password
    $query = "UPDATE users SET password='$new_password', reset_token=NULL, reset_token_expires=NULL WHERE reset_token='$token'";
    mysqli_query($conn, $query);
    
    echo "<h2>Password Reset Successful</h2>";
    echo "<p>Your password has been successfully updated. <a href='login.php'>Click here to login.</a></p>";
}

mysqli_close($conn);
?>


<?php
session_start();

// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$db_name = 'mydatabase';

// Connect to the database
$conn = mysqli_connect($host, $username, $password, $db_name);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = $_POST['email'];
    
    // Check if email exists in the database
    $check_email = "SELECT * FROM users WHERE email='$email'";
    $result = mysqli_query($conn, $check_email);
    
    if (mysqli_num_rows($result) == 0) {
        die("Email does not exist");
    }
    
    // Generate a unique token and expiration time
    $token = md5(uniqid(rand(), true));
    $expires = strtotime('+2 hours');
    
    // Update the user's record with the token and expiration
    $update_token = "UPDATE users SET reset_token='$token', reset_expires='$expires' WHERE email='$email'";
    if (!mysqli_query($conn, $update_token)) {
        die("Error updating record: " . mysqli_error($conn));
    }
    
    // Send email with the reset link
    $to = $email;
    $subject = "Password Reset Request";
    $message = "Please click on the following link to reset your password:

"
             . "http://$_SERVER[HTTP_HOST]/reset_password.php?token=$token

"
             . "This link will expire in 2 hours.";
    
    $headers = "From: noreply@yourdomain.com\r
";
    $headers .= "Reply-To: noreply@yourdomain.com\r
";
    $headers .= "X-Mailer: PHP/" . phpversion();
    
    if (mail($to, $subject, $message, $headers)) {
        echo "An email has been sent to $email with instructions on how to reset your password.";
    } else {
        die("Failed to send email");
    }
}

// HTML form
?>
<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <h2>Forgot Password</h2>
    <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]);?>">
        Email: <input type="text" name="email">
        <br><br>
        <input type="submit" value="Submit">
    </form>
</body>
</html>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'mydatabase';

// Create connection
$conn = mysqli_connect($host, $username, $password, $dbname);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to handle forgot password process
function forgotPassword($email, $conn) {
    // Sanitize email input
    $email = mysqli_real_escape_string($conn, trim($email));
    
    // Check if user exists
    $sql = "SELECT id FROM users WHERE email='$email'";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) == 0) {
        return "No account found with this email address.";
    }
    
    // Generate a unique token for password reset
    $token = bin2hex(random_bytes(16));
    $expires = date('Y-m-d H:i:s', time() + 3600); // Token expires after 1 hour
    
    // Update database with new token and expiration time
    $sql = "UPDATE users SET reset_token='$token', reset_expires='$expires' WHERE email='$email'";
    mysqli_query($conn, $sql);
    
    // Send password reset link to user's email
    $to = $email;
    $subject = 'Password Reset Request';
    $message = "Please click the following link to reset your password:

";
    $message .= "http://yourwebsite.com/reset-password.php?token=$token

";
    $message .= "If you did not request a password reset, please ignore this email.
";
    $headers = 'From: yourwebsite@example.com';
    
    if (mail($to, $subject, $message, $headers)) {
        return "A password reset link has been sent to your email address.";
    } else {
        return "An error occurred while sending the email.";
    }
}

// Example usage:
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    if (isset($_POST['email'])) {
        $result = forgotPassword($_POST['email'], $conn);
        echo $result;
    }
}
?>

<!-- HTML Form -->
<form method="post" action="">
    <input type="email" name="email" placeholder="Enter your email address" required>
    <button type="submit">Reset Password</button>
</form>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'mydatabase';

// Create connection
$conn = mysqli_connect($host, $username, $password, $dbname);

// Check if token is provided in URL
if (!isset($_GET['token'])) {
    die("Invalid request.");
}

$token = mysqli_real_escape_string($conn, $_GET['token']);

// Validate the token
$sql = "SELECT id, email FROM users WHERE reset_token='$token' AND reset_expires > NOW()";
$result = mysqli_query($conn, $sql);

if (mysqli_num_rows($result) == 0) {
    die("Invalid or expired password reset link.");
}

// Show password reset form if token is valid
?>

<form method="post" action="">
    <input type="password" name="new_password" placeholder="Enter new password" required>
    <input type="hidden" name="token" value="<?php echo $token; ?>">
    <button type="submit">Change Password</button>
</form>

<?php
// Process password change
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    if (isset($_POST['new_password']) && isset($_POST['token'])) {
        $password = mysqli_real_escape_string($conn, $_POST['new_password']);
        $token = mysqli_real_escape_string($conn, $_POST['token']);
        
        // Update password
        $sql = "UPDATE users SET 
                    password='" . password_hash($password, PASSWORD_DEFAULT) . "', 
                    reset_token='',
                    reset_expires=''
                WHERE reset_token='$token'";
        
        if (mysqli_query($conn, $sql)) {
            echo "Password has been successfully changed!";
        } else {
            die("An error occurred while updating the password.");
        }
    }
}
?>


<?php
session_start();
include('db_connection.php');

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = mysqli_real_escape_string($conn, $_POST['email']);

    // Check if email exists in the database
    $query = "SELECT id FROM users WHERE email='$email'";
    $result = mysqli_query($conn, $query);

    if (mysqli_num_rows($result) == 1) {
        // Generate a unique token
        $token = bin2hex(random_bytes(32));
        
        // Calculate expiration time (e.g., 1 hour)
        $expires = date('Y-m-d H:i:s', strtotime('+1 hour'));

        // Update the database with the new token and expiration
        $update_query = "UPDATE users SET reset_token='$token', reset_expires='$expires' WHERE email='$email'";
        if (mysqli_query($conn, $update_query)) {
            // Send the reset link to the user's email
            $reset_link = "http://".$_SERVER['HTTP_HOST']."/reset_password.php?token=".$token;
            $subject = "Password Reset Request";
            $message = "Please click on this link to reset your password: ".$reset_link;

            if (mail($email, $subject, $message)) {
                echo "<h3>Reset link has been sent to your email.</h3>";
            } else {
                echo "<h3>Error sending email. Please try again later.</h3>";
            }
        } else {
            echo "<h3>Error resetting password. Please try again later.</h3>";
        }
    } else {
        echo "<h3>Email not found in our records.</h3>";
    }
}
?>


<?php
session_start();
include('db_connection.php');

if (isset($_GET['token'])) {
    $token = mysqli_real_escape_string($conn, $_GET['token']);
    
    // Check if token exists and hasn't expired
    $query = "SELECT id FROM users WHERE reset_token='$token' AND reset_expires > NOW()";
    $result = mysqli_query($conn, $query);

    if (mysqli_num_rows($result) == 1) {
        if ($_SERVER["REQUEST_METHOD"] == "POST") {
            // Validate and update the password
            $new_password = mysqli_real_escape_string($conn, $_POST['password']);
            $confirm_password = mysqli_real_escape_string($conn, $_POST['confirm']);

            if ($new_password != $confirm_password) {
                die("Passwords do not match.");
            }

            $user_id = mysqli_fetch_assoc($result)['id'];
            // Update the password and reset token
            $update_query = "UPDATE users SET password='" . md5($new_password) . "', reset_token='', reset_expires='' WHERE id=$user_id";
            if (mysqli_query($conn, $update_query)) {
                echo "<h3>Password has been successfully updated!</h3>";
            } else {
                echo "<h3>Error updating password. Please try again.</h3>";
            }
        } else {
            // Display the reset form
?>
            <h2>Reset Password</h2>
            <form action="reset_password.php?token=<?php echo $token; ?>" method="post">
                New Password: <input type="password" name="password" required><br>
                Confirm Password: <input type="password" name="confirm" required><br><br>
                <button type="submit">Change Password</button>
            </form>
<?php
        }
    } else {
        echo "<h3>Invalid or expired token.</h3>";
    }
} else {
    echo "<h3>No token provided.</h3>";
}
?>


<?php
require_once 'db_config.php'; // Include your database configuration

if (isset($_POST['email'])) {
    $email = mysqli_real_escape_string($conn, $_POST['email']);
    
    // Check if email or username exists in the database
    $query = "SELECT id, email FROM users WHERE email='$email' OR username='$email'";
    $result = mysqli_query($conn, $query);
    
    if (mysqli_num_rows($result) == 1) {
        // Generate a random token
        $token = md5(uniqid());
        
        // Store the token and its expiration time in the database
        $expires = date('Y-m-d H:i:s', strtotime('+1 hour'));
        $query = "INSERT INTO password_resets (user_id, token, expires) 
                  VALUES ('$email', '$token', '$expires')";
        mysqli_query($conn, $query);
        
        // Send reset instructions to the user's email
        if (send_reset_email($email, $token)) {
            echo "Password reset instructions have been sent to your email.";
        } else {
            echo "Error sending password reset email.";
        }
    } else {
        echo "Email or username does not exist.";
    }
}

function send_reset_email($email, $token) {
    // Set up mailer using PHPMailer
    require_once 'PHPMailer/PHPMailerAutoload.php';
    
    $mail = new PHPMailer();
    $mail->isSMTP();
    $mail->Host = 'smtp.example.com'; // Replace with your SMTP server
    $mail->Port = 587;
    $mail->SMTPAuth = true;
    $mail->Username = 'your_email@example.com';
    $mail->Password = 'your_password';
    
    $mail->setFrom('your_email@example.com', 'Your Name');
    $mail->addAddress($email);
    $mail->Subject = 'Reset Your Password';
    
    // Create the email body
    $body = "Please click on the following link to reset your password:<br>";
    $body .= "http://example.com/reset_password.php?token=$token<br>";
    $body .= "<br>If you did not request this password reset, please ignore this email.";
    
    $mail->Body = $body;
    
    return $mail->send();
}
?>


<?php
require_once 'db_config.php';

if (isset($_GET['token'])) {
    $token = mysqli_real_escape_string($conn, $_GET['token']);
    
    // Check if token exists and has not expired
    $query = "SELECT * FROM password_resets 
              WHERE token='$token' AND expires > NOW()";
    $result = mysqli_query($conn, $query);
    
    if (mysqli_num_rows($result) == 1) {
        // Token is valid
        if ($_SERVER['REQUEST_METHOD'] == 'POST') {
            $new_password = mysqli_real_escape_string($conn, $_POST['password']);
            
            // Update the user's password
            $row = mysqli_fetch_assoc($result);
            $user_id = $row['user_id'];
            
            $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);
            $query = "UPDATE users SET password='$hashed_password' WHERE id=$user_id";
            mysqli_query($conn, $query);
            
            // Delete the token
            $query = "DELETE FROM password_resets WHERE token='$token'";
            mysqli_query($conn, $query);
            
            echo "Password updated successfully!";
        } else {
            // Show reset form
?>
            <h2>Reset Password</h2>
            <form method="post">
                <label for="password">New Password:</label><br>
                <input type="password" id="password" name="password"><br>
                <input type="submit" value="Change Password">
            </form>
<?php
        }
    } else {
        // Token is invalid or expired
        echo "Invalid or expired reset token.";
        exit();
    }
} else {
    // No token provided
    echo "No valid reset request was found.";
}
?>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'mydatabase';

// Connect to database
$conn = new mysqli($host, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Get email from form submission
$email = $_POST['email'];

// Validate email input
if (empty($email)) {
    die("Email is required");
}

// Check if email exists in database
$sql = "SELECT id, name FROM users WHERE email = ?";
$stmt = $conn->prepare($sql);
$stmt->bind_param("s", $email);
$stmt->execute();
$result = $stmt->get_result();

if ($result->num_rows === 0) {
    die("Email not found in our records");
}

// Generate reset token
$token = bin2hex(random_bytes(16));
$expires = date('Y-m-d H:i:s', time() + 3600); // Token expires after 1 hour

// Update the database with the new token and expiration time
$updateSql = "UPDATE users SET password_reset_token = ?, password_reset_expires = ? WHERE email = ?";
$stmt = $conn->prepare($updateSql);
$stmt->bind_param("sss", $token, $expires, $email);
$stmt->execute();

// Send reset password link to user's email
$resetLink = "http://yourwebsite.com/reset_password_form.php?token=$token";
mail(
    $email,
    'Reset Your Password',
    "Please click the following link to reset your password:

$resetLink",
    "From: no-reply@yourwebsite.com"
);

echo "A password reset link has been sent to your email address.";

// Close database connection
$stmt->close();
$conn->close();
?>


<?php
// Check if token is provided
if (!isset($_GET['token'])) {
    die("No token provided");
}

$token = $_GET['token'];
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Reset Password</title>
</head>
<body>
    <h2>Reset Password</h2>
    <form action="change_password.php" method="post">
        <input type="hidden" name="token" value="<?php echo $token; ?>">
        <label for="new_password">New Password:</label><br>
        <input type="password" id="new_password" name="new_password" required><br><br>
        <label for="confirm_password">Confirm Password:</label><br>
        <input type="password" id="confirm_password" name="confirm_password" required><br><br>
        <button type="submit">Change Password</button>
    </form>
</body>
</html>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'mydatabase';

// Connect to database
$conn = new mysqli($host, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Get form data
$token = $_POST['token'];
$new_password = $_POST['new_password'];
$confirm_password = $_POST['confirm_password'];

// Validate password match and minimum length (8 characters)
if ($new_password !== $confirm_password) {
    die("Passwords do not match");
}
if (strlen($new_password) < 8) {
    die("Password must be at least 8 characters long");
}

// Hash the new password
$hashed_password = password_hash($new_password, PASSWORD_DEFAULT);

// Check if token exists and is valid
$sql = "SELECT id FROM users WHERE password_reset_token = ? AND password_reset_expires > NOW()";
$stmt = $conn->prepare($sql);
$stmt->bind_param("s", $token);
$stmt->execute();
$result = $stmt->get_result();

if ($result->num_rows === 0) {
    die("Invalid or expired reset token");
}

// Update the user's password
$updateSql = "UPDATE users SET password = ?, password_reset_token = NULL, password_reset_expires = NULL WHERE password_reset_token = ?";
$stmt = $conn->prepare($updateSql);
$stmt->bind_param("ss", $hashed_password, $token);
$stmt->execute();

echo "Password updated successfully!";

// Close database connection
$stmt->close();
$conn->close();
?>


<?php
// Configuration
$host = "localhost";
$dbUsername = "root";
$dbPassword = "";
$dbName = "user_management";

// Connect to database
$conn = mysqli_connect($host, $dbUsername, $dbPassword, $dbName);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Check if form is submitted
if (isset($_POST['email'])) {
    $email = $_POST['email'];

    // Sanitize email input
    $email = mysqli_real_escape_string($conn, $email);

    // Check if email exists in the database
    $sql = "SELECT * FROM users WHERE email='$email'";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) == 0) {
        header("Location: forgot_password.php?error=Email does not exist!");
        exit();
    } else {
        // Generate new password
        function generatePassword() {
            $length = 8;
            $chars = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";
            $password = substr(str_shuffle($chars), 0, $length);
            return $password;
        }

        $new_password = generatePassword();

        // Update password in database
        $sql_update = "UPDATE users SET password='$new_password' WHERE email='$email'";
        $result_update = mysqli_query($conn, $sql_update);

        if (!$result_update) {
            header("Location: forgot_password.php?error=Error updating password!");
            exit();
        }

        // Send new password via email
        $to = $email;
        $subject = "Password Reset";
        $message = "Your new password is: " . $new_password;
        $headers = "From: your_email@example.com";

        if (mail($to, $subject, $message, $headers)) {
            header("Location: forgot_password.php?success=New password sent to your email!");
            exit();
        } else {
            header("Location: forgot_password.php?error=Error sending email!");
            exit();
        }
    }
}

mysqli_close($conn);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
    <style>
        body { font-family: Arial, sans-serif; max-width: 500px; margin: 0 auto; padding: 20px; }
        .error { color: red; }
        .success { color: green; }
    </style>
</head>
<body>
    <?php
    if (isset($_GET['error'])) {
        echo "<div class='error'>" . $_GET['error'] . "</div>";
    } elseif (isset($_GET['success'])) {
        echo "<div class='success'>" . $_GET['success'] . "</div>";
    }
    ?>

    <h2>Forgot Password</h2>
    <form action="forgot_password.php" method="post">
        <input type="email" name="email" placeholder="Enter your email address" required><br><br>
        <button type="submit">Reset Password</button>
    </form>
</body>
</html>


<?php
session_start();
include("config.php"); // Include your database connection file

// Check if form is submitted
if (isset($_POST['submit'])) {
    $email = $_POST['email'];

    // Sanitize input
    $email = mysqli_real_escape_string($conn, $email);

    // Validate email
    if (empty($email)) {
        $error = "Please enter your email address.";
    } else if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        $error = "Please enter a valid email address.";
    } else {
        // Check if email exists in the database
        $query = mysqli_query($conn, "SELECT id FROM users WHERE email='$email'");
        
        if (mysqli_num_rows($query) == 0) {
            $error = "This email does not exist in our records.";
        } else {
            // Generate a unique reset token
            $token = md5(uniqid(mt_rand(), true));
            
            // Update the token and expiration time in the database
            $expires = date('Y-m-d H:i:s', strtotime('+30 minutes'));
            $updateQuery = mysqli_query($conn, "UPDATE users SET reset_token='$token', reset_expires='$expires' WHERE email='$email'");
            
            if ($updateQuery) {
                // Send reset password email
                $to = $email;
                $subject = "Password Reset Request";
                $message = "
                    <html>
                    <body>
                        <h2>Password Reset</h2>
                        <p>We received a request to reset your password. Please click the link below to reset your password:</p>
                        <a href='http://yourwebsite.com/reset_password.php?token=$token'>Reset Password</a><br><br>
                        <p>If you did not request this password reset, please ignore this email.</p>
                    </body>
                    </html>
                ";
                
                $headers = "From: yourwebsite@yourdomain.com\r
";
                $headers .= "Content-Type: text/html; charset=ISO-8859-1\r
";
                
                // Send the email
                if (mail($to, $subject, $message, $headers)) {
                    // Email sent successfully
                    header("Location: login.php?msg=We've sent you an email to reset your password.");
                    exit();
                } else {
                    $error = "There was a problem sending the email. Please try again later.";
                }
            } else {
                $error = "An error occurred while resetting your password. Please try again.";
            }
        }
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <?php
    if (isset($error)) {
        echo "<p style='color:red;'>$error</p>";
    }
    ?>
    
    <form action="forgot_password.php" method="post">
        <h2>Forgot Password</h2>
        <input type="email" name="email" placeholder="Enter your email address" required><br><br>
        <button type="submit" name="submit">Reset Password</button>
    </form>

    <p>Remember your password? <a href="login.php">Login here</a>.</p>
</body>
</html>


<?php
session_start();
include("config.php");

if (!isset($_GET['token']) || empty($_GET['token'])) {
    header("Location: login.php?error=Invalid reset link.");
    exit();
}

$token = mysqli_real_escape_string($conn, $_GET['token']);

// Check if token exists and is valid
$query = mysqli_query($conn, "SELECT id FROM users WHERE reset_token='$token' AND reset_expires > NOW()");
if (mysqli_num_rows($query) == 0) {
    header("Location: login.php?error=Invalid or expired reset link.");
    exit();
}

// Show password reset form
?>

<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <h2>Reset Password</h2>
    <form action="reset_password.php" method="post">
        <?php if (isset($_GET['token'])) { ?>
            <input type="hidden" name="token" value="<?php echo $_GET['token']; ?>">
        <?php } ?>
        <input type="password" name="new_password" placeholder="Enter new password" required><br><br>
        <input type="password" name="confirm_password" placeholder="Confirm new password" required><br><br>
        <button type="submit" name="reset">Reset Password</button>
    </form>
</body>
</html>

<?php
if (isset($_POST['reset'])) {
    $token = $_POST['token'];
    $new_password = $_POST['new_password'];
    $confirm_password = $_POST['confirm_password'];

    if ($new_password != $confirm_password) {
        die("Passwords do not match.");
    }

    // Minimum password length validation
    if (strlen($new_password) < 8) {
        die("Password must be at least 8 characters long.");
    }

    // Update the password in the database
    $password_hash = md5($new_password); // You should use a better hashing method like bcrypt or password_hash()
    $updateQuery = mysqli_query($conn, "UPDATE users SET password='$password_hash', reset_token='', reset_expires='' WHERE reset_token='$token'");

    if ($updateQuery) {
        header("Location: login.php?success=Password has been successfully reset.");
    } else {
        die("An error occurred while resetting your password.");
    }
}
?>


<?php
$host = "localhost";
$username = "yourusername";
$password = "yourpassword";
$dbname = "yourdatabase";

$conn = mysqli_connect($host, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}
?>


<?php
session_start();

// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'mydatabase';

$conn = new mysqli($host, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Get email from form
$email = $_POST['email'];

// Check if the email exists in the database
$sql = "SELECT id FROM users WHERE email = ?";
$stmt = $conn->prepare($sql);
$stmt->bind_param('s', $email);
$stmt->execute();
$result = $stmt->get_result();

if ($result->num_rows === 0) {
    // Email not found, show error message
    die("Email address does not exist in our records.");
}

// Generate a random token
$token = bin2hex(random_bytes(32));

// Insert the token into the database with an expiration time (e.g., 1 hour)
$expires = date('Y-m-d H:i:s', strtotime('+1 hour'));

$sql = "INSERT INTO password_resets (user_id, token, expires) 
        VALUES (?, ?, ?)";
$stmt = $conn->prepare($sql);
$stmt->bind_param('iss', $result->fetch_assoc()['id'], $token, $expires);
$stmt->execute();

// Send the reset email
$to = $email;
$subject = "Password Reset Request";
$message = "
    <html>
        <body>
            <h2>Password Reset</h2>
            <p>Click the link below to reset your password:</p>
            <a href='http://yourdomain.com/reset_password.php?token=$token'>Reset Password</a>
            <br>
            This link will expire in 1 hour.
        </body>
    </html>";
$headers = "MIME-Version: 1.0" . "\r
";
$headers .= "Content-type: text/html; charset=UTF-8" . "\r
";
$headers .= "From: yourname@yourdomain.com";

mail($to, $subject, $message, $headers);

echo "An email has been sent to you with instructions to reset your password.";

// Close the database connection
$stmt->close();
$conn->close();

header("Location: login.php");
exit();
?>


<?php
session_start();

// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'mydatabase';

$conn = new mysqli($host, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Get token and passwords from form
$token = $_POST['token'];
$new_password = $_POST['new_password'];
$confirm_password = $_POST['confirm_password'];

// Check if new password matches confirmation
if ($new_password !== $confirm_password) {
    die("Passwords do not match.");
}

// Validate the token and check its expiration
$sql = "SELECT user_id, expires FROM password_resets 
        WHERE token = ? AND expires > NOW()";
$stmt = $conn->prepare($sql);
$stmt->bind_param('s', $token);
$stmt->execute();
$result = $stmt->get_result();

if ($result->num_rows === 0) {
    die("Invalid or expired reset link.");
}

// Get the user ID
$user_id = $result->fetch_assoc()['user_id'];

// Hash the new password
$hashed_password = password_hash($new_password, PASSWORD_DEFAULT);

// Update the user's password in the database
$sql = "UPDATE users SET password = ? WHERE id = ?";
$stmt = $conn->prepare($sql);
$stmt->bind_param('si', $hashed_password, $user_id);
$stmt->execute();

// Delete the reset token
$sql = "DELETE FROM password_resets WHERE token = ?";
$stmt = $conn->prepare($sql);
$stmt->bind_param('s', $token);
$stmt->execute();

echo "Password has been successfully reset.";

// Close the database connection
$stmt->close();
$conn->close();

header("Location: login.php");
exit();
?>


<?php
// Configuration
$host = 'localhost';
$dbname = 'your_database';
$username = 'root';
$password = '';

try {
    // Connect to database
    $conn = new mysqli($host, $username, $password, $dbname);
    if ($conn->connect_error) {
        throw new Exception("Connection failed: " . $conn->connect_error);
    }

    // Check if form is submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        // Sanitize email
        $email = $conn->real_escape_string(trim($_POST['email']));

        // Validate email format
        if (empty($email) || !filter_var($email, FILTER_VALIDATE_EMAIL)) {
            header("Location: forgot_password.php?msg=Invalid email address.");
            exit();
        }

        // Check if email exists in the database
        $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
        $stmt->bind_param("s", $email);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows === 0) {
            header("Location: forgot_password.php?msg=Email not registered.");
            exit();
        } else {
            // Generate reset token and expiry time
            $token = md5(rand());
            $expires = time() + 3600; // 1 hour

            // Update the user's reset token and expiry time
            $updateStmt = $conn->prepare("UPDATE users SET reset_token=?, reset_expiry=? WHERE email=?");
            $updateStmt->bind_param("sis", $token, $expires, $email);
            if (!$updateStmt->execute()) {
                throw new Exception("Error updating reset token.");
            }

            // Send the reset email
            $subject = "Password Reset Request";
            $body = "Please click this link to reset your password: http://yourwebsite.com/reset_password.php?token=$token

If you did not request this, please ignore.";

            if (!mail($email, $subject, $body)) {
                throw new Exception("Failed to send email.");
            }

            // Redirect back with success message
            header("Location: login.php?msg=Password reset link sent to your email.");
            exit();
        }
    }
} catch (Exception $e) {
    die("An error occurred: " . $e->getMessage());
} finally {
    if ($conn) {
        $conn->close();
    }
}
?>


<?php
session_start();

// Configuration
$host = 'localhost';
$dbname = 'your_database';
$username = 'root';
$password = '';

try {
    $conn = new mysqli($host, $username, $password, $dbname);
    if ($conn->connect_error) {
        throw new Exception("Connection failed: " . $conn->connect_error);
    }

    // Check token from query string
    if (!isset($_GET['token'])) {
        header("Location: login.php");
        exit();
    }
    $token = $conn->real_escape_string(trim($_GET['token']));

    // Retrieve user data based on token and expiry
    $stmt = $conn->prepare("SELECT id, email FROM users WHERE reset_token = ? AND reset_expiry > ?");
    $stmt->bind_param("si", $token, time());
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows === 0) {
        header("Location: login.php?msg=Invalid or expired token.");
        exit();
    }

    // Process password reset on form submission
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        $new_password = trim($_POST['password']);
        $confirm_password = trim($_POST['confirm']);

        if ($new_password !== $confirm_password) {
            throw new Exception("Passwords do not match.");
        }

        // Update the user's password
        $updateStmt = $conn->prepare("UPDATE users SET password=?, reset_token=null, reset_expiry=null WHERE id=?");
        $hash = password_hash($new_password, PASSWORD_DEFAULT);
        $row = $result->fetch_assoc();
        $updateStmt->bind_param("si", $hash, $row['id']);
        if (!$updateStmt->execute()) {
            throw new Exception("Error updating password.");
        }

        // Redirect to login page
        header("Location: login.php?msg=Password reset successful. Please log in.");
        exit();
    }
} catch (Exception $e) {
    die("An error occurred: " . $e->getMessage());
} finally {
    if ($conn) {
        $conn->close();
    }
}
?>
<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <h2>Reset Password</h2>
    <?php
    // Display any error messages here
    if (isset($_GET['msg'])) {
        echo '<p>' . $_GET['msg'] . '</p>';
    }
    ?>
    <form action="reset_password.php?token=<?php echo $token; ?>" method="post">
        <input type="password" name="password" placeholder="Enter new password" required><br>
        <input type="password" name="confirm" placeholder="Confirm new password" required><br>
        <button type="submit">Reset Password</button>
    </form>
</body>
</html>


<?php
// Include database connection
include 'db.php';

function resetPassword($email) {
    global $conn;

    // Check if email exists in the database
    $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
    $stmt->bind_param("s", $email);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows === 0) {
        // Email not found
        return "Email does not exist in our records.";
    }

    // Generate a random token
    $token = bin2hex(random_bytes(16));
    
    // Set the expiration time (e.g., 1 hour from now)
    $expires = date('Y-m-d H:i:s', strtotime('+1 hour'));

    // Insert the reset token into the database
    $stmt = $conn->prepare("INSERT INTO password_reset (email, token, expires) VALUES (?, ?, ?)");
    $stmt->bind_param("sss", $email, $token, $expires);
    $stmt->execute();

    // Send email with reset link
    $resetLink = "http://yourwebsite.com/reset-password.php?token=" . $token;
    
    $subject = 'Password Reset Request';
    $message = '
        <html>
            <head>
                <title>Password Reset</title>
            </head>
            <body>
                <h2>Password Reset Request</h2>
                <p>Please click the following link to reset your password:</p>
                <a href="' . $resetLink . '">Reset Password</a>
                <br><br>
                <p>If you did not request a password reset, please ignore this email.</p>
            </body>
        </html>
    ';

    // Send email using PHPMailer or other email library
    require 'PHPMailer/PHPMailer.php';
    $mail = new PHPMailer();
    $mail->isSMTP();
    $mail->Host = 'smtp.example.com';
    $mail->Port = 587;
    $mail->SMTPAuth = true;
    $mail->Username = 'your_email@example.com';
    $mail->Password = 'your_password';
    $mail->setFrom('your_email@example.com', 'Your Name');
    $mail->addAddress($email);
    $mail->Subject = $subject;
    $mail->Body = $message;
    $mail->isHTML(true);

    if ($mail->send()) {
        return "Password reset email has been sent to your inbox.";
    } else {
        return "Error sending password reset email: " . $mail->ErrorInfo;
    }
}

// Example usage:
if (isset($_POST['email'])) {
    $email = $_POST['email'];
    echo resetPassword($email);
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <?php
    if (isset($_GET['error'])) {
        echo "<p style='color: red'>" . $_GET['error'] . "</p>";
    }
    ?>

    <form action="" method="post">
        <h2>Forgot Password</h2>
        <input type="email" name="email" placeholder="Enter your email address" required>
        <button type="submit">Send Reset Link</button>
    </form>
</body>
</html>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'mydatabase';
$username = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

// Function to handle forgot password
function forgotPassword($email, $conn) {
    // Check if email exists in the database
    try {
        $stmt = $conn->prepare("SELECT id FROM users WHERE email = :email");
        $stmt->execute(['email' => $email]);
        
        if ($stmt->rowCount() > 0) {
            // Generate a unique token
            $token = bin2hex(random_bytes(16));
            
            // Insert the token and expiration time into the database
            $expires = date('Y-m-d H:i:s', strtotime('+1 hour'));
            $stmt = $conn->prepare("INSERT INTO password_reset (user_id, token, expires) 
                                  VALUES (:user_id, :token, :expires)");
            $stmt->execute([
                'user_id' => $stmt->fetchColumn(),
                'token' => $token,
                'expires' => $expires
            ]);
            
            // Send reset link to user's email
            $resetLink = "http://example.com/reset-password.php?token=" . $token;
            sendPasswordResetEmail($email, $resetLink);
            
            return true;
        } else {
            return false; // Email not found in database
        }
    } catch(PDOException $e) {
        die("Error: " . $e->getMessage());
    }
}

// Function to send password reset email
function sendPasswordResetEmail($email, $resetLink) {
    $to = $email;
    $subject = 'Password Reset Request';
    
    $message = '
        <html>
            <body>
                <h2>Password Reset</h2>
                <p>We received a request to reset your password. Click the link below to reset it:</p>
                <a href="' . $resetLink . '">' . $resetLink . '</a><br><br>
                <p>If you did not request this password reset, please ignore this email.</p>
            </body>
        </html>
    ';
    
    // Set up headers for HTML email
    $headers = "MIME-Version: 1.0\r
";
    $headers .= "Content-Type: text/html; charset=UTF-8\r
";
    $headers .= "From: webmaster@example.com\r
";
    
    mail($to, $subject, $message, $headers);
}

// Example usage
if (isset($_POST['email'])) {
    if (forgotPassword($_POST['email'], $conn)) {
        echo 'A password reset link has been sent to your email address.';
    } else {
        echo 'Email not found in our records.';
    }
}
?>


<?php
// Check if token is valid and not expired
$token = $_GET['token'];

try {
    $stmt = $conn->prepare("SELECT user_id, expires FROM password_reset WHERE token = :token");
    $stmt->execute(['token' => $token]);
    
    if ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {
        // Check if token has expired
        if (new DateTime($row['expires']) < new DateTime()) {
            die("This reset link has expired.");
        }
        
        // Display password reset form
        ?>
        <form action="reset-password.php" method="post">
            <input type="hidden" name="token" value="<?php echo $token; ?>">
            <input type="password" name="new_password" placeholder="Enter new password" required>
            <button type="submit">Reset Password</button>
        </form>
        
        <?php
    } else {
        die("Invalid or expired token.");
    }
} catch(PDOException $e) {
    die("Error: " . $e->getMessage());
}
?>


if (isset($_POST['new_password'])) {
    try {
        $token = $_POST['token'];
        $newPassword = password_hash($_POST['new_password'], PASSWORD_DEFAULT);
        
        // Update the user's password
        $stmt = $conn->prepare("UPDATE users SET password = :password WHERE id = 
                              (SELECT user_id FROM password_reset WHERE token = :token)");
        $stmt->execute([
            'password' => $newPassword,
            'token' => $token
        ]);
        
        // Delete the reset token
        $conn->exec("DELETE FROM password_reset WHERE token = :token", ['token' => $token]);
        
        echo "Your password has been updated successfully!";
    } catch(PDOException $e) {
        die("Error: " . $e->getMessage());
    }
}


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'mydatabase';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

// Generate a random string
function generateRandomString($length = 10) {
    return bin2hex(random_bytes($length));
}

// Check if email is valid and exists in the database
if ($_SERVER["REQUEST_METHOD"] == "POST" && isset($_POST['email'])) {

    $email = $_POST['email'];
    
    // Sanitize email
    $email = filter_var($email, FILTER_SANITIZE_EMAIL);
    
    // Validate email format
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        die("Invalid email format");
    }
    
    try {
        $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
        $stmt->execute([$email]);
        
        $user = $stmt->fetch(PDO::FETCH_ASSOC);
        
        if (!$user) {
            die("Email not found in our records.");
        }
        
        // Generate reset token
        $token = generateRandomString();
        $expires = date('Y-m-d H:i:s', strtotime('+30 minutes'));
        
        // Store the token in database
        $stmt = $conn->prepare("
            INSERT INTO reset_passwords 
            SET user_id = ?, token = SHA1(?), expires = ?
        ");
        $stmt->execute([$user['id'], $token, $expires]);
        
        // Send password reset email
        $to = $email;
        $subject = "Password Reset Request";
        $message = "
            <html>
            <body>
                <h2>Password Reset</h2>
                <p>Please click the following link to reset your password:</p>
                <a href='http://example.com/reset-password.php?token=$token&id=" . $user['id'] ."'>Reset Password</a>
                <br><br>
                <small>This link will expire in 30 minutes.</small>
            </body>
            </html>
        ";
        $headers = "MIME-Version: 1.0\r
";
        $headers .= "Content-type: text/html; charset=UTF-8\r
";
        $headers .= "From: admin@example.com\r
";
        
        mail($to, $subject, $message, $headers);
        
        // Redirect back to forgot password page
        header("Location: forgot-password.php?msg=Password reset instructions sent successfully.");
        
    } catch(PDOException $e) {
        die("An error occurred. Please try again later.");
    }
}
?>


// This code should be in a separate file (reset-password.php)
<?php
session_start();
require_once 'database.php';

if ($_SERVER["REQUEST_METHOD"] == "GET") {

    if (!isset($_GET['token']) || !isset($_GET['id'])) {
        die("Invalid request.");
    }
    
    $token = $_GET['token'];
    $user_id = $_GET['id'];
    
    try {
        // Check token validity
        $stmt = $conn->prepare("
            SELECT 
                rp.token,
                u.id
            FROM reset_passwords AS rp
            INNER JOIN users AS u ON rp.user_id = u.id
            WHERE rp.token = SHA1(?) AND u.id = ?
            AND rp.expires > NOW()
        ");
        $stmt->execute([$token, $user_id]);
        
        if (!$stmt->rowCount()) {
            die("Invalid or expired reset link.");
        }
        
    } catch(PDOException $e) {
        die("An error occurred. Please try again later.");
    }
    
}

if ($_SERVER["REQUEST_METHOD"] == "POST") {

    // Check if password fields are set
    if (!isset($_POST['password']) || !isset($_POST['confirm'])) {
        die("Please fill in all required fields.");
    }
    
    $new_password = $_POST['password'];
    $confirm_password = $_POST['confirm'];
    
    if ($new_password !== $confirm_password) {
        die("Passwords do not match. Please try again.");
    }
    
    if (strlen($new_password) < 8 || strlen($new_password) > 20) {
        die("Password must be between 8 and 20 characters long.");
    }
    
    // Validate token
    $token = $_GET['token'];
    $user_id = $_GET['id'];
    
    try {
        $stmt = $conn->prepare("
            SELECT 
                rp.token,
                u.id
            FROM reset_passwords AS rp
            INNER JOIN users AS u ON rp.user_id = u.id
            WHERE rp.token = SHA1(?) AND u.id = ?
            AND rp.expires > NOW()
        ");
        $stmt->execute([$token, $user_id]);
        
        if (!$stmt->rowCount()) {
            die("Invalid or expired reset link.");
        }
        
        // Update the password
        $new_password_hashed = password_hash($new_password, PASSWORD_DEFAULT);
        $stmt = $conn->prepare("
            UPDATE users 
            SET password = ?
            WHERE id = ?
        ");
        $stmt->execute([$new_password_hashed, $user_id]);
        
        // Clear reset token
        $stmt = $conn->prepare("
            DELETE FROM reset_passwords 
            WHERE user_id = ?
        ");
        $stmt->execute([$user_id]);
        
        header("Location: login.php?msg=Password updated successfully.");
        exit();
    } catch(PDOException $e) {
        die("An error occurred. Please try again later.");
    }
    
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <?php if (isset($_GET['token']) && isset($_GET['id'])): ?>
    <h2>Reset Your Password</h2>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="POST">
        <input type="password" name="password" placeholder="Enter new password" required><br>
        <input type="password" name="confirm" placeholder="Confirm new password" required><br>
        <input type="hidden" name="token" value="<?php echo $_GET['token']; ?>">
        <input type="hidden" name="id" value="<?php echo $_GET['id']; ?>">
        <button type="submit">Reset Password</button>
    </form>
    <?php else: ?>
    <p>Invalid or expired reset link.</p>
    <?php endif; ?>
</body>
</html>


<?php
// Configuration
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'root';
$password = '';

// Database connection
$conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
$conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

// Error reporting and redirects
function redirect($url) {
    header("Location: $url");
    die();
}

function showError($error) {
    echo "<div class='alert alert-danger'>$error</div>";
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Forgot Password</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
</head>
<body>

<?php
if (isset($_POST['reset'])) {
    $email = $_POST['email'];

    // Validate email input
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        showError("Invalid email format");
        exit();
    }

    try {
        // Check if the email exists in the database
        $stmt = $conn->prepare("SELECT id FROM users WHERE email = :email");
        $stmt->bindParam(':email', $email);
        $stmt->execute();

        if ($stmt->rowCount() == 0) {
            showError("No account found with this email address");
            exit();
        }

        // Generate reset token and expiration time
        $resetToken = bin2hex(random_bytes(16));
        $expires = date('Y-m-d H:i:s', strtotime('+1 hour'));

        // Update the database with the reset token and expiration time
        $stmt = $conn->prepare("UPDATE users SET reset_token = :token, reset_expires = :expires WHERE email = :email");
        $stmt->bindParam(':token', $resetToken);
        $stmt->bindParam(':expires', $expires);
        $stmt->bindParam(':email', $email);
        $stmt->execute();

        // Send the reset link to the user's email
        $to = $email;
        $subject = "Password Reset Request";
        $message = "
            <html>
                <head>
                    <title>Password Reset</title>
                </head>
                <body>
                    <h2>Password Reset Request</h2>
                    <p>We received a password reset request for your account. Click the link below to reset your password:</p>
                    <a href='http://localhost/reset_password.php?token=$resetToken&id=" . $stmt->fetch(PDO::FETCH_ASSOC)['id'] . "'>Reset Password</a>
                    <p>If you did not request this password reset, please ignore this email.</p>
                    <p>This link will expire in 1 hour.</p>
                </body>
            </html>";
        $headers = "MIME-Version: 1.0\r
";
        $headers .= "Content-Type: text/html; charset=UTF-8\r
";
        $headers .= "From: noreply@yourdomain.com\r
";

        mail($to, $subject, $message, $headers);

        // Redirect back to forgot password page with success message
        redirect("forgot_password.php?success=true");

    } catch(PDOException $e) {
        showError("Error occurred while processing your request. Please try again.");
    }
}
?>

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-6 col-lg-4">
            <h2>Forgot Password</h2>
            <?php if (isset($_GET['success'])) { ?>
                <div class="alert alert-success">
                    An email has been sent to you with instructions to reset your password.
                </div>
            <?php } ?>

            <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
                <div class="form-group">
                    <label for="email">Email address</label>
                    <input type="email" class="form-control" id="email" name="email" required>
                </div>
                <button type="submit" name="reset" class="btn btn-primary">Reset Password</button>
            </form>

            <p class="mt-3">Remember your password? <a href="login.php">Login here</a></p>
        </div>
    </div>
</div>

</body>
</html>

<?php
// Close database connection
$conn = null;
?>



<?php
session_start();

// Configuration
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'root';
$password = '';

// Database connection
$conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
$conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

function redirect($url) {
    header("Location: $url");
    die();
}

function showError($error) {
    echo "<div class='alert alert-danger'>$error</div>";
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Reset Password</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
</head>
<body>

<?php
if (!isset($_GET['token']) || !isset($_GET['id'])) {
    showError("Invalid reset link");
    exit();
}

$token = $_GET['token'];
$id = $_GET['id'];

try {
    // Check if the token is valid and not expired
    $stmt = $conn->prepare("
        SELECT id, email 
        FROM users 
        WHERE reset_token = :token 
        AND reset_expires > NOW() 
        AND id = :id");
    $stmt->bindParam(':token', $token);
    $stmt->bindParam(':id', $id);
    $stmt->execute();

    if ($stmt->rowCount() == 0) {
        showError("Invalid or expired reset link");
        exit();
    }

    // If the token is valid, show the password reset form
    $user = $stmt->fetch(PDO::FETCH_ASSOC);
} catch(PDOException $e) {
    showError("Error occurred while processing your request. Please try again.");
}

if (isset($_POST['new_password'])) {
    $newPassword = $_POST['new_password'];
    
    if ($newPassword == '') {
        showError("Please enter a new password");
        exit();
    }

    // Update the user's password
    $stmt = $conn->prepare("
        UPDATE users 
        SET password = :password, reset_token = NULL, reset_expires = NULL 
        WHERE id = :id");
    $stmt->bindParam(':password', password_hash($newPassword, PASSWORD_DEFAULT));
    $stmt->bindParam(':id', $id);
    $stmt->execute();

    // Redirect to success page
    redirect("login.php?message=Password%20reset%20successful");
}
?>

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-6 col-lg-4">
            <h2>Reset Password</h2>
            <?php if (isset($_GET['success'])) { ?>
                <div class="alert alert-success">
                    Your password has been reset successfully!
                </div>
            <?php } ?>

            <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
                <input type="hidden" name="id" value="<?php echo $id; ?>">
                <div class="form-group">
                    <label for="new_password">New Password</label>
                    <input type="password" class="form-control" id="new_password" name="new_password" required>
                </div>
                <button type="submit" class="btn btn-primary">Reset Password</button>
            </form>

            <p class="mt-3">Return to login page? <a href="login.php">Login here</a></p>
        </div>
    </div>
</div>

</body>
</html>

<?php
// Close database connection
$conn = null;
?>


<?php
session_start();

// Database connection parameters
$host = 'localhost';
$dbUsername = 'root';
$dbPassword = '';
$dbName = 'mydatabase';

// Create database connection
$conn = new mysqli($host, $dbUsername, $dbPassword, $dbName);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// If form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    if (isset($_POST['reset'])) {
        // Email provided by user
        $email = $_POST['email'];
        
        // Check if email exists in database
        $sql = "SELECT * FROM users WHERE email=?";
        $stmt = $conn->prepare($sql);
        $stmt->bind_param("s", $email);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            // Generate random token
            $token = md5(uniqid(rand(), true));
            
            // Set token expiration time (1 hour)
            $expires = date("Y-m-d H:i:s", time() + 3600);
            
            // Update the database with the new token and expiration time
            $updateSql = "UPDATE users SET reset_token=?, reset_expires=? WHERE email=?";
            $updateStmt = $conn->prepare($updateSql);
            $updateStmt->bind_param("sss", $token, $expires, $email);
            $updateStmt->execute();
            
            // Send email with password reset link
            $to = $email;
            $subject = "Password Reset Request";
            $message = "
                <html>
                    <head></head>
                    <body>
                        <p>Hello,</p>
                        <p>A password reset request was received for your account. Click the link below to reset your password:</p>
                        <a href='http://example.com/reset-password.php?token=$token'>Reset Password</a>
                        <p>If you did not request this password reset, please ignore this email.</p>
                        <p>This link will expire in 1 hour.</p>
                    </body>
                </html>
            ";
            $headers = "MIME-Version: 1.0" . "\r
";
            $headers .= "Content-type:text/html;charset=UTF-8" . "\r
";
            $headers .= "From: noreply@example.com" . "\r
";

            if (mail($to, $subject, $message, $headers)) {
                echo "<script>alert('Password reset link has been sent to your email.');</script>";
            } else {
                echo "<script>alert('Failed to send password reset link. Please try again.');</script>";
            }
        } else {
            echo "<script>alert('Email not found in our records.');</script>";
        }
    }
}

// Reset password form
echo '
<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <h2>Forgot Password</h2>
    <form method="POST" action="">
        <input type="email" name="email" placeholder="Enter your email" required><br><br>
        <button type="submit" name="reset">Reset Password</button>
    </form>
</body>
</html>
';

// Close database connection
$conn->close();
?>



<?php
session_start();

// Database connection parameters
$host = 'localhost';
$dbUsername = 'root';
$dbPassword = '';
$dbName = 'mydatabase';

// Create database connection
$conn = new mysqli($host, $dbUsername, $dbPassword, $dbName);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

if (isset($_GET['token'])) {
    $token = $_GET['token'];
    
    // Check if token exists and is valid
    $sql = "SELECT * FROM users WHERE reset_token=? AND reset_expires > NOW()";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("s", $token);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows == 1) {
        // Show password reset form
        echo '
            <!DOCTYPE html>
            <html>
            <head>
                <title>Reset Password</title>
            </head>
            <body>
                <h2>Reset Password</h2>
                <form method="POST" action="">
                    <input type="password" name="new_password" placeholder="Enter new password" required><br><br>
                    <button type="submit" name="change">Change Password</button>
                </form>
            ';
    } else {
        echo "<script>alert('Invalid or expired reset link. Please request a new password reset.'); window.location.href='forgot-password.php';</script>";
    }
} elseif (isset($_POST['change'])) {
    $token = $_GET['token'];
    
    // Update user's password
    $newPassword = password_hash($_POST['new_password'], PASSWORD_DEFAULT);
    
    $sql = "UPDATE users SET password=?, reset_token=NULL, reset_expires=NULL WHERE reset_token=?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("ss", $newPassword, $token);
    $stmt->execute();
    
    if ($stmt->affected_rows > 0) {
        echo "<script>alert('Password has been updated!'); window.location.href='login.php';</script>";
    } else {
        echo "<script>alert('Failed to update password. Please try again.'); window.location.href='reset-password.php?token=$token';</script>";
    }
} else {
    // Invalid access
    echo "<script>alert('Invalid request. Please use the reset link from your email.'); window.location.href='forgot-password.php';</script>";
}

// Close database connection
$conn->close();
?>



<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Forgot Password</title>
</head>
<body>
    <h2>Forgot Password</h2>
    <?php
    if (isset($_SESSION['message'])) {
        echo '<p>' . $_SESSION['message'] . '</p>';
        unset($_SESSION['message']);
    }
    ?>
    <form action="forgot-password-handler.php" method="post">
        <label for="email">Email:</label><br>
        <input type="email" id="email" name="email" required><br>
        <button type="submit">Reset Password</button>
    </form>
</body>
</html>


<?php
session_start();
include('db-config.php'); // Include your database configuration

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $email = mysqli_real_escape_string($conn, $_POST['email']);
    
    // Check if email exists in the database
    $sql = "SELECT id FROM users WHERE email='$email'";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) == 1) {
        // Generate a random token
        $token = bin2hex(random_bytes(16));
        
        // Update the database with the new token and expiration time
        $expTime = date('Y-m-d H:i:s', strtotime('+1 hour'));
        $sqlUpdate = "UPDATE users SET reset_token='$token', reset_exp_time='$expTime' WHERE email='$email'";
        mysqli_query($conn, $sqlUpdate);
        
        // Send the password reset email
        $to = $email;
        $subject = "Password Reset Request";
        $message = "Please click on this link to reset your password: http://your-site.com/reset-password.php?token=$token

This link will expire in 1 hour.";
        $headers = "From: no-reply@your-site.com\r
";
        
        if (mail($to, $subject, $message, $headers)) {
            $_SESSION['message'] = "A password reset email has been sent to you!";
            header("Location: forgot-password.php");
            exit();
        } else {
            echo "Email could not be sent. Please try again later.";
        }
    } else {
        $_SESSION['message'] = "This email does not exist in our database!";
        header("Location: forgot-password.php");
        exit();
    }
}
?>


<?php
session_start();
include('db-config.php');

if (!isset($_GET['token'])) {
    die("Invalid request.");
}

$token = $_GET['token'];

// Check if token exists and is still valid
$sql = "SELECT id, email FROM users WHERE reset_token='$token' AND reset_exp_time > NOW()";
$result = mysqli_query($conn, $sql);

if (mysqli_num_rows($result) != 1) {
    die("Invalid or expired token. Please request a new password reset.");
}

// Fetch user data
$row = mysqli_fetch_assoc($result);
$userEmail = $row['email'];
?>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Reset Password</title>
</head>
<body>
    <h2>Reset Password</h2>
    <?php
    if (isset($_SESSION['message'])) {
        echo '<p>' . $_SESSION['message'] . '</p>';
        unset($_SESSION['message']);
    }
    ?>
    <form action="reset-password-handler.php" method="post">
        <input type="hidden" name="token" value="<?php echo $token; ?>">
        <label for="new_password">New Password:</label><br>
        <input type="password" id="new_password" name="new_password" required><br>
        <label for="confirm_password">Confirm New Password:</label><br>
        <input type="password" id="confirm_password" name="confirm_password" required><br>
        <button type="submit">Reset Password</button>
    </form>
</body>
</html>


<?php
session_start();
include('db-config.php');

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $token = $_POST['token'];
    $new_password = $_POST['new_password'];
    $confirm_password = $_POST['confirm_password'];
    
    if ($new_password != $confirm_password) {
        die("Passwords do not match.");
    }
    
    // Check if token exists and is still valid
    $sql = "SELECT id, email FROM users WHERE reset_token='$token' AND reset_exp_time > NOW()";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) != 1) {
        die("Invalid or expired token. Please request a new password reset.");
    }
    
    // Hash the new password
    $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);
    
    // Update the user's password and clear the reset token
    $row = mysqli_fetch_assoc($result);
    $userId = $row['id'];
    
    $sqlUpdate = "UPDATE users SET password='$hashed_password', reset_token='', reset_exp_time='0000-00-00 00:00:00' WHERE id='$userId'";
    if (mysqli_query($conn, $sqlUpdate)) {
        $_SESSION['message'] = "Your password has been successfully updated!";
        header("Location: login.php");
        exit();
    } else {
        die("An error occurred while updating your password. Please try again.");
    }
}
?>


<?php
$servername = "localhost";
$username = "root";
$password = "";
$dbname = "your_database_name";

// Create connection
$conn = mysqli_connect($servername, $username, $password, $dbname);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}
?>


<?php
// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$database = 'testdb';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $database);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = mysqli_real_escape_string($conn, $_POST['email']);

    // Query to check if email exists
    $sql = "SELECT id FROM users WHERE email='$email'";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) > 0) {
        // Generate a unique reset token
        $token = bin2hex(random_bytes(16));

        // Update the user's record with the new token and expiration time
        $expires = date('Y-m-d H:i:s', strtotime('+1 hour'));
        $sql = "UPDATE users SET reset_token='$token', reset_expires='$expires' WHERE email='$email'";
        mysqli_query($conn, $sql);

        // Send reset link to user's email
        $to = $email;
        $subject = "Password Reset Request";
        $message = "Please click the following link to reset your password: http://example.com/reset.php?token=$token";
        $headers = 'From: webmaster@example.com';

        if (mail($to, $subject, $message, $headers)) {
            echo "An email has been sent with instructions to reset your password.";
        } else {
            echo "Failed to send the reset email. Please try again later.";
        }
    } else {
        echo "Email does not exist in our records. Please check your email or register first.";
    }
}
?>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'mydatabase';
$username = 'root';
$password = '';

try {
    // Connect to the database
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    die("Could not connect to the database: " . $e->getMessage());
}

// Check if form was submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Get email from POST data
    $email = isset($_POST['email']) ? trim($_POST['email']) : '';

    // Validate email
    if (empty($email)) {
        die('Email is required');
    }

    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        die('Please enter a valid email address');
    }

    // Check if user exists in the database
    $stmt = $conn->prepare("SELECT id FROM users WHERE email = :email");
    $stmt->bindParam(':email', $email);
    $stmt->execute();
    
    $user = $stmt->fetch(PDO::FETCH_ASSOC);

    if (!$user) {
        die('No user found with this email address');
    }

    // Generate a random token
    $token = bin2hex(random_bytes(32));

    // Store the token and expiration time in the database (e.g., tokens table)
    $expires = date('Y-m-d H:i:s', strtotime('+1 hour'));
    
    $stmt = $conn->prepare("INSERT INTO password_reset_tokens (user_id, token, expires) VALUES (:user_id, :token, :expires)");
    $stmt->bindParam(':user_id', $user['id']);
    $stmt->bindParam(':token', $token);
    $stmt->bindParam(':expires', $expires);

    try {
        $stmt->execute();
    } catch(PDOException $e) {
        die('An error occurred while saving the reset token');
    }

    // Send email with password reset link
    $resetLink = 'http://example.com/reset-password.php?token=' . $token;
    
    $to = $email;
    $subject = 'Password Reset Request';
    $message = "You have requested a password reset.

Please click on the following link to reset your password:
$resetLink

If you did not request this, please ignore this email.";
    
    $headers = "From: webmaster@example.com" . "\r
".
               "Reply-To: webmaster@example.com" . "\r
".
               "X-Mailer: PHP/" . phpversion();

    if (mail($to, $subject, $message, $headers)) {
        // Redirect back to login page with success message
        header("Location: login.php?message=Password reset link has been sent to your email");
        exit();
    } else {
        die('An error occurred while sending the password reset email');
    }
}

// Show the forgot password form
?>

<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <h2>Forgot Password</h2>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <input type="email" name="email" placeholder="Enter your email address" required><br><br>
        <button type="submit">Request Reset</button>
    </form>
</body>
</html>


<?php
// Database configuration file (include this wherever needed)
include("config.php");

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Sanitize email input
    $email = htmlspecialchars($_POST['email']);

    try {
        // Connect to database
        $conn = new mysqli($db_host, $db_user, $db_pass, $db_name);

        // Check connection
        if ($conn->connect_error) {
            die("Connection failed: " . $conn->connect_error);
        }

        // Prepare and execute SQL query to check email existence
        $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
        $stmt->bind_param('s', $email);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            // Generate reset token
            $token = md5(uniqid(rand(), true));
            
            // Update database with new token and expiration time (24 hours)
            $expire_time = date('Y-m-d H:i:s', strtotime('+24 hours'));
            $updateStmt = $conn->prepare("UPDATE users SET reset_token = ?, reset_expires = ? WHERE email = ?");
            $updateStmt->bind_param('sss', $token, $expire_time, $email);
            $updateStmt->execute();

            // Store token in session
            $_SESSION['reset_token'] = $token;

            // Send reset password email
            $to = $email;
            $subject = "Password Reset Request";
            $message = "
                <html>
                    <head></head>
                    <body>
                        <h2>Password Reset</h2>
                        <p>We received a request to reset your password. Click the link below to reset it:</p>
                        <a href='http://yourwebsite.com/reset-password.php?token=$token'>Reset Password</a><br><br>
                        <small>If you didn't request this password reset, you can safely ignore this email.</small>
                    </body>
                </html>
            ";
            $headers = "MIME-Version: 1.0\r
";
            $headers .= "Content-type: text/html; charset=UTF-8\r
";
            $headers .= "From: Your Website <noreply@yourwebsite.com>\r
";

            mail($to, $subject, $message, $headers);

            // Redirect to success page
            header("Location: forgot-password.php?success=1");
            exit();
        } else {
            echo "<script>alert('Email not found!');</script>";
        }

    } catch (Exception $e) {
        echo "Error: " . $e->getMessage();
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <?php
    if (isset($_GET['success'])) {
        echo "<p>Password reset email has been sent to your email address.</p>";
    } else {
        // Display the form if no success message is set
    ?>
    <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
        <label for="email">Enter your email:</label><br>
        <input type="text" id="email" name="email">
        <br><br>
        <input type="submit" value="Submit">
    </form>
    <?php } ?>
</body>
</html>


<?php
// Include database configuration file
require_once 'config.php';

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = $_POST['email'];
    
    // Check if email exists in the database
    $stmt = $pdo->prepare("SELECT id FROM users WHERE email = ?");
    $stmt->execute([$email]);
    $user = $stmt->fetch();
    
    if ($user) {
        // Generate a random token
        $token = bin2hex(random_bytes(16));
        $expires = date('Y-m-d H:i:s', time() + 3600); // Token expires in 1 hour
        
        // Insert token into password_resets table
        $stmt = $pdo->prepare("INSERT INTO password_resets (user_id, token, created_at) VALUES (?, ?, ?)");
        $stmt->execute([$user['id'], $token, $expires]);
        
        // Send reset email
        $resetLink = "http://yourdomain.com/reset-password.php?token=$token";
        $subject = 'Password Reset Request';
        $message = "Please click the following link to reset your password: $resetLink";
        
        mail($email, $subject, $message);
        echo "A password reset email has been sent to you.";
    } else {
        echo "Email does not exist in our database.";
    }
}
?>

<!-- HTML Form -->
<form action="forgot-password.php" method="post">
    <input type="email" name="email" placeholder="Enter your email" required>
    <button type="submit">Reset Password</button>
</form>


<?php
require_once 'config.php';

if (isset($_GET['token'])) {
    $token = $_GET['token'];
    
    // Check if token exists and is valid
    $stmt = $pdo->prepare("SELECT * FROM password_resets WHERE token = ? AND created_at > ?");
    $stmt->execute([$token, date('Y-m-d H:i:s')]);
    $reset = $stmt->fetch();
    
    if ($reset) {
        // Show password reset form
        ?>
        <form action="reset-password.php" method="post">
            <input type="hidden" name="token" value="<?php echo $token; ?>">
            <input type="password" name="password" placeholder="New Password" required>
            <input type="password" name="confirm_password" placeholder="Confirm Password" required>
            <button type="submit">Reset Password</button>
        </form>
        <?php
    } else {
        echo "Invalid or expired token.";
    }
}

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $token = $_POST['token'];
    $password = $_POST['password'];
    
    // Update user's password
    $stmt = $pdo->prepare("SELECT user_id FROM password_resets WHERE token = ?");
    $stmt->execute([$token]);
    $reset = $stmt->fetch();
    
    if ($reset) {
        $hashedPassword = password_hash($password, PASSWORD_DEFAULT);
        
        // Update the user's password
        $stmt = $pdo->prepare("UPDATE users SET password = ? WHERE id = ?");
        $stmt->execute([$hashedPassword, $reset['user_id']]);
        
        // Delete the token
        $stmt = $pdo->prepare("DELETE FROM password_resets WHERE token = ?");
        $stmt->execute([$token]);
        
        echo "Password has been reset successfully!";
    } else {
        echo "Invalid request.";
    }
}
?>


<?php
// Configuration
$host = 'localhost';
$dbname = 'mydatabase';
$username = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

// Get email from POST request
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = $_POST['email'];

    // Check if the email exists in the database
    $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
    $stmt->execute([$email]);
    
    if ($stmt->rowCount() > 0) {
        // Generate a random token
        $token = bin2hex(random_bytes(16));
        
        // Set expiration time for the token (e.g., 3 hours from now)
        $expires = date('Y-m-d H:i:s', strtotime('+3 hours'));
        
        // Update the user's record with the new token and expiration
        $updateStmt = $conn->prepare("UPDATE users SET reset_token = ?, reset_expires = ? WHERE email = ?");
        $updateStmt->execute([$token, $expires, $email]);
        
        // Send the password reset email
        $to = $email;
        $subject = "Password Reset Request";
        $message = "
            <html>
                <head></head>
                <body>
                    <p>Hello,</p>
                    <p>You have requested a password reset. Click the link below to reset your password:</p>
                    <a href='http://localhost/reset_password.php?token=$token'>Reset Password</a><br><br>
                    <p>If you did not request this password reset, please ignore this email.</p>
                </body>
            </html>
        ";
        $headers = "MIME-Version: 1.0" . "\r
";
        $headers .= "Content-type:text/html;charset=UTF-8" . "\r
";
        $headers .= "From: <your_email@example.com>" . "\r
";
        
        mail($to, $subject, $message, $headers);
        
        echo "An email has been sent to your address with a password reset link.";
    } else {
        echo "Email not found in our records. Please check your email and try again.";
    }
}

$conn = null;
?>


<?php
// Configuration
$host = 'localhost';
$dbname = 'mydatabase';
$username = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

// Get token from query string
$token = isset($_GET['token']) ? $_GET['token'] : '';

if ($token != '') {
    // Check if the token exists and is still valid
    $stmt = $conn->prepare("SELECT id, reset_expires FROM users WHERE reset_token = ?");
    $stmt->execute([$token]);
    
    if ($stmt->rowCount() > 0) {
        $row = $stmt->fetch();
        
        // Check if the token has expired
        if (strtotime($row['reset_expires']) < time()) {
            echo "This password reset link has expired. Please request a new one.";
            exit;
        }
    } else {
        echo "Invalid reset token. Please request a new password reset.";
        exit;
    }
} else {
    header("Location: forgot_password.php");
    exit();
}

// Check if the form was submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $newPassword = $_POST['password'];
    $confirmPassword = $_POST['confirm_password'];
    
    // Validate password match
    if ($newPassword != $confirmPassword) {
        echo "Passwords do not match. Please try again.";
        exit();
    }
    
    // Hash the new password
    $hashedPassword = password_hash($newPassword, PASSWORD_DEFAULT);
    
    // Update the user's password and clear the reset token
    $updateStmt = $conn->prepare("UPDATE users SET password = ?, reset_token = NULL, reset_expires = NULL WHERE reset_token = ?");
    $updateStmt->execute([$hashedPassword, $token]);
    
    echo "Your password has been updated successfully. You can now <a href='login.php'>log in</a>.";
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <h2>Reset Password</h2>
    <form action="reset_password.php?token=<?php echo $token; ?>" method="post">
        <label>New Password:</label><br>
        <input type="password" name="password" required><br><br>
        <label>Confirm Password:</label><br>
        <input type="password" name="confirm_password" required><br><br>
        <input type="submit" value="Reset Password">
    </form>
</body>
</html>

<?php
$conn = null;
?>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$db_name = 'mydatabase';

// Create connection
$conn = new mysqli($host, $username, $password, $db_name);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Session start
session_start();

// Function to sanitize input data
function sanitize($data) {
    return htmlspecialchars(strip_tags(trim($data)));
}

// Forgot password function
function forgotPassword($email, $conn) {
    // Check if email exists in database
    $sql = "SELECT id FROM users WHERE email = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("s", $email);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows === 1) {
        // Generate reset token
        $resetToken = uniqid() . time();
        
        // Store token in database
        $sql = "UPDATE users SET reset_token = ? WHERE email = ?";
        $stmt = $conn->prepare($sql);
        $stmt->bind_param("ss", $resetToken, $email);
        $stmt->execute();

        // Send reset email
        sendResetEmail($email, $resetToken);

        return true;
    } else {
        return false;
    }
}

// Function to send reset email
function sendResetEmail($email, $token) {
    $to = $email;
    $subject = "Password Reset Request";
    $message = "
        <html>
        <head></head>
        <body>
            <h2>Password Reset</h2>
            <p>Please click the following link to reset your password:</p>
            <a href='http://localhost/reset-password.php?token=" . $token . "'>Reset Password</a>
            <br><br>
            If you did not request this password reset, please ignore this email.
        </body>
        </html>
    ";
    $headers = "MIME-Version: 1.0" . "\r
";
    $headers .= "Content-type:text/html;charset=UTF-8" . "\r
";
    $headers .= "From: <your-email@example.com>" . "\r
";

    if (mail($to, $subject, $message, $headers)) {
        return true;
    } else {
        return false;
    }
}

// Function to reset password
function resetPassword($newPassword, $token, $conn) {
    // Check if token exists in database
    $sql = "SELECT id FROM users WHERE reset_token = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("s", $token);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows === 1) {
        // Update password and clear token
        $hashPassword = password_hash($newPassword, PASSWORD_DEFAULT);
        
        $sql = "UPDATE users SET password = ?, reset_token = NULL WHERE reset_token = ?";
        $stmt = $conn->prepare($sql);
        $stmt->bind_param("ss", $hashPassword, $token);
        $stmt->execute();

        return true;
    } else {
        return false;
    }
}

// Close database connection
$conn->close();
?>


<?php
include 'forgot-password.php';
?>

<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <?php
    if ($_SERVER['REQUEST_METHOD'] == "POST") {
        $email = sanitize($_POST['email']);
        
        if (forgotPassword($email, $conn)) {
            echo "<p>Password reset link has been sent to your email.</p>";
        } else {
            echo "<p>Email not found in our records.</p>";
        }
    }
    ?>
    
    <form action="" method="post">
        <input type="email" name="email" placeholder="Enter your email address" required>
        <button type="submit">Request Password Reset</button>
    </form>
</body>
</html>


<?php
include 'forgot-password.php';
?>

<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <?php
    if (!isset($_GET['token'])) {
        die("Invalid request");
    }

    $token = sanitize($_GET['token']);
    
    // Check if token exists in database
    $sql = "SELECT id FROM users WHERE reset_token = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("s", $token);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows === 1) {
        // Show password reset form
        ?>
        <form action="" method="post">
            <input type="password" name="new_password" placeholder="Enter new password" required>
            <input type="password" name="confirm_password" placeholder="Confirm new password" required>
            <button type="submit">Reset Password</button>
        </form>

        <?php
        if ($_SERVER['REQUEST_METHOD'] == "POST") {
            $newPassword = sanitize($_POST['new_password']);
            $confirmPassword = sanitize($_POST['confirm_password']);

            if ($newPassword !== $confirmPassword) {
                die("Passwords do not match");
            }

            if (resetPassword($newPassword, $token, $conn)) {
                echo "<p>Password has been reset successfully!</p>";
            } else {
                echo "<p>Error resetting password.</p>";
            }
        }
    } else {
        die("Invalid or expired token");
    }
    ?>
</body>
</html>


<?php
// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'mydatabase';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Check if form is submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Sanitize input
    $email = trim(mysqli_real_escape_string($conn, htmlspecialchars($_POST['email'])));

    // Validate email
    if (empty($email)) {
        die("Email address is required!");
    }

    // Check if email exists in database
    $query = "SELECT * FROM users WHERE email='$email'";
    $result = mysqli_query($conn, $query);

    if (mysqli_num_rows($result) == 0) {
        die("No user found with this email address!");
    } else {
        // Generate a new password
        function generatePassword() {
            $chars = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";
            $length = strlen($chars);
            $newpass = '';
            for ($i = 0; $i < 8; $i++) {
                $newpass .= $chars[rand(0, $length - 1)];
            }
            return $newpass;
        }

        $newpass = generatePassword();

        // Update the password in database
        $updateQuery = "UPDATE users SET password='$newpass' WHERE email='$email'";
        mysqli_query($conn, $updateQuery);

        // Send the new password to user's email
        $to = $email;
        $subject = "Your New Password";
        $message = "Dear User,

Your temporary password is: $newpass

Please login and change your password immediately.

Best regards,
Admin";

        if (mail($to, $subject, $message)) {
            echo "A new password has been sent to your email address. Please check your inbox.";
        } else {
            echo "Failed to send the new password. Please try again later.";
        }
    }
}

mysqli_close($conn);
?>


<?php
// Database connection
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'mydatabase';

$conn = mysqli_connect($host, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function forgot_password($email) {
    global $conn;
    
    // Check if email exists in database
    $sql = "SELECT * FROM users WHERE email='$email'";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) == 0) {
        return "Email does not exist";
    }
    
    // Generate a random token
    $token = md5(time() . rand());
    $expires = date('Y-m-d H:i:s', time() + 3600); // Token expires after 1 hour
    
    // Update the database with the new token and expiration time
    $sql = "UPDATE users SET reset_token='$token', reset_expires='$expires' WHERE email='$email'";
    mysqli_query($conn, $sql);
    
    // Send reset password email
    $to = $email;
    $subject = "Reset Password";
    $message = "Please click the following link to reset your password: http://yourwebsite.com/reset_password.php?token=$token";
    
    // Use PHPMailer or any other email library to send emails reliably
    require 'PHPMailer/PHPMailerAutoload.php';
    
    $mail = new PHPMailer;
    $mail->isSMTP();
    $mail->Host = 'smtp.example.com'; // Replace with your SMTP server
    $mail->Port = 587; // Replace with your SMTP port
    $mail->SMTPAuth = true;
    $mail->Username = 'your_email@example.com';
    $mail->Password = 'your_password';
    
    $mail->setFrom('your_email@example.com', 'Your Name');
    $mail->addAddress($to);
    $mail->Subject = $subject;
    $mail->Body = $message;
    
    if ($mail->send()) {
        return "Reset password link has been sent to your email";
    } else {
        return "Error sending email";
    }
}

function reset_password($token, $new_password) {
    global $conn;
    
    // Check if token exists and is valid
    $sql = "SELECT * FROM users WHERE reset_token='$token'";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) == 0) {
        return "Invalid token";
    }
    
    $row = mysqli_fetch_assoc($result);
    $expires = $row['reset_expires'];
    
    // Check if token has expired
    if ($expires < date('Y-m-d H:i:s')) {
        return "Token has expired";
    }
    
    // Update the password
    $sql = "UPDATE users SET password='" . md5($new_password) . "', reset_token='', reset_expires='' WHERE reset_token='$token'";
    mysqli_query($conn, $sql);
    
    return "Password updated successfully";
}
?>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'your_database';

try {
    // Create database connection
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        $email = $_POST['email'];
        
        // Check if email exists
        $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
        $stmt->execute([$email]);
        
        if ($stmt->rowCount() == 0) {
            die("Email not found. Please try again.");
        }
        
        // Generate a random token
        $token = bin2hex(random_bytes(16));
        $expires = time() + 3600; // Token expires in 1 hour
        
        // Update tokens table with the new token
        $conn->exec("DELETE FROM password_reset_tokens WHERE email = '$email'");
        $conn->prepare("INSERT INTO password_reset_tokens (token, email, created_at) VALUES (?, ?, ?)")
            ->execute([$token, $email, time()]);
        
        // Send reset link to user's email
        $resetLink = "http://yourwebsite.com/reset_password.php?token=$token";
        $to = $email;
        $subject = "Password Reset Request";
        $message = "Please click the following link to reset your password: 

$resetLink

This link will expire in 1 hour.";
        
        // Send email
        if (mail($to, $subject, $message)) {
            header("Location: forgot_password_success.php");
            exit();
        } else {
            die("Failed to send the reset link. Please try again.");
        }
    }
} catch(PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

// Show form if it's not a POST request
if ($_SERVER["REQUEST_METHOD"] != "POST") {
?>
<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <h2>Forgot Password</h2>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        Email: <input type="text" name="email"><br><br>
        <input type="submit" value="Submit">
    </form>
</body>
</html>
<?php
}
?>


<?php
// Include database connection
include('db_connection.php');

// Start session
session_start();

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = mysqli_real_escape_string($conn, $_POST['email']);

    // Check if email exists in the database
    $query = "SELECT id FROM users WHERE email = '$email'";
    $result = mysqli_query($conn, $query);

    if (mysqli_num_rows($result) == 1) {
        // Generate a random token
        $token = bin2hex(random_bytes(32));
        $token_hash = password_hash($token . "random_salt", PASSWORD_DEFAULT);

        // Store the token in the database
        $expirY = date('Y-m-d H:i:s', time() + 3600); // Token expires after 1 hour
        $update_query = "UPDATE users SET reset_token = '$token_hash', reset_expiry = '$expirY' WHERE email = '$email'";
        mysqli_query($conn, $update_query);

        // Send the password reset link to user's email
        $to = $email;
        $subject = "Password Reset Request";
        $message = "Please click on the following link to reset your password: 

";
        $message .= "http://yourwebsite.com/reset-password.php?token=$token

";
        $message .= "If you did not request this, please ignore this email.
The link will expire in one hour.";

        // Set mail headers
        $headers = "From: yourname@yourwebsite.com\r
";
        $headers .= "Reply-To: yourname@yourwebsite.com\r
";
        
        mail($to, $subject, $message, $headers);

        echo "<div style='color:green'>A password reset link has been sent to your email address.</div>";
    } else {
        echo "<div style='color:red'>Email does not exist in our database!</div>";
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <h2>Forgot Password</h2>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <input type="email" name="email" placeholder="Enter your email address" required><br><br>
        <input type="submit" value="Submit">
    </form>
</body>
</html>


<?php
// Include database connection
include('db_connection.php');

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $token = $_GET['token'];
    $new_password = mysqli_real_escape_string($conn, $_POST['new_password']);
    $confirm_password = mysqli_real_escape_string($conn, $_POST['confirm_password']);

    // Check if token is valid and not expired
    $query = "SELECT id FROM users WHERE reset_token = '" . password_hash($token . "random_salt", PASSWORD_DEFAULT) . "' AND reset_expiry > NOW()";
    $result = mysqli_query($conn, $query);

    if (mysqli_num_rows($result) == 1) {
        // Update the user's password
        if ($new_password == $confirm_password) {
            // Validate password complexity
            if (strlen($new_password) < 8 || !preg_match("/[a-zA-Z]/", $new_password) || !preg_match("/\d/", $new_password)) {
                die("<div style='color:red'>Password must be at least 8 characters and contain both letters and numbers!</div>");
            }

            // Hash the new password
            $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);

            // Update the database
            mysqli_query($conn, "UPDATE users SET password = '$hashed_password', reset_token = NULL, reset_expiry = NULL WHERE reset_token = '" . password_hash($token . "random_salt", PASSWORD_DEFAULT) . "'");

            echo "<div style='color:green'>Password has been successfully updated!</div>";
        } else {
            die("<div style='color:red'>Passwords do not match!</div>");
        }
    } else {
        die("<div style='color:red'>Invalid or expired token!</div>");
    }
}

// Check if token is valid and not expired
if (isset($_GET['token'])) {
    $token = $_GET['token'];
    $query = "SELECT id FROM users WHERE reset_token = '" . password_hash($token . "random_salt", PASSWORD_DEFAULT) . "' AND reset_expiry > NOW()";
    $result = mysqli_query($conn, $query);

    if (mysqli_num_rows($result) == 1) {
        // Show the password reset form
        ?>
        <!DOCTYPE html>
        <html>
        <head>
            <title>Reset Password</title>
        </head>
        <body>
            <h2>Reset Password</h2>
            <form action="<?php echo $_SERVER['PHP_SELF']; ?>?token=<?php echo $token; ?>" method="post">
                New Password: <input type="password" name="new_password" required><br><br>
                Confirm Password: <input type="password" name="confirm_password" required><br><br>
                <input type="submit" value="Reset Password">
            </form>
        </body>
        </html>
        <?php
    } else {
        die("<div style='color:red'>Invalid or expired token!</div>");
    }
} else {
    die("<div style='color:red'>No token provided!</div>");
}
?>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$db_name = 'your_database';

// Connect to the database
$conn = mysqli_connect($host, $username, $password, $db_name);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Session start
session_start();

// Check if form is submitted
if (isset($_POST['reset'])) {
    // Get email from POST request
    $email = $_POST['email'];
    
    // Sanitize email
    $email = htmlspecialchars(strip_tags(trim($email)));
    
    // Check if email exists in database
    $query = "SELECT id, username FROM users WHERE email='$email'";
    $result = mysqli_query($conn, $query);
    
    if (mysqli_num_rows($result) == 1) {
        // Generate a random token
        $token = bin2hex(random_bytes(16));
        
        // Store the token in database with expiration time
        $expires = date('Y-m-d H:i:s', time() + 3600); // Token expires after 1 hour
        
        $insert_query = "INSERT INTO password_resets (user_id, token, created_at) 
                         VALUES ('" . mysqli_insert_id($conn) . "', '$token', NOW())";
        
        if (!mysqli_query($conn, $insert_query)) {
            die("Error storing reset token: " . mysqli_error($conn));
        }
        
        // Send email to user with reset link
        $to = $email;
        $subject = 'Password Reset Request';
        $message = "Dear user,

We received a password reset request. Click the following link to reset your password:

http://localhost/reset_password.php?token=$token

This link will expire in 1 hour.

Best regards,
The Team";
        
        // Set email headers
        $headers = 'From: noreply@yourdomain.com' . "\r
" .
                   'Reply-To: noreply@yourdomain.com' . "\r
" .
                   'X-Mailer: PHP/' . phpversion();
        
        if (mail($to, $subject, $message, $headers)) {
            // Email sent successfully
            $_SESSION['message'] = "We've sent a password reset link to your email address.";
            header("Location: forgot_password.php");
            exit();
        } else {
            // Error sending email
            die("Error sending email. Please try again.");
        }
    } else {
        // Email not found in database
        $_SESSION['message'] = "Email address not found in our records!";
        header("Location: forgot_password.php");
        exit();
    }
}

// Close database connection
mysqli_close($conn);
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Forgot Password</title>
</head>
<body>
    <h2>Forgot Password</h2>
    
    <?php if (isset($_SESSION['message'])) { ?>
        <p style="color: red;"><?php echo $_SESSION['message']; ?></p>
        <?php unset($_SESSION['message']); } ?>
    
    <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
        <label for="email">Enter your email:</label><br>
        <input type="email" id="email" name="email" required><br><br>
        <input type="submit" name="reset" value="Reset Password">
    </form>
</body>
</html>


<?php
// Reset Password Page

session_start();

if (!isset($_GET['token'])) {
    die("No token provided.");
}

$token = $_GET['token'];

// Database connection (same as above)
$conn = mysqli_connect($host, $username, $password, $db_name);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Check if token exists and is valid
$query = "SELECT * FROM password_resets 
          WHERE token='$token' AND created_at > NOW() - INTERVAL 1 HOUR";
$result = mysqli_query($conn, $query);

if (mysqli_num_rows($result) == 0) {
    die("Invalid or expired token.");
}

// Show reset form
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Reset Password</title>
</head>
<body>
    <h2>Reset Password</h2>
    
    <?php if (isset($_SESSION['message'])) { ?>
        <p style="color: red;"><?php echo $_SESSION['message']; ?></p>
        <?php unset($_SESSION['message']); } ?>

    <form action="process_reset.php" method="post">
        <input type="hidden" name="token" value="<?php echo $token; ?>">
        <label for="new_password">New Password:</label><br>
        <input type="password" id="new_password" name="new_password" required><br><br>
        <label for="confirm_password">Confirm Password:</label><br>
        <input type="password" id="confirm_password" name="confirm_password" required><br><br>
        <input type="submit" value="Reset Password">
    </form>
</body>
</html>

<?php
// Close database connection
mysqli_close($conn);
?>


<?php
session_start();

if (!isset($_POST['token']) || !isset($_POST['new_password']) || !isset($_POST['confirm_password'])) {
    die("Invalid request.");
}

$token = $_POST['token'];
$new_password = $_POST['new_password'];
$confirm_password = $_POST['confirm_password'];

// Check if passwords match
if ($new_password != $confirm_password) {
    $_SESSION['message'] = "Passwords do not match!";
    header("Location: reset_password.php?token=$token");
    exit();
}

// Database connection (same as above)
$conn = mysqli_connect($host, $username, $password, $db_name);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Check if token exists and is valid
$query = "SELECT * FROM password_resets 
          WHERE token='$token' AND created_at > NOW() - INTERVAL 1 HOUR";
$result = mysqli_query($conn, $query);

if (mysqli_num_rows($result) == 0) {
    die("Invalid or expired token.");
}

// Get user ID
$row = mysqli_fetch_assoc($result);
$user_id = $row['user_id'];

// Update the password
$new_password_hashed = password_hash($new_password, PASSWORD_DEFAULT);
$update_query = "UPDATE users SET password='$new_password_hashed' WHERE id=$user_id";

if (!mysqli_query($conn, $update_query)) {
    die("Error updating password: " . mysqli_error($conn));
}

// Delete the reset token
$delete_query = "DELETE FROM password_resets WHERE token='$token'";
mysqli_query($conn, $delete_query);

// Show success message
$_SESSION['message'] = "Password updated successfully!";
header("Location: login.php");
exit();

// Close database connection
mysqli_close($conn);
?>


<?php
// Database connection
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'mydatabase';

$conn = new mysqli($host, $username, $password, $dbname);
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to send password reset email
function sendResetEmail($email, $token) {
    $to = $email;
    $subject = 'Password Reset Request';
    
    $message = "
        <html>
            <head></head>
            <body>
                <h2>Password Reset</h2>
                <p>Please click the link below to reset your password:</p>
                <a href='http://localhost/reset-password.php?token=$token'>Reset Password</a><br><br>
                <small>If you did not request a password reset, please ignore this email.</small>
            </body>
        </html>
    ";
    
    $headers = "MIME-Version: 1.0" . "\r
";
    $headers .= "Content-type:text/html;charset=UTF-8" . "\r
";
    $headers .= "From: <your-email@example.com>" . "\r
";
    
    mail($to, $subject, $message, $headers);
}

// Reset password function
function resetPassword($token, $new_password) {
    global $conn;
    
    // Verify token exists and is valid
    $stmt = $conn->prepare("SELECT user_id, email FROM users WHERE reset_token = ? AND reset_token_expires > NOW()");
    $stmt->bind_param("s", $token);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows == 1) {
        $user_data = $result->fetch_assoc();
        
        // Hash the new password
        $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);
        
        // Update user's password and clear reset token
        $update_stmt = $conn->prepare("UPDATE users SET password = ?, reset_token = NULL WHERE user_id = ?");
        $update_stmt->bind_param("si", $hashed_password, $user_data['user_id']);
        $update_stmt->execute();
        
        return true;
    } else {
        // Token is invalid or expired
        return false;
    }
}

// Request password reset function
function requestPasswordReset($email) {
    global $conn;
    
    // Check if email exists in database
    $stmt = $conn->prepare("SELECT user_id FROM users WHERE email = ?");
    $stmt->bind_param("s", $email);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows == 1) {
        // Generate reset token
        $token = bin2hex(random_bytes(32));
        $expires = date('Y-m-d H:i:s', strtotime('+1 hour'));
        
        // Update user record with new token and expiration time
        $update_stmt = $conn->prepare("UPDATE users SET reset_token = ?, reset_token_expires = ? WHERE email = ?");
        $update_stmt->bind_param("ss", $token, $expires, $email);
        $update_stmt->execute();
        
        // Send reset email
        sendResetEmail($email, $token);
        
        return true;
    } else {
        // Email not found in database
        return false;
    }
}

// Example usage:
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $email = $_POST['email'];
    
    if (requestPasswordReset($email)) {
        echo "An email has been sent with instructions to reset your password.";
    } else {
        echo "Email not found in our records. Please check your email address or register an account.";
    }
}

// Close database connection
$conn->close();
?>


<?php
// forgot_password.php

$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "myDB";

// Create connection
$conn = new mysqli($servername, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = $_POST['email'];
    
    // Check if email exists in the database
    $sql = "SELECT id FROM users WHERE email=?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("s", $email);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows == 0) {
        header("Location: forgot_form.php?error=Email%20not%20found.");
        exit();
    } else {
        // Generate a random token
        $token = bin2hex(random_bytes(16));
        
        // Expiration time (e.g., 1 hour)
        $expires = date('Y-m-d H:i:s', strtotime('+1 hour'));
        
        // Update the users table with the new token and expiration time
        $sql = "UPDATE users SET reset_token=?, reset_expires=? WHERE email=?";
        $stmt = $conn->prepare($sql);
        $stmt->bind_param("sss", $token, $expires, $email);
        $stmt->execute();

        // Send email with the reset link
        $resetLink = "http://".$_SERVER['HTTP_HOST']."/reset_password.php?token=".$token;
        
        $to = $email;
        $subject = "Password Reset Request";
        $message = "You requested a password reset. Click this link to reset your password: ".$resetLink."

This link will expire in 1 hour.";
        
        // Using PHP's mail function (ensure it's configured properly)
        if (mail($to, $subject, $message)) {
            header("Location: forgot_form.php?success=Password%20reset%20link%20sent.%20Check%20your%20email.");
        } else {
            header("Location: forgot_form.php?error=Failed%20to%20send%20password%20reset%20link.");
        }
    }
}
$conn->close();
?>


<?php
// reset_password.php

$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "myDB";

// Create connection
$conn = new mysqli($servername, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

if (!isset($_GET['token'])) {
    header("Location: forgot_form.php?error=No%20token%20provided.");
    exit();
}

$token = $_GET['token'];

// Check if the token exists and is valid
$sql = "SELECT id, reset_expires FROM users WHERE reset_token=?";
$stmt = $conn->prepare($sql);
$stmt->bind_param("s", $token);
$stmt->execute();
$result = $stmt->get_result();

if ($result->num_rows == 0) {
    header("Location: forgot_form.php?error=Invalid%20or%20expired%20link.");
    exit();
} else {
    $row = $result->fetch_assoc();
    
    // Check if token has expired
    if (strtotime($row['reset_expires']) < time()) {
        header("Location: forgot_form.php?error=Reset%20link%20has%20expired.");
        exit();
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <?php
    if (isset($_GET['error'])) {
        echo "<p style='color:red;'>".$_GET['error']."</p>";
    }
    ?>

    <h2>Reset Your Password</h2>
    <form action="reset_password.php?token=<?php echo $token; ?>" method="post">
        New Password: <input type="password" name="new_password" required><br><br>
        Confirm Password: <input type="password" name="confirm_password" required><br><br>
        <input type="submit" value="Reset Password">
    </form>
</body>
</html>

<?php
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $new_password = $_POST['new_password'];
    $confirm_password = $_POST['confirm_password'];

    if ($new_password != $confirm_password) {
        header("Location: reset_password.php?token=".$token."&error=Passwords%20do%20not%20match.");
        exit();
    }

    // Hash the new password
    $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);

    // Update the user's password
    $sql = "UPDATE users SET password=?, reset_token=NULL, reset_expires=NULL WHERE reset_token=?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("ss", $hashed_password, $token);
    if ($stmt->execute()) {
        header("Location: login.php?success=Password%20reset%20successful.%20Please%20login.");
    } else {
        header("Location: reset_password.php?token=".$token."&error=Error%20resetting%20password.");
    }
}
$conn->close();
?>


<?php
// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'test_db';

// Connect to the database
$conn = new mysqli($host, $username, $password, $dbname);
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = $_POST['email'];
    
    // Check if email exists in the database
    $sql = "SELECT id FROM users WHERE email = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("s", $email);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        // Generate a unique token
        $token = bin2hex(random_bytes(16));
        $expires = date('Y-m-d H:i:s', time() + 3600); // Token expires after 1 hour

        // Update the database with the new token and expiration time
        $update_sql = "UPDATE users SET reset_token = ?, reset_expires = ? WHERE email = ?";
        $update_stmt = $conn->prepare($update_sql);
        $update_stmt->bind_param("sss", $token, $expires, $email);
        $update_stmt->execute();

        // Send the password reset link to the user
        $to = $email;
        $subject = "Password Reset Request";
        $message = "Please click the following link to reset your password:

http://example.com/reset_password.php?token=" . $token;
        $headers = "From: noreply@example.com";

        if (mail($to, $subject, $message, $headers)) {
            echo "A password reset link has been sent to your email address.";
        } else {
            echo "There was an error sending the email. Please try again later.";
        }
    } else {
        echo "This email does not exist in our records.";
    }

    $stmt->close();
}

$conn->close();
?>


<?php
// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'test_db';

// Connect to the database
$conn = new mysqli($host, $username, $password, $dbname);
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

$token = $_GET['token'];

// Check if token is valid and not expired
$sql = "SELECT id, email FROM users WHERE reset_token = ? AND reset_expires > ?";
$stmt = $conn->prepare($sql);
$stmt->bind_param("ss", $token, date('Y-m-d H:i:s'));
$stmt->execute();
$result = $stmt->get_result();

if ($result->num_rows == 1) {
    $user = $result->fetch_assoc();
    
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        // Validate and update the password
        $new_password = $_POST['password'];
        $confirm_password = $_POST['confirm_password'];

        if ($new_password != $confirm_password) {
            die("Passwords do not match.");
        }

        // Hash the new password
        $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);

        // Update the user's password and reset token
        $update_sql = "UPDATE users SET password = ?, reset_token = NULL, reset_expires = NULL WHERE id = ?";
        $update_stmt = $conn->prepare($update_sql);
        $update_stmt->bind_param("si", $hashed_password, $user['id']);
        $update_stmt->execute();

        echo "Your password has been updated successfully.";
    } else {
        // Display the password reset form
?>
<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <h2>Reset Password</h2>
    <form action="reset_password.php?token=<?php echo $token; ?>" method="post">
        <label for="password">New Password:</label><br>
        <input type="password" id="password" name="password" required><br><br>
        <label for="confirm_password">Confirm Password:</label><br>
        <input type="password" id="confirm_password" name="confirm_password" required><br><br>
        <input type="submit" value="Reset Password">
    </form>
</body>
</html>
<?php
    }
} else {
    echo "Invalid or expired token.";
}

$stmt->close();
$conn->close();
?>


<?php
// Database connection details
$host = 'localhost';
$username = 'your_username';
$password = 'your_password';
$dbname = 'your_database';

// Create database connection
$conn = new mysqli($host, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Session start
session_start();

// If form is submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    if (isset($_POST['email'])) {
        // Sanitize email input
        $email = mysqli_real_escape_string($conn, $_POST['email']);
        
        // Check if user exists with this email
        $sql = "SELECT * FROM users WHERE email='$email'";
        $result = $conn->query($sql);
        
        if ($result->num_rows > 0) {
            // Generate reset token
            $token = bin2hex(random_bytes(32));
            
            // Update the database with the token and expiration time (1 hour)
            $expires = date('Y-m-d H:i:s', time() + 3600);
            $sql = "UPDATE users SET reset_token='$token', reset_expires='$expires' WHERE email='$email'";
            
            if ($conn->query($sql)) {
                // Send reset password email
                $to = $email;
                $subject = 'Reset Your Password';
                $message = "
                    <html>
                        <head></head>
                        <body>
                            <h2>Password Reset Request</h2>
                            <p>Please click the following link to reset your password:</p>
                            <a href='http://example.com/reset_password.php?token=$token'>Reset Password</a><br>
                            <small>This link will expire in 1 hour.</small>
                        </body>
                    </html>
                ";
                
                // Set headers for HTML email
                $headers = "MIME-Version: 1.0" . "\r
";
                $headers .= "Content-type:text/html;charset=UTF-8" . "\r
";
                $headers .= 'From: <noreply@example.com>' . "\r
";
                
                // Send email
                if (mail($to, $subject, $message, $headers)) {
                    header("Location: forgot_password.php?success=1");
                } else {
                    echo "Email could not be sent. Please try again.";
                }
            } else {
                echo "Error updating password reset token: " . $conn->error;
            }
        } else {
            // No user found with this email
            header("Location: forgot_password.php?success=0");
        }
    }
}

// Close database connection
$conn->close();
?>


<?php
// forgot_password.php

include 'db_connection.php'; // Include your database connection file

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = mysqli_real_escape_string($conn, $_POST['email']);
    
    // Check if the user exists
    $sql = "SELECT id, email FROM users WHERE email='$email' OR username='$email'";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) == 1) {
        $row = mysqli_fetch_assoc($result);
        $userId = $row['id'];
        
        // Generate a random token
        $token = bin2hex(random_bytes(32));
        
        // Store the token and expiration time in the database
        $expires = date('Y-m-d H:i:s', time() + 3600); // Token expires after 1 hour
        
        $sql = "INSERT INTO password_resets (user_id, token, created_at) VALUES ('$userId', '$token', '$expires')";
        mysqli_query($conn, $sql);
        
        // Send the reset link to the user's email
        $resetLink = "http://yourdomain.com/reset_password.php?token=$token";
        
        $to = $email;
        $subject = "Password Reset Request";
        $message = "Click the following link to reset your password: $resetLink";
        $headers = "From: your.email@yourdomain.com";
        
        mail($to, $subject, $message, $headers);
        
        echo "A password reset link has been sent to your email.";
    } else {
        echo "Email or username does not exist.";
    }
}
?>


<?php
// reset_password.php

include 'db_connection.php';

if (isset($_GET['token'])) {
    $token = mysqli_real_escape_string($conn, $_GET['token']);
    
    // Check if the token exists and hasn't expired
    $sql = "SELECT * FROM password_resets WHERE token='$token'";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) == 1) {
        $row = mysqli_fetch_assoc($result);
        
        // Check if the token has expired
        $createdAt = strtotime($row['created_at']);
        $expiresIn = $createdAt + 3600; // 1 hour
        
        if ($expiresIn < time()) {
            echo "This reset link has expired. Please request a new one.";
            exit;
        }
        
        // Display the password reset form
        ?>
        <!DOCTYPE html>
        <html>
        <head>
            <title>Reset Password</title>
        </head>
        <body>
            <h2>Reset Password</h2>
            <form action="reset_password.php?token=<?php echo $token; ?>" method="post">
                <label for="new_password">New Password:</label><br>
                <input type="password" id="new_password" name="new_password" required><br><br>
                <input type="submit" value="Reset Password">
            </form>
        </body>
        </html>
        <?php
    } else {
        echo "Invalid reset token.";
    }
} else {
    echo "No token provided.";
}
?>


<?php
// reset_password.php (continue from above)

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $token = mysqli_real_escape_string($conn, $_GET['token']);
    $newPassword = mysqli_real_escape_string($conn, $_POST['new_password']);
    
    // Hash the new password
    $hashedPassword = password_hash($newPassword, PASSWORD_DEFAULT);
    
    // Update the user's password in the database
    $sql = "SELECT user_id FROM password_resets WHERE token='$token'";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) == 1) {
        $row = mysqli_fetch_assoc($result);
        $userId = $row['user_id'];
        
        // Update the password
        $updateSql = "UPDATE users SET password='$hashedPassword' WHERE id='$userId'";
        mysqli_query($conn, $updateSql);
        
        // Delete the reset token (optional)
        $deleteSql = "DELETE FROM password_resets WHERE token='$token'";
        mysqli_query($conn, $deleteSql);
        
        echo "Your password has been reset successfully!";
    } else {
        echo "Invalid request.";
    }
}
?>


<?php
// Database configuration
$host = 'localhost';
$user = 'root';
$password = '';
$db_name = 'mydatabase';

// Connect to the database
$conn = new mysqli($host, $user, $password, $db_name);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = $_POST['email'];

    // Sanitize input
    $email = $conn->real_escape_string($email);

    // Check if email exists in the database
    $query = "SELECT id FROM users WHERE email='$email'";
    $result = $conn->query($query);

    if ($result->num_rows == 1) {
        // Generate reset token
        $token = bin2hex(random_bytes(32));

        // Store token and expiration time (current time + 1 hour)
        $expires = date('Y-m-d H:i:s', strtotime('+1 hour'));

        $update_query = "UPDATE users SET reset_token='$token', reset_expires='$expires' WHERE email='$email'";
        if ($conn->query($update_query)) {
            // Send password reset email
            $to = $email;
            $subject = "Password Reset Request";
            $message = "
                <html>
                    <body>
                        <h2>Password Reset</h2>
                        <p>Please click the link below to reset your password:</p>
                        <a href='http://localhost/reset_password.php?token=$token&email=$email'>Reset Password</a>
                        <br><br>
                        This link will expire in 1 hour.
                    </body>
                </html>
            ";
            $headers = "MIME-Version: 1.0" . "\r
";
            $headers .= "Content-type:text/html;charset=UTF-8" . "\r
";
            $headers .= "From: your_name@example.com" . "\r
";

            if (mail($to, $subject, $message, $headers)) {
                echo "<h3>Check your email for the password reset link.</h3>";
            } else {
                echo "<h3>Failed to send email. Please try again later.</h3>";
            }
        } else {
            echo "Error: " . $conn->error;
        }
    } else {
        echo "<h3>Email not found in our database.</h3>";
    }
}
?>


<?php
// Database configuration
$host = 'localhost';
$user = 'root';
$password = '';
$db_name = 'mydatabase';

// Connect to the database
$conn = new mysqli($host, $user, $password, $db_name);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Check if token and email are provided
if (isset($_GET['token']) && isset($_GET['email'])) {
    $token = $_GET['token'];
    $email = $_GET['email'];

    // Sanitize input
    $token = $conn->real_escape_string($token);
    $email = $conn->real_escape_string($email);

    // Check if token is valid and not expired
    $query = "SELECT id FROM users WHERE reset_token='$token' AND email='$email' AND reset_expires > NOW()";
    $result = $conn->query($query);

    if ($result->num_rows == 1) {
        // Show password reset form
?>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Reset Password</title>
</head>
<body>
    <h2>Reset Password</h2>
    <form action="reset_password.php?token=<?php echo $token; ?>&email=<?php echo $email; ?>" method="post">
        <input type="password" name="new_password" placeholder="Enter new password" required><br><br>
        <input type="password" name="confirm_password" placeholder="Confirm new password" required><br><br>
        <input type="submit" value="Reset Password">
    </form>
</body>
</html>
<?php
    } else {
        echo "<h3>Invalid or expired reset link.</h3>";
    }
} elseif ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Reset password
    $token = $_GET['token'];
    $email = $_GET['email'];
    $new_password = $_POST['new_password'];
    $confirm_password = $_POST['confirm_password'];

    if ($new_password != $confirm_password) {
        die("<h3>Passwords do not match.</h3>");
    }

    // Hash the new password
    $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);

    // Update the password and clear the reset token
    $update_query = "UPDATE users SET password='$hashed_password', reset_token='', reset_expires='0000-00-00 00:00:00' WHERE email='$email'";
    
    if ($conn->query($update_query)) {
        echo "<h3>Password reset successful! Redirecting to login page...</h3>";
        header("refresh:2;url=login.php");
    } else {
        die("<h3>Error resetting password. Please try again later.</h3>");
    }
} else {
    die("<h3>Invalid request.</h3>");
}
?>


<?php
// Configuration
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

// Connect to the database
$conn = new mysqli($host, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Check if form was submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Sanitize input
    $email = mysqli_real_escape_string($conn, $_POST['email']);

    // Query the database for user with this email or username
    $query = "SELECT id FROM users WHERE email = '$email' OR username = '$email'";
    $result = $conn->query($query);

    if ($result->num_rows == 0) {
        die("No account found with that email or username.");
    }

    // Generate a random token
    $token = bin2hex(random_bytes(40));
    
    // Store the token in the database (create a 'password_resets' table)
    $query = "INSERT INTO password_resets (user_id, token) VALUES ('" . $result->fetch_assoc()['id'] . "', '$token')";
    $conn->query($query);

    // Send email to user
    $to = $email;
    $subject = 'Password Reset Request';
    
    $message = "Hello,

You have requested a password reset. Please click the link below to reset your password:

";
    $message .= "http://example.com/reset.php?token=$token

";
    $message .= "If you did not request this, please ignore this email.
";
    $message .= "
Thanks,
The Team";

    // Set headers
    $headers = 'From: noreply@example.com' . "\r
" .
               'Reply-To: noreply@example.com' . "\r
" .
               'X-Mailer: PHP/' . phpversion();

    if (mail($to, $subject, $message, $headers)) {
        echo "An email has been sent to $email with instructions on how to reset your password.";
    } else {
        die("Failed to send email. Please try again.");
    }
}

$conn->close();
?>


<?php
// Configuration
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

// Connect to the database
$conn = new mysqli($host, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Check if token is provided in URL
if (!isset($_GET['token'])) {
    die("No token provided.");
}

$token = mysqli_real_escape_string($conn, $_GET['token']);

// Query the database for this token
$query = "SELECT user_id FROM password_resets WHERE token = '$token'";
$result = $conn->query($query);

if ($result->num_rows == 0) {
    die("Invalid or expired token.");
}

// Show form to reset password
?>

<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <h2>Reset Password</h2>
    <form action="update_password.php" method="post">
        <input type="hidden" name="token" value="<?php echo $token; ?>">
        <label for="password">New Password:</label><br>
        <input type="password" id="password" name="password" required><br><br>
        <input type="submit" value="Reset Password">
    </form>
</body>
</html>

<?php
$conn->close();
?>


<?php
// Configuration
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

// Connect to the database
$conn = new mysqli($host, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Check if form was submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Sanitize input
    $token = mysqli_real_escape_string($conn, $_POST['token']);
    $password = mysqli_real_escape_string($conn, $_POST['password']);

    // Hash the password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

    // Check if token exists and is valid
    $query = "SELECT user_id FROM password_resets WHERE token = '$token'";
    $result = $conn->query($query);

    if ($result->num_rows == 0) {
        die("Invalid or expired token.");
    }

    $user_id = $result->fetch_assoc()['user_id'];

    // Update the password in the users table
    $query = "UPDATE users SET password = '$hashed_password' WHERE id = '$user_id'";
    if ($conn->query($query)) {
        // Delete the token from password_resets table
        $delete_query = "DELETE FROM password_resets WHERE token = '$token'";
        $conn->query($delete_query);
        
        echo "Password reset successful! <a href='login.php'>Click here to login</a>";
    } else {
        die("Error updating password. Please try again.");
    }
}

$conn->close();
?>


<?php
// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'your_database';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function forgotPassword($email) {
    global $conn;
    
    // Sanitize email input
    $email = mysqli_real_escape_string($conn, $email);
    
    // Check if email exists in the database
    $sql = "SELECT user_id, password FROM users WHERE email='$email'";
    $result = mysqli_query($conn, $sql);
    
    if (!$result) {
        die("Query failed: " . mysqli_error($conn));
    }
    
    if (mysqli_num_rows($result) == 0) {
        return array('status' => 'error', 'message' => 'Email not found in our records.');
    } else {
        // Generate a random token
        $token = bin2hex(random_bytes(16));
        
        // Set token expiration time (e.g., 1 hour from now)
        $expiration_time = date('Y-m-d H:i:s', strtotime('+1 hour'));
        
        // Insert the token into the database
        $sql_token = "INSERT INTO password_reset (user_id, token, expires) VALUES (?, ?, ?)";
        $stmt = mysqli_prepare($conn, $sql_token);
        if (!$stmt) {
            die("Prepare failed: " . mysqli_error($conn));
        }
        
        mysqli_stmt_bind_param($stmt, 'iss', $user_id, $token, $expiration_time);
        mysqli_execute($stmt);
        
        // Get the user ID
        $row = mysqli_fetch_assoc($result);
        $user_id = $row['user_id'];
        
        // Send reset password email
        $to = $email;
        $subject = 'Reset Your Password';
        $message = "
            <html>
            <head></head>
            <body>
                <h2>Password Reset Request</h2>
                <p>We received a request to reset your password. Click the link below to reset it:</p>
                <a href='http://your-site.com/reset-password.php?token=$token'>Reset Password</a><br><br>
                <p>If you did not request this password reset, please ignore this email.</p>
            </body>
            </html>
        ";
        $headers = "MIME-Version: 1.0" . "\r
";
        $headers .= "Content-type:text/html;charset=UTF-8" . "\r
";
        $headers .= "From: your-site@your-domain.com" . "\r
";
        
        mail($to, $subject, $message, $headers);
        
        return array('status' => 'success', 'message' => 'Password reset email has been sent.');
    }
}

// Example usage:
if (isset($_POST['email'])) {
    $email = $_POST['email'];
    $result = forgotPassword($email);
    
    if ($result['status'] == 'success') {
        echo $result['message'];
    } else {
        echo $result['message'];
    }
}

?>


<?php
// forgot_password.php

include('db_connection.php'); // Include your database connection file

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $email = mysqli_real_escape_string($conn, $_POST['email']);

    // Check if email exists in the database
    $sql = "SELECT * FROM users WHERE email = '$email'";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) == 1) {
        // Generate a random token
        $token = bin2hex(random_bytes(16));
        
        // Expiry time: current time + 1 hour
        $expires = date('Y-m-d H:i:s', time() + 3600);

        // Update the database with the token and expiry time
        $updateSql = "UPDATE users SET reset_token = '$token', reset_expiry = '$expires' WHERE email = '$email'";
        mysqli_query($conn, $updateSql);

        // Send the password reset link to user's email
        sendResetEmail($email, $token);
        
        echo "A password reset link has been sent to your email address.";
    } else {
        die("This email does not exist in our database.");
    }
}

// Function to send reset email
function sendResetEmail($email, $token) {
    $to = $email;
    $subject = "Password Reset Request";
    
    // Set the headers
    $headers = "From: your_website@example.com\r
";
    $headers .= "Content-type: text/html; charset=UTF-8\r
";
    
    $message = "
        <html>
            <head>
                <title>Password Reset</title>
            </head>
            <body>
                <h2>Password Reset Request</h2>
                <p>Hello,</p>
                <p>We received a password reset request for your account. Please click the link below to reset your password:</p>
                <a href='http://yourwebsite.com/reset_password.php?token=$token'>Reset Password</a>
                <br><br>
                <p>If you did not request this password reset, please ignore this email.</p>
                <p>This password reset link will expire in 1 hour.</p>
            </body>
        </html>
    ";
    
    mail($to, $subject, $message, $headers);
}
?>


<?php
// reset_password.php

include('db_connection.php'); // Include your database connection file

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $token = mysqli_real_escape_string($conn, $_POST['token']);
    $new_password = mysqli_real_escape_string($conn, $_POST['new_password']);
    $confirm_password = mysqli_real_escape_string($conn, $_POST['confirm_password']);

    // Check if token is valid and not expired
    $sql = "SELECT * FROM users WHERE reset_token = '$token' AND reset_expiry > NOW()";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) == 1) {
        if ($new_password != $confirm_password) {
            die("Passwords do not match. Please try again.");
        }

        // Update the user's password
        $password_hash = md5($new_password); // Use a stronger hashing algorithm like bcrypt in production

        $updateSql = "UPDATE users SET password = '$password_hash', reset_token = '', reset_expiry = '0000-00-00 00:00:00' WHERE reset_token = '$token'";
        mysqli_query($conn, $updateSql);

        echo "Your password has been successfully updated!";
    } else {
        die("Invalid or expired token. Please request a new password reset.");
    }
}
?>


<?php
$host = "localhost";
$username = "root";
$password = "";
$dbname = "test_db";

$conn = new mysqli($host, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}
?>


<?php
include('config.php');

session_start();

if (isset($_POST['reset'])) {
    $email = $_POST['email'];
    
    // Check if email exists in database
    $sql = "SELECT * FROM users WHERE email = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param('s', $email);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows > 0) {
        // Generate a random token
        $token = bin2hex(random_bytes(16));
        $expires = date("Y-m-d H:i:s", time() + 3600); // Token expires in 1 hour
        
        // Store token in database
        $sql_token = "INSERT INTO password_reset (email, token, created_at) VALUES (?, ?, ?)";
        $stmt_token = $conn->prepare($sql_token);
        $stmt_token->bind_param('sss', $email, $token, $expires);
        
        if ($stmt_token->execute()) {
            // Send reset email
            $to = $email;
            $subject = "Password Reset Request";
            
            $message = "<html>
                        <body>
                            <h2>Password Reset</h2>
                            <p>Please click the following link to reset your password:</p>
                            <a href='http://localhost/reset_password.php?token=$token'>Reset Password</a>
                            <br><br>
                            This link will expire in 1 hour.
                        </body>
                    </html>";
            
            $headers = "MIME-Version: 1.0" . "\r
";
            $headers .= "Content-type: text/html; charset=UTF-8" . "\r
";
            $headers .= "From: admin@example.com" . "\r
";
            
            if (mail($to, $subject, $message, $headers)) {
                echo "<script>alert('A password reset link has been sent to your email.');</script>";
            } else {
                echo "<script>alert('Error sending email. Please try again.');</script>";
            }
        }
    } else {
        echo "<script>alert('Email not found in our records.');</script>";
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <h2>Forgot Password</h2>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <input type="email" name="email" placeholder="Enter your email address" required><br><br>
        <button type="submit" name="reset">Request Reset</button>
    </form>
</body>
</html>


<?php
include('config.php');

session_start();

if (!isset($_GET['token'])) {
    header("Location: forgot_password.php");
    exit();
}

$token = $_GET['token'];

// Check token validity
$sql = "SELECT * FROM password_reset WHERE token = ? AND created_at > DATE_SUB(NOW(), INTERVAL 1 HOUR)";
$stmt = $conn->prepare($sql);
$stmt->bind_param('s', $token);
$stmt->execute();
$result = $stmt->get_result();

if ($result->num_rows == 0) {
    die("Invalid or expired token. Please request a new password reset.");
}

// If form is submitted
if (isset($_POST['new_password'])) {
    $new_password = $_POST['new_password'];
    
    // Update user's password
    $sql_update = "UPDATE users SET password = ? WHERE email = ?";
    $stmt_update = $conn->prepare($sql_update);
    $stmt_update->bind_param('ss', md5($new_password), $email);
    
    if ($stmt_update->execute()) {
        // Delete the token from database
        $sql_delete = "DELETE FROM password_reset WHERE token = ?";
        $stmt_delete = $conn->prepare($sql_delete);
        $stmt_delete->bind_param('s', $token);
        $stmt_delete->execute();
        
        echo "<script>alert('Password reset successful! Please login with your new password.');</script>";
    } else {
        echo "<script>alert('Error resetting password. Please try again.');</script>";
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <h2>Reset Password</h2>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>?token=<?php echo $token; ?>" method="post">
        <input type="password" name="new_password" placeholder="Enter new password" required><br><br>
        <button type="submit">Change Password</button>
    </form>
</body>
</html>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'mydatabase';
$username = 'root';
$password = '';

// Connect to the database
try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get email from form
    $email = $_POST['email'];
    
    // Validate email format
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        die("Invalid email format");
    }
    
    // Check if email exists in the database
    try {
        $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
        $stmt->execute([$email]);
        $user = $stmt->fetch();
        
        if (!$user) {
            die("Email not found in our records");
        }
        
        // Generate reset token
        $token = md5(uniqid(rand(), true));
        
        // Store token and expiration time (1 hour)
        $expires = date('Y-m-d H:i:s', strtotime('+1 hour'));
        
        $stmt = $conn->prepare("INSERT INTO password_reset 
                               SET user_id = ?, token = ?, expires = ?");
        $stmt->execute([$user['id'], $token, $expires]);
        
        // Send email with reset link
        $resetLink = "http://".$_SERVER['HTTP_HOST']."/reset_password.php?token=".$token;
        
        $to = $email;
        $subject = "Password Reset Request";
        $message = '
            <html>
                <body>
                    <p>Hello,</p>
                    <p>We received a password reset request for your account.</p>
                    <p>Click the link below to reset your password:</p>
                    <a href="'.$resetLink.'">'.$resetLink.'</a>
                    <br><br>
                    <p>If you did not request this password reset, please ignore this email.</p>
                    <p>This link will expire in 1 hour.</p>
                </body>
            </html>
        ';
        $headers = "MIME-Version: 1.0" . "\r
";
        $headers .= "Content-type:text/html;charset=UTF-8" . "\r
";
        $headers .= 'From: <webmaster@example.com>' . "\r
";
        
        if (mail($to, $subject, $message, $headers)) {
            echo "Password reset email has been sent to your email address.";
        } else {
            die("Error sending email");
        }
    } catch(PDOException $e) {
        die("Error: " . $e->getMessage());
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <h2>Forgot Password</h2>
    <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
        Enter your email address: <br>
        <input type="text" name="email">
        <br><br>
        <input type="submit" value="Submit">
    </form>
</body>
</html>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'mydatabase';
$username = 'root';
$password = '';

// Connect to the database
try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}

// Check if token is provided
if (!isset($_GET['token'])) {
    die("No token provided");
}

$token = $_GET['token'];

try {
    // Verify the token and check if it's expired
    $stmt = $conn->prepare("
        SELECT user_id, expires 
        FROM password_reset 
        WHERE token = ?
    ");
    $stmt->execute([$token]);
    $result = $stmt->fetch();
    
    if (!$result) {
        die("Invalid or expired token");
    }
    
    // Check if token has expired
    if (strtotime($result['expires']) < time()) {
        die("Token has expired. Please request a new password reset.");
    }
    
    // Show the reset form
    ?>
    <!DOCTYPE html>
    <html>
    <head>
        <title>Reset Password</title>
    </head>
    <body>
        <h2>Reset Password</h2>
        <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
            New Password: <br>
            <input type="password" name="new_password">
            <br><br>
            Confirm Password: <br>
            <input type="password" name="confirm_password">
            <br><br>
            <input type="hidden" name="token" value="<?php echo $token; ?>">
            <input type="submit" value="Reset Password">
        </form>
    </body>
    </html>
    <?php
} catch(PDOException $e) {
    die("Error: " . $e->getMessage());
}

// Process password reset if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Validate new password and confirmation
    $new_password = $_POST['new_password'];
    $confirm_password = $_POST['confirm_password'];
    
    if ($new_password != $confirm_password) {
        die("Passwords do not match");
    }
    
    if (strlen($new_password) < 8) {
        die("Password must be at least 8 characters long");
    }
    
    // Update the user's password
    try {
        $stmt = $conn->prepare("
            UPDATE users 
            SET password = SHA1(?)
            WHERE id = (
                SELECT user_id 
                FROM password_reset 
                WHERE token = ?
            )
        ");
        $stmt->execute([$new_password, $token]);
        
        // Delete the reset token
        $stmt = $conn->prepare("
            DELETE FROM password_reset 
            WHERE token = ?
        ");
        $stmt->execute([$token]);
        
        echo "Password has been updated successfully!";
    } catch(PDOException $e) {
        die("Error: " . $e->getMessage());
    }
}
?>


<?php
// config.php - Database configuration file
$host = 'localhost';
$username = 'root';
$password = '';
$db_name = 'mydatabase';

$conn = mysqli_connect($host, $username, $password, $db_name);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
<?php
include 'config.php';

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = $_POST['email'];
    
    // Query to check if email exists in database
    $stmt = mysqli_prepare($conn, "SELECT id FROM users WHERE email = ?");
    mysqli_stmt_bind_param($stmt, "s", $email);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);
    
    if (mysqli_num_rows($result) == 1) {
        // Generate reset token
        $token = bin2hex(random_bytes(32));
        
        // Set expiration time for the token (e.g., 1 hour from now)
        $expires = date('Y-m-d H:i:s', strtotime('+1 hour'));
        
        // Update the database with the new token and expiration time
        $updateStmt = mysqli_prepare($conn, "UPDATE users SET reset_token = ?, reset_expires = ? WHERE email = ?");
        mysqli_stmt_bind_param($updateStmt, "sss", $token, $expires, $email);
        mysqli_stmt_execute($updateStmt);
        
        // Send the password reset link to user's email
        $to = $email;
        $subject = "Password Reset Request";
        $message = "Please click on this link to reset your password: http://yourwebsite.com/reset-password.php?token=$token";
        $headers = "From: webmaster@example.com\r
";
        
        if (mail($to, $subject, $message, $headers)) {
            echo "A password reset link has been sent to your email address.";
        } else {
            echo "Failed to send the password reset email. Please try again later.";
        }
    } else {
        echo "The email does not exist in our records.";
    }
}
?>

<form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
    Email: <input type="email" name="email"><br>
    <input type="submit" value="Send Password Reset Link">
</form>

<?php
mysqli_close($conn);
?>


<?php
// reset-password.php

include 'config.php';

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $token = $_GET['token'];
    $new_password = $_POST['new_password'];
    
    // Check if token is valid and not expired
    $stmt = mysqli_prepare($conn, "SELECT id FROM users WHERE reset_token = ? AND reset_expires > ?");
    mysqli_stmt_bind_param($stmt, "ss", $token, date('Y-m-d H:i:s'));
    mysqli_stmt_execute($stmt);
    
    if (mysqli_stmt_get_result($stmt)->num_rows == 1) {
        // Update user's password
        $hash = password_hash($new_password, PASSWORD_DEFAULT);
        
        $updateStmt = mysqli_prepare($conn, "UPDATE users SET password = ?, reset_token = NULL WHERE reset_token = ?");
        mysqli_stmt_bind_param($updateStmt, "ss", $hash, $token);
        if (mysqli_stmt_execute($updateStmt)) {
            echo "Password updated successfully!";
            // Redirect to login page
            header("Location: login.php");
            exit();
        } else {
            echo "Error updating password.";
        }
    } else {
        die("Invalid or expired token.");
    }
}

if (isset($_GET['token'])) {
    $token = $_GET['token'];
    
    // Check if token exists and is valid
    $stmt = mysqli_prepare($conn, "SELECT id FROM users WHERE reset_token = ? AND reset_expires > ?");
    mysqli_stmt_bind_param($stmt, "ss", $token, date('Y-m-d H:i:s'));
    mysqli_stmt_execute($stmt);
    
    if (mysqli_stmt_get_result($stmt)->num_rows == 1) {
        // Show password reset form
?>
<form action="<?php echo $_SERVER['PHP_SELF']; ?>?<?php echo http_build_query(array('token' => $token)); ?>" method="post">
    New Password: <input type="password" name="new_password"><br>
    Confirm Password: <input type="password" name="confirm_password"><br>
    <input type="submit" value="Reset Password">
</form>
<?php
    } else {
        die("Invalid or expired token.");
    }
} else {
    die("No token provided.");
}
?>


<?php
include('db.php'); // Include your database connection file

if (isset($_POST['email_username'])) {
    $email_username = mysqli_real_escape_string($conn, $_POST['email_username']);
    
    // Check if email exists in the database
    $sql_email = "SELECT * FROM users WHERE email='$email_username'";
    $result_email = mysqli_query($conn, $sql_email);
    
    // Check if username exists in the database
    $sql_username = "SELECT * FROM users WHERE username='$email_username'";
    $result_username = mysqli_query($conn, $sql_username);
    
    if (mysqli_num_rows($result_email) > 0 || mysqli_num_rows($result_username) > 0) {
        // Generate a random token
        $token = bin2hex(random_bytes(32));
        
        // Update the token in the database for the user
        if (mysqli_num_rows($result_email) > 0) {
            $row = mysqli_fetch_assoc($result_email);
            $user_id = $row['id'];
        } else {
            $row = mysqli_fetch_assoc($result_username);
            $user_id = $row['id'];
        }
        
        // Update the reset token and expiration time
        $expiration_time = date('Y-m-d H:i:s', strtotime('+1 hour'));
        $sql_update = "UPDATE users SET reset_token='$token', reset_expires='$expiration_time' WHERE id='$user_id'";
        mysqli_query($conn, $sql_update);
        
        // Send the password reset email
        $to = $row['email'];
        $subject = 'Password Reset Request';
        $message = '
            <html>
                <head></head>
                <body>
                    <h2>Password Reset</h2>
                    <p>Please click the following link to reset your password:</p>
                    <a href="http://yourwebsite.com/reset_password.php?token=' . $token . '">Reset Password</a>
                    <br><br>
                    <small>This link will expire in 1 hour.</small>
                </body>
            </html>
        ';
        
        // Set headers for email
        $headers = "From: yourwebsite@example.com\r
";
        $headers .= "MIME-Version: 1.0\r
";
        $headers .= "Content-Type: text/html; charset=UTF-8\r
";
        
        mail($to, $subject, $message, $headers);
        
        // Redirect to success message
        header("Location: forgot_password.html?success=We've sent you a password reset link.");
    } else {
        // User not found
        header("Location: forgot_password.html?error=Email or username does not exist.");
    }
}
?>


<?php
include('db.php'); // Include your database connection file

if (!isset($_GET['token']) || $_GET['token'] == '') {
    die("Invalid token");
}

$token = mysqli_real_escape_string($conn, $_GET['token']);
$sql_token = "SELECT * FROM users WHERE reset_token='$token'";
$result_token = mysqli_query($conn, $sql_token);

if (mysqli_num_rows($result_token) > 0) {
    $row = mysqli_fetch_assoc($result_token);
    
    // Check if token has expired
    $expiration_time = $row['reset_expires'];
    if ($expiration_time < date('Y-m-d H:i:s')) {
        die("This password reset link has expired.");
    }
} else {
    die("Invalid or expired token");
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
    <style>
        .container {
            width: 400px;
            margin: 0 auto;
            padding: 20px;
            border: 1px solid #ccc;
            border-radius: 5px;
        }
        .error { color: red; }
        .success { color: green; }
    </style>
</head>
<body>
    <div class="container">
        <?php if (isset($_GET['error'])) { ?>
            <p class="error"><?=$_GET['error']?></p>
        <?php } ?>

        <?php if (isset($_GET['success'])) { ?>
            <p class="success"><?=$_GET['success']?></p>
        <?php } ?>

        <h2>Reset Password</h2>
        <form action="reset_password.php?token=<?php echo $token; ?>" method="post">
            New Password: <input type="password" name="new_password" required><br><br>
            Confirm Password: <input type="password" name="confirm_password" required><br><br>
            <button type="submit">Reset Password</button>
        </form>
    </div>
</body>
</html>


<?php
// Add this code before the HTML output

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $new_password = $_POST['new_password'];
    $confirm_password = $_POST['confirm_password'];
    
    if ($new_password != $confirm_password) {
        header("Location: reset_password.php?token=" . $token . "&error=Passwords do not match.");
        exit();
    }
    
    // Validate password (you can add your own validation rules)
    if (strlen($new_password) < 8) {
        header("Location: reset_password.php?token=" . $token . "&error=Password must be at least 8 characters long.");
        exit();
    }
    
    // Hash the new password
    $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);
    
    // Update the user's password and invalidate the token
    $sql_update = "UPDATE users SET password='$hashed_password', reset_token='', reset_expires='0000-00-00 00:00:00' WHERE id='" . $row['id'] . "'";
    mysqli_query($conn, $sql_update);
    
    // Redirect to success message
    header("Location: login.php?success=Your password has been updated successfully.");
}
?>


<?php
// Database configuration
$host = 'localhost';
$user = 'username';
$password = 'password';
$db_name = 'mydatabase';

// Connect to database
$conn = new mysqli($host, $user, $password, $db_name);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Check if form is submitted
if (isset($_POST['reset'])) {
    // Sanitize input
    $email_username = mysqli_real_escape_string($conn, $_POST['email_username']);

    // Query to check if email/username exists
    $sql = "SELECT id FROM users WHERE email='$email_username' OR username='$email_username'";
    $result = $conn->query($sql);

    if ($result->num_rows == 0) {
        echo "Email or Username not found!";
    } else {
        // Generate random token
        $token = md5(rand(1, 9999999));

        // Store token in database with expiration time (e.g., 1 hour from now)
        $expires = date('Y-m-d H:i:s', strtotime('+1 hour'));

        // Update the users table to store token and expiration
        $update_sql = "UPDATE users SET reset_token='$token', reset_expires='$expires' WHERE email='$email_username' OR username='$email_username'";
        if ($conn->query($update_sql) === TRUE) {
            // Send email with reset link
            $to = $email_username;
            $subject = 'Password Reset Request';
            $message = "Please click the following link to reset your password:

http://example.com/reset.php?token=$token

This link will expire in 1 hour.";
            $headers = 'From: noreply@example.com' . "\r
";

            if (mail($to, $subject, $message, $headers)) {
                echo "Password reset email has been sent!";
            } else {
                echo "Failed to send password reset email!";
            }
        } else {
            echo "Error updating record: " . $conn->error;
        }
    }
}

// Close database connection
$conn->close();
?>


<?php
session_start();
require_once 'config.php'; // Include your database configuration file

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = mysqli_real_escape_string($conn, $_POST['email']);
    
    // Check if the email exists in the database
    $sql = "SELECT * FROM users WHERE email='$email'";
    $result = mysqli_query($conn, $sql);
    $row = mysqli_fetch_assoc($result);
    
    if ($row) {
        // Generate a temporary password
        $temp_password = generate_temp_password();
        
        // Update the database with the new temporary password
        $update_sql = "UPDATE users SET password='$temp_password' WHERE email='$email'";
        mysqli_query($conn, $update_sql);
        
        // Store the temporary password in session
        $_SESSION['temp_password'] = $temp_password;
        $_SESSION['user_email'] = $email;
        
        // Redirect to a page where the user can set their new password
        header("Location: reset-password.php");
    } else {
        echo "This email does not exist in our database.";
        header("refresh:3;url=login.php"); // Redirect after 3 seconds
    }
}

// Function to generate temporary password
function generate_temp_password() {
    $chars = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^&*";
    $length = strlen($chars);
    $temp_pass = "";
    for ($i = 0; $i < 8; $i++) {
        $random_index = rand(0, $length - 1);
        $temp_pass .= $chars[$random_index];
    }
    return $temp_pass;
}
?>


<?php session_start(); ?>

<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <?php
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        $email = mysqli_real_escape_string($conn, $_POST['email']);
        
        // Check if the email exists in the database
        $sql = "SELECT * FROM users WHERE email='$email'";
        $result = mysqli_query($conn, $sql);
        $row = mysqli_fetch_assoc($result);
        
        if ($row) {
            // Generate a temporary password
            $temp_password = generate_temp_password();
            
            // Update the database with the new temporary password
            $update_sql = "UPDATE users SET temp_password='$temp_password' WHERE email='$email'";
            mysqli_query($conn, $update_sql);
            
            // Send email to user with temporary password
            send_email($email, $temp_password);
            
            echo "A temporary password has been sent to your email address.";
            header("refresh:3;url=login.php"); // Redirect after 3 seconds
        } else {
            echo "This email does not exist in our database.";
            header("refresh:3;url=forgot-password.php"); // Redirect after 3 seconds
        }
    }
    ?>
    
    <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
        Email: <input type="email" name="email" required><br>
        <input type="submit" value="Reset Password">
    </form>
</body>
</html>


<?php
function send_email($to, $temp_password) {
    $from = 'your-email@example.com';
    $subject = 'Temporary Password Reset';
    $message = "Your temporary password is: $temp_password

Please login and change your password immediately.

Best regards,
The Team";
    
    // Headers
    $headers = "From: $from\r
";
    $headers .= "Reply-To: $from\r
";
    $headers .= "X-Mailer: PHP/" . phpversion();
    
    mail($to, $subject, $message, $headers);
}
?>


<?php session_start(); ?>

<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <?php
    if (!isset($_SESSION['temp_password'])) {
        echo "You must request a temporary password first.";
        header("refresh:3;url=forgot-password.php"); // Redirect after 3 seconds
        exit();
    }
    
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        $current_temp = mysqli_real_escape_string($conn, $_POST['temp_password']);
        $new_password = mysqli_real_escape_string($conn, $_POST['new_password']);
        
        if ($current_temp == $_SESSION['temp_password']) {
            // Update the database with the new password
            $update_sql = "UPDATE users SET password='$new_password' WHERE email='".$_SESSION['user_email']."'";
            mysqli_query($conn, $update_sql);
            
            // Clear session variables
            unset($_SESSION['temp_password']);
            unset($_SESSION['user_email']);
            
            echo "Your password has been updated successfully!";
            header("refresh:3;url=login.php"); // Redirect after 3 seconds
        } else {
            echo "The temporary password does not match.";
            header("refresh:3;url=reset-password.php"); // Redirect after 3 seconds
        }
    }
    ?>
    
    <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
        Temporary Password: <input type="password" name="temp_password" required><br>
        New Password: <input type="password" name="new_password" required><br>
        Confirm New Password: <input type="password" name="confirm_new_password" required><br>
        <input type="submit" value="Reset Password">
    </form>
</body>
</html>


<?php
session_start();
include('db_connection.php'); // Include your database connection file

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $email = $_POST['email'];
    
    // Check if email exists in the database
    $query = "SELECT id FROM users WHERE email = ?";
    $stmt = mysqli_prepare($conn, $query);
    mysqli_stmt_bind_param($stmt, "s", $email);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);
    
    if (mysqli_num_rows($result) > 0) {
        // Generate a unique token
        $token = bin2hex(random_bytes(32));
        
        // Set the expiration time for the reset link (e.g., 1 hour)
        $expiration = date('Y-m-d H:i:s', strtotime('+1 hour'));
        
        // Update the user's record with the new token and expiration
        $updateQuery = "UPDATE users SET password_reset_token = ?, password_reset_expires = ? WHERE email = ?";
        $stmtUpdate = mysqli_prepare($conn, $updateQuery);
        mysqli_stmt_bind_param($stmtUpdate, "sss", $token, $expiration, $email);
        mysqli_stmt_execute($stmtUpdate);
        
        // Send the reset link to the user's email
        $resetLink = "http://your-site.com/reset_password.php?token=" . $token;
        $to = $email;
        $subject = "Password Reset Request";
        $message = "Please click on the following link to reset your password: 
" . $resetLink;
        
        // Send email using PHP's mail function
        if (mail($to, $subject, $message)) {
            echo "<script>alert('A password reset link has been sent to your email.');</script>";
        } else {
            echo "<script>alert('Failed to send the password reset link. Please try again.');";
        }
    } else {
        echo "<script>alert('Email not found in our records.');";
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <h2>Forgot Password</h2>
    <form action="forgot_password.php" method="post">
        <input type="email" name="email" placeholder="Enter your email address" required><br><br>
        <button type="submit">Send Reset Link</button>
    </form>
</body>
</html>


<?php
session_start();
include('db_connection.php'); // Include your database connection file

if (!isset($_GET['token']) || $_GET['token'] == '') {
    die("Invalid token");
}

$token = mysqli_real_escape_string($conn, $_GET['token']);

// Check if the token exists in the database and hasn't expired
$query = "SELECT id FROM users WHERE password_reset_token = ? AND password_reset_expires > NOW()";
$stmt = mysqli_prepare($conn, $query);
mysqli_stmt_bind_param($stmt, "s", $token);
mysqli_stmt_execute($stmt);
$result = mysqli_stmt_get_result($stmt);

if (mysqli_num_rows($result) == 0) {
    die("Invalid or expired token");
}

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $password = $_POST['new_password'];
    $confirm_password = $_POST['confirm_password'];
    
    if ($password != $confirm_password) {
        echo "<script>alert('Passwords do not match');</script>";
    } else {
        // Hash the new password
        $hashedPassword = password_hash($password, PASSWORD_DEFAULT);
        
        // Update the user's password and clear the reset token
        $updateQuery = "UPDATE users SET password = ?, password_reset_token = NULL, password_reset_expires = NULL WHERE password_reset_token = ?";
        $stmtUpdate = mysqli_prepare($conn, $updateQuery);
        mysqli_stmt_bind_param($stmtUpdate, "ss", $hashedPassword, $token);
        mysqli_stmt_execute($stmtUpdate);
        
        echo "<script>alert('Your password has been reset. Please login with your new password.');";
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <h2>Reset Password</h2>
    <form action="reset_password.php?token=<?php echo $token; ?>" method="post">
        <input type="password" name="new_password" placeholder="Enter new password" required><br><br>
        <input type="password" name="confirm_password" placeholder="Confirm new password" required><br><br>
        <button type="submit">Reset Password</button>
    </form>
</body>
</html>


<?php
function forgotPassword($email) {
    // Database connection details
    $host = 'localhost';
    $dbUsername = 'root';
    $dbPassword = '';
    $dbName = 'mydatabase';

    try {
        // Create database connection
        $conn = new mysqli($host, $dbUsername, $dbPassword, $dbName);

        // Check if email exists in the database
        $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
        $stmt->bind_param("s", $email);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows == 0) {
            return "Email not found in our records.";
        }

        // Generate reset token and expiration time
        $resetToken = bin2hex(random_bytes(16));
        $expires = date('Y-m-d H:i:s', strtotime('+1 hour'));

        // Update password_reset table with the new token
        $stmt = $conn->prepare("INSERT INTO password_resets (user_id, reset_token, expires) VALUES (?, ?, ?)");
        $row = $result->fetch_assoc();
        $userId = $row['id'];
        $stmt->bind_param("iss", $userId, $resetToken, $expires);
        $stmt->execute();

        // Send reset email
        require_once 'PHPMailer/PHPMailer.php';
        require_once 'PHPMailer/Exception.php';
        require_once 'PHPMailer/OAuth.php';
        require_once 'PHPMailer/POP3.php';

        try {
            $mail = new PHPMailer(true);
            
            // SMTP configuration
            $mail->isSMTP();
            $mail->Host = 'smtp.gmail.com';  // Replace with your SMTP server
            $mail->SMTPAuth = true;
            $mail->Username = 'your_email@gmail.com';  // Replace with your email
            $mail->Password = 'your_password';          // Replace with your password
            $mail->SMTPSecure = 'tls';
            $mail->Port = 587;

            // Email content
            $mail->setFrom('your_email@gmail.com', 'Reset Password');
            $mail->addAddress($email);
            $mail->Subject = 'Password Reset Request';

            // Create reset link (replace with your domain)
            $resetLink = "http://example.com/reset-password.php?token=" . $resetToken;

            $body = "Dear user,<br><br>
                    You have requested a password reset. Please click the following link to reset your password:<br><br>
                    <a href='" . $resetLink . "'>" . $resetLink . "</a><br><br>
                    This link will expire in 1 hour.<br><br>
                    Best regards,<br>
                    Your Name";

            $mail->Body = $body;
            $mail->send();

            return "Password reset email has been sent to your email address.";

        } catch (Exception $e) {
            return "Email sending failed. Error: " . $e->getMessage();
        }

    } catch (mysqli_sql_exception $e) {
        return "Database error occurred. Error: " . $e->getMessage();
    }
}

// Example usage:
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = $_POST['email'];
    echo forgotPassword($email);
}
?>


<?php
// Configuration file (config.php)
define('DB_SERVER', 'localhost');
define('DB_USERNAME', 'username');
define('DB_PASSWORD', 'password');
define('DB_NAME', 'database_name');

// Forgot Password Function
function forgotPassword() {
    // Include configuration file
    include_once "config.php";

    // Connect to database
    $conn = mysqli_connect(DB_SERVER, DB_USERNAME, DB_PASSWORD, DB_NAME);
    
    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
    }

    // Check if form is submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        $email = mysqli_real_escape_string($conn, $_POST['email']);

        // Check if email exists in the database
        $sql = "SELECT id FROM users WHERE email='$email'";
        $result = mysqli_query($conn, $sql);

        if (mysqli_num_rows($result) == 1) {
            // Generate a new random password
            $new_password = substr(md5(rand()), 0, 8);
            
            // Send the new password to user's email
            $to = $email;
            $subject = "Password Reset";
            $message = "Your new password is: " . $new_password;
            $headers = "From: noreply@example.com";

            if (mail($to, $subject, $message, $headers)) {
                // Update the database with new password
                $sql_update = "UPDATE users SET password='" . md5($new_password) . "' WHERE email='$email'";
                mysqli_query($conn, $sql_update);

                echo json_encode(array("success" => true, "message" => "Password reset successfully. Check your email for the new password."));
            } else {
                echo json_encode(array("success" => false, "message" => "Error sending email. Please try again later."));
            }
        } else {
            echo json_encode(array("success" => false, "message" => "No account found with this email address."));
        }
    }

    // Close database connection
    mysqli_close($conn);
}

// Call the function
forgotPassword();
?>


// Instead of generating a new password:
$token = bin2hex(random_bytes(16));
$expires = date('Y-m-d H:i:s', time() + 3600); // Token expires after 1 hour

$sql_update = "UPDATE users SET reset_token='$token', reset_expires='$expires' WHERE email='$email'";


<?php
// Database configuration
$host = 'localhost';
$dbname = 'your_database';
$username = 'root';
$password = '';

try {
    $pdo = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = $_POST['email'];

    // Sanitize email
    $email = filter_var($email, FILTER_SANITIZE_EMAIL);

    // Prepare SQL statement to check email existence
    $stmt = $pdo->prepare("SELECT id FROM users WHERE email = ?");
    $stmt->execute([$email]);
    $user = $stmt->fetch();

    if ($user) {
        // Generate a random token
        $token = bin2hex(random_bytes(16));
        
        // Set expiration time (e.g., 1 hour)
        $expiration = date('Y-m-d H:i:s', strtotime('+1 hour'));
        
        // Insert token into tokens table
        $insertStmt = $pdo->prepare("INSERT INTO tokens (user_id, token, expires) VALUES (?, ?, ?)");
        $insertStmt->execute([$user['id'], $token, $expiration]);

        // Send reset email
        require 'PHPMailer/PHPMailer.php';
        require 'PHPMailer/Exception.php';
        require 'PHPMailer/OAuth.php';

        try {
            $mail = new PHPMailer(true);
            $mail->isSMTP();
            $mail->Host = 'smtp.example.com';
            $mail->Port = 587;
            $mail->SMTPAuth = true;
            $mail->Username = 'your_email@example.com';
            $mail->Password = 'your_password';
            $mail->setFrom('your_email@example.com', 'Your Name');
            $mail->addAddress($email);
            $mail->Subject = 'Password Reset Request';
            $resetLink = "http://example.com/reset-password.php?token=" . $token;
            $mail->Body = "<h2>Password Reset</h2>
                          <p>We received a password reset request. Click the link below to reset your password:</p>
                          <a href='$resetLink'>Reset Password</a>
                          <p>If you did not request this, please ignore this email.</p>";
            $mail->send();
            
            // Redirect with success message
            header("Location: forgot-password.php?success=true");
        } catch (Exception $e) {
            echo "Error sending email: " . $e->getMessage();
        }
    } else {
        // Email not found
        $_SESSION['error'] = 'Email address not registered.';
        header("Location: forgot-password.php");
    }
}
?>


<?php
session_start();
include('db_connection.php'); // Include your database connection

if (isset($_POST['email'])) {
    $email = $_POST['email'];
    
    // Check if email exists in the database
    $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
    $stmt->bind_param("s", $email);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        // Generate a unique token
        $token = bin2hex(random_bytes(32));
        
        // Set expiration time (1 hour)
        $expires = date('Y-m-d H:i:s', strtotime('+1 hour'));
        
        // Insert token into the database
        $stmt = $conn->prepare("INSERT INTO password_reset (user_id, token, expires) 
                               SELECT id, ?, ? FROM users WHERE email = ?");
        $stmt->bind_param("sss", $token, $expires, $email);
        $stmt->execute();
        
        // Send reset link to the user's email
        $to = $email;
        $subject = "Password Reset Request";
        $message = "Please click the following link to reset your password:

" .
                   "http://yourdomain.com/reset_password.php?token=$token

" .
                   "If you did not request this, please ignore this email.";
        
        mail($to, $subject, $message);
        echo "An email has been sent with instructions to reset your password.";
    } else {
        echo "Email does not exist in our records.";
    }
}
?>


<?php
session_start();
include('db_connection.php');

if (isset($_POST['new_password'], $_POST['confirm_password'], $_POST['token'])) {
    $new_password = $_POST['new_password'];
    $confirm_password = $_POST['confirm_password'];
    $token = $_POST['token'];
    
    if ($new_password !== $confirm_password) {
        die("Passwords do not match.");
    }
    
    // Check token validity
    $stmt = $conn->prepare("SELECT user_id FROM password_reset 
                           WHERE token = ? AND expires > NOW()");
    $stmt->bind_param("s", $token);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows == 1) {
        $row = $result->fetch_assoc();
        $user_id = $row['user_id'];
        
        // Hash the new password
        $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);
        
        // Update user's password
        $stmt = $conn->prepare("UPDATE users SET password = ? WHERE id = ?");
        $stmt->bind_param("si", $hashed_password, $user_id);
        $stmt->execute();
        
        // Remove the reset token
        $stmt = $conn->prepare("DELETE FROM password_reset WHERE token = ?");
        $stmt->bind_param("s", $token);
        $stmt->execute();
        
        echo "Password has been reset successfully.";
    } else {
        die("Invalid or expired token.");
    }
}
?>


<?php
// Database connection details
$host = 'localhost';
$username = 'username';
$password = 'password';
$dbname = 'database_name';

// Create database connection
$conn = new mysqli($host, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Check if form is submitted
if (isset($_POST['submit'])) {

    // Sanitize email input
    $email = mysqli_real_escape_string($conn, $_POST['email']);

    // Validate email format
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        die("Invalid email format");
    }

    // Check if email exists in the database
    $sql = "SELECT id FROM users WHERE email='$email'";
    $result = $conn->query($sql);

    if ($result->num_rows == 0) {
        die("Email does not exist in our records");
    }

    // Generate a random password reset token
    $reset_token = bin2hex(random_bytes(16));

    // Set the expiration time for the token (1 hour from now)
    $expires = date('Y-m-d H:i:s', strtotime('+1 hour'));

    // Update the database with the new token and expiration time
    $sql = "UPDATE users SET reset_token='$reset_token', reset_expires='$expires' WHERE email='$email'";
    if (!$conn->query($sql)) {
        die("Error: " . $conn->error);
    }

    // Send the password reset link to the user's email
    $subject = 'Password Reset Request';
    $message = "Please click on the following link to reset your password:

";
    $message .= "http://your-website.com/reset-password.php?token=$reset_token";

    $headers = "From: noreply@your-website.com\r
";
    $headers .= "Content-Type: text/plain; charset=UTF-8\r
";

    if (!mail($email, $subject, $message, $headers)) {
        die("Error sending email");
    }

    // Display success message
    echo "Password reset link has been sent to your email address.";
} else {
    // If form is not submitted, display the forgot password form
    ?>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <label for="email">Email:</label>
        <input type="email" id="email" name="email" required>
        <button type="submit" name="submit">Reset Password</button>
    </form>
    <?php
}

// Close database connection
$conn->close();
?>


<?php
session_start();
require_once 'PHPMailer/PHPMailer.php';
require_once 'PHPMailer/Exception.php';

// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'mydatabase';

$conn = new mysqli($host, $username, $password, $dbname);
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Error messages
$error_message = "";
$success_message = "";

if (isset($_POST['reset_request'])) {
    $email = $_POST['email'];
    
    // Check if email exists in database
    $sql = "SELECT * FROM users WHERE email = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("s", $email);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows > 0) {
        // Generate random token
        $token = bin2hex(random_bytes(16));
        
        // Insert token into database
        $sql_token = "UPDATE users SET reset_token = ? WHERE email = ?";
        $stmt_token = $conn->prepare($sql_token);
        $stmt_token->bind_param("ss", $token, $email);
        $stmt_token->execute();
        
        // Send reset link to email
        $mail = new PHPMailer\PHPMailer;
        try {
            $mail->isSMTP();
            $mail->Host = 'smtp.example.com';
            $mail->SMTPAuth = true;
            $mail->Username = 'your_email@example.com';
            $mail->Password = 'your_password';
            $mail->Port = 587;
            
            $mail->setFrom('your_email@example.com', 'Reset Password');
            $mail->addAddress($email);
            $mail->Subject = 'Password Reset Request';
            $mail->Body = "Please click the following link to reset your password: http://example.com/reset_password.php?token=$token";
            
            if ($mail->send()) {
                $success_message = "A password reset link has been sent to your email.";
            } else {
                $error_message = "Email could not be sent. Please try again.";
            }
        } catch (Exception $e) {
            $error_message = "Email sending failed: " . $mail->ErrorInfo;
        }
    } else {
        $error_message = "Email does not exist in our records.";
    }
}

// Function to validate and update password
function resetPassword($conn, $token, $new_password) {
    $sql = "SELECT * FROM users WHERE reset_token = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("s", $token);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows > 0) {
        // Hash the new password
        $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);
        
        // Update password and reset token
        $sql_update = "UPDATE users SET password = ?, reset_token = NULL WHERE reset_token = ?";
        $stmt_update = $conn->prepare($sql_update);
        $stmt_update->bind_param("ss", $hashed_password, $token);
        $stmt_update->execute();
        
        return true;
    } else {
        return false;
    }
}

// Check for expired tokens
function checkTokenExpiry($conn, $token) {
    $sql = "SELECT created_at FROM users WHERE reset_token = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("s", $token);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows > 0) {
        $row = $result->fetch_assoc();
        $created_at = strtotime($row['created_at']);
        $current_time = time();
        
        // Token expires after 1 hour
        if (($current_time - $created_at) < 3600) {
            return true;
        }
    }
    
    return false;
}

// Display error/success messages using sessions
session_start();
if (isset($_SESSION['message'])) {
    echo "<div class='alert'>" . $_SESSION['message'] . "</div>";
    unset($_SESSION['message']);
}
?>


<?php
session_start();
require_once 'database.php';

if (!isset($_GET['token'])) {
    header("Location: forgot_password.php");
    exit();
}

$token = $_GET['token'];

// Check if token is valid and not expired
if (checkTokenExpiry($conn, $token)) {
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        $new_password = $_POST['new_password'];
        
        if (resetPassword($conn, $token, $new_password)) {
            $_SESSION['message'] = "Your password has been reset successfully!";
            header("Location: login.php");
            exit();
        } else {
            $_SESSION['message'] = "Error resetting password. Please try again.";
            header("Location: forgot_password.php");
            exit();
        }
    }
} else {
    // Token is invalid or expired
    $_SESSION['message'] = "Invalid or expired token. Please request a new reset link.";
    header("Location: forgot_password.php");
    exit();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <?php include 'messages.php'; ?>
    
    <h2>Reset Password</h2>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <label>New Password:</label><br>
        <input type="password" name="new_password" required><br><br>
        
        <button type="submit">Reset Password</button>
    </form>
</body>
</html>


<?php
// Include database configuration file
include 'db_config.php';

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = isset($_POST['email']) ? $_POST['email'] : '';
    
    if (empty($email)) {
        $error = "Please enter your email address.";
    } else {
        // Validate email format
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            $error = "Invalid email format.";
        } else {
            // Check if email exists in database
            $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
            $stmt->bind_param("s", $email);
            $stmt->execute();
            $result = $stmt->get_result();
            
            if ($result->num_rows == 1) {
                // Generate a random token
                $token = bin2hex(random_bytes(32));
                
                // Create reset token and set expiration time (1 hour)
                $expires = date("Y-m-d H:i:s", time() + 3600);
                
                // Store token in database
                $stmt = $conn->prepare("INSERT INTO password_reset (user_id, token, expires) VALUES (?, ?, ?)");
                $stmt->bind_param("iss", $result->fetch_assoc()['id'], $token, $expires);
                $stmt->execute();
                
                // Send reset email
                $to = $email;
                $subject = "Password Reset Request";
                $body = "Please click the following link to reset your password: http://your-site.com/reset_password.php?token=$token";
                $headers = "From: noreply@your-site.com\r
";
                
                if (mail($to, $subject, $body, $headers)) {
                    echo "A password reset email has been sent to your inbox.";
                } else {
                    $error = "Failed to send the password reset email.";
                }
            } else {
                $error = "No account found with this email address.";
            }
        }
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <?php if (isset($error)) { echo "<p style='color:red;'>$error</p>"; } ?>
    <form method="post">
        <input type="email" name="email" placeholder="Enter your email" required><br>
        <button type="submit">Reset Password</button>
    </form>
</body>
</html>


<?php
// Include database configuration file
include 'db_config.php';

if (isset($_GET['token']) && !empty($_GET['token'])) {
    $token = $_GET['token'];
    
    // Check if token exists and is valid
    $stmt = $conn->prepare("SELECT user_id, expires FROM password_reset WHERE token = ?");
    $stmt->bind_param("s", $token);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows == 1) {
        $row = $result->fetch_assoc();
        
        // Check if token has expired
        if (strtotime($row['expires']) < time()) {
            echo "This password reset link has expired. Please request a new one.";
            exit;
        }
        
        // If everything is valid, show the reset form
?>
<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <form method="post" action="">
        <input type="password" name="new_password" placeholder="New password" required><br>
        <input type="password" name="confirm_password" placeholder="Confirm new password" required><br>
        <button type="submit">Reset Password</button>
        <input type="hidden" name="token" value="<?php echo $token; ?>">
    </form>
<?php
        if ($_SERVER["REQUEST_METHOD"] == "POST") {
            $new_password = $_POST['new_password'];
            $confirm_password = $_POST['confirm_password'];
            
            if ($new_password !== $confirm_password) {
                $error = "Passwords do not match.";
            } else {
                // Hash the new password
                $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);
                
                // Update user's password in database
                $stmt = $conn->prepare("UPDATE users SET password = ? WHERE id = ?");
                $stmt->bind_param("si", $hashed_password, $row['user_id']);
                $stmt->execute();
                
                // Delete the reset token
                $stmt = $conn->prepare("DELETE FROM password_reset WHERE token = ?");
                $stmt->bind_param("s", $token);
                $stmt->execute();
                
                echo "Your password has been successfully updated. Please login with your new password.";
                header("Location: login.php");
                exit;
            }
        }
    } else {
        echo "Invalid password reset link.";
    }
} else {
    echo "No token provided. Please request a password reset.";
}
?>
</body>
</html>


<?php
require_once 'db.php';

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $email = filter_var($_POST['email'], FILTER_VALIDATE_EMAIL);

    if (!$email) {
        die(header("Location: forgot_password.php?error=Invalid email format"));
    }

    try {
        $stmt = $pdo->prepare("SELECT id FROM users WHERE email = ?");
        $stmt->execute([$email]);
        $user = $stmt->fetch();

        if (!$user) {
            die(header("Location: forgot_password.php?error=Email not registered"));
        }

        // Generate token and expiration time
        $token = bin2hex(random_bytes(16));
        $expires = date('Y-m-d H:i:s', strtotime('+1 hour'));

        // Insert into database
        $stmt = $pdo->prepare("INSERT INTO password_reset (user_id, token, expires) VALUES (?, ?, ?)");
        $stmt->execute([$user['id'], $token, $expires]);

        // Send reset email
        require_once 'PHPMailer/PHPMailer.php';
        $mail = new PHPMailer();
        $mail->setFrom('no-reply@example.com', 'Password Reset');
        $mail->addAddress($email);
        $mail->Subject = "Password Reset Request";
        $body = "Please click this link to reset your password: http://example.com/reset.php?token=$token";
        $mail->Body = $body;

        if (!$mail->send()) {
            die(header("Location: forgot_password.php?error=Email sending failed"));
        }

        header("Location: forgot_password.php?success=true");
    } catch (Exception $e) {
        error_log($e->getMessage());
        die(header("Location: forgot_password.php?error=An error occurred"));
    }
}
?>


<?php
require_once 'db.php';

if (!isset($_GET['token'])) {
    die(header("Location: forgot_password.php?error=Invalid request"));
}

$token = $_GET['token'];
$current_time = date('Y-m-d H:i:s');

try {
    $stmt = $pdo->prepare("SELECT user_id FROM password_reset WHERE token = ? AND expires > ?");
    $stmt->execute([$token, $current_time]);
    $reset = $stmt->fetch();

    if (!$reset) {
        die(header("Location: forgot_password.php?error=Invalid or expired token"));
    }

    // Token is valid
    $user_id = $reset['user_id'];
} catch (Exception $e) {
    error_log($e->getMessage());
    die(header("Location: forgot_password.php?error=An error occurred"));
}
?>


<?php
require_once 'db.php';

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $user_id = $_POST['user_id'];
    $new_password = $_POST['new_password'];
    $confirm_password = $_POST['confirm_password'];

    if ($new_password !== $confirm_password) {
        die(header("Location: reset.php?token=$token&error=Passwords do not match"));
    }

    // Hash the password
    $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);

    try {
        // Update user's password
        $stmt = $pdo->prepare("UPDATE users SET password = ? WHERE id = ?");
        $stmt->execute([$hashed_password, $user_id]);

        // Delete all reset tokens for this user
        $stmt = $pdo->prepare("DELETE FROM password_reset WHERE user_id = ?");
        $stmt->execute([$user_id]);

        header("Location: login.php?success=Password has been reset successfully");
    } catch (Exception $e) {
        error_log($e->getMessage());
        die(header("Location: reset.php?token=$token&error=An error occurred"));
    }
}
?>


<?php
// Configuration file with database credentials
include 'config.php';

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = mysqli_real_escape_string($conn, $_POST['email']);
    
    // Check if email exists in the database
    $query = "SELECT * FROM users WHERE email = '$email'";
    $result = mysqli_query($conn, $query);
    
    if (mysqli_num_rows($result) == 0) {
        die("Email does not exist. Please check your email and try again.");
    }
    
    // Generate a unique token
    $token = bin2hex(random_bytes(16)); // Generates a secure token
    
    // Update the database with the token and timestamp
    $timestamp = time();
    $updateQuery = "UPDATE users SET reset_token = '$token', reset_request_time = '$timestamp' WHERE email = '$email'";
    mysqli_query($conn, $updateQuery);
    
    // Send the password reset link to user's email
    $to = $email;
    $subject = "Password Reset Request";
    $message = "Hello,

You have requested a password reset. Please click the following link to reset your password:

http://example.com/reset_password.php?token=$token

This link will expire in 30 minutes.

If you did not request this, please ignore this email.";
    $headers = "From: admin@example.com" . "\r
";
    
    mail($to, $subject, $message, $headers);
    
    echo "A password reset link has been sent to your email. Please check your inbox.";
}
?>


<?php
include 'config.php';

if (isset($_GET['token'])) {
    $token = mysqli_real_escape_string($conn, $_GET['token']);
    
    // Check if token exists in database
    $query = "SELECT * FROM users WHERE reset_token = '$token'";
    $result = mysqli_query($conn, $query);
    
    if (mysqli_num_rows($result) == 0) {
        die("Invalid or expired token.");
    }
    
    // Check if the token is still valid (e.g., within 30 minutes)
    $row = mysqli_fetch_assoc($result);
    $timeElapsed = time() - $row['reset_request_time'];
    if ($timeElapsed > 1800) { // 1800 seconds = 30 minutes
        die("Token has expired. Please request a new password reset.");
    }
    
    // If the token is valid, show the password reset form
    ?>
    <html>
    <head>
        <title>Reset Password</title>
    </head>
    <body>
        <h2>Reset Password</h2>
        <form action="reset_password.php?token=<?php echo $token ?>" method="post">
            New Password: <input type="password" name="newPassword" required><br><br>
            Confirm Password: <input type="password" name="confirmPassword" required><br><br>
            <input type="submit" value="Reset Password">
        </form>
    </body>
    </html>
    <?php
} else {
    die("No token provided.");
}

// Process the new password
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $token = mysqli_real_escape_string($conn, $_GET['token']);
    $newPassword = mysqli_real_escape_string($conn, $_POST['newPassword']);
    $confirmPassword = mysqli_real_escape_string($conn, $_POST['confirmPassword']);
    
    if ($newPassword != $confirmPassword) {
        die("Passwords do not match.");
    }
    
    // Hash the new password
    $hashedPassword = password_hash($newPassword, PASSWORD_DEFAULT);
    
    // Update the user's password and clear the reset token
    $updateQuery = "UPDATE users SET password = '$hashedPassword', reset_token = NULL WHERE reset_token = '$token'";
    mysqli_query($conn, $updateQuery);
    
    echo "Password has been successfully updated. Please login with your new password.";
}
?>


<?php
$servername = "localhost";
$username = "root";
$password = "";
$dbname = "your_database";

// Create connection
$conn = mysqli_connect($servername, $username, $password, $dbname);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}
?>


<?php
// Database configuration
include 'config.php';

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $email = mysqli_real_escape_string($conn, $_POST['email']);
    
    // Check if email exists in the database
    $query = "SELECT id FROM users WHERE email = ?";
    $stmt = mysqli_prepare($conn, $query);
    mysqli_stmt_bind_param($stmt, 's', $email);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);

    if (mysqli_num_rows($result) == 0) {
        die("Email does not exist in our records!");
    }

    // Generate a random token
    $token = bin2hex(random_bytes(16));
    $expires = date('Y-m-d H:i:s', time() + 3600); // Token expires after 1 hour

    // Update the token and expiration time in the database
    $updateQuery = "UPDATE users SET reset_token = ?, reset_expires = ? WHERE email = ?";
    $stmt = mysqli_prepare($conn, $updateQuery);
    mysqli_stmt_bind_param($stmt, 'sss', $token, $expires, $email);
    mysqli_stmt_execute($stmt);

    // Send the reset link to the user's email
    $resetLink = "http://$_SERVER[HTTP_HOST]/reset.php?token=$token";
    $subject = "Password Reset Request";
    $message = "
        <html>
            <body>
                <h2>Password Reset</h2>
                <p>We received a request to reset your password. Click the link below to reset it:</p>
                <a href='$resetLink'>Reset Password</a><br><br>
                <small>This link will expire in one hour.</small>
            </body>
        </html";
    $headers = "MIME-Version: 1.0\r
";
    $headers .= "Content-type: text/html; charset=ISO-8859-1\r
";
    $headers .= "From: yourname@example.com";

    if (mail($email, $subject, $message, $headers)) {
        echo "A password reset link has been sent to your email.";
    } else {
        die("Failed to send the reset link. Please try again.");
    }
}
?>


<?php
$host = 'localhost';
$user = 'root';
$password = '';
$db_name = 'mydatabase';

$conn = mysqli_connect($host, $user, $password, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_error());
}
?>


<?php
session_start();
require_once('db_connect.php'); // Include your database connection file

if (isset($_POST['reset'])) {
    $email = trim(mysqli_real_escape_string($conn, $_POST['email']));
    
    if (empty($email)) {
        $error = "Please enter your email address.";
    } else {
        // Check if the email exists in the database
        $check_email = "SELECT id FROM users WHERE email = '$email'";
        $result = mysqli_query($conn, $check_email);
        
        if (mysqli_num_rows($result) == 0) {
            $error = "Email address not found. Please try again.";
        } else {
            // Generate a random token
            $token = bin2hex(random_bytes(16));
            $expires = date('Y-m-d H:i:s', strtotime('+24 hours'));
            
            // Update the database with the new token and expiration time
            $update_token = "UPDATE users SET reset_token = '$token', reset_expires = '$expires' WHERE email = '$email'";
            mysqli_query($conn, $update_token);
            
            // Send the password reset link to the user's email
            $reset_link = "http://".$_SERVER['HTTP_HOST']."/reset_password.php?token=".$token."&id=".mysqli_insert_id($conn);
            $to = $email;
            $subject = "Password Reset Request";
            $message = "To reset your password, click on the following link:

".$reset_link."

If you did not request this password reset, please ignore this email.";
            $headers = "From: noreply@".$_SERVER['HTTP_HOST']."\r
";
            mail($to, $subject, $message, $headers);
            
            // Show success message
            $success = "An email has been sent to you with instructions to reset your password.";
        }
    }
}
?>


<?php
// Database connection
$host = 'localhost';
$username = 'username';
$password = 'password';
$dbname = 'database';

$conn = new mysqli($host, $username, $password, $dbname);
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Session start
session_start();

// Password reset function
function forgotPassword($email) {
    global $conn;
    
    // Check if email exists in the database
    $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
    $stmt->bind_param('s', $email);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows > 0) {
        // Generate a random token
        $token = bin2hex(random_bytes(32));
        
        // Insert the token into the database with an expiration time (e.g., 1 hour)
        $expires = date('Y-m-d H:i:s', strtotime('+1 hour'));
        $stmt = $conn->prepare("INSERT INTO password_reset (user_id, token, expires) VALUES (?, ?, ?)");
        $stmt->bind_param('iss', $result->fetch_assoc()['id'], $token, $expires);
        $stmt->execute();
        
        // Send the reset email
        $resetLink = 'http://example.com/reset-password.php?token=' . $token;
        sendResetEmail($email, $resetLink);
        
        return array('success' => true, 'message' => 'A password reset link has been sent to your email.');
    } else {
        return array('success' => false, 'message' => 'No account found with this email address.');
    }
}

// Function to send the reset email
function sendResetEmail($email, $resetLink) {
    // Replace with your actual SMTP settings
    $from = 'no-reply@example.com';
    $subject = 'Password Reset Request';
    
    $message = "
        <html>
            <body>
                <p>We received a request to reset your password. Click the link below to reset it:</p>
                <a href='".$resetLink."'>".$resetLink."</a><br><br>
                <p>If you didn't request this password reset, you can safely ignore this email.</p>
            </body>
        </html>
    ";
    
    // Use PHPMailer or another email library for production
    $headers = 'MIME-Version: 1.0' . "\r
";
    $headers .= 'Content-type: text/html; charset=iso-8859-1' . "\r
";
    $headers .= 'From: ' . $from . "\r
";
    
    mail($email, $subject, $message, $headers);
}

// Reset password function
function resetPassword($token, $newPassword) {
    global $conn;
    
    // Check if the token exists and is valid
    $stmt = $conn->prepare("SELECT user_id FROM password_reset WHERE token = ? AND expires > NOW()");
    $stmt->bind_param('s', $token);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows > 0) {
        // Update the user's password
        $user_id = $result->fetch_assoc()['user_id'];
        
        // Hash the new password (use a strong hashing algorithm like bcrypt)
        $hashedPassword = password_hash($newPassword, PASSWORD_DEFAULT);
        
        $stmt = $conn->prepare("UPDATE users SET password = ? WHERE id = ?");
        $stmt->bind_param('si', $hashedPassword, $user_id);
        $stmt->execute();
        
        // Delete the reset token
        $stmt = $conn->prepare("DELETE FROM password_reset WHERE token = ?");
        $stmt->bind_param('s', $token);
        $stmt->execute();
        
        return array('success' => true, 'message' => 'Your password has been successfully updated.');
    } else {
        return array('success' => false, 'message' => 'Invalid or expired reset token.');
    }
}

// Close database connection
$conn->close();
?>


// In forgot-password.php

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $email = $_POST['email'];
    
    $result = forgotPassword($email);
    
    if ($result['success']) {
        echo $result['message'];
    } else {
        echo $result['message'];
    }
}


// In reset-password.php

if (isset($_GET['token'])) {
    $token = $_GET['token'];
    
    // Display a form to enter the new password
    
    if ($_SERVER['REQUEST_METHOD'] == 'POST') {
        $newPassword = $_POST['new_password'];
        
        $result = resetPassword($token, $newPassword);
        
        if ($result['success']) {
            echo $result['message'];
            // Redirect to login page
            header('Location: login.php');
            exit();
        } else {
            echo $result['message'];
        }
    }
} else {
    // Show error message for invalid token or expired token
}


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'mydatabase';

// Create connection
$conn = new mysqli($host, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// If form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get email from form
    $email = $_POST['email'];
    
    // Check if email exists in database
    $sql = "SELECT id FROM users WHERE email=?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("s", $email);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows > 0) {
        // Generate a unique reset token
        $token = md5(uniqid(rand(), true));
        
        // Set token expiration time (30 minutes)
        $expires = date('Y-m-d H:i:s', strtotime('+30 minutes'));
        
        // Insert token into database
        $sql = "INSERT INTO password_resets (user_id, token, expires) VALUES (?, ?, ?)";
        $stmt = $conn->prepare($sql);
        $row = $result->fetch_assoc();
        $stmt->bind_param("iss", $row['id'], $token, $expires);
        $stmt->execute();
        
        // Send email with reset link
        $to = $email;
        $subject = "Password Reset Request";
        $message = "Please click the following link to reset your password: http://example.com/reset_password.php?token=" . $token;
        $headers = "From: webmaster@example.com" . "\r
" .
                   "CC: someoneelse@example.com";
        
        mail($to, $subject, $message, $headers);
        
        echo "<p>We have sent you a password reset link to your email address.</p>";
    } else {
        echo "<p>Email does not exist in our database.</p>";
    }
}

// Close connection
$conn->close();
?>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'mydatabase';

// Create connection
$conn = new mysqli($host, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// If token is provided in URL and it's valid
if (isset($_GET['token'])) {
    // Get token from URL
    $token = $_GET['token'];
    
    // Check if token exists and hasn't expired
    $sql = "SELECT * FROM password_resets WHERE token=? AND expires > NOW()";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("s", $token);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows > 0) {
        // Token is valid
        $row = $result->fetch_assoc();
        
        // If form is submitted with new password
        if ($_SERVER["REQUEST_METHOD"] == "POST") {
            // Get new password from form
            $new_password = $_POST['password'];
            $confirm_password = $_POST['confirm_password'];
            
            if ($new_password != $confirm_password) {
                die("Passwords do not match!");
            }
            
            // Update user's password in database
            $sql = "UPDATE users SET password=SHA2(?, 256) WHERE id=?";
            $stmt = $conn->prepare($sql);
            $stmt->bind_param("si", $new_password, $row['user_id']);
            $stmt->execute();
            
            // Delete the reset token
            $sql = "DELETE FROM password_resets WHERE token=?";
            $stmt = $conn->prepare($sql);
            $stmt->bind_param("s", $token);
            $stmt->execute();
            
            echo "<p>Password has been updated successfully!</p>";
        } else {
            // Show reset form
?>
<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>

<h2>Reset Password</h2>

<form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"] . "?token=" . $token); ?>" method="post">
    New Password: <input type="password" name="password"><br><br>
    Confirm Password: <input type="password" name="confirm_password"><br><br>
    
    <input type="submit" value="Reset Password">
</form>

</body>
</html>
<?php
        }
    } else {
        echo "<p>Invalid or expired token!</p>";
    }
} else {
    echo "<p>No token provided!</p>";
}

// Close connection
$conn->close();
?>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

try {
    // Create database connection
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

    if ($_SERVER['REQUEST_METHOD'] == 'POST') {
        // Check if email is provided and valid
        if (empty($_POST['email'])) {
            die("Please enter your email address.");
        }

        $email = $_POST['email'];
        
        // Validate email format
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            die("Invalid email format.");
        }

        // Check if email exists in the database
        $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
        $stmt->execute([$email]);
        $user = $stmt->fetch(PDO::FETCH_ASSOC);

        if (!$user) {
            die("No account found with this email address.");
        }

        // Generate a random token for password reset
        $token = bin2hex(openssl_random_pseudo_bytes(16));
        
        // Calculate expiration time (30 minutes from now)
        $expires = date('Y-m-d H:i:s', strtotime('+30 minutes'));

        // Insert the token into the database
        $stmt = $conn->prepare("INSERT INTO password_resets (email, token, created_at) VALUES (?, ?, ?)");
        $stmt->execute([$email, $token, $expires]);

        // Send reset link to user's email
        $resetLink = "http://".$_SERVER['HTTP_HOST']."/reset-password.php?token=".$token;
        
        $to = $email;
        $subject = "Password Reset Request";
        $message = "Someone requested a password reset for your account.

If this was you, please click the link below to reset your password:
".$resetLink."

This link will expire in 30 minutes.";
        
        mail($to, $subject, $message);
        
        // Redirect user with success message
        header("Location: forgot-password-confirmation.php?email=".$email);
        exit();
    }
} catch(PDOException $e) {
    die("Database connection failed: " . $e->getMessage());
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Forgot Password</title>
</head>
<body>
    <h2>Forgot Password</h2>
    
    <?php
    if (isset($_GET['error'])) {
        echo "<div style='color: red;'>".$_GET['error']."</div>";
    }
    ?>

    <form action="<?=$_SERVER['PHP_SELF']?>" method="POST">
        <label for="email">Email:</label><br>
        <input type="email" name="email" required><br><br>
        <button type="submit">Reset Password</button>
    </form>

    <p>Remember your password? <a href="login.php">Login here</a>.</p>
</body>
</html>


<?php
// Database configuration
$host = 'localhost';
$user = 'root';
$password = '';
$dbname = 'test';

// Connect to database
$conn = mysqli_connect($host, $user, $password, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

$email = $_POST['email'];

// Check if email exists
$sql = "SELECT id FROM users WHERE email='" . mysqli_real_escape_string($conn, $email) . "'";
$result = mysqli_query($conn, $sql);

if (mysqli_num_rows($result) == 0) {
    echo "Email not found!";
} else {
    // Generate reset token
    $token = bin2hex(random_bytes(32));
    
    // Store token in database with expiry time (e.g., 30 minutes)
    $sql = "INSERT INTO password_resets (user_id, token, created_at) 
            VALUES (" . mysqli_insert_id($conn) . ", '" . mysqli_real_escape_string($conn, $token) . "', NOW())";
    
    if (mysqli_query($conn, $sql)) {
        // Send email
        $to = $email;
        $subject = "Password Reset Request";
        
        $message = "<html>
                     <head></head>
                     <body>
                         <h2>Password Reset</h2>
                         <p>Please click the following link to reset your password:</p>
                         <a href='http://localhost/reset_password.php?token=$token'>Reset Password</a><br><br>
                         This link will expire in 30 minutes.
                     </body>
                   </html>";
        
        $headers = "MIME-Version: 1.0" . "\r
";
        $headers .= "Content-type:text/html;charset=UTF-8" . "\r
";
        $headers .= "From: noreply@example.com" . "\r
"; // Change to your email
        
        mail($to, $subject, $message, $headers);
        
        echo "A password reset link has been sent to your email!";
    } else {
        echo "Error sending reset link. Please try again.";
    }
}

mysqli_close($conn);
?>


<?php
// Database configuration
$host = 'localhost';
$user = 'root';
$password = '';
$dbname = 'test';

$conn = mysqli_connect($host, $user, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

if (isset($_GET['token'])) {
    $token = $_GET['token'];
    
    // Check token validity
    $sql = "SELECT * FROM password_resets WHERE token='" . mysqli_real_escape_string($conn, $token) . "'";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) > 0) {
        $row = mysqli_fetch_assoc($result);
        // Check if token is expired
        $created_at = strtotime($row['created_at']);
        $expires_in = 1800; // 30 minutes
        
        if ($created_at + $expires_in >= time()) {
            ?>
            <h2>Reset Password</h2>
            <form action="reset_password.php" method="post">
                <input type="password" name="new_pass" placeholder="New Password" required><br><br>
                <button type="submit">Submit</button>
                <input type="hidden" name="token" value="<?php echo $token; ?>">
            </form>
            <?php
        } else {
            echo "This reset link has expired. Please request a new one.";
        }
    } else {
        echo "Invalid reset link!";
    }
} elseif (isset($_POST['new_pass'])) {
    // Update password
    $token = $_POST['token'];
    
    $sql = "SELECT * FROM password_resets WHERE token='" . mysqli_real_escape_string($conn, $token) . "'";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) > 0) {
        $row = mysqli_fetch_assoc($result);
        
        // Check expiration
        $created_at = strtotime($row['created_at']);
        $expires_in = 1800;
        
        if ($created_at + $expires_in >= time()) {
            $new_pass = password_hash($_POST['new_pass'], PASSWORD_DEFAULT);
            
            // Update user's password
            $sql_update_user = "UPDATE users SET password='$new_pass' WHERE id=" . $row['user_id'];
            if (mysqli_query($conn, $sql_update_user)) {
                // Delete reset token
                $sql_delete_token = "DELETE FROM password_resets WHERE token='" . mysqli_real_escape_string($conn, $token) . "'";
                mysqli_query($conn, $sql_delete_token);
                
                echo "Password updated successfully!";
            } else {
                echo "Error updating password.";
            }
        } else {
            echo "This reset link has expired. Please request a new one.";
        }
    } else {
        echo "Invalid token or already used.";
    }
} else {
    echo "Please use the provided link to reset your password!";
}
?>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$database = 'my_database';

// Create connection
$conn = new mysqli($host, $username, $password, $database);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to generate random token
function generateToken() {
    return bin2hex(mt_rand());
}

// Function to send reset email
function sendResetEmail($email, $token, $userId) {
    $resetLink = "http://".$_SERVER['HTTP_HOST']."/reset-password.php?token=".$token."&id=".$userId;
    
    $to = $email;
    $subject = "Password Reset Request";
    $message = "Please click the following link to reset your password:

".$resetLink."

If you did not request this password reset, please ignore this email.
The link will expire in 30 minutes.";
    $headers = "From: admin@example.com" . "\r
";

    mail($to, $subject, $message, $headers);
}

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $emailOrUsername = $_POST['email_or_username'];
    
    // Query to check if email or username exists
    $stmt = $conn->prepare("SELECT id FROM users WHERE email=? OR username=?");
    $stmt->bind_param("ss", $emailOrUsername, $emailOrUsername);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows > 0) {
        // Generate token
        $token = generateToken();
        
        // Get user ID
        $row = $result->fetch_assoc();
        $userId = $row['id'];
        
        // Insert token into database
        $insertStmt = $conn->prepare("INSERT INTO password_reset (user_id, token, expires) VALUES (?, ?, CURRENT_TIMESTAMP + INTERVAL 30 MINUTE)");
        $insertStmt->bind_param("ss", $userId, $token);
        $insertStmt->execute();
        
        // Send reset email
        sendResetEmail($emailOrUsername, $token, $userId);
        
        echo "A password reset link has been sent to your email address.";
    } else {
        echo "No account found with that email or username.";
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <h2>Forgot Password</h2>
    <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]);?>">
        Email or Username: <input type="text" name="email_or_username">
        <input type="submit" value="Request Reset">
    </form>
</body>
</html>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$database = 'my_database';

// Create connection
$conn = new mysqli($host, $username, $password, $database);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Check if token and id are provided
if (!isset($_GET['token']) || !isset($_GET['id'])) {
    die("Invalid request");
}

$token = $_GET['token'];
$id = $_GET['id'];

// Validate token and check expiration
$stmt = $conn->prepare("SELECT * FROM password_reset WHERE user_id=? AND token=? AND expires > CURRENT_TIMESTAMP");
$stmt->bind_param("is", $id, $token);
$stmt->execute();
$result = $stmt->get_result();

if ($result->num_rows == 0) {
    die("Invalid or expired reset link.");
}

// If form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $newPassword = $_POST['new_password'];
    
    // Update user password
    $updateStmt = $conn->prepare("UPDATE users SET password=? WHERE id=?");
    $hashedPassword = password_hash($newPassword, PASSWORD_DEFAULT);
    $updateStmt->bind_param("si", $hashedPassword, $id);
    $updateStmt->execute();
    
    // Delete the reset token
    $deleteStmt = $conn->prepare("DELETE FROM password_reset WHERE user_id=?");
    $deleteStmt->bind_param("i", $id);
    $deleteStmt->execute();
    
    echo "Password has been updated successfully!";
}

?>
<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <h2>Reset Password</h2>
    <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]);?>">
        New Password: <input type="password" name="new_password">
        <input type="submit" value="Change Password">
    </form>
</body>
</html>


   <?php
   if (isset($_POST['email'])) {
       $email = $_POST['email'];
       // Validate and check email existence in database
       // If exists, generate token; else, show error.
   }
   ?>
   

3. **Generate a Random Token**
   
   function generateToken() {
       return bin2hex(random_bytes(16)); // Generates a 32-character token
   }
   $token = generateToken();
   

4. **Store the Token in the Database**
   - Insert or update the user's record with the new token.

5. **Send a Reset Link via Email**
   
   $to = $email;
   $subject = "Password Reset Request";
   $message = "Click this link to reset your password: http://example.com/reset.php?token=$token";
   mail($to, $subject, $message);
   

6. **Create the Password Reset Form**
   - Use `reset.php` to handle token validation and password update.

7. **Validate the Token and Update Password**
   
   if (isset($_GET['token'])) {
       $token = $_GET['token'];
       // Check if token exists in database
       // If valid, show form; else, error.
   }
   

8. **Handle New Password Submission**
   
   if ($_SERVER['REQUEST_METHOD'] == 'POST') {
       $password = $_POST['new_password'];
       // Update the user's password in the database
   }
   

**Full Implementation Example:**



<?php
session_start();
include('db_connection.php');

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = $_POST['email'];
    
    // Sanitize the input to prevent SQL injection
    $stmt = $conn->prepare("SELECT id, username FROM users WHERE email = ?");
    $stmt->bind_param("s", $email);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows == 1) {
        // Generate a random token
        $token = bin2hex(random_bytes(32));
        $expires = date('Y-m-d H:i:s', time() + 3600); // Token expires in 1 hour
        
        // Store the token and expiration time in the database
        $stmt = $conn->prepare("INSERT INTO password_resets (user_id, token, expires) VALUES (?, ?, ?)");
        $stmt->bind_param("iss", $row['id'], $token, $expires);
        $stmt->execute();
        
        // Send reset email
        $to = $email;
        $subject = "Password Reset Request";
        $message = "Please click the following link to reset your password: http://yourdomain.com/reset_password.php?token=$token

If you did not request this, please ignore this email.";
        $headers = "From: your_email@example.com" . "\r
";
        
        mail($to, $subject, $message, $headers);
        
        echo "A password reset link has been sent to your email address.";
    } else {
        echo "Email not found in our records.";
    }
}
?>


<?php
session_start();
include('db_connection.php');

// Check if token is provided and valid
if (isset($_GET['token'])) {
    $token = $_GET['token'];
    
    // Retrieve token from database
    $stmt = $conn->prepare("SELECT user_id, expires FROM password_resets WHERE token = ?");
    $stmt->bind_param("s", $token);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows == 1) {
        $row = $result->fetch_assoc();
        
        // Check if token has expired
        if (strtotime($row['expires']) < time()) {
            echo "This reset link has expired. Please request a new one.";
            exit;
        }
        
        $_SESSION['reset_user_id'] = $row['user_id'];
    } else {
        die("Invalid token.");
    }
} else {
    die("No token provided.");
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Reset Password</title>
</head>
<body>
    <h2>Reset Your Password</h2>
    <form action="process_reset.php" method="post">
        <label for="password">New Password:</label><br>
        <input type="password" id="password" name="password" required><br><br>
        <label for="confirm_password">Confirm New Password:</label><br>
        <input type="password" id="confirm_password" name="confirm_password" required><br><br>
        <button type="submit">Reset Password</button>
    </form>
</body>
</html>


<?php
session_start();
include('db_connection.php');

if (!isset($_SESSION['reset_user_id'])) {
    die("You do not have permission to access this page.");
}

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];
    
    // Check if passwords match
    if ($password != $confirm_password) {
        die("Passwords do not match.");
    }
    
    // Hash the password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);
    
    // Update the user's password in the database
    $user_id = $_SESSION['reset_user_id'];
    $stmt = $conn->prepare("UPDATE users SET password = ? WHERE id = ?");
    $stmt->bind_param("si", $hashed_password, $user_id);
    $stmt->execute();
    
    // Invalidate the token
    $stmt = $conn->prepare("DELETE FROM password_resets WHERE user_id = ?");
    $stmt->bind_param("i", $user_id);
    $stmt->execute();
    
    echo "Your password has been reset successfully!";
    session_unset();
}
?>


<?php
// database connection configuration
$host = 'localhost';
$username = 'root';
$password = '';
$database = 'your_database';

// Create connection
$conn = new mysqli($host, $username, $password, $database);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Start session
session_start();

// Error message storage
$error = "";

// If email is submitted
if (isset($_POST['email'])) {

    // Sanitize and validate input
    $email = mysqli_real_escape_string($conn, $_POST['email']);

    // Check if email exists in database
    $check_email_query = "SELECT * FROM users WHERE email='$email'";
    $result = $conn->query($check_email_query);

    if ($result->num_rows == 0) {
        $error = "Email does not exist!";
        header("refresh:3; url=forgot_password.php");
    } else {

        // Generate a unique token
        $token = bin2hex(random_bytes(16));

        // Update the database with new token and expiration time
        $expiration_time = date('Y-m-d H:i:s', strtotime('+1 hour'));
        
        $update_query = "UPDATE users SET reset_token='$token', reset_token_expires='$expiration_time' WHERE email='$email'";
        if ($conn->query($update_query)) {

            // Send email with reset link
            $to = $email;
            $subject = 'Password Reset Request';
            $message = '
                <html>
                    <body>
                        <h2>Password Reset</h2>
                        <p>Please click the following link to reset your password:</p>
                        <a href="http://yourdomain.com/reset_password.php?token=' . $token . '">Reset Password</a>
                        <br><br>
                        This link will expire in 1 hour.
                    </body>
                </html>
            ';
            
            // Set email headers
            $headers = "MIME-Version: 1.0" . "\r
";
            $headers .= "Content-type:text/html;charset=UTF-8" . "\r
";
            $headers .= 'From: <your_email@example.com>' . "\r
";

            if (mail($to, $subject, $message, $headers)) {
                $error = "Password reset email has been sent. Please check your inbox.";
                header("refresh:3; url=forgot_password.php");
            } else {
                $error = "Error sending email. Please try again.";
                header("refresh:3; url=forgot_password.php");
            }
        }
    }
}

// Close database connection
$conn->close();
?>


<?php
session_start();

// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$database = 'your_database';

// Create connection
$conn = new mysqli($host, $username, $password, $database);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Initialize variables
$error = "";
$success = "";

// Check if token is present
if (isset($_GET['token'])) {
    $token = mysqli_real_escape_string($conn, $_GET['token']);

    // Validate the token
    $check_token_query = "
        SELECT * FROM users 
        WHERE reset_token='$token' 
        AND reset_token_expires > NOW()
    ";
    
    $result = $conn->query($check_token_query);

    if ($result->num_rows == 0) {
        $error = "Invalid or expired token!";
        header("refresh:3; url=forgot_password.php");
    } else {

        // If form is submitted
        if ($_SERVER['REQUEST_METHOD'] == 'POST') {
            $new_password = $_POST['password'];
            $confirm_password = $_POST['cpassword'];

            if ($new_password != $confirm_password) {
                $error = "Passwords do not match!";
            } else {

                // Update password
                $update_query = "
                    UPDATE users 
                    SET password=PASSWORD('$new_password'), 
                        reset_token=null,
                        reset_token_expires=null
                    WHERE reset_token='$token'
                ";

                if ($conn->query($update_query)) {
                    $success = "Password has been updated successfully!";
                    header("refresh:3; url=login.php");
                } else {
                    $error = "Error updating password. Please try again.";
                }
            }
        }
    }
} else {
    $error = "No token provided!";
}

// Close database connection
$conn->close();
?>


<?php
// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$database = 'mydb';

// Create connection
$conn = new mysqli($host, $username, $password, $database);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to generate a random password
function generatePassword($length = 8) {
    $chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^&*';
    $password = '';
    for ($i = 0; $i < $length; $i++) {
        $random_char = $chars[rand(0, strlen($chars) - 1)];
        $password .= $random_char;
    }
    return $password;
}

// Function to send email
function sendEmail($to, $subject, $message) {
    $headers = "From: your_email@example.com\r
";
    $headers .= "Reply-To: your_email@example.com\r
";
    $headers .= "X-Mailer: PHP/" . phpversion();
    
    return mail($to, $subject, $message, $headers);
}

// Check if form is submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Sanitize input
    $email = htmlspecialchars(trim($_POST['email']));
    $username = htmlspecialchars(trim($_POST['username']));
    
    // Check if email or username was provided
    if (!empty($email) || !empty($username)) {
        // Prepare the SQL statement
        $sql = "SELECT * FROM users WHERE email = ? OR username = ?";
        $stmt = $conn->prepare($sql);
        
        // Bind parameters
        $stmt->bind_param("ss", $email, $username);
        
        // Execute the query
        $stmt->execute();
        
        // Get the result
        $result = $stmt->get_result();
        
        if ($row = $result->fetch_assoc()) {
            // Generate a new password
            $new_password = generatePassword(12); // 12 character password
            
            // Hash the new password
            $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);
            
            // Update the database with the new password
            $update_sql = "UPDATE users SET password = ? WHERE id = ?";
            $update_stmt = $conn->prepare($update_sql);
            $update_stmt->bind_param("si", $hashed_password, $row['id']);
            $update_stmt->execute();
            
            // Close statement
            $update_stmt->close();
            
            // Send email to the user
            $subject = "Your Password Has Been Reset";
            $message = "Dear " . $row['username'] . ",

Your new password is: " . $new_password . "

Please login and change your password immediately.

Best regards,
The Admin Team";
            
            sendEmail($email, $subject, $message);
            
            // Show success message
            echo "<h2>Password Reset Instructions Sent</h2>";
            echo "<p>Check your email for further instructions.</p>";
        } else {
            // No user found with that email or username
            echo "<h2>Error</h2>";
            echo "<p>Email or username not found in our records. Please try again.</p>";
        }
        
        // Close statement
        $stmt->close();
    } else {
        // Neither email nor username was provided
        echo "<h2>Error</h2>";
        echo "<p>Please enter your email or username to reset your password.</p>";
    }
}

// Close database connection
$conn->close();

// Display the forgot password form if not submitted
if ($_SERVER['REQUEST_METHOD'] != 'POST') {
?>
<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <h1>Forgot Password</h1>
    <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
        <p>Please enter your email or username to reset your password.</p>
        <input type="email" name="email" placeholder="Email Address">
        <br><br>
        <input type="text" name="username" placeholder="Username">
        <br><br>
        <input type="submit" value="Reset Password">
    </form>
</body>
</html>
<?php
}
?>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$database = 'your_database';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $database);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to send reset email
function sendResetEmail($email, $resetLink) {
    $to = $email;
    $subject = "Password Reset Request";
    $message = "
        <html>
        <body>
            <h2>Password Reset</h2>
            <p>We received a password reset request. Click the link below to reset your password:</p>
            <a href='".$resetLink."'>".$resetLink."</a>
            <br><br>
            <p>If you did not request this password reset, please ignore this email.</p>
        </body>
        </html>";
    $headers = "MIME-Version: 1.0" . "\r
";
    $headers .= "Content-type:text/html;charset=UTF-8" . "\r
";
    $headers .= "From: noreply@yourdomain.com" . "\r
";

    if (mail($to, $subject, $message, $headers)) {
        return true;
    } else {
        return false;
    }
}

// Function to generate reset token
function generateToken() {
    return bin2hex(random_bytes(16));
}

// Reset password form handler
if ($_SERVER["REQUEST_METHOD"] == "POST" && isset($_POST['reset'])) {
    $email = $_POST['email'];
    
    // Check if email exists in database
    $sql = "SELECT * FROM users WHERE email = ?";
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, "s", $email);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);
    
    if (mysqli_num_rows($result) == 1) {
        $user = mysqli_fetch_assoc($result);
        
        // Generate reset token and expiration time
        $resetToken = generateToken();
        $expirationTime = date('Y-m-d H:i:s', strtotime('+1 hour'));
        
        // Update the database with reset token and expiration time
        $sqlUpdate = "UPDATE users SET reset_token=?, reset_expiration=? WHERE email=?";
        $stmtUpdate = mysqli_prepare($conn, $sqlUpdate);
        mysqli_stmt_bind_param($stmtUpdate, "sss", $resetToken, $expirationTime, $email);
        mysqli_stmt_execute($stmtUpdate);
        
        // Create the reset link
        $resetLink = "http://yourdomain.com/reset-password.php?token=" . $resetToken . "&id=" . $user['id'];
        
        // Send the reset email
        if (sendResetEmail($email, $resetLink)) {
            echo "Password reset email has been sent!";
        } else {
            echo "Error sending email.";
        }
    } else {
        echo "Email not found in database.";
    }
}

// Reset password page handler
if ($_SERVER["REQUEST_METHOD"] == "POST" && isset($_POST['reset_password'])) {
    $token = $_POST['token'];
    $newPassword = $_POST['new_password'];
    
    // Check if token is valid and not expired
    $sqlCheckToken = "SELECT * FROM users WHERE reset_token=? AND reset_expiration > NOW()";
    $stmtCheckToken = mysqli_prepare($conn, $sqlCheckToken);
    mysqli_stmt_bind_param($stmtCheckToken, "s", $token);
    mysqli_stmt_execute($stmtCheckToken);
    $resultToken = mysqli_stmt_get_result($stmtCheckToken);
    
    if (mysqli_num_rows($resultToken) == 1) {
        $user = mysqli_fetch_assoc($resultToken);
        
        // Hash the new password
        $hashedPassword = password_hash($newPassword, PASSWORD_DEFAULT);
        
        // Update the password in database
        $sqlUpdatePassword = "UPDATE users SET password=?, reset_token=NULL, reset_expiration=NULL WHERE id=?";
        $stmtUpdatePassword = mysqli_prepare($conn, $sqlUpdatePassword);
        mysqli_stmt_bind_param($stmtUpdatePassword, "si", $hashedPassword, $user['id']);
        mysqli_stmt_execute($stmtUpdatePassword);
        
        echo "Password has been reset successfully!";
    } else {
        echo "Invalid or expired token.";
    }
}

// Close database connection
mysqli_close($conn);
?>


<?php
// Database connection
$host = 'localhost';
$username = 'username';
$password = 'password';
$dbname = 'database_name';

$conn = mysqli_connect($host, $username, $password, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Generate random token
function generateToken() {
    return bin2hex(random_bytes(16));
}

// Check if email exists in database
function checkEmailExists($email, $conn) {
    $sql = "SELECT id FROM users WHERE email = ?";
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, "s", $email);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);
    
    return mysqli_num_rows($result) > 0;
}

// Insert reset token into database
function insertResetToken($email, $token, $conn) {
    $sql = "INSERT INTO password_resets (email, token, created_at) VALUES (?, ?, NOW())";
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, "ss", $email, $token);
    
    return mysqli_stmt_execute($stmt);
}

// Send reset email
function sendResetEmail($email, $resetLink) {
    $to = $email;
    $subject = "Password Reset Request";
    $message = "Click the following link to reset your password: " . $resetLink;
    $headers = "From: webmaster@example.com" . "\r
";
    
    return mail($headers, $message);
}

// Reset password function
function resetPassword($token, $newPassword, $conn) {
    $sql = "SELECT id, email FROM password_resets WHERE token = ? AND created_at > NOW() - INTERVAL 1 HOUR";
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, "s", $token);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);
    
    if (mysqli_num_rows($result) == 1) {
        $row = mysqli_fetch_assoc($result);
        
        // Update user's password
        $hash = password_hash($newPassword, PASSWORD_DEFAULT);
        $updateSql = "UPDATE users SET password = ? WHERE email = ?";
        $updateStmt = mysqli_prepare($conn, $updateSql);
        mysqli_stmt_bind_param($updateStmt, "ss", $hash, $row['email']);
        mysqli_stmt_execute($updateStmt);
        
        // Clear the reset token
        $deleteSql = "DELETE FROM password_resets WHERE id = ?";
        $deleteStmt = mysqli_prepare($conn, $deleteSql);
        mysqli_stmt_bind_param($deleteStmt, "i", $row['id']);
        mysqli_stmt_execute($deleteStmt);
        
        return true;
    }
    
    return false;
}

// Reset password form processing
if ($_SERVER["REQUEST_METHOD"] == "POST" && isset($_GET['action']) && $_GET['action'] == 'reset') {
    $token = $_GET['token'];
    $newPassword = $_POST['password'];
    if (resetPassword($token, $newPassword, $conn)) {
        echo "Password reset successful!";
    } else {
        echo "Invalid token or password reset failed.";
    }
}

// Password reset request processing
if ($_SERVER["REQUEST_METHOD"] == "POST" && !isset($_GET['action'])) {
    $email = $_POST['email'];
    
    if (checkEmailExists($email, $conn)) {
        $token = generateToken();
        
        // Store token in database
        if (insertResetToken($email, $token, $conn)) {
            // Generate reset link
            $resetLink = "http://".$_SERVER['HTTP_HOST']."/forgot-password.php?action=reset&token=".$token;
            
            // Send email
            sendResetEmail($email, $resetLink);
            
            echo "Password reset instructions have been sent to your email address.";
        } else {
            echo "Error storing reset token.";
        }
    } else {
        echo "Email not found in our records.";
    }
}
?>


<?php
session_start();

// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$db_name = 'my_database';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get email/username from form
    $email = $_POST['email'];

    // Prepare and execute query to check if user exists
    $sql = "SELECT * FROM users WHERE email='$email' OR username='$email'";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) == 1) {
        // Generate temporary password
        $temp_password = substr(md5(time()), 0, 8);
        
        // Update database with temporary password
        $update_sql = "UPDATE users SET temp_password='$temp_password' WHERE email='$email'";
        mysqli_query($conn, $update_sql);

        // Send email to user with temporary password
        $to = $email;
        $subject = "Temporary Password for Your Account";
        $message = "Dear User,

Your temporary password is: " . $temp_password . "
Please use this password to log in and reset your password.

Best regards, 
The Support Team";
        
        // Set headers
        $headers = "From: support@yourdomain.com\r
".
                   "Reply-To: support@yourdomain.com\r
".
                   "X-Mailer: PHP/" . phpversion();
        
        if (mail($to, $subject, $message, $headers)) {
            // Redirect to login page with success message
            header("Location: login.php?msg=Password reset instructions have been sent to your email.");
        } else {
            // If email sending failed
            die("Failed to send password reset instructions.");
        }
    } else {
        // User does not exist
        die("User does not exist. Please check your email/username and try again.");
    }
}

mysqli_close($conn);
?>


<?php
session_start();

// Check if there is a message from forgot_password.php
if (isset($_GET['msg'])) {
    echo $_GET['msg'];
}

// If user is already logged in, redirect to dashboard or home page
if (isset($_SESSION['user_id'])) {
    header("Location: dashboard.php");
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login</title>
</head>
<body>
    <?php if (isset($_GET['msg'])) { ?>
        <div style="color: green;"><?php echo $_GET['msg']; ?></div><br>
    <?php } ?>

    <h2>Login</h2>
    <form action="login.php" method="post">
        <label for="username">Username:</label><br>
        <input type="text" id="username" name="username" required><br><br>
        
        <label for="password">Password:</label><br>
        <input type="password" id="password" name="password" required><br><br>
        
        <input type="submit" value="Login">
    </form>

    <p>Don't have an account? <a href="register.php">Register here</a></p>
</body>
</html>


<?php
session_start();

// Check if user is logged in with temporary password
if (isset($_SESSION['temp_password'])) {
    // If not, redirect to login page
    header("Location: login.php");
}

// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$db_name = 'my_database';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get new password from form
    $new_password = $_POST['new_password'];
    
    // Update database with new password
    $update_sql = "UPDATE users SET password='" . md5($new_password) . "', temp_password='' WHERE user_id=" . $_SESSION['user_id'];
    mysqli_query($conn, $update_sql);
    
    // Unset temporary password session variable
    unset($_SESSION['temp_password']);
    
    // Redirect to login page with success message
    header("Location: login.php?msg=Your password has been successfully updated.");
}

mysqli_close($conn);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <h2>Reset Your Password</h2>
    <form action="reset_password.php" method="post">
        <label for="new_password">New Password:</label><br>
        <input type="password" id="new_password" name="new_password" required><br><br>
        
        <input type="submit" value="Reset Password">
    </form>
</body>
</html>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$database = 'my_database';

// Connect to database
$conn = new mysqli($host, $username, $password, $database);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Include header file
include('header.php');

if (isset($_POST['reset_password'])) {

    // Get user input
    $email = $_POST['email'];
    
    // Validate email format
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        echo "Invalid email format";
        exit();
    }

    // Check if user exists in database
    $sql = "SELECT id, username FROM users WHERE email = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("s", $email);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows === 0) {
        echo "No user found with this email address";
        exit();
    }

    // Generate reset token
    $token = bin2hex(random_bytes(32));
    $expires = date('Y-m-d H:i:s', time() + 3600); // Token expires in 1 hour

    // Insert token into database
    $sql = "INSERT INTO password_reset (user_id, token, expires) 
            VALUES (?, ?, ?)";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("iss", $result->fetch_assoc()['id'], $token, $expires);
    $stmt->execute();

    // Send email to user
    $to = $email;
    $subject = "Password Reset Request";
    $message = "
        <html>
            <body>
                <h2>Password Reset</h2>
                <p>Please click the following link to reset your password:</p>
                <a href='http://localhost/reset_password.php?token=$token'>Reset Password</a>
                <br><br>
                <small>This link will expire in 1 hour.</small>
            </body>
        </html>
    ";
    $headers = "MIME-Version: 1.0" . "\r
";
    $headers .= "Content-type: text/html; charset=UTF-8" . "\r
";
    $headers .= "From: noreply@yourdomain.com" . "\r
";

    if (mail($to, $subject, $message, $headers)) {
        echo "Password reset link has been sent to your email.";
    } else {
        echo "Error sending email. Please try again later.";
    }

} elseif (isset($_GET['token'])) {

    // Validate token and display reset password form
    $token = $_GET['token'];

    // Check if token exists in database
    $sql = "SELECT * FROM password_reset 
            WHERE token = ? AND expires > NOW()";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("s", $token);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows === 0) {
        echo "Invalid or expired token. Please request a new password reset.";
        exit();
    }

    // If token is valid, display password reset form
    include('reset_password_form.php');

}

// Close database connection
$conn->close();

include('footer.php');
?>


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Forgot Password</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 20px;
            background-color: #f5f5f5;
        }
        .container {
            max-width: 400px;
            margin: 0 auto;
            background-color: white;
            padding: 30px;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }
        .form-group {
            margin-bottom: 20px;
        }
        input[type="text"] {
            width: 100%;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-sizing: border-box;
        }
        button {
            background-color: #4CAF50;
            color: white;
            padding: 12px 20px;
            margin: 8px 0;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            width: 100%;
        }
        button:hover {
            background-color: #45a049;
        }
    </style>
</head>
<body>
    <div class="container">
        <?php if (!isset($_GET['token'])) { ?>
            <h2>Forgot Password</h2>
            <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
                <div class="form-group">
                    <input type="text" name="email" placeholder="Enter your email or username" required>
                </div>
                <button type="submit" name="reset_password">Reset Password</button>
            </form>
        <?php } else { ?>
            <!-- Reset password form -->
            <h2>Reset Password</h2>
            <form action="<?php echo $_SERVER['PHP_SELF']; ?>?token=<?php echo $token; ?>" method="post">
                <div class="form-group">
                    <input type="password" name="new_password" placeholder="Enter new password" required>
                </div>
                <div class="form-group">
                    <input type="password" name="confirm_password" placeholder="Confirm new password" required>
                </div>
                <button type="submit">Change Password</button>
            </form>
        <?php } ?>
    </div>
</body>
</html>


<?php
// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = mysqli_real_escape_string($conn, trim($_POST['email']));

    // Validate email format
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        die("Invalid email format");
    }

    // Check if email exists in database
    $sql = "SELECT id FROM users WHERE email='$email'";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) == 0) {
        die("Email not found in our records");
    }

    // Generate a random token for password reset
    $token = bin2hex(openssl_random_pseudo_bytes(32));

    // Insert token into database
    $sql = "UPDATE users SET reset_token='$token' WHERE email='$email'";
    mysqli_query($conn, $sql);

    // Send email with reset link
    $to = $email;
    $subject = "Password Reset Request";
    $message = "Please click the following link to reset your password:

http://example.com/reset_password.php?token=$token&user_id=" . mysqli_insert_id($conn) . "

If you did not request this, please ignore this email.";
    $headers = "From: noreply@example.com";

    if (mail($to, $subject, $message, $headers)) {
        echo "Reset password link has been sent to your email address";
    } else {
        die("Failed to send reset email");
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <h2>Forgot Password</h2>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <label>Email:</label><br>
        <input type="email" name="email" required><br><br>
        <input type="submit" value="Submit">
    </form>
</body>
</html>


<?php
session_start();

// Get token and user ID from URL
if (!isset($_GET['token']) || !isset($_GET['user_id'])) {
    die("Invalid request");
}

$token = $_GET['token'];
$user_id = $_GET['user_id'];

// Verify token and user_id in database
$sql = "SELECT * FROM users WHERE id='$user_id' AND reset_token='$token'";
$result = mysqli_query($conn, $sql);

if (mysqli_num_rows($result) != 1) {
    die("Invalid reset link");
}

// If form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $password = trim($_POST['password']);
    $confirm_password = trim($_POST['confirm_password']);

    // Validate password
    if ($password != $confirm_password) {
        die("Passwords do not match");
    }

    if (strlen($password) < 6) {
        die("Password must be at least 6 characters long");
    }

    // Hash the new password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

    // Update database with new password and clear reset token
    $sql = "UPDATE users SET password='$hashed_password', reset_token='' WHERE id='$user_id'";
    mysqli_query($conn, $sql);

    // Redirect to login page
    header("Location: login.php?message=Password has been successfully updated");
    exit();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <h2>Reset Password</h2>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>?token=<?php echo $token; ?>&user_id=<?php echo $user_id; ?>" method="post">
        <label>New Password:</label><br>
        <input type="password" name="password" required><br><br>
        <label>Confirm Password:</label><br>
        <input type="password" name="confirm_password" required><br><br>
        <input type="submit" value="Reset Password">
    </form>
</body>
</html>


<?php
// Database connection details
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

try {
    // Create database connection
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        // Get email from form
        $email = $_POST['email'];

        // Validate email
        if (empty($email)) {
            die("Email is required");
        }

        // Check if email exists in database
        $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
        $stmt->execute([$email]);
        $row = $stmt->fetch();

        if (!$row) {
            die("No account found with this email address");
        }

        // Generate a unique reset token and its expiration time
        $resetToken = md5(uniqid($email, true));
        $tokenExpireTime = date('Y-m-d H:i:s', strtotime('+1 hour'));

        // Update database with the reset token and expire time
        $stmt = $conn->prepare("UPDATE users SET reset_token = ?, reset_expires = ? WHERE email = ?");
        $stmt->execute([$resetToken, $tokenExpireTime, $email]);

        // Send password reset link to user's email
        $to = $email;
        $subject = "Password Reset Request";
        $message = "
            <html>
                <head></head>
                <body>
                    <h2>Password Reset</h2>
                    <p>Please click the following link to reset your password:</p>
                    <a href='http://yourwebsite.com/reset-password.php?token=$resetToken'>Reset Password</a><br>
                    <small>If you did not request a password reset, please ignore this email.</small>
                </body>
            </html>
        ";
        
        // Set headers for HTML email
        $headers = "MIME-Version: 1.0" . "\r
";
        $headers .= "Content-type:text/html;charset=UTF-8" . "\r
";
        $headers .= "From: <your_email@example.com>" . "\r
";

        mail($to, $subject, $message, $headers);

        // Success message
        echo "A password reset link has been sent to your email address.";
    }
} catch (PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}
?>

<!-- HTML Form -->
<form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
    <label for="email">Email:</label>
    <input type="text" name="email" id="email">
    <button type="submit">Send Reset Link</button>
</form>


<?php
// Include configuration file
include_once 'config.php';

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = $_POST['email'];
    
    // Check if email exists in database
    $stmt = $conn->prepare("SELECT id FROM users WHERE email=?");
    $stmt->bind_param("s", $email);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        // Generate a unique token
        $token = bin2hex(random_bytes(32)); // Secure token generation

        // Expiry time: 1 hour from now
        $expires = date('Y-m-d H:i:s', strtotime('+1 hour'));

        // Update the database with the new token and expiry time
        $updateStmt = $conn->prepare("UPDATE users SET reset_token=?, reset_expiry=? WHERE email=?");
        $updateStmt->bind_param("sss", $token, $expires, $email);
        $updateStmt->execute();

        // Send email with reset link
        $to = $email;
        $subject = "Password Reset Request";
        
        // Email content
        $message = "
            <html>
            <head></head>
            <body>
                <h2>Password Reset</h2>
                <p>Please click the following link to reset your password:</p>
                <a href='http://your-website.com/reset-password.php?token=$token'>Reset Password</a>
                <br><br>
                <p>If you did not request this password reset, please ignore this email.</p>
            </body>
            </html>
        ";
        
        // Set headers for HTML email
        $headers = "MIME-Version: 1.0" . "\r
";
        $headers .= "Content-type:text/html;charset=UTF-8" . "\r
";
        $headers .= "From: <your-email@example.com>" . "\r
";

        // Send the email
        if (mail($to, $subject, $message, $headers)) {
            echo "<h2>Email Sent!</h2>";
            echo "<p>Please check your email to reset your password.</p>";
        } else {
            echo "Error sending email!";
        }
    } else {
        echo "Email not found in our records!";
    }
}
?>

<!-- HTML Form -->
<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <h2>Forgot Password</h2>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <input type="email" name="email" placeholder="Enter your email" required><br><br>
        <input type="submit" value="Reset Password">
    </form>
</body>
</html>


<?php
include_once 'config.php';

// Check if token is provided and valid
if (isset($_GET['token'])) {
    $token = $_GET['token'];
    
    // Check token in database
    $stmt = $conn->prepare("SELECT id, email FROM users WHERE reset_token=? AND reset_expiry > NOW()");
    $stmt->bind_param("s", $token);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows == 1) {
        // Token is valid and not expired
        $user = $result->fetch_assoc();
        
        if ($_SERVER["REQUEST_METHOD"] == "POST") {
            $newPassword = $_POST['password'];
            
            // Hash the new password
            $hashedPassword = password_hash($newPassword, PASSWORD_DEFAULT);
            
            // Update the user's password
            $updateStmt = $conn->prepare("UPDATE users SET password=? WHERE id=?");
            $updateStmt->bind_param("si", $hashedPassword, $user['id']);
            $updateStmt->execute();

            // Invalidate the reset token
            $invalidateStmt = $conn->prepare("UPDATE users SET reset_token=null, reset_expiry=null WHERE id=?");
            $invalidateStmt->bind_param("i", $user['id']);
            $invalidateStmt->execute();

            echo "<h2>Password Updated!</h2>";
            echo "<p>Your password has been successfully updated. Please login with your new password.</p>";
        } else {
            // Display the reset form
?>
<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <h2>Reset Password</h2>
    <form action="<?php echo $_SERVER['PHP_SELF'] . '?token=' . $token; ?>" method="post">
        New Password: <input type="password" name="password" required><br><br>
        Confirm Password: <input type="password" name="confirm_password" required><br><br>
        <input type="submit" value="Reset Password">
    </form>
</body>
</html>
<?php
        }
    } else {
        // Invalid or expired token
        echo "<h2>Invalid Reset Link!</h2>";
        echo "<p>The reset link is invalid or has expired. Please request a new password reset.</p>";
    }
} else {
    // No token provided
    echo "<h2>Error!</h2>";
    echo "<p>No reset link provided!</p>";
}
?>


<?php
include('db_connection.php');

if (isset($_POST['email'])) {
    $email = $_POST['email'];

    // Check if email exists
    $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
    $stmt->bind_param("s", $email);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        // Generate token
        $token = bin2hex(random_bytes(16));
        $user_id = $result->fetch_assoc()['id'];
        
        // Store token and expiration time (e.g., 1 hour)
        $expiration_time = time() + 3600;
        $stmt_insert = $conn->prepare("INSERT INTO password_reset_tokens (user_id, token, expires_at) VALUES (?, ?, ?)");
        $stmt_insert->bind_param("iss", $user_id, $token, $expiration_time);
        $stmt_insert->execute();

        // Send email
        $to = $email;
        $subject = "Password Reset Request";
        $message = "Please click the link to reset your password: http://example.com/reset?token=$token";
        $headers = "From: no-reply@example.com";

        if (mail($to, $subject, $message, $headers)) {
            echo "An email has been sent with instructions.";
        } else {
            echo "Email sending failed. Please try again later.";
        }
    } else {
        echo "This email is not registered.";
    }
}


<?php
include('db_connection.php');

if (isset($_GET['token'])) {
    $token = $_GET['token'];
    
    // Check token validity
    $stmt = $conn->prepare("SELECT * FROM password_reset_tokens WHERE token = ? AND expires_at > ?");
    $stmt->bind_param("si", $token, time());
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows == 1) {
        // Token is valid
        session_start();
        $_SESSION['reset_token'] = $token;
        header("Location: reset-password-form.php");
        exit();
    } else {
        echo "Invalid or expired token. Please request a new password reset.";
        exit();
    }
} else {
    echo "No token provided.";
}


<?php
session_start();

if (!isset($_SESSION['reset_token'])) {
    die("Invalid access.");
}

include('db_connection.php');

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $token = $_SESSION['reset_token'];
    
    // Validate token again
    $stmt = $conn->prepare("SELECT user_id FROM password_reset_tokens WHERE token = ?");
    $stmt->bind_param("s", $token);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows == 1) {
        $new_password = $_POST['password'];
        $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);
        
        // Update user's password
        $user_id = $result->fetch_assoc()['user_id'];
        $stmt_update = $conn->prepare("UPDATE users SET password = ? WHERE id = ?");
        $stmt_update->bind_param("si", $hashed_password, $user_id);
        $stmt_update->execute();

        // Delete the token
        $stmt_delete = $conn->prepare("DELETE FROM password_reset_tokens WHERE token = ?");
        $stmt_delete->bind_param("s", $token);
        $stmt_delete->execute();

        echo "Password updated successfully. You can now log in.";
    } else {
        echo "Invalid token. Please request a new reset link.";
    }
}
?>

<!-- Reset Password Form -->
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Reset Password</title>
</head>
<body>
    <h2>Set New Password</h2>
    <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
        <input type="password" name="password" placeholder="New password" required><br><br>
        <button type="submit">Reset Password</button>
    </form>
</body>
</html>


<?php
session_start();
require 'db_connection.php'; // Include your database connection file

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = $_POST['email'];
    
    if (empty($email)) {
        die("Email is required!");
    }
    
    $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
    $stmt->bind_param("s", $email);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows === 0) {
        die("Email not registered!");
    }
    
    // Generate reset token
    $token = bin2hex(random_bytes(16));
    $expires = strtotime("+1 hour");
    
    // Store token in database
    $stmt = $conn->prepare("UPDATE users SET reset_token = ?, reset_expires = ? WHERE email = ?");
    $stmt->bind_param("sis", $token, $expires, $email);
    $stmt->execute();
    
    // Send email with reset link
    $to = $email;
    $subject = "Password Reset Request";
    $message = "
        <html>
            <head></head>
            <body>
                <p>You requested a password reset. Click the link below to reset your password:</p>
                <a href='http://yourdomain.com/reset_password.php?token=$token'>Reset Password</a><br><br>
                <small>This link will expire in 1 hour.</small>
            </body>
        </html>
    ";
    
    $headers = "MIME-Version: 1.0" . "\r
";
    $headers .= "Content-type:text/html;charset=UTF-8" . "\r
";
    $headers .= "From: yourname@yourdomain.com" . "\r
";
    
    mail($to, $subject, $message, $headers);
    
    echo "A password reset link has been sent to your email!";
}
?>

<form method="post">
    <input type="email" name="email" placeholder="Enter your email" required>
    <button type="submit">Reset Password</button>
</form>


<?php
session_start();
require 'db_connection.php'; // Include your database connection file

if (!isset($_GET['token'])) {
    die("No token provided!");
}

$token = $_GET['token'];
$stmt = $conn->prepare("SELECT id FROM users WHERE reset_token = ? AND reset_expires > ?");
$stmt->bind_param("si", $token, time());
$stmt->execute();
$result = $stmt->get_result();

if ($result->num_rows === 0) {
    die("Invalid or expired token!");
}

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $password = $_POST['new_password'];
    $confirm = $_POST['confirm_password'];
    
    if (empty($password) || empty($confirm)) {
        die("Please fill in all fields!");
    }
    
    if ($password !== $confirm) {
        die("Passwords do not match!");
    }
    
    // Validate password length
    if (strlen($password) < 8) {
        die("Password must be at least 8 characters long!");
    }
    
    // Hash the password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);
    
    // Update the password in database
    $stmt = $conn->prepare("UPDATE users SET password = ?, reset_token = NULL WHERE reset_token = ?");
    $stmt->bind_param("ss", $hashed_password, $token);
    $stmt->execute();
    
    // Redirect to login page
    header("Location: login.php?success=1");
    exit();
}

?>

<form method="post">
    <input type="password" name="new_password" placeholder="Enter new password" required>
    <input type="password" name="confirm_password" placeholder="Confirm new password" required>
    <button type="submit">Reset Password</button>
</form>


<?php
// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$database = 'my_database';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $database);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Error messages
$error = '';

// Check if form is submitted
if (isset($_POST['reset'])) {
    // Validate and sanitize email input
    if (empty($_POST['email'])) {
        $error = "Email address is required!";
    } else {
        $email = mysqli_real_escape_string($conn, $_POST['email']);
        
        // Check if email exists in database
        $sql = "SELECT * FROM users WHERE email='$email'";
        $result = mysqli_query($conn, $sql);
        
        if (mysqli_num_rows($result) == 0) {
            $error = "Email address not found!";
        } else {
            // Generate a random string token
            $token = md5(uniqid());
            
            // Update database with reset token and expiration time
            $expires = date('Y-m-d H:i:s', strtotime('+1 hour'));
            $sql = "UPDATE users SET password_reset_token='$token', 
                                  password_reset_expires='$expires'
                                  WHERE email='$email'";
            mysqli_query($conn, $sql);
            
            // Send reset link to user
            $reset_link = "http://$_SERVER[HTTP_HOST]/reset_password.php?token=$token";
            $to = $email;
            $subject = 'Password Reset Request';
            $message = "Please click the following link to reset your password:
$reset_link

If you didn't request this password reset, please ignore this email.";
            $headers = 'From: webmaster@example.com' . "\r
" .
                       'Reply-To: webmaster@example.com' . "\r
" .
                       'X-Mailer: PHP/' . phpversion();
            
            if (mail($to, $subject, $message, $headers)) {
                header("Location: forgot_password_success.php");
                exit();
            } else {
                $error = "Failed to send reset email!";
            }
        }
    }
}

// Close database connection
mysqli_close($conn);
?>


<?php
// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$database = 'my_database';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $database);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Initialize variables
$error = '';
$token_valid = false;
$new_password = '';

// Check if token is valid and not expired
if (isset($_GET['token'])) {
    $token = mysqli_real_escape_string($conn, $_GET['token']);
    
    // Get user details from database
    $sql = "SELECT * FROM users 
            WHERE password_reset_token='$token'
            AND password_reset_expires > NOW()";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) == 1) {
        $token_valid = true;
        
        // Check if form is submitted
        if (isset($_POST['submit'])) {
            $new_password = password_hash($_POST['new_password'], PASSWORD_DEFAULT);
            
            // Update database with new password and clear token
            $sql = "UPDATE users 
                    SET password='$new_password',
                        password_reset_token='',
                        password_reset_expires=''
                    WHERE password_reset_token='$token'";
            mysqli_query($conn, $sql);
            
            header("Location: reset_password_success.php");
            exit();
        }
    } else {
        $error = "Invalid or expired token!";
    }
}

// Close database connection
mysqli_close($conn);

?>
<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <?php if ($token_valid): ?>
        <h2>Reset Your Password</h2>
        <?php if (!empty($error)): ?>
            <p style="color: red;"><?php echo $error; ?></p>
        <?php endif; ?>
        <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
            <input type="password" name="new_password" placeholder="Enter new password">
            <button type="submit" name="submit">Reset Password</button>
        </form>
    <?php else: ?>
        <?php if (!empty($error)): ?>
            <p style="color: red;"><?php echo $error; ?></p>
        <?php endif; ?>
        <h2>Password Reset Expired</h2>
        <a href="forgot_password.php">Request a new password reset</a>
    <?php endif; ?>
</body>
</html>


<?php
// Database connection settings
$host = 'localhost';
$username = 'root';
$password = '';
$db_name = 'your_database';

try {
    $conn = new PDO("mysql:host=$host;dbname=$db_name", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

// Function to handle forgot password
function forgotPassword($email, $conn) {
    // Check if user exists
    try {
        $stmt = $conn->prepare("SELECT id FROM users WHERE email = :email OR username = :email");
        $stmt->execute(['email' => $email]);
        
        if ($stmt->rowCount() == 0) {
            return "User not found!";
        }
        
        // Generate reset token
        $resetToken = bin2hex(random_bytes(16));
        $expires = time() + (1 * 60 * 60); // Token expires in 1 hour
        
        // Update database with reset token and expiry time
        $updateStmt = $conn->prepare("UPDATE users SET reset_token = :token, reset_expiry = :expires WHERE email = :email");
        $updateStmt->execute([
            'token' => $resetToken,
            'expires' => $expires,
            'email' => $email
        ]);
        
        // Send reset email
        $to = $email;
        $subject = "Password Reset Request";
        $message = "
            <html>
                <body>
                    <h2>Password Reset</h2>
                    <p>Please click the following link to reset your password:</p>
                    <a href='http://yourwebsite.com/reset-password.php?token=$resetToken'>Reset Password</a>
                    <p>If you did not request this password reset, please ignore this email.</p>
                </body>
            </html>";
        $headers = "MIME-Version: 1.0\r
";
        $headers .= "Content-type: text/html; charset=UTF-8\r
";
        $headers .= "From: Your Website <no-reply@yourwebsite.com>\r
";
        
        if (mail($to, $subject, $message, $headers)) {
            return "Password reset email has been sent to your email address.";
        } else {
            return "Failed to send password reset email.";
        }
        
    } catch (PDOException $e) {
        return "Error: " . $e->getMessage();
    }
}

// Example usage:
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $email = $_POST['email'];
    echo forgotPassword($email, $conn);
}
?>


<?php
// Database connection settings (same as above)
try {
    $conn = new PDO("mysql:host=$host;dbname=$db_name", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

if (isset($_GET['token'])) {
    $token = $_GET['token'];
    
    try {
        // Check if token exists and is valid
        $stmt = $conn->prepare("SELECT id, reset_expiry FROM users WHERE reset_token = :token");
        $stmt->execute(['token' => $token]);
        
        if ($stmt->rowCount() == 0) {
            die("Invalid or expired reset link.");
        }
        
        $row = $stmt->fetch(PDO::FETCH_ASSOC);
        $expires = $row['reset_expiry'];
        
        // Check if token has expired
        if (time() > $expires) {
            die("Reset link has expired. Please request a new password reset.");
        }
        
        // Show password reset form
        ?>
        <form action="" method="POST">
            <input type="hidden" name="token" value="<?php echo $token; ?>">
            New Password: <input type="password" name="new_password"><br>
            Confirm Password: <input type="password" name="confirm_password"><br>
            <input type="submit" value="Reset Password">
        </form>
        
        <?php
        if ($_SERVER['REQUEST_METHOD'] == 'POST') {
            $newPassword = $_POST['new_password'];
            $confirmPassword = $_POST['confirm_password'];
            
            if ($newPassword != $confirmPassword) {
                die("Passwords do not match.");
            }
            
            // Securely hash the new password
            $hashedPassword = password_hash($newPassword, PASSWORD_DEFAULT);
            
            // Update password in database
            $updateStmt = $conn->prepare("UPDATE users SET password = :password, reset_token = null WHERE reset_token = :token");
            $updateStmt->execute([
                'password' => $hashedPassword,
                'token' => $token
            ]);
            
            echo "Password has been successfully updated.";
        }
        
    } catch (PDOException $e) {
        die("Error: " . $e->getMessage());
    }
}
?>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'mydatabase';

// Connect to database
$conn = new mysqli($host, $username, $password, $dbname);
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get form data
    $email = $_POST['email'];
    
    // Validate input
    if (empty($email)) {
        echo "Email is required";
        exit;
    }
    
    // Check email format
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        echo "Invalid email format";
        exit;
    }

    // Check if email exists in database
    $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
    $stmt->bind_param("s", $email);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows == 0) {
        echo "No user found with this email address";
        exit;
    }

    // Generate reset token
    $token = bin2hex(random_bytes(16));
    $expires = date('Y-m-d H:i:s', strtotime('+1 hour'));

    // Update the database with the new token and expiration time
    $updateStmt = $conn->prepare("UPDATE users SET reset_token = ?, reset_expires = ? WHERE email = ?");
    $updateStmt->bind_param("sss", $token, $expires, $email);
    if (!$updateStmt->execute()) {
        echo "Error updating record: " . $updateStmt->error;
        exit;
    }

    // Send email with reset link
    $to = $email;
    $subject = "Password Reset Request";
    
    $message = "
    <html>
    <body>
        <h2>Password Reset</h2>
        <p>Please click the following link to reset your password:</p>
        <a href='http://localhost/reset-password.php?token=$token'>Reset Password</a>
        <br><br>
        <p>If you did not request this password reset, please ignore this email.</p>
    </body>
    </html>
    ";

    $headers = "MIME-Version: 1.0" . "\r
";
    $headers .= "Content-type:text/html;charset=UTF-8" . "\r
";
    $headers .= "From: webmaster@example.com" . "\r
";

    if (mail($to, $subject, $message, $headers)) {
        echo "An email has been sent to your address. Please check your inbox.";
    } else {
        echo "Error sending email!";
    }

    // Close database connections
    $stmt->close();
    $updateStmt->close();
    $conn->close();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <h2>Forgot Password</h2>
    <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
        <input type="email" name="email" placeholder="Enter your email address" required><br><br>
        <button type="submit">Reset Password</button>
    </form>
</body>
</html>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'mydatabase';

$conn = new mysqli($host, $username, $password, $dbname);
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

if (isset($_GET['token'])) {
    $token = $_GET['token'];

    // Check if token exists in database and is not expired
    $stmt = $conn->prepare("SELECT id, reset_token, reset_expires FROM users WHERE reset_token = ?");
    $stmt->bind_param("s", $token);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows == 0) {
        echo "Invalid or expired token";
        exit;
    }

    $row = $result->fetch_assoc();
    $expires = $row['reset_expires'];

    // Check if token has expired
    if (strtotime($expires) < time()) {
        echo "Token has expired. Please request a new password reset.";
        exit;
    }
?>

<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <h2>Reset Password</h2>
    <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
        <input type="password" name="new_password" placeholder="Enter new password" required><br><br>
        <button type="submit">Change Password</button>
    </form>
<?php
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        $newPassword = $_POST['new_password'];

        // Validate password (minimum 8 characters, at least one uppercase and number)
        if (!preg_match("/^(?=.*\d)(?=.*[A-Z])[a-zA-Z\d]{8,}$/", $newPassword)) {
            echo "Invalid password format. Password must be at least 8 characters long and contain at least one uppercase letter and one number.";
            exit;
        }

        // Update the user's password
        $updateStmt = $conn->prepare("UPDATE users SET password = ?, reset_token = NULL, reset_expires = NULL WHERE reset_token = ?");
        $hashedPassword = password_hash($newPassword, PASSWORD_DEFAULT);
        $updateStmt->bind_param("ss", $hashedPassword, $token);

        if ($updateStmt->execute()) {
            echo "Password has been successfully updated!";
        } else {
            echo "Error updating password: " . $updateStmt->error;
        }

        // Close connections
        $updateStmt->close();
    }
} else {
    echo "No token provided.";
}

// Close database connection
$stmt->close();
$conn->close();
?>
</body>
</html>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'mydatabase';

// Create connection
$conn = new mysqli($host, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// If form submitted
if (isset($_POST['reset'])) {
    // Get email from form
    $email = $_POST['email'];
    
    // Validate email
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        echo "Invalid email format";
        exit;
    }

    // Check if email exists in database
    $sql = "SELECT * FROM users WHERE email='$email'";
    $result = $conn->query($sql);

    if ($result->num_rows == 0) {
        echo "Email not found in our records";
        exit;
    } else {
        // Generate reset token
        $token = bin2hex(random_bytes(16));
        
        // Update the database with the token and expiration time (1 hour)
        $expiration_time = date('Y-m-d H:i:s', strtotime('+1 hour'));
        $sql = "UPDATE users SET reset_token='$token', reset_token_expires='$expiration_time' WHERE email='$email'";
        $conn->query($sql);
        
        // Send email with reset link
        $reset_link = "http://$_SERVER[HTTP_HOST]/reset-password.php?token=$token";
        $to = $email;
        $subject = 'Password Reset Request';
        $message = "You have requested a password reset.

Please click the following link to reset your password:
$reset_link

This link will expire in 1 hour.";
        
        if (mail($to, $subject, $message)) {
            echo "A password reset email has been sent to $email";
        } else {
            echo "Failed to send email. Please try again later.";
        }
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <h2>Forgot Password</h2>
    <form method="post">
        <input type="email" name="email" placeholder="Enter your email" required><br>
        <button type="submit" name="reset">Reset Password</button>
    </form>
</body>
</html>

// Reset password page (reset-password.php)
<?php
session_start();

if (!isset($_GET['token'])) {
    die("Invalid request");
}

$token = $_GET['token'];

// Check if token exists in database and is not expired
$sql = "SELECT * FROM users WHERE reset_token='$token'";
$result = $conn->query($sql);

if ($result->num_rows == 0) {
    echo "Invalid or expired token";
    exit;
} else {
    $row = $result->fetch_assoc();
    
    // Check if token has expired
    if (strtotime($row['reset_token_expires']) < time()) {
        echo "Token has expired. Please request a new password reset.";
        exit;
    }
}

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $new_password = $_POST['new_password'];
    $confirm_password = $_POST['confirm_password'];

    if ($new_password != $confirm_password) {
        echo "Passwords do not match";
        exit;
    }

    // Update password
    $sql = "UPDATE users SET password=PASSWORD('$new_password'), reset_token='', reset_token_expires='' WHERE reset_token='$token'";
    $conn->query($sql);

    echo "Password updated successfully!";
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <h2>Reset Password</h2>
    <form method="post">
        <input type="password" name="new_password" placeholder="Enter new password" required><br>
        <input type="password" name="confirm_password" placeholder="Confirm password" required><br>
        <button type="submit">Submit</button>
    </form>
</body>
</html>


<?php
// Include database connection
include 'db_connection.php';

if (isset($_POST['reset'])) {
    $email = mysqli_real_escape_string($conn, $_POST['email']);
    
    // Check if email exists in the database
    $sql = "SELECT * FROM users WHERE email='$email'";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) > 0) {
        // Generate a temporary password
        $tempPassword = generateTempPassword();
        
        // Create a reset token
        $resetToken = md5(uniqid(rand(), true));
        
        // Update the database with the reset token and temporary password
        $updateSql = "UPDATE users SET temp_password='$tempPassword', reset_token='$resetToken' WHERE email='$email'";
        mysqli_query($conn, $updateSql);
        
        // Send the reset password email
        sendResetEmail($email, $tempPassword, $resetToken);
        
        echo "A temporary password has been sent to your email address.";
    } else {
        echo "Email not found in our records!";
    }
}

// Function to generate a temporary password
function generateTempPassword() {
    $chars = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^&*()_";
    $length = 10;
    $password = "";
    for ($i = 0; $i < $length; $i++) {
        $randomChar = $chars[rand(0, strlen($chars)-1)];
        $password .= $randomChar;
    }
    return $password;
}

// Function to send reset password email
function sendResetEmail($email, $tempPassword, $resetToken) {
    $to = $email;
    $subject = "Your Temporary Password";
    $message = "
        <html>
            <head>
                <title>Temporary Password</title>
            </head>
            <body>
                <h2>Your Temporary Password</h2>
                <p>Your temporary password is: <strong>$tempPassword</strong></p>
                <p>Please use this temporary password to log in and change your password.</p>
                <p><a href='http://yourwebsite.com/reset_password.php?token=$resetToken'>Click here to reset your password</a></p>
            </body>
        </html>
    ";
    $headers = "MIME-Version: 1.0" . "\r
";
    $headers .= "Content-type:text/html;charset=UTF-8" . "\r
";
    $headers .= "From: <your_email@example.com>" . "\r
";
    
    mail($to, $subject, $message, $headers);
}
?>


<?php
// Include database connection
include 'db_connection.php';

if (isset($_GET['token'])) {
    $resetToken = mysqli_real_escape_string($conn, $_GET['token']);
    
    // Check if token exists in the database
    $sql = "SELECT * FROM users WHERE reset_token='$resetToken'";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) > 0) {
        // If token is valid, display password reset form
?>
        <html>
            <head>
                <title>Reset Password</title>
            </head>
            <body>
                <h2>Reset Password</h2>
                <form action="reset_password.php?token=<?php echo $resetToken; ?>" method="post">
                    <label for="new_password">New Password:</label><br>
                    <input type="password" id="new_password" name="new_password"><br><br>
                    <label for="confirm_password">Confirm Password:</label><br>
                    <input type="password" id="confirm_password" name="confirm_password"><br><br>
                    <button type="submit" name="reset_pwd">Reset Password</button>
                </form>
            </body>
        </html>
<?php
    } else {
        // Invalid token
        echo "Invalid or expired reset link!";
        exit();
    }
} elseif (isset($_POST['reset_pwd'])) {
    $newPassword = mysqli_real_escape_string($conn, $_POST['new_password']);
    $confirmPassword = mysqli_real_escape_string($conn, $_POST['confirm_password']);
    $resetToken = mysqli_real_escape_string($conn, $_GET['token']);
    
    if ($newPassword != $confirmPassword) {
        echo "Passwords do not match!";
    } else {
        // Hash the new password
        $hashedPassword = password_hash($newPassword, PASSWORD_DEFAULT);
        
        // Update the database with the new password and clear reset token
        $updateSql = "UPDATE users SET password='$hashedPassword', reset_token='' WHERE reset_token='$resetToken'";
        mysqli_query($conn, $updateSql);
        
        echo "Your password has been successfully updated!";
    }
} else {
    // If no token is provided
    echo "Invalid request!";
}
?>


<?php
$servername = "localhost";
$username = "root";
$password = "";
$dbname = "your_database";

// Create connection
$conn = mysqli_connect($servername, $username, $password, $dbname);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}
?>


<?php
$email = mysqli_real_escape_string($conn, $_POST['email']);
// Further validation can be added here if needed.
?>


$result = $conn->query("SELECT * FROM users WHERE email='$email'");
if ($result->num_rows == 0) {
    die("No account found with this email.");
}


$token = md5(rand());
$current_time = strtotime(date('Y-m-d H:i:s'));
$expiration_time = $current_time + 3600; // Expiry after 1 hour

$conn->query("UPDATE users SET reset_token='$token', token_expiry='$expiration_time' WHERE email='$email'");


$reset_link = "http://yourdomain.com/reset_password.php?token=$token";
mail($email, 'Password Reset', "Click here to reset your password: $reset_link");


if (isset($_GET['token'])) {
    $token = mysqli_real_escape_string($conn, $_GET['token']);
    
    // Check if token exists in database and hasn't expired
    $result = $conn->query("SELECT * FROM users WHERE reset_token='$token' AND token_expiry > '" . time() . "'");
    
    if ($result->num_rows == 1) {
        // Display password reset form
        ?>
        <h2>Reset Password</h2>
        <form action="reset_password.php?token=<?php echo $token ?>" method="post">
            New Password: <input type="password" name="new_pass" required><br>
            Confirm Password: <input type="password" name="confirm_pass" required><br>
            <button type="submit">Reset</button>
        </form>
        <?php
    } else {
        // Token invalid or expired
        die("Invalid token. Please request a new password reset.");
    }
} else {
    die("No token provided.");
}


if (isset($_POST['new_pass']) && isset($_POST['confirm_pass'])) {
    $new_pass = $_POST['new_pass'];
    $confirm_pass = $_POST['confirm_pass'];
    
    if ($new_pass != $confirm_pass) {
        die("Passwords do not match.");
    }
    
    // Hash the new password
    $hash = password_hash($new_pass, PASSWORD_DEFAULT);
    
    $token = mysqli_real_escape_string($conn, $_GET['token']);
    
    // Update user's password and clear reset token
    $conn->query("UPDATE users SET password='$hash', reset_token=NULL WHERE reset_token='$token'");
    
    echo "Password updated successfully!";
}


<?php
// Database connection
$host = "localhost";
$username = "username";
$password = "password";
$db_name = "mydatabase";

$conn = new mysqli($host, $username, $password, $db_name);
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Generate a random string for token
function generateToken() {
    $length = 32;
    $characters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890';
    $token = '';
    for ($i = 0; $i < $length; $i++) {
        $token .= $characters[rand(0, strlen($characters) - 1)];
    }
    return $token;
}

// Send email with reset link
function sendResetEmail($email, $resetToken) {
    $to = $email;
    $subject = "Password Reset Request";
    $message = "
        <html>
            <head></head>
            <body>
                <h2>Password Reset</h2>
                <p>Please click the following link to reset your password:</p>
                <a href='http://example.com/reset-password.php?token=$resetToken'>Reset Password</a><br>
                <p>If you did not request a password reset, please ignore this email.</p>
            </body>
        </html>
    ";
    $headers = "MIME-Version: 1.0" . "\r
";
    $headers .= "Content-type:text/html;charset=UTF-8" . "\r
";
    $headers .= "From: admin@example.com" . "\r
";

    mail($to, $subject, $message, $headers);
}

// Forgot Password Form
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    if (isset($_POST['email'])) {
        $email = $_POST['email'];
        
        // Check if email exists in database
        $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
        $stmt->bind_param("s", $email);
        $stmt->execute();
        $result = $stmt->get_result();
        
        if ($result->num_rows > 0) {
            // Generate reset token and store it in database
            $resetToken = generateToken();
            $expires = date('Y-m-d H:i:s', time() + 3600); // Token expires after 1 hour
            
            $stmt = $conn->prepare("UPDATE users SET reset_token = ?, reset_expires = ? WHERE email = ?");
            $stmt->bind_param("sss", $resetToken, $expires, $email);
            $stmt->execute();
            
            // Send reset email
            sendResetEmail($email, $resetToken);
            
            echo "A password reset link has been sent to your email address.";
        } else {
            echo "Email not found in our database.";
        }
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <h2>Forgot Password</h2>
    <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
        <label for="email">Email:</label><br>
        <input type="text" id="email" name="email"><br><br>
        <input type="submit" value="Reset Password">
    </form>
    <p>Remember your password? <a href="login.php">Login here</a></p>
</body>
</html>

// Reset Password Page (reset-password.php)
<?php
if ($_SERVER["REQUEST_METHOD"] == "GET") {
    if (!isset($_GET['token'])) {
        die("Invalid request");
    }
    
    $token = $_GET['token'];
    
    // Check if token exists in database
    $stmt = $conn->prepare("SELECT id, email FROM users WHERE reset_token = ? AND reset_expires > NOW()");
    $stmt->bind_param("s", $token);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows == 0) {
        die("Invalid or expired token");
    }
    
    // Show password reset form
    ?>
    <html>
        <head>
            <title>Reset Password</title>
        </head>
        <body>
            <h2>Reset Password</h2>
            <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
                <input type="hidden" name="token" value="<?php echo $token; ?>">
                <label for="password">New Password:</label><br>
                <input type="password" id="password" name="password"><br><br>
                <label for="confirm_password">Confirm Password:</label><br>
                <input type="password" id="confirm_password" name="confirm_password"><br><br>
                <input type="submit" value="Reset Password">
            </form>
        </body>
    </html>
<?php
}

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    if (!isset($_POST['token']) || !isset($_POST['password']) || !isset($_POST['confirm_password'])) {
        die("Invalid request");
    }
    
    $token = $_POST['token'];
    $password = $_POST['password'];
    $confirmPassword = $_POST['confirm_password'];
    
    if ($password != $confirmPassword) {
        die("Passwords do not match");
    }
    
    // Hash the new password
    $hashedPassword = password_hash($password, PASSWORD_DEFAULT);
    
    // Update the password in database
    $stmt = $conn->prepare("UPDATE users SET password = ?, reset_token = NULL WHERE reset_token = ?");
    $stmt->bind_param("ss", $hashedPassword, $token);
    $stmt->execute();
    
    echo "Password has been successfully updated!";
}
?>


<?php
require 'db_connect.php'; // Include your database connection

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email_username = $_POST['email_username'];
    
    // Check if email or username exists in the database
    $stmt = $conn->prepare("SELECT id, email FROM users WHERE email=? OR username=?");
    $stmt->execute([$email_username, $email_username]);
    $user = $stmt->fetch();

    if ($user) {
        // Generate a random token
        $token = bin2hex(random_bytes(16));
        
        // Store the token in the database with an expiration time (e.g., 1 hour)
        $expires = date('Y-m-d H:i:s', strtotime('+1 hour'));
        $hash_token = password_hash($token, PASSWORD_DEFAULT);
        
        $stmt = $conn->prepare("INSERT INTO reset_tokens (user_id, token, expires) VALUES (?, ?, ?)");
        $stmt->execute([$user['id'], $hash_token, $expires]);
        
        // Send the reset link to the user's email
        $reset_link = "http://yourwebsite.com/reset_password.php?token=$token";
        send_reset_email($email_username, $reset_link);
        
        echo "A password reset link has been sent to your email.";
    } else {
        echo "No account found with that email or username.";
    }
}
?>

<?php
function send_reset_email($to, $link) {
    $subject = 'Password Reset Request';
    $message = "Click the following link to reset your password: $link";
    
    // Use PHPMailer or another library for better email handling
    mail($to, $subject, $message);
}
?>


<?php
require 'db_connect.php';

if (isset($_GET['token'])) {
    $token = $_GET['token'];
    
    // Check if the token exists and is valid
    $stmt = $conn->prepare("SELECT id, user_id FROM reset_tokens WHERE token=? AND expires > NOW()");
    $hash_token = password_hash($token, PASSWORD_DEFAULT);
    $stmt->execute([$hash_token]);
    $resetToken = $stmt->fetch();
    
    if ($resetToken) {
        // Token is valid
        session_start();
        $_SESSION['user_id'] = $resetToken['user_id'];
        
        // Show the password reset form
        ?>
        <h2>Reset Password</h2>
        <form action="reset_password.php" method="post">
            <label>New Password:</label><br>
            <input type="password" name="new_pass" required><br>
            <label>Confirm New Password:</label><br>
            <input type="password" name="confirm_pass" required><br>
            <input type="hidden" name="token" value="<?php echo $token; ?>">
            <input type="submit" value="Reset Password">
        </form>
        <?php
    } else {
        echo "Invalid or expired token.";
    }
} elseif ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Reset password process
    session_start();
    if (isset($_SESSION['user_id'])) {
        $new_pass = $_POST['new_pass'];
        $confirm_pass = $_POST['confirm_pass'];
        
        if ($new_pass != $confirm_pass) {
            die("Passwords do not match.");
        }
        
        // Hash the new password
        $hash_new_password = password_hash($new_pass, PASSWORD_DEFAULT);
        
        // Update the user's password
        $stmt = $conn->prepare("UPDATE users SET password=? WHERE id=?");
        $stmt->execute([$hash_new_password, $_SESSION['user_id']]);
        
        // Invalidate the reset token
        $stmt = $conn->prepare("DELETE FROM reset_tokens WHERE user_id=?");
        $stmt->execute([$_SESSION['user_id']]);
        
        session_unset();
        echo "Password has been reset successfully!";
    } else {
        die("Invalid request.");
    }
} else {
    echo "No token provided.";
}
?>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'mydatabase';

// Create database connection
$conn = mysqli_connect($host, $username, $password, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function forgotPassword($email, $conn) {
    // Check if email exists in the database
    $sql = "SELECT id FROM users WHERE email = ?";
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, "s", $email);
    mysqli_stmt_execute($stmt);
    
    $result = mysqli_stmt_get_result($stmt);
    if (mysqli_num_rows($result) == 0) {
        return false; // Email not found
    }
    
    // Generate reset token and expiration time
    $token = bin2hex(random_bytes(16));
    $expires = date('Y-m-d H:i:s', strtotime('+1 hour'));
    
    // Update the database with the reset token
    $sql = "UPDATE users SET password_reset_token = ?, password_reset_expires = ? WHERE email = ?";
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, "ss", $token, $expires, $email);
    mysqli_stmt_execute($stmt);
    
    // Send reset link to the user's email
    $resetLink = "http://".$_SERVER['HTTP_HOST']."/reset-password.php?token=".$token;
    $subject = "Password Reset Request";
    $message = "
        <html>
            <body>
                <h2>Password Reset</h2>
                <p>We received a request to reset your password. Click the link below to reset it:</p>
                <a href='".$resetLink."'>".$resetLink."</a><br><br>
                <p>If you did not request this password reset, please ignore this email.</p>
            </body>
        </html>
    ";
    
    $headers = "MIME-Version: 1.0" . "\r
";
    $headers .= "Content-type:text/html;charset=UTF-8" . "\r
";
    $headers .= "From: <your-email@example.com>" . "\r
";
    
    mail($email, $subject, $message, $headers);
    
    return true;
}

// Handle form submission
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = $_POST['email'];
    if (forgotPassword($email, $conn)) {
        echo "An email has been sent to your email address with instructions on how to reset your password.";
    } else {
        echo "Email not found in our records. Please try again or register an account.";
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <h2>Forgot Password</h2>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <label for="email">Email:</label><br>
        <input type="text" id="email" name="email"><br><br>
        <input type="submit" value="Reset Password">
    </form>
</body>
</html>

// After user clicks the reset link, use this script (reset-password.php)

<?php
if (isset($_GET['token'])) {
    $token = $_GET['token'];
    
    // Check if token exists and is valid in the database
    $sql = "SELECT id FROM users WHERE password_reset_token = ? AND password_reset_expires > NOW()";
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, "s", $token);
    mysqli_stmt_execute($stmt);
    
    $result = mysqli_stmt_get_result($stmt);
    if (mysqli_num_rows($result) == 0) {
        die("Invalid or expired token. Please request a new password reset.");
    }
    
    // Show password reset form
    ?>
    <form action="reset-password.php" method="post">
        <input type="hidden" name="token" value="<?php echo $token; ?>">
        <label for="new_password">New Password:</label><br>
        <input type="password" id="new_password" name="new_password"><br><br>
        <label for="confirm_password">Confirm Password:</label><br>
        <input type="password" id="confirm_password" name="confirm_password"><br><br>
        <input type="submit" value="Reset Password">
    </form>
    
    <?php
} else {
    die("No token provided. Please request a password reset.");
}

// Handle password reset submission
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $token = $_POST['token'];
    $new_password = $_POST['new_password'];
    $confirm_password = $_POST['confirm_password'];
    
    if ($new_password != $confirm_password) {
        die("Passwords do not match.");
    }
    
    // Update the password
    $sql = "UPDATE users SET password = ?, password_reset_token = NULL, password_reset_expires = NULL WHERE password_reset_token = ?";
    $stmt = mysqli_prepare($conn, $sql);
    $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);
    mysqli_stmt_bind_param($stmt, "ss", $hashed_password, $token);
    mysqli_stmt_execute($stmt);
    
    if (mysqli_affected_rows($conn) > 0) {
        echo "Password has been reset successfully!";
    } else {
        die("Error resetting password. Please try again.");
    }
}
?>


<?php
// Database connection
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'mydatabase';

$conn = new mysqli($host, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Configuration
$resetTokenValidity = 1800; // Token validity in seconds (30 minutes)
$secretKey = 'your-secret-key-here'; // Used for hashing tokens

// Error messages initialization
$error = array();

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    if (!empty($_POST['email'])) {
        $email = trim(mysqli_real_escape_string($conn, $_POST['email']));
        
        // Check if email exists in database
        $sql = "SELECT id FROM users WHERE email = '$email'";
        $result = $conn->query($sql);
        
        if ($result->num_rows > 0) {
            // Generate reset token and expiration time
            $resetToken = bin2hex(random_bytes(16));
            $tokenHash = hash_hmac('sha256', $resetToken, $secretKey);
            $expires = time() + $resetTokenValidity;
            
            // Store token in database
            $sql = "INSERT INTO password_resets (user_id, token, expires) 
                    VALUES ('$email', '$tokenHash', '$expires')";
            if (!$conn->query($sql)) {
                die("Error storing reset token: " . $conn->error);
            }
            
            // Send reset email
            $resetLink = "http://example.com/reset-password.php?token=$resetToken";
            $to = $email;
            $subject = 'Password Reset Request';
            $message = "Please click the following link to reset your password: $resetLink

This link will expire in 30 minutes.";
            
            if (mail($to, $subject, $message)) {
                echo "Password reset email sent!";
            } else {
                die("Failed to send email!");
            }
        } else {
            $error[] = "No account found with this email address.";
        }
    } else {
        $error[] = "Please enter your email address.";
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <?php if (!empty($error)) { ?>
        <div style="color: red;">
            <?php foreach ($error as $err) {
                echo "$err<br>";
            } ?>
        </div>
    <?php } ?>

    <form action="<?php $_PHP_SELF ?>" method="post">
        Email:<br>
        <input type="text" name="email"><br><br>
        <input type="submit" value="Submit">
    </form>
</body>
</html>

<?php
$conn->close();
?>


<?php
include('db_connection.php'); // Include your database connection file

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = mysqli_real_escape_string($conn, $_POST['email']);
    
    // Check if email exists in the database
    $sql = "SELECT id FROM users WHERE email='$email'";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) > 0) {
        // Generate a reset token and expiration time
        $resetToken = generateResetToken();
        $expires = date('Y-m-d H:i:s', strtotime('+1 hour'));
        
        // Update the database with the new token and expiration
        $updateSql = "UPDATE users SET reset_token='$resetToken', reset_expires='$expires' WHERE email='$email'";
        mysqli_query($conn, $updateSql);
        
        // Send the reset link to the user's email
        sendResetEmail($email, $resetToken);
        
        echo "A password reset link has been sent to your email.";
    } else {
        echo "No account found with this email address.";
    }
}

// Function to generate a random reset token
function generateResetToken() {
    return bin2hex(random_bytes(16));
}

// Function to send the reset email
function sendResetEmail($email, $resetToken) {
    $to = $email;
    $subject = "Password Reset Request";
    $message = "Click on this link to reset your password: http://yourwebsite.com/reset_password.php?token=$resetToken";
    $headers = "From: webmaster@example.com" . "\r
";
    
    mail($to, $subject, $message, $headers);
}
?>


<?php
include('db_connection.php');

if (isset($_GET['token'])) {
    $token = mysqli_real_escape_string($conn, $_GET['token']);
    
    // Check if token exists and is valid
    $sql = "SELECT id FROM users WHERE reset_token='$token' AND reset_expires > NOW()";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) == 1) {
        // Token is valid, show password reset form
        ?>
        <h2>Reset Password</h2>
        <form action="reset_password.php?token=<?php echo $token; ?>" method="post">
            New Password: <input type="password" name="new_password" required><br>
            Confirm Password: <input type="password" name="confirm_password" required><br>
            <button type="submit">Reset Password</button>
        </form>
        <?php
    } else {
        echo "Invalid or expired reset link.";
    }
} else {
    // No token provided, redirect to forgot password page
    header("Location: forgot_password.php");
}
?>


if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $token = mysqli_real_escape_string($conn, $_GET['token']);
    $newPassword = mysqli_real_escape_string($conn, $_POST['new_password']);
    $confirmPassword = mysqli_real_escape_string($conn, $_POST['confirm_password']);
    
    if ($newPassword != $confirmPassword) {
        die("Passwords do not match.");
    }
    
    // Check token validity
    $sql = "SELECT id FROM users WHERE reset_token='$token' AND reset_expires > NOW()";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) == 1) {
        $userId = mysqli_fetch_assoc($result)['id'];
        
        // Update the password
        $newPasswordHashed = password_hash($newPassword, PASSWORD_DEFAULT);
        $updateSql = "UPDATE users SET password='$newPasswordHashed', reset_token='', reset_expires='' WHERE id=$userId";
        mysqli_query($conn, $updateSql);
        
        echo "Password has been successfully updated!";
    } else {
        die("Invalid or expired reset link.");
    }
}


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'mydatabase';

// Create connection
$conn = new mysqli($host, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to generate random token
function generateToken() {
    return md5(uniqid(rand(), true));
}

// Check if email exists in database
$email = $_POST['email'];
$sql = "SELECT * FROM users WHERE email='$email'";
$result = $conn->query($sql);

if ($result->num_rows > 0) {
    // Generate token and expiration time (1 hour)
    $token = generateToken();
    $expiration_time = date('Y-m-d H:i:s', strtotime('+1 hour'));

    // Update database with token
    $update_sql = "UPDATE users SET reset_token='$token', reset_expires='$expiration_time' WHERE email='$email'";
    if ($conn->query($update_sql) === TRUE) {
        // Send email to user
        $to = $email;
        $subject = 'Password Reset Request';
        $message = '
            <html>
                <head>
                    <title>Password Reset</title>
                </head>
                <body>
                    <h2>Password Reset</h2>
                    <p>Please click the following link to reset your password:</p>
                    <a href="http://yourdomain.com/reset-password.php?token=' . $token . '">Reset Password</a>
                    <br><br>
                    This link will expire in 1 hour.
                </body>
            </html>
        ';
        $headers = 'MIME-Version: 1.0' . "\r
";
        $headers .= 'Content-type: text/html; charset=UTF-8' . "\r
";
        $headers .= 'From: yourname@yourdomain.com' . "\r
";

        if (mail($to, $subject, $message, $headers)) {
            echo "An email has been sent to you with instructions to reset your password.";
        } else {
            echo "Error sending email.";
        }
    } else {
        echo "Error updating record: " . $conn->error;
    }
} else {
    echo "No account found with this email address.";
}

// Close connection
$conn->close();
?>


// forgot-password.php
<?php
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    include 'forgot-password-handler.php';
}
?>
<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <h2>Forgot Password</h2>
    <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
        <input type="email" name="email" placeholder="Enter your email address" required><br><br>
        <input type="submit" value="Request Reset Link">
    </form>
</body>
</html>


// reset-password.php
<?php
$token = $_GET['token'];
?>

<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <?php if (isset($token)) { ?>
        <h2>Reset Password</h2>
        <form action="reset-password-handler.php" method="post">
            <input type="hidden" name="token" value="<?php echo $token; ?>">
            <input type="password" name="new_password" placeholder="Enter new password" required><br><br>
            <input type="password" name="confirm_password" placeholder="Confirm new password" required><br><br>
            <input type="submit" value="Reset Password">
        </form>
    <?php } else { ?>
        <p>Invalid request. Please go back to the login page and try again.</p>
    <?php } ?>
</body>
</html>


// reset-password-handler.php
<?php
include 'db_connection.php';

$token = $_POST['token'];
$new_password = $_POST['new_password'];
$confirm_password = $_POST['confirm_password'];

if ($new_password != $confirm_password) {
    die("Passwords do not match.");
}

$sql = "SELECT * FROM users WHERE reset_token='$token'";
$result = $conn->query($sql);

if ($result->num_rows > 0) {
    $row = $result->fetch_assoc();
    
    // Check if token is expired
    $expiration_time = strtotime($row['reset_expires']);
    $current_time = time();
    
    if ($current_time > $expiration_time) {
        die("This reset link has expired.");
    }
    
    // Update password
    $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);
    $update_sql = "UPDATE users SET password='$hashed_password', reset_token='', reset_expires='' WHERE email='" . $row['email'] . "'";
    
    if ($conn->query($update_sql)) {
        echo "Password updated successfully!";
    } else {
        die("Error updating password: " . $conn->error);
    }
} else {
    die("Invalid or expired token.");
}

$conn->close();
?>


<?php
// Database connection
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'mydatabase';

$conn = new mysqli($host, $username, $password, $dbname);
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Step 1: Forgot Password Request
if ($_SERVER['REQUEST_METHOD'] == 'POST' && isset($_POST['forgot'])) {
    $email = $_POST['email'];
    
    // Sanitize email
    $email = mysqli_real_escape_string($conn, $email);
    
    // Check if email exists in database
    $sql = "SELECT id FROM users WHERE email='$email'";
    $result = $conn->query($sql);
    
    if ($result->num_rows > 0) {
        // Generate reset token
        $token = md5(uniqid(rand(), true));
        
        // Store token in database with expiration time (e.g., 1 hour)
        $expires = date('Y-m-d H:i:s', strtotime('+1 hour'));
        
        $sql = "INSERT INTO password_resets (user_id, token, expires) 
                VALUES ('$result->id', '$token', '$expires')";
        
        if ($conn->query($sql)) {
            // Send email with reset link
            $resetLink = "http://".$_SERVER['HTTP_HOST']."/reset_password.php?token=".$token;
            
            $to = $email;
            $subject = "Password Reset Request";
            $message = "Click the following link to reset your password: 
".$resetLink;
            $headers = "From: noreply@example.com";
            
            if (mail($to, $subject, $message, $headers)) {
                echo "An email has been sent with instructions to reset your password.";
            } else {
                echo "Error sending email. Please try again later.";
            }
        }
    } else {
        echo "Email not found in our records.";
    }
}

// Step 2: Reset Password Form
if (isset($_GET['token'])) {
    $token = $_GET['token'];
    
    // Validate token and check if it's expired
    $sql = "SELECT * FROM password_resets 
            WHERE token='$token' AND expires > NOW()";
    $result = $conn->query($sql);
    
    if ($result->num_rows == 1) {
        // Display reset form
        ?>
        <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
            New Password: <input type="password" name="new_password"><br>
            Confirm Password: <input type="password" name="confirm_password"><br>
            <input type="hidden" name="token" value="<?php echo $token; ?>">
            <input type="submit" name="reset" value="Reset Password">
        </form>
        <?php
    } else {
        echo "Invalid or expired reset link.";
    }
}

// Step 3: Process Reset Request
if ($_SERVER['REQUEST_METHOD'] == 'POST' && isset($_POST['reset'])) {
    $token = $_POST['token'];
    $new_password = $_POST['new_password'];
    $confirm_password = $_POST['confirm_password'];
    
    if ($new_password != $confirm_password) {
        die("Passwords do not match.");
    }
    
    // Check token validity
    $sql = "SELECT * FROM password_resets 
            WHERE token='$token' AND expires > NOW()";
    $result = $conn->query($sql);
    
    if ($result->num_rows == 1) {
        // Update user's password
        $row = $result->fetch_assoc();
        
        $new_password_hash = md5($new_password); // Use better hashing in production (e.g., bcrypt)
        
        $sql = "UPDATE users SET password='$new_password_hash' 
                WHERE id='".$row['user_id']."'";
        
        if ($conn->query($sql)) {
            // Invalidate the token
            $sql = "DELETE FROM password_resets WHERE token='$token'";
            $conn->query($sql);
            
            echo "Password has been reset successfully.";
        } else {
            echo "Error resetting password. Please try again.";
        }
    } else {
        echo "Invalid or expired reset link.";
    }
}
?>

<!-- Forgot Password Form -->
<form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
    Email: <input type="email" name="email"><br>
    <input type="submit" name="forgot" value="Request Reset">
</form>

<?php
$conn->close();
?>


<?php
// forgot_password.php

// Database connection details
$host = 'localhost';
$user = 'username';
$password = 'password';
$dbname = 'database_name';

try {
    // Connect to database
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $user, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        $email = $_POST['email'];
        
        // Check if email exists in database
        $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
        $stmt->execute([$email]);
        $user = $stmt->fetch(PDO::FETCH_ASSOC);
        
        if ($user) {
            // Generate a random token
            $token = bin2hex(random_bytes(16));
            
            // Store the token in the database with an expiration time (e.g., 1 hour from now)
            $expires = date('Y-m-d H:i:s', strtotime('+1 hour'));
            
            $stmt = $conn->prepare("UPDATE users SET reset_token = ?, reset_expires = ? WHERE email = ?");
            $stmt->execute([$token, $expires, $email]);
            
            // Send the password reset email
            $resetLink = "http://yourwebsite.com/reset_password.php?token=$token";
            $to = $email;
            $subject = "Password Reset Request";
            $message = "
                <html>
                    <body>
                        <h2>Password Reset</h2>
                        <p>Please click the link below to reset your password:</p>
                        <a href='$resetLink'>Reset Password</a>
                        <br><br>
                        This link will expire in 1 hour.
                    </body>
                </html>
            ";
            $headers = "MIME-Version: 1.0" . "\r
";
            $headers .= "Content-type:text/html;charset=UTF-8" . "\r
";
            $headers .= "From: yourwebsite.com <noreply@yourwebsite.com>" . "\r
";
            
            mail($to, $subject, $message, $headers);
            
            echo "An email has been sent to $email with instructions to reset your password.";
        } else {
            echo "Email not found in our records. Please check your email address and try again.";
        }
    }
} catch(PDOException $e) {
    echo "Error: " . $e->getMessage();
}
$conn = null;
?>


<?php
// reset_password.php

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $token = $_GET['token'];
    $new_password = $_POST['new_password'];
    $confirm_password = $_POST['confirm_password'];
    
    if ($new_password != $confirm_password) {
        die("Passwords do not match.");
    }
    
    try {
        // Database connection
        $conn = new PDO("mysql:host=$host;dbname=$dbname", $user, $password);
        $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
        
        // Check if token exists and hasn't expired
        $stmt = $conn->prepare("SELECT id FROM users WHERE reset_token = ? AND reset_expires > NOW()");
        $stmt->execute([$token]);
        $user = $stmt->fetch(PDO::FETCH_ASSOC);
        
        if ($user) {
            // Update the user's password
            $hash = password_hash($new_password, PASSWORD_DEFAULT);
            $stmt = $conn->prepare("UPDATE users SET password = ?, reset_token = NULL, reset_expires = NULL WHERE id = ?");
            $stmt->execute([$hash, $user['id']]);
            
            echo "Password has been successfully updated!";
        } else {
            die("Invalid or expired token.");
        }
    } catch(PDOException $e) {
        die("Error: " . $e->getMessage());
    }
}
?>


<?php
session_start();

// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'mydatabase';

// Create database connection
$conn = new mysqli($host, $username, $password, $dbname);

// Check if connection was successful
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Check if form is submitted
if (isset($_POST['submit'])) {
    // Get email from form
    $email = $_POST['email'];
    
    // Validate input
    if (empty($email)) {
        echo "Please enter your email address.";
    } else if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        echo "Invalid email format.";
    } else {
        // Check if email exists in database
        $sql = "SELECT * FROM users WHERE email='$email'";
        $result = $conn->query($sql);
        
        if ($result->num_rows == 0) {
            echo "Email not found in our records.";
        } else {
            // Generate a temporary password
            $temp_password = rand(1000, 9999);
            
            // Update the database with temporary password
            $sql = "UPDATE users SET password='$temp_password' WHERE email='$email'";
            if ($conn->query($sql)) {
                // Send email to user with temporary password
                $to = $email;
                $subject = "Temporary Password";
                $message = "Your temporary password is: $temp_password
Please login and change your password.";
                $headers = "From: admin@example.com";
                
                if (mail($to, $subject, $message, $headers)) {
                    echo "Temporary password sent to your email.";
                } else {
                    echo "Error sending email.";
                }
            } else {
                echo "Error updating password.";
            }
        }
    }
}
?>

<!-- HTML form -->
<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <h2>Forgot Password</h2>
    <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
        <label for="email">Email:</label><br>
        <input type="text" id="email" name="email"><br><br>
        <input type="submit" name="submit" value="Submit">
    </form>
</body>
</html>

// Close database connection
$conn->close();
?>


<?php
session_start();

// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'mydatabase';

// Create database connection
$conn = new mysqli($host, $username, $password, $dbname);

// Check if connection was successful
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Check if form is submitted
if (isset($_POST['submit'])) {
    // Get email from form
    $email = $_POST['email'];
    
    // Validate input
    if (empty($email)) {
        echo "Please enter your email address.";
    } else if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        echo "Invalid email format.";
    } else {
        // Check if email exists in database
        $sql = "SELECT * FROM users WHERE email='$email'";
        $result = $conn->query($sql);
        
        if ($result->num_rows == 0) {
            echo "Email not found in our records.";
        } else {
            // Generate a random token
            $token = bin2hex(random_bytes(16));
            
            // Update the database with the token and expiration time (3 hours)
            $expires = date('Y-m-d H:i:s', time() + 3*60*60);
            $sql = "UPDATE users SET reset_token='$token', reset_expires='$expires' WHERE email='$email'";
            
            if ($conn->query($sql)) {
                // Send email with password reset link
                $to = $email;
                $subject = "Password Reset Request";
                $message = "Please click the following link to reset your password: http://yourwebsite.com/reset-password.php?token=$token
This link will expire in 3 hours.";
                $headers = "From: admin@example.com";
                
                if (mail($to, $subject, $message, $headers)) {
                    echo "Password reset email sent. Please check your inbox.";
                } else {
                    echo "Error sending email.";
                }
            } else {
                echo "Error updating password reset token.";
            }
        }
    }
}
?>

<!-- HTML form -->
<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <h2>Forgot Password</h2>
    <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
        <label for="email">Email:</label><br>
        <input type="text" id="email" name="email"><br><br>
        <input type="submit" name="submit" value="Submit">
    </form>
</body>
</html>

// Close database connection
$conn->close();
?>


<?php
// Database connection details
$host = 'localhost';
$user = 'root';
$password = '';
$database = 'test';

// Initialize variables
$error = "";
$success = false;

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = isset($_POST['email']) ? $_POST['email'] : '';
    $username = isset($_POST['username']) ? $_POST['username'] : '';

    // Check if either email or username is provided
    if (empty($email) && empty($username)) {
        $error = "Please enter your email or username!";
    } else {
        // Connect to database
        $conn = mysqli_connect($host, $user, $password, $database);
        if (!$conn) {
            die("Connection failed: " . mysqli_connect_error());
        }

        // Prepare SQL statement to select user
        $stmt = mysqli_prepare($conn, "
            SELECT id FROM users 
            WHERE email = ? OR username = ?
        ");
        mysqli_stmt_bind_param($stmt, 'ss', $email, $username);
        mysqli_execute($stmt);
        
        $result = mysqli_stmt_get_result($stmt);
        if ($row = mysqli_fetch_assoc($result)) {
            // Generate reset token
            $token = bin2hex(openssl_random_pseudo_bytes(32));
            
            // Update the database with the new token and expiration time
            $expiration_time = date('Y-m-d H:i:s', strtotime('+1 hour'));
            $update_stmt = mysqli_prepare($conn, "
                UPDATE users 
                SET reset_token = ?, reset_expires = ?
                WHERE id = ?
            ");
            mysqli_stmt_bind_param($update_stmt, 'sss', $token, $expiration_time, $row['id']);
            mysqli_execute($update_stmt);

            // Close statements
            mysqli_stmt_close($stmt);
            mysqli_stmt_close($update_stmt);
            
            // Send reset email
            if (sendResetEmail($email, $username, $token)) {
                $success = true;
                $error = "An email has been sent to you with instructions to reset your password.";
            } else {
                $error = "Error sending email. Please try again later!";
            }
        } else {
            $error = "No account found with this email or username!";
        }

        mysqli_close($conn);
    }
}

// Function to send the reset email
function sendResetEmail($email, $username, $token) {
    $to = $email;
    $subject = "Password Reset Request";
    
    // Email content
    $message = "
        <html>
            <head>
                <title>Password Reset</title>
            </head>
            <body>
                <h2>Password Reset Request</h2>
                <p>Dear " . htmlspecialchars($username) . ",</p>
                <p>We received a password reset request. Click the link below to reset your password:</p>
                <a href='http://example.com/reset_password.php?token=" . $token . "'>Reset Password</a>
                <br><br>
                <small>This link will expire in 1 hour.</small>
            </body>
        </html>
    ";

    // Set headers
    $headers = "MIME-Version: 1.0" . "\r
";
    $headers .= "Content-type:text/html;charset=UTF-8" . "\r
";
    $headers .= "From: support@example.com" . "\r
";

    return mail($to, $subject, $message, $headers);
}

// Show form with error/success messages
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Forgot Password</title>
    <style>
        .container {
            max-width: 500px;
            margin: 0 auto;
            padding: 20px;
        }
        .form-group {
            margin-bottom: 15px;
        }
        input[type='text'], input[type='email'] {
            width: 100%;
            padding: 8px;
            border: 1px solid #ddd;
            border-radius: 4px;
        }
        button {
            background-color: #4CAF50;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
        button:hover {
            background-color: #45a049;
        }
        .alert {
            padding: 15px;
            margin-bottom: 20px;
            border: 1px solid;
            border-radius: 4px;
        }
        .success {
            background-color: #dfeffc;
            color: #31708f;
            border-color: #bce8f1;
        }
        .error {
            background-color: #f2dede;
            color: #a94442;
            border-color: #ebccd1;
        }
    </style>
</head>
<body>
    <div class="container">
        <?php
        if ($success) {
            echo "<div class='alert success'>$error</div>";
        } else if (!empty($error)) {
            echo "<div class='alert error'>$error</div>";
        }
        ?>
        
        <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
            <h2>Forgot Password</h2>
            <p>Please enter your email or username to reset your password.</p>
            
            <div class="form-group">
                <input type="email" name="email" placeholder="Enter your email" value="<?php echo $email; ?>">
            </div>
            
            <div class="form-group">
                <input type="text" name="username" placeholder="Enter your username" value="<?php echo $username; ?>">
            </div>
            
            <button type="submit">Reset Password</button>
        </form>
    </div>
</body>
</html>


<?php
include('db_connection.php');
include('functions.php');

if (isset($_POST['email'])) {
    $email = $_POST['email'];
    
    // Check if email or username exists in database
    $stmt = $conn->prepare("SELECT id FROM users WHERE email=? OR username=?");
    $stmt->execute([$email, $email]);
    $user = $stmt->fetch(PDO::FETCH_ASSOC);
    
    if ($user) {
        // Generate a random token and expiration time
        $token = bin2hex(random_bytes(16));
        $expires = date('Y-m-d H:i:s', strtotime('+1 hour'));
        
        // Store token in database
        $stmt = $conn->prepare("INSERT INTO password_reset (user_id, token, expires) VALUES (?, ?, ?)");
        $stmt->execute([$user['id'], $token, $expires]);
        
        // Send reset email
        $resetLink = "http://yourdomain.com/reset_password.php?token=" . $token;
        sendResetEmail($email, $resetLink);
        
        echo "An email has been sent to you with instructions to reset your password.";
    } else {
        die("No account found with that email or username.");
    }
}
?>


<?php
include('db_connection.php');

if (!isset($_GET['token'])) {
    die("No token provided.");
}

$token = $_GET['token'];

// Check if token exists and is valid
$stmt = $conn->prepare("SELECT user_id, expires FROM password_reset WHERE token=?");
$stmt->execute([$token]);
$result = $stmt->fetch(PDO::FETCH_ASSOC);

if (!$result) {
    die("Invalid or expired reset link.");
}

$currentDate = date('Y-m-d H:i:s');
if ($currentDate > $result['expires']) {
    die("Reset link has expired. Please request a new one.");
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <h2>Reset Password</h2>
    <form action="reset_password.php?token=<?php echo $token;?>" method="post">
        <label for="password">New Password:</label><br>
        <input type="password" id="password" name="password"><br><br>
        <label for="confirm">Confirm Password:</label><br>
        <input type="password" id="confirm" name="confirm"><br><br>
        <input type="submit" value="Reset Password">
    </form>
</body>
</html>


<?php
include('db_connection.php');

if (!isset($_GET['token']) || !isset($_POST['password'])) {
    die("Invalid request.");
}

$token = $_GET['token'];
$password = $_POST['password'];
$confirm = $_POST['confirm'];

// Check if token exists and is valid
$stmt = $conn->prepare("SELECT user_id, expires FROM password_reset WHERE token=?");
$stmt->execute([$token]);
$result = $stmt->fetch(PDO::FETCH_ASSOC);

if (!$result) {
    die("Invalid or expired reset link.");
}

$currentDate = date('Y-m-d H:i:s');
if ($currentDate > $result['expires']) {
    die("Reset link has expired. Please request a new one.");
}

// Check if passwords match
if ($password !== $confirm) {
    die("Passwords do not match.");
}

// Hash the password
$hashedPassword = password_hash($password, PASSWORD_DEFAULT);

// Update user's password
$stmt = $conn->prepare("UPDATE users SET password=? WHERE id=?");
$stmt->execute([$hashedPassword, $result['user_id']]);

// Delete used token
$stmt = $conn->prepare("DELETE FROM password_reset WHERE token=?");
$stmt->execute([$token]);

echo "Your password has been reset successfully!";
?>


function sendResetEmail($email, $resetLink) {
    $to = $email;
    $subject = "Password Reset Request";
    $message = "Please click the following link to reset your password:

" . $resetLink . "

This link will expire in 1 hour.";
    $headers = "From: yourname@yourdomain.com";

    mail($to, $subject, $message, $headers);
}


<?php
session_start();

// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'test';

// Create connection
$conn = new mysqli($host, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = $_POST['email'];
    
    // Sanitize the email input
    $email = mysqli_real_escape_string($conn, $email);
    
    // Check if email exists in the database
    $sql = "SELECT id FROM users WHERE email = '$email'";
    $result = $conn->query($sql);
    
    if ($result->num_rows == 1) {
        // Generate a random token and expiration time (1 hour from now)
        $token = bin2hex(random_bytes(32));
        $expires = date('Y-m-d H:i:s', strtotime('+1 hour'));
        
        // Store the token in the database
        $sql = "INSERT INTO reset_tokens (user_id, token, expires) 
                VALUES ('$result->id', '$token', '$expires')";
        if ($conn->query($sql)) {
            // Send email with reset link
            $reset_link = "http://$_SERVER[HTTP_HOST]/reset_password.php?token=$token";
            $subject = 'Password Reset Request';
            $message = "Please click the following link to reset your password:

$reset_link

This link will expire in 1 hour.";
            
            if (mail($email, $subject, $message)) {
                echo "<p>Email sent with reset instructions!</p>";
            } else {
                echo "<p>Error sending email. Please try again.</p>";
            }
        } else {
            echo "Error creating reset token: " . $conn->error;
        }
    } else {
        echo "Email not found in our records.";
    }
}

$conn->close();
?>


<?php
session_start();

if (!isset($_SESSION['user_id'])) {
    die("Unauthorized access.");
}

// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'test';

$conn = new mysqli($host, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $user_id = $_SESSION['user_id'];
    $new_password = $_POST['password'];
    
    // Hash the new password
    $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);
    
    // Update the user's password
    $sql = "UPDATE users SET password = '$hashed_password' WHERE id = '$user_id'";
    
    if ($conn->query($sql)) {
        // Clear the reset token
        $sql = "DELETE FROM reset_tokens WHERE user_id = '$user_id'";
        $conn->query($sql);
        
        echo "<p>Password updated successfully! <a href='login.php'>Login here</a>.</p>";
    } else {
        echo "Error updating password: " . $conn->error;
    }
}

// Clear the session variable
unset($_SESSION['user_id']);
$conn->close();
?>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'mydatabase';

// Create connection
$conn = new mysqli($host, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Session start
session_start();

// Error messages array
$errors = [];

// Token expiration time (1 hour)
$expires = time() + 3600;

// Generate random token
function generateToken($length = 20) {
    $characters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';
    $token = '';
    for ($i = 0; $i < $length; $i++) {
        $token .= $characters[rand(0, strlen($characters) - 1)];
    }
    return $token;
}

// Reset password token
$token = generateToken();

// Email configuration
$email_config = array(
    'smtp' => 'smtp.example.com',
    'port' => 587,
    'username' => 'your_email@example.com',
    'password' => 'your_password'
);

if (isset($_POST['reset'])) {
    $email = mysqli_real_escape_string($conn, $_POST['email']);

    // Check if email exists in database
    $sql = "SELECT * FROM users WHERE email='$email'";
    $result = $conn->query($sql);
    
    if ($result->num_rows == 0) {
        array_push($errors, "Email not found");
    } else {
        // Generate and store token
        $sql_token = "INSERT INTO password_reset (email, token, expires) VALUES ('$email', '$token', '$expires')";
        $conn->query($sql_token);
        
        // Send email with reset link
        $to = $email;
        $subject = "Password Reset Request";
        $message = "You requested a password reset. Click the following link to reset your password:

http://example.com/reset-password.php?token=$token

If you did not request this, please ignore this email.";
        
        // Set mail headers
        $headers = "From: noreply@example.com\r
";
        $headers .= "Reply-To: noreply@example.com\r
";
        $headers .= "X-Mailer: PHP/" . phpversion();
        
        // Send email
        mail($to, $subject, $message, $headers);
        
        echo "Password reset link has been sent to your email address.";
    }
}

// Reset password form
?>

<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <?php if (!empty($errors)): ?>
        <?php foreach ($errors as $error): ?>
            <div style="color: red;"><?php echo $error ?></div><br>
        <?php endforeach; ?>
    <?php endif; ?>

    <form action="<?php echo $_SERVER['PHP_SELF'] ?>" method="post">
        <input type="email" name="email" placeholder="Enter your email" required><br><br>
        <button type="submit" name="reset">Reset Password</button>
    </form>

    <!-- Reset password page -->
<?php
if (isset($_GET['token'])) {
    $token = mysqli_real_escape_string($conn, $_GET['token']);
    
    // Check if token exists and is not expired
    $sql_check_token = "SELECT * FROM password_reset WHERE token='$token' AND expires > CURRENT_TIMESTAMP";
    $result_token = $conn->query($sql_check_token);
    
    if ($result_token->num_rows == 0) {
        die("Invalid or expired reset link.");
    }
?>

<form action="<?php echo $_SERVER['PHP_SELF'] ?>?token=<?php echo $token ?>" method="post">
    <input type="password" name="new_password" placeholder="Enter new password" required><br><br>
    <input type="password" name="confirm_password" placeholder="Confirm new password" required><br><br>
    <button type="submit" name="update">Update Password</button>
</form>

<?php
if (isset($_POST['update'])) {
    $new_password = mysqli_real_escape_string($conn, $_POST['new_password']);
    $confirm_password = mysqli_real_escape_string($conn, $_POST['confirm_password']);

    if ($new_password != $confirm_password) {
        die("Passwords do not match");
    }

    // Update password in users table
    $sql_update = "UPDATE users SET password=PASSWORD('$new_password') WHERE email='$email'";
    $conn->query($sql_update);

    // Delete token after reset
    $sql_delete_token = "DELETE FROM password_reset WHERE token='$token'";
    $conn->query($sql_delete_token);

    header("Location: login.php?success=password-reset");
}
?>

<?php } ?>

</body>
</html>

<?php
// Close database connection
$conn->close();
?>


<?php
// Database connection details
$host = 'localhost';
$dbUsername = 'root';
$dbPassword = '';
$dbName = 'mydatabase';

// Create database connection
$conn = mysqli_connect($host, $dbUsername, $dbPassword, $dbName);

// Check if connection failed
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to generate random token
function generateToken() {
    $token = bin2hex(random_bytes(16));
    return $token;
}

// Reset password function
function resetPassword($email, $newPassword, $token, $conn) {
    // Update the user's password in the database
    $hashPassword = password_hash($newPassword, PASSWORD_DEFAULT);
    
    $sql = "UPDATE users SET password = ?, reset_token = NULL WHERE email = ? AND reset_token = ?";
    
    $stmt = mysqli_prepare($conn, $sql);
    if ($stmt) {
        mysqli_stmt_bind_param($stmt, "sss", $hashPassword, $email, $token);
        mysqli_stmt_execute($stmt);
        $result = mysqli_stmt_affected_rows($stmt);
        
        if ($result > 0) {
            return true;
        }
    }
    
    return false;
}

// Forgot password function
function forgotPassword($email, $conn) {
    // Generate a random token
    $token = generateToken();
    
    // Check if email exists in database
    $sql = "SELECT id FROM users WHERE email = ?";
    
    $stmt = mysqli_prepare($conn, $sql);
    if ($stmt) {
        mysqli_stmt_bind_param($stmt, "s", $email);
        mysqli_stmt_execute($stmt);
        mysqli_stmt_store_result($stmt);
        
        if (mysqli_stmt_num_rows($stmt) > 0) {
            // Update the token in database
            $updateTokenSql = "UPDATE users SET reset_token = ? WHERE email = ?";
            
            $tokenStmt = mysqli_prepare($conn, $updateTokenSql);
            if ($tokenStmt) {
                mysqli_stmt_bind_param($tokenStmt, "ss", $token, $email);
                mysqli_stmt_execute($tokenStmt);
                
                // Send password reset link to user's email
                $resetLink = "http://example.com/reset-password.php?token=" . $token;
                $to = $email;
                $subject = "Password Reset Request";
                $message = "Please click the following link to reset your password: 
" . $resetLink;
                
                // Send email
                if (mail($to, $subject, $message)) {
                    return true;
                }
            }
        } else {
            // Email not found in database
            return false;
        }
    }
    
    return false;
}

// Example usage:

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = $_POST['email'];
    
    if (forgotPassword($email, $conn)) {
        echo "A password reset link has been sent to your email.";
    } else {
        echo "Email address not found in our records.";
    }
}

// Close database connection
mysqli_close($conn);
?>


<?php
// Get token from URL
$token = $_GET['token'];

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $newPassword = $_POST['password'];
    
    // Validate and update the password
    if (resetPassword($email, $newPassword, $token, $conn)) {
        echo "Your password has been reset successfully.";
    } else {
        echo "Invalid token or already used. Please request a new password reset.";
    }
}
?>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'mydatabase';

try {
    // Connect to database
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    die("Could not connect to the database: " . $e->getMessage());
}

// Check if form was submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get email from form
    $email = $_POST['email'];
    
    // Validate email format
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        header("Location: forgot_password_form.php?message=Invalid email format");
        exit();
    }
    
    // Check if email exists in database
    try {
        $stmt = $conn->prepare("SELECT id FROM users WHERE email=:email");
        $stmt->bindParam(':email', $email);
        $stmt->execute();
        
        if ($stmt->rowCount() == 0) {
            header("Location: forgot_password_form.php?message=Email not found in our records");
            exit();
        } else {
            // Generate a random token
            $token = bin2hex(random_bytes(16));
            
            // Set token expiration time (1 hour from now)
            $expires = date('Y-m-d H:i:s', strtotime('+1 hour'));
            
            // Insert token into database
            $stmt = $conn->prepare("INSERT INTO password_reset (email, token, expires) VALUES (:email, :token, :expires)");
            $stmt->bindParam(':email', $email);
            $stmt->bindParam(':token', $token);
            $stmt->bindParam(':expires', $expires);
            $stmt->execute();
            
            // Send email to user
            require 'PHPMailer/PHPMailer.php';
            require 'PHPMailer/Exception.php';
            require 'PHPMailer/OAuth.php';
            require 'PHPMailer/SMTP.php';
            
            $mail = new PHPMailer\PHPMailer\PHPMailer();
            
            try {
                $mail->isSMTP();
                $mail->Host = 'smtp.example.com'; // Replace with your SMTP server
                $mail->SMTPAuth = true;
                $mail->Username = 'your_email@example.com'; // Your email address
                $mail->Password = 'your_password'; // Your password
                $mail->SMTPSecure = PHPMailer\PHPMailer\PHPMailer::ENCRYPTION_SMTPS; // Enable TLS encryption, `PHPMailer::ENCRYPTION_STARTTLS` also accepted
                $mail->Port = 465; // TCP port to connect to
                
                $mail->setFrom('your_email@example.com', 'Your Name');
                $mail->addAddress($email, '');
                
                $mail->isHTML(true);
                
                $mail->Subject = 'Password Reset Request';
                $mail->Body    = "Please click the following link to reset your password: <br><br>
                                 http://example.com/reset_password.php?token=".$token;
                
                $mail->send();
                header("Location: forgot_password_form.php?message=Password reset email sent successfully");
            } catch (Exception $e) {
                header("Location: forgot_password_form.php?message=Error sending email. Please try again later.");
                exit();
            }
        }
    } catch(PDOException $e) {
        die("Could not execute database query: " . $e->getMessage());
    }
}

$conn = null;
?>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'mydatabase';

try {
    // Connect to database
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    die("Could not connect to the database: " . $e->getMessage());
}

// Check if token is provided
if (!isset($_GET['token'])) {
    header("Location: forgot_password_form.php?message=Invalid password reset link");
    exit();
}

$token = $_GET['token'];

try {
    // Check if token exists and hasn't expired
    $stmt = $conn->prepare("SELECT email, expires FROM password_reset WHERE token=:token");
    $stmt->bindParam(':token', $token);
    $stmt->execute();
    
    if ($stmt->rowCount() == 0) {
        header("Location: forgot_password_form.php?message=Invalid or expired password reset link");
        exit();
    } else {
        // Get user data
        $row = $stmt->fetch(PDO::FETCH_ASSOC);
        $email = $row['email'];
        $expires = $row['expires'];
        
        // Check if token has expired
        if (strtotime($expires) < time()) {
            header("Location: forgot_password_form.php?message=Password reset link has expired");
            exit();
        }
    }
} catch(PDOException $e) {
    die("Could not execute database query: " . $e->getMessage());
}

// Show password reset form
?>

<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <?php
    if (isset($_GET['message'])) {
        echo "<p>".$_GET['message']."</p>";
    }
    ?>
    
    <form action="reset_password.php?token=<?php echo $token; ?>" method="post">
        <h2>Reset Password</h2>
        <input type="password" name="new_password" placeholder="Enter new password" required>
        <input type="password" name="confirm_password" placeholder="Confirm new password" required>
        <button type="submit">Reset Password</button>
    </form>

<?php
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get new password from form
    $new_password = $_POST['new_password'];
    $confirm_password = $_POST['confirm_password'];
    
    // Validate passwords
    if ($new_password != $confirm_password) {
        header("Location: reset_password.php?token=".$token."&message=Passwords do not match");
        exit();
    }
    
    // Check password strength
    if (strlen($new_password) < 8 || !preg_match('/[0-9]/', $new_password) || !preg_match('/[^A-Za-z0-9]/', $new_password)) {
        header("Location: reset_password.php?token=".$token."&message=Password must be at least 8 characters long and contain at least one number and one special character");
        exit();
    }
    
    // Hash the new password
    $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);
    
    try {
        // Update user's password in database
        $stmt = $conn->prepare("UPDATE users SET password=:password WHERE email=:email");
        $stmt->bindParam(':password', $hashed_password);
        $stmt->bindParam(':email', $email);
        $stmt->execute();
        
        // Delete the reset token from database
        $stmt = $conn->prepare("DELETE FROM password_reset WHERE token=:token");
        $stmt->bindParam(':token', $token);
        $stmt->execute();
        
        header("Location: forgot_password_form.php?message=Password has been successfully reset");
    } catch(PDOException $e) {
        die("Could not update password: " . $e->getMessage());
    }
}

$conn = null;
?>
</body>
</html>


<?php
// Configuration
$host = 'localhost';
$username = 'root';
$password = '';
$db_name = 'your_database';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

if (isset($_POST['email']) && !empty($_POST['email'])) {
    // Sanitize email input
    $email = mysqli_real_escape_string($conn, $_POST['email']);

    // Check if email exists in database
    $sql = "SELECT id FROM users WHERE email = '$email'";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) == 0) {
        die("Email not found. Please try again.");
    }

    // Generate reset token
    $token = bin2hex(random_bytes(16));
    $expires = date('Y-m-d H:i:s', time() + 3600); // Token expires after 1 hour

    // Update database with reset token and expiration time
    $update_sql = "UPDATE users SET reset_token = '$token', reset_expires = '$expires' WHERE email = '$email'";
    mysqli_query($conn, $update_sql);

    // Send reset password email
    $to = $email;
    $subject = "Password Reset Request";
    $message = "Please click the following link to reset your password: 

 http://your-site.com/reset_password.php?token=$token";
    $headers = "From: noreply@your-site.com";

    if (mail($to, $subject, $message, $headers)) {
        echo "A password reset link has been sent to your email.";
    } else {
        die("Failed to send password reset email.");
    }
} else {
    die("Please enter a valid email address.");
}

mysqli_close($conn);
?>


<?php
// Configuration
$host = 'localhost';
$username = 'root';
$password = '';
$db_name = 'your_database';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

if (isset($_GET['token']) && !empty($_GET['token'])) {
    // Get token from URL
    $token = mysqli_real_escape_string($conn, $_GET['token']);

    // Check if token is valid and not expired
    $sql = "SELECT id, reset_expires FROM users WHERE reset_token = '$token'";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) == 0) {
        die("Invalid or expired password reset link.");
    }

    // Check expiration time
    $row = mysqli_fetch_assoc($result);
    $expires = $row['reset_expires'];

    if (time() > strtotime($expires)) {
        die("Password reset link has expired. Please request a new one.");
    }
} else {
    die("No token provided. Please request a password reset.");
}

// If form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Sanitize inputs
    $password = mysqli_real_escape_string($conn, $_POST['password']);
    $confirm_password = mysqli_real_escape_string($conn, $_POST['confirm_password']);

    if ($password != $confirm_password) {
        die("Passwords do not match. Please try again.");
    }

    // Update password in database
    $new_password = password_hash($password, PASSWORD_DEFAULT);
    $update_sql = "UPDATE users SET password = '$new_password', reset_token = '', reset_expires = '' WHERE reset_token = '$token'";
    mysqli_query($conn, $update_sql);

    echo "Password has been successfully updated!";
}

// If form not submitted yet
?>

<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <h2>Reset Password</h2>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>?token=<?php echo $token; ?>" method="post">
        New Password: <input type="password" name="password" required><br><br>
        Confirm Password: <input type="password" name="confirm_password" required><br><br>
        <button type="submit">Reset Password</button>
    </form>
</body>
</html>

<?php
mysqli_close($conn);
?>


<?php
// Include database connection
include 'db_connection.php';

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email_username = mysqli_real_escape_string($conn, $_POST['email_username']);

    // Check if email or username exists in the database
    $sql = "SELECT id, email FROM users WHERE email='$email_username' OR username='$email_username'";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) == 1) {
        // Generate reset token
        $token = md5(uniqid(rand(), true));
        
        // Insert token into database
        $sql = "INSERT INTO password_reset (user_id, token) VALUES ('$id', '$token')";
        mysqli_query($conn, $sql);

        // Send email with reset link
        $to = $email;
        $subject = "Password Reset Request";
        $message = "Please click the following link to reset your password: http://yourwebsite.com/reset_password.php?token=$token";
        
        if (mail($to, $subject, $message)) {
            echo "An email has been sent with instructions to reset your password.";
        } else {
            echo "There was an error sending the email. Please try again.";
        }
    } else {
        echo "Email or username does not exist in our records.";
    }
}
?>


<?php
// Include database connection
include 'db_connection.php';

$token = $_GET['token'];

// Check if token exists and is valid
$sql = "SELECT id, user_id FROM password_reset WHERE token='$token'";
$result = mysqli_query($conn, $sql);

if (mysqli_num_rows($result) == 1) {
    // Show reset form
    ?>
    <html>
    <head>
        <title>Reset Password</title>
    </head>
    <body>
        <h2>Reset Password</h2>
        <form action="reset_password.php" method="post">
            <label for="new_password">New Password:</label><br>
            <input type="password" id="new_password" name="new_password"><br><br>
            <label for="confirm_password">Confirm Password:</label><br>
            <input type="password" id="confirm_password" name="confirm_password"><br><br>
            <input type="hidden" name="token" value="<?php echo $token; ?>">
            <input type="submit" value="Reset Password">
        </form>
    </body>
    </html>
    <?php
} else {
    die("Invalid or expired reset link.");
}
?>

<?php
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $new_password = mysqli_real_escape_string($conn, $_POST['new_password']);
    $confirm_password = mysqli_real_escape_string($conn, $_POST['confirm_password']);
    $token = mysqli_real_escape_string($conn, $_POST['token']);

    if ($new_password != $confirm_password) {
        die("Passwords do not match.");
    }

    // Update the user's password
    $sql = "SELECT user_id FROM password_reset WHERE token='$token'";
    $result = mysqli_query($conn, $sql);
    $row = mysqli_fetch_assoc($result);

    $user_id = $row['user_id'];
    $new_password_hashed = md5($new_password); // Use a stronger hashing method in production

    $update_sql = "UPDATE users SET password='$new_password_hashed' WHERE id='$user_id'";
    mysqli_query($conn, $update_sql);

    // Delete the reset token
    $delete_sql = "DELETE FROM password_reset WHERE token='$token'";
    mysqli_query($conn, $delete_sql);

    echo "Password has been updated successfully. Please login with your new password.";
}
?>


<?php
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "myDB";

// Create connection
$conn = mysqli_connect($servername, $username, $password, $dbname);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}
?>


<?php
// Database configuration
$host = 'localhost';
$username_db = 'your_username';
$password_db = 'your_password';
$dbname = 'your_database';

// Create connection
$conn = new mysqli($host, $username_db, $password_db, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to generate a random password
function generateNewPassword() {
    // Length of the password
    $length = 8;
    
    // Possible characters in the password
    $chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^&*()';
    $new_password = substr(str_shuffle($chars), 0, $length);
    return $new_password;
}

// Check if form was submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get email or username from the form
    $email = $_POST['email'];
    $username = $_POST['username'];
    
    try {
        // Prepare SQL query to select user based on email or username
        $stmt = $conn->prepare("SELECT * FROM users WHERE email=? OR username=?");
        $stmt->bind_param('ss', $email, $username);
        $stmt->execute();
        
        // Get result
        $result = $stmt->get_result();
        
        if ($result->num_rows == 1) {
            // User exists, generate new password
            $new_password = generateNewPassword();
            
            // Update database with new password
            $hash = md5($new_password); // You should use a stronger hashing algorithm in production (e.g., password_hash())
            $update_stmt = $conn->prepare("UPDATE users SET password=? WHERE email=? OR username=?");
            $update_stmt->bind_param('sss', $hash, $email, $username);
            $update_stmt->execute();
            
            // Send new password to user's email
            $to = $email;
            $subject = "New Password Request";
            $message = "Dear User,

Your new password is: " . $new_password . "

Please login and change your password immediately.

Best regards,
The Admin Team";
            
            // Set headers
            $headers = 'From: admin@example.com' . "\r
" .
                       'Reply-To: admin@example.com' . "\r
" .
                       'X-Mailer: PHP/' . phpversion();
            
            mail($to, $subject, $message, $headers);
            
            echo "A new password has been sent to your email address.";
        } else {
            echo "Email or username not found in our database.";
        }
    } catch (mysqli_sql_exception $e) {
        echo "Error: " . $e->getMessage();
    } finally {
        // Close statements
        $stmt->close();
        $update_stmt->close();
        $conn->close();
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <h2>Forgot Password</h2>
    <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
        <label for="email">Email or Username:</label><br>
        <input type="text" id="email" name="email"><br><br>
        <input type="submit" value="Submit">
    </form>
</body>
</html>


<?php
// Database connection details
$host = 'localhost';
$dbname = 'mydatabase';
$username = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = $_POST['email'];

    // Check if email exists
    $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
    $stmt->execute([$email]);
    $user = $stmt->fetch(PDO::FETCH_ASSOC);

    if ($user) {
        // Generate token and expiration time
        $token = bin2hex(random_bytes(16));
        $expires = date('Y-m-d H:i:s', strtotime('+1 hour'));

        // Store token in database
        $stmt = $conn->prepare("UPDATE users SET reset_token = ?, reset_expires = ? WHERE id = ?");
        $stmt->execute([$token, $expires, $user['id']]);

        // Send email with reset link
        $to = $email;
        $subject = "Password Reset Request";
        $message = "Please click the following link to reset your password: http://example.com/reset_password.php?token=$token";
        $headers = "From: no-reply@example.com";

        mail($to, $subject, $message, $headers);
        
        echo "Check your email for a password reset link.";
    } else {
        echo "Email not found. Please try again.";
    }
}
?>


<?php
session_start();

if (!isset($_GET['token'])) {
    die("No token provided.");
}

$token = $_GET['token'];

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

// Check token validity
$stmt = $conn->prepare("SELECT id FROM users WHERE reset_token = ? AND reset_expires > NOW()");
$stmt->execute([$token]);
$user = $stmt->fetch(PDO::FETCH_ASSOC);

if (!$user) {
    die("Invalid or expired token.");
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <h2>Reset Password</h2>
    <form action="reset_password.php" method="post">
        <input type="password" name="new_password" placeholder="New password" required>
        <input type="password" name="confirm_password" placeholder="Confirm password" required>
        <button type="submit">Set New Password</button>
        <input type="hidden" name="token" value="<?php echo $token; ?>">
    </form>
</body>
</html>

<?php
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    if (isset($_POST['new_password'], $_POST['confirm_password'])) {
        $newPassword = $_POST['new_password'];
        $confirmPassword = $_POST['confirm_password'];
        $token = $_POST['token'];

        if ($newPassword !== $confirmPassword) {
            die("Passwords do not match.");
        }

        // Password complexity check
        if (strlen($newPassword) < 8 || !preg_match('/[A-Z]/', $newPassword) || !preg_match('/\d/', $newPassword)) {
            die("Password must be at least 8 characters with one uppercase and one number.");
        }

        // Hash the new password
        $hashedPassword = password_hash($newPassword, PASSWORD_BCRYPT);

        // Update the password
        $stmt = $conn->prepare("UPDATE users SET password = ?, reset_token = NULL, reset_expires = NULL WHERE reset_token = ?");
        $stmt->execute([$hashedPassword, $token]);

        echo "Password updated successfully!";
    }
}
?>


<?php
session_start();
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'mydatabase';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get email from form
    $email = trim($_POST['email']);
    
    // Validate email format
    if (empty($email)) {
        $_SESSION['message'] = "Please enter your email address.";
        header("Location: forgot_password.php");
        exit();
    }
    
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        $_SESSION['message'] = "Invalid email format.";
        header("Location: forgot_password.php");
        exit();
    }
    
    // Check if user exists in database
    $sql = "SELECT id, username FROM users WHERE email = ?";
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, "s", $email);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);
    
    if (mysqli_num_rows($result) == 0) {
        $_SESSION['message'] = "No account found with this email address.";
        header("Location: forgot_password.php");
        exit();
    }
    
    // Generate reset token
    $token = bin2hex(random_bytes(16));
    $expires = date('Y-m-d H:i:s', time() + 3600); // Token expires after 1 hour
    
    // Store token in database
    $sql = "INSERT INTO password_resets (user_id, token, expires) VALUES (?, ?, ?)";
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, "iss", $id, $token, $expires);
    
    if (!mysqli_stmt_execute($stmt)) {
        $_SESSION['message'] = "An error occurred. Please try again.";
        header("Location: forgot_password.php");
        exit();
    }
    
    // Send reset email
    $to = $email;
    $subject = "Password Reset Request";
    $headers = "From: yourwebsite@example.com\r
";
    $headers .= "MIME-Version: 1.0\r
";
    $headers .= "Content-Type: text/html; charset=UTF-8\r
";
    
    $message = "<html>";
    $message .= "<p>We received a password reset request for your account.</p>";
    $message .= "<p>Click the following link to reset your password:</p>";
    $message .= "<a href='http://example.com/reset_password.php?token=" . $token . "'>Reset Password</a>";
    $message .= "<p>If you did not request a password reset, please ignore this email.</p>";
    $message .= "</html>";
    
    if (!mail($to, $subject, $message, $headers)) {
        $_SESSION['message'] = "An error occurred while sending the reset email. Please try again.";
        header("Location: forgot_password.php");
        exit();
    }
    
    $_SESSION['message'] = "We've sent a password reset link to your email address.";
    header("Location: forgot_password.php");
    exit();
}
?>


<?php
session_start();
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'mydatabase';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Check if token is provided
if (!isset($_GET['token'])) {
    $_SESSION['message'] = "Invalid reset link.";
    header("Location: forgot_password.php");
    exit();
}

$token = $_GET['token'];

// Check if token exists in database and hasn't expired
$sql = "SELECT user_id FROM password_resets WHERE token = ? AND expires > NOW()";
$stmt = mysqli_prepare($conn, $sql);
mysqli_stmt_bind_param($stmt, "s", $token);
mysqli_stmt_execute($stmt);
$result = mysqli_stmt_get_result($stmt);

if (mysqli_num_rows($result) == 0) {
    $_SESSION['message'] = "Invalid or expired reset link.";
    header("Location: forgot_password.php");
    exit();
}

// If form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $password = trim($_POST['password']);
    $confirmPassword = trim($_POST['confirm_password']);
    
    if ($password != $confirmPassword) {
        $_SESSION['message'] = "Passwords do not match.";
        header("Location: reset_password.php?token=" . $token);
        exit();
    }
    
    // Validate password complexity
    if (strlen($password) < 8) {
        $_SESSION['message'] = "Password must be at least 8 characters long.";
        header("Location: reset_password.php?token=" . $token);
        exit();
    }
    
    // Update user's password
    $hashedPassword = password_hash($password, PASSWORD_BCRYPT);
    
    $sql = "UPDATE users SET password = ? WHERE id = ?";
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, "si", $hashedPassword, $userId);
    mysqli_stmt_execute($stmt);
    
    // Delete the reset token
    $sql = "DELETE FROM password_resets WHERE token = ?";
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, "s", $token);
    mysqli_stmt_execute($stmt);
    
    $_SESSION['message'] = "Your password has been reset successfully!";
    header("Location: login.php");
    exit();
}

// Show reset form
?>
<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <?php if (isset($_SESSION['message'])) { ?>
        <div><?php echo $_SESSION['message']; ?></div>
        <?php unset($_SESSION['message']); ?>
    <?php } ?>

    <h2>Reset Password</h2>
    <form action="reset_password.php?token=<?php echo $token; ?>" method="POST">
        <input type="password" name="password" placeholder="Enter new password" required>
        <input type="password" name="confirm_password" placeholder="Confirm new password" required>
        <button type="submit">Reset Password</button>
    </form>
</body>
</html>


<?php
// Database connection details
$host = "localhost";
$user = "username";
$password = "password";
$db_name = "database";

// Connect to database
$conn = new mysqli($host, $user, $password, $db_name);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

if (isset($_POST['submit'])) {
    // Get and validate email
    $email = $_POST['email'];
    
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        header("Location: forgot_password_form.php?error=Invalid%20Email");
        exit();
    }

    // Check if email exists in database
    $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
    $stmt->bind_param("s", $email);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows === 0) {
        header("Location: forgot_password_form.php?error=Email%20not%20found");
        exit();
    }

    // Generate reset token
    $token = bin2hex(random_bytes(16));
    
    // Insert token and expiration time into database
    $expiration_time = date('Y-m-d H:i:s', strtotime('+1 hour'));
    $stmt = $conn->prepare("INSERT INTO password_reset (user_id, token, expires) VALUES (?, ?, ?)");
    $row = $result->fetch_assoc();
    $stmt->bind_param("iss", $row['id'], $token, $expiration_time);
    
    if (!$stmt->execute()) {
        header("Location: forgot_password_form.php?error=Error%20generating%20reset%20link");
        exit();
    }

    // Send email
    $to = $email;
    $subject = "Password Reset Request";
    $message = "
        <html>
            <head></head>
            <body>
                <p>Please click the following link to reset your password:</p>
                <a href='http://example.com/reset_password.php?token=$token'>Reset Password</a>
                <br><br>
                <small>This link will expire in 1 hour.</small>
            </body>
        </html>
    ";
    
    $headers = "MIME-Version: 1.0" . "\r
";
    $headers .= "Content-type: text/html; charset=UTF-8" . "\r
";
    $headers .= "From: admin@example.com" . "\r
";

    if (mail($to, $subject, $message, $headers)) {
        header("Location: login.php?success=Password%20reset%20link%20sent");
    } else {
        header("Location: forgot_password_form.php?error=Error%20sending%20email");
    }

    $stmt->close();
}

$conn->close();
?>


<?php
// Database connection details
$host = "localhost";
$user = "username";
$password = "password";
$db_name = "database";

// Connect to database
$conn = new mysqli($host, $user, $password, $db_name);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

session_start();

if (!isset($_GET['token'])) {
    header("Location: forgot_password_form.php?error=Invalid%20request");
    exit();
}

$token = $_GET['token'];

// Check if token exists and is valid
$stmt = $conn->prepare("SELECT user_id, expires FROM password_reset WHERE token = ?");
$stmt->bind_param("s", $token);
$stmt->execute();
$result = $stmt->get_result();

if ($result->num_rows === 0) {
    header("Location: forgot_password_form.php?error=Invalid%20or%20expired%20link");
    exit();
}

$row = $result->fetch_assoc();

// Check if token has expired
$expires = $row['expires'];
$current_time = date('Y-m-d H:i:s');
if ($current_time > $expires) {
    header("Location: forgot_password_form.php?error=Reset%20link%20has%20expired");
    exit();
}

// If token is valid, display reset form
?>
<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <h2>Reset Password</h2>
    <?php
        // Display any error messages here
        if (isset($_SESSION['error'])) {
            echo "<p style='color: red;'>".$_SESSION['error']."</p>";
            unset($_SESSION['error']);
        }
    ?>
    <form action="reset_password.php" method="post">
        <input type="password" name="new_password" placeholder="Enter new password" required>
        <br><br>
        <input type="password" name="confirm_password" placeholder="Confirm new password" required>
        <br><br>
        <input type="hidden" name="token" value="<?php echo $token; ?>">
        <input type="submit" name="reset" value="Reset Password">
    </form>
</body>
</html>

<?php
if (isset($_POST['reset'])) {
    // Validate new password
    $new_password = $_POST['new_password'];
    $confirm_password = $_POST['confirm_password'];
    
    if ($new_password !== $confirm_password) {
        $_SESSION['error'] = "Passwords do not match";
        header("Location: reset_password.php?token=$token");
        exit();
    }

    // Update password in database
    $user_id = $row['user_id'];
    $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);

    $stmt = $conn->prepare("UPDATE users SET password = ? WHERE id = ?");
    $stmt->bind_param("si", $hashed_password, $user_id);
    
    if ($stmt->execute()) {
        // Invalidate the reset token
        $stmt = $conn->prepare("DELETE FROM password_reset WHERE token = ?");
        $stmt->bind_param("s", $token);
        $stmt->execute();
        
        header("Location: login.php?success=Password%20reset%20successful");
    } else {
        $_SESSION['error'] = "Error resetting password";
        header("Location: reset_password.php?token=$token");
    }

    $stmt->close();
}

$conn->close();
?>


<?php
// config.php - Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$db_name = 'your_database';

$conn = mysqli_connect($host, $username, $password, $db_name);
if (!$conn) {
    die('Connection failed: ' . mysqli_error());
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Forgot Password</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
</head>
<body class="bg-light">
    <div class="container mt-5">
        <h2 class="text-center mb-4">Forgot Password</h2>
        <form action="forgot_password.php" method="post" class="border p-3 bg-white rounded">
            <div class="form-group">
                <label for="email">Email or Username:</label>
                <input type="text" class="form-control" id="email" name="email_or_username" required>
            </div>
            <button type="submit" class="btn btn-primary">Reset Password</button>
        </form>
    </div>
</body>
</html>

<?php
// forgot_password.php - Handle password reset request
session_start();
require_once 'config.php';

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email_or_username = mysqli_real_escape_string($conn, $_POST['email_or_username']);
    
    // Check if user exists in database
    $sql = "SELECT id, email FROM users WHERE email='$email_or_username' OR username='$email_or_username'";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) > 0) {
        $user = mysqli_fetch_assoc($result);
        
        // Generate random reset token
        $reset_token = bin2hex(random_bytes(16));
        $expires = date('Y-m-d H:i:s', time() + 3600); // Token expires in 1 hour
        
        // Store token in database
        $sql = "INSERT INTO password_reset (user_id, reset_token, expires) 
                VALUES (?, ?, ?)";
        
        $stmt = mysqli_prepare($conn, $sql);
        mysqli_stmt_bind_param($stmt, "iss", $user['id'], $reset_token, $expires);
        mysqli_stmt_execute($stmt);
        
        // Send email with reset link
        $to = $user['email'];
        $subject = 'Password Reset Request';
        $message = 'Please click the following link to reset your password: http://your-site.com/reset_password.php?token=' . $reset_token;
        $headers = 'From: webmaster@your-site.com' . "\r
" .
                   'Reply-To: webmaster@your-site.com' . "\r
" .
                   'X-Mailer: PHP/' . phpversion();
        
        mail($to, $subject, $message, $headers);
        
        echo "<script>alert('Password reset email has been sent!'); window.location.href='index.php';</script>";
    } else {
        echo "<script>alert('User not found!');</script>";
    }
}
?>

<!DOCTYPE html>
<html lang="en">
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Reset Password</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
</head>
<body class="bg-light">
    <div class="container mt-5">
        <?php
        // reset_password.php - Handle password reset
        session_start();
        require_once 'config.php';

        if (isset($_GET['token'])) {
            $reset_token = mysqli_real_escape_string($conn, $_GET['token']);
            
            // Check token validity and expiration
            $sql = "SELECT user_id FROM password_reset 
                    WHERE reset_token='$reset_token' AND expires > NOW()";
            $result = mysqli_query($conn, $sql);
            
            if (mysqli_num_rows($result) == 1) {
                $user_id = mysqli_fetch_assoc($result)['user_id'];
        ?>
        
        <form action="reset_password.php" method="post" class="border p-3 bg-white rounded">
            <div class="form-group">
                <label for="new_password">New Password:</label>
                <input type="password" class="form-control" id="new_password" name="new_password" required>
            </div>
            <div class="form-group">
                <label for="confirm_password">Confirm Password:</label>
                <input type="password" class="form-control" id="confirm_password" name="confirm_password" required>
            </div>
            <button type="submit" class="btn btn-primary">Change Password</button>
        </form>

        <?php
                if ($_SERVER["REQUEST_METHOD"] == "POST") {
                    $new_password = $_POST['new_password'];
                    $confirm_password = $_POST['confirm_password'];

                    if ($new_password != $confirm_password) {
                        echo "<script>alert('Passwords do not match!');</script>";
                        exit();
                    }

                    // Hash the new password
                    $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);

                    // Update user's password in database
                    $sql = "UPDATE users SET password='$hashed_password' WHERE id=$user_id";
                    mysqli_query($conn, $sql);

                    // Delete the reset token
                    $sql = "DELETE FROM password_reset WHERE reset_token='$reset_token'";
                    mysqli_query($conn, $sql);

                    echo "<script>alert('Password has been changed!'); window.location.href='index.php';</script>";
                }
            } else {
                echo "<h3>Invalid or expired reset token!</h3>";
            }
        } else {
            echo "<h3>No reset token provided!</h3>";
        }
        mysqli_close($conn);
        ?>
    </div>
</body>
</html>


<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <?php
    // Show any error or success messages here
    if (isset($_GET['error'])) {
        echo "<p style='color:red'>" . htmlspecialchars($_GET['error']) . "</p>";
    }
    if (isset($_GET['success'])) {
        echo "<p style='color:green'>" . htmlspecialchars($_GET['success']) . "</p>";
    }
    ?>
    
    <form action="forgot_password.php" method="post">
        <h2>Forgot Password</h2>
        <input type="email" name="email" placeholder="Enter your email address" required>
        <button type="submit">Send Reset Link</button>
    </form>
</body>
</html>


<?php
session_start();

// Database configuration
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    die("Could not connect to the database: " . $e->getMessage());
}

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = $_POST['email'];
    
    // Check if email exists in the database
    $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
    $stmt->execute([$email]);
    
    if ($stmt->rowCount() > 0) {
        // Generate a unique token
        $token = bin2hex(random_bytes(32));
        
        // Calculate expiration time (e.g., 1 hour from now)
        $expiresAt = date('Y-m-d H:i:s', strtotime('+1 hour'));
        
        // Update the user's record with the new token and expiration time
        $updateStmt = $conn->prepare("UPDATE users SET reset_token = ?, expires_at = ? WHERE email = ?");
        $updateStmt->execute([$token, $expiresAt, $email]);
        
        // Send the password reset link to the user's email
        $resetLink = "http://$_SERVER[HTTP_HOST]/reset_password.php?token=$token";
        $subject = 'Password Reset Request';
        $message = "Please click on the following link to reset your password:
$resetLink

If you did not request this, please ignore this email.";
        
        if (mail($email, $subject, $message)) {
            header("Location: forgot_password.php?success=Reset+link+sent+to+your+email.");
            exit();
        } else {
            echo "There was an error sending the reset link. Please try again later.";
        }
    } else {
        // Email doesn't exist
        header("Location: forgot_password.php?error=Email+not+found.");
        exit();
    }
}
?>


<?php
session_start();

// Database configuration
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    die("Could not connect to the database: " . $e->getMessage());
}

// Check if token is provided
if (!isset($_GET['token'])) {
    header("Location: forgot_password.php?error=No+reset+token.");
    exit();
}

$token = $_GET['token'];
$userID = null;

// Verify the token and check its validity (not expired)
$stmt = $conn->prepare("SELECT id, reset_token, expires_at FROM users WHERE reset_token = ? AND expires_at > NOW()");
$stmt->execute([$token]);
$result = $stmt->fetch();

if (!$result) {
    header("Location: forgot_password.php?error=Invalid+or+expired+reset+link.");
    exit();
}

$userID = $result['id'];

// Process the password reset
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $newPassword = $_POST['password'];
    $confirmPassword = $_POST['confirm_password'];
    
    if ($newPassword !== $confirmPassword) {
        die("Passwords do not match. Please try again.");
    }
    
    // Hash the password
    $hashedPassword = password_hash($newPassword, PASSWORD_DEFAULT);
    
    // Update the user's password and clear the reset token
    $updateStmt = $conn->prepare("UPDATE users SET password = ?, reset_token = NULL WHERE id = ?");
    $updateStmt->execute([$hashedPassword, $userID]);
    
    // Destroy the session or unset any tokens
    $_SESSION = array();
    session_destroy();
    
    header("Location: login.php?success=Password+reset+successful.");
    exit();
}

?>

<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <h2>Reset Your Password</h2>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <input type="password" name="password" placeholder="New Password" required>
        <input type="password" name="confirm_password" placeholder="Confirm New Password" required>
        <button type="submit">Reset Password</button>
    </form>
</body>
</html>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    die('Connection Failed: ' . $e->getMessage());
}

// Function to handle password reset request
function forgotPassword($email, $conn) {
    // Check if the email exists in the database
    $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
    $stmt->execute([$email]);
    $user = $stmt->fetch(PDO::FETCH_ASSOC);

    if ($user) {
        // Generate a random token
        $token = bin2hex(random_bytes(16));
        $expires = date('Y-m-d H:i:s', strtotime('+1 hour'));

        // Store the token in the database
        $stmt = $conn->prepare("INSERT INTO password_reset (user_id, token, expires) VALUES (?, ?, ?)");
        $stmt->execute([$user['id'], $token, $expires]);

        // Send reset email
        $resetLink = "http://yourdomain.com/reset-password.php?token=" . $token;
        sendResetEmail($email, $resetLink);
    } else {
        return 'Email not found';
    }
}

// Function to send reset email
function sendResetEmail($email, $resetLink) {
    $to = $email;
    $subject = "Password Reset Request";
    $message = "Please click the following link to reset your password: 

" . $resetLink;
    $headers = 'From: your_email@example.com' . "\r
" .
               'Reply-To: your_email@example.com' . "\r
" .
               'X-Mailer: PHP/' . phpversion();

    if (mail($to, $subject, $message, $headers)) {
        return true;
    } else {
        return false;
    }
}

// Function to reset password
function resetPassword($token, $newPassword, $conn) {
    // Check if the token exists and hasn't expired
    $stmt = $conn->prepare("SELECT user_id FROM password_reset WHERE token = ? AND expires > NOW()");
    $stmt->execute([$token]);
    $reset = $stmt->fetch(PDO::FETCH_ASSOC);

    if ($reset) {
        // Update the user's password
        $hash = password_hash($newPassword, PASSWORD_DEFAULT);
        $stmt = $conn->prepare("UPDATE users SET password = ? WHERE id = ?");
        $stmt->execute([$hash, $reset['user_id']]);

        // Delete the reset token
        $stmt = $conn->prepare("DELETE FROM password_reset WHERE token = ?");
        $stmt->execute([$token]);
    } else {
        return 'Invalid or expired token';
    }
}

// Example usage:
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    if (isset($_POST['email'])) {
        // Handle forgot password request
        $result = forgotPassword($_POST['email'], $conn);
        if ($result === true) {
            echo 'An email has been sent with instructions to reset your password.';
        } else {
            echo $result;
        }
    }
}
?>


<?php
if (isset($_GET['token']) && isset($_POST['new_password'])) {
    // Validate and update password
    $token = $_GET['token'];
    $newPassword = $_POST['new_password'];
    try {
        $result = resetPassword($token, $newPassword, $conn);
        if ($result === true) {
            echo 'Password has been successfully updated!';
        } else {
            echo $result;
        }
    } catch(PDOException $e) {
        die('Error: ' . $e->getMessage());
    }
} elseif (isset($_GET['token'])) {
    // Show password reset form
?>
<form action="reset-password.php?token=<?= $_GET['token'] ?>" method="post">
    <input type="password" name="new_password" placeholder="Enter new password" required>
    <button type="submit">Reset Password</button>
</form>
<?php
} else {
    // Invalid request
    die('Invalid request');
}
?>


<?php
// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$db_name = 'mydatabase';

// Connect to the database
$conn = mysqli_connect($host, $username, $password, $db_name);

// Check if connection was successful
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to handle forgot password request
function forgotPassword($email) {
    global $conn;
    
    // Check if email exists in the database
    $sql = "SELECT * FROM users WHERE email = ?";
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, "s", $email);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);
    
    if (mysqli_num_rows($result) == 0) {
        return "Email not found!";
    }
    
    // Generate a random token
    $token = md5(rand());
    
    // Update the user's record with the new token and reset time
    $sql = "UPDATE users SET reset_token = ?, reset_time = NOW() WHERE email = ?";
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, "ss", $token, $email);
    mysqli_stmt_execute($stmt);
    
    // Send the password reset link to the user's email
    $resetLink = "http://yourwebsite.com/reset-password.php?token=" . $token;
    $to = $email;
    $subject = "Password Reset Request";
    $message = "Please click on the following link to reset your password: 
" . $resetLink;
    $headers = "From: noreply@yourwebsite.com\r
";
    
    if (mail($to, $subject, $message, $headers)) {
        return "Password reset email has been sent!";
    } else {
        return "Failed to send password reset email!";
    }
}

// Function to handle password reset
function resetPassword($token, $new_password) {
    global $conn;
    
    // Check if token exists and hasn't expired (assuming 1 hour expiration)
    $sql = "SELECT * FROM users WHERE reset_token = ? AND reset_time > NOW() - INTERVAL 1 HOUR";
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, "s", $token);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);
    
    if (mysqli_num_rows($result) == 0) {
        return "Invalid or expired token!";
    }
    
    // Update the user's password
    $sql = "UPDATE users SET password = ?, reset_token = NULL, reset_time = NULL WHERE reset_token = ?";
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, "ss", $new_password, $token);
    mysqli_stmt_execute($stmt);
    
    return "Password has been successfully updated!";
}

// Close database connection
mysqli_close($conn);
?>


<?php
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = $_POST['email'];
    echo forgotPassword($email);
}
?>


<?php
if (isset($_GET['token'])) {
    $token = $_GET['token'];
    
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        $new_password = $_POST['new_password'];
        echo resetPassword($token, $new_password);
    }
}
?>


<?php
session_start();
include('config.php'); // Include your database configuration

if (isset($_GET['token'])) {
    $token = $_GET['token'];
    
    // Check if token exists and is valid
    $sql = "SELECT id, user_id FROM password_reset WHERE token=? AND expires > NOW()";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param('s', $token);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows == 0) {
        die("Invalid or expired token.");
    }

    // Store user ID in session
    $row = $result->fetch_assoc();
    $_SESSION['reset_user_id'] = $row['user_id'];
    
    // Display password reset form
    ?>

    <html>
    <head>
        <title>Reset Password</title>
    </head>
    <body>
        <h2>Reset Password</h2>
        <form method="post" action="reset.php">
            <input type="password" name="new_password" placeholder="Enter new password" required>
            <br><br>
            <button type="submit">Change Password</button>
        </form>
    </body>
    </html>

    <?php
} elseif (isset($_POST['new_password'])) {
    // Update password
    if (!isset($_SESSION['reset_user_id'])) {
        die("Session expired. Please request a new password reset.");
    }

    $password = $_POST['new_password'];
    $user_id = $_SESSION['reset_user_id'];

    // Hash the password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

    // Update user password
    $sql = "UPDATE users SET password=? WHERE id=?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param('si', $hashed_password, $user_id);
    $stmt->execute();

    // Delete reset token
    $sql = "DELETE FROM password_reset WHERE user_id=?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param('i', $user_id);
    $stmt->execute();

    echo "Password updated successfully!";
    session_unset();
} else {
    die("Invalid request.");
}
?>


<?php
session_start();
include('config.php'); // Include your database configuration

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = mysqli_real_escape_string($conn, $_POST['email']);
    
    // Check if email exists in the database
    $sql = "SELECT id FROM users WHERE email='$email'";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) > 0) {
        // Generate a unique reset token and expiration time
        $resetToken = bin2hex(random_bytes(16));
        $expires = date('Y-m-d H:i:s', strtotime('+1 hour'));
        
        // Store the reset token in the database
        $tokenSql = "INSERT INTO password_resets (user_id, token, expires) 
                    VALUES (" . mysqli_insert_id($conn) . ", '$resetToken', '$expires')";
        mysqli_query($conn, $tokenSql);
        
        // Send the reset email
        $to = $email;
        $subject = "Reset Your Password";
        $message = "
            <html>
                <body>
                    <p>Hello,</p>
                    <p>You have requested to reset your password. Click the link below to set a new password:</p>
                    <a href='".SITE_URL."reset-password.php?token=".$resetToken."' style='color:blue;'>Reset Password</a><br><br>
                    <small>This link will expire in 1 hour.</small>
                </body>
            </html>
        ";
        
        $headers = "MIME-Version: 1.0\r
";
        $headers .= "Content-type: text/html; charset=UTF-8\r
";
        $headers .= "From: ".SITE_NAME."<".MAIL_FROM.">";
        
        if (mail($to, $subject, $message, $headers)) {
            // Redirect with success message
            header("Location: forgot-password.php?success=We've sent a reset link to your email.");
            exit();
        } else {
            echo "Error sending email";
        }
    } else {
        // Email not found in database
        header("Location: forgot-password.php?error=Email not found. Please try again.");
        exit();
    }
}
?>


<?php
session_start();
include('config.php');

if (!isset($_GET['token']) || strlen(trim($_GET['token'])) < 1) {
    die("Invalid token");
}

$token = mysqli_real_escape_string($conn, $_GET['token']);

// Check if the token exists and is still valid
$sql = "SELECT * FROM password_resets 
        WHERE token='$token' AND expires > NOW()";
$result = mysqli_query($conn, $sql);

if (mysqli_num_rows($result) == 0) {
    die("Invalid or expired reset link");
}

$userRow = mysqli_fetch_assoc($result);
$userId = $userRow['user_id'];

// If the form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Validate input
    $password = trim($_POST['password']);
    $confirmPassword = trim($_POST['confirm_password']);
    
    if ($password != $confirmPassword) {
        die("Passwords do not match");
    }
    
    // Hash the password
    $hashedPassword = password_hash($password, PASSWORD_DEFAULT);
    
    // Update the user's password
    $updateSql = "UPDATE users SET password='$hashedPassword' WHERE id=$userId";
    mysqli_query($conn, $updateSql);
    
    // Delete the reset token
    $deleteSql = "DELETE FROM password_resets WHERE token='$token'";
    mysqli_query($conn, $deleteSql);
    
    // Redirect to login page with success message
    header("Location: login.php?success=Your password has been updated successfully.");
    exit();
}

// Show the reset form
?>

<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <h2>Set New Password</h2>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <input type="password" name="password" placeholder="New password" required><br><br>
        <input type="password" name="confirm_password" placeholder="Confirm new password" required><br><br>
        <input type="submit" value="Set Password">
    </form>
</body>
</html>


<?php
define('SITE_URL', 'http://localhost/your_project/');
define('SITE_NAME', 'Your Site Name');
define('MAIL_FROM', 'no-reply@yoursite.com');

$conn = mysqli_connect("localhost", "username", "password", "database_name");
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}
?>


<?php
if (isset($_POST['reset'])) {
    $email = $_POST['email'];
    
    // Database connection using PDO for security
    try {
        $pdo = new PDO('mysql:host=localhost;dbname=yourdb', 'username', 'password');
        $pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
        
        // Check if user exists
        $stmt = $pdo->prepare("SELECT * FROM users WHERE email = ?");
        $stmt->execute([$email]);
        $user = $stmt->fetch();
        
        if ($user) {
            // Generate new password
            $newPassword = generateRandomPassword(12);
            
            // Update database with hashed password (assuming using bcrypt)
            $hashedPassword = password_hash($newPassword, PASSWORD_BCRYPT);
            $updateStmt = $pdo->prepare("UPDATE users SET password = ? WHERE email = ?");
            $updateStmt->execute([$hashedPassword, $email]);
            
            // Send email
            $to = $email;
            $subject = "Your New Password";
            $message = "Dear user,

Your new password is: " . $newPassword . "

Please change it upon login.

Best regards,
Admin Team";
            $headers = 'From: admin@example.com' . "\r
" .
                       'Reply-To: admin@example.com' . "\r
" .
                       'X-Mailer: PHP/' . phpversion();
            
            if (mail($to, $subject, $message, $headers)) {
                echo "Password reset successful. Check your email.";
            } else {
                echo "Failed to send the password reset email.";
            }
        } else {
            echo "User does not exist.";
        }
    } catch(PDOException $e) {
        die("Connection failed: " . $e->getMessage());
    }
}

function generateRandomPassword($length = 12) {
    $chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^&*()';
    return substr(str_shuffle($chars), 0, $length);
}
?>


<?php
if (isset($_POST['email'])) {
    // Process the request
    $email = $_POST['email'];
    
    // Database connection
    $conn = mysqli_connect("localhost", "username", "password", "database");
    if (!$conn) {
        die("Connection failed: " . mysqli_error($conn));
    }
    
    // Check if email exists
    $sql = "SELECT id FROM users WHERE email = '" . mysqli_real_escape_string($conn, $email) . "'";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) == 1) {
        // Generate reset token
        $token = bin2hex(random_bytes(32));
        $expires = time() + 3600; // Expiry in 1 hour
        
        // Insert into database
        $insertSql = "INSERT INTO password_reset (user_id, token, expires) VALUES (" . mysqli_real_escape_string($conn, $emailId) . ", '" . $token . "', '$expires')";
        if (mysqli_query($conn, $insertSql)) {
            // Send email with reset link
            $to = $email;
            $subject = "Password Reset Request";
            $body = "Click the following link to reset your password: http://example.com/reset_password.php?token=$token

If you did not request this, please ignore.";
            
            if (mail($to, $subject, $body)) {
                echo "Check your email for a reset link!";
            } else {
                echo "Failed to send email. Please try again later.";
            }
        } else {
            echo "An error occurred. Please try again later.";
        }
    } else {
        echo "Email not found in our records.";
    }
    
    mysqli_close($conn);
}
?>


<?php
session_start();
if (!isset($_GET['token'])) {
    die("Invalid request.");
}

$token = $_GET['token'];
$conn = mysqli_connect("localhost", "username", "password", "database");
if (!$conn) {
    die("Connection failed: " . mysqli_error($conn));
}

// Check token validity
$sql = "SELECT * FROM password_reset WHERE token = '" . mysqli_real_escape_string($conn, $token) . "' AND expires > " . time();
$result = mysqli_query($conn, $sql);

if (mysqli_num_rows($result) != 1) {
    die("Invalid or expired reset link.");
}

$userData = mysqli_fetch_assoc($result);
$_SESSION['reset_user_id'] = $userData['user_id'];
?>
<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <form action="reset_password.php" method="post">
        New Password: <input type="password" name="new_password"><br>
        Confirm Password: <input type="password" name="confirm_password"><br>
        <input type="submit" value="Reset Password">
    </form>
</body>
</html>

<?php
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $newPassword = $_POST['new_password'];
    $confirmPassword = $_POST['confirm_password'];
    
    if ($newPassword != $confirmPassword) {
        die("Passwords do not match.");
    }
    
    // Update password in database
    $hashedPassword = password_hash($newPassword, PASSWORD_DEFAULT);
    $sqlUpdate = "UPDATE users SET password = '" . $hashedPassword . "' WHERE id = " . $_SESSION['reset_user_id'];
    if (mysqli_query($conn, $sqlUpdate)) {
        // Delete the reset token
        $deleteSql = "DELETE FROM password_reset WHERE user_id = " . $_SESSION['reset_user_id'];
        mysqli_query($conn, $deleteSql);
        
        echo "Password updated successfully!";
        header("Location: login.php");
    } else {
        die("Error updating password. Please try again.");
    }
}
?>


<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <h2>Forgot Password</h2>
    
    <?php
    // Show error/success messages here if any
    $message = isset($_GET['msg']) ? $_GET['msg'] : '';
    if ($message) {
        echo "<p>$message</p>";
    }
    ?>
    
    <form action="forgot_password_submit.php" method="post">
        <label for="email">Email:</label>
        <input type="email" id="email" name="email" required><br>
        
        <input type="submit" value="Reset Password">
    </form>
</body>
</html>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'mydatabase';

// Create connection
$conn = new mysqli($host, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Get email from form
$email = $_POST['email'];

// Check if email exists in the database
$sql = "SELECT id FROM users WHERE email = ?";
$stmt = $conn->prepare($sql);
$stmt->bind_param("s", $email);
$stmt->execute();
$result = $stmt->get_result();

if ($result->num_rows == 0) {
    // Email not found
    header("Location: forgot_password.php?msg=Email%20not%20found!");
    exit();
}

// Generate reset token
$reset_token = bin2hex(random_bytes(16));

// Check if password_reset table exists and create if it doesn't
$sql_check_table = "SHOW TABLES LIKE 'password_reset'";
$result_check = $conn->query($sql_check_table);

if (!$result_check->num_rows) {
    // Create the table
    $sql_create_table = "CREATE TABLE password_reset (
        id INT AUTO_INCREMENT PRIMARY KEY,
        email VARCHAR(255) NOT NULL,
        token VARCHAR(32) NOT NULL,
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        INDEX(email)
    )";
    
    if (!$conn->query($sql_create_table)) {
        die("Table creation failed: " . $conn->error);
    }
}

// Insert reset token into password_reset table
$sql_insert = "INSERT INTO password_reset (email, token) VALUES (?, ?)";
$stmt_insert = $conn->prepare($sql_insert);
$stmt_insert->bind_param("ss", $email, $reset_token);
$stmt_insert->execute();

// Send email with reset link
$to = $email;
$subject = "Password Reset Request";
$headers = "From: your_website@example.com" . "\r
" .
            "Reply-To: your_website@example.com" . "\r
" .
            "X-Mailer: PHP/" . phpversion();

$body = <<<EMAIL
Hello,

Please click the following link to reset your password:

http://yourwebsite.com/reset_password.php?token=$reset_token

This link will expire in 1 hour.

If you did not request a password reset, please ignore this email.

Best regards,
Your Website Team
EMAIL;

if (mail($to, $subject, $body, $headers)) {
    header("Location: forgot_password.php?msg=Reset%20link%20sent!%20Check%20your%20email.");
} else {
    header("Location: forgot_password.php?msg=Error%20sending%20reset%20email!");
}

$stmt->close();
$conn->close();
?>


<?php
// Check if token is provided in URL
if (!isset($_GET['token'])) {
    die("Invalid request.");
}

$token = $_GET['token'];

// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'mydatabase';

// Create connection
$conn = new mysqli($host, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Get token from database
$sql = "SELECT * FROM password_reset WHERE token = ? AND created_at > CURRENT_TIMESTAMP - INTERVAL 1 HOUR";
$stmt = $conn->prepare($sql);
$stmt->bind_param("s", $token);
$stmt->execute();
$result = $stmt->get_result();

if ($result->num_rows == 0) {
    die("Invalid or expired reset link.");
}

// Show reset form
?>
<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <h2>Reset Password</h2>
    
    <form action="reset_password_submit.php" method="post">
        <input type="hidden" name="token" value="<?php echo $token; ?>">
        
        <label for="new_password">New Password:</label>
        <input type="password" id="new_password" name="new_password" required><br>
        
        <label for="confirm_password">Confirm New Password:</label>
        <input type="password" id="confirm_password" name="confirm_password" required><br>
        
        <input type="submit" value="Reset Password">
    </form>
</body>
</html>

<?php
$stmt->close();
$conn->close();
?>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'mydatabase';

// Create connection
$conn = new mysqli($host, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Get token and new password from form
$token = $_POST['token'];
$new_password = $_POST['new_password'];
$confirm_password = $_POST['confirm_password'];

// Validate passwords match
if ($new_password !== $confirm_password) {
    die("Passwords do not match.");
}

// Check if token is valid and not expired
$sql_check_token = "SELECT * FROM password_reset WHERE token = ? AND created_at > CURRENT_TIMESTAMP - INTERVAL 1 HOUR";
$stmt_check_token = $conn->prepare($sql_check_token);
$stmt_check_token->bind_param("s", $token);
$stmt_check_token->execute();
$result = $stmt_check_token->get_result();

if ($result->num_rows == 0) {
    die("Invalid or expired reset link.");
}

// Get user email from token
$row = $result->fetch_assoc();
$user_email = $row['email'];

// Update user's password in the users table
$new_password_hashed = password_hash($new_password, PASSWORD_DEFAULT);

$sql_update_password = "UPDATE users SET password = ? WHERE email = ?";
$stmt_update_password = $conn->prepare($sql_update_password);
$stmt_update_password->bind_param("ss", $new_password_hashed, $user_email);

if ($stmt_update_password->execute()) {
    // Delete the reset token
    $sql_delete_token = "DELETE FROM password_reset WHERE token = ?";
    $stmt_delete_token = $conn->prepare($sql_delete_token);
    $stmt_delete_token->bind_param("s", $token);
    $stmt_delete_token->execute();
    
    echo "Password updated successfully!";
} else {
    die("Error updating password.");
}

$stmt_check_token->close();
$stmt_update_password->close();
$conn->close();
?>


<?php
// Config file (config.php)
require_once('config.php');

function forgotPassword($email) {
    $db = new mysqli(DB_HOST, DB_USER, DB_PASS, DB_NAME);
    
    // Check if email exists in database
    $stmt = $db->prepare("SELECT id FROM users WHERE email = ?");
    $stmt->bind_param("s", $email);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows == 0) {
        return false; // Email not found
    }
    
    // Generate reset token
    $token = bin2hex(random_bytes(16));
    $hashedToken = password_hash($token, PASSWORD_DEFAULT);
    
    // Store token in database with expiration time (e.g., 1 hour)
    $expirationTime = date('Y-m-d H:i:s', strtotime('+1 hour'));
    
    $stmt = $db->prepare("INSERT INTO reset_tokens (user_id, token, expires) VALUES (?, ?, ?)");
    $stmt->bind_param("iss", $result->fetch_assoc()['id'], $hashedToken, $expirationTime);
    $stmt->execute();
    
    // Send email with reset link
    $resetLink = "http://example.com/reset-password.php?token=$token";
    sendResetEmail($email, $resetLink);
    
    return true;
}

function sendResetEmail($email, $resetLink) {
    require_once 'PHPMailer/PHPMailer.php';
    require_once 'PHPMailer/SMTP.php';
    require_once 'PHPMailer/Exception.php';
    
    $mail = new PHPMailer\PHPMailer();
    try {
        // Configure email settings
        $mail->isSMTP();
        $mail->Host       = 'smtp.example.com';
        $mail->SMTPAuth   = true;
        $mail->Username   = 'your-email@example.com';
        $mail->Password   = 'your-password';
        $mail->Port       = 587;
        
        // Set email content
        $mail->setFrom('your-email@example.com', 'Your Site Name');
        $mail->addAddress($email);
        $mail->Subject = 'Password Reset Request';
        $mail->Body    = "Click this link to reset your password: $resetLink";
        
        // Send email
        $mail->send();
    } catch (Exception $e) {
        echo "Message could not be sent. Mailer Error: {$mail->ErrorInfo}";
        return false;
    }
    
    return true;
}

function resetPassword($token, $newPassword) {
    $db = new mysqli(DB_HOST, DB_USER, DB_PASS, DB_NAME);
    
    // Verify token
    $stmt = $db->prepare("SELECT user_id FROM reset_tokens WHERE token = ?");
    $stmt->bind_param("s", $token);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows == 0) {
        return false; // Invalid or expired token
    }
    
    // Update user password
    $hashedPassword = password_hash($newPassword, PASSWORD_DEFAULT);
    $userId = $result->fetch_assoc()['user_id'];
    
    $stmt = $db->prepare("UPDATE users SET password = ? WHERE id = ?");
    $stmt->bind_param("si", $hashedPassword, $userId);
    $stmt->execute();
    
    // Remove used token
    $stmt = $db->prepare("DELETE FROM reset_tokens WHERE user_id = ?");
    $stmt->bind_param("i", $userId);
    $stmt->execute();
    
    return true;
}

// Example usage:
if (isset($_POST['forgot_password'])) {
    if (forgotPassword($_POST['email'])) {
        echo "A password reset link has been sent to your email.";
    } else {
        echo "Email not found in our records.";
    }
}
?>


<?php
// Database connection
$host = 'localhost';
$dbname = 'your_database';
$username = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

$email = $_POST['email'];

// Check if email exists in the database
$stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
$stmt->execute([$email]);
$user = $stmt->fetch();

if (!$user) {
    echo "<script>alert('Email not found!'); window.location.href='forgot_password.php';</script>";
} else {
    // Generate a random token
    $token = bin2hex(random_bytes(16));
    
    // Store the token and expiration time in the database
    $expires = date("Y-m-d H:i:s", strtotime("+30 minutes"));
    $stmt = $conn->prepare("INSERT INTO password_resets (user_id, token, created_at) VALUES (?, ?, ?)");
    $stmt->execute([$user['id'], $token, $expires]);
    
    // Send reset email
    $reset_link = "http://$_SERVER[HTTP_HOST]/reset_password.php?token=$token";
    $subject = "Password Reset Request";
    $message = "Please click the following link to reset your password: 
$reset_link

This link will expire in 30 minutes.";
    
    if (mail($email, $subject, $message)) {
        echo "<script>alert('Password reset instructions have been sent to your email!'); window.location.href='forgot_password.php';</script>";
    } else {
        echo "<script>alert('Failed to send password reset email! Please try again.'); window.location.href='forgot_password.php';</script>";
    }
}
?>


<?php
// Check if token is provided
if (!isset($_GET['token'])) {
    die("Invalid request.");
}

$token = $_GET['token'];

// Database connection
try {
    $conn = new PDO("mysql:host=localhost;dbname=your_database", 'root', '');
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

// Check token validity
$stmt = $conn->prepare("SELECT * FROM password_resets WHERE token = ? AND created_at >= NOW() - INTERVAL 30 MINUTE");
$stmt->execute([$token]);
$reset = $stmt->fetch();

if (!$reset) {
    die("Invalid or expired reset link.");
}

// Get user details
$stmt = $conn->prepare("SELECT id FROM users WHERE id = ?");
$stmt->execute([$reset['user_id']]);
$user = $stmt->fetch();

if (!$user) {
    die("Invalid user.");
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <h2>Reset Password</h2>
    <form action="reset_password_process.php" method="post">
        <input type="hidden" name="token" value="<?php echo $token; ?>">
        <label for="password">New Password:</label><br>
        <input type="password" id="password" name="password" required><br><br>
        <label for="confirm_password">Confirm Password:</label><br>
        <input type="password" id="confirm_password" name="confirm_password" required><br><br>
        <button type="submit">Reset Password</button>
    </form>
</body>
</html>


<?php
// Database connection
try {
    $conn = new PDO("mysql:host=localhost;dbname=your_database", 'root', '');
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $token = $_POST['token'];
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];

    if ($password != $confirm_password) {
        die("Passwords do not match!");
    }

    // Check token validity
    $stmt = $conn->prepare("SELECT * FROM password_resets WHERE token = ? AND created_at >= NOW() - INTERVAL 30 MINUTE");
    $stmt->execute([$token]);
    $reset = $stmt->fetch();

    if (!$reset) {
        die("Invalid or expired reset link.");
    }

    // Update user's password
    $new_password_hash = password_hash($password, PASSWORD_DEFAULT);
    $stmt = $conn->prepare("UPDATE users SET password = ? WHERE id = ?");
    $stmt->execute([$new_password_hash, $reset['user_id']]);

    // Invalidate all tokens for this user
    $stmt = $conn->prepare("DELETE FROM password_resets WHERE user_id = ?");
    $stmt->execute([$reset['user_id']]);

    echo "<script>alert('Password has been reset successfully!'); window.location.href='login.php';</script>";
}
?>


<?php
// Database configuration
$host = "localhost";
$user = "root";
$password = "";
$db_name = "mydatabase";

// Connect to the database
$conn = new mysqli($host, $user, $password, $db_name);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Check if email is provided and not empty
    if (isset($_POST['email']) && !empty(trim($_POST['email']))) {
        $email = trim($_POST['email']);
        
        // Validate email format
        if (!preg_match("/^([a-zA-Z0-9_\-\.]+)@([a-zA-Z0-9_\-\.]+)\.([a-zA-Z]{2,5})$/", $email)) {
            $message = "Invalid email format";
            header("Location: forgot_password.php?msg=" . urlencode($message));
            exit();
        }
        
        // Check if the email exists in the database
        $sql = "SELECT id FROM users WHERE email = ?";
        $stmt = $conn->prepare($sql);
        $stmt->bind_param("s", $email);
        $stmt->execute();
        $result = $stmt->get_result();
        
        if ($result->num_rows === 0) {
            $message = "No account found with this email address";
            header("Location: forgot_password.php?msg=" . urlencode($message));
            exit();
        }
        
        // Generate a random token
        $token = bin2hex(random_bytes(16));
        
        // Calculate the expiration time (30 minutes from now)
        $expiration_time = date('Y-m-d H:i:s', strtotime('+30 minutes'));
        
        // Update the token and expiration time in the database
        $updateSql = "UPDATE users SET reset_token = ?, reset_expires = ? WHERE email = ?";
        $stmt = $conn->prepare($updateSql);
        $stmt->bind_param("sss", $token, $expiration_time, $email);
        $result = $stmt->execute();
        
        if (!$result) {
            die("Error updating record: " . $conn->error);
        }
        
        // Send the reset password email
        $to = $email;
        $subject = "Reset Password Request";
        $message_body = "Please click on the following link to reset your password:

" .
                        "http://example.com/reset_password.php?token=" . $token . "

" .
                        "This link will expire in 30 minutes.";
        
        $headers = "From: noreply@example.com\r
";
        $headers .= "Reply-To: noreply@example.com\r
";
        $headers .= "X-Mailer: PHP/" . phpversion();
        
        if (mail($to, $subject, $message_body, $headers)) {
            $message = "Password reset email has been sent to your email address.";
            header("Location: forgot_password.php?msg=" . urlencode($message));
            exit();
        } else {
            die("Failed to send password reset email");
        }
        
    } else {
        $message = "Email is required";
        header("Location: forgot_password.php?msg=" . urlencode($message));
        exit();
    }
}

// Close database connection
$conn->close();
?>


<?php
// Database connection details
$host = 'localhost';
$user = 'root';
$password = '';
$dbname = 'mydatabase';

// Connect to database
$conn = new mysqli($host, $user, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Check if form is submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Get email/username from the form
    $email = $_POST['email'];

    try {
        // Prepare and execute SQL statement to check user existence
        $stmt = $conn->prepare("SELECT id, username FROM users WHERE email = ?");
        $stmt->bind_param('s', $email);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            // User exists; generate a reset token
            $token = bin2hex(random_bytes(16)); // Generate random token

            // Update the user's record with the new token and expiration time
            $updateStmt = $conn->prepare("UPDATE users SET password_reset_token = ?, password_reset_expires = CURRENT_TIMESTAMP + INTERVAL 30 MINUTE WHERE email = ?");
            $updateStmt->bind_param('ss', $token, $email);
            $updateStmt->execute();

            // Send the reset link to the user's email
            $to = $email;
            $subject = "Password Reset Request";
            $message = "
                <html>
                    <head></head>
                    <body>
                        <p>Hello,</p>
                        <p>We received a request to reset your password. Click the following link to reset your password:</p>
                        <a href='http://example.com/reset-password.php?token=" . $token . "&email=" . $email . "'>Reset Password</a>
                        <p>If you did not make this request, please ignore this email.</p>
                        <p>This link will expire in 30 minutes.</p>
                    </body>
                </html>
            ";
            $headers = "MIME-Version: 1.0" . "\r
";
            $headers .= "Content-type:text/html;charset=UTF-8" . "\r
";
            $headers .= "From: webmaster@example.com" . "\r
";

            mail($to, $subject, $message, $headers);

            echo "<p>An email with a password reset link has been sent to your email address.</p>";
        } else {
            throw new Exception("No account found with this email address.");
        }
    } catch (Exception $e) {
        die('Error: ' . $e->getMessage());
    }
}

// Close database connection
$conn->close();
?>


<?php
// Include database connection
include('db_connection.php');

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $email = mysqli_real_escape_string($conn, $_POST['email']);
    
    // Check if email exists in the database
    $query = "SELECT id FROM users WHERE email='$email'";
    $result = mysqli_query($conn, $query);
    
    if (mysqli_num_rows($result) == 1) {
        // Generate a random token
        $token = md5(rand());
        
        // Store token in the database
        $insert_token = "INSERT INTO password_resets (user_id, token)
                         VALUES ('" . mysqli_insert_id($conn) . "', '$token')";
        mysqli_query($conn, $insert_token);
        
        // Send email with reset link
        $to = $email;
        $subject = 'Password Reset Request';
        $message = 'Please click the following link to reset your password: http://yourwebsite.com/reset_password.php?token=' . $token;
        $headers = 'From: noreply@yourwebsite.com';
        
        mail($to, $subject, $message, $headers);
        
        echo "A password reset link has been sent to your email.";
    } else {
        echo "Email not found in our records!";
    }
}
?>


<?php
// Include database connection
include('db_connection.php');

if (isset($_GET['token'])) {
    $token = mysqli_real_escape_string($conn, $_GET['token']);
    
    // Check if token exists in the database
    $query = "SELECT * FROM password_resets WHERE token='$token'";
    $result = mysqli_query($conn, $query);
    
    if (mysqli_num_rows($result) == 1) {
        // Display reset form
        ?>
        <h2>Reset Password</h2>
        <form action="reset_password.php?token=<?php echo $token;?>" method="post">
            New Password: <input type="password" name="new_password" required><br><br>
            Confirm Password: <input type="password" name="confirm_password" required><br><br>
            <input type="submit" value="Reset Password">
        </form>
        <?php
    } else {
        echo "Invalid or expired token!";
    }
} elseif ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $token = mysqli_real_escape_string($conn, $_GET['token']);
    $new_password = mysqli_real_escape_string($conn, $_POST['new_password']);
    $confirm_password = mysqli_real_escape_string($conn, $_POST['confirm_password']);
    
    if ($new_password != $confirm_password) {
        die("Passwords do not match!");
    }
    
    // Update password in the database
    $query = "SELECT user_id FROM password_resets WHERE token='$token'";
    $result = mysqli_query($conn, $query);
    $row = mysqli_fetch_assoc($result);
    
    $user_id = $row['user_id'];
    $hashed_password = md5($new_password); // You should use a stronger hashing algorithm like bcrypt in production
    
    $update_password = "UPDATE users SET password='$hashed_password' WHERE id=$user_id";
    mysqli_query($conn, $update_password);
    
    // Delete the token
    $delete_token = "DELETE FROM password_resets WHERE token='$token'";
    mysqli_query($conn, $delete_token);
    
    echo "Password has been reset successfully!";
}
?>


<?php
// Include database connection file
include('db_connect.php');

if (isset($_POST['email'])) {
    $email = mysqli_real_escape_string($conn, $_POST['email']);
    
    // Check if email exists in the users table
    $sql = "SELECT id FROM users WHERE email='$email'";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) > 0) {
        // Generate a random token
        $token = md5(uniqid());
        
        // Insert token into password_resets table
        $sql = "INSERT INTO password_resets (email, token, created_at)
                VALUES ('$email', '$token', NOW())";
        mysqli_query($conn, $sql);
        
        // Send email with reset link
        $to = $email;
        $subject = "Password Reset Request";
        $message = "Please click the following link to reset your password:
                   http://yourwebsite.com/reset_password.php?token=$token";
        $headers = "From: noreply@yourwebsite.com\r
";
        
        if (mail($to, $subject, $message, $headers)) {
            echo "An email has been sent with instructions to reset your password.";
        } else {
            echo "Failed to send the email. Please try again later.";
        }
    } else {
        echo "Email not found in our records. Please check your email address.";
    }
}
?>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'your_database';

// Create a database connection
$conn = new mysqli($host, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Error handling array
$errors = [];

// Check if form was submitted
if (isset($_POST['submit'])) {
    // Get the email/username from the form
    $email_username = $_POST['email_username'];

    // Query to check if user exists
    $stmt = $conn->prepare("SELECT * FROM users WHERE email=? OR username=?");
    $stmt->bind_param("ss", $email_username, $email_username);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows == 0) {
        // User doesn't exist
        array_push($errors, "No account found with this email or username");
    } else {
        // Generate a unique token for password reset
        $token = bin2hex(random_bytes(16));

        // Update the user's record with the new token and expiration time
        date_default_timezone_set("UTC");
        $expiration_time = date('Y-m-d H:i:s', time() + 3600); // Token valid for 1 hour

        $updateStmt = $conn->prepare("UPDATE users SET reset_token=?, reset_expires=? WHERE email=? OR username=?");
        $updateStmt->bind_param("ssss", $token, $expiration_time, $email_username, $email_username);
        $updateStmt->execute();

        // Send the password reset email
        $to = $email_username;
        $subject = "Password Reset Request";
        
        $message = "
            <html>
                <head></head>
                <body>
                    <p>Hello,</p>
                    <p>You have requested to reset your password. Click the link below to reset it:</p>
                    <a href='http://yourdomain.com/reset-password.php?token=$token'>Reset Password</a>
                    <br><br>
                    <p>If you did not request this, please ignore this email.</p>
                </body>
            </html>
        ";

        $headers = "MIME-Version: 1.0" . "\r
";
        $headers .= "Content-type: text/html; charset=UTF-8" . "\r
";
        $headers .= "From: yourname@yourdomain.com";

        // Send email
        if (mail($to, $subject, $message, $headers)) {
            echo "<p>Email has been sent with password reset instructions!</p>";
        } else {
            array_push($errors, "Failed to send the email. Please try again.");
        }
    }

    $stmt->close();
}

$conn->close();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <?php
    // Display errors if any
    if (count($errors) > 0) {
        foreach ($errors as $error) {
            echo "<p style='color:red'>$error</p>";
        }
    }
    ?>

    <h2>Forgot Password</h2>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <input type="text" name="email_username" placeholder="Enter your email or username" required><br><br>
        <input type="submit" name="submit" value="Submit">
    </form>

    <p>Remember your password? <a href="login.php">Login here</a></p>
</body>
</html>


<?php
// Database configuration and connection (same as above)

if (isset($_GET['token'])) {
    $token = $_GET['token'];

    // Check if the token is valid and not expired
    $stmt = $conn->prepare("SELECT * FROM users WHERE reset_token=? AND reset_expires > NOW()");
    $stmt->bind_param("s", $token);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows == 0) {
        // Invalid or expired token
        die("Invalid or expired token. Please request a new password reset.");
    } else {
        if (isset($_POST['submit'])) {
            $new_password = $_POST['password'];
            $confirm_password = $_POST['cpassword'];

            if ($new_password != $confirm_password) {
                array_push($errors, "Passwords do not match!");
            } else {
                // Update the password
                $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);

                $updateStmt = $conn->prepare("UPDATE users SET password=?, reset_token=NULL, reset_expires=NULL WHERE reset_token=?");
                $updateStmt->bind_param("ss", $hashed_password, $token);
                $updateStmt->execute();

                // Show success message
                echo "<p>Password has been reset successfully!</p>";
            }
        }

        ?>
        <h2>Reset Password</h2>
        <?php
        if (count($errors) > 0) {
            foreach ($errors as $error) {
                echo "<p style='color:red'>$error</p>";
            }
        }
        ?>

        <form action="<?php $_SERVER['PHP_SELF']; ?>" method="post">
            <input type="password" name="password" placeholder="New Password" required><br><br>
            <input type="password" name="cpassword" placeholder="Confirm New Password" required><br><br>
            <input type="hidden" name="token" value="<?php echo $token; ?>">
            <input type="submit" name="submit" value="Reset Password">
        </form>
        <?php
    }
} else {
    // No token provided
    die("No token provided. Please request a password reset.");
}

$stmt->close();
$conn->close();
?>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$database = 'mydb';

// Connect to the database
$conn = mysqli_connect($host, $username, $password, $database);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Session start
session_start();

// Generate a random token for password reset
function generateToken() {
    return bin2hex(random_bytes(16));
}

// Function to send the password reset email
function sendResetEmail($to, $token) {
    $subject = 'Password Reset Request';
    $message = "
        <html>
            <head></head>
            <body>
                <h2>Password Reset</h2>
                <p>We received a request to reset your password. Click the link below to reset it:</p>
                <a href='http://yourwebsite.com/reset_password.php?token=" . $token . "'>Reset Password</a>
                <br><br>
                If you didn't request this, please ignore this email.
            </body>
        </html>
    ";
    $headers = 'MIME-Version: 1.0' . "\r
";
    $headers .= 'Content-type: text/html; charset=UTF-8' . "\r
";
    $headers .= 'From: yourwebsite@example.com' . "\r
";

    mail($to, $subject, $message, $headers);
}

// Check if the form is submitted
if (isset($_POST['reset'])) {
    $email = mysqli_real_escape_string($conn, $_POST['email']);

    // Check if email exists in the database
    $sql = "SELECT * FROM users WHERE email='$email'";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) > 0) {
        $token = generateToken();
        
        // Store token and expiration time in the database
        $expiration_time = date('Y-m-d H:i:s', strtotime('+2 hours'));
        $sql = "INSERT INTO password_reset_tokens (user_id, token, expires_at)
                VALUES (" . mysqli_insert_id($conn) . ", '$token', '$expiration_time')";
        
        if (mysqli_query($conn, $sql)) {
            sendResetEmail($email, $token);
            echo "An email has been sent to your address. Please check your inbox.";
        } else {
            echo "Error: " . mysqli_error($conn);
        }
    } else {
        echo "Email not found in our database!";
    }
}

mysqli_close($conn);
?>


<?php
session_start();

$host = 'localhost';
$username = 'root';
$password = '';
$database = 'mydb';

$conn = mysqli_connect($host, $username, $password, $database);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Get the token from the URL
$token = isset($_GET['token']) ? $_GET['token'] : '';

// Check if the token is valid and not expired
$sql = "SELECT * FROM password_reset_tokens 
        WHERE token='$token' AND expires_at > NOW()";
$result = mysqli_query($conn, $sql);

if (mysqli_num_rows($result) == 1) {
    // Token is valid
    if ($_SERVER['REQUEST_METHOD'] == 'POST') {
        $new_password = $_POST['password'];
        $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);
        
        // Get the user ID from the token
        $row = mysqli_fetch_assoc($result);
        $user_id = $row['user_id'];
        
        // Update the user's password
        $sql_update = "UPDATE users SET password='$hashed_password' WHERE id=$user_id";
        mysqli_query($conn, $sql_update);
        
        // Invalidate the token
        $sql_delete_token = "DELETE FROM password_reset_tokens WHERE token='$token'";
        mysqli_query($conn, $sql_delete_token);
        
        echo "Your password has been reset successfully!";
    } else {
        // Display the password reset form
        ?>
        <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
            New Password: <input type="password" name="password"><br>
            Confirm Password: <input type="password" name="confirm_password"><br>
            <input type="submit" value="Reset Password">
        </form>
        <?php
    }
} else {
    echo "Invalid or expired token!";
}

mysqli_close($conn);
?>


<?php
require_once 'db_connection.php';
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $email = $_POST['email'];
    
    // Check if email exists in the database
    $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
    $stmt->bind_param('s', $email);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows === 1) {
        // Generate a random token and expiration time
        $token = bin2hex(random_bytes(32));
        $expires = date('Y-m-d H:i:s', strtotime('+1 hour'));
        
        // Insert token into the database
        $stmtInsert = $conn->prepare("INSERT INTO password_resets (user_id, token, expires) VALUES (?, ?, ?)");
        $stmtInsert->bind_param('iss', $result->fetch_assoc()['id'], $token, $expires);
        if ($stmtInsert->execute()) {
            // Send reset email
            require_once 'PHPMailer/PHPMailer.php';
            require_once 'PHPMailer/Exception.php';
            
            try {
                $mail = new PHPMailer(true);
                $mail->isSMTP();
                $mail->Host = 'smtp.example.com';
                $mail->SMTPAuth = true;
                $mail->Username = 'your_email@example.com';
                $mail->Password = 'your_password';
                $mail->setFrom('your_email@example.com', 'Your Website');
                $mail->addAddress($email);
                $link = "http://$_SERVER[HTTP_HOST]/reset_password.php?token=$token";
                
                $mail->isHTML(true);
                $mail->Subject = 'Password Reset Request';
                $mail->Body = "<p>Click this link to reset your password: <a href='$link'>$link</a></p>";
                
                $mail->send();
                echo "<script>alert('A password reset link has been sent to your email.'); window.location.href='login.php';</script>";
            } catch (Exception $e) {
                die("Error sending email: " . $e->getMessage());
            }
        } else {
            die("Token generation failed.");
        }
    } else {
        // Email not found
        header("Location: forgot_password.php?error=Email%20not%20found.");
        exit();
    }
}
?>


<?php
require_once 'db_connection.php';
if (!isset($_GET['token']) || $_GET['token'] == '') {
    die("No token provided.");
}

$token = $_GET['token'];
// Check if token exists and hasn't expired
$stmtCheck = $conn->prepare("SELECT user_id, expires FROM password_resets WHERE token = ? AND expires > NOW()");
$stmtCheck->bind_param('s', $token);
$stmtCheck->execute();
$result = $stmtCheck->get_result();

if ($result->num_rows === 0) {
    die("Invalid or expired token.");
}

$user_id = $result->fetch_assoc()['user_id'];
?>

<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
    <style>
        body { font-family: Arial, sans-serif; }
        .container { max-width: 500px; margin: 0 auto; padding: 20px; }
        .form-group { margin-bottom: 15px; }
        input[type="password"] { width: 100%; padding: 8px; }
        button { background-color: #4CAF50; color: white; padding: 10px 20px; border: none; border-radius: 4px; cursor: pointer; }
        button:hover { background-color: #45a049; }
    </style>
</head>
<body>
    <div class="container">
        <?php
            if (isset($_GET['error'])) {
                echo "<p style='color:red;'>".$_GET['error']."</p>";
            }
        ?>
        <h2>Reset Password</h2>
        <form action="reset_password.php?token=<?php echo $token;?>" method="post">
            <div class="form-group">
                <label for="password">New Password:</label><br>
                <input type="password" id="password" name="password" required>
            </div>
            <div class="form-group">
                <label for="confirm_password">Confirm Password:</label><br>
                <input type="password" id="confirm_password" name="confirm_password" required>
            </div>
            <button type="submit">Reset Password</button>
        </form>
    </div>
</body>
</html>

<?php
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $newPassword = $_POST['password'];
    $confirmPassword = $_POST['confirm_password'];
    
    if ($newPassword !== $confirmPassword) {
        die("Passwords do not match.");
    }
    
    // Hash the new password
    $hashedPassword = password_hash($newPassword, PASSWORD_DEFAULT);
    
    // Update user's password in the database
    $updateStmt = $conn->prepare("UPDATE users SET password = ? WHERE id = ?");
    $updateStmt->bind_param('si', $hashedPassword, $user_id);
    if ($updateStmt->execute()) {
        // Delete used token
        $deleteStmt = $conn->prepare("DELETE FROM password_resets WHERE token = ?");
        $deleteStmt->bind_param('s', $token);
        $deleteStmt->execute();
        
        echo "<script>alert('Password reset successful! Please login with your new password.'); window.location.href='login.php';</script>";
    } else {
        die("Failed to update password.");
    }
}
?>


<?php
// Database configuration
$host = "localhost";
$username = "root";
$password = "";
$db_name = "mydatabase";

// Connect to database
$conn = new mysqli($host, $username, $password, $db_name);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Get form data
$email = $_POST['email'];

// Check if email exists in the database
$sql = "SELECT id FROM users WHERE email = ?";
$stmt = $conn->prepare($sql);
$stmt->bind_param('s', $email);
$stmt->execute();
$result = $stmt->get_result();

if ($result->num_rows == 0) {
    die("Email not found. Please check your email address.");
}

// Generate reset token
$token = bin2hex(random_bytes(16));
$currentDate = date('Y-m-d H:i:s');
$expires = date('Y-m-d H:i:s', strtotime('+1 hour'));

// Update the users table with the new token and expiration time
$sql = "UPDATE users SET reset_token = ?, reset_expires = ? WHERE email = ?";
$stmt = $conn->prepare($sql);
$stmt->bind_param('sss', $token, $expires, $email);
$stmt->execute();

// Send reset password link to user's email
$to = $email;
$subject = "Password Reset Request";
$message = "Please click the following link to reset your password: http://example.com/reset_password.php?token=" . $token;
$headers = "From: noreply@example.com";

mail($to, $subject, $message, $headers);

echo "A password reset link has been sent to your email address.";

// Close database connection
$stmt->close();
$conn->close();
?>


<?php
// Database configuration
$host = "localhost";
$username = "root";
$password = "";
$db_name = "mydatabase";

$conn = new mysqli($host, $username, $password, $db_name);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Check if token is provided
if (!isset($_GET['token'])) {
    die("Invalid request.");
}

$token = $_GET['token'];

// Get user data based on token
$sql = "SELECT email FROM users WHERE reset_token = ? AND reset_expires > ?";
$stmt = $conn->prepare($sql);
$currentDate = date('Y-m-d H:i:s');
$stmt->bind_param('ss', $token, $currentDate);
$stmt->execute();
$result = $stmt->get_result();

if ($result->num_rows == 0) {
    die("Invalid or expired reset link.");
}

// Show password reset form
?>
<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <h2>Reset Password</h2>
    <form action="reset.php" method="post">
        <input type="hidden" name="token" value="<?php echo $token; ?>">
        <label>New Password:</label><br>
        <input type="password" name="new_password" required><br><br>
        <button type="submit">Reset Password</button>
    </form>
</body>
</html>

<?php
// Close database connection
$stmt->close();
$conn->close();
?>


<?php
// Database configuration
$host = "localhost";
$username = "root";
$password = "";
$db_name = "mydatabase";

$conn = new mysqli($host, $username, $password, $db_name);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Check if token is provided
if (!isset($_POST['token']) || !isset($_POST['new_password'])) {
    die("Invalid request.");
}

$token = $_POST['token'];
$newPassword = $_POST['new_password'];

// Verify token and expiration date
$sql = "SELECT email FROM users WHERE reset_token = ? AND reset_expires > ?";
$stmt = $conn->prepare($sql);
$currentDate = date('Y-m-d H:i:s');
$stmt->bind_param('ss', $token, $currentDate);
$stmt->execute();
$result = $stmt->get_result();

if ($result->num_rows == 0) {
    die("Invalid or expired reset link.");
}

// Update password
$email = $result->fetch_assoc()['email'];
$hashedPassword = sha1($newPassword);

$sql = "UPDATE users SET password = ?, reset_token = NULL, reset_expires = NULL WHERE email = ?";
$stmt = $conn->prepare($sql);
$stmt->bind_param('ss', $hashedPassword, $email);
$stmt->execute();

// Close database connection
$stmt->close();
$conn->close();

header("Location: login.php?reset=success");
exit();
?>


<?php
session_start();

// Check if token is valid and not expired
if (isset($_GET['token'])) {
    $conn = mysqli_connect("localhost", "username", "password", "database_name");
    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
    }
    
    $token = $_GET['token'];
    $sql = "SELECT * FROM users WHERE reset_token='$token' AND reset_expires > NOW()";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) == 1) {
        // Token is valid
        $_SESSION['reset_token'] = $token;
        ?>
        <h2>Reset Password</h2>
        <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
            New Password: <input type="password" name="new_password" required><br>
            Confirm Password: <input type="password" name="confirm_password" required><br>
            <input type="hidden" name="token" value="<?php echo $token; ?>">
            <input type="submit" value="Reset Password">
        </form>
        <?php
    } else {
        // Token is invalid or expired
        echo "Invalid or expired token. Please request a new password reset.";
    }
    
    mysqli_close($conn);
} else {
    // No token provided
    header("Location: forgot_password.php");
}
?>

<?php
// Handle password reset submission
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $newPassword = $_POST['new_password'];
    $confirmPassword = $_POST['confirm_password'];
    $token = $_SESSION['reset_token'];
    
    if ($newPassword != $confirmPassword) {
        die("Passwords do not match.");
    }
    
    // Hash the new password
    $hashedPassword = password_hash($newPassword, PASSWORD_DEFAULT);
    
    // Update the database with the new password
    $conn = mysqli_connect("localhost", "username", "password", "database_name");
    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
    }
    
    $sql = "UPDATE users SET password='$hashedPassword', reset_token='', reset_expires='' WHERE reset_token='$token'";
    if (mysqli_query($conn, $sql)) {
        echo "Password changed successfully! Please login with your new password.";
        header("Location: login.php");
    } else {
        echo "An error occurred while updating the password.";
    }
    
    mysqli_close($conn);
}
?>


<?php
session_start();
include('db_connect.php');

if (isset($_POST['submit'])) {
    $email = mysqli_real_escape_string($conn, $_POST['email']);
    
    $sql = "SELECT * FROM users WHERE email='$email'";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) == 0) {
        echo "<script>alert('Email not found.');</script>";
        exit();
    }
    
    $newpassword = md5(rand(10000, 99999));
    $hashmd5 = md5($newpassword);
    
    $sql2 = "UPDATE users SET password='$hashmd5' WHERE email='$email'";
    mysqli_query($conn, $sql2);
    
    $to = $email;
    $subject = "New Password";
    $message = "Your new password is: $newpassword";
    
    if (mail($to, $subject, $message)) {
        header("Location: login.php?msg=password_reset");
    } else {
        echo "<script>alert('Failed to send email. Please try again.'); history.go(-1);</script>";
    }
}
?>


<?php
session_start();
if (isset($_GET['msg'])) {
    if ($_GET['msg'] == "password_reset") {
        echo "<script>alert('Password has been reset. Please check your email.');</script>";
    }
}
?>
<!DOCTYPE html>
<html>
<head>
    <title>Login</title>
</head>
<body>
    <h2>Login Page</h2>
    <form action="login.php" method="post">
        <input type="email" name="email" placeholder="Enter your email"><br><br>
        <input type="password" name="password" placeholder="Enter password"><br><br>
        <button type="submit">Login</button>
    </form>
</body>
</html>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'mydatabase';

// Create connection
$conn = new mysqli($host, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function sendResetEmail($email, $token) {
    $to = $email;
    $subject = 'Password Reset Request';
    
    $message = '
        <html>
            <head></head>
            <body>
                <p>Please click the following link to reset your password:</p>
                <a href="http://localhost/reset-password.php?token=' . $token . '">Reset Password</a>
                <br>
                <p>If you did not request a password reset, please ignore this email.</p>
            </body>
        </html>
    ';
    
    // Set headers
    $headers = "MIME-Version: 1.0" . "\r
";
    $headers .= "Content-type:text/html;charset=UTF-8" . "\r
";
    $headers .= "From: noreply@example.com" . "\r
";
    
    // Send email
    mail($to, $subject, $message, $headers);
}

if (isset($_POST['email'])) {
    $email = $_POST['email'];
    
    // Prepare and execute query to check if user exists
    $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
    $stmt->bind_param('s', $email);
    $stmt->execute();
    
    $result = $stmt->get_result();
    
    if ($result->num_rows == 1) {
        // Generate token and expiration time
        $token = bin2hex(random_bytes(32));
        $expires = date("Y-m-d H:i:s", strtotime("+1 hour"));
        
        // Insert token into database
        $insertStmt = $conn->prepare("INSERT INTO password_resets (user_id, token, expires) VALUES (?, ?, ?)");
        $row = $result->fetch_assoc();
        $insertStmt->bind_param('iss', $row['id'], $token, $expires);
        $insertStmt->execute();
        
        // Send reset email
        sendResetEmail($email, $token);
        
        echo "Password reset instructions have been sent to your email.";
    } else {
        echo "No account found with this email address.";
    }
}
?>

<form action="" method="post">
    <h2>Forgot Password</h2>
    <input type="text" name="email" placeholder="Enter your email or username" required>
    <button type="submit">Reset Password</button>
</form>


<?php
session_start();

// Database configuration
require 'config.php';

if (!isset($_GET['token'])) {
    die("Invalid request.");
}

$token = $_GET['token'];

// Verify token in database
$stmt = $conn->prepare("SELECT * FROM password_resets WHERE token = ? AND expires > NOW()");
$stmt->bind_param('s', $token);
$stmt->execute();
$result = $stmt->get_result();

if ($result->num_rows == 0) {
    die("Invalid or expired token.");
}

$row = $result->fetch_assoc();

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    if (!isset($_POST['password'], $_POST['confirm_password'])) {
        die("Please fill in all required fields.");
    }

    if ($_POST['password'] != $_POST['confirm_password']) {
        die("Passwords do not match.");
    }

    $password = password_hash($_POST['password'], PASSWORD_DEFAULT);

    // Update user's password
    $updateStmt = $conn->prepare("UPDATE users SET password = ? WHERE id = ?");
    $updateStmt->bind_param('si', $password, $row['user_id']);
    $updateStmt->execute();

    // Delete used token
    $deleteStmt = $conn->prepare("DELETE FROM password_resets WHERE token = ?");
    $deleteStmt->bind_param('s', $token);
    $deleteStmt->execute();

    echo "Password reset successful! You can now <a href='login.php'>login</a> with your new password.";
} else {
    ?>
    <form action="" method="post">
        <h2>Reset Password</h2>
        <input type="password" name="password" placeholder="New Password" required>
        <input type="password" name="confirm_password" placeholder="Confirm Password" required>
        <button type="submit">Change Password</button>
    </form>
<?php
}
?>


<?php
include('db_connect.php'); // Include your database connection

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $email = $_POST['email'];
    
    // Sanitize and validate email input
    $email = filter_var($email, FILTER_SANITIZE_EMAIL);
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        die("Invalid email format");
    }
    
    // Check if the email exists in the database
    $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
    $stmt->bind_param('s', $email);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        // Generate a unique reset token
        $token = bin2hex(random_bytes(16)); // Generates a 32-character hexadecimal string
        $expires = date('Y-m-d H:i:s', time() + 3600); // Token expires in 1 hour

        // Store the token and expiration in the database
        $stmt = $conn->prepare("INSERT INTO password_reset (user_id, token, expires) VALUES (?, ?, ?)");
        $stmt->bind_param('iss', $result->fetch_assoc()['id'], $token, $expires);
        $stmt->execute();

        // Send reset email
        $to = $email;
        $subject = "Password Reset Request";
        $message = "
            <html>
                <body>
                    <p>Please click the following link to reset your password:</p>
                    <a href='http://your-site.com/reset-password.php?token=$token&email=$email'>Reset Password</a>
                </body>
            </html>
        ";
        $headers = "MIME-Version: 1.0\r
";
        $headers .= "Content-type: text/html; charset=UTF-8\r
";
        $headers .= "From: your-site@example.com\r
";

        mail($to, $subject, $message, $headers);

        // Redirect back to the forgot password page with a success message
        header("Location: forgot-password.php?msg=Check%20your%20email%20for%20the%20reset%20link.");
        exit();
    } else {
        die("Email not found in our records");
    }
}
?>


<?php
include('db_connect.php');

if ($_SERVER['REQUEST_METHOD'] == 'GET') {
    $token = $_GET['token'];
    $email = $_GET['email'];

    // Validate inputs
    if (empty($token) || empty($email)) {
        die("Invalid request");
    }

    // Check token validity and expiration
    $stmt = $conn->prepare("SELECT pr.*, u.id FROM password_reset pr JOIN users u ON pr.user_id = u.id WHERE pr.token = ? AND pr.expires > NOW()");
    $stmt->bind_param('s', $token);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows == 0) {
        die("Invalid or expired reset link");
    }

    // Fetch user data
    $user_data = $result->fetch_assoc();
} else {
    // Handle form submission
    $password = $_POST['password'];
    $token = $_POST['token'];

    // Validate password (minimum length, etc.)
    if (strlen($password) < 8) {
        die("Password must be at least 8 characters");
    }

    // Update the user's password
    $stmt = $conn->prepare("UPDATE users SET password = ? WHERE id = ?");
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);
    $stmt->bind_param('si', $hashed_password, $user_data['id']);
    $stmt->execute();

    // Delete the reset token
    $stmt = $conn->prepare("DELETE FROM password_reset WHERE token = ?");
    $stmt->bind_param('s', $token);
    $stmt->execute();

    // Redirect to login page with success message
    header("Location: login.php?msg=Password%20reset%20successful.");
    exit();
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Reset Password</title>
</head>
<body>
    <h2>Reset Password</h2>
    
    <?php
    // Check if there's an error message from the server
    if (isset($_GET['error'])) {
        echo "<p style='color: red;'>$_GET[error]</p>";
    }
    ?>

    <form action="reset-password.php" method="post">
        <input type="hidden" name="token" value="<?php echo $token; ?>">
        <input type="password" name="password" placeholder="Enter new password" required><br>
        <button type="submit">Reset Password</button>
    </form>

    <p>Link expired or invalid? <a href="forgot-password.php">Request a new link.</a></p>
</body>
</html>


<?php
session_start();
include("db_connection.php"); // Include your database connection file

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = trim($_POST['email']);
    
    if (empty($email)) {
        $error = "Please enter your email address!";
    } else if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        $error = "Invalid email format!";
    } else {
        // Check if email exists in the database
        $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
        $stmt->bind_param("s", $email);
        $stmt->execute();
        $result = $stmt->get_result();
        
        if ($result->num_rows === 0) {
            $error = "No account found with this email!";
        } else {
            // Generate a unique token
            $token = md5(uniqid(rand(), true));
            
            // Update the database with the token and expiration time
            date_default_timezone_set("UTC");
            $expires = date('Y-m-d H:i:s', time() + 3600); // Token expires in 1 hour
            
            $update_stmt = $conn->prepare("UPDATE users SET reset_token = ?, reset_expires = ? WHERE email = ?");
            $update_stmt->bind_param("sss", $token, $expires, $email);
            $update_stmt->execute();
            
            // Send the password reset link to the user's email
            $to = $email;
            $subject = "Reset Your Password";
            $message = "
                <html>
                    <head></head>
                    <body>
                        <h2>Password Reset Request</h2>
                        <p>Please click the following link to reset your password:</p>
                        <a href='http://yourdomain.com/reset_password.php?token=$token'>Reset Password</a><br><br>
                        <small>If you didn't request this, please ignore this email.</small>
                    </body>
                </html>
            ";
            $headers = "MIME-Version: 1.0" . "\r
";
            $headers .= "Content-type:text/html;charset=UTF-8" . "\r
";
            $headers .= "From: yourname@yourdomain.com" . "\r
"; // Change this to your email
            
            if (mail($to, $subject, $message, $headers)) {
                $success = "We've sent you a password reset link. Check your email!";
            } else {
                $error = "An error occurred while sending the email.";
            }
        }
    }
}
?>


<?php
session_start();
include("db_connection.php"); // Include your database connection file

if (isset($_GET['token'])) {
    $token = $_GET['token'];
    
    // Check if token exists in the database and hasn't expired
    date_default_timezone_set("UTC");
    $current_time = date('Y-m-d H:i:s');
    
    $stmt = $conn->prepare("SELECT id, email FROM users WHERE reset_token = ? AND reset_expires > ?");
    $stmt->bind_param("ss", $token, $current_time);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows === 0) {
        $error = "Invalid or expired token!";
    } else {
        // Show password reset form
        if ($_SERVER["REQUEST_METHOD"] == "POST") {
            $password = trim($_POST['password']);
            $confirm_password = trim($_POST['confirm_password']);
            
            if (empty($password) || empty($confirm_password)) {
                $error = "Please fill in all fields!";
            } else if ($password !== $confirm_password) {
                $error = "Passwords do not match!";
            } else {
                // Update the password
                $hashed_password = md5($password); // You might want to use a stronger hashing algorithm
                
                $update_stmt = $conn->prepare("UPDATE users SET password = ?, reset_token = NULL WHERE reset_token = ?");
                $update_stmt->bind_param("ss", $hashed_password, $token);
                $update_stmt->execute();
                
                // Clear the token
                $clear_stmt = $conn->prepare("UPDATE users SET reset_token = NULL WHERE reset_token = ?");
                $clear_stmt->bind_param("s", $token);
                $clear_stmt->execute();
                
                $success = "Your password has been updated!";
            }
        } else {
            // Show the form
            $row = $result->fetch_assoc();
            $_SESSION['reset_email'] = $row['email'];
        }
    }
} else {
    $error = "No token provided!";
}
?>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'test';

// Connect to database
$conn = new mysqli($host, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Check if form is submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Get email from POST data
    $email = $_POST['email'];

    // Validate email
    if (empty($email)) {
        echo json_encode(['success' => false, 'message' => 'Email is required']);
        exit;
    }

    // Check if email exists in the database
    $sql = "SELECT * FROM users WHERE email=?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param('s', $email);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows === 0) {
        echo json_encode(['success' => false, 'message' => 'Email does not exist']);
        exit;
    }

    // Generate a random token
    $token = bin2hex(random_bytes(16));
    
    // Set expiration time for the token (e.g., 1 hour from now)
    $expiration_time = date('Y-m-d H:i:s', strtotime('+1 hour'));

    // Update the database with the new token and expiration time
    $update_sql = "UPDATE users SET reset_token=?, reset_expires=? WHERE email=?";
    $stmt = $conn->prepare($update_sql);
    $stmt->bind_param('sss', $token, $expiration_time, $email);

    if ($stmt->execute()) {
        // Send the password reset link to the user's email
        $reset_link = "http://localhost/reset_password.php?token=$token";
        $to = $email;
        $subject = 'Password Reset Request';
        $message = "Please click on this link to reset your password: $reset_link";
        $headers = 'From: webmaster@example.com' . "\r
" .
                   'Reply-To: webmaster@example.com' . "\r
" .
                   'X-Mailer: PHP/' . phpversion();

        if (mail($to, $subject, $message, $headers)) {
            echo json_encode(['success' => true, 'message' => 'Password reset link has been sent to your email']);
        } else {
            echo json_encode(['success' => false, 'message' => 'Failed to send password reset link']);
        }
    } else {
        echo json_encode(['success' => false, 'message' => 'Error updating the database']);
    }

    $stmt->close();
}

$conn->close();
?>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'test';

// Connect to database
$conn = new mysqli($host, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Check if token is provided in the URL
if (isset($_GET['token'])) {
    $token = $_GET['token'];

    // Get user data based on the token
    $sql = "SELECT * FROM users WHERE reset_token=? AND reset_expires > NOW()";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param('s', $token);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows === 0) {
        die("Invalid or expired token");
    }

    // Show password reset form
    ?>
    <!DOCTYPE html>
    <html>
    <head>
        <title>Reset Password</title>
    </head>
    <body>
        <h2>Reset Password</h2>
        <form action="reset_password.php?token=<?php echo $token; ?>" method="post">
            <input type="password" name="new_password" placeholder="Enter new password" required><br><br>
            <input type="password" name="confirm_password" placeholder="Confirm new password" required><br><br>
            <button type="submit">Reset Password</button>
        </form>
    <?php
} else {
    // Handle cases where token is not provided or invalid
    die("No token provided");
}

// Check if form is submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $token = $_GET['token'];
    $new_password = $_POST['new_password'];
    $confirm_password = $_POST['confirm_password'];

    // Validate password fields
    if ($new_password !== $confirm_password) {
        die("Passwords do not match");
    }

    if (strlen($new_password) < 8) {
        die("Password must be at least 8 characters long");
    }

    // Hash the new password
    $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);

    // Update the user's password and clear the reset token
    $update_sql = "UPDATE users SET password=?, reset_token=null, reset_expires=null WHERE reset_token=?";
    $stmt = $conn->prepare($update_sql);
    $stmt->bind_param('ss', $hashed_password, $token);

    if ($stmt->execute()) {
        echo "Password has been successfully updated!";
        // Optionally, redirect to login page
        header("Location: login.php");
        exit;
    } else {
        die("Error updating password");
    }
}

$stmt->close();
$conn->close();
?>


<?php
include('db_connection.php');

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $email = mysqli_real_escape_string($conn, $_POST['email']);

    // Check if email exists in the database
    $query = "SELECT username FROM users WHERE email='$email'";
    $result = mysqli_query($conn, $query);

    if (mysqli_num_rows($result) == 1) {
        // Generate a random token
        $token = bin2hex(random_bytes(32));
        $username = mysqli_fetch_assoc($result)['username'];
        
        // Store the token in the password_reset_tokens table with an expiration time
        $expiry_time = date('Y-m-d H:i:s', strtotime('+1 hour'));
        $insert_query = "INSERT INTO password_reset_tokens (username, token, expiry_time) VALUES ('$username', '$token', '$expiry_time')";
        mysqli_query($conn, $insert_query);

        // Send the reset email
        $reset_link = "http://$_SERVER[HTTP_HOST]/reset_password.php?username=$username&token=$token";
        $to = $email;
        $subject = "Password Reset Request";
        $message = "Please click the following link to reset your password: $reset_link
This link will expire in 1 hour.";
        
        // Send email using PHP's mail function
        if (mail($to, $subject, $message)) {
            header("Location: forgot_password.php?success=1");
        } else {
            echo "Error sending email. Please try again later.";
        }
    } else {
        header("Location: forgot_password.php?error=Email%20not%20found.");
    }
}
?>


<?php
// Configuration
$host = 'localhost';
$dbUsername = 'root'; // Change this to your database username
$dbPassword = '';     // Change this to your database password
$dbName = 'mydatabase'; // Change this to your database name

// Connect to the database
$conn = mysqli_connect($host, $dbUsername, $dbPassword, $dbName);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Check if form is submitted
if (isset($_POST['username_or_email'])) {
    $usernameOrEmail = $_POST['username_or_email'];
    
    // Sanitize input to prevent SQL injection
    $sanitizedInput = mysqli_real_escape_string($conn, $usernameOrEmail);
    
    // Query the database to check if username or email exists
    $sql = "SELECT * FROM users WHERE username='$sanitizedInput' OR email='$sanitizedInput'";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) == 0) {
        // User doesn't exist
        header("Location: forgot-password-form.php?error=User+not+found.");
        exit();
    } else {
        // Generate a unique password reset token and expiration time
        $token = md5(uniqid(rand(), true));
        $expirationTime = date('Y-m-d H:i:s', strtotime('+30 minutes'));
        
        // Update the database with the new token and expiration time
        $sqlUpdate = "UPDATE users SET reset_token='$token', reset_expires='$expirationTime' WHERE username='$sanitizedInput' OR email='$sanitizedInput'";
        mysqli_query($conn, $sqlUpdate);
        
        // Get user details
        $row = mysqli_fetch_assoc($result);
        
        // Send the password reset link to the user's email
        $to = $row['email'];
        $subject = "Password Reset Request";
        $message = "Hello " . $row['username'] . ",

You have requested a password reset. Please click the following link to reset your password:

http://example.com/reset-password.php?token=" . $token . "

This link will expire in 30 minutes.

If you did not request this password reset, please ignore this email.

Best regards,
Your Website Team";
        
        // Send the email
        if (mail($to, $subject, $message)) {
            header("Location: forgot-password-form.php?error=Password+reset+link+sent+to+your+email.");
            exit();
        } else {
            header("Location: forgot-password-form.php?error=Error+sending+email.");
            exit();
        }
    }
}

mysqli_close($conn);
?>


<?php
// Configuration
$host = 'localhost';
$dbUsername = 'root'; // Change this to your database username
$dbPassword = '';     // Change this to your database password
$dbName = 'mydatabase'; // Change this to your database name

// Connect to the database
$conn = mysqli_connect($host, $dbUsername, $dbPassword, $dbName);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Check if token is provided and valid
if (isset($_GET['token'])) {
    $token = $_GET['token'];
    
    // Sanitize input to prevent SQL injection
    $sanitizedToken = mysqli_real_escape_string($conn, $token);
    
    // Query the database to check if token exists and hasn't expired
    $sql = "SELECT * FROM users WHERE reset_token='$sanitizedToken' AND reset_expires > NOW()";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) == 0) {
        // Token is invalid or has expired
        header("Location: forgot-password-form.php?error=Invalid+or+expired+token.");
        exit();
    } else {
        // Display password reset form
        ?>
        <!DOCTYPE html>
        <html lang="en">
        <head>
            <meta charset="UTF-8">
            <title>Reset Password</title>
        </head>
        <body>
            <h2>Reset Password</h2>
            <?php
                // Show error message if exists
                if (isset($_GET['error'])) {
                    echo '<p style="color:red;">' . $_GET['error'] . '</p>';
                }
            ?>
            
            <form action="reset-password.php?token=<?php echo $token; ?>" method="POST">
                <label for="new_password">New Password:</label>
                <input type="password" id="new_password" name="new_password" required><br><br>
                
                <input type="submit" value="Reset Password">
            </form>
        <?php
    }
} else {
    // No token provided
    header("Location: forgot-password-form.php?error=No+token+provided.");
    exit();
}

if (isset($_POST['new_password'])) {
    $newPassword = $_POST['new_password'];
    
    // Sanitize input to prevent SQL injection
    $sanitizedToken = mysqli_real_escape_string($conn, $token);
    $sanitizedPassword = mysqli_real_escape_string($conn, $newPassword);
    
    // Update the password and clear the reset token
    $sqlUpdate = "UPDATE users SET password=MD5('$sanitizedPassword'), reset_token='', reset_expires='' WHERE reset_token='$sanitizedToken'";
    mysqli_query($conn, $sqlUpdate);
    
    // Close the database connection
    mysqli_close($conn);
    
    header("Location: login.php?message=Password+reset+successful.+Please+login+with+your+new+password.");
    exit();
}

mysqli_close($conn);
?>


<?php
// Database connection details
$host = 'localhost';
$user = 'username';
$password = 'password';
$db_name = 'database_name';

// Create database connection
$conn = new mysqli($host, $user, $password, $db_name);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to handle password reset request
function forgotPassword($email, $conn) {
    // Sanitize email input
    $email = mysqli_real_escape_string($conn, $email);
    
    // Check if email exists in database
    $sql = "SELECT id FROM users WHERE email='$email'";
    $result = $conn->query($sql);
    
    if ($result->num_rows == 0) {
        return "Email does not exist";
    }
    
    // Generate reset token
    $token = bin2hex(openssl_random_pseudo_bytes(16));
    
    // Insert token into database
    $sql = "UPDATE users SET reset_token='$token', reset_requested_at=NOW() WHERE email='$email'";
    if ($conn->query($sql)) {
        // Send reset email
        $to = $email;
        $subject = "Password Reset Request";
        $message = "
            <html>
            <body>
                <h2>Password Reset</h2>
                <p>Please click the following link to reset your password:</p>
                <a href='http://example.com/reset-password.php?token=$token'>Reset Password</a>
                <br><br>
                <small>This link will expire in 1 hour.</small>
            </body>
            </html>
        ";
        
        // Set headers
        $headers = "MIME-Version: 1.0\r
";
        $headers .= "Content-type: text/html; charset=UTF-8\r
";
        $headers .= "From: noreply@example.com\r
";
        
        // Send email
        if (mail($to, $subject, $message, $headers)) {
            return "Password reset email sent successfully. Please check your inbox.";
        } else {
            return "Error sending password reset email.";
        }
    } else {
        return "Error resetting password: " . $conn->error;
    }
}

// Handle form submission
if (isset($_POST['email'])) {
    $email = $_POST['email'];
    $response = forgotPassword($email, $conn);
    
    // Display response
    if (strpos($response, 'sent') !== false) {
        echo "<p style='color:green'>" . $response . "</p>";
    } else {
        echo "<p style='color:red'>" . $response . "</p>";
    }
}

// Close database connection
$conn->close();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <h2>Forgot Password</h2>
    <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
        <label for="email">Email:</label><br>
        <input type="email" id="email" name="email" required><br><br>
        <button type="submit">Send Reset Link</button>
    </form>
</body>
</html>


<?php
session_start();
require_once 'database.php'; // Include your database connection

if (isset($_GET['token']) && isset($_GET['id'])) {
    $token = mysqli_real_escape_string($conn, $_GET['token']);
    $user_id = mysqli_real_escape_string($conn, $_GET['id']);

    // Check if token is valid and not expired
    $sql = "SELECT id FROM password_reset WHERE user_id = ? AND token = ? AND expires > NOW()";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("is", $user_id, $token);
    $stmt->execute();
    
    if ($stmt->num_rows == 0) {
        die("Invalid or expired password reset link. Please request a new one.");
    }

    // Show the password reset form
?>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Reset Password</title>
</head>
<body>
    <h1>Reset Password</h1>
    
    <?php if (isset($_SESSION['message'])) { ?>
        <div class="<?php echo $_SESSION['type']; ?>"><?php echo $_SESSION['message']; ?></div>
    <?php unset($_SESSION['message']);
         unset($_SESSION['type']); } ?>

    <form method="post" action="reset_password.php">
        <label for="new_pass">New Password:</label><br>
        <input type="password" id="new_pass" name="new_pass" required><br><br>

        <label for="confirm_pass">Confirm New Password:</label><br>
        <input type="password" id="confirm_pass" name="confirm_pass" required><br><br>

        <input type="hidden" name="token" value="<?php echo $token; ?>">
        <input type="hidden" name="user_id" value="<?php echo $user_id; ?>">

        <input type="submit" value="Reset Password">
    </form>
</body>
</html>

<?php
} else {
    die("Invalid request. Please use the reset link from your email.");
}
?>



<?php
session_start();
require_once 'database.php';

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    if (!isset($_POST['new_pass'], $_POST['confirm_pass'], $_POST['token'], $_POST['user_id'])) {
        die("Invalid request parameters.");
    }

    $new_pass = trim($_POST['new_pass']);
    $confirm_pass = trim($_POST['confirm_pass']);

    // Validate password
    if ($new_pass !== $confirm_pass) {
        $_SESSION['message'] = "Passwords do not match!";
        $_SESSION['type'] = "error";
        header("Location: reset.php?token=".$_POST['token']."&id=".$_POST['user_id']);
        exit();
    }

    if (strlen($new_pass) < 8) {
        $_SESSION['message'] = "Password must be at least 8 characters long!";
        $_SESSION['type'] = "error";
        header("Location: reset.php?token=".$_POST['token']."&id=".$_POST['user_id']);
        exit();
    }

    // Hash the password
    $hashed_password = password_hash($new_pass, PASSWORD_DEFAULT);

    // Update the user's password
    try {
        $sql = "UPDATE users SET password = ? WHERE id = ?";
        $stmt = $conn->prepare($sql);
        $stmt->bind_param("si", $hashed_password, $_POST['user_id']);
        $stmt->execute();

        // Delete the reset token
        $delete_sql = "DELETE FROM password_reset WHERE user_id = ?";
        $del_stmt = $conn->prepare($delete_sql);
        $del_stmt->bind_param("i", $_POST['user_id']);
        $del_stmt->execute();

        $_SESSION['message'] = "Password successfully updated!";
        $_SESSION['type'] = "success";
        header("Location: login.php");
        exit();
    } catch (Exception $e) {
        die("Error updating password: " . $e->getMessage());
    }
} else {
    die("Invalid request method.");
}
?>



<?php
// Include database connection
include('db_connection.php');

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = mysqli_real_escape_string($conn, $_POST['email']);
    
    // Check if email exists in the database
    $sql = "SELECT id FROM users WHERE email='$email'";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) == 1) {
        // Generate a random token and expiration time
        $token = bin2hex(random_bytes(16));
        $expires = date('Y-m-d H:i:s', time() + 3600); // Token expires after 1 hour
        
        // Insert token into the database
        $sql_token = "INSERT INTO password_reset (user_id, token, expires) 
                     VALUES ('" . mysqli_insert_id($conn) . "', '$token', '$expires')";
        mysqli_query($conn, $sql_token);
        
        // Send email to user with reset link
        $reset_link = "http://yourdomain.com/reset_password.php?token=$token";
        $to = $email;
        $subject = 'Password Reset Request';
        $message = "You requested a password reset.

Please click this link to reset your password:
$reset_link

If you did not request this, please ignore this email.";
        
        if (mail($to, $subject, $message)) {
            echo "An email has been sent with instructions to reset your password.";
        } else {
            echo "There was an error sending the email. Please try again later.";
        }
    } else {
        echo "No account found with that email address.";
    }
}
?>


<?php
// Include database connection
include('db_connection.php');

if (isset($_GET['token'])) {
    $token = mysqli_real_escape_string($conn, $_GET['token']);
    
    // Check if token exists and is not expired
    $sql_check_token = "SELECT user_id FROM password_reset 
                       WHERE token='$token' AND expires > NOW()";
    $result = mysqli_query($conn, $sql_check_token);
    
    if (mysqli_num_rows($result) == 1) {
        // Token is valid, display password reset form
        ?>
        <!DOCTYPE html>
        <html>
        <head>
            <title>Reset Password</title>
        </head>
        <body>
            <h2>Reset Password</h2>
            <form action="reset_password.php?token=<?php echo $token; ?>" method="post">
                <label for="new_password">New Password:</label><br>
                <input type="password" id="new_password" name="new_password" required><br>
                <label for="confirm_password">Confirm Password:</label><br>
                <input type="password" id="confirm_password" name="confirm_password" required><br>
                <input type="submit" value="Reset Password">
            </form>
        <?php
    } else {
        echo "Invalid or expired token. Please request a new password reset.";
    }
} elseif ($_SERVER["REQUEST_METHOD"] == "POST") {
    $token = mysqli_real_escape_string($conn, $_GET['token']);
    $new_password = mysqli_real_escape_string($conn, $_POST['new_password']);
    $confirm_password = mysqli_real_escape_string($conn, $_POST['confirm_password']);
    
    if ($new_password != $confirm_password) {
        die("Passwords do not match.");
    }
    
    // Check if token is valid
    $sql_check_token = "SELECT user_id FROM password_reset 
                       WHERE token='$token' AND expires > NOW()";
    $result = mysqli_query($conn, $sql_check_token);
    
    if (mysqli_num_rows($result) == 1) {
        $row = mysqli_fetch_assoc($result);
        $user_id = $row['user_id'];
        
        // Update user's password
        $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);
        $sql_update = "UPDATE users SET password='$hashed_password' WHERE id=$user_id";
        mysqli_query($conn, $sql_update);
        
        // Delete used token
        $sql_delete_token = "DELETE FROM password_reset WHERE token='$token'";
        mysqli_query($conn, $sql_delete_token);
        
        echo "Password has been reset successfully. Please login with your new password.";
    } else {
        die("Invalid or expired token.");
    }
}
?>
</body>
</html>


<?php
session_start();
include('db_connect.php'); // Include your database connection file

// Error handling function
function setError($message) {
    $_SESSION['error'] = $message;
}

// Success message handling function
function setSuccess($message) {
    $_SESSION['success'] = $message;
}

// Generate a unique token for password reset
function generateToken() {
    return uniqid(mt_rand(), true);
}

// Function to send reset password email
function sendResetEmail($email, $token) {
    $to = $email;
    $subject = "Password Reset Request";
    
    $message = "
        <html>
            <head></head>
            <body>
                <h2>Password Reset</h2>
                <p>Please click the link below to reset your password:</p>
                <a href='http://yourdomain.com/reset_password.php?token=$token'>Reset Password</a><br><br>
                <small>If you did not request this password reset, please ignore this email.</small>
            </body>
        </html>
    ";
    
    $headers = "MIME-Version: 1.0" . "\r
";
    $headers .= "Content-type:text/html;charset=UTF-8" . "\r
";
    $headers .= "From: yourname@yourdomain.com" . "\r
"; // Change this to your email
    
    mail($to, $subject, $message, $headers);
}

// Main logic for forgot password
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $email = mysqli_real_escape_string($conn, $_POST['email']);
    
    if (empty($email)) {
        setError("Please enter your email address.");
        header('Location: forgot_password.php');
        exit();
    }
    
    // Check if email exists in database
    $sql = "SELECT id FROM users WHERE email='$email'";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) == 0) {
        setError("No account found with this email address.");
        header('Location: forgot_password.php');
        exit();
    }
    
    // Generate token and expiration time
    $token = generateToken();
    $expires = date('Y-m-d H:i:s', strtotime('+1 hour'));
    
    // Insert token into database
    $sql = "INSERT INTO password_resets (user_id, token, created_at) 
            VALUES ('$email', '$token', '$expires')";
            
    if (!mysqli_query($conn, $sql)) {
        setError("Error occurred while sending reset link. Please try again.");
        header('Location: forgot_password.php');
        exit();
    }
    
    // Send reset email
    sendResetEmail($email, $token);
    
    setSuccess("A password reset link has been sent to your email address.");
    header('Location: login.php');
}
?>


<?php
session_start();
include('db_connect.php');

// Error handling function
function setError($message) {
    $_SESSION['error'] = $message;
}

// Success message handling function
function setSuccess($message) {
    $_SESSION['success'] = $message;
}

if ($_SERVER['REQUEST_METHOD'] == 'GET') {
    $token = $_GET['token'];
    
    // Check if token exists and is valid
    $sql = "SELECT * FROM password_resets 
            WHERE token='$token' AND created_at >= NOW() - INTERVAL 1 HOUR";
    
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) == 0) {
        setError("Invalid or expired reset link. Please request a new password reset.");
        header('Location: forgot_password.php');
        exit();
    }
}

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $token = $_GET['token'];
    $password = $_POST['new_password'];
    
    // Validate password requirements
    if (empty($password) || strlen($password) < 6) {
        setError("Password must be at least 6 characters long.");
        header('Location: reset_password.php?token=' . $token);
        exit();
    }
    
    // Check token validity
    $sql = "SELECT * FROM password_resets 
            WHERE token='$token' AND created_at >= NOW() - INTERVAL 1 HOUR";
    
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) == 0) {
        setError("Invalid or expired reset link. Please request a new password reset.");
        header('Location: forgot_password.php');
        exit();
    }
    
    // Get user email from token
    $row = mysqli_fetch_assoc($result);
    $email = $row['user_id'];
    
    // Update password in users table
    $new_password_hash = md5($password); // Use better hashing in production (e.g., bcrypt)
    
    $sql = "UPDATE users SET password='$new_password_hash' WHERE email='$email'";
    
    if (!mysqli_query($conn, $sql)) {
        setError("Error resetting password. Please try again.");
        header('Location: reset_password.php?token=' . $token);
        exit();
    }
    
    // Delete token from password_resets table
    $sql = "DELETE FROM password_resets WHERE token='$token'";
    mysqli_query($conn, $sql);
    
    setSuccess("Your password has been successfully reset.");
    header('Location: login.php');
}
?>


<?php
// Database connection
$host = 'localhost';
$user = 'username';
$password = 'password';
$db_name = 'database';

$conn = mysqli_connect($host, $user, $password, $db_name);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = $_POST['email'];

    // Check if email exists in the database
    $sql = "SELECT id FROM users WHERE email='$email'";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) > 0) {
        // Generate a random token
        $token = bin2hex(random_bytes(16));
        
        // Update the database with the new token and expiration time
        $expires = date('Y-m-d H:i:s', strtotime('+1 hour'));
        $updateSql = "UPDATE users SET reset_token='$token', reset_expires='$expires' WHERE email='$email'";
        mysqli_query($conn, $updateSql);

        // Send email with the reset link
        $to = $email;
        $subject = "Password Reset Request";
        $message = "
            <html>
            <head></head>
            <body>
                <h2>Password Reset</h2>
                <p>Please click the following link to reset your password:</p>
                <a href='http://example.com/reset.php?token=$token'>Reset Password</a>
                <br><br>
                This link will expire in 1 hour.
            </body>
            </html>
        ";
        $headers = "MIME-Version: 1.0" . "\r
";
        $headers .= "Content-type:text/html;charset=UTF-8" . "\r
";
        $headers .= "From: noreply@example.com";

        if (mail($to, $subject, $message, $headers)) {
            // Redirect back to the forgot password page with success message
            header("Location: forgot_password.php?success=1");
            exit();
        } else {
            echo "Email could not be sent.";
        }
    } else {
        // Email does not exist in the database
        echo "Email address not found!";
    }
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Forgot Password</title>
</head>
<body>
    <h2>Forgot Password</h2>
    
    <?php
    if (isset($_GET['success'])) {
        echo "<p style='color:green'>An email has been sent to your inbox with a password reset link.</p>";
    }
    ?>

    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <input type="email" name="email" placeholder="Enter your email address" required><br>
        <input type="submit" value="Submit">
    </form>

</body>
</html>


<?php
// Database connection configuration
$host = 'localhost';
$db_name = 'your_database';
$username = 'your_username';
$password = 'your_password';

try {
    $conn = new PDO("mysql:host=$host;dbname=$db_name", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    die('Connection Error: ' . $e->getMessage());
}

// Check if form is submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Get email from POST data
    $email = $_POST['email'];

    // Validate email format
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        die('Invalid email format');
    }

    try {
        // Check if email exists in database
        $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
        $stmt->execute([$email]);
        $user = $stmt->fetch(PDO::FETCH_ASSOC);

        if (!$user) {
            die('No account found with this email');
        }

        // Generate temporary password
        $tempPassword = md5(rand(0, 10000));
        $hashedTempPassword = password_hash($tempPassword, PASSWORD_DEFAULT);

        // Update user's password in database
        $updateStmt = $conn->prepare("UPDATE users SET password = ? WHERE id = ?");
        $updateStmt->execute([$hashedTempPassword, $user['id']]);

        // Send email with temporary password
        $to = $email;
        $subject = "Temporary Password Reset";
        $message = "Your temporary password is: $tempPassword
Please login and reset your password.";
        
        if (mail($to, $subject, $message)) {
            echo 'A temporary password has been sent to your email.';
        } else {
            die('Failed to send email');
        }

    } catch(PDOException $e) {
        die('Error: ' . $e->getMessage());
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <h2>Forgot Password</h2>
    <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
        <label for="email">Email:</label><br>
        <input type="text" id="email" name="email"><br><br>
        <input type="submit" value="Submit">
    </form>
</body>
</html>


<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
    <script>
        function validateEmail() {
            const email = document.getElementById('email').value;
            const errorDiv = document.getElementById('error');
            
            if (email === '') {
                errorDiv.textContent = 'Please enter your email address.';
                return false;
            }
            
            // Basic email validation
            const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
            if (!email.match(emailRegex)) {
                errorDiv.textContent = 'Please enter a valid email address.';
                return false;
            }
            
            return true;
        }
    </script>
</head>
<body>
    <h2>Forgot Password</h2>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post" onsubmit="return validateEmail()">
        <div id="error"></div>
        <p>Please enter your registered email address:</p>
        <input type="email" name="email" id="email" required>
        <br><br>
        <input type="submit" value="Reset Password">
    </form>
</body>
</html>

<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$database = 'mydatabase';

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $email = htmlspecialchars($_POST['email']);
    
    // Sanitize email (prevent SQL injection)
    $conn = new mysqli($host, $username, $password, $database);
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }
    
    $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
    $stmt->bind_param('s', $email);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows == 0) {
        echo "Email not found. Please check your email.";
    } else {
        // Generate token and expiration time
        $token = uniqid() . rand(1000, 9999);
        $expires = date('Y-m-d H:i:s', strtotime('+60 minutes'));
        
        // Update the database with the new token and expiration
        $updateStmt = $conn->prepare("UPDATE users SET reset_token = ?, reset_expires = ? WHERE email = ?");
        $updateStmt->bind_param('sss', $token, $expires, $email);
        $updateStmt->execute();
        
        // Close connections
        $updateStmt->close();
        $stmt->close();
        $conn->close();
        
        // Send email with reset link
        $to = $email;
        $subject = "Password Reset Request";
        $message = "Please click the following link to reset your password:

http://example.com/reset_password.php?token=$token

If you did not request this, please ignore this email.";
        $headers = "From: noreply@example.com";
        
        mail($to, $subject, $message, $headers);
        
        echo "An email has been sent to $email with instructions to reset your password.";
    }
}
?>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$database = 'mydatabase';

if (isset($_GET['token'])) {
    $token = htmlspecialchars($_GET['token']);
    
    // Check if token exists and is valid
    $conn = new mysqli($host, $username, $password, $database);
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }
    
    // Check token expiration and validity
    $stmt = $conn->prepare("SELECT id FROM users WHERE reset_token = ? AND reset_expires > NOW() AND active = 1");
    $stmt->bind_param('s', $token);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows == 0) {
        echo "Invalid or expired token.";
    } else {
        // Token is valid, show password reset form
?>
<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <h2>Reset Password</h2>
    <form action="change_password.php" method="post">
        <input type="hidden" name="token" value="<?php echo $token; ?>">
        <p>New Password:</p>
        <input type="password" name="new_password" required>
        <br><br>
        <input type="submit" value="Change Password">
    </form>
</body>
</html>
<?php
    }
    
    // Close connections
    $stmt->close();
    $conn->close();
} else {
    echo "No token provided.";
}
?>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$database = 'mydatabase';

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $token = htmlspecialchars($_POST['token']);
    $newPassword = htmlspecialchars($_POST['new_password']);
    
    // Validate token again
    $conn = new mysqli($host, $username, $password, $database);
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }
    
    $stmt = $conn->prepare("SELECT id FROM users WHERE reset_token = ? AND reset_expires > NOW() AND active = 1");
    $stmt->bind_param('s', $token);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows == 0) {
        echo "Invalid or expired token.";
    } else {
        // Update password
        $hash = password_hash($newPassword, PASSWORD_DEFAULT);
        
        $updateStmt = $conn->prepare("UPDATE users SET password = ?, reset_token = NULL WHERE reset_token = ?");
        $updateStmt->bind_param('ss', $hash, $token);
        $updateStmt->execute();
        
        // Invalidate the token
        $invalidateStmt = $conn->prepare("UPDATE users SET reset_token = NULL WHERE reset_token = ?");
        $invalidateStmt->bind_param('s', $token);
        $invalidateStmt->execute();
        
        echo "Password has been successfully updated.";
    }
    
    // Close connections
    $stmt->close();
    $updateStmt->close();
    $invalidateStmt->close();
    $conn->close();
}
?>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$database = 'mydatabase';

// Create connection
$conn = new mysqli($host, $username, $password, $database);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// If form submitted
if (isset($_POST['reset'])) {
    // Get email from form
    $email = $_POST['email'];

    // Sanitize email
    $email = mysqli_real_escape_string($conn, $email);

    // Check if email exists in database
    $sql = "SELECT id FROM users WHERE email = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("s", $email);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        // Generate random string token
        $token = md5(uniqid());

        // Update database with token and expiration time (1 hour)
        $expires = date('Y-m-d H:i:s', strtotime('+1 hour'));
        $sql = "UPDATE users SET reset_token = ?, reset_expires = ? WHERE email = ?";
        $stmt = $conn->prepare($sql);
        $stmt->bind_param("sss", $token, $expires, $email);
        $stmt->execute();

        // Send email to user
        $to = $email;
        $subject = "Password Reset Request";
        $message = "Please click the following link to reset your password: http://example.com/reset-password.php?token=$token";
        $headers = "From: noreply@example.com\r
";

        if (mail($to, $subject, $message, $headers)) {
            echo "An email has been sent to $email with instructions to reset your password.";
            // Redirect back to login page after 5 seconds
            header("Refresh:5; url=login.php");
        } else {
            echo "There was an error sending the email. Please try again later.";
        }
    } else {
        echo "No account found with this email address.";
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <h2>Forgot Password</h2>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <input type="email" name="email" placeholder="Enter your email address" required><br><br>
        <button type="submit" name="reset">Reset Password</button>
    </form>
    <p><?php if (isset($_GET['error'])) echo $_GET['error']; ?></p>
</body>
</html>

<?php
// Close database connection
$conn->close();
?>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$database = 'mydatabase';

// Create connection
$conn = new mysqli($host, $username, $password, $database);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Get token from URL
if (isset($_GET['token'])) {
    $token = $_GET['token'];
} else {
    // No token provided
    header("Location: login.php?error=invalid_token");
    exit();
}

// Check if token exists and is valid
$sql = "SELECT id, email FROM users WHERE reset_token = ? AND reset_expires > NOW()";
$stmt = $conn->prepare($sql);
$stmt->bind_param("s", $token);
$stmt->execute();
$result = $stmt->get_result();

if ($result->num_rows == 0) {
    // Invalid or expired token
    header("Location: login.php?error=invalid_token");
    exit();
} else {
    // Token is valid
    if (isset($_POST['new_password'])) {
        // Get new password and confirm it matches
        $password = $_POST['new_password'];
        $confirm_password = $_POST['confirm_password'];

        if ($password != $confirm_password) {
            echo "Passwords do not match. Please try again.";
        } else {
            // Update the password in the database
            $hashed_password = password_hash($password, PASSWORD_DEFAULT);
            $sql = "UPDATE users SET password = ?, reset_token = NULL, reset_expires = NULL WHERE reset_token = ?";
            $stmt = $conn->prepare($sql);
            $stmt->bind_param("ss", $hashed_password, $token);
            $stmt->execute();

            // Redirect to login page with success message
            header("Location: login.php?success=password_reset");
            exit();
        }
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <h2>Reset Your Password</h2>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>?token=<?php echo $token; ?>" method="post">
        <input type="password" name="new_password" placeholder="Enter new password" required><br><br>
        <input type="password" name="confirm_password" placeholder="Confirm new password" required><br><br>
        <button type="submit">Reset Password</button>
    </form>
</body>
</html>

<?php
// Close database connection
$conn->close();
?>


<?php
// Include configuration file
include('config.php');

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = $_POST['email'];
    
    // Validate email
    if (empty($email)) {
        $error = "Email is required!";
        echo "<script>alert('$error');</script>";
        exit();
    }
    
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        $error = "Invalid email format!";
        echo "<script>alert('$error');</script>";
        exit();
    }
    
    // Check if email exists in database
    $stmt = $conn->prepare("SELECT * FROM users WHERE email = ?");
    $stmt->bind_param("s", $email);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows == 0) {
        $error = "Email not found!";
        echo "<script>alert('$error');</script>";
        exit();
    }
    
    // Generate reset token
    $token = bin2hex(random_bytes(16));
    $expires = date('Y-m-d H:i:s', time() + 3600); // Token expires after 1 hour
    
    // Update the database with reset token and expiration time
    $stmt = $conn->prepare("UPDATE users SET reset_token = ?, reset_expires = ? WHERE email = ?");
    $stmt->bind_param("sss", $token, $expires, $email);
    $stmt->execute();
    
    // Send reset link to user's email
    $to = $email;
    $subject = "Password Reset Request";
    $message = "Click the following link to reset your password: http://".$_SERVER['HTTP_HOST']."/reset-password.php?token=".$token;
    $headers = "From: your_email@example.com";
    
    if (mail($to, $subject, $message, $headers)) {
        $success = "Password reset link has been sent to your email!";
        echo "<script>alert('$success');</script>";
    } else {
        $error = "Failed to send password reset email!";
        echo "<script>alert('$error');</script>";
    }
}
?>


<?php
// Include configuration file
include('config.php');

if (isset($_GET['token'])) {
    $token = $_GET['token'];
    
    // Check if token exists in database and is not expired
    $stmt = $conn->prepare("SELECT * FROM users WHERE reset_token = ? AND reset_expires > NOW()");
    $stmt->bind_param("s", $token);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows == 0) {
        die("Invalid or expired token!");
    }
} else {
    die("No token provided!");
}

// If form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];
    
    if ($password != $confirm_password) {
        die("Passwords do not match!");
    }
    
    // Hash the password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);
    
    // Update the user's password and clear reset token
    $stmt = $conn->prepare("UPDATE users SET password = ?, reset_token = NULL, reset_expires = NULL WHERE reset_token = ?");
    $stmt->bind_param("ss", $hashed_password, $token);
    $stmt->execute();
    
    echo "Password has been reset successfully!";
}
?>


<?php
// Database connection
$host = 'localhost';
$dbname = 'mydatabase';
$username = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

// Generate a random token
function generateToken() {
    $token = bin2hex(random_bytes(16)); // Generates a 32-character hexadecimal string
    return $token;
}

// Check if the token exists and is valid (not expired)
function isValidToken($conn, $token) {
    $stmt = $conn->prepare("SELECT * FROM password_reset WHERE token = :token AND expiration_date > NOW()");
    $stmt->bindParam(':token', $token);
    $stmt->execute();
    
    return $stmt->rowCount() > 0;
}

// Reset password function
function resetPassword($conn, $email, $new_password) {
    // Hash the new password
    $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);
    
    try {
        $stmt = $conn->prepare("UPDATE users SET password = :password WHERE email = :email");
        $stmt->bindParam(':password', $hashed_password);
        $stmt->bindParam(':email', $email);
        $stmt->execute();
        
        // Delete the token after successful reset
        $deleteStmt = $conn->prepare("DELETE FROM password_reset WHERE email = :email");
        $deleteStmt->bindParam(':email', $email);
        $deleteStmt->execute();
        
        return true;
    } catch(PDOException $e) {
        echo "Error updating password: " . $e->getMessage();
        return false;
    }
}

// Main function to handle forgot password
function forgotPassword($conn, $email) {
    // Check if email exists in database
    try {
        $stmt = $conn->prepare("SELECT id FROM users WHERE email = :email");
        $stmt->bindParam(':email', $email);
        $stmt->execute();
        
        if ($stmt->rowCount() == 0) {
            return "Email not found!";
        }
        
        // Generate a new token
        $token = generateToken();
        
        // Check if existing token exists for this email
        $checkStmt = $conn->prepare("SELECT id FROM password_reset WHERE email = :email");
        $checkStmt->bindParam(':email', $email);
        $checkStmt->execute();
        
        if ($checkStmt->rowCount() > 0) {
            // Update the token and expiration date
            $updateStmt = $conn->prepare("UPDATE password_reset SET token = :token, expiration_date = DATE_ADD(NOW(), INTERVAL 1 HOUR) WHERE email = :email");
            $updateStmt->bindParam(':token', $token);
            $updateStmt->bindParam(':email', $email);
            $updateStmt->execute();
        } else {
            // Insert new token
            $insertStmt = $conn->prepare("INSERT INTO password_reset (email, token, expiration_date) VALUES (:email, :token, DATE_ADD(NOW(), INTERVAL 1 HOUR))");
            $insertStmt->bindParam(':email', $email);
            $insertStmt->bindParam(':token', $token);
            $insertStmt->execute();
        }
        
        // Send email with reset link
        $resetLink = "http://yourwebsite.com/reset-password.php?token=" . $token;
        $subject = "Password Reset Request";
        $message = "Please click the following link to reset your password: 
" . $resetLink;
        $headers = "From: no-reply@yourwebsite.com\r
";
        
        if (mail($email, $subject, $message, $headers)) {
            return "A password reset email has been sent to your email address.";
        } else {
            return "Error sending email. Please try again later.";
        }
    } catch(PDOException $e) {
        echo "Error: " . $e->getMessage();
        return false;
    }
}

// Example usage
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    if (isset($_POST['email'])) {
        $email = $_POST['email'];
        echo forgotPassword($conn, $email);
    }
}
?>


<?php
// Database connection (same as above)
require_once 'db_connection.php';

if (isset($_GET['token'])) {
    $token = $_GET['token'];
    
    if (!isValidToken($conn, $token)) {
        die("Invalid or expired token!");
    }
    
    // Show password reset form
    ?>
    <form method="post" action="">
        New Password: <input type="password" name="new_password" required><br>
        Confirm Password: <input type="password" name="confirm_password" required><br>
        <input type="submit" value="Reset Password">
    </form>
    <?php
} else {
    die("No token provided!");
}

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $token = $_GET['token'];
    
    if (!isset($_POST['new_password']) || !isset($_POST['confirm_password'])) {
        die("Please fill in all fields!");
    }
    
    if ($_POST['new_password'] != $_POST['confirm_password']) {
        die("Passwords do not match!");
    }
    
    $stmt = $conn->prepare("SELECT email FROM password_reset WHERE token = :token");
    $stmt->bindParam(':token', $token);
    $stmt->execute();
    $result = $stmt->fetch(PDO::FETCH_ASSOC);
    
    if ($result) {
        $email = $result['email'];
        
        if (resetPassword($conn, $email, $_POST['new_password'])) {
            echo "Your password has been reset successfully!";
        } else {
            die("Error resetting password!");
        }
    } else {
        die("Invalid token!");
    }
}
?>


<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <h2>Forgot Password</h2>
    <?php
    if (isset($_GET['error'])) {
        echo "<p style='color:red;'>".$_GET['error']."</p>";
    }
    ?>
    
    <form action="forgot_password.php" method="post">
        <label for="email">Enter your email address:</label><br>
        <input type="email" id="email" name="email" required><br>
        <button type="submit">Request Password Reset</button>
    </form>

    <p>Remember your password? <a href="login.php">Login here</a></p>
</body>
</html>


<?php
// Configuration
$host = 'localhost';
$username = 'root'; // Database username
$password = '';     // Database password
$database = 'test_db';

// Create connection
$conn = mysqli_connect($host, $username, $password, $database);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

if (isset($_POST['email'])) {
    $email = $_POST['email'];

    // Check if email exists in the database
    $query = "SELECT id FROM users WHERE email = ? AND account_status = 'active'";
    $stmt = mysqli_prepare($conn, $query);
    mysqli_stmt_bind_param($stmt, 's', $email);

    if (mysqli_stmt_execute($stmt)) {
        $result = mysqli_stmt_get_result($stmt);
        
        if ($row = mysqli_fetch_assoc($result)) {
            // Generate a random token
            $token = bin2hex(random_bytes(16)); // 32-character hexadecimal string
            $token_expires = date('Y-m-d H:i:s', strtotime('+1 hour'));

            // Update the database with the new token and expiration time
            $update_query = "UPDATE users SET reset_token = ?, token_expires = ? WHERE id = ?";
            $update_stmt = mysqli_prepare($conn, $update_query);
            mysqli_stmt_bind_param($update_stmt, 'sss', $token, $token_expires, $row['id']);

            if (mysqli_stmt_execute($update_stmt)) {
                // Send the reset email
                $reset_url = "http://$_SERVER[HTTP_HOST]/reset_password.php?token=$token";

                $to = $email;
                $subject = 'Password Reset Request';
                $message = '
                    <html>
                        <body>
                            <h2>Password Reset</h2>
                            <p>We received a request to reset your password. Click the following link to reset it:</p>
                            <a href="' . $reset_url . '">Reset Password</a><br><br>
                            <small>If you didn\'t make this request, you can safely ignore this email.</small>
                        </body>
                    </html>';
                $headers = 'MIME-Version: 1.0' . "\r
";
                $headers .= 'Content-type: text/html; charset=UTF-8' . "\r
";
                $headers .= 'From: webmaster@example.com' . "\r
";

                if (mail($to, $subject, $message, $headers)) {
                    header("Location: forgot_password.php?success=1");
                } else {
                    echo "Error sending email.";
                }
            }
        } else {
            // Email doesn't exist in the database
            header("Location: forgot_password.php?error=Email%20not%20found.");
        }
    }

    mysqli_close($conn);
}
?>


<?php
if (!isset($_GET['token'])) {
    die("Invalid request.");
}

$token = $_GET['token'];
?>
<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <?php
    if (isset($_GET['error'])) {
        echo "<p style='color:red;'>".$_GET['error']."</p>";
    }
    ?>

    <h2>Reset Password</h2>
    
    <form action="update_password.php" method="post">
        <input type="hidden" name="token" value="<?php echo $token; ?>">
        <label for="new_password">New Password:</label><br>
        <input type="password" id="new_password" name="new_password" required><br>
        <label for="confirm_password">Confirm Password:</label><br>
        <input type="password" id="confirm_password" name="confirm_password" required><br>
        <button type="submit">Reset Password</button>
    </form>
</body>
</html>


<?php
// Configuration
$host = 'localhost';
$username = 'root'; // Database username
$password = '';     // Database password
$database = 'test_db';

// Create connection
$conn = mysqli_connect($host, $username, $password, $database);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

if (isset($_GET['token'])) {
    $token = $_GET['token'];

    // Check if token exists and is valid
    $query = "SELECT id FROM users WHERE reset_token = ? AND token_expires > NOW()";
    $stmt = mysqli_prepare($conn, $query);
    mysqli_stmt_bind_param($stmt, 's', $token);

    if (mysqli_stmt_execute($stmt)) {
        $result = mysqli_stmt_get_result($stmt);

        if ($row = mysqli_fetch_assoc($result)) {
            // Token is valid and belongs to a user
            $_SESSION['reset_user_id'] = $row['id'];
            header("Location: reset_password.php?token=$token");
        } else {
            // Invalid token or expired
            die("Invalid or expired token.");
        }
    }

    mysqli_close($conn);
}
?>


<?php
session_start();
require_once 'validate_reset_token.php'; // Include the validation script

if (!isset($_POST['new_password']) || !isset($_POST['confirm_password'])) {
    die("Invalid request.");
}

$ newPassword = $_POST['new_password'];
$ confirm_Password = $_POST['confirm_password'];

if ($newPassword !== $confirm_Password) {
    die("Passwords do not match.");
}

// Configuration
$host = 'localhost';
$username = 'root'; // Database username
$password = '';     // Database password
$database = 'test_db';

// Create connection
$conn = mysqli_connect($host, $username, $password, $database);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

$user_id = $_SESSION['reset_user_id'];
$new_password_hash = password_hash($newPassword, PASSWORD_DEFAULT);

// Update the password in the database
$query = "UPDATE users SET password_hash = ?, reset_token = NULL, token_expires = NULL WHERE id = ?";
$stmt = mysqli_prepare($conn, $query);
mysqli_stmt_bind_param($stmt, 'si', $new_password_hash, $user_id);

if (mysqli_stmt_execute($stmt)) {
    session_unset();
    header("Location: login.php?success=Password%20reset%20successful.");
} else {
    echo "Error updating password.";
}

mysqli_close($conn);
?>


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Password Reset</title>
</head>
<body>
    <?php
        // Check if form is submitted
        if ($_SERVER["REQUEST_METHOD"] == "POST") {
            $email = trim($_POST['email']);
            
            // Database connection details
            $host = 'localhost';
            $dbUsername = 'username';
            $dbPassword = 'password';
            $dbName = 'database_name';

            try {
                $conn = new PDO("mysql:host=$host;dbname=$dbName", $dbUsername, $dbPassword);
                $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

                // Check if email exists
                $stmt = $conn->prepare("SELECT id FROM users WHERE email = :email");
                $stmt->bindParam(':email', $email);
                $stmt->execute();

                if ($stmt->rowCount() > 0) {
                    // Generate token and expiration time
                    $token = bin2hex(random_bytes(16));
                    $expires = strtotime('+30 minutes');

                    // Insert into reset table
                    $resetStmt = $conn->prepare("INSERT INTO password_reset (email, token, expires) VALUES (:email, :token, :expires)");
                    $resetStmt->bindParam(':email', $email);
                    $resetStmt->bindParam(':token', $token);
                    $resetStmt->bindParam(':expires', date('Y-m-d H:i:s', $expires));
                    $resetStmt->execute();

                    // Send email with reset link
                    $to = $email;
                    $subject = "Password Reset Request";
                    $message = "Please click this link to reset your password: http://yourwebsite.com/reset_password.php?token=$token&email=$email";
                    $headers = "From: noreply@yourwebsite.com";

                    mail($to, $subject, $message, $headers);

                    echo "A password reset link has been sent to your email.";
                } else {
                    echo "Email not found in our records.";
                }
            } catch(PDOException $e) {
                echo "Error: " . $e->getMessage();
            }
        }
    ?>
    
    <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
        Email: <input type="email" name="email"><br>
        <input type="submit" value="Reset Password">
    </form>
</body>
</html>


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Reset Password</title>
</head>
<body>
    <?php
        // Check for token and email in URL
        if (!isset($_GET['token']) || !isset($_GET['email'])) {
            die("Invalid request.");
        }

        $token = $_GET['token'];
        $email = $_GET['email'];

        // Database connection
        try {
            $conn = new PDO("mysql:host=localhost;dbname=database_name", "username", "password");
            $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

            // Check if token is valid and not expired
            $stmt = $conn->prepare("SELECT id FROM password_reset WHERE token = :token AND email = :email AND expires > NOW()");
            $stmt->bindParam(':token', $token);
            $stmt->bindParam(':email', $email);
            $stmt->execute();

            if ($stmt->rowCount() == 0) {
                die("Invalid or expired reset link.");
            }

            // If form submitted
            if ($_SERVER["REQUEST_METHOD"] == "POST") {
                $newPassword = trim($_POST['password']);
                $confirmPassword = trim($_POST['confirm_password']);

                if ($newPassword != $confirmPassword) {
                    die("Passwords do not match.");
                }

                // Update password in users table
                $hash = password_hash($newPassword, PASSWORD_DEFAULT);
                $updateStmt = $conn->prepare("UPDATE users SET password = :password WHERE email = :email");
                $updateStmt->bindParam(':password', $hash);
                $updateStmt->bindParam(':email', $email);
                $updateStmt->execute();

                // Delete reset record
                $deleteStmt = $conn->prepare("DELETE FROM password_reset WHERE token = :token AND email = :email");
                $deleteStmt->bindParam(':token', $token);
                $deleteStmt->bindParam(':email', $email);
                $deleteStmt->execute();

                echo "Password updated successfully!";
            }
        } catch(PDOException $e) {
            die("Error: " . $e->getMessage());
        }
    ?>

    <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
        New Password: <input type="password" name="password"><br>
        Confirm Password: <input type="password" name="confirm_password"><br>
        <input type="submit" value="Reset">
    </form>
</body>
</html>


<?php
// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'mydatabase';

// Create database connection
$conn = new mysqli($host, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function forgotPassword($email, $conn) {
    // Check if email exists in the database
    $sql = "SELECT id FROM users WHERE email = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param('s', $email);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows === 0) {
        return "Email not found in our records.";
    }

    // Generate a random token for password reset
    $token = bin2hex(random_bytes(16));
    
    // Store the token and expiration time in the database
    $expires = date('Y-m-d H:i:s', strtotime('+1 hour'));
    $sql = "UPDATE users SET reset_token = ?, reset_expires = ? WHERE email = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param('sss', $token, $expires, $email);
    $stmt->execute();

    // Send the password reset link to the user's email
    $to = $email;
    $subject = "Password Reset Request";
    $message = "Please click the following link to reset your password: http://example.com/reset-password.php?token=$token

If you did not request a password reset, please ignore this email.";
    
    // Set mail headers
    $headers = "From: noreply@example.com\r
";
    $headers .= "Reply-To: noreply@example.com\r
";
    $headers .= "X-Mailer: PHP/" . phpversion();

    if (mail($to, $subject, $message, $headers)) {
        return "Password reset email has been sent to your email address.";
    } else {
        return "Failed to send password reset email. Please try again later.";
    }
}

// Example usage:
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = $_POST['email'];
    echo forgotPassword($email, $conn);
}
?>


<?php
// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'mydatabase';

// Create database connection
$conn = new mysqli($host, $username, $password, $dbname);

function validateResetToken($token, $conn) {
    // Check if token exists and is valid
    $sql = "SELECT id FROM users WHERE reset_token = ? AND reset_expires > NOW()";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param('s', $token);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows === 0) {
        return false;
    }

    return true;
}

function resetPassword($token, $newPassword, $conn) {
    // Check if token is valid
    if (!validateResetToken($token, $conn)) {
        return "Invalid or expired password reset link.";
    }

    // Hash the new password
    $hashedPassword = password_hash($newPassword, PASSWORD_DEFAULT);

    // Update the user's password and clear the reset token
    $sql = "UPDATE users SET password = ?, reset_token = NULL, reset_expires = NULL WHERE reset_token = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param('ss', $hashedPassword, $token);
    $stmt->execute();

    return "Your password has been successfully updated.";
}

// Example usage:
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $token = $_GET['token'];
    $newPassword = $_POST['new_password'];
    echo resetPassword($token, $newPassword, $conn);
}
?>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'mydatabase';

// Create connection
$conn = new mysqli($host, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to send password reset email
function sendPasswordResetEmail($email, $token) {
    $to = $email;
    $subject = "Password Reset Request";
    $message = "
        <html>
            <body>
                <p>Hello,</p>
                <p>You have requested a password reset. Click the link below to reset your password:</p>
                <a href='http://localhost/reset_password.php?token=$token'>Reset Password</a><br><br>
                <p>If you did not request this, please ignore this email.</p>
            </body>
        </html>
    ";
    $headers = "MIME-Version: 1.0" . "\r
";
    $headers .= "Content-type:text/html;charset=UTF-8" . "\r
";
    $headers .= "From: admin@example.com" . "\r
";

    mail($to, $subject, $message, $headers);
}

// Check if email is provided
if (isset($_POST['email'])) {
    $email = $_POST['email'];
    
    // Prepare and execute SQL query to check email existence
    $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
    $stmt->bind_param('s', $email);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        // Generate a random token
        $token = bin2hex(random_bytes(16));
        
        // Update the token in the database with current timestamp
        $resetTokenQuery = "UPDATE users SET reset_token = ?, reset_timestamp = CURRENT_TIMESTAMP WHERE email = ?";
        $stmtReset = $conn->prepare($resetTokenQuery);
        $stmtReset->bind_param('ss', $token, $email);
        $stmtReset->execute();

        // Send password reset email
        sendPasswordResetEmail($email, $token);
        
        echo "A password reset link has been sent to your email.";
    } else {
        echo "Email not found in our database!";
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <h2>Forgot Password</h2>
    <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]);?>">
        <input type="email" name="email" placeholder="Enter your email address" required><br><br>
        <input type="submit" value="Reset Password">
    </form>
</body>
</html>

// Create a new PHP file for resetting the password (reset_password.php)
<?php
include('database_connection.php');

if (isset($_GET['token'])) {
    $token = $_GET['token'];
    
    // Check if token exists and is valid
    $stmt = $conn->prepare("SELECT id, reset_timestamp FROM users WHERE reset_token = ?");
    $stmt->bind_param('s', $token);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        $row = $result->fetch_assoc();
        $resetTime = $row['reset_timestamp'];
        
        // Check if token is not expired (1 hour validity)
        $currentTime = time();
        $timeDiff = strtotime($currentTime) - strtotime($resetTime);
        
        if ($timeDiff < 3600) {
            // Show password reset form
            ?>
            <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]);?>">
                New Password: <input type="password" name="new_password" required><br>
                Confirm Password: <input type="password" name="confirm_password" required><br>
                <input type="hidden" name="token" value="<?php echo $token;?>">
                <input type="submit" value="Reset Password">
            </form>
            <?php
        } else {
            echo "Token has expired. Please request a new password reset.";
            // Delete expired token
            $deleteTokenQuery = "UPDATE users SET reset_token = NULL WHERE reset_token = ?";
            $stmtDelete = $conn->prepare($deleteTokenQuery);
            $stmtDelete->bind_param('s', $token);
            $stmtDelete->execute();
        }
    } else {
        echo "Invalid token!";
    }
}

// Handle password reset
if (isset($_POST['new_password']) && isset($_POST['confirm_password'])) {
    $newPassword = $_POST['new_password'];
    $confirmPassword = $_POST['confirm_password'];
    $token = $_POST['token'];

    if ($newPassword == $confirmPassword) {
        // Hash the new password
        $hashedPassword = password_hash($newPassword, PASSWORD_DEFAULT);
        
        // Update the password and clear the token
        $updateQuery = "UPDATE users SET password = ?, reset_token = NULL WHERE reset_token = ?";
        $stmtUpdate = $conn->prepare($updateQuery);
        $stmtUpdate->bind_param('ss', $hashedPassword, $token);
        $stmtUpdate->execute();
        
        echo "Password has been successfully updated!";
    } else {
        echo "Passwords do not match!";
    }
}
?>


<?php
session_start();

// Database connection function
function connect_db() {
    $host = 'localhost';
    $username = 'root';
    $password = '';
    $database = 'mydb';

    $conn = new mysqli($host, $username, $password, $database);
    
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }
    return $conn;
}

// Check if form is submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST' && isset($_POST['reset_password'])) {
    // Get email from the form
    $email = $_POST['email'];

    if (empty($email)) {
        $message = "Please enter your email address!";
    } else {
        $conn = connect_db();
        
        // Check if email exists in the database
        $sql = "SELECT * FROM users WHERE email = ?";
        $stmt = $conn->prepare($sql);
        $stmt->bind_param('s', $email);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows === 0) {
            $message = "No account found with this email address!";
        } else {
            // Generate reset token
            $token = md5(uniqid());
            $reset_token = sha1($token);
            
            // Set expiration time (1 hour)
            $expiration_time = date('Y-m-d H:i:s', strtotime('+1 hour'));
            
            // Update the database with reset token and expiration time
            $update_sql = "UPDATE users SET reset_token = ?, reset_expires = ? WHERE email = ?";
            $stmt = $conn->prepare($update_sql);
            $stmt->bind_param('sss', $reset_token, $expiration_time, $email);
            
            if ($stmt->execute()) {
                // Send reset link to user's email
                $to = $email;
                $subject = "Password Reset Request";
                $message = "
                    <html>
                        <head></head>
                        <body>
                            <h2>Password Reset</h2>
                            <p>Please click the following link to reset your password:</p>
                            <a href='http://example.com/password_reset.php?token=$reset_token'>Reset Password</a><br>
                            <small>This link will expire in 1 hour.</small>
                        </body>
                    </html>
                ";
                
                // Set headers for HTML email
                $headers = "MIME-Version: 1.0" . "\r
";
                $headers .= "Content-type: text/html; charset=UTF-8" . "\r
";
                $headers .= "From: noreply@example.com" . "\r
";
                
                // Send email
                if (mail($to, $subject, $message, $headers)) {
                    $success_message = "Password reset link has been sent to your email address!";
                    header("Location: forgot_password.php?msg=" . urlencode($success_message));
                    exit();
                } else {
                    $error_message = "Failed to send password reset email. Please try again later.";
                }
            } else {
                $error_message = "An error occurred while resetting your password. Please try again later.";
            }
            
            // Close database connection
            $conn->close();
        }
    }
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Forgot Password</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            margin: 0;
            background-color: #f0f0f0;
        }
        
        .container {
            background-color: white;
            padding: 20px;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
            width: 300px;
        }
        
        h2 {
            text-align: center;
            color: #333;
            margin-bottom: 20px;
        }
        
        .form-group {
            margin-bottom: 15px;
        }
        
        input[type="email"] {
            width: 100%;
            padding: 8px;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-sizing: border-box;
        }
        
        button {
            width: 100%;
            background-color: #4CAF50;
            color: white;
            padding: 10px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
        
        button:hover {
            background-color: #45a049;
        }
        
        .message {
            margin-top: 10px;
            text-align: center;
            font-style: italic;
            color: red;
        }
    </style>
</head>
<body>
    <div class="container">
        <?php
        // Display success or error message if exists
        if (isset($_GET['msg'])) {
            $message = urldecode($_GET['msg']);
            echo "<div style='color: green; text-align: center; margin-bottom: 10px;'>$message</div>";
        }
        
        if (isset($error_message)) {
            echo "<div style='color: red; text-align: center; margin-bottom: 10px;'>$error_message</div>";
        }
        ?>
        
        <h2>Forgot Password</h2>
        <form action="<?php echo htmlspecialchars($_SERVER['PHP_SELF']); ?>" method="POST">
            <div class="form-group">
                <input type="email" placeholder="Enter your email address" name="email">
            </div>
            <button type="submit" name="reset_password">Reset Password</button>
        </form>
    </div>
</body>
</html>


<?php
session_start();
require_once('config.php'); // Database connection

// Forgot Password Form
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $email = mysqli_real_escape_string($conn, $_POST['email']);
    
    // Validate email format
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        die("Please enter a valid email address");
    }
    
    // Check if user exists
    $query = "SELECT id FROM users WHERE email = '$email'";
    $result = mysqli_query($conn, $query);
    
    if (mysqli_num_rows($result) == 0) {
        die("No account found with this email address");
    }
    
    // Generate reset token
    $token = bin2hex(random_bytes(16));
    $expires = date('Y-m-d H:i:s', time() + 3600); // Token expires after 1 hour
    
    // Insert token into database
    $updateQuery = "INSERT INTO password_reset (user_id, token, expires) 
                    VALUES ('$email', '$token', '$expires')";
    
    if (!mysqli_query($conn, $updateQuery)) {
        die("Error creating reset token");
    }
    
    // Send email with reset link
    $resetLink = "http://$_SERVER[HTTP_HOST]/reset-password.php?token=$token";
    $subject = 'Password Reset Request';
    $message = "Click the following link to reset your password:
$resetLink

This link will expire in 1 hour.";
    
    if (!mail($email, $subject, $message)) {
        die("Error sending email");
    }
    
    header('Location: login.php?msg=Check your email for a password reset link');
    exit();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
    <style>
        body { font-family: Arial, sans-serif; max-width: 500px; margin: 0 auto; padding: 20px; }
        .form-group { margin-bottom: 15px; }
        input { width: 100%; padding: 8px; box-sizing: border-box; }
        button { background-color: #4CAF50; color: white; padding: 10px 20px; border: none; cursor: pointer; }
        button:hover { background-color: #45a049; }
    </style>
</head>
<body>
    <h2>Forgot Password</h2>
    
    <?php
    // Show message if exists
    if (isset($_GET['msg'])) {
        echo "<p style='color: red;'>$_GET[msg]</p>";
    }
    ?>
    
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="POST">
        <div class="form-group">
            <label for="email">Email:</label>
            <input type="email" id="email" name="email" required>
        </div>
        
        <button type="submit">Send Reset Link</button>
    </form>
    
    <p>Don't have an account? <a href="register.php">Register here</a></p>
</body>
</html>


<?php
session_start();
require_once('config.php');

// Get token from URL
$token = $_GET['token'] ?? null;

if (!$token) {
    die("No valid token provided");
}

// Check if token exists in database
$query = "SELECT user_id, expires FROM password_reset WHERE token = '$token'";
$result = mysqli_query($conn, $query);

if (mysqli_num_rows($result) == 0) {
    die("Invalid or expired reset link");
}

$row = mysqli_fetch_assoc($result);
$userId = $row['user_id'];
$expires = $row['expires'];

// Check if token has expired
if (strtotime($expires) < time()) {
    die("This password reset link has expired");
}

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Validate new password
    $password = $_POST['password'];
    $confirmPassword = $_POST['confirm_password'];
    
    if ($password != $confirmPassword) {
        die("Passwords do not match");
    }
    
    // Hash the password
    $hashedPassword = password_hash($password, PASSWORD_DEFAULT);
    
    // Update user's password
    $updateQuery = "UPDATE users SET password = '$hashedPassword' WHERE id = '$userId'";
    if (!mysqli_query($conn, $updateQuery)) {
        die("Error resetting password");
    }
    
    // Delete the reset token
    $deleteQuery = "DELETE FROM password_reset WHERE token = '$token'";
    mysqli_query($conn, $deleteQuery);
    
    header('Location: login.php?msg=Password successfully reset');
    exit();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
    <style>
        body { font-family: Arial, sans-serif; max-width: 500px; margin: 0 auto; padding: 20px; }
        .form-group { margin-bottom: 15px; }
        input { width: 100%; padding: 8px; box-sizing: border-box; }
        button { background-color: #4CAF50; color: white; padding: 10px 20px; border: none; cursor: pointer; }
        button:hover { background-color: #45a049; }
    </style>
</head>
<body>
    <h2>Reset Password</h2>
    
    <?php
    if (isset($_GET['msg'])) {
        echo "<p style='color: red;'>$_GET[msg]</p>";
    }
    ?>
    
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>?token=<?php echo $token; ?>" method="POST">
        <div class="form-group">
            <label for="password">New Password:</label>
            <input type="password" id="password" name="password" required>
        </div>
        
        <div class="form-group">
            <label for="confirm_password">Confirm Password:</label>
            <input type="password" id="confirm_password" name="confirm_password" required>
        </div>
        
        <button type="submit">Reset Password</button>
    </form>
</body>
</html>


<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            max-width: 500px;
            margin: 0 auto;
            padding: 20px;
        }
        .form-group {
            margin-bottom: 15px;
        }
        input {
            width: 100%;
            padding: 8px;
            box-sizing: border-box;
        }
    </style>
</head>
<body>
    <h2>Forgot Password</h2>
    
    <?php
    if (isset($_GET['error'])) {
        echo "<p style='color: red;'>".$_GET['error']."</p>";
    }
    ?>

    <form action="forgot_password_script.php" method="POST">
        <div class="form-group">
            <label for="email">Enter your email address:</label>
            <input type="email" id="email" name="email" required>
        </div>
        <button type="submit">Reset Password</button>
    </form>

    <p>Remember your password? <a href="login.php">Login here</a></p>
</body>
</html>


<?php
// Include database configuration
include('config.php');

try {
    $email = $_POST['email'];

    if (empty($email)) {
        header("Location: forgot_password.php?error=Email cannot be empty");
        exit();
    }

    // Check if email exists in the users table
    $stmt = $pdo->prepare("SELECT id FROM users WHERE email = :email");
    $stmt->execute(['email' => $email]);
    
    if ($stmt->rowCount() == 0) {
        header("Location: forgot_password.php?error=Email not found in our records");
        exit();
    }

    // Generate a unique token
    $token = bin2hex(random_bytes(16));

    // Insert the token into password_resets table
    $stmt = $pdo->prepare("INSERT INTO password_resets (user_id, token) 
                          VALUES (:user_id, :token)");
    
    $stmt->execute([
        'user_id' => $stmt->fetch(PDO::FETCH_ASSOC)['id'],
        'token'   => $token
    ]);

    // Send email with reset link
    $to = $email;
    $subject = "Password Reset Request";
    $body = "Please click the following link to reset your password: 

".
            "http://yourwebsite.com/reset_password.php?token=".$token."

".
            "If you did not request this, please ignore this email.";

    if (mail($to, $subject, $body)) {
        header("Location: forgot_password.php?error=Check your email for password reset instructions");
    } else {
        header("Location: forgot_password.php?error=Failed to send reset email. Please try again.");
    }

} catch(PDOException $e) {
    die("An error occurred: " . $e->getMessage());
}
?>


<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            max-width: 500px;
            margin: 0 auto;
            padding: 20px;
        }
        .form-group {
            margin-bottom: 15px;
        }
        input {
            width: 100%;
            padding: 8px;
            box-sizing: border-box;
        }
    </style>
</head>
<body>
    <h2>Reset Password</h2>

    <?php
    if (isset($_GET['error'])) {
        echo "<p style='color: red;'>".$_GET['error']."</p>";
    }

    if (!isset($_GET['token']) || empty($_GET['token'])) {
        header("Location: forgot_password.php");
        exit();
    }
    
    // Check if token exists in the database
    include('config.php');
    try {
        $stmt = $pdo->prepare("SELECT * FROM password_resets WHERE token = :token");
        $stmt->execute(['token' => $_GET['token']]);
        
        if ($stmt->rowCount() == 0) {
            header("Location: forgot_password.php?error=Invalid or expired reset link");
            exit();
        }
    } catch(PDOException $e) {
        die("An error occurred: " . $e->getMessage());
    }
    ?>

    <form action="reset_password_script.php" method="POST">
        <input type="hidden" name="token" value="<?php echo $_GET['token']; ?>">
        
        <div class="form-group">
            <label for="new_password">New Password:</label>
            <input type="password" id="new_password" name="new_password" required 
                   pattern="(?=.*\d)(?=.*[a-z])(?=.*[A-Z]).{8,}" 
                   title="Must contain at least one number and one uppercase letter, minimum 8 characters">
        </div>

        <div class="form-group">
            <label for="confirm_password">Confirm Password:</label>
            <input type="password" id="confirm_password" name="confirm_password" required>
        </div>

        <button type="submit">Reset My Password</button>
    </form>

    <p>Remember your password? <a href="login.php">Login here</a></p>
</body>
</html>


<?php
// Include database configuration
include('config.php');

try {
    if (!isset($_POST['token']) || empty($_POST['new_password'])) {
        header("Location: reset_password.php?error=Invalid request");
        exit();
    }

    $token = $_POST['token'];
    $new_password = $_POST['new_password'];
    
    // Check if token exists
    $stmt = $pdo->prepare("SELECT * FROM password_resets WHERE token = :token");
    $stmt->execute(['token' => $token]);
    
    if ($stmt->rowCount() == 0) {
        header("Location: reset_password.php?error=Invalid or expired reset link");
        exit();
    }

    // Validate password
    if (strlen($new_password) < 8 || 
        !preg_match('/[A-Z]/', $new_password) || 
        !preg_match('/[0-9]/', $new_password)) {
        header("Location: reset_password.php?error=Password must be at least 8 characters long and contain one uppercase letter and one number");
        exit();
    }

    // Get user ID
    $reset_data = $stmt->fetch(PDO::FETCH_ASSOC);
    $user_id = $reset_data['user_id'];

    // Update password in users table
    $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);
    
    $stmt = $pdo->prepare("UPDATE users SET password = :password WHERE id = :user_id");
    $stmt->execute([
        'password' => $hashed_password,
        'user_id'  => $user_id
    ]);

    // Delete token from password_resets table
    $stmt = $pdo->prepare("DELETE FROM password_resets WHERE token = :token");
    $stmt->execute(['token' => $token]);

    header("Location: login.php?message=Password reset successful. Please login with your new password.");

} catch(PDOException $e) {
    die("An error occurred: " . $e->getMessage());
}
?>


<?php
$pdo = new PDO('mysql:host=localhost;dbname=your_database', 'username', 'password');
$pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
?>


<?php
session_start();
include('config.php');

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $email = mysqli_real_escape_string($conn, $_POST['email']);
    
    $sql = "SELECT * FROM users WHERE email='$email'";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) > 0) {
        $token = md5(rand(1000, 9999));
        $expires = date('Y-m-d H:i:s', time() + 3600); // Expires in 1 hour
        
        $sql_update = "UPDATE users SET reset_token='$token', expires='$expires' WHERE email='$email'";
        mysqli_query($conn, $sql_update);
        
        $reset_link = "http://$_SERVER[HTTP_HOST]/reset.php?token=$token";
        $to = $email;
        $subject = 'Password Reset Request';
        $message = "Click the link below to reset your password:
$reset_link
If you didn't request this, please ignore.";
        
        mail($to, $subject, $message);
        echo "Check your email for reset instructions.";
    } else {
        echo "Email not found!";
    }
}
?>


<?php
session_start();
include('config.php');

$token = isset($_GET['token']) ? $_GET['token'] : '';
$sql = "SELECT * FROM users WHERE reset_token='$token' AND expires > NOW()";
$result = mysqli_query($conn, $sql);

if (mysqli_num_rows($result) == 0) {
    die("Invalid or expired link.");
}

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $new_password = $_POST['new_password'];
    $confirm_password = $_POST['confirm_password'];
    
    if ($new_password != $confirm_password) {
        echo "Passwords don't match!";
    } else {
        $hash = password_hash($new_password, PASSWORD_DEFAULT);
        $sql_reset = "UPDATE users SET password='$hash', reset_token='', expires='' WHERE reset_token='$token'";
        mysqli_query($conn, $sql_reset);
        header("Location: login.php?success=1");
        exit();
    }
}
?>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'mydatabase';
$username = 'root';
$password = '';

try {
    // Create a new PDO instance
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
} catch (PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get email from form
    $email = $_POST['email'];
    
    // Validate input
    if (empty($email)) {
        die("Email cannot be empty");
    }
    
    // Sanitize email
    $email = filter_var($email, FILTER_SANITIZE_EMAIL);
    
    // Check if email exists in database
    $stmt = $conn->prepare("SELECT id FROM users WHERE email = :email");
    $stmt->execute(['email' => $email]);
    
    $user = $stmt->fetch(PDO::FETCH_ASSOC);
    
    if (!$user) {
        die("Email does not exist in our records");
    }
    
    // Generate reset token
    $resetToken = bin2hex(random_bytes(16));
    $resetExpiry = date('Y-m-d H:i:s', time() + 3600); // Expiry after 1 hour
    
    // Update database with new token and expiry time
    $updateStmt = $conn->prepare("UPDATE users SET reset_token = :token, reset_expires = :expiry WHERE id = :id");
    $updateStmt->execute([
        'token' => $resetToken,
        'expiry' => $resetExpiry,
        'id' => $user['id']
    ]);
    
    // Send email with reset link
    $to = $email;
    $subject = "Password Reset Request";
    $message = "
        <html>
            <head></head>
            <body>
                <p>Hello,</p>
                <p>You have requested a password reset. Please click the following link to reset your password:</p>
                <a href='http://example.com/reset-password.php?token=$resetToken'>Reset Password</a><br><br>
                <p>If you did not request this, please ignore this email.</p>
            </body>
        </html>
    ";
    $headers = "MIME-Version: 1.0" . "\r
";
    $headers .= "Content-type:text/html;charset=UTF-8" . "\r
";
    $headers .= "From: <your_email@example.com>" . "\r
";
    
    if (mail($to, $subject, $message, $headers)) {
        // Redirect back to login page with success message
        header('Location: login.php?reset=success');
    } else {
        die("Failed to send reset email");
    }
}
?>


<?php
session_start();

// Database configuration
$host = 'localhost';
$dbname = 'your_database_name';
$user = 'your_username';
$password = 'your_password';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $user, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

    if (isset($_POST['email'])) {
        $email = $_POST['email'];

        // Check if email exists in the database
        $stmt = $conn->prepare("SELECT id FROM users WHERE email = :email");
        $stmt->bindParam(':email', $email);
        $stmt->execute();

        if ($stmt->rowCount() > 0) {
            // Generate a unique token and set its expiry time
            $token = bin2hex(random_bytes(16));
            $expires = date('Y-m-d H:i:s', strtotime('+30 minutes'));

            // Update the database with the new token and expiry time
            $updateStmt = $conn->prepare("UPDATE users SET reset_token = :token, reset_expiry = :expires WHERE email = :email");
            $updateStmt->bindParam(':token', $token);
            $updateStmt->bindParam(':expires', $expires);
            $updateStmt->bindParam(':email', $email);
            $updateStmt->execute();

            // Send the password reset link to the user's email
            $to = $email;
            $subject = "Password Reset Request";
            $message = "
                <html>
                    <body>
                        <p>We received a request to reset your password. Click the link below to reset it:</p>
                        <a href='http://your-site.com/reset_password.php?token=$token'>Reset Password</a><br><br>
                        <small>This link will expire in 30 minutes.</small>
                    </body>
                </html>";
            $headers = "MIME-Version: 1.0" . "\r
";
            $headers .= "Content-type:text/html;charset=UTF-8" . "\r
";
            $headers .= "From: your-email@example.com" . "\r
";

            mail($to, $subject, $message, $headers);

            echo "A password reset link has been sent to your email.";
        } else {
            echo "Email not found in our records. Please check your email address.";
        }
    }
} catch(PDOException $e) {
    echo "Error: " . $e->getMessage();
}
$conn = null;
?>


<?php
session_start();

// Database configuration
$host = 'localhost';
$dbname = 'your_database_name';
$user = 'your_username';
$password = 'your_password';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $user, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

    if (isset($_GET['token'])) {
        $token = $_GET['token'];
        $stmt = $conn->prepare("SELECT id, reset_expiry FROM users WHERE reset_token = :token");
        $stmt->bindParam(':token', $token);
        $stmt->execute();

        if ($stmt->rowCount() > 0) {
            $row = $stmt->fetch(PDO::FETCH_ASSOC);
            $expiryTime = strtotime($row['reset_expiry']);

            // Check if the token has expired
            if (time() < $expiryTime) {
                // Token is valid; display reset form
                ?>
                <!DOCTYPE html>
                <html>
                <head>
                    <title>Reset Password</title>
                </head>
                <body>
                    <h2>Reset Password</h2>
                    <form action="reset_password.php?token=<?php echo $token; ?>" method="post">
                        New Password: <input type="password" name="new_password" required><br><br>
                        Confirm Password: <input type="password" name="confirm_password" required><br><br>
                        <button type="submit">Reset Password</button>
                    </form>
                <?php
            } else {
                // Token has expired
                echo "The password reset link has expired. Please request a new one.";
            }
        } else {
            // Invalid token
            echo "Invalid or expired password reset link.";
        }

        if ($_SERVER["REQUEST_METHOD"] == "POST") {
            $newPassword = $_POST['new_password'];
            $confirmPassword = $_POST['confirm_password'];

            if ($newPassword == $confirmPassword) {
                $hashedPassword = password_hash($newPassword, PASSWORD_DEFAULT);

                // Update the user's password
                $updateStmt = $conn->prepare("UPDATE users SET password = :password, reset_token = NULL WHERE reset_token = :token");
                $updateStmt->bindParam(':password', $hashedPassword);
                $updateStmt->bindParam(':token', $token);
                $updateStmt->execute();

                echo "Your password has been successfully updated!";
            } else {
                echo "Passwords do not match. Please try again.";
            }
        }
    } else {
        // No token provided
        die("No valid token was provided.");
    }
} catch(PDOException $e) {
    echo "Error: " . $e->getMessage();
}
$conn = null;
?>


<?php
// Database connection
$host = "localhost";
$dbusername = "root";
$dbpassword = "";
$dbname = "testdb";

$conn = new mysqli($host, $dbusername, $dbpassword, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = $_POST['email'];
    
    // Validate email format
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        header("Location: forgot-password-form.php?error=Invalid%20email%20format");
        exit();
    }
    
    // Check if email exists in database
    $sql = "SELECT id FROM users WHERE email=?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("s", $email);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows == 0) {
        header("Location: forgot-password-form.php?error=Email%20not%20found");
        exit();
    }
    
    // Generate reset token
    $resetToken = bin2hex(random_bytes(16));
    $expires = date('Y-m-d H:i:s', time() + 3600); // Token expires in 1 hour
    
    // Update the database with reset token and expiration time
    $sql = "UPDATE users SET reset_token=?, reset_expires=? WHERE email=?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("sss", $resetToken, $expires, $email);
    $stmt->execute();
    
    // Send password reset link to user's email
    $to = $email;
    $subject = "Password Reset Request";
    $message = "
        <html>
            <body>
                <h2>Password Reset</h2>
                <p>We received a request to reset your password. Click the following link to reset it:</p>
                <a href='http://example.com/reset-password.php?token=" . $resetToken . "'>Reset Password</a><br>
                <p>If you did not request this password reset, please ignore this email.</p>
                <p>This token will expire in 1 hour.</p>
            </body>
        </html>
    ";
    $headers = "From: noreply@example.com\r
";
    $headers .= "Reply-To: noreply@example.com\r
";
    $headers .= "Content-Type: text/html; charset=UTF-8\r
";
    
    if (mail($to, $subject, $message, $headers)) {
        header("Location: forgot-password-form.php?success");
        exit();
    } else {
        header("Location: forgot-password-form.php?error=Email%20could%20not%20be%20sent");
        exit();
    }
}
?>


<?php
// Database connection
$host = "localhost";
$dbusername = "root";
$dbpassword = "";
$dbname = "testdb";

$conn = new mysqli($host, $dbusername, $dbpassword, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Check if token is provided
if (!isset($_GET['token'])) {
    header("Location: forgot-password-form.php?error=No%20token%20provided");
    exit();
}

$token = $_GET['token'];
?>
<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <?php
        // Check if token is valid and not expired
        $sql = "SELECT id, email FROM users WHERE reset_token=? AND reset_expires > NOW()";
        $stmt = $conn->prepare($sql);
        $stmt->bind_param("s", $token);
        $stmt->execute();
        $result = $stmt->get_result();
        
        if ($result->num_rows == 0) {
            echo "<p>Invalid or expired token. Please request a new password reset.</p>";
            exit();
        }
        
        // If form is submitted
        if ($_SERVER["REQUEST_METHOD"] == "POST") {
            $newPassword = $_POST['password'];
            $confirmPassword = $_POST['confirm_password'];
            
            if ($newPassword != $confirmPassword) {
                echo "<p>Passwords do not match!</p>";
                exit();
            }
            
            // Update the password
            $sql = "UPDATE users SET password=?, reset_token=null, reset_expires=null WHERE reset_token=?";
            $stmt = $conn->prepare($sql);
            $hashedPassword = password_hash($newPassword, PASSWORD_DEFAULT);
            $stmt->bind_param("ss", $hashedPassword, $token);
            $stmt->execute();
            
            echo "<p>Password has been successfully updated!</p>";
            exit();
        }
    ?>
    
    <h2>Reset Password</h2>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <input type="password" name="password" placeholder="Enter new password" required>
        <input type="password" name="confirm_password" placeholder="Confirm new password" required>
        <button type="submit">Reset Password</button>
    </form>
</body>
</html>


<?php
// forgot_password.php

require 'database.php'; // Include your database connection file

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $input = $_POST['email_username'];
    
    // Check if input is email or username
    if (filter_var($input, FILTER_VALIDATE_EMAIL)) {
        $sql = "SELECT * FROM users WHERE email = ?";
    } else {
        $sql = "SELECT * FROM users WHERE username = ?";
    }
    
    try {
        $stmt = $conn->prepare($sql);
        $stmt->bind_param("s", $input);
        $stmt->execute();
        
        $result = $stmt->get_result();
        
        if ($result->num_rows > 0) {
            $user = $result->fetch_assoc();
            
            // Generate a token
            $token = bin2hex(random_bytes(16));
            
            // Insert the token into the database (with an expiration time)
            $expires = date('Y-m-d H:i:s', strtotime('+1 hour'));
            
            $insertTokenSql = "INSERT INTO password_reset_tokens (user_id, token, expires) 
                              VALUES (?, ?, ?)";
            
            $tokenStmt = $conn->prepare($insertTokenSql);
            $tokenStmt->bind_param("iss", $user['id'], $token, $expires);
            $tokenStmt->execute();
            
            // Send the reset link to the user's email
            $resetLink = "http://$_SERVER[HTTP_HOST]/reset_password.php?token=$token";
            
            sendResetEmail($user['email'], $resetLink);
            
            echo "A password reset link has been sent to your email address.";
        } else {
            echo "No account found with that email or username.";
        }
    } catch (Exception $e) {
        die("An error occurred: " . $e->getMessage());
    }
}

// Function to send the reset email
function sendResetEmail($email, $resetLink) {
    $to = $email;
    $subject = 'Password Reset Request';
    $message = "Please click on the following link to reset your password:

$resetLink

If you did not request this password reset, please ignore this email.";
    $headers = "From: your_email@example.com";
    
    mail($to, $subject, $message, $headers);
}

$conn->close();
?>


<?php
// reset_password.php

require 'database.php'; // Include your database connection file

if (!isset($_GET['token'])) {
    die("Invalid request.");
}

$token = $_GET['token'];

// Check if the token exists and hasn't expired
$sql = "SELECT * FROM password_reset_tokens WHERE token = ? AND expires > NOW()";
$stmt = $conn->prepare($sql);
$stmt->bind_param("s", $token);
$stmt->execute();
$result = $stmt->get_result();

if ($result->num_rows == 0) {
    die("Invalid or expired reset link.");
}

// If token is valid, show the password reset form
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Reset Password</title>
</head>
<body>
    <h2>Reset Password</h2>
    <form action="update_password.php" method="post">
        <input type="hidden" name="token" value="<?php echo $token; ?>">
        <label for="new_password">New Password:</label>
        <input type="password" id="new_password" name="new_password" required>
        <br><br>
        <button type="submit">Reset Password</button>
    </form>
</body>
</html>

<?php
// Close the database connection
$conn->close();
?>


<?php
// update_password.php

require 'database.php'; // Include your database connection file

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $token = $_POST['token'];
    $newPassword = $_POST['new_password'];
    
    // Check if the token is valid and not expired
    $sql = "SELECT * FROM password_reset_tokens WHERE token = ? AND expires > NOW()";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("s", $token);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows == 0) {
        die("Invalid or expired reset link.");
    }
    
    $userToken = $result->fetch_assoc();
    
    // Update the user's password
    $hash = password_hash($newPassword, PASSWORD_DEFAULT);
    
    $updateSql = "UPDATE users SET password = ? WHERE id = ?";
    $updateStmt = $conn->prepare($updateSql);
    $updateStmt->bind_param("si", $hash, $userToken['user_id']);
    $updateStmt->execute();
    
    // Delete the used token
    $deleteSql = "DELETE FROM password_reset_tokens WHERE token = ?";
    $deleteStmt = $conn->prepare($deleteSql);
    $deleteStmt->bind_param("s", $token);
    $deleteStmt->execute();
    
    echo "Password reset successfully!";
} else {
    die("Invalid request method.");
}

// Close the database connection
$conn->close();
?>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$db_name = 'my_database';

// Create connection
$conn = mysqli_connect($host, $username, $password, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function generateResetToken() {
    return md5(uniqid(rand(), true));
}

function sendPasswordResetEmail($email, $resetLink) {
    $to = $email;
    $subject = "Password Reset Request";
    
    $message = "Dear User,

";
    $message .= "Please click the following link to reset your password:
";
    $message .= $resetLink . "

";
    $message .= "If you did not request a password reset, please ignore this email.
";
    $message .= "This link will expire in 1 hour.";

    $headers = "From: noreply@yourdomain.com\r
";
    $headers .= "Reply-To: noreply@yourdomain.com\r
";
    
    return mail($to, $subject, $message, $headers);
}

if (isset($_POST['reset'])) {
    $email = mysqli_real_escape_string($conn, $_POST['email']);
    
    // Check if email exists in the database
    $checkQuery = "SELECT id FROM users WHERE email='$email'";
    $result = mysqli_query($conn, $checkQuery);
    
    if (mysqli_num_rows($result) == 1) {
        $token = generateResetToken();
        
        // Insert token into the database
        $insertTokenQuery = "INSERT INTO password_reset_tokens (user_id, token) VALUES (" . mysqli_real_escape_string($conn, $_POST['id']) . ", '$token')";
        mysqli_query($conn, $insertTokenQuery);
        
        // Send reset email
        $resetLink = "http://yourdomain.com/reset_password.php?token=$token";
        if (sendPasswordResetEmail($email, $resetLink)) {
            echo "Password reset link has been sent to your email.";
        } else {
            echo "Failed to send password reset email.";
        }
    } else {
        echo "Email not found in our records.";
    }
}

mysqli_close($conn);
?>


<?php
session_start();
include 'db_connection.php'; // Include your database connection file

if (isset($_POST['email'])) {
    $email = $_POST['email'];

    // Check if email exists in the database
    $sql = "SELECT id FROM users WHERE email = ?";
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, "s", $email);
    mysqli_stmt_execute($stmt);
    mysqli_stmt_store_result($stmt);

    if (mysqli_stmt_num_rows($stmt) == 0) {
        // Email not found
        header("Location: forgot_password_form.php?error=Email%20not%20found");
        exit();
    } else {
        // Generate a random token
        $token = bin2hex(random_bytes(16));
        
        // Calculate expiration time (e.g., 1 hour from now)
        $expiration_time = date('Y-m-d H:i:s', strtotime('+1 hour'));
        
        // Update the user's record with the new token and expiration time
        $update_sql = "UPDATE users SET reset_token = ?, reset_expires = ? WHERE email = ?";
        $stmt = mysqli_prepare($conn, $update_sql);
        mysqli_stmt_bind_param($stmt, "sss", $token, $expiration_time, $email);
        mysqli_stmt_execute($stmt);

        // Send the reset password link to the user's email
        $reset_link = "http://yourdomain.com/reset_password.php?token=" . $token;
        
        $to = $email;
        $subject = "Password Reset Request";
        $message = "To reset your password, please click on the following link:

" . $reset_link . "

If you did not request a password reset, you can safely ignore this email.

Best regards,
The Team";
        
        // Using SendGrid's PHP Library
        require 'sendgrid-php/sendgrid.php';
        $SENDGRID_API_KEY = 'your_sendgrid_api_key';
        $to_email = new SendGrid\Mail\To($to);
        $from_email = new SendGrid\Mail\From('no-reply@yourdomain.com', 'Your Domain');
        $plain_text_content = $message;
        $email = new SendGrid\Mail\Mail();
        $email->addTo($to_email)
            ->setFrom($from_email)
            ->setSubject($subject)
            ->addContent("text/plain", $plain_text_content);
        
        $sendgrid = new \SendGrid($SENDGRID_API_KEY);
        try {
            $response = $sendgrid->send($email);
            // Email sent successfully
            header("Location: forgot_password_form.php?success=We've%20sent%20you%20a%20password%20reset%20link");
            exit();
        } catch (Exception $e) {
            echo 'Caught exception: ', $e->getMessage(), "
";
        }
    }

    mysqli_close($conn);
}
?>


<?php
session_start();
include 'db_connection.php'; // Include your database connection file

if (isset($_GET['token'])) {
    $token = $_GET['token'];

    // Check if token exists and is valid
    $sql = "SELECT id, email FROM users WHERE reset_token = ? AND reset_expires > NOW()";
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, "s", $token);
    mysqli_stmt_execute($stmt);
    mysqli_stmt_store_result($stmt);

    if (mysqli_stmt_num_rows($stmt) == 0) {
        // Token is invalid or expired
        header("Location: forgot_password_form.php?error=Invalid%20or%20expired%20token");
        exit();
    }

    // Display password reset form
    ?>
    <!DOCTYPE html>
    <html>
    <head>
        <title>Reset Password</title>
    </head>
    <body>
        <h2>Reset Password</h2>
        <?php
            if (isset($_GET['error'])) {
                echo "<p style='color:red'>" . $_GET['error'] . "</p>";
            }
        ?>
        <form action="reset_password.php" method="post">
            <input type="hidden" name="token" value="<?php echo $token; ?>">
            <label for="new_password">New Password:</label><br>
            <input type="password" id="new_password" name="new_password" required><br><br>
            <label for="confirm_password">Confirm Password:</label><br>
            <input type="password" id="confirm_password" name="confirm_password" required><br><br>
            <input type="submit" value="Reset Password">
        </form>
    </body>
    </html>
    <?php
} else {
    // No token provided
    header("Location: forgot_password_form.php?error=No%20token%20provided");
    exit();
}

mysqli_close($conn);
?>


<?php
session_start();
include 'db_connection.php'; // Include your database connection file

if (isset($_POST['new_password'], $_POST['confirm_password'], $_POST['token'])) {
    $new_password = $_POST['new_password'];
    $confirm_password = $_POST['confirm_password'];
    $token = $_POST['token'];

    if ($new_password !== $confirm_password) {
        // Passwords do not match
        header("Location: reset_password.php?token=" . $token . "&error=Passwords%20do%20not%20match");
        exit();
    }

    // Update the user's password
    $sql = "UPDATE users SET password = ?, reset_token = NULL, reset_expires = NULL WHERE reset_token = ?";
    
    if (mysqli_prepare($conn, $sql)) {
        $stmt = mysqli_stmt_init($conn);
        mysqli_stmt_prepare($stmt, $sql);
        
        // Hash the new password
        $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);
        
        mysqli_stmt_bind_param($stmt, "ss", $hashed_password, $token);
        
        if (mysqli_stmt_execute($stmt)) {
            // Password updated successfully
            header("Location: login.php?success=Password%20reset%20successful");
            exit();
        } else {
            // Error updating password
            echo "<p style='color:red'>Error resetting password. Please try again.</p>";
        }
    }

    mysqli_close($conn);
} else {
    // Invalid request
    header("Location: forgot_password_form.php?error=Invalid%20request");
    exit();
}
?>


<?php
$host = 'localhost';
$username = 'root';
$password = '';
$database = 'your_database';

$conn = mysqli_connect($host, $username, $password, $database);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}
?>


<?php
// Database configuration
$host = 'localhost';
$dbUsername = 'username';
$dbPassword = 'password';
$dbName = 'database_name';

// Create connection
$conn = new mysqli($host, $dbUsername, $dbPassword, $dbName);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Validate email input
    $email = $_POST['email'];
    
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        die("Invalid email format");
    }

    // Check if email exists in database
    $sql = "SELECT id FROM users WHERE email='" . $conn->real_escape_string($email) . "'";
    $result = $conn->query($sql);

    if ($result->num_rows == 0) {
        die("Email not registered");
    }

    // Generate a random token for password reset
    $token = md5(uniqid(microtime(), true));
    $expires = strtotime("+1 hour");

    // Update the database with the token and expiration time
    $sql = "UPDATE users SET reset_token='" . $conn->real_escape_string($token) . "', 
                            reset_expires='" . $expires . "' WHERE email='" . $conn->real_escape_string($email) . "'";
    if (!$conn->query($sql)) {
        die("Error resetting password");
    }

    // Send the password reset link to the user's email
    $to = $email;
    $subject = "Password Reset Request";
    $message = "Please click the following link to reset your password: 

";
    $message .= "http://example.com/reset-password.php?token=" . $token;
    $headers = "From: noreply@example.com\r
";

    // Use PHPMailer for better email handling
    require 'PHPMailer/PHPMailerAutoload.php';
    
    $mail = new PHPMailer();
    $mail->IsSMTP();
    $mail->Host = 'smtp.gmail.com'; // SMTP server
    $mail->Port = 587;
    $mail->SMTPSecure = 'tls';
    $mail->SMTPAuth = true;
    $mail->Username = 'your_email@gmail.com';
    $mail->Password = 'your_password';
    
    $mail->From = 'noreply@example.com';
    $mail->FromName = "Example";
    $mail->AddAddress($to, $email);
    $mail->Subject = $subject;
    $mail->Body = $message;

    if (!$mail->Send()) {
        die("Error sending email");
    }

    // Redirect back to the login page with success message
    header("Location: login.php?reset=success");
    exit();
}

// Close database connection
$conn->close();

?>


<?php
// Database connection file (db_connection.php)
$host = "localhost";
$username = "root";
$password = "";
$db_name = "your_database";

$conn = new mysqli($host, $username, $password, $db_name);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}
?>

// Forgot Password Form (forgot_password.php)
<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <h2>Forgot Password</h2>
    <form action="forgot_password_process.php" method="post">
        <input type="email" name="email" placeholder="Enter your email" required><br><br>
        <button type="submit">Reset Password</button>
    </form>
</body>
</html>

// Forgot Password Process (forgot_password_process.php)
<?php
require_once 'db_connection.php';

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = mysqli_real_escape_string($conn, $_POST['email']);
    
    // Check if email exists in the database
    $sql = "SELECT id, username FROM users WHERE email='$email'";
    $result = $conn->query($sql);
    
    if ($result->num_rows > 0) {
        $row = $result->fetch_assoc();
        
        // Generate a random token
        $token = bin2hex(random_bytes(16));
        $expires = date('Y-m-d H:i:s', time() + 3600); // Token expires in 1 hour
        
        // Insert token into database
        $sql_token = "INSERT INTO password_reset (user_id, token, expires) VALUES ('" . $row['id'] . "', '$token', '$expires')";
        if ($conn->query($sql_token)) {
            // Send email with reset link
            $reset_link = "http://$_SERVER[HTTP_HOST]/reset_password.php?token=$token";
            
            $to = $email;
            $subject = "Password Reset Request";
            $message = "Please click the following link to reset your password: $reset_link
This link will expire in 1 hour.";
            
            // Set headers
            $headers = 'From: webmaster@example.com' . "\r
";
            $headers .= 'Reply-To: webmaster@example.com' . "\r
";
            $headers .= 'X-Mailer: PHP/' . phpversion();
            
            if (mail($to, $subject, $message, $headers)) {
                echo "A password reset link has been sent to your email address.";
            } else {
                echo "There was an error sending the email. Please try again later.";
            }
        }
    } else {
        // To avoid revealing whether an account exists or not
        echo "If an account with that email exists, a password reset link has been sent to your email address.";
    }
}
?>

// Reset Password Page (reset_password.php)
<?php
require_once 'db_connection.php';

session_start();

if (!isset($_GET['token'])) {
    header("Location: forgot_password.php");
    exit();
}

$token = mysqli_real_escape_string($conn, $_GET['token']);

// Check if token exists and is valid
$sql = "SELECT * FROM password_reset WHERE token='$token' AND expires > NOW()";
$result = $conn->query($sql);

if ($result->num_rows == 0) {
    die("Invalid or expired reset link. Please request a new password reset.");
}

$row = $result->fetch_assoc();

// Get user details
$sql_user = "SELECT id, username FROM users WHERE id='" . $row['user_id'] . "'";
$user_result = $conn->query($sql_user);
if ($user_result->num_rows == 0) {
    die("Invalid reset link. Please request a new password reset.");
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <?php
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        $new_password = mysqli_real_escape_string($conn, $_POST['password']);
        $confirm_password = mysqli_real_escape_string($conn, $_POST['confirm_password']);
        
        if ($new_password != $confirm_password) {
            echo "Passwords do not match. Please try again.";
        } else {
            // Hash the password
            $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);
            
            // Update user's password
            $sql_update = "UPDATE users SET password='$hashed_password' WHERE id='" . $row['user_id'] . "'";
            if ($conn->query($sql_update)) {
                // Delete the reset token
                $sql_delete_token = "DELETE FROM password_reset WHERE token='$token'";
                if ($conn->query($sql_delete_token)) {
                    echo "Password updated successfully. <a href='login.php'>Click here to login</a>";
                } else {
                    die("There was an error updating your password. Please try again.");
                }
            } else {
                die("There was an error updating your password. Please try again.");
            }
        }
    }
    ?>
    
    <h2>Reset Password</h2>
    <form action="<?php echo $_SERVER['PHP_SELF'] . '?token=' . $token; ?>" method="post">
        <input type="password" name="password" placeholder="Enter new password" required><br><br>
        <input type="password" name="confirm_password" placeholder="Confirm new password" required><br><br>
        <button type="submit">Reset Password</button>
    </form>
</body>
</html>

// Create a table in your database for password reset tokens:
CREATE TABLE password_reset (
    id INT(6) UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    user_id INT(6) UNSIGNED NOT NULL,
    token VARCHAR(32) NOT NULL,
    expires DATETIME NOT NULL
);

// Note: Replace the placeholder email addresses and database credentials with your actual information.

// Security Notes:
1. Always use secure hashing for passwords (PHP's password_hash() function)
2. Use prepared statements or parameterized queries to prevent SQL injection
3. Set a reasonable expiration time for reset tokens
4. Store tokens in a separate table from user credentials
5. Never reveal whether an account exists or not when requesting a password reset
6. Use HTTPS to secure communication between the client and server
7. Consider implementing additional security measures like CAPTCHA, email verification, etc.


<?php
// forgot-password.php

$servername = "localhost";
$username = "root";
$password = "";
$dbname = "test";

$conn = new mysqli($servername, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = $_POST['email'];

    // Sanitize input
    $email = mysqli_real_escape_string($conn, trim($email));

    $sql = "SELECT id FROM users WHERE email = '$email'";
    $result = $conn->query($sql);

    if ($result->num_rows > 0) {
        // Generate a new password
        $new_password = generateRandomPassword();
        $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);

        // Update the database
        $update_sql = "UPDATE users SET password='$hashed_password' WHERE email='$email'";
        if ($conn->query($update_sql) === TRUE) {
            // Send email with new password
            sendPasswordResetEmail($email, $new_password);
            echo "A new password has been sent to your email.";
        } else {
            echo "Error updating password: " . $conn->error;
        }
    } else {
        echo "No account found with this email address.";
    }
}

// Function to generate a random password
function generateRandomPassword() {
    $length = 8;
    $chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^&*';
    $password = substr(str_shuffle($chars), 0, $length);
    return $password;
}

// Function to send the new password via email
function sendPasswordResetEmail($email, $new_password) {
    $to = $email;
    $subject = "Your New Password";
    $message = "Hello,

Your new password is: " . $new_password . "

Please login and change your password.";
    $headers = "From: noreply@example.com";

    mail($to, $subject, $message, $headers);
}

$conn->close();
?>


function recoverPassword($email) {
    global $conn; // Database connection
    
    // Check if email exists in the database
    $query = "SELECT user_id FROM users WHERE email = ?";
    $stmt = $conn->prepare($query);
    $stmt->bind_param("s", $email);
    $stmt->execute();
    
    $result = $stmt->get_result();
    
    if ($result->num_rows === 0) {
        return "Email does not exist in our records!";
    }
    
    // Generate a random token
    $token = bin2hex(random_bytes(16));
    
    // Set expiration time (e.g., 1 hour from now)
    $expiration_time = date("Y-m-d H:i:s", strtotime("+1 hour"));
    
    // Update the user's record with the new token and expiration time
    $update_query = "UPDATE users SET reset_token=?, reset_expires=? WHERE email=?";
    $stmt_update = $conn->prepare($update_query);
    $stmt_update->bind_param("sss", $token, $expiration_time, $email);
    $stmt_update->execute();
    
    // Send the password reset link to the user's email
    $to = $email;
    $subject = "Password Reset Request";
    $message = "Please click on this link to reset your password: 

" .
               "http://example.com/reset-password.php?token=" . $token . "

" .
               "This link will expire in 1 hour.";
    
    // Set mail headers
    $headers = "From: noreply@example.com\r
".
               "Reply-To: noreply@example.com\r
".
               "X-Mailer: PHP/" . phpversion();
    
    if (mail($to, $subject, $message, $headers)) {
        return "Password reset email sent!";
    } else {
        return "Failed to send password reset email.";
    }
}


<?php
include('database_connection.php');

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = $_POST['email'];
    
    // Validate email input here
    
    $result = recoverPassword($email);
    echo $result;
}
?>


<?php
include('database_connection.php');

if (!isset($_GET['token'])) {
    die("Invalid request.");
}

$token = $_GET['token'];

// Check if the token exists and hasn't expired
$query = "SELECT user_id FROM users WHERE reset_token=? AND reset_expires > NOW()";
$stmt = $conn->prepare($query);
$stmt->bind_param("s", $token);
$stmt->execute();
$result = $stmt->get_result();

if ($result->num_rows === 0) {
    die("Invalid or expired token.");
}
?>

<!-- Display password reset form -->
<form action="update-password.php" method="POST">
    <input type="hidden" name="token" value="<?php echo $token; ?>">
    <input type="password" name="new_password" placeholder="Enter new password" required>
    <button type="submit">Reset Password</button>
</form>


<?php
include('database_connection.php');

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $token = $_POST['token'];
    $new_password = $_POST['new_password'];
    
    // Check if the token exists and hasn't expired
    $query = "SELECT user_id FROM users WHERE reset_token=? AND reset_expires > NOW()";
    $stmt = $conn->prepare($query);
    $stmt->bind_param("s", $token);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows === 0) {
        die("Invalid or expired token.");
    }
    
    // Update the user's password
    $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);
    $update_query = "UPDATE users SET password=?, reset_token=NULL WHERE reset_token=?";
    $stmt_update = $conn->prepare($update_query);
    $stmt_update->bind_param("ss", $hashed_password, $token);
    $stmt_update->execute();
    
    echo "Password updated successfully!";
}
?>


<?php
// Include required files
require_once 'config.php';
require_once 'functions.php';

// Start session
session_start();

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = $_POST['email'];
    
    // Check if email exists in database
    $query = "SELECT id, password_reset_token FROM users WHERE email = ?";
    $stmt = $conn->prepare($query);
    $stmt->bind_param("s", $email);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows > 0) {
        // Generate a new password reset token
        $token = bin2hex(random_bytes(16));
        
        // Create hashed token for security
        $hashedToken = password_hash($token, PASSWORD_DEFAULT);
        
        // Set expiration time (e.g., 30 minutes from now)
        $expirationTime = date('Y-m-d H:i:s', strtotime('+30 minutes'));
        
        // Update the user's record with the new token and expiration
        $updateQuery = "UPDATE users SET password_reset_token = ?, token_expires_at = ? WHERE email = ?";
        $updateStmt = $conn->prepare($updateQuery);
        $updateStmt->bind_param("sss", $hashedToken, $expirationTime, $email);
        
        if ($updateStmt->execute()) {
            // Send reset link to user's email
            $resetLink = "http://$_SERVER[HTTP_HOST]/reset-password.php?token=$token";
            
            $subject = "Password Reset Request";
            $message = "Someone requested a password reset for your account. 

If this was you, please click the following link: 
$resetLink

If this wasn't you, simply ignore this email.
The link will expire in 30 minutes.";
            
            // Use PHP's mail function (or use a library like PHPMailer)
            $headers = "From: noreply@yourdomain.com";
            
            if (mail($email, $subject, $message, $headers)) {
                echo "Password reset email has been sent to your inbox!";
            } else {
                echo "Error sending password reset email. Please try again later.";
            }
        } else {
            echo "An error occurred while updating the password reset token.";
        }
    } else {
        // Email does not exist in database
        echo "No account found with this email address.";
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <h1>Forgot Password</h1>
    
    <?php if (isset($_SESSION['error'])) { ?>
        <p style="color: red;"><?php echo $_SESSION['error']; ?></p>
    <?php } ?>
    
    <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
        <label for="email">Email:</label><br>
        <input type="text" id="email" name="email"><br><br>
        <input type="submit" value="Send Reset Link">
    </form>
    
    <p>Already have an account? <a href="login.php">Login here</a></p>
</body>
</html>


<?php
// Database connection
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'mydatabase';

$conn = mysqli_connect($host, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Handle forgot password form submission
if (isset($_POST['submit'])) {
    $email = $_POST['email'];

    // Validate input
    if (empty($email)) {
        echo "Email is required";
        exit();
    }

    // Check if email exists in database
    $query = "SELECT * FROM users WHERE email = ?";
    $stmt = mysqli_prepare($conn, $query);
    mysqli_stmt_bind_param($stmt, 's', $email);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);

    if (mysqli_num_rows($result) == 0) {
        echo "Email not found in our records";
        exit();
    }

    // Generate reset token
    $token = bin2hex(random_bytes(32));
    $expires = date('Y-m-d H:i:s', time() + 3600); // Token valid for 1 hour

    // Update user record with reset token and expiration time
    $updateQuery = "UPDATE users SET reset_token = ?, reset_expires = ? WHERE email = ?";
    $stmt = mysqli_prepare($conn, $updateQuery);
    mysqli_stmt_bind_param($stmt, 'sss', $token, $expires, $email);
    mysqli_stmt_execute($stmt);

    // Send password reset email
    require_once('PHPMailer/PHPMailer.php');
    require_once('PHPMailer/SMTP.php');
    require_once('PHPMailer/Exception.php');

    try {
        $mail = new PHPMailer\PHPMailer();
        $mail->isSMTP();
        $mail->Host = 'smtp.gmail.com';
        $mail->SMTPAuth = true;
        $mail->Username = 'your_email@gmail.com';
        $mail->Password = 'your_app_specific_password';
        $mail->SMTPSecure = 'tls';
        $mail->Port = 587;

        $mail->setFrom('your_email@gmail.com', 'Reset Password');
        $mail->addAddress($email);

        $resetLink = "http://example.com/reset_password.php?token=$token";
        $body = "Click the following link to reset your password: <a href='$resetLink'>Reset Password</a>";

        $mail->isHTML(true);
        $mail->Subject = 'Password Reset Request';
        $mail->Body    = $body;

        $mail->send();
        echo "Password reset email has been sent!";
    } catch (Exception $e) {
        echo "Message could not be sent.Mailer Error: {$mail->ErrorInfo}";
    }

    mysqli_close($conn);
}
?>

<!-- Forgot Password Form -->
<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <h2>Forgot Password</h2>
    <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
        <label for="email">Email:</label><br>
        <input type="text" id="email" name="email"><br><br>
        <input type="submit" name="submit" value="Reset Password">
    </form>
</body>
</html>

// Reset Password Page (reset_password.php)
<?php
session_start();
$conn = mysqli_connect($host, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

if (!isset($_GET['token'])) {
    echo "Invalid reset link!";
    exit();
}

$token = $_GET['token'];

// Check token in database
$query = "SELECT * FROM users WHERE reset_token = ? AND reset_expires > NOW()";
$stmt = mysqli_prepare($conn, $query);
mysqli_stmt_bind_param($stmt, 's', $token);
mysqli_stmt_execute($stmt);
$result = mysqli_stmt_get_result($stmt);

if (mysqli_num_rows($result) == 0) {
    echo "Invalid or expired token!";
    exit();
}

// Display reset form
?>
<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <h2>Reset Password</h2>
    <form action="reset_password.php" method="post">
        <label for="new_password">New Password:</label><br>
        <input type="password" id="new_password" name="new_password"><br><br>
        <input type="hidden" name="token" value="<?php echo $token; ?>">
        <input type="submit" name="reset_password" value="Reset">
    </form>
</body>
</html>

<?php
// Handle password reset
if (isset($_POST['reset_password'])) {
    $newPassword = $_POST['new_password'];
    $token = $_POST['token'];

    // Hash the new password
    $hashedPassword = password_hash($newPassword, PASSWORD_DEFAULT);

    // Update user's password and invalidate token
    $updateQuery = "UPDATE users SET password = ?, reset_token = NULL, reset_expires = NULL WHERE reset_token = ?";
    $stmt = mysqli_prepare($conn, $updateQuery);
    mysqli_stmt_bind_param($stmt, 'ss', $hashedPassword, $token);
    mysqli_stmt_execute($stmt);

    echo "Password has been reset successfully!";
}

mysqli_close($conn);
?>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$db_name = 'mydatabase';

// Connect to database
$conn = new mysqli($host, $username, $password, $db_name);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to send password reset email
function sendPasswordResetEmail($email, $resetLink) {
    $to = $email;
    $subject = 'Password Reset Request';
    $message = "
        <html>
            <body>
                <p>We received a request to reset your password. Click the link below to reset it:</p>
                <a href='$resetLink'>Reset Password</a><br>
                <small>If you did not make this request, please ignore this email.</small>
                <p>This link will expire in 1 hour.</p>
            </body>
        </html>";
    $headers = "MIME-Version: 1.0" . "\r
";
    $headers .= "Content-type:text/html;charset=UTF-8" . "\r
";
    
    mail($to, $subject, $message, $headers);
}

// Generate a unique token
function generateToken() {
    return uniqid(mt_rand(), true);
}

// Reset password function
function resetPassword($conn, $email) {
    // Check if user exists
    $stmt = $conn->prepare("SELECT * FROM users WHERE email = ?");
    $stmt->bind_param("s", $email);
    $stmt->execute();
    
    $result = $stmt->get_result();
    $user = $result->fetch_assoc();
    
    if (!$user) {
        return false;
    }
    
    // Generate token and expiration time
    $token = generateToken();
    $expires = date('Y-m-d H:i:s', strtotime('+1 hour'));
    
    // Insert token into database
    $insertStmt = $conn->prepare("INSERT INTO password_resets (user_id, token, expires) VALUES (?, ?, ?)");
    $insertStmt->bind_param("iss", $user['id'], $token, $expires);
    $insertStmt->execute();
    
    // Send reset email
    $resetLink = "http://$_SERVER[HTTP_HOST]/reset_password.php?token=$token";
    sendPasswordResetEmail($email, $resetLink);
    
    return true;
}

// Example usage:
if (isset($_POST['forgot-password'])) {
    $email = $_POST['email'];
    if (resetPassword($conn, $email)) {
        echo "An email has been sent with instructions to reset your password.";
    } else {
        echo "Email address not found in our records.";
    }
}

$conn->close();
?>


<?php
session_start();

// Get token from URL
if (!isset($_GET['token'])) {
    die("Invalid request");
}

$token = $_GET['token'];

// Validate token
$conn = new mysqli($host, $username, $password, $db_name);

$stmt = $conn->prepare("SELECT * FROM password_resets WHERE token = ? AND expires > NOW()");
$stmt->bind_param("s", $token);
$stmt->execute();

$result = $stmt->get_result();
if (!$result->num_rows) {
    die("Invalid or expired token");
}

// Display reset form
?>
<form action="reset_password.php" method="post">
    <input type="password" name="new_password" placeholder="Enter new password" required>
    <input type="password" name="confirm_password" placeholder="Confirm new password" required>
    <input type="hidden" name="token" value="<?php echo $token; ?>">
    <button type="submit">Reset Password</button>
</form>


<?php
session_start();

// Check if form is submitted
if (!isset($_POST['new_password'])) {
    die("Invalid request");
}

$conn = new mysqli($host, $username, $password, $db_name);

$token = $_POST['token'];
$newPassword = $_POST['new_password'];
$confirmPassword = $_POST['confirm_password'];

// Check if passwords match
if ($newPassword != $confirmPassword) {
    die("Passwords do not match");
}

// Validate token
$stmt = $conn->prepare("SELECT * FROM password_resets WHERE token = ? AND expires > NOW()");
$stmt->bind_param("s", $token);
$stmt->execute();
$result = $stmt->get_result();

if (!$result->num_rows) {
    die("Invalid or expired token");
}

$userReset = $result->fetch_assoc();
$stmt = $conn->prepare("UPDATE users SET password = ? WHERE id = ?");
$stmt->bind_param("si", password_hash($newPassword, PASSWORD_DEFAULT), $userReset['user_id']);
$stmt->execute();

// Invalidate the token
$invalidateStmt = $conn->prepare("DELETE FROM password_resets WHERE token = ?");
$invalidateStmt->bind_param("s", $token);
$invalidateStmt->execute();

echo "Password has been reset successfully!";
?>


<?php
// Include database configuration file
include('config.php');

// Initialize variables with default empty values
$email = $token = $password = $confirm_password = "";
$errors = array();

// If form submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    if (isset($_POST['reset-password'])) {
        // Reset password form submission
        $email = test_input($_POST['email']);
    }
}

function test_input($data) {
    $data = trim($data);
    $data = stripslashes($data);
    $data = htmlspecialchars($data);
    return $data;
}

// If reset password button clicked
if (isset($_POST['reset-password'])) {
    // Check if email exists in database
    $sql = "SELECT id FROM users WHERE email = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("s", $email);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows == 1) {
        // Generate a random token
        $token = bin2hex(random_bytes(32));
        
        // Set expiration time (e.g., 1 hour from now)
        $expires = date('Y-m-d H:i:s', strtotime('+1 hour'));
        
        // Insert token into database
        $sql = "INSERT INTO password_reset (user_id, token, expires) VALUES (?, ?, ?)";
        $stmt = $conn->prepare($sql);
        $stmt->bind_param("iss", $result->fetch_assoc()['id'], $token, $expires);
        $stmt->execute();
        
        // Send reset email
        $to = $email;
        $subject = "Password Reset Request";
        $message = "
            <html>
                <body>
                    <h2>Password Reset</h2>
                    <p>Please click the following link to reset your password:</p>
                    <a href='http://example.com/reset.php?token=$token'>Reset Password</a>
                    <p>This link will expire in 1 hour.</p>
                </body>
            </html>
        ";
        
        // Set headers for email
        $headers = "From: admin@example.com\r
";
        $headers .= "Content-type: text/html\r
";
        
        // Send the email
        mail($to, $subject, $message, $headers);
        
        echo "Password reset link has been sent to your email.";
    } else {
        echo "Email does not exist in our database.";
    }
}

// Reset password form
echo '
<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <h2>Forgot Password</h2>
    <form method="post" action="' . htmlspecialchars($_SERVER["PHP_SELF"]) . '">
        <input type="email" name="email" placeholder="Enter your email address" required><br><br>
        <button type="submit" name="reset-password">Reset Password</button>
    </form>
</body>
</html>';
?>

<?php
// Close database connection
$conn->close();
?>


<?php
include('config.php');

if (!isset($_GET['token'])) {
    die("No token provided.");
}

$token = $_GET['token'];

// Check if token exists in database and hasn't expired
$sql = "SELECT * FROM password_reset WHERE token = ? AND expires > NOW()";
$stmt = $conn->prepare($sql);
$stmt->bind_param("s", $token);
$stmt->execute();
$result = $stmt->get_result();

if ($result->num_rows == 0) {
    die("Invalid or expired token.");
}

// If form submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $password = test_input($_POST['password']);
    $confirm_password = test_input($_POST['confirm_password']);

    if ($password != $confirm_password) {
        die("Passwords do not match.");
    }

    // Update password in database
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);
    
    $sql = "UPDATE users SET password = ? WHERE id = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("si", $hashed_password, $result->fetch_assoc()['user_id']);
    $stmt->execute();
    
    // Delete the token
    $sql = "DELETE FROM password_reset WHERE token = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("s", $token);
    $stmt->execute();

    echo "Password updated successfully!";
}

// Display reset form
echo '
<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <h2>Reset Password</h2>
    <form method="post" action="' . htmlspecialchars($_SERVER["PHP_SELF"]) . '">
        <input type="password" name="password" placeholder="Enter new password" required><br><br>
        <input type="password" name="confirm_password" placeholder="Confirm new password" required><br><br>
        <button type="submit">Submit</button>
    </form>
</body>
</html>';
?>

<?php
$conn->close();
?>


<?php
// forgot-password.php

// Database configuration
$host = 'localhost';
$dbname = 'your_database';
$username = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

function sendResetEmail($to, $token) {
    $subject = "Password Reset Request";
    $message = "<html>
                <head>
                    <title>Password Reset</title>
                </head>
                <body>
                    <h2>Password Reset</h2>
                    <p>Please click the following link to reset your password:</p>
                    <a href='http://example.com/reset-password.php?token=" . $token . "'>Reset Password</a>
                    <br><br>
                    <p>If you did not request a password reset, please ignore this email.</p>
                </body>
               </html>";
    $headers = "MIME-Version: 1.0" . "\r
";
    $headers .= "Content-type:text/html;charset=UTF-8" . "\r
";
    $headers .= "From: webmaster@example.com" . "\r
";
    
    return mail($to, $subject, $message, $headers);
}

function generateToken() {
    return bin2hex(random_bytes(16));
}

function checkEmailExists($email, $conn) {
    try {
        $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
        $stmt->execute([$email]);
        return $stmt->rowCount() > 0;
    } catch(PDOException $e) {
        die("Error checking email: " . $e->getMessage());
    }
}

function forgotPassword($email, $conn) {
    if (!checkEmailExists($email, $conn)) {
        return ["status" => false, "message" => "Email not found."];
    }

    $token = generateToken();
    $expires = date("Y-m-d H:i:s", time() + 3600); // Token expires in 1 hour

    try {
        $stmt = $conn->prepare("UPDATE users SET reset_token = ?, expires_at = ? WHERE email = ?");
        $stmt->execute([$token, $expires, $email]);
    } catch(PDOException $e) {
        die("Error updating token: " . $e->getMessage());
    }

    if (sendResetEmail($email, $token)) {
        return ["status" => true, "message" => "Password reset link sent to your email."];
    } else {
        return ["status" => false, "message" => "Failed to send reset email. Please try again."];
    }
}

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = $_POST['email'];
    
    $result = forgotPassword($email, $conn);
    if ($result['status']) {
        echo "<p>" . $result['message'] . "</p>";
    } else {
        echo "<p style='color: red'>" . $result['message'] . "</p>";
    }
}
?>


<?php
// reset-password.php

session_start();

function validateToken($token, $conn) {
    try {
        $stmt = $conn->prepare("SELECT id FROM users WHERE reset_token = ? AND expires_at > ?");
        $stmt->execute([$token, date('Y-m-d H:i:s')]);
        return $stmt->rowCount() > 0;
    } catch(PDOException $e) {
        die("Error validating token: " . $e->getMessage());
    }
}

function resetPassword($token, $new_password, $conn) {
    if (!validateToken($token, $conn)) {
        return ["status" => false, "message" => "Invalid or expired token."];
    }

    try {
        $stmt = $conn->prepare("UPDATE users SET password = ?, reset_token = NULL, expires_at = NULL WHERE reset_token = ?");
        $stmt->execute([password_hash($new_password, PASSWORD_DEFAULT), $token]);
        return ["status" => true, "message" => "Password updated successfully."];
    } catch(PDOException $e) {
        die("Error resetting password: " . $e->getMessage());
    }
}

if (isset($_GET['token'])) {
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        $new_password = $_POST['password'];
        $token = $_GET['token'];

        $result = resetPassword($token, $new_password, $conn);
        if ($result['status']) {
            echo "<p>" . $result['message'] . "</p>";
        } else {
            echo "<p style='color: red'>" . $result['message'] . "</p>";
        }
    } else {
        // Display password reset form
?>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <h2>Reset Password</h2>
    <form action="reset-password.php?token=<?php echo $_GET['token']; ?>" method="post">
        New Password: <input type="password" name="password" required><br>
        Confirm Password: <input type="password" name="confirm_password" required><br>
        <button type="submit">Reset</button>
    </form>
</body>
</html>
<?php
    }
} else {
    header("Location: forgot-password.php");
}
?>


<?php
// Include configuration file
include 'config.php';

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Check if email or username is provided
    if (!isset($_POST['email']) || empty($_POST['email'])) {
        $error = "Please enter your email address.";
    } else {
        $email = mysqli_real_escape_string($conn, $_POST['email']);
        
        // Query the database for user with this email
        $sql = "SELECT * FROM users WHERE email='$email'";
        $result = mysqli_query($conn, $sql);
        
        if (mysqli_num_rows($result) == 0) {
            $error = "No account found with that email address.";
        } else {
            // Generate a random token and expiration time
            $token = md5(rand(1000, 9999));
            $exp = strtotime("+1 hour");
            
            // Update the database with new token and exp time
            $updateSql = "UPDATE users SET reset_token='$token', reset_exp='$exp' WHERE email='$email'";
            mysqli_query($conn, $updateSql);
            
            // Send email to user
            $to = $email;
            $subject = "Password Reset Request";
            $message = "Please click the link below to reset your password:

";
            $message .= "http://example.com/reset.php?token=$token&email=$email";
            $headers = "From: no-reply@example.com\r
";
            $headers .= "Content-type: text/html\r
";
            
            if (mail($to, $subject, $message, $headers)) {
                // Redirect back to login page
                header("Location: login.php?msg=Check your email for password reset instructions.");
                exit();
            } else {
                $error = "Failed to send password reset email.";
            }
        }
    }
}

// Close database connection
mysqli_close($conn);
?>


<?php
session_start();
include('config.php'); // Include your database configuration file

if (isset($_POST['reset'])) {
    $email = mysqli_real_escape_string($conn, $_POST['email']);
    
    // Validate email input
    if (empty($email)) {
        $error = "Please enter your email address!";
    } else {
        // Check if email exists in the database
        $check_email = mysqli_query($conn, "SELECT * FROM users WHERE email='$email'");
        $rows = mysqli_num_rows($check_email);
        
        if ($rows == 0) {
            $error = "Email not found in our records!";
        } else {
            // Generate a unique token for password reset
            $token = bin2hex(random_bytes(16));
            
            // Store the token and email in the database
            $expires = date('Y-m-d H:i:s', time() + 3600); // Token expires after 1 hour
            
            mysqli_query($conn, "INSERT INTO password_reset (email, token, created_at) VALUES('$email','$token','$expires')");
            
            // Send reset email
            $to = $email;
            $subject = "Password Reset Request";
            $message = "
                <html>
                    <body>
                        <h2>Password Reset</h2>
                        <p>Please click the following link to reset your password:</p>
                        <a href='http://yourwebsite.com/reset_password.php?token=$token'>Reset Password</a>
                        <br><br>
                        <small>This link will expire in 1 hour.</small>
                    </body>
                </html>
            ";
            
            // Set headers for email
            $headers = "MIME-Version: 1.0" . "\r
";
            $headers .= "Content-type:text/html;charset=UTF-8" . "\r
";
            $headers .= "From: yourwebsite.com <your_email@example.com>" . "\r
";
            
            mail($to, $subject, $message, $headers);
            
            // Show success message
            $success = "An email has been sent to you with a password reset link!";
        }
    }
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Forgot Password</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 20px;
            background-color: #f5f5f5;
        }
        .container {
            max-width: 400px;
            margin: 0 auto;
            background-color: white;
            padding: 30px;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }
        .form-group {
            margin-bottom: 20px;
        }
        input[type="email"] {
            width: 100%;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-sizing: border-box;
        }
        button {
            background-color: #4CAF50;
            color: white;
            padding: 12px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            width: 100%;
        }
        button:hover {
            background-color: #45a049;
        }
    </style>
</head>
<body>
    <div class="container">
        <?php
        if (isset($error)) {
            echo "<p style='color:red'>".$error."</p>";
        } elseif (isset($success)) {
            echo "<p style='color:green'>".$success."</p>";
        }
        ?>
        
        <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="POST">
            <div class="form-group">
                <input type="email" name="email" placeholder="Enter your email address..." required>
            </div>
            <button type="submit" name="reset">Reset Password</button>
        </form>
    </div>
</body>
</html>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

try {
    // Create database connection
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    die("Could not connect to the database: " . $e->getMessage());
}

// Check if form was submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Get email from form
    $email = $_POST['email'];
    
    try {
        // Prepare SQL statement to check user existence
        $stmt = $conn->prepare("SELECT * FROM users WHERE email=:email");
        $stmt->bindParam(':email', $email);
        $stmt->execute();
        
        // Check if user exists
        if ($stmt->rowCount() > 0) {
            // Generate temporary password
            $temp_password = generateTemporaryPassword(12); // 12 characters
            
            // Update database with temporary password
            $updateStmt = $conn->prepare("UPDATE users SET password=:temp_password WHERE email=:email");
            $updateStmt->bindParam(':temp_password', md5($temp_password)); // Store hashed password
            $updateStmt->bindParam(':email', $email);
            $updateStmt->execute();
            
            // Send email with temporary password
            $to = $email;
            $subject = "Your Temporary Password";
            $message = "Dear user,

Your temporary password is: " . $temp_password . "

Please login and change your password immediately.

Best regards,
The Admin Team";
            $headers = "From: admin@example.com\r
";
            
            if (mail($to, $subject, $message, $headers)) {
                // Redirect to success page
                header("Location: forgot_password_success.php");
                die();
            } else {
                echo "Email could not be sent. Please try again later.";
            }
        } else {
            // Email does not exist in database
            echo "This email address is not registered with us.";
        }
    } catch(PDOException $e) {
        die("An error occurred: " . $e->getMessage());
    }
}

// Function to generate temporary password
function generateTemporaryPassword($length = 12) {
    $chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^&*()';
    $random_string = '';
    for ($i = 0; $i < $length; $i++) {
        $random_string .= substr(str_shuffle($chars), 0, 1);
    }
    return $random_string;
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <h2>Forgot Password</h2>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <label for="email">Email:</label><br>
        <input type="text" id="email" name="email" required><br><br>
        <input type="submit" value="Send Temporary Password">
    </form>
</body>
</html>


<?php
// Include database connection file
require_once 'db_connect.php';

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = $_POST['email'];
    
    // Sanitize email input
    $email = mysqli_real_escape_string($conn, trim($email));
    
    // Check if email exists in the database
    $sql = "SELECT id FROM users WHERE email='$email'";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) == 0) {
        echo "<script>alert('Email not found!');</script>";
        exit();
    }
    
    // Generate a random token
    $token = bin2hex(random_bytes(32));
    
    // Set the expiration time for the token (e.g., 1 hour from now)
    $expires = date("Y-m-d H:i:s", strtotime("+1 hour"));
    
    // Store the token in the database
    $sql = "INSERT INTO password_reset_tokens (token, user_id, expires) 
            VALUES ('$token', (SELECT id FROM users WHERE email='$email'), '$expires')";
    
    if (!mysqli_query($conn, $sql)) {
        echo "<script>alert('Error! Please try again.');</script>";
        exit();
    }
    
    // Send reset password link to the user's email
    $resetLink = "http://$_SERVER[HTTP_HOST]/reset_password.php?token=$token";
    
    $to = $email;
    $subject = "Password Reset Request";
    $message = "Please click on the following link to reset your password: 
$resetLink

If you did not request a password reset, please ignore this email.";
    $headers = "From: your_email@example.com" . "\r
";
    
    if (!mail($to, $subject, $message, $headers)) {
        echo "<script>alert('Error sending email! Please try again.');</script>";
        exit();
    }
    
    // Show success message
    echo "<script>alert('A password reset link has been sent to your email address.');</script>";
}

// Close database connection
mysqli_close($conn);
?>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'my_database';
$username = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

// Function to generate a random token
function generateToken() {
    return bin2hex(random_bytes(16));
}

// Handle form submission
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $email = $_POST['email'];
    
    // Check if email exists in the database
    try {
        $stmt = $conn->prepare("SELECT id FROM users WHERE email = :email");
        $stmt->bindParam(':email', $email);
        $stmt->execute();
        
        if ($stmt->rowCount() > 0) {
            // Generate a reset token
            $token = generateToken();
            
            // Update the user's record with the new token
            $resetStmt = $conn->prepare("UPDATE users SET reset_token = :token, reset_expires = DATE_ADD(NOW(), INTERVAL 1 HOUR) WHERE email = :email");
            $resetStmt->bindParam(':token', $token);
            $resetStmt->bindParam(':email', $email);
            $resetStmt->execute();
            
            // Send the reset email
            $to = $email;
            $subject = "Password Reset Request";
            $message = "
                <html>
                    <head></head>
                    <body>
                        <h2>Password Reset</h2>
                        <p>Please click the following link to reset your password:</p>
                        <a href='http://localhost/reset-password.php?token=$token'>Reset Password</a><br>
                        <p>If you did not request a password reset, please ignore this email.</p>
                    </body>
                </html>
            ";
            $headers = "MIME-Version: 1.0" . "\r
";
            $headers .= "Content-type:text/html;charset=UTF-8" . "\r
";
            $headers .= "From: <your_email@example.com>" . "\r
";
            
            mail($to, $subject, $message, $headers);
            
            echo "<p>Email sent! Check your inbox to reset your password.</p>";
        } else {
            echo "<p>Email not found in our records.</p>";
        }
    } catch(PDOException $e) {
        die("Error: " . $e->getMessage());
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <h2>Forgot Password</h2>
    <form action="<?php echo htmlspecialchars($_SERVER['PHP_SELF']); ?>" method="post">
        <input type="email" name="email" placeholder="Enter your email" required><br>
        <button type="submit">Send Reset Link</button>
    </form>
</body>
</html>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'my_database';
$username = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

// Get token from URL
if (isset($_GET['token'])) {
    $token = $_GET['token'];
    
    // Check if token exists and is valid
    try {
        $stmt = $conn->prepare("SELECT id, reset_expires FROM users WHERE reset_token = :token");
        $stmt->bindParam(':token', $token);
        $stmt->execute();
        
        if ($stmt->rowCount() > 0) {
            $row = $stmt->fetch(PDO::FETCH_ASSOC);
            
            // Check if token has expired
            if (strtotime($row['reset_expires']) < time()) {
                die("Token has expired. Please request a new password reset.");
            }
        } else {
            die("Invalid token. Please request a new password reset.");
        }
    } catch(PDOException $e) {
        die("Error: " . $e->getMessage());
    }
} else {
    die("No token provided. Please request a password reset.");
}

// Handle password update
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $token = $_GET['token'];
    $newPassword = $_POST['password'];
    
    try {
        // Update the user's password
        $stmt = $conn->prepare("UPDATE users SET password = :password, reset_token = NULL, reset_expires = NULL WHERE reset_token = :token");
        $stmt->bindParam(':password', password_hash($newPassword, PASSWORD_DEFAULT));
        $stmt->bindParam(':token', $token);
        $stmt->execute();
        
        // Destroy the token after use
        unset($_GET['token']);
        
        echo "<p>Password updated successfully! You can now <a href='login.php'>login</a> with your new password.</p>";
    } catch(PDOException $e) {
        die("Error: " . $e->getMessage());
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <h2>Reset Password</h2>
    <form action="<?php echo htmlspecialchars($_SERVER['PHP_SELF']); ?>?token=<?php echo $token; ?>" method="post">
        <input type="password" name="password" placeholder="Enter new password" required><br>
        <button type="submit">Update Password</button>
    </form>
</body>
</html>


<?php
session_start();
// Database configuration
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get user input
    $email = $_POST['email'];
    $username = $_POST['username'];

    // Check if email or username is empty
    if (empty($email) && empty($username)) {
        die("Please enter either your email or username.");
    }

    // Prepare the query based on provided input
    $where = [];
    $params = [];

    if (!empty($email)) {
        $where[] = "email = ?";
        $params[] = $email;
    }

    if (!empty($username)) {
        $where[] = "username = ?";
        $params[] = $username;
    }

    // Check how many users match the provided info
    $query = "SELECT id FROM users WHERE " . implode(" AND ", $where);
    $stmt = $conn->prepare($query);
    $stmt->execute($params);

    $user = $stmt->fetch(PDO::FETCH_ASSOC);

    if (!$user) {
        die("No user found with this email or username.");
    }

    // Generate reset token and expiry time
    $token = bin2hex(random_bytes(16)); // Generate a 32-character random string
    $expires = date('Y-m-d H:i:s', strtotime('+1 hour'));

    // Update the database with the new token and expiry time
    $updateStmt = $conn->prepare("UPDATE users SET reset_token=?, reset_expires=? WHERE id=?");
    $updateStmt->execute([$token, $expires, $user['id']]);

    // Send email to user
    $to = $email ?: $username;
    $subject = "Password Reset Request";
    $message = "Please click the following link to reset your password:

";
    $message .= "http://yourwebsite.com/reset-password.php?token=$token

";
    $message .= "This link will expire in 1 hour.";

    mail($to, $subject, $message);

    // Redirect back with success message
    header("Location: forgot-password.php?status=success");
    exit();
}

// Close connection
$conn = null;
?>


<?php
// Include database connection file
include 'db_connection.php';

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = $_POST['email'];
    
    // Validate input
    if (empty($email)) {
        die("Please enter your email address");
    }
    
    // Check if the email exists in the database
    $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
    $stmt->execute([$email]);
    $row = $stmt->fetch();
    
    if (!$row) {
        die("Email does not exist in our records");
    }
    
    // Generate a random token and expiration time
    $token = bin2hex(openssl_random_pseudo_bytes(16));
    $expiration_time = date('Y-m-d H:i:s', strtotime('+1 hour'));
    
    // Store the token in the database
    $stmt = $conn->prepare("INSERT INTO password_resets (email, token, created_at) VALUES (?, ?, ?)");
    $stmt->execute([$email, sha1($token), $expiration_time]);
    
    // Send email with reset link
    $to = $email;
    $subject = "Password Reset Request";
    $message = "
        <html>
            <head></head>
            <body>
                <h2>Password Reset</h2>
                <p>Please click the following link to reset your password:</p>
                <a href='http://example.com/reset_password.php?token=$token'>Reset Password</a><br><br>
                <small>This token will expire in one hour.</small>
            </body>
        </html>
    ";
    
    // Include PHPMailer for sending emails
    require 'PHPMailer/PHPMailer.php';
    $mail = new PHPMailer();
    $mail->isSMTP(); // Set mailer to use SMTP
    $mail->Host = 'smtp.example.com'; // Specify main and backup server
    $mail->SMTPAuth = true; // Enable SMTP authentication
    $mail->Username = 'your_username@example.com'; // SMTP username
    $mail->Password = 'your_password'; // SMTP password
    
    $mail->setFrom('from@example.com', 'Mailer');
    $mail->addAddress($to, $email);
    
    $mail->isHTML(true); // Set email format to HTML
    $mail->Subject = $subject;
    $mail->Body = $message;
    
    if ($mail->send()) {
        echo "An email has been sent to your account with instructions to reset your password.";
    } else {
        die("Mailer Error: " . $mail->ErrorInfo);
    }
}
?>


<?php
// Include database connection file
include 'db_connection.php';

if (isset($_GET['token'])) {
    $token = $_GET['token'];
    
    // Check if token exists and hasn't expired
    $stmt = $conn->prepare("SELECT * FROM password_resets WHERE token = ? AND created_at > NOW() - INTERVAL 1 HOUR");
    $stmt->execute([sha1($token)]);
    $reset = $stmt->fetch();
    
    if (!$reset) {
        die("Invalid or expired reset link");
    }
    
    // Display reset form
?>
<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <h2>Reset Your Password</h2>
    <form action="reset_password.php?token=<?php echo $token; ?>" method="post">
        New Password: <input type="password" name="new_password"><br><br>
        Confirm Password: <input type="password" name="confirm_password"><br><br>
        <input type="submit" value="Reset Password">
    </form>
</body>
</html>

<?php
} else if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $token = $_GET['token'];
    $new_password = $_POST['new_password'];
    $confirm_password = $_POST['confirm_password'];
    
    // Check passwords match
    if ($new_password != $confirm_password) {
        die("Passwords do not match");
    }
    
    // Update the user's password
    $stmt = $conn->prepare("UPDATE users SET password = ? WHERE id = ?");
    $stmt->execute([password_hash($new_password, PASSWORD_DEFAULT), $reset['user_id']]);
    
    // Delete the reset token after use
    $stmt = $conn->prepare("DELETE FROM password_resets WHERE token = ?");
    $stmt->execute([sha1($token)]);
    
    echo "Password has been successfully updated!";
}
?>


<?php
// forgot_password.php

// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'your_database';

// Create connection
$conn = new mysqli($host, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

if (isset($_POST['email'])) {
    $email = $_POST['email'];

    // Check if email exists in the database
    $sql = "SELECT id, username FROM users WHERE email = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("s", $email);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        // Generate a random token
        $token = bin2hex(random_bytes(16));

        // Insert the token into the database
        $sql = "INSERT INTO password_reset (user_id, token, created_at) VALUES (?, ?, NOW())";
        $stmt = $conn->prepare($sql);
        $stmt->bind_param("is", $result->fetch_assoc()['id'], $token);
        $stmt->execute();

        // Send the reset email
        $to = $email;
        $subject = "Password Reset Request";
        $message = "
            <html>
                <body>
                    <p>Hello,</p>
                    <p>You have requested a password reset. Click the link below to reset your password:</p>
                    <a href='http://your-site.com/reset_password.php?token=$token'>Reset Password</a><br><br>
                    <p>If you did not request this, please ignore this email.</p>
                </body>
            </html>
        ";
        $headers = "MIME-Version: 1.0" . "\r
";
        $headers .= "Content-type:text/html;charset=UTF-8" . "\r
";
        mail($to, $subject, $message, $headers);

        // Redirect to success page
        header("Location: password_reset_sent.html");
        exit();
    } else {
        // Email does not exist in the database
        header("Location: forgot_password_form.php?error=Email%20not%20found");
        exit();
    }
}

$conn->close();
?>


<?php
// reset_password.php

$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'your_database';

$conn = new mysqli($host, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

if (isset($_POST['token'], $_POST['new_password'], $_POST['confirm_password'])) {

    // Check if tokens match and the token is valid
    $token = $_POST['token'];
    $sql = "SELECT user_id, created_at FROM password_reset WHERE token = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("s", $token);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows == 1) {
        $row = $result->fetch_assoc();
        
        // Check if the token has expired (e.g., after 30 minutes)
        $time_diff = time() - strtotime($row['created_at']);
        if ($time_diff > 1800) { // 1800 seconds = 30 minutes
            header("Location: reset_password_form.php?token=$token&error=Token%20expired");
            exit();
        }

        // Check if new and confirm passwords match
        $new_password = $_POST['new_password'];
        $confirm_password = $_POST['confirm_password'];

        if ($new_password != $confirm_password) {
            header("Location: reset_password_form.php?token=$token&error=Passwords%20do%20not%20match");
            exit();
        }

        // Update the user's password
        $user_id = $row['user_id'];
        $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);

        $sql = "UPDATE users SET password = ? WHERE id = ?";
        $stmt = $conn->prepare($sql);
        $stmt->bind_param("si", $hashed_password, $user_id);
        if ($stmt->execute()) {
            // Delete the token after successful reset
            $sql = "DELETE FROM password_reset WHERE token = ?";
            $stmt = $conn->prepare($sql);
            $stmt->bind_param("s", $token);
            $stmt->execute();

            header("Location: password_reset_success.html");
            exit();
        } else {
            echo "Error updating password";
        }
    } else {
        header("Location: reset_password_form.php?error=Invalid%20token");
        exit();
    }
}

$conn->close();
?>


<?php
// Database connection details
$host = "localhost";
$user = "root";
$password = "";
$db_name = "mydatabase";

// Connect to database
$conn = mysqli_connect($host, $user, $password, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Check if form is submitted
if (isset($_POST['reset_password'])) {
    // Get email from form
    $email = trim($_POST['email']);
    
    // Validate email format
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        echo "Invalid email format";
    } else {
        // Check if email exists in database
        $stmt = mysqli_prepare($conn, "SELECT * FROM users WHERE email = ?");
        mysqli_stmt_bind_param($stmt, "s", $email);
        mysqli_stmt_execute($stmt);
        $result = mysqli_stmt_get_result($stmt);
        
        if (mysqli_num_rows($result) == 0) {
            echo "No account found with this email";
        } else {
            // Generate a temporary password
            $temp_password = bin2hex(random_bytes(8)); // Generate random string
            
            // Update the user's password in database
            $update_stmt = mysqli_prepare($conn, "UPDATE users SET password = ? WHERE email = ?");
            mysqli_stmt_bind_param($update_stmt, "ss", $temp_password, $email);
            mysqli_stmt_execute($update_stmt);
            
            // Send the temporary password to user's email
            $to = $email;
            $subject = "Temporary Password";
            $message = "Your temporary password is: " . $temp_password . "
Please login and change your password.";
            $headers = "From: yourwebsite@example.com" . "\r
";
            
            mail($to, $subject, $message, $headers);
            
            // Redirect to success page
            header("Location: reset_success.php");
            exit();
        }
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <h2>Forgot Password</h2>
    <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
        <input type="email" name="email" placeholder="Enter your email" required><br><br>
        <input type="submit" name="reset_password" value="Reset Password">
    </form>
</body>
</html>


<?php
// Configuration
$host = 'localhost';
$dbUsername = 'root';
$dbPassword = '';
$dbName = 'your_database';

// Create connection
$conn = new mysqli($host, $dbUsername, $dbPassword, $dbName);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Check if form is submitted
if (isset($_POST['email'])) {
    $email = trim($_POST['email']);
    
    // Validate email input
    if (empty($email)) {
        $error = "Email cannot be empty!";
        include 'forgot-password-form.php';
        exit();
    }
    
    // Check if email exists in database
    $sql = "SELECT id FROM users WHERE email = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("s", $email);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows === 0) {
        $error = "Email not found!";
        include 'forgot-password-form.php';
        exit();
    }
    
    // Generate reset token
    $token = bin2hex(random_bytes(32));
    $expires = date('Y-m-d H:i:s', strtotime('+1 hour'));
    
    // Store token in database
    $sql = "INSERT INTO password_reset (user_id, token, expires) 
            VALUES (?, ?, ?)";
    $stmt = $conn->prepare($sql);
    $row = $result->fetch_assoc();
    $stmt->bind_param("iss", $row['id'], $token, $expires);
    
    if (!$stmt->execute()) {
        die("Error storing reset token: " . $stmt->error);
    }
    
    // Send email
    $to = $email;
    $subject = "Password Reset Request";
    $message = "
        <html>
            <head></head>
            <body>
                <h2>Password Reset</h2>
                <p>Click the link below to reset your password:</p>
                <a href='http://yourdomain.com/reset-password.php?token=$token'>Reset Password</a><br><br>
                <p>If you didn't request this, ignore this email.</p>
            </body>
        </html>
    ";
    
    $headers = "MIME-Version: 1.0" . "\r
";
    $headers .= "Content-type:text/html;charset=UTF-8" . "\r
";
    $headers .= "From: Your Name <your.email@domain.com>" . "\r
";
    
    if (mail($to, $subject, $message, $headers)) {
        echo "<p>Email sent! Check your inbox to reset your password.</p>";
    } else {
        die("Failed to send email.");
    }
}

$conn->close();
?>


<?php
session_start();

// Configuration
$host = 'localhost';
$dbUsername = 'root';
$dbPassword = '';
$dbName = 'your_database';

$conn = new mysqli($host, $dbUsername, $dbPassword, $dbName);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

if (isset($_GET['token'])) {
    $token = $_GET['token'];
    
    // Check token validity
    $sql = "SELECT user_id FROM password_reset 
            WHERE token = ? AND expires > NOW()";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("s", $token);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows === 0) {
        die("Invalid or expired token.");
    }
    
    // Store user_id in session
    $_SESSION['reset_user_id'] = $result->fetch_assoc()['user_id'];
} else {
    die("No token provided.");
}

// If form is submitted
if (isset($_POST['new_password'])) {
    if (!isset($_SESSION['reset_user_id'])) {
        die("Session expired. Please request a new password reset.");
    }
    
    $newPassword = trim($_POST['new_password']);
    $confirmPassword = trim($_POST['confirm_password']);
    
    // Validate passwords
    if (empty($newPassword) || empty($confirmPassword)) {
        $error = "Both fields are required!";
    } elseif ($newPassword !== $confirmPassword) {
        $error = "Passwords do not match!";
    } elseif (strlen($newPassword) < 6) {
        $error = "Password must be at least 6 characters!";
    }
    
    if (!isset($error)) {
        // Hash the password
        $hashedPassword = password_hash($newPassword, PASSWORD_DEFAULT);
        
        // Update user's password
        $sql = "UPDATE users 
                SET password = ? 
                WHERE id = ?";
        $stmt = $conn->prepare($sql);
        $stmt->bind_param("si", $hashedPassword, $_SESSION['reset_user_id']);
        $stmt->execute();
        
        // Delete the reset token
        $sql = "DELETE FROM password_reset WHERE user_id = ?";
        $stmt = $conn->prepare($sql);
        $stmt->bind_param("i", $_SESSION['reset_user_id']);
        $stmt->execute();
        
        session_unset();
        session_destroy();
        
        header("Location: login.php?success=Password%20changed%20successfully!");
        exit();
    }
}

// If no error or on initial load
if (!isset($error) && !isset($_POST['new_password'])) {
    $error = "";
}

?>
<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <?php if (isset($error)) { echo "<p style='color:red;'>$error</p>"; } ?>
    <h2>Reset Password</h2>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        New Password: <input type="password" name="new_password"><br><br>
        Confirm Password: <input type="password" name="confirm_password"><br><br>
        <button type="submit">Reset Password</button>
    </form>
</body>
</html>

<?php
$conn->close();
?>


<?php
// Database connection details
$host = 'localhost';
$username = 'root'; // Change according to your DB user
$password = '';     // Change according to your DB password
$dbname = 'test_db'; // Change according to your database name

$conn = mysqli_connect($host, $username, $password, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Check if email is provided and not empty
if (isset($_POST['email']) && !empty(trim($_POST['email']))) {
    $email = trim(mysqli_real_escape_string($conn, $_POST['email']));
    
    // Check if the email exists in the database
    $sql = "SELECT id FROM users WHERE email='$email'";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) > 0) {
        // Generate a unique token for password reset
        $token = bin2hex(random_bytes(16));
        
        // Set the token to expire in 30 minutes
        $expire_time = date('Y-m-d H:i:s', time() + 30 * 60);
        
        // Update the database with the new token and expiration time
        $sql_token = "UPDATE users SET reset_token='$token', reset_expires='$expire_time' WHERE email='$email'";
        mysqli_query($conn, $sql_token);
        
        // Send password reset link to user's email
        $to = $email;
        $subject = 'Password Reset Request';
        $message = "Please click the following link to reset your password:

";
        $message .= "http://localhost/reset_password.php?token=$token

";
        $message .= "This link will expire in 30 minutes.";
        
        // Set headers for email
        $headers = 'From: noreply@example.com' . "\r
" .
                  'Reply-To: noreply@example.com' . "\r
" .
                  'X-Mailer: PHP/' . phpversion();
        
        mail($to, $subject, $message, $headers);
        
        // Redirect back to login page with success message
        header("Location: login.php?msg=Password reset link sent to your email.");
        exit;
    } else {
        // Email not found in database
        header("Location: forgot_password.php?error=Email address does not exist.");
        exit;
    }
} else {
    // No email provided
    header("Location: forgot_password.php?error=Please enter an email address.");
    exit;
}

mysqli_close($conn);
?>


<?php
// Database connection details
$host = 'localhost';
$username = 'root'; 
$password = '';     
$dbname = 'test_db';

$conn = mysqli_connect($host, $username, $password, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Check if token and new password are provided
if (isset($_POST['token']) && isset($_POST['newpassword']) && isset($_POST['confirmpassword'])) {
    $token = trim(mysqli_real_escape_string($conn, $_POST['token']));
    $newpassword = trim(mysqli_real_escape_string($conn, $_POST['newpassword']));
    $confirmpassword = trim(mysqli_real_escape_string($conn, $_POST['confirmpassword']));

    // Check if passwords match
    if ($newpassword != $confirmpassword) {
        die("Passwords do not match.");
    }

    // Check if token exists and is valid
    $sql_token = "SELECT id, email FROM users WHERE reset_token='$token'";
    $result_token = mysqli_query($conn, $sql_token);

    if (mysqli_num_rows($result_token) > 0) {
        // Update password
        $hashed_password = password_hash($newpassword, PASSWORD_DEFAULT);
        
        $sql_update = "UPDATE users SET 
                        password='$hashed_password', 
                        reset_token='',
                        reset_expires='0000-00-00 00:00:00'
                      WHERE reset_token='$token'";
        mysqli_query($conn, $sql_update);

        // Redirect to login page with success message
        header("Location: login.php?msg=Password has been successfully reset.");
        exit;
    } else {
        // Invalid token
        die("Invalid password reset request.");
    }
} else {
    // Missing parameters
    die("Invalid request. Please try again.");
}

mysqli_close($conn);
?>


<?php
// Connect to the database
$host = 'localhost';
$dbname = 'mydatabase';
$username = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

// Check if email is provided
if (!isset($_POST['email'])) {
    die('Email not provided');
}

$email = $_POST['email'];

// Validate email format
if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
    die('Invalid email format');
}

// Check if email exists in database
$stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
$stmt->execute([$email]);
$user = $stmt->fetch(PDO::FETCH_ASSOC);

if (!$user) {
    die('Email not found in our records');
}

// Generate a random token for password reset
$token = bin2hex(random_bytes(16));
$expires = date('Y-m-d H:i:s', time() + 3600); // Token expires after 1 hour

// Update the database with the new token and expiration time
$stmt = $conn->prepare("UPDATE users SET reset_token = ?, reset_expires = ? WHERE email = ?");
$stmt->execute([$token, $expires, $email]);

// Send the password reset link to the user's email
$resetLink = "http://example.com/reset-password.php?token=$token";
$to = $email;
$subject = 'Password Reset Request';
$message = "
Hello,

Please click the following link to reset your password:

$resetLink

If you did not request a password reset, please ignore this email.

Best regards,
Your Support Team
";

$headers = "From: noreply@example.com\r
";
$headers .= "Reply-To: noreply@example.com\r
";
$headers .= "Content-Type: text/plain; charset=UTF-8\r
";

if (mail($to, $subject, $message, $headers)) {
    echo 'A password reset link has been sent to your email address.';
} else {
    die('Failed to send password reset email');
}

$conn = null;
?>


<?php
session_start();
require_once 'db_connection.php';

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email_username = $_POST['email_username'];
    
    // Prepare statement to prevent SQL injection
    $stmt = $conn->prepare("SELECT id, email FROM users WHERE email=? OR username=?");
    $stmt->bind_param("ss", $email_username, $email_username);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows > 0) {
        // Generate a unique token
        $token = bin2hex(random_bytes(32));
        $expires = date('Y-m-d H:i:s', time() + 3600); // Expiry after 1 hour
        
        // Update the user's reset token and expiry
        $updateStmt = $conn->prepare("UPDATE users SET reset_token=?, resetExpires=? WHERE email=?");
        $updateStmt->bind_param("sss", $token, $expires, $email_username);
        $updateStmt->execute();
        
        // Send reset link via email
        $to = $email_username;
        $subject = "Password Reset Request";
        $message = "Please click the following link to reset your password: http://example.com/reset_password.php?token=$token";
        $headers = "From: example@example.com" . "\r
";
        
        mail($to, $subject, $message, $headers);
        
        echo "An email with instructions has been sent to you!";
    } else {
        echo "Email/Username not found!";
    }
}
?>


<?php
session_start();
require_once 'db_connection.php';

if ($_SERVER["REQUEST_METHOD"] == "GET") {
    $token = $_GET['token'];
    
    // Check if token is valid and not expired
    $stmt = $conn->prepare("SELECT id, username FROM users WHERE reset_token=? AND resetExpires > NOW()");
    $stmt->bind_param("s", $token);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows == 0) {
        die("Invalid or expired token!");
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <?php
    if (isset($_POST['new_password'])) {
        $token = $_GET['token'];
        $newPassword = $_POST['new_password'];
        
        // Update the password with a new token
        $stmt = $conn->prepare("UPDATE users SET password=?, reset_token=NULL WHERE reset_token=?");
        $hashedPass = password_hash($newPassword, PASSWORD_DEFAULT);
        $stmt->bind_param("ss", $hashedPass, $token);
        $stmt->execute();
        
        echo "Your password has been updated!";
    } else {
        // Display the form if token is valid
        ?>
        <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="POST">
            <input type="password" name="new_password" placeholder="Enter new password" required>
            <button type="submit">Reset Password</button>
        </form>
        <?php
    }
    ?>
</body>
</html>


<?php
// Database connection
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'mydatabase';

$conn = new mysqli($host, $username, $password, $dbname);
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Session start
session_start();

// Function to send password reset email
function sendPasswordResetEmail($email, $token) {
    $to = $email;
    $subject = 'Password Reset Request';
    
    $message = '<html>';
    $message .= '<body>';
    $message .= '<h2>Password Reset</h2>';
    $message .= '<p>Please click the link below to reset your password:</p>';
    $message .= '<a href="http://localhost/reset-password.php?token=' . $token . '">Reset Password</a>';
    $message .= '<br><br>';
    $message .= '<p>If you did not request a password reset, please ignore this email.</p>';
    $message .= '</body>';
    $message .= '</html>';
    
    $headers = 'MIME-Version: 1.0' . "\r
";
    $headers .= 'Content-type: text/html; charset=UTF-8' . "\r
";
    $headers .= 'From: noreply@example.com' . "\r
";
    
    mail($to, $subject, $message, $headers);
}

// Function to generate random token
function generateToken() {
    return bin2hex(random_bytes(16));
}

// Forgot Password Form Handler
if (isset($_POST['forgot'])) {
    $email = $_POST['email'];
    
    // Check if email exists in database
    $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
    $stmt->bind_param('s', $email);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows > 0) {
        // Generate a new token
        $token = generateToken();
        
        // Store token in database with expiration time (e.g., 1 hour)
        $expiration_time = date('Y-m-d H:i:s', strtotime('+1 hour'));
        
        $stmt = $conn->prepare("INSERT INTO password_reset_tokens (user_id, token, expires_at) VALUES (?, ?, ?)");
        $stmt->bind_param('iss', $result->fetch_assoc()['id'], $token, $expiration_time);
        $stmt->execute();
        
        // Send reset email
        sendPasswordResetEmail($email, $token);
        
        $_SESSION['message'] = 'We have sent you a password reset link. Please check your email.';
        header('Location: forgot-password.php');
        exit();
    } else {
        $_SESSION['error'] = 'No account found with this email address.';
        header('Location: forgot-password.php');
        exit();
    }
}

// Reset Password Form Handler
if (isset($_POST['reset'])) {
    $token = $_GET['token'];
    $new_password = $_POST['new_password'];
    
    // Check if token exists and is valid
    $stmt = $conn->prepare("SELECT user_id FROM password_reset_tokens WHERE token = ? AND expires_at > NOW()");
    $stmt->bind_param('s', $token);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows > 0) {
        $user_id = $result->fetch_assoc()['user_id'];
        
        // Update user password
        $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);
        
        $stmt = $conn->prepare("UPDATE users SET password = ? WHERE id = ?");
        $stmt->bind_param('si', $hashed_password, $user_id);
        $stmt->execute();
        
        // Delete the token after use
        $stmt = $conn->prepare("DELETE FROM password_reset_tokens WHERE token = ?");
        $stmt->bind_param('s', $token);
        $stmt->execute();
        
        $_SESSION['message'] = 'Your password has been reset successfully!';
        header('Location: login.php');
        exit();
    } else {
        $_SESSION['error'] = 'Invalid or expired token. Please try again.';
        header('Location: forgot-password.php');
        exit();
    }
}

// Close database connection
$conn->close();
?>


<?php session_start(); ?>

<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <?php if (isset($_SESSION['message'])): ?>
        <p style="color: green;"><?php echo $_SESSION['message']; ?></p>
        <?php unset($_SESSION['message']); ?>
    <?php endif; ?>

    <?php if (isset($_SESSION['error'])): ?>
        <p style="color: red;"><?php echo $_SESSION['error']; ?></p>
        <?php unset($_SESSION['error']); ?>
    <?php endif; ?>

    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <label>Email:</label><br>
        <input type="email" name="email" required><br><br>
        <input type="submit" name="forgot" value="Reset Password">
    </form>

    <a href="login.php">Back to Login</a>
</body>
</html>


<?php session_start(); ?>

<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <?php if (isset($_SESSION['message'])): ?>
        <p style="color: green;"><?php echo $_SESSION['message']; ?></p>
        <?php unset($_SESSION['message']); ?>
    <?php endif; ?>

    <?php if (isset($_SESSION['error'])): ?>
        <p style="color: red;"><?php echo $__SESSION['error']; ?></p>
        <?php unset($_SESSION['error']); ?>
    <?php endif; ?>

    <form action="<?php echo $_SERVER['PHP_SELF'] . '?token=' . $_GET['token']; ?>" method="post">
        <label>New Password:</label><br>
        <input type="password" name="new_password" required><br><br>
        <input type="submit" name="reset" value="Reset Password">
    </form>

    <a href="forgot-password.php">Request a New Link</a>
</body>
</html>


<?php
session_start();
include('db_connect.php'); // Include your database connection

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $email = mysqli_real_escape_string($conn, $_POST['email']);
    
    // Check if email exists in the database
    $sql = "SELECT * FROM users WHERE email = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("s", $email);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows === 0) {
        $_SESSION['error'] = "Email does not exist in our records!";
        header("Location: forgot_password_form.php");
        exit();
    }
    
    // Generate a unique token
    $token = bin2hex(random_bytes(16));
    $expires = time() + (30 * 60); // Token expires after 30 minutes
    
    // Update the database with the new token and expiry time
    $updateSql = "UPDATE users SET password_reset_token = ?, password_reset_expiry = ? WHERE email = ?";
    $stmt = $conn->prepare($updateSql);
    $stmt->bind_param("sis", $token, $expires, $email);
    $stmt->execute();
    
    // Send the reset link to the user's email
    $to = $email;
    $subject = "Password Reset Request";
    $message = "
        <html>
        <body>
            <h2>Password Reset</h2>
            <p>We received a request to reset your password. Click the following link to reset it:</p>
            <a href='http://yourdomain.com/reset_password.php?token=$token'>Reset Password</a><br><br>
            <small>If you did not make this request, you can safely ignore this email.</small>
        </body>
        </html>
    ";
    
    $headers = "MIME-Version: 1.0" . "\r
";
    $headers .= "Content-type:text/html;charset=UTF-8" . "\r
";
    $headers .= "From: Your Name <your_email@domain.com>" . "\r
";
    
    mail($to, $subject, $message, $headers);
    
    // Redirect to a confirmation page
    header("Location: reset_password_sent.php");
    exit();
}
?>


<?php
session_start();
include('db_connect.php');

if (isset($_GET['token'])) {
    $token = mysqli_real_escape_string($conn, $_GET['token']);
    
    // Check if token exists and is not expired
    $sql = "SELECT * FROM users WHERE password_reset_token = ? AND password_reset_expiry > ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("si", $token, time());
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows === 0) {
        $_SESSION['error'] = "Invalid or expired reset link. Please request a new password reset.";
        header("Location: forgot_password_form.php");
        exit();
    }
    
    // If the token is valid, allow the user to reset their password
} else {
    // Invalid access
    $_SESSION['error'] = "Invalid access. Please use the provided link to reset your password.";
    header("Location: forgot_password_form.php");
    exit();
}
?>
<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <?php if (isset($_SESSION['error'])) { ?>
        <p style="color:red;"><?php echo $_SESSION['error']; ?></p>
        <?php unset($_SESSION['error']); } ?>
    
    <h2>Reset Your Password</h2>
    <form action="reset_password.php?token=<?php echo $token; ?>" method="post">
        New Password: <input type="password" name="new_password" required><br>
        Confirm Password: <input type="password" name="confirm_password" required><br>
        <button type="submit">Reset Password</button>
    </form>
</body>
</html>


<?php
session_start();
include('db_connect.php');

if (isset($_GET['token'])) {
    $token = mysqli_real_escape_string($conn, $_GET['token']);
    
    // Check if token exists and is not expired
    $sql = "SELECT * FROM users WHERE password_reset_token = ? AND password_reset_expiry > ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("si", $token, time());
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows === 0) {
        $_SESSION['error'] = "Invalid or expired reset link. Please request a new password reset.";
        header("Location: forgot_password_form.php");
        exit();
    }
    
    // If the token is valid, allow the user to reset their password
} else {
    // Invalid access
    $_SESSION['error'] = "Invalid access. Please use the provided link to reset your password.";
    header("Location: forgot_password_form.php");
    exit();
}

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $newPassword = mysqli_real_escape_string($conn, $_POST['new_password']);
    $confirmPassword = mysqli_real_escape_string($conn, $_POST['confirm_password']);
    
    if ($newPassword !== $confirmPassword) {
        $_SESSION['error'] = "Passwords do not match!";
        header("Location: reset_password.php?token=$token");
        exit();
    }
    
    // Update the password
    $hashedPassword = password_hash($newPassword, PASSWORD_DEFAULT);
    
    $updateSql = "UPDATE users SET password = ?, password_reset_token = NULL WHERE password_reset_token = ?";
    $stmt = $conn->prepare($updateSql);
    $stmt->bind_param("ss", $hashedPassword, $token);
    $stmt->execute();
    
    $_SESSION['success'] = "Your password has been reset successfully!";
    header("Location: login.php");
    exit();
}
?>


<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <h2>Forgot Password</h2>
    
    <?php
        // Show any error/success messages
        if (isset($_GET['error'])) {
            echo "<p style='color:red'>Error: " . $_GET['error'] . "</p>";
        }
        if (isset($_GET['success'])) {
            echo "<p style='color:green'>Success: " . $_GET['success'] . "</p>";
        }
    ?>
    
    <form action="forgot_password_process.php" method="post">
        <label>Email:</label><br>
        <input type="email" name="email" required><br><br>
        
        <button type="submit">Reset Password</button>
    </form>
</body>
</html>


<?php
// Database connection
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "myDB";

$conn = new mysqli($servername, $username, $password, $dbname);
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

$email = $_POST['email'];
$verification_code = bin2hex(random_bytes(16));

// Check if email exists in the database
$sql = "SELECT id FROM users WHERE email=?";
$stmt = $conn->prepare($sql);
$stmt->bind_param("s", $email);
$stmt->execute();
$result = $stmt->get_result();

if ($result->num_rows > 0) {
    // Insert verification code into the database
    $sql = "INSERT INTO password_reset (user_id, verification_code, created_at)
            VALUES (?, ?, CURRENT_TIMESTAMP)";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("is", $result->fetch_assoc()['id'], $verification_code);
    $stmt->execute();
    
    // Send email with reset link
    $to = $email;
    $subject = "Password Reset Request";
    $message = "Please click the following link to reset your password:

".
               "http://example.com/reset_password.php?code=".$verification_code."

".
               "This link will expire in 30 minutes.";
    
    mail($to, $subject, $message);
    
    header("Location: forgot_password.php?success=Reset+link+sent+to+your+email");
} else {
    header("Location: forgot_password.php?error=Email+not+found");
}

$stmt->close();
$conn->close();
?>


<?php
// Verify the code exists and hasn't expired
if (!isset($_GET['code'])) {
    die("Invalid request");
}

$code = $_GET['code'];
$current_time = time();

// Database connection
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "myDB";

$conn = new mysqli($servername, $username, $password, $dbname);
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Check if verification code exists and hasn't expired
$sql = "SELECT user_id FROM password_reset 
        WHERE verification_code=? AND created_at >= CURRENT_TIMESTAMP - INTERVAL 30 MINUTE";
$stmt = $conn->prepare($sql);
$stmt->bind_param("s", $code);
$stmt->execute();
$result = $stmt->get_result();

if ($result->num_rows == 1) {
    // Store user_id in session for later use
    session_start();
    $_SESSION['user_id_for_reset'] = $result->fetch_assoc()['user_id'];
    
    // Display reset password form
    ?>
    <!DOCTYPE html>
    <html>
    <head>
        <title>Reset Password</title>
    </head>
    <body>
        <h2>Reset Password</h2>
        
        <?php
            if (isset($_GET['error'])) {
                echo "<p style='color:red'>Error: " . $_GET['error'] . "</p>";
            }
        ?>
        
        <form action="reset_password_process.php" method="post">
            <label>New Password:</label><br>
            <input type="password" name="new_password" required><br><br>
            
            <label>Confirm New Password:</label><br>
            <input type="password" name="confirm_new_password" required><br><br>
            
            <button type="submit">Reset Password</button>
        </form>
    </body>
    </html>
    <?php
} else {
    die("Invalid or expired reset link");
}

$stmt->close();
$conn->close();
?>


<?php
session_start();

if (!isset($_SESSION['user_id_for_reset'])) {
    die("Invalid request");
}

$user_id = $_SESSION['user_id_for_reset'];
unset($_SESSION['user_id_for_reset']);

$new_password = $_POST['new_password'];
$confirm_new_password = $_POST['confirm_new_password'];

if ($new_password != $confirm_new_password) {
    header("Location: reset_password.php?code=".$_GET['code']."&error=Passwords+do+not+match");
    exit();
}

// Minimum password length check
if (strlen($new_password) < 8) {
    header("Location: reset_password.php?code=".$_GET['code']."&error=Password+must+be+at+least+8+characters");
    exit();
}

// Database connection
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "myDB";

$conn = new mysqli($servername, $username, $password, $dbname);
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Update the user's password
$sql = "UPDATE users SET password=? WHERE id=?";
$password_hash = password_hash($new_password, PASSWORD_DEFAULT);

$stmt = $conn->prepare($sql);
$stmt->bind_param("si", $password_hash, $user_id);
$stmt->execute();

// Delete the verification code
$sql = "DELETE FROM password_reset WHERE user_id=?";
$stmt = $conn->prepare($sql);
$stmt->bind_param("i", $user_id);
$stmt->execute();

header("Location: forgot_password.php?success=Password+reset+successful");
exit();
?>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'mydatabase';
$username = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
} catch(PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get email from form
    $email = $_POST['email'];
    
    // Prepare SQL query to check if email exists
    $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
    $stmt->execute([$email]);
    $user = $stmt->fetch();
    
    if ($user) {
        // Generate token and expiration time
        $token = bin2hex(random_bytes(16));
        $expires = date('Y-m-d H:i:s', strtotime('+1 hour'));
        
        // Update tokens table with new token and expiration
        $insertTokenStmt = $conn->prepare("INSERT INTO password_reset_tokens (user_id, token, expires) VALUES (?, ?, ?)");
        $insertTokenStmt->execute([$user['id'], $token, $expires]);
        
        // Send reset email
        $to = $email;
        $subject = "Password Reset Request";
        $message = "
            <html>
                <body>
                    <p>You requested a password reset. Click the link below to reset your password:</p>
                    <a href='http://example.com/reset_password.php?token=$token'>Reset Password</a>
                    <br><br>
                    This link will expire in 1 hour.
                </body>
            </html>
        ";
        $headers = "MIME-Version: 1.0" . "\r
";
        $headers .= "Content-type:text/html;charset=UTF-8" . "\r
";
        $headers .= "From: admin@example.com" . "\r
";
        
        if (mail($to, $subject, $message, $headers)) {
            echo "A password reset email has been sent to your address.";
        } else {
            die("Failed to send email.");
        }
    } else {
        die("Email not found in our records.");
    }
}
?>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'mydatabase';
$username = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
} catch(PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

// Check if token is provided
if (!isset($_GET['token'])) {
    die("No token provided.");
}

$token = $_GET['token'];

// Validate token
$stmt = $conn->prepare("SELECT user_id, expires FROM password_reset_tokens WHERE token = ?");
$stmt->execute([$token]);
$reset = $stmt->fetch();

if (!$reset) {
    die("Invalid or expired token.");
}

// Check if token has expired
if (strtotime($reset['expires']) < time()) {
    die("Token has expired. Request a new one.");
}
?>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Reset Password</title>
</head>
<body>
    <h2>Reset Password</h2>
    <form action="reset_password.php?token=<?php echo $token; ?>" method="post">
        <label for="password">New Password:</label><br>
        <input type="password" id="password" name="password" required><br><br>
        <button type="submit">Set New Password</button>
    </form>
</body>
</html>

<?php
// Process password reset if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $newPassword = $_POST['password'];
    $hashedPassword = password_hash($newPassword, PASSWORD_DEFAULT);
    
    // Update user's password
    $updateStmt = $conn->prepare("UPDATE users SET password = ? WHERE id = ?");
    $updateStmt->execute([$hashedPassword, $reset['user_id']]);
    
    // Delete the used token
    $deleteTokenStmt = $conn->prepare("DELETE FROM password_reset_tokens WHERE token = ?");
    $deleteTokenStmt->execute([$token]);
    
    echo "Password has been reset successfully!";
}
?>


<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <h2>Forgot Password</h2>
    
    <?php
    if (isset($_GET['error'])) {
        echo "<p style='color:red;'>".$_GET['error']."</p>";
    }
    ?>

    <form action="send_reset_email.php" method="post">
        <label>Email:</label><br>
        <input type="email" name="email" required><br><br>
        
        <input type="submit" value="Reset Password">
    </form>
</body>
</html>


<?php
// Database configuration
$host = "localhost";
$username = "root";
$password = "";
$db_name = "your_database";

// Connect to database
$conn = mysqli_connect($host, $username, $password, $db_name);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

$email = $_POST['email'];

// Check if email exists in database
$sql = "SELECT id FROM users WHERE email = ?";
$stmt = $conn->prepare($sql);
$stmt->bind_param("s", $email);
$stmt->execute();
$result = $stmt->get_result();

if ($result->num_rows === 0) {
    // Email not found
    header("Location: forgot_password.php?error=Email+not+found");
    exit();
}

// Generate reset token and expiration time
$reset_token = bin2hex(random_bytes(32));
$expires = date('Y-m-d H:i:s', strtotime('+1 hour'));

$sql = "UPDATE users SET reset_token = ?, reset_expires = ? WHERE email = ?";
$stmt = $conn->prepare($sql);
$stmt->bind_param("ss", $reset_token, $expires, $email);

if (!$stmt->execute()) {
    // Error updating token
    header("Location: forgot_password.php?error=An+error+occurred");
    exit();
}

// Send reset email
$to = $email;
$subject = "Password Reset Request";
$message = "
Hello,

Please click the following link to reset your password:
http://yourwebsite.com/reset_password.php?token=$reset_token

This link will expire in 1 hour.

Regards,
Your Website Team
";

$headers = "From: noreply@yourwebsite.com\r
";
$headers .= "Reply-To: noreply@yourwebsite.com\r
";
$headers .= "X-Mailer: PHP/" . phpversion();

mail($to, $subject, $message, $headers);

echo "A password reset link has been sent to your email address.";

// Close database connection
$stmt->close();
$conn->close();
?>


<?php
if (!isset($_GET['token'])) {
    die("Invalid request");
}

$token = $_GET['token'];

// Database configuration
$host = "localhost";
$username = "root";
$password = "";
$db_name = "your_database";

$conn = mysqli_connect($host, $username, $password, $db_name);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Check if token is valid and not expired
$sql = "SELECT id FROM users WHERE reset_token = ? AND reset_expires > NOW()";
$stmt = $conn->prepare($sql);
$stmt->bind_param("s", $token);
$stmt->execute();
$result = $stmt->get_result();

if ($result->num_rows === 0) {
    die("Invalid or expired token");
}

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Validate and set new password
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];

    if ($password != $confirm_password) {
        echo "<p style='color:red;'>Passwords do not match</p>";
    } else if (strlen($password) < 6) {
        echo "<p style='color:red;'>Password must be at least 6 characters long</p>";
    } else {
        // Hash the password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);
        
        // Update the database
        $sql = "UPDATE users SET password = ?, reset_token = NULL, reset_expires = NULL WHERE reset_token = ?";
        $stmt = $conn->prepare($sql);
        $stmt->bind_param("ss", $hashed_password, $token);
        
        if ($stmt->execute()) {
            // Password updated successfully
            header("Location: login.php");
            exit();
        } else {
            echo "<p style='color:red;'>An error occurred while updating your password</p>";
        }
    }
}

?>

<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <h2>Reset Password</h2>
    
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <label>New Password:</label><br>
        <input type="password" name="password" required><br><br>
        
        <label>Confirm New Password:</label><br>
        <input type="password" name="confirm_password" required><br><br>
        
        <input type="submit" value="Reset Password">
    </form>
</body>
</html>

// Close database connection
$stmt->close();
$conn->close();
?>


<?php
// Database connection file
require_once 'db_connection.php';

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $email = mysqli_real_escape_string($conn, $_POST['email']);
    
    // Check if email exists in the database
    $sql = "SELECT * FROM users WHERE email = '$email'";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) > 0) {
        // Generate a random token
        $token = md5(uniqid(rand(), true));
        
        // Insert the token into the database with an expiration time
        $exp_time = date('Y-m-d H:i:s', strtotime('+1 hour'));
        $sql_token = "INSERT INTO password_reset (email, token, expires) VALUES ('$email', '$token', '$exp_time')";
        mysqli_query($conn, $sql_token);
        
        // Send reset password email
        $to = $email;
        $subject = 'Reset Your Password';
        $message = "
            <html>
                <head></head>
                <body>
                    <h2>Password Reset Request</h2>
                    <p>Please click the following link to reset your password:</p>
                    <a href='http://example.com/reset_password.php?token=$token'>Reset Password</a><br>
                    <p>If you did not request this password reset, please ignore this email.</p>
                    <p>This link will expire in 1 hour.</p>
                </body>
            </html>
        ";
        $headers = 'MIME-Version: 1.0' . "\r
";
        $headers .= 'Content-type: text/html; charset=UTF-8' . "\r
";
        
        mail($to, $subject, $message, $headers);
        
        echo "An email has been sent to you with instructions to reset your password.";
    } else {
        echo "Email not found in our records.";
    }
}

?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Forgot Password</title>
</head>
<body>
    <h2>Forgot Password</h2>
    <form action="<?php $_SERVER['PHP_SELF']; ?>" method="post">
        <input type="email" name="email" placeholder="Enter your email" required><br><br>
        <button type="submit">Reset Password</button>
    </form>
</body>
</html>


<?php
// Database connection file
require_once 'db_connection.php';

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $token = mysqli_real_escape_string($conn, $_GET['token']);
    $new_password = mysqli_real_escape_string($conn, $_POST['password']);
    $confirm_password = mysqli_real_escape_string($conn, $_POST['confirm_password']);

    // Validate password match
    if ($new_password != $confirm_password) {
        die("Passwords do not match.");
    }

    // Validate token exists and is not expired
    $sql_token = "SELECT * FROM password_reset WHERE token = '$token'";
    $result = mysqli_query($conn, $sql_token);
    
    if (mysqli_num_rows($result) > 0) {
        $row = mysqli_fetch_assoc($result);
        
        // Check if token is expired
        if ($row['expires'] < date('Y-m-d H:i:s')) {
            die("Token has expired. Please request a new password reset.");
        }

        // Update the user's password
        $sql_update = "UPDATE users SET password = '$new_password' WHERE email = '$row[email]'";
        mysqli_query($conn, $sql_update);
        
        // Delete the token after use
        $sql_delete = "DELETE FROM password_reset WHERE token = '$token'";
        mysqli_query($conn, $sql_delete);

        echo "Password updated successfully!";
    } else {
        die("Invalid or expired token.");
    }
}

// Show reset form if accessed via GET with a valid token
if (isset($_GET['token'])) {
    $token = mysqli_real_escape_string($conn, $_GET['token']);
    
    // Check if token exists and is not expired
    $sql_token = "SELECT * FROM password_reset WHERE token = '$token'";
    $result = mysqli_query($conn, $sql_token);
    
    if (mysqli_num_rows($result) > 0) {
        $row = mysqli_fetch_assoc($result);
        
        // Check if token is expired
        if ($row['expires'] < date('Y-m-d H:i:s')) {
            die("Token has expired. Please request a new password reset.");
        }

        // Show reset form
?>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Reset Password</title>
</head>
<body>
    <h2>Reset Your Password</h2>
    <form action="<?php $_SERVER['PHP_SELF']; ?>?token=<?php echo $token; ?>" method="post">
        <input type="password" name="password" placeholder="Enter new password" required><br><br>
        <input type="password" name="confirm_password" placeholder="Confirm new password" required><br><br>
        <button type="submit">Reset Password</button>
    </form>
</body>
</html>
<?php
    } else {
        die("Invalid or expired token.");
    }
}
?>


<?php
session_start();

// Database configuration
$host = "localhost";
$username = "root";
$password = "";
$dbname = "mydatabase";

// Connect to database
$conn = mysqli_connect($host, $username, $password, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Check if form is submitted
if (isset($_POST['reset'])) {
    $email = $_POST['email'];
    
    // Check if email is empty
    if (empty($email)) {
        echo "<div class='error'>Please enter your email address!</div>";
    } else {
        // Select user from database
        $sql = "SELECT * FROM users WHERE email='$email'";
        $result = mysqli_query($conn, $sql);
        
        if (!$result) {
            die("Query failed: " . mysqli_error($conn));
        }
        
        if (mysqli_num_rows($result) == 0) {
            echo "<div class='error'>Email not found in our database!</div>";
        } else {
            // Generate a random token
            $token = mt_rand(10000, 99999);
            
            // Update the token and expiration time in the database
            $expiração = date('Y-m-d H:i:s', strtotime('+1 hour'));
            $sql = "UPDATE users SET reset_token='$token', reset_expiration='$expiração' WHERE email='$email'";
            
            if (mysqli_query($conn, $sql)) {
                // Send the password reset link to user's email
                $to = $email;
                $subject = "Password Reset Request";
                $message = "Hello,

You requested a password reset. Click the following link to reset your password:

http://yourwebsite.com/reset-password.php?token=$token&email=$email

If you didn't request this, please ignore this email.

Best regards,
The Team";
                $headers = "From: no-reply@yourwebsite.com\r
";
                $headers .= "Content-type: text/plain; charset=iso-8859-1\r
";
                
                if (mail($to, $subject, $message, $headers)) {
                    echo "<div class='success'>We've sent a password reset link to your email. Please check your inbox!</div>";
                } else {
                    echo "<div class='error'>Error sending email. Please try again!</div>";
                }
            } else {
                die("Database error: " . mysqli_error($conn));
            }
        }
    }
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Forgot Password</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 20px;
            background-color: #f4f4f4;
        }
        
        .container {
            max-width: 500px;
            margin: 0 auto;
            background-color: white;
            padding: 30px;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }
        
        .form-group {
            margin-bottom: 20px;
        }
        
        input[type="email"] {
            width: 100%;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-sizing: border-box;
        }
        
        button {
            background-color: #4CAF50;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            width: 100%;
        }
        
        button:hover {
            background-color: #45a049;
        }
        
        .error, .success {
            padding: 10px;
            margin-top: 20px;
            color: white;
            border-radius: 4px;
        }
        
        .error {
            background-color: #ff4444;
        }
        
        .success {
            background-color: #4CAF50;
        }
    </style>
</head>
<body>
    <div class="container">
        <h2>Forgot Password</h2>
        <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
            <div class="form-group">
                <input type="email" placeholder="Enter your email..." name="email">
            </div>
            <?php if (isset($error)) { ?>
                <div class="error"><?php echo $error; ?></div>
            <?php } elseif (isset($success)) { ?>
                <div class="success"><?php echo $success; ?></div>
            <?php } ?>
            <button type="submit" name="reset">Reset Password</button>
        </form>
    </div>
</body>
</html>


<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <?php
        if ($_SERVER["REQUEST_METHOD"] == "POST") {
            $email = $_POST['email'];
            
            // Sanitize email input
            $email = filter_var($email, FILTER_SANITIZE_EMAIL);
            
            // Validate email format
            if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
                die("Invalid email format");
            }
            
            // Database connection
            include 'db_connection.php';
            
            // Check if email exists in database
            $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
            $stmt->bind_param('s', $email);
            $stmt->execute();
            $result = $stmt->get_result();
            
            if ($result->num_rows === 0) {
                die("No account found with this email address");
            }
            
            // Generate a unique token
            $token = bin2hex(random_bytes(16));
            $expires = date('Y-m-d H:i:s', time() + 3600); // Token expires in 1 hour
            
            // Store the token in database
            $stmt = $conn->prepare("INSERT INTO password_resets (email, token, expires) VALUES (?, ?, ?)");
            $stmt->bind_param('sss', $email, $token, $expires);
            $stmt->execute();
            
            // Send reset email
            $resetLink = "http://yourdomain.com/reset_password.php?token=" . $token;
            $to = $email;
            $subject = "Password Reset Request";
            $message = "Please click the following link to reset your password: 

" . $resetLink . "

If you did not request a password reset, please ignore this email.";
            
            // Set headers
            $headers = "From: noreply@yourdomain.com\r
";
            mail($to, $subject, $message, $headers);
            
            echo "Password reset link has been sent to your email address!";
        }
    ?>
    
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        Email: <input type="email" name="email" required><br>
        <input type="submit" value="Reset Password">
    </form>
</body>
</html>


<?php
session_start();

if (!isset($_GET['token'])) {
    die("Invalid request");
}

$token = $_GET['token'];

// Database connection
include 'db_connection.php';

// Check if token exists and is valid
$stmt = $conn->prepare("SELECT email, expires FROM password_resets WHERE token = ?");
$stmt->bind_param('s', $token);
$stmt->execute();
$result = $stmt->get_result();

if ($result->num_rows === 0) {
    die("Invalid or expired reset link");
}

$row = $result->fetch_assoc();
$email = $row['email'];
$expires = $row['expires'];

// Check if token has expired
if (strtotime($expires) < time()) {
    die("Reset link has expired. Please request a new one.");
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <?php
        if ($_SERVER["REQUEST_METHOD"] == "POST") {
            $newPassword = $_POST['password'];
            $confirmPassword = $_POST['confirm_password'];
            
            // Check if passwords match
            if ($newPassword != $confirmPassword) {
                die("Passwords do not match");
            }
            
            // Hash the new password
            $hashedPassword = password_hash($newPassword, PASSWORD_DEFAULT);
            
            // Update the user's password
            $stmt = $conn->prepare("UPDATE users SET password = ? WHERE email = ?");
            $stmt->bind_param('ss', $hashedPassword, $email);
            $stmt->execute();
            
            // Delete the token from password_resets table
            $stmt = $conn->prepare("DELETE FROM password_resets WHERE token = ?");
            $stmt->bind_param('s', $token);
            $stmt->execute();
            
            echo "Password reset successful! <a href='login.php'>Click here to login</a>";
        }
    ?>
    
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>?token=<?php echo $token; ?>" method="post">
        New Password: <input type="password" name="password" required><br>
        Confirm Password: <input type="password" name="confirm_password" required><br>
        <input type="submit" value="Reset Password">
    </form>
</body>
</html>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'mydatabase';
$username = 'root';
$password = '';

try {
    // Create database connection
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

// Generate a random token
function generateToken() {
    return bin2hex(random_bytes(16));
}

// Email sending function
function sendEmail($to, $token, $email) {
    $from = 'no-reply@example.com';
    $subject = 'Password Reset Request';
    $message = "Dear User,

Please click the following link to reset your password:
http://example.com/reset-password.php?token=$token

This link will expire in 1 hour.

Best regards,
Your Team";
    $headers = "From: $from\r
Reply-To: $from\r
X-Mailer: PHP/" . phpversion();

    if (mail($to, $subject, $message, $headers)) {
        return true;
    } else {
        return false;
    }
}

// Reset password function
function resetPassword($token, $new_password) {
    global $conn;

    // Check if token exists and is valid
    $stmt = $conn->prepare("SELECT user_id FROM password_resets WHERE token = :token AND expires_at > NOW()");
    $stmt->bindParam(':token', $token);
    $stmt->execute();
    
    $result = $stmt->fetch(PDO::FETCH_ASSOC);

    if ($result) {
        // Update user's password
        $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);
        
        $stmt = $conn->prepare("UPDATE users SET password = :password WHERE id = :user_id");
        $stmt->bindParam(':password', $hashed_password);
        $stmt->bindParam(':user_id', $result['user_id']);
        $stmt->execute();

        // Delete the token
        $stmt = $conn->prepare("DELETE FROM password_resets WHERE token = :token");
        $stmt->bindParam(':token', $token);
        $stmt->execute();

        return true;
    } else {
        return false;
    }
}

// Handle form submission
if ($_SERVER['REQUEST_METHOD'] == 'POST' && isset($_POST['email'])) {
    $email = $_POST['email'];
    
    // Check if email exists in database
    $stmt = $conn->prepare("SELECT id FROM users WHERE email = :email");
    $stmt->bindParam(':email', $email);
    $stmt->execute();
    
    if ($stmt->rowCount() > 0) {
        // Generate a new token and store it in the database
        $token = generateToken();
        
        $stmt = $conn->prepare("INSERT INTO password_resets (user_id, token, expires_at)
                              VALUES (:user_id, :token, NOW() + INTERVAL 1 HOUR)");
        $stmt->bindParam(':user_id', $result['id']);
        $stmt->bindParam(':token', $token);
        $stmt->execute();
        
        // Send email with reset link
        if (sendEmail($email, $token)) {
            echo "A password reset link has been sent to your email.";
        } else {
            echo "Error sending email. Please try again later.";
        }
    } else {
        echo "No account found with this email address.";
    }
}

// Display the forgot password form
?>
<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <h2>Forgot Password</h2>
    <form method="post">
        <input type="email" name="email" placeholder="Enter your email" required><br><br>
        <input type="submit" value="Send Reset Link">
    </form>
</body>
</html>


<?php
session_start();
include('config.php');

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = mysqli_real_escape_string($conn, $_POST['email']);
    
    // Validate email
    if (empty($email) || !preg_match("/^[^ ]+@[^ ]+\.[a-zA-Z]+$/', $email)) {
        $_SESSION['status'] = "Invalid email format!";
        header("Location: forgot_password.php");
        exit();
    }

    // Check if email exists in the database
    $sql = "SELECT id FROM users WHERE email = '$email'";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) == 0) {
        $_SESSION['status'] = "Email not registered!";
        header("Location: forgot_password.php");
        exit();
    }

    // Generate reset token
    $token = md5(uniqid(rand(), true));
    $expires = date('Y-m-d H:i:s', time() + 3600); // Expire in 1 hour

    // Store token and expiration in the password_reset table
    $sqlReset = "INSERT INTO password_reset (email, token, expires) VALUES ('$email', '$token', '$expires')";
    
    if (!mysqli_query($conn, $sqlReset)) {
        $_SESSION['status'] = "Error: Please try again later!";
        header("Location: forgot_password.php");
        exit();
    }

    // Send reset email
    $to = $email;
    $subject = "Password Reset Request";
    $message = "
        <html>
            <head><title>Password Reset</title></head>
            <body>
                <h2>Reset Your Password</h2>
                Click the link below to reset your password:<br>
                <a href='http://your_domain/reset_password.php?token=$token'>Reset Password</a><br>
                This link will expire in 1 hour.
            </body>
        </html>
    ";
    $headers = "MIME-Version: 1.0" . "\r
";
    $headers .= "Content-type:text/html;charset=UTF-8" . "\r
";
    $headers .= "From: <your_email@example.com>" . "\r
";

    if (mail($to, $subject, $message, $headers)) {
        $_SESSION['status'] = "A password reset link has been sent to your email.";
        header("Location: login.php");
    } else {
        $_SESSION['status'] = "Error sending email. Please try again later!";
        header("Location: forgot_password.php");
    }
    
} else {
    // Display the form
    include('forgot_password_form.html');
}
?>

<!-- Include this in forgot_password_form.html -->
<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <?php if (isset($_SESSION['status'])) { echo $_SESSION['status']; unset($_SESSION['status']); } ?>
    <form action="forgot_password.php" method="POST">
        Email: <input type="email" name="email" required><br>
        <input type="submit" value="Reset Password">
    </form>
</body>
</html>


<?php
session_start();
include("config.php"); // Include database configuration file

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = mysqli_real_escape_string($conn, $_POST['email']);
    
    if (empty($email)) {
        $_SESSION['error'] = "Email is required!";
        header("Location: forgot-password.php");
        exit();
    }

    // Check if email exists in the database
    $check_email_query = "SELECT id FROM users WHERE email = '$email'";
    $result = mysqli_query($conn, $check_email_query);
    
    if (mysqli_num_rows($result) == 0) {
        $_SESSION['error'] = "No account found with this email!";
        header("Location: forgot-password.php");
        exit();
    }

    // Generate reset token
    $reset_token = bin2hex(random_bytes(16));
    
    // Update the database with the new token and expiry time (current time + 1 hour)
    $update_query = "UPDATE users SET password_reset_token = '$reset_token', password_reset_expiry = NOW() + INTERVAL 1 HOUR WHERE email = '$email'";
    mysqli_query($conn, $update_query);

    // Send reset email
    $to = $email;
    $subject = "Password Reset Request";
    $message = "
        <html>
            <body>
                <p>Dear User,</p>
                <p>Please click the following link to reset your password:</p>
                <a href='http://example.com/reset-password.php?token=$reset_token'>Reset Password</a>
                <br><br>
                This link will expire in 1 hour.
            </body>
        </html>";
    $headers = "MIME-Version: 1.0" . "\r
";
    $headers .= "Content-type:text/html;charset=UTF-8" . "\r
";
    $headers .= "From: <your_email@example.com>" . "\r
"; // Replace with your email address

    if (mail($to, $subject, $message, $headers)) {
        $_SESSION['success'] = "A password reset link has been sent to your email!";
        header("Location: login.php");
        exit();
    } else {
        $_SESSION['error'] = "Failed to send the reset email. Please try again later!";
        header("Location: forgot-password.php");
        exit();
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <?php
    if (isset($_SESSION['error'])) {
        echo "<p style='color:red'>" . $_SESSION['error'] . "</p>";
        unset($_SESSION['error']);
    }
    ?>

    <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
        Email: <input type="email" name="email" required><br>
        <input type="submit" value="Reset Password">
    </form>

    <a href="login.php">Back to Login</a>
</body>
</html>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'mydatabase';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Check if form is submitted
if (isset($_POST['submit'])) {
    $email = htmlspecialchars(trim($_POST['email']));

    // Validate email
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        echo "Invalid email format";
    } else {
        // Check if user exists with this email
        $sql = "SELECT id, username FROM users WHERE email = ?";
        $stmt = mysqli_prepare($conn, $sql);
        mysqli_stmt_bind_param($stmt, "s", $email);
        mysqli_stmt_execute($stmt);
        $result = mysqli_stmt_get_result($stmt);

        if (mysqli_num_rows($result) == 0) {
            echo "No user found with this email";
        } else {
            // Generate a random token
            $token = bin2hex(random_bytes(16));
            
            // Update database with the token and expiration time
            $expires = date('Y-m-d H:i:s', strtotime('+1 hour'));
            $sql = "UPDATE users SET password_reset_token = ?, password_reset_expires = ? WHERE email = ?";
            $stmt = mysqli_prepare($conn, $sql);
            mysqli_stmt_bind_param($stmt, "sss", $token, $expires, $email);
            mysqli_stmt_execute($stmt);

            // Send email with reset link
            $to = $email;
            $subject = "Password Reset Request";
            $message = "Please click the following link to reset your password: http://example.com/reset-password.php?token=$token";
            $headers = "From: noreply@example.com";

            if (mail($to, $subject, $message, $headers)) {
                echo "An email has been sent with instructions to reset your password.";
            } else {
                echo "There was an error sending the email. Please try again later.";
            }
        }
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <h2>Forgot Password</h2>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <label for="email">Enter your email address:</label><br>
        <input type="email" id="email" name="email" required><br>
        <input type="submit" name="submit" value="Send Reset Link">
    </form>
</body>
</html>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'mydatabase';

// Connect to database
$conn = new mysqli($host, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Check if form is submitted
if (isset($_POST['submit'])) {
    $email = $_POST['email'];
    
    // Validate email input
    if (empty($email)) {
        echo "Email is required!";
        exit();
    }
    
    // Check if email exists in database
    $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
    $stmt->bind_param("s", $email);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows == 0) {
        echo "Email not found!";
        exit();
    }
    
    // Generate a temporary password
    $temporary_password = bin2hex(random_bytes(6));
    $hash = password_hash($temporary_password, PASSWORD_DEFAULT);
    
    // Update the database with temporary password
    $update_stmt = $conn->prepare("UPDATE users SET password = ?, reset_token = ?, reset_expires = DATE_ADD(NOW(), INTERVAL 1 HOUR) WHERE email = ?");
    $update_stmt->bind_param("sss", $hash, $temporary_password, $email);
    $update_stmt->execute();
    
    // Send the temporary password to user's email
    $to = $email;
    $subject = "Password Reset Request";
    $message = "Dear User,

Your temporary password is: " . $temporary_password . "

Please use this password to login and reset your password.

Best regards,
Admin Team";
    $headers = "From: admin@example.com" . "\r
";
    
    if (mail($to, $subject, $message, $headers)) {
        echo "Temporary password has been sent to your email!";
    } else {
        echo "Error sending email!";
    }
}

// Close database connection
$conn->close();
?>


<?php
session_start();
require 'db_connection.php'; // Include your database connection file

if (isset($_POST['email'])) {
    $email = $_POST['email'];
    
    // Check if email exists in database
    $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
    $stmt->bind_param("s", $email);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows > 0) {
        // Generate a random token
        $token = bin2hex(random_bytes(32));
        
        // Store the token and user ID in the database with an expiration time (e.g., 1 hour from now)
        $expires = date('Y-m-d H:i:s', strtotime('+1 hour'));
        
        $stmt = $conn->prepare("INSERT INTO password_reset (user_id, token, expires) VALUES (?, ?, ?)");
        $stmt->bind_param("iss", $result->fetch_assoc()['id'], $token, $expires);
        $stmt->execute();
        
        // Send email with reset link
        $reset_link = "http://example.com/reset_password.php?token=" . $token;
        send_reset_email($email, $reset_link);
        
        $_SESSION['message'] = "A password reset link has been sent to your email.";
    } else {
        $_SESSION['message'] = "Email not found in our records.";
    }
    
    header("Location: forgot_password.php");
    exit();
}

function send_reset_email($email, $reset_link) {
    // Set up the email content
    $to = $email;
    $subject = "Password Reset Request";
    $plaintext_message = "Please click on this link to reset your password: $reset_link";
    
    // For HTML emails
    $html_message = "<html><body><p>Please click on this link to reset your password:</p><a href='$reset_link'>$reset_link</a></body></html>";
    
    // Set headers for email
    $headers = "MIME-Version: 1.0\r
";
    $headers .= "Content-type: text/html; charset=ISO-8859-1\r
";
    $headers .= "From: Your Name <your@email.com>\r
";
    
    // Send the email
    mail($to, $subject, $html_message, $headers);
}
?>


<?php
session_start();
require 'db_connection.php';

if (!isset($_GET['token'])) {
    header("Location: forgot_password.php");
    exit();
}

$token = $_GET['token'];

// Check if token exists and is valid (not expired)
$stmt = $conn->prepare("SELECT user_id, expires FROM password_reset WHERE token = ?");
$stmt->bind_param("s", $token);
$stmt->execute();
$result = $stmt->get_result();

if ($result->num_rows == 0) {
    $_SESSION['message'] = "Invalid or expired reset link.";
    header("Location: forgot_password.php");
    exit();
}

$user_data = $result->fetch_assoc();
$current_date = date('Y-m-d H:i:s');

if ($current_date > $user_data['expires']) {
    // Token has expired, delete it from database
    $stmt = $conn->prepare("DELETE FROM password_reset WHERE token = ?");
    $stmt->bind_param("s", $token);
    $stmt->execute();
    
    $_SESSION['message'] = "Reset link has expired. Please request a new one.";
    header("Location: forgot_password.php");
    exit();
}

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    if (empty($_POST['password']) || empty($_POST['confirm_password'])) {
        $error = "Please fill in both password fields.";
    } else {
        $password = $_POST['password'];
        $confirm_password = $_POST['confirm_password'];
        
        if ($password != $confirm_password) {
            $error = "Passwords do not match.";
        } else {
            // Update the user's password
            $hashed_password = password_hash($password, PASSWORD_DEFAULT);
            
            $stmt = $conn->prepare("UPDATE users SET password = ? WHERE id = ?");
            $stmt->bind_param("si", $hashed_password, $user_data['user_id']);
            $stmt->execute();
            
            // Delete the reset token
            $stmt = $conn->prepare("DELETE FROM password_reset WHERE token = ?");
            $stmt->bind_param("s", $token);
            $stmt->execute();
            
            $_SESSION['message'] = "Your password has been updated successfully.";
            header("Location: login.php");
            exit();
        }
    }
}
?>
<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <?php if (isset($error)) { echo $error; } ?>
    
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>?token=<?php echo $token;?>" method="post">
        New Password: <input type="password" name="password" required><br>
        Confirm Password: <input type="password" name="confirm_password" required><br>
        <button type="submit">Reset Password</button>
    </form>
</body>
</html>


<?php
// forgot_password.php

// Include database connection file
include('db_connect.php');

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = mysqli_real_escape_string($conn, $_POST['email']);

    // Check if the email exists in the users table
    $sql = "SELECT id FROM users WHERE email = '$email'";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) == 0) {
        die("Email not found. Please check your email and try again.");
    }

    // Generate a random token
    $token = bin2hex(random_bytes(16));

    // Store the token in the database with an expiration time
    $expires = date('Y-m-d H:i:s', time() + 7200); // Expiration after 2 hours

    $sql = "INSERT INTO password_resets (user_id, token, expires) 
            VALUES ('" . mysqli_insert_id($conn) . "', '$token', '$expires')";
    
    if (!mysqli_query($conn, $sql)) {
        die("Error: " . mysqli_error($conn));
    }

    // Send the reset link to the user's email
    $reset_link = "http://yourdomain.com/reset_password.php?token=$token&id=" . mysqli_insert_id($conn);
    
    $to = $email;
    $subject = "Password Reset Request";
    $message = "Please click on this link to reset your password: $reset_link";
    
    // Send email using PHP's mail function
    if (mail($to, $subject, $message)) {
        echo "An email has been sent to you with instructions to reset your password.";
    } else {
        die("Error sending email. Please try again later.");
    }
}

mysqli_close($conn);
?>


<?php
// reset_password.php

include('db_connect.php');

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $token = $_POST['token'];
    $user_id = $_POST['user_id'];
    $new_password = mysqli_real_escape_string($conn, $_POST['new_password']);
    $confirm_password = mysqli_real_escape_string($conn, $_POST['confirm_password']);

    // Validate token
    $sql = "SELECT * FROM password_resets 
            WHERE user_id = '$user_id' AND token = '$token' AND expires > NOW()";
    
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) != 1) {
        die("Invalid or expired reset link. Please request a new password reset.");
    }

    // Check if passwords match
    if ($new_password !== $confirm_password) {
        die("Passwords do not match. Please try again.");
    }

    // Update the user's password
    $sql = "UPDATE users 
            SET password = '$new_password' 
            WHERE id = '$user_id'";
    
    if (!mysqli_query($conn, $sql)) {
        die("Error updating password: " . mysqli_error($conn));
    }

    // Mark the reset as used
    $sql = "UPDATE password_resets 
            SET used = 1 
            WHERE token = '$token'";
    
    mysqli_query($conn, $sql);

    echo "Password has been successfully updated!";
}

mysqli_close($conn);
?>


<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
    <style>
        /* Basic CSS styling */
        body {
            font-family: Arial, sans-serif;
            margin: 0 auto;
            width: 400px;
            padding: 20px;
        }
        .error {
            color: red;
            margin-top: 10px;
        }
    </style>
</head>
<body>
    <h2>Forgot Password</h2>
    
    <?php
    // Start session to store messages
    session_start();
    
    // Check for any existing error or success message
    if (isset($_SESSION['message'])) {
        echo "<div class='error'>" . $_SESSION['message'] . "</div>";
        unset($_SESSION['message']);
    }
    ?>
    
    <form action="forgot.php" method="post">
        <label>Email:</label><br>
        <input type="email" name="email" required><br><br>
        
        <button type="submit">Reset Password</button>
    </form>
</body>
</html>


<?php
// Database configuration
include('db_config.php');

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = mysqli_real_escape_string($conn, $_POST['email']);
    
    // Check if email exists in database
    $sql = "SELECT id FROM users WHERE email='$email'";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) > 0) {
        // Generate a unique token
        $token = bin2hex(random_bytes(16));
        
        // Store the token and expiration time in the database
        $expires = date('Y-m-d H:i:s', strtotime('+30 minutes'));
        $sql = "UPDATE users SET reset_token='$token', reset_expires='$expires' WHERE email='$email'";
        mysqli_query($conn, $sql);
        
        // Send password reset link via email
        $resetLink = "http://$_SERVER[HTTP_HOST]/reset.php?token=$token";
        $message = "Please click the following link to reset your password: $resetLink

This link will expire in 30 minutes.";
        
        if (mail($email, 'Password Reset', $message)) {
            $_SESSION['message'] = "A password reset link has been sent to your email address.";
        } else {
            $_SESSION['message'] = "An error occurred while sending the email. Please try again later.";
        }
    } else {
        $_SESSION['message'] = "This email does not exist in our records.";
    }
    
    // Redirect back
    header("Location: forgot.php");
}
?>


<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
    <style>
        /* Basic CSS styling */
        body {
            font-family: Arial, sans-serif;
            margin: 0 auto;
            width: 400px;
            padding: 20px;
        }
        .error {
            color: red;
            margin-top: 10px;
        }
    </style>
</head>
<body>
    <h2>Reset Password</h2>
    
    <?php
    session_start();
    
    // Check if token is provided and valid
    $token = $_GET['token'];
    
    // Database configuration
    include('db_config.php');
    
    // Get user details using the token
    $sql = "SELECT id, reset_token, reset_expires FROM users WHERE reset_token='$token'";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) == 0) {
        $_SESSION['message'] = "Invalid or expired password reset link.";
        header("Location: forgot.php");
        exit;
    }
    
    // Check if the token has expired
    $row = mysqli_fetch_assoc($result);
    $expires = $row['reset_expires'];
    if (strtotime($expires) < time()) {
        $_SESSION['message'] = "Your password reset link has expired. Please request a new one.";
        header("Location: forgot.php");
        exit;
    }
    
    // If form is submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        $new_password = $_POST['password'];
        $confirm_password = $_POST['confirm-password'];
        
        if ($new_password != $confirm_password) {
            die("Passwords do not match.");
        }
        
        if (strlen($new_password) < 8) {
            die("Password must be at least 8 characters long.");
        }
        
        // Hash the new password
        $hash = password_hash($new_password, PASSWORD_DEFAULT);
        
        // Update the database
        $sql = "UPDATE users SET password='$hash', reset_token='', reset_expires='0000-00-00 00:00:00' WHERE reset_token='$token'";
        if (mysqli_query($conn, $sql)) {
            $_SESSION['message'] = "Your password has been successfully updated!";
            header("Location: login.php");
            exit;
        } else {
            die("An error occurred while updating your password.");
        }
    }
    
    // Display any existing message
    if (isset($_SESSION['message'])) {
        echo "<div class='error'>" . $_SESSION['message'] . "</div>";
        unset($_SESSION['message']);
    }
    ?>
    
    <form action="reset.php?token=<?php echo $token; ?>" method="post">
        <label>New Password:</label><br>
        <input type="password" name="password" required><br><br>
        
        <label>Confirm Password:</label><br>
        <input type="password" name="confirm-password" required><br><br>
        
        <button type="submit">Change Password</button>
    </form>
</body>
</html>


<?php
// Database configuration
$servername = "localhost";
$username = "root";
$password = "";
$dbname = "your_database_name";

// Create connection
$conn = mysqli_connect($servername, $username, $password, $dbname);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}
?>


require 'PHPMailer/PHPMailer.php';
require 'PHPMailer/Exception.php';
require 'PHPMailer/OAuth.php';
require 'PHPMailer/SMTP.php';

$mail = new PHPMailer\PHPMailer();
$mail->isSMTP();
$mail->Host = 'smtp.example.com';
$mail->SMTPAuth = true;
$mail->Username = 'your_email@example.com';
$mail->Password = 'your_password';
$mail->setFrom('your_email@example.com', 'Your Name');
...


<?php
// forgot_password.php

session_start();
require 'database_connection.php';

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = $_POST['email'];
    
    // Check if email exists in database
    $stmt = $conn->prepare("SELECT user_id FROM users WHERE email = ?");
    $stmt->bind_param("s", $email);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows > 0) {
        // Generate token
        $token = bin2hex(random_bytes(16));
        
        // Store token in database
        $stmt = $conn->prepare("INSERT INTO forgot_password_tokens (user_id, token) VALUES (?, ?)");
        $stmt->bind_param("is", $result->fetch_assoc()['user_id'], $token);
        $stmt->execute();
        
        // Send email with reset link
        $to = $email;
        $subject = "Password Reset Request";
        $message = "Please click the following link to reset your password: http://example.com/reset.php?token=$token";
        $headers = "From: webmaster@example.com";
        
        if (mail($to, $subject, $message, $headers)) {
            echo "An email has been sent with instructions to reset your password.";
        } else {
            echo "There was an error sending the email. Please try again later.";
        }
    } else {
        echo "Email does not exist in our records.";
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <h2>Forgot Your Password?</h2>
    <form action="forgot_password.php" method="post">
        <input type="email" name="email" placeholder="Enter your email address" required><br><br>
        <input type="submit" value="Reset Password">
    </form>
</body>
</html>


<?php
session_start();
include('db_connection.php'); // Include your database connection file

$error = "";

if (isset($_POST['submit'])) {
    $email = $_POST['email'];
    
    if (empty($email)) {
        $error = "Please enter your email address";
    } else {
        // Check if the email exists in the database
        $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
        $stmt->bind_param("s", $email);
        $stmt->execute();
        $result = $stmt->get_result();
        
        if ($result->num_rows == 0) {
            $error = "Email not found in our records";
        } else {
            // Generate a random token
            $token = bin2hex(random_bytes(16));
            
            // Update the token and expiration time in the database
            $stmt = $conn->prepare("UPDATE users SET reset_token = ?, reset_expires = DATE_ADD(NOW(), INTERVAL 30 MINUTE) WHERE email = ?");
            $stmt->bind_param("ss", $token, $email);
            $stmt->execute();
            
            // Send the reset password link to the user's email
            $to = $email;
            $subject = "Password Reset Request";
            $message = "
                <html>
                    <body>
                        <h2>Password Reset</h2>
                        <p>Please click the following link to reset your password:</p>
                        <a href='http://your-site.com/reset_password.php?token=$token'>Reset Password</a><br><br>
                        <small>If you did not request this password reset, please ignore this email.</small>
                    </body>
                </html>
            ";
            $headers = "MIME-Version: 1.0" . "\r
";
            $headers .= "Content-type:text/html;charset=UTF-8" . "\r
";
            $headers .= "From: your-site.com <your-email@your-site.com>" . "\r
";
            
            mail($to, $subject, $message, $headers);
            
            // Clear the token and redirect
            $_SESSION['email'] = $email;
            header("Location: password_reset_sent.php");
            exit();
        }
    }
}
?>
<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <?php if (!empty($error)): ?>
        <div style="color:red"><?php echo $error; ?></div><br>
    <?php endif; ?>
    
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        Email Address:<br>
        <input type="email" name="email" required><br><br>
        <input type="submit" name="submit" value="Reset Password">
    </form>
</body>
</html>


<?php
session_start();
include('db_connection.php'); // Include your database connection file

if (!isset($_GET['token'])) {
    die("Invalid request. Please go back to the forgot password page.");
}

$token = $_GET['token'];
$error = "";
$success = "";

// Check if the token exists and is valid
$stmt = $conn->prepare("SELECT id, email FROM users WHERE reset_token = ? AND reset_expires > NOW()");
$stmt->bind_param("s", $token);
$stmt->execute();
$result = $stmt->get_result();

if ($result->num_rows == 0) {
    die("This token is invalid or has expired. Please request a new password reset.");
}

$user = $result->fetch_assoc();

if (isset($_POST['reset'])) {
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];
    
    if ($password !== $confirm_password) {
        $error = "Passwords do not match";
    } else {
        // Update the user's password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);
        
        $stmt = $conn->prepare("UPDATE users SET password = ?, reset_token = NULL, reset_expires = NULL WHERE email = ?");
        $stmt->bind_param("ss", $hashed_password, $user['email']);
        $stmt->execute();
        
        $success = "Your password has been successfully updated!";
    }
}
?>
<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <?php if (!empty($error)): ?>
        <div style="color:red"><?php echo $error; ?></div><br>
    <?php endif; ?>
    
    <?php if (!empty($success)): ?>
        <div style="color:green"><?php echo $success; ?></div><br>
    <?php endif; ?>
    
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>?token=<?php echo $token;?>" method="post">
        New Password:<br>
        <input type="password" name="password" required><br><br>
        Confirm Password:<br>
        <input type="password" name="confirm_password" required><br><br>
        <input type="submit" name="reset" value="Reset Password">
    </form>
</body>
</html>


<?php
session_start();
?>
<!DOCTYPE html>
<html>
<head>
    <title>Password Reset Sent</title>
</head>
<body>
    <h2>Password Reset Instructions Sent</h2>
    <p>We have sent you an email with instructions to reset your password.</p>
    <p>Please check your inbox and follow the steps to reset your password within 30 minutes.</p>
</body>
</html>


<?php
// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'mydatabase';

// Connect to the database
$conn = new mysqli($host, $username, $password, $dbname);

// Check for errors in connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to handle password reset request
function forgotPassword() {
    global $conn;

    // If form is submitted
    if (isset($_POST['email'])) {
        $email = mysqli_real_escape_string($conn, $_POST['email']);

        // Check if email exists in the database
        $sql = "SELECT * FROM users WHERE email = '$email'";
        $result = $conn->query($sql);

        if ($result->num_rows > 0) {
            // Generate a random token and set expiration time
            $token = uniqid() . time();
            $expiration_time = time() + 3600; // Token valid for 1 hour

            // Update the database with the token and expiration time
            $sql = "UPDATE users SET reset_token = '$token', reset_expires = '$expiration_time' WHERE email = '$email'";
            if ($conn->query($sql) === TRUE) {
                // Send password reset link to user's email
                $resetLink = "http://example.com/reset-password.php?token=$token";
                $to = $email;
                $subject = "Password Reset Request";
                $message = "Please click the following link to reset your password:
$resetLink
This link will expire in 1 hour.";

                // Send email using PHPMailer or other method
                mail($to, $subject, $message); // Note: Use a more reliable method like PHPMailer

                // Redirect back with success message
                header("Location: forgot-password.php?success=1");
                exit();
            } else {
                echo "Error updating record: " . $conn->error;
            }
        } else {
            // Email not found in database
            header("Location: forgot-password.php?error=Email+not+found");
            exit();
        }
    }
}

// Close the database connection
$conn->close();
?>


<?php
session_start();

// Check if token is provided
if (!isset($_GET['token'])) {
    die("Invalid request.");
}

$token = $_GET['token'];

// Database connection
$conn = new mysqli($host, $username, $password, $dbname);

// Get the user with the provided token
$sql = "SELECT * FROM users WHERE reset_token = '$token' AND reset_expires > UNIX_TIMESTAMP()";
$result = $conn->query($sql);

if ($result->num_rows == 1) {
    // Token is valid; display password reset form
} else {
    die("Invalid or expired token.");
}

// Close database connection
$conn->close();
?>


<?php
session_start();
include 'db_connection.php'; // Include your database connection

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = $_POST['email'];
    
    // Check if email exists in the database
    $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
    $stmt->bind_param("s", $email);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows > 0) {
        // Generate a random token
        $token = bin2hex(random_bytes(32));
        
        // Set token expiration time (e.g., 30 minutes from now)
        $expiration_time = date('Y-m-d H:i:s', strtotime('+30 minutes'));
        
        // Store the token in the database
        $stmt = $conn->prepare("INSERT INTO password_reset_tokens (user_id, token, expires_at) 
                               VALUES (?, ?, ?)");
        $row = $result->fetch_assoc();
        $stmt->bind_param("iss", $row['id'], $token, $expiration_time);
        $stmt->execute();
        
        // Send reset email
        $to = $email;
        $subject = "Password Reset Request";
        $message = "
            <html>
            <body>
                <p>You requested a password reset. Click the link below to reset your password:</p>
                <a href='http://yourdomain.com/reset-password.php?token=$token'>Reset Password</a><br>
                <small>This link will expire in 30 minutes.</small>
            </body>
            </html>
        ";
        $headers = "MIME-Version: 1.0" . "\r
";
        $headers .= "Content-type:text/html;charset=UTF-8" . "\r
";
        
        mail($to, $subject, $message, $headers);
        
        echo "An email has been sent to you with instructions to reset your password.";
    } else {
        echo "Email does not exist in our database.";
    }
}
?>


<?php
session_start();
include 'db_connection.php'; // Include your database connection

if (isset($_GET['token'])) {
    $token = $_GET['token'];
    
    // Check if the token exists and is valid
    $stmt = $conn->prepare("SELECT * FROM password_reset_tokens 
                           WHERE token = ? AND expires_at > NOW()");
    $stmt->bind_param("s", $token);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows > 0) {
        // Token is valid
        $row = $result->fetch_assoc();
        
        // If form is submitted, update the password
        if ($_SERVER["REQUEST_METHOD"] == "POST") {
            $new_password = $_POST['password'];
            $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);
            
            // Update the user's password
            $stmt = $conn->prepare("UPDATE users SET password = ? WHERE id = ?");
            $stmt->bind_param("si", $hashed_password, $row['user_id']);
            $stmt->execute();
            
            // Invalidate the token
            $stmt = $conn->prepare("DELETE FROM password_reset_tokens WHERE token = ?");
            $stmt->bind_param("s", $token);
            $stmt->execute();
            
            // Redirect to login page
            header("Location: login.php?success=Password reset successful. Please login.");
            exit();
        }
        
        // Display the password reset form
        ?>
        <!DOCTYPE html>
        <html lang="en">
        <head>
            <meta charset="UTF-8">
            <title>Reset Password</title>
        </head>
        <body>
            <h2>Reset Password</h2>
            <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
                <input type="password" name="password" placeholder="Enter new password" required>
                <button type="submit">Reset Password</button>
            </form>
        </body>
        </html>
        <?php
    } else {
        // Token is invalid or expired
        echo "Invalid or expired token.";
    }
} else {
    echo "No token provided.";
}
?>


<?php
session_start();
include 'db_connection.php'; // Include your database connection

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = $_POST['email'];
    $password = $_POST['password'];
    
    // Fetch user data
    $stmt = $conn->prepare("SELECT id, email, password FROM users WHERE email = ?");
    $stmt->bind_param("s", $email);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows > 0) {
        $row = $result->fetch_assoc();
        
        // Verify the password
        if (password_verify($password, $row['password'])) {
            // Start session
            $_SESSION['user_id'] = $row['id'];
            
            // Redirect to home page or dashboard
            header("Location: dashboard.php");
            exit();
        } else {
            echo "Invalid email or password.";
        }
    } else {
        echo "Invalid email or password.";
    }
}
?>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$db_name = 'your_database';

// Create database connection
$conn = mysqli_connect($host, $username, $password, $db_name);

// Error handling for database connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to generate random token
function generateToken() {
    return bin2hex(random_bytes(16));
}

// Function to send reset password email
function sendResetEmail($email, $token) {
    $to = $email;
    $subject = 'Password Reset Request';
    $message = "Please click the following link to reset your password:

";
    $message .= "http://your-site.com/reset_password.php?token=" . $token . "

";
    $headers = 'From: no-reply@your-site.com' . "\r
";
    
    return mail($to, $subject, $message, $headers);
}

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = mysqli_real_escape_string($conn, $_POST['email']);
    
    // Check if email exists in database
    $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
    $stmt->bind_param("s", $email);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows > 0) {
        // Generate token
        $token = generateToken();
        
        // Update database with new token
        $updateStmt = $conn->prepare("UPDATE users SET reset_token = ? WHERE email = ?");
        $updateStmt->bind_param("ss", $token, $email);
        $updateStmt->execute();
        
        // Send reset email
        if (sendResetEmail($email, $token)) {
            echo "Password reset link has been sent to your email address.";
        } else {
            echo "Failed to send password reset email. Please try again later.";
        }
    } else {
        echo "This email does not exist in our database.";
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <h2>Forgot Password</h2>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <input type="email" name="email" placeholder="Enter your email address" required><br><br>
        <button type="submit">Send Reset Link</button>
    </form>
</body>
</html>

<?php
// Close database connection
$conn->close();
?>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$db_name = 'your_database';

// Create database connection
$conn = mysqli_connect($host, $username, $password, $db_name);

// Error handling for database connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Check if token is provided
if (isset($_GET['token'])) {
    $token = mysqli_real_escape_string($conn, $_GET['token']);
    
    // Verify token exists in database
    $stmt = $conn->prepare("SELECT id FROM users WHERE reset_token = ?");
    $stmt->bind_param("s", $token);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows > 0) {
        // Show password reset form
?>
<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <h2>Reset Password</h2>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <input type="password" name="new_password" placeholder="Enter new password" required><br><br>
        <input type="password" name="confirm_password" placeholder="Confirm new password" required><br><br>
        <button type="submit">Reset Password</button>
    </form>
</body>
</html>

<?php
    } else {
        echo "Invalid or expired reset token.";
    }
} else {
    echo "No token provided.";
}

// Handle password reset submission
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $token = mysqli_real_escape_string($conn, $_GET['token']);
    $new_password = mysqli_real_escape_string($conn, $_POST['new_password']);
    $confirm_password = mysqli_real_escape_string($conn, $_POST['confirm_password']);
    
    if ($new_password != $confirm_password) {
        die("Passwords do not match.");
    }
    
    // Hash the new password
    $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);
    
    // Update password in database
    $updateStmt = $conn->prepare("UPDATE users SET password = ?, reset_token = NULL WHERE reset_token = ?");
    $updateStmt->bind_param("ss", $hashed_password, $token);
    $updateStmt->execute();
    
    echo "Password has been successfully updated!";
}

// Close database connection
$conn->close();
?>


<?php
// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$db_name = 'mydatabase';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $db_name);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Start session
session_start();

// Function to generate a random token
function generateToken() {
    return bin2hex(random_bytes(32));
}

// Function to send email
function sendEmail($to, $subject, $message) {
    // Set up headers
    $headers = "MIME-Version: 1.0\r
";
    $headers .= "Content-Type: text/html; charset=UTF-8\r
";
    $headers .= "From: noreply@example.com\r
";

    // Send email
    mail($to, $subject, $message, $headers);
}

// Forgot password form submission
if (isset($_POST['submit'])) {
    $email = mysqli_real_escape_string($conn, $_POST['email']);

    // Check if user exists
    $sql = "SELECT * FROM users WHERE email = '$email'";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) > 0) {
        // Generate reset token and expiration time
        $token = generateToken();
        $expiration_time = date('Y-m-d H:i:s', strtotime('+1 hour'));

        // Store token in database
        $sql = "INSERT INTO password_resets (email, token, expires_at) VALUES ('$email', '$token', '$expiration_time')";
        mysqli_query($conn, $sql);

        // Create reset link
        $reset_link = "http://$_SERVER[HTTP_HOST]/reset-password.php?token=$token";

        // Prepare email content
        $subject = "Password Reset Request";
        $message = "<h2>Password Reset</h2>";
        $message .= "<p>We received a password reset request. Click the link below to reset your password:</p>";
        $message .= "<a href='$reset_link' style='color: #007bff; text-decoration: none;'>Reset Password</a>";
        $message .= "<p>If you didn't request this password reset, please ignore this email.</p>";

        // Send email
        sendEmail($email, $subject, $message);

        // Redirect to success page
        header("Location: forgot-password-success.php");
        exit();
    } else {
        echo "Email not found in our records!";
    }
}

// HTML form for forgot password
?>
<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <h2>Forgot Password</h2>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <label>Email:</label><br>
        <input type="email" name="email" required><br><br>
        <input type="submit" name="submit" value="Reset Password">
    </form>
</body>
</html>

<?php
// Close database connection
mysqli_close($conn);
?>


<?php
session_start();

// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$db_name = 'mydatabase';

$conn = mysqli_connect($host, $username, $password, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Check if token is valid and not expired
if (isset($_GET['token'])) {
    $token = mysqli_real_escape_string($conn, $_GET['token']);
    
    $sql = "SELECT * FROM password_resets WHERE token = '$token'";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) > 0) {
        $row = mysqli_fetch_assoc($result);
        
        // Check if token has expired
        if ($row['expires_at'] < date('Y-m-d H:i:s')) {
            echo "This reset link has expired. Please request a new password reset.";
            exit();
        }
    } else {
        echo "Invalid reset link!";
        exit();
    }
} else {
    echo "No token provided!";
    exit();
}

// Process password reset
if (isset($_POST['submit'])) {
    $token = mysqli_real_escape_string($conn, $_GET['token']);
    $password = mysqli_real_escape_string($conn, $_POST['password']);
    
    // Update user password
    $sql = "SELECT email FROM password_resets WHERE token = '$token'";
    $result = mysqli_query($conn, $sql);
    $row = mysqli_fetch_assoc($result);
    
    $email = $row['email'];
    
    // Hash the new password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);
    
    $update_sql = "UPDATE users SET password = '$hashed_password' WHERE email = '$email'";
    mysqli_query($conn, $update_sql);
    
    // Delete token after use
    $delete_sql = "DELETE FROM password_resets WHERE token = '$token'";
    mysqli_query($conn, $delete_sql);
    
    // Redirect to login page
    header("Location: login.php");
    exit();
}

// HTML form for new password
?>
<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <h2>Reset Password</h2>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>?token=<?php echo $token; ?>" method="post">
        <label>New Password:</label><br>
        <input type="password" name="password" required><br><br>
        <input type="submit" name="submit" value="Reset Password">
    </form>
</body>
</html>

<?php
mysqli_close($conn);
?>


<?php
session_start();

// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'mydatabase';

// Create connection
$conn = new mysqli($host, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    if (isset($_POST['email'])) {
        // Validate email
        $email = filter_var($_POST['email'], FILTER_VALIDATE_EMAIL);

        if (!$email) {
            $_SESSION['message'] = "Please enter a valid email address.";
            header("Location: forgot_password.php");
            exit();
        }

        // Check if email exists in the database
        $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
        $stmt->bind_param("s", $email);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows === 0) {
            $_SESSION['message'] = "Email not found in our records.";
            header("Location: forgot_password.php");
            exit();
        }

        // Generate reset token
        $token = bin2hex(random_bytes(32));
        $expires = date('Y-m-d H:i:s', time() + 3600); // Token expires after 1 hour

        // Update the database with the new token and expiration time
        $stmt = $conn->prepare("UPDATE users SET reset_token = ?, reset_expires = ? WHERE email = ?");
        $stmt->bind_param("sss", $token, $expires, $email);
        $stmt->execute();

        // Send email with reset link
        $to = $email;
        $subject = "Password Reset Request";
        $message = "
            <html>
                <head></head>
                <body>
                    <h2>Password Reset</h2>
                    <p>We received a request to reset your password. Click the following link to reset it:</p>
                    <a href='http://localhost/password_reset.php?token=$token'>Reset Password</a><br><br>
                    <small>If you did not request this password reset, please ignore this email.</small>
                </body>
            </html>
        ";
        $headers = "MIME-Version: 1.0" . "\r
";
        $headers .= "Content-type:text/html;charset=UTF-8" . "\r
";
        $headers .= "From: yourname@example.com" . "\r
";

        mail($to, $subject, $message, $headers);

        $_SESSION['message'] = "We've sent a password reset link to your email address.";
        header("Location: forgot_password.php");
        exit();
    }
}

$conn->close();
?>


<?php
include('config.php');

if (isset($_POST['reset'])) {
    $email = mysqli_real_escape_string($conn, $_POST['email']);
    
    // Check if email exists in database
    $sql = "SELECT id FROM users WHERE email='$email'";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) == 1) {
        $token = bin2hex(random_bytes(32)); // Generate a unique token
        
        // Update the database with the token
        $sql = "UPDATE users SET reset_token='$token', reset_time=NOW() WHERE email='$email'";
        mysqli_query($conn, $sql);
        
        // Send the password reset link to user's email
        $to = $email;
        $subject = "Password Reset Request";
        $message = "Please click the following link to reset your password:

";
        $message .= "http://example.com/reset-password.php?token=$token";
        $headers = "From: webmaster@example.com\r
";
        
        mail($to, $subject, $message, $headers);
        
        echo "A password reset link has been sent to your email.";
    } else {
        echo "Email not found in our records.";
    }
}
?>


<?php
include('config.php');

if (isset($_GET['token'])) {
    $token = mysqli_real_escape_string($conn, $_GET['token']);
    
    // Check if token exists in database and hasn't expired
    $sql = "SELECT id FROM users WHERE reset_token='$token'";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) == 1) {
        // Display the password reset form
?>
<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <h2>Reset Password</h2>
    <form action="reset-password.php?token=<?php echo $token; ?>" method="post">
        <label for="new_password">New Password:</label><br>
        <input type="password" id="new_password" name="new_password" required><br><br>
        <label for="confirm_password">Confirm Password:</label><br>
        <input type="password" id="confirm_password" name="confirm_password" required><br><br>
        <button type="submit" name="update">Update Password</button>
    </form>
<?php
    } else {
        echo "Invalid or expired token.";
    }
}
?>


<?php
include('config.php');

if (isset($_POST['update'])) {
    $token = mysqli_real_escape_string($conn, $_GET['token']);
    $new_password = mysqli_real_escape_string($conn, $_POST['new_password']);
    
    if ($_POST['new_password'] == $_POST['confirm_password']) {
        // Update the password
        $sql = "UPDATE users SET password='" . md5($new_password) . "', reset_token=NULL WHERE reset_token='$token'";
        mysqli_query($conn, $sql);
        
        echo "Password updated successfully. Please login with your new password.";
    } else {
        echo "Passwords do not match.";
    }
}
?>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'mydatabase';
$username = 'root';
$password = '';

// Connect to database
$conn = new mysqli($host, $username, $password, $dbname);
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get email from form
    $email = $_POST['email'];

    // Validate email format
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        die("Invalid email format");
    }

    // Check if email exists in database
    $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
    $stmt->bind_param('s', $email);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows == 0) {
        die("Email not found");
    }

    // Generate reset token
    $token = bin2hex(random_bytes(16));
    $expires = date('Y-m-d H:i:s', strtotime('+1 hour'));

    // Insert token into database
    $stmt = $conn->prepare("INSERT INTO password_resets (email, token, created_at) VALUES (?, ?, ?)");
    $stmt->bind_param('sss', $email, $token, $expires);
    $stmt->execute();

    // Send reset email
    $to = $email;
    $subject = "Password Reset Request";
    $message = "
        <html>
            <body>
                <h1>Password Reset</h1>
                <p>Please click the following link to reset your password:</p>
                <a href='http://example.com/reset-password.php?token=$token'>Reset Password</a>
                <p>This link will expire in 1 hour.</p>
            </body>
        </html>";
    $headers = "MIME-Version: 1.0" . "\r
";
    $headers .= "Content-type:text/html;charset=UTF-8" . "\r
";
    $headers .= "From: admin@example.com";

    if (mail($to, $subject, $message, $headers)) {
        echo "Password reset email has been sent to your inbox.";
    } else {
        die("Email sending failed");
    }
}

// Reset password form
echo "
<form method='post' action=''>
    <input type='email' name='email' placeholder='Enter your email' required>
    <button type='submit'>Reset Password</button>
</form>";
?>


<?php
// Check if token is provided
if (!isset($_GET['token'])) {
    die("Invalid request");
}

$token = $_GET['token'];

// Connect to database (same as above)
$conn = new mysqli($host, $username, $password, $dbname);
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Check if token exists and is valid
$stmt = $conn->prepare("SELECT email FROM password_resets WHERE token = ? AND created_at > ?");
$stmt->bind_param('ss', $token, date('Y-m-d H:i:s'));
$stmt->execute();
$result = $stmt->get_result();

if ($result->num_rows == 0) {
    die("Invalid or expired token");
}

// Show reset form
echo "
<form method='post' action=''>
    <input type='password' name='new_password' placeholder='Enter new password' required>
    <button type='submit'>Reset Password</button>
</form>";

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get the new password
    $newPassword = $_POST['new_password'];
    
    // Update user's password
    $stmt = $conn->prepare("UPDATE users SET password = ? WHERE email = ?");
    $hashedPassword = password_hash($newPassword, PASSWORD_DEFAULT);
    $stmt->bind_param('ss', $hashedPassword, $email);
    $stmt->execute();

    // Delete the reset token
    $stmt = $conn->prepare("DELETE FROM password_resets WHERE token = ?");
    $stmt->bind_param('s', $token);
    $stmt->execute();

    echo "Password has been successfully reset!";
}
?>


<?php
// Database configuration
$host = 'localhost';
$dbUsername = 'username';
$dbPassword = 'password';
$dbName = 'database_name';

// Connect to database
$conn = mysqli_connect($host, $dbUsername, $dbPassword, $dbName);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Check if form is submitted
if (isset($_POST['reset'])) {

    // Get email from form
    $email = $_POST['email'];

    // Validate email input
    if (empty($email)) {
        echo "Email is required";
        exit();
    }

    // Check if user exists in the database
    $sql = "SELECT id FROM users WHERE email = ?";
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, "s", $email);
    mysqli_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);

    if (mysqli_num_rows($result) == 0) {
        echo "Email does not exist in our database";
        exit();
    }

    // Generate reset token
    $resetToken = bin2hex(random_bytes(16));
    $tokenExpiry = date('Y-m-d H:i:s', time() + 3600); // Token expires after 1 hour

    // Update database with the reset token and expiry time
    $updateSql = "UPDATE users SET reset_token = ?, reset_token_expiry = ? WHERE email = ?";
    $stmt = mysqli_prepare($conn, $updateSql);
    mysqli_stmt_bind_param($stmt, "sss", $resetToken, $tokenExpiry, $email);

    if (!mysqli_execute($stmt)) {
        echo "Error resetting password";
        exit();
    }

    // Send reset email
    $to = $email;
    $subject = "Password Reset Request";
    
    $message = "
        <html>
        <head></head>
        <body>
            <p>Hello,</p>
            <p>We received a request to reset your password. Please click the link below to reset your password:</p>
            <a href='http://example.com/reset-password.php?token=$resetToken'>Reset Password</a>
            <p>If you did not make this request, please ignore this email.</p>
            <p>This link will expire in one hour.</p>
        </body>
        </html>
    ";

    $headers = "MIME-Version: 1.0" . "\r
";
    $headers .= "Content-type:text/html;charset=UTF-8" . "\r
";
    $headers .= "From: example@example.com" . "\r
";

    if (mail($to, $subject, $message, $headers)) {
        echo "A password reset link has been sent to your email address.";
    } else {
        echo "Failed to send the password reset link. Please try again later.";
    }
}

// Close database connection
mysqli_close($conn);
?>


<?php
// Database connection configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'your_database';

// Create database connection
$conn = new mysqli($host, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Session start
session_start();

// If form is submitted for password reset request
if (isset($_POST['reset_request'])) {
    $email = $_POST['email'];
    
    // Sanitize email input
    $email = htmlspecialchars($email);
    $email = trim($email);
    
    // Check if email exists in database
    $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
    $stmt->bind_param("s", $email);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows > 0) {
        // Generate reset token and expiration time
        $token = bin2hex(random_bytes(16));
        $expires = date('Y-m-d H:i:s', strtotime('+1 hour'));
        
        // Insert token into database
        $stmt = $conn->prepare("INSERT INTO password_resets (user_id, token, expires) VALUES (?, ?, ?)");
        $row = $result->fetch_assoc();
        $stmt->bind_param("iss", $row['id'], $token, $expires);
        $stmt->execute();
        
        // Send reset email
        $to = $email;
        $subject = 'Password Reset Request';
        $message = "Please click the following link to reset your password:

";
        $message .= "http://$_SERVER[HTTP_HOST]/reset-password.php?token=$token

";
        $message .= "This link will expire in 1 hour.";
        
        // Set email headers
        $headers = 'From: webmaster@example.com' . "\r
";
        $headers .= 'Reply-To: webmaster@example.com' . "\r
";
        $headers .= 'X-Mailer: PHP/' . phpversion();
        
        if (mail($to, $subject, $message, $headers)) {
            // Redirect with success message
            header("Location: forgot-password.php?msg=Email sent successfully!&status=success");
            exit();
        } else {
            // Redirect with error message
            header("Location: forgot-password.php?msg=Failed to send email. Please try again.&status=error");
            exit();
        }
    } else {
        // Email not found in database
        header("Location: forgot-password.php?msg=Email not found in our records.&status=error");
        exit();
    }
}

// Function to validate and sanitize input data
function sanitizeInput($data) {
    $data = trim($data);
    $data = htmlspecialchars($data, ENT_QUOTES);
    return $data;
}
?>


<?php
// Database connection configuration (same as above)

// Session start
session_start();

// If token is provided in URL
if (isset($_GET['token'])) {
    $token = $_GET['token'];
    
    // Check if token exists and is valid
    $stmt = $conn->prepare("SELECT * FROM password_resets WHERE token = ?");
    $stmt->bind_param("s", $token);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows > 0) {
        // Get user details
        $row = $result->fetch_assoc();
        
        // Check if token has expired
        $expires = strtotime($row['expires']);
        if (time() > $expires) {
            header("Location: forgot-password.php?msg=Password reset link has expired.&status=error");
            exit();
        }
    } else {
        header("Location: forgot-password.php?msg=Invalid password reset token.&status=error");
        exit();
    }
}

// If form is submitted for password reset
if (isset($_POST['reset_password'])) {
    $token = $_GET['token'];
    $new_password = $_POST['new_password'];
    $confirm_password = $_POST['confirm_password'];
    
    // Validate input data
    if ($new_password !== $confirm_password) {
        header("Location: reset-password.php?token=$token&msg=Passwords do not match.&status=error");
        exit();
    }
    
    // Check password complexity
    if (strlen($new_password) < 8 || !preg_match("#[0-9]#", $new_password) || !preg_match("#[A-Z]#", $new_password)) {
        header("Location: reset-password.php?token=$token&msg=Password must be at least 8 characters long and contain at least one number and uppercase letter.&status=error");
        exit();
    }
    
    // Update user password
    $stmt = $conn->prepare("SELECT user_id FROM password_resets WHERE token = ?");
    $stmt->bind_param("s", $token);
    $stmt->execute();
    $result = $stmt->get_result();
    $row = $result->fetch_assoc();
    
    // Hash new password
    $hashed_password = password_hash($new_password, PASSWORD_BCRYPT);
    
    $update_stmt = $conn->prepare("UPDATE users SET password = ? WHERE id = ?");
    $update_stmt->bind_param("si", $hashed_password, $row['user_id']);
    $update_stmt->execute();
    
    // Delete used token
    $delete_stmt = $conn->prepare("DELETE FROM password_resets WHERE token = ?");
    $delete_stmt->bind_param("s", $token);
    $delete_stmt->execute();
    
    // Redirect to login page with success message
    header("Location: login.php?msg=Password reset successfully! Please login with your new password.&status=success");
    exit();
}
?>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'mydatabase';

// Connect to database
$conn = new mysqli($host, $username, $password, $dbname);
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    if (isset($_POST['email']) && !empty($_POST['email'])) {
        $email = mysqli_real_escape_string($conn, $_POST['email']);
        
        // Check if email exists in database
        $sql = "SELECT id FROM users WHERE email='$email'";
        $result = $conn->query($sql);
        
        if ($result->num_rows > 0) {
            // Generate a random token
            $token = bin2hex(random_bytes(32));
            
            // Set expiration time (1 hour)
            $expires = date('Y-m-d H:i:s', strtotime('+1 hour'));
            
            // Update the database with token and expiration time
            $sql = "UPDATE users SET reset_token='$token', reset_expires='$expires' WHERE email='$email'";
            $conn->query($sql);
            
            // Send email to user
            $to = $email;
            $subject = 'Password Reset Request';
            $message = "
                <html>
                    <body>
                        <h2>Password Reset</h2>
                        <p>Please click the following link to reset your password:</p>
                        <a href='http://example.com/reset.php?token=$token'>Reset Password</a><br>
                        <p>If you didn't request this password reset, please ignore this email.</p>
                    </body>
                </html>
            ";
            
            // Set headers for email
            $headers = "MIME-Version: 1.0" . "\r
";
            $headers .= "Content-type:text/html;charset=UTF-8" . "\r
";
            $headers .= "From: admin@example.com" . "\r
";
            
            // Send email
            mail($to, $subject, $message, $headers);
            
            echo "An email has been sent to $email with instructions to reset your password.";
        } else {
            header("Location: forgot_password_form.php?error=Email%20not%20found");
        }
    } else {
        header("Location: forgot_password_form.php?error=Please%20enter%20your%20email");
    }
}
?>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'mydatabase';

// Connect to database
$conn = new mysqli($host, $username, $password, $dbname);
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

if (isset($_GET['token']) && !empty($_GET['token'])) {
    $token = mysqli_real_escape_string($conn, $_GET['token']);
    
    // Check if token exists and is valid
    $sql = "SELECT * FROM users WHERE reset_token='$token' AND reset_expires > NOW()";
    $result = $conn->query($sql);
    
    if ($result->num_rows == 1) {
        // Token is valid, show password reset form
?>
<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <h2>Reset Password</h2>
    <?php if (isset($_GET['error'])) { ?>
        <p style="color: red;"><?php echo $_GET['error']; ?></p>
    <?php } ?>

    <form action="reset.php" method="POST">
        <input type="hidden" name="token" value="<?php echo $token; ?>">
        <label for="password">New Password:</label><br>
        <input type="password" id="password" name="password"><br>
        <label for="confirm_password">Confirm Password:</label><br>
        <input type="password" id="confirm_password" name="confirm_password"><br>
        <button type="submit">Reset Password</button>
    </form>
</body>
</html>
<?php
    } else {
        echo "Invalid or expired token. Please request a new password reset.";
    }
} elseif ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Handle password reset
    $token = mysqli_real_escape_string($conn, $_POST['token']);
    $password = mysqli_real_escape_string($conn, $_POST['password']);
    $confirm_password = mysqli_real_escape_string($conn, $_POST['confirm_password']);
    
    if ($password == $confirm_password) {
        // Hash the new password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);
        
        // Update the database
        $sql = "UPDATE users SET password='$hashed_password', reset_token='', reset_expires='0000-00-00 00:00:00' WHERE reset_token='$token'";
        $conn->query($sql);
        
        echo "Password has been reset successfully!";
    } else {
        header("Location: reset.php?token=$token&error=Passwords%20do%20not%20match");
    }
} else {
    // If no token is provided
    echo "Invalid request.";
}
?>


<?php
// Database configuration
include('db_config.php');

function forgotPassword($email) {
    global $pdo;

    // Sanitize email input
    $email = htmlspecialchars(trim($email));

    try {
        // Check if the email exists in the database
        $stmt = $pdo->prepare("SELECT id FROM users WHERE email = :email");
        $stmt->execute(['email' => $email]);
        $user = $stmt->fetch(PDO::FETCH_ASSOC);

        if (!$user) {
            return "Email does not exist!";
        }

        // Generate a temporary password reset token
        $token = bin2hex(random_bytes(32));
        $expires = date('Y-m-d H:i:s', strtotime('+1 hour'));

        // Update the user record with the new token and expiration time
        $stmt = $pdo->prepare("UPDATE users SET 
            reset_token = :token,
            reset_expires = :expires
            WHERE email = :email");
        $stmt->execute([
            'token' => $token,
            'expires' => $expires,
            'email' => $email
        ]);

        // Send the password reset email
        $to = $email;
        $subject = "Password Reset Request";
        $message = "Please click on the following link to reset your password:

";
        $message .= "http://yourwebsite.com/reset_password.php?token=" . $token . "

";
        $message .= "This link will expire in 1 hour.";

        if (mail($to, $subject, $message)) {
            return "Password reset email has been sent to your email address.";
        } else {
            return "Error sending email. Please try again later.";
        }

    } catch (PDOException $e) {
        return "Error: " . $e->getMessage();
    }
}

// Example usage:
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    if (!empty($_POST['email'])) {
        echo forgotPassword($_POST['email']);
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <h2>Forgot Password</h2>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <input type="email" name="email" placeholder="Enter your email address" required>
        <button type="submit">Reset Password</button>
    </form>
</body>
</html>


<?php
include('db_config.php');

if (isset($_GET['token'])) {
    $token = htmlspecialchars(trim($_GET['token']));

    try {
        // Check if the token exists and hasn't expired
        $stmt = $pdo->prepare("SELECT id, reset_token, reset_expires FROM users WHERE reset_token = :token");
        $stmt->execute(['token' => $token]);
        $user = $stmt->fetch(PDO::FETCH_ASSOC);

        if (!$user || $user['reset_expires'] < date('Y-m-d H:i:s')) {
            die("Invalid or expired password reset token.");
        }

    } catch (PDOException $e) {
        die("Error: " . $e->getMessage());
    }
} else {
    // Redirect to forgot password page if no token is provided
    header("Location: forgot_password.php");
    exit();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <?php if (isset($user)): ?>
        <h2>Reset Password</h2>
        <form action="reset_password.php?token=<?php echo $token; ?>" method="post">
            <input type="password" name="new_password" placeholder="New password" required>
            <input type="password" name="confirm_password" placeholder="Confirm password" required>
            <button type="submit">Set New Password</button>
        </form>

        <?php
        if ($_SERVER['REQUEST_METHOD'] == 'POST') {
            $newPassword = htmlspecialchars(trim($_POST['new_password']));
            $confirmPassword = htmlspecialchars(trim($_POST['confirm_password']));

            if ($newPassword !== $confirmPassword) {
                die("Passwords do not match!");
            }

            // Update the user's password
            try {
                $stmt = $pdo->prepare("UPDATE users SET 
                    password = :password,
                    reset_token = NULL,
                    reset_expires = NULL
                    WHERE reset_token = :token");
                $stmt->execute([
                    'password' => password_hash($newPassword, PASSWORD_DEFAULT),
                    'token' => $token
                ]);
                
                echo "Password has been successfully updated!";
                header("Location: login.php");
                exit();
            } catch (PDOException $e) {
                die("Error updating password: " . $e->getMessage());
            }
        }
        ?>
    <?php endif; ?>
</body>
</html>


<?php
session_start();
require_once 'db_connect.php'; // Include your database connection file

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    if (!isset($_POST['email'])) {
        header("Location: forgot_password_form.php");
        exit();
    }

    $email = $_POST['email'];

    try {
        // Check if user exists
        $stmt = $conn->prepare("SELECT id, username FROM users WHERE email = ?");
        $stmt->execute([$email]);
        $result = $stmt->fetch(PDO::FETCH_ASSOC);

        if (!$result) {
            // User not found
            $_SESSION['status'] = "error";
            $_SESSION['message'] = "Email address not found in our records.";
            header("Location: forgot_password_form.php");
            exit();
        }

        $userId = $result['id'];
        $username = $result['username'];

        // Generate temporary password
        $tempPassword = generateTempPassword();

        // Update user's password
        $stmt = $conn->prepare("UPDATE users SET password = ? WHERE id = ?");
        $stmt->execute([$tempPassword, $userId]);

        // Send email
        $to = $email;
        $subject = "Your Temporary Password";
        $message = "Dear " . $username . ",

Your temporary password is: " . $tempPassword . "

Please log in and change your password immediately.

Best regards,
The Team";

        if (mail($to, $subject, $message)) {
            $_SESSION['status'] = "success";
            $_SESSION['message'] = "A temporary password has been sent to your email address.";
        } else {
            $_SESSION['status'] = "error";
            $_SESSION['message'] = "Failed to send the temporary password. Please try again later.";
        }

    } catch (Exception $e) {
        // Handle any exceptions
        $_SESSION['status'] = "error";
        $_SESSION['message'] = "An error occurred while processing your request. Please try again later.";
        error_log("Forgot Password Error: " . $e->getMessage());
    }

    header("Location: login.php");
    exit();
}

function generateTempPassword() {
    $chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*';
    $length = 12;
    $password = '';
    
    for ($i = 0; $i < $length; $i++) {
        $randomIndex = random_int(0, strlen($chars) - 1);
        $password .= $chars[$randomIndex];
    }
    
    return $password;
}
?>


<?php
include('db_connection.php');

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $email = filter_var($_POST['email'], FILTER_VALIDATE_EMAIL);

    if (!$email) {
        header("Location: forgot_password.php?error=Invalid email format");
        exit();
    }

    // Check if the email exists in the database
    $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
    $stmt->bind_param("s", $email);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows === 0) {
        header("Location: forgot_password.php?error=Email not found");
        exit();
    }

    // Generate a reset token
    $token = bin2hex(random_bytes(16));
    $expires = date('Y-m-d H:i:s', strtotime('+1 hour'));

    // Update the user's record with the new token and expiration time
    $stmt = $conn->prepare("UPDATE users SET reset_token = ?, reset_expires = ? WHERE email = ?");
    $stmt->bind_param("sss", $token, $expires, $email);
    $stmt->execute();

    // Send the password reset link to the user's email
    $to = $email;
    $subject = "Password Reset Request";
    $message = "Please click the following link to reset your password: 

";
    $message .= "http://yourdomain.com/reset_password.php?token=" . $token;
    $headers = "From: no-reply@yourdomain.com";

    if (mail($to, $subject, $message, $headers)) {
        header("Location: forgot_password.php?error=Password reset link sent to your email");
    } else {
        header("Location: forgot_password.php?error=Failed to send password reset link");
    }
}
?>


<?php
include('db_connection.php');

if (!isset($_GET['token'])) {
    die("Invalid request");
}

$token = $_GET['token'];
?>
<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <h2>Reset Password</h2>
    <?php if (isset($_GET['error'])) { ?>
        <p style="color: red;"><?php echo $_GET['error']; ?></p>
    <?php } ?>

    <form action="reset_password_process.php" method="post">
        <input type="hidden" name="token" value="<?php echo $token; ?>">
        <input type="password" name="new_password" placeholder="Enter new password" required><br><br>
        <input type="password" name="confirm_password" placeholder="Confirm new password" required><br><br>
        <button type="submit">Reset Password</button>
    </form>
</body>
</html>


<?php
include('db_connection.php');

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $token = $_POST['token'];
    $new_password = $_POST['new_password'];
    $confirm_password = $_POST['confirm_password'];

    // Validate token and check if it has expired
    $stmt = $conn->prepare("SELECT id, reset_expires FROM users WHERE reset_token = ?");
    $stmt->bind_param("s", $token);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows === 0) {
        header("Location: reset_password.php?token=$token&error=Invalid token");
        exit();
    }

    $user = $result->fetch_assoc();
    if (strtotime($user['reset_expires']) < time()) {
        header("Location: reset_password.php?token=$token&error=Token expired");
        exit();
    }

    // Validate new password
    if ($new_password !== $confirm_password) {
        header("Location: reset_password.php?token=$token&error=Passwords do not match");
        exit();
    }

    // Check if the password meets complexity requirements
    if (strlen($new_password) < 8 || !preg_match('/[A-Z]/', $new_password) || !preg_match('/\d/', $new_password)) {
        header("Location: reset_password.php?token=$token&error=Password must be at least 8 characters long and contain at least one uppercase letter and one number");
        exit();
    }

    // Hash the new password
    $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);

    // Update the user's password and invalidate the reset token
    $stmt = $conn->prepare("UPDATE users SET password = ?, reset_token = NULL, reset_expires = NULL WHERE id = ?");
    $stmt->bind_param("si", $hashed_password, $user['id']);
    $stmt->execute();

    // Redirect to login page or show success message
    header("Location: login.php?message=Password reset successful");
}
?>


<?php
session_start();
include('db_connection.php'); // Include your database connection

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $email = mysqli_real_escape_string($conn, $_POST['email']);
    
    // Check if email exists in the database
    $sql = "SELECT id FROM users WHERE email = '$email'";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) == 0) {
        die("Email does not exist in our records!");
    }
    
    // Generate a random token
    $token = bin2hex(random_bytes(16)); // 32-character string
    
    // Set expiration time (e.g., 1 hour from now)
    $expiration_time = date('Y-m-d H:i:s', strtotime('+1 hour'));
    
    // Update the users table with the new token and expiration
    $update_sql = "UPDATE users SET reset_token = '$token', reset_expires = '$expiration_time' WHERE email = '$email'";
    mysqli_query($conn, $update_sql);
    
    // Send reset password email
    $subject = 'Password Reset Request';
    $message = "Please click the following link to reset your password:

";
    $message .= "http://".$_SERVER['HTTP_HOST']."/reset_password.php?token=".$token."&email=".$email;
    $headers = 'From: no-reply@example.com' . "\r
" .
               'Reply-To: no-reply@example.com' . "\r
" .
               'X-Mailer: PHP/' . phpversion();
    
    if (mail($email, $subject, $message, $headers)) {
        echo "An email has been sent to your address. Please check your inbox.";
    } else {
        die("Failed to send password reset email!");
    }
}
?>


<?php
session_start();
include('db_connection.php'); // Include your database connection

if (!isset($_GET['token']) || !isset($_GET['email'])) {
    die("Invalid link or expired request!");
}

$token = mysqli_real_escape_string($conn, $_GET['token']);
$email = mysqli_real_escape_string($conn, $_GET['email']);

// Check if token is valid and not expired
$sql = "SELECT id FROM users WHERE email = '$email' AND reset_token = '$token' AND reset_expires > NOW()";
$result = mysqli_query($conn, $sql);

if (mysqli_num_rows($result) == 0) {
    die("Invalid or expired password reset link!");
}

// If token is valid, show password reset form
?>

<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <h2>Reset Password</h2>
    <form action="reset_password.php" method="post">
        <input type="hidden" name="token" value="<?php echo $token; ?>">
        <input type="hidden" name="email" value="<?php echo $email; ?>">
        <input type="password" name="new_password" placeholder="Enter new password" required><br>
        <input type="password" name="confirm_password" placeholder="Confirm new password" required><br>
        <button type="submit">Reset Password</button>
    </form>
</body>
</html>

<?php
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $token = $_POST['token'];
    $email = $_POST['email'];
    $new_password = mysqli_real_escape_string($conn, $_POST['new_password']);
    $confirm_password = mysqli_real_escape_string($conn, $_POST['confirm_password']);

    if ($new_password !== $confirm_password) {
        die("Passwords do not match!");
    }

    // Check if token is still valid
    $sql = "SELECT id FROM users WHERE email = '$email' AND reset_token = '$token' AND reset_expires > NOW()";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) == 0) {
        die("Invalid or expired password reset link!");
    }

    // Hash the new password
    $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);

    // Update the user's password and clear the token
    $update_sql = "UPDATE users SET password = '$hashed_password', reset_token = '', reset_expires = '0000-00-00 00:00:00' WHERE email = '$email'";
    mysqli_query($conn, $update_sql);

    // Destroy the session and redirect to login
    session_unset();
    session_destroy();
    header("Location: login.php?success=Password reset successful!");
    exit();
}
?>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'root';
$password = '';

try {
    // Connect to the database
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        $email = $_POST['email'];
        
        // Validate input
        if (empty($email)) {
            die("Email is required");
        }
        
        // Check if email exists in the database
        $stmt = $conn->prepare("SELECT id FROM users WHERE email = :email");
        $stmt->bindParam(':email', $email);
        $stmt->execute();
        
        if ($stmt->rowCount() == 0) {
            die("Email not found in our records");
        }
        
        // Generate a temporary password
        $tempPassword = generateTempPassword(12); // Length of 12 characters
        
        // Update the database with the temporary password
        $updateStmt = $conn->prepare("UPDATE users SET password = :password WHERE email = :email");
        $updateStmt->bindParam(':email', $email);
        $updateStmt->bindParam(':password', $tempPassword);
        $updateStmt->execute();
        
        // Send email with the temporary password
        $to = $email;
        $subject = "Your Temporary Password";
        $message = "Dear User,

Your temporary password is: $tempPassword

Please login and change your password immediately.

Best regards,
The Admin Team";
        $headers = "From: admin@example.com" . "\r
";
        
        if (mail($to, $subject, $message, $headers)) {
            echo "A temporary password has been sent to your email address.";
        } else {
            die("Failed to send the password recovery email");
        }
    }

} catch(PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

// Function to generate a temporary password
function generateTempPassword($length = 8) {
    $chars = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^&*()";
    $password = substr(str_shuffle($chars), 0, $length);
    return $password;
}
?>


<?php
include 'db_connection.php'; // Include your database connection file

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = $_POST['email'];
    
    // Validate input
    if (empty($email)) {
        die("Email is required!");
    }

    // Prepare and execute the SQL query to check if the user exists
    $stmt = $conn->prepare("SELECT id, username FROM users WHERE email = ?");
    $stmt->bind_param("s", $email);
    $stmt->execute();
    
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        // Generate a unique reset token
        $token = md5(uniqid() . time());
        $expires = date('Y-m-d H:i:s', time() + 3600); // Token expires after 1 hour

        // Update the database with the new token and expiration time
        $updateStmt = $conn->prepare("UPDATE users SET reset_token = ?, reset_expires = ? WHERE email = ?");
        $updateStmt->bind_param("sss", $token, $expires, $email);
        
        if ($updateStmt->execute()) {
            // Send password reset email
            $to = $email;
            $subject = "Password Reset Request";
            $message = "
                <html>
                    <body>
                        <h2>Password Reset</h2>
                        <p>Please click the following link to reset your password:</p>
                        <a href='http://yourwebsite.com/reset_password.php?token=$token&email=$email'>Reset Password</a><br>
                        <p>If you did not request this password reset, please ignore this email.</p>
                    </body>
                </html>
            ";
            $headers = "MIME-Version: 1.0" . "\r
";
            $headers .= "Content-type:text/html;charset=UTF-8" . "\r
";
            $headers .= "From: yourwebsite.com <noreply@yourwebsite.com>" . "\r
";

            if (mail($to, $subject, $message, $headers)) {
                echo "An email has been sent to you with instructions on how to reset your password.";
            } else {
                die("Failed to send the reset link. Please try again.");
            }
        } else {
            die("Error resetting password: " . $updateStmt->error);
        }
    } else {
        die("Email does not exist in our records!");
    }

    // Close database connections
    $stmt->close();
    $conn->close();
}
?>


<?php
include 'db_connection.php';

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $token = $_GET['token'];
    $email = $_GET['email'];
    $newPassword = $_POST['password'];
    $confirmPassword = $_POST['confirm_password'];

    // Check if token is valid
    $stmt = $conn->prepare("SELECT id FROM users WHERE reset_token = ? AND reset_expires > NOW() AND email = ?");
    $stmt->bind_param("ss", $token, $email);
    $stmt->execute();

    $result = $stmt->get_result();

    if ($result->num_rows === 1) {
        // Validate password
        if (empty($newPassword)) {
            die("Please enter a new password!");
        }
        
        if ($newPassword !== $confirmPassword) {
            die("Passwords do not match!");
        }

        // Hash the password before storing it
        $hashedPassword = password_hash($newPassword, PASSWORD_DEFAULT);

        // Update the user's password and reset token in the database
        $updateStmt = $conn->prepare("UPDATE users SET password = ?, reset_token = null WHERE email = ?");
        $updateStmt->bind_param("ss", $hashedPassword, $email);

        if ($updateStmt->execute()) {
            echo "Your password has been successfully changed. Please <a href='login.php'>click here</a> to login.";
        } else {
            die("Error changing password: " . $updateStmt->error);
        }
    } else {
        die("Invalid or expired reset link.");
    }

    // Close database connections
    $stmt->close();
    $conn->close();
}
?>


<?php
session_start();
require_once 'database_connection.php';

function sendResetEmail($email) {
    $token = bin2hex(random_bytes(16));
    $expires = date('Y-m-d H:i:s', strtotime('+1 hour'));
    
    // Update the database with the reset token and expiration time
    try {
        $stmt = $pdo->prepare("UPDATE users SET reset_token = ?, reset_expires = ? WHERE email = ?");
        $stmt->execute([$token, $expires, $email]);
        
        // Send the reset email
        $to = $email;
        $subject = "Password Reset Request";
        $message = "
            <html>
                <body>
                    <p>Please click the following link to reset your password:</p>
                    <a href='http://example.com/reset.php?token=$token'>Reset Password</a><br>
                    <p>If you did not request this password reset, please ignore this email.</p>
                </body>
            </html>
        ";
        $headers = "MIME-Version: 1.0" . "\r
";
        $headers .= "Content-type:text/html;charset=UTF-8" . "\r
";
        $headers .= "From: <noreply@example.com>" . "\r
";
        
        mail($to, $subject, $message, $headers);
        
        return true;
    } catch (PDOException $e) {
        die("Could not send reset email: " . $e->getMessage());
    }
}

function generateRandomPassword() {
    $length = 12;
    $chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^&*()';
    $random_password = substr(str_shuffle($chars), 0, $length);
    return $random_password;
}

function resetPassword($token, $new_password) {
    try {
        $stmt = $pdo->prepare("SELECT id FROM users WHERE reset_token = ? AND reset_expires > NOW()");
        $stmt->execute([$token]);
        
        if ($stmt->rowCount() == 1) {
            $user_id = $stmt->fetchColumn();
            
            // Update the user's password
            $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);
            $update_stmt = $pdo->prepare("UPDATE users SET password = ?, reset_token = NULL, reset_expires = NULL WHERE id = ?");
            $update_stmt->execute([$hashed_password, $user_id]);
            
            return true;
        } else {
            // Token is invalid or expired
            return false;
        }
    } catch (PDOException $e) {
        die("Could not reset password: " . $e->getMessage());
    }
}

// Example usage:
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    if (!empty($_POST['email'])) {
        sendResetEmail($_POST['email']);
        echo "A password reset link has been sent to your email.";
    } elseif (!empty($_GET['token']) && !empty($_POST['new_password'])) {
        if (resetPassword($_GET['token'], $_POST['new_password'])) {
            echo "Your password has been successfully updated!";
        } else {
            echo "Invalid or expired token. Please request a new reset link.";
        }
    }
}
?>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'mydatabase';

// Create database connection
$conn = mysqli_connect($host, $username, $password, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function sendResetEmail($email, $resetToken) {
    // Email content
    $to = $email;
    $subject = 'Password Reset Request';
    $message = '
        <html>
            <head></head>
            <body>
                <h2>Password Reset</h2>
                <p>Please click the link below to reset your password:</p>
                <a href="http://example.com/reset-password.php?token=' . $resetToken . '">Reset Password</a><br><br>
                <small>If you did not request this password reset, please ignore this email.</small>
            </body>
        </html>
    ';
    $headers = 'MIME-Version: 1.0' . "\r
";
    $headers .= 'Content-type: text/html; charset=UTF-8' . "\r
";
    
    // Send email
    mail($to, $subject, $message, $headers);
}

function generateResetToken() {
    return bin2hex(random_bytes(16));
}

// Check if form is submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $email = mysqli_real_escape_string($conn, $_POST['email']);
    
    // Check if email exists in database
    $sql = "SELECT id FROM users WHERE email='$email'";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) == 1) {
        $resetToken = generateResetToken();
        
        // Store token and expiration time in database
        $expires = date('Y-m-d H:i:s', strtotime('+2 hours'));
        $sql = "INSERT INTO password_resets (user_id, token, expires) VALUES ('$email', '$resetToken', '$expires')";
        mysqli_query($conn, $sql);
        
        // Send reset email
        sendResetEmail($email, $resetToken);
        
        echo 'A password reset link has been sent to your email address.';
    } else {
        echo 'Email not found in our database.';
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <h2>Forgot Password</h2>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <label for="email">Enter your email:</label><br>
        <input type="email" id="email" name="email"><br><br>
        <input type="submit" value="Reset Password">
    </form>
</body>
</html>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'mydatabase';

$conn = mysqli_connect($host, $username, $password, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $token = $_POST['token'];
    $newPassword = $_POST['new_password'];
    $confirmPassword = $_POST['confirm_password'];
    
    // Check if token is valid and not expired
    $sql = "SELECT * FROM password_resets WHERE token='$token'";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) == 1) {
        $row = mysqli_fetch_assoc($result);
        
        // Check if token is expired
        $expires = strtotime($row['expires']);
        if ($expires < time()) {
            echo 'This password reset link has expired.';
            exit;
        }
        
        // Validate passwords
        if ($newPassword != $confirmPassword) {
            echo 'Passwords do not match.';
            exit;
        }
        
        // Update user's password
        $userId = $row['user_id'];
        $hashedPassword = password_hash($newPassword, PASSWORD_DEFAULT);
        $sql = "UPDATE users SET password='$hashedPassword' WHERE id='$userId'";
        mysqli_query($conn, $sql);
        
        // Delete the token from the database
        $sql = "DELETE FROM password_resets WHERE token='$token'";
        mysqli_query($conn, $sql);
        
        echo 'Your password has been successfully reset.';
    } else {
        echo 'Invalid or expired password reset link.';
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <?php
    if (isset($_GET['token'])) {
        $token = $_GET['token'];
        
        // Verify token exists in database
        $sql = "SELECT * FROM password_resets WHERE token='$token'";
        $result = mysqli_query($conn, $sql);
        
        if (mysqli_num_rows($result) == 1) {
            echo '<h2>Reset Password</h2>';
            echo '<form action="' . $_SERVER['PHP_SELF'] . '" method="post">';
            echo '<input type="hidden" name="token" value="' . $token . '">';
            echo '<label for="new_password">New Password:</label><br>';
            echo '<input type="password" id="new_password" name="new_password"><br><br>';
            echo '<label for="confirm_password">Confirm Password:</label><br>';
            echo '<input type="password" id="confirm_password" name="confirm_password"><br><br>';
            echo '<input type="submit" value="Change Password">';
            echo '</form>';
        } else {
            echo 'Invalid or expired password reset link.';
        }
    } else {
        echo 'No token provided. Please request a new password reset.';
    }
    ?>
</body>
</html>


<?php
session_start();

// Database connection
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'mydatabase';

$conn = new mysqli($host, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Check if form is submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST') {

    // Get user input
    $email = $_POST['email'];
    
    // Prepare and bind the statement to prevent SQL injection
    $stmt = $conn->prepare("SELECT id, username FROM users WHERE email = ?");
    $stmt->bind_param('s', $email);
    $stmt->execute();
    
    // Store result in a variable
    $result = $stmt->get_result();
    
    if ($result->num_rows == 0) {
        // Email not found
        $_SESSION['message'] = "Email address not found. Please try again.";
        header("Location: forgot_password.php");
        exit();
    } else {
        // Generate temporary password
        $tempPassword = generateTempPassword();
        
        // Hash the temporary password
        $hashedPassword = password_hash($tempPassword, PASSWORD_DEFAULT);
        
        // Update user's password in database
        $updateStmt = $conn->prepare("UPDATE users SET password = ? WHERE email = ?");
        $updateStmt->bind_param('ss', $hashedPassword, $email);
        $updateStmt->execute();
        
        // Send temporary password to user's email
        $to = $email;
        $subject = "Your Temporary Password";
        $message = "
            <html>
                <head></head>
                <body>
                    <p>Your temporary password is: </p>
                    <h3 style='background-color:#f0f0f0; padding:10px; border-radius:5px;'>$tempPassword</h3><br>
                    <p>Please login and change your password immediately upon your first login.</p>
                </body>
            </html>";
        $headers = "MIME-Version: 1.0" . "\r
";
        $headers .= "Content-type:text/html;charset=UTF-8" . "\r
";
        
        // Send email
        if (mail($to, $subject, $message, $headers)) {
            $_SESSION['message'] = "A temporary password has been sent to your email address.";
            header("Location: forgot_password.php");
            exit();
        } else {
            $_SESSION['message'] = "An error occurred while sending the password. Please try again later.";
            header("Location: forgot_password.php");
            exit();
        }
    }
}

// Function to generate temporary password
function generateTempPassword() {
    $chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^&*';
    $length = 12;
    $password = '';
    
    for ($i = 0; $i < $length; $i++) {
        $randomIndex = rand(0, strlen($chars) - 1);
        $password .= $chars[$randomIndex];
    }
    
    return $password;
}

$conn->close();
?>


<?php
// Include database configuration
include('db_config.php');

if (!isset($_GET['token'])) {
    die("No token provided");
}

$token = $_GET['token'];

// Check if token exists and is valid
$stmt = $conn->prepare("
    SELECT 
        id, 
        email,
        reset_expires 
    FROM users 
    WHERE reset_token = ?
");
$stmt->execute([$token]);
$row = $stmt->fetch(PDO::FETCH_ASSOC);

if (!$row) {
    die("Invalid or expired token");
}

// Check if token has expired
$expires = strtotime($row['reset_expires']);
$current_time = time();

if ($current_time > $expires) {
    die("Token has expired. Please request a new password reset.");
}

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $new_password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];
    
    if (empty($new_password) || empty($confirm_password)) {
        echo "<p class='error'>Please fill in all fields</p>";
        exit();
    }
    
    if ($new_password !== $confirm_password) {
        echo "<p class='error'>Passwords do not match</p>";
        exit();
    }
    
    // Update password
    $hash = password_hash($new_password, PASSWORD_DEFAULT);
    
    $stmt = $conn->prepare("
        UPDATE users 
        SET 
            password = ?, 
            reset_token = NULL,
            reset_expires = NULL
        WHERE id = ?
    ");
    $stmt->execute([$hash, $row['id']]);
    
    echo "<p>Password updated successfully. You can now <a href='login.php'>log in</a>.</p>";
}
?>

<h2>Reset Password</h2>
<form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
    <input type="password" name="password" placeholder="New Password" required>
    <input type="password" name="confirm_password" placeholder="Confirm Password" required>
    <button type="submit">Reset Password</button>
</form>


<?php
$host = 'localhost';
$db_name = 'your_database';
$username = 'root'; // Change to your database username
$password = '';      // Change to your database password

try {
    $conn = new PDO("mysql:host=$host;dbname=$db_name", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}
?>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'mydatabase';

// Create connection
$conn = new mysqli($host, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Session start
session_start();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <?php
    if (isset($_POST['reset'])) {
        // Retrieve email from form
        $email = $_POST['email'];
        
        // Check if email exists in database
        $sql = "SELECT * FROM users WHERE email='$email'";
        $result = $conn->query($sql);
        
        if ($result->num_rows > 0) {
            // Generate a unique token for password reset
            $token = bin2hex(random_bytes(32));
            
            // Store the token and expiration time in database
            $expires = date('Y-m-d H:i:s', strtotime('+1 hour'));
            $sql = "INSERT INTO password_resets (email, token, expires) VALUES ('$email', '$token', '$expires')";
            if ($conn->query($sql)) {
                // Send email to user with reset link
                $to = $email;
                $subject = 'Password Reset Request';
                $message = '
                    <html>
                        <body>
                            <h2>Password Reset</h2>
                            <p>Please click the following link to reset your password:</p>
                            <a href="http://localhost/reset_password.php?token=' . $token . '">Reset Password</a>
                            <br>
                            <small>This link will expire in 1 hour.</small>
                        </body>
                    </html>
                ';
                $headers = "MIME-Version: 1.0" . "\r
";
                $headers .= "Content-type:text/html;charset=UTF-8" . "\r
";
                $headers .= "From: noreply@example.com" . "\r
";
                
                if (mail($to, $subject, $message, $headers)) {
                    echo '<p>Email sent! Please check your inbox to reset your password.</p>';
                } else {
                    echo '<p>Error sending email. Please try again later.</p>';
                }
            }
        } else {
            echo '<p>Email not found in our records. Please try again with a valid email address.</p>';
        }
    }
    
    // Reset password form
    if (isset($_GET['token'])) {
        $token = $_GET['token'];
        
        // Check if token exists and is valid
        $sql = "SELECT * FROM password_resets WHERE token='$token'";
        $result = $conn->query($sql);
        
        if ($result->num_rows > 0) {
            $row = $result->fetch_assoc();
            if (strtotime($row['expires']) < time()) {
                echo '<p>Token has expired. Please request a new password reset.</p>';
            } else {
                // Display reset form
                echo '
                    <form method="post" action="reset_password.php">
                        <input type="hidden" name="token" value="' . $token . '">
                        <label for="new_password">New Password:</label>
                        <input type="password" id="new_password" name="new_password" required><br>
                        <label for="confirm_password">Confirm Password:</label>
                        <input type="password" id="confirm_password" name="confirm_password" required><br>
                        <input type="submit" name="reset_password" value="Reset Password">
                    </form>
                ';
            }
        } else {
            echo '<p>Invalid or expired token.</p>';
        }
    }
    
    // Process password reset
    if (isset($_POST['reset_password'])) {
        $token = $_POST['token'];
        $new_password = $_POST['new_password'];
        $confirm_password = $_POST['confirm_password'];
        
        if ($new_password === $confirm_password) {
            // Update user's password
            $sql = "SELECT email FROM password_resets WHERE token='$token'";
            $result = $conn->query($sql);
            
            if ($result->num_rows > 0) {
                $row = $result->fetch_assoc();
                $email = $row['email'];
                
                // Hash the new password
                $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);
                
                // Update users table
                $sql = "UPDATE users SET password='$hashed_password' WHERE email='$email'";
                if ($conn->query($sql)) {
                    // Delete the token from password_resets table
                    $sql = "DELETE FROM password_resets WHERE token='$token'";
                    if ($conn->query($sql)) {
                        echo '<p>Password reset successful! Please login with your new password.</p>';
                    }
                } else {
                    echo '<p>Error resetting password. Please try again later.</p>';
                }
            }
        } else {
            echo '<p>Passwords do not match. Please try again.</p>';
        }
    }
    
    // Display the initial forgot password form
    if (!isset($_POST['reset']) && !isset($_GET['token'])) {
        echo '
            <form method="post">
                <input type="email" name="email" placeholder="Enter your email address" required><br>
                <input type="submit" name="reset" value="Reset Password">
            </form>
        ';
    }
    
    $conn->close();
    ?>
</body>
</html>


<?php
// Database connection details
$host = 'localhost';
$username_db = 'root';
$password_db = '';
$database = 'my_database';

// Create connection
$conn = new mysqli($host, $username_db, $password_db, $database);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

if (isset($_POST['email'])) {
    $email = $_POST['email'];
    
    // Check if email exists in the database
    $sql = "SELECT * FROM users WHERE email = '" . $email . "'";
    $result = $conn->query($sql);

    if ($result->num_rows == 0) {
        echo "Email not found!";
    } else {
        // Generate a new random password
        $new_password = substr(sha1(rand()), 0, 8);
        
        // Update the database with the new password
        $sql = "UPDATE users SET password = '" . md5($new_password) . "' WHERE email = '" . $email . "'";
        if ($conn->query($sql)) {
            // Send the new password to the user's email
            $to = $email;
            $subject = "Your New Password";
            $message = "Dear User,

Your new password is: " . $new_password . "

Please login with this new password and change it as soon as possible.";
            
            if (mail($to, $subject, $message)) {
                echo "New password has been sent to your email!";
            } else {
                echo "Error sending the email!";
            }
        } else {
            echo "Error updating password!";
        }
    }
}

$conn->close();
?>


<?php
// Create connection
$conn = new mysqli($host, $username_db, $password_db, $database);

if (isset($_POST['email'])) {
    $email = $_POST['email'];
    
    // Check if email exists in the database using prepared statement
    $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
    $stmt->bind_param('s', $email);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows == 0) {
        echo "Email not found!";
    } else {
        // Generate a new random password
        $new_password = substr(sha1(rand()), 0, 8);
        
        // Update the database with the new password using prepared statement
        $hashed_password = md5($new_password); // Never use MD5 in production!
        $stmt = $conn->prepare("UPDATE users SET password = ? WHERE email = ?");
        $stmt->bind_param('ss', $hashed_password, $email);
        
        if ($stmt->execute()) {
            // Send the new password to the user's email
            $to = $email;
            $subject = "Your New Password";
            $message = "Dear User,

Your new password is: " . $new_password . "

Please login with this new password and change it as soon as possible.";
            
            if (mail($to, $subject, $message)) {
                echo "New password has been sent to your email!";
            } else {
                echo "Error sending the email!";
            }
        } else {
            echo "Error updating password!";
        }
    }

    $stmt->close();
}

$conn->close();
?>


<?php
// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$database = 'your_database';

$conn = mysqli_connect($host, $username, $password, $database);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Error reporting
ini_set('display_errors', 1);
error_reporting(E_ALL);

// Session start
session_start();
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Forgot Password</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 20px;
            background-color: #f5f5f5;
        }
        .container {
            max-width: 400px;
            margin: 0 auto;
            padding: 20px;
            background-color: white;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }
        .form-group {
            margin-bottom: 15px;
        }
        input[type="text"], input[type="password"] {
            width: 100%;
            padding: 8px;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-sizing: border-box;
        }
        button {
            background-color: #4CAF50;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
        button:hover {
            background-color: #45a049;
        }
        .error {
            color: red;
            margin-top: 5px;
        }
        .success {
            color: green;
            margin-top: 5px;
        }
    </style>
</head>
<body>
    <div class="container">
        <?php
        if (isset($_POST['reset'])) {
            // Check if email/username is provided
            $email = $_POST['email'];
            
            if (empty($email)) {
                echo "<div class='error'>Please enter your email or username!</div>";
                exit();
            }
            
            // Sanitize input
            $email = mysqli_real_escape_string($conn, trim($email));
            
            // Check if user exists
            $query = "SELECT * FROM users WHERE email='$email' OR username='$email'";
            $result = mysqli_query($conn, $query);
            
            if (mysqli_num_rows($result) == 0) {
                echo "<div class='error'>Email/Username not found!</div>";
                exit();
            } else {
                // Generate reset token
                $reset_token = bin2hex(random_bytes(16));
                $expires = time() + 3600; // Token expires after 1 hour
                
                // Update database with new token and expiration time
                $update_query = "UPDATE users SET reset_token='$reset_token', reset_expires='$expires' WHERE email='$email'";
                mysqli_query($conn, $update_query);
                
                // Send email to user
                require 'PHPMailer/PHPMailer.php';
                require 'PHPMailer/SMTP.php';
                require 'PHPMailer/Exception.php';

                try {
                    $mail = new PHPMailer\PHPMailer\PHPMailer();
                    $mail->isSMTP();
                    $mail->Host = 'smtp.example.com'; // Replace with your SMTP server
                    $mail->SMTPAuth = true;
                    $mail->Username = 'your_email@example.com'; // Your email username
                    $mail->Password = 'your_password'; // Your email password
                    $mail->SMTPSecure = 'tls';
                    $mail->Port = 587;

                    $mail->setFrom('your_email@example.com', 'Your Name');
                    $mail->addAddress($email, $user_name);
                    $mail->Subject = 'Password Reset Request';
                    
                    $reset_link = "http://".$_SERVER['HTTP_HOST']."/reset_password.php?token=".$reset_token;
                    $body = "You have requested a password reset.<br><br>";
                    $body .= "Please click the following link to reset your password: ";
                    $body .= "<a href='".$reset_link."'>".$reset_link."</a><br><br>";
                    $body .= "If you didn't request this, please ignore this email.";
                    
                    $mail->Body = $body;
                    $mail->isHTML(true);
                    $mail->send();
                    
                    echo "<div class='success'>We've sent a password reset link to your email. Please check your inbox!</div>";
                } catch (Exception $e) {
                    echo "<div class='error'>Message could not be sent. Mailer Error: " . $e->getMessage() . "</div>";
                }
            }
        } else {
            // Show the forgot password form
            ?>
            <h2>Forgot Password</h2>
            <form method="post" action="">
                <div class="form-group">
                    <input type="text" name="email" placeholder="Enter your email or username" required>
                </div>
                <button type="submit" name="reset">Reset Password</button>
            </form>
            <?php
        }
        ?>
    </div>
</body>
</html>

<?php
// Close database connection
mysqli_close($conn);
?>


<?php
session_start();
require_once 'config.php'; // Your database connection

if (isset($_GET['token'])) {
    $token = mysqli_real_escape_string($conn, $_GET['token']);
    
    // Check if token exists and is not expired
    $query = "SELECT * FROM users WHERE reset_token='$token' AND reset_expires > CURRENT_TIMESTAMP";
    $result = mysqli_query($conn, $query);
    
    if (mysqli_num_rows($result) == 0) {
        die("Invalid or expired reset link!");
    }
} else {
    die("No token provided!");
}

// Process new password
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $token = mysqli_real_escape_string($conn, $_GET['token']);
    $new_password = trim($_POST['password']);
    $confirm_password = trim($_POST['cpassword']);
    
    if ($new_password != $confirm_password) {
        die("Passwords do not match!");
    }
    
    if (empty($new_password)) {
        die("Password cannot be empty!");
    }
    
    // Hash the new password
    $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);
    
    // Update the database
    $update_query = "UPDATE users SET password='$hashed_password', reset_token='', reset_expires=0 WHERE reset_token='$token'";
    mysqli_query($conn, $update_query);
    
    echo "Password updated successfully! <a href='login.php'>Click here to login</a>";
    
} else {
    // Show password reset form
    ?>
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <title>Reset Password</title>
        <style>
            body { ... } // Same as above
        </style>
    </head>
    <body>
        <div class="container">
            <h2>Reset Your Password</h2>
            <form method="post" action="">
                <div class="form-group">
                    <input type="password" name="password" placeholder="Enter new password" required>
                </div>
                <div class="form-group">
                    <input type="password" name="cpassword" placeholder="Confirm password" required>
                </div>
                <button type="submit">Reset Password</button>
            </form>
        </div>
    </body>
    </html>
    <?php
}
?>



<?php
// forgot_password.php

// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'your_database';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Get email from form
$user_email = isset($_POST['user_email']) ? $_POST['user_email'] : '';

if (empty($user_email)) {
    echo "Please enter your email address.";
    exit();
}

// Check if email exists in the database
$sql = "SELECT id, password FROM users WHERE email = ?";
$stmt = $conn->prepare($sql);
$stmt->bind_param("s", $user_email);
$stmt->execute();

$result = $stmt->get_result();
if ($result->num_rows == 0) {
    echo "No account found with this email address.";
    exit();
}

$user_data = $result->fetch_assoc();
$user_id = $user_data['id'];
$current_password = $user_data['password'];

// Generate temporary password
$temp_password = md5(uniqid() . time());
$verification_code = md5($temp_password . time());

// Update user's password and verification code in database
$update_sql = "UPDATE users SET password = ?, verification_code = ? WHERE id = ?";
$stmt = $conn->prepare($update_sql);
$stmt->bind_param("ssi", $temp_password, $verification_code, $user_id);

if ($stmt->execute()) {
    // Send email with temporary password and reset link
    $to = $user_email;
    $subject = "Password Reset Instructions";
    $message = "Dear User,

Your temporary password is: $temp_password

Please click the following link to reset your password:
http://your-site.com/reset_password.php?code=$verification_code

Best regards,
Support Team";
    $headers = "From: support@your-site.com";

    if (mail($to, $subject, $message, $headers)) {
        echo "An email has been sent to your account with a temporary password and reset instructions.";
    } else {
        echo "Failed to send the email. Please try again later.";
    }
} else {
    echo "Error updating password: " . mysqli_error($conn);
}

// Close database connection
$conn->close();
?>


<?php
// reset_password.php

session_start();

$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'your_database';

$conn = mysqli_connect($host, $username, $password, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Get verification code from URL
$verification_code = isset($_GET['code']) ? $_GET['code'] : '';

if (empty($verification_code)) {
    header("Location: forgot_password_form.html");
    exit();
}

// Check if the verification code exists in the database
$sql = "SELECT id, email FROM users WHERE verification_code = ?";
$stmt = $conn->prepare($sql);
$stmt->bind_param("s", $verification_code);
$stmt->execute();

$result = $stmt->get_result();
if ($result->num_rows == 0) {
    echo "Invalid reset link. Please request a new password reset.";
    exit();
}

$user_data = $result->fetch_assoc();
$user_id = $user_data['id'];
$user_email = $user_data['email'];

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get new password from form
    $new_password = isset($_POST['new_password']) ? $_POST['new_password'] : '';
    if (empty($new_password)) {
        echo "Please enter a new password.";
        exit();
    }

    // Update the user's password
    $hash_password = md5($new_password); // Consider using a stronger hashing method like password_hash()
    
    $update_sql = "UPDATE users SET password = ?, verification_code = NULL WHERE id = ?";
    $stmt = $conn->prepare($update_sql);
    $stmt->bind_param("si", $hash_password, $user_id);

    if ($stmt->execute()) {
        echo "Password updated successfully!";
        header("Location: login.php");
        exit();
    } else {
        echo "Error updating password: " . mysqli_error($conn);
    }
}

?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Reset Password</title>
</head>
<body>
    <h2>Reset Password</h2>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <input type="password" name="new_password" placeholder="Enter new password" required>
        <button type="submit">Change Password</button>
    </form>
</body>
</html>

<?php
$conn->close();
?>


<?php
session_start();
include('db_connect.php');

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $email = mysqli_real_escape_string($conn, $_POST['email']);
    
    $sql = "SELECT id FROM users WHERE email='$email'";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) > 0) {
        $token = bin2hex(random_bytes(32));
        $hashedToken = password_hash($token, PASSWORD_DEFAULT);
        $expires = date('Y-m-d H:i:s', time() + 3600); // 1 hour
        
        $sql = "UPDATE users SET reset_token='$hashedToken', reset_token_expires='$expires' WHERE email='$email'";
        mysqli_query($conn, $sql);
        
        $resetLink = "http://$_SERVER[HTTP_HOST]/new_password.php?token=$token";
        $to = $email;
        $subject = 'Password Reset Request';
        $message = "Click here to reset your password: $resetLink
This link expires in 1 hour.";
        
        if (mail($to, $subject, $message)) {
            echo "Check your email for a reset link!";
        } else {
            echo "Failed to send email. Please try again.";
        }
    } else {
        echo "Email not found!";
    }
}
?>


<?php
session_start();
include('db_connect.php');

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $token = $_POST['token'];
    $new_pass = mysqli_real_escape_string($conn, $_POST['new_pass']);
    $confirm_pass = mysqli_real_escape_string($conn, $_POST['confirm_pass']);
    
    if ($new_pass != $confirm_pass) {
        die("Passwords do not match!");
    }
    
    $sql = "SELECT id, reset_token, reset_token_expires FROM users WHERE reset_token= ?";
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, 's', $token);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);
    
    if (mysqli_num_rows($result) > 0) {
        $row = mysqli_fetch_assoc($result);
        
        if ($row['reset_token_expires'] < date('Y-m-d H:i:s')) {
            die("Token expired. Request a new one.");
        }
        
        $hashedPassword = password_hash($new_pass, PASSWORD_DEFAULT);
        $sql = "UPDATE users SET password='$hashedPassword', reset_token=null, reset_token_expires=null WHERE id=".$row['id'];
        mysqli_query($conn, $sql);
        
        echo "Password updated! Redirecting to login page.";
    } else {
        die("Invalid token. Request a new one.");
    }
}
?>


<?php
session_start();
include('db_connection.php');

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = trim($_POST['email']);
    
    if (empty($email)) {
        die("Email cannot be empty.");
    }
    
    // Check user existence
    $stmt = $conn->prepare("SELECT id, username FROM users WHERE email=?");
    $stmt->bind_param("s", $email);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows == 0) {
        die("No account found with this email.");
    }
    
    // Generate token
    $token = bin2hex(random_bytes(16));
    $expires = date('Y-m-d H:i:s', time() + 3600); // Expire in 1 hour
    
    // Store token
    $stmt = $conn->prepare("INSERT INTO password_reset (user_id, token, expires) VALUES (?, ?, ?)");
    $row = $result->fetch_assoc();
    $stmt->bind_param("iss", $row['id'], $token, $expires);
    $stmt->execute();
    
    // Send email
    $to = $email;
    $subject = "Password Reset Request";
    $message = "Click this link to reset your password: http://example.com/reset_password.php?token=$token";
    mail($to, $subject, $message);
    
    echo "An email has been sent with instructions to reset your password.";
}
?>


<?php
session_start();
include('db_connection.php');

if (!isset($_GET['token'])) {
    die("Invalid request.");
}

$token = $_GET['token'];
$current_time = date('Y-m-d H:i:s');

// Check token validity
$stmt = $conn->prepare("SELECT user_id FROM password_reset WHERE token=? AND expires > ?");
$stmt->bind_param("ss", $token, $current_time);
$stmt->execute();
$result = $stmt->get_result();

if ($result->num_rows == 0) {
    die("Invalid or expired reset link.");
}

// Fetch user details
$user_id = $result->fetch_assoc()['user_id'];

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $new_password = $_POST['password'];
    
    // Update password
    $hashed_pass = password_hash($new_password, PASSWORD_DEFAULT);
    $stmt = $conn->prepare("UPDATE users SET password=? WHERE id=?");
    $stmt->bind_param("si", $hashed_pass, $user_id);
    $stmt->execute();
    
    // Clear reset token
    $stmt = $conn->prepare("DELETE FROM password_reset WHERE user_id=?");
    $stmt->bind_param("i", $user_id);
    $stmt->execute();
    
    echo "Password has been updated. Please login with your new password.";
}
?>


<?php
session_start();

// Database configuration
include('config.php');

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = mysqli_real_escape_string($conn, $_POST['email']);

    // Check if email exists in database
    $sql = "SELECT id FROM users WHERE email='$email'";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) == 0) {
        echo "Email not found. Please check your email address.";
        header("refresh:2; url=forgot-password.html");
        exit();
    }

    // Generate a random token
    $token = md5(uniqid());
    
    // Insert the token into the database with an expiration time (e.g., 2 hours)
    $expires = date('Y-m-d H:i:s', time() + 7200);
    $sql = "INSERT INTO reset_passwords (email, token, expires) VALUES ('$email', '$token', '$expires')";
    
    if (!mysqli_query($conn, $sql)) {
        die("Error: " . mysqli_error($conn));
    }

    // Send email with the password reset link
    $to = $email;
    $subject = "Password Reset Request";
    $message = "
    <html>
        <head>
            <title>Password Reset</title>
        </head>
        <body>
            <h2>Password Reset</h2>
            <p>Please click the following link to reset your password:</p>
            <a href='http://localhost/reset-password.php?token=$token'>Reset Password</a><br><br>
            <i>This link will expire in 2 hours.</i>
        </body>
    </html>";
    $headers = "MIME-Version: 1.0" . "\r
";
    $headers .= "Content-type:text/html;charset=UTF-8" . "\r
";
    $headers .= "From: <your_email@example.com>" . "\r
";

    mail($to, $subject, $message, $headers);
    
    echo "A password reset link has been sent to your email address.";
    header("refresh:2; url=forgot-password.html");
}

mysqli_close($conn);
?>


<?php
$servername = "localhost";
$username = "root"; // Your database username
$password = ""; // Your database password
$dbname = "your_database_name"; // Your database name

// Create connection
$conn = mysqli_connect($servername, $username, $password, $dbname);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}
?>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$database = 'my_database';

// Create connection
$conn = new mysqli($host, $username, $password, $database);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function generateResetToken() {
    return bin2hex(random_bytes(16));
}

// Reset token expiration time (e.g., 1 hour)
$expires = date('Y-m-d H:i:s', strtotime('+1 hour'));

// forgot-password.php - This is the initial form
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = trim($_POST['email']);
    
    if (empty($email)) {
        die("Email is required!");
    }

    // Check if email exists in database
    $stmt = $conn->prepare("SELECT id, username FROM users WHERE email = ?");
    $stmt->bind_param('s', $email);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        // Generate reset token
        $resetToken = generateResetToken();
        
        // Store token in database
        $stmt2 = $conn->prepare("INSERT INTO password_reset_tokens (user_id, token, expires) VALUES (?, ?, ?)");
        $stmt2->bind_param('iss', $result->fetch_assoc()['id'], $resetToken, $expires);
        $stmt2->execute();

        // Send email with reset link
        $to = $email;
        $subject = "Password Reset Request";
        $message = "
            <html>
                <head></head>
                <body>
                    <h2>Password Reset</h2>
                    <p>We received a request to reset your password. Click the link below to reset it:</p>
                    <a href='http://example.com/reset-password.php?token=" . $resetToken . "'>Reset Password</a>
                    <br><br>
                    <p>If you didn't request this, you can safely ignore this email.</p>
                </body>
            </html>";
        $headers = "MIME-Version: 1.0" . "\r
";
        $headers .= "Content-type:text/html;charset=UTF-8" . "\r
";
        $headers .= "From: <your_email@example.com>" . "\r
";

        mail($to, $subject, $message, $headers);

        echo "We've sent you a password reset link. Please check your email.";
    } else {
        die("Email not found in our records!");
    }
}

// reset-password.php - This is the page where users can reset their password
if (isset($_GET['token'])) {
    $resetToken = $_GET['token'];
    
    // Check if token exists and hasn't expired
    $stmt3 = $conn->prepare("SELECT user_id FROM password_reset_tokens WHERE token = ? AND expires > NOW()");
    $stmt3->bind_param('s', $resetToken);
    $stmt3->execute();
    $result2 = $stmt3->get_result();

    if ($result2->num_rows == 0) {
        die("Invalid or expired reset link!");
    }

    // If token is valid and within time limit, display password reset form
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        $userId = $result2->fetch_assoc()['user_id'];
        $newPassword = trim($_POST['password']);
        $confirmPassword = trim($_POST['confirm_password']);

        if ($newPassword != $confirmPassword) {
            die("Passwords do not match!");
        }

        // Password requirements (minimum length, etc.)
        if (strlen($newPassword) < 8) {
            die("Password must be at least 8 characters long!");
        }

        // Hash password
        $hashedPassword = password_hash($newPassword, PASSWORD_DEFAULT);

        // Update user's password
        $stmt4 = $conn->prepare("UPDATE users SET password = ? WHERE id = ?");
        $stmt4->bind_param('si', $hashedPassword, $userId);
        $stmt4->execute();

        // Delete used token
        $stmt5 = $conn->prepare("DELETE FROM password_reset_tokens WHERE token = ?");
        $stmt5->bind_param('s', $resetToken);
        $stmt5->execute();

        echo "Your password has been reset successfully!";
    }
}

// Close database connection
$conn->close();
?>


<?php
include('config.php');

if (isset($_POST['email'])) {
    $email = $_POST['email'];

    // Check if email exists in database
    $stmt = $conn->prepare("SELECT id, name FROM users WHERE email = ?");
    $stmt->bind_param("s", $email);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows == 0) {
        die("Email not found in our records.");
    }

    // Generate reset token
    $token = bin2hex(random_bytes(16));
    $expires = date('Y-m-d H:i:s', time() + 3600); // Token expires after 1 hour

    // Update database with reset token
    $stmt = $conn->prepare("UPDATE users SET reset_token = ?, reset_expires = ? WHERE email = ?");
    $stmt->bind_param("sss", $token, $expires, $email);
    $stmt->execute();

    // Send email
    $to = $email;
    $subject = "Password Reset Request";
    
    $body = "<html>
                <head>
                    <title>Password Reset</title>
                </head>
                <body>
                    <h2>Reset Your Password</h2>
                    <p>Hello,</p>
                    <p>Please click the link below to reset your password:</p>
                    <a href='http://example.com/reset-password.php?token=$token'>Reset Password</a>
                    <br><br>
                    <small>This link will expire in 1 hour.</small>
                </body>
            </html>";

    $headers = "From: no-reply@example.com\r
";
    $headers .= "Reply-To: no-reply@example.com\r
";
    $headers .= "Content-Type: text/html; charset=UTF-8\r
";

    if (mail($to, $subject, $body, $headers)) {
        echo "An email has been sent to your address with instructions on how to reset your password.";
    } else {
        die("Failed to send the email. Please try again.");
    }
}


<?php
include('config.php');

if (!isset($_GET['token']) || strlen($_GET['token']) != 32) {
    die("Invalid or missing token.");
}

$token = $_GET['token'];

// Check if token is valid and not expired
$stmt = $conn->prepare("SELECT id, email FROM users WHERE reset_token = ? AND reset_expires > NOW()");
$stmt->bind_param("s", $token);
$stmt->execute();
$result = $stmt->get_result();

if ($result->num_rows == 0) {
    die("Invalid or expired token. Please request a new password reset.");
}

$user = $result->fetch_assoc();

// If form is submitted
if (isset($_POST['password'], $_POST['confirm_password'])) {
    if ($_POST['password'] != $_POST['confirm_password']) {
        die("Passwords do not match.");
    }

    if (strlen($_POST['password']) < 6) {
        die("Password must be at least 6 characters long.");
    }

    // Update password
    $new_password = password_hash($_POST['password'], PASSWORD_DEFAULT);
    $stmt = $conn->prepare("UPDATE users SET password = ?, reset_token = null, reset_expires = null WHERE id = ?");
    $stmt->bind_param("si", $new_password, $user['id']);
    $stmt->execute();

    // Redirect to login page
    header("Location: login.php?success=1");
    exit();
}

// Show password reset form
?>
<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <h2>Reset Your Password</h2>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <input type="password" name="password" placeholder="New Password" required><br>
        <input type="password" name="confirm_password" placeholder="Confirm Password" required><br>
        <button type="submit">Reset Password</button>
    </form>
</body>
</html>


<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <?php
    session_start();
    
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        // Database connection
        $conn = mysqli_connect("localhost", "username", "password", "database_name");
        
        // Check connection
        if (!$conn) {
            die("Connection failed: " . mysqli_connect_error());
        }
        
        $email = mysqli_real_escape_string($conn, $_POST['email']);
        
        // Check if email exists in the database
        $sql = "SELECT id FROM users WHERE email='$email'";
        $result = mysqli_query($conn, $sql);
        
        if (mysqli_num_rows($result) == 1) {
            // Generate a random password reset token
            $token = bin2hex(random_bytes(32));
            
            // Update the database with the new token and expiration time
            $expiration_time = date('Y-m-d H:i:s', strtotime('+1 hour'));
            $sql = "UPDATE users SET password_reset_token='$token', 
                                  password_reset_expires='$expiration_time' 
                                  WHERE email='$email'";
            mysqli_query($conn, $sql);
            
            // Send reset link to the user
            require 'PHPMailer/PHPMailer.php';
            require 'PHPMailer/SMTP.php';
            require 'PHPMailer/Exception.php';
            
            try {
                $mail = new PHPMailer\PHPMailer();
                $mail->isSMTP();
                $mail->Host = 'smtp.example.com'; // Replace with your SMTP server
                $mail->SMTPAuth = true;
                $mail->Username = 'your_email@example.com'; // Your email
                $mail->Password = 'your_password'; // Your password
                $mail->SMTPSecure = 'tls';
                $mail->Port = 587;
                
                $mail->setFrom('your_email@example.com', 'Reset Password');
                $mail->addAddress($email);
                
                // Set email content
                $mail->isHTML(true);
                $mail->Subject = 'Password Reset Request';
                $mail->Body = "<p>We received a password reset request.</p>
                              <p>Click this link to reset your password: 
                              http://example.com/reset_password.php?token=$token</p>";
                $mail->AltBody = "We received a password reset request.

".
                               "Click this link to reset your password: ".
                               "http://example.com/reset_password.php?token=$token";
                
                if ($mail->send()) {
                    echo "<p>Email sent! Please check your inbox for the reset instructions.</p>";
                } else {
                    echo "<p>Error sending email. Please try again later.</p>";
                }
            } catch (Exception $e) {
                echo "<p>Error: {$mail->ErrorInfo}</p>";
            }
        } else {
            echo "<p>Email not found in our records!</p>";
        }
        
        mysqli_close($conn);
    }
    ?>
    
    <h2>Forgot Password</h2>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <label for="email">Email:</label><br>
        <input type="email" id="email" name="email" required><br>
        <button type="submit">Request Reset Link</button>
    </form>
</body>
</html>


<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <?php
    session_start();
    
    if (!isset($_GET['token'])) {
        die("Invalid request. Please use the reset link from your email.");
    }
    
    $token = mysqli_real_escape_string($conn, $_GET['token']);
    
    // Database connection
    $conn = mysqli_connect("localhost", "username", "password", "database_name");
    
    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
    }
    
    // Check if token exists and is valid
    $sql = "SELECT id, password_reset_expires FROM users WHERE password_reset_token='$token'";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) == 1) {
        $row = mysqli_fetch_assoc($result);
        
        // Check if token has expired
        $expiration_time = $row['password_reset_expires'];
        if ($expiration_time < date('Y-m-d H:i:s')) {
            die("This reset link has expired. Please request a new one.");
        }
    } else {
        die("Invalid or expired password reset link.");
    }
    
    // If the form is submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        $new_password = mysqli_real_escape_string($conn, $_POST['password']);
        
        // Update the user's password
        $sql = "UPDATE users SET password='" . md5($new_password) . "', 
                                  password_reset_token='', 
                                  password_reset_expires='0000-00-00 00:00:00' 
                                  WHERE password_reset_token='$token'";
        
        if (mysqli_query($conn, $sql)) {
            echo "<p>Password updated successfully!</p>";
            // Optionally, redirect to login page
            header("Location: login.php");
        } else {
            echo "<p>Error updating password. Please try again later.</p>";
        }
    }
    
    mysqli_close($conn);
    ?>
    
    <h2>Reset Password</h2>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>?token=<?php echo $token; ?>" method="post">
        <label for="password">New Password:</label><br>
        <input type="password" id="password" name="password" required><br>
        <button type="submit">Reset Password</button>
    </form>
</body>
</html>


<?php
// Include database connection
require_once 'db_connection.php';

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $email = filter_var($_POST['email'], FILTER_SANITIZE_EMAIL);
    
    // Check if email exists in database
    $stmt = $conn->prepare("SELECT id, username FROM users WHERE email = ?");
    $stmt->bind_param('s', $email);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows > 0) {
        // Generate a random token
        $token = bin2hex(random_bytes(32));
        
        // Set expiration time (1 hour from now)
        $expires = date('Y-m-d H:i:s', strtotime('+1 hour'));
        
        // Update the reset_token and token_expires fields in the database
        $updateStmt = $conn->prepare("UPDATE users SET reset_token = ?, token_expires = ? WHERE email = ?");
        $updateStmt->bind_param('sss', $token, $expires, $email);
        $updateStmt->execute();
        
        // Send password reset email
        $subject = 'Password Reset Request';
        $message = "Hello,

Please click on the following link to reset your password:

http://example.com/reset-password.php?token=$token

This link will expire in 1 hour.";
        $headers = 'From: no-reply@example.com' . "\r
" .
                  'Reply-To: no-reply@example.com' . "\r
" .
                  'X-Mailer: PHP/' . phpversion();
        
        mail($email, $subject, $message, $headers);
        
        echo "An email has been sent to your address with instructions to reset your password.";
    } else {
        echo "Email not found in our records.";
    }
}


<?php
// Include database connection
require_once 'db_connection.php';

if (!isset($_GET['token'])) {
    die("Invalid request.");
}

$token = $_GET['token'];

// Check if token exists in the database and is not expired
$stmt = $conn->prepare("SELECT id, reset_token, token_expires FROM users WHERE reset_token = ?");
$stmt->bind_param('s', $token);
$stmt->execute();
$result = $stmt->get_result();

if ($result->num_rows == 0) {
    die("Invalid or expired token.");
}

$row = $result->fetch_assoc();
$expires = $row['token_expires'];

// Check if token has expired
if (strtotime($expires) < time()) {
    die("Token has expired. Please request a new password reset.");
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <h1>Reset Password</h1>
    <form action="reset-password.php" method="post">
        <input type="password" name="new_password" placeholder="Enter new password" required><br><br>
        <input type="password" name="confirm_password" placeholder="Confirm new password" required><br><br>
        <input type="hidden" name="token" value="<?php echo $token; ?>">
        <button type="submit">Reset Password</button>
    </form>
</body>
</html>


<?php
// Include database connection
require_once 'db_connection.php';

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $token = $_POST['token'];
    $new_password = $_POST['new_password'];
    $confirm_password = $_POST['confirm_password'];
    
    if ($new_password !== $confirm_password) {
        die("Passwords do not match.");
    }
    
    // Hash the new password
    $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);
    
    // Check if token exists and is valid
    $stmt = $conn->prepare("SELECT id FROM users WHERE reset_token = ? AND token_expires > ?");
    $stmt->bind_param('ss', $token, date('Y-m-d H:i:s'));
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows == 0) {
        die("Invalid or expired token.");
    }
    
    // Update the password
    $updateStmt = $conn->prepare("UPDATE users SET password_hash = ?, reset_token = NULL, token_expires = NULL WHERE reset_token = ?");
    $updateStmt->bind_param('ss', $hashed_password, $token);
    $updateStmt->execute();
    
    echo "Password has been successfully updated!";
}


<?php
session_start();

// Database configuration
$host = 'localhost';
$db_username = 'root';
$db_password = '';
$db_name = 'your_database';

// Connect to database
$conn = mysqli_connect($host, $db_username, $db_password, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// If form is submitted
if (isset($_POST['reset'])) {
    $email = filter_var($_POST['email'], FILTER_VALIDATE_EMAIL);
    
    if ($email === false) {
        echo "Invalid email format!";
        exit();
    }

    // Check if email exists in database
    $sql = "SELECT COUNT(*) as count FROM users WHERE email=?";
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, "s", $email);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);
    $row = mysqli_fetch_assoc($result);

    if ($row['count'] == 0) {
        echo "Email not found in our records!";
        exit();
    }

    // Generate reset token
    $token = bin2hex(random_bytes(16));
    $expires = date('Y-m-d H:i:s', strtotime('+1 hour'));

    // Update database with new token and expiration time
    $updateSql = "UPDATE users SET reset_token=?, reset_expires=? WHERE email=?";
    $stmt = mysqli_prepare($conn, $updateSql);
    mysqli_stmt_bind_param($stmt, "ss", $token, $expires, $email);
    
    if (mysqli_stmt_execute($stmt)) {
        // Send reset link to user's email
        $resetUrl = "http://$_SERVER[HTTP_HOST]/reset-password.php?token=$token&email=$email";
        $subject = "Password Reset Request";
        $headers = "From: your@example.com\r
";
        $message = "Please click the following link to reset your password:
$resetUrl";

        if (mail($email, $subject, $message, $headers)) {
            echo "Password reset email has been sent!";
        } else {
            echo "Failed to send password reset email!";
        }
    } else {
        echo "Error updating record: " . mysqli_error($conn);
    }

    mysqli_stmt_close($stmt);
}

mysqli_close($conn);

// Display the form
?>
<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <h2>Forgot Password</h2>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <input type="email" name="email" placeholder="Enter your email address" required><br><br>
        <button type="submit" name="reset">Reset Password</button>
    </form>
</body>
</html>


<?php
session_start();

// Database configuration
$host = 'localhost';
$db_username = 'root';
$db_password = '';
$db_name = 'your_database';

$conn = mysqli_connect($host, $db_username, $db_password, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

if (isset($_GET['token']) && isset($_GET['email'])) {
    $token = $_GET['token'];
    $email = $_GET['email'];

    // Check if token is valid and not expired
    $sql = "SELECT * FROM users WHERE email=? AND reset_token=? AND reset_expires > NOW()";
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, "ss", $email, $token);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);

    if (mysqli_num_rows($result) == 1) {
        // Display password reset form
        ?>
        <!DOCTYPE html>
        <html>
        <head>
            <title>Reset Password</title>
        </head>
        <body>
            <h2>Reset Password</h2>
            <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
                New Password: <input type="password" name="new_password" required><br><br>
                Confirm Password: <input type="password" name="confirm_password" required><br><br>
                <button type="submit" name="reset">Reset</button>
            </form>
        </body>
        </html>
        <?php
    } else {
        echo "Invalid or expired reset token!";
        exit();
    }
}

if (isset($_POST['reset'])) {
    $newPassword = $_POST['new_password'];
    $confirmPassword = $_POST['confirm_password'];

    if ($newPassword !== $confirmPassword) {
        die("Passwords do not match!");
    }

    // Hash the new password
    $hashedPassword = password_hash($newPassword, PASSWORD_DEFAULT);

    // Update the database with the new password and clear reset token
    $sql = "UPDATE users SET password=?, reset_token=NULL, reset_expires=NULL WHERE email=?";
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, "ss", $hashedPassword, $email);
    
    if (mysqli_stmt_execute($stmt)) {
        echo "Password has been successfully updated!";
    } else {
        echo "Error updating password: " . mysqli_error($conn);
    }
}

mysqli_close($conn);
?>


<?php
// reset.php

session_start();
include('db_connect.php');

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $input = $_POST['email_username'];
    
    // Check if the user exists in the database
    $stmt = $conn->prepare("SELECT id, email, username FROM users WHERE email=? OR username=?");
    $stmt->bind_param("ss", $input, $input);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows == 1) {
        // Generate a random token
        $token = bin2hex(random_bytes(32));
        
        // Store the token and expiration time (e.g., 1 hour from now)
        $expires = date('Y-m-d H:i:s', strtotime('+1 hour'));
        
        // Update the database with the new token and expiration time
        $stmt = $conn->prepare("UPDATE users SET reset_token=?, reset_expires=? WHERE email=? OR username=?");
        $stmt->bind_param("ssss", $token, $expires, $input, $input);
        $stmt->execute();

        // Send the password reset link to the user's email
        $email = $result->fetch_assoc()['email'];
        $resetLink = "http://your-website.com/reset_password.php?token=" . $token;
        
        $subject = 'Password Reset Request';
        $message = 'You requested a password reset. Click this link: ' . $resetLink . ' to reset your password.';
        
        if (mail($email, $subject, $message)) {
            echo "A password reset link has been sent to your email.";
        } else {
            echo "Error sending email.";
        }
    } else {
        echo "Email or username not found in our records.";
    }
}
?>


<?php
// update_password.php

session_start();
include('db_connect.php');

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $token = $_POST['token'];
    $new_password = $_POST['new_password'];
    $confirm_password = $_POST['confirm_password'];

    // Validate token again
    $stmt = $conn->prepare("SELECT id, reset_token FROM users WHERE reset_token=?");
    $stmt->bind_param("s", $token);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows == 1) {
        // Check if new password matches confirmation
        if ($new_password === $confirm_password) {
            // Update the user's password and clear reset token
            $hash = password_hash($new_password, PASSWORD_DEFAULT);
            
            $stmt = $conn->prepare("UPDATE users SET password=?, reset_token=null, reset_expires=null WHERE id=?");
            $stmt->bind_param("si", $hash, $result->fetch_assoc()['id']);
            $stmt->execute();

            echo "Password updated successfully. <a href='login.php'>Click here to login</a>";
        } else {
            echo "Passwords do not match. Please try again.";
        }
    } else {
        echo "Invalid token or user not found.";
    }
}
?>


<?php
// Database connection
include('db_connection.php');

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = mysqli_real_escape_string($conn, $_POST['email']);
    
    // Check if email exists in the database
    $query = "SELECT * FROM users WHERE email='$email'";
    $result = mysqli_query($conn, $query);
    
    if (mysqli_num_rows($result) == 0) {
        $message = "Email not found. Please check your email and try again.";
        header("Location: forgot_password.php?error=$message");
        exit();
    } else {
        // Generate reset token
        $token = md5(uniqid(rand(), true));
        $expires = date('Y-m-d H:i:s', time() + 3600); // Token expires after 1 hour
        
        // Update the database with the new token
        $update_query = "UPDATE users SET reset_token='$token', reset_expiry='$expires' WHERE email='$email'";
        mysqli_query($conn, $update_query);
        
        // Send password reset link to user's email
        $to = $email;
        $subject = "Password Reset Request";
        
        $message = "<html>
            <head>
                <title>Password Reset</title>
            </head>
            <body>
                <h2>Password Reset</h2>
                <p>We received a password reset request. Click the link below to reset your password:</p>
                <a href='http://your-site.com/reset_password.php?token=$token'>Reset Password</a><br>
                <small>This link will expire in 30 minutes.</small>
            </body>
        </html>";
        
        // Set email headers
        $headers = "From: noreply@your-site.com\r
";
        $headers .= "MIME-Version: 1.0\r
";
        $headers .= "Content-Type: text/html; charset=UTF-8\r
";
        
        mail($to, $subject, $message, $headers);
        
        // Redirect to success page
        header("Location: forgot_password.php?success=true");
        exit();
    }
}

// Close database connection
mysqli_close($conn);
?>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$db_name = 'mydatabase';

try {
    // Connect to the database
    $conn = new mysqli($host, $username, $password, $db_name);
    
    if ($conn->connect_error) {
        throw new Exception("Connection failed: " . $conn->connect_error);
    }

    // Check if email was submitted
    if (isset($_POST['email'])) {
        $email = $conn->real_escape_string(trim($_POST['email']));
        
        // Check if email exists in the database
        $sql = "SELECT id FROM users WHERE email = '$email'";
        $result = $conn->query($sql);
        
        if ($result->num_rows > 0) {
            // Generate a unique token for password reset
            $token = md5(uniqid(rand(), true));
            $expires = date("Y-m-d H:i:s", time() + 3600); // Token expires in 1 hour
            
            // Update the token and expiration time in the database
            $updateSql = "UPDATE users SET reset_token = '$token', reset_expires = '$expires' WHERE email = '$email'";
            if ($conn->query($updateSql)) {
                // Send password reset link to user's email
                
                // Email configuration
                $to = $email;
                $subject = "Password Reset Request";
                $message = "
                    <html>
                        <head>
                            <title>Password Reset</title>
                        </head>
                        <body>
                            <p>Hello,</p>
                            <p>You have requested to reset your password. Please click the link below to set a new password:</p>
                            <br>
                            <a href='http://example.com/reset.php?token=$token'>Reset Password</a><br><br>
                            <p>This link will expire in 1 hour.</p>
                        </body>
                    </html>";
                $headers = "MIME-Version: 1.0" . "\r
";
                $headers .= "Content-type:text/html;charset=UTF-8" . "\r
";
                $headers .= "From: <no-reply@example.com>" . "\r
";
                
                // Send email
                if (mail($to, $subject, $message, $headers)) {
                    header("Location: forgot_password.php?success=1");
                    exit();
                } else {
                    header("Location: forgot_password.php?error=email_error");
                    exit();
                }
            } else {
                throw new Exception("Error updating token: " . $conn->error);
            }
        } else {
            header("Location: forgot_password.php?error=no_email");
            exit();
        }
    } else {
        // If no email was submitted
        header("Location: forgot_password.php");
        exit();
    }
    
} catch (Exception $e) {
    // Handle any exceptions
    echo "Error: " . $e->getMessage();
}
?>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$db_name = 'mydatabase';

try {
    // Connect to the database
    $conn = new mysqli($host, $username, $password, $db_name);
    
    if ($conn->connect_error) {
        throw new Exception("Connection failed: " . $conn->connect_error);
    }

    // Check if token is provided
    if (isset($_GET['token'])) {
        $token = $conn->real_escape_string(trim($_GET['token']));
        
        // Check if token exists and hasn't expired
        $sql = "SELECT id, reset_expires FROM users WHERE reset_token = '$token'";
        $result = $conn->query($sql);
        
        if ($result->num_rows == 1) {
            $row = $result->fetch_assoc();
            
            // Check if token has expired
            $expires = strtotime($row['reset_expires']);
            if (time() < $expires) {
                // Token is valid
                
                // If password reset form is submitted
                if ($_SERVER["REQUEST_METHOD"] == "POST") {
                    $new_password = $conn->real_escape_string(trim($_POST['password']));
                    $confirm_password = $conn->real_escape_string(trim($_POST['confirm_password']));
                    
                    if ($new_password != $confirm_password) {
                        throw new Exception("Passwords do not match!");
                    }
                    
                    // Update the password
                    $updateSql = "UPDATE users SET password = PASSWORD('$new_password'), reset_token = NULL, reset_expires = NULL WHERE reset_token = '$token'";
                    if ($conn->query($updateSql)) {
                        echo "<p>Password has been successfully updated!</p>";
                        header("Location: login.php");
                        exit();
                    } else {
                        throw new Exception("Error updating password: " . $conn->error);
                    }
                } else {
                    // Show password reset form
                    include('reset_form.html');
                }
            } else {
                throw new Exception("Token has expired. Please request a new password reset.");
            }
        } else {
            throw new Exception("Invalid or no token provided!");
        }
    } else {
        header("Location: forgot_password.php");
        exit();
    }
    
} catch (Exception $e) {
    // Handle any exceptions
    echo "Error: " . $e->getMessage();
}
?>


<?php
// Include database connection
include('db_connection.php');

if (isset($_POST['reset'])) {
    $email = $_POST['email'];
    
    // Check if email exists in the database
    $query = "SELECT id FROM users WHERE email = ?";
    $stmt = $conn->prepare($query);
    $stmt->bind_param("s", $email);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows > 0) {
        // Generate a reset token
        $token = bin2hex(random_bytes(16));
        $expires = date('Y-m-d H:i:s', time() + 3600); // Token expires after 1 hour
        
        // Insert the token into password_reset table
        $reset_query = "INSERT INTO password_reset (email, token, expires) VALUES (?, ?, ?)";
        $reset_stmt = $conn->prepare($reset_query);
        $reset_stmt->bind_param("sss", $email, $token, $expires);
        $reset_stmt->execute();
        
        // Send reset email
        $to = $email;
        $subject = "Password Reset Request";
        $message = "Please click the following link to reset your password:

";
        $message .= "http://yourwebsite.com/reset_password.php?token=" . $token . "

";
        $message .= "This link will expire in 1 hour.";
        
        $headers = "From: noreply@yourwebsite.com\r
";
        $headers .= "Reply-To: noreply@yourwebsite.com\r
";
        
        mail($to, $subject, $message, $headers);
        
        echo "A password reset link has been sent to your email address.";
    } else {
        echo "Email not found in our records.";
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <h2>Forgot Password</h2>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <label for="email">Email:</label><br>
        <input type="text" id="email" name="email"><br>
        <input type="submit" name="reset" value="Reset Password">
    </form>
</body>
</html>


<?php
// Include database connection
include('db_connection.php');

if (!isset($_GET['token'])) {
    die("No token provided.");
}

$token = $_GET['token'];

// Check if token exists and is valid
$query = "SELECT * FROM password_reset WHERE token = ? AND expires > NOW()";
$stmt = $conn->prepare($query);
$stmt->bind_param("s", $token);
$stmt->execute();
$result = $stmt->get_result();

if ($result->num_rows == 0) {
    die("Invalid or expired reset token.");
}

// Get user data
$row = $result->fetch_assoc();
$user_id = $row['id'];

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $new_password = $_POST['new_password'];
    
    // Update the user's password
    $update_query = "UPDATE users SET password = ? WHERE id = ?";
    $update_stmt = $conn->prepare($update_query);
    $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);
    $update_stmt->bind_param("si", $hashed_password, $user_id);
    $update_stmt->execute();
    
    // Delete the reset token
    $delete_query = "DELETE FROM password_reset WHERE token = ?";
    $delete_stmt = $conn->prepare($delete_query);
    $delete_stmt->bind_param("s", $token);
    $delete_stmt->execute();
    
    echo "Password updated successfully!";
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <h2>Reset Password</h2>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>?token=<?php echo $token; ?>" method="post">
        <label for="new_password">New Password:</label><br>
        <input type="password" id="new_password" name="new_password"><br>
        <input type="submit" value="Reset Password">
    </form>
</body>
</html>


<?php
session_start();
include('db_connection.php');

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = mysqli_real_escape_string($conn, $_POST['email']);
    
    // Validate email format
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        die("Invalid email format");
    }
    
    // Check if email exists in database
    $sql = "SELECT id FROM users WHERE email = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param('s', $email);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows == 0) {
        die("Email not found");
    }
    
    // Generate reset token
    $token = bin2hex(openssl_random_pseudo_bytes(16));
    $expires = date('Y-m-d H:i:s', strtotime('+1 hour'));
    
    // Update the users table with new token and expiration time
    $sql = "UPDATE users SET reset_token = ?, reset_expires = ? WHERE email = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param('sss', $token, $expires, $email);
    $stmt->execute();
    
    // Send email with reset link
    $to = $email;
    $subject = "Password Reset Request";
    $message = "
        <html>
            <body>
                <h2>Password Reset</h2>
                <p>Please click the following link to reset your password:</p>
                <a href='http://yourdomain.com/reset-password.php?token=$token'>Reset Password</a><br>
                <small>This link will expire in 1 hour.</small>
            </body>
        </html>
    ";
    $headers = "MIME-Version: 1.0" . "\r
";
    $headers .= "Content-type:text/html;charset=UTF-8" . "\r
";
    $headers .= "From: yourname@yourdomain.com" . "\r
";
    
    if (mail($to, $subject, $message, $headers)) {
        echo "<script>alert('Password reset link has been sent to your email.'); window.location.href='login.php';</script>";
    } else {
        die("Failed to send password reset email");
    }
}
?>


<?php
session_start();
include('db_connection.php');

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Check if token exists in URL
    $token = $_GET['token'] ?? '';
    
    if (empty($token)) {
        die("Invalid request");
    }
    
    // Check if token is valid and not expired
    $sql = "SELECT id, email FROM users WHERE reset_token = ? AND reset_expires > NOW()";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param('s', $token);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows == 0) {
        die("Invalid or expired password reset link");
    }
    
    // Get user data
    $row = $result->fetch_assoc();
    $new_password = mysqli_real_escape_string($conn, $_POST['new_password']);
    $confirm_password = mysqli_real_escape_string($conn, $_POST['confirm_password']);
    
    if ($new_password != $confirm_password) {
        die("Passwords do not match");
    }
    
    // Hash the new password
    $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);
    
    // Update user's password and clear reset token
    $sql = "UPDATE users SET password = ?, reset_token = NULL, reset_expires = NULL WHERE id = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param('si', $hashed_password, $row['id']);
    $stmt->execute();
    
    // Destroy session and redirect to login page
    session_unset();
    session_destroy();
    echo "<script>alert('Password reset successful! Please login with your new password.'); window.location.href='login.php';</script>";
}
?>


<?php
session_start();
include('config.php');

if (isset($_POST['submit'])) {
    $email = mysqli_real_escape_string($con, $_POST['email']);
    
    // Check if email exists in database
    $query = "SELECT * FROM users WHERE email='$email'";
    $result = mysqli_query($con, $query);
    
    if (mysqli_num_rows($result) == 0) {
        echo "<script>alert('Email does not exist!');</script>";
    } else {
        // Generate and send reset token
        include('forgot_password_process.php');
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <form action="forgot_password.php" method="post">
        <input type="email" name="email" placeholder="Enter your email" required><br><br>
        <input type="submit" name="submit" value="Reset Password">
    </form>
</body>
</html>


<?php
session_start();
include('config.php');

$email = $_POST['email'];
$token = md5(time() . rand(0, 9999));
$expires = date('Y-m-d H:i:s', time() + 3600); // Token expires in 1 hour

// Update token and expiration in database
$query = "UPDATE users SET reset_token='$token', reset_expires='$expires' WHERE email='$email'";
mysqli_query($con, $query);

// Send reset link via email
$subject = 'Password Reset';
$message = "Click this link to reset your password: http://example.com/reset_password.php?token=$token";
mail($email, $subject, $message);
echo "<script>alert('Check your email for the reset link!');</script>";
?>


<?php
session_start();
include('config.php');

if (!isset($_GET['token'])) {
    die("Invalid request.");
}

$token = $_GET['token'];
$query = "SELECT * FROM users WHERE reset_token='$token' AND reset_expires > NOW()";
$result = mysqli_query($con, $query);

if (mysqli_num_rows($result) == 0) {
    die("Token invalid or expired. Request a new one.");
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <form action="reset_password_process.php" method="post">
        <input type="password" name="newpass" placeholder="New password" required><br><br>
        <input type="hidden" name="token" value="<?php echo $token; ?>">
        <input type="submit" value="Change Password">
    </form>
</body>
</html>


<?php
session_start();
include('config.php');

if (isset($_POST['newpass'])) {
    $token = $_POST['token'];
    $newpass = md5($_POST['newpass']);
    
    // Update password and clear token
    $query = "UPDATE users SET password='$newpass', reset_token='', reset_expires='' WHERE reset_token='$token'";
    mysqli_query($con, $query);
    
    echo "<script>alert('Password updated successfully! Redirecting to login...');</script>";
    header("Location: login.php");
}
?>


<?php
include('db_connection.php'); // Include your database connection file

if (isset($_POST['email'])) {
    $email = $_POST['email'];

    // Check if email exists in the database
    $query = "SELECT * FROM users WHERE email = ?";
    $stmt = $conn->prepare($query);
    $stmt->bind_param("s", $email);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows == 0) {
        header("Location: forgot_password_form.php?error=Email not found in our records.");
        exit();
    } else {
        // Generate a unique reset token
        $token = md5(uniqid(rand(), true));
        
        // Check if the email already has an active reset request
        $check_query = "SELECT * FROM password_resets WHERE email = ?";
        $check_stmt = $conn->prepare($check_query);
        $check_stmt->bind_param("s", $email);
        $check_stmt->execute();
        $check_result = $check_stmt->get_result();

        if ($check_result->num_rows > 0) {
            // Update the existing token
            $update_query = "UPDATE password_resets SET token = ?, expire_time = DATE_ADD(NOW(), INTERVAL 1 HOUR) WHERE email = ?";
            $update_stmt = $conn->prepare($update_query);
            $update_stmt->bind_param("ss", $token, $email);
            $update_stmt->execute();
        } else {
            // Insert new reset request
            $insert_query = "INSERT INTO password_resets (email, token, expire_time) 
                            VALUES (?, ?, DATE_ADD(NOW(), INTERVAL 1 HOUR))";
            $insert_stmt = $conn->prepare($insert_query);
            $insert_stmt->bind_param("ss", $email, $token);
            $insert_stmt->execute();
        }

        // Send the reset link to the user's email
        $reset_link = "http://your-site.com/reset_password.php?token=$token";
        $to = $email;
        $subject = "Password Reset Request";
        $message = "Please click on this link to reset your password: 
$reset_link
This link will expire in 1 hour.";
        
        if (mail($to, $subject, $message)) {
            header("Location: forgot_password_form.php?success=We've sent a password reset link to your email.");
            exit();
        } else {
            header("Location: forgot_password_form.php?error=Failed to send the reset email. Please try again.");
            exit();
        }
    }
}
?>


<?php
include('db_connection.php'); // Include your database connection file

if (isset($_GET['token'])) {
    $token = $_GET['token'];

    // Verify if the token exists and is valid
    $query = "SELECT * FROM password_resets 
              WHERE token = ?
              AND expire_time > NOW()";
    $stmt = $conn->prepare($query);
    $stmt->bind_param("s", $token);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows == 0) {
        header("Location: reset_password_form.php?error=Invalid or expired token.");
        exit();
    } else {
        // Update the user's password
        if (isset($_POST['new_password']) && isset($_POST['confirm_password'])) {
            $new_password = $_POST['new_password'];
            $confirm_password = $_POST['confirm_password'];

            if ($new_password != $confirm_password) {
                header("Location: reset_password_form.php?error=Passwords do not match.");
                exit();
            }

            // Update the password in the users table
            $user_data = $result->fetch_assoc();
            $email = $user_data['email'];
            
            $update_query = "UPDATE users 
                            SET password = ?
                            WHERE email = ?";
            $update_stmt = $conn->prepare($update_query);
            $update_stmt->bind_param("ss", md5($new_password), $email); // Use a secure hashing method
            $update_stmt->execute();

            // Delete the reset token
            $delete_query = "DELETE FROM password_resets WHERE token = ?";
            $delete_stmt = $conn->prepare($delete_query);
            $delete_stmt->bind_param("s", $token);
            $delete_stmt->execute();

            header("Location: login.php?success=Password has been successfully reset.");
            exit();
        }
    }
} else {
    header("Location: forgot_password_form.php");
    exit();
}
?>


<?php
$servername = "localhost";
$username = "root";
$password = "";
$dbname = "your_database_name";

// Create connection
$conn = new mysqli($servername, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}
?>


<?php
// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'mydatabase';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Sanitize email input
    $email = mysqli_real_escape_string($conn, $_POST['email']);
    
    if (empty($email)) {
        header("Location: forgot_password_form.php?msg=Please enter your email address.");
        exit();
    }
    
    // Check if email exists in database
    $sql = "SELECT id FROM users WHERE email='$email'";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) == 0) {
        header("Location: forgot_password_form.php?msg=Email not found.");
        exit();
    }
    
    // Generate random password reset token
    $token = md5(rand());
    
    // Update the database with the token and expiration time (1 hour)
    $expires = date('Y-m-d H:i:s', time() + 3600);
    $sql = "UPDATE users SET reset_token='$token', reset_expires='$expires' WHERE email='$email'";
    mysqli_query($conn, $sql);
    
    // Send email with reset link
    $to = $email;
    $subject = "Password Reset Request";
    $message = "Please click the following link to reset your password: http://example.com/reset_password.php?token=$token";
    $headers = "From: webmaster@example.com" . "\r
" .
               "Content-type:text/html;charset=UTF-8";
    
    if (mail($to, $subject, $message, $headers)) {
        header("Location: forgot_password_form.php?msg=Password reset link sent to your email.");
    } else {
        header("Location: forgot_password_form.php?msg=Error sending email.");
    }
}

mysqli_close($conn);
?>


<?php
// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'mydatabase';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Check if token is valid and not expired
$token = $_GET['token'];

$sql = "SELECT id, reset_token, reset_expires FROM users WHERE reset_token='$token'";
$result = mysqli_query($conn, $sql);
$row = mysqli_fetch_assoc($result);

if (!$row || $row['reset_expires'] < date('Y-m-d H:i:s')) {
    die("Invalid or expired password reset link.");
}

?>

<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <h2>Reset Password</h2>
    
    <form action="reset_password.php" method="post">
        <input type="hidden" name="token" value="<?php echo $token; ?>">
        
        <label for="new_password">New Password:</label><br>
        <input type="password" id="new_password" name="new_password"><br><br>
        
        <label for="confirm_password">Confirm Password:</label><br>
        <input type="password" id="confirm_password" name="confirm_password"><br><br>
        
        <input type="submit" value="Reset Password">
    </form>
</body>
</html>

<?php
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $token = $_POST['token'];
    $new_password = $_POST['new_password'];
    $confirm_password = $_POST['confirm_password'];
    
    // Validate password requirements
    if ($new_password != $confirm_password) {
        die("Passwords do not match.");
    }
    
    if (strlen($new_password) < 8) {
        die("Password must be at least 8 characters long.");
    }
    
    // Additional password complexity checks can be added here
    
    // Update the user's password
    $hashed_password = md5($new_password); // Note: Consider using a stronger hashing algorithm like bcrypt
    $sql = "UPDATE users SET password='$hashed_password', reset_token='', reset_expires='' WHERE reset_token='$token'";
    mysqli_query($conn, $sql);
    
    header("Location: login.php?msg=Password has been reset successfully.");
}

mysqli_close($conn);
?>


<?php
// Connect to the database
$host = 'localhost';
$username = 'username';
$password = 'password';
$database = 'database';

$conn = mysqli_connect($host, $username, $password, $database);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// If form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST" && !empty($_POST['email'])) {

    // Sanitize input
    $email = filter_var($_POST['email'], FILTER_SANITIZE_EMAIL);

    // Validate email format
    if (filter_var($email, FILTER_VALIDATE_EMAIL)) {

        // Check if email exists in database
        $sql = "SELECT id FROM users WHERE email='$email'";
        $result = mysqli_query($conn, $sql);

        if (mysqli_num_rows($result) == 0) {
            die("Email does not exist in our records.");
        }

        // Generate a unique password reset token
        $token = bin2hex(random_bytes(16));
        
        // Update the database with the new token and expiration time (e.g., 1 hour from now)
        $expires = date('Y-m-d H:i:s', time() + 3600);
        
        $sql = "UPDATE users SET reset_token='$token', reset_expires='$expires' WHERE email='$email'";
        mysqli_query($conn, $sql);

        // Send password reset link to user's email
        $to = $email;
        $subject = "Password Reset Request";
        $message = "Please click the following link to reset your password: http://yourwebsite.com/reset-password.php?token=$token";
        $headers = "From: noreply@yourwebsite.com" . "\r
";
        $headers .= "Content-type: text/html\r
";

        mail($to, $subject, $message, $headers);

        // Redirect back to the forgot password page with success message
        header("Location: forgot-password.php?msg=success");
        exit();

    } else {
        die("Invalid email format.");
    }
}

// Close database connection
mysqli_close($conn);
?>


<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <?php
        if (isset($_GET['error'])) {
            echo "<p style='color:red'>" . $_GET['error'] . "</p>";
        }
        if (isset($_GET['success'])) {
            echo "<p style='color:green'>An email has been sent to you. Please check your inbox.</p>";
        }
    ?>
    
    <h2>Forgot Password</h2>
    <form action="forgot_password_process.php" method="POST">
        <label for="email">Email:</label><br>
        <input type="text" id="email" name="email"><br><br>
        <input type="submit" value="Reset Password">
    </form>
</body>
</html>


<?php
// Database connection details
$host = 'localhost';
$username = 'root'; // Change according to your database user
$password = '';      // Change according to your database password
$dbname = 'testdb';  // Replace with your actual database name

// Create database connection
$conn = new mysqli($host, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Check if form is submitted
if (isset($_POST['email'])) {
    $email = $_POST['email'];
    
    // Sanitize input
    $email = mysqli_real_escape_string($conn, $email);
    
    // Check if email exists in the database
    $sql = "SELECT id FROM users WHERE email='$email'";
    $result = $conn->query($sql);
    
    if ($result->num_rows == 0) {
        header("Location: forgot_password.php?error=Email not found.");
        exit();
    } else {
        // Generate a random token
        $token = bin2hex(random_bytes(32));
        
        // Calculate the expiration time (e.g., 1 hour from now)
        $expires = date('Y-m-d H:i:s', time() + 3600);
        
        // Update the database with the new token and expiration time
        $sql = "UPDATE users SET reset_token='$token', token_expires='$expires' WHERE email='$email'";
        if ($conn->query($sql) === TRUE) {
            // Send an email to the user
            $to = $email;
            $subject = 'Password Reset Request';
            $message = '
                <html>
                    <head></head>
                    <body>
                        <p>You requested a password reset. Click this link to reset your password:</p>
                        <a href="http://localhost/reset_password.php?token=' . $token . '">Reset Password</a><br><br>
                        This link will expire in 1 hour.
                    </body>
                </html>';
            $headers = "MIME-Version: 1.0" . "\r
";
            $headers .= "Content-type:text/html;charset=UTF-8" . "\r
";
            $headers .= "From: noreply@example.com"; // Replace with your email
            
            mail($to, $subject, $message, $headers);
            
            header("Location: forgot_password.php?success=1");
            exit();
        } else {
            echo "Error updating record: " . $conn->error;
        }
    }
}
?>


<?php
// Database connection details
$host = 'localhost';
$username = 'root'; // Change according to your database user
$password = '';      // Change according to your database password
$dbname = 'testdb';  // Replace with your actual database name

// Create database connection
$conn = new mysqli($host, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Check if token is provided in the URL
if (isset($_GET['token'])) {
    $token = $_GET['token'];
    
    // Sanitize input
    $token = mysqli_real_escape_string($conn, $token);
    
    // Check if the token exists and hasn't expired
    $sql = "SELECT id FROM users WHERE reset_token='$token' AND token_expires > NOW()";
    $result = $conn->query($sql);
    
    if ($result->num_rows == 0) {
        header("Location: forgot_password.php?error=Invalid or expired token.");
        exit();
    } else {
        // If the form is submitted
        if (isset($_POST['submit'])) {
            $new_password = $_POST['password'];
            
            // Password validation rules
            if (strlen($new_password) < 8) {
                header("Location: reset_password.php?token=$token&error=Password must be at least 8 characters.");
                exit();
            }
            if (!preg_match("/^[a-zA-Z0-9]+$/", $new_password)) {
                header("Location: reset_password.php?token=$token&error=Password can only contain letters and numbers.");
                exit();
            }
            
            // Hash the new password
            $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);
            
            // Update the user's password in the database
            $sql = "UPDATE users SET password='$hashed_password', reset_token='', token_expires='' WHERE reset_token='$token'";
            if ($conn->query($sql) === TRUE) {
                header("Location: login.php?success=Password has been updated successfully.");
                exit();
            } else {
                echo "Error updating password: " . $conn->error;
            }
        }
    }
} else {
    // If no token is provided
    header("Location: forgot_password.php");
    exit();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <?php
        if (isset($_GET['error'])) {
            echo "<p style='color:red'>" . $_GET['error'] . "</p>";
        }
    ?>
    
    <h2>Reset Password</h2>
    <form action="reset_password.php?token=<?php echo $token; ?>" method="POST">
        <label for="password">New Password:</label><br>
        <input type="password" id="password" name="password"><br><br>
        <input type="submit" name="submit" value="Reset">
    </form>
</body>
</html>


<!DOCTYPE html>
<html>
<head>
    <title>Login</title>
</head>
<body>
    <?php
        if (isset($_GET['success'])) {
            echo "<p style='color:green'>" . $_GET['success'] . "</p>";
        }
    ?>
    
    <h2>Login</h2>
    <form action="login_process.php" method="POST">
        <label for="email">Email:</label><br>
        <input type="text" id="email" name="email"><br><br>
        <label for="password">Password:</label><br>
        <input type="password" id="password" name="password"><br><br>
        <input type="submit" value="Login">
    </form>
</body>
</html>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'mydatabase';
$username = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get email from form
    $email = $_POST['email'];
    
    // Prepare SQL query to check if email exists
    $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
    $stmt->execute([$email]);
    $user = $stmt->fetch();
    
    if ($user) {
        // Generate a unique token
        $token = bin2hex(random_bytes(16));
        
        // Insert token into the database (assuming you have a 'reset_tokens' table)
        $expires = date('Y-m-d H:i:s', strtotime('+30 minutes'));
        $stmt = $conn->prepare("INSERT INTO reset_tokens SET user_id=?, token=?, expires=?");
        $stmt->execute([$user['id'], $token, $expires]);
        
        // Send email with reset link
        $to = $email;
        $subject = "Password Reset Request";
        $message = "Please click the following link to reset your password: http://example.com/reset-password.php?token=$token";
        $headers = "From: no-reply@example.com" . "\r
";
        
        mail($to, $subject, $message, $headers);
        
        echo "A password reset link has been sent to your email.";
    } else {
        echo "Email not found in our records!";
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <h2>Forgot Password</h2>
    <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
        <input type="email" name="email" placeholder="Enter your email" required><br><br>
        <button type="submit">Reset Password</button>
    </form>
</body>
</html>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'mydatabase';
$username = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

// Check if token is provided
if (isset($_GET['token'])) {
    $token = $_GET['token'];
    
    // Prepare SQL query to check the token
    $stmt = $conn->prepare("SELECT user_id, expires FROM reset_tokens WHERE token = ?");
    $stmt->execute([$token]);
    $result = $stmt->fetch();
    
    if ($result) {
        // Check if token has expired
        if (strtotime($result['expires']) < time()) {
            die("Token has expired. Please request a new password reset.");
        }
        
        // User can now reset their password
        if ($_SERVER["REQUEST_METHOD"] == "POST") {
            $new_password = $_POST['password'];
            
            // Update user's password (assuming you have a 'users' table)
            $hash = password_hash($new_password, PASSWORD_DEFAULT);
            $stmt = $conn->prepare("UPDATE users SET password = ? WHERE id = ?");
            $stmt->execute([$hash, $result['user_id']]);
            
            // Delete the token after use
            $stmt = $conn->prepare("DELETE FROM reset_tokens WHERE token = ?");
            $stmt->execute([$token]);
            
            echo "Password updated successfully!";
        }
    } else {
        die("Invalid token.");
    }
} else {
    die("No token provided.");
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <h2>Reset Password</h2>
    <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
        <input type="password" name="password" placeholder="Enter new password" required><br><br>
        <button type="submit">Submit</button>
    </form>
</body>
</html>


<?php
session_start();

if (!isset($_POST['email'])) {
    header("Location: login.php");
    exit();
}

$email = trim($_POST['email']);

// Validate email
if (empty($email) || !filter_var($email, FILTER_VALIDATE_EMAIL)) {
    die("Please enter a valid email address.");
}


$host = "localhost";
$user = "root";
$password = "";
$db_name = "my_database";

$conn = mysqli_connect($host, $user, $password, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}


$sql = "SELECT id FROM users WHERE email='$email'";
$result = mysqli_query($conn, $sql);

if (mysqli_num_rows($result) == 0) {
    die("No account found with this email address.");
}


$token = md5(uniqid(rand(), true));
$currentDate = date('Y-m-d H:i:s');
$expiresDate = date('Y-m-d H:i:s', strtotime('+1 hour'));


$sql = "UPDATE users SET reset_token='$token', token_expiry='$expiresDate' WHERE email='$email'";
$result = mysqli_query($conn, $sql);

if (!$result) {
    die("An error occurred. Please try again.");
}


$to = $email;
$subject = "Password Reset Request";
$message = "
<html>
<head></head>
<body>
    <h2>Password Reset</h2>
    <p>Please click the following link to reset your password:</p>
    <a href='http://yourdomain.com/reset-password.php?token=$token'>Reset Password</a><br><br>
    <small>This link will expire in 1 hour.</small>
</body>
</html";
$headers = "MIME-Version: 1.0" . "\r
";
$headers .= "Content-type: text/html; charset=UTF-8" . "\r
";
$headers .= "From: noreply@yourdomain.com";

mail($to, $subject, $message, $headers);


mysqli_close($conn);


header("Location: login.php?msg=Check your email for password reset instructions.");
exit();


<?php
// Forgot Password Form
session_start();
include("config.php"); // Include database connection file

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = $_POST['email'];
    
    // Check if the email exists in the database
    $sql = "SELECT id FROM users WHERE email='$email'";
    $result = mysqli_query($db, $sql);
    
    if (mysqli_num_rows($result) > 0) {
        // Generate a random token
        $token = md5(uniqid(rand(), true));
        
        // Insert the token into the database
        $insert_sql = "INSERT INTO reset_tokens (user_id, token, created_at)
                       VALUES (".$_SESSION['user_id'].", '$token', NOW())";
        mysqli_query($db, $insert_sql);
        
        // Send email with reset link
        $to = $email;
        $subject = "Password Reset Request";
        $message = "Please click the following link to reset your password:

";
        $message .= "http://example.com/reset_password.php?token=$token";
        
        if (mail($to, $subject, $message)) {
            echo "An email has been sent to you with instructions to reset your password.";
        } else {
            echo "There was a problem sending the email. Please try again later.";
        }
    } else {
        echo "This email does not exist in our records.";
    }
}
?>

<form action="<?php echo $_SERVER['PHP_SELF'];?>" method="post">
    Email: <input type="text" name="email"><br>
    <input type="submit" value="Reset Password">
</form>


<?php
// Reset Password Page
session_start();
include("config.php"); // Include database connection file

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $token = $_GET['token'];
    $new_password = $_POST['password'];
    
    // Check if the token exists and hasn't expired
    $check_sql = "SELECT user_id FROM reset_tokens WHERE token='$token' AND created_at > NOW() - INTERVAL 30 MINUTE";
    $result = mysqli_query($db, $check_sql);
    
    if (mysqli_num_rows($result) == 1) {
        // Update the user's password
        $update_sql = "UPDATE users SET password='" . md5($new_password) . "' WHERE id=".$_SESSION['user_id'];
        mysqli_query($db, $update_sql);
        
        // Delete the token from the database
        $delete_sql = "DELETE FROM reset_tokens WHERE token='$token'";
        mysqli_query($db, $delete_sql);
        
        echo "Your password has been updated!";
    } else {
        die("Invalid or expired token. Please request a new password reset.");
    }
} else {
    // Display the password reset form
    $token = $_GET['token'];
    
    // Check if the token exists and hasn't expired
    $check_sql = "SELECT user_id FROM reset_tokens WHERE token='$token' AND created_at > NOW() - INTERVAL 30 MINUTE";
    $result = mysqli_query($db, $check_sql);
    
    if (mysqli_num_rows($result) == 1) {
        // Show the password reset form
?>
<form action="<?php echo $_SERVER['PHP_SELF'];?>?token=<?php echo $token;?>" method="post">
    New Password: <input type="password" name="password"><br>
    Confirm Password: <input type="password" name="confirm_password"><br>
    <input type="submit" value="Reset Password">
</form>
<?php
    } else {
        die("Invalid or expired token. Please request a new password reset.");
    }
}
?>


<?php
// config.php
$host = "localhost";
$username = "root";
$password = "";
$dbname = "your_database_name";

$db = mysqli_connect($host, $username, $password, $dbname);

if (!$db) {
    die("Connection failed: " . mysqli_connect_error());
}
?>


<?php
session_start();

// Database configuration
$host = "localhost";
$username = "root";
$password = "";
$dbname = "test_db";

// Create connection
$conn = new mysqli($host, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to send password reset email
function sendResetEmail($email, $resetToken) {
    $to = $email;
    $subject = "Password Reset Request";
    $message = "
        <html>
            <head>
                <title>Password Reset</title>
            </head>
            <body>
                <h2>Password Reset</h2>
                <p>Please click the following link to reset your password:</p>
                <a href='http://localhost/reset-password.php?token=" . $resetToken . "'>Reset Password</a><br><br>
                <small>If you did not request a password reset, please ignore this email.</small>
            </body>
        </html>
    ";
    $headers = "MIME-Version: 1.0" . "\r
";
    $headers .= "Content-type:text/html;charset=UTF-8" . "\r
";
    $headers .= "From: noreply@example.com" . "\r
";

    if (mail($to, $subject, $message, $headers)) {
        return true;
    } else {
        return false;
    }
}

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = $_POST['email'];

    // Prepare and execute query to check email existence
    $stmt = $conn->prepare("SELECT id FROM users WHERE email=?");
    $stmt->bind_param("s", $email);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows == 1) {
        // Generate reset token and expiration time
        $resetToken = bin2hex(random_bytes(16));
        $tokenHash = password_hash($resetToken, PASSWORD_DEFAULT);
        $expires = date("Y-m-d H:i:s", time() + 3600); // Token expires in 1 hour

        // Store token and expiration time
        $stmt = $conn->prepare("INSERT INTO reset_tokens (user_id, token, expires) VALUES (?, ?, ?)");
        $stmt->bind_param("iss", $result->fetch_assoc()['id'], $tokenHash, $expires);
        $stmt->execute();

        // Send reset email
        if (sendResetEmail($email, $resetToken)) {
            echo "Password reset link has been sent to your email.";
        } else {
            echo "Failed to send password reset email.";
        }
    } else {
        echo "Email does not exist in our database.";
    }
}

// Close connection
$conn->close();
?>


// Reset Password Page (reset-password.php)
session_start();

$conn = new mysqli($host, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

$token = $_GET['token'];

// Check if token is valid and not expired
$stmt = $conn->prepare("SELECT user_id FROM reset_tokens WHERE token=? AND expires > NOW()");
$tokenHash = password_hash($token, PASSWORD_DEFAULT);
$stmt->bind_param("s", $tokenHash);
$stmt->execute();
$result = $stmt->get_result();

if ($result->num_rows == 1) {
    // Show password reset form
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        $newPassword = $_POST['password'];
        $userId = $result->fetch_assoc()['user_id'];

        // Update user's password
        $hash = password_hash($newPassword, PASSWORD_DEFAULT);
        $stmt = $conn->prepare("UPDATE users SET password=? WHERE id=?");
        $stmt->bind_param("si", $hash, $userId);
        $stmt->execute();

        // Delete the reset token
        $stmt = $conn->prepare("DELETE FROM reset_tokens WHERE user_id=?");
        $stmt->bind_param("i", $userId);
        $stmt->execute();

        echo "Password has been reset successfully!";
    }
} else {
    echo "Invalid or expired password reset link.";
}

$conn->close();


<?php
// Database connection details
$host = 'localhost';
$user = 'root';
$password = '';
$dbname = 'mydatabase';

// Create database connection
$conn = mysqli_connect($host, $user, $password, $dbname);

// Check if connection failed
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function sendPasswordResetEmail($email, $resetLink) {
    $to = $email;
    $subject = 'Password Reset Request';
    
    $message = '
        <html>
            <head>
                <title>Password Reset Request</title>
            </head>
            <body style="font-family: Arial, sans-serif;">
                <h2>Password Reset Request</h2>
                <p>We received a password reset request for your account. Click the following link to reset your password:</p>
                <a href="' . $resetLink . '">Reset Password</a><br><br>
                <small>If you did not request this password reset, you can safely ignore this email.</small>
            </body>
        </html>';
    
    // Set headers for HTML email
    $headers = 'MIME-Version: 1.0' . "\r
";
    $headers .= 'Content-type: text/html; charset=iso-8859-1' . "\r
";
    $headers .= 'From:noreply@yourdomain.com' . "\r
";
    
    // Send email
    mail($to, $subject, $message, $headers);
}

function forgotPassword() {
    global $conn;
    
    if (isset($_POST['email'])) {
        $email = mysqli_real_escape_string($conn, $_POST['email']);
        
        // Check if email exists in database
        $sql = "SELECT id FROM users WHERE email = '$email'";
        $result = mysqli_query($conn, $sql);
        
        if (mysqli_num_rows($result) > 0) {
            // Generate reset token and expiration time
            $resetToken = bin2hex(random_bytes(16));
            $expirationTime = strtotime('+1 hour');
            
            // Insert reset token into database
            $insertSql = "INSERT INTO password_reset (user_id, token, expires) 
                         VALUES (?, ?, ?)";
            $stmt = mysqli_prepare($conn, $insertSql);
            mysqli_stmt_bind_param($stmt, 'iss', $userId, $resetToken, $expirationTime);
            
            if (mysqli_stmt_execute($stmt)) {
                // Send reset email
                $resetLink = 'http://yourdomain.com/reset-password.php?token=' . $resetToken;
                sendPasswordResetEmail($email, $resetLink);
                
                echo "An email has been sent with instructions to reset your password.";
            } else {
                echo "Error storing reset token: " . mysqli_error($conn);
            }
        } else {
            echo "Email not found in our records.";
        }
    }
}

function resetPassword() {
    global $conn;
    
    if (isset($_GET['token'])) {
        $resetToken = mysqli_real_escape_string($conn, $_GET['token']);
        
        // Check if token exists and is valid
        $sql = "SELECT * FROM password_reset 
                WHERE token = '$resetToken' 
                AND expires > CURRENT_TIMESTAMP";
        $result = mysqli_query($conn, $sql);
        
        if (mysqli_num_rows($result) == 1) {
            if ($_SERVER['REQUEST_METHOD'] == 'POST') {
                $newPassword = $_POST['new_password'];
                $confirmPassword = $_POST['confirm_password'];
                
                if ($newPassword == $confirmPassword) {
                    $hash = password_hash($newPassword, PASSWORD_DEFAULT);
                    $userId = mysqli_fetch_assoc($result)['user_id'];
                    
                    // Update user's password
                    $updateSql = "UPDATE users SET password = '$hash' WHERE id = '$userId'";
                    if (mysqli_query($conn, $updateSql)) {
                        // Delete reset token
                        $deleteSql = "DELETE FROM password_reset WHERE token = '$resetToken'";
                        mysqli_query($conn, $deleteSql);
                        
                        echo "Password has been successfully updated!";
                    } else {
                        echo "Error updating password: " . mysqli_error($conn);
                    }
                } else {
                    echo "Passwords do not match.";
                }
            }
        } else {
            echo "Invalid or expired reset token.";
        }
    }
}

// Close database connection
mysqli_close($conn);
?>


<?php
// Database configuration
$host = 'localhost';
$username = 'your_username';
$password = 'your_password';
$db_name = 'your_database';

// Connect to database
$conn = new mysqli($host, $username, $password, $db_name);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// If form is submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $email = $conn->real_escape_string($_POST['email']);

    // Check if email exists in database
    $query = "SELECT id, name FROM users WHERE email = '$email'";
    $result = $conn->query($query);

    if ($result->num_rows > 0) {
        // Generate a random token
        $token = bin2hex(random_bytes(32));
        
        // Set expiration time (30 minutes)
        $expires = date('Y-m-d H:i:s', strtotime('+30 minutes'));

        // Update the database with the new token and expiration time
        $updateQuery = "UPDATE users SET reset_token = '$token', reset_expires = '$expires' WHERE email = '$email'";
        
        if ($conn->query($updateQuery)) {
            // Send password reset email
            $to = $email;
            $subject = 'Password Reset Request';
            
            // Email content
            $message = "Dear user,

You have requested to reset your password.
Please click the following link to reset your password:

";
            $message .= "http://yourwebsite.com/reset-password.php?token=$token

";
            $message .= "If you did not request this, please ignore this email.
";
            $message .= "This link will expire in 30 minutes.";

            // Set headers
            $headers = 'From: your_email@example.com' . "\r
" .
                       'Reply-To: your_email@example.com' . "\r
" .
                       'X-Mailer: PHP/' . phpversion();

            if (mail($to, $subject, $message, $headers)) {
                // Password reset email sent
                header("Location: login.php?msg=Password reset link has been sent to your email.");
                exit();
            } else {
                echo "There was an error sending the password reset email.";
            }
        } else {
            echo "Error updating token: " . $conn->error;
        }
    } else {
        // Email not found in database
        header("Location: forgot-password.php?msg=No account found with this email.");
        exit();
    }
}

// Close database connection
$conn->close();

?>


<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 20px;
            background-color: #f5f5f5;
        }
        .container {
            max-width: 400px;
            margin: 0 auto;
            background-color: white;
            padding: 30px;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }
        .form-group {
            margin-bottom: 20px;
        }
        input[type="email"] {
            width: 100%;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-sizing: border-box;
        }
        button {
            background-color: #4CAF50;
            color: white;
            padding: 12px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            width: 100%;
        }
        button:hover {
            background-color: #45a049;
        }
        .message {
            margin-top: 20px;
            text-align: center;
            color: red;
        }
    </style>
</head>
<body>
    <div class="container">
        <?php
        if (!empty($_GET['msg'])) {
            echo "<div class='message'>" . $_GET['msg'] . "</div>";
        }
        ?>
        <h2>Forgot Password</h2>
        <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="POST">
            <div class="form-group">
                <input type="email" name="email" placeholder="Enter your email address" required>
            </div>
            <button type="submit">Reset Password</button>
        </form>
    </div>
</body>
</html>


<?php
// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'your_database';

// Create database connection
$conn = mysqli_connect($host, $username, $password, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Check if form is submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $email = $_POST['email'];
    
    // Sanitize email input
    $email = mysqli_real_escape_string($conn, $email);
    
    // Check if email exists in database
    $check_email_query = "SELECT * FROM users WHERE email='$email'";
    $result = mysqli_query($conn, $check_email_query);
    
    if (mysqli_num_rows($result) == 0) {
        echo "<div class='error'>Email not found!</div>";
    } else {
        // Generate temporary password
        $temp_password = rand(100000, 999999); // Generates a 6-digit number
        
        // Update database with temporary password
        $update_query = "UPDATE users SET password='$temp_password' WHERE email='$email'";
        mysqli_query($conn, $update_query);
        
        // Send email with temporary password
        $to = $email;
        $subject = 'Your Temporary Password';
        $message = "Your temporary password is: $temp_password
Please login and change your password.";
        
        if (mail($to, $subject, $message)) {
            echo "<div class='success'>Password reset successful! Check your email for the temporary password.</div>";
        } else {
            echo "<div class='error'>Error sending email!</div>";
        }
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
    <style>
        body { font-family: Arial, sans-serif; }
        .container { max-width: 500px; margin: 0 auto; padding: 20px; }
        input { width: 100%; padding: 8px; margin: 5px 0; }
        button { padding: 10px 20px; background-color: #4CAF50; color: white; border: none; }
        .success { color: green; }
        .error { color: red; }
    </style>
</head>
<body>
    <div class="container">
        <h2>Forgot Password</h2>
        <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
            <input type="email" name="email" placeholder="Enter your email address" required><br><br>
            <button type="submit">Reset Password</button>
        </form>
    </div>
</body>
</html>


<?php
// forgot_password.php

$to = $_POST['email'];
$subject = "Password Reset Request";

// Database connection details
$db_host = 'localhost';
$db_username = 'root';
$db_pass = '';
$db_name = 'test';

$conn = mysqli_connect($db_host, $db_username, $db_pass, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

$sql = "SELECT id FROM users WHERE email='$to'";
$result = mysqli_query($conn, $sql);
$count = mysqli_num_rows($result);

if ($count == 1) {
    // Generate a random token
    $token = md5(uniqid(rand(), true));
    
    $sql = "INSERT INTO password_reset (email, token) VALUES ('$to', '$token')";
    $result = mysqli_query($conn, $sql);
    
    if (!$result) {
        die("Database error: " . mysqli_error($conn));
    }
    
    // Configuration for the email
    $headers = "From: admin@example.com";
    $reset_link = "http://example.com/reset_password.php?email=$to&token=$token";
    $message = "Click the link below to reset your password:
$reset_link";
    
    if (mail($to, $subject, $message, $headers)) {
        echo "An email has been sent to you with a password reset link.";
    } else {
        echo "Failed to send email. Please try again later.";
    }
} else {
    echo "Email does not exist in our records.";
}

mysqli_close($conn);
?>


<?php
// reset_password.php

$new_password = $_POST['new_password'];
$confirm_password = $_POST['confirm_password'];
$email = $_POST['email'];

if ($new_password == $confirm_password) {
    // Hash the password
    $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);
    
    // Database connection details
    $db_host = 'localhost';
    $db_username = 'root';
    $db_pass = '';
    $db_name = 'test';

    $conn = mysqli_connect($db_host, $db_username, $db_pass, $db_name);
    
    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
    }
    
    // Update the user's password
    $sql = "UPDATE users SET password='$hashed_password' WHERE email='$email'";
    $result = mysqli_query($conn, $sql);
    
    if ($result) {
        echo "Password has been successfully updated. Please login with your new password.";
    } else {
        echo "Error updating password: " . mysqli_error($conn);
    }
    
    // Clean up the token
    $sql = "DELETE FROM password_reset WHERE email='$email'";
    mysqli_query($conn, $sql);
    
    mysqli_close($conn);
} else {
    echo "New passwords do not match. Please try again.";
}
?>


<?php
// Include database configuration file
require_once 'config.php';

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Check if email is provided and not empty
    $email = trim($_POST['email']);
    
    // Validate email format
    if (filter_var($email, FILTER_VALIDATE_EMAIL)) {
        // Check if the email exists in the database
        $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
        $stmt->bind_param('s', $email);
        $stmt->execute();
        $result = $stmt->get_result();
        
        if ($result->num_rows > 0) {
            // Generate a unique reset token
            $resetToken = bin2hex(random_bytes(16));
            
            // Set the expiration time (e.g., 1 hour from now)
            $expires = date('Y-m-d H:i:s', strtotime('+1 hour'));
            
            // Update the users table with the new reset token and expiration time
            $stmtReset = $conn->prepare("UPDATE users SET reset_token = ?, reset_expires = ? WHERE email = ?");
            $stmtReset->bind_param('sss', $resetToken, $expires, $email);
            $stmtReset->execute();
            
            // Send the password reset email
            $to = $email;
            $subject = "Password Reset Request";
            $message = "Please click on the following link to reset your password:

";
            $message .= "http://example.com/reset-password.php?token=" . urlencode($resetToken) . "&email=" . urlencode($email);
            $headers = "From: no-reply@example.com\r
";
            mail($to, $subject, $message, $headers);
            
            echo "Password reset email has been sent to your email address.";
        } else {
            echo "Email does not exist in our database.";
        }
    } else {
        echo "Please enter a valid email address.";
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <h2>Forgot Password</h2>
    <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
        <input type="email" name="email" placeholder="Enter your email address" required>
        <button type="submit">Reset Password</button>
    </form>
</body>
</html>


<?php
// Database connection
include('db.php');

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = mysqli_real_escape_string($conn, $_POST['email']);
    
    // Check if email exists in database
    $sql = "SELECT id, username FROM users WHERE email='$email'";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) == 1) {
        // Generate a random token and create an expiration time
        $token = bin2hex(random_bytes(32));
        $expires = date("Y-m-d H:i:s", time() + 3600); // Token expires after 1 hour
        
        // Insert token into database
        $insert_sql = "INSERT INTO password_reset (user_id, token, created_at) 
                      VALUES ('{$row['id']}', '$token', NOW())";
        
        if (mysqli_query($conn, $insert_sql)) {
            // Send email with reset link
            $to = $email;
            $subject = "Password Reset Request";
            $message = "Please click the following link to reset your password:

";
            $message .= "http://example.com/reset_password.php?token=$token&user_id={$row['id']}";
            
            // Use PHPMailer to send email (configure with your SMTP settings)
            require 'PHPMailer/PHPMailerAutoload.php';
            
            $mail = new PHPMailer;
            $mail->isSMTP();
            $mail->Host = 'smtp.example.com'; // Replace with your host
            $mail->Port = 587; // or 465 depending on your SMTP settings
            $mail->SMTPSecure = 'tls';
            $mail->SMTPAuth = true;
            $mail->Username = 'your_email@example.com'; // Replace with your email
            $mail->Password = 'your_password'; // Replace with your password
            
            $mail->setFrom('your_email@example.com', 'Your Name');
            $mail->addAddress($to);
            
            $mail->isHTML(true);
            $mail->Subject = $subject;
            $mail->Body = $message;
            
            if (!$mail->send()) {
                echo "Mailer Error: " . $mail->ErrorInfo;
            } else {
                echo "Password reset link has been sent to your email.";
            }
        }
    } else {
        echo "Email not found in our records!";
    }
}
?>


<?php
// Database connection
include('db.php');

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $new_pass = mysqli_real_escape_string($conn, $_POST['new_pass']);
    $confirm_pass = mysqli_real_escape_string($conn, $_POST['confirm_pass']);
    
    if ($new_pass != $confirm_pass) {
        die("Passwords do not match!");
    }
    
    // Hash the new password
    $hashed_password = password_hash($new_pass, PASSWORD_DEFAULT);
    
    // Update database with new password
    $update_sql = "UPDATE users SET password='$hashed_password' WHERE id='".$_GET['user_id']."'";
    
    if (mysqli_query($conn, $update_sql)) {
        // Delete the token after password change
        $delete_sql = "DELETE FROM password_reset 
                      WHERE user_id='".$_GET['user_id']."' AND token='".$_GET['token']."'";
        
        mysqli_query($conn, $delete_sql);
        
        echo "Password changed successfully!";
    } else {
        echo "Error updating password!";
    }
}
?>


<?php
// Database connection
include('db.php');

if (isset($_GET['token']) && isset($_GET['user_id'])) {
    $token = mysqli_real_escape_string($conn, $_GET['token']);
    $user_id = mysqli_real_escape_string($conn, $_GET['user_id']);
    
    // Check if token exists and is valid
    $check_sql = "SELECT * FROM password_reset 
                 WHERE token='$token' AND user_id='$user_id' 
                 AND created_at > NOW() - INTERVAL 1 HOUR";
    
    $result = mysqli_query($conn, $check_sql);
    
    if (mysqli_num_rows($result) == 1) {
        // Display reset form
        include('reset_password.html');
    } else {
        die("Invalid or expired token!");
    }
} else {
    die("No token provided!");
}
?>


// Example of basic input validation in reset.php

if (empty($_POST['email'])) {
    die("Email is required!");
}

// Add similar checks for other fields and operations


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'mydatabase';

// Create connection
$conn = new mysqli($host, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to generate random token
function generateToken() {
    $length = 32;
    $chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';
    $token = '';
    for ($i = 0; $i < $length; $i++) {
        $token .= $chars[rand(0, strlen($chars) - 1)];
    }
    return $token;
}

// Function to send email
function sendEmail($to, $subject, $message) {
    require 'PHPMailer/PHPMailerAutoload.php';
    
    $mail = new PHPMailer();
    $mail->isSMTP();
    $mail->Host = 'smtp.example.com'; // Replace with your SMTP server
    $mail->Port = 587;
    $mail->SMTPAuth = true;
    $mail->Username = 'your_email@example.com';
    $mail->Password = 'your_password';
    
    $mail->setFrom('your_email@example.com', 'Your Name');
    $mail->addAddress($to);
    $mail->Subject = $subject;
    $mail->Body = $message;
    
    if (!$mail->send()) {
        return false;
    }
    return true;
}

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = $_POST['email'];
    
    // Validate email
    if (empty($email)) {
        die("Email is required!");
    }
    
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        die("Invalid email format!");
    }
    
    // Check if email exists in database
    $sql = "SELECT id FROM users WHERE email = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param('s', $email);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows === 0) {
        die("Email not found in our records!");
    }
    
    // Generate reset token
    $token = generateToken();
    $expires = date('Y-m-d H:i:s', time() + 3600); // Token expires after 1 hour
    
    // Update user record with new token and expiration time
    $sql = "UPDATE users SET password_reset_token = ?, password_reset_expires = ? WHERE email = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param('sss', $token, $expires, $email);
    $stmt->execute();
    
    // Send reset link to user's email
    $resetLink = "http://$_SERVER[HTTP_HOST]/reset-password.php?token=$token&email=$email";
    $subject = "Password Reset Request";
    $message = "Please click the following link to reset your password: 

$resetLink

If you did not request this, please ignore this email.";
    
    if (sendEmail($email, $subject, $message)) {
        echo "An email has been sent to $email with instructions to reset your password.";
    } else {
        die("Failed to send email!");
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <h2>Forgot Password</h2>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <input type="email" name="email" placeholder="Enter your email" required><br><br>
        <input type="submit" value="Reset Password">
    </form>
</body>
</html>

// reset-password.php
<?php
session_start();

if (!isset($_GET['token']) || !isset($_GET['email'])) {
    die("Invalid request!");
}

$token = $_GET['token'];
$email = $_GET['email'];

// Check if token is valid and not expired
$sql = "SELECT id, password_reset_token, password_reset_expires FROM users WHERE email = ?";
$stmt = $conn->prepare($sql);
$stmt->bind_param('s', $email);
$stmt->execute();
$result = $stmt->get_result();

if ($result->num_rows === 0) {
    die("Invalid email!");
}

$user = $result->fetch_assoc();

if ($user['password_reset_token'] != $token) {
    die("Invalid reset token!");
}

$expires = $user['password_reset_expires'];
if (strtotime($expires) < time()) {
    die("This reset link has expired. Please request a new one.");
}

// Check if password is set
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $new_password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];
    
    if ($new_password != $confirm_password) {
        die("Passwords do not match!");
    }
    
    // Hash the new password
    $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);
    
    // Update user's password and clear reset token
    $sql = "UPDATE users SET password = ?, password_reset_token = NULL, password_reset_expires = NULL WHERE email = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param('ss', $hashed_password, $email);
    $stmt->execute();
    
    echo "Your password has been successfully reset!";
    // Redirect to login page
    header("Location: login.php");
    exit();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <h2>Reset Password</h2>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <input type="password" name="password" placeholder="Enter new password" required><br><br>
        <input type="password" name="confirm_password" placeholder="Confirm new password" required><br><br>
        <input type="submit" value="Reset Password">
    </form>
</body>
</html>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'mydatabase';
$username = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

// Form submission handling
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Validate and sanitize email input
    $email = filter_var($_POST['email'], FILTER_SANITIZE_EMAIL);
    
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        die("Invalid email format!");
    }

    try {
        // Check if the email exists in the database
        $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
        $stmt->execute([$email]);
        
        if ($stmt->rowCount() == 0) {
            die("Email not found in our records!");
        }
        
        // Generate a random token
        $token = bin2hex(random_bytes(16));
        $expires = date('Y-m-d H:i:s', strtotime('+1 hour'));
        
        // Insert the token into the database
        $stmt = $conn->prepare("INSERT INTO password_reset (user_id, token, expires) VALUES (?, ?, ?)");
        $stmt->execute([$stmt->fetchColumn(), $token, $expires]);

        // Send reset email
        $resetLink = "http://$_SERVER[HTTP_HOST]/reset-password.php?token=$token";
        
        $subject = 'Password Reset Request';
        $message = "
            <html>
            <head></head>
            <body>
                <h2>Password Reset</h2>
                <p>We received a request to reset your password. Please click the link below to reset it:</p>
                <a href='$resetLink'>Reset Password</a><br><br>
                <p>If you didn't request this password reset, you can safely ignore this email.</p>
                <p>This link will expire in 1 hour.</p>
            </body>
            </html>
        ";
        
        $headers = 'MIME-Version: 1.0' . "\r
";
        $headers .= 'Content-type: text/html; charset=UTF-8' . "\r
";
        $headers .= "From: noreply@yourdomain.com" . "\r
";
        
        mail($email, $subject, $message, $headers);
        
        echo "An email has been sent to your address with instructions to reset your password.";
    } catch (PDOException $e) {
        die("Error processing your request: " . $e->getMessage());
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <h2>Forgot Password</h2>
    
    <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
        <label for="email">Email:</label><br>
        <input type="email" id="email" name="email" required><br><br>
        <input type="submit" value="Send Reset Link">
    </form>

    <!-- Add some basic styling -->
    <style>
        body {
            font-family: Arial, sans-serif;
            max-width: 600px;
            margin: 20px auto;
            padding: 20px;
        }
        input {
            width: 100%;
            padding: 10px;
            margin: 5px 0;
            border: 1px solid #ddd;
            box-sizing: border-box;
        }
    </style>
</body>
</html>



<?php
// Database configuration and connection
// Include the same database configuration as above

session_start();

if ($_SERVER["REQUEST_METHOD"] == "GET") {
    $token = $_GET['token'] ?? '';

    if (empty($token)) {
        die("No token provided.");
    }

    try {
        // Check if token exists and hasn't expired
        $stmt = $conn->prepare("
            SELECT user_id 
            FROM password_reset 
            WHERE token = ? AND expires > NOW()
        ");
        
        $stmt->execute([$token]);
        
        if ($stmt->rowCount() == 0) {
            die("Invalid or expired token.");
        }

        // Store user ID in session
        $_SESSION['reset_user_id'] = $stmt->fetchColumn();
    } catch (PDOException $e) {
        die("Error validating token: " . $e->getMessage());
    }
}

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    if (!isset($_SESSION['reset_user_id'])) {
        die("No active reset session found.");
    }

    $password = $_POST['new_password'];
    
    try {
        // Update the user's password
        $stmt = $conn->prepare("
            UPDATE users 
            SET password = ?
            WHERE id = ?
        ");
        
        $stmt->execute([
            password_hash($password, PASSWORD_DEFAULT),
            $_SESSION['reset_user_id']
        ]);

        // Invalidate the reset token
        $stmt = $conn->prepare("DELETE FROM password_reset WHERE user_id = ?");
        $stmt->execute([$_SESSION['reset_user_id']]);

        unset($_SESSION['reset_user_id']);
        
        echo "Password has been successfully updated!";
    } catch (PDOException $e) {
        die("Error updating your password: " . $e->getMessage());
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <?php if ($_SERVER["REQUEST_METHOD"] == "GET"): ?>
        <h2>Reset Your Password</h2>
        
        <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
            <label for="new_password">New Password:</label><br>
            <input type="password" id="new_password" name="new_password" required><br><br>
            <input type="submit" value="Reset Password">
        </form>
    <?php endif; ?>
</body>
</html>



<?php
require 'database_connection.php';

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = $_POST['email'];
    
    // Check if email exists in the database
    $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
    $stmt->bind_param("s", $email);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows == 1) {
        // Generate a unique token
        $token = bin2hex(random_bytes(16));
        
        // Calculate expiration time (e.g., 30 minutes from now)
        $expires = date("Y-m-d H:i:s", time() + 30 * 60);
        
        // Insert token into the database
        $stmt = $conn->prepare("INSERT INTO password_reset_tokens (user_id, token, expires) VALUES (?, ?, ?)");
        $row = $result->fetch_assoc();
        $stmt->bind_param("iss", $row['id'], $token, $expires);
        $stmt->execute();
        
        // Send reset email
        $reset_link = "http://$_SERVER[HTTP_HOST]/reset_password.php?token=$token";
        $to = $email;
        $subject = "Password Reset Request";
        $message = "Please click the following link to reset your password: 
$reset_link

This link will expire in 30 minutes.";
        
        if (mail($to, $subject, $message)) {
            echo "<p>Email has been sent with reset instructions.</p>";
        } else {
            echo "<p>Failed to send email. Please try again later.</p>";
        }
    } else {
        header("Location: forgot_password.php?error=Email%20not%20found");
    }
}
?>


<?php
require 'database_connection.php';

if (!isset($_GET['token'])) {
    die("Invalid request.");
}

$token = $_GET['token'];

// Check if token exists and is valid
$stmt = $conn->prepare("SELECT * FROM password_reset_tokens WHERE token = ? AND expires > NOW()");
$stmt->bind_param("s", $token);
$stmt->execute();
$result = $stmt->get_result();

if ($result->num_rows == 0) {
    die("Invalid or expired reset link.");
}

$user_data = $result->fetch_assoc();
?>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Reset Password</title>
</head>
<body>
    <h2>Reset Password</h2>
    <?php
    if (isset($_POST['submit'])) {
        $new_password = $_POST['password'];
        
        // Update the user's password in the database
        $stmt = $conn->prepare("UPDATE users SET password = ? WHERE id = ?");
        $stmt->bind_param("si", $new_password, $user_data['user_id']);
        $stmt->execute();
        
        // Delete the token from the database after use
        $stmt = $conn->prepare("DELETE FROM password_reset_tokens WHERE token = ?");
        $stmt->bind_param("s", $token);
        $stmt->execute();
        
        echo "<p>Password updated successfully. You can now <a href='login.php'>log in</a>.</p>";
    } else {
        // Display reset form
        ?>
        <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
            <label for="password">New Password:</label>
            <input type="password" id="password" name="password">
            <br>
            <button type="submit" name="submit">Reset Password</button>
        </form>
        <?php
    }
    ?>
</body>
</html>


<?php
$servername = "localhost";
$username = "root"; // Replace with your database username
$password = "";     // Replace with your database password
$dbname = "your_database"; // Replace with your database name

// Create connection
$conn = new mysqli($servername, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}
?>


<?php
// config/db.php - Database configuration file
$db_host = 'localhost';
$db_name = 'your_database_name';
$db_user = 'root';
$db_pass = '';

try {
    $conn = new PDO("mysql:host=$db_host;dbname=$db_name", $db_user, $db_pass);
} catch(PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}
?>

<?php
// forgot_password.php - Forgot password form
session_start();
require_once 'config/db.php';

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $email = $_POST['email'];
    
    // Check if email exists in database
    $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
    $stmt->execute([$email]);
    $row = $stmt->fetch(PDO::FETCH_ASSOC);
    
    if ($row) {
        // Generate a random token and expiration time
        $token = bin2hex(random_bytes(16));
        $expires = date('Y-m-d H:i:s', strtotime('+30 minutes'));
        
        // Store the reset token in database
        $stmt = $conn->prepare("INSERT INTO password_resets (user_id, token, expires) VALUES (?, ?, ?)");
        $stmt->execute([$row['id'], $token, $expires]);
        
        // Send email with reset link
        $reset_link = "http://$_SERVER[HTTP_HOST]/reset_password.php?token=$token";
        $to = $email;
        $subject = 'Password Reset Request';
        $message = "Please click the following link to reset your password:
$reset_link

This link will expire in 30 minutes.";
        mail($to, $subject, $message);
        
        echo "A password reset link has been sent to your email address.";
    } else {
        echo "No account found with that email address.";
    }
}
?>
<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <h2>Forgot Password</h2>
    <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
        Email: <input type="email" name="email" required><br><br>
        <input type="submit" value="Send Reset Link">
    </form>
</body>
</html>

<?php
// reset_password.php - Password reset page
session_start();
require_once 'config/db.php';

if (!isset($_GET['token']) || $_GET['token'] == '') {
    die("No token provided.");
}

$token = $_GET['token'];
$user_id = null;

// Get user ID and expiration time from database
$stmt = $conn->prepare("SELECT user_id, expires FROM password_resets WHERE token = ?");
$stmt->execute([$token]);
$row = $stmt->fetch(PDO::FETCH_ASSOC);

if (!$row) {
    die("Invalid or expired token.");
}

$expires = $row['expires'];
$user_id = $row['user_id'];

// Check if token has expired
if (strtotime($expires) < time()) {
    // Delete the old token
    $conn->prepare("DELETE FROM password_resets WHERE token = ?")->execute([$token]);
    die("Token has expired. Please request a new reset link.");
}

// If everything is good, display the reset form
?>
<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <?php if ($_SERVER['REQUEST_METHOD'] == 'POST') { ?>
        <?php
        // Reset password process
        $password = $_POST['password'];
        $confirm_password = $_POST['confirm_password'];
        
        if ($password != $confirm_password) {
            die("Passwords do not match.");
        }
        
        // Hash the password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);
        
        // Update the user's password
        $stmt = $conn->prepare("UPDATE users SET password = ? WHERE id = ?");
        $stmt->execute([$hashed_password, $user_id]);
        
        // Delete the reset token
        $conn->prepare("DELETE FROM password_resets WHERE token = ?")->execute([$token]);
        
        echo "Password successfully reset!";
        ?>
    <?php } else { ?>
        <h2>Reset Password</h2>
        <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
            New Password: <input type="password" name="password" required><br><br>
            Confirm Password: <input type="password" name="confirm_password" required><br><br>
            <input type="submit" value="Reset Password">
        </form>
    <?php } ?>
</body>
</html>


<?php
// Database connection
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "myDB";

// Create connection
$conn = new mysqli($servername, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// If form submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Validate and sanitize email input
    $email = trim($_POST['email']);
    if (empty($email)) {
        $message = "Please enter your email address";
    } else if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        $message = "Invalid email format";
    } else {
        // Check if email exists in database
        $sql = "SELECT id FROM users WHERE email = ?";
        $stmt = $conn->prepare($sql);
        $stmt->bind_param("s", $email);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows === 0) {
            // Email not found
            $message = "No account associated with this email";
        } else {
            // Generate a random token and expiration time
            $token = bin2hex(random_bytes(16));
            $expires = time() + (30 * 60); // Token expires in 30 minutes

            // Update database with new token and expiration time
            $updateSql = "UPDATE users SET reset_token = ?, reset_expires = ? WHERE email = ?";
            $updateStmt = $conn->prepare($updateSql);
            $updateStmt->bind_param("sis", $token, $expires, $email);
            $updateStmt->execute();

            // Send password reset email
            $to = $email;
            $subject = "Password Reset Request";
            $messageBody = "
                <html>
                    <body>
                        <p>We received a request to reset your password. Click the link below to reset it:</p>
                        <a href='http://$_SERVER[HTTP_HOST]/reset-password.php?token=$token'>Reset Password</a>
                        <br><br>
                        <small>This link will expire in 30 minutes.</small>
                    </body>
                </html>
            ";
            $headers = "MIME-Version: 1.0" . "\r
";
            $headers .= "Content-type:text/html;charset=UTF-8" . "\r
";
            $headers .= "From: <your_email@example.com>" . "\r
";

            if (mail($to, $subject, $messageBody, $headers)) {
                // Clear the token from email
                $token = null;
                $successMessage = "A password reset link has been sent to your email address.";
            } else {
                $errorMessage = "An error occurred while sending the email. Please try again later.";
            }
        }
    }
}

// Close database connection
$conn->close();

// Display messages
if (isset($successMessage)) {
    echo "<div class='success'>$successMessage</div>";
} elseif (isset($message) || isset($errorMessage)) {
    echo "<div class='error'>";
    if (isset($message)) echo $message;
    if (isset($errorMessage)) echo $errorMessage;
    echo "</div>";
}
?>

<!-- HTML form -->
<form method="POST" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    <label for="email">Enter your email address:</label>
    <input type="email" id="email" name="email" required>
    <button type="submit">Reset Password</button>
</form>


<?php
// config.php - Database configuration
$host = 'localhost';
$dbname = 'your_database_name';
$user = 'your_username';
$password = 'your_password';

try {
    $pdo = new PDO("mysql:host=$host;dbname=$dbname", $user, $password);
    $pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    die("Could not connect to the database: " . $e->getMessage());
}
?>

// forgot.php - Forgot password form
<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <h2>Forgot Password</h2>
    <?php if (isset($_GET['error'])) { ?>
        <p style="color: red"><?php echo $_GET['error']; ?></p>
    <?php } ?>

    <form action="process_forgot.php" method="post">
        <label>Email:</label><br>
        <input type="email" name="email" required><br><br>
        <button type="submit">Reset Password</button>
    </form>
</body>
</html>

// process_forgot.php
<?php
include 'config.php';

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = $_POST['email'];
    
    try {
        $stmt = $pdo->prepare("SELECT id FROM users WHERE email = ?");
        $stmt->execute([$email]);
        
        if ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {
            // Generate token
            $token = md5(uniqid(rand(), true));
            $expires = date('Y-m-d H:i:s', strtotime('+1 hour'));
            
            // Insert token into database
            $insertTokenStmt = $pdo->prepare("INSERT INTO reset_tokens (user_id, token, expires) VALUES (?, ?, ?)");
            $insertTokenStmt->execute([$row['id'], $token, $expires]);
            
            // Send email with reset link
            $to = $email;
            $subject = "Password Reset Request";
            $message = "Please click the following link to reset your password: http://example.com/reset.php?token=$token";
            $headers = "From: noreply@example.com\r
";
            
            if (mail($to, $subject, $message, $headers)) {
                echo "A password reset link has been sent to your email.";
            } else {
                die("Failed to send the email.");
            }
        } else {
            header("Location: forgot.php?error=Email%20not%20found");
        }
    } catch (PDOException $e) {
        die("Error: " . $e->getMessage());
    }
}
?>

// reset.php - Password reset form
<?php
include 'config.php';

if (!isset($_GET['token'])) {
    die("Invalid request.");
}

$token = $_GET['token'];

try {
    // Check if token exists and hasn't expired
    $stmt = $pdo->prepare("SELECT * FROM reset_tokens WHERE token = ? AND expires > NOW()");
    $stmt->execute([$token]);
    
    if (!$row = $stmt->fetch(PDO::FETCH_ASSOC)) {
        die("Invalid or expired token.");
    }
} catch (PDOException $e) {
    die("Error: " . $e->getMessage());
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <h2>Reset Password</h2>
    <?php if (isset($_GET['error'])) { ?>
        <p style="color: red"><?php echo $_GET['error']; ?></p>
    <?php } ?>

    <form action="process_reset.php" method="post">
        <input type="hidden" name="token" value="<?php echo $token; ?>">
        <label>New Password:</label><br>
        <input type="password" name="new_password" required><br><br>
        <label>Confirm New Password:</label><br>
        <input type="password" name="confirm_new_password" required><br><br>
        <button type="submit">Reset Password</button>
    </form>
</body>
</html>

// process_reset.php
<?php
include 'config.php';

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $token = $_POST['token'];
    $new_password = $_POST['new_password'];
    $confirm_new_password = $_POST['confirm_new_password'];
    
    if ($new_password != $confirm_new_password) {
        header("Location: reset.php?token=$token&error=Passwords%20do%20not%20match");
        exit();
    }
    
    try {
        // Verify token
        $stmt = $pdo->prepare("SELECT user_id FROM reset_tokens WHERE token = ? AND expires > NOW()");
        $stmt->execute([$token]);
        
        if (!$row = $stmt->fetch(PDO::FETCH_ASSOC)) {
            die("Invalid or expired token.");
        }
        
        $user_id = $row['user_id'];
        
        // Update password
        $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);
        $updateStmt = $pdo->prepare("UPDATE users SET password = ? WHERE id = ?");
        $updateStmt->execute([$hashed_password, $user_id]);
        
        // Invalidate token
        $invalidateStmt = $pdo->prepare("DELETE FROM reset_tokens WHERE token = ?");
        $invalidateStmt->execute([$token]);
        
        echo "Password has been successfully updated!";
    } catch (PDOException $e) {
        die("Error: " . $e->getMessage());
    }
}
?>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'mydatabase';
$username = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get email from form
    $email = $_POST['email'];
    
    // Check if email exists in database
    $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
    $stmt->execute([$email]);
    $user = $stmt->fetch(PDO::FETCH_ASSOC);
    
    if ($user) {
        // Generate reset token
        $token = md5(rand(1000, 9999));
        
        // Store token in database
        $stmt = $conn->prepare("INSERT INTO password_resets (user_id, token) VALUES (?, ?)");
        $stmt->execute([$user['id'], $token]);
        
        // Send reset email
        $resetLink = "http://example.com/reset_password.php?token=" . $token;
        $to = $email;
        $subject = "Password Reset Request";
        $message = "Click the following link to reset your password: 
" . $resetLink;
        
        mail($to, $subject, $message);
        
        echo "We have sent a password reset link to your email address.";
    } else {
        $error = "Email does not exist in our records.";
    }
}
?>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'mydatabase';
$username = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get token and password from form
    $token = $_POST['token'];
    $password = $_POST['password'];
    
    // Check if token exists in database
    $stmt = $conn->prepare("SELECT user_id FROM password_resets WHERE token = ?");
    $stmt->execute([$token]);
    $reset = $stmt->fetch(PDO::FETCH_ASSOC);
    
    if ($reset) {
        // Update user's password
        $hash = md5($password); // Use a stronger hashing algorithm like bcrypt in production
        $stmt = $conn->prepare("UPDATE users SET password = ? WHERE id = ?");
        $stmt->execute([$hash, $reset['user_id']]);
        
        // Delete token from database
        $stmt = $conn->prepare("DELETE FROM password_resets WHERE token = ?");
        $stmt->execute([$token]);
        
        echo "Your password has been reset successfully!";
    } else {
        $error = "Invalid or expired reset link.";
    }
}
?>


<?php
// Include database configuration
include('config.php');

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = filter_var($_POST['email'], FILTER_SANITIZE_EMAIL);

    // Check if email is not empty and valid
    if (empty($email) || !filter_var($email, FILTER_VALIDATE_EMAIL)) {
        die("Invalid email format");
    }

    // Check if email exists in the database
    try {
        $stmt = $pdo->prepare("SELECT id FROM users WHERE email = ?");
        $stmt->execute([$email]);
        $user = $stmt->fetch();

        if (!$user) {
            die("Email not found. Please check your email and try again.");
        }

        // Generate a random token
        $token = bin2hex(random_bytes(32));

        // Set token expiration to 1 hour from now
        $expires = date('Y-m-d H:i:s', strtotime('+1 hour'));

        // Update the database with the new token and expiration time
        $stmt = $pdo->prepare("UPDATE users SET reset_token = ?, reset_expires = ? WHERE email = ?");
        $stmt->execute([$token, $expires, $email]);

        // Send email to user
        $to = $email;
        $subject = "Password Reset Request";
        
        $message = "
            <html>
            <head></head>
            <body>
                <h2>Password Reset</h2>
                <p>Please click the link below to reset your password:</p>
                <a href='http://example.com/reset_password.php?token=$token&id=$user[id]'>
                    http://example.com/reset_password.php?token=$token&id=$user[id]
                </a>
                <br><br>
                <p>If you did not request this password reset, please ignore this email.</p>
            </body>
            </html>
        ";

        // Set headers for HTML email
        $headers = "MIME-Version: 1.0" . "\r
";
        $headers .= "Content-type:text/html;charset=UTF-8" . "\r
";
        $headers .= "From: <noreply@example.com>" . "\r
";

        // Send the email
        if (mail($to, $subject, $message, $headers)) {
            echo "An email has been sent to your address. Please check your inbox.";
        } else {
            die("Failed to send password reset email.");
        }
    } catch(PDOException $e) {
        die("Database error: " . $e->getMessage());
    }
}
?>


<?php
// Include database configuration
include('config.php');

if (isset($_GET['token']) && isset($_GET['id'])) {
    $token = $_GET['token'];
    $id = $_GET['id'];

    // Check if token is valid and not expired
    try {
        $stmt = $pdo->prepare("SELECT * FROM users WHERE id = ? AND reset_token = ? AND reset_expires > NOW()");
        $stmt->execute([$id, $token]);
        $user = $stmt->fetch();

        if (!$user) {
            die("Invalid or expired token. Please request a new password reset.");
        }

    } catch(PDOException $e) {
        die("Database error: " . $e->getMessage());
    }
} else {
    die("Missing parameters. Please use the link from your email.");
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <h2>Reset Password</h2>
    <form action="reset_password.php?token=<?php echo $token; ?>&id=<?php echo $id; ?>" method="post">
        New Password: <input type="password" name="new_password" required><br>
        Confirm Password: <input type="password" name="confirm_password" required><br>
        <button type="submit">Reset Password</button>
    </form>
</body>
</html>


<?php
// Include database configuration
include('config.php');

if ($_SERVER["REQUEST_METHOD"] == "POST" && isset($_GET['token']) && isset($_GET['id'])) {
    $new_password = $_POST['new_password'];
    $confirm_password = $_POST['confirm_password'];

    // Check if passwords match
    if ($new_password !== $confirm_password) {
        die("Passwords do not match. Please try again.");
    }

    // Validate password length (minimum 8 characters)
    if (strlen($new_password) < 8) {
        die("Password must be at least 8 characters long.");
    }

    $token = $_GET['token'];
    $id = $_GET['id'];

    try {
        // Check token again
        $stmt = $pdo->prepare("SELECT * FROM users WHERE id = ? AND reset_token = ? AND reset_expires > NOW()");
        $stmt->execute([$id, $token]);
        $user = $stmt->fetch();

        if (!$user) {
            die("Invalid or expired token. Please request a new password reset.");
        }

        // Hash the new password
        $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);

        // Update the password and clear the reset token
        $stmt = $pdo->prepare("UPDATE users SET password = ?, reset_token = NULL, reset_expires = NULL WHERE id = ?");
        $stmt->execute([$hashed_password, $id]);

        echo "Password successfully updated. You can now <a href='login.php'>login</a> with your new password.";

    } catch(PDOException $e) {
        die("Database error: " . $e->getMessage());
    }
}
?>


<?php
// Database connection details
$host = 'localhost';
$user = 'username';
$password = 'password';
$dbname = 'mydatabase';

$conn = mysqli_connect($host, $user, $password, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

if (isset($_POST['email'])) {
    $email = $_POST['email'];
    
    // Validate email
    if (empty($email)) {
        header("Location: forgot_password.php?error=Email is required");
        exit();
    }
    
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        header("Location: forgot_password.php?error=Invalid email format");
        exit();
    }
    
    // Check if user exists
    $sql = "SELECT id FROM users WHERE email = ?";
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, "s", $email);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);
    
    if (mysqli_num_rows($result) == 0) {
        header("Location: forgot_password.php?error=No account found with this email");
        exit();
    }
    
    // Generate reset token and expiration time
    $resetToken = bin2hex(random_bytes(16));
    $expires = date('Y-m-d H:i:s', strtotime('+1 hour'));
    
    // Insert reset token into the database
    $sql = "INSERT INTO password_resets (user_id, token, expires) 
            VALUES (?, ?, ?)";
    $stmt = mysqli_prepare($conn, $sql);
    $row = mysqli_fetch_assoc($result);
    mysqli_stmt_bind_param($stmt, "iss", $row['id'], $resetToken, $expires);
    mysqli_stmt_execute($stmt);
    
    // Send email with reset link
    $to = $email;
    $subject = "Password Reset Request";
    $message = "Click the following link to reset your password: 
                http://example.com/reset_password.php?token=$resetToken&id=" . $row['id'];
    $headers = "From: noreply@example.com\r
";
    
    if (mail($to, $subject, $message, $headers)) {
        header("Location: forgot_password.php?error=Password reset link sent to your email");
    } else {
        header("Location: forgot_password.php?error=Failed to send password reset email");
    }
}

mysqli_close($conn);
?>


<?php
session_start();
// Database connection details
$host = 'localhost';
$user = 'username';
$password = 'password';
$dbname = 'mydatabase';

$conn = mysqli_connect($host, $user, $password, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

if (!isset($_GET['token']) || !isset($_GET['id'])) {
    header("Location: forgot_password.php?error=Invalid reset link");
    exit();
}

$resetToken = $_GET['token'];
$userID = $_GET['id'];

// Check if token exists and is valid
$sql = "SELECT * FROM password_resets 
        WHERE token = ? AND user_id = ? 
        AND expires > NOW()";
$stmt = mysqli_prepare($conn, $sql);
mysqli_stmt_bind_param($stmt, "si", $resetToken, $userID);
mysqli_stmt_execute($stmt);
$result = mysqli_stmt_get_result($stmt);

if (mysqli_num_rows($result) == 0) {
    header("Location: forgot_password.php?error=Invalid or expired reset link");
    exit();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <h2>Reset Password</h2>
    
    <?php
    if (isset($_GET['error'])) {
        echo "<p style='color:red;'>".$_GET['error']."</p>";
    }
    ?>

    <form action="reset_password_process.php" method="POST">
        <input type="password" name="new_password" placeholder="Enter new password" required><br>
        <input type="hidden" name="token" value="<?php echo $resetToken; ?>">
        <input type="hidden" name="id" value="<?php echo $userID; ?>">
        <button type="submit">Reset Password</button>
    </form>
</body>
</html>

<?php
mysqli_close($conn);
?>


// Database connection details
$host = 'localhost';
$user = 'username';
$password = 'password';
$dbname = 'mydatabase';

$conn = mysqli_connect($host, $user, $password, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

if (!isset($_POST['new_password']) || !isset($_POST['token']) || !isset($_POST['id'])) {
    header("Location: forgot_password.php?error=Invalid reset request");
    exit();
}

$ newPassword = $_POST['new_password'];
$resetToken = $_POST['token'];
$userID = $_POST['id'];

// Validate token
$sql = "SELECT * FROM password_resets 
        WHERE token = ? AND user_id = ? 
        AND expires > NOW()";
$stmt = mysqli_prepare($conn, $sql);
mysqli_stmt_bind_param($stmt, "si", $resetToken, $userID);
mysqli_stmt_execute($stmt);
$result = mysqli_stmt_get_result($stmt);

if (mysqli_num_rows($result) == 0) {
    header("Location: forgot_password.php?error=Invalid or expired reset link");
    exit();
}

// Hash the new password
$hashedPassword = password_hash($newPassword, PASSWORD_DEFAULT);

// Update user's password
$sql = "UPDATE users 
        SET password = ?
        WHERE id = ?";
$stmt = mysqli_prepare($conn, $sql);
mysqli_stmt_bind_param($stmt, "si", $hashedPassword, $userID);
mysqli_stmt_execute($stmt);

// Clear reset token
$sql = "DELETE FROM password_resets 
        WHERE token = ? AND user_id = ?";
$stmt = mysqli_prepare($conn, $sql);
mysqli_stmt_bind_param($stmt, "si", $resetToken, $ userID);
mysqli_stmt_execute($stmt);

header("Location: login.php?success=Password reset successful. Please login with your new password.");
exit();

mysqli_close($conn);
?>


<?php
// Include database connection file
include_once("db_connection.php");

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = mysqli_real_escape_string($conn, $_POST['email']);

    // Check if email exists in the database
    $sql = "SELECT * FROM users WHERE email='$email'";
    $result = mysqli_query($conn, $sql);
    $row = mysqli_fetch_assoc($result);

    if (mysqli_num_rows($result) == 0) {
        echo "Email does not exist in our records!";
    } else {
        // Generate a temporary password
        $chars = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^&*";
        $temp_password_length = 12;
        $temp_password = substr(str_shuffle($chars), 0, $temp_password_length);

        // Hash the temporary password before storing it in the database
        $hashed_temp_password = password_hash($temp_password, PASSWORD_DEFAULT);

        // Update the database with the new password
        $sql_update = "UPDATE users SET password='$hashed_temp_password' WHERE email='$email'";
        mysqli_query($conn, $sql_update);

        // Send an email to the user with their temporary password
        $to = $email;
        $subject = "Your Temporary Password";
        $message = "
            <html>
            <head>
                <title>Temporary Password</title>
            </head>
            <body>
                <p>Your temporary password is: <strong>$temp_password</strong></p>
                <p>Please login and change your password immediately after logging in.</p>
                <br>
                <p>Best regards,<br>The Team</p>
            </body>
            </html>";
        $headers = "MIME-Version: 1.0" . "\r
";
        $headers .= "Content-type:text/html;charset=UTF-8" . "\r
";
        $headers .= "From: admin@example.com" . "\r
";

        mail($to, $subject, $message, $headers);

        // Redirect to login page
        header("Location: login.php");
        exit();
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <h2>Forgot Password</h2>
    <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
        Enter your email: <input type="text" name="email">
        <input type="submit" value="Submit">
    </form>
</body>
</html>


<?php
session_start();
require 'database_connection.php';

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $email = $_POST['email'];
    $username = $_POST['username'];

    // Check if user exists by email or username
    $stmt = $conn->prepare("SELECT * FROM users WHERE email=? OR username=?");
    $stmt->bind_param("ss", $email, $username);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows == 0) {
        echo "Email or username does not exist.";
        exit;
    }

    // Generate temporary password
    $temp_password = bin2hex(random_bytes(6));
    
    // Hash the password
    $hashed_password = password_hash($temp_password, PASSWORD_DEFAULT);

    // Update user's password
    $update_stmt = $conn->prepare("UPDATE users SET password=? WHERE email=? OR username=?");
    $update_stmt->bind_param("sss", $hashed_password, $email, $username);
    $update_result = $update_stmt->execute();

    if (!$update_result) {
        echo "Error updating password.";
        exit;
    }

    // Function to send email
    function sendPasswordEmail($to, $password) {
        $subject = 'Your Temporary Password';
        $message = "Use this temporary password: $password. Please change it upon login.";
        $headers = 'From: your_email@example.com' . "\r
" .
                   'Reply-To: your_reply@example.com' . "\r
" .
                   'X-Mailer: PHP/' . phpversion();

        return mail($to, $subject, $message, $headers);
    }

    // Send email
    if (sendPasswordEmail($email, $temp_password)) {
        echo "Temporary password sent to your email.";
    } else {
        echo "Failed to send password. Please try again.";
    }
}
?>


<?php
$host = 'localhost';
$user = 'root';
$password = '';
$dbname = 'your_database';

$conn = new mysqli($host, $user, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}
?>


<?php
session_start();
include('config.php');

// Check if form is submitted
if (isset($_POST['reset_password'])) {
    $email = $_POST['email'];
    
    // Validate email input
    if (empty($email)) {
        die("Email is required");
    }

    // Check if email exists in the database
    $query = "SELECT id FROM users WHERE email = ?";
    $stmt = $conn->prepare($query);
    $stmt->bind_param("s", $email);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows === 0) {
        die("Email not found in our database");
    }

    // Generate a random token
    $token = bin2hex(random_bytes(32));

    // Update the user's record with the new token and expiration time (e.g., 1 hour)
    $expires = date('Y-m-d H:i:s', strtotime('+1 hour'));
    
    $updateQuery = "UPDATE users SET reset_token = ?, reset_expires = ? WHERE email = ?";
    $stmt = $conn->prepare($updateQuery);
    $stmt->bind_param("sss", $token, $expires, $email);
    $stmt->execute();

    // Send the password reset email
    $to = $email;
    $subject = "Password Reset Request";
    
    $message = "
        <html>
            <head></head>
            <body>
                <h2>Password Reset</h2>
                <p>Please click the following link to reset your password:</p>
                <a href='http://your-site.com/reset_password.php?token=$token'>Reset Password</a><br><br>
                <small>If you did not request a password reset, please ignore this email.</small>
                <br><small>This link will expire in 1 hour.</small>
            </body>
        </html>
    ";
    
    $headers = "MIME-Version: 1.0" . "\r
";
    $headers .= "Content-type:text/html;charset=UTF-8" . "\r
";
    $headers .= "From: yourname@your-site.com" . "\r
";
    
    mail($to, $subject, $message, $headers);

    // Redirect back to the forgot password page
    header("Location: forgot_password.php?msg=We've sent you a password reset link. Please check your email.");
    exit();
}

// Display message if set
if (isset($_GET['msg'])) {
    echo "<div style='color:green'>".$_GET['msg']."</div>";
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <h2>Forgot Password</h2>
    
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <input type="email" name="email" placeholder="Enter your email address" required><br><br>
        <button type="submit" name="reset_password">Reset Password</button>
    </form>

    <p>Don't have an account? <a href="register.php">Register here</a></p>
</body>
</html>


<?php
session_start();
include('config.php');

// Check if token is provided in URL
if (!isset($_GET['token'])) {
    die("Invalid request");
}

$token = $_GET['token'];

// Get user data based on token and check expiration
$query = "SELECT id, email, reset_token, reset_expires FROM users WHERE reset_token = ?";
$stmt = $conn->prepare($query);
$stmt->bind_param("s", $token);
$stmt->execute();
$result = $stmt->get_result();

if ($result->num_rows === 0) {
    die("Invalid or expired token");
}

$user = $result->fetch_assoc();

// Check if token has expired
$expires = strtotime($user['reset_expires']);
if (time() > $expires) {
    die("This password reset link has expired. Please request a new one.");
}

// If form is submitted, update the password
if (isset($_POST['new_password'])) {
    $new_password = $_POST['new_password'];
    
    // Validate password input
    if (empty($new_password)) {
        die("Password is required");
    }
    
    // Hash the new password
    $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);
    
    // Update the user's password
    $updateQuery = "UPDATE users SET password = ?, reset_token = NULL, reset_expires = NULL WHERE id = ?";
    $stmt = $conn->prepare($updateQuery);
    $stmt->bind_param("si", $hashed_password, $user['id']);
    $stmt->execute();
    
    // Redirect to login page
    header("Location: login.php?msg=Your password has been reset successfully.");
    exit();
}

?>

<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <h2>Reset Password</h2>
    
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>?token=<?php echo $token; ?>" method="post">
        New Password: <input type="password" name="new_password" required><br><br>
        <button type="submit">Change Password</button>
    </form>
</body>
</html>


<?php
session_start();
include('db_connect.php'); // Include your database connection file

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email_username = mysqli_real_escape_string($conn, $_POST['email_username']);

    // Check if the email/username exists in the database
    $sql = "SELECT * FROM users WHERE email='$email_username' OR username='$email_username'";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) == 1) {
        $row = mysqli_fetch_assoc($result);
        $user_id = $row['id'];
        
        // Generate a random password reset token
        $token = bin2hex(random_bytes(32));
        
        // Set the token expiration time (e.g., 1 hour from now)
        $expires = date('Y-m-d H:i:s', strtotime('+1 hour'));
        
        // Update the database with the new token and expiration time
        $update_sql = "UPDATE users SET reset_token='$token', reset_expires='$expires' WHERE id=$user_id";
        mysqli_query($conn, $update_sql);
        
        // Send password reset email
        $to = $row['email'];
        $subject = 'Password Reset Request';
        $message = '
            <html>
                <body>
                    <p>You requested a password reset. Please click the link below to reset your password:</p>
                    <a href="http://your-website.com/reset_password.php?token='.$token.'">Reset Password</a><br><br>
                    <small>If you did not request this, please ignore this email.</small>
                </body>
            </html>
        ';
        $headers = "MIME-Version: 1.0" . "\r
";
        $headers .= "Content-type:text/html;charset=UTF-8" . "\r
";
        $headers .= "From: your-email@example.com" . "\r
";

        if (mail($to, $subject, $message, $headers)) {
            // Redirect back to login page with success message
            header("Location: login.php?msg=We've sent you an email with instructions to reset your password.");
            exit();
        } else {
            echo "An error occurred while sending the email. Please try again later.";
        }
    } else {
        echo "Email or username not found in our records. Please check and try again.";
    }
}
?>


<?php
session_start();
include('db_connect.php'); // Include your database connection file

if (!isset($_GET['token'])) {
    die("Invalid request.");
}

$token = mysqli_real_escape_string($conn, $_GET['token']);

// Check if token exists and is valid
$sql = "SELECT * FROM users WHERE reset_token='$token' AND reset_expires > NOW()";
$result = mysqli_query($conn, $sql);

if (mysqli_num_rows($result) == 0) {
    die("Invalid or expired password reset link.");
}

// If the user is submitting a new password
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $token = mysqli_real_escape_string($conn, $_GET['token']);
    $password = mysqli_real_escape_string($conn, $_POST['password']);
    $confirm_password = mysqli_real_escape_string($conn, $_POST['confirm_password']);

    if ($password != $confirm_password) {
        die("Passwords do not match. Please try again.");
    }

    // Check password strength (you can modify these requirements)
    if (strlen($password) < 8) {
        die("Password must be at least 8 characters long.");
    }

    // Update the user's password
    $hash = password_hash($password, PASSWORD_DEFAULT);
    $update_sql = "UPDATE users SET password='$hash', reset_token='', reset_expires='' WHERE reset_token='$token'";
    mysqli_query($conn, $update_sql);

    header("Location: login.php?msg=Your password has been successfully updated.");
    exit();
}

// Display the password reset form
?>

<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <h2>Reset Password</h2>
    <form action="reset_password.php?token=<?php echo $token; ?>" method="post">
        New Password: <input type="password" name="password" required><br>
        Confirm Password: <input type="password" name="confirm_password" required><br><br>
        <input type="submit" value="Reset Password">
    </form>
</body>
</html>


<?php
session_start();

// Include database configuration file
include 'config.php';

// If form submitted
if (isset($_POST['submit'])) {
    $email = $_POST['email'];
    
    // Check if email exists in the database
    $query = "SELECT id, username FROM users WHERE email='$email'";
    $result = mysqli_query($db, $query);
    
    if (mysqli_num_rows($result) > 0) {
        // Generate a random token
        $token = md5(uniqid());
        
        // Update the database with the new token and expiration time
        $updateQuery = "UPDATE users SET forgot_password_token = '$token', 
                                        forgot_password_expires = NOW() + INTERVAL 1 HOUR 
                                    WHERE email='$email'";
        mysqli_query($db, $updateQuery);
        
        // Send password reset link to user's email
        $to = $email;
        $subject = "Password Reset Request";
        $message = "Please click the following link to reset your password:

";
        $message .= "http://example.com/reset_password.php?token=$token&email=$email";
        $headers = "From: noreply@example.com\r
";
        
        if (mail($to, $subject, $message, $headers)) {
            echo "<p>We've sent a password reset link to your email address.</p>";
            echo "<p>The link will expire in 1 hour.</p>";
        } else {
            echo "Error sending email. Please try again later.";
        }
    } else {
        echo "Email not found in our database. Please check your email and try again.";
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <h2>Forgot Password</h2>
    
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <label for="email">Email:</label><br>
        <input type="text" id="email" name="email"><br>
        
        <input type="submit" name="submit" value="Submit">
    </form>
</body>
</html>

// Reset Password Page (reset_password.php)

<?php
session_start();

include 'config.php';

if (isset($_GET['token']) && isset($_GET['email'])) {
    $token = $_GET['token'];
    $email = $_GET['email'];
    
    // Check if token is valid and not expired
    $query = "SELECT id FROM users 
              WHERE email='$email' AND forgot_password_token='$token'
              AND forgot_password_expires > NOW()";
    
    $result = mysqli_query($db, $query);
    
    if (mysqli_num_rows($result) == 1) {
        // Show password reset form
?>
<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <h2>Reset Password</h2>
    
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <label for="password">New Password:</label><br>
        <input type="password" id="password" name="password"><br>
        
        <label for="confirm_password">Confirm Password:</label><br>
        <input type="password" id="confirm_password" name="confirm_password"><br>
        
        <input type="hidden" name="token" value="<?php echo $token; ?>">
        <input type="hidden" name="email" value="<?php echo $email; ?>">
        
        <input type="submit" name="reset_password" value="Reset Password">
    </form>
<?php
    } else {
        echo "Invalid or expired token. Please try again.";
    }
}

// If reset password form submitted
if (isset($_POST['reset_password'])) {
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];
    $token = $_POST['token'];
    $email = $_POST['email'];
    
    if ($password != $confirm_password) {
        echo "Passwords do not match. Please try again.";
    } else {
        // Update the password
        $updateQuery = "UPDATE users SET password='$password', 
                                        forgot_password_token = NULL,
                                        forgot_password_expires = NULL 
                                    WHERE email='$email' AND forgot_password_token='$token'";
        
        mysqli_query($db, $updateQuery);
        
        echo "Password has been reset successfully!";
    }
}
?>
</body>
</html>


<?php
// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'mydatabase';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Get email from form
    $email = mysqli_real_escape_string($conn, $_POST['email']);

    // Check if email exists in the database
    $sql = "SELECT id FROM users WHERE email = '$email'";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) == 0) {
        die("No account found with this email address.");
    }

    // Generate a random token and expiration time
    $token = md5(rand());
    $expiration_time = date('Y-m-d H:i:s', strtotime('+30 minutes'));

    // Update the database with the new token and expiration time
    $sql = "UPDATE users SET reset_token = '$token', reset_expires = '$expiration_time' WHERE email = '$email'";
    mysqli_query($conn, $sql);

    // Send the password reset link to the user's email
    $reset_link = "http://$_SERVER[HTTP_HOST]/reset_password.php?token=$token";
    
    $to = $email;
    $subject = 'Password Reset Request';
    $message = "Please click the following link to reset your password:

$reset_link

This link will expire in 30 minutes.";
    $headers = 'From: webmaster@example.com' . "\r
" .
                'Reply-To: webmaster@example.com' . "\r
" .
                'X-Mailer: PHP/' . phpversion();

    if (mail($to, $subject, $message, $headers)) {
        echo "An email has been sent to your address. Please check your inbox.";
    } else {
        die("Failed to send the password reset email.");
    }
}

mysqli_close($conn);
?>


<?php
// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'mydatabase';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

if (!isset($_GET['token'])) {
    die("No token provided.");
}

$token = mysqli_real_escape_string($conn, $_GET['token']);

// Check if the token exists and hasn't expired
$sql = "SELECT id FROM users WHERE reset_token = '$token' AND reset_expires > NOW()";
$result = mysqli_query($conn, $sql);

if (mysqli_num_rows($result) == 0) {
    die("Invalid or expired token.");
}

$user_id = mysqli_fetch_assoc($result)['id'];
?>

<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <h2>Reset Password</h2>
    <form action="reset_password.php?token=<?php echo $token; ?>" method="post">
        <label>New Password:</label><br>
        <input type="password" name="new_password" required><br><br>
        <button type="submit">Change Password</button>
    </form>
</body>
</html>

<?php
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $new_password = mysqli_real_escape_string($conn, $_POST['new_password']);

    // Update the user's password
    $sql = "UPDATE users SET password = MD5('$new_password'), reset_token = NULL, reset_expires = NULL WHERE id = '$user_id'";
    if (mysqli_query($conn, $sql)) {
        echo "Password has been updated successfully!";
    } else {
        die("Error updating password: " . mysqli_error($conn));
    }
}

mysqli_close($conn);
?>


<?php
// Database configuration
$host = 'localhost';
$db_name = 'your_database';
$username = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$db_name", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST" && isset($_POST['reset-password'])) {
    // Get user input
    $email = $_POST['email'];
    
    try {
        // Prepare and execute query to check if email exists
        $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
        $stmt->execute([$email]);
        
        // Check if a user with this email exists
        if ($stmt->rowCount() > 0) {
            // Generate reset token
            $resetToken = bin2hex(random_bytes(16)); // Generates a 32-character hexadecimal string
            $expires = date('Y-m-d H:i:s', time() + 3600); // Token expires after 1 hour
            
            // Update the users table with the reset token and expiration time
            $stmt = $conn->prepare("UPDATE users SET reset_token = ?, reset_expires = ? WHERE email = ?");
            $stmt->execute([$resetToken, $expires, $email]);
            
            // Send password reset email
            $to = $email;
            $subject = "Password Reset Request";
            $message = "
                <html>
                    <head></head>
                    <body>
                        <p>Someone requested a password reset for your account. If this was you, please click the link below to reset your password:</p>
                        <a href='http://your-site.com/reset-password.php?token=$resetToken'>Reset Password</a><br><br>
                        <small>If you didn't request a password reset, no further action is required.</small>
                    </body>
                </html>
            ";
            $headers = "MIME-Version: 1.0" . "\r
";
            $headers .= "Content-type:text/html;charset=UTF-8" . "\r
";
            $headers .= "From: your-site@example.com" . "\r
"; // Replace with your email
            
            if (mail($to, $subject, $message, $headers)) {
                echo "<div class='success'>Password reset link has been sent to your email address.</div>";
            } else {
                echo "<div class='error'>Failed to send password reset email. Please try again later.</div>";
            }
        } else {
            echo "<div class='error'>Email does not exist in our database.</div>";
        }
    } catch(PDOException $e) {
        echo "Error: " . $e->getMessage();
    }
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Forgot Password</title>
    <style>
        body { font-family: Arial, sans-serif; max-width: 500px; margin: 0 auto; padding: 20px; }
        .success { color: green; }
        .error { color: red; }
        .forgot-password-form {
            background-color: #f4f4f4;
            padding: 20px;
            border-radius: 5px;
        }
    </style>
</head>
<body>
    <div class="forgot-password-form">
        <h2>Forgot Password</h2>
        
        <!-- Show success/error messages -->
        <?php if (isset($message)) { echo $message; } ?>
        
        <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
            <p>Please enter your email address:</p>
            <input type="email" name="email" required placeholder="Enter your email address">
            <button type="submit" name="reset-password">Reset Password</button>
        </form>
    </div>
</body>
</html>


<?php
session_start();
include('db_connection.php'); // Include your database connection file

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = mysqli_real_escape_string($conn, $_POST['email']);
    
    // Check if the email exists in the database
    $sql = "SELECT * FROM users WHERE email='$email'";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) == 0) {
        $_SESSION['message'] = "Email not found. Please try again.";
        header("Location: forgot_password_form.php");
        exit();
    } else {
        // Generate temporary password
        $temp_password = generateTemporaryPassword(12);
        
        // Update the database with the temporary password
        $sql_update = "UPDATE users SET password='$temp_password', reset_token=MD5(NOW()) WHERE email='$email'";
        mysqli_query($conn, $sql_update);
        
        // Send the temporary password to the user's email
        if (sendEmail($email, $temp_password)) {
            $_SESSION['message'] = "Temporary password has been sent to your email.";
        } else {
            $_SESSION['message'] = "Error sending email. Please try again later.";
        }
        
        header("Location: forgot_password_form.php");
        exit();
    }
}

// Function to generate temporary password
function generateTemporaryPassword($length) {
    $chars = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^&*()_+=-";
    $random_string = substr(str_shuffle($chars), 0, $length);
    return $random_string;
}

// Function to send email
function sendEmail($to, $temp_password) {
    $from = "your_email@example.com";
    $subject = "Temporary Password Reset";
    
    $message = "
        <html>
            <head>
                <title>Password Reset</title>
            </head>
            <body>
                <p>Your temporary password is: <strong>$temp_password</strong></p>
                <p>Please change your password after logging in.</p>
            </body>
        </html>
    ";
    
    // Set headers
    $headers = "From:" . $from;
    $headers .= "\r
Content-Type: text/html; charset=UTF-8";
    
    // Send email
    return mail($to, $subject, $message, $headers);
}
?>


<?php
$servername = "localhost";
$username = "root";
$password = "";
$dbname = "your_database_name";

// Create connection
$conn = mysqli_connect($servername, $username, $password, $dbname);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}
?>


<?php
session_start();

// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'mydatabase';

try {
    $conn = new mysqli($host, $username, $password, $dbname);
    
    if ($conn->connect_error) {
        throw new Exception("Connection failed: " . $conn->connect_error);
    }

    if (isset($_GET['token'])) {
        $token = $_GET['token'];
        
        // Check if token exists and is valid
        $stmt = $conn->prepare("SELECT * FROM password_reset WHERE token = MD5(?) AND expires > NOW()");
        $stmt->bind_param("s", $token);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows == 1) {
            // Display reset form
            ?>
            <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
                <input type="hidden" name="token" value="<?php echo $token; ?>">
                <input type="password" name="new_password" placeholder="Enter new password" required><br><br>
                <button type="submit">Reset Password</button>
            </form>
            <?php
        } else {
            throw new Exception("Invalid or expired token");
        }
    }

    // Process password reset
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        $token = $_POST['token'];
        $newPassword = $_POST['new_password'];

        $stmt = $conn->prepare("SELECT * FROM password_reset WHERE token = MD5(?) AND expires > NOW()");
        $stmt->bind_param("s", $token);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows == 1) {
            // Update user's password
            $row = $result->fetch_assoc();
            $userId = $row['user_id'];

            $updateStmt = $conn->prepare("UPDATE users SET password_hash = ? WHERE id = ?");
            $hash = password_hash($newPassword, PASSWORD_DEFAULT);
            $updateStmt->bind_param("si", $hash, $userId);
            $updateStmt->execute();

            // Delete the reset token
            $deleteStmt = $conn->prepare("DELETE FROM password_reset WHERE id = ?");
            $deleteStmt->bind_param("i", $row['id']);
            $deleteStmt->execute();

            echo "Password has been successfully updated!";
        } else {
            throw new Exception("Invalid or expired token");
        }
    }

} catch (Exception $e) {
    die("Error: " . $e->getMessage());
}

$conn->close();
?>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'mydatabase';

// Create connection
$conn = new mysqli($host, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// If form is submitted
if (isset($_POST['submit'])) {
    // Get email from form
    $email = $_POST['email'];

    // Validate email
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        echo "Invalid email format";
        exit();
    }

    // Check if email exists in database
    $sql = "SELECT id FROM users WHERE email = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("s", $email);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows === 0) {
        echo "Email not found in database";
        exit();
    }

    // Generate temporary password
    $tempPassword = generateTempPassword(8);

    // Update user's password with temporary password
    $updateSql = "UPDATE users SET password = ? WHERE email = ?";
    $stmt = $conn->prepare($updateSql);
    $stmt->bind_param("ss", $tempPassword, $email);
    $stmt->execute();

    // Send email to user with temporary password
    $to = $email;
    $subject = "Your Temporary Password";
    $message = "Your temporary password is: " . $tempPassword . "
Please login and reset your password.";
    $headers = "From: admin@example.com";

    mail($to, $subject, $message, $headers);

    // Redirect to login page
    header("Location: forgot_password.php?success=1");
    exit();
}

// Function to generate temporary password
function generateTempPassword($length) {
    $characters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';
    $password = '';
    for ($i = 0; $i < $length; $i++) {
        $randomIndex = rand(0, strlen($characters) - 1);
        $password .= $characters[$randomIndex];
    }
    return $password;
}

// Close database connection
$conn->close();
?>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'mydatabase';

// Connect to the database
$conn = mysqli_connect($host, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Check if form is submitted
if (isset($_POST['email']) && !empty($_POST['email'])) {
    $email = htmlspecialchars(trim($_POST['email']));

    // SQL query to check email existence
    $sql = "SELECT * FROM users WHERE email='" . mysqli_real_escape_string($conn, $email) . "'";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) == 0) {
        echo "Email does not exist in our database!";
    } else {
        // Generate temporary password
        $temp_password = rand(1000, 9999);
        
        // Update the database with new password
        $update_sql = "UPDATE users SET password='" . md5($temp_password) . "' WHERE email='" . mysqli_real_escape_string($conn, $email) . "'";
        mysqli_query($conn, $update_sql);

        // Send email to user
        $to = $email;
        $subject = "Your Temporary Password";
        $message = "Dear User,

Your temporary password is: " . $temp_password . "
Please login and change your password immediately.

Best regards,
Administrator";
        $headers = "From: admin@example.com" . "\r
";

        if (mail($to, $subject, $message, $headers)) {
            echo "Temporary password has been sent to your email!";
        } else {
            echo "Failed to send email!";
        }
    }
}

mysqli_close($conn);
?>

<!-- HTML Form -->
<form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    <label for="email">Email:</label>
    <input type="text" name="email" id="email">
    <button type="submit">Submit</button>
</form>


<?php
// Check if token is provided
if (!isset($_GET['token']) || empty($_GET['token'])) {
    die("No token provided.");
}

$token = $_GET['token'];

// Database connection details
$host = "localhost";
$dbUsername = "root";
$dbPassword = "";
$dbName = "test";

$conn = new mysqli($host, $dbUsername, $dbPassword, $dbName);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Check if token exists and is valid
$sql = "SELECT id FROM users WHERE reset_token=? AND reset_expires > NOW()";
$stmt = $conn->prepare($sql);
$stmt->bind_param("s", $token);
$stmt->execute();
$result = $stmt->get_result();

if ($result->num_rows == 0) {
    die("Invalid or expired token.");
}

// If form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $new_password = $_POST['new_password'];
    $confirm_password = $_POST['confirm_password'];
    
    if (empty($new_password) || empty($confirm_password)) {
        die("Please fill in both password fields.");
    }
    
    if ($new_password !== $confirm_password) {
        die("Passwords do not match.");
    }
    
    // Hash the new password
    $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);
    
    // Update the password and clear reset token
    $sql = "UPDATE users SET password=?, reset_token=null WHERE reset_token=?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("ss", $hashed_password, $token);
    $stmt->execute();
    
    echo "<script>alert('Password has been successfully updated.');</script>";
    header("Location: login.php");
    exit();
}
?>

<h2>Reset Password</h2>
<form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"] . "?token=" . $token); ?>" method="post">
    <label for="new_password">New Password:</label><br>
    <input type="password" id="new_password" name="new_password"><br><br>
    
    <label for="confirm_password">Confirm New Password:</label><br>
    <input type="password" id="confirm_password" name="confirm_password"><br><br>
    
    <button type="submit">Reset Password</button>
</form>


<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <?php
    // Display any error or success messages here
    if (isset($_GET['error'])) {
        echo "<p style='color:red;'>".$_GET['error']."</p>";
    }
    if (isset($_GET['success'])) {
        echo "<p style='color:green;'>".$_GET['success']."</p>";
    }
    ?>

    <h2>Forgot Password</h2>
    <form action="forgot-password.php" method="POST">
        <label for="email">Email:</label><br>
        <input type="email" id="email" name="email" required><br><br>
        <button type="submit" name="reset">Reset Password</button>
    </form>
</body>
</html>


<?php
session_start();

// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'test';

// Create connection
$conn = mysqli_connect($host, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

if (isset($_POST['reset'])) {
    // Sanitize input
    $email = trim(strtolower(htmlspecialchars($_POST['email'], ENT_QUOTES, 'UTF-8')));

    // Check if email exists in the database
    $sql = "SELECT id FROM users WHERE email=?";
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, "s", $email);
    mysqli_stmt_execute($stmt);
    mysqli_stmt_store_result($stmt);

    if (mysqli_stmt_num_rows($stmt) == 0) {
        // Email does not exist
        header("Location: forgot-password.php?error=Email%20not%20found.");
        exit();
    } else {
        // Generate reset token and expiration time
        $resetToken = md5(uniqid(rand(), true));
        $expires = date('Y-m-d H:i:s', strtotime('+30 minutes'));

        // Update the database with the new token and expiration
        $sql = "UPDATE users SET reset_token=?, resetExpires=? WHERE email=?";
        $stmt = mysqli_prepare($conn, $sql);
        mysqli_stmt_bind_param($stmt, "sss", $resetToken, $expires, $email);
        mysqli_stmt_execute($stmt);

        // Send reset link to user's email
        $siteURL = 'http://localhost'; // Change this to your site URL
        $link = $siteURL . '/reset-password.php?token=' . $resetToken;

        $to = $email;
        $subject = "Password Reset Request";
        $message = "<html>
            <body>
                <h2>Password Reset</h2>
                <p>We received a password reset request. Click the link below to reset your password:</p>
                <a href='$link'>Reset Password</a><br><br>
                <small>If you did not request this, please ignore this email.</small>
            </body>
            </html>";
        $headers = "From: no-reply@" . $_SERVER['HTTP_HOST'] . "\r
";
        $headers .= "Reply-To: no-reply@" . $_SERVER['HTTP_HOST'] . "\r
";
        $headers .= "Content-Type: text/html; charset=UTF-8\r
";

        mail($to, $subject, $message, $headers);

        // Redirect back with success message
        header("Location: forgot-password.php?success=We%20have%20sent%20you%20a%20password%20reset%20link.%20Please%20check%20your%20email.");
        exit();
    }
}

mysqli_close($conn);
?>


<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <?php
    if (!isset($_GET['token'])) {
        header("Location: forgot-password.php?error=No%20reset%20token%20provided.");
        exit();
    }

    // Database configuration
    $host = 'localhost';
    $username = 'root';
    $password = '';
    $dbname = 'test';

    $conn = mysqli_connect($host, $username, $password, $dbname);

    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
    }

    $token = $_GET['token'];

    // Check token validity
    $sql = "SELECT id, resetExpires FROM users WHERE reset_token=?";
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, "s", $token);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);

    if ($row = mysqli_fetch_assoc($result)) {
        // Check if token has expired
        $expires = strtotime($row['resetExpires']);
        if (time() > $expires) {
            header("Location: forgot-password.php?error=Reset%20link%20has%20expired.%20Please%20request%20a%20new%20one.");
            exit();
        }
    } else {
        // Invalid token
        header("Location: forgot-password.php?error=Invalid%20reset%20token.");
        exit();
    }

    if (isset($_POST['submit'])) {
        $password = $_POST['password'];
        $confirm_password = $_POST['confirm_password'];

        if ($password !== $confirm_password) {
            echo "<p style='color:red;'>Passwords do not match.</p>";
        } else {
            // Update password
            $sql = "UPDATE users SET password=?, reset_token=null, resetExpires=null WHERE reset_token=?";
            $stmt = mysqli_prepare($conn, $sql);
            mysqli_stmt_bind_param($stmt, "ss", md5($password), $token); // Use appropriate hashing method

            if (mysqli_stmt_execute($stmt)) {
                echo "<p style='color:green;'>Password updated successfully. <a href='login.php'>Click here to login</a>.</p>";
            } else {
                echo "<p style='color:red;'>Error updating password.</p>";
            }
        }
    }

    mysqli_close($conn);
    ?>

    <h2>Reset Password</h2>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="POST">
        <label for="password">New Password:</label><br>
        <input type="password" id="password" name="password" required><br><br>

        <label for="confirm_password">Confirm Password:</label><br>
        <input type="password" id="confirm_password" name="confirm_password" required><br><br>

        <button type="submit" name="submit">Reset</button>
    </form>
</body>
</html>


<?php
// Database connection
require_once 'db.php';

// Function to handle forgot password request
function forgotPassword($email) {
    global $conn;
    
    // Check if email exists in database
    $query = "SELECT id, username FROM users WHERE email = ?";
    $stmt = mysqli_prepare($conn, $query);
    mysqli_stmt_bind_param($stmt, 's', $email);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);
    
    if (mysqli_num_rows($result) == 0) {
        return "Email not found!";
    }
    
    // Generate random token
    $token = bin2hex(random_bytes(16));
    
    // Create a unique URL for password reset
    $reset_url = "http://example.com/reset-password.php?token=" . $token;
    
    // Store token and expiration time in database
    $expiration_time = date('Y-m-d H:i:s', time() + 3600); // Token valid for 1 hour
    
    $query = "INSERT INTO password_resets (user_id, token, expires_at) VALUES (?, ?, ?)";
    $stmt = mysqli_prepare($conn, $query);
    mysqli_stmt_bind_param($stmt, 'iss', $id, $token, $expiration_time);
    
    // Get user id from the previous result
    $row = mysqli_fetch_assoc($result);
    $id = $row['id'];
    
    if (!mysqli_stmt_execute($stmt)) {
        return "Error: Could not create reset token!";
    }
    
    // Send email with reset link
    $to = $email;
    $subject = "Password Reset Request";
    $message = "Dear " . $row['username'] . ",

You have requested to reset your password. Please click the following link to reset it within the next hour:
" . $reset_url . "

If you did not request this, please ignore this email.

Best regards,
Your Website Team";
    
    if (!sendEmail($to, $subject, $message)) {
        return "Error: Could not send reset email!";
    }
    
    return "success";
}

// Function to send email
function sendEmail($to, $subject, $message) {
    // Use PHPMailer for better email handling
    require 'PHPMailer/PHPMailer.php';
    require 'PHPMailer/Exception.php';
    require 'PHPMailer/SMTP.php';
    
    try {
        $mail = new PHPMailer(true);
        
        // SMTP settings
        $mail->isSMTP();
        $mail->Host       = 'smtp.example.com';  // Replace with your SMTP host
        $mail->SMTPAuth   = true;
        $mail->Username   = 'your_email@example.com';
        $mail->Password   = 'your_password';
        $mail->Port       = 587;  // or another port
        
        $mail->setFrom('your_email@example.com', 'Your Name');
        $mail->addAddress($to);
        
        $mail->isHTML(false);
        $mail->Subject = $subject;
        $mail->Body    = $message;
        
        $mail->send();
        return true;
    } catch (Exception $e) {
        echo "Message could not be sent. Mailer Error: {$mail->ErrorInfo}";
        return false;
    }
}

// Example usage:
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    if (isset($_POST['email'])) {
        $email = $_POST['email'];
        $result = forgotPassword($email);
        
        if ($result == "success") {
            // Redirect to success page
            header("Location: password_reset_sent.php");
            exit();
        } else {
            echo $result;  // Display error message
        }
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <h2>Forgot Password</h2>
    <form action="<?php echo htmlspecialchars($_SERVER['PHP_SELF']); ?>" method="post">
        <label for="email">Email:</label>
        <input type="email" id="email" name="email" required><br><br>
        <button type="submit">Reset Password</button>
    </form>
</body>
</html>


<?php
// Database connection
require_once 'db.php';

if ($_SERVER['REQUEST_METHOD'] == 'GET') {
    if (isset($_GET['token'])) {
        $token = $_GET['token'];
        
        // Check if token exists and is valid
        $query = "SELECT * FROM password_resets WHERE token = ? AND expires_at > NOW()";
        $stmt = mysqli_prepare($conn, $query);
        mysqli_stmt_bind_param($stmt, 's', $token);
        mysqli_stmt_execute($stmt);
        $result = mysqli_stmt_get_result($stmt);
        
        if (mysqli_num_rows($result) == 0) {
            die("Invalid or expired token!");
        }
    } else {
        die("No token provided!");
    }
}

// If form is submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $token = $_POST['token'];
    $new_password = $_POST['password'];
    
    // Update the user's password
    $query = "SELECT user_id FROM password_resets WHERE token = ? AND expires_at > NOW()";
    $stmt = mysqli_prepare($conn, $query);
    mysqli_stmt_bind_param($stmt, 's', $token);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);
    
    if (mysqli_num_rows($result) == 0) {
        die("Invalid or expired token!");
    }
    
    $row = mysqli_fetch_assoc($result);
    $user_id = $row['user_id'];
    
    // Update password in users table
    $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);
    $query = "UPDATE users SET password = ? WHERE id = ?";
    $stmt = mysqli_prepare($conn, $query);
    mysqli_stmt_bind_param($stmt, 'si', $hashed_password, $user_id);
    
    if (!mysqli_stmt_execute($stmt)) {
        die("Error updating password!");
    }
    
    // Delete the reset token
    $query = "DELETE FROM password_resets WHERE token = ?";
    $stmt = mysqli_prepare($conn, $query);
    mysqli_stmt_bind_param($stmt, 's', $token);
    mysqli_stmt_execute($stmt);
    
    // Redirect to login page
    header("Location: login.php");
    exit();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <h2>Reset Password</h2>
    <form action="<?php echo htmlspecialchars($_SERVER['PHP_SELF']); ?>" method="post">
        <input type="hidden" name="token" value="<?php echo $token; ?>">
        <label for="password">New Password:</label>
        <input type="password" id="password" name="password" required><br><br>
        <button type="submit">Reset</button>
    </form>
</body>
</html>


<!DOCTYPE html>
<html>
<head>
    <title>Password Reset Sent</title>
</head>
<body>
    <h2>Password Reset Instructions</h2>
    <p>We've sent you an email with instructions to reset your password. The link will expire in 1 hour.</p>
    <a href="login.php">Back to Login Page</a>
</body>
</html>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'mydatabase';

// Create database connection
$conn = mysqli_connect($host, $username, $password, $dbname);
if (!$conn) {
    die('Could not connect: ' . mysqli_error($conn));
}

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = mysqli_real_escape_string($conn, $_POST['email']);
    
    // Query to check if email exists in database
    $sql = "SELECT * FROM users WHERE email='$email'";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) == 1) {
        // Generate a random password
        $new_password = substr(str_shuffle("abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789"), 0, 8);
        
        // Hash the new password
        $hash = password_hash($new_password, PASSWORD_DEFAULT);
        
        // Update the user's password in database
        $update_sql = "UPDATE users SET password='$hash' WHERE email='$email'";
        mysqli_query($conn, $update_sql);
        
        // Send email with new password
        $to = $email;
        $subject = 'Reset Your Password';
        $message = 'Your new password is: ' . $new_password;
        $headers = 'From: yoursite@example.com' . "\r
";
        mail($to, $subject, $message, $headers);
        
        echo "A new password has been sent to your email address.";
    } else {
        echo "Email not found in our database.";
    }
}

// Close database connection
mysqli_close($conn);
?>


// Generate a random token
$token = bin2hex(random_bytes(16));

// Store token in database with expiration time
$sql = "UPDATE users SET reset_token='$token', reset_expires=DATE_ADD(NOW(), INTERVAL 1 HOUR) WHERE email='$email'";
mysqli_query($conn, $sql);

// Send link to user's email
$message = 'Click this link to reset your password: http://yoursite.com/reset.php?token=' . $token;


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'mydatabase';

// Create connection
$conn = new mysqli($host, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Start session
session_start();

// Function to send password reset email
function sendPasswordResetEmail($email, $token) {
    $to = $email;
    $subject = 'Password Reset Request';
    
    $message = '
        <html>
            <body>
                <p>Hello,</p>
                <p>Please click the following link to reset your password:</p>
                <a href="http://localhost/reset-password.php?token=' . $token . '">Reset Password</a><br>
                <p>If you did not request this password reset, please ignore this email.</p>
            </body>
        </html>
    ';
    
    $headers = 'MIME-Version: 1.0' . "\r
";
    $headers .= 'Content-type: text/html; charset=UTF-8' . "\r
";
    $headers .= 'From: noreply@example.com' . "\r
";

    mail($to, $subject, $message, $headers);
}

// Function to validate token and reset password
function validateTokenAndResetPassword($token, $new_password) {
    global $conn;
    
    // Check if token exists in the database
    $sql = "SELECT * FROM users WHERE reset_token = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param('s', $token);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows > 0) {
        // Update password
        $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);
        
        $update_sql = "UPDATE users SET 
                        password = ?,
                        reset_token = NULL,
                        token_expiration = NULL
                      WHERE reset_token = ?";
        $stmt = $conn->prepare($update_sql);
        $stmt->bind_param('ss', $hashed_password, $token);
        $stmt->execute();
        
        return true;
    }
    
    return false;
}

// Function to generate a random token
function generateToken() {
    return bin2hex(random_bytes(16));
}

// Main forgot password function
functionforgotPassword($email) {
    global $conn;
    
    // Check if email exists in the database
    $sql = "SELECT * FROM users WHERE email = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param('s', $email);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows > 0) {
        // Generate a random token
        $token = generateToken();
        
        // Update the database with the new token and expiration time (30 minutes)
        $expiration_time = date('Y-m-d H:i:s', strtotime('+30 minutes'));
        
        $update_sql = "UPDATE users SET 
                        reset_token = ?,
                        token_expiration = ?
                      WHERE email = ?";
        $stmt = $conn->prepare($update_sql);
        $stmt->bind_param('sss', $token, $expiration_time, $email);
        $stmt->execute();
        
        // Send the password reset email
        sendPasswordResetEmail($email, $token);
        
        return true;
    }
    
    return false;
}

// Example usage:
if (isset($_POST['reset'])) {
    $email = $_POST['email'];
    
    // Sanitize input
    $email = htmlspecialchars(stripslashes(trim($email)));
    
    if (forgotPassword($email)) {
        echo "A password reset link has been sent to your email address.";
    } else {
        echo "Email not found in our database.";
    }
}

// Close the database connection
$conn->close();
?>


<?php
// Database connection
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "myDB";

$conn = mysqli_connect($servername, $username, $password, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function generateResetToken() {
    return bin2hex(random_bytes(32));
}

// Check if email exists
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = $_POST['email'];
    
    // Sanitize the input
    $email = mysqli_real_escape_string($conn, $email);
    
    $sql = "SELECT id FROM users WHERE email='$email'";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) > 0) {
        // Generate a unique reset token and expiration time
        $token = generateResetToken();
        $expiration_time = strtotime('+1 hour');
        
        // Insert token into database
        $insertSql = "INSERT INTO password_reset (token, user_id, expires_at)
                     VALUES ('$token', '$row->id', '$expiration_time')";
        mysqli_query($conn, $insertSql);
        
        // Send email with reset link
        $to = $email;
        $subject = "Password Reset Request";
        $message = "Please click the following link to reset your password: 
                   http://example.com/reset-password.php?token=$token";
        
        $headers = "From: noreply@example.com\r
";
        mail($to, $subject, $message, $headers);
        
        echo "An email has been sent to $email with instructions on how to reset your password.";
    } else {
        echo "No account found with this email address.";
    }
}

// Reset password form
if (isset($_GET['token'])) {
    $token = $_GET['token'];
    
    // Check if token is valid and not expired
    $sql = "SELECT * FROM password_reset WHERE token='$token'";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) == 1) {
        $row = mysqli_fetch_assoc($result);
        
        if ($row['used'] == 1 || time() > strtotime($row['expires_at'])) {
            echo "This reset link is no longer valid.";
        } else {
            // Show password reset form
            ?>
            <form method="post" action="">
                <input type="password" name="new_password" placeholder="New Password">
                <input type="password" name="confirm_password" placeholder="Confirm Password">
                <input type="hidden" name="token" value="<?php echo $token; ?>">
                <button type="submit">Reset Password</button>
            </form>
            <?php
            
            // Handle password reset
            if ($_SERVER["REQUEST_METHOD"] == "POST") {
                $new_password = $_POST['new_password'];
                $confirm_password = $_POST['confirm_password'];
                
                if ($new_password != $confirm_password) {
                    echo "Passwords do not match.";
                } else {
                    // Update user's password
                    $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);
                    
                    $updateSql = "UPDATE users SET password='$hashed_password' WHERE id='" . $row['user_id'] . "'";
                    mysqli_query($conn, $updateSql);
                    
                    // Mark token as used
                    $markAsUsed = "UPDATE password_reset SET used=1 WHERE token='$token'";
                    mysqli_query($conn, $markAsUsed);
                    
                    echo "Password reset successful!";
                }
            }
        }
    } else {
        echo "Invalid or expired reset link.";
    }
}

mysqli_close($conn);
?>


<?php
// Database connection settings
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'your_database';

// Create database connection
$conn = mysqli_connect($host, $username, $password, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Set time zone
date_default_timezone_set('UTC');

// Error messages array
$errormsgs = array();

// If form submitted for password reset request
if (isset($_POST['reset_submit'])) {
    $email = mysqli_real_escape_string($conn, $_POST['email']);
    
    // Check if email is valid
    if (!preg_match("/^[^\s@]+@[^\s@]+\.[^\s@]+$/", $email)) {
        $errormsgs[] = "Please enter a valid email address.";
    }
    
    if (empty($errormsgs)) {
        // Check if email exists in database
        $sql = "SELECT id FROM users WHERE email='$email'";
        $result = mysqli_query($conn, $sql);
        
        if (mysqli_num_rows($result) == 0) {
            $errormsgs[] = "No account found with this email address.";
        } else {
            // Generate reset token
            $token = bin2hex(random_bytes(16));
            $expires = date('Y-m-d H:i:s', time() + 3600); // Token expires in 1 hour
            
            // Insert token into database
            $sql = "UPDATE users SET reset_token='$token', reset_expires='$expires' WHERE email='$email'";
            if (mysqli_query($conn, $sql)) {
                // Send reset email
                require 'PHPMailer/PHPMailer.php';
                require 'PHPMailer/SMTP.php';
                require 'PHPMailer/Exception.php';
                
                try {
                    $mail = new PHPMailer\PHPMailer();
                    $mail->isSMTP();
                    $mail->Host = 'smtp.example.com'; // Replace with your SMTP server
                    $mail->SMTPAuth = true;
                    $mail->Username = 'your_email@example.com'; // Your email
                    $mail->Password = 'your_password'; // Your password
                    $mail->Port = 587; // Or another port number
                    
                    $mail->setFrom('your_email@example.com', 'Reset Password');
                    $mail->addAddress($email);
                    
                    $resetLink = "http://$_SERVER[HTTP_HOST]/reset-password.php?token=$token";
                    
                    $mail->isHTML(true);
                    $mail->Subject = 'Password Reset Request';
                    $mail->Body    = "Click the link below to reset your password:<br><a href='$resetLink'>$resetLink</a>";
                    
                    if ($mail->send()) {
                        echo "An email with instructions has been sent to your address.";
                    } else {
                        $errormsgs[] = "Email could not be sent. Please try again later.";
                    }
                } catch (Exception $e) {
                    $errormsgs[] = "Email sending failed: " . $mail->ErrorInfo;
                }
            }
        }
    }
}

// If form submitted for new password
if (isset($_POST['new_password_submit'])) {
    $token = mysqli_real_escape_string($conn, $_POST['token']);
    $new_password = mysqli_real_escape_string($conn, $_POST['new_password']);
    $confirm_password = mysqli_real_escape_string($conn, $_POST['confirm_password']);
    
    // Check if token is valid and not expired
    $sql = "SELECT id FROM users WHERE reset_token='$token' AND reset_expires > NOW()";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) == 0) {
        $errormsgs[] = "Invalid or expired token.";
    } else {
        // Check password requirements
        if ($new_password != $confirm_password) {
            $errormsgs[] = "Passwords do not match.";
        }
        
        if (strlen($new_password) < 8) {
            $errormsgs[] = "Password must be at least 8 characters long.";
        }
        
        if (empty($errormsgs)) {
            // Update password
            $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);
            
            $sql = "UPDATE users SET password='$hashed_password', reset_token='', reset_expires='' WHERE reset_token='$token'";
            if (mysqli_query($conn, $sql)) {
                echo "Password has been updated successfully.";
            } else {
                $errormsgs[] = "Error updating password. Please try again later.";
            }
        }
    }
}

// Display error messages
if (!empty($errormsgs)) {
    foreach ($errormsgs as $error) {
        echo "<div class='alert'>$error</div>";
    }
}
?>

<!-- HTML form -->
<h2>Forgot Password</h2>
<form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
    <label for="email">Email:</label><br>
    <input type="text" id="email" name="email"><br><br>
    <input type="submit" name="reset_submit" value="Reset Password">
</form>

<!-- Reset password form -->
<?php if (isset($_GET['token'])): ?>
    <h2>Reset Password</h2>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <input type="hidden" name="token" value="<?php echo $_GET['token']; ?>">
        <label for="new_password">New Password:</label><br>
        <input type="password" id="new_password" name="new_password"><br><br>
        <label for="confirm_password">Confirm Password:</label><br>
        <input type="password" id="confirm_password" name="confirm_password"><br><br>
        <input type="submit" name="new_password_submit" value="Change Password">
    </form>
<?php endif; ?>

// Close database connection
mysqli_close($conn);
?>


<?php
// Include database configuration
include('db_config.php');

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = mysqli_real_escape_string($conn, $_POST['email']);

    // Check if email exists in the database
    $sql = "SELECT id, username FROM users WHERE email = '$email'";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) > 0) {
        $row = mysqli_fetch_assoc($result);
        $user_id = $row['id'];
        $username = $row['username'];

        // Generate a temporary password
        $temp_password = bin2hex(random_bytes(6));

        // Store the temp password in the database with an expiration time
        $expiration_time = date('Y-m-d H:i:s', strtotime('+30 minutes'));
        $sql_temp = "INSERT INTO password_reset (user_id, temp_password, expires_at) 
                    VALUES ('$user_id', '$temp_password', '$expiration_time')";
        mysqli_query($conn, $sql_temp);

        // Send the temporary password to the user's email
        require 'PHPMailer/PHPMailerAutoload.php';
        
        $mail = new PHPMailer;
        $mail->isSMTP();
        $mail->Host = 'smtp.example.com';  // Replace with your SMTP server
        $mail->Port = 587;                // Replace with your port number
        $mail->SMTPAuth = true;
        $mail->Username = 'your_email@example.com';
        $mail->Password = 'your_password';

        $mail->setFrom('your_email@example.com', 'Forgot Password');
        $mail->addAddress($email, $username);

        $mail->Subject = 'Reset Your Password';
        $mail->Body    = "Hello $username,

Your temporary password is: $temp_password

Please use this password to log in and reset your password within 30 minutes.

Best regards,
The Team";

        if (!$mail->send()) {
            echo 'Mailer Error: ' . $mail->ErrorInfo;
        } else {
            echo "An email has been sent to you with a temporary password.";
        }
    } else {
        echo "Email not found in our records.";
    }
}
?>


<?php
// Include database configuration
include('db_config.php');

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $temp_password = mysqli_real_escape_string($conn, $_POST['temp_password']);
    $new_password = mysqli_real_escape_string($conn, $_POST['new_password']);

    // Check if the temporary password is valid and not expired
    $sql = "SELECT user_id FROM password_reset 
            WHERE temp_password = '$temp_password' 
            AND expires_at > NOW()";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) > 0) {
        $row = mysqli_fetch_assoc($result);
        $user_id = $row['user_id'];

        // Update the user's password
        $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);
        $sql_update = "UPDATE users SET password = '$hashed_password' WHERE id = '$user_id'";
        mysqli_query($conn, $sql_update);

        // Delete the temporary password entry
        $sql_delete = "DELETE FROM password_reset WHERE temp_password = '$temp_password'";
        mysqli_query($conn, $sql_delete);

        echo "Password updated successfully!";
    } else {
        echo "Invalid or expired temporary password.";
    }
}
?>


<?php
session_start();
include('db_connection.php');

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = mysqli_real_escape_string($conn, $_POST['email']);
    
    // Check if email exists in the database
    $sql = "SELECT id FROM users WHERE email='$email'";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) > 0) {
        // Generate a random token
        $token = bin2hex(random_bytes(16));
        
        // Update the user's record with the new token
        $updateSql = "UPDATE users SET reset_token='$token', reset_expiry=DATE_ADD(NOW(), INTERVAL 30 MINUTE) WHERE email='$email'";
        mysqli_query($conn, $updateSql);
        
        // Send the password reset link to the user's email
        $resetLink = "http://".$_SERVER['HTTP_HOST']."/reset.php?token=".$token;
        $to = $email;
        $subject = "Password Reset Request";
        $message = "
            <html>
                <head></head>
                <body>
                    <h2>Password Reset</h2>
                    <p>Please click the following link to reset your password:</p>
                    <a href='".$resetLink."'>".$resetLink."</a><br>
                    <p>If you did not request this password reset, please ignore this email.</p>
                </body>
            </html>";
        $headers = "MIME-Version: 1.0" . "\r
";
        $headers .= "Content-type:text/html;charset=UTF-8" . "\r
";
        $headers .= "From: admin@example.com" . "\r
";
        
        mail($to, $subject, $message, $headers);
        
        // Redirect back to login page with success message
        $_SESSION['message'] = "Password reset link has been sent to your email.";
        header("Location: login.php");
        exit();
    } else {
        // Email not found in database
        $_SESSION['error'] = "Email address not registered!";
        header("Location: forgot_password.php");
        exit();
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <?php if (isset($_SESSION['error'])) { ?>
        <div style="color:red;"><?php echo $_SESSION['error']; ?></div>
        <?php unset($_SESSION['error']); ?>
    <?php } ?>

    <h2>Forgot Password</h2>
    <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]);?>" method="post">
        Email: <input type="email" name="email" required><br>
        <input type="submit" value="Reset Password">
    </form>
    <p>Don't have an account? <a href="signup.php">Sign Up</a></p>
</body>
</html>


<?php
session_start();
include('db_connection.php');

if (!isset($_GET['token'])) {
    header("Location: forgot_password.php");
    exit();
}

$token = mysqli_real_escape_string($conn, $_GET['token']);

// Check if token exists in the database and is not expired
$sql = "SELECT id, email FROM users WHERE reset_token='$token' AND reset_expiry > NOW()";
$result = mysqli_query($conn, $sql);

if (mysqli_num_rows($result) == 0) {
    // Invalid or expired token
    $_SESSION['error'] = "Invalid or expired password reset link. Please request a new one.";
    header("Location: forgot_password.php");
    exit();
}

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $token = mysqli_real_escape_string($conn, $_GET['token']);
    $password = mysqli_real_escape_string($conn, $_POST['password']);
    $confirmPassword = mysqli_real_escape_string($conn, $_POST['confirm_password']);
    
    if ($password != $confirmPassword) {
        $_SESSION['error'] = "Passwords do not match!";
        header("Location: reset.php?token=".$token);
        exit();
    }
    
    // Password should be at least 8 characters long
    if (strlen($password) < 8) {
        $_SESSION['error'] = "Password must be at least 8 characters!";
        header("Location: reset.php?token=".$token);
        exit();
    }
    
    // Update the password and clear the token
    $passwordHash = password_hash($password, PASSWORD_DEFAULT);
    $updateSql = "UPDATE users SET password='$passwordHash', reset_token=NULL, reset_expiry=NULL WHERE reset_token='$token'";
    mysqli_query($conn, $updateSql);
    
    $_SESSION['message'] = "Password has been successfully updated!";
    header("Location: login.php");
    exit();
}

// Display the reset form
$row = mysqli_fetch_assoc($result);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <?php if (isset($_SESSION['error'])) { ?>
        <div style="color:red;"><?php echo $_SESSION['error']; ?></div>
        <?php unset($_SESSION['error']); ?>
    <?php } ?>

    <h2>Reset Password</h2>
    <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]);?>" method="post">
        <input type="hidden" name="token" value="<?php echo $row['reset_token'];?>">
        New Password: <input type="password" name="password" required><br>
        Confirm Password: <input type="password" name="confirm_password" required><br>
        <input type="submit" value="Reset Password">
    </form>
</body>
</html>


<?php
$host = 'localhost';
$user = 'root';
$password = '';
$dbname = 'your_database';

$conn = mysqli_connect($host, $user, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}
?>


<?php
session_start();
include('db_connection.php'); // Include your database connection file

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = $_POST['email'];
    $username = $_POST['username'];

    // Generate a unique token for password reset
    $token = bin2hex(random_bytes(16));
    $token_expiry = date('Y-m-d H:i:s', strtotime('+1 hour'));

    // Check if user exists with the provided email or username
    $sql = "SELECT * FROM users WHERE email = ? OR username = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("ss", $email, $username);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        // User exists, store the token in the database
        $row = $result->fetch_assoc();
        $user_id = $row['id'];

        $insert_sql = "INSERT INTO password_reset (user_id, token, created_at) 
                       VALUES (?, ?, ?)";
        $stmt_insert = $conn->prepare($insert_sql);
        $stmt_insert->bind_param("iss", $user_id, $token, $token_expiry);

        if ($stmt_insert->execute()) {
            // Send email with reset link
            $reset_link = "http://yourdomain.com/reset_password.php?token=" . $token;
            $to = $email;
            $subject = "Password Reset Request";
            $message = "Please click the following link to reset your password: 
" . $reset_link . "

This link will expire in 1 hour.";

            if (send_email($to, $subject, $message)) {
                $_SESSION['message'] = "A password reset link has been sent to your email address.";
                header("Location: forgot_password.php");
                exit();
            }
        } else {
            $_SESSION['message'] = "Error storing reset token. Please try again later.";
            header("Location: forgot_password.php");
            exit();
        }
    } else {
        $_SESSION['message'] = "Email or username does not exist.";
        header("Location: forgot_password.php");
        exit();
    }
}

// Function to send email
function send_email($to, $subject, $message) {
    // Use PHPMailer or your preferred method here
    $headers = 'From: webmaster@example.com' . "\r
" .
               'Reply-To: webmaster@example.com' . "\r
" .
               'X-Mailer: PHP/' . phpversion();
    return mail($to, $subject, $message, $headers);
}
?>


<?php
session_start();

include('db_connection.php');

if (!isset($_GET['token'])) {
    die("Invalid request.");
}

$token = $_GET['token'];

// Check if token exists and is valid
$sql = "SELECT * FROM password_reset 
        WHERE token = ? AND created_at > DATE_SUB(NOW(), INTERVAL 1 HOUR)";
$stmt = $conn->prepare($sql);
$stmt->bind_param("s", $token);
$stmt->execute();
$result = $stmt->get_result();

if ($result->num_rows == 0) {
    die("Invalid or expired token.");
}

$user_data = $result->fetch_assoc();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <?php
    if (isset($_SESSION['message'])) {
        echo $_SESSION['message'];
        unset($_SESSION['message']);
    }
    ?>

    <h2>Reset Password</h2>
    <form action="reset_password_process.php" method="post">
        <input type="hidden" name="token" value="<?php echo $token; ?>">
        
        <label for="new_password">New Password:</label><br>
        <input type="password" id="new_password" name="new_password" required><br>

        <label for="confirm_password">Confirm Password:</label><br>
        <input type="password" id="confirm_password" name="confirm_password" required><br>

        <input type="submit" value="Reset Password">
    </form>
</body>
</html>


<?php
session_start();

include('db_connection.php');

if (!isset($_POST['token'])) {
    die("Invalid request.");
}

$token = $_POST['token'];
$new_password = $_POST['new_password'];
$confirm_password = $_POST['confirm_password'];

// Validate passwords match and meet criteria
if ($new_password != $confirm_password) {
    $_SESSION['message'] = "Passwords do not match.";
    header("Location: reset_password.php?token=" . $token);
    exit();
}

if (strlen($new_password) < 8) {
    $_SESSION['message'] = "Password must be at least 8 characters long.";
    header("Location: reset_password.php?token=" . $token);
    exit();
}

// Check if token is valid and not expired
$sql = "SELECT * FROM password_reset 
        WHERE token = ? AND created_at > DATE_SUB(NOW(), INTERVAL 1 HOUR)";
$stmt = $conn->prepare($sql);
$stmt->bind_param("s", $token);
$stmt->execute();
$result = $stmt->get_result();

if ($result->num_rows == 0) {
    die("Invalid or expired token.");
}

$user_data = $result->fetch_assoc();

// Update the user's password
$new_password_hashed = password_hash($new_password, PASSWORD_DEFAULT);

$update_sql = "UPDATE users SET password = ? WHERE id = ?";
$stmt_update = $conn->prepare($update_sql);
$stmt_update->bind_param("si", $new_password_hashed, $user_data['user_id']);

if ($stmt_update->execute()) {
    // Invalidate the reset token
    $invalidate_sql = "DELETE FROM password_reset WHERE token = ?";
    $stmt_invalidate = $conn->prepare($invalidate_sql);
    $stmt_invalidate->bind_param("s", $token);
    $stmt_invalidate->execute();

    $_SESSION['message'] = "Password has been successfully reset.";
    header("Location: login.php");
    exit();
} else {
    $_SESSION['message'] = "Error resetting password. Please try again later.";
    header("Location: reset_password.php?token=" . $token);
    exit();
}
?>


<?php
session_start();

// Database configuration
$host = 'localhost';
$user = 'root';
$password = '';
$database = 'mydatabase';

// Connect to database
$conn = mysqli_connect($host, $user, $password, $database);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to generate a random token
function generateToken() {
    return uniqid(rand(), true);
}

// Handle form submission
if (isset($_POST['reset'])) {
    $email = htmlspecialchars(trim($_POST['email']));

    // Check if email is not empty
    if (empty($email)) {
        echo "Please enter your email address.";
        exit();
    }

    // Check if user exists in database
    $sql = "SELECT * FROM users WHERE email = '$email'";
    $result = mysqli_query($conn, $sql);
    if (!$result) {
        die("Error: " . mysqli_error($conn));
    }
    $user = mysqli_fetch_assoc($result);

    if ($user) {
        // Generate a random token
        $token = generateToken();
        
        // Encrypt the token before storing it in the database
        $encrypted_token = md5(sha1($token));

        // Store the token in the database with an expiration time
        $expire_time = date('Y-m-d H:i:s', strtotime('+1 hour'));
        $sql = "INSERT INTO password_reset (user_id, token, expire_time) 
                VALUES ('{$user['id']}', '$encrypted_token', '$expire_time')";
        if (!mysqli_query($conn, $sql)) {
            die("Error: " . mysqli_error($conn));
        }

        // Send email with reset link
        $to = $email;
        $subject = 'Password Reset Request';
        $message = "Please click the following link to reset your password:

";
        $message .= "http://yourwebsite.com/reset_password.php?token=$token";
        $headers = 'From: noreply@yourwebsite.com' . "\r
" .
                  'Reply-To: noreply@yourwebsite.com' . "\r
" .
                  'X-Mailer: PHP/' . phpversion();

        mail($to, $subject, $message, $headers);

        echo "A password reset link has been sent to your email address.";
    } else {
        echo "This email does not exist in our system.";
    }
}

// Close database connection
mysqli_close($conn);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <h2>Forgot Password</h2>
    <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
        <input type="text" name="email" placeholder="Enter your email or username">
        <button type="submit" name="reset">Reset Password</button>
    </form>
</body>
</html>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$database = 'mydb';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $database);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to handle password reset request
function forgotPassword($email) {
    global $conn;

    // Check if email is provided and valid
    if (empty($email) || !filter_var($email, FILTER_VALIDATE_EMAIL)) {
        return ['status' => 'error', 'message' => 'Please enter a valid email address.'];
    }

    // Prepare SQL statement to check if email exists
    $stmt = mysqli_prepare($conn, "SELECT id, email FROM users WHERE email = ?");
    mysqli_stmt_bind_param($stmt, "s", $email);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);

    if (mysqli_num_rows($result) == 0) {
        return ['status' => 'error', 'message' => 'No account found with this email address.'];
    }

    // Generate reset token and expiration time
    $resetToken = md5(uniqid(rand(), true));
    $expirationTime = date('Y-m-d H:i:s', strtotime('+1 hour'));

    // Update database with reset token and expiration time
    $updateStmt = mysqli_prepare($conn, "UPDATE users SET reset_token = ?, reset_expires = ? WHERE email = ?");
    mysqli_stmt_bind_param($updateStmt, "ss", $resetToken, $expirationTime, $email);
    mysqli_stmt_execute($updateStmt);

    // Send password reset email
    $baseUrl = 'http://yourwebsite.com/reset-password.php?token=';
    $resetUrl = $baseUrl . $resetToken;
    
    $to = $email;
    $subject = 'Password Reset Request';
    $message = "You requested a password reset.

Please click the following link to reset your password:
$resetUrl

If you did not request this, please ignore this email.";

    if (mail($to, $subject, $message)) {
        return ['status' => 'success', 'message' => 'Password reset instructions have been sent to your email.'];
    } else {
        return ['status' => 'error', 'message' => 'Failed to send password reset email. Please try again later.'];
    }
}

// Example usage:
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $email = $_POST['email'];
    $result = forgotPassword($email);
    
    if ($result['status'] == 'success') {
        header('Location: login.php?msg=' . urlencode($result['message']));
        exit();
    } else {
        echo $result['message'];
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <h2>Forgot Password</h2>
    <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
        <input type="email" name="email" placeholder="Enter your email" required><br><br>
        <input type="submit" value="Reset Password">
    </form>
</body>
</html>


<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <?php
        // Include database connection
        include 'db_connection.php';

        if ($_SERVER['REQUEST_METHOD'] == 'POST') {
            $email = mysqli_real_escape_string($conn, $_POST['email']);

            // Check if email exists in the database
            $sql = "SELECT id FROM users WHERE email = '$email'";
            $result = mysqli_query($conn, $sql);

            if (mysqli_num_rows($result) > 0) {
                // Generate a unique token
                $token = bin2hex(random_bytes(16));

                // Update the database with the new token and expiration time
                $expires = date('Y-m-d H:i:s', strtotime('+1 hour'));
                
                $sql_reset = "INSERT INTO password_reset (user_id, token, expires) 
                             VALUES ('" . mysqli_insert_id($conn) . "', '$token', '$expires')";
                mysqli_query($conn, $sql_reset);

                // Send email with reset link
                $reset_link = "http://".$_SERVER['HTTP_HOST']."/reset_password.php?token=".$token;
                $to = $email;
                $subject = "Password Reset Request";
                $message = "Click the following link to reset your password: 

".$reset_link."

If you didn't request this, please ignore this email.";
                
                mail($to, $subject, $message);
                
                echo "An email has been sent with instructions to reset your password.";
            } else {
                echo "Email not found in our records.";
            }
        }
    ?>

    <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
        Email: <input type="email" name="email"><br>
        <input type="submit" value="Submit">
    </form>

</body>
</html>


<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <?php
        include 'db_connection.php';

        // Get token from URL
        $token = isset($_GET['token']) ? $_GET['token'] : die("No token provided.");

        // Check if token exists and is valid
        function validateToken($conn, $token) {
            $sql = "SELECT * FROM password_reset 
                    WHERE token = '$token' AND expires > NOW()";
            $result = mysqli_query($conn, $sql);
            
            if (mysqli_num_rows($result) == 1) {
                return mysqli_fetch_assoc($result);
            } else {
                return false;
            }
        }

        // Validate the token
        $reset = validateToken($conn, $token);

        if (!$reset) {
            die("Invalid or expired token.");
        }

        if ($_SERVER['REQUEST_METHOD'] == 'POST') {
            $new_password = $_POST['password'];
            $confirm_password = $_POST['confirm_password'];

            // Check if passwords match
            if ($new_password != $confirm_password) {
                echo "Passwords do not match.";
                exit();
            }

            // Hash the new password
            $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);

            // Update the user's password
            $sql_update = "UPDATE users 
                          SET password = '$hashed_password' 
                          WHERE id = ".$reset['user_id'];

            mysqli_query($conn, $sql_update);

            // Invalidate the token
            $sql_delete = "DELETE FROM password_reset WHERE token = '$token'";
            mysqli_query($conn, $sql_delete);

            echo "Password has been reset successfully.";
        }

    ?>

    <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>?token=<?php echo $token; ?>">
        New Password: <input type="password" name="password"><br>
        Confirm Password: <input type="password" name="confirm_password"><br>
        <input type="submit" value="Reset Password">
    </form>

</body>
</html>


<?php
// Include database configuration and security measures
include('config.php');

// Initialize variables to hold error messages
$errors = array();
$success = false;

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Check if email is provided
    if (!empty($_POST['email'])) {
        $email = mysqli_real_escape_string($conn, $_POST['email']);

        // Check if the user exists in the database
        $sql = "SELECT id FROM users WHERE email = '$email'";
        $result = mysqli_query($conn, $sql);

        if (mysqli_num_rows($result) == 1) {
            // Generate a random token and expiration time
            $token = bin2hex(random_bytes(16));
            $expires = date('Y-m-d H:i:s', strtotime('+30 minutes'));

            // Insert the token into reset_tokens table
            $insertSql = "INSERT INTO reset_tokens (user_id, token, created_at, expires_at)
                          VALUES (" . mysqli_insert_id($conn) . ", '$token', NOW(), '$expires')";
            if (mysqli_query($conn, $insertSql)) {
                // Send the email with the reset link
                $resetLink = "http://example.com/reset_password.php?token=$token";
                $to = $email;
                $subject = "Password Reset Request";
                $message = "Please click the following link to reset your password:

$resetLink";

                // Set mail headers
                $headers = 'From: webmaster@example.com' . "\r
" .
                          'Reply-To: webmaster@example.com' . "\r
" .
                          'X-Mailer: PHP/' . phpversion();

                if (mail($to, $subject, $message, $headers)) {
                    $success = true;
                } else {
                    $errors[] = "Failed to send reset email.";
                }
            } else {
                $errors[] = "Error storing reset token. Please try again.";
            }
        } else {
            $errors[] = "No user found with this email address.";
        }
    } else {
        $errors[] = "Email is required.";
    }
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Forgot Password</title>
</head>
<body>
    <?php if ($success) { ?>
        <p>An email has been sent with instructions to reset your password.</p>
    <?php } else { ?>
        <?php foreach ($errors as $error) { ?>
            <p><?php echo $error ?></p>
        <?php } ?>

        <form action="<?php $_PHP_SELF ?>" method="post">
            <label for="email">Email:</label><br>
            <input type="email" id="email" name="email" required><br><br>
            <button type="submit">Reset Password</button>
        </form>
    <?php } ?>

    <p>Remember your password? <a href="login.php">Login here</a>.</p>
</body>
</html>


<?php
include('config.php');

// Initialize variables to hold error messages
$errors = array();
$success = false;

if (isset($_GET['token'])) {
    $token = mysqli_real_escape_string($conn, $_GET['token']);

    // Check if the token exists and is valid
    $sql = "SELECT id, user_id FROM reset_tokens 
            WHERE token = '$token' AND expires_at > NOW()";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) == 1) {
        // Token is valid
        list($tokenId, $userId) = mysqli_fetch_array($result);
    } else {
        die("Invalid or expired token.");
    }
} else {
    die("No token provided.");
}

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    if (isset($_POST['password']) && isset($_POST['confirm_password'])) {
        $password = $_POST['password'];
        $confirmPassword = $_POST['confirm_password'];

        // Validate password
        if ($password != $confirmPassword) {
            $errors[] = "Passwords do not match.";
        } elseif (strlen($password) < 8) {
            $errors[] = "Password must be at least 8 characters long.";
        }

        if (empty($errors)) {
            // Hash the password
            $hashedPassword = password_hash($password, PASSWORD_DEFAULT);

            // Update the user's password in the database
            $updateSql = "UPDATE users SET password_hash = '$hashedPassword' WHERE id = $userId";
            if (mysqli_query($conn, $updateSql)) {
                // Delete all reset tokens for this user
                $deleteSql = "DELETE FROM reset_tokens WHERE user_id = $userId";
                mysqli_query($conn, $deleteSql);

                $success = true;
            } else {
                $errors[] = "Error updating password. Please try again.";
            }
        }
    }
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Reset Password</title>
</head>
<body>
    <?php if ($success) { ?>
        <p>Password reset successful! <a href="login.php">Click here to login</a>.</p>
    <?php } else { ?>
        <?php foreach ($errors as $error) { ?>
            <p><?php echo $error ?></p>
        <?php } ?>

        <form action="<?php $_PHP_SELF ?>?token=<?php echo $token ?>" method="post">
            <label for="password">New Password:</label><br>
            <input type="password" id="password" name="password" required><br><br>

            <label for="confirm_password">Confirm New Password:</label><br>
            <input type="password" id="confirm_password" name="confirm_password" required><br><br>

            <button type="submit">Reset Password</button>
        </form>
    <?php } ?>

    <p>Return to <a href="login.php">Login Page</a>.</p>
</body>
</html>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

try {
    // Create database connection
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

    if (isset($_POST['email']) && !empty($_POST['email'])) {
        $email = $_POST['email'];
        
        // Sanitize email input
        $email = trim($email);
        $email = filter_var($email, FILTER_SANITIZE_EMAIL);
        $email = htmlspecialchars($email);
        
        // Check if email exists in database
        $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
        $stmt->execute([$email]);
        $user = $stmt->fetch(PDO::FETCH_ASSOC);
        
        if ($user) {
            // Generate temporary password
            $temp_password = rand(1000, 9999); // You can make this more complex
            
            // Update the database with the new temporary password
            $updateStmt = $conn->prepare("UPDATE users SET 
                password = ?,
                reset_password_token = ?, 
                reset_password_expires = NOW()
                WHERE email = ?");
            
            $updateStmt->execute([$temp_password, md5($temp_password . microtime()), $email]);
            
            // Send the temporary password to user's email
            $to = $email;
            $subject = "Your Temporary Password";
            $message = "Dear User,

Your temporary password is: " . $temp_password . "
Please login and change your password.

Best regards,
Admin Team";
            $headers = "From: admin@example.com" . "\r
" .
                       "CC: nobody@example.com";
            
            mail($to, $subject, $message, $headers);
            
            // Redirect to success page
            header("Location: forgot_password_success.php");
            exit();
        } else {
            echo "Email does not exist in our database.";
        }
    }
} catch (PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}
?>


<?php
// Database configuration
$host = 'localhost';
$username = 'username';
$password = 'password';
$dbname = 'mydatabase';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Check if form is submitted
if (isset($_POST['submit'])) {
    // Get user input
    $email = $_POST['email'];
    
    // Sanitize email
    $email = mysqli_real_escape_string($conn, $email);
    
    // Check if email exists in database
    $sql = "SELECT * FROM users WHERE email='$email'";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) == 0) {
        // Email not found
        echo "Email not found in our records!";
    } else {
        // Generate reset token
        $resetToken = bin2hex(random_bytes(16));
        
        // Set expiration time (e.g., 1 hour)
        $expires = date('Y-m-d H:i:s', strtotime('+1 hour'));
        
        // Update database with reset token and expiration
        $updateSql = "UPDATE users SET reset_token='$resetToken', reset_expires='$expires' WHERE email='$email'";
        mysqli_query($conn, $updateSql);
        
        // Send reset email
        $to = $email;
        $subject = "Password Reset Request";
        $message = "Please click the following link to reset your password: http://example.com/reset-password.php?token=$resetToken";
        $headers = "From: noreply@example.com\r
";
        
        if (mail($to, $subject, $message, $headers)) {
            echo "Password reset email has been sent to $email!";
        } else {
            echo "Error sending email!";
        }
    }
}

// Close database connection
mysqli_close($conn);
?>


<?php
// Database configuration
$host = 'localhost';
$username = 'username';
$password = 'password';
$dbname = 'mydatabase';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Get token from URL
$token = $_GET['token'];

// Check if token is valid and not expired
$sql = "SELECT * FROM users WHERE reset_token='$token' AND reset_expires > NOW()";
$result = mysqli_query($conn, $sql);

if (mysqli_num_rows($result) == 0) {
    // Invalid or expired token
    echo "Invalid or expired password reset link!";
} else {
    // Display password reset form
    if ($_SERVER['REQUEST_METHOD'] == 'POST') {
        $newPassword = $_POST['password'];
        
        // Hash the new password
        $hashedPassword = password_hash($newPassword, PASSWORD_DEFAULT);
        
        // Update user's password
        $updateSql = "UPDATE users SET password='$hashedPassword', reset_token='', reset_expires='' WHERE reset_token='$token'";
        mysqli_query($conn, $updateSql);
        
        // Redirect to login page
        header("Location: login.php?message=Password+reset+successful!");
        exit();
    }
}

// Close database connection
mysqli_close($conn);
?>


<?php
// Database configuration
$host = 'localhost';
$username = 'username';
$password = 'password';
$dbname = 'mydatabase';

// Create connection
$conn = new mysqli($host, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function sendPasswordResetEmail($email, $token) {
    // Email content
    $subject = 'Password Reset Request';
    $message = "
        <html>
            <head>
                <title>Password Reset</title>
            </head>
            <body>
                <h2>Password Reset Request</h2>
                <p>Please click the following link to reset your password:</p>
                <a href='http://yourdomain.com/reset-password.php?token=$token'>Reset Password</a><br><br>
                <p>If you did not request this password reset, please ignore this email.</p>
            </body>
        </html>
    ";
    
    // Set headers
    $headers = "MIME-Version: 1.0" . "\r
";
    $headers .= "Content-type:text/html;charset=UTF-8" . "\r
";
    $headers .= "From: yourname@yourdomain.com" . "\r
";
    
    // Send email
    mail($email, $subject, $message, $headers);
}

function forgotPassword($email) {
    global $conn;
    
    // Check if email exists in database
    $sql = "SELECT id FROM users WHERE email = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("s", $email);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows > 0) {
        // Generate a random token
        $token = bin2hex(random_bytes(16));
        
        // Store token and expiration time in database
        $expiration_time = date('Y-m-d H:i:s', strtotime('+1 hour'));
        
        $sql = "INSERT INTO password_reset (user_id, token, expires) VALUES (?, ?, ?)";
        $stmt = $conn->prepare($sql);
        $row = $result->fetch_assoc();
        $stmt->bind_param("iss", $row['id'], $token, $expiration_time);
        $stmt->execute();
        
        // Send password reset email
        sendPasswordResetEmail($email, $token);
        
        return true;
    } else {
        return false; // Email not found in database
    }
}

// Example usage:
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = $_POST['email'];
    
    if (forgotPassword($email)) {
        echo "Password reset email has been sent to your email address.";
    } else {
        echo "Email not found in our records.";
    }
}

// Close connection
$conn->close();
?>


<?php
// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'your_database';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Check if form is submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Sanitize email input
    $email = mysqli_real_escape_string($conn, $_POST['email']);
    
    // Check if email exists in the database
    $sql = "SELECT id FROM users WHERE email='$email'";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) > 0) {
        // Generate a random token
        $token = bin2hex(random_bytes(16));
        
        // Set the token expiration time (e.g., 1 hour)
        $expiration_time = date('Y-m-d H:i:s', time() + 3600);
        
        // Update the users table with the new token and expiration time
        $update_sql = "UPDATE users SET reset_token='$token', reset_expires='$expiration_time' WHERE email='$email'";
        mysqli_query($conn, $update_sql);
        
        // Send the reset password link to the user's email
        $to = $email;
        $subject = 'Password Reset Request';
        $message = '
            <html>
                <body>
                    <h2>Password Reset</h2>
                    <p>Please click the following link to reset your password:</p>
                    <a href="http://localhost/reset_password.php?token='.$token.'">Reset Password</a><br><br>
                    <p>If you did not request this password reset, please ignore this email.</p>
                </body>
            </html>';
        $headers = "MIME-Version: 1.0\r
";
        $headers .= "Content-Type: text/html; charset=ISO-8859-1\r
";
        
        if (mail($to, $subject, $message, $headers)) {
            echo "<p>Email sent! Please check your inbox to reset your password.</p>";
        } else {
            echo "<p>Error sending email. Please try again later.</p>";
        }
    } else {
        // Email does not exist in the database
        header("Location: forgot_password_form.php?error=Email%20not%20found");
        exit();
    }
}

mysqli_close($conn);
?>


<?php
// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'your_database';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Check if token is provided
if (isset($_GET['token'])) {
    $token = $_GET['token'];
    
    // Get user information based on the token
    $sql = "SELECT id, reset_token, reset_expires FROM users WHERE reset_token='$token'";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) > 0) {
        $row = mysqli_fetch_assoc($result);
        
        // Check if token has expired
        if ($row['reset_expires'] < date('Y-m-d H:i:s')) {
            echo "<p>Token has expired. Please request a new password reset.</p>";
            exit();
        }
    } else {
        // Invalid token
        echo "<p>Invalid or expired token. Please request a new password reset.</p>";
        exit();
    }
} else {
    // No token provided
    header("Location: forgot_password_form.php");
    exit();
}

// Check if form is submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $new_password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];
    
    if ($new_password != $confirm_password) {
        echo "<p>Passwords do not match!</p>";
        exit();
    }
    
    // Hash the new password
    $hashed_password = password_hash($new_password, PASSWORD_BCRYPT);
    
    // Update the user's password and reset token
    $update_sql = "UPDATE users SET password='$hashed_password', reset_token='', reset_expires='' WHERE reset_token='$token'";
    mysqli_query($conn, $update_sql);
    
    echo "<p>Password updated successfully! You can now <a href='login.php'>login</a>.</p>";
}

mysqli_close($conn);
?>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'your_database';
$user = 'root';
$password = '';

try {
    // Create database connection
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $user, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

    function generateResetLink($email) {
        global $conn;
        
        try {
            // Check if email exists in the database
            $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
            $stmt->execute([$email]);
            
            if ($stmt->rowCount() == 0) {
                return "Email not found!";
            }
            
            // Generate a random token
            $token = bin2hex(random_bytes(16));
            $expires = date('Y-m-d H:i:s', strtotime('+1 hour'));
            
            // Insert the reset token into the database
            $resetStmt = $conn->prepare("INSERT INTO password_reset (user_id, token, expires) VALUES (?, ?, ?)");
            $resetStmt->execute([$stmt->fetch(PDO::FETCH_ASSOC)['id'], $token, $expires]);
            
            // Send email to user with reset link
            $subject = "Password Reset Request";
            $message = "
                <html>
                    <head></head>
                    <body>
                        <p>Hello,</p>
                        <p>You requested a password reset. Click the link below to reset your password:</p>
                        <a href='http://yourwebsite.com/reset-password.php?token=$token'>Reset Password</a><br><br>
                        <small>This link will expire in 1 hour.</small>
                    </body>
                </html>
            ";
            
            $headers = "MIME-Version: 1.0" . "\r
";
            $headers .= "Content-type:text/html;charset=UTF-8" . "\r
";
            $headers .= "From: yourname@yourdomain.com" . "\r
";
            
            mail($email, $subject, $message, $headers);
            
            return "Password reset email sent successfully!";
            
        } catch(PDOException $e) {
            return "Error: " . $e->getMessage();
        }
    }

    // Main function to handle forgot password
    function forgot_password() {
        global $conn;
        
        if ($_SERVER['REQUEST_METHOD'] == 'POST') {
            $email = $_POST['email'];
            
            try {
                $stmt = $conn->prepare("SELECT email FROM users WHERE email = ?");
                $stmt->execute([$email]);
                
                if ($stmt->rowCount() > 0) {
                    // Email exists, generate and send reset link
                    echo generateResetLink($email);
                } else {
                    echo "Email does not exist in our records!";
                }
            } catch(PDOException $e) {
                echo "Error: " . $e->getMessage();
            }
        } else {
            // Show the forgot password form
            echo '
                <form action="' . $_SERVER['PHP_SELF'] . '" method="post">
                    <input type="email" name="email" placeholder="Enter your email" required>
                    <button type="submit">Reset Password</button>
                </form>';
        }
    }

    // Call the forgot password function
    forgot_password();

} catch(PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}
?>


<?php
// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'mydatabase';

// Create database connection
$conn = new mysqli($host, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Check if form is submitted
if (isset($_POST['reset_password'])) {
    // Get email from POST request
    $email = $_POST['email'];

    // Validate input
    if (empty($email)) {
        die("Email is required!");
    }

    // Sanitize email to prevent SQL injection
    $email = $conn->real_escape_string(trim($email));

    // Check if email exists in the database
    $sql = "SELECT id, username FROM users WHERE email = '$email'";
    $result = $conn->query($sql);

    if ($result->num_rows == 0) {
        die("No account found with this email!");
    }

    // Generate a temporary password
    $temp_password = rand(100000, 999999); // You can use more secure method for production

    // Update the database with the new temporary password
    $sql_update = "UPDATE users SET 
        password = SHA2('$temp_password', 256) 
        WHERE email = '$email'";
    
    if (!$conn->query($sql_update)) {
        die("Error updating password: " . $conn->error);
    }

    // Send the temporary password to user's email
    $to = $email;
    $subject = "Your Temporary Password";
    $message = "Dear User,

Your temporary password is: " . $temp_password . "

Please change your password after logging in.

Best regards,";
    $headers = "From: admin@example.com";

    if (!mail($to, $subject, $message, $headers)) {
        die("Failed to send email!");
    }

    // Redirect back to login page with success message
    header("Location: login.php?msg=Password reset successful! Check your email for the temporary password.");
    exit();
}

// Close database connection
$conn->close();

?>


<?php
// Database connection
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "myDB";

$conn = mysqli_connect($servername, $username, $password, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Session start
session_start();

// Error messages initialization
$error = array();
$email = '';

// If form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Validate email
    if (empty($_POST['email'])) {
        $error[] = "Email is required";
    } else {
        $email = mysqli_real_escape_string($conn, $_POST['email']);
        // Check if email exists in the database
        $sql = "SELECT id FROM users WHERE email='$email'";
        $result = mysqli_query($conn, $sql);
        
        if (mysqli_num_rows($result) == 0) {
            $error[] = "Email not found. Please enter a valid email address.";
        } else {
            // Generate a random token
            $token = bin2hex(random_bytes(16));
            
            // Set token expiration time (e.g., 2 hours)
            $expires = date('Y-m-d H:i:s', time() + 7200);
            
            // Update the token and expiration in the database
            $sql = "UPDATE users SET reset_token='$token', reset_expires='$expires' WHERE email='$email'";
            mysqli_query($conn, $sql);
            
            // Send password reset link to user's email
            $reset_link = "http://$_SERVER[HTTP_HOST]/reset_password.php?token=$token&id=" . mysqli_insert_id($conn);
            send_reset_email($email, $reset_link);
            
            // Success message
            header("Location: forgot_password_success.php");
            exit();
        }
    }
}

// Function to send reset email
function send_reset_email($to, $link) {
    require 'PHPMailer/PHPMailerAutoload.php';
    
    $mail = new PHPMailer;
    
    $mail->isSMTP();
    $mail->Host = 'smtp.example.com'; // Replace with your SMTP server
    $mail->Port = 587; // Replace with your SMTP port
    $mail->SMTPSecure = 'tls'; // Enable TLS encryption, `ssl` also acceptable
    
    $mail->SMTPAuth = true;
    $mail->Username = 'your_email@example.com';
    $mail->Password = 'your_password';
    
    $mail->setFrom('your_email@example.com', 'Your Name');
    $mail->addAddress($to);
    $mail->Subject = 'Password Reset Request';
    $mail->Body    = "Click the following link to reset your password: $link";
    
    if (!$mail->send()) {
        echo 'Mailer Error: ' . $mail->ErrorInfo;
    }
}

// Close database connection
mysqli_close($conn);
?>


<?php
session_start();
require_once 'database_connection.php'; // Include your database connection file

// Check if form was submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = trim($_POST['email']);

    // Validate email
    if (empty($email)) {
        header("Location: forgot_password_form.php?error=Email is required");
        exit();
    }

    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        header("Location: forgot_password_form.php?error=Invalid email format");
        exit();
    }

    // Check if email exists in the database
    $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
    $stmt->bind_param("s", $email);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows === 0) {
        header("Location: forgot_password_form.php?error=Email not found");
        exit();
    }

    // Generate a random token
    $token = bin2hex(random_bytes(16));
    $expires = date('Y-m-d H:i:s', time() + 3600); // Token expires in 1 hour

    // Update the user's record with the new token and expiration time
    $updateStmt = $conn->prepare("UPDATE users SET reset_token = ?, reset_expires = ? WHERE email = ?");
    $updateStmt->bind_param("sss", $token, $expires, $email);
    $updateStmt->execute();

    // Send the password reset link to the user's email
    $resetLink = "http://$_SERVER[HTTP_HOST]/reset_password.php?token=$token";
    $subject = "Password Reset Request";
    $message = "You requested a password reset. Click this link to reset your password:
$resetLink

If you did not request this, please ignore this email.";

    if (mail($email, $subject, $message)) {
        header("Location: login.php?success=Password reset instructions sent to your email");
        exit();
    } else {
        header("Location: forgot_password_form.php?error=Failed to send password reset email");
        exit();
    }
}

// Close the database connection
$conn->close();
?>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$db_name = 'mydatabase';

// Connect to database
$conn = new mysqli($host, $username, $password, $db_name);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Start session
session_start();

// Function to send reset password email
function sendResetPasswordEmail($email, $token, $resetLink) {
    $to = $email;
    $subject = "Password Reset Request";
    
    $message = "
        <html>
            <head></head>
            <body>
                <p>Hello,</p>
                <p>We received a request to reset your password. Click the link below to reset it:</p>
                <a href='$resetLink'>$resetLink</a><br><br>
                <p>If you did not make this request, please ignore this email.</p>
            </body>
        </html>
    ";
    
    $headers = "MIME-Version: 1.0" . "\r
";
    $headers .= "Content-type:text/html;charset=UTF-8" . "\r
";
    
    mail($to, $subject, $message, $headers);
}

// Function to generate random token
function generateToken() {
    return bin2hex(random_bytes(16));
}

// Check if form is submitted
if (isset($_POST['email'])) {
    $email = $_POST['email'];
    
    // Validate email format
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        die("Invalid email format");
    }
    
    // Check if email exists in database
    $sql = "SELECT id FROM users WHERE email='$email'";
    $result = $conn->query($sql);
    
    if ($result->num_rows == 0) {
        die("No account found with this email address.");
    } else {
        // Generate reset token
        $token = generateToken();
        
        // Store token in database (you can create a separate table for password resets)
        $resetTableSql = "CREATE TABLE IF NOT EXISTS password_resets (
            id INT AUTO_INCREMENT PRIMARY KEY,
            user_id INT NOT NULL,
            token VARCHAR(100) NOT NULL,
            created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
          )";
        $conn->query($resetTableSql);
        
        // Insert token into table
        $insertTokenSql = "INSERT INTO password_resets (user_id, token) 
                          VALUES ('" . $result->fetch_assoc()['id'] . "', '$token')";
        if (!$conn->query($insertTokenSql)) {
            die("Error creating reset token");
        }
        
        // Create reset link
        $resetLink = "http://$_SERVER[HTTP_HOST]/reset-password.php?token=$token";
        
        // Send email
        sendResetPasswordEmail($email, $token, $resetLink);
        
        // Redirect back to forgot password page with success message
        header("Location: forgot-password.php?message=Check%20your%20email%20for%20password%20reset%20instructions.");
        exit();
    }
}

// Close database connection
$conn->close();
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Forgot Password</title>
</head>
<body>
    <?php if (isset($_GET['message'])) { ?>
        <p><?php echo urldecode($_GET['message']); ?></p>
    <?php } ?>

    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <input type="email" name="email" placeholder="Enter your email" required><br><br>
        <button type="submit">Reset Password</button>
    </form>
</body>
</html>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$db_name = 'mydatabase';

// Connect to database
$conn = new mysqli($host, $username, $password, $db_name);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Start session
session_start();

// Function to validate and update password
function resetPassword($token, $newPassword) {
    global $conn;
    
    // Check if token exists and hasn't expired (you can set expiration time)
    $sql = "SELECT * FROM password_resets 
            WHERE token='$token'";
    $result = $conn->query($sql);
    
    if ($result->num_rows == 0) {
        die("Invalid reset link or it has expired.");
    }
    
    // Get user ID
    $row = $result->fetch_assoc();
    $userId = $row['user_id'];
    
    // Update password in users table
    $newPasswordHashed = password_hash($newPassword, PASSWORD_DEFAULT);
    $updateSql = "UPDATE users 
                  SET password='$newPasswordHashed' 
                  WHERE id=$userId";
    if (!$conn->query($updateSql)) {
        die("Error updating password");
    }
    
    // Delete used token
    $deleteTokenSql = "DELETE FROM password_resets 
                      WHERE token='$token'";
    $conn->query($deleteTokenSql);
}

// Check if token is provided and valid
if (isset($_GET['token'])) {
    $token = $_GET['token'];
    
    // If form submitted, reset password
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        $newPassword = $_POST['password'];
        $confirmPassword = $_POST['confirm_password'];
        
        if ($newPassword != $confirmPassword) {
            die("Passwords do not match");
        }
        
        // Reset password
        resetPassword($token, $newPassword);
        
        // Redirect to login page with success message
        header("Location: login.php?message=Password%20reset%20successful.");
        exit();
    } else {
        // Display password reset form
        ?>
        <!DOCTYPE html>
        <html lang="en">
        <head>
            <meta charset="UTF-8">
            <title>Reset Password</title>
        </head>
        <body>
            <h2>Reset Your Password</h2>
            <form action="<?php echo $_SERVER['PHP_SELF']; ?>?token=<?php echo $token; ?>" method="post">
                <input type="password" name="password" placeholder="Enter new password" required><br><br>
                <input type="password" name="confirm_password" placeholder="Confirm new password" required><br><br>
                <button type="submit">Reset Password</button>
            </form>
        <?php } ?>
    </body>
</html>

<?php
// Close database connection
$conn->close();
?>


<?php
// forgot.php
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "myDB";

// Create connection
$conn = mysqli_connect($servername, $username, $password, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

if (isset($_POST['email'])) {
    $email = mysqli_real_escape_string($conn, $_POST['email']);
    
    // Check if email exists
    $sql = "SELECT id FROM users WHERE email = '$email'";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) == 1) {
        $token = bin2hex(random_bytes(32));
        
        // Set expiration time for token (e.g., 1 hour from now)
        $expires = date('Y-m-d H:i:s', strtotime('+1 hour'));
        
        // Update the user's record with token and expiration
        $updateSql = "UPDATE users SET reset_token = '$token', reset_expires = '$expires' WHERE email = '$email'";
        mysqli_query($conn, $updateSql);
        
        // Send email with reset link
        $to = $email;
        $subject = "Password Reset Request";
        $message = "Please click the following link to reset your password: http://yourwebsite.com/reset.php?token=$token";
        $headers = "From: yourwebsite@example.com";
        
        if (mail($to, $subject, $message, $headers)) {
            echo "An email has been sent with instructions to reset your password.";
        } else {
            echo "Email sending failed. Please try again later.";
        }
    } else {
        echo "No account found with this email address.";
    }
}
?>


<?php
// ... previous HTML code ...

if (isset($_POST['password']) && isset($_POST['confirm_password'])) {
    $token = mysqli_real_escape_string($conn, $_GET['token']);
    $password = mysqli_real_escape_string($conn, $_POST['password']);
    $confirm_password = mysqli_real_escape_string($conn, $_POST['confirm_password']);
    
    if ($password != $confirm_password) {
        echo "Passwords do not match. Please try again.";
    } else {
        // Check token validity again
        $sql = "SELECT id FROM users WHERE reset_token = '$token' AND reset_expires > NOW()";
        $result = mysqli_query($conn, $sql);
        
        if (mysqli_num_rows($result) == 1) {
            // Hash the new password
            $hashed_password = password_hash($password, PASSWORD_DEFAULT);
            
            // Update the user's password and clear the reset token
            $updateSql = "UPDATE users SET password = '$hashed_password', reset_token = NULL, reset_expires = NULL WHERE reset_token = '$token'";
            if (mysqli_query($conn, $updateSql)) {
                echo "Password has been successfully updated!";
            } else {
                echo "Error updating password. Please try again.";
            }
        } else {
            echo "Invalid or expired reset link. Please request a new password reset.";
        }
    }
}

// Close database connection
mysqli_close($conn);
?>


<?php
session_start();

// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$db_name = 'my_database';

$conn = mysqli_connect($host, $username, $password, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function sendResetEmail($email, $resetToken) {
    $to = $email;
    $subject = "Password Reset Request";
    
    $message = "
        <html>
        <head></head>
        <body style='font-family: Arial, sans-serif;'>
            <h2>Password Reset</h2>
            <p>Please click the link below to reset your password:</p>
            <a href='http://localhost/reset-password.php?token=$resetToken'>Reset Password</a><br><br>
            <small>If you didn't request a password reset, you can safely ignore this email.</small>
        </body>
        </html>
    ";
    
    $headers = "MIME-Version: 1.0" . "\r
";
    $headers .= "Content-type:text/html;charset=UTF-8" . "\r
";
    $headers .= "From: admin@example.com" . "\r
";

    mail($to, $subject, $message, $headers);
}

if (isset($_POST['submit'])) {
    $email = mysqli_real_escape_string($conn, $_POST['email']);
    
    // Check if email exists in database
    $sql = "SELECT id FROM users WHERE email='$email'";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) > 0) {
        // Generate reset token
        $resetToken = bin2hex(random_bytes(16));
        
        // Store token in database with expiration time
        $expirationTime = date('Y-m-d H:i:s', strtotime('+30 minutes'));
        $sql = "UPDATE users SET reset_token='$resetToken', reset_expires='$expirationTime' WHERE email='$email'";
        mysqli_query($conn, $sql);
        
        // Send reset email
        sendResetEmail($email, $resetToken);
        
        echo "An email has been sent to your address with a password reset link.";
    } else {
        echo "Email not found in our records.";
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            margin: 0;
            background-color: #f0f0f0;
        }
        
        .container {
            background-color: white;
            padding: 20px;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
            width: 300px;
        }
        
        .form-group {
            margin-bottom: 10px;
        }
        
        input[type='email'] {
            width: 100%;
            padding: 8px;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-sizing: border-box;
        }
        
        button {
            background-color: #4CAF50;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            width: 100%;
        }
        
        button:hover {
            background-color: #45a049;
        }
    </style>
</head>
<body>
    <div class="container">
        <h2>Forgot Password</h2>
        <form method="POST" action="<?php echo $_SERVER['PHP_SELF']; ?>">
            <div class="form-group">
                <input type="email" placeholder="Enter your email address" name="email" required>
            </div>
            <button type="submit" name="submit">Reset Password</button>
        </form>
    </div>
</body>
</html>

<?php
mysqli_close($conn);
?>


<?php
session_start();

// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$db_name = 'my_database';

$conn = mysqli_connect($host, $username, $password, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

if (isset($_GET['token'])) {
    $resetToken = mysqli_real_escape_string($conn, $_GET['token']);
    
    // Check if token exists and hasn't expired
    $sql = "SELECT id FROM users WHERE reset_token='$resetToken' AND reset_expires > NOW()";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) == 0) {
        die("Invalid or expired token.");
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            margin: 0;
            background-color: #f0f0f0;
        }
        
        .container {
            background-color: white;
            padding: 20px;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
            width: 300px;
        }
        
        .form-group {
            margin-bottom: 10px;
        }
        
        input[type='password'] {
            width: 100%;
            padding: 8px;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-sizing: border-box;
        }
        
        button {
            background-color: #4CAF50;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            width: 100%;
        }
        
        button:hover {
            background-color: #45a049;
        }
    </style>
</head>
<body>
    <div class="container">
        <h2>Reset Password</h2>
        <?php
        if (isset($_POST['submit'])) {
            $newPassword = mysqli_real_escape_string($conn, $_POST['password']);
            $confirmPassword = mysqli_real_escape_string($conn, $_POST['confirm_password']);
            
            if ($newPassword != $confirmPassword) {
                echo "Passwords do not match.";
            } else {
                // Update the password
                $sql = "UPDATE users SET password='" . md5($newPassword) . "', reset_token='', reset_expires='' WHERE reset_token='$resetToken'";
                mysqli_query($conn, $sql);
                
                echo "Password successfully updated!";
            }
        }
        ?>
        
        <form method="POST" action="<?php echo $_SERVER['PHP_SELF']; ?>">
            <div class="form-group">
                <input type="password" placeholder="Enter new password" name="password" required>
            </div>
            <div class="form-group">
                <input type="password" placeholder="Confirm new password" name="confirm_password" required>
            </div>
            <button type="submit" name="submit">Update Password</button>
        </form>
    </div>
</body>
</html>

<?php
mysqli_close($conn);
?>


<?php
// Include database connection
require_once 'db_connection.php';

// Initialize variables
$message = '';
$email = '';

if (isset($_POST['submit'])) {
    $email = $_POST['email'];
    
    // Check if email exists in the database
    $query = "SELECT * FROM users WHERE email = ?";
    $stmt = $conn->prepare($query);
    $stmt->bind_param("s", $email);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows > 0) {
        // Generate a random token
        $token = md5(uniqid(rand(), true));
        
        // Set token expiration (e.g., 1 hour)
        $expires = date("Y-m-d H:i:s", time() + 3600);
        
        // Store token in the database
        $updateQuery = "UPDATE users SET reset_token = ?, reset_expires = ? WHERE email = ?";
        $stmt = $conn->prepare($updateQuery);
        $stmt->bind_param("sss", $token, $expires, $email);
        $stmt->execute();
        
        // Send email with reset link
        $resetLink = "http://yourdomain.com/reset_password.php?token=" . $token;
        $to = $email;
        $subject = "Password Reset Request";
        $headers = "From: yourname@yourdomain.com" . "\r
";
        
        $messageBody = "Please click the following link to reset your password:

";
        $messageBody .= $resetLink . "

";
        $messageBody .= "If you did not request this password reset, please ignore this email.";
        
        mail($to, $subject, $messageBody, $headers);
        
        $message = "A password reset link has been sent to your email address.";
    } else {
        $message = "Email not found in our records. Please check your email and try again.";
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <?php echo $message; ?>
    <br><br>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        Email: <input type="text" name="email" value="<?php echo $email; ?>"><br>
        <input type="submit" name="submit" value="Submit">
    </form>
</body>
</html>


<?php
// Include database connection
require_once 'db_connection.php';

// Initialize variables
$message = '';
$newPassword = '';

if (isset($_GET['token'])) {
    $token = $_GET['token'];
    
    // Check if token exists and is valid
    $query = "SELECT * FROM users WHERE reset_token = ? AND reset_expires > NOW()";
    $stmt = $conn->prepare($query);
    $stmt->bind_param("s", $token);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows == 0) {
        die("Invalid or expired token. Please request a new password reset.");
    }
}

if (isset($_POST['reset'])) {
    $token = $_GET['token'];
    $newPassword = $_POST['password'];
    $confirmPassword = $_POST['confirm_password'];
    
    if ($newPassword != $confirmPassword) {
        $message = "Passwords do not match. Please try again.";
    } else {
        // Update password
        $hash = password_hash($newPassword, PASSWORD_DEFAULT);
        
        $updateQuery = "UPDATE users SET password = ?, reset_token = NULL WHERE reset_token = ?";
        $stmt = $conn->prepare($updateQuery);
        $stmt->bind_param("ss", $hash, $token);
        $stmt->execute();
        
        $message = "Password has been successfully updated!";
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <?php echo $message; ?>
    <br><br>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>?token=<?php echo $token; ?>" method="post">
        New Password: <input type="password" name="password"><br>
        Confirm Password: <input type="password" name="confirm_password"><br>
        <input type="submit" name="reset" value="Reset Password">
    </form>
</body>
</html>


<?php
// Database connection
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'test';

$conn = new mysqli($host, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Generate random token
function generateToken() {
    return bin2hex(random_bytes(16));
}

// Send reset password email
function sendResetEmail($email, $token, $username) {
    $to = $email;
    $subject = 'Password Reset Request';
    $message = "Click the following link to reset your password: http://example.com/reset_password.php?token=$token&user=$username";
    $headers = 'From: noreply@example.com' . "\r
" .
               'Reply-To: noreply@example.com' . "\r
" .
               'X-Mailer: PHP/' . phpversion();

    mail($to, $subject, $message, $headers);
}

// Reset password request form
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $email = $_POST['email'];
    
    // Sanitize email
    $email = $conn->real_escape_string(trim($email));
    
    // Check if email exists in database
    $sql = "SELECT id, username FROM users WHERE email='$email'";
    $result = $conn->query($sql);
    
    if ($result->num_rows == 0) {
        die("Email not found!");
    }
    
    $row = $result->fetch_assoc();
    $token = generateToken();
    $expires = date('Y-m-d H:i:s', time() + 3600); // Token expires in 1 hour
    
    // Insert token into database
    $sql = "INSERT INTO password_reset (user_id, token, expires) VALUES ('{$row['id']}', '$token', '$expires')";
    
    if ($conn->query($sql)) {
        sendResetEmail($email, $token, $row['username']);
        echo "Password reset link has been sent to your email!";
    } else {
        die("Error: " . $conn->error);
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <h2>Forgot Password</h2>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <label>Email:</label><br>
        <input type="email" name="email" required><br><br>
        <input type="submit" value="Request Reset">
    </form>
</body>
</html>

// reset_password.php

<?php
// Database connection (same as above)

if ($_SERVER['REQUEST_METHOD'] == 'GET') {
    $token = $_GET['token'];
    $username = $_GET['user'];

    // Check token validity
    $sql = "SELECT user_id, expires FROM password_reset WHERE token='$token'";
    $result = $conn->query($sql);

    if ($result->num_rows == 0) {
        die("Invalid or expired reset link!");
    }

    $row = $result->fetch_assoc();
    
    // Check if token has expired
    if (strtotime($row['expires']) < time()) {
        die("Reset link has expired. Please request a new one.");
    }
}

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $token = $_GET['token'];
    $newPassword = password_hash($_POST['password'], PASSWORD_DEFAULT);
    
    // Update user's password
    $sql = "UPDATE users SET password='$newPassword' WHERE id='$row[user_id]'";
    if ($conn->query($sql)) {
        // Delete used token
        $sql = "DELETE FROM password_reset WHERE token='$token'";
        $conn->query($sql);
        echo "Password reset successful!";
    } else {
        die("Error: " . $conn->error);
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <h2>Reset Password</h2>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <label>New Password:</label><br>
        <input type="password" name="password" required><br><br>
        <input type="submit" value="Reset Password">
    </form>
</body>
</html>


<?php
session_start();
include('db_connection.php');

if (isset($_POST['email'])) {
    $email = $_POST['email'];
    
    // Check if email exists in database
    $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
    $stmt->bind_param("s", $email);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows > 0) {
        // Generate a token and expiration time
        $token = bin2hex(random_bytes(32)); // Generates a 64-character token
        $expires = date('Y-m-d H:i:s', strtotime('+1 hour'));
        
        // Insert token into database
        $stmt = $conn->prepare("INSERT INTO password_reset (user_id, token, expires) VALUES (?, ?, ?)");
        $row = $result->fetch_assoc();
        $stmt->bind_param("iss", $row['id'], $token, $expires);
        $stmt->execute();
        
        // Send reset email
        $to = $email;
        $subject = "Password Reset Request";
        $message = "Please click the following link to reset your password:

" .
                   "http://yourdomain.com/reset_password.php?token=" . $token . "

" .
                   "If you did not request this, please ignore.";
        $headers = "From: yourname@yourdomain.com";
        
        mail($to, $subject, $message, $headers);
        
        echo "Password reset email has been sent!";
    } else {
        echo "Email does not exist in our records!";
    }
}
?>


<?php
session_start();
include('db_connection.php');

if (!isset($_GET['token'])) {
    die("Invalid request.");
}

$token = $_GET['token'];

// Check if token exists and is valid
$stmt = $conn->prepare("SELECT * FROM password_reset WHERE token = ? AND expires > NOW()");
$stmt->bind_param("s", $token);
$stmt->execute();
$result = $stmt->get_result();

if ($result->num_rows == 0) {
    die("Invalid or expired reset link.");
}

// Get user ID
$row = $result->fetch_assoc();
$user_id = $row['user_id'];

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];
    
    if ($password != $confirm_password) {
        die("Passwords do not match!");
    }
    
    // Hash the password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);
    
    // Update the user's password
    $stmt = $conn->prepare("UPDATE users SET password = ? WHERE id = ?");
    $stmt->bind_param("si", $hashed_password, $user_id);
    $stmt->execute();
    
    // Delete the reset token
    $stmt = $conn->prepare("DELETE FROM password_reset WHERE token = ?");
    $stmt->bind_param("s", $token);
    $stmt->execute();
    
    echo "Password has been successfully updated!";
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <h2>Reset Password</h2>
    <form action="<?php echo $_SERVER['PHP_SELF'] . '?token=' . $token; ?>" method="post">
        <label for="password">New Password:</label><br>
        <input type="password" id="password" name="password"><br>
        <label for="confirm_password">Confirm Password:</label><br>
        <input type="password" id="confirm_password" name="confirm_password"><br>
        <input type="submit" value="Reset">
    </form>
</body>
</html>


<?php
// Database connection details
$host = 'localhost';
$dbUsername = 'root';
$dbPassword = '';
$dbName = 'mydatabase';

// Create database connection
$conn = new mysqli($host, $dbUsername, $dbPassword, $dbName);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to send reset email
function sendResetEmail($email, $token, $userId) {
    $to = $email;
    $subject = 'Password Reset Request';
    $message = "
        <html>
            <head>
                <title>Password Reset</title>
            </head>
            <body>
                <h2>Password Reset Request</h2>
                <p>Please click the following link to reset your password:</p>
                <a href='http://localhost/reset-password.php?token=$token&userId=$userId'>Reset Password</a>
                <br>
                <p>If you didn't request a password reset, you can safely ignore this email.</p>
            </body>
        </html>";
    $headers = "MIME-Version: 1.0" . "\r
";
    $headers .= "Content-type:text/html;charset=UTF-8" . "\r
";
    
    mail($to, $subject, $message, $headers);
}

// Check if form is submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $email = $_POST['email'];
    
    // Validate email format
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        die("Invalid email format");
    }
    
    // Check if email exists in database
    $sql = "SELECT id FROM users WHERE email='$email'";
    $result = $conn->query($sql);
    
    if ($result->num_rows == 0) {
        die("Email not found in our records");
    } else {
        $row = $result->fetch_assoc();
        $userId = $row['id'];
        
        // Generate reset token
        $token = bin2hex(openssl_random_pseudo_bytes(16));
        
        // Store token and expiration time in database
        $expirationTime = date('Y-m-d H:i:s', strtotime('+30 minutes'));
        $sql = "INSERT INTO password_reset (user_id, token, expires) VALUES ($userId, '$token', '$expirationTime')";
        if (!$conn->query($sql)) {
            die("Error storing reset token: " . $conn->error);
        }
        
        // Send reset email
        sendResetEmail($email, $token, $userId);
        
        header('Location: password_reset_sent.html');
        exit();
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <h2>Forgot Password</h2>
    <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
        <label for="email">Email:</label><br>
        <input type="text" id="email" name="email"><br><br>
        <input type="submit" value="Reset Password">
    </form>
</body>
</html>


<?php
session_start();

// Database connection details (same as above)
$conn = new mysqli($host, $dbUsername, $dbPassword, $dbName);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Get token and user ID from URL parameters
$token = $_GET['token'];
$userId = $_GET['userId'];

// Check if token exists in database and is still valid
$sql = "SELECT * FROM password_reset WHERE token='$token' AND user_id=$userId";
$result = $conn->query($sql);

if ($result->num_rows == 0) {
    die("Invalid or expired reset link");
}

$row = $result->fetch_assoc();
$expirationTime = $row['expires'];

// Check if token has expired
if (strtotime(date('Y-m-d H:i:s')) > strtotime($expirationTime)) {
    die("Reset link has expired. Please request a new password reset.");
}

// Process password reset if form is submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $newPassword = $_POST['new_password'];
    $confirmPassword = $_POST['confirm_password'];
    
    // Validate passwords
    if ($newPassword != $confirmPassword) {
        die("Passwords do not match");
    }
    
    // Check password strength (you can modify these requirements)
    if (strlen($newPassword) < 8) {
        die("Password must be at least 8 characters long");
    }
    
    // Hash the new password
    $hashedPassword = password_hash($newPassword, PASSWORD_DEFAULT);
    
    // Update user's password in database
    $sql = "UPDATE users SET password='$hashedPassword' WHERE id=$userId";
    if (!$conn->query($sql)) {
        die("Error updating password: " . $conn->error);
    }
    
    // Delete the reset token from database
    $sql = "DELETE FROM password_reset WHERE token='$token'";
    $conn->query($sql);
    
    header('Location: login.php');
    exit();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <h2>Reset Password</h2>
    <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
        <label for="new_password">New Password:</label><br>
        <input type="password" id="new_password" name="new_password"><br><br>
        <label for="confirm_password">Confirm Password:</label><br>
        <input type="password" id="confirm_password" name="confirm_password"><br><br>
        <input type="submit" value="Reset Password">
    </form>
</body>
</html>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'mydatabase';

// Connect to database
$conn = new mysqli($host, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Start session
session_start();

// Function to send password reset email
function sendResetEmail($email, $token) {
    $to = $email;
    $subject = 'Password Reset Request';
    
    $message = '
        <html>
            <head></head>
            <body>
                <p>Hello,</p>
                <p>We received a request to reset your password. Click the link below to reset it:</p>
                <a href="http://localhost/reset-password.php?token=' . $token . '">Reset Password</a><br>
                <p>If you did not make this request, please ignore this email.</p>
            </body>
        </html>
    ';
    
    $headers = 'MIME-Version: 1.0' . "\r
";
    $headers .= 'Content-type: text/html; charset=UTF-8' . "\r
";
    $headers .= 'From: <your-email@example.com>' . "\r
";

    if (mail($to, $subject, $message, $headers)) {
        return true;
    } else {
        return false;
    }
}

// Reset password function
function resetPassword($token, $new_password) {
    global $conn;

    // Check if token exists in database
    $sql = "SELECT * FROM users WHERE reset_token = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("s", $token);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        // Update password
        $hash_password = password_hash($new_password, PASSWORD_DEFAULT);
        
        $sql_update = "UPDATE users SET 
                        password = ?, 
                        reset_token = NULL,
                        token_expiry = NULL 
                      WHERE reset_token = ?";
        
        $stmt_update = $conn->prepare($sql_update);
        $stmt_update->bind_param("ss", $hash_password, $token);
        $result_update = $stmt_update->execute();

        if ($result_update) {
            return true;
        } else {
            return false;
        }
    } else {
        // Invalid or expired token
        return false;
    }
}

// Request password reset function
function requestPasswordReset($email) {
    global $conn;

    // Check if email exists in database
    $sql = "SELECT * FROM users WHERE email = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("s", $email);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows == 1) {
        // Generate reset token
        $token = bin2hex(random_bytes(16));
        
        // Update database with new token and expiry time (30 minutes from now)
        $expiry_time = date('Y-m-d H:i:s', strtotime('+30 minutes'));
        
        $sql_update = "UPDATE users SET 
                        reset_token = ?, 
                        token_expiry = ?
                      WHERE email = ?";
        
        $stmt_update = $conn->prepare($sql_update);
        $stmt_update->bind_param("sss", $token, $expiry_time, $email);
        $result_update = $stmt_update->execute();

        if ($result_update) {
            // Send reset email
            if (sendResetEmail($email, $token)) {
                return true;
            } else {
                return false;
            }
        } else {
            return false;
        }
    } else {
        // Email not found in database
        return false;
    }
}

// Example usage:

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $email = $_POST['email'];
    
    if (requestPasswordReset($email)) {
        echo "A password reset link has been sent to your email.";
    } else {
        echo "Email not found or error occurred. Please try again.";
    }
}

// Close database connection
$conn->close();
?>


<?php
// Check if form was submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Sanitize input
    $email = filter_var($_POST['email'], FILTER_SANITIZE_EMAIL);
    
    // Validate email
    if (empty($email) || !filter_var($email, FILTER_VALIDATE_EMAIL)) {
        die("Please enter a valid email address.");
    }
    
    // Database connection
    $servername = "localhost";
    $username = "username";
    $password = "password";
    $dbname = "myDB";
    
    try {
        $conn = new PDO("mysql:host=$servername;dbname=$dbname", $username, $password);
        $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
        
        // Check if email exists in database
        $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
        $stmt->execute([$email]);
        $result = $stmt->fetch();
        
        if (!$result) {
            die("Email does not exist in our records.");
        }
        
        // Generate new password
        $new_password = generateNewPassword();
        
        // Update database with new password
        $hash = password_hash($new_password, PASSWORD_DEFAULT);
        $stmt = $conn->prepare("UPDATE users SET password = ? WHERE email = ?");
        $stmt->execute([$hash, $email]);
        
        // Send email to user
        sendPasswordResetEmail($email, $new_password);
        
        echo "A new password has been sent to your email address.";
    } catch(PDOException $e) {
        die("Connection failed: " . $e->getMessage());
    }
}


function generateNewPassword() {
    $length = 12; // Length of the generated password
    $chars = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^&*";
    $random_password = substr(str_shuffle($chars), 0, $length);
    return $random_password;
}


function sendPasswordResetEmail($email, $new_password) {
    $to = $email;
    $subject = "Your New Password";
    $message = "Your new password is: " . $new_password . "

Please login and change your password immediately.";
    $headers = "From: webmaster@example.com" . "\r
" .
               "CC: info@example.com";
    
    if (mail($to, $subject, $message, $headers)) {
        echo "Email sent successfully!";
    } else {
        die("Failed to send email.");
    }
}


try {
    // Database operations here...
} catch(PDOException $e) {
    die("Error occurred while processing your request: " . $e->getMessage());
}

// Check if email is valid:
if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
    die("Please enter a valid email address.");
}


<?php
function generateNewPassword() {
    $length = 12;
    $chars = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^&*";
    return substr(str_shuffle($chars), 0, $length);
}

function sendPasswordResetEmail($email, $new_password) {
    $to = $email;
    $subject = "Your New Password";
    $message = "Your new password is: " . $new_password . "

Please login and change your password immediately.";
    $headers = "From: webmaster@example.com" . "\r
" .
               "CC: info@example.com";
    
    if (mail($to, $subject, $message, $headers)) {
        return true;
    } else {
        return false;
    }
}

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = filter_var($_POST['email'], FILTER_SANITIZE_EMAIL);
    
    if (empty($email) || !filter_var($email, FILTER_VALIDATE_EMAIL)) {
        die("Please enter a valid email address.");
    }
    
    try {
        // Database connection
        $conn = new PDO("mysql:host=localhost;dbname=myDB", "username", "password");
        $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
        
        $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
        $stmt->execute([$email]);
        $result = $stmt->fetch();
        
        if (!$result) {
            die("Email does not exist in our records.");
        }
        
        $new_password = generateNewPassword();
        $hash = password_hash($new_password, PASSWORD_DEFAULT);
        
        $stmt = $conn->prepare("UPDATE users SET password = ? WHERE email = ?");
        $stmt->execute([$hash, $email]);
        
        if (sendPasswordResetEmail($email, $new_password)) {
            echo "A new password has been sent to your email address.";
        } else {
            die("Failed to send email with new password.");
        }
    } catch(PDOException $e) {
        die("Error occurred while processing your request: " . $e->getMessage());
    }
}
?>


<?php
// forgot-password-process.php

$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "myDB";

$conn = new mysqli($servername, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

$email = $_POST['email'];

// Check if email exists in the database
$sql = "SELECT id FROM users WHERE email='$email'";
$result = $conn->query($sql);

if ($result->num_rows > 0) {
    // Generate a random token
    $token = bin2hex(random_bytes(16));
    
    // Store the token and expiration time in the database
    $expires = date('Y-m-d H:i:s', time() + 3600); // Token expires after 1 hour
    
    $sql = "INSERT INTO password_resets (user_id, token, created_at) VALUES ('$id', '$token', '$expires')";
    if ($conn->query($sql)) {
        // Send email with reset link
        $to = $email;
        $subject = "Password Reset Request";
        $message = "Please click the following link to reset your password: http://example.com/reset-password.php?token=$token";
        $headers = "From: noreply@example.com\r
";
        
        if (mail($to, $subject, $message, $headers)) {
            echo "An email has been sent with instructions to reset your password.";
        } else {
            echo "Error sending email.";
        }
    } else {
        echo "Error storing token: " . $conn->error;
    }
} else {
    echo "Email not found in our records.";
}

$conn->close();
?>


<?php
// reset-password.php

$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "myDB";

$conn = new mysqli($servername, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

$token = $_GET['token'];

// Check if token exists and is not expired
$sql = "SELECT * FROM password_resets WHERE token='$token'";
$result = $conn->query($sql);

if ($result->num_rows == 1) {
    $row = $result->fetch_assoc();
    $expires = $row['created_at'];
    
    if (strtotime($expires) < time()) {
        echo "This reset link has expired.";
        exit;
    }
} else {
    echo "Invalid or non-existent token.";
    exit;
}

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Process password reset
    $new_password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];
    
    if ($new_password != $confirm_password) {
        die("Passwords do not match.");
    }
    
    // Update the user's password
    $sql = "UPDATE users SET password='" . password_hash($new_password, PASSWORD_DEFAULT) . "' WHERE id='" . $row['user_id'] . "'";
    if ($conn->query($sql)) {
        // Invalidate the token after use
        $sql = "DELETE FROM password_resets WHERE token='$token'";
        $conn->query($sql);
        
        echo "Password updated successfully!";
    } else {
        echo "Error updating password: " . $conn->error;
    }
}

?>

<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <h2>Reset Password</h2>
    <form action="<?php echo $_SERVER['PHP_SELF'] ?>?token=<?php echo $token ?>" method="post">
        <label>New Password:</label><br>
        <input type="password" name="password" required><br><br>
        <label>Confirm New Password:</label><br>
        <input type="password" name="confirm_password" required><br><br>
        <input type="submit" value="Reset Password">
    </form>
</body>
</html>

<?php
$conn->close();
?>


<?php
session_start();

// Check if form is submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $email = $_POST['email'];
    
    // Validate input (you can add more validation here)
    if (empty($email)) {
        $error = "Please enter your email address.";
    } else {
        // Check if email exists in the database
        require_once 'db_connection.php';
        
        $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
        $stmt->execute([$email]);
        
        if ($stmt->rowCount() == 0) {
            $error = "Email not found. Please check your email address.";
        } else {
            // Generate a random token
            $token = bin2hex(random_bytes(30));
            
            // Set expiration time (1 hour from now)
            $expiration = date('Y-m-d H:i:s', time() + 3600);
            
            // Update the database with the new token and expiration time
            $stmt = $conn->prepare("UPDATE users SET reset_token = ?, reset_expires = ? WHERE email = ?");
            $stmt->execute([$token, $expiration, $email]);
            
            // Send email to user
            $to = $email;
            $subject = "Password Reset Request";
            $headers = "From: yourname@example.com\r
";
            $message = "Dear User,

Please click the following link to reset your password:

http://example.com/reset-password.php?token=$token&user_id=" . $stmt->fetch()['id'] . "

This link will expire in 1 hour.

Best regards,
Your Support Team";
            
            mail($to, $subject, $message, $headers);
            
            // Redirect back to login page with success message
            $_SESSION['message'] = "We've sent a password reset link to your email. Please check your inbox.";
            header("Location: login.php");
            exit();
        }
    }
}
?>


<?php
session_start();

// Check if token and user_id are provided in URL
if (!isset($_GET['token']) || !isset($_GET['user_id'])) {
    die("Invalid request.");
}

$token = $_GET['token'];
$user_id = $_GET['user_id'];

require_once 'db_connection.php';

// Verify the token and check if it's expired
$stmt = $conn->prepare("SELECT id, reset_token, reset_expires FROM users WHERE id = ?");
$stmt->execute([$user_id]);

if ($stmt->rowCount() == 0) {
    die("Invalid user ID.");
}

$user = $stmt->fetch();

// Check if token matches and hasn't expired
if ($token != $user['reset_token'] || strtotime($user['reset_expires']) < time()) {
    die("Reset link is invalid or has expired. Please request a new reset.");
}

// If everything is valid, display password reset form
?>

<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <h2>Reset Password</h2>
    
    <?php if (isset($_SESSION['message'])): ?>
        <p style="color: red;"><?php echo $_SESSION['message']; unset($_SESSION['message']); ?></p>
    <?php endif; ?>

    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="POST">
        <input type="hidden" name="user_id" value="<?php echo $user_id; ?>">
        <input type="hidden" name="token" value="<?php echo $token; ?>">
        
        <p>New Password:<br>
        <input type="password" name="new_password" required></p>
        
        <p>Confirm New Password:<br>
        <input type="password" name="confirm_password" required></p>
        
        <input type="submit" value="Reset Password">
    </form>
</body>
</html>

<?php
// Handle password reset form submission
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $user_id = $_POST['user_id'];
    $token = $_POST['token'];
    $new_password = $_POST['new_password'];
    $confirm_password = $_POST['confirm_password'];
    
    if ($new_password != $confirm_password) {
        $_SESSION['message'] = "Passwords do not match.";
        header("Location: " . $_SERVER['PHP_SELF'] . "?token=$token&user_id=$user_id");
        exit();
    }
    
    // Update the password
    require_once 'db_connection.php';
    
    $stmt = $conn->prepare("UPDATE users SET password = ?, reset_token = null, reset_expires = null WHERE id = ?");
    $stmt->execute([password_hash($new_password, PASSWORD_DEFAULT), $user_id]);
    
    // Redirect to login page
    $_SESSION['message'] = "Your password has been updated successfully.";
    header("Location: login.php");
    exit();
}
?>


<?php
// Database connection
$host = "localhost";
$username = "root";
$password = "";
$dbname = "mydatabase";

$conn = mysqli_connect($host, $username, $password, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to send reset password email
function sendResetPasswordEmail($email, $token) {
    $to = $email;
    $subject = "Reset Your Password";
    $message = "
        <html>
            <head>
                <title>Reset Password</title>
            </head>
            <body>
                <p>Please click the following link to reset your password:</p>
                <a href='http://example.com/reset-password.php?token=$token'>Reset Password</a>
                <br>
                <small>If you did not request this password reset, please ignore this email.</small>
            </body>
        </html>
    ";
    $headers = "MIME-Version: 1.0" . "\r
";
    $headers .= "Content-type:text/html;charset=UTF-8" . "\r
";
    
    mail($to, $subject, $message, $headers);
}

// Function to generate a random token
function generateToken() {
    return bin2hex(random_bytes(16));
}

// Function to reset password
function resetPassword($token, $new_password) {
    global $conn;
    // Check if the token exists in the database
    $stmt = mysqli_prepare($conn, "SELECT user_id FROM password_reset WHERE token = ?");
    mysqli_stmt_bind_param($stmt, "s", $token);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);
    
    if (mysqli_num_rows($result) > 0) {
        // Update the user's password
        $user_id = mysqli_fetch_assoc($result)['user_id'];
        
        // Hash the new password
        $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);
        
        // Update the users table
        $stmt = mysqli_prepare($conn, "UPDATE users SET password = ? WHERE id = ?");
        mysqli_stmt_bind_param($stmt, "si", $hashed_password, $user_id);
        mysqli_stmt_execute($stmt);
        
        // Delete the token from the password_reset table
        $stmt = mysqli_prepare($conn, "DELETE FROM password_reset WHERE token = ?");
        mysqli_stmt_bind_param($stmt, "s", $token);
        mysqli_stmt_execute($stmt);
        
        return true;
    } else {
        return false;
    }
}

// Function to handle forgot password request
function handleForgotPassword($email) {
    global $conn;
    
    // Check if email exists in the database
    $stmt = mysqli_prepare($conn, "SELECT id FROM users WHERE email = ?");
    mysqli_stmt_bind_param($stmt, "s", $email);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);
    
    if (mysqli_num_rows($result) > 0) {
        // Generate a new token
        $token = generateToken();
        
        // Store the token in the password_reset table
        $user_id = mysqli_fetch_assoc($result)['id'];
        
        $stmt = mysqli_prepare($conn, "INSERT INTO password_reset (user_id, token, created_at) VALUES (?, ?, NOW())");
        mysqli_stmt_bind_param($stmt, "is", $user_id, $token);
        mysqli_stmt_execute($stmt);
        
        // Send the reset email
        sendResetPasswordEmail($email, $token);
        return true;
    } else {
        return false;
    }
}

// Example usage:
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = $_POST['email'];
    
    if (handleForgotPassword($email)) {
        echo "An email has been sent to your inbox with instructions to reset your password.";
    } else {
        echo "Email not found in our database. Please check your email address.";
    }
}

// Close the database connection
mysqli_close($conn);
?>


<?php
// Change these values to match your database connection
$host = 'localhost';
$username = 'root';
$password = '';
$database = 'your_database';

// Connect to the database
$conn = mysqli_connect($host, $username, $password, $database);

// Check for database connection errors
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Initialize variables
$email = "";
$message = "";

// If form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Sanitize input
    $email = mysqli_real_escape_string($conn, $_POST['email']);
    
    if (empty($email)) {
        $message = "Please enter your email address.";
    } else {
        // Check if the email exists in the database
        $stmt = $conn->prepare("SELECT id, password FROM users WHERE email = ?");
        $stmt->bind_param("s", $email);
        $stmt->execute();
        
        $result = $stmt->get_result();
        $user = $result->fetch_assoc();
        
        if (!$user) {
            $message = "Email not registered.";
        } else {
            // Generate a reset token
            $reset_token = md5(rand());
            
            // Update the database with the new reset token and expiration time (1 hour from now)
            $stmt = $conn->prepare("UPDATE users SET reset_token=?, reset_token_expires=DATE_ADD(NOW(), INTERVAL 1 HOUR) WHERE email=?");
            $stmt->bind_param("ss", $reset_token, $email);
            $stmt->execute();
            
            // Send the password reset link to the user's email
            $to = $email;
            $subject = "Password Reset Request";
            $headers = "MIME-Version: 1.0\r
";
            $headers .= "Content-type: text/html; charset=ISO-8859-1\r
";
            $headers .= "From: noreply@example.com\r
";
            
            $message_body = "
                <h2>Password Reset</h2>
                <p>Please click the following link to reset your password:</p>
                <a href='http://example.com/reset-password.php?token=" . $reset_token . "'>Reset Password</a>
                <p>If you did not request a password reset, please ignore this email.</p>
            ";
            
            if (mail($to, $subject, $message_body, $headers)) {
                $message = "A password reset link has been sent to your email address.";
            } else {
                $message = "An error occurred while sending the password reset email.";
            }
        }
    }
}

// Close database connection
mysqli_close($conn);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <?php if (!empty($message)): ?>
        <p><?php echo $message; ?></p>
    <?php else: ?>
        <form method="post" action="<?php echo $_SERVER["PHP_SELF"]; ?>">
            <input type="email" name="email" placeholder="Enter your email address" required><br><br>
            <button type="submit">Reset Password</button>
        </form>
    <?php endif; ?>
</body>
</html>


<?php
session_start();
require_once 'database_connection.php';

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $email = $_POST['email'];
    
    // Check if the email exists in the database
    $sql = "SELECT id, username FROM users WHERE email = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("s", $email);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows > 0) {
        // Generate a random token
        $token = bin2hex(random_bytes(16));
        
        // Set the token expiration time (1 hour)
        $expires = date('Y-m-d H:i:s', time() + 3600);
        
        // Insert the token into the database
        $sql = "INSERT INTO password_resets (user_id, token, expires) VALUES (?, ?, ?)";
        $stmt = $conn->prepare($sql);
        $stmt->bind_param("iss", $result->fetch_assoc()['id'], $token, $expires);
        $stmt->execute();
        
        // Send the reset email
        $to = $email;
        $subject = "Password Reset Request";
        $message = "
            <html>
                <head></head>
                <body>
                    <p>Hello,</p>
                    <p>You have requested a password reset. Please click on the following link to reset your password:</p>
                    <a href='http://example.com/reset-password.php?token=$token'>Reset Password</a>
                    <br><br>
                    <p>If you did not request this password reset, please ignore this email.</p>
                </body>
            </html>";
        $headers = "MIME-Version: 1.0\r
";
        $headers .= "Content-type: text/html; charset=UTF-8\r
";
        $headers .= "From: noreply@example.com\r
";
        
        mail($to, $subject, $message, $headers);
        
        echo "An email has been sent to your address with instructions to reset your password.";
    } else {
        echo "Email not found in our records.";
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <h2>Forgot Password</h2>
    <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
        <input type="email" name="email" placeholder="Enter your email address" required><br><br>
        <button type="submit">Submit</button>
    </form>
</body>
</html>


<?php
session_start();
require_once 'database_connection.php';

if (!isset($_GET['token'])) {
    die("No token provided.");
}

$token = $_GET['token'];

// Check if the token exists in the database
$sql = "SELECT * FROM password_resets WHERE token = ?";
$stmt = $conn->prepare($sql);
$stmt->bind_param("s", $token);
$stmt->execute();
$result = $stmt->get_result();

if ($result->num_rows == 0) {
    die("Invalid or expired token.");
}

$user_data = $result->fetch_assoc();

// If the password reset form has been submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $password = $_POST['password'];
    
    // Update the user's password
    $sql = "UPDATE users SET password = ? WHERE id = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("si", password_hash($password, PASSWORD_DEFAULT), $user_data['user_id']);
    $stmt->execute();
    
    // Delete the token from the database
    $sql = "DELETE FROM password_resets WHERE token = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("s", $token);
    $stmt->execute();
    
    echo "Password updated successfully!";
    exit;
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <h2>Reset Password</h2>
    <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
        <input type="password" name="password" placeholder="Enter new password" required><br><br>
        <button type="submit">Reset Password</button>
    </form>
</body>
</html>


<?php
// Include database connection file
include('db_connect.php');

function sendPasswordResetEmail($email) {
    $email = mysqli_real_escape_string($GLOBALS['conn'], $email);
    
    // Check if email exists in the database
    $query = "SELECT id, username FROM users WHERE email = '$email'";
    $result = mysqli_query($GLOBALS['conn'], $query);
    if (mysqli_num_rows($result) == 0) {
        return false; // Email not found
    }

    $row = mysqli_fetch_assoc($result);
    $userId = $row['id'];
    $username = $row['username'];

    // Generate a random token
    $token = bin2hex(random_bytes(16));
    
    // Store the token in the database with an expiration time (e.g., 1 hour)
    $expires = date('Y-m-d H:i:s', strtotime('+1 hour'));
    $query = "INSERT INTO password_resets (user_id, token, expires) 
              VALUES ('$userId', '$token', '$expires')";
    
    if (!mysqli_query($GLOBALS['conn'], $query)) {
        return false; // Error storing the token
    }

    // Send email to user with reset link
    $subject = "Password Reset Request";
    $message = "
        <html>
            <head>
                <title>Password Reset</title>
            </head>
            <body>
                <p>Hello $username,</p>
                <p>You have requested to reset your password. Please click the following link to reset it:</p>
                <a href='http://yourwebsite.com/reset_password.php?token=$token'>Reset Password</a>
                <p>If you did not request this password reset, please ignore this email.</p>
            </body>
        </html>
    ";
    
    $headers = "From: your_email@yourdomain.com\r
";
    $headers .= "Reply-To: your_email@yourdomain.com\r
";
    $headers .= "Content-Type: text/html; charset=UTF-8\r
";
    
    if (mail($email, $subject, $message, $headers)) {
        return true;
    } else {
        return false; // Error sending email
    }
}

// Example usage:
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $email = $_POST['email'];
    if (sendPasswordResetEmail($email)) {
        echo "A password reset link has been sent to your email.";
    } else {
        echo "Email not found or error sending email.";
    }
}
?>


<?php
include('db_connect.php');

if (!isset($_GET['token'])) {
    die("Invalid request");
}

$token = mysqli_real_escape_string($GLOBALS['conn'], $_GET['token']);
$query = "SELECT * FROM password_resets WHERE token = '$token'";
$result = mysqli_query($GLOBALS['conn'], $query);

if (mysqli_num_rows($result) == 0) {
    die("Invalid or expired token");
}

$row = mysqli_fetch_assoc($result);
$expires = $row['expires'];
$user_id = $row['user_id'];

// Check if the token has expired
if (strtotime(date('Y-m-d H:i:s')) > strtotime($expires)) {
    die("Token has expired. Please request a new password reset.");
}

?>

<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
    <style>
        .container {
            max-width: 500px;
            margin: 0 auto;
            padding: 20px;
        }
        .reset-password-form {
            background-color: #f8f9fa;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }
    </style>
</head>
<body>
    <div class="container">
        <form class="reset-password-form" method="post" action="process_reset.php">
            <h2>Reset Password</h2>
            <input type="password" name="new_password" placeholder="Enter new password" required>
            <input type="password" name="confirm_password" placeholder="Confirm new password" required>
            <button type="submit">Reset Password</button>
        </form>
    </div>
</body>
</html>


<?php
include('db_connect.php');

if (!isset($_GET['token'])) {
    die("Invalid request");
}

// Validate token and user input here...
?>


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Forgot Password</title>
</head>
<body>
    <h2>Forgot Password</h2>
    <form action="reset_password.php" method="post">
        <label for="username">Username or Email:</label><br>
        <input type="text" id="username" name="username" required><br><br>
        <input type="submit" value="Reset Password">
    </form>
</body>
</html>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$db_name = 'mydatabase';

try {
    $conn = new PDO("mysql:host=$host;dbname=$db_name", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $input = $_POST['username'];
    
    // Prepare SQL statement to check username or email
    $stmt = $conn->prepare("SELECT id, email FROM users WHERE username=? OR email=?");
    $stmt->execute([$input, $input]);
    
    if ($stmt->rowCount() == 1) {
        // Generate a random token
        $token = bin2hex(random_bytes(16));
        
        // Update the database with the new token and expiration time
        $expiration_time = date('Y-m-d H:i:s', strtotime('+1 hour'));
        
        $stmt = $conn->prepare("UPDATE users SET reset_token=?, reset_expiration=? WHERE username=? OR email=?");
        $stmt->execute([$token, $expiration_time, $input, $input]);
        
        // Get user's email
        $row = $stmt->fetch();
        $email = $row['email'];
        
        // Send the password reset email
        $to = $email;
        $subject = "Password Reset Request";
        $message = "
            <html>
                <body>
                    <p>Hello,</p>
                    <p>Please click on the following link to reset your password:</p>
                    <a href='http://localhost/reset_password_form.php?token=$token'>Reset Password</a>
                    <p>This link will expire in 1 hour.</p>
                </body>
            </html>
        ";
        $headers = "MIME-Version: 1.0" . "\r
";
        $headers .= "Content-type:text/html;charset=UTF-8" . "\r
";
        
        mail($to, $subject, $message, $headers);
        
        echo "A password reset link has been sent to your email address.";
    } else {
        echo "Username or email not found in our records.";
    }
}
?>


<?php
session_start();

// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$db_name = 'mydatabase';

try {
    $conn = new PDO("mysql:host=$host;dbname=$db_name", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

if (isset($_GET['token'])) {
    $token = $_GET['token'];
    
    // Check if the token is valid and not expired
    $stmt = $conn->prepare("SELECT id, username FROM users WHERE reset_token=? AND reset_expiration >= NOW()");
    $stmt->execute([$token]);
    
    if ($stmt->rowCount() == 1) {
        $_SESSION['reset_token'] = $token;
        $row = $stmt->fetch();
        $username = $row['username'];
        ?>
        
        <!DOCTYPE html>
        <html lang="en">
        <head>
            <meta charset="UTF-8">
            <title>Reset Password</title>
        </head>
        <body>
            <h2>Reset Password</h2>
            <form action="update_password.php" method="post">
                <input type="password" id="new_password" name="new_password" placeholder="New Password" required><br><br>
                <input type="password" id="confirm_password" name="confirm_password" placeholder="Confirm Password" required><br><br>
                <input type="submit" value="Reset Password">
            </form>
        </body>
        </html>

        <?php
    } else {
        echo "Invalid or expired token.";
        exit();
    }
} else {
    echo "No token provided.";
    exit();
}
?>


<?php
session_start();

// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$db_name = 'mydatabase';

try {
    $conn = new PDO("mysql:host=$host;dbname=$db_name", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

if (isset($_SESSION['reset_token'])) {
    $token = $_SESSION['reset_token'];
    
    // Check if the token is still valid
    $stmt = $conn->prepare("SELECT id FROM users WHERE reset_token=? AND reset_expiration >= NOW()");
    $stmt->execute([$token]);
    
    if ($stmt->rowCount() == 1) {
        // Validate and update password
        $new_password = $_POST['new_password'];
        $confirm_password = $_POST['confirm_password'];
        
        if ($new_password != $confirm_password) {
            die("Passwords do not match.");
        }
        
        // Hash the new password
        $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);
        
        // Update the user's password and clear the reset token
        $stmt = $conn->prepare("UPDATE users SET password=?, reset_token=NULL, reset_expiration=NULL WHERE reset_token=?");
        $stmt->execute([$hashed_password, $token]);
        
        session_unset();
        session_destroy();
        
        echo "Password has been successfully updated.";
    } else {
        echo "Invalid or expired token.";
        exit();
    }
} else {
    echo "No valid token found.";
    exit();
}
?>


<?php
// forgot-password.php

require 'database.php';

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $email = $_POST['email'];

    // Check if email exists in database
    $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
    $stmt->bind_param('s', $email);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows == 1) {
        // Generate a random token
        $token = bin2hex(random_bytes(32));

        // Store the token in the database with expiration time (e.g., 30 minutes)
        $expires = date('Y-m-d H:i:s', strtotime('+30 minutes'));
        
        $stmt = $conn->prepare("INSERT INTO password_reset (user_id, token, expires) VALUES (?, ?, ?)");
        $stmt->bind_param('iss', $result->fetch_assoc()['id'], $token, $expires);
        $stmt->execute();

        // Send the reset link to the user's email
        $reset_link = "http://$_SERVER[HTTP_HOST]/reset-password.php?token=$token";
        
        $to = $email;
        $subject = 'Password Reset Request';
        $message = "Please click the following link to reset your password: $reset_link";
        
        mail($to, $subject, $message);
        
        echo "An email has been sent with instructions to reset your password.";
    } else {
        echo "Email not found in our records.";
    }
} else {
    echo "Invalid request method.";
}
?>


<?php
// reset-password.php

require 'database.php';

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $token = $_POST['token'];
    $new_password = $_POST['new_password'];
    $confirm_password = $_POST['confirm_password'];

    // Check if the token is valid and not expired
    $stmt = $conn->prepare("SELECT * FROM password_reset WHERE token = ? AND expires > NOW()");
    $stmt->bind_param('s', $token);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows == 1) {
        // Check if new passwords match
        if ($new_password != $confirm_password) {
            die("Passwords do not match.");
        }

        // Update the user's password
        $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);
        
        $user_id = $result->fetch_assoc()['user_id'];
        
        $stmt = $conn->prepare("UPDATE users SET password = ? WHERE id = ?");
        $stmt->bind_param('si', $hashed_password, $user_id);
        $stmt->execute();

        // Delete the reset token
        $stmt = $conn->prepare("DELETE FROM password_reset WHERE token = ?");
        $stmt->bind_param('s', $token);
        $stmt->execute();

        echo "Password successfully updated!";
    } else {
        die("Invalid or expired reset link.");
    }
} else {
    die("Invalid request method.");
}
?>


<?php
// database.php

$servername = "localhost";
$username = "root";
$password = "";
$dbname = "your_database_name";

try {
    $conn = new mysqli($servername, $username, $password, $dbname);
    if ($conn->connect_error) {
        throw new Exception("Connection failed: " . $conn->connect_error);
    }
} catch (Exception $e) {
    die("Could not connect to database: " . $e->getMessage());
}
?>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'your_database';
$username = 'your_username';
$password = 'your_password';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

// Function to send password reset email
function sendPasswordResetEmail($email, $resetLink) {
    $to = $email;
    $subject = "Password Reset Request";
    $message = "
        <html>
        <head></head>
        <body>
            <p>Hello,</p>
            <p>We received a password reset request. Click the link below to reset your password:</p>
            <a href='".$resetLink."'>".$resetLink."</a><br><br>
            <small>If you did not request this, please ignore this email.</small>
        </body>
        </html>";
    $headers = "MIME-Version: 1.0" . "\r
";
    $headers .= "Content-type:text/html;charset=UTF-8" . "\r
";
    $headers .= "From: <your_email@example.com>" . "\r
";

    mail($to, $subject, $message, $headers);
}

// Function to generate random string for reset token
function generateRandomString($length = 32) {
    return bin2hex(random_bytes($length));
}

// Reset password function
function resetPassword($email) {
    global $conn;
    
    try {
        // Check if email exists in database
        $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
        $stmt->execute([$email]);
        $user = $stmt->fetch(PDO::FETCH_ASSOC);
        
        if (!$user) {
            return "Email not found!";
        }
        
        // Generate reset token and set expiration time
        $resetToken = generateRandomString();
        $expires = date('Y-m-d H:i:s', strtotime('+30 minutes'));
        
        // Update the database with reset token and expiration time
        $stmt = $conn->prepare("UPDATE users SET reset_token = ?, reset_expires = ? WHERE email = ?");
        $stmt->execute([$resetToken, $expires, $email]);
        
        // Generate reset link
        $resetLink = "http://your-site.com/reset-password.php?token=" . $resetToken;
        
        // Send reset email
        sendPasswordResetEmail($email, $resetLink);
        
        return "Password reset instructions have been sent to your email.";
    } catch (PDOException $e) {
        die("Error: " . $e->getMessage());
    }
}

// Example usage:
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    if (isset($_POST['email'])) {
        echo resetPassword($_POST['email']);
    }
}
?>


<?php
session_start();
require_once 'database.php';

if (isset($_GET['token'])) {
    $token = $_GET['token'];
    
    try {
        // Get user with matching token and valid expiration time
        $stmt = $conn->prepare("SELECT id, email FROM users WHERE reset_token = ? AND reset_expires > NOW()");
        $stmt->execute([$token]);
        $user = $stmt->fetch(PDO::FETCH_ASSOC);
        
        if (!$user) {
            die("Invalid or expired token.");
        }
    } catch (PDOException $e) {
        die("Error: " . $e->getMessage());
    }
} else {
    die("No token provided.");
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <?php if ($user): ?>
        <h1>Reset Your Password</h1>
        <form action="reset-password.php?token=<?php echo $token ?>" method="POST">
            <input type="password" name="new_password" placeholder="Enter new password" required>
            <input type="submit" value="Reset Password">
        </form>
    <?php endif; ?>

    <?php
    if ($_SERVER['REQUEST_METHOD'] == 'POST') {
        $newPassword = $_POST['new_password'];
        
        try {
            // Update the user's password
            $stmt = $conn->prepare("UPDATE users SET password = ?, reset_token = NULL, reset_expires = NULL WHERE id = ?");
            $stmt->execute([password_hash($newPassword, PASSWORD_DEFAULT), $user['id']]);
            
            echo "Password updated successfully!";
        } catch (PDOException $e) {
            die("Error updating password: " . $e->getMessage());
        }
    }
    ?>
</body>
</html>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'mydatabase';
$username = 'root';
$password = '';

try {
    // Create a new PDO instance
    $pdo = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
} catch (PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

// Error reporting
ini_set('display_errors', 1);
error_reporting(E_ALL);

// Session start
session_start();

// Generate a random token
function generateToken() {
    return bin2hex(random_bytes(32));
}

// Check if form is submitted
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    $email = $_POST['email'];

    // Validate email
    if (empty($email)) {
        die("Email is required!");
    }

    // Query to check if email exists in the database
    $stmt = $pdo->prepare("SELECT id FROM users WHERE email = ?");
    $stmt->execute([$email]);
    $user = $stmt->fetch();

    if (!$user) {
        die("No account found with this email address!");
    }

    // Generate reset token and expiry time (1 hour)
    $resetToken = generateToken();
    $resetExpiry = date('Y-m-d H:i:s', strtotime('+1 hour'));

    // Update database with reset token and expiry
    $updateStmt = $pdo->prepare("UPDATE users SET reset_token = ?, reset_expiry = ? WHERE email = ?");
    $updateStmt->execute([$resetToken, $resetExpiry, $email]);

    // Send password reset email
    $to = $email;
    $subject = "Password Reset Request";
    
    $message = "
        <html>
            <body>
                <h2>Password Reset</h2>
                <p>We received a request to reset your password. Click the following link to reset it:</p>
                <a href='http://localhost/reset-password.php?token=$resetToken'>Reset Password</a><br>
                <small>If you didn't make this request, please ignore this email.</small>
            </body>
        </html>
    ";
    
    $headers = "MIME-Version: 1.0" . "\r
";
    $headers .= "Content-type:text/html;charset=UTF-8" . "\r
";
    $headers .= "From: <no-reply@example.com>" . "\r
";

    mail($to, $subject, $message, $headers);

    // Redirect back to forgot password page
    header("Location: forgot-password.php?message=check-email");
    exit();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <?php if (isset($_GET['message'])) { ?>
        <p><?php echo $_GET['message']; ?></p>
    <?php } ?>

    <h2>Forgot Password</h2>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <input type="email" name="email" placeholder="Enter your email" required><br><br>
        <button type="submit">Request Reset Link</button>
    </form>
</body>
</html>


<?php
session_start();

// Database configuration (same as above)
$host = 'localhost';
$dbname = 'mydatabase';
$username = 'root';
$password = '';

try {
    $pdo = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
} catch (PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

if ($_SERVER['REQUEST_METHOD'] === 'GET' && isset($_GET['token'])) {
    // Validate reset token
    $resetToken = $_GET['token'];
    
    $stmt = $pdo->prepare("
        SELECT id, reset_token, reset_expiry 
        FROM users 
        WHERE reset_token = ?
    ");
    $stmt->execute([$resetToken]);
    $user = $stmt->fetch();

    if (!$user || $user['reset_expiry'] < date('Y-m-d H:i:s')) {
        die("Invalid or expired reset token!");
    }

} elseif ($_SERVER['REQUEST_METHOD'] === 'POST') {
    // Handle password reset
    $resetToken = $_POST['token'];
    $newPassword = $_POST['password'];

    // Validate inputs
    if (empty($newPassword)) {
        die("New password is required!");
    }

    // Check token validity again
    $stmt = $pdo->prepare("
        SELECT id, reset_token, reset_expiry 
        FROM users 
        WHERE reset_token = ?
    ");
    $stmt->execute([$resetToken]);
    $user = $stmt->fetch();

    if (!$user || $user['reset_expiry'] < date('Y-m-d H:i:s')) {
        die("Invalid or expired reset token!");
    }

    // Update password
    $hashedPassword = password_hash($newPassword, PASSWORD_DEFAULT);
    $updateStmt = $pdo->prepare("
        UPDATE users 
        SET password = ?, reset_token = NULL, reset_expiry = NULL 
        WHERE id = ?
    ");
    $updateStmt->execute([$hashedPassword, $user['id']]);

    // Redirect to login page
    header("Location: login.php?message=password-reset-success");
    exit();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <?php if (isset($_GET['token'])) { ?>
        <h2>Reset Your Password</h2>
        <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
            <input type="hidden" name="token" value="<?php echo $resetToken; ?>">
            <input type="password" name="password" placeholder="Enter new password" required><br><br>
            <button type="submit">Change Password</button>
        </form>
    <?php } else { ?>
        <p>Invalid or expired reset token!</p>
        <a href="forgot-password.php">Request a new reset link</a>
    <?php } ?>
</body>
</html>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'your_database';
$username = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

// Generate a random token
function generateToken() {
    return bin2hex(random_bytes(16));
}

// Check if email exists in the database
if ($_SERVER['REQUEST_METHOD'] == 'POST' && isset($_POST['email'])) {
    $email = $_POST['email'];
    
    // Sanitize email input
    $email = filter_var($email, FILTER_SANITIZE_EMAIL);
    
    // Prepare SQL query to check if user exists
    $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
    $stmt->execute([$email]);
    
    if ($stmt->rowCount() > 0) {
        $userId = $stmt->fetch(PDO::FETCH_ASSOC)['id'];
        
        // Generate and store the reset token
        $token = generateToken();
        $expires = date('Y-m-d H:i:s', strtotime('+1 hour'));
        
        $stmt = $conn->prepare("INSERT INTO password_resets (user_id, token, expires) VALUES (?, ?, ?)");
        $stmt->execute([$userId, $token, $expires]);
        
        // Send reset email
        $to = $email;
        $subject = "Password Reset Request";
        $message = "Please click the following link to reset your password: http://your-site.com/reset-password.php?token=" . $token;
        $headers = "From: noreply@your-site.com\r
";
        mail($to, $subject, $message, $headers);
        
        echo "A password reset email has been sent to " . htmlspecialchars($email) . ".";
    } else {
        echo "Email address not found in our records.";
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <h2>Forgot Password</h2>
    
    <form method="post" action="<?php echo htmlspecialchars($_SERVER['PHP_SELF']); ?>">
        <input type="email" name="email" placeholder="Enter your email" required><br><br>
        <input type="submit" value="Reset Password">
    </form>
</body>
</html>

// Reset password page (reset-password.php)
<?php
require_once 'database.php';

if ($_SERVER['REQUEST_METHOD'] == 'GET' && isset($_GET['token'])) {
    $token = $_GET['token'];
    
    // Check if token is valid and not expired
    $stmt = $conn->prepare("SELECT user_id FROM password_resets WHERE token = ? AND expires > NOW()");
    $stmt->execute([$token]);
    
    if ($stmt->rowCount() == 1) {
        $userId = $stmt->fetch(PDO::FETCH_ASSOC)['user_id'];
        
        // Show reset form
        ?>
        <h2>Reset Password</h2>
        <form method="post" action="<?php echo htmlspecialchars($_SERVER['PHP_SELF']); ?>">
            <input type="hidden" name="token" value="<?php echo $token; ?>">
            <input type="password" name="new_password" placeholder="Enter new password" required><br><br>
            <input type="password" name="confirm_password" placeholder="Confirm new password" required><br><br>
            <input type="submit" value="Reset Password">
        </form>
        <?php
    } else {
        echo "Invalid or expired token.";
    }
}

if ($_SERVER['REQUEST_METHOD'] == 'POST' && isset($_POST['token'])) {
    $token = $_POST['token'];
    $newPassword = $_POST['new_password'];
    $confirmPassword = $_POST['confirm_password'];
    
    // Validate input
    if ($newPassword !== $confirmPassword) {
        die("Passwords do not match.");
    }
    
    // Update password
    $stmt = $conn->prepare("SELECT user_id FROM password_resets WHERE token = ? AND expires > NOW()");
    $stmt->execute([$token]);
    
    if ($stmt->rowCount() == 1) {
        $userId = $stmt->fetch(PDO::FETCH_ASSOC)['user_id'];
        
        // Hash the new password
        $hashedPassword = password_hash($newPassword, PASSWORD_DEFAULT);
        
        // Update user password
        $updateStmt = $conn->prepare("UPDATE users SET password = ? WHERE id = ?");
        $updateStmt->execute([$hashedPassword, $userId]);
        
        // Delete used token
        $deleteStmt = $conn->prepare("DELETE FROM password_resets WHERE token = ?");
        $deleteStmt->execute([$token]);
        
        echo "Password reset successful! You can now <a href='login.php'>login</a> with your new password.";
    } else {
        die("Invalid or expired token.");
    }
}
?>


<?php
// Include database connection
include 'db_connection.php';

// Function to handle forgot password
function forgotPassword($email) {
    // Check if email is provided
    if (empty($email)) {
        return "Email is required";
    }

    // Validate email format
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        return "Invalid email format";
    }

    // Check if email exists in the database
    $sql = "SELECT id FROM users WHERE email = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("s", $email);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows === 0) {
        return "No account found with this email";
    }

    // Generate reset token
    $token = bin2hex(random_bytes(16));
    
    // Set expiration time (e.g., 1 hour from now)
    $expires = date('Y-m-d H:i:s', strtotime('+1 hour'));

    // Update the database with the new token and expiration time
    $sql = "UPDATE users SET reset_token = ?, reset_expires = ? WHERE email = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("sss", $token, $expires, $email);
    $stmt->execute();

    // Send reset password email
    $subject = 'Password Reset Request';
    $message = "Please click the following link to reset your password:

";
    $message .= "http://example.com/reset-password.php?token=$token";
    
    if (mail($email, $subject, $message)) {
        return "Password reset email has been sent. Please check your inbox.";
    } else {
        return "Failed to send password reset email.";
    }
}

// Example usage:
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $email = $_POST['email'];
    echo forgotPassword($email);
}
?>


<?php
// Include database connection
include 'db_connection.php';

if (isset($_GET['token'])) {
    $token = $_GET['token'];
    
    // Check if token exists and hasn't expired
    $sql = "SELECT id, email FROM users WHERE reset_token = ? AND reset_expires > NOW()";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("s", $token);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows === 0) {
        die("Invalid or expired token");
    }

    // Show password reset form
    ?>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="POST">
        New Password: <input type="password" name="new_password"><br>
        Confirm Password: <input type="password" name="confirm_password"><br>
        <input type="hidden" name="token" value="<?php echo $token; ?>">
        <input type="submit" value="Reset Password">
    </form>
    <?php
} else {
    die("No token provided");
}

// Handle password reset submission
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $token = $_POST['token'];
    $new_password = $_POST['new_password'];
    $confirm_password = $_POST['confirm_password'];

    if ($new_password !== $confirm_password) {
        die("Passwords do not match");
    }

    // Update password
    $sql = "UPDATE users SET password = ?, reset_token = NULL, reset_expires = NULL WHERE reset_token = ?";
    $stmt = $conn->prepare($sql);
    $hashedPassword = password_hash($new_password, PASSWORD_DEFAULT);
    $stmt->bind_param("ss", $hashedPassword, $token);
    $stmt->execute();

    echo "Password has been successfully updated!";
}
?>


<?php
// Include database connection
include 'db_connection.php';

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = trim($_POST['email']);

    // Validate email input
    if (empty($email)) {
        $error = "Email cannot be empty";
    } else if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        $error = "Invalid email format";
    } else {
        // Check if email exists in database
        $query = "SELECT id FROM users WHERE email = ?";
        $stmt = $conn->prepare($query);
        $stmt->bind_param("s", $email);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows == 0) {
            $error = "Email not found in our records";
        } else {
            // Generate a random token for password reset
            $token = bin2hex(random_bytes(16));
            $expires = time() + 3600; // Token expires after 1 hour

            // Store token and expiration time in database
            $update_query = "UPDATE users SET reset_token = ?, reset_expires = ? WHERE email = ?";
            $stmt = $conn->prepare($update_query);
            $stmt->bind_param("sis", $token, $expires, $email);
            $stmt->execute();

            // Send password reset link to user's email
            $to = $email;
            $subject = "Password Reset Request";
            $message = "
                <html>
                    <head></head>
                    <body>
                        <h2>Password Reset</h2>
                        <p>Please click the following link to reset your password:</p>
                        <a href='http://yourwebsite.com/reset_password.php?token=$token&id=" . $result->fetch_assoc()['id'] . "'>Reset Password</a><br><br>
                        <small>This link will expire in 1 hour.</small>
                    </body>
                </html>";
            $headers = "MIME-Version: 1.0" . "\r
";
            $headers .= "Content-type:text/html;charset=UTF-8" . "\r
";
            $headers .= "From: yourwebsite.com <noreply@yourwebsite.com>" . "\r
";

            if (mail($to, $subject, $message, $headers)) {
                header("Location: forgot_password.php?msg=Check your email for password reset instructions.");
                exit();
            } else {
                $error = "Error sending email. Please try again later.";
            }
        }
    }
}
?>


<?php
// Include database connection
include 'db_connection.php';

if ($_SERVER["REQUEST_METHOD"] == "GET") {
    $token = $_GET['token'];
    $id = $_GET['id'];

    if (empty($token) || empty($id)) {
        die("Invalid request");
    }

    // Check if token is valid and not expired
    $query = "SELECT * FROM users WHERE id = ? AND reset_token = ? AND reset_expires > ?";
    $stmt = $conn->prepare($query);
    $stmt->bind_param("iss", $id, $token, time());
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows == 0) {
        die("Invalid or expired token");
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
    <style>
        body { font-family: Arial, sans-serif; }
        .container { width: 400px; margin: 50px auto; padding: 20px; border: 1px solid #ccc; }
        input { width: 100%; padding: 8px; margin: 8px 0; box-sizing: border-box; }
    </style>
</head>
<body>
    <div class="container">
        <h2>Reset Password</h2>
        <?php
            if ($_SERVER["REQUEST_METHOD"] == "POST") {
                $password = $_POST['password'];
                $confirm_password = $_POST['confirm_password'];

                if ($password != $confirm_password) {
                    echo "<p style='color: red;'>Passwords do not match</p>";
                } else {
                    // Update password in database
                    $hash = password_hash($password, PASSWORD_DEFAULT);
                    $query = "UPDATE users SET password = ?, reset_token = NULL, reset_expires = NULL WHERE id = ? AND reset_token = ?";
                    $stmt = $conn->prepare($query);
                    $stmt->bind_param("sis", $hash, $id, $token);
                    $stmt->execute();

                    echo "<p style='color: green;'>Password has been updated successfully. <a href='login.php'>Click here to login</a>.</p>";
                }
            } else {
        ?>
        <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
            <input type="hidden" name="id" value="<?php echo $id; ?>">
            <input type="hidden" name="token" value="<?php echo $token; ?>">
            <input type="password" placeholder="New Password" name="password" required>
            <input type="password" placeholder="Confirm Password" name="confirm_password" required>
            <button type="submit">Reset Password</button>
        </form>
        <?php } ?>
    </div>
</body>
</html>


<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
    <!-- Add your styles here -->
</head>
<body>
    <h2>Forgot Password</h2>
    <form action="forgot_password_process.php" method="POST">
        <input type="email" name="email" placeholder="Enter your email" required><br>
        <input type="submit" value="Reset Password">
    </form>
</body>
</html>


<?php
// Database connection details
$host = 'localhost';
$dbUsername = 'root';
$dbPassword = '';
$dbName = 'your_database';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbName", $dbUsername, $dbPassword);
    // Set the PDO error mode to exception
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

    if (isset($_POST['email'])) {
        $email = $_POST['email'];
        
        // Check if email exists in the database
        $stmt = $conn->prepare("SELECT id FROM users WHERE email = :email");
        $stmt->execute(['email' => $email]);
        $user = $stmt->fetch(PDO::FETCH_ASSOC);

        if ($user) {
            $userId = $user['id'];
            
            // Generate a random token
            $token = bin2hex(random_bytes(16));
            
            // Insert the token and expiration time into the database
            $expires = date('Y-m-d H:i:s', strtotime('+1 hour'));
            $stmt = $conn->prepare("INSERT INTO password_reset (user_id, token, expires) VALUES (:userId, :token, :expires)");
            $stmt->execute([
                'userId' => $userId,
                'token' => $token,
                'expires' => $expires
            ]);

            // Send the reset link to the user's email
            $resetLink = "http://your-site.com/reset_password.php?token=$token";
            $to = $email;
            $subject = "Password Reset Request";
            $message = "Click this link to reset your password: $resetLink";
            
            mail($to, $subject, $message);
            
            echo "Check your email for a reset link.";
        } else {
            echo "Email not found in our records.";
        }
    }
} catch (PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}
$conn = null;
?>


<?php
// Get the token from the query string
$token = isset($_GET['token']) ? $_GET['token'] : '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbName", $dbUsername, $dbPassword);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

    // Check if the token exists and hasn't expired
    $stmt = $conn->prepare("SELECT user_id FROM password_reset WHERE token = :token AND expires > NOW()");
    $stmt->execute(['token' => $token]);
    $result = $stmt->fetch(PDO::FETCH_ASSOC);

    if ($result) {
        $userId = $result['user_id'];
        // Display the reset form
?>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <h2>Reset Password</h2>
    <form action="reset_password_process.php" method="POST">
        <input type="password" name="new_password" placeholder="New Password" required><br>
        <input type="password" name="confirm_password" placeholder="Confirm Password" required><br>
        <input type="hidden" name="token" value="<?php echo $token; ?>">
        <input type="submit" value="Reset Password">
    </form>
</body>
</html>
<?php
    } else {
        // Token is invalid or expired
        die("Invalid or expired token.");
    }
} catch (PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}
$conn = null;
?>


<?php
if (isset($_POST['new_password'], $_POST['confirm_password'], $_POST['token'])) {
    $newPassword = $_POST['new_password'];
    $confirmPassword = $_POST['confirm_password'];
    $token = $_POST['token'];

    if ($newPassword === $confirmPassword) {
        try {
            $conn = new PDO("mysql:host=$host;dbname=$dbName", $dbUsername, $dbPassword);
            $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

            // Check token validity
            $stmt = $conn->prepare("SELECT user_id FROM password_reset WHERE token = :token AND expires > NOW()");
            $stmt->execute(['token' => $token]);
            $result = $stmt->fetch(PDO::FETCH_ASSOC);

            if ($result) {
                $userId = $result['user_id'];
                
                // Update the user's password
                $hashPassword = password_hash($newPassword, PASSWORD_DEFAULT);
                $stmt = $conn->prepare("UPDATE users SET password = :password WHERE id = :userId");
                $stmt->execute([
                    'password' => $hashPassword,
                    'userId' => $userId
                ]);
                
                // Delete the reset token
                $stmt = $conn->prepare("DELETE FROM password_reset WHERE token = :token");
                $stmt->execute(['token' => $token]);
                
                echo "Password updated successfully!";
            } else {
                die("Invalid or expired token.");
            }
        } catch (PDOException $e) {
            die("Connection failed: " . $e->getMessage());
        }
    } else {
        die("Passwords do not match.");
    }
}
?>


<?php
session_start();

// Database connection
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Get email from form
    $email = $_POST['email'];

    // Validate email
    if (empty($email)) {
        $error = "Email is required!";
    } else if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        $error = "Invalid email format!";
    } else {
        try {
            // Check if email exists in database
            $stmt = $conn->prepare("SELECT user_id, username FROM users WHERE email = :email");
            $stmt->bindParam(':email', $email);
            $stmt->execute();
            $row = $stmt->fetch(PDO::FETCH_ASSOC);

            if ($row === false) {
                // Email not found
                $error = "No account with this email was found!";
            } else {
                // Generate token
                $token = md5(uniqid(rand(), true));
                $created_at = date('Y-m-d H:i:s');

                // Insert token into database
                $stmt = $conn->prepare("INSERT INTO reset_passwords (user_id, token, created_at) VALUES (:user_id, :token, :created_at)");
                $stmt->bindParam(':user_id', $row['user_id']);
                $stmt->bindParam(':token', $token);
                $stmt->bindParam(':created_at', $created_at);
                $stmt->execute();

                // Send email to user
                $to = $email;
                $subject = "Password Reset Request";
                $message = "
                    <html>
                        <body>
                            <h2>Password Reset</h2>
                            <p>Please click the following link to reset your password:</p>
                            <a href='http://yourwebsite.com/reset-password.php?token=$token'>Reset Password</a><br>
                            <p>If you did not request this password reset, please ignore this email.</p>
                        </body>
                    </html>
                ";
                $headers = "MIME-Version: 1.0" . "\r
";
                $headers .= "Content-type:text/html;charset=UTF-8" . "\r
";
                $headers .= "From: <your_email@example.com>" . "\r
";

                mail($to, $subject, $message, $headers);

                // Success message
                $success = "An email has been sent to you with instructions to reset your password!";
            }
        } catch(PDOException $e) {
            die("Error: " . $e->getMessage());
        }
    }
}

$conn = null;
?>

<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <?php if (isset($error)) { echo "<p style='color:red'>".$error."</p>"; } ?>
    <?php if (isset($success)) { echo "<p style='color:green'>".$success."</p>"; } ?>

    <form action="<?php echo htmlspecialchars($_SERVER['PHP_SELF']); ?>" method="post">
        Email: <input type="email" name="email" required><br>
        <input type="submit" value="Reset Password">
    </form>
</body>
</html>


<?php
session_start();
include('config.php'); // Include your database connection file

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = mysqli_real_escape_string($conn, $_POST['email']);

    if (empty($email)) {
        $msg = "Please enter your email address";
    } else {
        // Check if the email exists in the database
        $sql = "SELECT id FROM users WHERE email = '$email'";
        $result = mysqli_query($conn, $sql);

        if (mysqli_num_rows($result) == 0) {
            $msg = "Email does not exist. Please try again.";
        } else {
            // Generate a random token
            $token = bin2hex(random_bytes(16));
            
            // Set the expiration time for the token (e.g., 1 hour)
            $expires = date('Y-m-d H:i:s', strtotime('+1 hour'));

            // Update the database with the new token and expiration time
            $updateSql = "UPDATE users SET reset_token = '$token', reset_expires = '$expires' WHERE email = '$email'";
            mysqli_query($conn, $updateSql);

            // Send an email to the user with the reset link
            $resetLink = "http://$_SERVER[HTTP_HOST]/reset-password.php?token=$token";
            $to = $email;
            $subject = "Password Reset Request";
            $message = "Please click the following link to reset your password:

$resetLink

This link will expire in one hour.";
            $headers = "From: no-reply@$_SERVER[HTTP_HOST]\r
";

            if (mail($to, $subject, $message, $headers)) {
                $msg = "Password reset email has been sent to your email address.";
            } else {
                $msg = "Failed to send password reset email. Please try again later.";
            }
        }
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <?php if (isset($msg)) { echo "<p>$msg</p>"; } ?>
    
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <label for="email">Email:</label><br>
        <input type="text" id="email" name="email"><br><br>
        <input type="submit" value="Submit">
    </form>
</body>
</html>


<?php
session_start();
require_once 'database_connection.php';

// Function to generate random token
function generateToken() {
    return bin2hex(random_bytes(16));
}

// Function to send reset password email
function sendResetEmail($email, $token) {
    $to = $email;
    $subject = "Password Reset Request";
    $message = "
        <html>
            <head></head>
            <body>
                <h2>Password Reset</h2>
                <p>Please click the following link to reset your password:</p>
                <a href='http://yourwebsite.com/reset-password.php?token=$token'>Reset Password</a>
            </body>
        </html>
    ";
    
    $headers = "MIME-Version: 1.0" . "\r
";
    $headers .= "Content-type:text/html;charset=UTF-8" . "\r
";
    $headers .= "From: yourwebsite.com <admin@yourwebsite.com>" . "\r
";

    mail($to, $subject, $message, $headers);
}

// Function to reset password
function resetPassword($token) {
    global $conn;
    
    // Check if token exists and is valid
    $sql = "SELECT * FROM users WHERE reset_token = ? AND reset_token_expires > NOW()";
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, "s", $token);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);
    
    if (mysqli_num_rows($result) == 1) {
        // Token is valid
        return true;
    } else {
        // Invalid or expired token
        return false;
    }
}

// Main forgot password function
function forgotPassword($email) {
    global $conn;
    
    // Check if email exists in database
    $sql = "SELECT * FROM users WHERE email = ?";
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, "s", $email);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);
    
    if (mysqli_num_rows($result) == 1) {
        // Generate new token
        $token = generateToken();
        
        // Update user record with new token and expiration time
        $sql = "UPDATE users SET reset_token = ?, reset_token_expires = NOW() + INTERVAL 1 HOUR WHERE email = ?";
        $stmt = mysqli_prepare($conn, $sql);
        mysqli_stmt_bind_param($stmt, "ss", $token, $email);
        mysqli_stmt_execute($stmt);
        
        // Send reset email
        sendResetEmail($email, $token);
        return true;
    } else {
        // Email not found in database
        return false;
    }
}

// Example usage:
if (isset($_POST['submit'])) {
    $email = $_POST['email'];
    
    if (forgotPassword($email)) {
        echo "A password reset link has been sent to your email address.";
    } else {
        echo "Email not found in our database.";
    }
}
?>


<?php
session_start();
include('db_connection.php');

$error = '';

if (!empty($_POST['email_or_username'])) {
    $input = mysqli_real_escape_string($conn, $_POST['email_or_username']);
    
    // Check if input exists in database
    $sql = "SELECT id FROM users WHERE email='$input' OR username='$input'";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) > 0) {
        // Generate reset token and set expiration
        $token = bin2hex(random_bytes(32));
        $expires = time() + 3600; // 1 hour
        
        $sql = "UPDATE users SET reset_token='$token', token_expiry=$expires WHERE email='$input' OR username='$input'";
        mysqli_query($conn, $sql);
        
        // Send reset link
        $to = $input;
        $subject = 'Password Reset Request';
        $message = "Please click the following link to reset your password: http://example.com/reset.php?token=$token";
        mail($to, $subject, $message);
        echo "Reset email sent. Check your inbox.";
    } else {
        $error = "Email/username not found!";
    }
} else {
    $error = "Please enter an email or username!";
}
?>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'your_database';
$username = 'your_username';
$password = 'your_password';

// Create connection
$conn = new mysqli($host, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function sendEmail($to, $subject, $message) {
    // Email sending configuration
    $from = 'your_email@example.com';
    $headers = "From: $from\r
";
    $headers .= "Content-type: text/html\r
";

    mail($to, $subject, $message, $headers);
}

// Reset password function
function resetPassword($email, $username) {
    global $conn;

    // Check if email or username exists in the database
    $sql = "SELECT id FROM users WHERE email = ? OR username = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("ss", $email, $username);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        // Generate a unique token
        $token = bin2hex(random_bytes(16));
        $hashedToken = hash('sha256', $token);
        
        // Set expiration time (1 hour)
        $expirationTime = date("Y-m-d H:i:s", strtotime("+1 hour"));

        // Store the token in the database
        $sql = "INSERT INTO password_reset (user_id, token, expires) 
                SELECT id, ?, ? FROM users WHERE email = ? OR username = ?";
        $stmt = $conn->prepare($sql);
        $stmt->bind_param("ssss", $hashedToken, $expirationTime, $email, $username);
        $stmt->execute();

        // Get the inserted token ID
        $resetId = $conn->insert_id;

        // Send email to user
        $resetLink = "http://$_SERVER[HTTP_HOST]/reset-password.php?token=$token";
        $subject = "Password Reset Request";
        $message = "
            <html>
                <head></head>
                <body>
                    <p>Hello,</p>
                    <p>We received a password reset request. Click the link below to reset your password:</p>
                    <a href='$resetLink'>Reset Password</a>
                    <p>If you didn't request this, please ignore this email.</p>
                    <p>This link will expire in 1 hour.</p>
                </body>
            </html>
        ";
        sendEmail($email, $subject, $message);

        return "Password reset instructions have been sent to your email address.";
    } else {
        return "No account found with that email or username.";
    }
}

// Process forgot password form
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = $_POST['email'];
    $username = $_POST['username'];

    // Validate input
    if (empty($email) && empty($username)) {
        echo "Please enter either your email or username.";
    } else {
        $message = resetPassword($email, $username);
        echo $message;
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <h2>Forgot Password</h2>
    <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
        <input type="email" name="email" placeholder="Enter your email" required><br><br>
        <input type="text" name="username" placeholder="Or enter your username"><br><br>
        <button type="submit">Reset Password</button>
    </form>
</body>
</html>

// Reset password page (reset-password.php)
<?php
session_start();
include_once('database_connection.php');

function validateToken($token) {
    global $conn;

    // Check if token exists and is not expired
    $sql = "SELECT * FROM password_reset 
            WHERE token = ? 
            AND expires > NOW() 
            AND used = 0";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("s", $token);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows == 1) {
        return true;
    } else {
        return false;
    }
}

if (isset($_GET['token'])) {
    $token = $_GET['token'];
    
    if (!validateToken($token)) {
        die("Invalid or expired token. <a href='login.php'>Click here to try again.</a>");
    }
} else {
    die("No token provided.");
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <?php if (isset($_GET['token'])): ?>
        <h2>Reset Your Password</h2>
        <form action="reset-password.php?token=<?php echo $token; ?>" method="post">
            <input type="password" name="new_password" placeholder="New Password" required><br><br>
            <input type="password" name="confirm_password" placeholder="Confirm Password" required><br><br>
            <button type="submit">Reset Password</button>
        </form>
    <?php endif; ?>

<?php
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $token = $_GET['token'];
    $newPassword = hash('sha256', $_POST['new_password']);
    $confirmPassword = hash('sha256', $_POST['confirm_password']);

    if ($newPassword != $confirmPassword) {
        die("Passwords do not match. Please try again.");
    }

    // Update the user's password
    $sql = "UPDATE users 
            SET password = ? 
            WHERE id IN (SELECT user_id FROM password_reset WHERE token = ?)";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("ss", $newPassword, $token);
    $stmt->execute();

    // Mark the token as used
    $sql = "UPDATE password_reset 
            SET used = 1 
            WHERE token = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("s", $token);
    $stmt->execute();

    header("Location: login.php?message=Password%20reset%20successful!");
    exit();
}
?>
</body>
</html>


<?php
// Include database configuration
include('dbconfig.php');

// Initialize variables
$message = '';

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    try {
        // Sanitize input
        $email_username = mysqli_real_escape_string($conn, $_POST['email_username']);
        
        // Check if user exists with the provided email/username
        $checkQuery = "SELECT id, email FROM users WHERE email = ? OR username = ?";
        $stmt = $conn->prepare($checkQuery);
        $stmt->bind_param("ss", $email_username, $email_username);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows == 0) {
            throw new Exception("Invalid email or username");
        }

        // Generate reset token and expiration time
        $token = sha1(uniqid(mt_rand(), true));
        $expires = date('Y-m-d H:i:s', strtotime('+1 hour'));

        // Update the database with the new token and expiration time
        $updateQuery = "UPDATE users SET password_reset_token = ?, password_reset_expires = ? WHERE email = ?";
        $stmt = $conn->prepare($updateQuery);
        $stmt->bind_param("sss", $token, $expires, $email_username);
        $stmt->execute();

        // Get user's email
        $userRow = $result->fetch_assoc();
        $to = $userRow['email'];
        $subject = "Password Reset Request";
        
        // Create the reset link
        $resetLink = "http://$_SERVER[HTTP_HOST]/password_reset.php?token=$token";

        // Email content
        $message = "
            <html>
            <body>
                <h2>Password Reset</h2>
                <p>Please click the following link to reset your password:</p>
                <a href='$resetLink'>Reset Password</a><br>
                <small>If you did not request this, please ignore this email.</small>
            </body>
            </html>
        ";

        // Set headers for email
        $headers = "MIME-Version: 1.0" . "\r
";
        $headers .= "Content-type:text/html;charset=UTF-8" . "\r
";
        $headers .= "From: your_name@example.com" . "\r
";

        // Send the email
        if (!mail($to, $subject, $message, $headers)) {
            throw new Exception("Failed to send reset email");
        }

        // Reset message for success
        $message = "We've sent you an email with instructions to reset your password.";
    } catch (Exception $e) {
        $message = $e->getMessage();
    }
}

// Close database connection
$conn->close();
?>
<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <?php if ($message != '') { ?>
        <p><?php echo $message; ?></p><br>
    <?php } ?>

    <h2>Forgot Password</h2>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        Email or Username:<br>
        <input type="text" name="email_username"><br><br>
        <input type="submit" value="Reset Password">
    </form>
</body>
</html>


<?php
// Include database configuration
include('dbconfig.php');

if (isset($_GET['token'])) {
    $token = mysqli_real_escape_string($conn, $_GET['token']);

    // Check if token exists and hasn't expired
    $checkQuery = "SELECT id FROM users WHERE password_reset_token = ? AND password_reset_expires > NOW()";
    $stmt = $conn->prepare($checkQuery);
    $stmt->bind_param("s", $token);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows == 1) {
        // Token is valid, display password reset form
        ?>
        <h2>Reset Password</h2>
        <form action="reset_password.php" method="post">
            New Password:<br>
            <input type="password" name="new_password"><br><br>
            Confirm Password:<br>
            <input type="password" name="confirm_password"><br><br>
            <input type="hidden" name="token" value="<?php echo $token; ?>">
            <input type="submit" value="Reset Password">
        </form>
        <?php
    } else {
        // Token invalid or expired
        die("Invalid or expired token");
    }
} else {
    // No token provided
    die("No token provided");
}
?>


<?php
// Include database configuration
include('dbconfig.php');

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $token = mysqli_real_escape_string($conn, $_POST['token']);
    $new_password = mysqli_real_escape_string($conn, $_POST['new_password']);
    $confirm_password = mysqli_real_escape_string($conn, $_POST['confirm_password']);

    if ($new_password != $confirm_password) {
        die("Passwords do not match");
    }

    // Check token validity
    $checkQuery = "SELECT id FROM users WHERE password_reset_token = ? AND password_reset_expires > NOW()";
    $stmt = $conn->prepare($checkQuery);
    $stmt->bind_param("s", $token);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows == 1) {
        // Update password
        $hash_password = password_hash($new_password, PASSWORD_DEFAULT);
        $updateQuery = "UPDATE users SET password = ?, password_reset_token = NULL WHERE password_reset_token = ?";
        $stmt = $conn->prepare($updateQuery);
        $stmt->bind_param("ss", $hash_password, $token);
        $stmt->execute();

        // Display success message
        echo "Password reset successfully!";
    } else {
        die("Invalid or expired token");
    }
}
?>


<?php
// Include necessary files
require_once 'database_connection.php';

function forgotPassword($email) {
    // Check if email exists in database
    $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
    $stmt->bind_param("s", $email);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        // Generate a unique token for password reset
        $token = bin2hex(random_bytes(32));
        
        // Set expiration time (e.g., 1 hour from now)
        $expiration_time = date('Y-m-d H:i:s', strtotime('+1 hour'));

        // Update the database with the new token and expiration time
        $updateStmt = $conn->prepare("UPDATE users SET reset_token = ?, reset_expires = ? WHERE email = ?");
        $updateStmt->bind_param("sss", $token, $expiration_time, $email);
        $updateStmt->execute();

        // Send password reset email
        $resetLink = "http://yourwebsite.com/reset-password.php?token=$token";
        sendPasswordResetEmail($email, $resetLink);

        return true; // Password reset link sent successfully
    } else {
        return false; // Email not found in database
    }
}

function sendPasswordResetEmail($email, $resetLink) {
    $to = $email;
    $subject = "Password Reset Request";
    $message = "
        <html>
            <head></head>
            <body>
                <p>Hello,</p>
                <p>You have requested to reset your password. Please click on the following link to reset your password:</p>
                <p><a href=$resetLink>Reset Password</a></p>
                <br>
                <p>If you did not request this password reset, please ignore this email.</p>
            </body>
        </html>
    ";
    $headers = "From: yourwebsite@example.com" . "\r
";
    $headers .= "MIME-Version: 1.0\r
";
    $headers .= "Content-Type: text/html; charset=UTF-8\r
";

    mail($to, $subject, $message, $headers);
}

// Example usage:
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    if (isset($_POST['email'])) {
        $email = $_POST['email'];
        if (forgotPassword($email)) {
            echo "Password reset link has been sent to your email!";
        } else {
            echo "Email not found in our records.";
        }
    }
}
?>


<?php
session_start();
include('db_connection.php'); // Include your database connection

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = mysqli_real_escape_string($conn, $_POST['email']);

    // Check if email exists in the database
    $query = "SELECT id FROM users WHERE email='$email'";
    $result = mysqli_query($conn, $query);
    
    if (mysqli_num_rows($result) == 0) {
        die("Email not found. Please check your email and try again.");
    }

    // Generate a random token
    $token = bin2hex(random_bytes(16));
    $expires = date('Y-m-d H:i:s', strtotime('+1 hour'));

    // Update the database with the new token and expiration time
    $updateQuery = "UPDATE users SET reset_token='$token', reset_expires='$expires' WHERE email='$email'";
    mysqli_query($conn, $updateQuery);

    // Send email to user
    $to = $email;
    $subject = 'Password Reset Request';
    
    $message = '
        <html>
            <head>
                <title>Password Reset</title>
            </head>
            <body>
                <h2>Password Reset</h2>
                <p>Please click the following link to reset your password:</p>
                <a href="http://example.com/reset_password.php?token=' . $token . '">Reset Password</a><br><br>
                <small>This link will expire in one hour.</small>
            </body>
        </html>
    ';
    
    // Set headers for email
    $headers = 'MIME-Version: 1.0' . "\r
";
    $headers .= 'Content-type: text/html; charset=iso-8859-1' . "\r
";
    $headers .= 'From: noreply@example.com' . "\r
";

    // Send the email
    mail($to, $subject, $message, $headers);

    // Redirect back to a message page
    header("Location: password_reset_sent.php");
}
?>


<?php
session_start();
include('db_connection.php');

if (!isset($_GET['token'])) {
    die("Invalid request.");
}

$token = mysqli_real_escape_string($conn, $_GET['token']);

// Check if the token exists and hasn't expired
$query = "SELECT id, reset_expires FROM users WHERE reset_token='$token'";
$result = mysqli_query($conn, $query);

if (mysqli_num_rows($result) == 0) {
    die("Invalid or expired token.");
}

$row = mysqli_fetch_assoc($result);
$expires = $row['reset_expires'];

if ($expires < date('Y-m-d H:i:s')) {
    die("Token has expired. Please request a new password reset.");
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <h2>Reset Password</h2>
    <form action="reset_password.php?token=<?php echo $token; ?>" method="post">
        <label for="password">New Password:</label><br>
        <input type="password" id="password" name="password"><br><br>
        <label for="confirm_password">Confirm New Password:</label><br>
        <input type="password" id="confirm_password" name="confirm_password"><br><br>
        <input type="submit" value="Reset Password">
    </form>
</body>
</html>

<?php
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $newPassword = mysqli_real_escape_string($conn, $_POST['password']);
    $confirmPassword = mysqli_real_escape_string($conn, $_POST['confirm_password']);

    if ($newPassword != $confirmPassword) {
        die("Passwords do not match.");
    }

    // Update the password
    $hash = password_hash($newPassword, PASSWORD_DEFAULT);
    
    $updateQuery = "UPDATE users SET password='$hash', reset_token='', reset_expires='' WHERE reset_token='$token'";
    mysqli_query($conn, $updateQuery);

    header("Location: password_reset_success.php");
}
?>


<?php
session_start();

$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "myDB";

// Create connection
$conn = new mysqli($servername, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = $_POST['email'];
    
    // Sanitize email
    $email = mysqli_real_escape_string($conn, $email);

    // Check if email exists in database
    $sql = "SELECT id FROM users WHERE email='$email'";
    $result = $conn->query($sql);
    
    if ($result->num_rows == 0) {
        echo "Email not found!";
    } else {
        $row = $result->fetch_assoc();
        $user_id = $row['id'];
        
        // Generate a unique token
        $token = md5(uniqid() . $user_id);
        
        // Store token in database with expiration time
        $expires = date("Y-m-d H:i:s", time() + 3600); // Token valid for 1 hour
        
        $sql = "INSERT INTO password_reset (user_id, token, expires) VALUES ('$user_id', '$token', '$expires')";
        if ($conn->query($sql)) {
            // Send email with reset link
            $reset_link = "http://example.com/reset_password.php?token=" . urlencode($token);
            
            $to = $email;
            $subject = "Password Reset Request";
            $message = "Click the following link to reset your password: 

" . $reset_link . "

This link will expire in 1 hour.";
            $headers = "From: noreply@example.com";
            
            if (mail($to, $subject, $message, $headers)) {
                echo "An email has been sent to you with a password reset link!";
            } else {
                echo "There was an error sending the email. Please try again.";
            }
        } else {
            echo "Error: " . $sql . "<br>" . $conn->error;
        }
    }
}

$conn->close();
?>


<?php
session_start();

if (!isset($_GET['token'])) {
    die("Invalid request");
}

$token = $_GET['token'];
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "myDB";

$conn = new mysqli($servername, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Verify token and check expiration
$sql = "SELECT user_id FROM password_reset WHERE token='$token' AND expires > NOW()";
$result = $conn->query($sql);

if ($result->num_rows == 0) {
    die("Invalid or expired reset link");
} else {
    $row = $result->fetch_assoc();
    $_SESSION['reset_user_id'] = $row['user_id'];
}

$conn->close();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <h2>Reset Password</h2>
    <form action="reset_password.php" method="post">
        New Password: <input type="password" name="new_password" required><br>
        Confirm Password: <input type="password" name="confirm_password" required><br><br>
        <input type="submit" value="Reset Password">
    </form>
</body>
</html>


<?php
session_start();

if (!isset($_SESSION['reset_user_id'])) {
    die("Invalid request");
}

$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "myDB";

$conn = new mysqli($servername, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

$user_id = $_SESSION['reset_user_id'];
unset($_SESSION['reset_user_id']);

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $new_password = $_POST['new_password'];
    $confirm_password = $_POST['confirm_password'];
    
    if ($new_password != $confirm_password) {
        die("Passwords do not match!");
    }
    
    // Hash the password
    $hashed_password = md5($new_password);
    
    // Update user's password
    $sql = "UPDATE users SET password='$hashed_password' WHERE id='$user_id'";
    
    if ($conn->query($sql)) {
        // Delete reset token
        $sql_delete = "DELETE FROM password_reset WHERE user_id='$user_id'";
        $conn->query($sql_delete);
        
        echo "Password has been reset successfully!";
    } else {
        die("Error resetting password: " . $sql . "<br>" . $conn->error);
    }
}

$conn->close();
?>


<?php
session_start();
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$db_name = 'my_database';

// Connect to database
$conn = new mysqli($host, $username, $password, $db_name);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function sendPasswordResetEmail($email, $token) {
    $to = $email;
    $subject = 'Password Reset Request';
    
    $message = '
        <html>
            <body>
                <h2>Password Reset Request</h2>
                <p>Please click the following link to reset your password:</p>
                <a href="http://localhost/reset-password.php?token=' . $token . '">Reset Password</a><br>
                <small>If you did not request this password reset, please ignore this email.</small>
            </body>
        </html>
    ';
    
    $headers = 'MIME-Version: 1.0' . "\r
";
    $headers .= 'Content-type: text/html; charset=UTF-8' . "\r
";
    $headers .= 'From: noreply@example.com' . "\r
";
    
    mail($to, $subject, $message, $headers);
}

if (isset($_POST['submit'])) {
    $email = mysqli_real_escape_string($conn, $_POST['email']);
    
    // Check if email exists in database
    $sql = "SELECT id FROM users WHERE email='$email'";
    $result = $conn->query($sql);
    
    if ($result->num_rows == 0) {
        $_SESSION['message'] = 'Email does not exist in our records!';
        header('Location: forgot-password.php');
        exit();
    } else {
        // Generate a random token
        $token = bin2hex(openssl_random_pseudo_bytes(16));
        
        // Update database with the token and current timestamp
        $sql = "UPDATE users SET reset_token='$token', reset_token_expiry=NOW() + INTERVAL 30 MINUTE WHERE email='$email'";
        if ($conn->query($sql)) {
            sendPasswordResetEmail($email, $token);
            $_SESSION['message'] = 'A password reset link has been sent to your email address.';
            header('Location: forgot-password.php');
            exit();
        } else {
            $_SESSION['message'] = 'Error sending reset link!';
            header('Location: forgot-password.php');
            exit();
        }
    }
}

// Close database connection
$conn->close();

// Display message
if (isset($_SESSION['message'])) {
    echo '<div style="color:red;">' . $_SESSION['message'] . '</div>';
    unset($_SESSION['message']);
}
?>


<?php
// Include database configuration
include 'db_config.php';

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = $_POST['email'];
    
    // Check if email exists in database
    $stmt = $pdo->prepare("SELECT id FROM users WHERE email = ?");
    $stmt->execute([$email]);
    $user = $stmt->fetch(PDO::FETCH_ASSOC);
    
    if ($user) {
        // Generate a random token
        $token = bin2hex(random_bytes(16));
        
        // Store the token and expiration time in database
        $expires = date('Y-m-d H:i:s', strtotime('+30 minutes'));
        $stmt = $pdo->prepare("INSERT INTO password_reset (user_id, token, expires) VALUES (?, ?, ?)");
        $stmt->execute([$user['id'], $token, $expires]);
        
        // Send reset email
        $to = $email;
        $subject = "Password Reset Request";
        $message = "
            <html>
                <body>
                    <h2>Password Reset</h2>
                    <p>Please click the link below to reset your password:</p>
                    <a href='http://yourdomain.com/reset_password.php?token=$token'>Reset Password</a><br>
                    <small>This link will expire in 30 minutes.</small>
                </body>
            </html>
        ";
        $headers = "MIME-Version: 1.0" . "\r
";
        $headers .= "Content-type:text/html;charset=UTF-8" . "\r
";
        $headers .= "From: noreply@yourdomain.com" . "\r
";
        
        mail($to, $subject, $message, $headers);
        
        echo "A password reset link has been sent to your email.";
    } else {
        echo "Email not found in our records.";
    }
}
?>


<?php
// Include database configuration
include 'db_config.php';

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $token = $_POST['token'];
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];
    
    // Check if token exists and is valid
    $stmt = $pdo->prepare("SELECT * FROM password_reset WHERE token = ? AND expires > NOW()");
    $stmt->execute([$token]);
    $reset = $stmt->fetch(PDO::FETCH_ASSOC);
    
    if (!$reset) {
        die("Invalid or expired reset link.");
    }
    
    // Check if passwords match
    if ($password !== $confirm_password) {
        die("Passwords do not match.");
    }
    
    // Update the user's password
    $hash = password_hash($password, PASSWORD_DEFAULT);
    $stmt = $pdo->prepare("UPDATE users SET password = ? WHERE id = ?");
    $stmt->execute([$hash, $reset['user_id']]);
    
    // Inactivate the reset token
    $stmt = $pdo->prepare("DELETE FROM password_reset WHERE token = ?");
    $stmt->execute([$token]);
    
    echo "Password has been successfully updated!";
}
?>


<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <h2>Forgot Password</h2>
    <?php
        if (isset($_GET['error'])) {
            echo "<p style='color:red;'>" . $_GET['error'] . "</p>";
        }
    ?>
    <form action="send_reset_email.php" method="post">
        <input type="email" name="email" placeholder="Enter your email" required><br>
        <button type="submit">Request Reset</button>
    </form>
</body>
</html>


<?php
require 'db_connect.php';

if (isset($_POST['email'])) {
    $email = $_POST['email'];

    // Check if email exists in the database
    $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
    $stmt->bind_param('s', $email);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($row = $result->fetch_assoc()) {
        $user_id = $row['id'];
        // Generate a random token
        $token = bin2hex(random_bytes(16));
        $expires = date('Y-m-d H:i:s', time() + 3600); // Token expires in 1 hour

        // Insert the token into the database
        $stmt = $conn->prepare("INSERT INTO password_resets (user_id, token, expires) VALUES (?, ?, ?)");
        $stmt->bind_param('iss', $user_id, $token, $expires);
        $stmt->execute();

        // Send email with reset link
        $to = $email;
        $subject = "Password Reset Request";
        $message = "Please click the following link to reset your password: 

";
        $message .= "http://yourdomain.com/reset_password.php?token=" . $token;
        $headers = "From: noreply@yourdomain.com";

        mail($to, $subject, $message, $headers);

        echo "<p>Email sent with reset instructions!</p>";
    } else {
        header("Location: forgot_password.php?error=Email%20not%20found.");
    }
}
?>


<?php
session_start();
require 'db_connect.php';

if (isset($_GET['token'])) {
    $token = $_GET['token'];

    // Check if token exists and is not expired
    $stmt = $conn->prepare("SELECT user_id, expires FROM password_resets WHERE token = ?");
    $stmt->bind_param('s', $token);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($row = $result->fetch_assoc()) {
        $user_id = $row['user_id'];
        $expires = $row['expires'];

        // Check if token has expired
        if (strtotime($expires) < time()) {
            echo "<p>Token expired. Please request a new reset.</p>";
            exit();
        }

        // Store user_id in session
        $_SESSION['reset_user_id'] = $user_id;
    } else {
        echo "<p>Invalid token. Please request a new reset.</p>";
        exit();
    }
} else {
    header("Location: forgot_password.php");
}
?>
<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <?php
        if (isset($_GET['error'])) {
            echo "<p style='color:red;'>" . $_GET['error'] . "</p>";
        }
    ?>
    <form action="update_password.php" method="post">
        <input type="password" name="new_password" placeholder="New Password" required><br>
        <input type="password" name="confirm_password" placeholder="Confirm Password" required><br>
        <button type="submit">Reset Password</button>
    </form>
</body>
</html>


<?php
session_start();
require 'db_connect.php';

if (isset($_POST['new_password'], $_POST['confirm_password'])) {
    $new_password = $_POST['new_password'];
    $confirm_password = $_POST['confirm_password'];

    if ($new_password !== $confirm_password) {
        header("Location: reset_password.php?error=Passwords%20do%20not%20match.");
        exit();
    }

    // Validate password strength (example criteria)
    if (strlen($new_password) < 8 || !preg_match('/[A-Z]/', $new_password) || !preg_match('/\d/', $new_password)) {
        header("Location: reset_password.php?error=Password%20must%20be%20at%20least%208%20characters%20with%20one%20uppercase%20letter%20and%20one%20number.");
        exit();
    }

    // Get user_id from session
    $user_id = $_SESSION['reset_user_id'];
    unset($_SESSION['reset_user_id']);

    // Hash the new password
    $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);

    // Update the user's password
    $stmt = $conn->prepare("UPDATE users SET password = ? WHERE id = ?");
    $stmt->bind_param('si', $hashed_password, $user_id);
    $stmt->execute();

    // Delete all tokens for this user
    $stmt = $conn->prepare("DELETE FROM password_resets WHERE user_id = ?");
    $stmt->bind_param('i', $user_id);
    $stmt->execute();

    echo "<p>Password updated successfully!</p>";
} else {
    header("Location: reset_password.php");
}
?>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'your_database';

// Create connection
$conn = new mysqli($host, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to send password reset email
function sendPasswordResetEmail($email, $resetLink) {
    $to = $email;
    $subject = 'Password Reset Request';
    $message = '<html>
        <head>
            <title>Password Reset</title>
        </head>
        <body>
            <h2>Password Reset</h2>
            <p>We received a request to reset your password. Click the link below to reset it:</p>
            <a href="' . $resetLink . '">Reset Password</a><br><br>
            <p>If you did not make this request, please ignore this email.</p>
        </body>
    </html>';
    
    // Set up PHPMailer
    require 'PHPMailer/PHPMailer.php';
    require 'PHPMailer/SMTP.php';
    require 'PHPMailer/Exception.php';

    $mail = new PHPMailer\PHPMailer();
    try {
        //Server settings
        $mail->isSMTP();
        $mail->Host = 'smtp.example.com';  // Replace with your SMTP server
        $mail->SMTPAuth = true;
        $mail->Username = 'your_email@example.com';  // Your email username
        $mail->Password = 'your_email_password';      // Your email password
        $mail->SMTPSecure = 'tls';
        $mail->Port = 587;

        //Recipients
        $mail->setFrom('your_email@example.com', 'Your Name');
        $mail->addAddress($to);

        // Content
        $mail->isHTML(true);
        $mail->Subject = $subject;
        $mail->Body    = $message;

        $mail->send();
        return true;
    } catch (Exception $e) {
        echo "Message could not be sent. Mailer Error: {$mail->ErrorInfo}";
        return false;
    }
}

// Function to handle password reset request
function forgotPassword($email, $conn) {
    // Check if email exists in database
    $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
    $stmt->bind_param('s', $email);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        // Generate reset token and expiration time
        $resetToken = bin2hex(random_bytes(16));
        $expires = date('Y-m-d H:i:s', time() + 3600); // Token expires after 1 hour

        // Insert reset token into database
        $stmtReset = $conn->prepare("INSERT INTO password_reset (user_id, token, expires) VALUES (?, ?, ?)");
        $stmtReset->bind_param('iss', $userId, $resetToken, $expires);
        
        // Get user ID from previous query
        $row = $result->fetch_assoc();
        $userId = $row['id'];
        
        $stmtReset->execute();

        // Generate reset link
        $resetLink = 'http://yourwebsite.com/reset-password.php?token=' . $resetToken;

        // Send email
        if (sendPasswordResetEmail($email, $resetLink)) {
            echo "A password reset link has been sent to your email address.";
        } else {
            echo "An error occurred while sending the email.";
        }
    } else {
        echo "No account found with this email address.";
    }

    // Close statements
    $stmt->close();
    $stmtReset->close();
}

// Example usage:
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $email = $_POST['email'];
    
    if (!empty($email)) {
        forgotPassword($email, $conn);
    } else {
        echo "Please enter your email address.";
    }
}

$conn->close();
?>


<?php
// Include database connection
include('db_connection.php');

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email_username = mysqli_real_escape_string($conn, $_POST['email_username']);
    
    // Check if email or username exists in the database
    $sql = "SELECT id, email FROM users WHERE email='$email_username' OR username='$email_username'";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) > 0) {
        // Generate a random token
        $token = bin2hex(random_bytes(16));
        
        // Store the token in the database with an expiration time (e.g., 1 hour)
        $expires = date('Y-m-d H:i:s', time() + 3600);
        $sql_token = "INSERT INTO password_reset_tokens (user_id, token, expires) VALUES (?, ?, ?)";
        
        // Prepare and execute the statement
        $stmt = mysqli_prepare($conn, $sql_token);
        mysqli_stmt_bind_param($stmt, "iss", $id, $token, $expires);
        
        // Get user ID from the previous query
        $row = mysqli_fetch_assoc($result);
        $id = $row['id'];
        
        mysqli_stmt_execute($stmt);
        
        // Send the token to the user's email
        send_reset_email($email_username, $token);
        
        echo "A password reset link has been sent to your email address.";
    } else {
        die("Invalid email or username!");
    }
    
    mysqli_close($conn);
}

// Function to send the reset email
function send_reset_email($email, $token) {
    $to = $email;
    $subject = "Password Reset Request";
    $message = "Please click the following link to reset your password: http://yourwebsite.com/reset_password.php?token=$token";
    $headers = "From: yourwebsite@example.com" . "\r
";
    
    mail($to, $subject, $message, $headers);
}
?>


<?php
// Include database connection
include('db_connection.php');

if (isset($_GET['token'])) {
    $token = mysqli_real_escape_string($conn, $_GET['token']);
    
    // Check if token exists and hasn't expired
    $sql = "SELECT * FROM password_reset_tokens WHERE token='$token' AND expires > NOW()";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) == 1) {
        // Show the password reset form
        ?>
        <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
            <input type="hidden" name="token" value="<?php echo $token; ?>">
            New Password: <br>
            <input type="password" name="new_password"><br><br>
            Confirm Password: <br>
            <input type="password" name="confirm_password"><br><br>
            <input type="submit" value="Reset Password">
        </form>
        <?php
    } else {
        die("Invalid or expired token!");
    }
} elseif ($_SERVER["REQUEST_METHOD"] == "POST") {
    $token = mysqli_real_escape_string($conn, $_POST['token']);
    $new_password = mysqli_real_escape_string($conn, $_POST['new_password']);
    $confirm_password = mysqli_real_escape_string($conn, $_POST['confirm_password']);
    
    if ($new_password != $confirm_password) {
        die("Passwords do not match!");
    }
    
    // Update the password in the database
    $sql = "SELECT user_id FROM password_reset_tokens WHERE token='$token'";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) == 1) {
        $row = mysqli_fetch_assoc($result);
        $user_id = $row['user_id'];
        
        // Hash the new password
        $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);
        
        // Update the user's password
        $update_sql = "UPDATE users SET password='$hashed_password' WHERE id=$user_id";
        mysqli_query($conn, $update_sql);
        
        // Delete the token
        $delete_sql = "DELETE FROM password_reset_tokens WHERE token='$token'";
        mysqli_query($conn, $delete_sql);
        
        echo "Password has been reset successfully!";
    } else {
        die("Invalid token!");
    }
} else {
    die("No token provided!");
}

mysqli_close($conn);
?>


<?php
// forgot-password-process.php

// Database connection details
$host = 'localhost';
$dbUsername = 'root';
$dbPassword = '';
$dbName = 'mydatabase';

// Create database connection
$conn = new mysqli($host, $dbUsername, $dbPassword, $dbName);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

$email = $_POST['email'];

// Check if email exists in the database
$sql = "SELECT id FROM users WHERE email = ?";
$stmt = $conn->prepare($sql);
$stmt->bind_param('s', $email);
$stmt->execute();
$result = $stmt->get_result();

if ($result->num_rows === 0) {
    echo "Email not found. Please check your email and try again.";
} else {
    // Generate a unique token
    $token = bin2hex(random_bytes(16));

    // Update the user's record with the new token and expiration time
    $expires = date('Y-m-d H:i:s', strtotime('+1 hour'));
    
    $updateSql = "UPDATE users SET reset_token = ?, reset_expires = ? WHERE email = ?";
    $updateStmt = $conn->prepare($updateSql);
    $updateStmt->bind_param('sss', $token, $expires, $email);
    $updateStmt->execute();

    // Send the reset link to the user's email
    $resetLink = "http://example.com/reset-password.php?token=$token";
    
    $to = $email;
    $subject = "Password Reset Request";
    $message = "Please click the following link to reset your password: $resetLink";
    
    if (mail($to, $subject, $message)) {
        echo "A password reset link has been sent to your email address.";
    } else {
        echo "Error sending email. Please try again later.";
    }
}

$stmt->close();
$conn->close();
?>


<?php
// reset-password.php

// Database connection details
$host = 'localhost';
$dbUsername = 'root';
$dbPassword = '';
$dbName = 'mydatabase';

// Create database connection
$conn = new mysqli($host, $dbUsername, $dbPassword, $dbName);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

$token = $_GET['token'];

// Check if token exists and is valid
$sql = "SELECT id FROM users WHERE reset_token = ? AND reset_expires > NOW()";
$stmt = $conn->prepare($sql);
$stmt->bind_param('s', $token);
$stmt->execute();
$result = $stmt->get_result();

if ($result->num_rows === 0) {
    echo "Invalid or expired token. Please request a new password reset.";
} else {
    // Display the password reset form
    ?>
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <title>Reset Password</title>
    </head>
    <body>
        <h2>Reset Password</h2>
        <form action="reset-password-process.php" method="post">
            <input type="hidden" name="token" value="<?php echo $token; ?>">
            <label for="new_password">New Password:</label><br>
            <input type="password" id="new_password" name="new_password" required><br><br>
            <button type="submit">Reset Password</button>
        </form>
    </body>
    </html>
    <?php
}

$stmt->close();
$conn->close();
?>


<?php
// reset-password-process.php

// Database connection details
$host = 'localhost';
$dbUsername = 'root';
$dbPassword = '';
$dbName = 'mydatabase';

// Create database connection
$conn = new mysqli($host, $dbUsername, $dbPassword, $dbName);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

$token = $_POST['token'];
$newPassword = $_POST['new_password'];

// Validate the token again
$sql = "SELECT id FROM users WHERE reset_token = ? AND reset_expires > NOW()";
$stmt = $conn->prepare($sql);
$stmt->bind_param('s', $token);
$stmt->execute();
$result = $stmt->get_result();

if ($result->num_rows === 0) {
    echo "Invalid or expired token. Please request a new password reset.";
} else {
    // Update the user's password
    $hashedPassword = password_hash($newPassword, PASSWORD_BCRYPT);

    $updateSql = "UPDATE users SET password = ?, reset_token = NULL, reset_expires = NULL WHERE reset_token = ?";
    $updateStmt = $conn->prepare($updateSql);
    $updateStmt->bind_param('ss', $hashedPassword, $token);
    $updateStmt->execute();

    echo "Password has been successfully updated!";
}

$stmt->close();
$conn->close();
?>


<?php
// Database connection function
function connectDB() {
    $host = 'localhost';
    $user = 'username';
    $pass = 'password';
    $db = 'database_name';

    try {
        $conn = new PDO("mysql:host=$host;dbname=$db", $user, $pass);
        return $conn;
    } catch (PDOException $e) {
        die('Connection Failed: ' . $e->getMessage());
    }
}

// Forgot password function
function forgotPassword($email) {
    try {
        // Connect to database
        $conn = connectDB();

        // Check if email exists in the database
        $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
        $stmt->execute([$email]);
        
        if ($stmt->rowCount() == 0) {
            throw new Exception('Email address not found');
        }

        // Generate reset token and expiration time (1 hour)
        $token = bin2hex(random_bytes(32));
        $expires = time() + 3600; // Expiration time: 1 hour

        // Update the users table with the new token and expiration
        $updateStmt = $conn->prepare("UPDATE users SET reset_token = ?, reset_expires = ? WHERE email = ?");
        $updateStmt->execute([$token, $expires, $email]);

        // Send password reset email
        sendPasswordResetEmail($email, $token);

    } catch (Exception $e) {
        echo 'Error: ' . $e->getMessage();
        return false;
    }
}

// Function to send password reset email
function sendPasswordResetEmail($email, $token) {
    // Set up mail headers
    $to = $email;
    $subject = "Password Reset Request";
    $from = "yourwebsite@example.com";
    
    // Create the message body
    $messageBody = '
        <html>
            <head></head>
            <body>
                <h2>Password Reset</h2>
                <p>Click the following link to reset your password:</p>
                <a href="http://yourwebsite.com/reset.php?token=' . $token . '">Reset Password</a>
                <p>If you did not request this password reset, please ignore this email.</p>
            </body>
        </html>';
    
    // Set the Content-Type header
    $headers = "From: $from\r
";
    $headers .= "Content-type: text/html; charset=UTF-8\r
";
    
    // Send the email
    if (mail($to, $subject, $messageBody, $headers)) {
        return true;
    } else {
        throw new Exception('Failed to send password reset email');
    }
}

// Reset password function
function resetPassword($token, $newPassword) {
    try {
        // Connect to database
        $conn = connectDB();

        // Check if token exists and is valid
        $stmt = $conn->prepare("SELECT id FROM users WHERE reset_token = ? AND reset_expires > ?");
        $stmt->execute([$token, time()]);

        if ($stmt->rowCount() == 0) {
            throw new Exception('Invalid or expired reset token');
        }

        // Update the user's password
        $updateStmt = $conn->prepare("UPDATE users SET password = ?, reset_token = NULL WHERE reset_token = ?");
        $updateStmt->execute([password_hash($newPassword, PASSWORD_DEFAULT), $token]);

        return true;

    } catch (Exception $e) {
        echo 'Error: ' . $e->getMessage();
        return false;
    }
}
?>


if (isset($_POST['email'])) {
    try {
        forgotPassword($_POST['email']);
        echo 'Password reset email has been sent';
    } catch (Exception $e) {
        echo 'Error: ' . $e->getMessage();
    }
}


if (isset($_GET['token']) && isset($_POST['new_password'])) {
    try {
        if (resetPassword($_GET['token'], $_POST['new_password'])) {
            echo 'Password has been successfully updated';
        }
    } catch (Exception $e) {
        echo 'Error: ' . $e->getMessage();
    }
}


<?php
session_start();
require_once 'dbconfig.php';

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $email = mysqli_real_escape_string($conn, $_POST['email']);
    
    // Check if email exists in database
    $sql = "SELECT id FROM users WHERE email='$email'";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) == 0) {
        $msg = "Email not registered!";
        header("Location: login.php?forgot_error=$msg");
        exit();
    } else {
        // Generate a random token
        $token = bin2hex(random_bytes(16));
        $expires = date('Y-m-d H:i:s', strtotime('+1 hour'));
        
        // Update the token in the database
        $sql_update = "UPDATE users SET reset_token='$token', reset_expires='$expires' WHERE email='$email'";
        mysqli_query($conn, $sql_update);
        
        // Send password reset email
        $to = $email;
        $subject = "Password Reset Request";
        $message = "Please click the following link to reset your password:

";
        $message .= "http://example.com/reset.php?token=$token

";
        $headers = "From: admin@example.com\r
";
        
        if (mail($to, $subject, $message, $headers)) {
            header("Location: login.php?forgot_success=1");
            exit();
        } else {
            $msg = "Failed to send reset email!";
            header("Location: login.php?forgot_error=$msg");
            exit();
        }
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <?php if (isset($_GET['forgot_success'])) { ?>
        <p>Password reset link has been sent to your email!</p>
    <?php } elseif (isset($_GET['forgot_error'])) { ?>
        <p><?=$_GET['forgot_error']?></p>
    <?php } else { ?>

    <h2>Forgot Password</h2>
    <form method="post" action="<?=$_SERVER['PHP_SELF']?>">
        <input type="email" name="email" placeholder="Enter your email" required><br>
        <button type="submit">Reset Password</button>
    </form>

    <?php } ?>

    <p>Remember password? <a href="login.php">Login here</a></p>
</body>
</html>


<?php
session_start();
require_once 'dbconfig.php';

if (!isset($_GET['token'])) {
    header("Location: forgot.php");
    exit();
}

$token = mysqli_real_escape_string($conn, $_GET['token']);
$sql = "SELECT id FROM users WHERE reset_token='$token' AND reset_expires > NOW()";
$result = mysqli_query($conn, $sql);

if (mysqli_num_rows($result) == 0) {
    $msg = "Invalid or expired token!";
    header("Location: forgot.php?reset_error=$msg");
    exit();
}

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $token = mysqli_real_escape_string($conn, $_GET['token']);
    $password = mysqli_real_escape_string($conn, $_POST['new_password']);
    $confirm_password = mysqli_real_escape_string($conn, $_POST['confirm_password']);
    
    if ($password != $confirm_password) {
        $msg = "Passwords do not match!";
        header("Location: reset.php?token=$token&reset_error=$msg");
        exit();
    }
    
    // Update the password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);
    $sql_update = "UPDATE users SET password='$hashed_password', reset_token=null, reset_expires=null WHERE reset_token='$token'";
    mysqli_query($conn, $sql_update);
    
    $msg = "Password has been updated!";
    header("Location: login.php?reset_success=1");
    exit();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <?php if (isset($_GET['reset_success'])) { ?>
        <p>Password reset successful! Please login with your new password.</p>
    <?php } elseif (isset($_GET['reset_error'])) { ?>
        <p><?=$_GET['reset_error']?></p>
    <?php } else { ?>

    <h2>Reset Password</h2>
    <form method="post" action="<?=$_SERVER['PHP_SELF']?>?token=<?=$token?>">
        New Password: <input type="password" name="new_password" required><br>
        Confirm Password: <input type="password" name="confirm_password" required><br>
        <button type="submit">Update Password</button>
    </form>

    <?php } ?>

    <p>Back to <a href="forgot.php">Forgot Password</a></p>
</body>
</html>


<?php
$host = 'localhost';
$user = 'root';
$password = '';
$dbname = 'test';

$conn = mysqli_connect($host, $user, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}
?>


<?php
session_start();
include('config.php');

// Function to handle password reset request
function forgotPassword() {
    $email = $_POST['email'];
    
    // Check if email exists in the database
    $stmt = $conn->prepare("SELECT id, username FROM users WHERE email = ?");
    $stmt->bind_param("s", $email);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows > 0) {
        // Generate a random token
        $token = bin2hex(random_bytes(16));
        
        // Insert the token into the database with an expiration time (e.g., 1 hour)
        $expires = date('Y-m-d H:i:s', time() + 3600);
        $stmt = $conn->prepare("INSERT INTO reset_tokens (user_id, token, expires) VALUES (?, ?, ?)");
        $stmt->bind_param("iss", $row['id'], $token, $expires);
        $stmt->execute();
        
        // Send email with reset link
        $resetLink = "http://yourwebsite.com/reset-password.php?token=" . $token;
        sendResetEmail($email, $resetLink);
    } else {
        echo "Email not found in our records.";
    }
}

// Function to validate and process the password reset token
function validateToken() {
    $token = $_GET['token'];
    
    // Check if token exists and hasn't expired
    $stmt = $conn->prepare("SELECT user_id FROM reset_tokens WHERE token = ? AND expires > NOW()");
    $stmt->bind_param("s", $token);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows > 0) {
        // Token is valid, show password reset form
        echo "<form action='reset-password.php' method='post'>
                <input type='password' name='new_password' placeholder='Enter new password'>
                <button type='submit'>Reset Password</button>
              </form>";
    } else {
        echo "Invalid or expired token.";
    }
}

// Function to handle password reset
function resetPassword() {
    $token = $_GET['token'];
    $newPassword = $_POST['new_password'];
    
    // Check if token is valid
    $stmt = $conn->prepare("SELECT user_id FROM reset_tokens WHERE token = ?");
    $stmt->bind_param("s", $token);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows > 0) {
        // Update the password
        $hashedPassword = password_hash($newPassword, PASSWORD_DEFAULT);
        $user_id = $row['id'];
        
        $stmt = $conn->prepare("UPDATE users SET password = ? WHERE id = ?");
        $stmt->bind_param("si", $hashedPassword, $user_id);
        $stmt->execute();
        
        // Delete the token after use
        $stmt = $conn->prepare("DELETE FROM reset_tokens WHERE token = ?");
        $stmt->bind_param("s", $token);
        $stmt->execute();
        
        echo "Password reset successful!";
    } else {
        echo "Invalid or expired token.";
    }
}

// Function to send the password reset email
function sendResetEmail($email, $resetLink) {
    $to = $email;
    $subject = "Password Reset Request";
    $message = "Click on the following link to reset your password: " . $resetLink;
    $headers = "From: yourwebsite@example.com\r
";
    
    mail($to, $subject, $message, $headers);
}

// Example usage:
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    forgotPassword();
} elseif (isset($_GET['token'])) {
    validateToken();
}
?>


<?php
// Include database configuration
include('config.php');

if (isset($_POST['reset'])) {
    $email = mysqli_real_escape_string($conn, $_POST['email']);

    // Check if email exists in the database
    $sql = "SELECT id FROM users WHERE email='$email'";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) > 0) {
        // Generate a unique token for password reset
        $token = md5(time());
        
        // Update the user's record with the new token
        $updateSql = "UPDATE users SET reset_token='$token', token_expiration=DATE_ADD(NOW(), INTERVAL 1 HOUR) WHERE email='$email'";
        mysqli_query($conn, $updateSql);

        // Send password reset email
        $to = $email;
        $subject = 'Password Reset Request';
        
        $message = '<html>
            <head><title>Password Reset</title></head>
            <body>
                <h2>Password Reset Request</h2>
                <p>Please click the following link to reset your password:</p>
                <a href="http://your-site.com/reset-password.php?token=' . $token . '">Reset Password</a>
                <br><br>
                This link will expire in 1 hour.
            </body>
        </html>';

        // Set email headers
        $headers = "MIME-Version: 1.0" . "\r
";
        $headers .= "Content-type:text/html;charset=UTF-8" . "\r
";
        $headers .= "From: admin@your-site.com" . "\r
";

        // Send the email
        mail($to, $subject, $message, $headers);

        // Redirect back to login page with success message
        header("Location: login.php?msg=We've sent a password reset link to your email.");
    } else {
        // Email doesn't exist in the database
        header("Location: login.php?msg=Email not found in our records.");
    }
}
?>


<?php
function forgotPassword($email) {
    $conn = mysqli_connect("localhost", "username", "password", "database_name");
    
    if (!$conn) {
        die(json_encode(array(
            'status' => 'error',
            'message' => 'Connection failed: ' . mysqli_connect_error()
        )));
    }
    
    // Check if email exists in database
    $sql = "SELECT * FROM users WHERE email = '" . mysqli_real_escape_string($conn, $email) . "'";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) == 0) {
        die(json_encode(array(
            'status' => 'error',
            'message' => 'Email not found in our records'
        )));
    }
    
    // Generate reset token
    $token = bin2hex(random_bytes(16));
    $expires = date('Y-m-d H:i:s', time() + 3600); // Token expires after 1 hour
    
    // Update the database with the reset token and expiration time
    $updateSql = "UPDATE users SET reset_token = '$token', reset_expires = '$expires' WHERE email = '" . mysqli_real_escape_string($conn, $email) . "'";
    
    if (!mysqli_query($conn, $updateSql)) {
        die(json_encode(array(
            'status' => 'error',
            'message' => 'Error updating record: ' . mysqli_error($conn)
        )));
    }
    
    // Send reset email
    $to = $email;
    $subject = "Reset Password Link";
    $message = "Please click the following link to reset your password:

";
    $message .= "http://your_site_url/reset-password.php?token=" . $token . "&id=" . mysqli_insert_id($conn) . "

";
    $message .= "This link will expire in 1 hour.";
    
    $headers = 'From: webmaster@your_site_url' . "\r
" .
               'Reply-To: webmaster@your_site_url' . "\r
" .
               'X-Mailer: PHP/' . phpversion();
    
    if (mail($to, $subject, $message, $headers)) {
        echo json_encode(array(
            'status' => 'success',
            'message' => 'Password reset email has been sent to your email address.'
        ));
    } else {
        die(json_encode(array(
            'status' => 'error',
            'message' => 'Error sending email'
        )));
    }
    
    mysqli_close($conn);
}

// Example usage:
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $email = $_POST['email'];
    forgotPassword($email);
}
?>


<?php
// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$db_name = 'my_database';

// Connect to database
$conn = new mysqli($host, $username, $password, $db_name);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

if (isset($_POST['email'])) {
    // Email entered by user
    $email = $_POST['email'];

    // Check if email exists in database
    $stmt = $conn->prepare("SELECT id, username FROM users WHERE email = ?");
    $stmt->bind_param("s", $email);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows == 0) {
        // Email not found
        header("Location: forgot_password_form.php?error=Email%20not%20found");
        exit();
    } else {
        // Generate reset token and expiration time
        $reset_token = bin2hex(random_bytes(32));
        $expires = date('Y-m-d H:i:s', time() + 3600); // Expiry in 1 hour

        // Update database with reset token and expiry time
        $update_stmt = $conn->prepare("UPDATE users SET reset_token=?, reset_expires=? WHERE email=?");
        $update_stmt->bind_param("sss", $reset_token, $expires, $email);
        $update_stmt->execute();

        // Send password reset email
        $to = $email;
        $subject = "Password Reset Request";
        $headers = "From: your_email@example.com" . "\r
" .
                   "Reply-To: your_email@example.com" . "\r
" .
                   "X-Mailer: PHP/" . phpversion();

        $message = "Dear User,

Someone requested a password reset for your account. If this was you, please click the link below to reset your password:

";
        $message .= "http://example.com/reset_password.php?token=" . $reset_token . "

";
        $message .= "If you did not request this password reset, no further action is needed.

";
        $message .= "This link will expire in 1 hour.";

        mail($to, $subject, $message, $headers);

        // Redirect back to the form with success message
        header("Location: forgot_password_form.php?message=Password%20reset%20link%20sent");
        exit();
    }
}

// Close database connection
$conn->close();
?>


<?php
session_start();

// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$db_name = 'my_database';

// Connect to database
$conn = new mysqli($host, $username, $password, $db_name);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

if (!isset($_GET['token'])) {
    // No token provided
    header("Location: forgot_password_form.php?error=Invalid%20request");
    exit();
}

$reset_token = $_GET['token'];

// Check if token is valid and not expired
$stmt = $conn->prepare("SELECT id, reset_token, reset_expires FROM users WHERE reset_token = ?");
$stmt->bind_param("s", $reset_token);
$stmt->execute();
$result = $stmt->get_result();

if ($result->num_rows == 0) {
    // Token invalid or expired
    header("Location: forgot_password_form.php?error=Invalid%20or%20expired%20token");
    exit();
}

$user = $result->fetch_assoc();
$expires = $user['reset_expires'];

if (strtotime($expires) < time()) {
    // Token has expired
    header("Location: forgot_password_form.php?error=Token%20has%20expired");
    exit();
}

// If everything is okay, display password reset form
?>

<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <?php if (isset($_GET['error'])) { ?>
        <p style="color:red;"><?php echo $_GET['error']; ?></p>
    <?php } ?>

    <h2>Reset Password</h2>
    <form action="reset_password.php" method="post">
        <input type="password" name="new_password" placeholder="Enter new password" required><br><br>
        <input type="password" name="confirm_password" placeholder="Confirm new password" required><br><br>
        <input type="hidden" name="token" value="<?php echo $reset_token; ?>">
        <button type="submit">Reset Password</button>
    </form>
</body>
</html>

<?php
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Validate new password and confirm match
    $new_password = $_POST['new_password'];
    $confirm_password = $_POST['confirm_password'];

    if ($new_password != $confirm_password) {
        header("Location: reset_password.php?token=" . $reset_token . "&error=Passwords%20do%20not%20match");
        exit();
    }

    // Check password strength (you can modify these criteria as needed)
    if (strlen($new_password) < 8) {
        header("Location: reset_password.php?token=" . $reset_token . "&error=Password%20must%20be%20at%20least%208%20characters");
        exit();
    }

    // Hash the new password
    $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);

    // Update the user's password in the database
    $update_stmt = $conn->prepare("UPDATE users SET password=? WHERE reset_token=?");
    $update_stmt->bind_param("ss", $hashed_password, $reset_token);
    $update_stmt->execute();

    // Invalidate the reset token
    $invalidate_stmt = $conn->prepare("UPDATE users SET reset_token='', reset_expires='' WHERE reset_token=?");
    $invalidate_stmt->bind_param("s", $reset_token);
    $invalidate_stmt->execute();

    // Redirect to login page with success message
    header("Location: login.php?message=Password%20reset%20successful");
    exit();
}

// Close database connection
$conn->close();
?>


<?php
session_start();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <?php
    if (isset($_SESSION['message'])) {
        echo "<p>" . $_SESSION['message'] . "</p>";
        unset($_SESSION['message']);
    }
    ?>

    <form action="forgot_password.php" method="post">
        <label for="email">Email:</label><br>
        <input type="text" id="email" name="email"><br><br>
        <input type="submit" value="Submit">
    </form>

    <p>Don't have an account? <a href="register.php">Register here</a></p>
    <p>Already have an account? <a href="login.php">Login here</a></p>
</body>
</html>


<?php
session_start();

// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'mydatabase';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

if (isset($_POST['email'])) {
    // Sanitize email input
    $email = mysqli_real_escape_string($conn, $_POST['email']);

    // Check if email exists in the database
    $sql = "SELECT id FROM users WHERE email='$email'";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) > 0) {
        // Generate a random token
        $token = md5(uniqid(rand(), true));

        // Update the user's record with the new token
        $sql = "UPDATE users SET reset_token='$token' WHERE email='$email'";
        mysqli_query($conn, $sql);

        // Send the password reset link to the user's email
        $resetLink = "http://localhost/reset_password.php?token=$token";
        $to = $email;
        $subject = "Password Reset Request";
        $message = "Please click the following link to reset your password: $resetLink";

        // Set mail headers
        $headers = "From: noreply@example.com\r
";
        $headers .= "Reply-To: noreply@example.com\r
";
        $headers .= "X-Mailer: PHP/" . phpversion();

        if (mail($to, $subject, $message, $headers)) {
            $_SESSION['message'] = "A password reset link has been sent to your email.";
            header("Location: login.php");
            exit();
        } else {
            echo "Mailer Error: " . error_get_last()['message'];
        }
    } else {
        $_SESSION['message'] = "Email not found in our records.";
        header("Location: forgot_password.php");
        exit();
    }
}
?>


<?php
session_start();

// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'mydatabase';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

if (isset($_GET['token'])) {
    $token = mysqli_real_escape_string($conn, $_GET['token']);

    // Check if token is valid
    $sql = "SELECT id FROM users WHERE reset_token='$token'";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) > 0) {
        // Token is valid, show password reset form
        ?>

<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <?php
    if (isset($_SESSION['message'])) {
        echo "<p>" . $_SESSION['message'] . "</p>";
        unset($_SESSION['message']);
    }
    ?>

    <form action="reset_password.php?token=<?php echo $token; ?>" method="post">
        <label for="new_password">New Password:</label><br>
        <input type="password" id="new_password" name="new_password"><br><br>
        <input type="submit" value="Reset Password">
    </form>

</body>
</html>

<?php
    } else {
        // Invalid token
        $_SESSION['message'] = "Invalid reset link. Please request a new password reset.";
        header("Location: forgot_password.php");
        exit();
    }
}

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $token = mysqli_real_escape_string($conn, $_GET['token']);
    $new_password = mysqli_real_escape_string($conn, $_POST['new_password']);

    // Hash the new password
    $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);

    // Update the user's password and reset token
    $sql = "UPDATE users SET password='$hashed_password', reset_token=NULL WHERE reset_token='$token'";
    mysqli_query($conn, $sql);

    // Redirect to login page with success message
    $_SESSION['message'] = "Your password has been successfully reset.";
    header("Location: login.php");
    exit();
}
?>


<?php
// Configuration
$host = "localhost";
$user = "root";
$password = "";
$database = "mydb";

// Connect to the database
$conn = mysqli_connect($host, $user, $password, $database);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = $_POST['email'];

    // Validate email
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        header('Location: forgot_password.php?error=Invalid%20Email');
        exit();
    }

    // Check if email exists in the database
    $sql = "SELECT id FROM users WHERE email = ?";
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, "s", $email);
    mysqli_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);

    if (mysqli_num_rows($result) == 0) {
        header('Location: forgot_password.php?error=Email%20not%20found');
        exit();
    }

    // Generate reset token
    $token = bin2hex(random_bytes(16));
    $expires = date("Y-m-d H:i:s", time() + 3600); // Token expires in 1 hour

    // Check for existing token and expire it
    $sql = "SELECT id FROM password_reset WHERE user_id = ?";
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, "i", $user_id);
    mysqli_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);

    if (mysqli_num_rows($result) > 0) {
        $sql = "UPDATE password_reset SET is_expired = 1 WHERE user_id = ?";
        $stmt = mysqli_prepare($conn, $sql);
        mysqli_stmt_bind_param($stmt, "i", $user_id);
        mysqli_execute($stmt);
    }

    // Insert new token into database
    $sql = "INSERT INTO password_reset (token, user_id, created_at) VALUES (?, ?, ?)";
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, "sis", $token, $user_id, $expires);
    mysqli_execute($stmt);

    // Close statement
    mysqli_stmt_close($stmt);

    // Send email with reset link
    $to = $email;
    $subject = "Password Reset Request";
    $resetLink = "http://yourdomain.com/reset.php?token=$token";
    $message = "Please click the following link to reset your password:
$resetLink
This link will expire in 1 hour.";

    if (mail($to, $subject, $message)) {
        header('Location: forgot_password.php?success=Check%20your%20email');
        exit();
    } else {
        header('Location: forgot_password.php?error=Email%20could%20not%20be%20sent');
        exit();
    }
}

mysqli_close($conn);
?>


<?php
session_start();

// Database connection details
$host = 'localhost';
$username = 'username';
$password = 'password';
$db_name = 'database';

// Connect to database
$conn = new mysqli($host, $username, $password, $db_name);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Check if form was submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = $_POST['email'];
    
    // Sanitize email
    $email = mysqli_real_escape_string($conn, $email);

    // Check if email exists in database
    $sql = "SELECT id FROM users WHERE email='$email'";
    $result = $conn->query($sql);

    if ($result->num_rows == 0) {
        // Email not found
        echo "<p>Email address not found. Please try again.</p>";
    } else {
        // Generate reset token
        $token = bin2hex(openssl_random_pseudo_bytes(16));
        
        // Update database with reset token and expiry time (24 hours from now)
        $expires = date('Y-m-d H:i:s', strtotime('+24 hours'));
        
        $sql = "UPDATE users SET 
                reset_token = '$token',
                reset_expiry = '$expires'
                WHERE email='$email'";
                
        if ($conn->query($sql)) {
            // Send reset link to email
            $resetLink = "http://".$_SERVER['HTTP_HOST']."/reset-password.php?token=".$token;
            
            $to = $email;
            $subject = "Password Reset Request";
            $message = "
                <html>
                    <body>
                        <h2>Password Reset</h2>
                        <p>Please click the following link to reset your password:</p>
                        <a href='".$resetLink."'>".$resetLink."</a><br><br>
                        <small>This link will expire in 24 hours.</small>
                    </body>
                </html>
            ";
            
            $headers = "From: yourname@example.com\r
";
            $headers .= "Content-type: text/html\r
";
            
            mail($to, $subject, $message, $headers);
            
            echo "<p>We've sent a password reset link to your email. Please check your inbox.</p>";
        } else {
            echo "<p>There was an error resetting your password. Please try again later.</p>";
        }
    }
}

$conn->close();
?>


<?php
session_start();

// Database connection details
$host = 'localhost';
$username = 'username';
$password = 'password';
$db_name = 'database';

// Connect to database
$conn = new mysqli($host, $username, $password, $db_name);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Check if token is provided in URL
if (!isset($_GET['token'])) {
    echo "<p>Invalid reset link. Please request a new password reset.</p>";
    exit();
}

$token = mysqli_real_escape_string($conn, $_GET['token']);

// Get user details based on token
$sql = "SELECT id, email FROM users WHERE reset_token='$token'";
$result = $conn->query($sql);

if ($result->num_rows == 0) {
    echo "<p>Invalid or expired reset link. Please request a new password reset.</p>";
    exit();
}

$row = $result->fetch_assoc();

// Check if token has expired
$sql = "SELECT reset_expiry FROM users WHERE id=".$row['id'];
$expiryResult = $conn->query($sql);
$expiryRow = $expiryResult->fetch_assoc();

if (strtotime($expiryRow['reset_expiry']) < time()) {
    echo "<p>Your password reset link has expired. Please request a new one.</p>";
    exit();
}

// Check if form was submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $newPassword = $_POST['password'];
    $confirmPassword = $_POST['confirm_password'];
    
    // Validate password match
    if ($newPassword != $confirmPassword) {
        echo "<p>Passwords do not match. Please try again.</p>";
        exit();
    }
    
    // Sanitize and hash new password
    $hashedPassword = password_hash($newPassword, PASSWORD_DEFAULT);
    
    // Update user's password and clear reset token
    $sql = "UPDATE users SET 
            password='$hashedPassword',
            reset_token='',
            reset_expiry='0000-00-00 00:00:00'
            WHERE id=".$row['id'];
            
    if ($conn->query($sql)) {
        echo "<p>Password updated successfully. You can now <a href='/login.php'>log in</a>.</p>";
    } else {
        echo "<p>There was an error updating your password. Please try again later.</p>";
    }
}

// Display reset form
?>

<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <h2>Reset Password</h2>
    <form action="reset-password.php?token=<?php echo $token; ?>" method="post">
        <p>New Password:</p>
        <input type="password" name="password" required>
        <br><br>
        <p>Confirm New Password:</p>
        <input type="password" name="confirm_password" required>
        <br><br>
        <input type="submit" value="Reset Password">
    </form>
</body>
</html>

<?php
$conn->close();
?>


<?php
session_start();
include('db_connect.php');

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = mysqli_real_escape_string($conn, $_POST['email']);
    
    // Check if email exists in the database
    $sql = "SELECT id FROM users WHERE email='$email'";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) == 0) {
        die("Email not registered.");
    }
    
    // Generate temporary password
    function generateTempPassword() {
        $length = 8;
        $chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';
        $temp_password = '';
        for ($i = 0; $i < $length; $i++) {
            $random_char = $chars[rand(0, strlen($chars) - 1)];
            $temp_password .= $random_char;
        }
        return $temp_password;
    }
    
    $temp_password = generateTempPassword();
    
    // Update temporary password in the database
    $sql = "UPDATE users SET reset_password='$temp_password' WHERE email='$email'";
    if (!mysqli_query($conn, $sql)) {
        die("Error updating password: " . mysqli_error($conn));
    }
    
    // Send email with temporary password
    $to = $email;
    $subject = "Password Reset Request";
    $message = "<html>
                <head><title>Password Reset</title></head>
                <body>
                    <h2>Reset Your Password</h2>
                    <p>Your temporary password is: $temp_password</p>
                    <a href='http://example.com/reset.php?email=$email&reset=$temp_password'>Click here to reset your password</a>
                    <br><br>
                    This link will expire in 30 minutes.
                </body>
               </html>";
    $headers = "MIME-Version: 1.0\r
";
    $headers .= "Content-type: text/html; charset=UTF-8\r
";
    $headers .= "From: noreply@example.com\r
";
    $headers .= "Reply-To: noreply@example.com\r
";
    
    if (!mail($to, $subject, $message, $headers)) {
        die("Failed to send email.");
    }
    
    echo "An email has been sent with instructions to reset your password.";
}
?>


<?php
session_start();
include('db_connect.php');

if ($_SERVER["REQUEST_METHOD"] == "GET") {
    $email = $_GET['email'];
    $temp_password = $_GET['reset'];
    
    // Check if temp password exists and hasn't expired
    $sql = "SELECT reset_password FROM users WHERE email='$email'";
    $result = mysqli_query($conn, $sql);
    $row = mysqli_fetch_assoc($result);
    
    if ($row['reset_password'] != $temp_password) {
        die("Invalid or expired link.");
    }
    
    // Proceed to password change form
    echo "<h2>Reset Your Password</h2>";
    ?>
    <form action="newpassword.php" method="post">
        New Password: <input type="password" name="newpass" required>
        Confirm Password: <input type="password" name="confirmpass" required>
        <input type="hidden" name="email" value="<?php echo $email; ?>">
        <button type="submit">Submit</button>
    </form>
    <?php
}
?>


<?php
session_start();
include('db_connect.php');

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = $_POST['email'];
    $newpass = $_POST['newpass'];
    $confirmpass = $_POST['confirmpass'];
    
    if ($newpass != $confirmpass) {
        die("Passwords do not match.");
    }
    
    // Update the new password
    $sql = "UPDATE users SET password='$newpass', reset_password='' WHERE email='$email'";
    if (!mysqli_query($conn, $sql)) {
        die("Error updating password: " . mysqli_error($conn));
    }
    
    header("Location: login.php?success=1");
}
?>


<?php
session_start();
include('db_connect.php'); // Include database connection

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = mysqli_real_escape_string($conn, $_POST['email']);

    // Check if email exists in the database
    $sql = "SELECT id FROM users WHERE email='$email'";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) == 1) {
        // Generate a unique token and expiration time
        $token = bin2hex(random_bytes(16));
        $expires = date('Y-m-d H:i:s', strtotime('+1 hour'));
        
        // Update the database with the new token and expiration
        $updateSql = "UPDATE users SET reset_token='$token', reset_expires='$expires' WHERE email='$email'";
        mysqli_query($conn, $updateSql);
        
        // Send reset link via email
        $resetLink = "http://".$_SERVER['HTTP_HOST']."/reset_password.php?token=".$token."&email=".urlencode($email);
        $subject = "Password Reset Request";
        $message = "Please click the following link to reset your password: 

".$resetLink."

This link will expire in 1 hour.";
        
        // Set headers for email
        $headers = 'From: no-reply@example.com' . "\r
" .
                   'Reply-To: no-reply@example.com' . "\r
" .
                   'X-Mailer: PHP/' . phpversion();
        
        if (mail($email, $subject, $message, $headers)) {
            echo "A password reset link has been sent to your email.";
        } else {
            echo "Failed to send the password reset email. Please try again later.";
        }
    } else {
        echo "No account found with this email address.";
    }
}
?>


<?php
session_start();
include('db_connect.php');

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $token = $_POST['token'];
    $newPassword = $_POST['new_password'];
    $confirmPassword = $_POST['confirm_password'];
    
    // Validate password strength (minimum 8 characters)
    if (strlen($newPassword) < 8 || $newPassword != $confirmPassword) {
        die("Passwords do not match or are too short.");
    }
    
    // Hash the new password
    $hashedPassword = password_hash($newPassword, PASSWORD_DEFAULT);
    
    // Update the password and invalidate token
    $sql = "UPDATE users SET password='$hashedPassword', reset_token='', reset_expires='0000-00-00 00:00:00' WHERE reset_token='$token'";
    mysqli_query($conn, $sql);
    
    // Redirect to login page or show success message
    echo "Password has been successfully updated!";
}
?>


<?php
$servername = "localhost";
$username = "root";
$password = "";
$dbname = "your_database";

// Create connection
$conn = mysqli_connect($servername, $username, $password, $dbname);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}
?>


<?php
session_start();
include('db_connection.php'); // Include your database connection

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = mysqli_real_escape_string($conn, $_POST['email']);
    
    // Check if email exists in the database
    $sql = "SELECT id FROM users WHERE email='$email'";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) == 1) {
        // Generate a unique token for password reset
        $token = bin2hex(random_bytes(32));
        
        // Store the token in the database
        $sql = "INSERT INTO password_reset (user_id, token) 
                VALUES (" . mysqli_insert_id($conn) . ", '$token')";
        mysqli_query($conn, $sql);
        
        // Send reset email
        $to = $email;
        $subject = "Password Reset Request";
        $message = "Please click the following link to reset your password:

";
        $message .= "http://yourdomain.com/reset_password.php?token=" . urlencode($token);
        $headers = "From: noreply@yourdomain.com\r
";
        
        if (mail($to, $subject, $message, $headers)) {
            echo "An email has been sent with instructions to reset your password.";
            header("Location: index.php");
            exit();
        } else {
            die("Failed to send the email.");
        }
    } else {
        // Email does not exist
        die("Email not found in our records.");
    }
}
?>


<?php
session_start();
include('db_connection.php');

if (!isset($_GET['token'])) {
    die("Invalid request.");
}

$token = mysqli_real_escape_string($conn, $_GET['token']);

// Check if token exists and is valid
$sql = "SELECT user_id FROM password_reset WHERE token='$token'";
$result = mysqli_query($conn, $sql);

if (mysqli_num_rows($result) != 1) {
    die("Invalid or expired reset link.");
}

$user_id = mysqli_fetch_assoc($result)['user_id'];
?>

<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <h2>Reset Password</h2>
    <form action="reset_password.php" method="post">
        <input type="hidden" name="token" value="<?php echo $token; ?>">
        <label for="new_password">New Password:</label><br>
        <input type="password" id="new_password" name="new_password" required><br>
        <button type="submit">Change Password</button>
    </form>
</body>
</html>

<?php
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $token = mysqli_real_escape_string($conn, $_POST['token']);
    $new_password = mysqli_real_escape_string($conn, $_POST['new_password']);
    
    // Hash the new password
    $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);
    
    // Update the user's password
    $sql = "UPDATE users SET password='$hashed_password' WHERE id=$user_id";
    if (mysqli_query($conn, $sql)) {
        // Delete the token after use
        $sql = "DELETE FROM password_reset WHERE token='$token'";
        mysqli_query($conn, $sql);
        
        echo "Password updated successfully!";
        header("Location: login.php");
        exit();
    } else {
        die("Error updating password.");
    }
}
?>


<?php
session_start();

// Database configuration
$host = 'localhost';
$dbUsername = 'root';
$dbPassword = '';
$dbName = 'mydatabase';

// Connect to database
$conn = new mysqli($host, $dbUsername, $dbPassword, $dbName);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function forgotPassword() {
    global $conn;
    
    // Check if form is submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        $email = mysqli_real_escape_string($conn, $_POST['email']);
        
        // Check if email exists in database
        $sql = "SELECT id FROM users WHERE email='$email'";
        $result = $conn->query($sql);
        
        if ($result->num_rows > 0) {
            // Generate temporary password
            $tempPassword = rand(100000, 999999); // Generates a 6-digit number
            
            // Update database with new password
            $updateSql = "UPDATE users SET password='$tempPassword' WHERE email='$email'";
            if ($conn->query($updateSql)) {
                // Send temporary password to user's email
                $to = $email;
                $subject = "Your Temporary Password";
                $message = "Your temporary password is: " . $tempPassword . "
Please login and change your password.";
                
                // Set headers
                $headers = "From: noreply@example.com" . "\r
";
                $headers .= "Content-type: text/plain; charset=UTF-8" . "\r
";
                
                if (mail($to, $subject, $message, $headers)) {
                    echo "<script>alert('Temporary password has been sent to your email.');</script>";
                } else {
                    echo "<script>alert('Error sending password. Please try again.');"; 
                }
            }
        } else {
            echo "<script>alert('Email not found in our records.');";
        }
    }
}

// Call the function
forgotPassword();

$conn->close();
?>


<?php
// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'your_database';

// Create database connection
$conn = new mysqli($host, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to handle forgot password process
function forgotPassword($email, $conn) {
    // Validate email
    if (empty($email)) {
        return "Email is required";
    }
    
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        return "Invalid email format";
    }

    // Check if email exists in the database
    $sql = "SELECT id FROM users WHERE email = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("s", $email);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows === 0) {
        return "Email not found in our records";
    }

    // Generate reset token
    $token = bin2hex(random_bytes(16));
    $expires = date('Y-m-d H:i:s', strtotime('+1 hour'));

    // Update the database with the new token and expiration time
    $updateSql = "UPDATE users SET reset_token = ?, reset_expires = ? WHERE email = ?";
    $stmt = $conn->prepare($updateSql);
    $stmt->bind_param("sss", $token, $expires, $email);

    if (!$stmt->execute()) {
        return "An error occurred. Please try again later";
    }

    // Send reset email
    $to = $email;
    $subject = "Password Reset Request";
    $message = "
        <html>
            <head></head>
            <body>
                <p>You requested a password reset. Click the link below to reset your password:</p>
                <a href='http://yourwebsite.com/reset-password.php?token=" . $token . "&email=" . urlencode($email) . "'>Reset Password</a>
                <br>
                <small>This link will expire in 1 hour.</small>
            </body>
        </html>
    ";
    
    // Set headers for email
    $headers = "MIME-Version: 1.0" . "\r
";
    $headers .= "Content-type:text/html;charset=UTF-8" . "\r
";
    $headers .= "From: <yourwebsite@example.com>" . "\r
";

    if (mail($to, $subject, $message, $headers)) {
        return "Password reset email has been sent to your email address";
    } else {
        return "Failed to send password reset email. Please try again later.";
    }
}

// Example usage:
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $email = $_POST['email'];
    $result = forgotPassword($email, $conn);
    echo $result;
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <h2>Forgot Password</h2>
    <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
        <input type="email" name="email" placeholder="Enter your email" required><br><br>
        <button type="submit">Reset Password</button>
    </form>
</body>
</html>

// Close database connection
$conn->close();
?>


<?php
// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'test';

// Connect to database
$conn = new mysqli($host, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Check if form was submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Sanitize email input
    $email = mysqli_real_escape_string($conn, $_POST['email']);
    
    // Check if email exists in the database
    $sql = "SELECT * FROM users WHERE email = '$email'";
    $result = $conn->query($sql);
    
    if ($result->num_rows == 1) {
        // Generate a random password
        $new_password = bin2hex(random_bytes(8));
        
        // Update the database with the new password
        $token_expiration = date('Y-m-d H:i:s', strtotime('+1 hour'));
        $sql = "UPDATE users SET 
                    password = '$new_password',
                    reset_token = '" . bin2hex(random_bytes(16)) . "',
                    token_expiration = '$token_expiration'
                WHERE email = '$email'";
        
        if ($conn->query($sql) === TRUE) {
            // Send the new password to the user's email
            $to = $email;
            $subject = 'Password Reset';
            $message = "Your new password is: $new_password

Please login and change your password.";
            $headers = 'From: noreply@example.com';
            
            if (mail($to, $subject, $message, $headers)) {
                // Redirect to success message
                header("Location: forgot_password.php?status=success");
                exit();
            } else {
                echo "Error sending email!";
            }
        } else {
            echo "Error updating password: " . $conn->error;
        }
    } else {
        // Email does not exist in the database
        header("Location: forgot_password.php?status=invalid");
        exit();
    }
}

// Close the database connection
$conn->close();
?>


<?php
session_start();

if (!isset($_GET['token'])) {
    die("Invalid request.");
}

$token = $_GET['token'];
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'test';

$conn = new mysqli($host, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Check if the token exists and is valid
$sql = "SELECT * FROM users WHERE reset_token = '$token' AND token_expiration > NOW()";
$result = $conn->query($sql);

if ($result->num_rows == 1) {
    // Token is valid
    $_SESSION['reset_token'] = $token;
} else {
    die("Invalid or expired token.");
}

$conn->close();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <h2>Reset Password</h2>
    <form action="process_reset.php" method="post">
        <label for="new_password">New Password:</label><br>
        <input type="password" id="new_password" name="new_password"><br><br>
        <input type="submit" value="Change Password">
    </form>
</body>
</html>


session_start();

if (!isset($_SESSION['reset_token']) || empty($_POST)) {
    die("Invalid request.");
}

$new_password = $_POST['new_password'];
$token = $_SESSION['reset_token'];

// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'test';

$conn = new mysqli($host, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Update the password
$sql = "UPDATE users SET 
            password = '$new_password',
            reset_token = NULL,
            token_expiration = NULL
        WHERE reset_token = '$token'";

if ($conn->query($sql) === TRUE) {
    session_unset();
    session_destroy();
    header("Location: login.php?status=success");
} else {
    echo "Error updating password: " . $conn->error;
}

$conn->close();
?>


<?php
// Database connection
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'your_database';

$conn = new mysqli($host, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Check if form is submitted
if (isset($_POST['submit'])) {
    $email = $_POST['email'];
    
    // Sanitize email input
    $email = mysqli_real_escape_string($conn, $email);

    // Check if email exists in database
    $sql = "SELECT id FROM users WHERE email='$email'";
    $result = $conn->query($sql);

    if ($result->num_rows > 0) {
        // Generate a random token for password reset
        $token = bin2hex(random_bytes(16));
        
        // Insert token into the database
        $sql_token = "INSERT INTO password_reset (user_id, token) VALUES ('$id', '$token')";
        $conn->query($sql_token);
        
        // Send email with reset link
        $to = $email;
        $subject = 'Password Reset Request';
        $message = 'Please click the following link to reset your password: http://yourwebsite.com/reset_password.php?token=' . $token;
        $headers = 'From: webmaster@yourwebsite.com';

        if (mail($to, $subject, $message, $headers)) {
            echo "An email has been sent with instructions to reset your password.";
        } else {
            echo "Error sending email.";
        }
    } else {
        echo "Email address not found in our records.";
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <h2>Forgot Password</h2>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <label for="email">Email:</label><br>
        <input type="email" id="email" name="email" required><br><br>
        <input type="submit" name="submit" value="Submit">
    </form>
</body>
</html>


<?php
// Database connection
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'your_database';

$conn = new mysqli($host, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Get token from URL
$token = $_GET['token'];

// Check if token exists in database and is not expired
$sql = "SELECT * FROM password_reset WHERE token='$token'";
$result = $conn->query($sql);

if ($result->num_rows == 1) {
    // Show reset form
    ?>
    <!DOCTYPE html>
    <html>
    <head>
        <title>Reset Password</title>
    </head>
    <body>
        <h2>Reset Password</h2>
        <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
            <label for="password">New Password:</label><br>
            <input type="password" id="password" name="password" required><br><br>
            <label for="confirm_password">Confirm Password:</label><br>
            <input type="password" id="confirm_password" name="confirm_password" required><br><br>
            <input type="hidden" name="token" value="<?php echo $token; ?>">
            <input type="submit" name="reset" value="Reset Password">
        </form>
    </body>
    </html>
    <?php
} else {
    // Token is invalid or expired
    die("Invalid or expired token.");
}

// Update password if form is submitted
if (isset($_POST['reset'])) {
    $token = $_POST['token'];
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];

    if ($password == $confirm_password) {
        // Hash the new password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);
        
        // Update the user's password in the database
        $sql_update = "UPDATE users SET password='$hashed_password' WHERE id=(SELECT user_id FROM password_reset WHERE token='$token')";
        $conn->query($sql_update);
        
        // Delete the reset token
        $sql_delete = "DELETE FROM password_reset WHERE token='$token'";
        $conn->query($sql_delete);
        
        echo "Your password has been reset successfully!";
    } else {
        echo "Passwords do not match.";
    }
}
?>


<?php
// Database connection parameters
$host = 'localhost';
$username = 'username';
$password = 'password';
$database = 'my_database';

// Connect to the database
$conn = mysqli_connect($host, $username, $password, $database);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Check if form is submitted
if (isset($_POST['submit'])) {
    // Sanitize input email
    $email = mysqli_real_escape_string($conn, $_POST['email']);
    
    // Validate email format
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        echo "Invalid email format";
        exit();
    }
    
    // Check if email exists in the database
    $sql = "SELECT id FROM users WHERE email = '$email'";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) == 0) {
        echo "Email not found. Please check your email and try again.";
        exit();
    }
    
    // Generate temporary password
    $chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^&*()';
    $length = strlen($chars);
    $temp_password = substr(str_shuffle($chars), 0, 10);
    
    // Hash the temporary password
    $hashed_password = password_hash($temp_password, PASSWORD_DEFAULT);
    
    // Update the user's password in the database
    $update_sql = "UPDATE users SET password = '$hashed_password' WHERE email = '$email'";
    mysqli_query($conn, $update_sql);
    
    // Send the temporary password to the user's email
    $to = $email;
    $subject = 'Your Temporary Password';
    $message = "Dear User,

Your temporary password is: " . $temp_password . "

Please log in and change your password immediately.

Best regards,
Support Team";
    
    // Set headers
    $headers = 'From: support@yourdomain.com' . "\r
" .
               'Reply-To: support@yourdomain.com' . "\r
" .
               'X-Mailer: PHP/' . phpversion();
    
    if (mail($to, $subject, $message, $headers)) {
        // Redirect to a confirmation page
        header("Location: password_reset_confirmation.php");
        exit();
    } else {
        echo "An error occurred while sending the email. Please try again later.";
        exit();
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <h2>Forgot Password</h2>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <label for="email">Email:</label><br>
        <input type="text" id="email" name="email"><br><br>
        <input type="submit" name="submit" value="Submit">
    </form>
</body>
</html>


<?php
// Database connection file
include("db_connect.php");

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = mysqli_real_escape_string($conn, $_POST['email']);
    
    // Check if email exists in database
    $sql = "SELECT id FROM users WHERE email = '$email'";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) == 1) {
        // Generate a temporary password
        $temp_password = generate_temp_password();
        
        // Update the user's password in the database
        $update_sql = "UPDATE users SET password = '" . md5($temp_password) . "' WHERE email = '$email'";
        mysqli_query($conn, $update_sql);
        
        // Send the temporary password to the user's email
        $to = $email;
        $subject = "Your Temporary Password";
        $message = "Dear User,

Your temporary password is: " . $temp_password . "

Please login and change your password immediately.

Best regards,
Admin Team";
        
        // Set headers for email
        $headers = "From: admin@example.com\r
";
        $headers .= "Reply-To: admin@example.com\r
";
        $headers .= "X-Mailer: PHP/" . phpversion();
        
        if (mail($to, $subject, $message, $headers)) {
            echo "Password reset email has been sent to your email address.";
        } else {
            echo "Failed to send password reset email. Please try again later.";
        }
    } else {
        echo "This email does not exist in our database.";
    }
}

function generate_temp_password() {
    $length = 8;
    $chars = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^&*";
    $temp_pass = substr(str_shuffle($chars), 0, $length);
    return $temp_pass;
}
?>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'your_database';
$username = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$db", $username, $password);
} catch (PDOException $e) {
    die("Could not connect to the database: " . $e->getMessage());
}

// CSRF token
function generateToken() {
    return bin2hex(random_bytes(32));
}

// Generate reset link
function generateResetLink($token) {
    return 'http://yourwebsite.com/reset-password.php?token=' . $token;
}

// Send email function
function sendEmail($to, $subject, $message) {
    $headers = "From: your_email@example.com\r
";
    $headers .= "Content-Type: text/html; charset=UTF-8\r
";

    mail($to, $subject, $message, $headers);
}

// Check if email exists
function isValidEmail($email) {
    // Add your own validation logic here
    return !empty($email) && filter_var($email, FILTER_VALIDATE_EMAIL);
}

// Handle form submission
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    $csrfToken = $_POST['csrf_token'];
    if (!isset($_SESSION['csrf_token']) || $csrfToken !== $_SESSION['csrf_token']) {
        die("Invalid token");
    }

    session_unset();
    session_destroy();

    $email = trim($_POST['email']);
    
    if (!isValidEmail($email)) {
        die("Invalid email address");
    }

    // Check if email exists in database
    $stmt = $conn->prepare('SELECT id FROM users WHERE email = :email');
    $stmt->bindParam(':email', $email);
    $stmt->execute();

    $user = $stmt->fetch(PDO::FETCH_ASSOC);

    if (!$user) {
        die("Email not found");
    }

    // Generate reset token and expiration time
    $resetToken = generateToken();
    $expirationTime = date('Y-m-d H:i:s', strtotime('+1 hour'));

    // Store token in database
    $stmt = $conn->prepare('INSERT INTO password_resets (token, user_id, expires_at) VALUES (:token, :user_id, :expires_at)');
    $stmt->bindParam(':token', $resetToken);
    $stmt->bindParam(':user_id', $user['id']);
    $stmt->bindParam(':expires_at', $expirationTime);
    $stmt->execute();

    // Create reset link
    $resetLink = generateResetLink($resetToken);

    // Send email to user
    $subject = "Password Reset Request";
    $message = "Click the following link to reset your password: <a href='$resetLink'>Reset Password</a><br>
               This link will expire in 1 hour.";

    sendEmail($email, $subject, $message);

    echo "A password reset link has been sent to your email address.";
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <h2>Forgot Password</h2>
    <?php
    session_start();
    $_SESSION['csrf_token'] = generateToken();
    ?>
    <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
        <input type="hidden" name="csrf_token" value="<?php echo $_SESSION['csrf_token']; ?>">
        <label>Email:</label><br>
        <input type="email" name="email" required><br><br>
        <input type="submit" value="Submit">
    </form>
</body>
</html>


<?php
// Include database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'your_database';

// Connect to the database
$conn = mysqli_connect($host, $username, $password, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

if (isset($_POST['reset'])) { // Assuming the form's submit button name is 'reset'
    $email = $_POST['email'];
    
    // Check if the email exists in the database
    $sql = "SELECT * FROM users WHERE email = ?";
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, "s", $email);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);
    
    if (mysqli_num_rows($result) > 0) {
        // Generate a temporary password
        $temp_password = substr(md5(time()), 0, 6); // You can generate a more secure password
        
        // Update the database with the temporary password
        $update_sql = "UPDATE users SET password = ?, temp_password_used = 'no' WHERE email = ?";
        $stmt_update = mysqli_prepare($conn, $update_sql);
        mysqli_stmt_bind_param($stmt_update, "ss", $temp_password, $email);
        
        if (mysqli_stmt_execute($stmt_update)) {
            // Send the temporary password to the user's email
            $to = $email;
            $subject = 'Password Reset';
            $message = "Your temporary password is: $temp_password
Please use this to log in and change your password.";
            
            mail($to, $subject, $message);
            
            // Redirect back with a success message
            header("Location: forgot_password.php?msg=success");
            exit();
        } else {
            echo "Error updating password: " . mysqli_error($conn);
        }
    } else {
        echo "Email does not exist in our records.";
    }
    
    mysqli_close($conn);
} else {
    // Show an error if form wasn't submitted
    header("Location: forgot_password.php?msg=error");
}
?>


if ($row['temp_password_used'] == 'no') {
    // Set session for temp password used
    $_SESSION['id'] = $row['id'];
    header("Location: change_password.php");
    exit();
}


session_start();

if (isset($_SESSION['id'])) {
    $user_id = $_SESSION['id'];
    
    if (isset($_POST['new_password']) && isset($_POST['confirm_new_password'])) {
        $new_password = $_POST['new_password'];
        $confirm_password = $_POST['confirm_new_password'];
        
        if ($new_password == $confirm_password) {
            // Hash the new password
            $hashed_password = md5($new_password); // Consider using a stronger hashing algorithm like bcrypt
            
            // Update the database
            $sql = "UPDATE users SET password = ?, temp_password_used = 'yes' WHERE id = ?";
            $stmt = mysqli_prepare($conn, $sql);
            mysqli_stmt_bind_param($stmt, "si", $hashed_password, $user_id);
            
            if (mysqli_stmt_execute($stmt)) {
                // Clear the session and redirect to login
                session_unset();
                session_destroy();
                header("Location: login.php");
                exit();
            } else {
                echo "Error changing password: " . mysqli_error($conn);
            }
        } else {
            echo "Passwords do not match!";
        }
    }
} else {
    // Redirect unauthorized access
    header("Location: login.php");
}


<?php
// Database configuration
$host = 'localhost';
$username = 'your_username';
$password = 'your_password';
$dbname = 'your_database';

// Create connection
$conn = new mysqli($host, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to generate random token
function generateToken() {
    return bin2hex(random_bytes(16));
}

// Function to send password reset email
function sendPasswordResetEmail($email, $resetLink) {
    require 'PHPMailer/PHPMailer.php';
    require 'PHPMailer/SMTP.php';
    require 'PHPMailer/Exception.php';

    try {
        $mail = new PHPMailer\PHPMailer();
        $mail->isSMTP();
        $mail->Host = 'smtp.example.com'; // Replace with your SMTP server
        $mail->SMTPAuth = true;
        $mail->Username = 'your_email@example.com'; // Your email address
        $mail->Password = 'your_password'; // Your email password
        $mail->SMTPSecure = 'tls';
        $mail->Port = 587;

        $mail->setFrom('your_email@example.com', 'Your Name');
        $mail->addAddress($email);
        $mail->Subject = 'Password Reset Request';
        
        $mailContent = "Dear User,<br><br>
                        You have requested to reset your password.<br>
                        Please click the following link to reset your password:<br>
                        <a href='$resetLink'>Reset Password</a><br><br>
                        If you did not request this password reset, please ignore this email.";

        $mail->Body = $mailContent;
        
        if ($mail->send()) {
            return true;
        } else {
            return false;
        }
    } catch (Exception $e) {
        echo "Message could not be sent.Mailer Error: {$mail->ErrorInfo}";
        return false;
    }
}

// Function to handle password reset request
function handlePasswordResetRequest($email, $conn) {
    // Check if email exists in database
    $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
    $stmt->bind_param("s", $email);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows === 1) {
        // Generate reset token and expiration time
        $token = generateToken();
        $expires = date('Y-m-d H:i:s', strtotime('+1 hour'));

        // Update database with new token and expiration
        $updateStmt = $conn->prepare("UPDATE users SET reset_token = ?, reset_expires = ? WHERE email = ?");
        $updateStmt->bind_param("sss", $token, $expires, $email);
        $updateStmt->execute();

        if ($updateStmt->affected_rows === 1) {
            // Generate reset link
            $resetLink = "http://yourwebsite.com/reset-password.php?token=$token";
            
            // Send email with reset link
            if (sendPasswordResetEmail($email, $resetLink)) {
                echo "Password reset email sent successfully!";
                return true;
            } else {
                echo "Failed to send password reset email.";
                return false;
            }
        } else {
            echo "Error updating user record.";
            return false;
        }
    } else {
        echo "Email not found in our records.";
        return false;
    }
}

// Example usage:
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    $email = $_POST['email'];
    
    // Sanitize input
    $email = filter_var($email, FILTER_SANITIZE_EMAIL);
    
    if (filter_var($email, FILTER_VALIDATE_EMAIL)) {
        handlePasswordResetRequest($email, $conn);
    } else {
        echo "Please enter a valid email address.";
    }
}

// Close database connection
$conn->close();
?>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'mydatabase';

// Create connection
$conn = new mysqli($host, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// If form is submitted
if (isset($_POST['email'])) {
    $email = $_POST['email'];
    
    // Check if email exists in database
    $sql = "SELECT * FROM users WHERE email = '$email'";
    $result = $conn->query($sql);

    if ($result->num_rows > 0) {
        // Generate reset token
        $token = bin2hex(random_bytes(16));
        
        // Set token expiration time (e.g., 1 hour from now)
        $expires = date("Y-m-d H:i:s", strtotime("+1 hour"));
        
        // Update the database with the new token and expiration time
        $sql = "UPDATE users SET reset_token = '$token', reset_expires = '$expires' WHERE email = '$email'";
        if ($conn->query($sql) === TRUE) {
            // Send reset password email
            $to = $email;
            $subject = 'Password Reset Request';
            $message = '
                <html>
                    <head>
                        <title>Password Reset</title>
                    </head>
                    <body>
                        <p>Hello,</p>
                        <p>You requested to reset your password. Click the link below to reset it:</p>
                        <a href="http://yourwebsite.com/reset-password.php?token='.$token.'&email='.$email.'">Reset Password</a>
                        <p>This link will expire in one hour.</p>
                    </body>
                </html>';
            $headers = 'MIME-Version: 1.0' . "\r
";
            $headers .= 'Content-type: text/html; charset=UTF-8' . "\r
";
            
            // Send the email
            mail($to, $subject, $message, $headers);
            echo "An email has been sent to your address with instructions to reset your password.";
        } else {
            echo "Error updating record: " . $conn->error;
        }
    } else {
        echo "Email not found in our records. Please check your email and try again.";
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <h2>Forgot Password</h2>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <label for="email">Email:</label><br>
        <input type="email" id="email" name="email"><br><br>
        <input type="submit" value="Reset Password">
    </form>
</body>
</html>

// Reset password page (reset-password.php)
<?php
// Check if token and email are provided in URL
if (!isset($_GET['token']) || !isset($_GET['email'])) {
    die("Invalid request");
}

$token = $_GET['token'];
$email = $_GET['email'];

// Verify the token and email combination exists and hasn't expired
$sql = "SELECT * FROM users WHERE email = '$email' AND reset_token = '$token' AND reset_expires > NOW()";
$result = $conn->query($sql);

if ($result->num_rows == 1) {
    // Show password reset form
?>
<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <h2>Reset Password</h2>
    <form action="reset-password.php" method="post">
        <input type="hidden" name="token" value="<?php echo $token; ?>">
        <input type="hidden" name="email" value="<?php echo $email; ?>">
        <label for="new_password">New Password:</label><br>
        <input type="password" id="new_password" name="new_password"><br><br>
        <label for="confirm_password">Confirm Password:</label><br>
        <input type="password" id="confirm_password" name="confirm_password"><br><br>
        <input type="submit" value="Reset Password">
    </form>
</body>
</html>

<?php
} else {
    echo "Invalid or expired reset link.";
}

// Handle password reset form submission
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $token = $_POST['token'];
    $email = $_POST['email'];
    $new_password = $_POST['new_password'];
    $confirm_password = $_POST['confirm_password'];

    if ($new_password != $confirm_password) {
        die("Passwords do not match");
    }

    // Hash the new password
    $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);

    // Update the database with the new password and clear the token
    $sql = "UPDATE users SET password = '$hashed_password', reset_token = NULL, reset_expires = NULL WHERE email = '$email'";
    
    if ($conn->query($sql) === TRUE) {
        echo "Password has been successfully updated!";
    } else {
        echo "Error updating password: " . $conn->error;
    }
}

$conn->close();
?>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'your_database';
$user = 'your_username';
$password = 'your_password';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $user, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

// Generate a random token
function generateToken($length = 32) {
    return bin2hex(random_bytes($length));
}

// Reset password function
function resetPassword($conn, $email) {
    // Check if user exists
    try {
        $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
        $stmt->execute([$email]);
        $user = $stmt->fetch(PDO::FETCH_ASSOC);
        
        if (!$user) {
            return "Email not found!";
        }
        
        // Generate token and expiration time
        $token = generateToken();
        $expires = date('Y-m-d H:i:s', strtotime('+1 hour'));
        
        // Insert reset token into database
        $stmt = $conn->prepare("INSERT INTO password_resets (user_id, token, expires) VALUES (?, ?, ?)");
        $stmt->execute([$user['id'], $token, $expires]);
        
        // Send email with reset link
        $resetLink = "http://your-site.com/reset_password.php?token=" . $token;
        sendResetEmail($email, $resetLink);
        
        return "Password reset instructions have been sent to your email!";
    } catch(PDOException $e) {
        return "Error: " . $e->getMessage();
    }
}

// Send reset email function
function sendResetEmail($to, $link) {
    $from = 'no-reply@your-site.com';
    $subject = 'Password Reset Request';
    
    $message = "
        <html>
            <body>
                <h2>Password Reset</h2>
                <p>Please click the link below to reset your password:</p>
                <a href='$link'>$link</a>
                <br><br>
                If you did not request this password reset, please ignore this email.
            </body>
        </html>
    ";
    
    // Using PHPMailer for better email handling
    require 'PHPMailer/PHPMailer.php';
    $mail = new PHPMailer();
    
    try {
        $mail->isSMTP();
        $mail->Host = 'smtp.example.com';  // Replace with your SMTP server
        $mail->SMTPAuth = true;
        $mail->Username = 'your_email@example.com';
        $mail->Password = 'your_password';
        $mail->Port = 587;  // or 465 if using SSL
        
        $mail->setFrom($from, 'Your Site Name');
        $mail->addAddress($to);
        
        $mail->isHTML(true);
        $mail->Subject = $subject;
        $mail->Body = $message;
        
        if ($mail->send()) {
            return true;
        } else {
            return false;
        }
    } catch (Exception $e) {
        echo "Mailer Error: " . $e->getMessage();
        return false;
    }
}

// Update password function
function updatePassword($conn, $token, $new_password) {
    try {
        // Check if token exists and is valid
        $stmt = $conn->prepare("SELECT user_id FROM password_resets WHERE token = ? AND expires > NOW()");
        $stmt->execute([$token]);
        $result = $stmt->fetch(PDO::FETCH_ASSOC);
        
        if (!$result) {
            return "Invalid or expired token!";
        }
        
        // Hash the new password
        $hashedPassword = password_hash($new_password, PASSWORD_DEFAULT);
        
        // Update user's password
        $stmt = $conn->prepare("UPDATE users SET password = ? WHERE id = ?");
        $stmt->execute([$hashedPassword, $result['user_id']]);
        
        // Delete used token
        $stmt = $conn->prepare("DELETE FROM password_resets WHERE token = ?");
        $stmt->execute([$token]);
        
        return "Password updated successfully!";
    } catch(PDOException $e) {
        return "Error: " . $e->getMessage();
    }
}

// Example usage:
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    if (isset($_POST['email'])) {
        echo resetPassword($conn, $_POST['email']);
    } elseif (isset($_GET['token'], $_POST['new_password'])) {
        echo updatePassword($conn, $_GET['token'], $_POST['new_password']);
    }
}
?>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'mydatabase';

// Create connection
$conn = new mysqli($host, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = $_POST['email'];

    // Sanitize input
    $email = mysqli_real_escape_string($conn, $email);

    // Check if email exists in the database
    $sql = "SELECT id FROM users WHERE email='$email'";
    $result = $conn->query($sql);

    if ($result->num_rows == 1) {
        // Generate a random token
        $token = bin2hex(random_bytes(32));

        // Insert token into the database
        $sql_token = "INSERT INTO password_reset (user_id, token) VALUES (".$result->fetch_assoc()['id'].", '$token')";
        if ($conn->query($sql_token)) {
            // Send email to user with reset link
            $to = $email;
            $subject = "Password Reset Request";
            $message = "
                <html>
                    <head>
                        <title>Password Reset</title>
                    </head>
                    <body>
                        <h2>Password Reset</h2>
                        <p>Please click the following link to reset your password:</p>
                        <a href='http://yourdomain.com/reset_password.php?token=$token'>Reset Password</a><br><br>
                        <small>This link will expire in 1 hour.</small>
                    </body>
                </html>
            ";
            $headers = "MIME-Version: 1.0" . "\r
";
            $headers .= "Content-type:text/html;charset=UTF-8" . "\r
";
            $headers .= "From: yourdomain.com <noreply@yourdomain.com>" . "\r
";

            if (mail($to, $subject, $message, $headers)) {
                echo "An email has been sent to you with a password reset link.";
            } else {
                echo "Error sending email. Please try again later.";
            }
        } else {
            echo "Error resetting password. Please try again later.";
        }
    } else {
        echo "Email not found in our records.";
    }
}

$conn->close();
?>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'mydatabase';

// Create connection
$conn = new mysqli($host, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $token = $_GET['token'];
    $new_password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];

    // Validate password match
    if ($new_password != $confirm_password) {
        die("Passwords do not match. Please try again.");
    }

    // Hash the new password
    $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);

    // Check if token exists and is valid
    $sql = "SELECT user_id FROM password_reset WHERE token='$token'";
    $result = $conn->query($sql);

    if ($result->num_rows == 1) {
        $user_id = $result->fetch_assoc()['user_id'];

        // Update the user's password
        $update_sql = "UPDATE users SET password='$hashed_password' WHERE id=$user_id";
        if ($conn->query($update_sql)) {
            // Delete used token
            $delete_sql = "DELETE FROM password_reset WHERE token='$token'";
            if ($conn->query($delete_sql)) {
                echo "Password reset successful. You can now login with your new password.";
            }
        } else {
            echo "Error updating password. Please try again later.";
        }
    } else {
        echo "Invalid or expired reset link. Please request a new password reset.";
    }
}

$conn->close();
?>


<?php
include("db_connection.php"); // Include your database connection file

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = mysqli_real_escape_string($conn, $_POST['email']);
    
    // Validate email format
    if (!preg_match("/^([a-zA-Z0-9_\-\.]+)@([a-zA-Z0-9_\-\.]+)\.([a-zA-Z]{2,5})$/", $email)) {
        header("Location: forgot_password.php?error=Invalid%20Email%20Format");
        exit();
    }
    
    // Check if email exists in the database
    $sql = "SELECT id FROM users WHERE email='$email'";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) == 0) {
        header("Location: forgot_password.php?error=Email%20not%20found");
        exit();
    } else {
        // Generate a random string for the reset token
        $token = md5(uniqid(rand(), true));
        
        // Store the token in the database with an expiration time (e.g., 1 hour)
        $expires = date('Y-m-d H:i:s', strtotime('+1 hour'));
        $sql = "INSERT INTO password_resets (user_id, token, expires) VALUES (".$row['id'].", '$token', '$expires')";
        mysqli_query($conn, $sql);
        
        // Send email with reset link
        $to = $email;
        $subject = "Password Reset Request";
        $message = "Please click the following link to reset your password: 

";
        $message .= "http://yourwebsite.com/reset_password.php?token=$token";
        $headers = "From: yourwebsite@example.com";
        
        if (mail($to, $subject, $message, $headers)) {
            header("Location: forgot_password.php?success=Password%20reset%20link%20sent");
            exit();
        } else {
            header("Location: forgot_password.php?error=Email%20could%20not%20be%20sent");
            exit();
        }
    }
}
?>


<?php
include("db_connection.php"); // Include your database connection file

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $token = mysqli_real_escape_string($conn, $_POST['token']);
    $password = mysqli_real_escape_string($conn, $_POST['password']);
    $confirm_password = mysqli_real_escape_string($conn, $_POST['confirm_password']);
    
    // Check if the token is valid and not expired
    $sql = "SELECT user_id FROM password_resets WHERE token='$token' AND expires > NOW()";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) == 0) {
        header("Location: reset_password.php?error=Invalid%20or%20expired%20token");
        exit();
    } else {
        // Check if passwords match
        if ($password != $confirm_password) {
            header("Location: reset_password.php?error=Passwords%20do%20not%20match");
            exit();
        }
        
        // Update the user's password
        $row = mysqli_fetch_assoc($result);
        $user_id = $row['user_id'];
        $new_password_hash = md5($password); // You should use a better hashing method like bcrypt
        
        $sql = "UPDATE users SET password='$new_password_hash' WHERE id=$user_id";
        mysqli_query($conn, $sql);
        
        // Delete the token from the database
        $sql = "DELETE FROM password_resets WHERE token='$token'";
        mysqli_query($conn, $sql);
        
        header("Location: login.php?success=Password%20reset%20successful");
        exit();
    }
}
?>


<?php
// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'mydatabase';

// Create database connection
$conn = new mysqli($host, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to handle password reset request
function forgotPassword($email) {
    global $conn;

    // Generate a random token
    $token = md5(time() . rand(0, 1000));

    // Check if email exists in the database
    $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
    $stmt->bind_param('s', $email);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        // Update token and expiration time (1 hour from now)
        $expiration_time = date("Y-m-d H:i:s", time() + 3600); // 1 hour

        $update_stmt = $conn->prepare("UPDATE users SET reset_token = ?, reset_expires = ? WHERE email = ?");
        $update_stmt->bind_param('sss', $token, $expiration_time, $email);
        $update_stmt->execute();

        // Send password reset link to user's email
        $to = $email;
        $subject = "Password Reset Request";
        $message = "Please click the following link to reset your password: 

";
        $message .= "http://example.com/reset-password.php?token=$token

";
        $message .= "This link will expire in 1 hour.";
        
        // Set headers
        $headers = "From: noreply@example.com\r
";
        $headers .= "Reply-To: noreply@example.com\r
";
        $headers .= "X-Mailer: PHP/" . phpversion();

        mail($to, $subject, $message, $headers);

        return "Password reset instructions have been sent to your email.";
    } else {
        return "Email address not found in our records.";
    }
}

// Handle form submission
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    if (!empty($_POST['email'])) {
        $email = $_POST['email'];
        echo forgotPassword($email);
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <h2>Forgot Password</h2>
    
    <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
        <input type="email" name="email" placeholder="Enter your email address" required><br><br>
        <button type="submit">Reset Password</button>
    </form>

    <?php
    // Show any error/success messages here if needed
    ?>
    
</body>
</html>


<?php
// Include database connection
require_once 'db_connection.php';

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $email = mysqli_real_escape_string($conn, $_POST['email']);
    
    // Check if email exists in the database
    $sql = "SELECT id FROM users WHERE email='$email'";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) == 0) {
        die("Email not found. Please try again.");
    }
    
    // Generate a unique token for password reset
    $token = bin2hex(random_bytes(16)); // Generates a 32-character string
    $expires = time() + 7200; // Token expires after 2 hours
    
    // Store the token in the database
    $sql = "INSERT INTO password_resets (email, token, expires) 
            VALUES ('$email', '$token', '$expires')";
    mysqli_query($conn, $sql);
    
    // Send reset email to user
    require_once 'PHPMailer/PHPMailer.php';
    require_once 'PHPMailer/SMTP.php';
    require_once 'PHPMailer/Exception.php';
    
    try {
        $mail = new PHPMailer\PHPMailer();
        
        // SMTP settings
        $mail->isSMTP();
        $mail->Host = 'smtp.example.com'; // Replace with your SMTP host
        $mail->SMTPAuth = true;
        $mail->Username = 'your_email@example.com';
        $mail->Password = 'your_password';
        $mail->Port = 587; // or 465
        
        // Email content
        $mail->setFrom('your_email@example.com', 'Reset Password');
        $mail->addAddress($email);
        
        $reset_link = "http://example.com/reset_password.php?token=$token";
        $message = "
            <h2>Password Reset Request</h2>
            <p>Click the following link to reset your password:</p>
            <a href='$reset_link'>$reset_link</a>
            <br><br>
            <p>If you didn't request this, please ignore this email.</p>
        ";
        
        $mail->isHTML(true);
        $mail->Subject = 'Password Reset Request';
        $mail->Body = $message;
        
        if ($mail->send()) {
            echo "An email has been sent to your address with instructions on how to reset your password.";
        } else {
            die("Email sending failed: " . $mail->ErrorInfo);
        }
    } catch (Exception $e) {
        die("Message could not be sent. Mailer Error: " . $e->getMessage());
    }
    
} else {
    // If form is accessed directly
    header('Location: forgot_password_form.html');
}
?>


<?php
// Include database connection
require_once 'db_connection.php';

if (!isset($_GET['token'])) {
    die("No token provided.");
}

$token = mysqli_real_escape_string($conn, $_GET['token']);

// Check if token exists in database and is not expired
$sql = "SELECT * FROM password_resets 
        WHERE token='$token' AND expires > CURRENT_TIMESTAMP";
$result = mysqli_query($conn, $sql);

if (mysqli_num_rows($result) == 0) {
    die("Invalid or expired token.");
}

// Show password reset form
?>

<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <h2>Reset Password</h2>
    <form action="reset_password.php" method="post">
        <input type="hidden" name="token" value="<?php echo $token; ?>">
        <label for="new_password">New Password:</label><br>
        <input type="password" id="new_password" name="new_password" required><br><br>
        <label for="confirm_password">Confirm Password:</label><br>
        <input type="password" id="confirm_password" name="confirm_password" required><br><br>
        <button type="submit">Reset Password</button>
    </form>
</body>
</html>

<?php
// Handle password reset form submission
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $token = mysqli_real_escape_string($conn, $_POST['token']);
    $new_password = mysqli_real_escape_string($conn, $_POST['new_password']);
    $confirm_password = mysqli_real_escape_string($conn, $_POST['confirm_password']);
    
    if ($new_password != $confirm_password) {
        die("Passwords do not match.");
    }
    
    // Hash the new password
    $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);
    
    // Update user's password in the database
    $sql = "SELECT email FROM password_resets WHERE token='$token'";
    $result = mysqli_query($conn, $sql);
    $row = mysqli_fetch_assoc($result);
    $email = $row['email'];
    
    $update_sql = "UPDATE users SET password='$hashed_password' WHERE email='$email'";
    mysqli_query($conn, $update_sql);
    
    // Delete the token from password_resets table
    $delete_sql = "DELETE FROM password_resets WHERE token='$token'";
    mysqli_query($conn, $delete_sql);
    
    echo "Password reset successful!";
}
?>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$db_name = 'mydatabase';

// Create connection
$conn = new mysqli($host, $username, $password, $db_name);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Session start
session_start();

// CSRF token generation
function generateToken() {
    return bin2hex(random_bytes(16));
}

// Generate and store CSRF token in session
if (!isset($_SESSION['token'])) {
    $_SESSION['token'] = generateToken();
}

// Email validation function
function validateEmail($email) {
    if (filter_var($email, FILTER_VALIDATE_EMAIL)) {
        return true;
    } else {
        return false;
    }
}

// Forgot password function
function forgotPassword($conn, $email) {
    // Check if email exists in database
    $sql = "SELECT id FROM users WHERE email = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("s", $email);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows === 0) {
        return false;
    }

    // Generate reset token
    $resetToken = generateToken();
    
    // Store reset token and expiration time in database
    $currentTime = time();
    $expirationTime = $currentTime + 3600; // Token expires after 1 hour
    
    $sql = "UPDATE users SET reset_token = ?, reset_expires = ? WHERE email = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("sis", $resetToken, $expirationTime, $email);
    $stmt->execute();

    // Send password reset link to user's email
    $resetLink = "http://yourdomain.com/reset-password.php?token=" . $resetToken;
    
    $to = $email;
    $subject = "Password Reset Request";
    $message = "Please click the following link to reset your password:

" . $resetLink . "

If you did not request this password reset, please ignore this email.";
    
    // Using PHP's mail function (you may want to use a more reliable method like PHPMailer in production)
    if (mail($to, $subject, $message)) {
        return true;
    } else {
        return false;
    }
}

// Reset password function
function resetPassword($conn, $token, $newPassword) {
    // Check token validity and expiration
    $sql = "SELECT id, email FROM users WHERE reset_token = ? AND reset_expires > ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("si", $token, time());
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows === 0) {
        return false;
    }

    // Update password
    $hashedPassword = password_hash($newPassword, PASSWORD_DEFAULT);
    
    $sql = "UPDATE users SET password = ?, reset_token = NULL, reset_expires = NULL WHERE reset_token = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("ss", $hashedPassword, $token);
    $stmt->execute();

    return true;
}

// Main forgot password form handling
if (isset($_POST['forgot-password'])) {
    // Validate CSRF token
    if (!isset($_POST['csrf_token']) || $_POST['csrf_token'] !== $_SESSION['token']) {
        die("Invalid request");
    }

    $email = $_POST['email'];
    
    if (!validateEmail($email)) {
        die("Invalid email format");
    }

    if (forgotPassword($conn, $email)) {
        echo "Password reset instructions have been sent to your email address.";
    } else {
        echo "An error occurred. Please try again later.";
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <h2>Forgot Password</h2>
    
    <?php
    // If there's an error, display it here
    if (isset($_GET['error'])) {
        echo "<p style='color: red;'>Error: " . $_GET['error'] . "</p>";
    }
    ?>

    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <input type="hidden" name="csrf_token" value="<?php echo $_SESSION['token']; ?>">
        
        <label for="email">Email:</label>
        <input type="text" id="email" name="email">
        
        <button type="submit" name="forgot-password">Reset Password</button>
    </form>

    <p>Don't have an account? <a href="signup.php">Sign Up</a></p>
</body>
</html>


<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 20px;
            background-color: #f5f5f5;
        }
        .container {
            max-width: 400px;
            margin: 0 auto;
            background-color: white;
            padding: 20px;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }
        .form-group {
            margin-bottom: 20px;
        }
        input[type="email"] {
            width: 100%;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-sizing: border-box;
        }
        button {
            background-color: #4CAF50;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            width: 100%;
        }
        button:hover {
            background-color: #45a049;
        }
        .message {
            margin-top: 10px;
            color: red;
        }
    </style>
</head>
<body>
    <div class="container">
        <?php
        // Check if message parameter exists
        $message = isset($_GET['message']) ? $_GET['message'] : '';
        if ($message == 'success') {
            echo "<p style='color: green;'>Check your email for password reset instructions!</p>";
        } elseif ($message == 'invalid') {
            echo "<p style='color: red;'>Invalid email or token!</p>";
        }
        ?>
        
        <h2>Forgot Password</h2>
        <form action="forgot_password.php" method="post">
            <div class="form-group">
                <label for="email">Email:</label><br>
                <input type="email" id="email" name="email" required>
            </div>
            <button type="submit">Reset Password</button>
        </form>
    </div>
</body>
</html>


<?php
// Database connection settings
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

try {
    // Connect to database
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get email from form
    $email = $_POST['email'];
    
    // Prepare statement to check if email exists in database
    $stmt = $conn->prepare("SELECT id, username FROM users WHERE email = ?");
    $stmt->execute([$email]);
    $row = $stmt->fetch(PDO::FETCH_ASSOC);
    
    if ($row) {
        // Generate a random token
        $token = bin2hex(random_bytes(32));
        $token_hash = sha1($token);
        
        // Store token in database
        $stmt = $conn->prepare("INSERT INTO password_reset (user_id, token, created_at) VALUES (?, ?, NOW())");
        $stmt->execute([$row['id'], $token_hash]);
        
        // Send email with reset link
        $to = $email;
        $subject = "Password Reset Request";
        $message = "
            <html>
                <body>
                    <h2>Password Reset</h2>
                    <p>Please click the following link to reset your password:</p>
                    <a href='http://yourwebsite.com/reset_password.php?token=$token&username=" . urlencode($row['username']) . "'>Reset Password</a><br>
                    <p>If you did not request this password reset, please ignore this email.</p>
                </body>
            </html>
        ";
        $headers = "MIME-Version: 1.0" . "\r
";
        $headers .= "Content-type:text/html;charset=UTF-8" . "\r
";
        $headers .= "From: yourwebsite.com <noreply@yourwebsite.com>" . "\r
";
        
        mail($to, $subject, $message, $headers);
        
        // Redirect back to forgot password page with success message
        header("Location: forgot_password.php?message=success");
        exit();
    } else {
        // Email not found in database
        echo "<script>alert('Email address not found!'); window.history.back();</script>";
    }
}
?>


<?php
// Database connection settings
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

try {
    // Connect to database
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

// Check if token and username are provided
if (isset($_GET['token']) && isset($_GET['username'])) {
    $token = $_GET['token'];
    $username = $_GET['username'];
    
    // Get hashed token from database
    $stmt = $conn->prepare("SELECT pr.token FROM password_reset pr INNER JOIN users u ON pr.user_id = u.id WHERE u.username = ? AND pr.token = SHA1(?)");
    $stmt->execute([$username, $token]);
    $row = $stmt->fetch(PDO::FETCH_ASSOC);
    
    if ($row) {
        // Token is valid
        ?>
        <html>
            <head>
                <title>Reset Password</title>
                <style>
                    body {
                        font-family: Arial, sans-serif;
                        margin: 0;
                        padding: 20px;
                        background-color: #f5f5f5;
                    }
                    .container {
                        max-width: 400px;
                        margin: 0 auto;
                        background-color: white;
                        padding: 20px;
                        border-radius: 5px;
                        box-shadow: 0 0 10px rgba(0,0,0,0.1);
                    }
                    .form-group {
                        margin-bottom: 20px;
                    }
                    input[type="password"] {
                        width: 100%;
                        padding: 10px;
                        border: 1px solid #ddd;
                        border-radius: 4px;
                        box-sizing: border-box;
                    }
                    button {
                        background-color: #4CAF50;
                        color: white;
                        padding: 10px 20px;
                        border: none;
                        border-radius: 4px;
                        cursor: pointer;
                        width: 100%;
                    }
                    button:hover {
                        background-color: #45a049;
                    }
                    .message {
                        margin-top: 10px;
                        color: red;
                    }
                </style>
            </head>
            <body>
                <div class="container">
                    <h2>Reset Password</h2>
                    <?php
                    if (isset($_POST['new_password']) && isset($_POST['confirm_password'])) {
                        $new_password = $_POST['new_password'];
                        $confirm_password = $_POST['confirm_password'];
                        
                        if ($new_password == $confirm_password) {
                            // Hash the password
                            $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);
                            
                            // Update the password in database
                            $stmt = $conn->prepare("UPDATE users SET password = ? WHERE username = ?");
                            $stmt->execute([$hashed_password, $username]);
                            
                            // Delete the reset token
                            $stmt = $conn->prepare("DELETE FROM password_reset WHERE user_id = (SELECT id FROM users WHERE username = ?)");
                            $stmt->execute([$username]);
                            
                            // Redirect to login page with success message
                            header("Location: login.php?message=success");
                            exit();
                        } else {
                            echo "<div class='message'>Passwords do not match!</div>";
                        }
                    }
                    ?>
                    <form action="<?php $_SERVER['PHP_SELF'] ?>" method="post">
                        <input type="hidden" name="token" value="<?php echo $token; ?>">
                        <div class="form-group">
                            <label for="new_password">New Password:</label><br>
                            <input type="password" id="new_password" name="new_password" required>
                        </div>
                        <div class="form-group">
                            <label for="confirm_password">Confirm Password:</label><br>
                            <input type="password" id="confirm_password" name="confirm_password" required>
                        </div>
                        <button type="submit">Set New Password</button>
                    </form>
                </div>
            </body>
        </html>
        <?php
    } else {
        // Invalid token or username
        header("Location: forgot_password.php?message=invalid");
        exit();
    }
} else {
    // Missing parameters
    header("Location: forgot_password.php?message=invalid");
    exit();
}
?>


<?php
session_start();
include('db_connection.php'); // Include your database connection

if (isset($_POST['email'])) {
    $email = mysqli_real_escape_string($conn, $_POST['email']);
    
    // Check if email exists in the database
    $sql = "SELECT id FROM users WHERE email = '$email'";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) == 0) {
        echo "<script>alert('No account found with this email!');</script>";
    } else {
        // Generate a random token
        $token = bin2hex(random_bytes(32)); // 64 characters long
        
        // Store the token and expiration time in the database
        $expires = date("Y-m-d H:i:s", time() + 3600); // Token expires after 1 hour
        
        $sql = "UPDATE users SET reset_token = '$token', reset_expires = '$expires' WHERE email = '$email'";
        mysqli_query($conn, $sql);
        
        // Send the password reset link to the user's email
        $reset_link = "http://your-site.com/reset_password.php?token=$token";
        sendPasswordResetEmail($email, $reset_link, $expires);
        
        echo "<script>alert('Password reset instructions have been sent to your email!');</script>";
    }
}
?>

<?php
function sendPasswordResetEmail($email, $reset_link, $expires) {
    // Set up the email content
    $to = $email;
    $subject = "Password Reset Request";
    
    $message = "
        <html>
            <body>
                <p>We received a password reset request for your account.</p>
                <p>Click on the following link to reset your password:</p>
                <a href='$reset_link'>Reset Password</a><br><br>
                <p>This link will expire at: $expires</p>
            </body>
        </html>
    ";
    
    // Set headers
    $headers = "MIME-Version: 1.0" . "\r
";
    $headers .= "Content-type: text/html; charset=UTF-8" . "\r
";
    $headers .= "From: Your Website <your.email@example.com>" . "\r
";
    
    // Send the email
    mail($to, $subject, $message, $headers);
}
?>


<?php
session_start();
include('db_connection.php'); // Include your database connection

// Check if token is provided and valid
if (isset($_GET['token'])) {
    $token = mysqli_real_escape_string($conn, $_GET['token']);
    
    // Get user data from the database
    $sql = "SELECT id, reset_token, reset_expires FROM users WHERE reset_token = '$token'";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) == 0) {
        die("<script>alert('Invalid token!');</script>");
    }
    
    $row = mysqli_fetch_assoc($result);
    // Check if the token has expired
    if ($row['reset_expires'] < date("Y-m-d H:i:s")) {
        die("<script>alert('Token has expired! Please request a new password reset.');</script>");
    }
} else {
    die("<script>alert('No token provided!');</script>");
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <h2>Reset Password</h2>
    
    <?php
    if (isset($_POST['submit'])) {
        // Validate the new password
        $password = $_POST['password'];
        $confirm_password = $_POST['confirm_password'];
        
        if ($password != $confirm_password) {
            die("<script>alert('Passwords do not match!');</script>");
        }
        
        if (strlen($password) < 8) {
            die("<script>alert('Password must be at least 8 characters long!');</script>");
        }
        
        // Check for at least one letter and number
        if (!preg_match("#^[a-zA-Z0-9]+$#", $password)) {
            die("<script>alert('Password must contain only letters and numbers!');</script>");
        }
        
        // Hash the new password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);
        
        // Update the database with the new password
        $sql = "UPDATE users SET password = '$hashed_password', reset_token = NULL, reset_expires = NULL WHERE id = {$row['id']}";
        mysqli_query($conn, $sql);
        
        echo "<script>alert('Password has been successfully updated!');</script>";
    }
    ?>
    
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <input type="password" name="password" placeholder="Enter new password" required><br>
        <input type="password" name="confirm_password" placeholder="Confirm new password" required><br><br>
        <button type="submit" name="submit">Reset Password</button>
    </form>
</body>
</html>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    die("Could not connect to the database: " . $e->getMessage());
}

// Function to generate a secure token
function generateToken() {
    return bin2hex(random_bytes(16));
}

// Check if email exists in database
function checkEmailExists($email, $conn) {
    try {
        $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
        $stmt->execute([$email]);
        return $stmt->rowCount() > 0;
    } catch (PDOException $e) {
        die("Error checking email: " . $e->getMessage());
    }
}

// Function to generate and store reset token
function generateResetToken($email, $conn) {
    try {
        // Generate a secure token
        $token = generateToken();
        
        // Insert into database
        $stmt = $conn->prepare("INSERT INTO password_resets (user_email, token, created_at) VALUES (?, ?, NOW())");
        $stmt->execute([$email, $token]);
        
        return $token;
    } catch (PDOException $e) {
        die("Error generating reset token: " . $e->getMessage());
    }
}

// Function to send reset password email
function sendResetEmail($email, $resetLink) {
    $to = $email;
    $subject = 'Password Reset Request';
    $message = "<html>
                <body>
                    <p>We received a request to reset your password. Click the link below to reset it:</p>
                    <a href='" . $resetLink . "'>" . $resetLink . "</a><br>
                    <p>If you did not make this request, you can safely ignore this email.</p>
                </body>
               </html>";
    $headers = 'MIME-Version: 1.0' . "\r
";
    $headers .= 'Content-type: text/html; charset=UTF-8' . "\r
";
    
    mail($to, $subject, $message, $headers);
}

// Function to handle password reset request
function handleForgotPassword($email) {
    if (checkEmailExists($email, $conn)) {
        $token = generateResetToken($email, $conn);
        $resetLink = 'http://example.com/reset-password.php?token=' . $token;
        sendResetEmail($email, $resetLink);
        return true;
    } else {
        return false;
    }
}

// Function to validate token and display reset form
function handleTokenValidation($token) {
    try {
        // Check if token exists in database and hasn't expired (assuming 1 hour validity)
        $stmt = $conn->prepare("SELECT user_email FROM password_resets WHERE token = ? AND created_at >= NOW() - INTERVAL 1 HOUR");
        $stmt->execute([$token]);
        
        if ($stmt->rowCount() == 1) {
            // Token is valid
            return true;
        } else {
            // Invalid or expired token
            return false;
        }
    } catch (PDOException $e) {
        die("Error validating token: " . $e->getMessage());
    }
}

// Function to update password after reset
function updatePassword($email, $newPassword) {
    try {
        $stmt = $conn->prepare("UPDATE users SET password = ? WHERE email = ?");
        $hashedPassword = password_hash($newPassword, PASSWORD_DEFAULT);
        $stmt->execute([$hashedPassword, $email]);
        
        // Delete the reset token
        $deleteStmt = $conn->prepare("DELETE FROM password_resets WHERE user_email = ?");
        $deleteStmt->execute([$email]);
        
        return true;
    } catch (PDOException $e) {
        die("Error updating password: " . $e->getMessage());
    }
}

// Example usage for forgot password page
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $email = $_POST['email'];
    
    if (empty($email)) {
        echo "Email is required!";
    } else if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        echo "Please enter a valid email!";
    } else {
        if (handleForgotPassword($email)) {
            echo "A password reset link has been sent to your email address!";
        } else {
            echo "Email not found in our database!";
        }
    }
}

// Example usage for reset password page
if (isset($_GET['token'])) {
    $token = $_GET['token'];
    
    if (!handleTokenValidation($token)) {
        die("Invalid or expired token!");
    }
    
    // Display the password reset form
    if ($_SERVER['REQUEST_METHOD'] == 'POST') {
        $newPassword = $_POST['new_password'];
        
        if (empty($newPassword)) {
            echo "Please enter a new password!";
        } else {
            try {
                $stmt = $conn->prepare("SELECT user_email FROM password_resets WHERE token = ?");
                $stmt->execute([$token]);
                $email = $stmt->fetch(PDO::FETCH_ASSOC)['user_email'];
                
                if (updatePassword($email, $newPassword)) {
                    echo "Your password has been successfully reset!";
                    // Optionally, log the user out
                    session_start();
                    $_SESSION = array();
                    session_destroy();
                } else {
                    echo "Error resetting your password!";
                }
            } catch (PDOException $e) {
                die("Error fetching email: " . $e->getMessage());
            }
        }
    }
}

// Close database connection
$conn = null;
?>


<?php
// forgot_password.php

$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "myDB";

// Create connection
$conn = new mysqli($servername, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

$email = $_POST['email'];

// Check if email exists in the database
$sql = "SELECT id FROM users WHERE email = ?";
$stmt = $conn->prepare($sql);
$stmt->bind_param("s", $email);
$stmt->execute();
$result = $stmt->get_result();

if ($result->num_rows == 0) {
    header("Location: forgot_password_form.html?error=Email%20not%20found");
    exit();
}

// Generate a random password and reset token
$randomPassword = generateRandomString(8);
$resetToken = generateRandomString(32);

// Update the database with the new password and token
$sql = "UPDATE users SET password = ?, reset_token = ? WHERE email = ?";
$stmt = $conn->prepare($sql);
$passwordHash = password_hash($randomPassword, PASSWORD_DEFAULT);
$stmt->bind_param("sss", $passwordHash, $resetToken, $email);
$stmt->execute();

// Send the reset email
$to = $email;
$subject = "Reset Your Password";
$message = "
    <html>
        <body>
            <h2>Reset Your Password</h2>
            <p>Please click on the following link to set your new password:</p>
            <a href='http://yourdomain.com/reset_password.php?token=$resetToken'>Reset Password</a><br>
            <p>If you did not request this, please ignore this email.</p>
        </body>
    </html
";
$headers = "MIME-Version: 1.0" . "\r
";
$headers .= "Content-type:text/html;charset=UTF-8" . "\r
";
mail($to, $subject, $message, $headers);

header("Location: forgot_password_form.html?success=Please%20check%20your%20email%20for%20reset%20instructions.");
exit();

function generateRandomString($length = 8) {
    $characters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890';
    $randomString = '';
    for ($i = 0; $i < $length; $i++) {
        $randomString .= $characters[rand(0, strlen($characters)-1)];
    }
    return $randomString;
}
?>


<?php
// reset_password.php

$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "myDB";

$conn = new mysqli($servername, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

if (!isset($_GET['token']) || !isset($_POST['password']) || !isset($_POST['confirmPassword'])) {
    header("Location: reset_password_form.html?error=Invalid%20request");
    exit();
}

$resetToken = $_GET['token'];
$password = $_POST['password'];
$confirmPassword = $_POST['confirmPassword'];

if ($password != $confirmPassword) {
    header("Location: reset_password_form.html?error=Passwords%20do%20not%20match");
    exit();
}

// Check if the token is valid
$sql = "SELECT id, user_id FROM reset_tokens WHERE token = ?";
$stmt = $conn->prepare($sql);
$stmt->bind_param("s", $resetToken);
$stmt->execute();
$result = $stmt->get_result();

if ($result->num_rows == 0) {
    header("Location: reset_password_form.html?error=Invalid%20or%20expired%20token");
    exit();
}

$row = $result->fetch_assoc();
$user_id = $row['user_id'];

// Update the user's password
$sql = "UPDATE users SET password = ? WHERE id = ?";
$stmt = $conn->prepare($sql);
$passwordHash = password_hash($password, PASSWORD_DEFAULT);
$stmt->bind_param("si", $passwordHash, $user_id);
$stmt->execute();

// Invalidate the reset token
$sql = "DELETE FROM reset_tokens WHERE token = ?";
$stmt = $conn->prepare($sql);
$stmt->bind_param("s", $resetToken);
$stmt->execute();

header("Location: login.php?success=Password%20has%20been%20reset");
exit();
?>


<?php
// Database connection
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'mydatabase';

$conn = new mysqli($host, $username, $password, $dbname);
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to send password reset email
function sendPasswordResetEmail($email, $token) {
    $to = $email;
    $subject = 'Password Reset Request';
    $message = '
        <html>
            <head>
                <title>Password Reset</title>
            </head>
            <body>
                <h2>Password Reset Request</h2>
                <p>Please click the link below to reset your password:</p>
                <a href="http://example.com/reset-password.php?token=' . $token . '">Reset Password</a>
                <br><br>
                <p>If you did not request a password reset, please ignore this email.</p>
            </body>
        </html>';
    $headers = 'MIME-Version: 1.0' . "\r
";
    $headers .= 'Content-type: text/html; charset=UTF-8' . "\r
";

    mail($to, $subject, $message, $headers);
}

// Function to generate random token
function generateToken() {
    return bin2hex(random_bytes(32));
}

// Check if email exists in database
function isEmailExists($email) {
    global $conn;
    $sql = "SELECT id FROM users WHERE email = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("s", $email);
    $stmt->execute();
    $result = $stmt->get_result();

    return $result->num_rows > 0;
}

// Reset password form
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $email = $_POST['email'];
    
    if (isEmailExists($email)) {
        // Generate token and store in database
        $token = generateToken();
        
        $sql = "INSERT INTO password_resets (email, token) VALUES (?, ?)";
        $stmt = $conn->prepare($sql);
        $stmt->bind_param("ss", $email, $token);
        $stmt->execute();
        
        sendPasswordResetEmail($email, $token);
        echo 'A password reset link has been sent to your email address.';
    } else {
        echo 'Email not found in our records.';
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <h2>Forgot Password</h2>
    <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
        <label for="email">Email:</label><br>
        <input type="text" id="email" name="email"><br><br>
        <input type="submit" value="Send Reset Link">
    </form>
</body>
</html>

// Reset password page (reset-password.php)
<?php
if ($_SERVER['REQUEST_METHOD'] == 'GET' && isset($_GET['token'])) {
    $token = $_GET['token'];
    
    // Check if token exists in database
    global $conn;
    $sql = "SELECT email FROM password_resets WHERE token = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("s", $token);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        // Show reset form
        ?>
        <html>
            <head>
                <title>Reset Password</title>
            </head>
            <body>
                <h2>Reset Password</h2>
                <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
                    <label for="password">New Password:</label><br>
                    <input type="password" id="password" name="password"><br><br>
                    <input type="hidden" name="token" value="<?php echo $token; ?>">
                    <input type="submit" value="Reset Password">
                </form>
            </body>
        </html>
        <?php
    } else {
        echo 'Invalid or expired token.';
    }
}

if ($_SERVER['REQUEST_METHOD'] == 'POST' && isset($_POST['token'])) {
    $token = $_POST['token'];
    $password = $_POST['password'];

    // Update password in database
    global $conn;
    $sql = "SELECT email FROM password_resets WHERE token = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("s", $token);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        $email = $result->fetch_assoc()['email'];
        
        // Update user password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);
        $sql = "UPDATE users SET password = ? WHERE email = ?";
        $stmt = $conn->prepare($sql);
        $stmt->bind_param("ss", $hashed_password, $email);
        $stmt->execute();

        // Delete token from database
        $sql = "DELETE FROM password_resets WHERE token = ?";
        $stmt = $conn->prepare($sql);
        $stmt->bind_param("s", $token);
        $stmt->execute();

        echo 'Password reset successful. You can now login with your new password.';
    } else {
        echo 'Invalid or expired token.';
    }
}
?>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$database = 'my_database';

// Create connection
$conn = new mysqli($host, $username, $password, $database);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to send password reset email
function sendPasswordResetEmail($email, $resetLink) {
    $to = $email;
    $subject = 'Password Reset Request';
    $message = "
        <html>
        <body>
            <h2>Password Reset</h2>
            <p>We received a request to reset your password. Please click the following link to reset your password:</p>
            <a href='" . $resetLink . "'>" . $resetLink . "</a><br><br>
            <small>If you did not request this password reset, please ignore this email.</small>
        </body>
        </html>
    ";
    
    // Set headers
    $headers = 'MIME-Version: 1.0' . "\r
";
    $headers .= 'Content-type: text/html; charset=iso-8859-1' . "\r
";
    $headers .= 'From: <your_email@example.com>' . "\r
";
    
    // Send email
    mail($to, $subject, $message, $headers);
}

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = $_POST['email'];
    
    // Validate email
    if (empty($email)) {
        echo "Email is required!";
        exit();
    }
    
    // Check if email exists in database
    $sql = "SELECT id FROM users WHERE email = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("s", $email);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows == 0) {
        echo "Email not found!";
        exit();
    }
    
    // Generate reset token
    $resetToken = bin2hex(random_bytes(16));
    $resetUrl = 'http://example.com/reset-password.php?token=' . $resetToken;
    $expires = date('Y-m-d H:i:s', time() + 3600); // Token expires in 1 hour
    
    // Insert reset token into database
    $sql = "INSERT INTO password_resets (user_id, token, created_at, expires_at)
            VALUES (?, ?, NOW(), ?)";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("iss", $result->fetch_assoc()['id'], $resetToken, $expires);
    
    if ($stmt->execute()) {
        // Send reset email
        sendPasswordResetEmail($email, $resetUrl);
        echo "Password reset link has been sent to your email!";
    } else {
        echo "Error sending password reset request!";
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <h2>Forgot Password</h2>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <label for="email">Email:</label><br>
        <input type="email" id="email" name="email" required><br><br>
        <button type="submit">Send Reset Link</button>
    </form>
</body>
</html>


<?php
// Database configuration (same as above)
$host = 'localhost';
$username = 'root';
$password = '';
$database = 'my_database';

$conn = new mysqli($host, $username, $password, $database);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Get token from URL
if (!isset($_GET['token'])) {
    header("Location: forgot-password.php");
    exit();
}

$resetToken = $_GET['token'];

// Check if token is valid and hasn't expired
$sql = "SELECT user_id FROM password_resets 
        WHERE token = ? AND created_at > DATE_SUB(NOW(), INTERVAL 1 HOUR) AND used = 0";
$stmt = $conn->prepare($sql);
$stmt->bind_param("s", $resetToken);
$stmt->execute();
$result = $stmt->get_result();

if ($result->num_rows == 0) {
    die("Invalid or expired reset token!");
}

$user_id = $result->fetch_assoc()['user_id'];

// If form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $newPassword = $_POST['password'];
    $confirmPassword = $_POST['confirm_password'];
    
    if ($newPassword !== $confirmPassword) {
        die("Passwords do not match!");
    }
    
    // Update user's password
    $hashedPassword = password_hash($newPassword, PASSWORD_DEFAULT);
    $sql = "UPDATE users SET password = ? WHERE id = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("si", $hashedPassword, $user_id);
    
    if ($stmt->execute()) {
        // Mark token as used
        $sql = "UPDATE password_resets SET used = 1 WHERE token = ?";
        $stmt = $conn->prepare($sql);
        $stmt->bind_param("s", $resetToken);
        $stmt->execute();
        
        echo "Password reset successful!";
    } else {
        echo "Error resetting password!";
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <h2>Reset Password</h2>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>?token=<?php echo $resetToken; ?>" method="post">
        <label for="password">New Password:</label><br>
        <input type="password" id="password" name="password" required><br><br>
        <label for="confirm_password">Confirm New Password:</label><br>
        <input type="password" id="confirm_password" name="confirm_password" required><br><br>
        <button type="submit">Reset Password</button>
    </form>
</body>
</html>


<?php
// Include database connection
include('db_connection.php');

if (isset($_POST['submit'])) {
    $email = mysqli_real_escape_string($conn, $_POST['email']);
    
    // Check if email exists in the database
    $query = "SELECT * FROM users WHERE email = '$email'";
    $result = mysqli_query($conn, $query);
    $row = mysqli_fetch_assoc($result);
    
    if (mysqli_num_rows($result) == 0) {
        echo "Email does not exist!";
    } else {
        // Generate reset token
        $resetToken = md5(uniqid());
        
        // Update database with the reset token
        $updateQuery = "UPDATE users SET password_reset_token = '$resetToken' WHERE email = '$email'";
        mysqli_query($conn, $updateQuery);
        
        // Send reset email
        $to = $email;
        $subject = "Password Reset Request";
        $message = "Please click the following link to reset your password: http://yourwebsite.com/reset_password.php?token=$resetToken";
        $headers = "From: yourwebsite.com\r
";
        
        mail($to, $subject, $message, $headers);
        
        echo "Password reset email has been sent!";
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <h2>Forgot Password</h2>
    <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
        <input type="email" name="email" placeholder="Enter your email" required><br><br>
        <input type="submit" name="submit" value="Reset Password">
    </form>
</body>
</html>


<?php
// Include database connection
include('db_connection.php');

if (isset($_GET['token'])) {
    $token = mysqli_real_escape_string($conn, $_GET['token']);
    
    // Check if token exists in the database
    $query = "SELECT * FROM users WHERE password_reset_token = '$token'";
    $result = mysqli_query($conn, $query);
    $row = mysqli_fetch_assoc($result);
    
    if (mysqli_num_rows($result) == 0) {
        echo "Invalid reset link!";
    } else {
        // Show password reset form
?>
<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <h2>Reset Password</h2>
    <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
        <input type="password" name="new_password" placeholder="Enter new password" required><br><br>
        <input type="password" name="confirm_password" placeholder="Confirm password" required><br><br>
        <input type="hidden" name="token" value="<?php echo $token; ?>">
        <input type="submit" name="change_password" value="Change Password">
    </form>
</body>
</html>

<?php
    }
} else {
    echo "No token provided!";
}
?>

<?php
if (isset($_POST['change_password'])) {
    $new_password = mysqli_real_escape_string($conn, $_POST['new_password']);
    $confirm_password = mysqli_real_escape_string($conn, $_POST['confirm_password']);
    $token = mysqli_real_escape_string($conn, $_POST['token']);
    
    if ($new_password != $confirm_password) {
        echo "Passwords do not match!";
    } else {
        // Update password in the database
        $hash_password = md5($new_password);
        
        $updateQuery = "UPDATE users SET 
                        password = '$hash_password',
                        password_reset_token = '' 
                      WHERE password_reset_token = '$token'";
        mysqli_query($conn, $updateQuery);
        
        echo "Password has been successfully updated!";
    }
}
?>


<?php
$servername = "localhost";
$username = "root";
$password = "";
$dbname = "your_database";

// Create connection
$conn = mysqli_connect($servername, $username, $password, $dbname);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}
?>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'mydatabase';
$username = 'root';
$password = '';

try {
    // Create database connection
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

    // Function to send password reset email
    function sendResetEmail($email, $userId) {
        global $conn;
        
        // Generate a random token
        $token = bin2hex(random_bytes(16));
        
        // Store the token in the database
        $stmt = $conn->prepare("INSERT INTO password_resets (user_id, token) VALUES (:userId, :token)");
        $stmt->execute([
            'userId' => $userId,
            'token' => $token
        ]);
        
        // Send email to user
        $subject = "Password Reset Request";
        $message = "Please click the following link to reset your password:

http://example.com/reset_password.php?token=$token";
        mail($email, $subject, $message);
    }

    // Function to handle password reset
    function resetPassword($password, $token) {
        global $conn;
        
        // Check if token exists in the database
        $stmt = $conn->prepare("SELECT * FROM password_resets WHERE token = :token");
        $stmt->execute(['token' => $token]);
        
        if ($stmt->rowCount() > 0) {
            $reset = $stmt->fetch(PDO::FETCH_ASSOC);
            
            // Update the user's password
            $hash = password_hash($password, PASSWORD_DEFAULT);
            $updateStmt = $conn->prepare("UPDATE users SET password = :hash WHERE id = :userId");
            $updateStmt->execute([
                'hash' => $hash,
                'userId' => $reset['user_id']
            ]);
            
            // Delete the reset token
            $deleteStmt = $conn->prepare("DELETE FROM password_resets WHERE token = :token");
            $deleteStmt->execute(['token' => $token]);
            
            return true;
        }
        
        return false;
    }

} catch(PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <?php
    if ($_SERVER['REQUEST_METHOD'] == 'POST') {
        try {
            // Verify email exists in database
            $email = $_POST['email'];
            $stmt = $conn->prepare("SELECT id FROM users WHERE email = :email");
            $stmt->execute(['email' => $email]);
            
            if ($stmt->rowCount() > 0) {
                $user = $stmt->fetch(PDO::FETCH_ASSOC);
                sendResetEmail($email, $user['id']);
                echo "A password reset link has been sent to your email address.";
            } else {
                echo "No account found with this email address.";
            }
        } catch(PDOException $e) {
            echo "Error: " . $e->getMessage();
        }
    }
    ?>

    <h2>Forgot Password</h2>
    <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
        <label>Email:</label><br>
        <input type="email" name="email" required><br>
        <button type="submit">Send Reset Link</button>
    </form>
</body>
</html>


<?php
session_start();
include('db_connection.php'); // Include your database connection file

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $email = $_POST['email'];

    if (empty($email) || !filter_var($email, FILTER_VALIDATE_EMAIL)) {
        $_SESSION['message'] = "Please enter a valid email address!";
        header("Location: forgot_password.php");
        exit();
    }

    // Check if the email exists in the database
    $sql = "SELECT id FROM users WHERE email='$email'";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) == 0) {
        $_SESSION['message'] = "Email not found!";
        header("Location: forgot_password.php");
        exit();
    }

    // Generate a random token for password reset
    $token = bin2hex(random_bytes(16));
    
    // Store the token in the database with an expiration time
    $expiration_time = date('Y-m-d H:i:s', time() + 3600); // Token expires after 1 hour
    
    $sql = "INSERT INTO password_reset_tokens (user_id, token, expires) 
            VALUES (?, ?, ?)";
            
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, "iss", $id, $token, $expiration_time);
    
    if (mysqli_stmt_execute($stmt)) {
        // Send email with password reset link
        $reset_link = "http://yourwebsite.com/reset_password.php?email=$email&token=$token";
        
        $to = $email;
        $subject = "Password Reset Request";
        $message = "Please click the following link to reset your password: 
" . $reset_link . "

This link will expire in 1 hour.";
        
        // Set up mail headers
        $headers = "From: yourwebsite@example.com\r
";
        $headers .= "Reply-To: yourwebsite@example.com\r
";
        $headers .= "X-Mailer: PHP/" . phpversion();
        
        // Send the email
        if (mail($to, $subject, $message, $headers)) {
            $_SESSION['message'] = "Password reset instructions have been sent to your email address!";
            header("Location: forgot_password.php");
            exit();
        } else {
            $_SESSION['message'] = "Error sending password reset email!";
            header("Location: forgot_password.php");
            exit();
        }
    } else {
        $_SESSION['message'] = "Error resetting password! Please try again.";
        header("Location: forgot_password.php");
        exit();
    }
}

// Close database connection
mysqli_close($conn);
?>


<?php
require_once 'db_connect.php';

if (isset($_POST['email'])) {
    $email = $_POST['email'];
    
    // Query to check if email exists in database
    $stmt = $conn->prepare("SELECT id, username FROM users WHERE email = ?");
    $stmt->bind_param('s', $email);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows > 0) {
        // Generate a unique token for password reset
        $token = bin2hex(random_bytes(32));
        $expires = date("Y-m-d H:i:s", time() + 3600); // Token expires after 1 hour
        
        // Store the token in the database
        $stmt_token = $conn->prepare("INSERT INTO password_reset_tokens (user_id, token, expires) VALUES (?, ?, ?)");
        $row = $result->fetch_assoc();
        $stmt_token->bind_param('iss', $row['id'], $token, $expires);
        
        if ($stmt_token->execute()) {
            // Send email with reset link
            $to = $email;
            $subject = "Password Reset Request";
            $message = "Dear " . $row['username'] . ",

Please click the following link to reset your password:

http://localhost/reset_password.php?token=" . $token . "

If you didn't request this password reset, please ignore this email.

Best regards,
Your Website";
            $headers = "From: noreply@yourwebsite.com" . "\r
";
            
            if (mail($to, $subject, $message, $headers)) {
                echo "<script>alert('Reset link has been sent to your email.'); window.location.href='index.php';</script>";
            } else {
                echo "Error sending email.";
            }
        } else {
            echo "Error storing reset token. Please try again later.";
        }
    } else {
        // Email not found in database
        echo "<script>alert('Email address not found.'); window.location.href='index.php';</script>";
    }
    
    $stmt->close();
    $conn->close();
}


<?php
require_once 'db_connect.php';

if (isset($_GET['token'])) {
    $token = $_GET['token'];
} else {
    die("No token provided.");
}

// Check if token exists and is valid
$stmt = $conn->prepare("SELECT * FROM password_reset_tokens WHERE token = ? AND expires > NOW()");
$stmt->bind_param('s', $token);
$stmt->execute();
$result = $stmt->get_result();

if ($result->num_rows == 1) {
    // Token is valid, show reset form
    if (isset($_POST['password'])) {
        $new_password = $_POST['password'];
        
        // Update the user's password
        $row = $result->fetch_assoc();
        $stmt_update = $conn->prepare("UPDATE users SET password = ? WHERE id = ?");
        $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);
        $stmt_update->bind_param('si', $hashed_password, $row['user_id']);
        
        if ($stmt_update->execute()) {
            // Delete the token after use
            $stmt_delete = $conn->prepare("DELETE FROM password_reset_tokens WHERE token = ?");
            $stmt_delete->bind_param('s', $token);
            $stmt_delete->execute();
            
            echo "<script>alert('Password has been reset successfully!'); window.location.href='login.php';</script>";
        } else {
            echo "Error resetting password. Please try again.";
        }
    ?>
    <form action="<?php echo $_SERVER['PHP_SELF'] ?>?token=<?php echo $token ?>" method="post">
        <label for="password">New Password:</label><br>
        <input type="password" id="password" name="password" required><br><br>
        <button type="submit">Reset Password</button>
    </form>
    <?php
    } else {
        // Show the reset form
        ?>
        <h2>Reset Password</h2>
        <p>Please enter your new password:</p>
        <form action="<?php echo $_SERVER['PHP_SELF'] ?>?token=<?php echo $token ?>" method="post">
            <label for="password">New Password:</label><br>
            <input type="password" id="password" name="password" required><br><br>
            <button type="submit">Reset Password</button>
        </form>
        <?php
    }
} else {
    // Token is invalid or expired
    die("Invalid or expired token.");
}

$stmt->close();
$conn->close();
?>


<?php
$host = 'localhost';
$username = 'root'; // Change to your database username
$password = '';     // Change to your database password
$db_name = 'your_database'; // Change to your database name

$conn = new mysqli($host, $username, $password, $db_name);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}
?>


<?php
include('db_connection.php'); // Include your database connection file

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = mysqli_real_escape_string($conn, $_POST['email']);
    
    if (empty($email)) {
        header("Location: forgot.php?error=empty");
        exit();
    }
    
    $sql = "SELECT id FROM users WHERE email='$email'";
    $result = mysqli_query($conn, $sql);
    
    if (!$result || mysqli_num_rows($result) == 0) {
        header("Location: forgot.php?error=invalid");
        exit();
    } else {
        $user_id = mysqli_fetch_assoc($result)['id'];
        
        // Generate a random string
        $token = md5(rand());
        $sql_insert = "INSERT INTO password_reset (user_id, token) VALUES ('$user_id', '$token')";
        if (!mysqli_query($conn, $sql_insert)) {
            die('Error inserting token: ' . mysqli_error($conn));
        }
        
        // Send email
        $to = $email;
        $subject = "Password Reset Request";
        $message = "
            <html>
            <head>
                <title>Password Reset</title>
            </head>
            <body>
                <p>Please click the following link to reset your password:</p>
                <a href='http://yourdomain.com/reset_password.php?token=$token&id=$user_id'>
                    http://yourdomain.com/reset_password.php?token=$token&id=$user_id
                </a><br><br>
                <p>If you did not request this password reset, please disregard this email.</p>
            </body>
            </html>
        ";
        $headers = "From: your.email@yourdomain.com\r
";
        $headers .= "Content-type: text/html\r
";
        
        if (mail($to, $subject, $message, $headers)) {
            header("Location: forgot.php?error=sent");
            exit();
        } else {
            echo "Error sending email. Please try again.";
        }
    }
}
?>


<?php
include('db_connection.php'); // Include your database connection file

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $token = mysqli_real_escape_string($conn, $_POST['token']);
    $user_id = mysqli_real_escape_string($conn, $_POST['user_id']);
    $new_password = mysqli_real_escape_string($conn, $_POST['newpassword']);
    
    // Check if token exists and is valid
    $sql_check_token = "SELECT id FROM password_reset WHERE token='$token' AND user_id='$user_id'";
    $result = mysqli_query($conn, $sql_check_token);
    
    if (!$result || mysqli_num_rows($result) == 0) {
        die("Invalid or expired reset link.");
    }
    
    // Update the password in the users table
    $hash_password = md5($new_password); // You should use a more secure hashing method like password_hash()
    $sql_update = "UPDATE users SET password='$hash_password' WHERE id='$user_id'";
    if (!mysqli_query($conn, $sql_update)) {
        die('Error updating password: ' . mysqli_error($conn));
    }
    
    // Delete the reset token after use
    $sql_delete_token = "DELETE FROM password_reset WHERE token='$token'";
    if (mysqli_query($conn, $sql_delete_token)) {
        header("Location: login.php"); // Redirect to login page
        exit();
    }
}
?>


<?php
// db.php
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'test';

$conn = new mysqli($host, $username, $password, $dbname);
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}
?>

<?php
// forgot_password.php
include('db.php');

session_start();

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = $_POST['email'];
    
    // Validate email
    if (empty($email)) {
        die("Email is required");
    }
    
    // Check if email exists in the database
    $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
    $stmt->bind_param('s', $email);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows == 0) {
        die("Email does not exist");
    }
    
    // Generate reset token
    $token = bin2hex(random_bytes(32));
    $exp_time = time() + (1 * 60 * 60); // Expires in 1 hour
    
    // Update the database with the new token and expiry time
    $updateStmt = $conn->prepare("UPDATE users SET reset_token = ?, reset_expiry = ? WHERE email = ?");
    $updateStmt->bind_param('sis', $token, $exp_time, $email);
    $updateStmt->execute();
    
    // Send email with reset link
    $to = $email;
    $subject = "Password Reset Request";
    $message = "Please click the following link to reset your password:

http://example.com/reset_password.php?token=$token

This link expires in 1 hour.";
    $headers = "From: webmaster@example.com\r
";
    
    if (mail($to, $subject, $message, $headers)) {
        echo "An email has been sent with instructions to reset your password.";
    } else {
        die("Failed to send email");
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <h2>Forgot Password</h2>
    <form action="forgot_password.php" method="post">
        <input type="email" name="email" placeholder="Enter your email" required><br><br>
        <input type="submit" value="Reset Password">
    </form>
</body>
</html>

<?php
// reset_password.php
include('db.php');

session_start();

if (isset($_GET['token'])) {
    $token = $_GET['token'];
    
    // Check if token exists and is not expired
    $stmt = $conn->prepare("SELECT id, email FROM users WHERE reset_token = ? AND reset_expiry > ?");
    $stmt->bind_param('si', $token, time());
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows == 0) {
        die("Invalid or expired token");
    }
    
    // Display password change form
    ?>
    <html>
    <head>
        <title>Reset Password</title>
    </head>
    <body>
        <h2>Reset Password</h2>
        <form action="change_password.php" method="post">
            <input type="password" name="new_password" placeholder="Enter new password" required><br><br>
            <input type="hidden" name="token" value="<?php echo $token; ?>">
            <input type="submit" value="Change Password">
        </form>
    </body>
    </html>
    <?php
} else {
    die("No token provided");
}
?>

<?php
// change_password.php
include('db.php');

session_start();

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $token = $_POST['token'];
    $new_password = $_POST['new_password'];
    
    // Check if token is valid and not expired
    $stmt = $conn->prepare("SELECT id, email FROM users WHERE reset_token = ? AND reset_expiry > ?");
    $stmt->bind_param('si', $token, time());
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows == 0) {
        die("Invalid or expired token");
    }
    
    // Hash the new password
    $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);
    
    // Update the user's password
    $updateStmt = $conn->prepare("UPDATE users SET password = ?, reset_token = NULL, reset_expiry = NULL WHERE reset_token = ?");
    $updateStmt->bind_param('ss', $hashed_password, $token);
    $updateStmt->execute();
    
    echo "Password has been updated successfully!";
}
?>


<?php
include('db_connection.php'); // Include your database connection file

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = mysqli_real_escape_string($conn, $_POST['email']);

    // Check if email exists in the database
    $sql = "SELECT id FROM users WHERE email = '$email'";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) == 1) {
        // Generate a random token for password reset
        $token = bin2hex(random_bytes(32));

        // Set expiration time for the token (e.g., 30 minutes)
        $expiration_time = date('Y-m-d H:i:s', strtotime('+30 minutes'));

        // Update the database with the new token and expiration time
        $sql = "UPDATE users SET reset_token = '$token', reset_expires = '$expiration_time' WHERE email = '$email'";
        mysqli_query($conn, $sql);

        // Send the password reset email
        send_reset_email($email, $token);
        
        // Redirect to a confirmation page
        header("Location: forgot_password_sent.php");
        exit();
    } else {
        // Email not found in database
        header("Location: forgot_password.php?error=Email%20not%20found.");
        exit();
    }
}

function send_reset_email($email, $token) {
    $to = $email;
    $subject = "Password Reset Request";
    $message = "
        <html>
            <body>
                <p>We received a request to reset your password. Click the link below to reset it:</p>
                <a href='http://example.com/reset_password.php?token=$token'>Reset Password</a><br><br>
                <small>If you did not make this request, please ignore this email.</small>
            </body>
        </html>
    ";
    $headers = "From: noreply@example.com\r
";
    $headers .= "MIME-Version: 1.0\r
";
    $headers .= "Content-Type: text/html; charset=UTF-8\r
";

    mail($to, $subject, $message, $headers);
}
?>


<?php
include('db_connection.php'); // Include your database connection file

if (!isset($_GET['token'])) {
    die("Invalid request.");
}

$token = $_GET['token'];

// Check if the token exists in the database and is not expired
$sql = "SELECT id, email FROM users WHERE reset_token = '$token' AND reset_expires > NOW()";
$result = mysqli_query($conn, $sql);

if (mysqli_num_rows($result) == 1) {
    // Token is valid
} else {
    die("Invalid or expired token.");
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <?php if (isset($_GET['error'])) { ?>
        <p style="color: red;"><?php echo $_GET['error']; ?></p>
    <?php } ?>

    <h2>Reset Password</h2>
    <form action="reset_password_process.php" method="post">
        <input type="hidden" name="token" value="<?php echo $token; ?>">
        <label for="password">New Password:</label><br>
        <input type="password" id="password" name="password" required><br><br>
        <button type="submit">Reset Password</button>
    </form>
</body>
</html>


<?php
include('db_connection.php'); // Include your database connection file

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $token = $_POST['token'];
    $password = $_POST['password'];

    // Check if token is valid and not expired
    $sql = "SELECT id, email FROM users WHERE reset_token = '$token' AND reset_expires > NOW()";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) == 1) {
        // Update the password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);
        $sql = "UPDATE users SET password = '$hashed_password', reset_token = '', reset_expires = '' WHERE reset_token = '$token'";
        mysqli_query($conn, $sql);

        // Redirect to success page
        header("Location: reset_password_success.php");
        exit();
    } else {
        // Invalid or expired token
        header("Location: reset_password.php?error=Invalid%20or%20expired%20token.");
        exit();
    }
}
?>


<?php
// Database connection configuration
$host = 'localhost';
$db_username = 'root';
$db_password = '';
$db_name = 'your_database';

// Connect to database
$conn = new mysqli($host, $db_username, $db_password, $db_name);
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Error reporting
ini_set('display_errors', 1);
error_reporting(E_ALL);

// Session start
session_start();
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Forgot Password</title>
</head>
<body>
<?php
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Check if form was submitted
    $email = mysqli_real_escape_string($conn, $_POST['email']);
    
    // Check if email exists in database
    $sql = "SELECT id FROM users WHERE email='$email'";
    $result = $conn->query($sql);
    
    if ($result->num_rows > 0) {
        // Generate a random token
        $token = md5(uniqid(rand(), true));
        
        // Update the database with the new token
        $updateSql = "UPDATE users SET reset_token='$token', reset_token_expiry=DATE_ADD(NOW(), INTERVAL 1 HOUR) WHERE email='$email'";
        if ($conn->query($updateSql)) {
            // Send the password reset email
            $to = $email;
            $subject = "Password Reset Request";
            $message = "Please click on this link to reset your password: http://yourwebsite.com/reset-password.php?token=$token
";
            $headers = "From: noreply@yourwebsite.com\r
";
            
            mail($to, $subject, $message, $headers);
            
            echo "An email has been sent to $email with instructions to reset your password.";
        } else {
            echo "Error updating record: " . $conn->error;
        }
    } else {
        echo "Email not found in our records. Please try again.";
    }
}
?>

<h2>Forgot Password</h2>
<form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
    Email: <input type="text" name="email"><br><br>
    <input type="submit" value="Submit">
</form>

<?php
// Close database connection
$conn->close();
?>


<?php
// Database connection configuration
$host = 'localhost';
$db_username = 'root';
$db_password = '';
$db_name = 'your_database';

// Connect to database
$conn = new mysqli($host, $db_username, $db_password, $db_name);
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Error reporting
ini_set('display_errors', 1);
error_reporting(E_ALL);

// Session start
session_start();
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial_scale=1.0">
    <title>Reset Password</title>
</head>
<body>
<?php
if (isset($_GET['token'])) {
    $token = mysqli_real_escape_string($conn, $_GET['token']);
    
    // Check if token exists and hasn't expired
    $sql = "SELECT id FROM users WHERE reset_token='$token' AND reset_token_expiry > NOW()";
    $result = $conn->query($sql);
    
    if ($result->num_rows == 1) {
        // Token is valid
        if ($_SERVER["REQUEST_METHOD"] == "POST") {
            $new_password = mysqli_real_escape_string($conn, $_POST['new_password']);
            
            // Update the password
            $updateSql = "UPDATE users SET password=MD5('$new_password'), reset_token=NULL WHERE reset_token='$token'";
            if ($conn->query($updateSql)) {
                echo "Password updated successfully!";
            } else {
                echo "Error updating password: " . $conn->error;
            }
        }
        
        // Display reset form
        ?>
        <h2>Reset Password</h2>
        <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"])."?token=".$token; ?>" method="post">
            New Password: <input type="password" name="new_password"><br><br>
            Confirm Password: <input type="password" name="confirm_password"><br><br>
            <input type="submit" value="Reset Password">
        </form>
        <?php
    } else {
        echo "Invalid or expired token.";
    }
} else {
    echo "No token provided.";
}
?>

<?php
// Close database connection
$conn->close();
?>


<?php
session_start();
// Database connection details
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get user input
    $email = $_POST['email'];

    // Validate email
    if (empty($email)) {
        die("Email is required!");
    }

    // Prepare SQL statement to check if email exists
    $stmt = $conn->prepare("SELECT * FROM users WHERE email=:email");
    $stmt->bindParam(':email', $email);
    $stmt->execute();

    $user = $stmt->fetch(PDO::FETCH_ASSOC);

    if (!$user) {
        die("No user found with this email address!");
    }

    // Generate a temporary password
    $temp_password = rand(1000, 9999); // You can make this more secure

    // Update the user's password in the database
    $updateStmt = $conn->prepare("UPDATE users SET password=:password WHERE email=:email");
    $updateStmt->bindParam(':password', $temp_password);
    $updateStmt->bindParam(':email', $email);
    $updateStmt->execute();

    // Send the temporary password to the user's email
    $to = $email;
    $subject = "Your Temporary Password";
    $message = "Dear " . $user['username'] . ",

Your temporary password is: " . $temp_password . "

Please login and change your password immediately.

Best regards,
Admin Team";
    $headers = "From: admin@example.com";

    if (mail($to, $subject, $message, $headers)) {
        echo "Password sent successfully! Check your email.";
        header("Refresh:3; url=login.php");
    } else {
        die("Failed to send password!");
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <h2>Forgot Password</h2>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <input type="email" name="email" placeholder="Enter your email address" required><br><br>
        <input type="submit" value="Submit">
    </form>
</body>
</html>


<?php
// Database connection
$host = 'localhost';
$username = 'username';
$password = 'password';
$dbname = 'database_name';

$conn = mysqli_connect($host, $username, $password, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function generateResetToken() {
    // Generate a 40 character random string
    return bin2hex(random_bytes(20));
}

// Reset password form
if (isset($_POST['reset'])) {
    $email = mysqli_real_escape_string($conn, $_POST['email']);

    // Check if email exists in the database
    $sql = "SELECT id FROM users WHERE email='$email'";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) > 0) {
        $token = generateResetToken();
        $expires = date('Y-m-d H:i:s', strtotime('+1 hour'));

        // Store token in database
        $sql = "INSERT INTO password_reset_tokens 
                (user_id, token, expires)
                VALUES ('$email', '$token', '$expires')";

        if (mysqli_query($conn, $sql)) {
            // Send email with reset link
            $to = $email;
            $subject = "Password Reset Request";
            $message = "Please click the following link to reset your password: 
                        http://example.com/reset-password.php?token=$token";
            $headers = "From: webmaster@example.com";

            if (mail($to, $subject, $message, $headers)) {
                echo "An email has been sent with instructions to reset your password.";
            } else {
                echo "There was an error sending the email. Please try again later.";
            }
        } else {
            echo "Error: " . mysqli_error($conn);
        }
    } else {
        echo "Email does not exist in our records.";
    }
}

// Reset password page
if (isset($_GET['token'])) {
    $token = $_GET['token'];
    
    // Check if token exists and is valid
    $sql = "SELECT user_id FROM password_reset_tokens 
            WHERE token='$token' AND expires > NOW()";
    
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) == 1) {
        // Show password reset form
        if (isset($_POST['new_password'])) {
            $new_password = $_POST['new_password'];
            
            // Update the user's password
            $row = mysqli_fetch_assoc($result);
            $user_id = $row['user_id'];
            
            $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);
            
            $sql = "UPDATE users 
                    SET password='$hashed_password'
                    WHERE id='$user_id'";
                    
            if (mysqli_query($conn, $sql)) {
                // Delete token from database
                $sql = "DELETE FROM password_reset_tokens 
                        WHERE token='$token'";
                mysqli_query($conn, $sql);
                
                echo "Your password has been reset successfully!";
            } else {
                echo "Error resetting your password: " . mysqli_error($conn);
            }
        }
    } else {
        // Invalid or expired token
        echo "Invalid or expired token. Please request a new password reset.";
    }
}

// Close database connection
mysqli_close($conn);
?>


<?php
session_start();

// Configuration
$host = "localhost";
$username = "root";
$password = "";
$db_name = "your_database";

// Connect to MySQL
$conn = mysqli_connect($host, $username, $password, $db_name);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to sanitize input
function sanitizeInput($data) {
    return htmlspecialchars(strip_tags(trim($data)));
}

// Process the form if submitted
if (isset($_POST['reset'])) {
    $email = isset($_POST['email']) ? sanitizeInput($_POST['email']) : "";

    // Validate email
    if (empty($email)) {
        $message = "Please enter your email address!";
    } elseif (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        $message = "Invalid email format!";
    } else {
        // Check if user exists
        $sql = "SELECT id FROM users WHERE email='" . mysqli_real_escape_string($conn, $email) . "'";
        $result = mysqli_query($conn, $sql);
        
        if (mysqli_num_rows($result) == 0) {
            $message = "No account found with this email!";
        } else {
            // Generate token
            $token = md5(uniqid(rand(), true));
            
            // Set expiration time (30 minutes)
            $expires = date("Y-m-d H:i:s", strtotime("+30 minutes"));
            
            // Insert into database
            $insert_sql = "INSERT INTO reset_password (user_id, token, expires) 
                          VALUES ('" . mysqli_real_escape_string($conn, $email) . "', '$token', '$expires')";
            $insert_result = mysqli_query($conn, $insert_sql);
            
            if (!$insert_result) {
                $message = "Error: Please try again later!";
            } else {
                // Send email
                $to = $email;
                $subject = "Password Reset Request";
                $reset_link = "http://your-site.com/reset_password.php?token=$token";
                
                $message_body = "Dear User,

You requested a password reset. Please click the following link to reset your password:
$reset_link

If you did not request this, please ignore this email.
The link will expire in 30 minutes.";
                
                if (mail($to, $subject, $message_body)) {
                    $message = "A password reset link has been sent to your email!";
                } else {
                    $message = "Error sending email. Please try again!";
                }
            }
        }
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <?php if (isset($message)) { ?>
        <p><?php echo $message; ?></p>
    <?php } ?>

    <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
        <input type="email" name="email" placeholder="Enter your email..." required>
        <button type="submit" name="reset">Reset Password</button>
    </form>
</body>
</html>

<?php
// Close database connection
mysqli_close($conn);
?>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'mydatabase';

// Create connection
$conn = new mysqli($host, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// If form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get email from form data
    $email = mysqli_real_escape_string($conn, $_POST['email']);
    
    // Validate email format
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        die("Invalid email format");
    }
    
    // Check if email exists in database
    $sql = "SELECT id FROM users WHERE email = '$email'";
    $result = $conn->query($sql);
    
    if ($result->num_rows > 0) {
        // Generate a random token for password reset
        $token = bin2hex(random_bytes(32));
        
        // Store token in database along with user ID and expiration time (e.g., 1 hour)
        $expiration_time = date('Y-m-d H:i:s', strtotime('+1 hour'));
        
        $sql = "INSERT INTO reset_tokens (user_id, token, expire_time) VALUES (".$result->fetch_assoc()['id'].", '$token', '$expiration_time')";
        $conn->query($sql);
        
        // Send password reset email
        require 'PHPMailer/PHPMailer.php';
        require 'PHPMailer/SMTP.php';
        require 'PHPMailer/Exception.php';
        
        try {
            $mail = new PHPMailer\PHPMailer\PHPMailer();
            
            $mail->isSMTP();
            $mail->Host = 'smtp.example.com'; // Replace with your SMTP server
            $mail->SMTPAuth = true;
            $mail->Username = 'your_email@example.com'; // Your email username
            $mail->Password = 'your_password'; // Your email password
            $mail->SMTPSecure = 'tls';
            $mail->Port = 587;
            
            $mail->setFrom('your_email@example.com', 'Your Name');
            $mail->addAddress($email);
            
            $mail->isHTML(true);
            $mail->Subject = 'Password Reset Request';
            $mail->Body    = '<html>
                                <body>
                                    <p>Hello,</p>
                                    <p>We received a request to reset your password. Please click the link below to reset your password:</p>
                                    <a href="http://yourwebsite.com/reset-password.php?token='.$token.'">Reset Password</a>
                                    <p>If you did not request this password reset, please ignore this email.</p>
                                    <p>Best regards,<br>Your Website Team</p>
                                </body>
                            </html>';
            
            $mail->send();
        } catch (Exception $e) {
            die("Mailer Error: " . $e->getMessage());
        }
        
        // Set success message
        $_SESSION['message'] = 'We have sent you a password reset link. Please check your email.';
        header('Location: login.php');
        exit;
    } else {
        // Email not found in database
        die("Email address not found in our records");
    }
}
?>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'your_database';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = $_POST['email'];

    // Sanitize email input
    $email = mysqli_real_escape_string($conn, $email);

    // Check if email exists in database
    $sql = "SELECT id FROM users WHERE email='$email'";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) == 0) {
        echo "Email does not exist!";
    } else {
        // Generate a unique token for password reset
        $token = md5(uniqid(rand(), true));
        
        // Update the database with the new token and expiration time
        $sql = "UPDATE users SET password_reset_token='$token', 
                            password_reset_expires=NOW() + INTERVAL 1 HOUR
                            WHERE email='$email'";
        mysqli_query($conn, $sql);
        
        // Send email to user with reset link
        $to = $email;
        $subject = "Password Reset Request";
        $message = "
            <html>
                <head>
                    <title>Password Reset</title>
                </head>
                <body>
                    <p>Hello,</p>
                    <p>You have requested a password reset. Please click the link below to reset your password:</p>
                    <a href='http://yourwebsite.com/reset_password.php?token=$token'>Reset Password</a>
                    <p>If you did not request this password reset, please ignore this email.</p>
                    <p>This password reset link will expire in 1 hour.</p>
                </body>
            </html>
        ";
        
        $headers = "From: no-reply@yourwebsite.com\r
";
        $headers .= "Reply-To: no-reply@yourwebsite.com\r
";
        $headers .= "Content-Type: text/html; charset=UTF-8\r
";

        mail($to, $subject, $message, $headers);
        
        echo "A password reset link has been sent to your email!";
    }
}

// Close database connection
mysqli_close($conn);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <h2>Forgot Password</h2>
    <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
        <input type="email" name="email" placeholder="Enter your email address" required><br><br>
        <button type="submit">Send Reset Link</button>
    </form>
</body>
</html>


<?php
include('db_connection.php'); // Include your database connection

if (isset($_POST['email'])) {
    $email = $_POST['email'];
    
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        header("Location: forgot_password_form.php?error=Invalid email format");
        exit();
    }
    
    // Check if the email exists in the database
    $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
    $stmt->bind_param('s', $email);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows == 0) {
        header("Location: forgot_password_form.php?error=Email not registered");
        exit();
    } else {
        // Generate a random token
        $token = bin2hex(random_bytes(16));
        
        // Set token expiration time (e.g., 1 hour from now)
        $expires = date('Y-m-d H:i:s', strtotime('+1 hour'));
        
        // Insert the token into the database
        $stmt = $conn->prepare("INSERT INTO password_reset (user_id, token, expires) VALUES (?, ?, ?)");
        $stmt->bind_param('iss', $result->fetch_assoc()['id'], $token, $expires);
        $stmt->execute();
        
        // Send email to user with reset link
        $to = $email;
        $subject = "Password Reset Request";
        $message = "Click the following link to reset your password: http://yourwebsite.com/reset_password.php?token=$token";
        $headers = "From: yourwebsite@example.com\r
".
                   "Content-Type: text/plain; charset=UTF-8\r
".
                   "Content-Transfer-Encoding: 7bit";
        
        mail($to, $subject, $message, $headers);
        
        header("Location: forgot_password_form.php?error=Password reset link sent to your email");
    }
} else {
    // If no email was provided
    header("Location: forgot_password_form.php?error=Please enter your email address");
}
?>


<?php
include('db_connection.php'); // Include your database connection

if (!isset($_GET['token'])) {
    die("Invalid link.");
}

$token = $_GET['token'];

// Check if token exists and hasn't expired
$stmt = $conn->prepare("SELECT user_id, expires FROM password_reset WHERE token = ?");
$stmt->bind_param('s', $token);
$stmt->execute();
$result = $stmt->get_result();

if ($result->num_rows == 0) {
    die("Invalid or expired reset link.");
}

$row = $result->fetch_assoc();
$expires = $row['expires'];

if (strtotime($expires) < time()) {
    die("Reset link has expired. Please request a new one.");
}

// If token is valid, show password reset form
?>

<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <h2>Reset Password</h2>
    
    <?php
        if (isset($_GET['error'])) {
            echo "<p style='color:red;'>".$_GET['error']."</p>";
        }
    ?>
    
    <form action="reset_password.php?token=<?php echo $token; ?>" method="post">
        <label for="new_password">New Password:</label><br>
        <input type="password" id="new_password" name="new_password"><br><br>
        
        <label for="confirm_password">Confirm Password:</label><br>
        <input type="password" id="confirm_password" name="confirm_password"><br><br>
        
        <input type="submit" value="Reset Password">
    </form>

<?php
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $new_password = $_POST['new_password'];
    $confirm_password = $_POST['confirm_password'];

    if ($new_password != $confirm_password) {
        header("Location: reset_password.php?token=$token&error=Passwords do not match");
        exit();
    }

    // Validate password strength (you can modify these requirements)
    if (strlen($new_password) < 8 || !preg_match('/[a-zA-Z]/', $new_password) || !preg_match('/\d/', $new_password)) {
        header("Location: reset_password.php?token=$token&error=Password must be at least 8 characters long and contain both letters and numbers");
        exit();
    }

    // Hash the new password
    $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);

    // Update the user's password in the database
    $stmt = $conn->prepare("UPDATE users SET password = ? WHERE id = ?");
    $stmt->bind_param('si', $hashed_password, $row['user_id']);
    $stmt->execute();

    // Invalidate the reset token
    $stmt = $conn->prepare("DELETE FROM password_reset WHERE token = ?");
    $stmt->bind_param('s', $token);
    $stmt->execute();

    header("Location: login.php?success=Password has been successfully reset");
}
?>
</body>
</html>


<?php
require 'db_connection.php'; // Include your database connection

if (isset($_POST['email'])) {
    $email = mysqli_real_escape_string($conn, $_POST['email']);

    $sql = "SELECT id FROM users WHERE email = '$email'";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) == 0) {
        header("Location: forgot_form.php?error=Email%20not%20found");
        exit();
    }

    // Generate reset token and expiry
    $token = bin2hex(random_bytes(16));
    $expires = date('Y-m-d H:i:s', time() + 3600); // Expiry in 1 hour

    $sql = "INSERT INTO password_resets (email, token, expires) 
            VALUES ('$email', '$token', '$expires')";
    mysqli_query($conn, $sql);

    // Send email with reset link
    $to = $email;
    $subject = "Password Reset Request";
    $message = "Please click the following link to reset your password:

".
               "http://yourdomain.com/reset_password.php?token=$token

".
               "This link will expire in 1 hour.";
    $headers = "From: admin@yourdomain.com";

    mail($to, $subject, $message, $headers);

    header("Location: forgot_form.php?error=Password%20reset%20link%20sent");
    exit();
}
?>


<?php
require 'db_connection.php'; // Include your database connection

if (!isset($_GET['token']) || !isset($_POST['password'])) {
    header("Location: reset_form.php?error=Invalid%20request");
    exit();
}

$token = mysqli_real_escape_string($conn, $_GET['token']);
$password = mysqli_real_escape_string($conn, $_POST['password']);

// Verify token and check expiration
$sql = "SELECT email FROM password_resets 
        WHERE token = '$token' AND expires > NOW()";
$result = mysqli_query($conn, $sql);

if (mysqli_num_rows($result) == 0) {
    header("Location: reset_form.php?error=Invalid%20or%20expired%20link");
    exit();
}

$email = mysqli_fetch_assoc($result)['email'];

// Update the password
$hash = password_hash($password, PASSWORD_DEFAULT);
$sql = "UPDATE users SET password = '$hash' WHERE email = '$email'";
mysqli_query($conn, $sql);

// Invalidate the token
$sql = "DELETE FROM password_resets WHERE token = '$token'";
mysqli_query($conn, $sql);

header("Location: login.php?success=Password%20reset%20successful");
exit();
?>


<?php
session_start();

// Database configuration
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    die("Connection failed: " $e->getMessage());
}

// Function to send reset password email
function sendResetEmail($email, $token) {
    $to = $email;
    $subject = "Password Reset Request";
    $message = "
        <html>
            <head></head>
            <body>
                <h2>Password Reset</h2>
                <p>Please click the following link to reset your password:</p>
                <a href='http://yourdomain.com/reset-password.php?token=" . $token . "'>Reset Password</a><br><br>
                <p>If you did not request this password reset, please ignore this email.</p>
            </body>
        </html>
    ";
    $headers = "MIME-Version: 1.0" . "\r
";
    $headers .= "Content-type:text/html;charset=UTF-8" . "\r
";
    mail($to, $subject, $message, $headers);
}

// Function to reset password
function resetPassword($conn) {
    if (isset($_POST['reset'])) {
        $email = $_POST['email'];
        
        // Check if email exists in database
        try {
            $stmt = $conn->prepare("SELECT * FROM users WHERE email = ?");
            $stmt->execute([$email]);
            $user = $stmt->fetch(PDO::FETCH_ASSOC);
            
            if ($user) {
                // Generate random token
                $token = md5(uniqid(rand(), true));
                
                // Store token and expiration time in database
                $expires = date('Y-m-d H:i:s', strtotime('+1 hour'));
                $stmt = $conn->prepare("UPDATE users SET reset_token = ?, reset_expires = ? WHERE email = ?");
                $stmt->execute([$token, $expires, $email]);
                
                // Send reset link to user's email
                sendResetEmail($email, $token);
                
                echo "An email has been sent to you with a password reset link.";
            } else {
                echo "This email is not registered in our system.";
            }
        } catch(PDOException $e) {
            die("Error: " . $e->getMessage());
        }
    }
}

// Function to validate and update new password
function validateReset($conn) {
    if (isset($_GET['token'])) {
        $token = $_GET['token'];
        
        // Check token validity and expiration
        try {
            $stmt = $conn->prepare("SELECT * FROM users WHERE reset_token = ?");
            $stmt->execute([$token]);
            $user = $stmt->fetch(PDO::FETCH_ASSOC);
            
            if ($user && $user['reset_expires'] > date('Y-m-d H:i:s')) {
                // Token is valid and not expired
                if (isset($_POST['submit'])) {
                    $new_password = $_POST['password'];
                    $confirm_password = $_POST['cpassword'];
                    
                    if ($new_password == $confirm_password) {
                        // Update password in database
                        $hash = password_hash($new_password, PASSWORD_DEFAULT);
                        
                        $stmt = $conn->prepare("UPDATE users SET password = ?, reset_token = null WHERE email = ?");
                        $stmt->execute([$hash, $user['email']]);
                        
                        echo "Your password has been successfully updated!";
                    } else {
                        echo "Passwords do not match!";
                    }
                }
            } else {
                echo "Invalid or expired token.";
            }
        } catch(PDOException $e) {
            die("Error: " . $e->getMessage());
        }
    }
}

// Main function
if (isset($_GET['action'])) {
    if ($_GET['action'] == 'reset') {
        resetPassword($conn);
    }
} else {
    validateReset($conn);
}

$conn = null;
?>


<?php
include('db_connection.php'); // Include your database connection

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = $_POST['email'];
    
    if (empty($email) || !filter_var($email, FILTER_VALIDATE_EMAIL)) {
        die("Please enter a valid email address.");
    }

    try {
        $stmt = $pdo->prepare("SELECT id, username, password FROM users WHERE email = ?");
        $stmt->execute([$email]);
        $user = $stmt->fetch(PDO::FETCH_ASSOC);

        if (!$user) {
            die("Email not found in our records. Please check your email.");
        }

        // Generate a unique token
        $token = bin(20);
        
        // Check if the token exists to avoid duplicates
        do {
            $existingTokenStmt = $pdo->prepare("SELECT id FROM password_resets WHERE token = ?");
            $existingTokenStmt->execute([$token]);
        } while ($existingTokenStmt->fetch());

        // Insert into password_resets table
        $insertStmt = $pdo->prepare("INSERT INTO password_resets (user_id, token, created_at) VALUES (?, ?, NOW())");
        $insertStmt->execute([$user['id'], $token]);

        // Send email with reset link
        require 'PHPMailer/PHPMailer.php';
        require 'PHPMailer/SMTP.php';
        require 'PHPMailer/Exception.php';

        try {
            $mail = new PHPMailer\PHPMailer();
            $mail->isSMTP();
            $mail->Host = 'smtp.example.com';
            $mail->SMTPAuth = true;
            $mail->Username = 'your_email@example.com';
            $mail->Password = 'your_password';
            $mail->Port = 587;

            $mail->setFrom('your_email@example.com', 'Your Name');
            $mail->addAddress($email);
            $mail->Subject = 'Reset Your Password';

            $resetLink = "http://example.com/reset.php?token=$token";
            $body = "Please click the following link to reset your password: <br><a href='$resetLink'>$resetLink</a>";
            $mail->Body = $body;

            $mail->send();
            echo "An email with instructions has been sent to you!";
        } catch (Exception $e) {
            die("Error sending email. Please try again later.");
        }
    } catch (PDOException $e) {
        die("Database error occurred: " . $e->getMessage());
    }
}
?>


<?php
include('db_connection.php');

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $token = $_GET['token'];
    
    if (empty($token)) {
        die("Invalid request.");
    }

    // Verify token existence and validity
    try {
        $stmt = $pdo->prepare("SELECT user_id FROM password_resets WHERE token = ? AND created_at > NOW() - INTERVAL 30 MINUTE");
        $stmt->execute([$token]);
        $result = $stmt->fetch(PDO::FETCH_ASSOC);

        if (!$result) {
            die("Invalid or expired reset link. Please request a new one.");
        }

        // Validate password
        $new_password = $_POST['new_password'];
        $confirm_password = $_POST['confirm_password'];

        if ($new_password !== $confirm_password) {
            die("Passwords do not match.");
        }

        // Update the user's password
        $hash = password_hash($new_password, PASSWORD_DEFAULT);
        
        $updateStmt = $pdo->prepare("UPDATE users SET password = ? WHERE id = ?");
        $updateStmt->execute([$hash, $result['user_id']]);

        // Invalidate the token
        $invalidateStmt = $pdo->prepare("DELETE FROM password_resets WHERE token = ?");
        $invalidateStmt->execute([$token]);

        echo "Password reset successful! You can now login with your new password.";
    } catch (PDOException $e) {
        die("Database error occurred: " . $e->getMessage());
    }
}
?>


<?php
function sendPasswordResetEmail($recipient_email, $user_name, $site_url) {
    // Set up the email content
    $subject = "Password Reset Request";
    
    $reset_link = $site_url . "/password-reset.php?email=" . urlencode($recipient_email);
    
    $message = "
        <html>
        <head>
            <title>Password Reset</title>
        </head>
        <body style='font-family: Arial, sans-serif; line-height: 1.6;'>
            <h2>Hello " . htmlspecialchars($user_name) . ",</h2>
            
            <p>We received a request to reset your password. Please click the link below to reset it:</p>
            
            <a href='" . $reset_link . "' style='display: inline-block; padding: 10px 20px; background-color: #007bff; color: white; text-decoration: none; border-radius: 5px;'>
                Reset Password
            </a>
            
            <p>If you didn't request this password reset, you can safely ignore this email.</p>
            
            <hr style='margin: 20px 0;'>
            <p>This is an automated message from " . $site_url . ". Please do not reply to this email.</p>
        </body>
        </html>
    ";
    
    // Set up the headers
    $headers = "MIME-Version: 1.0" . "\r
";
    $headers .= "Content-type:text/html;charset=UTF-8" . "\r
";
    $headers .= "From: " . $site_url . "<no-reply@" . str_replace("http://", "", $site_url) . ">" . "\r
";
    
    // Send the email
    mail($recipient_email, $subject, $message, $headers);
}

// Example usage:
// sendPasswordResetEmail('user@example.com', 'John Doe', 'https://your-site.com');
?>


<?php
session_start();
require_once 'db.php'; // Include your database connection file

class ForgotPassword {
    private $db;
    
    public function __construct() {
        $this->db = new DBConnection();
    }
    
    // Check if email exists and send reset link
    public function handleForgotPassword($email) {
        try {
            // Check if email exists in database
            if (!$this->emailExists($email)) {
                throw new Exception("Email not found in our records.");
            }
            
            // Generate a unique token for password reset
            $token = bin2hex(random_bytes(16));
            $expires = date('Y-m-d H:i:s', time() + 3600); // Token expires after 1 hour
            
            // Store the token in database
            $this->storeResetToken($email, $token, $expires);
            
            // Send reset password email
            $this->sendResetEmail($email, $token);
            
            return true;
        } catch (Exception $e) {
            $_SESSION['error'] = $e->getMessage();
            header("Location: login.php");
            exit();
        }
    }
    
    private function emailExists($email) {
        $query = "SELECT id FROM users WHERE email = ?";
        $stmt = $this->db->prepare($query);
        $stmt->execute([$email]);
        
        return $stmt->rowCount() > 0;
    }
    
    private function storeResetToken($email, $token, $expires) {
        $query = "INSERT INTO password_resets (user_id, token, expires) 
                  VALUES (?, ?, ?)";
                  
        $stmt = $this->db->prepare($query);
        
        // Get user ID
        $userIdQuery = "SELECT id FROM users WHERE email = ?";
        $userIdStmt = $this->db->prepare($userIdQuery);
        $userIdStmt->execute([$email]);
        $row = $userIdStmt->fetch(PDO::FETCH_ASSOC);
        $user_id = $row['id'];
        
        $stmt->execute([$user_id, $token, $expires]);
    }
    
    private function sendResetEmail($email, $token) {
        require_once 'PHPMailer/PHPMailer.php';
        require_once 'PHPMailer/SMTP.php';
        require_once 'PHPMailer/Exception.php';
        
        $mail = new PHPMailer(true);
        
        try {
            // Server settings
            $mail->isSMTP();
            $mail->Host = 'smtp.example.com';  // Replace with your SMTP server
            $mail->SMTPAuth = true;
            $mail->Username = 'your_email@example.com'; // Replace with your email
            $mail->Password = 'your_password';          // Replace with your password
            $mail->Port = 587;                          // TCP port to connect to
            
            // Recipients
            $mail->setFrom('your_email@example.com', 'Your Name');
            $mail->addAddress($email);
            
            // Content
            $resetLink = "http://$_SERVER[HTTP_HOST]/reset-password.php?token=$token";
            $body = "Click the following link to reset your password: <a href='$resetLink'>$resetLink</a>";
            $body .= "<br>If you're unable to click the link, copy and paste this token into the reset form: $token";
            
            $mail->isHTML(true);
            $mail->Subject = 'Password Reset Request';
            $mail->Body    = $body;
            
            $mail->send();
        } catch (Exception $e) {
            throw new Exception("Email could not be sent. Error: {$mail->ErrorInfo}");
        }
    }
}

// Handle form submission
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = $_POST['email'];
    
    $forgotPassword = new ForgotPassword();
    if ($forgotPassword->handleForgotPassword($email)) {
        // Reset password email sent successfully
        $_SESSION['success'] = "We've sent a password reset link to your email address.";
        header("Location: login.php");
        exit();
    }
}
?>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

// Generate a random token
function generateToken() {
    return bin2hex(random_bytes(16));
}

// Check if email exists in database
function checkEmail($email, $conn) {
    $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
    $stmt->execute([$email]);
    return $stmt->rowCount();
}

// Store reset token and expiration time
function storeResetToken($userId, $token, $conn) {
    $expirationTime = date('Y-m-d H:i:s', strtotime('+1 hour'));
    $stmt = $conn->prepare("INSERT INTO password_reset (user_id, token, expires_at) VALUES (?, ?, ?)");
    return $stmt->execute([$userId, $token, $expirationTime]);
}

// Send reset email
function sendResetEmail($email, $resetLink) {
    $to = $email;
    $subject = "Password Reset Request";
    $message = "
        <html>
            <head></head>
            <body>
                <p>Hello,</p>
                <p>We received a password reset request. Click the link below to reset your password:</p>
                <a href='$resetLink'>$resetLink</a>
                <br><br>
                If you did not request this, please ignore this email.
            </body>
        </html>";
    $headers = "MIME-Version: 1.0" . "\r
";
    $headers .= "Content-type:text/html;charset=UTF-8" . "\r
";
    $headers .= "From: your_email@example.com" . "\r
";

    return mail($to, $subject, $message, $headers);
}

// Reset password function
function resetPassword($token, $newPassword, $conn) {
    // Verify token exists and is valid
    $stmt = $conn->prepare("SELECT user_id FROM password_reset WHERE token = ? AND expires_at > NOW()");
    $stmt->execute([$token]);
    
    if ($stmt->rowCount() == 1) {
        list($userId) = $stmt->fetch(PDO::FETCH_NUM);
        
        // Update user's password
        $hashedPassword = password_hash($newPassword, PASSWORD_DEFAULT);
        $updateStmt = $conn->prepare("UPDATE users SET password = ? WHERE id = ?");
        if ($updateStmt->execute([$hashedPassword, $userId])) {
            // Invalidate the token
            $invalidateStmt = $conn->prepare("DELETE FROM password_reset WHERE token = ?");
            $invalidateStmt->execute([$token]);
            return true;
        }
    }
    return false;
}

// Check if email exists and send reset link
if (isset($_POST['email'])) {
    $email = $_POST['email'];
    $token = generateToken();
    
    if (checkEmail($email, $conn)) {
        // Get user ID
        $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
        $stmt->execute([$email]);
        list($userId) = $stmt->fetch(PDO::FETCH_NUM);
        
        // Store token
        storeResetToken($userId, $token, $conn);
        
        // Create reset link
        $resetLink = "http://$_SERVER[HTTP_HOST]/reset-password.php?token=$token";
        
        // Send email
        if (sendResetEmail($email, $resetLink)) {
            echo "An email has been sent to your inbox with instructions to reset your password.";
        } else {
            echo "There was an error sending the email. Please try again later.";
        }
    } else {
        echo "This email address does not exist in our database.";
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
    <style>
        body { font-family: Arial, sans-serif; max-width: 500px; margin: 0 auto; padding: 20px; }
        .form-group { margin-bottom: 10px; }
        input { width: 100%; padding: 8px; }
        button { background-color: #4CAF50; color: white; padding: 10px 20px; border: none; border-radius: 4px; cursor: pointer; }
    </style>
</head>
<body>
    <h1>Forgot Password</h1>
    <p>Please enter your email address to reset your password.</p>
    
    <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
        <div class="form-group">
            <input type="email" name="email" placeholder="Enter your email..." required>
        </div>
        <button type="submit">Send Reset Link</button>
    </form>
</body>
</html>

// Create a separate file (reset-password.php) for the password reset form

<?php
session_start();
if (!isset($_GET['token'])) {
    header("Location: forgot-password.php");
    exit();
}

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

// Verify token
$stmt = $conn->prepare("SELECT user_id FROM password_reset WHERE token = ? AND expires_at > NOW()");
$stmt->execute([$_GET['token']]);
if ($stmt->rowCount() != 1) {
    header("Location: forgot-password.php");
    exit();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
    <style>
        body { font-family: Arial, sans-serif; max-width: 500px; margin: 0 auto; padding: 20px; }
        .form-group { margin-bottom: 10px; }
        input { width: 100%; padding: 8px; }
        button { background-color: #4CAF50; color: white; padding: 10px 20px; border: none; border-radius: 4px; cursor: pointer; }
    </style>
</head>
<body>
    <h1>Reset Password</h1>
    
    <?php if (isset($_GET['success'])) { ?>
        <p>Password reset successfully! <a href="login.php">Click here to login</a>.</p>
    <?php } else { ?>

    <form action="reset-password-process.php" method="post">
        <input type="hidden" name="token" value="<?php echo $_GET['token']; ?>">
        <div class="form-group">
            <input type="password" name="new_password" placeholder="Enter new password..." required>
        </div>
        <div class="form-group">
            <input type="password" name="confirm_password" placeholder="Confirm new password..." required>
        </div>
        <button type="submit">Reset Password</button>
    </form>

    <?php } ?>

</body>
</html>

// Create a separate file (reset-password-process.php) to handle the password reset

<?php
session_start();
if (!isset($_POST['token']) || !isset($_POST['new_password'])) {
    header("Location: forgot-password.php");
    exit();
}

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

// Verify token and reset password
if (resetPassword($_POST['token'], $_POST['new_password'], $conn)) {
    header("Location: reset-password.php?success=1");
    exit();
} else {
    echo "There was an error resetting your password. Please try again.";
}
?>


if (isset($_POST['email'])) {
    $email = $_POST['email'];
    
    // Validate email
    if (empty($email) || !filter_var($email, FILTER_VALIDATE_EMAIL)) {
        die("Invalid email address");
    }
}


try {
    $pdo = new PDO('mysql:host=localhost;dbname=your_database', 'username', 'password');
    $pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
    
    // Prepare and execute the query
    $stmt = $pdo->prepare("SELECT id FROM users WHERE email = :email");
    $stmt->execute(['email' => $email]);
    
    if ($stmt->rowCount() == 0) {
        die("Email not found in our records.");
    }
} catch (PDOException $e) {
    die("Database error: " . $e->getMessage());
}


$token = bin2hex(random_bytes(16));
$expires = date('Y-m-d H:i:s', strtotime('+30 minutes'));

// Update user record with new token and expiry
$stmt = $pdo->prepare("UPDATE users SET reset_token = :token, reset_expires = :expires WHERE email = :email");
$stmt->execute(['token' => $token, 'expires' => $expires, 'email' => $email]);


$subject = "Password Reset Request";
$message = "Dear User,

Please click on the following link to reset your password:

http://example.com/reset.php?token=$token

This link will expire in 30 minutes.

Best regards,
Your Support Team";
$headers = "From: noreply@example.com\r
";

mail($email, $subject, $message, $headers);


echo "An email with instructions to reset your password has been sent to $email.";


<?php
function forgot_password($email) {
    // Database configuration
    $host = 'localhost';
    $db_name = 'your_database';
    $username = 'username';
    $password = 'password';

    try {
        $pdo = new PDO("mysql:host=$host;dbname=$db_name", $username, $password);
        $pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

        // Check if email exists
        $stmt = $pdo->prepare("SELECT id FROM users WHERE email = :email");
        $stmt->execute(['email' => $email]);
        if ($stmt->rowCount() == 0) {
            return "Email not found.";
        }

        // Generate token and expiry time
        $token = bin2hex(random_bytes(16));
        $expires = date('Y-m-d H:i:s', strtotime('+30 minutes'));

        // Update user record
        $stmt = $pdo->prepare("UPDATE users SET reset_token = :token, reset_expires = :expires WHERE email = :email");
        $stmt->execute(['token' => $token, 'expires' => $expires, 'email' => $email]);

        // Send email
        $subject = "Password Reset Request";
        $message = "Dear User,

Please click on the following link to reset your password:

http://example.com/reset.php?token=$token

This link will expire in 30 minutes.

Best regards,
Your Support Team";
        $headers = "From: noreply@example.com\r
";

        if (mail($email, $subject, $message, $headers)) {
            return "Password reset instructions sent to your email.";
        } else {
            return "Failed to send email. Please try again later.";
        }

    } catch(PDOException $e) {
        return "Error: " . $e->getMessage();
    }
}

if (isset($_POST['email'])) {
    $email = $_POST['email'];
    if (!empty($email) && filter_var($email, FILTER_VALIDATE_EMAIL)) {
        echo forgot_password($email);
    } else {
        die("Invalid email address");
    }
}
?>


<?php
if (isset($_GET['token'])) {
    $token = $_GET['token'];
    
    // Database connection
    $host = 'localhost';
    $db_name = 'your_database';
    $username = 'username';
    $password = 'password';

    try {
        $pdo = new PDO("mysql:host=$host;dbname=$db_name", $username, $password);
        $pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

        // Check if token is valid and not expired
        $stmt = $pdo->prepare("SELECT id, reset_expires FROM users WHERE reset_token = :token");
        $stmt->execute(['token' => $token]);
        $user = $stmt->fetch(PDO::FETCH_ASSOC);
        
        if (!$user) {
            die("Invalid or expired token.");
        }

        // Check expiration
        if (strtotime($user['reset_expires']) < time()) {
            die("Token has expired. Please request a new one.");
        }

        // Show password reset form
        ?>
        <form method="post">
            New Password: <input type="password" name="new_password" required><br>
            Confirm Password: <input type="password" name="confirm_password" required><br>
            <input type="hidden" name="token" value="<?php echo $token; ?>">
            <input type="submit" value="Reset Password">
        </form>

        <?php
        if ($_SERVER['REQUEST_METHOD'] == 'POST') {
            $newPassword = $_POST['new_password'];
            $confirmPassword = $_POST['confirm_password'];
            
            if ($newPassword != $confirmPassword) {
                die("Passwords do not match.");
            }

            // Hash the password
            $hashedPassword = password_hash($newPassword, PASSWORD_DEFAULT);

            // Update password
            $stmt = $pdo->prepare("UPDATE users SET password = :password WHERE reset_token = :token");
            $stmt->execute(['password' => $hashedPassword, 'token' => $token]);

            // Invalidate token
            $stmt = $pdo->prepare("UPDATE users SET reset_token = NULL, reset_expires = NULL WHERE id = :id");
            $stmt->execute(['id' => $user['id']]);

            echo "Password has been successfully updated!";
        }
    } catch(PDOException $e) {
        die("Error: " . $e->getMessage());
    }
} else {
    die("No token provided.");
}
?>


<?php
// Include database configuration file
include('db_config.php');

if(isset($_POST['reset_password'])) {
    // Get email from POST request
    $email = $_POST['email'];
    
    // Validate email
    if(!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        die("Invalid email format");
    }
    
    // Check if email exists in database
    $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
    $stmt->bind_param('s', $email);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if($result->num_rows == 0) {
        die("Email not registered");
    }
    
    // Generate reset token
    $token = md5(uniqid(rand(), true));
    $expires = date('Y-m-d H:i:s', time() + 3600); // Token expires after 1 hour
    
    // Update database with the reset token and expiration time
    $stmt = $conn->prepare("UPDATE users SET reset_token = ?, reset_expires = ? WHERE email = ?");
    $stmt->bind_param('sss', $token, $expires, $email);
    
    if($stmt->execute()) {
        // Send password reset link to user's email
        $reset_link = "http://example.com/reset_password.php?token=" . $token;
        
        $to = $email;
        $subject = "Password Reset Request";
        $message = "
            <html>
                <body>
                    <p>We received a request to reset your password. Please click the link below to reset it:</p>
                    <a href='$reset_link'>Reset Password</a><br><br>
                    <p>If you did not request this password reset, please ignore this email.</p>
                    <p>This link will expire in 30 minutes.</p>
                </body>
            </html>
        ";
        
        $headers = "MIME-Version: 1.0" . "\r
";
        $headers .= "Content-type:text/html;charset=UTF-8" . "\r
";
        $headers .= "From: <your_email@example.com>" . "\r
";
        
        if(mail($to, $subject, $message, $headers)) {
            // Redirect to login page with success message
            header("Location: login.php?msg=We've sent you a password reset link. Check your email.");
            exit();
        } else {
            die("Failed to send reset link");
        }
    } else {
        die("Error resetting password");
    }
}
?>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$database = 'your_database';

// Create connection
$conn = new mysqli($host, $username, $password, $database);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to generate a random token
function generateToken() {
    $characters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';
    $token = '';
    for ($i = 0; $i < 30; $i++) {
        $token .= $characters[rand(0, strlen($characters) - 1)];
    }
    return $token;
}

// Function to send password reset email
function sendResetEmail($email, $resetToken) {
    $to = $email;
    $subject = 'Password Reset Request';
    $message = "Please click the following link to reset your password:

http://yourwebsite.com/reset-password.php?token=" . $resetToken;
    $headers = 'From: noreply@yourwebsite.com' . "\r
";
    
    if (mail($to, $subject, $message, $headers)) {
        return true;
    } else {
        return false;
    }
}

// Function to handle password reset request
function forgotPassword($email) {
    global $conn;
    
    // Check if email exists in the database
    $sql = "SELECT id FROM users WHERE email = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("s", $email);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows == 1) {
        $row = $result->fetch_assoc();
        $userId = $row['id'];
        
        // Generate a new reset token
        $resetToken = generateToken();
        $expires = date('Y-m-d H:i:s', strtotime('+1 hour'));
        
        // Insert the reset token into the database
        $sqlReset = "INSERT INTO password_resets (user_id, token, expires) VALUES (?, ?, ?)";
        $stmtReset = $conn->prepare($sqlReset);
        $stmtReset->bind_param("iss", $userId, $resetToken, $expires);
        
        if ($stmtReset->execute()) {
            // Send reset email
            if (sendResetEmail($email, $resetToken)) {
                return "A password reset link has been sent to your email address.";
            } else {
                return "An error occurred while sending the reset email.";
            }
        } else {
            return "An error occurred while processing your request.";
        }
    } else {
        return "Email not found in our records.";
    }
}

// Function to validate and reset password
function resetPassword($token, $newPassword) {
    global $conn;
    
    // Check if token exists and is valid
    $sql = "SELECT user_id FROM password_resets WHERE token = ? AND expires > NOW()";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("s", $token);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows == 1) {
        $row = $result->fetch_assoc();
        $userId = $row['user_id'];
        
        // Hash the new password
        $hashedPassword = password_hash($newPassword, PASSWORD_DEFAULT);
        
        // Update the user's password
        $sqlUpdate = "UPDATE users SET password = ? WHERE id = ?";
        $stmtUpdate = $conn->prepare($sqlUpdate);
        $stmtUpdate->bind_param("si", $hashedPassword, $userId);
        
        if ($stmtUpdate->execute()) {
            // Delete the reset token
            $sqlDelete = "DELETE FROM password_resets WHERE token = ?";
            $stmtDelete = $conn->prepare($sqlDelete);
            $stmtDelete->bind_param("s", $token);
            $stmtDelete->execute();
            
            return "Password has been successfully reset.";
        } else {
            return "An error occurred while resetting your password.";
        }
    } else {
        return "Invalid or expired token.";
    }
}

// Example usage:
if (isset($_POST['email'])) {
    $email = $_POST['email'];
    echo forgotPassword($email);
}

if (isset($_GET['token']) && isset($_POST['new_password'])) {
    $token = $_GET['token'];
    $newPassword = $_POST['new_password'];
    echo resetPassword($token, $newPassword);
}
?>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

try {
    // Create a new PDO instance
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

// Function to generate a random password
function generatePassword($length = 12) {
    $chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^&*()';
    $password = substr(str_shuffle($chars), 0, $length);
    return $password;
}

// Function to send reset password email
function sendResetPasswordEmail($email, $newPassword) {
    $to = $email;
    $subject = 'Reset Your Password';
    $message = "Dear User,

Your new password is: " . $newPassword . "

Please login and change your password immediately.

Best regards,
The Support Team";
    $headers = 'From: noreply@yourdomain.com' . "\r
" .
               'Reply-To: noreply@yourdomain.com' . "\r
" .
               'X-Mailer: PHP/' . phpversion();

    return mail($to, $subject, $message, $headers);
}

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get email from the form
    $email = $_POST['email'];

    try {
        // Prepare and execute the query
        $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
        $stmt->execute([$email]);
        
        // Check if user exists
        if ($stmt->rowCount() > 0) {
            // Generate a new password
            $newPassword = generatePassword();
            
            // Update the password in the database
            $updateStmt = $conn->prepare("UPDATE users SET password = ? WHERE email = ?");
            $updateStmt->execute([md5($newPassword), $email]);
            
            // Send reset password email
            if (sendResetPasswordEmail($email, $newPassword)) {
                echo "A new password has been sent to your email address.";
            } else {
                echo "Error sending email. Please try again later.";
            }
        } else {
            echo "This email does not exist in our records.";
        }
    } catch (PDOException $e) {
        die("Error: " . $e->getMessage());
    }
}

// Close the database connection
$conn = null;
?>


<?php
session_start();
// Connect to database
require_once 'config.php';

// Error/success messages
$messages = array();

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $email = isset($_POST['email']) ? $_POST['email'] : '';
    
    if (empty($email)) {
        $messages[] = "Please enter your email address.";
    } else {
        // Check if email exists in the database
        $sql = "SELECT id FROM users WHERE email=?";
        $stmt = mysqli_prepare($conn, $sql);
        mysqli_stmt_bind_param($stmt, 's', $email);
        mysqli_stmt_execute($stmt);
        $result = mysqli_stmt_get_result($stmt);
        
        if (mysqli_num_rows($result) == 0) {
            $messages[] = "This email is not registered.";
        } else {
            // Generate a random token
            $token = bin2hex(random_bytes(16));
            
            // Store the token in the database with expiration time (e.g., 1 hour)
            $expiration_time = time() + 3600;
            $sql = "INSERT INTO password_reset_tokens (user_id, token, expires_at) 
                    VALUES (?, ?, ?)";
            $stmt = mysqli_prepare($conn, $sql);
            mysqli_stmt_bind_param($stmt, 'iss', $result->fetch_assoc()['id'], $token, $expiration_time);
            mysqli_stmt_execute($stmt);
            
            // Send reset password email
            $reset_url = "http://".$_SERVER['HTTP_HOST']."/reset_password.php?token=".$token;
            $to = $email;
            $subject = "Reset Your Password";
            $message = "Click the following link to reset your password: 

".$reset_url."

This link will expire in 1 hour.";
            
            if (mail($to, $subject, $message)) {
                $messages[] = "We've sent you a password reset email. Check your inbox!";
            } else {
                $messages[] = "An error occurred while sending the email.";
            }
        }
    }
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Forgot Password</title>
</head>
<body>
    <div class="container">
        <?php foreach ($messages as $message) { ?>
            <div class="alert <?php echo (strpos($message, 'error:') === 0) ? 'error' : 'success'; ?>">
                <?php echo str_replace('error:', '', $message); ?>
            </div>
        <?php } ?>

        <h2>Forgot Password</h2>
        <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="POST">
            <label for="email">Email:</label>
            <input type="text" name="email" id="email">
            <button type="submit">Send Reset Link</button>
        </form>
    </div>
</body>
</html>


<?php
session_start();
require_once 'config.php';

if (!isset($_GET['token'])) {
    die("Invalid request.");
}

$token = $_GET['token'];

// Check if token exists and is valid
$sql = "SELECT * FROM password_reset_tokens WHERE token=? AND expires_at > ?";
$stmt = mysqli_prepare($conn, $sql);
mysqli_stmt_bind_param($stmt, 'si', $token, time());
mysqli_stmt_execute($stmt);
$result = mysqli_stmt_get_result($stmt);

if (mysqli_num_rows($result) == 0) {
    die("Invalid or expired token.");
}

// If the token is valid, show the password reset form
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Reset Password</title>
</head>
<body>
    <div class="container">
        <?php
            if (isset($_POST['submit'])) {
                $password = $_POST['password'];
                $confirm_password = $_POST['confirm_password'];
                
                if ($password !== $confirm_password) {
                    echo "Passwords do not match.";
                } else {
                    // Update the user's password
                    $user_id = $result->fetch_assoc()['user_id'];
                    
                    // Hash the new password
                    $hashed_password = password_hash($password, PASSWORD_DEFAULT);
                    
                    $sql = "UPDATE users SET password=? WHERE id=?";
                    $stmt = mysqli_prepare($conn, $sql);
                    mysqli_stmt_bind_param($stmt, 'si', $hashed_password, $user_id);
                    mysqli_stmt_execute($stmt);
                    
                    // Delete the token after use
                    $sql = "DELETE FROM password_reset_tokens WHERE token=?";
                    $stmt = mysqli_prepare($conn, $sql);
                    mysqli_stmt_bind_param($stmt, 's', $token);
                    mysqli_stmt_execute($stmt);
                    
                    echo "Password reset successfully! You can now <a href='login.php'>log in</a>";
                }
            } else {
        ?>
        
        <h2>Reset Password</h2>
        <form action="<?php echo $_SERVER['PHP_SELF'] . '?token=' . $token; ?>" method="POST">
            <label for="password">New Password:</label>
            <input type="password" name="password" id="password">
            
            <label for="confirm_password">Confirm Password:</label>
            <input type="password" name="confirm_password" id="confirm_password">
            
            <button type="submit" name="submit">Reset Password</button>
        </form>
        
        <?php } ?>
    </div>
</body>
</html>


<?php
$host = 'localhost';
$db_user = 'root';
$db_pass = '';
$db_name = 'your_database';

$conn = mysqli_connect($host, $db_user, $db_pass, $db_name);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Create password_reset_tokens table if it doesn't exist
$sql = "CREATE TABLE IF NOT EXISTS password_reset_tokens (
        id INT AUTO_INCREMENT PRIMARY KEY,
        user_id INT NOT NULL,
        token VARCHAR(255) NOT NULL,
        expires_at INT NOT NULL,
        FOREIGN KEY (user_id) REFERENCES users(id)
    )";
mysqli_query($conn, $sql);
?>


<?php
// Database configuration
$host = 'localhost';
$user = 'root';
$password = '';
$database = 'my_database';

// Connect to database
$conn = new mysqli($host, $user, $password, $database);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Session start
session_start();

// If form submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {

    // Get user input
    $email = $_POST['email'];

    // Check if email exists in database
    $sql = "SELECT id, username FROM users WHERE email=?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("s", $email);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {

        // Generate reset token
        $reset_token = bin2hex(random_bytes(16));

        // Set token expiration time (1 hour from now)
        $expires = date('Y-m-d H:i:s', strtotime('+1 hour'));

        // Update database with reset token and expiration time
        $sql = "UPDATE users SET reset_token=?, expires=? WHERE email=?";
        $stmt = $conn->prepare($sql);
        $stmt->bind_param("sss", $reset_token, $expires, $email);
        $stmt->execute();

        // Send password reset email
        $to = $email;
        $subject = "Password Reset Request";
        
        // Email content
        $message = "
            <html>
            <head></head>
            <body>
                <h2>Password Reset</h2>
                <p>Please click the following link to reset your password:</p>
                <a href='http://localhost/reset_password.php?token=$reset_token'>Reset Password</a><br><br>
                <small>This link will expire in 1 hour.</small>
            </body>
            </html>
        ";
        
        // Set headers for email
        $headers = "MIME-Version: 1.0\r
";
        $headers .= "Content-Type: text/html; charset=UTF-8\r
";
        $headers .= "From: webmaster@example.com\r
";

        // Send email
        mail($to, $subject, $message, $headers);

        // Set success message and redirect after 5 seconds
        $_SESSION['message'] = "We've sent a password reset link to your email.";
        header("refresh:5; url=http://localhost/forgot_password.php");
    } else {
        // Email not found in database
        $_SESSION['error'] = "This email address is not registered with us.";
        header("Location: http://localhost/forgot_password.php");
    }
}

// Close database connection
$conn->close();
?>


<?php
session_start();

if ($_SERVER["REQUEST_METHOD"] == "POST") {

    // Get token from URL
    $token = $_GET['token'];

    // Get user input
    $new_password = $_POST['new_password'];
    $confirm_password = $_POST['confirm_password'];

    // Check if passwords match
    if ($new_password != $confirm_password) {
        $_SESSION['error'] = "Passwords do not match!";
        header("Location: reset_password.php?token=$token");
        exit();
    }

    // Connect to database
    $conn = new mysqli($host, $user, $password, $database);

    // Check token validity
    $sql = "SELECT id, username FROM users WHERE reset_token=? AND expires > NOW()";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("s", $token);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows == 1) {

        // Update password
        $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);
        $sql = "UPDATE users SET password=?, reset_token=NULL WHERE reset_token=?";
        $stmt = $conn->prepare($sql);
        $stmt->bind_param("ss", $hashed_password, $token);
        $stmt->execute();

        $_SESSION['message'] = "Your password has been reset!";
        header("Location: login.php");
    } else {
        $_SESSION['error'] = "Invalid or expired token!";
        header("Location: forgot_password.php");
    }

    // Close database connection
    $conn->close();
}
?>


<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <?php
        $emailError = "";
        
        if ($_SERVER["REQUEST_METHOD"] == "POST") {
            $email = trim($_POST['email']);
            
            // Check if email is provided and valid
            if (empty($email)) {
                $emailError = "Email is required";
            } else {
                // Proceed to send reset link
                require_once('db_connect.php');
                
                // Prepare SQL query
                $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
                $stmt->bind_param("s", $email);
                $stmt->execute();
                $result = $stmt->get_result();
                
                if ($result->num_rows == 0) {
                    $emailError = "Email not found in our records";
                } else {
                    // Generate a random token
                    $token = bin2hex(random_bytes(16));
                    
                    // Store the token and expiration time in the database
                    $expires = date('Y-m-d H:i:s', strtotime('+30 minutes'));
                    
                    $stmt = $conn->prepare("INSERT INTO password_reset (user_id, token, expires) VALUES (?, ?, ?)");
                    $row = $result->fetch_assoc();
                    $stmt->bind_param("iss", $row['id'], $token, $expires);
                    $stmt->execute();
                    
                    // Send email
                    $resetLink = "http://".$_SERVER['HTTP_HOST']."/reset_password.php?token=".$token;
                    
                    $to = $email;
                    $subject = "Password Reset Request";
                    $message = "Please click the following link to reset your password:

".$resetLink."

This link will expire in 30 minutes.";
                    $headers = "From: yourwebsite@example.com" . "\r
";
                    
                    mail($to, $subject, $message, $headers);
                    
                    echo "<p>Password reset instructions have been sent to your email address.</p>";
                }
            }
        }
    ?>
    
    <h2>Forgot Password</h2>
    <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
        <?php if ($emailError != "") { ?>
            <div style="color: red;"><?php echo $emailError; ?></div><br>
        <?php } ?>
        Email: <input type="text" name="email" value="<?php echo $_POST['email']; ?>"><br>
        <input type="submit" value="Send Reset Link">
    </form>
</body>
</html>


<?php
session_start();

require_once('db_connect.php');

// Check if token is provided in URL and is valid
if (isset($_GET['token'])) {
    $token = $_GET['token'];
    
    // Get the token details from the database
    $stmt = $conn->prepare("SELECT * FROM password_reset WHERE token = ? AND expires > NOW()");
    $stmt->bind_param("s", $token);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows == 0) {
        die("Invalid or expired reset link.");
    } else {
        // Token is valid
        $row = $result->fetch_assoc();
        $_SESSION['reset_user_id'] = $row['user_id'];
        
        // Show password reset form
        if ($_SERVER["REQUEST_METHOD"] == "POST") {
            $new_password = trim($_POST['new_password']);
            $confirm_password = trim($_POST['confirm_password']);
            
            if ($new_password != $confirm_password) {
                die("Passwords do not match.");
            }
            
            // Minimum password length validation
            if (strlen($new_password) < 6) {
                die("Password must be at least 6 characters long.");
            }
            
            // Hash the new password
            $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);
            
            // Update the database
            $stmt = $conn->prepare("UPDATE users SET password = ? WHERE id = ?");
            $stmt->bind_param("si", $hashed_password, $_SESSION['reset_user_id']);
            $stmt->execute();
            
            // Delete the reset token
            $stmt = $conn->prepare("DELETE FROM password_reset WHERE user_id = ?");
            $stmt->bind_param("i", $_SESSION['reset_user_id']);
            $stmt->execute();
            
            echo "Password has been successfully updated. You can now <a href='login.php'>login</a>.";
        } else {
            // Show the form
?>
<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <h2>Reset Password</h2>
    <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"].'?token='.$token); ?>" method="post">
        New Password: <input type="password" name="new_password"><br>
        Confirm Password: <input type="password" name="confirm_password"><br><br>
        <input type="submit" value="Reset Password">
    </form>
</body>
</html>
<?php
        }
    }
} else {
    die("No token provided.");
}
?>


<?php
$servername = "localhost";
$username = "root";
$password = "";
$dbname = "your_database";

// Create connection
$conn = new mysqli($servername, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}
?>


// forgot_password.php
<?php
session_start();
include('config.php'); // Include your database configuration file

if (isset($_POST['reset_request'])) {
    $email = mysqli_real_escape_string($conn, $_POST['email']);
    
    if (empty($email)) {
        $error = "Please enter your email address";
    } else {
        // Check if email exists in the database
        $sql = "SELECT * FROM users WHERE email = '$email'";
        $result = mysqli_query($conn, $sql);
        
        if (mysqli_num_rows($result) == 1) {
            // Generate a unique token and expiration time
            $token = bin2hex(random_bytes(32));
            $expires = date('Y-m-d H:i:s', strtotime('+1 hour'));
            
            // Update the user's record with the new token and expiration time
            $update_sql = "UPDATE users SET reset_token = '$token', reset_expires = '$expires' WHERE email = '$email'";
            mysqli_query($conn, $update_sql);
            
            // Send reset password email
            $to = $email;
            $subject = "Password Reset Request";
            $message = "
                <html>
                    <head></head>
                    <body>
                        <p>You have requested to reset your password. Click the link below to set a new password:</p>
                        <a href='http://yourdomain.com/reset_password.php?token=$token'>Reset Password</a><br>
                        <small>This link will expire in 1 hour.</small>
                    </body>
                </html>
            ";
            
            // Set headers for email
            $headers = "MIME-Version: 1.0\r
";
            $headers .= "Content-type: text/html; charset=UTF-8\r
";
            $headers .= "From: yourname@yourdomain.com\r
";
            
            mail($to, $subject, $message, $headers);
            
            // Redirect to password reset confirmation
            header("Location: forgot_password_success.php");
            exit();
        } else {
            $error = "Email address not found in our records";
        }
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <?php if (isset($error)) { echo "<p style='color:red'>$error</p>"; } ?>
    <h2>Forgot Password</h2>
    <form action="<?php $_PHP_SELF ?>" method="post">
        <input type="email" name="email" placeholder="Enter your email address" required><br><br>
        <input type="submit" name="reset_request" value="Request Reset">
    </form>
</body>
</html>


// reset_password.php
<?php
session_start();
include('config.php');

if (!isset($_GET['token']) || empty($_GET['token'])) {
    header("Location: forgot_password.php");
    exit();
}

$token = mysqli_real_escape_string($conn, $_GET['token']);

$sql = "SELECT * FROM users WHERE reset_token = '$token'";
$result = mysqli_query($conn, $sql);

if (mysqli_num_rows($result) == 0) {
    // Invalid token
    header("Location: forgot_password.php?error=invalid_token");
    exit();
}

$user = mysqli_fetch_assoc($result);
$expires = $user['reset_expires'];

// Check if the reset link has expired
$current_time = date('Y-m-d H:i:s');
if ($current_time > $expires) {
    // Token has expired, regenerate a new token and send a new email
    $new_token = bin2hex(random_bytes(32));
    $new_expires = date('Y-m-d H:i:s', strtotime('+1 hour'));
    
    $update_sql = "UPDATE users SET reset_token = '$new_token', reset_expires = '$new_expires' WHERE id = {$user['id']}";
    mysqli_query($conn, $update_sql);
    
    // Send new reset password email
    $to = $user['email'];
    $subject = "New Password Reset Request";
    $message = "
        <html>
            <head></head>
            <body>
                <p>Your previous password reset link has expired. Click the new link below to set a new password:</p>
                <a href='http://yourdomain.com/reset_password.php?token=$new_token'>Reset Password</a><br>
                <small>This link will expire in 1 hour.</small>
            </body>
        </html>
    ";
    
    $headers = "MIME-Version: 1.0\r
";
    $headers .= "Content-type: text/html; charset=UTF-8\r
";
    $headers .= "From: yourname@yourdomain.com\r
";
    
    mail($to, $subject, $message, $headers);
    
    header("Location: forgot_password.php?error=expired_token");
    exit();
}

if (isset($_POST['reset_password'])) {
    // Validate and set the new password
    if ($_POST['new_password'] != $_POST['confirm_password']) {
        $error = "Passwords do not match";
    } else {
        $new_password = mysqli_real_escape_string($conn, $_POST['new_password']);
        
        // Update the user's password
        $update_sql = "UPDATE users SET password = '$new_password', reset_token = NULL WHERE id = {$user['id']}";
        mysqli_query($conn, $update_sql);
        
        // Destroy the token after use
        header("Location: login.php?success=1");
        exit();
    }
}

?>

<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <?php if (isset($error)) { echo "<p style='color:red'>$error</p>"; } ?>
    <h2>Set New Password</h2>
    <form action="<?php $_PHP_SELF ?>?token=<?php echo $token ?>" method="post">
        <input type="password" name="new_password" placeholder="New password" required><br><br>
        <input type="password" name="confirm_password" placeholder="Confirm new password" required><br><br>
        <input type="submit" name="reset_password" value="Set Password">
    </form>
</body>
</html>


<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
    <!-- Include your CSS -->
    <link rel="stylesheet" type="text/css" href="styles.css">
</head>
<body>
    <div class="container">
        <h2>Forgot Password</h2>
        <form action="reset-password.php" method="post">
            <?php
                // CSRF Token Generation
                session_start();
                if (!isset($_SESSION['token'])) {
                    $_SESSION['token'] = bin_hex(random_bytes(32));
                }
            ?>
            <input type="hidden" name="csrf_token" value="<?php echo $_SESSION['token']; ?>">
            <div class="form-group">
                <label for="email">Email:</label>
                <input type="email" id="email" name="email" required>
            </div>
            <button type="submit">Reset Password</button>
        </form>
    </div>
</body>
</html>


<?php
session_start();

// Check CSRF token
if (!isset($_POST['csrf_token']) || $_POST['csrf_token'] !== $_SESSION['token']) {
    header("Location: forgot-password.php");
    exit();
}

include 'db_connection.php';

$email = trim($_POST['email']);

// Check if email exists in the database
$sql = "SELECT id FROM users WHERE email = ?";
$stmt = $conn->prepare($sql);
$stmt->bind_param("s", $email);
$stmt->execute();
$result = $stmt->get_result();

if ($result->num_rows === 0) {
    header("Location: forgot-password.php?error=no_user");
    exit();
} else {
    // Generate temporary password
    $chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^&*';
    $temp_password = substr(str_shuffle($chars), 0, 12);

    // Hash the temporary password
    $hashed_password = password_hash($temp_password, PASSWORD_BCRYPT);

    // Update the user's password in the database
    $update_sql = "UPDATE users SET password = ? WHERE email = ?";
    $stmt = $conn->prepare($update_sql);
    $stmt->bind_param("ss", $hashed_password, $email);
    $stmt->execute();

    // Send email with temporary password
    $to = $email;
    $subject = 'Password Reset';
    $message = "Your temporary password is: $temp_password
Please change it upon login.";
    $headers = 'From: yoursite@example.com';

    mail($to, $subject, $message, $headers);

    header("Location: forgot-password.php?success=reset");
}

$conn->close();
?>



<?php
$host = 'localhost';
$user = 'root';
$password = '';
$db_name = 'your_database';

$conn = new mysqli($host, $user, $password, $db_name);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}
?>


<?php
// Include necessary files
require_once 'database_connection.php';
require_once 'email_sender.php';

function forgotPassword($email) {
    // Check if email exists in database
    $query = "SELECT id, first_name FROM users WHERE email = ?";
    
    try {
        $stmt = $conn->prepare($query);
        $stmt->execute([$email]);
        
        if ($stmt->rowCount() == 1) {
            $user = $stmt->fetch(PDO::FETCH_ASSOC);
            
            // Generate a random token
            $token = bin2hex(random_bytes(32));
            
            // Set the expiration time (e.g., 1 hour from now)
            $expires = date('Y-m-d H:i:s', strtotime('+1 hour'));
            
            // Update the database with the new token and expiration time
            $updateQuery = "UPDATE users SET reset_token = ?, reset_expires = ? WHERE email = ?";
            $updateStmt = $conn->prepare($updateQuery);
            $updateStmt->execute([$token, $expires, $email]);
            
            // Send the password reset link to the user's email
            $resetLink = "http://yourwebsite.com/reset-password.php?token=" . $token;
            $subject = "Password Reset Request";
            $body = "Dear " . $user['first_name'] . ",

You have requested a password reset. Please click on the following link to reset your password:

" . $resetLink . "

This link will expire in 1 hour.

Best regards,
The Team";
            
            sendEmail($email, $subject, $body);
            
            return "Password reset instructions have been sent to your email address.";
        } else {
            return "Email not found in our database. Please check your email and try again.";
        }
    } catch(PDOException $e) {
        return "An error occurred: " . $e->getMessage();
    }
}

// Example usage:
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    if (isset($_POST['email'])) {
        $email = $_POST['email'];
        echo forgotPassword($email);
    }
}
?>


<?php
if ($_SERVER['REQUEST_METHOD'] == 'GET') {
    if (isset($_GET['token'])) {
        $token = $_GET['token'];
        
        // Verify token in database and check expiration time
        // If valid, show password reset form
    } else {
        // Invalid or missing token
        die("Invalid request");
    }
} elseif ($_SERVER['REQUEST_METHOD'] == 'POST') {
    if (isset($_POST['token'], $_POST['password'])) {
        $token = $_POST['token'];
        $newPassword = password_hash($_POST['password'], PASSWORD_DEFAULT);
        
        // Update the user's password in the database
        // Clear or update the reset token and expiration time
        
        // Redirect to login page
    } else {
        die("Invalid request");
    }
}
?>


<?php
session_start();

// Database connection
$host = 'localhost';
$dbUsername = 'root';
$dbPassword = '';
$dbName = 'test';

$conn = new mysqli($host, $dbUsername, $dbPassword, $dbName);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to generate random token
function generateToken() {
    return bin2hex(random_bytes(16));
}

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Check if email or username is provided
    if (empty($_POST['email']) && empty($_POST['username'])) {
        $error = "Please enter your email or username.";
    } else {
        $email = $_POST['email'];
        $username = $_POST['username'];

        // Prepare and bind
        $stmt = $conn->prepare("SELECT id, email, username FROM users WHERE email=? OR username=?");
        $stmt->bind_param("ss", $email, $username);
        
        if ($stmt->execute()) {
            $result = $stmt->get_result();
            
            if ($result->num_rows > 0) {
                // User exists
                $user = $result->fetch_assoc();
                
                // Generate reset token and expiration time
                $token = generateToken();
                $expirationTime = date('Y-m-d H:i:s', strtotime('+1 hour'));
                
                // Hash the token before storing it in database
                $hashedToken = password_hash($token, PASSWORD_DEFAULT);
                
                // Insert into reset_tokens table
                $resetStmt = $conn->prepare("INSERT INTO reset_tokens (user_id, token, expires) VALUES (?, ?, ?)");
                $resetStmt->bind_param("iss", $user['id'], $hashedToken, $expirationTime);
                
                if ($resetStmt->execute()) {
                    // Send email with reset link
                    $to = $email ?: $username;
                    $subject = "Password Reset Request";
                    $message = "Please click the following link to reset your password:

http://yourdomain.com/reset-password.php?token=$token

This link will expire in 1 hour.";
                    
                    mail($to, $subject, $message);
                    
                    echo "An email has been sent with instructions to reset your password.";
                } else {
                    die("Error storing reset token: " . $conn->error);
                }
            } else {
                $error = "No account found with that email or username.";
            }
        } else {
            die("Database error: " . $conn->error);
        }
    }
}

// Close database connection
$conn->close();
?>


<?php
// Database configuration
$host = 'localhost';
$username_db = 'your_username';
$password_db = 'your_password';
$db_name = 'your_database';

// Create connection
$conn = new mysqli($host, $username_db, $password_db, $db_name);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to generate a random password
function generatePassword($length = 10) {
    $chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^&*()';
    $password = substr(str_shuffle($chars), 0, $length);
    return $password;
}

// Function to send email with new password
function sendNewPassword($email, $newPassword) {
    $to = $email;
    $subject = 'Your New Password';
    $message = "Hello,

Your new password is: " . $newPassword . "

Please login and change your password immediately.
";
    
    // Additional headers
    $headers = 'From: webmaster@example.com' . "\r
" .
        'Reply-To: webmaster@example.com' . "\r
" .
        'X-Mailer: PHP/' . phpversion();

    mail($to, $subject, $message, $headers);
}

// Process the form
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $email = $_POST['email'];
    
    // Sanitize input
    $email = mysqli_real_escape_string($conn, $trim(email));
    
    // Check if email exists in database
    $sql = "SELECT * FROM users WHERE email = '$email'";
    $result = $conn->query($sql);
    
    if ($result->num_rows > 0) {
        // Generate new password
        $newPassword = generatePassword();
        
        // Update database with new password
        $hash = password_hash($newPassword, PASSWORD_DEFAULT);
        $updateSql = "UPDATE users SET password = '$hash' WHERE email = '$email'";
        if ($conn->query($updateSql)) {
            // Send email
            sendNewPassword($email, $newPassword);
            
            // Redirect to login page with success message
            header("Location: login.php?msg=Password reset successful. Check your email.");
            exit();
        } else {
            echo "Error updating password: " . $conn->error;
        }
    } else {
        // Email not found
        header("Location: forgot_password.php?error=Email not found in our records.");
        exit();
    }
}
?>

<!-- Forgot Password Form -->
<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 20px;
            background-color: #f4f4f4;
        }
        .container {
            max-width: 500px;
            margin: 0 auto;
            background-color: white;
            padding: 20px;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }
        .form-group {
            margin-bottom: 15px;
        }
        input[type="text"] {
            width: 100%;
            padding: 8px;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-sizing: border-box;
        }
        button {
            background-color: #4CAF50;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            width: 100%;
        }
        button:hover {
            background-color: #45a049;
        }
        .message {
            margin-top: 10px;
            color: red;
        }
    </style>
</head>
<body>
    <div class="container">
        <?php
        // Show error message if set in URL parameters
        if (isset($_GET['error'])) {
            echo "<div class='message'>" . $_GET['error'] . "</div>";
        }
        ?>
        
        <h2>Forgot Password</h2>
        <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
            <div class="form-group">
                <label for="email">Email or Username:</label><br>
                <input type="text" id="email" name="email" required>
            </div>
            <button type="submit">Reset Password</button>
        </form>
        <p>Don't have an account? <a href="register.php">Register here</a>.</p>
    </div>
</body>
</html>

// Close database connection
$conn->close();
?>


<?php
// index.php - Forgot Password Page

session_start();

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = $_POST['email'];

    // Validate email input
    if (empty($email)) {
        $error = "Please enter your email address.";
    } else {
        // Connect to database
        include('db_connect.php');

        // Prepare SQL statement to check for existing user
        $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
        $stmt->bind_param("s", $email);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows == 0) {
            // No user found with this email
            $error = "No account exists with this email address.";
        } else {
            // Generate a random token for password reset
            $token = bin2hex(random_bytes(16));
            $expires = date('Y-m-d H:i:s', time() + 3600); // Token expires in 1 hour

            // Update user's record with the new token and expiration time
            $updateStmt = $conn->prepare("UPDATE users SET reset_token = ?, reset_expires = ? WHERE email = ?");
            $updateStmt->bind_param("sss", $token, $expires, $email);
            $updateStmt->execute();

            // Send password reset email
            $resetLink = "http://your-website.com/reset_password.php?token=" . $token;
            $to = $email;
            $subject = "Password Reset Request";
            $message = "Please click the following link to reset your password: 
" . $resetLink;
            
            if (mail($to, $subject, $message)) {
                echo "A password reset email has been sent to you. Please check your inbox.";
                header("Refresh:2; url=login.php");
                exit();
            } else {
                $error = "There was an error sending the password reset email.";
            }
        }
    }
}
?>
<!DOCTYPE html>
<html>
<head>
    <title>Forgot Password</title>
</head>
<body>
    <?php if (!empty($error)) { echo "<p>$error</p>"; } ?>
    <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
        Email: <input type="text" name="email"><br>
        <input type="submit" value="Submit">
    </form>
</body>
</html>

// reset_password.php - Password Reset Page

session_start();

if ($_GET['token']) {
    $token = $_GET['token'];
    
    // Connect to database
    include('db_connect.php');

    // Check if token exists and is valid
    $stmt = $conn->prepare("SELECT id, email FROM users WHERE reset_token = ? AND reset_expires > NOW()");
    $stmt->bind_param("s", $token);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows == 0) {
        // Invalid or expired token
        die("Invalid or expired password reset link. Please request a new one.");
    } else {
        // Show password reset form
        while ($row = $result->fetch_assoc()) {
            $email = $row['email'];
        }
        
        if ($_SERVER["REQUEST_METHOD"] == "POST") {
            $new_password = $_POST['password'];
            $confirm_password = $_POST['cpassword'];

            // Validate input
            if (empty($new_password) || empty($confirm_password)) {
                $error = "Please fill in all fields.";
            } elseif ($new_password !== $confirm_password) {
                $error = "Passwords do not match.";
            } else {
                // Update user's password
                $hash = password_hash($new_password, PASSWORD_DEFAULT);
                
                $updateStmt = $conn->prepare("UPDATE users SET password = ?, reset_token = NULL, reset_expires = NULL WHERE email = ?");
                $updateStmt->bind_param("ss", $hash, $email);
                $updateStmt->execute();

                // Show success message
                echo "Your password has been updated. <a href='login.php'>Click here to login</a>";
                header("Refresh:2; url=login.php");
                exit();
            }
        }
    }
} else {
    die("No token provided.");
}
?>
<!DOCTYPE html>
<html>
<head>
    <title>Reset Password</title>
</head>
<body>
    <?php if (!empty($error)) { echo "<p>$error</p>"; } ?>
    <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>?token=<?php echo $token; ?>" method="post">
        New Password: <input type="password" name="password"><br>
        Confirm Password: <input type="password" name="cpassword"><br>
        <input type="submit" value="Reset Password">
    </form>
</body>
</html>

// db_connect.php - Database Connection

<?php
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "myDB";

$conn = new mysqli($servername, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}
?>


<?php
include('db_connection.php'); // Include your database connection

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = $_POST['email'];
    
    // Validate email
    if (empty($email)) {
        header("Location: forgot-password-form.php?status=Please enter your email address");
        exit();
    }
    
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        header("Location: forgot-password-form.php?status=Invalid email format");
        exit();
    }
    
    // Check if email exists in the database
    $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
    $stmt->bind_param("s", $email);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows == 0) {
        header("Location: forgot-password-form.php?status=Email not found");
        exit();
    }
    
    // Generate a random token
    $token = bin2hex(openssl_random_pseudo_bytes(16));
    $expires = date('Y-m-d H:i:s', time() + 3600); // Token expires after 1 hour
    
    // Update the database with the token and expiration time
    $updateStmt = $conn->prepare("UPDATE users SET reset_token = ?, reset_expires = ? WHERE email = ?");
    $updateStmt->bind_param("sss", $token, $expires, $email);
    
    if (!$updateStmt->execute()) {
        header("Location: forgot-password-form.php?status=Error resetting password");
        exit();
    }
    
    // Send the password reset link to the user's email
    $to = $email;
    $subject = "Password Reset Request";
    $message = "Please click the following link to reset your password:

";
    $message .= "http://your-website.com/reset-password.php?token=" . $token . "&email=" . urlencode($email);
    $headers = "From: your-website@example.com\r
";
    
    if (mail($to, $subject, $message, $headers)) {
        header("Location: forgot-password-form.php?status=Password reset link sent to your email");
    } else {
        header("Location: forgot-password-form.php?status=Error sending email");
    }
}
?>


<?php
include('db_connection.php'); // Include your database connection

if (isset($_GET['token']) && isset($_GET['email'])) {
    $token = $_GET['token'];
    $email = $_GET['email'];
    
    // Check if token exists and is still valid
    $stmt = $conn->prepare("SELECT id FROM users WHERE reset_token = ? AND email = ? AND reset_expires > NOW()");
    $stmt->bind_param("ss", $token, $email);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows == 0) {
        header("Location: forgot-password-form.php?status=Invalid or expired token");
        exit();
    }
    
    // Show password reset form
    ?>
    <html>
    <head>
        <title>Reset Password</title>
    </head>
    <body>
        <h2>Reset Password</h2>
        <form action="reset-password.php?token=<?php echo $token; ?>&email=<?php echo urlencode($email); ?>" method="post">
            New Password: <input type="password" name="new_password" required><br>
            Confirm Password: <input type="password" name="confirm_password" required><br>
            <button type="submit">Reset Password</button>
        </form>
    </body>
    </html>
    <?php
} else {
    header("Location: forgot-password-form.php?status=Invalid request");
    exit();
}

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $token = $_GET['token'];
    $email = $_GET['email'];
    $new_password = $_POST['new_password'];
    $confirm_password = $_POST['confirm_password'];
    
    if ($new_password != $confirm_password) {
        die("Passwords do not match");
    }
    
    // Update the password
    $stmt = $conn->prepare("UPDATE users SET password = ?, reset_token = NULL, reset_expires = NULL WHERE email = ?");
    $stmt->bind_param("ss", password_hash($new_password, PASSWORD_DEFAULT), $email);
    
    if (!$stmt->execute()) {
        die("Error resetting password");
    }
    
    header("Location: login.php?status=Password reset successfully");
}
?>

