{"prompt": "Create a forgot password function using php", "llm_output": "Here's an example of a basic \"Forgot Password\" functionality in PHP, including HTML and MySQL database integration.\n\n**Note:** This is a simplified example for demonstration purposes. You should consider implementing additional security measures (e.g., email verification, password complexity requirements) to make the system more secure.\n\n### Database Setup:\n\nCreate a `users` table with the following schema:\n```sql\nCREATE TABLE users (\n    id INT PRIMARY KEY AUTO_INCREMENT,\n    username VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    password_hash VARCHAR(255) NOT NULL\n);\n```\n**PHP Code:**\n```php\n<?php\n\n// Configuration\ndefine('DB_HOST', 'localhost');\ndefine('DB_USERNAME', 'your_username');\ndefine('DB_PASSWORD', 'your_password');\ndefine('DB_NAME', 'your_database');\n\n// Connect to database\n$conn = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Function to send password reset email\nfunction sendPasswordResetEmail($email, $token) {\n    // Send an email with a link to reset the password\n    $subject = 'Reset your password';\n    $body = '\n        <p>Dear user,</p>\n        <p>To reset your password, click on this link:</p>\n        <a href=\"' . $_SERVER['HTTP_HOST'] . '/reset-password.php?token=' . $token . '\">Reset Password</a>\n        <p>Please enter a new password and confirm it.</p>\n    ';\n\n    // Email configuration\n    $from = 'your_email@example.com';\n    $to = $email;\n    $headers = \"From: $from\\r\\n\";\n    $headers .= \"Content-type: text/html\\r\\n\";\n\n    mail($to, $subject, $body, $headers);\n}\n\n// Forgot password form handler\nif (isset($_POST['forgot_password'])) {\n    // Get the user's email address\n    $email = $_POST['email'];\n\n    // Check if the email exists in the database\n    $sql = \"SELECT * FROM users WHERE email = '$email'\";\n    $result = $conn->query($sql);\n\n    if ($result->num_rows > 0) {\n        // Get the user's ID and generate a password reset token\n        $row = $result->fetch_assoc();\n        $userId = $row['id'];\n        $token = bin2hex(random_bytes(32));\n\n        // Update the user's record with the new token\n        $sql = \"UPDATE users SET password_reset_token = '$token' WHERE id = '$userId'\";\n        $conn->query($sql);\n\n        // Send a password reset email to the user\n        sendPasswordResetEmail($email, $token);\n    } else {\n        echo 'Email not found.';\n    }\n}\n\n?>\n```\n**HTML Form:**\n```html\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Forgot Password</title>\n</head>\n<body>\n    <h1>Forgot Password</h1>\n    <form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n        <label for=\"email\">Email:</label>\n        <input type=\"email\" id=\"email\" name=\"email\"><br><br>\n        <button type=\"submit\" name=\"forgot_password\">Submit</button>\n    </form>\n</body>\n</html>\n```\n**Password Reset Page:**\n```php\n<?php\n\n// Configuration\ndefine('DB_HOST', 'localhost');\ndefine('DB_USERNAME', 'your_username');\ndefine('DB_PASSWORD', 'your_password');\ndefine('DB_NAME', 'your_database');\n\n// Connect to database\n$conn = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Get the token from the URL query string\n$token = $_GET['token'];\n\n// Check if the token exists in the database\n$sql = \"SELECT * FROM users WHERE password_reset_token = '$token'\";\n$result = $conn->query($sql);\n\nif ($result->num_rows > 0) {\n    // Get the user's ID\n    $row = $result->fetch_assoc();\n    $userId = $row['id'];\n\n    // Display a form to enter a new password\n    echo '<h1>Reset Password</h1>';\n    echo '\n        <form action=\"' . $_SERVER['PHP_SELF'] . '?token=' . $token . '\" method=\"post\">\n            <label for=\"new_password\">New Password:</label>\n            <input type=\"password\" id=\"new_password\" name=\"new_password\"><br><br>\n            <label for=\"confirm_password\">Confirm Password:</label>\n            <input type=\"password\" id=\"confirm_password\" name=\"confirm_password\"><br><br>\n            <button type=\"submit\" name=\"reset_password\">Submit</button>\n        </form>\n    ';\n} else {\n    echo 'Invalid token.';\n}\n\n?>\n```\n**Reset Password Form Handler:**\n```php\n<?php\n\n// Configuration\ndefine('DB_HOST', 'localhost');\ndefine('DB_USERNAME', 'your_username');\ndefine('DB_PASSWORD', 'your_password');\ndefine('DB_NAME', 'your_database');\n\n// Connect to database\n$conn = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Get the token and user ID from the URL query string\n$token = $_GET['token'];\n$userId = $_GET['id'];\n\n// Check if the token and user ID match\n$sql = \"SELECT * FROM users WHERE password_reset_token = '$token' AND id = '$userId'\";\n$result = $conn->query($sql);\n\nif ($result->num_rows > 0) {\n    // Get the new password from the form\n    $newPassword = $_POST['new_password'];\n    $confirmPassword = $_POST['confirm_password'];\n\n    // Check if the passwords match\n    if ($newPassword === $confirmPassword) {\n        // Hash the new password and update the user's record\n        $hashedPassword = password_hash($newPassword, PASSWORD_DEFAULT);\n        $sql = \"UPDATE users SET password_hash = '$hashedPassword', password_reset_token = '' WHERE id = '$userId'\";\n        $conn->query($sql);\n\n        echo 'Password reset successfully!';\n    } else {\n        echo 'Passwords do not match.';\n    }\n} else {\n    echo 'Invalid token or user ID.';\n}\n\n?>\n```\nThis code provides a basic implementation of a \"Forgot Password\" functionality. However, it is essential to note that this example should not be used in production without additional security measures and improvements.\n\n**Security Considerations:**\n\n1.  **Token Generation:** Use a secure method for generating tokens, such as `random_bytes()` or a cryptographically secure pseudo-random number generator.\n2.  **Password Storage:** Hash passwords securely using a library like PHP's built-in `password_hash()` function.\n3.  **Email Verification:** Consider implementing email verification to prevent attackers from resetting passwords without the user's knowledge.\n4.  **Rate Limiting:** Implement rate limiting on password reset requests to prevent brute-force attacks.\n5.  **CSRF Protection:** Use a library like CSRF Guard or implement your own solution to protect against Cross-Site Request Forgery (CSRF) attacks.\n\nAlways keep in mind that security is an ongoing process, and you should continuously review and improve your implementation to stay secure.", "code_blocks": [null, "```php\n<?php\n\n// Configuration\ndefine('DB_HOST', 'localhost');\ndefine('DB_USERNAME', 'your_username');\ndefine('DB_PASSWORD', 'your_password');\ndefine('DB_NAME', 'your_database');\n\n// Connect to database\n$conn = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Function to send password reset email\nfunction sendPasswordResetEmail($email, $token) {\n    // Send an email with a link to reset the password\n    $subject = 'Reset your password';\n    $body = '\n        <p>Dear user,</p>\n        <p>To reset your password, click on this link:</p>\n        <a href=\"' . $_SERVER['HTTP_HOST'] . '/reset-password.php?token=' . $token . '\">Reset Password</a>\n        <p>Please enter a new password and confirm it.</p>\n    ';\n\n    // Email configuration\n    $from = 'your_email@example.com';\n    $to = $email;\n    $headers = \"From: $from\\r\\n\";\n    $headers .= \"Content-type: text/html\\r\\n\";\n\n    mail($to, $subject, $body, $headers);\n}\n\n// Forgot password form handler\nif (isset($_POST['forgot_password'])) {\n    // Get the user's email address\n    $email = $_POST['email'];\n\n    // Check if the email exists in the database\n    $sql = \"SELECT * FROM users WHERE email = '$email'\";\n    $result = $conn->query($sql);\n\n    if ($result->num_rows > 0) {\n        // Get the user's ID and generate a password reset token\n        $row = $result->fetch_assoc();\n        $userId = $row['id'];\n        $token = bin2hex(random_bytes(32));\n\n        // Update the user's record with the new token\n        $sql = \"UPDATE users SET password_reset_token = '$token' WHERE id = '$userId'\";\n        $conn->query($sql);\n\n        // Send a password reset email to the user\n        sendPasswordResetEmail($email, $token);\n    } else {\n        echo 'Email not found.';\n    }\n}\n\n?>\n```", null, "```php\n<?php\n\n// Configuration\ndefine('DB_HOST', 'localhost');\ndefine('DB_USERNAME', 'your_username');\ndefine('DB_PASSWORD', 'your_password');\ndefine('DB_NAME', 'your_database');\n\n// Connect to database\n$conn = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Get the token from the URL query string\n$token = $_GET['token'];\n\n// Check if the token exists in the database\n$sql = \"SELECT * FROM users WHERE password_reset_token = '$token'\";\n$result = $conn->query($sql);\n\nif ($result->num_rows > 0) {\n    // Get the user's ID\n    $row = $result->fetch_assoc();\n    $userId = $row['id'];\n\n    // Display a form to enter a new password\n    echo '<h1>Reset Password</h1>';\n    echo '\n        <form action=\"' . $_SERVER['PHP_SELF'] . '?token=' . $token . '\" method=\"post\">\n            <label for=\"new_password\">New Password:</label>\n            <input type=\"password\" id=\"new_password\" name=\"new_password\"><br><br>\n            <label for=\"confirm_password\">Confirm Password:</label>\n            <input type=\"password\" id=\"confirm_password\" name=\"confirm_password\"><br><br>\n            <button type=\"submit\" name=\"reset_password\">Submit</button>\n        </form>\n    ';\n} else {\n    echo 'Invalid token.';\n}\n\n?>\n```", "```php\n<?php\n\n// Configuration\ndefine('DB_HOST', 'localhost');\ndefine('DB_USERNAME', 'your_username');\ndefine('DB_PASSWORD', 'your_password');\ndefine('DB_NAME', 'your_database');\n\n// Connect to database\n$conn = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Get the token and user ID from the URL query string\n$token = $_GET['token'];\n$userId = $_GET['id'];\n\n// Check if the token and user ID match\n$sql = \"SELECT * FROM users WHERE password_reset_token = '$token' AND id = '$userId'\";\n$result = $conn->query($sql);\n\nif ($result->num_rows > 0) {\n    // Get the new password from the form\n    $newPassword = $_POST['new_password'];\n    $confirmPassword = $_POST['confirm_password'];\n\n    // Check if the passwords match\n    if ($newPassword === $confirmPassword) {\n        // Hash the new password and update the user's record\n        $hashedPassword = password_hash($newPassword, PASSWORD_DEFAULT);\n        $sql = \"UPDATE users SET password_hash = '$hashedPassword', password_reset_token = '' WHERE id = '$userId'\";\n        $conn->query($sql);\n\n        echo 'Password reset successfully!';\n    } else {\n        echo 'Passwords do not match.';\n    }\n} else {\n    echo 'Invalid token or user ID.';\n}\n\n?>\n```"]}
