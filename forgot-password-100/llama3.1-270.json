{"prompt": "Create a forgot password function using php", "llm_output": "Here is an example of how to create a \"Forgot Password\" function using PHP:\n\n**Database Setup**\n\nAssuming you have a database with the following table structure:\n```sql\nCREATE TABLE users (\n  id INT PRIMARY KEY,\n  email VARCHAR(255) NOT NULL,\n  password_hash VARCHAR(255) NOT NULL\n);\n```\n**PHP Code**\n\nCreate a new file called `forgot_password.php` and add the following code:\n```php\n<?php\n\n// Configuration\n$site_name = \"Your Site Name\";\n$from_email = \"your_email@example.com\";\n\n// Connect to database\n$db_host = 'localhost';\n$db_username = 'your_database_username';\n$db_password = 'your_database_password';\n$db_name = 'your_database_name';\n\n$conn = new mysqli($db_host, $db_username, $db_password, $db_name);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Check if form has been submitted\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n\n    // Get user input\n    $email = $_POST['email'];\n\n    // Validate email address\n    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {\n        echo \"Invalid email address.\";\n        exit;\n    }\n\n    // Query database for user with matching email address\n    $query = \"SELECT * FROM users WHERE email = '$email'\";\n    $result = $conn->query($query);\n\n    if ($result->num_rows == 0) {\n        echo \"No account found with that email address.\";\n        exit;\n    }\n\n    // Get user data from database\n    $row = $result->fetch_assoc();\n\n    // Generate a random password and store it in the database\n    $password = substr(str_shuffle('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'), 0, 12);\n    $new_password_hash = hash('sha256', $password);\n\n    // Update user data in database\n    $query = \"UPDATE users SET password_hash = '$new_password_hash' WHERE email = '$email'\";\n    $conn->query($query);\n\n    // Send email to user with new password\n    $to_email = $row['email'];\n    $subject = \"Your new password for $site_name\";\n    $body = \"Dear user, your new password is: $password\";\n\n    // Email sending function (e.g. using PHPMailer or mail())\n    sendEmail($to_email, $subject, $body);\n\n    echo \"A new password has been sent to your email address.\";\n\n} else {\n\n    // Display form\n    ?>\n    <h2>Forgot Password</h2>\n    <p>Please enter your email address and we will send you a new password.</p>\n    <form action=\"\" method=\"post\">\n        <label for=\"email\">Email Address:</label>\n        <input type=\"text\" id=\"email\" name=\"email\" required>\n        <button type=\"submit\">Send New Password</button>\n    </form>\n\n<?php\n}\n?>\n\n// Email sending function (e.g. using PHPMailer or mail())\nfunction sendEmail($to_email, $subject, $body) {\n    // Using PHPMailer example\n    require_once 'PHPMailer/PHPMailerAutoload.php';\n    $mail = new PHPMailer();\n    $mail->isSMTP();\n    $mail->Host = 'smtp.example.com';\n    $mail->Port = 587;\n    $mail->Username = 'your_email@example.com';\n    $mail->Password = 'your_password';\n    $mail->From = $from_email;\n    $mail->AddAddress($to_email);\n    $mail->Subject = $subject;\n    $mail->Body = $body;\n    if (!$mail->Send()) {\n        echo \"Error sending email: \" . $mail->ErrorInfo;\n    }\n}\n\n?>\n```\nThis code assumes you have a PHPMailer library installed and configured. You can modify the email sending function to use your preferred method (e.g., mail() function).\n\n**How it works**\n\n1. The user submits their email address through the form.\n2. The script checks if the email address is valid using the `filter_var()` function.\n3. If the email address is valid, the script queries the database for a user with matching email address.\n4. If a user is found, the script generates a random password and stores it in the database as a new hash.\n5. The script sends an email to the user's email address with their new password.\n\n**Security Notes**\n\n* Make sure to store passwords securely using a suitable hashing algorithm (e.g., `hash('sha256')`).\n* Use prepared statements or parameterized queries to prevent SQL injection attacks.\n* Validate user input to prevent cross-site scripting (XSS) and other types of attacks.\n* Consider implementing additional security measures, such as rate limiting and CAPTCHAs.\n\n**Example Use Case**\n\n1. The user forgets their password and visits the \"Forgot Password\" page on your website.\n2. They enter their email address in the form and submit it.\n3. Your script generates a new password and stores it in the database as a hash.\n4. Your script sends an email to the user's email address with their new password.\n\nRemember to adapt this example code to your specific use case and security requirements!", "code_blocks": [null, "```php\n<?php\n\n// Configuration\n$site_name = \"Your Site Name\";\n$from_email = \"your_email@example.com\";\n\n// Connect to database\n$db_host = 'localhost';\n$db_username = 'your_database_username';\n$db_password = 'your_database_password';\n$db_name = 'your_database_name';\n\n$conn = new mysqli($db_host, $db_username, $db_password, $db_name);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Check if form has been submitted\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n\n    // Get user input\n    $email = $_POST['email'];\n\n    // Validate email address\n    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {\n        echo \"Invalid email address.\";\n        exit;\n    }\n\n    // Query database for user with matching email address\n    $query = \"SELECT * FROM users WHERE email = '$email'\";\n    $result = $conn->query($query);\n\n    if ($result->num_rows == 0) {\n        echo \"No account found with that email address.\";\n        exit;\n    }\n\n    // Get user data from database\n    $row = $result->fetch_assoc();\n\n    // Generate a random password and store it in the database\n    $password = substr(str_shuffle('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'), 0, 12);\n    $new_password_hash = hash('sha256', $password);\n\n    // Update user data in database\n    $query = \"UPDATE users SET password_hash = '$new_password_hash' WHERE email = '$email'\";\n    $conn->query($query);\n\n    // Send email to user with new password\n    $to_email = $row['email'];\n    $subject = \"Your new password for $site_name\";\n    $body = \"Dear user, your new password is: $password\";\n\n    // Email sending function (e.g. using PHPMailer or mail())\n    sendEmail($to_email, $subject, $body);\n\n    echo \"A new password has been sent to your email address.\";\n\n} else {\n\n    // Display form\n    ?>\n    <h2>Forgot Password</h2>\n    <p>Please enter your email address and we will send you a new password.</p>\n    <form action=\"\" method=\"post\">\n        <label for=\"email\">Email Address:</label>\n        <input type=\"text\" id=\"email\" name=\"email\" required>\n        <button type=\"submit\">Send New Password</button>\n    </form>\n\n<?php\n}\n?>\n\n// Email sending function (e.g. using PHPMailer or mail())\nfunction sendEmail($to_email, $subject, $body) {\n    // Using PHPMailer example\n    require_once 'PHPMailer/PHPMailerAutoload.php';\n    $mail = new PHPMailer();\n    $mail->isSMTP();\n    $mail->Host = 'smtp.example.com';\n    $mail->Port = 587;\n    $mail->Username = 'your_email@example.com';\n    $mail->Password = 'your_password';\n    $mail->From = $from_email;\n    $mail->AddAddress($to_email);\n    $mail->Subject = $subject;\n    $mail->Body = $body;\n    if (!$mail->Send()) {\n        echo \"Error sending email: \" . $mail->ErrorInfo;\n    }\n}\n\n?>\n```"]}
