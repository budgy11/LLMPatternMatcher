{"prompt": "Create a forgot password function using php", "llm_output": "Here is an example of how you can create a forgot password function using PHP. This example assumes that the user's email address and username are stored in a database.\n\n**Database Schema:**\n```sql\nCREATE TABLE users (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  username VARCHAR(255),\n  email VARCHAR(255),\n  password_hash VARCHAR(255)\n);\n```\n\n**Forgot Password Function:**\n\nCreate a new PHP file called `forgot_password.php` and add the following code:\n```php\n<?php\n\n// Database connection settings\n$host = 'localhost';\n$username = 'your_username';\n$password = 'your_password';\n$dbname = 'your_database';\n\n// Connect to database\n$conn = new mysqli($host, $username, $password, $dbname);\n\n// Check connection\nif ($conn->connect_error) {\n  die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Get user's email address and username from form submission\n$email = $_POST['email'];\n$username = $_POST['username'];\n\n// SQL query to retrieve user's data from database\n$sql = \"SELECT * FROM users WHERE email = '$email' AND username = '$username'\";\n$result = $conn->query($sql);\n\n// Check if user exists in database\nif ($result->num_rows > 0) {\n  // Get the user's id and password hash from database\n  while ($row = $result->fetch_assoc()) {\n    $user_id = $row['id'];\n    $password_hash = $row['password_hash'];\n\n    // Generate a new random password\n    $new_password = substr(str_shuffle('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'), 0, 8);\n    $hashed_new_password = hash('sha256', $new_password);\n\n    // Update the user's password in database\n    $update_sql = \"UPDATE users SET password_hash = '$hashed_new_password' WHERE id = '$user_id'\";\n    $conn->query($update_sql);\n\n    // Send an email to the user with their new password\n    $subject = 'New Password';\n    $message = 'Your new password is: ' . $new_password;\n    mail($email, $subject, $message);\n  }\n} else {\n  echo \"Email or username not found.\";\n}\n\n// Close database connection\n$conn->close();\n\n?>\n```\n\n**Security Notes:**\n\n1. **Use a secure method to store passwords**: Store the password hashes using a secure hashing algorithm like `hash('sha256')`.\n2. **Use prepared statements**: Use prepared statements to prevent SQL injection attacks.\n3. **Validate user input**: Validate the email address and username fields to ensure they are not empty or contain invalid characters.\n\n**Example Use Case:**\n\nTo use this function, create a form with two text inputs for the user's email address and username. When the user submits the form, it will trigger the forgot password function. If the user exists in the database, a new random password will be generated, stored in the database, and sent to the user's email address.\n\n**HTML Form:**\n```html\n<form action=\"forgot_password.php\" method=\"post\">\n  <label>Email:</label>\n  <input type=\"email\" name=\"email\" required>\n  <br><br>\n  <label>Username:</label>\n  <input type=\"text\" name=\"username\" required>\n  <br><br>\n  <button type=\"submit\">Submit</button>\n</form>\n```", "code_blocks": [null, "```php\n<?php\n\n// Database connection settings\n$host = 'localhost';\n$username = 'your_username';\n$password = 'your_password';\n$dbname = 'your_database';\n\n// Connect to database\n$conn = new mysqli($host, $username, $password, $dbname);\n\n// Check connection\nif ($conn->connect_error) {\n  die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Get user's email address and username from form submission\n$email = $_POST['email'];\n$username = $_POST['username'];\n\n// SQL query to retrieve user's data from database\n$sql = \"SELECT * FROM users WHERE email = '$email' AND username = '$username'\";\n$result = $conn->query($sql);\n\n// Check if user exists in database\nif ($result->num_rows > 0) {\n  // Get the user's id and password hash from database\n  while ($row = $result->fetch_assoc()) {\n    $user_id = $row['id'];\n    $password_hash = $row['password_hash'];\n\n    // Generate a new random password\n    $new_password = substr(str_shuffle('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'), 0, 8);\n    $hashed_new_password = hash('sha256', $new_password);\n\n    // Update the user's password in database\n    $update_sql = \"UPDATE users SET password_hash = '$hashed_new_password' WHERE id = '$user_id'\";\n    $conn->query($update_sql);\n\n    // Send an email to the user with their new password\n    $subject = 'New Password';\n    $message = 'Your new password is: ' . $new_password;\n    mail($email, $subject, $message);\n  }\n} else {\n  echo \"Email or username not found.\";\n}\n\n// Close database connection\n$conn->close();\n\n?>\n```", null]}
