{"prompt": "Create a forgot password function using php", "llm_output": "Here is an example of a \"Forgot Password\" functionality using PHP:\n\n**Database Schema**\n\nFor this example, we'll assume you have a database table `users` with the following columns:\n\n| Column Name | Data Type |\n| --- | --- |\n| id | int (primary key) |\n| email | varchar(255) |\n| password | varchar(255) |\n\n**Forgot Password Functionality**\n\nCreate a new PHP file called `forgot_password.php`. This script will handle the forgot password functionality.\n\n```php\n<?php\n\n// Configuration\ndefine('DB_HOST', 'your_host');\ndefine('DB_USER', 'your_user');\ndefine('DB_PASSWORD', 'your_password');\ndefine('DB_NAME', 'your_database');\n\n// Connect to database\n$conn = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Check if request method is POST\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n\n    // Get email from form submission\n    $email = $_POST['email'];\n\n    // Validate email input\n    if (empty($email) || !filter_var($email, FILTER_VALIDATE_EMAIL)) {\n        echo \"Invalid email address.\";\n        exit;\n    }\n\n    // Query database for user with matching email\n    $query = \"SELECT * FROM users WHERE email = '$email'\";\n    $result = $conn->query($query);\n\n    if ($result->num_rows > 0) {\n\n        // Get user data from query result\n        while ($row = $result->fetch_assoc()) {\n            $user_id = $row['id'];\n        }\n\n        // Generate random password\n        $new_password = substr(md5(uniqid(rand(), true)), 0, 8);\n\n        // Update user's password in database\n        $query = \"UPDATE users SET password = '$new_password' WHERE id = '$user_id'\";\n        $result = $conn->query($query);\n\n        if ($result) {\n\n            // Send email to user with new password\n            send_email($email, $new_password);\n\n            echo \"New password sent to your email.\";\n        } else {\n            echo \"Error updating user's password.\";\n        }\n    } else {\n        echo \"User not found with provided email address.\";\n    }\n\n} else {\n\n    // Display forgot password form if request method is not POST\n?>\n\n<form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n    <label for=\"email\">Email:</label>\n    <input type=\"email\" id=\"email\" name=\"email\"><br><br>\n    <input type=\"submit\" value=\"Submit\">\n</form>\n\n<?php\n\n}\n\n// Function to send email with new password\nfunction send_email($to_email, $new_password) {\n    // Configuration for your email account\n    define('EMAIL_FROM', 'your_email@example.com');\n    define('EMAIL_PASSWORD', 'your_email_password');\n\n    // Use PHPMailer or any other mail library to send email\n    require_once 'PHPMailerAutoload.php';\n\n    $mail = new PHPMailer();\n    $mail->isSMTP();\n    $mail->Host = 'smtp.example.com';\n    $mail->Port = 587;\n    $mail->SMTPAuth = true;\n    $mail->Username = EMAIL_FROM;\n    $mail->Password = EMAIL_PASSWORD;\n\n    $mail->setFrom(EMAIL_FROM, 'Your Name');\n    $mail->addAddress($to_email);\n    $mail->Subject = 'New Password';\n    $mail->Body = \"Hello,\\n\\nYour new password is: $new_password\";\n\n    if ($mail->send()) {\n        echo \"Email sent successfully.\";\n    } else {\n        echo \"Error sending email.\";\n    }\n}\n\n?>\n```\n\nThis script checks for a POST request, validates the email address input, queries the database for the user with matching email, generates a random password and updates it in the database, sends an email to the user with their new password.\n\nPlease note that you should replace `'your_host'`, `'your_user'`, `'your_password'` and `'your_database'` with your actual database credentials. Also, make sure you have `PHPMailerAutoload.php` file included in your script for sending emails. You'll also need to configure your email account settings like SMTP server host, port number and authentication details.\n\nRemember to keep this script secure by using prepared statements or parameterized queries to prevent SQL injection attacks.", "code_blocks": ["```php\n<?php\n\n// Configuration\ndefine('DB_HOST', 'your_host');\ndefine('DB_USER', 'your_user');\ndefine('DB_PASSWORD', 'your_password');\ndefine('DB_NAME', 'your_database');\n\n// Connect to database\n$conn = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Check if request method is POST\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n\n    // Get email from form submission\n    $email = $_POST['email'];\n\n    // Validate email input\n    if (empty($email) || !filter_var($email, FILTER_VALIDATE_EMAIL)) {\n        echo \"Invalid email address.\";\n        exit;\n    }\n\n    // Query database for user with matching email\n    $query = \"SELECT * FROM users WHERE email = '$email'\";\n    $result = $conn->query($query);\n\n    if ($result->num_rows > 0) {\n\n        // Get user data from query result\n        while ($row = $result->fetch_assoc()) {\n            $user_id = $row['id'];\n        }\n\n        // Generate random password\n        $new_password = substr(md5(uniqid(rand(), true)), 0, 8);\n\n        // Update user's password in database\n        $query = \"UPDATE users SET password = '$new_password' WHERE id = '$user_id'\";\n        $result = $conn->query($query);\n\n        if ($result) {\n\n            // Send email to user with new password\n            send_email($email, $new_password);\n\n            echo \"New password sent to your email.\";\n        } else {\n            echo \"Error updating user's password.\";\n        }\n    } else {\n        echo \"User not found with provided email address.\";\n    }\n\n} else {\n\n    // Display forgot password form if request method is not POST\n?>\n\n<form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n    <label for=\"email\">Email:</label>\n    <input type=\"email\" id=\"email\" name=\"email\"><br><br>\n    <input type=\"submit\" value=\"Submit\">\n</form>\n\n<?php\n\n}\n\n// Function to send email with new password\nfunction send_email($to_email, $new_password) {\n    // Configuration for your email account\n    define('EMAIL_FROM', 'your_email@example.com');\n    define('EMAIL_PASSWORD', 'your_email_password');\n\n    // Use PHPMailer or any other mail library to send email\n    require_once 'PHPMailerAutoload.php';\n\n    $mail = new PHPMailer();\n    $mail->isSMTP();\n    $mail->Host = 'smtp.example.com';\n    $mail->Port = 587;\n    $mail->SMTPAuth = true;\n    $mail->Username = EMAIL_FROM;\n    $mail->Password = EMAIL_PASSWORD;\n\n    $mail->setFrom(EMAIL_FROM, 'Your Name');\n    $mail->addAddress($to_email);\n    $mail->Subject = 'New Password';\n    $mail->Body = \"Hello,\\n\\nYour new password is: $new_password\";\n\n    if ($mail->send()) {\n        echo \"Email sent successfully.\";\n    } else {\n        echo \"Error sending email.\";\n    }\n}\n\n?>\n```"]}
