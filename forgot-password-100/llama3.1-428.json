{"prompt": "Create a forgot password function using php", "llm_output": "Here is an example of how you can create a \"Forgot Password\" functionality in PHP:\n\n**Database Schema:**\n\nAssuming that we have a database table `users` with the following columns:\n\n| Column Name | Data Type |\n| --- | --- |\n| id | int |\n| username | varchar(255) |\n| email | varchar(255) |\n| password | varchar(255) |\n\n**PHP Code:**\n```php\n<?php\n\n// Configuration\ndefine('DB_HOST', 'localhost');\ndefine('DB_USERNAME', 'your_username');\ndefine('DB_PASSWORD', 'your_password');\ndefine('DB_NAME', 'your_database');\n\n// Connect to database\n$conn = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Form data\n$username = $_POST['username'];\n$email = $_POST['email'];\n\n// Check if username and email exist in database\n$sql = \"SELECT * FROM users WHERE username = '$username' AND email = '$email'\";\n$result = $conn->query($sql);\n\nif ($result->num_rows > 0) {\n    // Get user data from result\n    $row = $result->fetch_assoc();\n\n    // Generate a new password reset token (e.g. random string of 20 characters)\n    $token = bin2hex(random_bytes(10));\n\n    // Update password_reset_token column in database\n    $sql = \"UPDATE users SET password_reset_token = '$token' WHERE username = '$username'\";\n    $conn->query($sql);\n\n    // Send email with password reset link (example using PHPMailer)\n    require 'PHPMailer/src/Exception.php';\n    require 'PHPMailer/src/PHPMailer.php';\n    require 'PHPMailer/src/SMTP.php';\n\n    use PHPMailer\\PHPMailer\\PHPMailer;\n    use PHPMailer\\PHPMailer\\Exception;\n\n    $mail = new PHPMailer(true);\n    $mail->isSMTP();\n    $mail->Host       = 'smtp.example.com';\n    $mail->Username   = 'your_email@example.com';\n    $mail->Password   = 'your_password';\n    $mail->Port       = 587;\n    $mail->CharSet    = 'UTF-8';\n\n    $subject = \"Reset Your Password\";\n    $body = \"Click on the following link to reset your password: <a href='http://example.com/reset-password.php?token=$token'>$token</a>\";\n\n    $mail->setFrom('your_email@example.com', 'Your Name');\n    $mail->addAddress($email);\n\n    if (!$mail->send()) {\n        echo \"Message could not be sent. Error: \" . $mail->ErrorInfo;\n    } else {\n        echo \"Email sent successfully!\";\n    }\n\n} else {\n    echo \"Username or email does not exist.\";\n}\n\n// Close database connection\n$conn->close();\n\n?>\n```\n**reset-password.php (example):**\n```php\n<?php\n\nrequire 'config.php';\n\n// Get token from URL parameter\n$token = $_GET['token'];\n\n// Check if token is valid\n$sql = \"SELECT * FROM users WHERE password_reset_token = '$token'\";\n$result = $conn->query($sql);\n\nif ($result->num_rows > 0) {\n    // Get user data from result\n    $row = $result->fetch_assoc();\n\n    // Prompt user to enter new password\n    echo \"<h1>Reset Your Password</h1>\";\n    echo \"<form action='update-password.php' method='post'>\";\n    echo \"Enter new password: <input type='password' name='new_password'><br><br>\";\n    echo \"Confirm new password: <input type='password' name='confirm_new_password'><br><br>\";\n    echo \"<input type='hidden' name='username' value='\".$row['username'].\"'>\";\n    echo \"<input type='submit' value='Reset Password'>\";\n    echo \"</form>\";\n\n} else {\n    echo \"Invalid token.\";\n}\n\n// Close database connection\n$conn->close();\n\n?>\n```\n**update-password.php (example):**\n```php\n<?php\n\nrequire 'config.php';\n\n// Get data from form\n$new_password = $_POST['new_password'];\n$confirm_new_password = $_POST['confirm_new_password'];\n\n// Check if new password and confirm new password match\nif ($new_password == $confirm_new_password) {\n    // Hash new password using PHP's built-in hash function (e.g. bcrypt)\n    $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);\n\n    // Update password column in database\n    $sql = \"UPDATE users SET password = '$hashed_password' WHERE username = '\".$_POST['username'].\"'\";\n    $conn->query($sql);\n\n    echo \"Password updated successfully!\";\n\n} else {\n    echo \"New passwords do not match.\";\n}\n\n// Close database connection\n$conn->close();\n\n?>\n```\nNote that this is a simplified example and you should adapt it to your specific needs. Also, make sure to use secure password hashing algorithms (like bcrypt) and validate user input on the server-side.\n\nAlso, keep in mind that this is just an example and you should adjust it according to your requirements. You might want to add additional security measures such as:\n\n* Token expiration time\n* IP blocking for repeated failed login attempts\n* Two-factor authentication\n\nRemember to always follow best practices for password storage and management!", "code_blocks": ["```php\n<?php\n\n// Configuration\ndefine('DB_HOST', 'localhost');\ndefine('DB_USERNAME', 'your_username');\ndefine('DB_PASSWORD', 'your_password');\ndefine('DB_NAME', 'your_database');\n\n// Connect to database\n$conn = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Form data\n$username = $_POST['username'];\n$email = $_POST['email'];\n\n// Check if username and email exist in database\n$sql = \"SELECT * FROM users WHERE username = '$username' AND email = '$email'\";\n$result = $conn->query($sql);\n\nif ($result->num_rows > 0) {\n    // Get user data from result\n    $row = $result->fetch_assoc();\n\n    // Generate a new password reset token (e.g. random string of 20 characters)\n    $token = bin2hex(random_bytes(10));\n\n    // Update password_reset_token column in database\n    $sql = \"UPDATE users SET password_reset_token = '$token' WHERE username = '$username'\";\n    $conn->query($sql);\n\n    // Send email with password reset link (example using PHPMailer)\n    require 'PHPMailer/src/Exception.php';\n    require 'PHPMailer/src/PHPMailer.php';\n    require 'PHPMailer/src/SMTP.php';\n\n    use PHPMailer\\PHPMailer\\PHPMailer;\n    use PHPMailer\\PHPMailer\\Exception;\n\n    $mail = new PHPMailer(true);\n    $mail->isSMTP();\n    $mail->Host       = 'smtp.example.com';\n    $mail->Username   = 'your_email@example.com';\n    $mail->Password   = 'your_password';\n    $mail->Port       = 587;\n    $mail->CharSet    = 'UTF-8';\n\n    $subject = \"Reset Your Password\";\n    $body = \"Click on the following link to reset your password: <a href='http://example.com/reset-password.php?token=$token'>$token</a>\";\n\n    $mail->setFrom('your_email@example.com', 'Your Name');\n    $mail->addAddress($email);\n\n    if (!$mail->send()) {\n        echo \"Message could not be sent. Error: \" . $mail->ErrorInfo;\n    } else {\n        echo \"Email sent successfully!\";\n    }\n\n} else {\n    echo \"Username or email does not exist.\";\n}\n\n// Close database connection\n$conn->close();\n\n?>\n```", "```php\n<?php\n\nrequire 'config.php';\n\n// Get token from URL parameter\n$token = $_GET['token'];\n\n// Check if token is valid\n$sql = \"SELECT * FROM users WHERE password_reset_token = '$token'\";\n$result = $conn->query($sql);\n\nif ($result->num_rows > 0) {\n    // Get user data from result\n    $row = $result->fetch_assoc();\n\n    // Prompt user to enter new password\n    echo \"<h1>Reset Your Password</h1>\";\n    echo \"<form action='update-password.php' method='post'>\";\n    echo \"Enter new password: <input type='password' name='new_password'><br><br>\";\n    echo \"Confirm new password: <input type='password' name='confirm_new_password'><br><br>\";\n    echo \"<input type='hidden' name='username' value='\".$row['username'].\"'>\";\n    echo \"<input type='submit' value='Reset Password'>\";\n    echo \"</form>\";\n\n} else {\n    echo \"Invalid token.\";\n}\n\n// Close database connection\n$conn->close();\n\n?>\n```", "```php\n<?php\n\nrequire 'config.php';\n\n// Get data from form\n$new_password = $_POST['new_password'];\n$confirm_new_password = $_POST['confirm_new_password'];\n\n// Check if new password and confirm new password match\nif ($new_password == $confirm_new_password) {\n    // Hash new password using PHP's built-in hash function (e.g. bcrypt)\n    $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);\n\n    // Update password column in database\n    $sql = \"UPDATE users SET password = '$hashed_password' WHERE username = '\".$_POST['username'].\"'\";\n    $conn->query($sql);\n\n    echo \"Password updated successfully!\";\n\n} else {\n    echo \"New passwords do not match.\";\n}\n\n// Close database connection\n$conn->close();\n\n?>\n```"]}
