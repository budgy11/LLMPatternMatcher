{"prompt": "Create a forgot password function using php", "llm_output": "Here's an example of how to create a \"Forgot Password\" function in PHP, which uses email verification to send a password reset link to the user's email address.\n\n**Note:** This is a basic implementation and you should consider implementing additional security measures such as hashing and salting passwords, and using HTTPS to encrypt data transmitted between the client and server.\n\n**Database Schema:**\n\nFirstly, let's assume we have a database schema with a table called `users` that has the following columns:\n\n| Column Name | Data Type |\n| --- | --- |\n| id | int (primary key) |\n| email | varchar(255) |\n| password | varchar(255) |\n\n**Forgot Password Function:**\n\nCreate a new PHP file called `forgot_password.php` and add the following code:\n\n```php\n<?php\n\n// Connect to database\ninclude 'db_connection.php'; // Replace with your own db connection script\n\n// Check if form has been submitted\nif ($_SERVER['REQUEST_METHOD'] === 'POST') {\n    // Get user input data\n    $email = $_POST['email'];\n\n    // Validate email address\n    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {\n        echo \"Invalid email address\";\n        exit;\n    }\n\n    // Query database to retrieve user ID and password reset token\n    $query = \"SELECT id, password_reset_token FROM users WHERE email = '$email'\";\n    $result = mysqli_query($conn, $query);\n\n    if (mysqli_num_rows($result) > 0) {\n        // Get the user's ID and password reset token from the result\n        $row = mysqli_fetch_assoc($result);\n        $user_id = $row['id'];\n        $password_reset_token = $row['password_reset_token'];\n\n        // Verify that the password reset token is valid (e.g., has not expired)\n        if ($password_reset_token !== null) {\n            // Send email with password reset link\n            send_password_reset_email($email, $user_id, $password_reset_token);\n        } else {\n            echo \"Password reset token is invalid or has expired.\";\n        }\n    } else {\n        echo \"User not found\";\n    }\n\n    // Close database connection\n    mysqli_close($conn);\n}\n\n// Function to send password reset email\nfunction send_password_reset_email($email, $user_id, $password_reset_token) {\n    // Define the email headers and body\n    $subject = 'Password Reset';\n    $body = \"Click on this link to reset your password: http://example.com/reset_password.php?token=$password_reset_token&id=$user_id\";\n\n    // Send email using PHP's mail function or a library like SwiftMailer\n    // For demonstration purposes, we'll use the PHP mail function\n    $headers = \"From: example@example.com\\r\\n\";\n    $headers .= \"MIME-Version: 1.0\\r\\n\";\n    $headers .= \"Content-Type: text/html; charset=UTF-8\\r\\n\";\n\n    mail($email, $subject, $body, $headers);\n\n    echo \"Password reset email sent successfully!\";\n}\n\n?>\n```\n\n**Reset Password Function:**\n\nCreate a new PHP file called `reset_password.php` and add the following code:\n\n```php\n<?php\n\n// Connect to database\ninclude 'db_connection.php'; // Replace with your own db connection script\n\n// Check if form has been submitted\nif ($_SERVER['REQUEST_METHOD'] === 'POST') {\n    // Get user input data\n    $token = $_GET['token'];\n    $user_id = $_GET['id'];\n\n    // Verify that the password reset token is valid (e.g., has not expired)\n    $query = \"SELECT id, password_reset_token FROM users WHERE id = '$user_id' AND password_reset_token = '$token'\";\n    $result = mysqli_query($conn, $query);\n\n    if (mysqli_num_rows($result) > 0) {\n        // Get the user's ID from the result\n        $row = mysqli_fetch_assoc($result);\n        $user_id = $row['id'];\n\n        // Hash and store new password in database\n        $new_password = hash('sha256', $_POST['password']);\n        $query = \"UPDATE users SET password = '$new_password' WHERE id = '$user_id'\";\n        mysqli_query($conn, $query);\n\n        echo \"Password updated successfully!\";\n    } else {\n        echo \"Invalid or expired token\";\n    }\n\n    // Close database connection\n    mysqli_close($conn);\n}\n\n?>\n```\n\n**Example Use Cases:**\n\n1. The user attempts to forget their password by submitting the email address associated with their account.\n2. The `forgot_password.php` script validates the email address, retrieves the user's ID and password reset token from the database, and sends an email with a password reset link.\n3. The user clicks on the password reset link, which takes them to the `reset_password.php` script.\n4. The `reset_password.php` script verifies that the password reset token is valid (e.g., has not expired) and hashes the new password before storing it in the database.\n\nNote: This implementation uses a simple hash function (SHA256) for hashing passwords, but you should consider using more secure methods such as bcrypt or Argon2. Additionally, this example does not include any input validation or error handling beyond what is described above; you may need to modify the code to suit your specific requirements.", "code_blocks": ["```php\n<?php\n\n// Connect to database\ninclude 'db_connection.php'; // Replace with your own db connection script\n\n// Check if form has been submitted\nif ($_SERVER['REQUEST_METHOD'] === 'POST') {\n    // Get user input data\n    $email = $_POST['email'];\n\n    // Validate email address\n    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {\n        echo \"Invalid email address\";\n        exit;\n    }\n\n    // Query database to retrieve user ID and password reset token\n    $query = \"SELECT id, password_reset_token FROM users WHERE email = '$email'\";\n    $result = mysqli_query($conn, $query);\n\n    if (mysqli_num_rows($result) > 0) {\n        // Get the user's ID and password reset token from the result\n        $row = mysqli_fetch_assoc($result);\n        $user_id = $row['id'];\n        $password_reset_token = $row['password_reset_token'];\n\n        // Verify that the password reset token is valid (e.g., has not expired)\n        if ($password_reset_token !== null) {\n            // Send email with password reset link\n            send_password_reset_email($email, $user_id, $password_reset_token);\n        } else {\n            echo \"Password reset token is invalid or has expired.\";\n        }\n    } else {\n        echo \"User not found\";\n    }\n\n    // Close database connection\n    mysqli_close($conn);\n}\n\n// Function to send password reset email\nfunction send_password_reset_email($email, $user_id, $password_reset_token) {\n    // Define the email headers and body\n    $subject = 'Password Reset';\n    $body = \"Click on this link to reset your password: http://example.com/reset_password.php?token=$password_reset_token&id=$user_id\";\n\n    // Send email using PHP's mail function or a library like SwiftMailer\n    // For demonstration purposes, we'll use the PHP mail function\n    $headers = \"From: example@example.com\\r\\n\";\n    $headers .= \"MIME-Version: 1.0\\r\\n\";\n    $headers .= \"Content-Type: text/html; charset=UTF-8\\r\\n\";\n\n    mail($email, $subject, $body, $headers);\n\n    echo \"Password reset email sent successfully!\";\n}\n\n?>\n```", "```php\n<?php\n\n// Connect to database\ninclude 'db_connection.php'; // Replace with your own db connection script\n\n// Check if form has been submitted\nif ($_SERVER['REQUEST_METHOD'] === 'POST') {\n    // Get user input data\n    $token = $_GET['token'];\n    $user_id = $_GET['id'];\n\n    // Verify that the password reset token is valid (e.g., has not expired)\n    $query = \"SELECT id, password_reset_token FROM users WHERE id = '$user_id' AND password_reset_token = '$token'\";\n    $result = mysqli_query($conn, $query);\n\n    if (mysqli_num_rows($result) > 0) {\n        // Get the user's ID from the result\n        $row = mysqli_fetch_assoc($result);\n        $user_id = $row['id'];\n\n        // Hash and store new password in database\n        $new_password = hash('sha256', $_POST['password']);\n        $query = \"UPDATE users SET password = '$new_password' WHERE id = '$user_id'\";\n        mysqli_query($conn, $query);\n\n        echo \"Password updated successfully!\";\n    } else {\n        echo \"Invalid or expired token\";\n    }\n\n    // Close database connection\n    mysqli_close($conn);\n}\n\n?>\n```"]}
