{"prompt": "Create a forgot password function using php", "llm_output": "Here is an example of a simple \"Forgot Password\" function using PHP:\n\n**Password Recovery Function**\n\n```php\n<?php\nif (isset($_POST['forgot_password'])) {\n    $email = $_POST['email'];\n    \n    // Validate the email address\n    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {\n        echo 'Invalid email address';\n        exit;\n    }\n    \n    // Connect to database\n    $db = mysqli_connect('localhost', 'username', 'password', 'database');\n    \n    if (!$db) {\n        die('Error connecting to database: ' . mysqli_error());\n    }\n    \n    // Prepare SQL query\n    $query = \"SELECT * FROM users WHERE email = '$email'\";\n    \n    // Execute the query and fetch the result\n    $result = mysqli_query($db, $query);\n    if (!$result) {\n        die('Error executing query: ' . mysqli_error());\n    }\n    \n    // Check if a user exists with the given email address\n    $row = mysqli_fetch_assoc($result);\n    if ($row) {\n        // Generate a reset password token\n        $token = substr(md5(uniqid(mt_rand(), true)), 0, 32);\n        \n        // Insert the token into the database\n        $query = \"UPDATE users SET token = '$token' WHERE email = '$email'\";\n        mysqli_query($db, $query);\n        \n        // Send a password reset link to the user's email address\n        $to = $email;\n        $subject = 'Reset Your Password';\n        $message = 'Click this link to reset your password: <a href=\"' . $_SERVER['PHP_SELF'] . '?token=' . $token . '\">Reset Password</a>';\n        mail($to, $subject, $message);\n        \n        echo 'A password reset link has been sent to your email address';\n    } else {\n        echo 'No user found with that email address';\n    }\n    \n    // Close database connection\n    mysqli_close($db);\n}\n?>\n```\n\n**Password Reset Function**\n\n```php\n<?php\nif (isset($_GET['token'])) {\n    $token = $_GET['token'];\n    \n    // Connect to database\n    $db = mysqli_connect('localhost', 'username', 'password', 'database');\n    \n    if (!$db) {\n        die('Error connecting to database: ' . mysqli_error());\n    }\n    \n    // Prepare SQL query\n    $query = \"SELECT * FROM users WHERE token = '$token'\";\n    \n    // Execute the query and fetch the result\n    $result = mysqli_query($db, $query);\n    if (!$result) {\n        die('Error executing query: ' . mysqli_error());\n    }\n    \n    // Check if a user exists with the given token\n    $row = mysqli_fetch_assoc($result);\n    if ($row) {\n        // Display password reset form\n        ?>\n        <form action=\"\" method=\"post\">\n            <label for=\"new_password\">New Password:</label>\n            <input type=\"password\" id=\"new_password\" name=\"new_password\"><br><br>\n            <label for=\"confirm_password\">Confirm Password:</label>\n            <input type=\"password\" id=\"confirm_password\" name=\"confirm_password\"><br><br>\n            <input type=\"submit\" value=\"Reset Password\">\n        </form>\n        \n        <?php\n    } else {\n        echo 'Invalid token';\n    }\n    \n    // Close database connection\n    mysqli_close($db);\n}\n?>\n```\n\n**Validation and Security Notes**\n\n*   Always validate user input to prevent SQL injection attacks.\n*   Use prepared statements instead of concatenating variables into SQL queries.\n*   Store password reset tokens securely in the database using a one-way hash function like MD5 or SHA-256.\n*   Implement email address validation to ensure that users enter valid email addresses.\n\n**Step-by-Step Solution**\n\n1.  Create a new PHP file named `password_recovery.php` and add the password recovery function code.\n2.  Add a form in your login page (e.g., `login.php`) with an \"Forgot Password\" button.\n3.  When the user clicks the button, create a POST request to `password_recovery.php` with their email address as input.\n4.  In `password_recovery.php`, validate the email address and connect to the database.\n5.  Execute a SQL query to retrieve the user's data from the database based on the provided email address.\n6.  If the user exists, generate a reset password token using MD5 or SHA-256.\n7.  Insert the token into the database and send an email with a password reset link to the user's email address.\n8.  In the email, include a link that directs the user back to your website with their unique token as a GET parameter (e.g., `password_reset.php?token=abc123`).\n9.  Create a new PHP file named `password_reset.php` and add the password reset function code.\n10. When the user visits the password reset page, retrieve the token from the URL and execute a SQL query to verify it against the stored token in the database.\n11. If valid, display a password reset form that allows users to input their new passwords.\n\n**Remember**: Always follow best practices for securing sensitive data, such as using prepared statements, validating user input, and hashing password reset tokens.", "code_blocks": ["```php\n<?php\nif (isset($_POST['forgot_password'])) {\n    $email = $_POST['email'];\n    \n    // Validate the email address\n    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {\n        echo 'Invalid email address';\n        exit;\n    }\n    \n    // Connect to database\n    $db = mysqli_connect('localhost', 'username', 'password', 'database');\n    \n    if (!$db) {\n        die('Error connecting to database: ' . mysqli_error());\n    }\n    \n    // Prepare SQL query\n    $query = \"SELECT * FROM users WHERE email = '$email'\";\n    \n    // Execute the query and fetch the result\n    $result = mysqli_query($db, $query);\n    if (!$result) {\n        die('Error executing query: ' . mysqli_error());\n    }\n    \n    // Check if a user exists with the given email address\n    $row = mysqli_fetch_assoc($result);\n    if ($row) {\n        // Generate a reset password token\n        $token = substr(md5(uniqid(mt_rand(), true)), 0, 32);\n        \n        // Insert the token into the database\n        $query = \"UPDATE users SET token = '$token' WHERE email = '$email'\";\n        mysqli_query($db, $query);\n        \n        // Send a password reset link to the user's email address\n        $to = $email;\n        $subject = 'Reset Your Password';\n        $message = 'Click this link to reset your password: <a href=\"' . $_SERVER['PHP_SELF'] . '?token=' . $token . '\">Reset Password</a>';\n        mail($to, $subject, $message);\n        \n        echo 'A password reset link has been sent to your email address';\n    } else {\n        echo 'No user found with that email address';\n    }\n    \n    // Close database connection\n    mysqli_close($db);\n}\n?>\n```", "```php\n<?php\nif (isset($_GET['token'])) {\n    $token = $_GET['token'];\n    \n    // Connect to database\n    $db = mysqli_connect('localhost', 'username', 'password', 'database');\n    \n    if (!$db) {\n        die('Error connecting to database: ' . mysqli_error());\n    }\n    \n    // Prepare SQL query\n    $query = \"SELECT * FROM users WHERE token = '$token'\";\n    \n    // Execute the query and fetch the result\n    $result = mysqli_query($db, $query);\n    if (!$result) {\n        die('Error executing query: ' . mysqli_error());\n    }\n    \n    // Check if a user exists with the given token\n    $row = mysqli_fetch_assoc($result);\n    if ($row) {\n        // Display password reset form\n        ?>\n        <form action=\"\" method=\"post\">\n            <label for=\"new_password\">New Password:</label>\n            <input type=\"password\" id=\"new_password\" name=\"new_password\"><br><br>\n            <label for=\"confirm_password\">Confirm Password:</label>\n            <input type=\"password\" id=\"confirm_password\" name=\"confirm_password\"><br><br>\n            <input type=\"submit\" value=\"Reset Password\">\n        </form>\n        \n        <?php\n    } else {\n        echo 'Invalid token';\n    }\n    \n    // Close database connection\n    mysqli_close($db);\n}\n?>\n```"]}
