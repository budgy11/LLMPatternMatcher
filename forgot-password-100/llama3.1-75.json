{"prompt": "Create a forgot password function using php", "llm_output": "Here is an example of how to create a \"forgot password\" function in PHP:\n\n**Database Schema**\n\nFirst, let's assume we have a database table called `users` with the following structure:\n```sql\nCREATE TABLE users (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  email VARCHAR(255) NOT NULL UNIQUE,\n  password_hash VARCHAR(255) NOT NULL,\n  reset_token VARCHAR(255),\n  reset_expires TIMESTAMP\n);\n```\n**PHP Code**\n\nCreate a new file called `forgot_password.php` and add the following code:\n```php\n<?php\n\n// Configuration\n$db_host = 'localhost';\n$db_username = 'username';\n$db_password = 'password';\n$db_name = 'database';\n\n// Connect to database\n$conn = mysqli_connect($db_host, $db_username, $db_password, $db_name);\n\nif (!$conn) {\n  die(\"Connection failed: \" . mysqli_error($conn));\n}\n\n// Function to send email with reset link\nfunction send_reset_email($email, $reset_token) {\n  // Send an email to the user with a reset link\n  $subject = 'Reset Your Password';\n  $body = '<p>Please click on the following link to reset your password:</p><p><a href=\"' . site_url('reset_password', array('token' => $reset_token)) . '\">Reset Password</a></p>';\n  mail($email, $subject, $body);\n}\n\n// Function to create and store a reset token\nfunction create_reset_token() {\n  // Generate a random string for the reset token\n  $reset_token = bin2hex(random_bytes(32));\n  return $reset_token;\n}\n\n// Function to send email with reset link\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n  $email = $_POST['email'];\n  $query = \"SELECT * FROM users WHERE email = '$email'\";\n  $result = mysqli_query($conn, $query);\n  if (mysqli_num_rows($result) > 0) {\n    // Get the user's row\n    $user_row = mysqli_fetch_assoc($result);\n\n    // Create a reset token and store it in the database\n    $reset_token = create_reset_token();\n    $query = \"UPDATE users SET reset_token = '$reset_token', reset_expires = NOW() + INTERVAL 1 HOUR WHERE email = '$email'\";\n    mysqli_query($conn, $query);\n\n    // Send an email with a reset link\n    send_reset_email($email, $reset_token);\n    echo 'Email sent to <strong>' . $email . '</strong> with a password reset link. Please check your email.';\n  } else {\n    echo 'Email not found. Try again!';\n  }\n} else {\n  // Display the form\n?>\n\n<form action=\"<?php echo site_url('forgot_password', array('method' => 'post')); ?>\" method=\"post\">\n  <label for=\"email\">Enter your email:</label>\n  <input type=\"email\" id=\"email\" name=\"email\" required>\n  <button type=\"submit\">Send Reset Link</button>\n</form>\n\n<?php\n}\n?>\n```\n**How it works**\n\n1. The user submits their email address through the form.\n2. The script queries the database to check if an account with that email exists.\n3. If an account is found, a reset token is generated and stored in the `reset_token` column of the `users` table along with the current timestamp (in one hour).\n4. An email is sent to the user with a link to reset their password, using the generated reset token as a parameter.\n\n**Security Considerations**\n\n* This script does not implement any kind of password hashing or verification. You should add this feature if you're serious about securing your users' passwords.\n* The `mail()` function uses the default PHP mail settings. Make sure to configure your email settings correctly (e.g., SMTP, Gmail API, etc.) for the email to be sent successfully.\n* Always use prepared statements when interacting with databases to prevent SQL injection attacks.\n\nNote: This is a basic example and you should adapt it to fit your specific needs and implementation. Additionally, make sure to test this script thoroughly before deploying it in production!", "code_blocks": [null, "```php\n<?php\n\n// Configuration\n$db_host = 'localhost';\n$db_username = 'username';\n$db_password = 'password';\n$db_name = 'database';\n\n// Connect to database\n$conn = mysqli_connect($db_host, $db_username, $db_password, $db_name);\n\nif (!$conn) {\n  die(\"Connection failed: \" . mysqli_error($conn));\n}\n\n// Function to send email with reset link\nfunction send_reset_email($email, $reset_token) {\n  // Send an email to the user with a reset link\n  $subject = 'Reset Your Password';\n  $body = '<p>Please click on the following link to reset your password:</p><p><a href=\"' . site_url('reset_password', array('token' => $reset_token)) . '\">Reset Password</a></p>';\n  mail($email, $subject, $body);\n}\n\n// Function to create and store a reset token\nfunction create_reset_token() {\n  // Generate a random string for the reset token\n  $reset_token = bin2hex(random_bytes(32));\n  return $reset_token;\n}\n\n// Function to send email with reset link\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n  $email = $_POST['email'];\n  $query = \"SELECT * FROM users WHERE email = '$email'\";\n  $result = mysqli_query($conn, $query);\n  if (mysqli_num_rows($result) > 0) {\n    // Get the user's row\n    $user_row = mysqli_fetch_assoc($result);\n\n    // Create a reset token and store it in the database\n    $reset_token = create_reset_token();\n    $query = \"UPDATE users SET reset_token = '$reset_token', reset_expires = NOW() + INTERVAL 1 HOUR WHERE email = '$email'\";\n    mysqli_query($conn, $query);\n\n    // Send an email with a reset link\n    send_reset_email($email, $reset_token);\n    echo 'Email sent to <strong>' . $email . '</strong> with a password reset link. Please check your email.';\n  } else {\n    echo 'Email not found. Try again!';\n  }\n} else {\n  // Display the form\n?>\n\n<form action=\"<?php echo site_url('forgot_password', array('method' => 'post')); ?>\" method=\"post\">\n  <label for=\"email\">Enter your email:</label>\n  <input type=\"email\" id=\"email\" name=\"email\" required>\n  <button type=\"submit\">Send Reset Link</button>\n</form>\n\n<?php\n}\n?>\n```"]}
