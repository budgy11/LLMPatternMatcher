{"prompt": "Create a forgot password function using php", "llm_output": "Here is an example of a \"Forgot Password\" function using PHP and MySQL:\n\n**Database Schema**\n\nWe'll assume you have the following table in your database:\n```sql\nCREATE TABLE users (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  email VARCHAR(255) NOT NULL,\n  password_hash VARCHAR(255) NOT NULL\n);\n```\n**PHP Code**\n\nCreate a new file called `forgot_password.php` and add the following code:\n```php\n<?php\n\n// Configuration\ndefine('DB_HOST', 'your_host');\ndefine('DB_USER', 'your_user');\ndefine('DB_PASSWORD', 'your_password');\ndefine('DB_NAME', 'your_database');\n\n// Connect to database\n$conn = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Function to send reset link via email\nfunction send_reset_link($email) {\n    // Generate random token for password reset\n    $token = bin2hex(random_bytes(32));\n\n    // Insert new record into database with token and email\n    $sql = \"INSERT INTO users (email, password_reset_token) VALUES (?, ?)\";\n    $stmt = $conn->prepare($sql);\n    $stmt->bind_param(\"ss\", $email, $token);\n    $stmt->execute();\n\n    // Send email with reset link\n    $subject = \"Reset Password\";\n    $body = \"Click here to reset your password: <a href='https://your_domain.com/reset_password.php?token=$token'>Reset Password</a>\";\n    $headers = \"From: no-reply@your_domain.com\\r\\n\";\n    mail($email, $subject, $body, $headers);\n\n    return true;\n}\n\n// Function to verify reset token and update password\nfunction verify_reset_token($token) {\n    // Get user ID from database using token\n    $sql = \"SELECT id FROM users WHERE password_reset_token = ?\";\n    $stmt = $conn->prepare($sql);\n    $stmt->bind_param(\"s\", $token);\n    $stmt->execute();\n    $result = $stmt->get_result();\n\n    if ($result->num_rows == 0) {\n        return false;\n    }\n\n    // Get user ID from result\n    $user_id = $result->fetch_assoc()['id'];\n\n    // Update password using token and user ID\n    $sql = \"UPDATE users SET password_hash = ? WHERE id = ?\";\n    $stmt = $conn->prepare($sql);\n    $new_password = 'your_new_password'; // Replace with new password\n    $stmt->bind_param(\"ss\", $new_password, $user_id);\n    $stmt->execute();\n\n    return true;\n}\n\n// Handle forgot password request\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    // Get email from form submission\n    $email = $_POST['email'];\n\n    // Send reset link via email if user exists in database\n    if (send_reset_link($email)) {\n        echo \"Reset link sent to your email.\";\n    } else {\n        echo \"User not found or error sending email.\";\n    }\n}\n\n// Verify reset token and update password if submitted\nif ($_SERVER['REQUEST_METHOD'] == 'POST' && isset($_POST['token'])) {\n    $token = $_POST['token'];\n    if (verify_reset_token($token)) {\n        echo \"Password updated successfully!\";\n    } else {\n        echo \"Invalid token or error updating password.\";\n    }\n}\n\n?>\n```\n**Explanation**\n\nThis code provides two functions: `send_reset_link()` and `verify_reset_token()`. The first function sends a reset link via email to the user with their password reset token. The second function verifies the reset token and updates the user's password if valid.\n\nThe main script handles form submissions for both the forgot password request and password reset. If the user submits the forgot password form, it calls `send_reset_link()` with their email address. If the user submits the password reset form with a valid token, it calls `verify_reset_token()` to update their password.\n\n**Example Use Cases**\n\n1. User submits forgot password form:\n\t* The server generates a random token and stores it in the database along with the user's email.\n\t* An email is sent to the user with a link to reset their password.\n2. User clicks on reset password link:\n\t* The server verifies the reset token against the stored value.\n\t* If valid, the server updates the user's password.\n\n**Security Considerations**\n\n1. **Token Generation**: Use a cryptographically secure pseudo-random number generator (CSPRNG) to generate random tokens.\n2. **Email Security**: Implement email security measures such as encryption and validation of incoming emails.\n3. **Password Storage**: Store passwords securely using a library like `password_hash()` in PHP.\n4. **CSRF Protection**: Add CSRF protection for both the forgot password form and password reset form.\n\n**Remember to replace placeholders with your actual database credentials and domain name!**", "code_blocks": [null, "```php\n<?php\n\n// Configuration\ndefine('DB_HOST', 'your_host');\ndefine('DB_USER', 'your_user');\ndefine('DB_PASSWORD', 'your_password');\ndefine('DB_NAME', 'your_database');\n\n// Connect to database\n$conn = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Function to send reset link via email\nfunction send_reset_link($email) {\n    // Generate random token for password reset\n    $token = bin2hex(random_bytes(32));\n\n    // Insert new record into database with token and email\n    $sql = \"INSERT INTO users (email, password_reset_token) VALUES (?, ?)\";\n    $stmt = $conn->prepare($sql);\n    $stmt->bind_param(\"ss\", $email, $token);\n    $stmt->execute();\n\n    // Send email with reset link\n    $subject = \"Reset Password\";\n    $body = \"Click here to reset your password: <a href='https://your_domain.com/reset_password.php?token=$token'>Reset Password</a>\";\n    $headers = \"From: no-reply@your_domain.com\\r\\n\";\n    mail($email, $subject, $body, $headers);\n\n    return true;\n}\n\n// Function to verify reset token and update password\nfunction verify_reset_token($token) {\n    // Get user ID from database using token\n    $sql = \"SELECT id FROM users WHERE password_reset_token = ?\";\n    $stmt = $conn->prepare($sql);\n    $stmt->bind_param(\"s\", $token);\n    $stmt->execute();\n    $result = $stmt->get_result();\n\n    if ($result->num_rows == 0) {\n        return false;\n    }\n\n    // Get user ID from result\n    $user_id = $result->fetch_assoc()['id'];\n\n    // Update password using token and user ID\n    $sql = \"UPDATE users SET password_hash = ? WHERE id = ?\";\n    $stmt = $conn->prepare($sql);\n    $new_password = 'your_new_password'; // Replace with new password\n    $stmt->bind_param(\"ss\", $new_password, $user_id);\n    $stmt->execute();\n\n    return true;\n}\n\n// Handle forgot password request\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    // Get email from form submission\n    $email = $_POST['email'];\n\n    // Send reset link via email if user exists in database\n    if (send_reset_link($email)) {\n        echo \"Reset link sent to your email.\";\n    } else {\n        echo \"User not found or error sending email.\";\n    }\n}\n\n// Verify reset token and update password if submitted\nif ($_SERVER['REQUEST_METHOD'] == 'POST' && isset($_POST['token'])) {\n    $token = $_POST['token'];\n    if (verify_reset_token($token)) {\n        echo \"Password updated successfully!\";\n    } else {\n        echo \"Invalid token or error updating password.\";\n    }\n}\n\n?>\n```"]}
