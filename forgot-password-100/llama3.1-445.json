{"prompt": "Create a forgot password function using php", "llm_output": "Here is an example of a \"Forgot Password\" function using PHP:\n\n**Database Schema:**\n\nLet's assume we have the following database schema for users:\n```sql\nCREATE TABLE users (\n  id INT PRIMARY KEY,\n  email VARCHAR(255) NOT NULL,\n  password_hash VARCHAR(255) NOT NULL,\n  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n```\n**PHP Code:**\n```php\n<?php\n\n// Configuration\ndefine('DB_HOST', 'localhost');\ndefine('DB_USER', 'your_username');\ndefine('DB_PASSWORD', 'your_password');\ndefine('DB_NAME', 'your_database');\n\n// Connect to database\n$conn = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);\n\nif ($conn->connect_error) {\n  die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Function to send password reset email\nfunction sendPasswordResetEmail($email)\n{\n  // Generate random token\n  $token = bin2hex(random_bytes(32));\n\n  // Update user's password reset token in database\n  $sql = \"UPDATE users SET password_reset_token = '$token' WHERE email = '$email'\";\n  if (!$conn->query($sql)) {\n    return false;\n  }\n\n  // Send email with password reset link\n  $to = $email;\n  $subject = \"Password Reset\";\n  $body = \"\n  <p>Hello,\n  You are receiving this email because you requested a password reset for your account.\n  Click on the following link to reset your password:\n  <a href='http://example.com/reset-password?token=$token'>$token</a>\n  Best regards,\n  [Your Name]\n  \";\n\n  $headers = \"From: info@example.com\" . \"\\r\\n\";\n  $headers .= \"Content-Type: text/html; charset=UTF-8\\r\\n\";\n\n  if (mail($to, $subject, $body, $headers)) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\n// Function to reset password\nfunction resetPassword($token)\n{\n  // Check if token is valid\n  $sql = \"SELECT * FROM users WHERE password_reset_token = '$token'\";\n  $result = $conn->query($sql);\n  if (!$result) {\n    return false;\n  }\n\n  // Get user's email from database\n  $row = $result->fetch_assoc();\n  $email = $row['email'];\n\n  // Prompt user to enter new password\n  echo \"Enter your new password: \";\n  $newPassword = trim(fgets(STDIN));\n  echo \"Confirm your new password: \";\n  $confirmPassword = trim(fgets(STDIN));\n\n  if ($newPassword !== $confirmPassword) {\n    return false;\n  }\n\n  // Hash and store user's new password in database\n  $hashedPassword = password_hash($newPassword, PASSWORD_DEFAULT);\n  $sql = \"UPDATE users SET password_hash = '$hashedPassword' WHERE email = '$email'\";\n  if (!$conn->query($sql)) {\n    return false;\n  }\n\n  // Update user's password reset token to null\n  $sql = \"UPDATE users SET password_reset_token = NULL WHERE email = '$email'\";\n  if (!$conn->query($sql)) {\n    return false;\n  }\n\n  return true;\n}\n\n// Forgot password form\necho \"Forgot Password? Enter your email address: \";\n$email = trim(fgets(STDIN));\n\nif (sendPasswordResetEmail($email)) {\n  echo \"An email has been sent to $email with a link to reset your password.\";\n} else {\n  echo \"Error sending email. Please try again later.\";\n}\n\n// Reset password form\necho \"Enter the token from your email: \";\n$token = trim(fgets(STDIN));\n\nif (resetPassword($token)) {\n  echo \"Your password has been successfully reset!\";\n} else {\n  echo \"Invalid token. Please try again with a valid token.\";\n}\n?>\n```\n**How it works:**\n\n1. The user enters their email address on the \"Forgot Password\" form.\n2. The `sendPasswordResetEmail` function generates a random token and stores it in the database associated with the user's email.\n3. An email is sent to the user with a link containing the token, which allows them to reset their password.\n4. On the second form, the user enters the token from their email.\n5. The `resetPassword` function checks if the token is valid and prompts the user to enter their new password.\n\n**Security considerations:**\n\n* Make sure to use secure connections (HTTPS) when sending emails with passwords.\n* Use a secure password hashing algorithm like bcrypt or Argon2.\n* Store the password reset tokens securely in the database, using a secure method like HMAC encryption.\n* Limit the number of attempts to reset a password within a certain time frame.\n\n**Example use case:**\n\n1. User enters their email address on the \"Forgot Password\" form.\n2. An email is sent with a link containing the token.\n3. User clicks the link and enters their new password on the second form.\n4. The `resetPassword` function updates the user's password in the database.\n\nNote that this is just an example implementation, and you should adapt it to your specific use case and requirements. Additionally, make sure to follow best practices for secure coding and passwords.", "code_blocks": [null, "```php\n<?php\n\n// Configuration\ndefine('DB_HOST', 'localhost');\ndefine('DB_USER', 'your_username');\ndefine('DB_PASSWORD', 'your_password');\ndefine('DB_NAME', 'your_database');\n\n// Connect to database\n$conn = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);\n\nif ($conn->connect_error) {\n  die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Function to send password reset email\nfunction sendPasswordResetEmail($email)\n{\n  // Generate random token\n  $token = bin2hex(random_bytes(32));\n\n  // Update user's password reset token in database\n  $sql = \"UPDATE users SET password_reset_token = '$token' WHERE email = '$email'\";\n  if (!$conn->query($sql)) {\n    return false;\n  }\n\n  // Send email with password reset link\n  $to = $email;\n  $subject = \"Password Reset\";\n  $body = \"\n  <p>Hello,\n  You are receiving this email because you requested a password reset for your account.\n  Click on the following link to reset your password:\n  <a href='http://example.com/reset-password?token=$token'>$token</a>\n  Best regards,\n  [Your Name]\n  \";\n\n  $headers = \"From: info@example.com\" . \"\\r\\n\";\n  $headers .= \"Content-Type: text/html; charset=UTF-8\\r\\n\";\n\n  if (mail($to, $subject, $body, $headers)) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\n// Function to reset password\nfunction resetPassword($token)\n{\n  // Check if token is valid\n  $sql = \"SELECT * FROM users WHERE password_reset_token = '$token'\";\n  $result = $conn->query($sql);\n  if (!$result) {\n    return false;\n  }\n\n  // Get user's email from database\n  $row = $result->fetch_assoc();\n  $email = $row['email'];\n\n  // Prompt user to enter new password\n  echo \"Enter your new password: \";\n  $newPassword = trim(fgets(STDIN));\n  echo \"Confirm your new password: \";\n  $confirmPassword = trim(fgets(STDIN));\n\n  if ($newPassword !== $confirmPassword) {\n    return false;\n  }\n\n  // Hash and store user's new password in database\n  $hashedPassword = password_hash($newPassword, PASSWORD_DEFAULT);\n  $sql = \"UPDATE users SET password_hash = '$hashedPassword' WHERE email = '$email'\";\n  if (!$conn->query($sql)) {\n    return false;\n  }\n\n  // Update user's password reset token to null\n  $sql = \"UPDATE users SET password_reset_token = NULL WHERE email = '$email'\";\n  if (!$conn->query($sql)) {\n    return false;\n  }\n\n  return true;\n}\n\n// Forgot password form\necho \"Forgot Password? Enter your email address: \";\n$email = trim(fgets(STDIN));\n\nif (sendPasswordResetEmail($email)) {\n  echo \"An email has been sent to $email with a link to reset your password.\";\n} else {\n  echo \"Error sending email. Please try again later.\";\n}\n\n// Reset password form\necho \"Enter the token from your email: \";\n$token = trim(fgets(STDIN));\n\nif (resetPassword($token)) {\n  echo \"Your password has been successfully reset!\";\n} else {\n  echo \"Invalid token. Please try again with a valid token.\";\n}\n?>\n```"]}
