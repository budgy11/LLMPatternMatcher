{"prompt": "Create a user cart session using php", "llm_output": "Here is an example of how you can create a simple user cart system using PHP:\n\n**Note:** This is a basic implementation and does not include features like persistent storage, security measures (e.g., CSRF protection), or advanced functionality.\n\n**cart.php**\n```php\n<?php\nsession_start();\n\n// Initialize cart array if it doesn't exist\nif (!isset($_SESSION['cart'])) {\n    $_SESSION['cart'] = array();\n}\n\nfunction add_to_cart($product_id, $quantity) {\n    // Check if product is already in cart\n    foreach ($_SESSION['cart'] as $key => $value) {\n        if ($value['id'] == $product_id) {\n            // Update quantity\n            $_SESSION['cart'][$key]['quantity'] += $quantity;\n            return;\n        }\n    }\n\n    // Add new product to cart\n    $_SESSION['cart'][] = array('id' => $product_id, 'quantity' => $quantity);\n}\n\nfunction update_cart_item($product_id, $new_quantity) {\n    foreach ($_SESSION['cart'] as &$item) {\n        if ($item['id'] == $product_id) {\n            $item['quantity'] = $new_quantity;\n            return;\n        }\n    }\n}\n\nfunction remove_from_cart($product_id) {\n    // Remove item from cart by product ID\n    $_SESSION['cart'] = array_filter($_SESSION['cart'], function($item) use ($product_id) {\n        return $item['id'] != $product_id;\n    });\n}\n\nfunction get_cart_contents() {\n    return $_SESSION['cart'];\n}\n?>\n```\n**Usage:**\n\n1. Initialize the cart session by calling `session_start()` at the beginning of your PHP script.\n2. To add a product to the cart, use the `add_to_cart()` function:\n```php\nadd_to_cart(123, 2); // Add product with ID 123 in quantity 2\n```\n3. To update an existing product in the cart, use the `update_cart_item()` function:\n```php\nupdate_cart_item(123, 3); // Update product with ID 123 to quantity 3\n```\n4. To remove a product from the cart, use the `remove_from_cart()` function:\n```php\nremove_from_cart(123);\n```\n5. To retrieve the entire cart contents, use the `get_cart_contents()` function:\n```php\n$cart_contents = get_cart_contents();\nprint_r($cart_contents); // Output: Array ( [0] => Array ( [id] => 123 [quantity] => 3 ) )\n```\n**Example HTML form to demonstrate usage:**\n```html\n<form action=\"\" method=\"post\">\n    <input type=\"hidden\" name=\"product_id\" value=\"123\">\n    <input type=\"number\" name=\"quantity\" value=\"2\">\n    <button type=\"submit\">Add to Cart</button>\n</form>\n\n<?php\nif (isset($_POST['product_id'])) {\n    add_to_cart($_POST['product_id'], $_POST['quantity']);\n}\n?>\n```\nThis example demonstrates a basic user cart system using PHP. You can extend and enhance this code as per your requirements, such as adding product details, handling multiple product additions/removals, implementing security measures, etc.", "code_blocks": ["```php\n<?php\nsession_start();\n\n// Initialize cart array if it doesn't exist\nif (!isset($_SESSION['cart'])) {\n    $_SESSION['cart'] = array();\n}\n\nfunction add_to_cart($product_id, $quantity) {\n    // Check if product is already in cart\n    foreach ($_SESSION['cart'] as $key => $value) {\n        if ($value['id'] == $product_id) {\n            // Update quantity\n            $_SESSION['cart'][$key]['quantity'] += $quantity;\n            return;\n        }\n    }\n\n    // Add new product to cart\n    $_SESSION['cart'][] = array('id' => $product_id, 'quantity' => $quantity);\n}\n\nfunction update_cart_item($product_id, $new_quantity) {\n    foreach ($_SESSION['cart'] as &$item) {\n        if ($item['id'] == $product_id) {\n            $item['quantity'] = $new_quantity;\n            return;\n        }\n    }\n}\n\nfunction remove_from_cart($product_id) {\n    // Remove item from cart by product ID\n    $_SESSION['cart'] = array_filter($_SESSION['cart'], function($item) use ($product_id) {\n        return $item['id'] != $product_id;\n    });\n}\n\nfunction get_cart_contents() {\n    return $_SESSION['cart'];\n}\n?>\n```", "```php\nadd_to_cart(123, 2); // Add product with ID 123 in quantity 2\n```", "```php\nupdate_cart_item(123, 3); // Update product with ID 123 to quantity 3\n```", "```php\nremove_from_cart(123);\n```", "```php\n$cart_contents = get_cart_contents();\nprint_r($cart_contents); // Output: Array ( [0] => Array ( [id] => 123 [quantity] => 3 ) )\n```", null]}
