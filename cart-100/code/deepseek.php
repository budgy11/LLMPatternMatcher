
<?php
session_start();

// Initialize cart if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add item to cart
if (isset($_POST['add_to_cart'])) {
    $productId = $_POST['product_id'];
    $productName = $_POST['product_name'];
    $productPrice = $_POST['product_price'];

    // Check if product ID is provided
    if (empty($productId)) {
        $_SESSION['message'] = "Error: Product ID not found.";
        header("Location: view_cart.php");
        exit();
    }

    $itemExists = false;
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['product_id'] == $productId) {
            $item['quantity']++;
            $itemExists = true;
            break;
        }
    }

    if (!$itemExists) {
        $_SESSION['cart'][] = array(
            'product_id' => $productId,
            'product_name' => $productName,
            'product_price' => $productPrice,
            'quantity' => 1
        );
    }

    // Set success message
    $_SESSION['message'] = "Item added to cart successfully!";
    header("Location: view_cart.php");
    exit();
}

// Display cart contents
echo "<h2>Your Shopping Cart</h2>";
if (empty($_SESSION['cart'])) {
    echo "<p>Your cart is empty.</p>";
} else {
    $total = 0;
    echo "<table border='1'>";
    echo "<tr><th>Product Name</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>";
    foreach ($_SESSION['cart'] as $key => $item) {
        $subtotal = $item['product_price'] * $item['quantity'];
        $total += $subtotal;
        echo "<tr>";
        echo "<td>" . $item['product_name'] . "</td>";
        echo "<td>₹" . number_format($item['product_price'], 2) . "</td>";
        echo "<td><input type='number' min='1' value='" . $item['quantity'] . "' onchange='updateQuantity(" . $key . ", this.value)'></td>";
        echo "<td>₹" . number_format($subtotal, 2) . "</td>";
        echo "<td><a href='remove_item.php?id=" . $key . "'>Remove</a></td>";
        echo "</tr>";
    }
    echo "</table>";
    echo "<p>Grand Total: ₹" . number_format($total, 2) . "</p>";
}

// Clear cart
if (isset($_GET['clear'])) {
    $_SESSION['cart'] = array();
    header("Location: view_cart.php");
    exit();
}
?>

<!-- Include these links -->
<a href="add_item.php">Add Item</a> |
<?php if (!empty($_SESSION['cart'])) { ?>
    <a href="?clear=1">Clear Cart</a>
<?php } ?>

<!-- Optional: Display message -->
<?php
if (isset($_SESSION['message'])) {
    echo "<p>" . $_SESSION['message'] . "</p>";
    unset($_SESSION['message']);
}
?>


<?php
// Start the session
session_start();

// Initialize cart if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function addToCart($productId, $quantity) {
    global $productData; // Assume this holds product information from your database

    if (isset($_SESSION['cart'][$productId])) {
        // If product exists in cart, increment quantity
        $_SESSION['cart'][$productId]['quantity'] += $quantity;
    } else {
        // If product doesn't exist, add it to the cart
        $_SESSION['cart'][$productId] = array(
            'product_id' => $productId,
            'name' => $productData[$productId]['name'],
            'price' => $productData[$productId]['price'],
            'quantity' => $quantity
        );
    }
}

// Function to remove item from cart
function removeFromCart($productId) {
    if (isset($_SESSION['cart'][$productId])) {
        unset($_SESSION['cart'][$productId]);
    }
}

// Display cart contents
echo "<h2>Shopping Cart</h2>";
if (empty($_SESSION['cart'])) {
    echo "Your cart is empty.";
} else {
    // Calculate totals
    $totalQuantity = 0;
    $totalPrice = 0;

    echo "<table border='1'>";
    echo "<tr><th>Product</th><th>Quantity</th><th>Price</th><th>Total</th><th>Action</th></tr>";

    foreach ($_SESSION['cart'] as $item) {
        $productTotal = $item['price'] * $item['quantity'];
        $totalQuantity += $item['quantity'];
        $totalPrice += $productTotal;

        echo "<tr>";
        echo "<td>" . $item['name'] . "</td>";
        echo "<td>" . $item['quantity'] . "</td>";
        echo "<td>₱" . number_format($item['price'], 2) . "</td>";
        echo "<td>₱" . number_format($productTotal, 2) . "</td>";
        echo "<td><a href='cart.php?action=remove&id=" . $item['product_id'] . "'>Remove</a></td>";
        echo "</tr>";
    }

    // Display totals
    echo "<tr>";
    echo "<td colspan='3'><strong>Total:</strong></td>";
    echo "<td colspan='2'>";
    echo "Quantity: " . $totalQuantity . "<br />";
    echo "Total Price: ₱" . number_format($totalPrice, 2);
    echo "</td>";
    echo "</tr>";

    echo "</table>";
}

// Handle cart actions
if (isset($_GET['action'])) {
    switch ($_GET['action']) {
        case 'add':
            if (isset($_GET['id']) && isset($_GET['quantity'])) {
                addToCart($_GET['id'], $_GET['quantity']);
            }
            break;
        
        case 'remove':
            if (isset($_GET['id'])) {
                removeFromCart($_GET['id']);
            }
            break;
    }
}

// Sample product data (replace this with your actual database connection)
$productData = array(
    1 => array('name' => 'Product 1', 'price' => 100),
    2 => array('name' => 'Product 2', 'price' => 200),
    // Add more products as needed
);
?>


<?php
session_start();
?>


<?php
// Start the session
session_start();

// Initialize cart if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Now you can work with $_SESSION['cart']
?>


<?php
session_start();

// Check if the cart exists
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Get product details (example)
$product_id = isset($_GET['id']) ? $_GET['id'] : '';
$product_name = isset($_GET['name']) ? $_GET['name'] : '';
$product_price = isset($_GET['price']) ? $_GET['price'] : '';
$quantity = isset($_GET['quantity']) ? $_GET['quantity'] : 1;

// Check if product already exists in cart
$cart = $_SESSION['cart'];
$item_exists = false;

foreach ($cart as &$item) {
    if ($item['id'] == $product_id) {
        $item['quantity'] += $quantity;
        $item_exists = true;
        break;
    }
}

// If product does not exist, add it to the cart
if (!$item_exists) {
    $cart[] = array(
        'id' => $product_id,
        'name' => $product_name,
        'price' => $product_price,
        'quantity' => $quantity
    );
}

// Update session cart
$_SESSION['cart'] = $cart;

// Redirect to avoid form resubmission
header('Location: cart.php');
exit();
?>


<?php
session_start();

// Check if cart exists and is not empty
if (isset($_SESSION['cart']) && count($_SESSION['cart']) > 0) {
    echo "<h2>Shopping Cart</h2>";
    echo "<table border='1'>";
    echo "<tr><th>Product Name</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>";

    $cart = $_SESSION['cart'];
    foreach ($cart as $item) {
        $total = $item['price'] * $item['quantity'];
        echo "<tr>";
        echo "<td>" . $item['name'] . "</td>";
        echo "<td>₹" . number_format($item['price'], 2) . "</td>";
        echo "<td>" . $item['quantity'] . "</td>";
        echo "<td>₹" . number_format($total, 2) . "</td>";
        echo "<td><a href='remove_from_cart.php?id=" . $item['id'] . "'>Remove</a></td>";
        echo "</tr>";
    }

    echo "</table>";
} else {
    echo "<p>Your cart is empty.</p>";
}
?>


<?php
session_start();

// Check if product ID is provided
if (isset($_GET['id']) && !empty($_GET['id'])) {
    $product_id = $_GET['id'];

    // Get cart contents
    $cart = $_SESSION['cart'];

    // Remove the item with matching ID
    foreach ($cart as $key => $item) {
        if ($item['id'] == $product_id) {
            unset($cart[$key]);
            break;
        }
    }

    // Re-index the array
    $cart = array_values($cart);

    // Update session cart
    $_SESSION['cart'] = $cart;

    // Redirect back to cart page
    header('Location: cart.php');
    exit();
} else {
    // Handle error (invalid product ID)
    header('Location: cart.php');
    exit();
}
?>


<?php
session_start();

// Destroy the cart session
unset($_SESSION['cart']);

// Redirect back to cart page
header('Location: cart.php');
exit();
?>


<?php
session_start();

// Initialize cart if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add item to cart
if (isset($_POST['action']) && $_POST['action'] == 'add') {
    $productId = isset($_POST['product_id']) ? intval($_POST['product_id']) : 0;
    $name = isset($_POST['name']) ? $_POST['name'] : '';
    $price = isset($_POST['price']) ? floatval($_POST['price']) : 0;

    // Check if product already exists in cart
    if (isset($_SESSION['cart'][$productId])) {
        $_SESSION['cart'][$productId]['quantity'] += 1;
    } else {
        $_SESSION['cart'][$productId] = array(
            'id' => $productId,
            'name' => $name,
            'price' => $price,
            'quantity' => 1
        );
    }
}

// Remove item from cart
if (isset($_POST['action']) && $_POST['action'] == 'remove') {
    $productId = isset($_POST['product_id']) ? intval($_POST['product_id']) : 0;
    
    if (isset($_SESSION['cart'][$productId])) {
        unset($_SESSION['cart'][$productId]);
        // Re-index the array to maintain clean session data
        $_SESSION['cart'] = array_values($_SESSION['cart']);
    }
}

// Update item quantity in cart
if (isset($_POST['action']) && $_POST['action'] == 'update') {
    $productId = isset($_POST['product_id']) ? intval($_POST['product_id']) : 0;
    $quantity = isset($_POST['quantity']) ? max(1, intval($_POST['quantity'])) : 1;

    if (isset($_SESSION['cart'][$productId])) {
        $_SESSION['cart'][$productId]['quantity'] = $quantity;
    }
}

// Calculate total amount
$totalAmount = 0;
foreach ($_SESSION['cart'] as $item) {
    $totalAmount += ($item['price'] * $item['quantity']);
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Shopping Cart</title>
    <style>
        body { font-family: Arial, sans-serif; }
        .cart-item { border-bottom: 1px solid #ddd; padding: 10px; }
        .cart-item:last-child { border-bottom: none; }
        .total { font-weight: bold; margin-top: 20px; }
    </style>
</head>
<body>
    <h1>Shopping Cart</h1>
    
    <?php if (empty($_SESSION['cart'])) : ?>
        <p>Your cart is empty.</p>
    <?php else : ?>
        <div class="cart-items">
            <?php foreach ($_SESSION['cart'] as $item) : ?>
                <div class="cart-item">
                    <h3><?php echo $item['name']; ?></h3>
                    <p>Price: $<?php echo number_format($item['price'], 2); ?></p>
                    <p>Quantity: <?php echo $item['quantity']; ?></p>
                    
                    <form action="" method="post">
                        <input type="hidden" name="action" value="remove">
                        <input type="hidden" name="product_id" value="<?php echo $item['id']; ?>">
                        <button type="submit">Remove</button>
                    </form>
                </div>
            <?php endforeach; ?>
        </div>
        
        <div class="total">
            Total Amount: $<?php echo number_format($totalAmount, 2); ?>
        </div>
    <?php endif; ?>

    <!-- Example form to add items -->
    <h2>Add Item to Cart</h2>
    <form action="" method="post">
        <input type="hidden" name="action" value="add">
        <input type="number" name="product_id" placeholder="Product ID" required>
        <input type="text" name="name" placeholder="Product Name" required>
        <input type="number" step="0.01" name="price" placeholder="Price" required>
        <button type="submit">Add to Cart</button>
    </form>

    <!-- Example form to update quantity -->
    <?php if (!empty($_SESSION['cart'])) : ?>
        <h2>Update Quantity</h2>
        <form action="" method="post">
            <input type="hidden" name="action" value="update">
            <input type="number" name="product_id" placeholder="Product ID" required>
            <input type="number" min="1" name="quantity" placeholder="Quantity" required>
            <button type="submit">Update</button>
        </form>
    <?php endif; ?>
</body>
</html>


<?php
session_start();

// Initialize cart if not exists
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function addToCart($productId, $name, $price) {
    global $conn;
    // Check if product already in cart
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['product_id'] == $productId) {
            $item['quantity']++;
            return;
        }
    }
    // Add new item
    $_SESSION['cart'][] = array(
        'product_id' => $productId,
        'name' => $name,
        'price' => $price,
        'quantity' => 1
    );
}

// Function to update quantity
function updateQuantity($index, $newQuantity) {
    if (isset($_SESSION['cart'][$index])) {
        $_SESSION['cart'][$index]['quantity'] = max(1, $newQuantity);
    }
}

// Function to remove item
function removeFromCart($index) {
    if (isset($_SESSION['cart'][$index])) {
        unset($_SESSION['cart'][$index]);
        // Re-index the array
        $_SESSION['cart'] = array_values($_SESSION['cart']);
    }
}

// Calculate totals
$subtotal = 0;
foreach ($_SESSION['cart'] as $item) {
    $subtotal += $item['price'] * $item['quantity'];
}
$total = $subtotal + ($subtotal * 0.1); // Adding 10% tax

// Display cart content
echo "<h2>Your Cart</h2>";
if (empty($_SESSION['cart'])) {
    echo "Your cart is empty.";
} else {
    echo "<table>";
    echo "<tr><th>Product Name</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>";
    foreach ($_SESSION['cart'] as $index => $item) {
        echo "<tr>";
        echo "<td>{$item['name']}</td>";
        echo "<td>\${$item['price']}</td>";
        echo "<td><input type='number' value='{$item['quantity']}' onchange='updateQuantity($index, this.value)'></td>";
        echo "<td>\${$item['price'] * $item['quantity']}</td>";
        echo "<td><a href='remove.php?index=$index'>Remove</a></td>";
        echo "</tr>";
    }
    echo "</table>";
    echo "<h3>Subtotal: \$$subtotal</h3>";
    echo "<h3>Total (including tax): \${$total}</h3>";
}
?>


<?php
session_start();
?>


<?php
function add_to_cart($product_id) {
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }
    if (isset($_SESSION['cart'][$product_id])) {
        $_SESSION['cart'][$product_id]++;
    } else {
        $_SESSION['cart'][$product_id] = 1;
    }
}

function remove_from_cart($product_id) {
    if (isset($_SESSION['cart'][$product_id])) {
        unset($_SESSION['cart'][$product_id]);
    }
}

function empty_cart() {
    $_SESSION['cart'] = array();
}
?>


<?php
include 'includes/functions.php';
?>


<?php
session_start();
include 'includes/functions.php';

if (isset($_POST['product_id'])) {
    $product_id = intval($_POST['product_id']);
    add_to_cart($product_id);
}
header("Location: view_cart.php");
exit();
?>


<?php
session_start();
include 'includes/functions.php';
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <?php if (!empty($_SESSION['cart'])): ?>
        <table>
            <tr><th>Product</th><th>Price</th><th>Quantity</th></tr>
            <?php foreach ($_SESSION['cart'] as $product_id => $quantity): 
                // Fetch product details from database
                $result = mysqli_query($conn, "SELECT * FROM products WHERE id=$product_id");
                if ($row = mysqli_fetch_assoc($result)): ?>
                    <tr>
                        <td><?php echo $row['name']; ?></td>
                        <td>$<?php echo number_format($row['price'], 2); ?></td>
                        <td><?php echo $quantity; ?></td>
                        <td><a href="remove_from_cart.php?product_id=<?php echo $product_id; ?>">Remove</a></td>
                    </tr>
                <?php endif; ?>
            <?php endforeach; ?>
        </table>
    <?php else: ?>
        <p>Your cart is empty.</p>
    <?php endif; ?>

    <a href="empty_cart.php">Empty Cart</a><br>
    <a href="checkout.php">Checkout</a>
</body>
</html>


<?php
session_start();
include 'includes/functions.php';

if (isset($_GET['product_id'])) {
    $product_id = intval($_GET['product_id']);
    remove_from_cart($product_id);
}
header("Location: view_cart.php");
exit();
?>


<?php
session_start();
include 'includes/functions.php';
empty_cart();
header("Location: view_cart.php");
exit();
?>


<?php
// Start the session
session_start();

// Initialize cart if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function addToCart($productId, $quantity) {
    global $connection; // Assuming you have a database connection

    // Check if product exists in the database
    $query = "SELECT * FROM products WHERE id = $productId";
    $result = mysqli_query($connection, $query);
    
    if (mysqli_num_rows($result) > 0) {
        // Check if item already exists in cart
        if (isset($_SESSION['cart'][$productId])) {
            // If exists, increment quantity
            $_SESSION['cart'][$productId] += $quantity;
        } else {
            // If not exists, add new item
            $_SESSION['cart'][$productId] = $quantity;
        }
    }
}

// Function to remove item from cart
function removeFromCart($productId) {
    if (isset($_SESSION['cart'][$productId])) {
        unset($_SESSION['cart'][$productId]);
        // Re-index the array after unsetting
        $_SESSION['cart'] = array_values($_SESSION['cart']);
    }
}

// Function to update quantity of item in cart
function updateQuantity($productId, $newQuantity) {
    if (isset($_SESSION['cart'][$productId])) {
        $_SESSION['cart'][$productId] = $newQuantity;
    }
}

// Function to clear the entire cart
function clearCart() {
    unset($_SESSION['cart']);
    // Re-initialize empty cart
    $_SESSION['cart'] = array();
}

// Example usage:
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    if (isset($_POST['action'])) {
        switch ($_POST['action']) {
            case 'add':
                $productId = isset($_POST['product_id']) ? intval($_POST['product_id']) : 0;
                $quantity = isset($_POST['quantity']) ? intval($_POST['quantity']) : 1;
                addToCart($productId, $quantity);
                header("Location: cart.php?msg=added");
                break;

            case 'remove':
                $productId = isset($_POST['product_id']) ? intval($_POST['product_id']) : 0;
                removeFromCart($productId);
                header("Location: cart.php?msg=removed");
                break;

            case 'update':
                $productId = isset($_POST['product_id']) ? intval($_POST['product_id']) : 0;
                $newQuantity = isset($_POST['quantity']) ? intval($_POST['quantity']) : 1;
                updateQuantity($productId, $newQuantity);
                header("Location: cart.php?msg=updated");
                break;

            case 'clear':
                clearCart();
                header("Location: cart.php?msg=cleared");
                break;
        }
    }
}

// Display cart items
if (!empty($_SESSION['cart'])) {
    echo "<h2>Your Cart</h2>";
    echo "<ul>";
    foreach ($_SESSION['cart'] as $productId => $quantity) {
        // Get product details from database
        $query = "SELECT * FROM products WHERE id = $productId";
        $result = mysqli_query($connection, $query);
        $product = mysqli_fetch_assoc($result);

        if ($product) {
            echo "<li>";
            echo "$product[name] - Quantity: $quantity";
            echo "</li>";
        }
    }
    echo "</ul>";
} else {
    echo "Your cart is empty.";
}
?>


<?php
// Start the session
if (session_status() === PHP_SESSION_NONE) {
    session_start();
}

// Initialize cart if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function addToCart($itemId, $itemDetails) {
    global $cart;
    
    // Check if the item already exists in the cart
    if (isset($_SESSION['cart'][$itemId])) {
        // If it does, increment quantity
        $_SESSION['cart'][$itemId]['quantity']++;
    } else {
        // If not, add new item to cart
        $_SESSION['cart'][$itemId] = array(
            'id' => $itemId,
            'name' => $itemDetails['name'],
            'price' => $itemDetails['price'],
            'quantity' => 1
        );
    }
}

// Function to update cart quantity
function updateCart($itemId, $newQuantity) {
    if (isset($_SESSION['cart'][$itemId])) {
        $_SESSION['cart'][$itemId]['quantity'] = $newQuantity;
    }
}

// Function to remove item from cart
function removeFromCart($itemId) {
    unset($_SESSION['cart'][$itemId]);
}

// Function to calculate total price
function cartTotal() {
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += ($item['price'] * $item['quantity']);
    }
    return $total;
}

// Function to display cart items
function displayCart() {
    if (!empty($_SESSION['cart'])) {
        echo "<table>";
        echo "<tr><th>Item Name</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>";
        
        foreach ($_SESSION['cart'] as $item) {
            $totalItem = $item['price'] * $item['quantity'];
            echo "<tr>";
            echo "<td>{$item['name']}</td>";
            echo "<td>$$item[price]</td>";
            echo "<td><input type='number' name='quantity{$item['id']}' value='{$item['quantity']}'></td>";
            echo "<td>$$totalItem</td>";
            echo "<td><button onclick=\"updateQuantity({$item['id']})\">Update</button> <button onclick=\"removeFromCart({$item['id']})\">Remove</button></td>";
            echo "</tr>";
        }
        
        echo "</table>";
    } else {
        echo "Your cart is empty!";
    }
}

// Sample usage:
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    if (isset($_POST['action'])) {
        switch ($_POST['action']) {
            case 'add':
                $itemDetails = array(
                    'name' => $_POST['name'],
                    'price' => $_POST['price']
                );
                addToCart($_POST['id'], $itemDetails);
                break;
                
            case 'update':
                foreach ($_SESSION['cart'] as $key => $value) {
                    if (isset($_POST["quantity{$value['id']}"])) {
                        updateCart($value['id'], $_POST["quantity{$value['id']}"]);
                    }
                }
                break;
                
            case 'remove':
                removeFromCart($_POST['id']);
                break;
        }
    }
}

// Display cart items
displayCart();
?>


<?php
session_start();

// Initialize cart if not exists
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function addToCart($item_id, $item_name, $price) {
    global $$_SESSION;
    
    // Check if item already exists in cart
    if (isset($_SESSION['cart'][$item_id])) {
        // Update quantity or other properties
        $_SESSION['cart'][$item_id]['quantity']++;
    } else {
        // Add new item
        $_SESSION['cart'][$item_id] = array(
            'id' => $item_id,
            'name' => $item_name,
            'price' => $price,
            'quantity' => 1
        );
    }
}

// Function to remove item from cart
function removeFromCart($item_id) {
    global $$_SESSION;
    
    // Check if item exists in cart
    if (isset($_SESSION['cart'][$item_id])) {
        unset($_SESSION['cart'][$item_id]);
        // Re-index the array to avoid empty indices
        $_SESSION['cart'] = array_values($_SESSION['cart']);
    }
}

// Function to update item quantity
function updateQuantity($item_id, $quantity) {
    global $$_SESSION;
    
    if (isset($_SESSION['cart'][$item_id']) && is_numeric($quantity) && $quantity > 0) {
        $_SESSION['cart'][$item_id]['quantity'] = $quantity;
    }
}

// Function to display cart contents
function displayCart() {
    global $$_SESSION;
    
    if (!empty($_SESSION['cart'])) {
        echo "<h2>Shopping Cart</h2>";
        echo "<table border='1'>";
        echo "<tr><th>ID</th><th>Name</th><th>Price</th><th>Quantity</th><th>Total</th></tr>";
        
        foreach ($_SESSION['cart'] as $item) {
            $total = $item['price'] * $item['quantity'];
            echo "<tr>";
            echo "<td>{$item['id']}</td>";
            echo "<td>{$item['name']}</td>";
            echo "<td>$" . number_format($item['price'], 2) . "</td>";
            echo "<td><input type='number' value='{$item['quantity']}' onChange='updateQuantity("{$item['id']}", this.value)'></td>";
            echo "<td>$" . number_format($total, 2) . "</td>";
            echo "<td><button onclick='removeFromCart({$item['id']})'>Remove</button></td>";
            echo "</tr>";
        }
        
        echo "</table>";
    } else {
        echo "<p>Your cart is empty.</p>";
    }
}

// Destroy session
function destroySession() {
    // Unset all session variables
    $_SESSION = array();
    
    // Delete session cookie
    if (isset($_COOKIE[session_name()])) {
        setcookie(session_name(), '', time() - 4000);
    }
    
    // Destroy the PHP session
    session_destroy();
}
?>


     ini_set('session.use_strict_mode', 1);
     ini_set('session.cookie_httponly', 1);
     ini_set('session.cookie_secure', 1); // if using HTTPS
     
   - Regenerate session ID after login/logout to prevent session fixation attacks:
     
     session_regenerate(true);
     

4. **Destroying the Session:**
   - `destroySession()`: Destroys all session data and cookies.

5. **Storing Sensitive Data:**
   - Never store sensitive information like passwords in sessions.
   - Use secure connections (HTTPS) to protect data in transit.

### Usage Example:



<?php
session_start();

// Check if cart session exists, if not initialize it
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add item to cart
if ($_SERVER["REQUEST_METHOD"] == "POST" && isset($_POST['add_to_cart'])) {
    $productId = intval($_POST['product_id']);
    $quantity = intval($_POST['quantity']);

    // Check if product is already in the cart
    if (isset($_SESSION['cart'][$productId])) {
        $_SESSION['cart'][$productId] += $quantity;
    } else {
        $_SESSION['cart'][$productId] = $quantity;
    }

    echo "Item added to cart!";
}

// Remove item from cart
if ($_SERVER["REQUEST_METHOD"] == "POST" && isset($_POST['remove_from_cart'])) {
    $productId = intval($_POST['product_id']);
    
    if (isset($_SESSION['cart'][$productId])) {
        unset($_SESSION['cart'][$productId]);
        echo "Item removed from cart!";
    }
}

// Display cart contents
echo "<h2>Shopping Cart</h2>";
echo "<form method='post'>";
foreach ($_SESSION['cart'] as $product_id => $quantity) {
    // Here you would typically query your database to get product details
    // For this example, we'll assume $product_name and $price are known
    echo "<div>";
    echo "Product ID: $product_id <br>";
    echo "Quantity: $quantity <br>";
    echo "<input type='hidden' name='product_id' value='$product_id'>";
    echo "<button type='submit' name='remove_from_cart'>Remove</button>";
    echo "</div>";
}
echo "</form>";

// Close session
session_write_close();
?>


<?php
// Start the session
session_start();

// Initialize cart if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Handle adding items to cart via form submission
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    if (isset($_POST['add_to_cart'])) {
        // Get product details from the form
        $productId = $_POST['product_id'];
        $productName = $_POST['product_name'];
        $productPrice = $_POST['product_price'];
        $quantity = isset($_POST['quantity']) ? intval($_POST['quantity']) : 1;

        // Check if item already exists in cart
        $itemExists = false;
        foreach ($_SESSION['cart'] as &$item) {
            if ($item['product_id'] == $productId) {
                $item['quantity'] += $quantity;
                $itemExists = true;
                break;
            }
        }

        // Add new item to cart if it doesn't exist
        if (!$itemExists) {
            $newItem = array(
                'product_id' => $productId,
                'name' => $productName,
                'price' => $productPrice,
                'quantity' => $quantity
            );
            $_SESSION['cart'][] = $newItem;
        }

        // Redirect back to cart or product page
        header("Location: " . $_SERVER["PHP_SELF"]);
        exit();
    }
}

// Display the cart items
echo "<h2>Shopping Cart</h2>";
if (empty($_SESSION['cart'])) {
    echo "<p>Your cart is empty.</p>";
} else {
    echo "<table border='1'>";
    echo "<tr><th>Product Name</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>";
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $subtotal = $item['price'] * $item['quantity'];
        $total += $subtotal;
        echo "<tr>";
        echo "<td>" . $item['name'] . "</td>";
        echo "<td>($" . number_format($item['price'], 2) . ")</td>";
        echo "<td><input type='number' value='" . $item['quantity'] . "'></td>";
        echo "<td>($" . number_format($subtotal, 2) . ")</td>";
        echo "<td><a href='remove_item.php?product_id=" . $item['product_id'] . "'>Remove</a></td>";
        echo "</tr>";
    }
    echo "</table>";
    echo "<p>Total: $" . number_format($total, 2) . "</p>";
}

// Include a link to view the cart
echo "<p><a href='view_cart.php'>View Cart</a></p>";
?>

<!DOCTYPE html>
<html>
<head>
    <title>Product Page</title>
</head>
<body>
    <!-- Product form -->
    <h2>Add Item to Cart</h2>
    <form method="post" action="<?php echo $_SERVER["PHP_SELF"]; ?>">
        <input type="hidden" name="product_id" value="1">
        <input type="text" name="product_name" placeholder="Product Name" required>
        <input type="number" name="product_price" step="0.01" min="0" required>
        <input type="number" name="quantity" value="1">
        <input type="submit" name="add_to_cart" value="Add to Cart">
    </form>

    <!-- Remove item script -->
    <?php include 'remove_item.php'; ?>
</body>
</html>


<?php
session_start();

if ($_SERVER["REQUEST_METHOD"] == "GET" && isset($_GET['product_id'])) {
    $productId = $_GET['product_id'];
    
    foreach ($_SESSION['cart'] as $key => &$item) {
        if ($item['product_id'] == $productId) {
            unset($_SESSION['cart'][$key]);
            break;
        }
    }

    header("Location: " . $_SERVER["PHP_SELF"]);
    exit();
}
?>


<?php
// Start the session
session_start();

// Initialize cart if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function add_to_cart($product_id, $name, $price) {
    global $connect; // Assuming you have a database connection

    // Check if product is already in the cart
    $item_exists = false;
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['product_id'] == $product_id) {
            $item_exists = true;
            break;
        }
    }

    if (!$item_exists) {
        // Add new item to the cart
        $_SESSION['cart'][] = array(
            'product_id' => $product_id,
            'name' => $name,
            'price' => $price,
            'quantity' => 1
        );
    }
}

// Function to update quantity of an item in cart
function update_quantity($product_id, $new_quantity) {
    global $connect;

    foreach ($_SESSION['cart'] as &$item) {
        if ($item['product_id'] == $product_id) {
            // Ensure new_quantity is at least 1
            $item['quantity'] = max(1, $new_quantity);
            break;
        }
    }
}

// Function to remove item from cart
function remove_from_cart($product_id) {
    foreach ($_SESSION['cart'] as $key => $item) {
        if ($item['product_id'] == $product_id) {
            unset($_SESSION['cart'][$key]);
            break;
        }
    }

    // Re-index the array
    $_SESSION['cart'] = array_values($_SESSION['cart']);
}

// Function to display cart contents
function display_cart() {
    $total_price = 0;

    echo "<table border='1'>";
    echo "<tr><th>Product</th><th>Quantity</th><th>Price</th><th>Total</th><th>Action</th></tr>";

    foreach ($_SESSION['cart'] as $item) {
        $price_total = $item['price'] * $item['quantity'];
        $total_price += $price_total;

        echo "<tr>";
        echo "<td>" . $item['name'] . "</td>";
        echo "<td><input type='number' value='" . $item['quantity'] . "' onchange='updateQuantity(" . $item['product_id'] . ", this.value)'></td>";
        echo "<td>£" . number_format($item['price'], 2) . "</td>";
        echo "<td>£" . number_format($price_total, 2) . "</td>";
        echo "<td><button onclick='removeFromCart(" . $item['product_id'] . ")'>Remove</button></td>";
        echo "</tr>";
    }

    echo "<tr><td colspan='4'><strong>Grand Total:</strong></td><td>£" . number_format($total_price, 2) . "</td></tr>";
    echo "</table>";
}

// Example usage:
if (isset($_GET['action'])) {
    switch ($_GET['action']) {
        case 'add':
            add_to_cart(1, "Product Name", 9.99);
            break;
        case 'update':
            update_quantity(1, $_GET['quantity']);
            break;
        case 'remove':
            remove_from_cart($_GET['product_id']);
            break;
    }
}

// Display cart contents
display_cart();
?>


<?php
session_start();
include('header.php');

// Initialize cart if not exists
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function addToCart($productId, $name, $price) {
    global $conn;
    
    // Check if product is already in cart
    $found = false;
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['product_id'] == $productId) {
            $item['quantity']++;
            $found = true;
            break;
        }
    }
    unset($item);
    
    // Add new product to cart
    if (!$found) {
        $_SESSION['cart'][] = array(
            'product_id' => $productId,
            'name' => $name,
            'price' => $price,
            'quantity' => 1
        );
    }
}

// Function to remove item from cart
function removeItem($index, $removeAll = false) {
    if ($removeAll) {
        unset($_SESSION['cart'][$index]);
    } else {
        $_SESSION['cart'][$index]['quantity']--;
        if ($_SESSION['cart'][$index]['quantity'] == 0) {
            unset($_SESSION['cart'][$index]);
        }
    }
}

// Function to calculate total price
function calculateTotal() {
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += $item['price'] * $item['quantity'];
    }
    return $total;
}

// Handle form actions
if (isset($_GET['action'])) {
    if ($_GET['action'] == 'add') {
        addToCart($_GET['id'], $_GET['name'], $_GET['price']);
        header("Location: cart.php");
    } elseif ($_GET['action'] == 'remove') {
        removeItem($_GET['index'], isset($_GET['all']) && $_GET['all'] == 1);
        header("Location: cart.php");
    }
}

// Clear cart on logout
if (isset($_GET['logout'])) {
    unset($_SESSION['cart']);
    session_unset();
    session_destroy();
}
?>

<!-- Display Cart -->
<h2>Your Shopping Cart</h2>
<?php if (!empty($_SESSION['cart'])) : ?>
<table border="1">
    <tr><th>Product Name</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>
    <?php foreach ($_SESSION['cart'] as $index => $item) : ?>
    <tr>
        <td><?php echo $item['name']; ?></td>
        <td>$<?php echo number_format($item['price'], 2); ?></td>
        <td><?php echo $item['quantity']; ?></td>
        <td>$<?php echo number_format($item['price'] * $item['quantity'], 2); ?></td>
        <td>
            <a href="?action=remove&index=<?php echo $index; ?>">Remove 1</a> |
            <a href="?action=remove&index=<?php echo $index; ?>&all=1">Remove All</a>
        </td>
    </tr>
    <?php endforeach; ?>
</table>
<p><strong>Total: $<?php echo number_format(calculateTotal(), 2); ?></strong></p>
<a href="checkout.php">Proceed to Checkout</a> |
<a href="?logout=1">Logout and Clear Cart</a>
<?php else : ?>
<p>Your cart is empty.</p>
<a href="products.php">Go shopping</a>
<?php endif; ?>

<?php include('footer.php'); ?>


<?php
// Start the session
session_start();

// Initialize cart if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add item to cart
if (isset($_POST['add_to_cart'])) {
    $item_id = $_POST['item_id'];
    
    // Check if item already exists in cart
    if (array_key_exists($item_id, $_SESSION['cart'])) {
        // Increment quantity
        $_SESSION['cart'][$item_id]['quantity']++;
    } else {
        // Add new item to cart
        $_SESSION['cart'][$item_id] = array(
            'id' => $item_id,
            'quantity' => 1
        );
    }
    
    // Redirect back to the product page or cart
    header("Location: cart.php");
    exit();
}

// Remove item from cart
if (isset($_POST['remove_from_cart'])) {
    $item_id = $_POST['item_id'];
    
    // Check if item exists in cart
    if (array_key_exists($item_id, $_SESSION['cart'])) {
        unset($_SESSION['cart'][$item_id]);
        
        // Re-index the cart array
        $_SESSION['cart'] = array_values($_SESSION['cart']);
    }
    
    // Redirect back to the cart page
    header("Location: cart.php");
    exit();
}

// Display cart contents
function display_cart() {
    if (empty($_SESSION['cart'])) {
        echo "<p>Your cart is empty.</p>";
    } else {
        echo "<table>";
        echo "<tr><th>Item ID</th><th>Quantity</th><th>Action</th></tr>";
        
        foreach ($_SESSION['cart'] as $item) {
            echo "<tr>";
            echo "<td>{$item['id']}</td>";
            echo "<td>{$item['quantity']}</td>";
            echo "<td><form method='post' action=''><input type='hidden' name='item_id' value='{$item['id']}'><button type='submit' name='remove_from_cart'>Remove</button></form></td>";
            echo "</tr>";
        }
        
        echo "</table>";
    }
}
?>


<?php
session_start();
?>


if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}


// Assuming you have product details from a form or URL parameters
$product_id = isset($_POST['product_id']) ? $_POST['product_id'] : '';
$product_name = isset($_POST['product_name']) ? $_POST['product_name'] : '';
$product_price = isset($_POST['product_price']) ? $_POST['product_price'] : 0;

// Add the item to the cart
if (!empty($product_id) && !empty($product_name) && $product_price > 0) {
    $item = array(
        'id' => $product_id,
        'name' => $product_name,
        'price' => $product_price
    );
    $_SESSION['cart'][] = $item;
}


if (!empty($_SESSION['cart'])) {
    echo "<h2>Shopping Cart</h2>";
    echo "<ul>";
    foreach ($_SESSION['cart'] as $item) {
        echo "<li>ID: " . $item['id'] . ", Name: " . $item['name'] . ", Price: $" . number_format($item['price'], 2) . "</li>";
    }
    echo "</ul>";
} else {
    echo "Your cart is empty.";
}


// Remove an item by its index
if (isset($_GET['remove'])) {
    $index = intval($_GET['remove']);
    if ($index >= 0 && $index < count($_SESSION['cart'])) {
        array_splice($_SESSION['cart'], $index, 1);
    }
}


$total = 0;
foreach ($_SESSION['cart'] as $item) {
    $total += $item['price'];
}
echo "Total: $" . number_format($total, 2);


if (isset($_POST['checkout'])) {
    // Process the order here
    print_r($_SESSION['cart']); // Display the cart contents for demonstration
    // Destroy the session after checkout
    unset($_SESSION['cart']);
}


session_unset();
session_destroy();


<?php
session_start();

if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add item to cart
if ($_SERVER["REQUEST_METHOD"] == "POST" && isset($_POST['add_to_cart'])) {
    $product_id = $_POST['product_id'];
    $product_name = $_POST['product_name'];
    $product_price = $_POST['product_price'];

    if (!empty($product_id) && !empty($product_name) && $product_price > 0) {
        $item = array(
            'id' => $product_id,
            'name' => $product_name,
            'price' => $product_price
        );
        $_SESSION['cart'][] = $item;
    }
}

// Remove item from cart
if (isset($_GET['remove'])) {
    $index = intval($_GET['remove']);
    if ($index >= 0 && $index < count($_SESSION['cart'])) {
        array_splice($_SESSION['cart'], $index, 1);
    }
}

// Checkout process
if (isset($_POST['checkout'])) {
    // Process the order here
    print_r($_SESSION['cart']); // Display the cart contents for demonstration
    // Destroy the session after checkout
    unset($_SESSION['cart']);
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <?php if (!empty($_SESSION['cart'])) : ?>
        <h2>Your Shopping Cart</h2>
        <ul>
            <?php foreach ($_SESSION['cart'] as $index => $item) : ?>
                <li>
                    ID: <?php echo $item['id']; ?>,
                    Name: <?php echo $item['name']; ?>,
                    Price: $<?php echo number_format($item['price'], 2); ?>
                    <a href="?remove=<?php echo $index; ?>">Remove</a>
                </li>
            <?php endforeach; ?>
        </ul>
        <form method="post">
            <input type="submit" name="checkout" value="Checkout">
        </form>
    <?php else : ?>
        <h2>Your cart is empty.</h2>
    <?php endif; ?>

    <!-- Example form to add items -->
    <h2>Add Item to Cart</h2>
    <form method="post">
        Product ID: <input type="text" name="product_id"><br>
        Product Name: <input type="text" name="product_name"><br>
        Product Price: <input type="number" step="0.01" name="product_price"><br>
        <input type="submit" name="add_to_cart" value="Add to Cart">
    </form>
</body>
</html>


<?php
// Start the session
session_start();

// Initialize cart if not set
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function addToCart($item_id, $quantity) {
    global $items; // Assuming $items is an array of available items with their details
    
    if ($quantity > 0 && isset($items[$item_id])) {
        $item_price = $items[$item_id]['price'];
        
        if (isset($_SESSION['cart'][$item_id])) {
            // If item already exists in cart, update quantity
            $_SESSION['cart'][$item_id]['quantity'] += $quantity;
        } else {
            // Add new item to cart
            $_SESSION['cart'][$item_id] = array(
                'id' => $item_id,
                'name' => $items[$item_id]['name'],
                'price' => $item_price,
                'quantity' => $quantity
            );
        }
        
        // Calculate total amount
        calculateTotal();
    }
}

// Function to update cart quantity
function updateQuantity($item_id, $new_quantity) {
    if (isset($_SESSION['cart'][$item_id]) && $new_quantity > 0) {
        $_SESSION['cart'][$item_id]['quantity'] = $new_quantity;
        calculateTotal();
    }
}

// Function to remove item from cart
function removeFromCart($item_id) {
    if (isset($_SESSION['cart'][$item_id])) {
        unset($_SESSION['cart'][$item_id]);
        calculateTotal();
    }
}

// Function to calculate total amount
function calculateTotal() {
    $total = 0;
    
    foreach ($_SESSION['cart'] as $item) {
        $total += ($item['price'] * $item['quantity']);
    }
    
    $_SESSION['total_amount'] = $total;
}

// Display cart contents
function displayCart() {
    if (!empty($_SESSION['cart'])) {
        echo "<h2>Shopping Cart</h2>";
        echo "<table border='1'>";
        echo "<tr><th>Item Name</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>";
        
        foreach ($_SESSION['cart'] as $item_id => $item) {
            $total_item_price = $item['price'] * $item['quantity'];
            echo "<tr>";
            echo "<td>{$item['name']}</td>";
            echo "<td>$$item[price]</td>";
            echo "<td><input type='number' value='{$item['quantity']}' onchange='updateQuantity($item_id, this.value)'></td>";
            echo "<td>$$total_item_price</td>";
            echo "<td><a href='remove_from_cart.php?id=$item_id'>Remove</a></td>";
            echo "</tr>";
        }
        
        echo "</table>";
        echo "<h3>Total Amount: $$$_SESSION[total_amount]</h3>";
    } else {
        echo "Your cart is empty!";
    }
}

// Sample items (you can replace this with your database items)
$items = array(
    1 => array('id' => 1, 'name' => 'Product 1', 'price' => 29.99),
    2 => array('id' => 2, 'name' => 'Product 2', 'price' => 49.99),
    3 => array('id' => 3, 'name' => 'Product 3', 'price' => 19.99)
);

// Add item to cart (example)
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    if (isset($_POST['item_id']) && isset($_POST['quantity'])) {
        addToCart($_POST['item_id'], $_POST['quantity']);
    }
}

// Display cart
displayCart();

?>


<form action="" method="post">
    <select name="item_id">
        <?php foreach ($items as $item): ?>
            <option value="<?php echo $item['id']; ?>"><?php echo $item['name']; ?></option>
        <?php endforeach; ?>
    </select>

    <input type="number" name="quantity" placeholder="Quantity">
    
    <button type="submit">Add to Cart</button>
</form>


<?php
session_start();
$item_id = $_GET['id'];
removeFromCart($item_id);
header('Location: cart.php');
?>


<?php
// Start the session
session_start();

// Check if the cart exists in the session. If not, initialize it as an array
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add items to the cart
function addToCart($product_id, $quantity) {
    global $db;
    
    // Check if product is already in the cart
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['product_id'] == $product_id) {
            $item['quantity'] += $quantity;
            return true;
        }
    }
    
    // If not, add the new product to the cart
    $new_item = array(
        'product_id' => $product_id,
        'quantity'   => $quantity
    );
    
    $_SESSION['cart'][] = $new_item;
    return true;
}

// Function to display cart contents
function displayCart() {
    if (!isset($_SESSION['cart'])) {
        echo "Your cart is empty.";
        return;
    }
    
    foreach ($_SESSION['cart'] as $item) {
        // Assuming you have a database connection and product details are retrieved from the database
        $result = mysql_query("SELECT * FROM products WHERE id=" . $item['product_id']);
        $product = mysql_fetch_assoc($result);
        
        echo "Product: " . $product['name'] . "<br />";
        echo "Quantity: " . $item['quantity'] . "<br />";
        echo "Price: $" . number_format($product['price'], 2) . "<br />";
        echo "Total: $" . number_format($product['price'] * $item['quantity'], 2) . "<br /><hr />";
    }
}

// Function to remove an item from the cart
function removeFromCart($product_id) {
    foreach ($_SESSION['cart'] as $key => &$item) {
        if ($item['product_id'] == $product_id) {
            unset($_SESSION['cart'][$key]);
            // Re-index the array keys
            $_SESSION['cart'] = array_values($_SESSION['cart']);
            return true;
        }
    }
    return false;
}

// Example usage:
if (isset($_GET['action'])) {
    switch ($_GET['action']) {
        case 'add':
            if (isset($_GET['product_id']) && isset($_GET['quantity'])) {
                addToCart($_GET['product_id'], $_GET['quantity']);
            }
            break;
            
        case 'remove':
            if (isset($_GET['product_id'])) {
                removeFromCart($_GET['product_id']);
            }
            break;
            
        case 'clear':
            // Destroy the entire cart session
            unset($_SESSION['cart']);
            break;
    }
}

// Display the current cart contents
displayCart();

?>


// Destroy the cart session
unset($_SESSION['cart']);
session_unset();
session_destroy();


<?php
// Start the session
session_start();

// Check if the cart session exists, if not, initialize it
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add item to cart
function addToCart($productId, $productName, $productPrice) {
    // Create an associative array for the item
    $item = array(
        'id' => $productId,
        'name' => $productName,
        'price' => $productPrice,
        'quantity' => 1
    );
    
    // Add the item to the cart session
    $_SESSION['cart'][] = $item;
}

// Display cart contents
function displayCart() {
    $total = 0;
    echo "<h2>Your Cart</h2>";
    if (empty($_SESSION['cart'])) {
        echo "Your cart is empty!";
    } else {
        foreach ($_SESSION['cart'] as $item) {
            echo "<div class='cart-item'>";
            echo "<p>" . $item['name'] . "</p>";
            echo "<p>Price: $" . number_format($item['price'], 2) . "</p>";
            echo "<p>Quantity: " . $item['quantity'] . "</p>";
            echo "</div>";
            $total += ($item['price'] * $item['quantity']);
        }
        echo "<h3>Total: $" . number_format($total, 2) . "</h3>";
    }
}

// Remove item from cart
function removeFromCart($productId) {
    // Check if the cart is not empty
    if (!empty($_SESSION['cart'])) {
        foreach ($_SESSION['cart'] as $key => $item) {
            if ($item['id'] == $productId) {
                unset($_SESSION['cart'][$key]);
                break;
            }
        }
        // Re-index the array keys after removal
        $_SESSION['cart'] = array_values($_SESSION['cart']);
    }
}

// Example usage:

// Add items to cart
addToCart(1, "Laptop", 999.99);
addToCart(2, "Smartphone", 699.99);

// Display the cart contents
displayCart();

// Remove an item from cart
removeFromCart(1);

// Display the updated cart contents
displayCart();

// Always save the session after modifications
session_write_close();
?>


<?php
// Start the session
session_start();

// Initialize cart if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function addToCart($item_id, $item_name, $price) {
    global $db; // Assuming you have a database connection

    // Check if the item already exists in the cart
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['id'] == $item_id) {
            $item['quantity']++;
            return;
        }
    }

    // If not, add the new item to the cart
    $_SESSION['cart'][] = array(
        'id' => $item_id,
        'name' => $item_name,
        'price' => $price,
        'quantity' => 1
    );
}

// Function to remove item from cart
function removeFromCart($item_id) {
    foreach ($_SESSION['cart'] as $key => $item) {
        if ($item['id'] == $item_id) {
            unset($_SESSION['cart'][$key]);
            return;
        }
    }
}

// Function to calculate total price of items in the cart
function calculateTotal() {
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += ($item['price'] * $item['quantity']);
    }
    return $total;
}

// Function to display cart items
function displayCart() {
    if (!empty($_SESSION['cart'])) {
        echo "<h3>Shopping Cart</h3>";
        echo "<table border='1'>";
        echo "<tr><th>Item Name</th><th>Price</th><th>Quantity</th><th>Subtotal</th></tr>";

        foreach ($_SESSION['cart'] as $item) {
            $subtotal = $item['price'] * $item['quantity'];
            echo "<tr>";
            echo "<td>{$item['name']}</td>";
            echo "<td>$$item['price']</td>";
            echo "<td>$item['quantity']</td>";
            echo "<td>$$subtotal</td>";
            echo "</tr>";
        }

        // Display total
        $total = calculateTotal();
        echo "<tr><td colspan='3'><strong>Total:</strong></td><td>$$total</td></tr>";
        echo "</table>";
    } else {
        echo "Your cart is empty!";
    }
}

// Example usage:
// addToCart(1, 'Product 1', 29.99);
// displayCart();
?>



<?php
session_start();

// Initialize cart if not already set
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add items to the cart
function addToCart($productId, $productName, $productPrice, $quantity) {
    global $connection; // Assuming you have a database connection

    // Check if product exists in the database (you should validate this)
    $sql = "SELECT * FROM products WHERE id = ?";
    $stmt = $connection->prepare($sql);
    $stmt->bind_param("i", $productId);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        // Check if item already exists in cart
        if (isset($_SESSION['cart'][$productId])) {
            // Update quantity or other details
            $_SESSION['cart'][$productId]['quantity'] += $quantity;
        } else {
            // Add new item to cart
            $_SESSION['cart'][$productId] = array(
                'product_id' => $productId,
                'product_name' => $productName,
                'product_price' => $productPrice,
                'quantity' => $quantity
            );
        }
    } else {
        // Product does not exist in database
        return false;
    }

    return true;
}

// Function to display cart contents
function displayCart() {
    if (!empty($_SESSION['cart'])) {
        echo "<h2>Your Cart</h2>";
        $total = 0;

        foreach ($_SESSION['cart'] as $item) {
            $subtotal = $item['product_price'] * $item['quantity'];
            $total += $subtotal;

            echo "<div class='cart-item'>";
            echo "<p>Product: " . $item['product_name'] . "</p>";
            echo "<p>Price: $" . number_format($item['product_price'], 2) . "</p>";
            echo "<p>Quantity: " . $item['quantity'] . "</p>";
            echo "<p>Subtotal: $" . number_format($subtotal, 2) . "</p>";
            echo "</div>";
        }

        echo "<h3>Total: $" . number_format($total, 2) . "</h3>";
    } else {
        echo "<p>Your cart is empty.</p>";
    }
}

// Function to remove item from cart
function removeFromCart($productId) {
    if (isset($_SESSION['cart'][$productId])) {
        unset($_SESSION['cart'][$productId]);
        // Re-index the array
        $_SESSION['cart'] = array_values($_SESSION['cart']);
        return true;
    }

    return false;
}

// Example usage:
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    if (isset($_POST['add_to_cart'])) {
        $productId = intval($_POST['product_id']);
        $productName = $_POST['product_name'];
        $productPrice = floatval($_POST['product_price']);
        $quantity = intval($_POST['quantity']);

        addToCart($productId, $productName, $productPrice, $quantity);
    }

    if (isset($_POST['remove_from_cart'])) {
        $productId = intval($_POST['product_id']);
        removeFromCart($productId);
    }
}

// Display cart
displayCart();
?>


<?php
session_start();

// Initialize cart if not already set
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add product to cart
function add_product($product_id, $quantity) {
    global $products; // Assuming $products is an array containing your product data

    foreach ($_SESSION['cart'] as &$item) {
        if ($item['id'] == $product_id) {
            $item['quantity'] += $quantity;
            return true;
        }
    }

    // If product not found in cart, add it
    $_SESSION['cart'][] = array(
        'id' => $product_id,
        'name' => $products[$product_id]['name'],
        'price' => $products[$product_id]['price'],
        'quantity' => $quantity
    );
}

// Function to update product quantity in cart
function update_quantity($product_id, $new_quantity) {
    if ($new_quantity < 1) {
        remove_item($product_id);
        return;
    }

    foreach ($_SESSION['cart'] as &$item) {
        if ($item['id'] == $product_id) {
            $item['quantity'] = $new_quantity;
            return true;
        }
    }
}

// Function to remove item from cart
function remove_item($product_id) {
    foreach ($_SESSION['cart'] as $key => $item) {
        if ($item['id'] == $product_id) {
            unset($_SESSION['cart'][$key]);
            $_SESSION['cart'] = array_values($_SESSION['cart']); // Re-index the cart
            return true;
        }
    }
}

// Function to empty the entire cart
function empty_cart() {
    $_SESSION['cart'] = array();
}

// Function to display cart contents
function display_cart() {
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        echo "Product: " . $item['name'] . "<br />";
        echo "Price: $" . number_format($item['price'], 2) . "<br />";
        echo "Quantity: " . $item['quantity'] . "<br />";
        echo "Subtotal: $" . number_format($item['price'] * $item['quantity'], 2) . "<br /><br />";
        $total += $item['price'] * $item['quantity'];
    }
    echo "Total Cart Value: $" . number_format($total, 2);
}

// Example usage:

// Add products to cart
add_product(1, 2); // Product ID 1, quantity 2
add_product(2, 1); // Product ID 2, quantity 1

// Update quantity of product with ID 1
update_quantity(1, 3);

// Remove product with ID 2
remove_item(2);

// Display cart contents
display_cart();

// Empty the cart
empty_cart();
?>


<?php
session_start();

if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add item to cart
if (isset($_POST['action']) && $_POST['action'] == 'add') {
    $item_id = intval($_POST['item_id']);
    $quantity = intval($_POST['quantity']);

    $found = false;
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['id'] == $item_id) {
            $found = true;
            // Update quantity (you can modify this logic as needed)
            $item['quantity'] += $quantity;
            break;
        }
    }

    if (!$found) {
        array_push($_SESSION['cart'], array(
            'id' => $item_id,
            'quantity' => $quantity
        ));
    }

    header("Location: cart.php");
    exit();
}

// Remove item from cart
if (isset($_POST['action']) && $_POST['action'] == 'remove') {
    $item_id = intval($_POST['item_id']);

    foreach ($_SESSION['cart'] as $key => &$item) {
        if ($item['id'] == $item_id) {
            unset($_SESSION['cart'][$key]);
            // Reindex the array
            $_SESSION['cart'] = array_values($_SESSION['cart']);
            break;
        }
    }

    header("Location: cart.php");
    exit();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <h1>Your Shopping Cart</h1>

    <?php if (empty($_SESSION['cart'])) { ?>
        <p>Your cart is empty.</p>
    <?php } else { ?>
        <ul>
            <?php foreach ($_SESSION['cart'] as $item) { ?>
                <li>Item ID: <?php echo $item['id']; ?> | Quantity: <?php echo $item['quantity']; ?>
                    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
                        <input type="hidden" name="action" value="remove">
                        <input type="hidden" name="item_id" value="<?php echo $item['id']; ?>">
                        <button type="submit">Remove</button>
                    </form>
                </li>
            <?php } ?>
        </ul>
    <?php } ?>

    <!-- Example Add Form -->
    <h2>Add Items to Cart</h2>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        Item ID: <input type="number" name="item_id" required><br>
        Quantity: <input type="number" name="quantity" min="1" value="1" required><br>
        <button type="submit" name="action" value="add">Add to Cart</button>
    </form>
</body>
</html>


<?php
// Start the session
session_start();

// Initialize the cart if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add item to cart
function add_to_cart($product_id, $name, $price) {
    global $db;
    
    // Check if product exists in database
    $stmt = $db->prepare("SELECT * FROM products WHERE id = ?");
    $stmt->execute(array($product_id));
    $result = $stmt->fetch(PDO::FETCH_ASSOC);
    
    if ($result) {
        // Check if item is already in cart
        if (isset($_SESSION['cart'][$product_id])) {
            $_SESSION['cart'][$product_id]['quantity']++;
        } else {
            // Add new item to cart
            $_SESSION['cart'][$product_id] = array(
                'id' => $product_id,
                'name' => $name,
                'price' => $price,
                'quantity' => 1
            );
        }
    }
}

// Update quantity of an item in cart
function update_cart($product_id, $quantity) {
    if (isset($_SESSION['cart'][$product_id])) {
        $_SESSION['cart'][$product_id]['quantity'] = $quantity;
    }
}

// Remove item from cart
function remove_from_cart($product_id) {
    if (isset($_SESSION['cart'][$product_id])) {
        unset($_SESSION['cart'][$product_id]);
    }
}

// Display cart contents
function display_cart() {
    $total = 0;
    
    if (!empty($_SESSION['cart'])) {
        echo "<table>";
        echo "<tr><th>Product Name</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>";
        
        foreach ($_SESSION['cart'] as $item) {
            $subtotal = $item['price'] * $item['quantity'];
            $total += $subtotal;
            
            echo "<tr>";
            echo "<td>" . $item['name'] . "</td>";
            echo "<td>$" . number_format($item['price'], 2) . "</td>";
            echo "<td><input type='number' name='quantity[" . $item['id'] . "]' value='" . $item['quantity'] . "' min='1'></td>";
            echo "<td>$" . number_format($subtotal, 2) . "</td>";
            echo "<td><a href='?remove=" . $item['id'] . "'>Remove</a></td>";
            echo "</tr>";
        }
        
        echo "</table>";
        echo "<h3>Total: $" . number_format($total, 2) . "</h3>";
    } else {
        echo "Your cart is empty.";
    }
}

// Example usage:
if (isset($_GET['add'])) {
    $product_id = $_GET['add'];
    // Get product details from database
    add_to_cart($product_id);
}

if (isset($_GET['remove'])) {
    $product_id = $_GET['remove'];
    remove_from_cart($product_id);
}

// Update quantities
if ($_SERVER["REQUEST_METHOD"] == "POST" && isset($_POST['update'])) {
    foreach ($_POST['quantity'] as $id => $qty) {
        update_cart($id, $qty);
    }
}

// Display cart
display_cart();
?>


<?php
// Initialize the session
session_start();

// Set up some cookie parameters for security
$cookieParams = session_get_cookie_params();
session_set_cookie_params(
    $cookieParams["lifetime"],
    $cookieParams["path"] ?? '/',
    $cookieParams["domain"] ?? '',
    $cookieParams["secure"] ?? false,
    $cookieParams["httponly"] ?? true,
    $cookieParams["samesite"] ?? 'lax'
);

// Check if the cart exists in the session, if not, create it
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add item to the cart
function addToCart($productId, $productName, $productPrice) {
    global $cart;
    
    // Check if the product is already in the cart
    $foundProduct = false;
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['id'] == $productId) {
            $item['quantity']++;
            $foundProduct = true;
            break;
        }
    }
    
    // If the product was not found, add it to the cart
    if (!$foundProduct) {
        $newItem = array(
            'id' => $productId,
            'name' => $productName,
            'price' => $productPrice,
            'quantity' => 1
        );
        $_SESSION['cart'][] = $newItem;
    }
}

// Update item quantity in the cart
function updateQuantity($productId, $newQuantity) {
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['id'] == $productId) {
            $item['quantity'] = $newQuantity;
            break;
        }
    }
}

// Remove item from the cart
function removeItem($productId) {
    foreach ($_SESSION['cart'] as $key => $item) {
        if ($item['id'] == $productId) {
            unset($_SESSION['cart'][$key]);
            // Re-index the array to avoid gaps in keys
            $_SESSION['cart'] = array_values($_SESSION['cart']);
            break;
        }
    }
}

// Calculate total price of items in the cart
function calculateTotal() {
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += ($item['price'] * $item['quantity']);
    }
    return $total;
}

// Display the contents of the cart
function displayCart() {
    if (empty($_SESSION['cart'])) {
        echo "Your cart is empty!";
    } else {
        echo "<table>";
        echo "<tr><th>Product Name</th><th>Price</th><th>Quantity</th><th>Total</th></tr>";
        foreach ($_SESSION['cart'] as $item) {
            $totalItem = $item['price'] * $item['quantity'];
            echo "<tr>";
            echo "<td>" . $item['name'] . "</td>";
            echo "<td>$" . number_format($item['price'], 2, '.', '') . "</td>";
            echo "<td><input type='number' value='" . $item['quantity'] . "' onChange='updateQuantity(" . $item['id'] . ")'></td>";
            echo "<td>$" . number_format($totalItem, 2, '.', '') . "</td>";
            echo "<td><button onclick='removeItem(" . $item['id'] . ")'>Remove</button></td>";
            echo "</tr>";
        }
        echo "</table>";
    }
}

// Destroy the session when done
function destroySession() {
    $_SESSION = array();
    if (ini_get("session.use_cookies")) {
        $params = session_get_cookie_params();
        setcookie(session_name(), '', time() - 42000,
            $params["path"], $params["domain"],
            $params["secure"], $params["httponly"]);
    }
    session_destroy();
}
?>


<?php
// Initialize the session
session_start();

// Set session variables
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add item to cart
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    if (isset($_POST['add_to_cart'])) {
        $item_name = $_POST['item_name'];
        $price = $_POST['price'];
        $quantity = $_POST['quantity'];

        // Create a new item array
        $new_item = array(
            'name' => $item_name,
            'price' => $price,
            'quantity' => $quantity
        );

        // Add the item to the cart session
        if (!isset($_SESSION['cart'][$item_name])) {
            $_SESSION['cart'][$item_name] = $new_item;
        }
    } elseif (isset($_GET['remove'])) {
        $item_name = $_GET['remove'];
        unset($_SESSION['cart'][$item_name]);
    }
}

// Display the cart contents
echo "<h1>Shopping Cart</h1>";
echo "<table border='1'>";
echo "<tr><th>Item Name</th><th>Price</th><th>Quantity</th><th>Action</th></tr>";

foreach ($_SESSION['cart'] as $item_name => $item) {
    echo "<tr>";
    echo "<td>" . $item['name'] . "</td>";
    echo "<td>$" . number_format($item['price'], 2) . "</td>";
    echo "<td>" . $item['quantity'] . "</td>";
    echo "<td><a href='?remove=" . $item_name . "'>Remove</a></td>";
    echo "</tr>";
}

echo "</table>";

// Add item form
echo "<h2>Add Item to Cart</h2>";
echo "<form method='post'>";
echo "<input type='text' name='item_name' placeholder='Item Name'><br>";
echo "<input type='number' name='price' step='0.01' placeholder='Price'><br>";
echo "<input type='number' name='quantity' placeholder='Quantity'><br>";
echo "<input type='submit' name='add_to_cart' value='Add to Cart'>";
echo "</form>";
?>


<?php
session_start();

// Initialize cart if not exists
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add item to cart
function addToCart($product_id, $name, $price) {
    // Check if product already exists in cart
    if (isset($_SESSION['cart'][$product_id])) {
        // If exists, increment quantity
        $_SESSION['cart'][$product_id]['quantity']++;
    } else {
        // If not exists, add new product to cart
        $_SESSION['cart'][$product_id] = array(
            'product_id' => $product_id,
            'name' => $name,
            'price' => $price,
            'quantity' => 1
        );
    }
}

// Remove item from cart
function removeFromCart($product_id) {
    // Check if product exists in cart
    if (isset($_SESSION['cart'][$product_id])) {
        unset($_SESSION['cart'][$product_id]);
        // Re-index the array to maintain clean keys
        $_SESSION['cart'] = array_values($_SESSION['cart']);
    }
}

// Update quantity of item in cart
function updateQuantity($product_id, $quantity) {
    if (isset($_SESSION['cart'][$product_id])) {
        $_SESSION['cart'][$product_id]['quantity'] = $quantity;
    }
}

// Display cart contents
function displayCart() {
    if (!empty($_SESSION['cart'])) {
        echo "<table>";
        foreach ($_SESSION['cart'] as $item) {
            echo "<tr>";
            echo "<td>" . $item['name'] . "</td>";
            echo "<td>($" . $item['price'] . ")</td>";
            echo "<td>Quantity: " . $item['quantity'] . "</td>";
            echo "<td><a href='remove.php?product_id=" . $item['product_id'] . "'>Remove</a></td>";
            echo "</tr>";
        }
        echo "</table>";
    } else {
        echo "Your cart is empty!";
    }
}

// Example usage:
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    if (isset($_POST['add_to_cart'])) {
        $product_id = $_POST['product_id'];
        $name = $_POST['name'];
        $price = $_POST['price'];
        addToCart($product_id, $name, $price);
    }

    if (isset($_POST['update_quantity'])) {
        $product_id = $_POST['product_id'];
        $quantity = $_POST['quantity'];
        updateQuantity($product_id, $quantity);
    }
}

// Include cart display
displayCart();
?>


<?php
session_start();

// Initialize cart if not set
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add item to cart
if (isset($_GET['add_to_cart'])) {
    $product_id = isset($_GET['product_id']) ? intval($_GET['product_id']) : '';
    $product_name = isset($_GET['product_name']) ? $_GET['product_name'] : '';
    $price = isset($_GET['price']) ? floatval($_GET['price']) : 0;
    $quantity = isset($_GET['quantity']) ? intval($_GET['quantity']) : 1;

    // Check if product is already in cart
    $found = false;
    foreach ($_SESSION['cart'] as $key => $item) {
        if ($item['product_id'] == $product_id) {
            $_SESSION['cart'][$key]['quantity'] += $quantity;
            $found = true;
            break;
        }
    }

    // Add new product to cart
    if (!$found) {
        $_SESSION['cart'][] = array(
            'product_id' => $product_id,
            'product_name' => $product_name,
            'price' => $price,
            'quantity' => $quantity
        );
    }
}

// Remove item from cart
if (isset($_GET['remove_item'])) {
    $product_id = isset($_GET['product_id']) ? intval($_GET['product_id']) : '';
    
    foreach ($_SESSION['cart'] as $key => $item) {
        if ($item['product_id'] == $product_id) {
            unset($_SESSION['cart'][$key]);
            break;
        }
    }
    $_SESSION['cart'] = array_values($_SESSION['cart']); // Re-index the array
}

// Display cart contents
echo "<h2>Your Cart</h2>";
echo "<table border='1'>";
echo "<tr><th>Product Name</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>";

foreach ($_SESSION['cart'] as $item) {
    $total = $item['price'] * $item['quantity'];
    echo "<tr>";
    echo "<td>" . $item['product_name'] . "</td>";
    echo "<td>$" . number_format($item['price'], 2) . "</td>";
    echo "<td>" . $item['quantity'] . "</td>";
    echo "<td>$" . number_format($total, 2) . "</td>";
    echo "<td><a href='cart.php?remove_item=yes&product_id=" . $item['product_id'] . "'>Remove</a></td>";
    echo "</tr>";
}

echo "</table>";

// Logout button
echo "<br />";
echo "<form action='index.php' method='post'>";
echo "<button type='submit'>Logout</button>";
echo "</form>";

// Check if cart is empty
if (empty($_SESSION['cart'])) {
    echo "<p>Your cart is empty.</p>";
}

// Redirect after adding/removing items
if (isset($_GET['add_to_cart']) || isset($_GET['remove_item'])) {
    header('Location: cart.php');
    exit();
}
?>


<a href="cart.php?add_to_cart=yes&product_id=1&product_name='Product Name'&price=99.99">Add to Cart</a>


<?php
session_start();

// Check for existing cart in session or cookie
if (isset($_SESSION['cart'])) {
    $cart = $_SESSION['cart'];
} else if (isset($_COOKIE['cart_id'])) {
    // Load cart from database or wherever stored
    $cart = array();
} else {
    $cart = array();
}

// Function to add item to cart
function addToCart($productId, $name, $price) {
    global $cart;
    $found = false;
    foreach ($cart as &$item) {
        if ($item['product_id'] == $productId) {
            $item['quantity']++;
            $found = true;
            break;
        }
    }
    if (!$found) {
        $cart[] = array(
            'product_id' => $productId,
            'name' => $name,
            'price' => $price,
            'quantity' => 1
        );
    }
    $_SESSION['cart'] = $cart;
}

// Function to update item quantity
function updateQuantity($productId, $newQuantity) {
    global $cart;
    foreach ($cart as &$item) {
        if ($item['product_id'] == $productId) {
            $item['quantity'] = $newQuantity;
            break;
        }
    }
    $_SESSION['cart'] = $cart;
}

// Function to remove item from cart
function removeFromCart($productId) {
    global $cart;
    foreach ($cart as $key => $item) {
        if ($item['product_id'] == $productId) {
            unset($cart[$key]);
            break;
        }
    }
    $_SESSION['cart'] = array_values($cart); // Re-index array
}

// Function to calculate total price
function getCartTotal() {
    global $cart;
    $total = 0;
    foreach ($cart as $item) {
        $total += $item['price'] * $item['quantity'];
    }
    return $total;
}

// Example usage:
addToCart(1, 'Product A', 29.99);
updateQuantity(1, 3);
removeFromCart(1);

echo "Total: $" . number_format(getCartTotal(), 2);
?>


<?php
session_start();

// Initialize cart if not already exists
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function addToCart($item_id, $name, $price) {
    global $conn; // Assuming you have a database connection

    // Check if item is already in the cart
    foreach ($_SESSION['cart'] as $key => $value) {
        if ($value['item_id'] == $item_id) {
            $_SESSION['cart'][$key]['quantity']++;
            return;
        }
    }

    // If not, add new item to cart
    $new_item = array(
        'item_id' => $item_id,
        'name' => $name,
        'price' => $price,
        'quantity' => 1
    );
    $_SESSION['cart'][] = $new_item;
}

// Function to update quantity of an item in cart
function updateQuantity($item_id, $quantity) {
    foreach ($_SESSION['cart'] as $key => $value) {
        if ($value['item_id'] == $item_id) {
            $_SESSION['cart'][$key]['quantity'] = $quantity;
            return;
        }
    }
}

// Function to remove item from cart
function removeFromCart($item_id) {
    foreach ($_SESSION['cart'] as $key => $value) {
        if ($value['item_id'] == $item_id) {
            unset($_SESSION['cart'][$key]);
            // Re-index the array after deletion
            $_SESSION['cart'] = array_values($_SESSION['cart']);
            return;
        }
    }
}

// Function to calculate total price of items in cart
function cartTotal() {
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += ($item['price'] * $item['quantity']);
    }
    return $total;
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <?php
    // Check if action is set and perform accordingly
    if (isset($_POST['action'])) {
        switch ($_POST['action']) {
            case 'add':
                addToCart($_POST['item_id'], $_POST['name'], $_POST['price']);
                break;
            case 'update':
                updateQuantity($_POST['item_id'], $_POST['quantity']);
                break;
            case 'remove':
                removeFromCart($_POST['item_id']);
                break;
        }
    }

    // Display cart contents
    if (!empty($_SESSION['cart'])) {
        echo "<h2>Shopping Cart</h2>";
        echo "<table border='1'>";
        echo "<tr><th>Name</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>";
        
        foreach ($_SESSION['cart'] as $item) {
            echo "<tr>";
            echo "<td>" . $item['name'] . "</td>";
            echo "<td>₹" . number_format($item['price'], 2, '.', '') . "</td>";
            echo "<td><form method='post'><input type='hidden' name='action' value='update'>";
            echo "<input type='hidden' name='item_id' value='" . $item['item_id'] . "'>";
            echo "<input type='number' name='quantity' min='1' value='" . $item['quantity'] . "' style='width:50px'>";
            echo "<button type='submit'>Update</button></form></td>";
            echo "<td>₹" . number_format(($item['price'] * $item['quantity']), 2, '.', '') . "</td>";
            echo "<td><form method='post'><input type='hidden' name='action' value='remove'>";
            echo "<input type='hidden' name='item_id' value='" . $item['item_id'] . "'>";
            echo "<button type='submit'>Remove</button></form></td>";
            echo "</tr>";
        }
        
        echo "</table>";
        echo "<p><strong>Total: ₹" . number_format(cartTotal(), 2, '.', '') . "</strong></p>";
    } else {
        echo "<h2>Your cart is empty!</h2>";
    }
    ?>

    <!-- Add item form -->
    <h2>Add Item to Cart</h2>
    <form method="post">
        <input type="hidden" name="action" value="add">
        <label>Item ID:</label><br>
        <input type="text" name="item_id"><br><br>
        
        <label>Name:</label><br>
        <input type="text" name="name"><br><br>
        
        <label>Price:</label><br>
        <input type="number" step="0.01" name="price"><br><br>
        
        <button type="submit">Add to Cart</button>
    </form>
</body>
</html>


<?php
// Start the session
session_start();

// Initialize cart if not already set
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add item to cart
if (isset($_POST['add_to_cart'])) {
    $product_id = isset($_POST['product_id']) ? intval($_POST['product_id']) : 0;
    $name = isset($_POST['name']) ? $_POST['name'] : '';
    $price = isset($_POST['price']) ? floatval($_POST['price']) : 0.0;
    $quantity = isset($_POST['quantity']) ? intval($_POST['quantity']) : 1;

    // Check if product already exists in cart
    $found = false;
    foreach ($_SESSION['cart'] as $key => $item) {
        if ($item['product_id'] == $product_id) {
            $_SESSION['cart'][$key]['quantity'] += $quantity;
            $found = true;
            break;
        }
    }

    // If product not found, add it to cart
    if (!$found) {
        $_SESSION['cart'][] = array(
            'product_id' => $product_id,
            'name' => $name,
            'price' => $price,
            'quantity' => $quantity
        );
    }

    echo "<script>alert('Item added to cart');</script>";
}

// Display cart contents
echo "<h2>Shopping Cart</h2>";
echo "<table border='1'>";
echo "<tr><th>Product Name</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>";

$total = 0;

foreach ($_SESSION['cart'] as $key => $item) {
    $total_price = $item['price'] * $item['quantity'];
    $total += $total_price;
    
    echo "<tr>";
    echo "<td>" . $item['name'] . "</td>";
    echo "<td>₹" . number_format($item['price'], 2) . "</td>";
    echo "<td>" . $item['quantity'] . "</td>";
    echo "<td>₹" . number_format($total_price, 2) . "</td>";
    echo "<td><a href='remove_from_cart.php?id=" . $item['product_id'] . "'>Remove</a></td>";
    echo "</tr>";
}

echo "<tr><td colspan='4'><strong>Total:</strong></td><td>₹" . number_format($total, 2) . "</td></tr>";
echo "</table>";

// Add some styling
echo <<< CSS
<style>
    table {
        width: 100%;
        border-collapse: collapse;
        margin: 20px 0;
    }
    th, td {
        padding: 12px;
        text-align: left;
        border-bottom: 1px solid #ddd;
    }
    th {
        background-color: #f2f2f2;
    }
    tr:hover {
        background-color: #f5f5f5;
    }
    a {
        color: #0066cc;
        text-decoration: none;
    }
    a:hover {
        text-decoration: underline;
    }
</style>
CSS;

// Optional: Add link to continue shopping
echo "<p><a href='products.php'>Continue Shopping</a></p>";
?>



<?php
session_start();
if (isset($_GET['id'])) {
    foreach ($_SESSION['cart'] as $key => $item) {
        if ($item['product_id'] == $_GET['id']) {
            unset($_SESSION['cart'][$key]);
            break;
        }
    }
}
header("Location: cart.php");
exit();
?>


<?php
// Start the session
session_start();

// Initialize cart if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add item to cart
if (isset($_POST['add_to_cart'])) {
    $product_id = $_POST['product_id'];
    $product_name = $_POST['product_name'];
    $product_price = $_POST['product_price'];
    $quantity = $_POST['quantity'];

    // Check if product already exists in the cart
    $found = false;
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['id'] == $product_id) {
            $item['quantity'] += $quantity;
            $found = true;
            break;
        }
    }

    // If not found, add new product to cart
    if (!$found) {
        $_SESSION['cart'][] = array(
            'id' => $product_id,
            'name' => $product_name,
            'price' => $product_price,
            'quantity' => $quantity
        );
    }

    // Show success message
    echo "<script>alert('Product added to cart successfully!');</script>";
}

// Display cart contents
echo "<h2>Shopping Cart</h2>";
echo "<table border='1'>";
echo "<tr><th>Product Name</th><th>Price</th><th>Quantity</th><th>Total</th></tr>";

$total = 0;
foreach ($_SESSION['cart'] as $item) {
    echo "<tr>";
    echo "<td>" . $item['name'] . "</td>";
    echo "<td>$" . number_format($item['price'], 2) . "</td>";
    echo "<td>" . $item['quantity'] . "</td>";
    echo "<td>$" . number_format($item['price'] * $item['quantity'], 2) . "</td>";
    echo "</tr>";
    $total += $item['price'] * $item['quantity'];
}

echo "<tr><th colspan='3'>Total:</th><th>$" . number_format($total, 2) . "</th></tr>";
echo "</table>";

// Example form to add items to cart
echo "<h2>Add Items to Cart</h2>";
echo "<form method='post' action=''>";
echo "<input type='hidden' name='product_id' value='1'>";
echo "<input type='hidden' name='product_name' value='Sample Product'>";
echo "<input type='hidden' name='product_price' value='9.99'>";
echo "Quantity: <input type='number' name='quantity' min='1' value='1'><br>";
echo "<input type='submit' name='add_to_cart' value='Add to Cart'>";
echo "</form>";
?>


<?php
session_start();
header("Cache-Control: no-cache, must-revalidate");
header("Pragma: no-cache");

// Connect to database (replace with your credentials)
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "myDB";

$conn = new mysqli($servername, $username, $password, $dbname);
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Add item to cart
if (isset($_POST['item_id'])) {
    $item_id = $_POST['item_id'];
    
    // Retrieve product details from database
    $sql = "SELECT id, name, price FROM products WHERE id=$item_id";
    $result = $conn->query($sql);
    
    if ($result->num_rows > 0) {
        $product = $result->fetch_assoc();
        
        // Initialize cart if not exists
        if (!isset($_SESSION['cart'])) {
            $_SESSION['cart'] = array();
        }
        
        $found = false;
        foreach ($_SESSION['cart'] as &$item) {
            if ($item['id'] == $product['id']) {
                $item['quantity']++;
                $found = true;
                break;
            }
        }
        
        if (!$found) {
            $_SESSION['cart'][] = array(
                'id' => $product['id'],
                'name' => $product['name'],
                'price' => $product['price'],
                'quantity' => 1
            );
        }
    }
    
    header("Location: cart.php");
    exit();
}

// Remove item from cart
if (isset($_GET['action']) && $_GET['action'] == "remove" && isset($_GET['item_id'])) {
    $item_id = $_GET['item_id'];
    if (isset($_SESSION['cart'])) {
        foreach ($_SESSION['cart'] as $key => &$item) {
            if ($item['id'] == $item_id) {
                unset($_SESSION['cart'][$key]);
            }
        }
        // Reindex the array
        $_SESSION['cart'] = array_values($_SESSION['cart']);
    }
    
    header("Location: cart.php");
    exit();
}

// Update quantity
if (isset($_GET['action']) && $_GET['action'] == "update" && isset($_GET['item_id']) && isset($_GET['quantity'])) {
    $item_id = $_GET['item_id'];
    $new_quantity = intval($_GET['quantity']);
    
    if ($new_quantity < 1) {
        // Remove item instead
        foreach ($_SESSION['cart'] as $key => &$item) {
            if ($item['id'] == $item_id) {
                unset($_SESSION['cart'][$key]);
            }
        }
        $_SESSION['cart'] = array_values($_SESSION['cart']);
    } else {
        foreach ($_SESSION['cart'] as &$item) {
            if ($item['id'] == $item_id) {
                $item['quantity'] = $new_quantity;
            }
        }
    }
    
    header("Location: cart.php");
    exit();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <?php if (!empty($_SESSION['cart'])): ?>
        <h2>Your Cart:</h2>
        <table border="1">
            <tr>
                <th>Product Name</th>
                <th>Quantity</th>
                <th>Price Each</th>
                <th>Total Price</th>
                <th>Action</th>
            </tr>
            <?php foreach ($_SESSION['cart'] as $item): ?>
                <tr>
                    <td><?php echo $item['name']; ?></td>
                    <td>
                        <a href="?action=update&item_id=<?php echo $item['id']; ?>&quantity=<?php echo ($item['quantity'] - 1); ?>">-</a>
                        <?php echo $item['quantity']; ?>
                        <a href="?action=update&item_id=<?php echo $item['id']; ?>&quantity=<?php echo ($item['quantity'] + 1); ?>">+</a>
                    </td>
                    <td><?php echo "$" . number_format($item['price'], 2); ?></td>
                    <td><?php echo "$" . number_format($item['price'] * $item['quantity'], 2); ?></td>
                    <td><a href="?action=remove&item_id=<?php echo $item['id']; ?>">Remove</a></td>
                </tr>
            <?php endforeach; ?>
        </table>
        
        <?php
        $cart_total = array_reduce($_SESSION['cart'], function($carry, $item) {
            return $carry + ($item['price'] * $item['quantity']);
        }, 0);
        echo "<h3>Total: $" . number_format($cart_total, 2) . "</h3>";
        ?>
    <?php else: ?>
        <p>Your cart is empty.</p>
    <?php endif; ?>

    <!-- Add new item form -->
    <form action="cart.php" method="post">
        <input type="text" name="item_id" placeholder="Enter Item ID">
        <input type="submit" value="Add to Cart">
    </form>

    <a href="?action=checkout">Checkout</a>
</body>
</html>


<?php
// Start the session
session_start();

// Check if the cart exists in the session, initialize it if not
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function add_to_cart($product_id) {
    // Check if product is already in cart
    if (isset($_SESSION['cart'][$product_id])) {
        // Increment quantity
        $_SESSION['cart'][$product_id]['quantity']++;
    } else {
        // Add new product
        $item = array(
            'id' => $product_id,
            'name' => get_product_name($product_id),
            'price' => get_product_price($product_id),
            'quantity' => 1
        );
        $_SESSION['cart'][$product_id] = $item;
    }
}

// Function to remove item from cart
function remove_from_cart($product_id) {
    if (isset($_SESSION['cart'][$product_id])) {
        unset($_SESSION['cart'][$product_id]);
    }
}

// Function to update quantity of an item in cart
function update_quantity($product_id, $quantity) {
    if (isset($_SESSION['cart'][$product_id]) && $quantity > 0) {
        $_SESSION['cart'][$product_id]['quantity'] = $quantity;
    }
}

// Get product details from your database or array
function get_product_name($product_id) {
    // Replace with actual data
    $products = array(
        '1' => 'Product A',
        '2' => 'Product B',
        '3' => 'Product C'
    );
    return $products[$product_id];
}

function get_product_price($product_id) {
    // Replace with actual data
    $prices = array(
        '1' => 10.00,
        '2' => 20.00,
        '3' => 30.00
    );
    return $prices[$product_id];
}

// Example usage in your application

// If adding an item to cart
if (isset($_GET['action']) && $_GET['action'] == 'add') {
    add_to_cart($_GET['id']);
}

// If removing an item from cart
if (isset($_GET['action']) && $_GET['action'] == 'remove') {
    remove_from_cart($_GET['id']);
}

// If updating quantity
if (isset($_POST['update'])) {
    foreach ($_POST['quantity'] as $product_id => $qty) {
        update_quantity($product_id, $qty);
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <?php if (!empty($_SESSION['cart'])) { ?>
        <h1>Your Shopping Cart</h1>
        <form method="post" action="">
            <table border="1">
                <tr>
                    <th>Product Name</th>
                    <th>Price</th>
                    <th>Quantity</th>
                    <th>Total</th>
                    <th>Action</th>
                </tr>
                <?php foreach ($_SESSION['cart'] as $item) { ?>
                    <tr>
                        <td><?php echo $item['name']; ?></td>
                        <td>$<?php echo number_format($item['price'], 2); ?></td>
                        <td><input type="number" name="quantity[<?php echo $item['id']; ?>]" value="<?php echo $item['quantity']; ?>"></td>
                        <td>$<?php echo number_format($item['price'] * $item['quantity'], 2); ?></td>
                        <td><a href="?action=remove&id=<?php echo $item['id']; ?>">Remove</a></td>
                    </tr>
                <?php } ?>
            </table>
            <input type="submit" name="update" value="Update Cart">
        </form>
    <?php } else { ?>
        <p>Your cart is empty.</p>
    <?php } ?>

    <!-- Add items to cart -->
    <h1>Products</h1>
    <ul>
        <li><a href="?action=add&id=1">Add Product A to Cart</a></li>
        <li><a href="?action=add&id=2">Add Product B to Cart</a></li>
        <li><a href="?action=add&id=3">Add Product C to Cart</a></li>
    </ul>
</body>
</html>

<?php
// Destroy the session when done (optional)
session_unset();
// session_destroy();
?>


<?php
// Start the session
session_start();

// Initialize the cart if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function addToCart($productId, $productName, $productPrice) {
    global $conn; // Assuming you have a database connection

    // Check if the product exists in the database
    $stmt = $conn->prepare("SELECT * FROM products WHERE id = ?");
    $stmt->bind_param("i", $productId);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        // Check if the product is already in the cart
        $found = false;
        foreach ($_SESSION['cart'] as &$item) {
            if ($item['product_id'] == $productId) {
                // Update quantity and price
                $item['quantity']++;
                $item['price'] = $productPrice * $item['quantity'];
                $found = true;
                break;
            }
        }

        if (!$found) {
            // Add new product to cart
            $_SESSION['cart'][] = array(
                'product_id' => $productId,
                'product_name' => $productName,
                'price' => $productPrice,
                'quantity' => 1
            );
        }
    }
}

// Function to remove item from cart
function removeFromCart($productId) {
    foreach ($_SESSION['cart'] as $key => &$item) {
        if ($item['product_id'] == $productId) {
            unset($_SESSION['cart'][$key]);
            break;
        }
    }
    // Re-index the array keys
    $_SESSION['cart'] = array_values($_SESSION['cart']);
}

// Display cart contents
echo "<h2>Shopping Cart</h2>";
echo "<table border='1'>";
echo "<tr><th>Product Name</th><th>Price</th><th>Quantity</th><th>Action</th></tr>";

foreach ($_SESSION['cart'] as $item) {
    echo "<tr>";
    echo "<td>" . $item['product_name'] . "</td>";
    echo "<td>" . $item['price'] . "</td>";
    echo "<td>" . $item['quantity'] . "</td>";
    echo "<td><a href='remove_from_cart.php?id=" . $item['product_id'] . "'>Remove</a></td>";
    echo "</tr>";
}

echo "</table>";

// Calculate total price
$total = 0;
foreach ($_SESSION['cart'] as $item) {
    $total += $item['price'];
}
echo "<h3>Total Price: $" . number_format($total, 2) . "</h3>";

// Add a link to add more items
echo "<a href='add_item.php'>Add Item</a>";
echo "<br />";
echo "<a href='checkout.php'>Checkout</a>";

?>


<?php
// Start the session
session_start();

// Initialize cart if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function addToCart($productId, $price) {
    global $mysqli;
    
    // Check if product is already in cart
    if (isset($_SESSION['cart'][$productId])) {
        // Increment quantity
        $_SESSION['cart'][$productId]['quantity']++;
    } else {
        // Add new item to cart
        $_SESSION['cart'][$productId] = array(
            'id' => $productId,
            'price' => $price,
            'quantity' => 1
        );
    }
}

// Function to calculate total price
function getCartTotal() {
    $total = 0;
    
    foreach ($_SESSION['cart'] as $item) {
        $total += ($item['price'] * $item['quantity']);
    }
    
    return number_format($total, 2); // Format to 2 decimal places
}

// Function to display cart contents
function displayCart() {
    if (empty($_SESSION['cart'])) {
        echo "<p>Your cart is empty.</p>";
        return;
    }

    echo "<table>";
    echo "<tr><th>Product</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>";

    foreach ($_SESSION['cart'] as $item) {
        // Query product details from database
        $stmt = $mysqli->prepare("SELECT name, price FROM products WHERE id = ?");
        $stmt->bind_param("i", $item['id']);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($product = $result->fetch_assoc()) {
            $totalPrice = $product['price'] * $item['quantity'];
            
            echo "<tr>";
            echo "<td>" . $product['name'] . "</td>";
            echo "<td>$" . number_format($product['price'], 2) . "</td>";
            echo "<td><input type='number' min='1' value='" . $item['quantity'] . "'></td>";
            echo "<td>$" . number_format($totalPrice, 2) . "</td>";
            echo "<td><a href='remove_from_cart.php?id=" . $item['id'] . "'>Remove</a></td>";
            echo "</tr>";
        }
    }

    echo "</table>";
    
    // Display total price
    echo "<p>Total: $" . getCartTotal() . "</p>";
}

// Example usage:
addToCart(1, 29.99); // Add product with ID 1 and price $29.99

displayCart(); // Show cart contents

?>

<!-- Include a logout button to clear the session -->
<a href="logout.php">Logout</a>

<?php
// In your logout.php file:
session_start();
unset($_SESSION['cart']);
session_destroy();
header("Location: index.php");
exit();
?>


<?php
// Start the session
session_start();

// Initialize cart if not set
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function add_to_cart($product_id, $product_name, $price, $quantity) {
    global $mysqli; // Assuming you have a database connection
    
    // Check if product exists in the database
    $stmt = $mysqli->prepare("SELECT * FROM products WHERE id=?");
    $stmt->bind_param("i", $product_id);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows > 0) {
        // Check if item already exists in cart
        if (isset($_SESSION['cart'][$product_id])) {
            $_SESSION['cart'][$product_id]['quantity'] += $quantity;
        } else {
            // Add new item to cart
            $_SESSION['cart'][$product_id] = array(
                'id' => $product_id,
                'name' => $product_name,
                'price' => $price,
                'quantity' => $quantity
            );
        }
        
        // Save session data
        session_write_close();
    } else {
        return false; // Product not found in database
    }
}

// Function to remove item from cart
function remove_from_cart($product_id) {
    if (isset($_SESSION['cart'][$product_id])) {
        unset($_SESSION['cart'][$product_id]);
        session_write_close();
    }
}

// Function to update quantity of an item
function update_quantity($product_id, $quantity) {
    if (isset($_SESSION['cart'][$product_id]) && is_numeric($quantity)) {
        $_SESSION['cart'][$product_id]['quantity'] = $quantity;
        session_write_close();
    }
}

// Function to display cart contents
function display_cart() {
    if (!empty($_SESSION['cart'])) {
        echo "<table>";
        echo "<tr><th>Item</th><th>Quantity</th><th>Price</th><th>Total</th></tr>";
        
        $total = 0;
        foreach ($_SESSION['cart'] as $item) {
            $subtotal = $item['price'] * $item['quantity'];
            $total += $subtotal;
            
            echo "<tr>";
            echo "<td>" . htmlspecialchars($item['name']) . "</td>";
            echo "<td><input type='number' value='" . $item['quantity'] . "' onchange='updateQuantity(" . $item['id'] . ", this.value)'></td>";
            echo "<td>($" . number_format($item['price'], 2) . ")</td>";
            echo "<td>($" . number_format($subtotal, 2) . ")</td>";
            echo "<td><button onclick='removeFromCart(" . $item['id'] . ")'>Remove</button></td>";
            echo "</tr>";
        }
        
        echo "<tr><td colspan='3'><strong>Total:</strong></td><td>($" . number_format($total, 2) . ")</td></tr>";
        echo "</table>";
    } else {
        echo "Your cart is empty!";
    }
}

// Function to clear the cart
function clear_cart() {
    $_SESSION['cart'] = array();
    session_write_close();
}
?>


<?php
session_start();

// Initialize cart if not exists
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function add_cart_item($product_id, $product_name, $price) {
    global $quantity;
    
    // Check if product already in cart
    $found = false;
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['product_id'] == $product_id) {
            $found = true;
            $item['quantity'] += 1; // Increment quantity
        }
    }

    // If not found, add new item to cart
    if (!$found) {
        $_SESSION['cart'][] = array(
            'product_id' => $product_id,
            'product_name' => $product_name,
            'price' => $price,
            'quantity' => 1
        );
    }
}

// Function to update quantity of item in cart
function update_cart_item($product_id, $new_quantity) {
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['product_id'] == $product_id) {
            $item['quantity'] = $new_quantity;
        }
    }
}

// Function to remove item from cart
function remove_cart_item($product_id) {
    $index = 0;
    foreach ($_SESSION['cart'] as $key => $item) {
        if ($item['product_id'] == $product_id) {
            unset($_SESSION['cart'][$key]);
            // Re-index the array
            $_SESSION['cart'] = array_values($_SESSION['cart']);
        }
    }
}

// Function to calculate total price of items in cart
function calculate_total_price() {
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += ($item['price'] * $item['quantity']);
    }
    return $total;
}

?>


<?php
session_start();

// Add item to cart
add_cart_item(1, 'Product 1', 29.99);

// Update quantity of item in cart
update_cart_item(1, 3);

// Remove item from cart
remove_cart_item(1);

// Get total price of items in cart
echo "Total Price: $" . calculate_total_price();
?>


session_start();


<?php

class Cart {
    public function __construct() {
        // Initialize the cart if it doesn't exist
        $this->initializeCart();
    }

    private function initializeCart() {
        if (!isset($_SESSION['cart'])) {
            $_SESSION['cart'] = array(
                'items' => array(),
                'total_price' => 0.00,
                'item_count' => 0
            );
        }
    }

    public function addItem($product_id, $price) {
        if (isset($_SESSION['cart']['items'][$product_id])) {
            // Item already exists, increment quantity
            $_SESSION['cart']['items'][$product_id]['quantity']++;
        } else {
            // New item, add to cart
            $_SESSION['cart']['items'][$product_id] = array(
                'id' => $product_id,
                'price' => $price,
                'quantity' => 1
            );
        }
        
        // Update totals
        $this->updateTotals();
    }

    public function removeItem($product_id) {
        if (isset($_SESSION['cart']['items'][$product_id])) {
            unset($_SESSION['cart']['items'][$product_id]);
            $this->updateTotals();
        }
    }

    public function updateQuantity($product_id, $quantity) {
        if ($quantity <= 0) {
            $this->removeItem($product_id);
            return;
        }

        $_SESSION['cart']['items'][$product_id]['quantity'] = $quantity;
        $this->updateTotals();
    }

    private function updateTotals() {
        $total_price = 0.00;
        $item_count = 0;

        foreach ($_SESSION['cart']['items'] as $item) {
            $total_price += ($item['price'] * $item['quantity']);
            $item_count += $item['quantity'];
        }

        $_SESSION['cart']['total_price'] = number_format($total_price, 2);
        $_SESSION['cart']['item_count'] = $item_count;
    }

    public function getCart() {
        return $_SESSION['cart'];
    }
}
?>


<?php
include 'Cart.php';

$cart = new Cart();

// Example: When adding an item from a form
if (isset($_POST['add_to_cart'])) {
    $product_id = $_POST['product_id'];
    $price = 19.99; // Replace with your product's price

    $cart->addItem($product_id, $price);
}
?>


<?php
session_start();
include 'Cart.php';

$cart = new Cart();
$cartContents = $cart->getCart();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <?php if (empty($cartContents['items'])): ?>
        <h2>Your cart is empty.</h2>
    <?php else: ?>
        <h2>Your Shopping Cart</h2>
        <table border="1">
            <tr>
                <th>Product ID</th>
                <th>Quantity</th>
                <th>Price</th>
                <th>Total</th>
                <th>Action</th>
            </tr>
            <?php foreach ($cartContents['items'] as $item): ?>
                <tr>
                    <td><?php echo $item['id']; ?></td>
                    <td>
                        <form action="update_cart.php" method="post">
                            <input type="hidden" name="product_id" value="<?php echo $item['id']; ?>">
                            <input type="number" name="quantity" min="1" value="<?php echo $item['quantity']; ?>">
                    </td>
                    <td><?php echo $item['price']; ?></td>
                    <td><?php echo number_format($item['price'] * $item['quantity'], 2); ?></td>
                    <td>
                        <button type="submit">Update</button>
                        </form>
                        <form action="update_cart.php" method="post">
                            <input type="hidden" name="product_id" value="<?php echo $item['id']; ?>">
                            <input type="hidden" name="action" value="remove">
                            <button type="submit">Remove</button>
                        </form>
                    </td>
                </tr>
            <?php endforeach; ?>
        </table>
        <h3>Total: <?php echo $cartContents['total_price']; ?></h3>
        <h3>Item Count: <?php echo $cartContents['item_count']; ?></h3>
    <?php endif; ?>

    <a href="index.php">Continue Shopping</a>
</body>
</html>


<?php
session_start();
include 'Cart.php';

$cart = new Cart();

if (isset($_POST['action']) && $_POST['action'] == 'remove') {
    $cart->removeItem($_POST['product_id']);
} else {
    $cart->updateQuantity($_POST['product_id'], $_POST['quantity']);
}

header("Location: view_cart.php");
exit();
?>


<?php
session_start();
unset($_SESSION['cart']);
session_destroy();
?>


<?php
// Start the session
session_start();

// Check if cart is set in the session, initialize it if not
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add item to cart
if (isset($_GET['add_to_cart'])) {
    $productId = $_GET['product_id'];
    $productName = $_GET['product_name'];

    // Check if the product is already in the cart
    if (array_key_exists($productId, $_SESSION['cart'])) {
        // Increase quantity
        $_SESSION['cart'][$productId]['quantity']++;
    } else {
        // Add new product to cart
        $_SESSION['cart'][$productId] = array(
            'name' => $productName,
            'quantity' => 1
        );
    }
}

// Remove item from cart
if (isset($_GET['remove_from_cart'])) {
    $productId = $_GET['product_id'];
    
    // Check if the product exists in the cart before removing
    if (array_key_exists($productId, $_SESSION['cart'])) {
        unset($_SESSION['cart'][$productId]);
        
        // Re-index the array to maintain clean keys
        $_SESSION['cart'] = array_values($_SESSION['cart']);
    }
}

// Display cart contents
echo "<h2>Shopping Cart</h2>";
if (empty($_SESSION['cart'])) {
    echo "Your cart is empty.";
} else {
    echo "<ul>";
    foreach ($_SESSION['cart'] as $item) {
        echo "<li>" . $item['name'] . " (Quantity: " . $item['quantity'] . ") ";
        // Add a link to remove the item
        echo "<a href='?remove_from_cart&product_id=" . $item['id'] . "'>Remove</a>";
    }
    echo "</ul>";
}

// Example product items
echo "<h2>Products</h2>";
$product1 = array(
    'id' => 1,
    'name' => 'Laptop'
);
$product2 = array(
    'id' => 2,
    'name' => 'Smartphone'
);

// Display products with add to cart buttons
echo "<div class='product'>";
echo "<h3>" . $product1['name'] . "</h3>";
echo "<a href='?add_to_cart&product_id=" . $product1['id'] . "&product_name=" . urlencode($product1['name']) . "'>Add to Cart</a>";
echo "</div>";

echo "<div class='product'>";
echo "<h3>" . $product2['name'] . "</h3>";
echo "<a href='?add_to_cart&product_id=" . $product2['id'] . "&product_name=" . urlencode($product2['name']) . "'>Add to Cart</a>";
echo "</div>";

// Optional: Add some styling
?>
<style>
    body {
        font-family: Arial, sans-serif;
        margin: 20px;
        padding: 20px;
    }
    
    h2 {
        color: #333;
        margin-bottom: 20px;
    }
    
    .product {
        border: 1px solid #ddd;
        padding: 15px;
        margin-bottom: 15px;
    }
    
    a {
        color: #007bff;
        text-decoration: none;
    }
    
    a:hover {
        text-decoration: underline;
    }
</style>


<?php
session_start();

// Initialize cart if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add item to cart
$item_id = 1;
$item_name = "Product A";
$item_price = 100;

if (!isset($_SESSION['cart'][$item_id])) {
    $_SESSION['cart'][$item_id] = array(
        'id' => $item_id,
        'name' => $item_name,
        'price' => $item_price,
        'quantity' => 1
    );
} else {
    $_SESSION['cart'][$item_id]['quantity']++;
}

// Display cart items
echo "<h2>Shopping Cart</h2>";
echo "<table>";
foreach ($_SESSION['cart'] as $item) {
    echo "<tr>";
    echo "<td>" . $item['name'] . "</td>";
    echo "<td>" . $item['price'] . "</td>";
    echo "<td>" . $item['quantity'] . "</td>";
    echo "<td><form method='post' action='remove_item.php'>";
    echo "<input type='hidden' name='item_id' value='" . $item['id'] . "'>";
    echo "<input type='submit' value='Remove'>";
    echo "</form></td>";
    echo "</tr>";
}
echo "</table>";

// Remove item from cart
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    if (isset($_POST['item_id'])) {
        $remove_item_id = $_POST['item_id'];
        foreach ($_SESSION['cart'] as $key => $item) {
            if ($item['id'] == $remove_item_id) {
                unset($_SESSION['cart'][$key]);
            }
        }
        // Re-index the array
        $_SESSION['cart'] = array_values($_SESSION['cart']);
    }
}
?>


<?php
// Start the session
session_start();

// Check if the cart exists in the session, if not initialize it
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function addToCart($productId, $productName, $productPrice) {
    global $productId, $productName, $productPrice;
    
    // Check if product is already in the cart
    $found = false;
    foreach ($_SESSION['cart'] as $key => $item) {
        if ($item['id'] == $productId) {
            $_SESSION['cart'][$key]['quantity']++;
            $found = true;
            break;
        }
    }
    
    // If product is not in the cart, add it
    if (!$found) {
        $_SESSION['cart'][] = array(
            'id' => $productId,
            'name' => $productName,
            'price' => $productPrice,
            'quantity' => 1
        );
    }
}

// Function to remove item from cart
function removeFromCart($index) {
    if (isset($_SESSION['cart'][$index])) {
        unset($_SESSION['cart'][$index]);
        // Re-index the array keys after removal
        $_SESSION['cart'] = array_values($_SESSION['cart']);
    }
}

// Function to update quantity of item in cart
function updateQuantity($index, $newQuantity) {
    if (isset($_SESSION['cart'][$index])) {
        $_SESSION['cart'][$index]['quantity'] = $newQuantity;
    }
}

// Example usage:
// Add an item to the cart
addToCart(1, 'Product 1', 99.99);

// Remove an item from the cart by index
removeFromCart(0); // Removes the first item

// Update quantity of an item in the cart
updateQuantity(0, 2); // Updates quantity of the first item to 2

// Calculate total price of items in the cart
$total = 0;
foreach ($_SESSION['cart'] as $item) {
    $total += $item['price'] * $item['quantity'];
}

// Display cart contents
echo "<h2>Shopping Cart</h2>";
if (empty($_SESSION['cart'])) {
    echo "Your cart is empty.";
} else {
    foreach ($_SESSION['cart'] as $key => $item) {
        echo "<div>";
        echo "Product ID: {$item['id']}<br>";
        echo "Product Name: {$item['name']}<br>";
        echo "Price: \${$item['price']}<br>";
        echo "Quantity: {$item['quantity']}<br>";
        echo "<a href='?remove=$key'>Remove</a><br>";
        echo "</div>";
    }
}

// Handle remove action
if (isset($_GET['remove'])) {
    removeFromCart($_GET['remove']);
}
?>


<?php
// Start the session
session_start();

// Check if the cart exists in the session, initialize it if not
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add item to cart
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get item details from form submission
    $item_id = isset($_POST['item_id']) ? intval($_POST['item_id']) : 0;
    $item_name = isset($_POST['item_name']) ? $_POST['item_name'] : '';
    $item_price = isset($_POST['item_price']) ? floatval($_POST['item_price']) : 0.0;
    
    // Check if the item is already in the cart
    $found = false;
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['id'] == $item_id) {
            $item['quantity']++;
            $found = true;
            break;
        }
    }
    
    // If not found, add it to the cart
    if (!$found) {
        $_SESSION['cart'][] = array(
            'id' => $item_id,
            'name' => $item_name,
            'price' => $item_price,
            'quantity' => 1
        );
    }
}

// Calculate total price of items in the cart
$total = 0;
foreach ($_SESSION['cart'] as $item) {
    $total += ($item['price'] * $item['quantity']);
}
$total_with_tax = $total + ($total * 0.07); // Adding 7% tax

// Display cart contents
echo "<h2>Shopping Cart</h2>";
if (empty($_SESSION['cart'])) {
    echo "Your cart is empty.";
} else {
    echo "<table>";
    echo "<tr><th>Item Name</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>";
    foreach ($_SESSION['cart'] as $item) {
        $subtotal = $item['price'] * $item['quantity'];
        echo "<tr>";
        echo "<td>{$item['name']}</td>";
        echo "<td>$".number_format($item['price'], 2)."</td>";
        echo "<td><input type='number' min='1' value='{$item['quantity']}'></td>";
        echo "<td>$".number_format($subtotal, 2)."</td>";
        echo "<td><a href='remove_item.php?id={$item['id']}'>Remove</a></td>";
        echo "</tr>";
    }
    echo "</table>";
    
    // Display total amount
    echo "<h3>Subtotal: $".number_format($total, 2)."</h3>";
    echo "<h3>Tax (7%): $".number_format($total * 0.07, 2)."</h3>";
    echo "<h3>Total: $".number_format($total_with_tax, 2)."</h3>";
}

// Example form to add items to the cart
echo <<<_END
<form action="cart.php" method="post">
    <input type="hidden" name="item_id" value="1">
    <input type="hidden" name="item_name" value="Example Item">
    <input type="hidden" name="item_price" value="29.99">
    <button type="submit">Add to Cart</button>
</form>

<a href="checkout.php">Checkout</a> |
<a href="continue_shopping.php">Continue Shopping</a>
_END;
?>


<?php
// Start the session
session_start();

// Set session configuration options for security
ini_set('session.cookie_httponly', 1);
ini_set('session.cookie_secure', 1);
ini_set('session.use_strict_mode', 1);
ini_set('session.use_trans_sid', 0);

// Check if cart is already in the session, initialize if not
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add item to cart
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get product details from form or query parameters
    $productId = trim($_POST['product_id']);
    $productName = trim($_POST['product_name']);
    $price = (float)trim($_POST['price']);

    // Validate input data
    if (!empty($productId) && !empty($productName) && $price > 0) {
        $itemExists = false;
        
        foreach ($_SESSION['cart'] as &$item) {
            if ($item['product_id'] == $productId) {
                // Update quantity if item already exists
                $item['quantity'] += 1;
                $itemExists = true;
                break;
            }
        }

        if (!$itemExists) {
            // Add new item to cart
            $_SESSION['cart'][] = array(
                'product_id' => $productId,
                'name' => $productName,
                'price' => $price,
                'quantity' => 1
            );
        }

        // Regenerate session ID to prevent hijacking
        session_regenerate(true);
    }
}

// Display cart items
echo "<h2>Your Cart</h2>";
echo "<table border='1'>";
echo "<tr><th>Product Name</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>";

foreach ($_SESSION['cart'] as $item) {
    echo "<tr>";
    echo "<td>" . $item['name'] . "</td>";
    echo "<td>" . $item['price'] . "</td>";
    echo "<td>" . $item['quantity'] . "</td>";
    echo "<td>" . ($item['price'] * $item['quantity']) . "</td>";
    echo "<td><form method='post'><input type='hidden' name='product_id' value='" . $item['product_id'] . "'><button type='submit'>Remove</button></form></td>";
    echo "</tr>";
}

echo "</table>";

// Form to add items to cart
echo <<<_END
<form method="post">
    Product ID: <input type="text" name="product_id"><br>
    Product Name: <input type="text" name="product_name"><br>
    Price: <input type="number" step="0.01" name="price"><br>
    <button type="submit">Add to Cart</button>
</form>

<a href="?clear_cart=1">Clear Cart</a>
<br>
<a href="/">Continue Shopping</a>
_END;

// Clear cart functionality
if (isset($_GET['clear_cart']) && $_GET['clear_cart'] == 1) {
    unset($_SESSION['cart']);
    session_destroy();
    header("Location: /");
}

// Remove item from cart
if ($_SERVER["REQUEST_METHOD"] == "POST" && isset($_POST['product_id'])) {
    $productIdToRemove = $_POST['product_id'];
    
    foreach ($_SESSION['cart'] as $key => $item) {
        if ($item['product_id'] == $productIdToRemove) {
            unset($_SESSION['cart'][$key]);
            session_regenerate(true);
            break;
        }
    }
}

// Security measures
session_set_cookie_params(0, '/', null, true, true);
session_regenerate(true);
?>


<?php
// Start the session
session_start();

// Initialize cart if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add item to cart
function addToCart($productId) {
    global $db; // Assuming you have a database connection
    
    // Get product details from database
    $query = "SELECT * FROM products WHERE id = ?";
    $stmt = $db->prepare($query);
    $stmt->execute([$productId]);
    $product = $stmt->fetch(PDO::FETCH_ASSOC);

    if ($product) {
        // Check if item already exists in cart
        if (isset($_SESSION['cart'][$productId])) {
            $_SESSION['cart'][$productId]['quantity']++;
        } else {
            $_SESSION['cart'][$productId] = array(
                'id' => $productId,
                'name' => $product['name'],
                'price' => $product['price'],
                'quantity' => 1
            );
        }
    }
}

// Remove item from cart
function removeFromCart($productId) {
    if (isset($_SESSION['cart'][$productId])) {
        unset($_SESSION['cart'][$productId]);
    }
}

// Display cart contents
function displayCart() {
    $total = 0;
    
    echo "<table>";
    echo "<tr><th>Product</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>";
    
    foreach ($_SESSION['cart'] as $item) {
        $subtotal = $item['price'] * $item['quantity'];
        $total += $subtotal;
        
        echo "<tr>";
        echo "<td>" . $item['name'] . "</td>";
        echo "<td>$$item[price]</td>";
        echo "<td><input type='number' min='1' value='" . $item['quantity'] . "'></td>";
        echo "<td>$$subtotal</td>";
        echo "<td><button onclick='removeFromCart($item[id])'>Remove</button></td>";
        echo "</tr>";
    }
    
    echo "<tr><td colspan='4'><strong>Total: $$total</strong></td></tr>";
    echo "</table>";
}

// Destroy session when user logs out
function logout() {
    session_unset();
    session_destroy();
}

// Example usage:
if (isset($_POST['add_to_cart'])) {
    addToCart($_POST['product_id']);
}

if (isset($_POST['remove_from_cart'])) {
    removeFromCart($_POST['product_id']);
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <?php displayCart(); ?>
    
    <!-- Add product form -->
    <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
        <input type="hidden" name="product_id" value="1">
        <button type="submit" name="add_to_cart">Add to Cart</button>
    </form>

    <!-- Logout button -->
    <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
        <button type="submit" name="logout">Logout</button>
    </form>
</body>
</html>


<?php
session_start();

// Initialize cart if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add item to cart
if (isset($_POST['add_to_cart'])) {
    $item_id = $_POST['item_id'];
    $item_name = $_POST['item_name'];
    $item_price = $_POST['item_price'];
    $item_quantity = $_POST['item_quantity'];

    // Check if item is already in cart
    if (isset($_SESSION['cart'][$item_id])) {
        // Update quantity
        $_SESSION['cart'][$item_id]['quantity'] += $item_quantity;
    } else {
        // Add new item
        $_SESSION['cart'][$item_id] = array(
            'name' => $item_name,
            'price' => $item_price,
            'quantity' => $item_quantity
        );
    }

    $message = "Item added to cart successfully!";
}

// Remove item from cart
if (isset($_GET['remove_item'])) {
    $item_id = $_GET['remove_item'];
    unset($_SESSION['cart'][$item_id]);
    $message = "Item removed from cart successfully!";
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
    <style>
        .container {
            width: 80%;
            margin: 0 auto;
            padding: 20px;
        }
        .item-box {
            border: 1px solid #ddd;
            padding: 10px;
            margin-bottom: 10px;
        }
        .cart-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 10px;
            background-color: #f9f9f9;
        }
    </style>
</head>
<body>
    <div class="container">
        <?php if (isset($message)) { ?>
            <div style="color: green; margin-bottom: 20px;"><?php echo $message ?></div>
        <?php } ?>

        <!-- Add Item Form -->
        <h2>Add Item to Cart</h2>
        <form method="post">
            <input type="text" name="item_id" placeholder="Item ID" required><br>
            <input type="text" name="item_name" placeholder="Item Name" required><br>
            <input type="number" name="item_price" placeholder="Price" required><br>
            <input type="number" name="item_quantity" placeholder="Quantity" required><br>
            <button type="submit" name="add_to_cart">Add to Cart</button>
        </form>

        <!-- Display Cart -->
        <h2>Your Cart</h2>
        <?php if (empty($_SESSION['cart'])) { ?>
            <div style="color: red;">Your cart is empty!</div>
        <?php } else { ?>
            <div class="item-box">
                <?php foreach ($_SESSION['cart'] as $id => $item) { ?>
                    <div class="cart-item">
                        <span><?php echo $item['name']; ?></span>
                        <span>Price: <?php echo $item['price']; ?></span>
                        <span>Quantity: <?php echo $item['quantity']; ?></span>
                        <a href="?remove_item=<?php echo $id; ?>">Remove</a>
                    </div>
                <?php } ?>
            </div>
        <?php } ?>

        <!-- Logout Button -->
        <br>
        <a href="logout.php" style="display: block;">Logout</a>
    </div>
</body>
</html>


<?php
session_start();
session_unset();
session_destroy();
header("Location: cart.php");
exit();
?>


<?php
// Start the session
session_start();

// Initialize the cart if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add a product to the cart
function add_to_cart($product_id) {
    global $conn; // Assuming you have a database connection

    // Check if the product exists in the database
    $stmt = $conn->prepare("SELECT * FROM products WHERE id = ?");
    $stmt->bind_param("i", $product_id);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        // Check if the product is already in the cart
        if (isset($_SESSION['cart'][$product_id])) {
            // Increment quantity by 1
            $_SESSION['cart'][$product_id]['quantity']++;
        } else {
            $row = $result->fetch_assoc();
            // Add the product to the cart with quantity 1
            $_SESSION['cart'][$product_id] = array(
                'id' => $product_id,
                'name' => $row['name'],
                'price' => $row['price'],
                'quantity' => 1
            );
        }
    }
}

// Function to remove a product from the cart
function remove_from_cart($product_id) {
    if (isset($_SESSION['cart'][$product_id])) {
        unset($_SESSION['cart'][$product_id]);
        // Re-index the array to maintain numeric keys
        $_SESSION['cart'] = array_values($_SESSION['cart']);
    }
}

// Function to update the quantity of a product in the cart
function update_quantity($product_id, $new_quantity) {
    if (isset($_SESSION['cart'][$product_id])) {
        $_SESSION['cart'][$product_id]['quantity'] = $new_quantity;
    }
}

// Function to display the contents of the cart
function display_cart() {
    $total = 0;
    echo "<table>";
    foreach ($_SESSION['cart'] as $item) {
        echo "<tr>";
        echo "<td>" . $item['name'] . "</td>";
        echo "<td>Price: $" . number_format($item['price'], 2) . "</td>";
        echo "<td>Quantity: <input type='number' name='quantity[" . $item['id'] . "]' value='" . $item['quantity'] . "' min='1'></td>";
        echo "<td><a href='remove_product.php?id=" . $item['id'] . "'>Remove</a></td>";
        echo "</tr>";
        // Calculate total price
        $total += ($item['price'] * $item['quantity']);
    }
    echo "<tr><td colspan='4'><strong>Total: $" . number_format($total, 2) . "</strong></td></tr>";
    echo "</table>";
}

// Example usage:
// add_to_cart(1); // Add product with ID 1 to cart
// remove_from_cart(1); // Remove product with ID 1 from cart
// update_quantity(1, 2); // Update quantity of product with ID 1 to 2
// display_cart(); // Display the contents of the cart

?>


<?php
session_start();
?>


if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}


// Assuming $product_id, $product_name, and $product_price are obtained from your database or form
$product_id = 1;
$product_name = "Product Name";
$product_price = 29.99;

if (isset($_POST['add_to_cart'])) {
    if (!empty($product_id) && !empty($product_name) && !empty($product_price)) {
        // Check if the product is already in the cart
        $found = false;
        foreach ($_SESSION['cart'] as $key => $item) {
            if ($item['id'] == $product_id) {
                // If found, increase the quantity or handle accordingly
                $_SESSION['cart'][$key]['quantity']++;
                $found = true;
                break;
            }
        }
        
        if (!$found) {
            // Add new product to cart
            $_SESSION['cart'][] = array(
                'id' => $product_id,
                'name' => $product_name,
                'price' => $product_price,
                'quantity' => 1
            );
        }
    }
}


<?php
session_start();

if (isset($_POST['remove'])) {
    // Remove item from cart
    $id_to_remove = $_POST['id'];
    foreach ($_SESSION['cart'] as $key => $item) {
        if ($item['id'] == $id_to_remove) {
            unset($_SESSION['cart'][$key]);
            break;
        }
    }
}

if (empty($_SESSION['cart'])) {
    echo "Your cart is empty!";
} else {
    $total = 0;
    echo "<table>";
    echo "<tr><th>Product</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>";
    foreach ($_SESSION['cart'] as $item) {
        $item_total = $item['price'] * $item['quantity'];
        $total += $item_total;
        echo "<tr>";
        echo "<td>" . $item['name'] . "</td>";
        echo "<td>$$item[price]</td>";
        echo "<td><input type='number' min='1' value='" . $item['quantity'] . "'></td>";
        echo "<td>$$item_total</td>";
        echo "<td><form action='' method='post'><input type='hidden' name='id' value='" . $item['id'] . "'><button type='submit' name='remove'>Remove</button></form></td>";
        echo "</tr>";
    }
    echo "<tr><td colspan='4'>Total:</td><td>$$total</td></tr>";
    echo "</table>";
}
?>


<?php
session_start();
unset($_SESSION['cart']);
session_unset();
session_destroy();

header("Location: index.php");
exit();
?>


<?php
session_start();

// Sample product data (you would usually fetch this from a database)
$products = array(
    array('id' => 1, 'name' => 'Product 1', 'price' => 29.99),
    array('id' => 2, 'name' => 'Product 2', 'price' => 49.99),
    // Add more products as needed
);

if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Handle add to cart action
if (isset($_POST['add_to_cart'])) {
    $product_id = isset($_POST['product_id']) ? intval($_POST['product_id']) : 0;
    
    if ($product_id > 0) {
        // Find the product in your product list
        foreach ($products as $product) {
            if ($product['id'] == $product_id) {
                $found = false;
                foreach ($_SESSION['cart'] as $key => $item) {
                    if ($item['id'] == $product_id) {
                        $_SESSION['cart'][$key]['quantity']++;
                        $found = true;
                        break;
                    }
                }
                
                if (!$found) {
                    $_SESSION['cart'][] = array(
                        'id' => $product['id'],
                        'name' => $product['name'],
                        'price' => $product['price'],
                        'quantity' => 1
                    );
                }
            }
        }
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
    <style>
        /* Add some basic styling */
        table { width: 100%; border-collapse: collapse; margin: 20px 0; }
        th, td { padding: 12px; text-align: left; border-bottom: 1px solid #ddd; }
        tr:hover { background-color: #f5f5f5; }
    </style>
</head>
<body>
    <h1>Products</h1>
    <?php foreach ($products as $product): ?>
        <form action="" method="post">
            <div style="border: 1px solid #ddd; padding: 10px; margin-bottom: 10px;">
                <h3><?php echo $product['name']; ?></h3>
                <p>Price: $<?php echo number_format($product['price'], 2); ?></p>
                <button type="submit" name="add_to_cart" value="<?php echo $product['id']; ?>">Add to Cart</button>
                <input type="hidden" name="product_id" value="<?php echo $product['id']; ?>">
            </div>
        </form>
    <?php endforeach; ?>

    <h2>Your Cart</h2>
    <?php include 'view_cart.php'; ?>

    <p><a href="destroy_cart.php">Logout and Clear Cart</a></p>
</body>
</html>


<?php
session_start();

if (isset($_POST['remove'])) {
    $id_to_remove = isset($_POST['id']) ? intval($_POST['id']) : 0;
    
    foreach ($_SESSION['cart'] as $key => $item) {
        if ($item['id'] == $id_to_remove) {
            unset($_SESSION['cart'][$key]);
            break;
        }
    }
}

if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}
?>

<?php
if (empty($_SESSION['cart'])) {
    echo "<p>Your cart is empty!</p>";
} else {
    $total = 0;
    echo "<table>";
    echo "<tr><th>Product</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>";
    foreach ($_SESSION['cart'] as $item) {
        $item_total = $item['price'] * $item['quantity'];
        $total += $item_total;
        echo "<tr>";
        echo "<td>" . $item['name'] . "</td>";
        echo "<td>$$item[price]</td>";
        echo "<td><input type='number' min='1' value='" . $item['quantity'] . "'></td>";
        echo "<td>$$item_total</td>";
        echo "<td><form action='' method='post'><input type='hidden' name='id' value='" . $item['id'] . "'><button type='submit' name='remove'>Remove</button></form></td>";
        echo "</tr>";
    }
    echo "<tr><td colspan='4'>Total:</td><td>$$total</td></tr>";
    echo "</table>";
}
?>


<?php
session_start();
unset($_SESSION['cart']);
session_unset();
session_destroy();

header("Location: index.php");
exit();
?>


<?php
session_start();

// Initialize cart if not set
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Check if item is being added to the cart
if (isset($_POST['item_id']) && isset($_POST['item_name'])) {
    $item_id = intval($_POST['item_id']);
    $item_name = mysqli_real_escape_string($db, $_POST['item_name']); // Assuming $db is your database connection

    // Check if item already exists in the cart
    $item_exists = false;
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['item_id'] == $item_id) {
            $item_exists = true;
            break;
        }
    }

    if (!$item_exists) {
        // Add new item to the cart
        $_SESSION['cart'][] = array(
            'item_id' => $item_id,
            'item_name' => $item_name,
            'quantity' => 1
        );
    }

    // Redirect back to the cart page
    header("Location: cart.php");
    exit();
}

// Display navigation links
echo "<a href='products.php'>View Products</a>";
echo "<br />";
echo "<a href='cart.php'>View Cart</a>";
?>



<?php
// Start the session
session_start();

// Initialize cart if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Check if item is being added to cart
if (isset($_POST['add_to_cart'])) {
    // Get item details from form submission
    $item_id = intval($_POST['item_id']);
    $item_name = $_POST['item_name'];
    $item_price = floatval($_POST['item_price']);
    $quantity = intval($_POST['quantity']);

    // Check if item is already in cart
    if (isset($_SESSION['cart'][$item_id])) {
        // Update quantity
        $_SESSION['cart'][$item_id]['quantity'] += $quantity;
    } else {
        // Add new item to cart
        $_SESSION['cart'][$item_id] = array(
            'name' => $item_name,
            'price' => $item_price,
            'quantity' => $quantity
        );
    }
}

// Display the cart contents
echo "<h2>Shopping Cart</h2>";
if (empty($_SESSION['cart'])) {
    echo "Your cart is empty.";
} else {
    foreach ($_SESSION['cart'] as $item_id => $item) {
        echo "<div class='cart-item'>";
        echo "<p>Item ID: $item_id</p>";
        echo "<p>Name: {$item['name']}</p>";
        echo "<p>Price: \$" . number_format($item['price'], 2) . "</p>";
        echo "<p>Quantity: {$item['quantity']}</p>";
        echo "<form action='cart.php' method='post'>";
        echo "<input type='hidden' name='remove_item_id' value='$item_id'>";
        echo "<button type='submit' name='remove_from_cart'>Remove</button>";
        echo "</form>";
        echo "</div>";
    }
}

// Add to cart form
echo "<h2>Add Item to Cart</h2>";
echo "<form action='cart.php' method='post'>";
echo "<input type='hidden' name='item_id' value='1'>";
echo "<input type='text' name='item_name' placeholder='Enter item name'>";
echo "<input type='number' name='item_price' step='0.01' placeholder='Enter price'>";
echo "<input type='number' name='quantity' min='1' value='1'>";
echo "<button type='submit' name='add_to_cart'>Add to Cart</button>";
echo "</form>";

// Links
echo "<a href='products.php'>Continue Shopping</a> | ";
echo "<a href='checkout.php'>Checkout</a>";
?>


<?php
// Start the session
session_start();

// Initialize cart if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add item to cart
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $item_id = isset($_POST['item_id']) ? intval($_POST['item_id']) : 0;
    $item_name = isset($_POST['item_name']) ? $_POST['item_name'] : '';
    $item_price = isset($_POST['item_price']) ? floatval($_POST['item_price']) : 0.0;
    $quantity = isset($_POST['quantity']) ? intval($_POST['quantity']) : 1;

    // Check if item already exists in cart
    $found = false;
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['item_id'] == $item_id) {
            $item['quantity'] += $quantity;
            $found = true;
            break;
        }
    }

    // Add new item if not found
    if (!$found) {
        $_SESSION['cart'][] = array(
            'item_id' => $item_id,
            'item_name' => $item_name,
            'item_price' => $item_price,
            'quantity' => $quantity
        );
    }

    // Redirect back to cart page
    header("Location: cart.php");
    exit();
}

// Remove item from cart
if (isset($_GET['remove_id'])) {
    $remove_id = intval($_GET['remove_id']);
    
    foreach ($_SESSION['cart'] as $key => $item) {
        if ($item['item_id'] == $remove_id) {
            unset($_SESSION['cart'][$key]);
            break;
        }
    }
    
    // Re-index the array
    $_SESSION['cart'] = array_values($_SESSION['cart']);
    
    // Redirect back to cart page
    header("Location: cart.php");
    exit();
}

// Display cart contents
echo "<h2>Your Shopping Cart</h2>";
if (empty($_SESSION['cart'])) {
    echo "Your cart is empty.";
} else {
    echo "<table border='1'>";
    echo "<tr><th>Item Name</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>";
    
    $total_amount = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total_price = $item['price'] * $item['quantity'];
        $total_amount += $total_price;
        
        echo "<tr>";
        echo "<td>" . $item['item_name'] . "</td>";
        echo "<td>$" . number_format($item['price'], 2) . "</td>";
        echo "<td>" . $item['quantity'] . "</td>";
        echo "<td>$" . number_format($total_price, 2) . "</td>";
        echo "<td><a href='cart.php?remove_id=" . $item['item_id'] . "'>Remove</a></td>";
        echo "</tr>";
    }
    
    echo "</table>";
    echo "<h3>Total Amount: $" . number_format($total_amount, 2) . "</h3>";
}

// Optional: Destroy the session when done
// session_unset();
// session_destroy();
?>


<?php
// Initialize session
session_start();

// Check if cart exists in session, if not initialize it
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function addToCart($productId, $productName, $productPrice) {
    global $mysqli;
    
    // Check if product is already in cart
    if (isset($_SESSION['cart'][$productId])) {
        $_SESSION['cart'][$productId]['quantity']++;
    } else {
        // Add new product to cart
        $_SESSION['cart'][$productId] = array(
            'product_id' => $productId,
            'product_name' => $productName,
            'product_price' => $productPrice,
            'quantity' => 1
        );
    }
}

// Function to remove item from cart
function removeFromCart($productId) {
    if (isset($_SESSION['cart'][$productId])) {
        unset($_SESSION['cart'][$productId]);
    }
    // Re-index the array after unsetting
    $_SESSION['cart'] = array_values($_SESSION['cart']);
}

// Function to update quantity of an item in cart
function updateQuantity($productId, $newQuantity) {
    if ($newQuantity > 0 && isset($_SESSION['cart'][$productId])) {
        $_SESSION['cart'][$productId]['quantity'] = $newQuantity;
    }
}

// Display cart items
echo "<h2>Shopping Cart</h2>";
echo "<table border='1'>";
echo "<tr><th>Product Name</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>";

foreach ($_SESSION['cart'] as $item) {
    $total = $item['product_price'] * $item['quantity'];
    echo "<tr>";
    echo "<td>{$item['product_name']}</td>";
    echo "<td>$$item[product_price]</td>";
    echo "<td><input type='number' name='quantity' min='1' value='{$item['quantity']}'></td>";
    echo "<td>$$total</td>";
    echo "<td><a href='removeFromCart.php?id={$item['product_id']}'>Remove</a></td>";
    echo "</tr>";
}
echo "</table>";

// Calculate and display cart total
$cartTotal = 0;
foreach ($_SESSION['cart'] as $item) {
    $cartTotal += $item['product_price'] * $item['quantity'];
}

echo "<h3>Cart Total: $$cartTotal</h3>";
?>

<!-- Links to add items to cart -->
<h2>Add Items to Cart</h2>
<a href="addToCart.php?id=1">Add Product 1</a><br>
<a href="addToCart.php?id=2">Add Product 2</a><br>
<a href="addToCart.php?id=3">Add Product 3</a><br>

<!-- Example addToCart.php -->
<?php
session_start();
$product_id = $_GET['id'];
// Get product details from database or array
$products = array(
    1 => array('name' => 'Product 1', 'price' => 10.99),
    2 => array('name' => 'Product 2', 'price' => 15.99),
    3 => array('name' => 'Product 3', 'price' => 20.99)
);

if (isset($products[$product_id])) {
    addToCart($product_id, $products[$product_id]['name'], $products[$product_id]['price']);
}
header("Location: cart.php");
exit();
?>

<!-- Example removeFromCart.php -->
<?php
session_start();
$product_id = $_GET['id'];
removeFromCart($product_id);
header("Location: cart.php");
exit();
?>


<?php
// Start the session
session_start();

// Check if the cart exists in the session
if (!isset($_SESSION['cart'])) {
    // Initialize the cart as an empty array
    $_SESSION['cart'] = array();
}

// Add item to cart
$item_id = 1; // Replace with your item ID
$quantity = 1; // Replace with your quantity

// Check if the item is already in the cart
if (isset($_SESSION['cart'][$item_id])) {
    // Increment the quantity
    $_SESSION['cart'][$item_id] += $quantity;
} else {
    // Add new item to the cart
    $_SESSION['cart'][$item_id] = $quantity;
}

// Display cart contents
echo "<h2>Shopping Cart</h2>";
echo "<ul>";

foreach ($_SESSION['cart'] as $item_id => $quantity) {
    echo "<li>Item ID: " . $item_id . " | Quantity: " . $quantity . "</li>";
}

echo "</ul>";

// Remove item from cart
if (isset($_GET['remove'])) {
    $remove_item_id = $_GET['remove'];
    unset($_SESSION['cart'][$remove_item_id]);
    // Re-index the array
    $_SESSION['cart'] = array_values($_SESSION['cart']);
}

// Add more items to demonstrate
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <h1>Add Items to Cart</h1>
    
    <!-- Add Item 1 -->
    <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
        <input type="hidden" name="item_id" value="1">
        <input type="number" name="quantity" min="1" value="1">
        <button type="submit">Add Item 1</button>
    </form>

    <!-- Add Item 2 -->
    <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
        <input type="hidden" name="item_id" value="2">
        <input type="number" name="quantity" min="1" value="1">
        <button type="submit">Add Item 2</button>
    </form>

    <!-- Add Item 3 -->
    <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
        <input type="hidden" name="item_id" value="3">
        <input type="number" name="quantity" min="1" value="1">
        <button type="submit">Add Item 3</button>
    </form>

    <!-- Remove Items -->
    <?php if (!empty($_SESSION['cart'])): ?>
        <h2>Remove Items from Cart</h2>
        <?php foreach ($_SESSION['cart'] as $item_id => $quantity): ?>
            <a href="<?php echo $_SERVER['PHP_SELF']; ?>?remove=<?php echo $item_id; ?>">Remove Item <?php echo $item_id; ?></a><br>
        <?php endforeach; ?>
    <?php endif; ?>

</body>
</html>


<?php
// Initialize session
session_start();

// Check if cart exists in session, if not create it
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function addToCart($productId, $name, $price) {
    global $mysqli; // Database connection

    // Check if product is already in cart
    $cart = &$_SESSION['cart'];
    
    if (isset($cart[$productId])) {
        // Increment quantity
        $cart[$productId]['quantity']++;
    } else {
        // Add new item to cart
        $cart[$productId] = array(
            'product_id' => $productId,
            'name' => $name,
            'price' => $price,
            'quantity' => 1
        );
    }
    
    return true;
}

// Function to remove item from cart
function removeFromCart($productId) {
    $cart = &$_SESSION['cart'];
    
    if (isset($cart[$productId])) {
        unset($cart[$productId]);
        return true;
    }
    
    return false;
}

// Function to update quantity of item in cart
function updateQuantity($productId, $quantity) {
    $cart = &$_SESSION['cart'];
    
    if (isset($cart[$productId]) && is_numeric($quantity) && $quantity > 0) {
        $cart[$productId]['quantity'] = $quantity;
        return true;
    }
    
    return false;
}

// Function to check if item exists in cart
function isInCart($productId) {
    $cart = &$_SESSION['cart'];
    return isset($cart[$productId]);
}

// Function to calculate cart total
function getCartTotal() {
    $total = 0.00;
    foreach ($_SESSION['cart'] as $item) {
        $total += ($item['price'] * $item['quantity']);
    }
    return number_format($total, 2);
}

// Function to empty the cart
function emptyCart() {
    $_SESSION['cart'] = array();
    // or session_unset();
    // session_destroy();
}

// Example usage:
// Add item to cart
if (isset($_POST['add_to_cart'])) {
    $productId = intval($_POST['product_id']);
    $name = mysqli_real_escape_string($mysqli, $_POST['name']);
    $price = floatval($_POST['price']);
    
    if (!isInCart($productId)) {
        addToCart($productId, $name, $price);
    }
}

// Remove item from cart
if (isset($_GET['remove'])) {
    $productId = intval($_GET['remove']);
    removeFromCart($productId);
}

// Update quantity
if (isset($_POST['update_quantity'])) {
    $productId = intval($_POST['product_id']);
    $quantity = intval($_POST['quantity']);
    
    if ($quantity > 0) {
        updateQuantity($productId, $quantity);
    }
}

// Empty cart
if (isset($_GET['empty'])) {
    emptyCart();
}
?>


<?php
session_start();

// Initialize cart if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function addToCart($item_id, $quantity) {
    global $product_info; // Assuming product info is stored here

    // Check if the item already exists in the cart
    if (isset($_SESSION['cart'][$item_id])) {
        $_SESSION['cart'][$item_id]['quantity'] += $quantity;
    } else {
        // Add new item to the cart
        $_SESSION['cart'][$item_id] = array(
            'id' => $item_id,
            'name' => $product_info[$item_id]['name'],
            'price' => $product_info[$item_id]['price'],
            'quantity' => $quantity
        );
    }
}

// Function to update item quantity in cart
function updateCartItem($item_id, $new_quantity) {
    if (isset($_SESSION['cart'][$item_id])) {
        $_SESSION['cart'][$item_id]['quantity'] = $new_quantity;
    }
}

// Function to remove item from cart
function removeFromCart($item_id) {
    unset($_SESSION['cart'][$item_id]);
}

// Example usage:
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    if (isset($_POST['action'])) {
        switch ($_POST['action']) {
            case 'add':
                addToCart($_POST['item_id'], $_POST['quantity']);
                break;
            
            case 'update':
                updateCartItem($_POST['item_id'], $_POST['new_quantity']);
                break;
                
            case 'remove':
                removeFromCart($_POST['item_id']);
                break;
        }
    }
}

// Displaying the cart content
echo "<h2>Shopping Cart</h2>";
echo "<table border='1'>";
echo "<tr><th>Item ID</th><th>Name</th><th>Price</th><th>Quantity</th><th>Total</th></tr>";

$total = 0;

foreach ($_SESSION['cart'] as $item) {
    $total += ($item['price'] * $item['quantity']);
    echo "<tr>";
    echo "<td>".$item['id']."</td>";
    echo "<td>".$item['name']."</td>";
    echo "<td>$".$item['price']."</td>";
    echo "<td>".$item['quantity']."</td>";
    echo "<td>$".($item['price'] * $item['quantity'])."</td>";
    echo "</tr>";
}

echo "<tr><td colspan='4'>Grand Total:</td><td>$".$total."</td></tr>";
echo "</table>";

// Add item form
echo "
<form method='post' action=''>
<input type='hidden' name='action' value='add'>
Item ID: <input type='text' name='item_id'><br>
Quantity: <input type='number' name='quantity' min='1'><br>
<button type='submit'>Add to Cart</button>
</form>
";

// Update quantity form
echo "
<form method='post' action=''>
<input type='hidden' name='action' value='update'>
Item ID: <input type='text' name='item_id'><br>
New Quantity: <input type='number' name='new_quantity' min='1'><br>
<button type='submit'>Update Quantity</button>
</form>
";

// Remove item form
echo "
<form method='post' action=''>
<input type='hidden' name='action' value='remove'>
Item ID: <input type='text' name='item_id'><br>
<button type='submit'>Remove from Cart</button>
</form>
";
?>


<?php
// Start the session
session_start();

// Initialize cart if not already set
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Example product data (this would typically come from your database)
$products = array(
    1 => array('name' => 'Product 1', 'price' => 10.99),
    2 => array('name' => 'Product 2', 'price' => 19.99),
    3 => array('name' => 'Product 3', 'price' => 5.99)
);

// Add item to cart
function addToCart($productId, $quantity = 1) {
    global $products;
    
    if (isset($products[$productId])) {
        // Check if product is already in cart
        if (!isset($_SESSION['cart'][$productId])) {
            $_SESSION['cart'][$productId] = array(
                'id' => $productId,
                'name' => $products[$productId]['name'],
                'price' => $products[$productId]['price'],
                'quantity' => 0
            );
        }
        
        // Increment quantity
        $_SESSION['cart'][$productId]['quantity'] += $quantity;
    }
}

// Remove item from cart
function removeFromCart($productId) {
    if (isset($_SESSION['cart'][$productId])) {
        unset($_SESSION['cart'][$productId]);
    }
}

// Display cart contents
if (!empty($_SESSION['cart'])) {
    echo '<h2>Shopping Cart</h2>';
    $total = 0;
    
    foreach ($_SESSION['cart'] as $item) {
        $subtotal = $item['price'] * $item['quantity'];
        $total += $subtotal;
        
        echo "<div>";
        echo "Product: {$item['name']}<br />";
        echo "Price: \${$item['price']}<br />";
        echo "Quantity: {$item['quantity']}<br />";
        echo "Subtotal: \${$subtotal}<br />";
        echo '<a href="?remove=' . $item['id'] . '">Remove</a>';
        echo "</div><br />";
    }
    
    echo "<h3>Total: \${$total}</h3>";
} else {
    echo 'Your cart is empty.';
}

// Handle remove action
if (isset($_GET['remove'])) {
    removeFromCart($_GET['remove']);
}

// Example of adding items to the cart
addToCart(1, 2); // Add product ID 1 with quantity 2
addToCart(3, 5); // Add product ID 3 with quantity 5

?>


<?php
session_start();

// Initialize cart if not exists
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add item to cart
function addToCart($productId, $productName, $price) {
    // Check if product is already in cart
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['product_id'] == $productId) {
            $item['quantity']++;
            return;
        }
    }

    // Add new product to cart
    $_SESSION['cart'][] = array(
        'product_id' => $productId,
        'product_name' => $productName,
        'price' => $price,
        'quantity' => 1
    );
}

// Remove item from cart
function removeFromCart($productId) {
    foreach ($_SESSION['cart'] as $key => &$item) {
        if ($item['product_id'] == $productId) {
            unset($_SESSION['cart'][$key]);
            return;
        }
    }
}

// Update quantity of item in cart
function updateQuantity($productId, $quantity) {
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['product_id'] == $productId) {
            $item['quantity'] = $quantity;
            return;
        }
    }
}

// Display cart items
function displayCart() {
    if (empty($_SESSION['cart'])) {
        echo "Your cart is empty!";
        return;
    }

    echo "<table>";
    echo "<tr><th>Product Name</th><th>Price</th><th>Quantity</th><th>Action</th></tr>";
    
    foreach ($_SESSION['cart'] as $item) {
        echo "<tr>";
        echo "<td>" . $item['product_name'] . "</td>";
        echo "<td>$" . number_format($item['price'], 2) . "</td>";
        echo "<td><input type='number' value='" . $item['quantity'] . "' onChange='updateQuantity(" . $item['product_id'] . ", this.value)'></td>";
        echo "<td><button onclick='removeFromCart(" . $item['product_id'] . ")'>Remove</button></td>";
        echo "</tr>";
    }
    
    echo "</table>";
}

// Clear cart
function clearCart() {
    unset($_SESSION['cart']);
}
?>


<?php
// Add product to cart
addToCart(1, 'Product 1', 19.99);

// Display cart contents
displayCart();

// Remove product from cart
removeFromCart(1);

// Update quantity of product
updateQuantity(2, 3);

// Clear all items from cart
clearCart();
?>


<?php
// Start the session
if (session_status() == PHP_SESSION_NONE) {
    session_start();
}

// Check if cart exists in session, if not create empty array
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function add_to_cart($product_id, $quantity = 1) {
    global $conn; // Database connection
    
    // Check if product exists in database
    $stmt = $conn->prepare("SELECT * FROM products WHERE id = ?");
    $stmt->bind_param("i", $product_id);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows > 0) {
        // Check if item is already in cart
        if (isset($_SESSION['cart'][$product_id])) {
            $_SESSION['cart'][$product_id]['quantity'] += $quantity;
        } else {
            $product = $result->fetch_assoc();
            $_SESSION['cart'][$product_id] = array(
                'id' => $product_id,
                'name' => $product['name'],
                'price' => $product['price'],
                'quantity' => $quantity
            );
        }
        
        // Set success message
        $_SESSION['message'] = "Product added to cart successfully!";
    } else {
        // Set error message
        $_SESSION['message'] = "Product does not exist!";
    }
}

// Function to remove item from cart
function remove_from_cart($product_id) {
    if (isset($_SESSION['cart'][$product_id])) {
        unset($_SESSION['cart'][$product_id]);
        
        // Reset session messages
        unset($_SESSION['message']);
    }
    
    // Set success message
    $_SESSION['message'] = "Product removed from cart successfully!";
}

// Function to update item quantity in cart
function update_cart($product_id, $quantity) {
    if (isset($_SESSION['cart'][$product_id])) {
        $quantity = max(1, min((int)$quantity, 999)); // Limit quantity between 1 and 999
        $_SESSION['cart'][$product_id]['quantity'] = $quantity;
        
        // Set success message
        $_SESSION['message'] = "Quantity updated successfully!";
    }
}

// Display cart contents
if (!empty($_SESSION['cart'])) {
    echo "<h2>Shopping Cart</h2>";
    echo "<table border='1'>";
    echo "<tr><th>Product ID</th><th>Product Name</th><th>Price</th><th>Quantity</th><th>Action</th></tr>";
    
    foreach ($_SESSION['cart'] as $item) {
        echo "<tr>";
        echo "<td>{$item['id']}</td>";
        echo "<td>{$item['name']}</td>";
        echo "<td>$" . number_format($item['price'], 2) . "</td>";
        echo "<td><input type='number' name='quantity[{$item['id']}]' value='{$item['quantity']}' min='1' max='999'></td>";
        echo "<td><a href='?remove={$item['id']}'>Remove</a></td>";
        echo "</tr>";
    }
    
    echo "</table>";
} else {
    echo "<p>Your cart is empty!</p>";
}

// Check for messages and display them
if (isset($_SESSION['message'])) {
    echo "<div class='message'>" . $_SESSION['message'] . "</div>";
}
?>

<!-- Add navigation links -->
<a href="products.php">Continue Shopping</a> |
<a href="checkout.php">Checkout</a>

<?php
// Clear session messages after display
unset($_SESSION['message']);
?>


<?php
// Start the session
session_start();

// Initialize cart if not exists
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function addToCart($productId, $quantity = 1) {
    global $productData; // Assuming you have a product data source

    if (isset($productData[$productId])) {
        $item = $productData[$productId];
        
        if (!isset($_SESSION['cart'][$productId])) {
            $_SESSION['cart'][$productId] = array(
                'id' => $item['id'],
                'name' => $item['name'],
                'price' => $item['price'],
                'quantity' => 0
            );
        }

        // Add quantity
        $_SESSION['cart'][$productId]['quantity'] += $quantity;
    }
}

// Function to remove item from cart
function removeFromCart($productId) {
    if (isset($_SESSION['cart'][$productId])) {
        unset($_SESSION['cart'][$productId]);
        // Re-index the array to avoid empty indexes
        $_SESSION['cart'] = array_values($_SESSION['cart']);
    }
}

// Function to update quantity of an item in cart
function updateQuantity($productId, $newQuantity) {
    if (isset($_SESSION['cart'][$productId])) {
        $_SESSION['cart'][$productId]['quantity'] = max(1, min((int)$newQuantity, 99)); // Restrict quantity between 1 and 99
    }
}

// Example usage:
// Add item to cart
addToCart(1, 2); // Adds product with ID 1 and quantity 2

// Update quantity
updateQuantity(1, 5);

// Remove item from cart
removeFromCart(1);

// Display cart content
echo "<pre>";
print_r($_SESSION['cart']);
echo "</pre>";
?>


<?php
// Initialize the session
session_start();

// Check if cart session exists, if not initialize it
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add item to cart
function addToCart($item_id, $item_name, $price) {
    // Check if item is already in the cart
    if (isset($_SESSION['cart'][$item_id])) {
        $_SESSION['cart'][$item_id]['quantity']++;
    } else {
        // Create new item array
        $item = array(
            'id' => $item_id,
            'name' => $item_name,
            'price' => $price,
            'quantity' => 1
        );
        
        // Add the item to the cart
        $_SESSION['cart'][$item_id] = $item;
    }
}

// Display cart contents
function displayCart() {
    if (empty($_SESSION['cart'])) {
        echo "Your cart is empty!";
    } else {
        echo "<table>";
        foreach ($_SESSION['cart'] as $item) {
            echo "<tr>";
            echo "<td>" . $item['name'] . "</td>";
            echo "<td> $" . number_format($item['price'], 2) . "</td>";
            echo "<td>" . $item['quantity'] . "</td>";
            // Add remove button
            echo '<td><a href="?remove=' . $item['id'] . '">Remove</a></td>';
            echo "</tr>";
        }
        echo "</table>";
    }
}

// Remove item from cart
function removeFromCart($item_id) {
    if (isset($_SESSION['cart'][$item_id])) {
        unset($_SESSION['cart'][$item_id]);
        // Re-index the array
        $_SESSION['cart'] = array_values($_SESSION['cart']);
    }
}

// Calculate total price of items in cart
function calculateTotal() {
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += ($item['price'] * $item['quantity']);
    }
    return number_format($total, 2);
}

// Example usage:
// Add an item to the cart
addToCart(1, "Laptop", 999.99);

// Display cart contents
displayCart();

// Remove item from cart using GET parameter
if (isset($_GET['remove'])) {
    removeFromCart($_GET['remove']);
}

// Calculate and display total price
echo "<p>Total: $" . calculateTotal() . "</p>";

// Destroy session when user logs out or closes browser
//$_SESSION = array();
//session_unset();
//session_destroy();
?>


<?php
// Start the session
session_start();

// Check if the cart session exists, if not initialize it as an array
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to the cart
function addToCart($productId) {
    // Get the current cart items from the session
    $cart = $_SESSION['cart'];

    // Check if the product is already in the cart
    if (isset($cart[$productId])) {
        // If it's already there, increment the quantity
        $cart[$productId]['quantity']++;
    } else {
        // If not, add the product to the cart with quantity 1
        $cart[$productId] = array(
            'id' => $productId,
            'name' => getProductDetail($productId, 'name'),
            'price' => getProductDetail($productId, 'price'),
            'quantity' => 1
        );
    }

    // Update the cart in the session
    $_SESSION['cart'] = $cart;
}

// Function to get product details (replace this with your actual data retrieval method)
function getProductDetail($productId, $detail) {
    // This is a placeholder function. Replace it with your actual implementation.
    $products = array(
        1 => array('name' => 'Product 1', 'price' => 29.99),
        2 => array('name' => 'Product 2', 'price' => 49.99),
        // Add more products as needed
    );

    return $products[$productId][$detail];
}

// Function to view the cart items
function viewCart() {
    if (empty($_SESSION['cart'])) {
        echo "Your cart is empty!";
    } else {
        foreach ($_SESSION['cart'] as $item) {
            echo "ID: " . $item['id'] . "<br>";
            echo "Name: " . $item['name'] . "<br>";
            echo "Price: $" . number_format($item['price'], 2) . "<br>";
            echo "Quantity: " . $item['quantity'] . "<br>";
            echo "<hr>";
        }
    }
}

// Function to remove item from the cart
function removeFromCart($productId) {
    // Get the current cart items from the session
    $cart = $_SESSION['cart'];

    // Unset the product from the cart
    if (isset($cart[$productId])) {
        unset($cart[$productId]);
    }

    // Update the cart in the session
    $_SESSION['cart'] = $cart;
}

// Example usage:
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    if (isset($_POST['add_to_cart'])) {
        $productId = intval($_POST['product_id']);
        addToCart($productId);
        header("Location: cart.php");
        exit();
    } elseif (isset($_POST['remove_from_cart'])) {
        $productId = intval($_POST['product_id']);
        removeFromCart($productId);
        header("Location: cart.php");
        exit();
    }
}

// Display the cart contents
viewCart();
?>


<?php
session_start();

// Initialize cart if not set
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function addToCart($item_id, $item_name, $price) {
    global $db; // Assuming you have a database connection

    $item_found = false;
    
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['id'] == $item_id) {
            $item['quantity']++;
            $item_found = true;
            break;
        }
    }

    if (!$item_found) {
        $new_item = array(
            'id' => $item_id,
            'name' => $item_name,
            'price' => $price,
            'quantity' => 1
        );
        $_SESSION['cart'][] = $new_item;
    }
}

// Function to update quantity of an item in cart
function updateQuantity($item_id, $quantity) {
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['id'] == $item_id) {
            $item['quantity'] = max(1, (int)$quantity);
            break;
        }
    }
}

// Function to remove item from cart
function removeFromCart($item_id) {
    foreach ($_SESSION['cart'] as $key => &$item) {
        if ($item['id'] == $item_id) {
            unset($_SESSION['cart'][$key]);
            break;
        }
    }
    // Re-index the array
    $_SESSION['cart'] = array_values($_SESSION['cart']);
}

// Function to calculate total price
function cartTotal() {
    $total = 0.00;
    foreach ($_SESSION['cart'] as $item) {
        $total += ($item['price'] * $item['quantity']);
    }
    return $total;
}

// Display cart items
echo "<h2>Your Cart</h2>";
if (empty($_SESSION['cart'])) {
    echo "Your cart is empty!";
} else {
    foreach ($_SESSION['cart'] as $index => $item) {
        echo "<div class='cart-item'>";
        echo "<p>Item: {$item['name']}</p>";
        echo "<p>Price: \${$item['price']}</p>";
        echo "<p>Quantity: {$item['quantity']}</p>";
        echo "<a href='remove.php?id={$index}'>Remove</a>";
        echo "</div>";
    }
}
?>

<!-- Include these links or buttons in your HTML -->
<a href="add.php">Add Item</a>
<a href="checkout.php">Checkout (Total: $" . cartTotal() . ")</a>


<?php
// Start the session
if (session_status() == PHP_SESSION_NONE) {
    session_start();
}

// Add item to cart
function addToCart($productId, $productName, $productPrice, $quantity = 1) {
    // Initialize cart if not exists
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }

    // Check if product already in cart
    $found = false;
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['product_id'] == $productId) {
            $item['quantity'] += $quantity;
            $found = true;
            break;
        }
    }

    // If not found, add new product to cart
    if (!$found) {
        $_SESSION['cart'][] = array(
            'product_id' => $productId,
            'product_name' => $productName,
            'product_price' => $productPrice,
            'quantity' => $quantity
        );
    }

    // Redirect back to cart page or product listing
    header("Location: view_cart.php");
}

// Display cart items
function displayCart() {
    if (isset($_SESSION['cart']) && count($_SESSION['cart']) > 0) {
        echo "<table>";
        echo "<tr><th>Product</th><th>Price</th><th>Quantity</th><th>Total</th></tr>";
        
        foreach ($_SESSION['cart'] as $item) {
            echo "<tr>";
            echo "<td>" . $item['product_name'] . "</td>";
            echo "<td>$" . number_format($item['product_price'], 2) . "</td>";
            echo "<td><input type='number' name='quantity[" . $item['product_id'] . "]' value='" . $item['quantity'] . "' min='1'></td>";
            echo "<td>$" . number_format($item['product_price'] * $item['quantity'], 2) . "</td>";
            echo "<td><a href='remove_from_cart.php?id=" . $item['product_id'] . "'>Remove</a></td>";
            echo "</tr>";
        }
        
        echo "</table>";
    } else {
        echo "Your cart is empty!";
    }
}

// Calculate cart total
function calculateTotal() {
    $total = 0;
    
    if (isset($_SESSION['cart'])) {
        foreach ($_SESSION['cart'] as $item) {
            $total += ($item['product_price'] * $item['quantity']);
        }
    }
    
    return number_format($total, 2);
}

// Example usage on a product page
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    if (isset($_POST['add_to_cart'])) {
        $productId = $_POST['product_id'];
        $productName = $_POST['product_name'];
        $productPrice = $_POST['product_price'];
        $quantity = isset($_POST['quantity']) ? intval($_POST['quantity']) : 1;
        
        addToCart($productId, $productName, $productPrice, $quantity);
    }
}

// Example usage on cart page
if (isset($_GET['action']) && $_GET['action'] == 'update') {
    foreach ($_POST['quantity'] as $id => $qty) {
        foreach ($_SESSION['cart'] as &$item) {
            if ($item['product_id'] == $id) {
                $item['quantity'] = max(1, intval($qty));
                break;
            }
        }
    }
}

// Remove item from cart
if (isset($_GET['action']) && $_GET['action'] == 'remove') {
    $productId = $_GET['id'];
    
    foreach ($_SESSION['cart'] as $key => &$item) {
        if ($item['product_id'] == $productId) {
            unset($_SESSION['cart'][$key]);
            break;
        }
    }
    
    // Re-index the array
    $_SESSION['cart'] = array_values($_SESSION['cart']);
}

// Clear cart
if (isset($_GET['action']) && $_GET['action'] == 'clear') {
    unset($_SESSION['cart']);
}
?>


<?php
session_start();
?>


if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}


$item_id = isset($_GET['item_id']) ? (int)$_GET['item_id'] : 0;
$quantity = isset($_GET['quantity']) ? (int)$_GET['quantity'] : 1;

if ($item_id) {
    if (!isset($_SESSION['cart'][$item_id])) {
        $_SESSION['cart'][$item_id] = array(
            'name' => 'Item Name', // Replace with actual name
            'price' => 29.99,      // Replace with actual price
            'quantity' => $quantity
        );
    } else {
        $_SESSION['cart'][$item_id]['quantity'] += $quantity;
    }
}


echo "<h2>Your Shopping Cart</h2>";
echo "<ul>";

$total = 0;

foreach ($_SESSION['cart'] as $item) {
    $total += $item['price'] * $item['quantity'];
    echo "<li>{$item['name']} - Quantity: {$item['quantity']} - Total: $" . number_format($item['price'] * $item['quantity'], 2) . "</li>";
}

echo "</ul>";
echo "Total Price: $" . number_format($total, 2);

// Display a remove button for each item
foreach ($_SESSION['cart'] as $id => $item) {
    echo "<form action='remove_item.php' method='post'>";
    echo "<input type='hidden' name='item_id' value='$id'>";
    echo "<button type='submit'>Remove {$item['name']}</button>";
    echo "</form>";
}


<?php
session_start();

if (isset($_POST['item_id']) && is_numeric($_POST['item_id'])) {
    $id = (int)$_POST['item_id'];
    unset($_SESSION['cart'][$id]);
}

header("Location: view_cart.php");
exit();


session_start();
unset($_SESSION['cart']);
session_destroy();


<?php
session_start();
?>


if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}


// Example product data (in real application, this would come from your database)
$product_id = $_POST['product_id'];
$product_name = $_POST['product_name'];
$price = $_POST['price'];

if (isset($_POST['add_to_cart'])) {
    // Check if the product is already in the cart
    $found = false;
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['id'] == $product_id) {
            $item['quantity']++;
            $item['total_price'] = $item['price'] * $item['quantity'];
            $found = true;
            break;
        }
    }

    // If not found, add it to the cart
    if (!$found) {
        $_SESSION['cart'][] = array(
            'id' => $product_id,
            'name' => $product_name,
            'price' => $price,
            'quantity' => 1,
            'total_price' => $price * 1
        );
    }

    // Redirect back to the products page
    header('Location: products.php');
    exit();
}


<?php
if (!isset($_SESSION['cart']) || count($_SESSION['cart']) == 0) {
    echo "Your cart is empty.";
} else {
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        ?>
        <div>
            <h3><?php echo $item['name']; ?></h3>
            <p>Price: <?php echo $item['price']; ?>$</p>
            <p>Quantity: <?php echo $item['quantity']; ?></p>
            <p>Total: <?php echo $item['total_price']; ?>$</p>
        </div>
        <?php
        $total += $item['total_price'];
    }
    ?>
    <h2>Grand Total: <?php echo $total; ?>$</h2>
    <?php
}
?>


foreach ($_SESSION['cart'] as $key => $item) {
    ?>
    <form action="remove_item.php" method="POST">
        <input type="hidden" name="index" value="<?php echo $key; ?>">
        <button type="submit">Remove</button>
    </form>
    <?php
}


<?php
session_start();
if (isset($_POST['index'])) {
    unset($_SESSION['cart'][$_POST['index']]);
    header('Location: view_cart.php');
    exit();
}
?>


foreach ($_SESSION['cart'] as $key => $item) {
    ?>
    <form action="update_quantity.php" method="POST">
        <input type="hidden" name="index" value="<?php echo $key; ?>">
        <input type="number" name="quantity" value="<?php echo $item['quantity']; ?>">
        <button type="submit">Update</button>
    </form>
    <?php
}


<?php
session_start();
if (isset($_POST['index']) && isset($_POST['quantity'])) {
    $_SESSION['cart'][$_POST['index']]['quantity'] = $_POST['quantity'];
    $_SESSION['cart'][$_POST['index']]['total_price'] = $_SESSION['cart'][$_POST['index']]['price'] * $_POST['quantity'];
    header('Location: view_cart.php');
    exit();
}
?>


<form action="clear_cart.php" method="POST">
    <button type="submit">Clear Cart</button>
</form>


<?php
session_start();
$_SESSION['cart'] = array();
header('Location: view_cart.php');
exit();
?>


<?php
session_start();

if (!isset($_SESSION['cart']) || count($_SESSION['cart']) == 0) {
    echo "Your cart is empty.";
} else {
    $total = 0;
    foreach ($_SESSION['cart'] as $key => $item) {
        ?>
        <div class="cart-item">
            <h3><?php echo $item['name']; ?></h3>
            <p>Price: <?php echo $item['price']; ?>$</p>
            <form action="update_quantity.php" method="POST">
                <input type="hidden" name="index" value="<?php echo $key; ?>">
                <input type="number" name="quantity" value="<?php echo $item['quantity']; ?>" min="1">
                <button type="submit">Update</button>
            </form>
            <p>Total: <?php echo $item['total_price']; ?>$</p>
            <form action="remove_item.php" method="POST">
                <input type="hidden" name="index" value="<?php echo $key; ?>">
                <button type="submit">Remove</button>
            </form>
        </div>
        <?php
        $total += $item['total_price'];
    }
    ?>
    <h2>Grand Total: <?php echo $total; ?>$</h2>
    <form action="clear_cart.php" method="POST">
        <button type="submit">Clear Cart</button>
    </form>
    <?php
}
?>


<?php
// Initialize the session
session_start();

// Set up some sample products (in practice, these would come from a database)
$products = array(
    1 => array('name' => 'Product 1', 'price' => 19.99),
    2 => array('name' => 'Product 2', 'price' => 29.99),
    3 => array('name' => 'Product 3', 'price' => 39.99)
);

// Check if the cart exists in the session, initialize if not
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add item to cart
if (isset($_GET['add'])) {
    $productId = $_GET['add'];
    
    // Check if product exists
    if (isset($products[$productId])) {
        // If the product is already in the cart, increment quantity
        if (isset($_SESSION['cart'][$productId])) {
            $_SESSION['cart'][$productId]['quantity']++;
        } else {
            // Add new product to cart with quantity 1
            $_SESSION['cart'][$productId] = array(
                'name' => $products[$productId]['name'],
                'price' => $products[$productId]['price'],
                'quantity' => 1
            );
        }
    }
}

// Remove item from cart
if (isset($_GET['remove'])) {
    $productId = $_GET['remove'];
    
    // Unset the product from the cart
    if (isset($_SESSION['cart'][$productId])) {
        unset($_SESSION['cart'][$productId]);
    }
}

// Update quantity of an item
if ($_SERVER["REQUEST_METHOD"] == "POST" && isset($_POST['update'])) {
    $productId = $_POST['product_id'];
    $quantity = $_POST['quantity'];
    
    if (isset($_SESSION['cart'][$productId])) {
        $_SESSION['cart'][$productId]['quantity'] = $quantity;
    }
}

// Display cart contents
echo "<h2>Your Shopping Cart</h2>";
if (empty($_SESSION['cart'])) {
    echo "Your cart is empty.";
} else {
    echo "<ul>";
    foreach ($_SESSION['cart'] as $.productId => $item) {
        echo "<li>{$item['name']} - Price: \${$item['price']} x {$item['quantity']}</li>";
        // Provide options to update or remove item
        echo "<form method='post' action=''>";
        echo "<input type='hidden' name='product_id' value='$productId'>";
        echo "Quantity: <input type='number' name='quantity' min='1' max='99' value='{$item['quantity']}'>";
        echo "<button type='submit' name='update'>Update</button>";
        echo "</form>";
        echo "<a href='?remove=$productId'>Remove</a><br>";
    }
    echo "</ul>";
    
    // Calculate total
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += ($item['price'] * $item['quantity']);
    }
    echo "<h3>Total: \${$total}</h3>";
}

// Links to add products
echo "<h2>Available Products</h2>";
foreach ($products as $productId => $product) {
    echo "<a href='?add=$productId'>Add {$product['name']}</a><br>";
}
?>



<?php
// Start the session
session_start();

// Initialize shopping cart session if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function addToCart($productId, $productName, $productPrice) {
    global $mysqli;
    
    // Check if product already exists in cart
    $found = false;
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['id'] == $(productId)) {
            $item['quantity']++;
            $found = true;
            break;
        }
    }
    
    if (!$found) {
        // Add new product to cart
        $_SESSION['cart'][] = array(
            'id' => $productId,
            'name' => $productName,
            'price' => $productPrice,
            'quantity' => 1
        );
    }
}

// Function to remove item from cart
function removeFromCart($productId) {
    foreach ($_SESSION['cart'] as $key => $item) {
        if ($item['id'] == $productId) {
            unset($_SESSION['cart'][$key]);
            // Re-index the array
            $_SESSION['cart'] = array_values($_SESSION['cart']);
        }
    }
}

// Function to update item quantity
function updateQuantity($productId, $quantity) {
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['id'] == $productId) {
            $item['quantity'] = $quantity;
            break;
        }
    }
}

// Function to calculate total price
function cartTotal() {
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += $item['price'] * $item['quantity'];
    }
    return $total;
}

// Display items in cart
if (!empty($_SESSION['cart'])) {
    echo "<h2>Your Cart</h2>";
    echo "<ul>";
    foreach ($_SESSION['cart'] as $item) {
        echo "<li>" . $item['name'] . " x" . $item['quantity'] . " - $" . number_format($item['price'], 2) . "</li>";
        echo "<a href='?action=remove&id=" . $item['id'] . "'>Remove</a>";
    }
    echo "</ul>";
    echo "<p>Total: $" . number_format(cartTotal(), 2) . "</p>";
} else {
    echo "<p>Your cart is empty.</p>";
}

// Destroy the session when done
if (isset($_GET['action']) && $_GET['action'] == 'logout') {
    unset($_SESSION);
    session_destroy();
}
?>


addToCart($productId, $productName, $productPrice);


removeFromCart($productId);


updateQuantity($productId, $newQuantity);


unset($_SESSION);
session_destroy();


<?php
// Initialize session
session_start();

// Function to add item to cart
function addToCart($product_id, $name, $price) {
    global $quantity; // Assume quantity is passed from form
    $_SESSION['cart'][$product_id] = array(
        'name' => $name,
        'price' => $price,
        'quantity' => $quantity
    );
}

// Function to remove item from cart
function removeFromCart($product_id) {
    if (isset($_SESSION['cart'][$product_id])) {
        unset($_SESSION['cart'][$product_id]);
    }
}

// Calculate total cost
$total = 0;
foreach ($_SESSION['cart'] as $item) {
    $total += $item['price'] * $item['quantity'];
}

// Display cart items
echo "<h2>Your Cart</h2>";
if (!empty($_SESSION['cart'])) {
    foreach ($_SESSION['cart'] as $id => $item) {
        echo "<div>Item: {$item['name']} | Price: \${$item['price']} | Quantity: {$item['quantity']} ";
        echo "<form method='post'>";
        echo "<input type='hidden' name='remove_id' value='$id'>";
        echo "<button type='submit'>Remove</button>";
        echo "</form></div>";
    }
} else {
    echo "Your cart is empty.";
}

// Handle removal
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    if (isset($_POST['remove_id'])) {
        removeFromCart($_POST['remove_id']);
    }
}
?>


<?php
// Start the session
session_start();

// Initialize cart if not exists
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function addToCart($productId, $productName) {
    global $addToCartMessage;
    
    // Check if product already exists in cart
    if (array_search($productId, array_column($_SESSION['cart'], 'product_id')) !== false) {
        $addToCartMessage = "Product already added to cart.";
    } else {
        // Add new item to the cart
        $_SESSION['cart'][] = array(
            'product_id' => $productId,
            'product_name' => $productName
        );
        $addToCartMessage = "Product added to cart successfully!";
    }
}

// Function to remove item from cart
function removeFromCart($productId) {
    global $removeFromCartMessage;
    
    // Loop through the cart and remove the product with matching ID
    foreach ($_SESSION['cart'] as $key => $item) {
        if ($item['product_id'] == $productId) {
            unset($_SESSION['cart'][$key]);
            $_SESSION['cart'] = array_values($_SESSION['cart']); // Re-index the array
            $removeFromCartMessage = "Product removed from cart successfully!";
            return;
        }
    }
    $removeFromCartMessage = "Product not found in cart.";
}

// Function to display cart items
function displayCart() {
    if (empty($_SESSION['cart'])) {
        echo "<p>Your cart is empty.</p>";
    } else {
        foreach ($_SESSION['cart'] as $item) {
            echo "<p>Product ID: " . $item['product_id'] . ", Name: " . $item['product_name'] . "</p>";
            echo '<a href="cart.php?action=remove&productId=' . $item['product_id'] . '">Remove</a><br>';
        }
    }
}

// Function to clear all items from cart
function clearCart() {
    $_SESSION['cart'] = array();
}

// Check if action is set and perform accordingly
if (isset($_GET['action'])) {
    switch ($_GET['action']) {
        case 'add':
            // Get product details from GET request
            $productId = isset($_GET['productId']) ? intval($_GET['productId']) : 0;
            $productName = isset($_GET['productName']) ? $_GET['productName'] : '';
            
            if ($productId > 0 && !empty($productName)) {
                addToCart($productId, $productName);
            }
            break;
            
        case 'remove':
            // Get product ID from GET request
            $productId = isset($_GET['productId']) ? intval($_GET['productId']) : 0;
            if ($productId > 0) {
                removeFromCart($productId);
            }
            break;
            
        case 'clear':
            clearCart();
            break;
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <?php
    // Display add to cart message if action was add
    if (isset($_GET['action']) && $_GET['action'] == 'add') {
        echo isset($addToCartMessage) ? "<p>" . $addToCartMessage . "</p>" : "";
    }
    
    // Display remove from cart message if action was remove
    if (isset($_GET['action']) && $_GET['action'] == 'remove') {
        echo isset($removeFromCartMessage) ? "<p>" . $ removeFromCartMessage . "</p>" : "";
    }
    ?>

    <h2>Shopping Cart</h2>
    <?php displayCart(); ?>

    <!-- Add items to cart -->
    <h3>Add Items</h3>
    <form action="cart.php?action=add" method="get">
        Product ID: <input type="text" name="productId"><br>
        Product Name: <input type="text" name="productName"><br>
        <button type="submit">Add to Cart</button>
    </form>

    <!-- Clear cart -->
    <a href="cart.php?action=clear">Clear Cart</a>
</body>
</html>


<?php
// Start the session
session_start();

// Initialize cart if not already set
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function addToCart($item_id, $item_name, $price) {
    global $mysqli;
    
    // Check if the item is already in the cart
    $found = false;
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['id'] == $item_id) {
            $item['quantity']++;
            $found = true;
            break;
        }
    }
    
    // If not found, add new item to the cart
    if (!$found) {
        $_SESSION['cart'][] = array(
            'id' => $item_id,
            'name' => $item_name,
            'price' => $price,
            'quantity' => 1
        );
    }
}

// Function to display cart items
function displayCart() {
    $totalAmount = 0;
    
    if (empty($_SESSION['cart'])) {
        echo "<p>Your cart is empty.</p>";
    } else {
        echo "<table>";
        echo "<tr><th>Item</th><th>Price</th><th>Quantity</th><th>Total</th></tr>";
        
        foreach ($_SESSION['cart'] as $item) {
            $subtotal = $item['price'] * $item['quantity'];
            $totalAmount += $subtotal;
            
            echo "<tr>";
            echo "<td>" . $item['name'] . "</td>";
            echo "<td>₹" . number_format($item['price'], 2) . "</td>";
            echo "<td><input type='number' min='1' value='" . $item['quantity'] . "'></td>";
            echo "<td>₹" . number_format($subtotal, 2) . "</td>";
            echo "</tr>";
        }
        
        echo "</table>";
        echo "<p>Total Amount: ₹" . number_format($totalAmount, 2) . "</p>";
    }
}

// Function to remove item from cart
function removeFromCart($item_id) {
    $cart = $_SESSION['cart'];
    foreach ($cart as $key => $item) {
        if ($item['id'] == $item_id) {
            unset($cart[$key]);
            break;
        }
    }
    $_SESSION['cart'] = array_values($cart); // Re-index the array
}

// Function to clear all items from cart
function clearCart() {
    $_SESSION['cart'] = array();
}
?>



<?php
// Add item to cart
addToCart(1, 'Laptop', 999.99);

// Display cart contents
displayCart();

// Remove item from cart
removeFromCart(1);

// Clear all items from cart
clearCart();
?>


<?php
// Start the session
session_start();

// Initialize the cart if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add items to the cart
function addToCart($productId) {
    // Check if the product is already in the cart
    if (isset($_SESSION['cart'][$productId])) {
        // Increment quantity
        $_SESSION['cart'][$productId]['quantity']++;
    } else {
        // Add new item to the cart
        $item = array(
            'id' => $productId,
            'name' => getProductName($productId), // Replace with your product name retrieval method
            'price' => getProductPrice($productId), // Replace with your price retrieval method
            'quantity' => 1
        );
        $_SESSION['cart'][$productId] = $item;
    }
}

// Function to display cart contents
function displayCart() {
    if (empty($_SESSION['cart'])) {
        echo "Your cart is empty.";
        return;
    }

    foreach ($_SESSION['cart'] as $item) {
        echo "<div>";
        echo "<h3>" . $item['name'] . "</h3>";
        echo "<p>Price: $" . number_format($item['price'], 2) . "</p>";
        echo "<p>Quantity: " . $item['quantity'] . "</p>";
        echo "</div>";
    }
}

// Function to remove an item from the cart
function removeFromCart($productId) {
    if (isset($_SESSION['cart'][$productId])) {
        unset($_SESSION['cart'][$productId]);
    }
}

// Function to clear all items from the cart
function clearCart() {
    $_SESSION['cart'] = array();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <?php 
    // Example usage:
    
    // Add item to cart (replace with your product ID)
    if (isset($_GET['add'])) {
        addToCart($_GET['add']);
    }
    
    // Remove item from cart
    if (isset($_GET['remove'])) {
        removeFromCart($_GET['remove']);
    }
    
    // Clear cart
    if (isset($_GET['clear'])) {
        clearCart();
    }
    
    // Display cart contents
    displayCart();
    ?>

    <a href="?add=1">Add Product 1</a> |
    <a href="?add=2">Add Product 2</a> |
    <a href="?remove=1">Remove Product 1</a> |
    <a href="?clear">Clear Cart</a>
</body>
</html>


<?php
// Start the session
session_start();

// Initialize cart if not already set
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function addToCart($item_id, $quantity) {
    global $db; // Assuming you have a database connection
    
    // Get item details from database
    $query = "SELECT * FROM items WHERE id = $item_id";
    $result = mysqli_query($db, $query);
    
    if ($row = mysqli_fetch_assoc($result)) {
        $item = array(
            'id' => $row['id'],
            'name' => $row['name'],
            'price' => $row['price'],
            'quantity' => $quantity
        );
        
        $_SESSION['cart'][$item_id] = $item;
    }
}

// Function to update item quantity in cart
function updateCart($item_id, $quantity) {
    if (isset($_SESSION['cart'][$item_id])) {
        $_SESSION['cart'][$item_id]['quantity'] = $quantity;
    }
}

// Function to remove item from cart
function removeFromCart($item_id) {
    unset($_SESSION['cart'][$item_id]);
}

// Display cart contents
echo "<h2>Your Cart</h2>";
if (empty($_SESSION['cart'])) {
    echo "Your cart is empty.";
} else {
    echo "<ul>";
    foreach ($_SESSION['cart'] as $item) {
        echo "<li>" . $item['name'] . " - $" . number_format($item['price'], 2) . 
             " x " . $item['quantity'] . " = $" . number_format($item['price'] * $item['quantity'], 2) . 
             " <a href='?action=remove&id=" . $item['id'] . "'>Remove</a></li>";
    }
    echo "</ul>";
    
    // Calculate total price
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += $item['price'] * $item['quantity'];
    }
    echo "<h3>Total: $" . number_format($total, 2) . "</h3>";
}

// Handle actions
if (isset($_GET['action'])) {
    switch ($_GET['action']) {
        case 'add':
            if (isset($_POST['item_id']) && isset($_POST['quantity'])) {
                addToCart($_POST['item_id'], $_POST['quantity']);
            }
            break;
            
        case 'update':
            if (isset($_POST['item_id']) && isset($_POST['quantity'])) {
                updateCart($_POST['item_id'], $_POST['quantity']);
            }
            break;
            
        case 'remove':
            if (isset($_GET['id'])) {
                removeFromCart($_GET['id']);
            }
            break;
    }
}
?>


<?php
// Initialize the session
session_start();

// Check if cart is already set in the session, if not initialize it as an empty array
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add item to cart
function addToCart($productId, $quantity) {
    global $productPrices; // Assume this holds product prices

    // Check if product exists and quantity is valid
    if (isset($productPrices[$productId]) && $quantity > 0) {
        // Update the cart session
        $_SESSION['cart'][$productId] = array(
            'id' => $productId,
            'quantity' => $quantity
        );
        return true;
    }
    return false;
}

// Update item quantity in cart
function updateCart($productId, $quantity) {
    if (isset($_SESSION['cart'][$productId])) {
        // Update the quantity
        $_SESSION['cart'][$productId]['quantity'] = $quantity;
        return true;
    }
    return false;
}

// Remove item from cart
function removeItemFromCart($productId) {
    if (isset($_SESSION['cart'][$productId])) {
        unset($_SESSION['cart'][$productId]);
        // Re-index the array to maintain clean keys
        $_SESSION['cart'] = array_values($_SESSION['cart']);
        return true;
    }
    return false;
}

// Display cart contents
function displayCart() {
    if (!empty($_SESSION['cart'])) {
        echo "<h2>Shopping Cart</h2>";
        foreach ($_SESSION['cart'] as $item) {
            echo "Product ID: " . $item['id'] . "<br />";
            echo "Quantity: " . $item['quantity'] . "<br />";
            // You can add more details here based on your product data
        }
    } else {
        echo "<p>Your cart is empty.</p>";
    }
}

// Example usage:
if (isset($_GET['action'])) {
    switch ($_GET['action']) {
        case 'add':
            if (addToCart($_GET['productId'], $_GET['quantity'])) {
                echo "Item added to cart!";
            } else {
                echo "Error adding item.";
            }
            break;
            
        case 'update':
            if (updateCart($_GET['productId'], $_GET['quantity'])) {
                echo "Quantity updated!";
            } else {
                echo "Error updating quantity.";
            }
            break;

        case 'remove':
            if (removeItemFromCart($_GET['productId'])) {
                echo "Item removed from cart!";
            } else {
                echo "Error removing item.";
            }
            break;
    }
}

// Display the current cart
displayCart();

// End session
session_write_close();
?>


<?php
session_start();

// Initialize cart if not exists
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function add_to_cart($item_id, $item_name, $price) {
    global $conn;
    
    // Check if item already exists in cart
    if (isset($_SESSION['cart'][$item_id])) {
        // Increment quantity
        $_SESSION['cart'][$item_id]['quantity']++;
    } else {
        // Add new item to cart
        $_SESSION['cart'][$item_id] = array(
            'item_id' => $item_id,
            'name' => $item_name,
            'price' => $price,
            'quantity' => 1
        );
    }
}

// Function to remove item from cart
function remove_from_cart($item_id) {
    if (isset($_SESSION['cart'][$item_id])) {
        unset($_SESSION['cart'][$item_id]);
    }
}

// Function to update quantity of item in cart
function update_quantity($item_id, $quantity) {
    if ($quantity < 1) {
        remove_from_cart($item_id);
        return;
    }
    
    $_SESSION['cart'][$item_id]['quantity'] = $quantity;
}

// Function to display cart contents
function display_cart() {
    $total = 0;
    
    echo '<table>';
    echo '<tr><th>Item</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>';
    
    foreach ($_SESSION['cart'] as $item) {
        $item_total = $item['price'] * $item['quantity'];
        $total += $item_total;
        
        echo '<tr>';
        echo '<td>' . $item['name'] . '</td>';
        echo '<td>$' . number_format($item['price'], 2) . '</td>';
        echo '<td><input type="number" value="' . $item['quantity'] . '" onchange="updateQuantity(' . $item['item_id'] . ', this.value)"></td>';
        echo '<td>$' . number_format($item_total, 2) . '</td>';
        echo '<td><button onclick="removeItem(' . $item['item_id'] . ')">Remove</button></td>';
        echo '</tr>';
    }
    
    echo '<tr><td colspan="4"><strong>Total: $' . number_format($total, 2) . '</strong></td></tr>';
    echo '</table>';
}

// Example usage:
if (isset($_GET['action'])) {
    switch ($_GET['action']) {
        case 'add':
            add_to_cart(1, 'Product 1', 9.99);
            break;
        case 'remove':
            remove_from_cart(1);
            break;
        case 'update':
            update_quantity(1, $_GET['quantity']);
            break;
    }
}

?>


<?php
// Start the session
session_start();

// Initialize cart if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add item to cart
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get product ID and quantity from form
    $product_id = isset($_POST['product_id']) ? intval($_POST['product_id']) : 0;
    $quantity = isset($_POST['quantity']) ? intval($_POST['quantity']) : 1;

    // Add item to cart
    $_SESSION['cart'][$product_id] = array(
        'id' => $product_id,
        'name' => get_product_name($product_id),
        'price' => get_product_price($product_id),
        'quantity' => $quantity
    );

    // Redirect back to cart page
    header("Location: cart.php");
    exit();
}

// Remove item from cart
if (isset($_GET['remove'])) {
    $product_id = intval($_GET['remove']);
    unset($_SESSION['cart'][$product_id]);

    // Redirect back to cart page
    header("Location: cart.php");
    exit();
}

// Function to get product name from database
function get_product_name($id) {
    // Connect to database and fetch product name
    // This is a placeholder function - replace with actual database query
    return "Product " . $id;
}

// Function to get product price from database
function get_product_price($id) {
    // Connect to database and fetch product price
    // This is a placeholder function - replace with actual database query
    return 10.99;
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <h1>Your Shopping Cart</h1>

    <?php if (empty($_SESSION['cart'])): ?>
        <p>Your cart is empty.</p>
    <?php else: ?>

        <table>
            <tr>
                <th>Product</th>
                <th>Price</th>
                <th>Quantity</th>
                <th>Total</th>
                <th>Action</th>
            </tr>

            <?php foreach ($_SESSION['cart'] as $item): ?>
                <tr>
                    <td><?php echo $item['name']; ?></td>
                    <td>$<?php echo number_format($item['price'], 2); ?></td>
                    <td><?php echo $item['quantity']; ?></td>
                    <td>$<?php echo number_format($item['price'] * $item['quantity'], 2); ?></td>
                    <td><a href="cart.php?remove=<?php echo $item['id']; ?>">Remove</a></td>
                </tr>
            <?php endforeach; ?>

            <tr>
                <td colspan="4"><strong>Subtotal:</strong></td>
                <td>$<?php 
                    $subtotal = array_sum(array_map(function($item) {
                        return $item['price'] * $item['quantity'];
                    }, $_SESSION['cart']));
                    echo number_format($subtotal, 2);
                ?></td>
            </tr>
        </table>

    <?php endif; ?>

    <h3>Add Item to Cart</h3>
    <form action="cart.php" method="POST">
        <input type="text" name="product_id" placeholder="Enter product ID">
        <input type="number" name="quantity" value="1" min="1">
        <button type="submit">Add to Cart</button>
    </form>

    <p><a href="products.php">Continue Shopping</a> | <a href="checkout.php">Proceed to Checkout</a></p>
</body>
</html>


<?php
// Start the session
session_start();

// Check if cart exists in session, if not initialize it
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add items to the cart
function addToCart($productId, $productName, $price) {
    global $cart;
    
    // Create item array
    $item = array(
        'product_id' => $productId,
        'product_name' => $productName,
        'price' => $price,
        'quantity' => 1
    );
    
    // Check if item is already in cart
    $found = false;
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['product_id'] == $productId) {
            $item['quantity']++;
            $found = true;
            break;
        }
    }
    
    // If not found, add new item to cart
    if (!$found) {
        array_push($_SESSION['cart'], $item);
    }
    
    // Save the session data
    $_SESSION['cart'] = $cart;
}

// Function to display cart contents
function displayCart() {
    $total = 0;
    echo "<h2>Your Cart</h2>";
    echo "<ul>";
    
    foreach ($_SESSION['cart'] as $item) {
        echo "<li>" . $item['product_name'] . " - $" . number_format($item['price'], 2) . " x " . $item['quantity'];
        $total += ($item['price'] * $item['quantity']);
    }
    
    if (empty($_SESSION['cart'])) {
        echo "<li>Your cart is empty</li>";
    } else {
        echo "</ul>";
        echo "<h3>Total: $" . number_format($total, 2) . "</h3>";
    }
}

// Example usage:
// Add an item to the cart
addToCart(1, 'Laptop', 999.99);
addToCart(2, 'Phone', 499.99);

// Display cart contents
displayCart();

?>


<?php
session_start();
?>


$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "myDB";

// Create connection
$conn = new mysqli($servername, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}


if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}


function add_to_cart($item_id, $quantity) {
    global $conn; // Access the database connection

    // Check if the item exists in the database
    $sql = "SELECT * FROM products WHERE id = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("i", $item_id);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        // Check if the item is already in the cart
        if (isset($_SESSION['cart'][$item_id])) {
            $_SESSION['cart'][$item_id]['quantity'] += $quantity;
        } else {
            // Get product details
            $product = $result->fetch_assoc();
            $_SESSION['cart'][$item_id] = array(
                'name' => $product['name'],
                'price' => $product['price'],
                'quantity' => $quantity
            );
        }
    } else {
        // Item does not exist in the database
        return false;
    }

    return true;
}


function remove_from_cart($item_id) {
    if (isset($_SESSION['cart'][$item_id])) {
        unset($_SESSION['cart'][$item_id]);
        // Re-index the array keys
        $_SESSION['cart'] = array_values($_SESSION['cart']);
    }
}


function update_quantity($item_id, $quantity) {
    if (isset($_SESSION['cart'][$item_id])) {
        $_SESSION['cart'][$item_id]['quantity'] = $quantity;
    }
}


function display_cart() {
    if (!empty($_SESSION['cart'])) {
        echo "<table>";
        echo "<tr><th>Product</th><th>Price</th><th>Quantity</th><th>Total</th></tr>";
        foreach ($_SESSION['cart'] as $item) {
            $total = $item['price'] * $item['quantity'];
            echo "<tr>";
            echo "<td>{$item['name']}</td>";
            echo "<td>$$item[price]</td>";
            echo "<td>$item[quantity]</td>";
            echo "<td>$$total</td>";
            echo "</tr>";
        }
        echo "</table>";
    } else {
        echo "Your cart is empty.";
    }
}


// Add item to cart with ID 1 and quantity 2
add_to_cart(1, 2);

// Remove item from cart with ID 1
remove_from_cart(1);

// Update quantity of item with ID 1 to 3
update_quantity(1, 3);

// Display the contents of the cart
display_cart();


session_unset();
session_destroy();


<?php
// Start the session
session_start();

// Check if the cart exists in the session; if not, initialize it as an array
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Example product data (you can replace this with your database query)
$products = [
    1 => ['name' => 'Product 1', 'price' => 100],
    2 => ['name' => 'Product 2', 'price' => 200],
    3 => ['name' => 'Product 3', 'price' => 300]
];

// Add product to cart
if (isset($_POST['add_to_cart'])) {
    if (!empty($_POST['product_id']) && !empty($_POST['quantity'])) {
        $productId = $_POST['product_id'];
        $quantity = $_POST['quantity'];

        // Check if the product already exists in the cart
        if (isset($_SESSION['cart'][$productId])) {
            // Update quantity
            $_SESSION['cart'][$productId]['quantity'] += $quantity;
        } else {
            // Add new product to cart
            $_SESSION['cart'][$productId] = [
                'id' => $productId,
                'name' => $products[$productId]['name'],
                'price' => $products[$productId]['price'],
                'quantity' => $quantity
            ];
        }

        // Redirect back to the previous page after adding to cart
        header('Location: ' . $_SERVER['HTTP_REFERER']);
        exit();
    } else {
        echo "Please fill in all required fields!";
    }
}

// Display cart contents
echo "<h2>Shopping Cart</h2>";
echo "<table border='1'>";
echo "<tr><th>Product Name</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>";

foreach ($_SESSION['cart'] as $item) {
    $total = $item['price'] * $item['quantity'];
    echo "<tr>";
    echo "<td>{$item['name']}</td>";
    echo "<td>${$item['price']}</td>";
    echo "<td><input type='number' value='{$item['quantity']}'></td>";
    echo "<td>${$total}</td>";
    echo "<td><a href='remove_from_cart.php?id={$item['id']}'>Remove</a></td>";
    echo "</tr>";
}
echo "</table>";

// Example form to add products to cart
echo "<h2>Products</h2>";
foreach ($products as $id => $product) {
    echo "<form method='post' action='add_to_cart.php'>";
    echo "<input type='hidden' name='product_id' value='{$id}'>";
    echo "<input type='text' name='quantity' placeholder='Quantity'>";
    echo "<button type='submit' name='add_to_cart'>Add to Cart</button>";
    echo "</form>";
}
?>

<!-- remove_from_cart.php -->
<?php
session_start();
if (isset($_GET['id'])) {
    $productId = $_GET['id'];
    unset($_SESSION['cart'][$productId]);
    header('Location: ' . $_SERVER['HTTP_REFERER']);
    exit();
}
?>


<?php
// Start the session
session_start();

// Check if cart is set in the session, initialize if not
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add item to cart
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Sanitize input data
    $productId = htmlspecialchars($_POST['product_id']);
    $quantity = intval($_POST['quantity']);

    // Check if product already exists in the cart
    $found = false;
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['product_id'] == $productId) {
            $item['quantity'] += $quantity;
            $found = true;
            break;
        }
    }

    // If not found, add new product to cart
    if (!$found) {
        $_SESSION['cart'][] = array(
            'product_id' => $productId,
            'quantity' => $quantity
        );
    }

    // Redirect back to the cart page
    header("Location: cart.php");
    exit();
}

// Display cart contents
echo "<h2>Your Cart</h2>";
echo "<ul>";

foreach ($_SESSION['cart'] as $item) {
    echo "<li>Product ID: " . $item['product_id'] . ", Quantity: " . $item['quantity'];
    // Add a link to delete item from cart
    echo " <a href='delete_item.php?product_id=" . $item['product_id'] . "'>Delete</a></li>";
}

echo "</ul>";

// Example form to add items to the cart
echo "<h2>Add Item to Cart</h2>";
echo "<form method='post' action=''>";
echo "<input type='text' name='product_id' placeholder='Enter Product ID'>";
echo "<input type='number' name='quantity' placeholder='Enter Quantity'>";
echo "<button type='submit'>Add to Cart</button>";
echo "</form>";
?>


<?php
// Start the session
session_start();

// Function to add item to cart
function addToCart($productId, $productName, $price) {
    // Create unique identifier for each product
    $product = array(
        'id' => $productId,
        'name' => $productName,
        'price' => $price,
        'quantity' => 1
    );
    
    // Check if cart is not set or empty
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }
    
    // Check if product already exists in cart
    $found = false;
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['id'] == $productId) {
            $item['quantity']++;
            $found = true;
            break;
        }
    }
    
    // Add new product if not found
    if (!$found) {
        $_SESSION['cart'][] = $product;
    }
}

// Function to remove item from cart
function removeFromCart($productId) {
    if (isset($_SESSION['cart'])) {
        foreach ($_SESSION['cart'] as $key => &$item) {
            if ($item['id'] == $productId) {
                unset($_SESSION['cart'][$key]);
                break;
            }
        }
        // Re-index the array
        $_SESSION['cart'] = array_values($_SESSION['cart']);
    }
}

// Example usage:
if (isset($_GET['action'])) {
    switch ($_GET['action']) {
        case 'add':
            addToCart(1, "Product 1", 19.99);
            break;
        case 'remove':
            if (isset($_GET['id'])) {
                removeFromCart($_GET['id']);
            }
            break;
    }
}

// Display cart contents
echo "<h2>Your Shopping Cart</h2>";
if (!empty($_SESSION['cart'])) {
    echo "<table border='1'>";
    echo "<tr><th>Product Name</th><th>Price</th><th>Quantity</th><th>Action</th></tr>";
    foreach ($_SESSION['cart'] as $item) {
        echo "<tr>";
        echo "<td>{$item['name']}</td>";
        echo "<td>$" . number_format($item['price'], 2) . "</td>";
        echo "<td>{$item['quantity']}</td>";
        echo "<td><a href='?action=remove&id={$item['id']}'>Remove</a></td>";
        echo "</tr>";
    }
    echo "</table>";
} else {
    echo "Your cart is empty.";
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart Example</title>
</head>
<body>
    <!-- Add sample products -->
    <h2>Products</h2>
    <div class="product">
        <h3>Product 1</h3>
        <p>Price: $19.99</p>
        <a href="?action=add&id=1">Add to Cart</a>
    </div>
    
    <div class="product">
        <h3>Product 2</h3>
        <p>Price: $29.99</p>
        <a href="?action=add&id=2">Add to Cart</a>
    </div>
</body>
</html>


<?php
// Start the session
session_start();

// Initialize cart if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function addToCart($productId, $name, $price) {
    global $mysqli; // Assuming you have a database connection

    // Sanitize input
    $productId = mysqli_real_escape_string($mysqli, $productId);
    
    if (isset($_SESSION['cart'][$productId])) {
        // Item already exists in cart, increment quantity
        $_SESSION['cart'][$productId]['quantity']++;
    } else {
        // Add new item to cart
        $_SESSION['cart'][$productId] = array(
            'id' => $productId,
            'name' => $name,
            'price' => $price,
            'quantity' => 1
        );
    }
    
    // Update session data
    session_write_close();
}

// Function to remove item from cart
function removeFromCart($productId) {
    global $mysqli; // Assuming you have a database connection

    // Sanitize input
    $productId = mysqli_real_escape_string($mysqli, $productId);
    
    if (isset($_SESSION['cart'][$productId])) {
        // Remove the item or decrease quantity to 0
        $_SESSION['cart'][$productId]['quantity']--;
        
        // If quantity is zero, remove from cart completely
        if ($_SESSION['cart'][$productId]['quantity'] <= 0) {
            unset($_SESSION['cart'][$productId]);
        }
        
        // Update session data
        session_write_close();
    }
}

// Function to display cart contents
function displayCart() {
    if (!empty($_SESSION['cart'])) {
        echo "<table border='1'>";
        echo "<tr><th>Item</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>";
        
        foreach ($_SESSION['cart'] as $item) {
            $total = $item['price'] * $item['quantity'];
            echo "<tr>";
            echo "<td>" . $item['name'] . "</td>";
            echo "<td>₹" . number_format($item['price'], 2) . "</td>";
            echo "<td><input type='number' value='" . $item['quantity'] . "'></td>";
            echo "<td>₹" . number_format($total, 2) . "</td>";
            echo "<td><button onclick=\"removeFromCart('" . $item['id'] . "')\">Remove</button></td>";
            echo "</tr>";
        }
        
        echo "</table>";
    } else {
        echo "Your cart is empty!";
    }
}

// Example usage:
// addToCart(1, 'Product 1', 100);
// displayCart();

// Close session
session_write_close();
?>


<?php
session_start();
?>


if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}


// Example product data
$product_id = 1;
$product_name = "Product Name";
$product_price = 29.99;
$quantity = 1;

// Add to cart
if (!isset($_SESSION['cart'][$product_id])) {
    $_SESSION['cart'][$product_id] = array(
        'name' => $product_name,
        'price' => $product_price,
        'quantity' => $quantity
    );
} else {
    // If item already exists, increment quantity
    $_SESSION['cart'][$product_id]['quantity']++;
}


echo "<h2>Shopping Cart</h2>";
if (!empty($_SESSION['cart'])) {
    foreach ($_SESSION['cart'] as $item) {
        echo "Item: " . $item['name'] . "<br />";
        echo "Price: $" . number_format($item['price'], 2) . "<br />";
        echo "Quantity: " . $item['quantity'] . "<br />";
        echo "Total: $" . number_format($item['price'] * $item['quantity'], 2) . "<hr />";
    }
} else {
    echo "Your cart is empty.";
}


$total = 0;
foreach ($_SESSION['cart'] as $item) {
    $total += $item['price'] * $item['quantity'];
}
echo "Total: $" . number_format($total, 2);


// Example product ID to remove
$product_id_to_remove = 1;

if (isset($_SESSION['cart'][$product_id_to_remove])) {
    unset($_SESSION['cart'][$product_id_to_remove]);
}


<?php
session_start();

// Initialize cart if not exists
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add item to cart
if (isset($_GET['add'])) {
    $product_id = 1;
    $product_name = "Product Name";
    $product_price = 29.99;
    $quantity = 1;

    if (!isset($_SESSION['cart'][$product_id])) {
        $_SESSION['cart'][$product_id] = array(
            'name' => $product_name,
            'price' => $product_price,
            'quantity' => $quantity
        );
    } else {
        $_SESSION['cart'][$product_id]['quantity']++;
    }
}

// Remove item from cart
if (isset($_GET['remove'])) {
    $product_id_to_remove = 1;
    unset($_SESSION['cart'][$product_id_to_remove]);
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <!-- Add Item Button -->
    <a href="?add=1">Add Item to Cart</a><br>

    <!-- Display Cart -->
    <?php
    if (!empty($_SESSION['cart'])) {
        foreach ($_SESSION['cart'] as $item) {
            echo "Item: " . $item['name'] . "<br />";
            echo "Price: $" . number_format($item['price'], 2) . "<br />";
            echo "Quantity: " . $item['quantity'] . "<br />";
            echo "Subtotal: $" . number_format($item['price'] * $item['quantity'], 2) . "<br />";
            echo "<a href='?remove=" . $product_id . "'>Remove</a><hr />";
        }
    } else {
        echo "Your cart is empty.";
    }

    // Calculate Total
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += $item['price'] * $item['quantity'];
    }
    echo "<h3>Total: $" . number_format($total, 2) . "</h3>";
    ?>
</body>
</html>


<?php
session_start();

// Initialize cart if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add item to cart function
function add_to_cart($product_id, $product_name, $price) {
    global $Cart;
    
    // Check if product is already in the cart
    $found = false;
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['product_id'] == $product_id) {
            $item['quantity']++;
            $found = true;
            break;
        }
    }
    
    // If not found, add new product to cart
    if (!$found) {
        $_SESSION['cart'][] = array(
            'product_id' => $product_id,
            'product_name' => $product_name,
            'price' => $price,
            'quantity' => 1,
            'total_price' => $price * 1
        );
    }
    
    // Re-index the cart array to maintain sequential keys
    $_SESSION['cart'] = array_values($_SESSION['cart']);
}

// Display cart function
function display_cart() {
    if (empty($_SESSION['cart'])) {
        echo "Your cart is empty.";
        return;
    }
    
    $total_price = 0;
    foreach ($_SESSION['cart'] as $item) {
        echo "<div class='cart-item'>";
        echo "<h3>" . $item['product_name'] . "</h3>";
        echo "<p>Price: $" . number_format($item['price'], 2) . "</p>";
        echo "<p>Quantity: " . $item['quantity'] . "</p>";
        echo "<p>Total: $" . number_format($item['total_price'], 2) . "</p>";
        echo "</div>";
        $total_price += $item['total_price'];
    }
    
    // Calculate and display total
    $subtotal = $total_price;
    $tax = $subtotal * 0.08; // Assuming 8% tax rate
    $grand_total = $subtotal + $tax;
    
    echo "<div class='cart-total'>";
    echo "<p>Subtotal: $" . number_format($subtotal, 2) . "</p>";
    echo "<p>Tax: $" . number_format($tax, 2) . "</p>";
    echo "<p>Grand Total: $" . number_format($grand_total, 2) . "</p>";
    echo "</div>";
}

// Update quantity function
function update_quantity($index, $quantity) {
    if (isset($_SESSION['cart'][$index])) {
        $_SESSION['cart'][$index]['quantity'] = $quantity;
        $_SESSION['cart'][$index]['total_price'] = $_SESSION['cart'][$index]['price'] * $quantity;
    }
}

// Remove item from cart function
function remove_from_cart($index) {
    if (isset($_SESSION['cart'][$index])) {
        unset($_SESSION['cart'][$index]);
        // Re-index the cart array
        $_SESSION['cart'] = array_values($_SESSION['cart']);
    }
}

// Clear cart function
function clear_cart() {
    $_SESSION['cart'] = array();
}

// Calculate subtotal
function calculate_subtotal() {
    $subtotal = 0;
    foreach ($_SESSION['cart'] as $item) {
        $subtotal += $item['total_price'];
    }
    return $subtotal;
}

// Calculate tax
function calculate_tax($subtotal, $tax_rate = 0.08) {
    return $subtotal * $tax_rate;
}

// Calculate grand total
function calculate_grand_total() {
    $subtotal = calculate_subtotal();
    $tax = calculate_tax($subtotal);
    return $subtotal + $tax;
}
?>


add_to_cart(1, 'Product Name', 99.99);


display_cart();


if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    update_quantity($_POST['index'], $_POST['quantity']);
}


<?php
session_start(); // Start the session

// Initialize cart if not already exists
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function addToCart($item) {
    global $db; // Database connection
    
    // Check if product exists
    $query = "SELECT * FROM products WHERE id = ?";
    $stmt = $db->prepare($query);
    $stmt->execute(array($item['id']));
    
    if ($row = $stmt->fetch()) {
        $product = array(
            'id' => $item['id'],
            'name' => $row['name'],
            'price' => $row['price'],
            'quantity' => $item['quantity']
        );
        
        // Check if item already in cart
        if (isset($_SESSION['cart'][$product['id']])) {
            $_SESSION['cart'][$product['id']]['quantity'] += $product['quantity'];
        } else {
            $_SESSION['cart'][$product['id']] = $product;
        }
    }
}

// Function to remove item from cart
function removeFromCart($item_id) {
    if (isset($_SESSION['cart'][$item_id])) {
        unset($_SESSION['cart'][$item_id]);
        // Re-index the array
        $_SESSION['cart'] = array_values($_SESSION['cart']);
    }
}

// Function to display cart contents
function displayCart() {
    $output = '';
    
    if (empty($_SESSION['cart'])) {
        $output .= "<p>Your cart is empty!</p>";
    } else {
        $output .= "<table>
                        <tr>
                            <th>Product Name</th>
                            <th>Price</th>
                            <th>Quantity</th>
                            <th>Total</th>
                            <th>Action</th>
                        </tr>";
        
        foreach ($_SESSION['cart'] as $item) {
            $output .= "<tr>
                            <td>{$item['name']}</td>
                            <td>$".number_format($item['price'], 2)."</td>
                            <td><input type='number' value='{$item['quantity']}'></td>
                            <td>$".number_format($item['price'] * $item['quantity'], 2)."</td>
                            <td><button onclick=\"removeFromCart('{$item['id']}')\">Remove</button></td>
                        </tr>";
        }
        
        $output .= "</table>";
    }
    
    return $output;
}
?>


<?php
session_start();

// Initialize the cart if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function addToCart($productId, $productName, $productPrice) {
    global $db;
    
    // Check if product exists in database
    $query = "SELECT * FROM products WHERE id = ?";
    $stmt = $db->prepare($query);
    $stmt->bind_param("i", $productId);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows > 0) {
        // Check if item already exists in cart
        $found = false;
        foreach ($_SESSION['cart'] as &$item) {
            if ($item['product_id'] == $productId) {
                $found = true;
                $item['quantity']++;
                break;
            }
        }
        
        if (!$found) {
            // Add new item to cart
            $_SESSION['cart'][] = array(
                'product_id' => $productId,
                'product_name' => $productName,
                'product_price' => $productPrice,
                'quantity' => 1
            );
        }
    }
}

// Function to update quantity of an item in cart
function updateCart($productId, $newQuantity) {
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['product_id'] == $productId) {
            $item['quantity'] = $newQuantity;
            break;
        }
    }
}

// Function to remove item from cart
function removeFromCart($productId) {
    foreach ($_SESSION['cart'] as $key => $item) {
        if ($item['product_id'] == $productId) {
            unset($_SESSION['cart'][$key]);
            // Re-index the array
            $_SESSION['cart'] = array_values($_SESSION['cart']);
            break;
        }
    }
}

// Function to calculate total price of items in cart
function getCartTotal() {
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += ($item['product_price'] * $item['quantity']);
    }
    
    return number_format($total, 2); // Formatted to 2 decimal places
}

// Example usage:
addToCart(1, "Product Name", 19.99);

// Display cart contents and total
echo "<pre>";
print_r($_SESSION['cart']);
echo "</pre>";
echo "Total: $" . getCartTotal();

?>


<?php
session_start();

// Initialize cart if it doesn't exist yet
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function addToCart($productId, $name, $price) {
    global $message;
    
    // Check if product is already in the cart
    $found = false;
    foreach ($_SESSION['cart'] as $key => $item) {
        if ($item['product_id'] == $productId) {
            $_SESSION['cart'][$key]['quantity']++;
            $found = true;
            break;
        }
    }
    
    // If not found, add the product to cart
    if (!$found) {
        $item = array(
            'product_id' => $productId,
            'name' => $name,
            'price' => $price,
            'quantity' => 1
        );
        $_SESSION['cart'][] = $item;
        $message = "Product added to cart successfully!";
    } else {
        $message = "Quantity updated for product!";
    }
}

// Function to remove item from cart
function removeFromCart($productId) {
    foreach ($_SESSION['cart'] as $key => $item) {
        if ($item['product_id'] == $productId) {
            unset($_SESSION['cart'][$key]);
            break;
        }
    }
    // Re-index the array after removal
    $_SESSION['cart'] = array_values($_SESSION['cart']);
}

// Function to calculate total price of items in cart
function cartTotal() {
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += ($item['price'] * $item['quantity']);
    }
    return $total;
}

// Function to display items in the cart
function displayCartItems() {
    if (!empty($_SESSION['cart'])) {
        echo "<h3>Your Cart:</h3>";
        echo "<table border='1'>";
        foreach ($_SESSION['cart'] as $item) {
            echo "<tr>";
            echo "<td>" . $item['name'] . "</td>";
            echo "<td>Quantity: " . $item['quantity'] . "</td>";
            echo "<td>Price: $" . number_format($item['price'], 2) . "</td>";
            echo "<td><a href='remove_from_cart.php?product_id=" . $item['product_id'] . "'>Remove</a></td>";
            echo "</tr>";
        }
        echo "</table>";
        echo "<p>Total: $" . number_format(cartTotal(), 2) . "</p>";
    } else {
        echo "<p>Your cart is empty!</p>";
    }
}

// Example usage:
if (isset($_POST['add_to_cart'])) {
    $productId = $_POST['product_id'];
    $name = $_POST['name'];
    $price = $_POST['price'];
    addToCart($productId, $name, $price);
}

displayCartItems();
?>


<?php
// Start the session
session_start();

// Check if session is not set, initialize it
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function addToCart($productId, $productName, $productPrice, $quantity) {
    global $mysqli; // Assuming you have a database connection

    // Check if product exists in the database
    $stmt = $mysqli->prepare("SELECT * FROM products WHERE id = ?");
    $stmt->bind_param('i', $productId);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        // Check if item is already in cart
        if (isset($_SESSION['cart'][$productId])) {
            $_SESSION['cart'][$productId]['quantity'] += $quantity;
        } else {
            $_SESSION['cart'][$productId] = array(
                'product_id' => $productId,
                'product_name' => $productName,
                'price' => $productPrice,
                'quantity' => $quantity
            );
        }
    }
}

// Function to remove item from cart
function removeFromCart($productId) {
    if (isset($_SESSION['cart'][$productId])) {
        unset($_SESSION['cart'][$productId]);
    }
}

// Function to update quantity of an item in the cart
function updateQuantity($productId, $newQuantity) {
    if (isset($_SESSION['cart'][$productId]) && is_numeric($newQuantity)) {
        $_SESSION['cart'][$productId]['quantity'] = $newQuantity;
    }
}

// Display items in cart
echo "<h2>Your Cart</h2>";
if (empty($_SESSION['cart'])) {
    echo "Your cart is empty!";
} else {
    echo "<table border='1'>";
    echo "<tr><th>Product Name</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>";
    foreach ($_SESSION['cart'] as $item) {
        $total = $item['price'] * $item['quantity'];
        echo "<tr>";
        echo "<td>{$item['product_name']}</td>";
        echo "<td>$$item[price]</td>";
        echo "<td><input type='number' name='quantity' value='{$item['quantity']}'></td>";
        echo "<td>$$total</td>";
        echo "<td><form action='' method='post'><button type='submit' name='remove_item' value='{$item['product_id']}'>Remove</button></form></td>";
        echo "</tr>";
    }
    echo "</table>";
}

// Handle form actions
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    if (isset($_POST['add_to_cart'])) {
        // Add item to cart logic here
    } elseif (isset($_POST['remove_item'])) {
        $productId = $_POST['remove_item'];
        removeFromCart($productId);
    }
}

// Calculate total price
$totalPrice = 0;
foreach ($_SESSION['cart'] as $item) {
    $totalPrice += $item['price'] * $item['quantity'];
}
echo "<h3>Total Price: $$totalPrice</h3>";

// Example usage:
// addToCart(1, 'Product 1', 29.99, 2);
// removeFromCart(1);
// updateQuantity(1, 5);

?>


<?php
session_start();
// Set some security options for the session
ini_set('session.cookie_lifetime', 3600); // Cookie will expire in one hour
ini_set('session.use_strict_mode', 1); // Use strict mode to enhance security
?>


<?php
// Check if session is already started
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Shopping Cart</title>
    <!-- Include Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
</head>
<body class="bg-light">
<div class="container mt-4">
    <h2 class="mb-4">Shopping Cart</h2>

    <!-- Add to Cart Form -->
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post" class="mb-4">
        <div class="row">
            <div class="col-md-6 mb-3">
                <label for="product_name" class="form-label">Product Name</label>
                <input type="text" name="product_name" id="product_name" required class="form-control">
            </div>
            <div class="col-md-6 mb-3">
                <label for="price" class="form-label">Price</label>
                <input type="number" step="0.01" name="price" id="price" required class="form-control">
            </div>
        </div>
        <button type="submit" name="add_to_cart" class="btn btn-primary">Add to Cart</button>
    </form>

    <!-- Display Cart Contents -->
    <?php
    if (isset($_POST['add_to_cart'])) {
        // Validate input data
        $product_name = isset($_POST['product_name']) ? $_POST['product_name'] : '';
        $price = isset($_POST['price']) ? $_POST['price'] : 0;

        if ($product_name && is_numeric($price)) {
            // Add item to cart
            $item = array(
                'id' => count($_SESSION['cart']) + 1,
                'name' => $product_name,
                'price' => $price,
                'quantity' => 1
            );

            $_SESSION['cart'][] = $item;
        }
    }

    // Display cart contents
    if (!empty($_SESSION['cart'])) {
        echo '<table class="table table-striped">
                <thead>
                    <tr>
                        <th>Product ID</th>
                        <th>Product Name</th>
                        <th>Price</th>
                        <th>Quantity</th>
                        <th>Total</th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tbody>';
        $total = 0;
        foreach ($_SESSION['cart'] as $item) {
            $subtotal = $item['price'] * $item['quantity'];
            $total += $subtotal;

            echo '<tr>
                        <td>' . $item['id'] . '</td>
                        <td>' . $item['name'] . '</td>
                        <td>$' . number_format($item['price'], 2) . '</td>
                        <td>' . $item['quantity'] . '</td>
                        <td>$' . number_format($subtotal, 2) . '</td>
                        <td><a href="remove_item.php?id=' . $item['id'] . '" class="btn btn-danger">Remove</a></td>
                    </tr>';
        }
        echo '</tbody></table>';
        echo '<h3>Total: $' . number_format($total, 2) . '</h3>';
    } else {
        echo '<p>Your cart is empty.</p>';
    }
    ?>

    <!-- Logout Button -->
    <form action="logout.php" method="post">
        <button type="submit" class="btn btn-danger">Logout</button>
    </form>
</div>

<!-- Include Bootstrap JS -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>


<?php
session_start();
if (isset($_GET['id'])) {
    $id = $_GET['id'];
    
    // Loop through cart and remove the item with matching ID
    foreach ($_SESSION['cart'] as $key => $item) {
        if ($item['id'] == $id) {
            unset($_SESSION['cart'][$key]);
        }
    }

    // Re-index the array after deletion
    $_SESSION['cart'] = array_values($_SESSION['cart']);
    
    header('Location: cart.php');
    exit();
}
?>


<?php
session_start();
// Unset all session variables
$_SESSION = array();

// If it's desired to delete the cookies as well, uncomment the following lines:
// if (ini_get("session.use_cookies")) {
//     $params = session_get_cookie_params();
//     setcookie(session_name(), '', time() - 42000,
//         $params["path"], $params["domain"],
//         $params["secure"], $params["httponly"]
//     );
// }

// Destroy the session
session_destroy();

header('Location: cart.php');
exit();
?>


<?php
// Start the session
session_start();

// Check if cart exists in the session. If not, initialize it
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Get product ID from query string (you should filter and validate this)
$product_id = isset($_GET['product_id']) ? intval($_GET['product_id']) : 0;

// Add the product to cart
if ($product_id > 0) {
    // Check if product already exists in cart
    if (isset($_SESSION['cart'][$product_id])) {
        // Increment quantity
        $_SESSION['cart'][$product_id]['quantity']++;
    } else {
        // Add new product to cart
        $_SESSION['cart'][$product_id] = array(
            'id' => $product_id,
            'quantity' => 1
        );
    }

    // Redirect back to the products page or wherever you came from
    header('Location: products.php');
    exit;
}

// Display the cart contents
echo "<h2>Your Cart</h2>";
if (empty($_SESSION['cart'])) {
    echo "Your cart is empty.";
} else {
    foreach ($_SESSION['cart'] as $item) {
        echo "Product ID: " . $item['id'] . ", Quantity: " . $item['quantity'] . "<br />";
    }
}

// You might want to add links to modify the cart or checkout
echo "<p><a href='products.php'>Continue Shopping</a></p>";
?>



<?php
// Initialize the session
session_start();

// Set default timezone (required for sessions)
date_default_timezone_set('UTC');

// Check if cart exists in the session, if not, initialize it
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function addToCart($productId, $quantity) {
    global $mysqli; // Database connection

    // Check if product is already in cart
    foreach ($_SESSION['cart'] as $item) {
        if ($item['product_id'] == $productId) {
            $index = array_search($item, $_SESSION['cart']);
            $_SESSION['cart'][$index]['quantity'] += $quantity;
            return true;
        }
    }

    // Query database for product information
    $stmt = $mysqli->prepare("SELECT * FROM products WHERE id = ?");
    $stmt->bind_param('i', $productId);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        $product = $result->fetch_assoc();
        $_SESSION['cart'][] = array(
            'product_id' => $productId,
            'quantity' => $quantity,
            'price' => $product['price'],
            'name' => $product['name']
        );
    }
}

// Function to update cart
function updateCart($updatedItems) {
    $_SESSION['cart'] = array();
    
    foreach ($updatedItems as $item) {
        if (isset($item['quantity']) && is_numeric($item['quantity'])) {
            $_SESSION['cart'][] = array(
                'product_id' => $item['product_id'],
                'quantity' => $item['quantity'],
                'price' => $item['price'],
                'name' => $item['name']
            );
        }
    }
}

// Function to remove item from cart
function removeFromCart($productId) {
    foreach ($_SESSION['cart'] as $key => $item) {
        if ($item['product_id'] == $productId) {
            unset($_SESSION['cart'][$key]);
            $_SESSION['cart'] = array_values($_SESSION['cart']);
        }
    }
}

// Display cart contents
function displayCart() {
    $totalPrice = 0;
    foreach ($_SESSION['cart'] as $item) {
        $totalPrice += $item['price'] * $item['quantity'];
?>
    <div class="cart-item">
        <h3><?php echo $item['name']; ?></h3>
        <p>Quantity: <?php echo $item['quantity']; ?></p>
        <p>Price: <?php echo "$" . number_format($item['price'], 2); ?></p>
        <a href="remove-item.php?id=<?php echo $item['product_id']; ?>">Remove</a>
    </div>
<?php
    }
    return $totalPrice;
}

// Example usage in HTML
?>
<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <!-- Add item form -->
    <form action="add-item.php" method="post">
        <input type="hidden" name="product_id" value="<?php echo $productId; ?>">
        <input type="number" name="quantity" min="1" value="1">
        <button type="submit">Add to Cart</button>
    </form>

    <!-- Display cart -->
    <?php
    if (!empty($_SESSION['cart'])) {
        $total = displayCart();
    ?>
        <div class="total-price">
            Total: <?php echo "$" . number_format($total, 2); ?>
        </div>
    <?php
    } else {
        echo "Your cart is empty.";
    }
    ?>

</body>
</html>

<?php
// Remember to close the database connection if you opened one
if (isset($mysqli)) {
    $mysqli->close();
}
?>


<?php
// Start the session
session_start();

// Function to add item to cart
function add_to_cart($item_id, $item_name, $price) {
    // Create an array for the item
    $item = array(
        'id' => $item_id,
        'name' => $item_name,
        'price' => $price,
        'quantity' => 1
    );
    
    // Check if cart session is set
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }
    
    // Loop through the cart to check for existing items
    $item_exists = false;
    foreach ($_SESSION['cart'] as &$cart_item) {
        if ($cart_item['id'] == $item_id) {
            $cart_item['quantity']++;
            $item_exists = true;
            break;
        }
    }
    
    // Add the item if it doesn't exist in the cart
    if (!$item_exists) {
        $_SESSION['cart'][] = $item;
    }
}

// Function to remove item from cart
function remove_from_cart($item_id) {
    // Check if cart session is set and not empty
    if (isset($_SESSION['cart']) && count($_SESSION['cart']) > 0) {
        // Loop through the cart to find the item
        foreach ($_SESSION['cart'] as $key => &$cart_item) {
            if ($cart_item['id'] == $item_id) {
                unset($_SESSION['cart'][$key]);
                break;
            }
        }
        
        // Re-index the array keys
        $_SESSION['cart'] = array_values($_SESSION['cart']);
    }
}

// Function to update item quantity in cart
function update_quantity($item_id, $new_quantity) {
    // Check if cart session is set and not empty
    if (isset($_SESSION['cart']) && count($_SESSION['cart']) > 0) {
        foreach ($_SESSION['cart'] as &$cart_item) {
            if ($cart_item['id'] == $item_id) {
                if ($new_quantity <= 0) {
                    remove_from_cart($item_id);
                } else {
                    $cart_item['quantity'] = $new_quantity;
                }
                break;
            }
        }
    }
}

// Function to display cart contents
function display_cart() {
    // Check if cart session is set and not empty
    if (isset($_SESSION['cart']) && count($_SESSION['cart']) > 0) {
        echo "<table>";
        echo "<tr><th>Item Name</th><th>Price</th><th>Quantity</th><th>Action</th></tr>";
        
        $total = 0;
        foreach ($_SESSION['cart'] as $item) {
            $subtotal = $item['price'] * $item['quantity'];
            $total += $subtotal;
            
            echo "<tr>";
            echo "<td>" . $item['name'] . "</td>";
            echo "<td>$" . number_format($item['price'], 2) . "</td>";
            echo "<td><input type='number' value='" . $item['quantity'] . "' onchange='updateQuantity(" . $item['id'] . ", this.value);'></td>";
            echo "<td><button onclick='removeItem(" . $item['id'] . ");'>Remove</button></td>";
            echo "</tr>";
        }
        
        echo "<tr><th colspan='3'>Total:</th><td>$" . number_format($total, 2) . "</td></tr>";
        echo "</table>";
    } else {
        echo "Your cart is empty.";
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
    <script type="text/javascript">
        function updateQuantity(item_id, quantity) {
            if (quantity > 0) {
                // Make an AJAX call to update the quantity
                alert('Updating quantity...');
            } else {
                removeItem(item_id);
            }
        }

        function removeItem(item_id) {
            // Make an AJAX call to remove the item
            alert('Removing item...');
        }
    </script>
</head>
<body>
    <?php
    // Add some test items to the cart
    add_to_cart(1, "Laptop", 999.99);
    add_to_cart(2, "Phone", 499.99);
    
    // Display the cart
    display_cart();
    ?>
</body>
</html>


<?php
// Start the session
session_start();

// Initialize cart if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function addToCart($productId, $quantity) {
    global $products; // Assuming $products is an array containing product details
    
    if ($quantity <= 0) {
        return false;
    }
    
    if (isset($_SESSION['cart'][$productId])) {
        $_SESSION['cart'][$productId] += $quantity;
    } else {
        $_SESSION['cart'][$productId] = $quantity;
    }
    
    return true;
}

// Function to remove item from cart
function removeFromCart($productId) {
    if (isset($_SESSION['cart'][$productId])) {
        unset($_SESSION['cart'][$productId]);
        // Re-index the array to maintain clean keys
        $_SESSION['cart'] = array_values($_SESSION['cart']);
        return true;
    }
    
    return false;
}

// Function to display cart items
function displayCart() {
    if (empty($_SESSION['cart'])) {
        echo "<p>Your cart is empty.</p>";
        return;
    }
    
    $cart = $_SESSION['cart'];
    $products = array(
        1 => ['name' => 'Product A', 'price' => 10.00],
        2 => ['name' => 'Product B', 'price' => 20.00],
        3 => ['name' => 'Product C', 'price' => 30.00]
    );
    
    echo "<table border='1'>";
    echo "<tr><th>Product Name</th><th>Quantity</th><th>Price</th></tr>";
    foreach ($cart as $productId => $quantity) {
        if (isset($products[$productId])) {
            $product = $products[$productId];
            echo "<tr>";
            echo "<td>{$product['name']}</td>";
            echo "<td>{$quantity}</td>";
            echo "<td>$" . number_format($product['price'] * $quantity, 2) . "</td>";
            echo "</tr>";
        }
    }
    echo "</table>";
    
    // Calculate and display total
    $total = calculateTotal();
    echo "<p>Total: $" . number_format($total, 2) . "</p>";
}

// Function to calculate cart total
function calculateTotal() {
    $cart = $_SESSION['cart'];
    $products = array(
        1 => ['name' => 'Product A', 'price' => 10.00],
        2 => ['name' => 'Product B', 'price' => 20.00],
        3 => ['name' => 'Product C', 'price' => 30.00]
    );
    
    $total = 0;
    foreach ($cart as $productId => $quantity) {
        if (isset($products[$productId])) {
            $total += $products[$productId]['price'] * $quantity;
        }
    }
    
    return $total;
}

// Example usage:
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    if (isset($_POST['action'])) {
        switch ($_POST['action']) {
            case 'add':
                if (isset($_POST['productId'], $_POST['quantity'])) {
                    addToCart((int)$_POST['productId'], (int)$_POST['quantity']);
                }
                break;
                
            case 'remove':
                if (isset($_POST['productId'])) {
                    removeFromCart((int)$_POST['productId']);
                }
                break;
        }
    }
}

?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>

<h2>Add Item to Cart</h2>
<form method="post" action="">
    <input type="hidden" name="action" value="add">
    Product ID: <input type="number" name="productId" required><br>
    Quantity: <input type="number" name="quantity" min="1" required><br>
    <button type="submit">Add to Cart</button>
</form>

<h2>Remove Item from Cart</h2>
<form method="post" action="">
    <input type="hidden" name="action" value="remove">
    Product ID: <input type="number" name="productId" required><br>
    <button type="submit">Remove from Cart</button>
</form>

<h2>Current Cart</h2>
<?php displayCart(); ?>

</body>
</html>


<?php
session_start();
?>


<?php
session_start();
include('db_connection.php');

if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

$product_id = intval($_POST['product_id']);

foreach ($_SESSION['cart'] as $key => $item) {
    if ($item['id'] == $product_id) {
        $_SESSION['cart'][$key]['quantity']++;
        die("Item added successfully");
    }
}

$item_array = array(
    'id' => $product_id,
    'quantity' => 1
);

$_SESSION['cart'][] = $item_array;
die("Item added successfully");
?>


<?php
session_start();
include('db_connection.php');

$total = 0;

echo "<h2>Shopping Cart</h2>";
echo "<form action='update_quantity.php' method='post'>";
echo "<table border='1'>";
echo "<tr><th>Product Name</th><th>Price</th><th>Quantity</th><th>Action</th></tr>";

foreach ($_SESSION['cart'] as $key => $item) {
    $result = mysqli_query($conn, "SELECT * FROM products WHERE id='" . $item['id'] . "'");
    while ($row = mysqli_fetch_array($result)) {
        echo "<tr>";
        echo "<td>" . $row['name'] . "</td>";
        echo "<td>₹" . $row['price'] . "</td>";
        echo "<td><input type='number' name='quantity[" . $item['id'] . "]' value='" . $item['quantity'] . "' min='1'></td>";
        echo "<td><button type='submit'>Update</button> <a href='remove_item.php?id=" . $item['id'] . "'>Remove</a></td>";
        echo "</tr>";
        $total += ($row['price'] * $item['quantity']);
    }
}

echo "</table>";
echo "<h3>Total: ₹" . $total . "</h3>";
echo "</form>";
?>


<?php
session_start();

foreach ($_POST['quantity'] as $id => $qty) {
    foreach ($_SESSION['cart'] as $key => $item) {
        if ($item['id'] == $id) {
            $_SESSION['cart'][$key]['quantity'] = $qty;
            if ($qty < 1) {
                unset($_SESSION['cart'][$key]);
            }
        }
    }
}

header("Location: display_cart.php");
?>


<?php
session_start();

foreach ($_SESSION['cart'] as $key => $item) {
    if ($item['id'] == $_GET['id']) {
        unset($_SESSION['cart'][$key]);
    }
}

header("Location: display_cart.php");
?>


<?php
$servername = "localhost";
$username = "root";
$password = "";
$dbname = "my_shopping";

$conn = mysqli_connect($servername, $username, $password, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}
?>


<?php
session_start();
?>


$servername = "localhost";
$username = "your_username";
$password = "your_password";
$dbname = "your_database";

// Create connection
$conn = mysqli_connect($servername, $username, $password, $dbname);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}


$sql = "CREATE TABLE IF NOT EXISTS cart (
id INT AUTO_INCREMENT PRIMARY KEY,
product_id INT NOT NULL,
quantity INT DEFAULT 1,
user_id INT NOT NULL
)";

if (mysqli_query($conn, $sql)) {
    // Table created successfully
} else {
    echo "Error creating table: " . mysqli_error($conn);
}


if ($_SERVER["REQUEST_METHOD"] == "POST") {
    if (!empty($_POST['product_id'])) {
        $productId = $_POST['product_id'];
        
        // Check if the item is already in the cart
        $checkSql = "SELECT * FROM cart WHERE product_id = ? AND user_id = ?";
        $stmt = mysqli_prepare($conn, $checkSql);
        mysqli_stmt_bind_param($stmt, "ii", $productId, $_SESSION['id']);
        
        mysqli_stmt_execute($stmt);
        $result = mysqli_stmt_get_result($stmt);
        
        if (mysqli_num_rows($result) > 0) {
            // Item already exists in cart, increment quantity
            $updateSql = "UPDATE cart SET quantity = quantity + 1 WHERE product_id = ? AND user_id = ?";
            $stmt = mysqli_prepare($conn, $updateSql);
            mysqli_stmt_bind_param($stmt, "ii", $productId, $_SESSION['id']);
            
            mysqli_stmt_execute($stmt);
        } else {
            // Add new item to cart
            $insertSql = "INSERT INTO cart (product_id, quantity, user_id) VALUES (?, 1, ?)";
            $stmt = mysqli_prepare($conn, $insertSql);
            mysqli_stmt_bind_param($stmt, "ii", $productId, $_SESSION['id']);
            
            mysqli_stmt_execute($stmt);
        }
        
        // Close statement
        mysqli_stmt_close($stmt);
    }
}


$sql = "SELECT * FROM cart WHERE user_id = ?";
$stmt = mysqli_prepare($conn, $sql);
mysqli_stmt_bind_param($stmt, "i", $_SESSION['id']);
mysqli_stmt_execute($stmt);
$result = mysqli_stmt_get_result($stmt);

$cartItems = array();
while ($row = mysqli_fetch_assoc($result)) {
    $cartItems[] = $row;
}


foreach ($cartItems as $item) {
    echo "Product ID: " . $item['product_id'] . "<br>";
    echo "Quantity: " . $item['quantity'] . "<br><br>";
}


if ($_SERVER["REQUEST_METHOD"] == "POST") {
    if (isset($_POST['clear'])) {
        $deleteSql = "DELETE FROM cart WHERE user_id = ?";
        $stmt = mysqli_prepare($conn, $deleteSql);
        mysqli_stmt_bind_param($stmt, "i", $_SESSION['id']);
        
        mysqli_stmt_execute($stmt);
        
        // Close statement
        mysqli_stmt_close($stmt);
    }
}


mysqli_close($conn);
?>


<?php
// Start the session
session_start();

// Initialize cart if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add item to cart
function addToCart($item_id, $item_name, $price) {
    // Check if item already exists in cart
    if (isset($_SESSION['cart'][$item_id])) {
        // Increment quantity
        $_SESSION['cart'][$item_id]['quantity']++;
    } else {
        // Add new item
        $_SESSION['cart'][$item_id] = array(
            'id' => $item_id,
            'name' => $item_name,
            'price' => $price,
            'quantity' => 1
        );
    }
}

// Remove item from cart
function removeFromCart($item_id) {
    if (isset($_SESSION['cart'][$item_id])) {
        unset($_SESSION['cart'][$item_id]);
    }
}

// Display cart contents
function displayCart() {
    $total = 0;
    
    echo "<h2>Your Cart</h2>";
    echo "<table border='1'>";
    echo "<tr><th>Item Name</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>";
    
    foreach ($_SESSION['cart'] as $item) {
        $subtotal = $item['price'] * $item['quantity'];
        $total += $subtotal;
        
        echo "<tr>";
        echo "<td>" . $item['name'] . "</td>";
        echo "<td>₹" . number_format($item['price'], 2) . "</td>";
        echo "<td><input type='number' value='" . $item['quantity'] . "' style='width:50px'></td>";
        echo "<td>₹" . number_format($subtotal, 2) . "</td>";
        echo "<td><a href='?remove=" . $item['id'] . "'>Remove</a></td>";
        echo "</tr>";
    }
    
    echo "<tr><td colspan='4'><strong>Total:</strong></td><td>₹" . number_format($total, 2) . "</td></tr>";
    echo "</table>";
}

// Handle item removal
if (isset($_GET['remove'])) {
    removeFromCart($_GET['remove']);
}

// Add sample items to cart if cart is empty
if (empty($_SESSION['cart'])) {
    addToCart(1, "Laptop", 999.99);
    addToCart(2, "Phone", 499.99);
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
    <style>
        body { font-family: Arial, sans-serif; }
        table { width: 80%; margin: 20px auto; }
        th, td { padding: 10px; text-align: left; }
        input[type='number'] { padding: 3px; }
    </style>
</head>
<body>
<?php displayCart(); ?>

<h2>Add Item to Cart</h2>
<form action="" method="post">
    <input type="text" name="item_id" placeholder="Item ID" required><br>
    <input type="text" name="item_name" placeholder="Item Name" required><br>
    <input type="number" name="price" step="0.01" placeholder="Price" required><br>
    <button type="submit">Add to Cart</button>
</form>

<?php
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $item_id = $_POST['item_id'];
    $item_name = $_POST['item_name'];
    $price = $_POST['price'];
    
    addToCart($item_id, $item_name, $price);
}
?>
</body>
</html>


<?php
session_start();

// Initialize cart if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add item to cart
if (isset($_POST['add_to_cart'])) {
    $productId = isset($_POST['product_id']) ? intval($_POST['product_id']) : 0;
    $productName = isset($_POST['product_name']) ? $_POST['product_name'] : 'Product';
    
    // Create a new item array
    $item = array(
        'id' => $productId,
        'name' => $productName,
        'quantity' => 1
    );
    
    // Add the item to the cart
    $_SESSION['cart'][] = $item;
    
    // Redirect to avoid form resubmission
    header('Location: cart.php');
    exit();
}

// Remove item from cart
if (isset($_GET['remove'])) {
    $itemId = intval($_GET['remove']);
    
    // Check if the cart is not empty
    if (!empty($_SESSION['cart'])) {
        foreach ($_SESSION['cart'] as $key => $item) {
            if ($item['id'] == $itemId) {
                unset($_SESSION['cart'][$key]);
                break;
            }
        }
        // Re-index the array keys
        $_SESSION['cart'] = array_values($_SESSION['cart']);
    }
    
    // Redirect to avoid resubmission
    header('Location: cart.php');
    exit();
}

// Display cart contents
echo "<h2>Shopping Cart</h2>";
if (empty($_SESSION['cart'])) {
    echo "Your cart is empty.";
} else {
    echo "<ul>";
    foreach ($_SESSION['cart'] as $item) {
        echo "<li>" . $item['name'] . " (Quantity: " . $item['quantity'] . ") ";
        // Add a link to remove the item
        echo "<a href='cart.php?remove=" . $item['id'] . "'>Remove</a></li>";
    }
    echo "</ul>";
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart Example</title>
</head>
<body>
    <?php include 'product_list.php'; ?>
</body>
</html>


<?php
// Initialize session
session_start();

// Check if session exists or not
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function addToCart($productId, $name, $price) {
    global $connection; // Assuming you have a database connection

    // Get product details from database (you can modify this according to your database structure)
    $product = getProductDetails($productId);

    if ($product) {
        $item = array(
            'id' => $product['id'],
            'name' => $product['name'],
            'price' => $product['price'],
            'quantity' => 1
        );

        // Check if item already exists in cart
        $cartItemIndex = -1;
        foreach ($_SESSION['cart'] as $index => $item) {
            if ($item['id'] == $productId) {
                $cartItemIndex = $index;
                break;
            }
        }

        if ($cartItemIndex != -1) {
            // If item exists, increase quantity
            $_SESSION['cart'][$cartItemIndex]['quantity']++;
        } else {
            // Add new item to cart
            array_push($_SESSION['cart'], $item);
        }
    }
}

// Function to get product details from database
function getProductDetails($productId) {
    global $connection;

    $query = "SELECT id, name, price FROM products WHERE id = ?";
    $stmt = $connection->prepare($query);
    $stmt->bind_param("i", $productId);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        return $result->fetch_assoc();
    }

    return false;
}

// Function to display cart
function displayCart() {
    if (isset($_SESSION['cart']) && count($_SESSION['cart']) > 0) {
        echo "<table>";
        echo "<tr><th>Item</th><th>Quantity</th><th>Price</th><th>Action</th></tr>";

        foreach ($_SESSION['cart'] as $index => $item) {
            echo "<tr>";
            echo "<td>" . $item['name'] . "</td>";
            echo "<td><input type='number' value='" . $item['quantity'] . "' min='1' onchange='updateQuantity(" . $item['id'] . ", this.value)'></td>";
            echo "<td>$$item[price]</td>";
            echo "<td><button onclick='removeFromCart(" . $item['id'] . ")'>Remove</button></td>";
            echo "</tr>";
        }

        // Calculate total price
        $total = 0;
        foreach ($_SESSION['cart'] as $item) {
            $total += ($item['price'] * $item['quantity']);
        }
        echo "<tr><td colspan='3'>Total: $$total</td></tr>";

        echo "</table>";
    } else {
        echo "Your cart is empty.";
    }
}

// Function to update quantity
function updateQuantity($productId, $newQuantity) {
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['id'] == $productId) {
            $item['quantity'] = $newQuantity;
            break;
        }
    }
}

// Function to remove item from cart
function removeFromCart($productId) {
    foreach ($_SESSION['cart'] as $index => $item) {
        if ($item['id'] == $productId) {
            unset($_SESSION['cart'][$index]);
            // Re-index array
            $_SESSION['cart'] = array_values($_SESSION['cart']);
            break;
        }
    }
}

// Function to calculate total price
function calculateTotal() {
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += ($item['price'] * $item['quantity']);
    }
    return $total;
}
?>


<?php
session_start();

if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

if ($_SERVER["REQUEST_METHOD"] == "POST" && isset($_POST['add_to_cart'])) {
    $productId = $_POST['product_id'];
    
    $added = false;
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['id'] == $productId) {
            $item['quantity']++;
            $added = true;
            break;
        }
    }
    
    if (!$added) {
        $_SESSION['cart'][] = array('id' => $productId, 'quantity' => 1);
    }
}

echo "<h2>Shopping Cart</h2>";
if (empty($_SESSION['cart'])) {
    echo "Your cart is empty.";
} else {
    foreach ($_SESSION['cart'] as $item) {
        echo "Product ID: " . $item['id'] . ", Quantity: " . $item['quantity'] . "<br/>";
    }
}
?>


<?php
session_start();

// Initialize cart if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function add_to_cart($item_id, $item_name, $price) {
    global $db; // Assuming you have a database connection

    // Check if item is already in the cart
    foreach ($_SESSION['cart'] as $key => $item) {
        if ($item['id'] == $item_id) {
            $_SESSION['cart'][$key]['quantity']++;
            return;
        }
    }

    // If item is not in the cart, add it
    $item = array(
        'id' => $item_id,
        'name' => $item_name,
        'price' => $price,
        'quantity' => 1
    );
    $_SESSION['cart'][] = $item;
}

// Function to update item quantity in cart
function update_cart($item_id, $new_quantity) {
    foreach ($_SESSION['cart'] as $key => $item) {
        if ($item['id'] == $item_id) {
            $_SESSION['cart'][$key]['quantity'] = max(1, $new_quantity); // Ensure quantity is at least 1
            return;
        }
    }
}

// Function to remove item from cart
function remove_from_cart($item_id) {
    foreach ($_SESSION['cart'] as $key => $item) {
        if ($item['id'] == $item_id) {
            unset($_SESSION['cart'][$key]);
            $_SESSION['cart'] = array_values($_SESSION['cart']); // Re-index the array
            return;
        }
    }
}

// Function to calculate total price of items in cart
function calculate_total() {
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += $item['price'] * $item['quantity'];
    }
    return $total;
}

// Example usage:
if (isset($_GET['action'])) {
    switch ($_GET['action']) {
        case 'add':
            add_to_cart(1, 'Product 1', 29.99);
            break;
        case 'update':
            update_cart(1, 3);
            break;
        case 'remove':
            remove_from_cart(1);
            break;
    }
}

// Display cart contents
echo "<pre>";
print_r($_SESSION['cart']);
echo "</pre>";

// Display total price
echo "Total: $" . calculate_total();
?>


<?php
// Start the session
session_start();

// Check if the session is initialized, initialize if not
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Sample products (you can replace this with your own product data)
$products = array(
    1 => array('name' => 'Product 1', 'price' => 29.99, 'image' => 'product1.jpg'),
    2 => array('name' => 'Product 2', 'price' => 49.99, 'image' => 'product2.jpg'),
    3 => array('name' => 'Product 3', 'price' => 19.99, 'image' => 'product3.jpg')
);

// Add to cart functionality
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    if (isset($_POST['add_to_cart'])) {
        $productId = intval($_POST['product_id']);
        
        // Check if product exists in the products array
        if (isset($products[$productId])) {
            // Check if product already exists in cart
            if (!isset($_SESSION['cart'][$productId])) {
                $_SESSION['cart'][$productId] = array(
                    'name' => $products[$productId]['name'],
                    'price' => $products[$productId]['price'],
                    'quantity' => 1
                );
            } else {
                // If product exists, increment quantity
                $_SESSION['cart'][$productId]['quantity']++;
            }
        }
    }
    
    // Remove from cart functionality
    if (isset($_POST['remove_from_cart'])) {
        $productId = intval($_POST['product_id']);
        
        // Check if product exists in cart and remove it
        if (isset($_SESSION['cart'][$productId])) {
            unset($_SESSION['cart'][$productId]);
        }
    }
}

// Function to calculate total price of items in the cart
function get_cart_total() {
    $total = 0;
    
    foreach ($_SESSION['cart'] as $item) {
        $total += ($item['price'] * $item['quantity']);
    }
    
    return $total;
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Shopping Cart</title>
    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
</head>
<body>
    <div class="container mt-4">
        <?php if (!empty($_SESSION['cart'])): ?>
            <h2>Your Cart</h2>
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>Product Name</th>
                        <th>Price</th>
                        <th>Quantity</th>
                        <th>Total</th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tbody>
                    <?php foreach ($_SESSION['cart'] as $productId => $item): ?>
                        <tr>
                            <td><?php echo $item['name']; ?></td>
                            <td>$<?php echo number_format($item['price'], 2); ?></td>
                            <td>
                                <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
                                    <input type="hidden" name="product_id" value="<?php echo $productId; ?>">
                                    <button type="submit" name="remove_from_cart" class="btn btn-danger btn-sm">Remove</button>
                                </form>
                            </td>
                            <td>$<?php echo number_format($item['price'] * $item['quantity'], 2); ?></td>
                        </tr>
                    <?php endforeach; ?>
                </tbody>
                <tfoot>
                    <tr>
                        <td colspan="3"></td>
                        <td colspan="1"><strong>Total: $<?php echo number_format(get_cart_total(), 2); ?></strong></td>
                    </tr>
                </tfoot>
            </table>
        <?php else: ?>
            <p>Your cart is empty.</p>
        <?php endif; ?>

        <!-- Products Display -->
        <h2 class="mt-4">Available Products</h2>
        <div class="row">
            <?php foreach ($products as $productId => $product): ?>
                <div class="col-md-3 mb-4">
                    <div class="card">
                        <img src="<?php echo $product['image']; ?>" alt="<?php echo $product['name']; ?>" class="card-img-top">
                        <div class="card-body">
                            <h5 class="card-title"><?php echo $product['name']; ?></h5>
                            <p class="card-text">$<?php echo number_format($product['price'], 2); ?></p>
                            <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
                                <input type="hidden" name="product_id" value="<?php echo $productId; ?>">
                                <button type="submit" name="add_to_cart" class="btn btn-primary">Add to Cart</button>
                            </form>
                        </div>
                    </div>
                </div>
            <?php endforeach; ?>
        </div>
    </div>

    <!-- Bootstrap JS -->
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
</body>
</html>


<?php
session_start();

// Initialize cart session if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function add_to_cart($item_id, $item_name, $price, $quantity) {
    global $mysqli;
    
    // Check if item already exists in the cart
    $found = false;
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['item_id'] == $item_id) {
            $found = true;
            break;
        }
    }

    if (!$found) {
        $_SESSION['cart'][] = array(
            'item_id' => $item_id,
            'item_name' => $item_name,
            'price' => $price,
            'quantity' => $quantity
        );
    } else {
        // Update quantity if item already exists
        foreach ($_SESSION['cart'] as &$item) {
            if ($item['item_id'] == $item_id) {
                $item['quantity'] += $quantity;
                break;
            }
        }
    }
}

// Function to remove item from cart
function remove_from_cart($item_id) {
    global $mysqli;
    
    foreach ($_SESSION['cart'] as $key => &$item) {
        if ($item['item_id'] == $item_id) {
            unset($_SESSION['cart'][$key]);
            break;
        }
    }
}

// Function to update item quantity
function update_quantity($item_id, $quantity) {
    global $mysqli;
    
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['item_id'] == $item_id) {
            $item['quantity'] = $quantity;
            break;
        }
    }
}

// Function to clear cart
function clear_cart() {
    unset($_SESSION['cart']);
}

// Function to get total price of items in the cart
function get_total() {
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += ($item['price'] * $item['quantity']);
    }
    return $total;
}
?>


<?php
include('cart_session.php');

// Add an item to the cart
if (isset($_POST['add_to_cart'])) {
    $item_id = 1;
    $item_name = "Product A";
    $price = 29.99;
    $quantity = 2;

    add_to_cart($item_id, $item_name, $price, $quantity);
}

// Remove an item from the cart
if (isset($_GET['remove_item'])) {
    $item_id = $_GET['remove_item'];
    remove_from_cart($item_id);
}

// Update quantity of an item
if (isset($_POST['update_quantity'])) {
    $item_id = $_POST['item_id'];
    $quantity = $_POST['quantity'];
    update_quantity($item_id, $quantity);
}

// Clear the cart
if (isset($_GET['clear_cart'])) {
    clear_cart();
}
?>


<?php
// Start the session
session_start();

// Check if the cart exists in the session. If not, initialize it as an empty array.
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add item to the cart
function addToCart($productId, $quantity) {
    // Sanitize input
    $productId = htmlspecialchars($productId);
    $quantity = intval($quantity);

    // Check if the product is already in the cart
    if (isset($_SESSION['cart'][$productId])) {
        // Update quantity
        $_SESSION['cart'][$productId]['quantity'] += $quantity;
    } else {
        // Get product details from database or other source
        // For this example, we'll assume you have a function to get product details
        $productDetails = getProductDetails($productId);
        
        // Add new item to the cart
        $_SESSION['cart'][$productId] = array(
            'id' => $productId,
            'name' => $productDetails['name'],
            'price' => $productDetails['price'],
            'quantity' => $quantity
        );
    }
}

// Remove item from the cart
function removeFromCart($productId) {
    // Sanitize input
    $productId = htmlspecialchars($productId);
    
    if (isset($_SESSION['cart'][$productId])) {
        unset($_SESSION['cart'][$productId]);
    }
}

// Display cart contents
function displayCart() {
    if (!empty($_SESSION['cart'])) {
        foreach ($_SESSION['cart'] as $item) {
            echo "Product ID: " . $item['id'] . "<br>";
            echo "Name: " . $item['name'] . "<br>";
            echo "Price: $" . number_format($item['price'], 2) . "<br>";
            echo "Quantity: " . $item['quantity'] . "<br>";
            echo "<a href='remove.php?id=" . $item['id'] . "'>Remove</a><br><br>";
        }
    } else {
        echo "Your cart is empty.";
    }
}

// Example usage:
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    if (isset($_POST['add_to_cart'])) {
        addToCart($_POST['product_id'], $_POST['quantity']);
        header("Location: products.php");
        exit();
    }
}
?>


<?php
// Start the session
session_start();

// Check if session is initialized
if (!isset($_SESSION['cart'])) {
    // Initialize cart as empty array
    $_SESSION['cart'] = array();
}

// Add item to cart
if (isset($_POST['product_id']) && isset($_POST['token'])) {
    $productId = intval($_POST['product_id']);
    
    // Validate product ID
    if ($productId > 0) {
        // Check if product already exists in cart
        if (array_key_exists($productId, $_SESSION['cart'])) {
            // Increment quantity by 1
            $_SESSION['cart'][$productId]['quantity']++;
        } else {
            // Add new product to cart with quantity 1
            $_SESSION['cart'][$productId] = array(
                'id' => $productId,
                'quantity' => 1,
                // You can add more product details here if needed
            );
        }
    }
}

// Redirect back to the cart page or continue processing
header("Location: cart.php");
exit();
?>


<?php
// Start session
session_start();

// Get cart contents from session
$cart = isset($_SESSION['cart']) ? $_SESSION['cart'] : array();
$total = 0;

foreach ($cart as $item) {
    // You should fetch product details from your database here
    // For example:
    $productId = $item['id'];
    $quantity = $item['quantity'];
    
    // Get product name and price from database (example)
    // $productName = get_product_name($productId);
    // $productPrice = get_product_price($productId);
    
    // Calculate total
    $total += ($productPrice * $quantity);
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <?php if (!empty($cart)): ?>
        <h1>Your Shopping Cart</h1>
        <table>
            <tr>
                <th>Product Name</th>
                <th>Quantity</th>
                <th>Price</th>
                <th>Total</th>
            </tr>
            <?php foreach ($cart as $item): ?>
                <tr>
                    <td><?php // echo $productName ?></td>
                    <td><?php echo $item['quantity'] ?></td>
                    <td><?php // echo $productPrice ?></td>
                    <td><?php // echo $productPrice * $item['quantity'] ?></td>
                </tr>
            <?php endforeach; ?>
        </table>
        <h2>Total: <?php echo $total ?></h2>
    <?php else: ?>
        <p>Your cart is empty.</p>
    <?php endif; ?>
</body>
</html>


<?php
session_start();
?>


<!DOCTYPE html>
<html>
<head>
    <title>Products</title>
</head>
<body>
    <h1>Our Products</h1>
    <?php
    // Sample products array
    $products = [
        ['id' => 1, 'name' => 'Product 1', 'price' => 19.99],
        ['id' => 2, 'name' => 'Product 2', 'price' => 29.99],
        ['id' => 3, 'name' => 'Product 3', 'price' => 39.99]
    ];

    foreach ($products as $product) {
        echo "<div>";
        echo "<h2>{$product['name']}</h2>";
        echo "<p>Price: \${$product['price']}</p>";
        echo "<form action='add_to_cart.php' method='post'>";
        echo "<input type='hidden' name='product_id' value='{$product['id']}'>";
        echo "<input type='hidden' name='name' value='{$product['name']}'>";
        echo "<input type='hidden' name='price' value='{$product['price']}'>";
        echo "<input type='number' name='quantity' min='1' max='99' value='1'>";
        echo "<button type='submit'>Add to Cart</button>";
        echo "</form>";
        echo "</div>";
    }
    ?>
    <a href="view_cart.php">View Cart</a>
</body>
</html>


<?php
session_start();

// Get product details from the form
$product_id = $_POST['product_id'];
$name = $_POST['name'];
$price = $_POST['price'];
$quantity = $_POST['quantity'];

// Initialize cart if not set
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Check if product already exists in the cart
$found = false;
foreach ($_SESSION['cart'] as &$item) {
    if ($item['product_id'] == $product_id) {
        $item['quantity'] += $quantity;
        $found = true;
        break;
    }
}

if (!$found) {
    // Add new product to cart
    $_SESSION['cart'][] = array(
        'product_id' => $product_id,
        'name' => $name,
        'price' => $price,
        'quantity' => $quantity
    );
}

// Redirect back to products page
header('Location: products.php');
exit();
?>


<?php
session_start();

if (!isset($_SESSION['cart']) || empty($_SESSION['cart'])) {
    header("Location: products.php");
    exit();
}

function get_cart_total() {
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += ($item['price'] * $item['quantity']);
    }
    return number_format($total, 2);
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <h1>Your Shopping Cart</h1>
    <table border="1">
        <tr>
            <th>Product Name</th>
            <th>Price</th>
            <th>Quantity</th>
            <th>Total</th>
        </tr>
        <?php foreach ($_SESSION['cart'] as $item): ?>
            <tr>
                <td><?php echo htmlspecialchars($item['name'], ENT_QUOTES, 'UTF-8'); ?></td>
                <td>$<?php echo number_format($item['price'], 2); ?></td>
                <td><?php echo $item['quantity']; ?></td>
                <td>$<?php echo number_format($item['price'] * $item['quantity'], 2); ?></td>
            </tr>
        <?php endforeach; ?>
    </table>
    <h2>Total: $<?php echo get_cart_total(); ?></h2>
    <a href="products.php">Continue Shopping</a> |
    <button onclick="window.location.href='checkout.php'">Checkout</button>

    <!-- Optional: Add a Remove Button -->
    <?php foreach ($_SESSION['cart'] as $index => $item): ?>
        <form action="remove_from_cart.php" method="post">
            <input type="hidden" name="index" value="<?php echo $index; ?>">
            <button type="submit">Remove <?php echo htmlspecialchars($item['name'], ENT_QUOTES, 'UTF-8'); ?></button>
        </form>
    <?php endforeach; ?>
</body>
</html>


<?php
session_start();

if (isset($_POST['index']) && isset($_SESSION['cart'])) {
    $index = $_POST['index'];
    if (is_numeric($index) && array_key_exists($index, $_SESSION['cart'])) {
        unset($_SESSION['cart'][$index]);
        // Re-index the array
        $_SESSION['cart'] = array_values($_SESSION['cart']);
    }
}

header('Location: view_cart.php');
exit();
?>


<?php
session_start();

if (!isset($_SESSION['cart']) || empty($_SESSION['cart'])) {
    header("Location: products.php");
    exit();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
</head>
<body>
    <h1>Checkout</h1>
    <p>Your total is $<?php echo get_cart_total(); ?></p>
    
    <!-- Payment form -->
    <form method="post" action="process_payment.php">
        <label for="name">Name:</label>
        <input type="text" id="name" name="name" required><br>
        
        <label for="email">Email:</label>
        <input type="email" id="email" name="email" required><br>
        
        <label for="card_number">Card Number:</label>
        <input type="number" id="card_number" name="card_number" required><br>
        
        <button type="submit">Complete Purchase</button>
    </form>
    
    <a href="view_cart.php">Return to Cart</a>
</body>
</html>


<?php
session_start();

// Initialize cart if not set
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Handle adding an item
if (isset($_POST['add'])) {
    $productId = intval($_POST['product_id']);
    $productName = $_POST['product_name'];
    $price = floatval($_POST['price']);
    $quantity = intval($_POST['quantity']);

    // Check if product exists in cart
    if (array_key_exists($productId, $_SESSION['cart'])) {
        $_SESSION['cart'][$productId]['quantity'] += $quantity;
    } else {
        $_SESSION['cart'][$productId] = array(
            'product_id' => $productId,
            'product_name' => $productName,
            'price' => $price,
            'quantity' => $quantity
        );
    }
    header('Location: cart.php');
    exit();
}

// Handle removing an item
if (isset($_POST['remove'])) {
    $productId = intval($_POST['product_id']);
    if (array_key_exists($productId, $_SESSION['cart'])) {
        unset($_SESSION['cart'][$productId]);
    }
    header('Location: cart.php');
    exit();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
    <style>
        /* Add your CSS styles here */
    </style>
</head>
<body>
    <!-- Your HTML content and navigation here -->
    
    <h2>Your Shopping Cart</h2>
    
    <?php if (empty($_SESSION['cart'])): ?>
        <p>Your cart is empty.</p>
    <?php else: ?>
        <table border="1">
            <tr>
                <th>Product Name</th>
                <th>Price</th>
                <th>Quantity</th>
                <th>Total</th>
                <th>Action</th>
            </tr>
            <?php foreach ($_SESSION['cart'] as $item): ?>
                <tr>
                    <td><?php echo $item['product_name']; ?></td>
                    <td>$<?php echo number_format($item['price'], 2); ?></td>
                    <td><?php echo $item['quantity']; ?></td>
                    <td>$<?php echo number_format($item['price'] * $item['quantity'], 2); ?></td>
                    <td>
                        <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
                            <input type="hidden" name="product_id" value="<?php echo $item['product_id']; ?>">
                            <button type="submit" name="remove">Remove</button>
                        </form>
                    </td>
                </tr>
            <?php endforeach; ?>
        </table>
        
        <!-- Calculate and display total -->
        <?php
        $total = 0;
        foreach ($_SESSION['cart'] as $item) {
            $total += $item['price'] * $item['quantity'];
        }
        ?>
        <h3>Total: $<?php echo number_format($total, 2); ?></h3>
    <?php endif; ?>

    <!-- Add items to cart -->
    <div class="products">
        <!-- Product listing with add to cart buttons -->
        <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
            <input type="hidden" name="product_id" value="1">
            <input type="hidden" name="product_name" value="Product 1">
            <input type="hidden" name="price" value="29.99">
            <input type="number" name="quantity" min="1" value="1">
            <button type="submit" name="add">Add to Cart</button>
        </form>
    </div>
</body>
</html>


<?php
session_start();

// Initialize cart if not already set
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function add_to_cart($product_id) {
    // Check if product is already in the cart
    if (isset($_SESSION['cart'][$product_id])) {
        // If yes, increase quantity by 1
        $_SESSION['cart'][$product_id]['quantity'] += 1;
    } else {
        // If no, add new item with quantity 1
        $product_details = get_product_details($product_id);
        
        if ($product_details) {
            $_SESSION['cart'][$product_id] = array(
                'name' => $product_details['name'],
                'price' => $product_details['price'],
                'quantity' => 1
            );
        }
    }
}

// Function to get product details (you need to implement this)
function get_product_details($product_id) {
    // Connect to database and fetch product details
    // Return array with product name, price, etc.
    return $product_details;
}

// Function to view cart contents
function view_cart() {
    if (!empty($_SESSION['cart'])) {
        echo "<table>";
        echo "<tr><th>Product Name</th><th>Price</th><th>Quantity</th><th>Action</th></tr>";
        
        foreach ($_SESSION['cart'] as $product_id => $item) {
            echo "<tr>";
            echo "<td>{$item['name']}</td>";
            echo "<td>${$item['price']}</td>";
            echo "<td><input type='number' name='quantity[$product_id]' value='{$item['quantity']}' min='1'></td>";
            echo "<td><a href='remove_item.php?id=$product_id'>Remove</a></td>";
            echo "</tr>";
        }
        
        echo "</table>";
    } else {
        echo "Your cart is empty.";
    }
}

// Function to update item quantity
function update_quantity($quantity) {
    foreach ($quantity as $product_id => $qty) {
        if (isset($_SESSION['cart'][$product_id])) {
            $_SESSION['cart'][$product_id]['quantity'] = $qty;
            
            if ($qty == 0) {
                unset($_SESSION['cart'][$product_id]);
            }
        }
    }
}

// Function to remove item from cart
function remove_item($product_id) {
    if (isset($_SESSION['cart'][$product_id])) {
        unset($_SESSION['cart'][$product_id]);
    }
}

// Example usage:
// Add item to cart
if (isset($_GET['action']) && $_GET['action'] == 'add') {
    $product_id = filter_var($_GET['id'], FILTER_VALIDATE_INT);
    
    if ($product_id) {
        add_to_cart($product_id);
    }
}

// Update quantity
if (isset($_POST['update_quantity'])) {
    foreach ($_POST['quantity'] as $product_id => $qty) {
        $sanitized_qty = filter_var($qty, FILTER_VALIDATE_INT);
        
        if ($sanitized_qty !== false && $sanitized_qty >= 0) {
            update_quantity(array($product_id => $sanitized_qty));
        }
    }
}

// Remove item
if (isset($_GET['action']) && $_GET['action'] == 'remove') {
    $product_id = filter_var($_GET['id'], FILTER_VALIDATE_INT);
    
    if ($product_id) {
        remove_item($product_id);
    }
}
?>


<?php
// Start the session
session_start();

// Check if session is started
if (session_status() == PHP_SESSION_ACTIVE) {
    // Initialize cart if not set
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }

    // Function to add item to cart
    function add_to_cart($item_id, $item_name, $item_price, $quantity = 1) {
        global $CartItem;

        // Check if item is already in the cart
        $found = false;
        foreach ($_SESSION['cart'] as &$CartItem) {
            if ($CartItem['id'] == $item_id) {
                $CartItem['quantity'] += $quantity;
                $found = true;
                break;
            }
        }

        // If item not found, add it to the cart
        if (!$found) {
            $_SESSION['cart'][] = array(
                'id' => $item_id,
                'name' => $item_name,
                'price' => $item_price,
                'quantity' => $quantity
            );
        }
    }

    // Function to display cart items
    function display_cart() {
        echo "<table border='1'>";
        echo "<tr><th>Item Name</th><th>Price</th><th>Quantity</th><th>Action</th></tr>";
        
        foreach ($_SESSION['cart'] as $key => $CartItem) {
            echo "<tr>";
            echo "<td>" . $CartItem['name'] . "</td>";
            echo "<td>" . $CartItem['price'] . "</td>";
            echo "<td>" . $CartItem['quantity'] . "</td>";
            echo "<td><a href='remove_from_cart.php?id=" . $key . "'>Remove</a></td>";
            echo "</tr>";
        }
        
        echo "</table>";
    }

    // Function to remove item from cart
    function remove_from_cart($item_id) {
        if (isset($_SESSION['cart'][$item_id])) {
            unset($_SESSION['cart'][$item_id]);
            $_SESSION['cart'] = array_values($_SESSION['cart']); // Re-index the array
        }
    }

    // Function to calculate total amount
    function calculate_total() {
        $total = 0;
        foreach ($_SESSION['cart'] as $CartItem) {
            $total += ($CartItem['price'] * $CartItem['quantity']);
        }
        return $total;
    }

    // Example usage:
    // Add an item to the cart
    if (isset($_POST['add_to_cart'])) {
        $item_id = 1;
        $item_name = "Product Name";
        $item_price = 99.99;
        $quantity = 1;

        add_to_cart($item_id, $item_name, $item_price, $quantity);
    }

    // Display cart
    display_cart();

    // Calculate and display total
    echo "<h3>Total: $" . calculate_total() . "</h3>";
} else {
    // Handle session error
    die("Session could not be started.");
}
?>


<?php
session_start();
?>


if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}


function addToCart($productId, $productName, $productPrice) {
    if (isset($_SESSION['cart'][$productId])) {
        // Item already exists in cart, you can handle this as needed
        echo "Item is already in your cart.";
    } else {
        $_SESSION['cart'][$productId] = array(
            'id' => $productId,
            'name' => $productName,
            'price' => $productPrice
        );
        // Optional: Show success message
        echo "Item added to cart successfully!";
    }
}


if (!empty($_SESSION['cart'])) {
    echo "<h2>Your Cart:</h2>";
    foreach ($_SESSION['cart'] as $item) {
        echo "Product ID: " . $item['id'] . "<br />";
        echo "Product Name: " . $item['name'] . "<br />";
        echo "Product Price: $" . number_format($item['price'], 2) . "<br />";
        // Add a remove button
        echo '<a href="remove_from_cart.php?id=' . $item['id'] . '">Remove</a><br /><hr />';
    }
} else {
    echo "Your cart is empty!";
}


<?php
session_start();
if (isset($_GET['id'])) {
    $productId = $_GET['id'];
    if (!empty($_SESSION['cart'][$productId])) {
        unset($_SESSION['cart'][$productId]);
        // Re-index the array to avoid gaps in keys
        $_SESSION['cart'] = array_values($_SESSION['cart']);
        header("Location: view_cart.php");
        exit();
    }
}
?>


session_unset();
session_destroy();


<?php
session_start();

$productId = 1;
$productName = "Laptop";
$productPrice = 999.99;

addToCart($productId, $productName, $productPrice);

function addToCart($id, $name, $price) {
    if (isset($_SESSION['cart'][$id])) {
        echo "Item already in cart!";
    } else {
        $_SESSION['cart'][$id] = array(
            'id' => $id,
            'name' => $name,
            'price' => $price
        );
        echo "Added to cart!";
    }
}
?>


<?php
session_start();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <?php if (!empty($_SESSION['cart'])): ?>
        <h2>Your Cart:</h2>
        <?php foreach ($_SESSION['cart'] as $item): ?>
            <div>
                <p><?php echo $item['name']; ?></p>
                <p>Price: <?php echo "$" . number_format($item['price'], 2); ?></p>
                <a href="remove_from_cart.php?id=<?php echo $item['id']; ?>">Remove</a>
            </div>
        <?php endforeach; ?>
    <?php else: ?>
        <h2>Your cart is empty!</h2>
    <?php endif; ?>

    <br/>
    <a href="add_to_cart.php">Add another item</a>
</body>
</html>


<?php
session_start();

if (isset($_GET['id'])) {
    $productId = $_GET['id'];
    if (isset($_SESSION['cart'][$productId])) {
        unset($_SESSION['cart'][$productId]);
        // Re-index the cart array
        $_SESSION['cart'] = array_values($_SESSION['cart']);
    }
}

// Redirect back to the cart page
header("Location: view_cart.php");
exit();
?>


<?php
session_start();


// Check if the cart exists in the session, if not, initialize it
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Sample product data (you would typically retrieve this from your database)
$product_id = 1;
$product_name = "Product 1";
$price = 29.99;

// Check if the product is already in the cart
if (!isset($_SESSION['cart'][$product_id])) {
    // Add new product to cart
    $_SESSION['cart'][$product_id] = array(
        'id' => $product_id,
        'name' => $product_name,
        'price' => $price,
        'quantity' => 1
    );
} else {
    // Increment quantity if the product already exists in the cart
    $_SESSION['cart'][$product_id]['quantity']++;
}


echo "<h2>Shopping Cart</h2>";
if (!empty($_SESSION['cart'])) {
    echo "<table border='1'>";
    echo "<tr><th>Product Name</th><th>Price</th><th>Quantity</th><th>Total</th></tr>";

    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $subtotal = $item['price'] * $item['quantity'];
        $total += $subtotal;

        echo "<tr>";
        echo "<td>" . $item['name'] . "</td>";
        echo "<td>$" . number_format($item['price'], 2) . "</td>";
        echo "<td>" . $item['quantity'] . "</td>";
        echo "<td>$" . number_format($subtotal, 2) . "</td>";
        echo "</tr>";
    }

    echo "<tr><th colspan='3'>Total:</th><th>$" . number_format($total, 2) . "</th></tr>";
    echo "</table>";
} else {
    echo "Your cart is empty!";
}


// Check if the form was submitted with updates
if (isset($_POST['update'])) {
    foreach ($_SESSION['cart'] as $id => $item) {
        if (isset($_POST["quantity_$id"])) {
            $new_quantity = intval($_POST["quantity_$id"]);
            if ($new_quantity > 0) {
                $_SESSION['cart'][$id]['quantity'] = $new_quantity;
            } else {
                unset($_SESSION['cart'][$id]);
            }
        }
    }
}


// Check if the form was submitted with a removal request
if (isset($_POST['remove'])) {
    foreach ($_POST['remove'] as $id) {
        unset($_SESSION['cart'][$id]);
    }
}


// Check if the user clicked the "Clear Cart" button
if (isset($_GET['clear'])) {
    $_SESSION['cart'] = array();
}


// When the user logs in:
$_SESSION['user_id'] = $user_id;

// When adding items to the cart:
if (isset($_SESSION['user_id'])) {
    // Store cart data in database associated with the user
} else {
    // Use session-based cart
}


<?php
session_start();

// Initialize cart if not exists
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add item to cart
if (isset($_POST['add_to_cart'])) {
    $product_id = 1; // Replace with actual product ID
    $product_name = "Product 1"; // Replace with actual product name
    $price = 29.99; // Replace with actual price

    if (!isset($_SESSION['cart'][$product_id])) {
        $_SESSION['cart'][$product_id] = array(
            'id' => $product_id,
            'name' => $product_name,
            'price' => $price,
            'quantity' => 1
        );
    } else {
        $_SESSION['cart'][$product_id]['quantity']++;
    }
}

// Update cart quantities
if (isset($_POST['update'])) {
    foreach ($_SESSION['cart'] as $id => $item) {
        if (isset($_POST["quantity_$id"])) {
            $new_quantity = intval($_POST["quantity_$id"]);
            if ($new_quantity > 0) {
                $_SESSION['cart'][$id]['quantity'] = $new_quantity;
            } else {
                unset($_SESSION['cart'][$id]);
            }
        }
    }
}

// Remove items from cart
if (isset($_POST['remove'])) {
    foreach ($_POST['remove'] as $id) {
        unset($_SESSION['cart'][$id]);
    }
}

// Clear cart
if (isset($_GET['clear'])) {
    $_SESSION['cart'] = array();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <?php if (!empty($_SESSION['cart'])) : ?>

        <h2>Your Shopping Cart</h2>
        <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
            <table border="1">
                <tr>
                    <th>Product Name</th>
                    <th>Price</th>
                    <th>Quantity</th>
                    <th>Total</th>
                    <th>Action</th>
                </tr>
                <?php
                $total = 0;
                foreach ($_SESSION['cart'] as $id => $item) :
                    $subtotal = $item['price'] * $item['quantity'];
                    $total += $subtotal;
                    ?>
                    <tr>
                        <td><?php echo $item['name']; ?></td>
                        <td>$<?php echo number_format($item['price'], 2); ?></td>
                        <td>
                            <input type="number" name="quantity_<?php echo $id; ?>" min="1" value="<?php echo $item['quantity']; ?>">
                        </td>
                        <td>$<?php echo number_format($subtotal, 2); ?></td>
                        <td><button type="submit" name="remove[]" value="<?php echo $id; ?>">Remove</button></td>
                    </tr>
                <?php endforeach; ?>
            </table>
            <p>Total: $<?php echo number_format($total, 2); ?></p>
            <button type="submit" name="update">Update Cart</button>
            <a href="<?php echo $_SERVER['PHP_SELF']; ?>?clear=1">Clear Cart</a>
        </form>

    <?php else : ?>

        <h2>Your cart is empty!</h2>
        <a href="products.php">Shop Now</a>

    <?php endif; ?>

    <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
        <!-- Add more products here -->
        <button type="submit" name="add_to_cart">Add Product 1 to Cart</button>
    </form>
</body>
</html>


<?php
// Initialize the session
session_start();

// Check if cart is already set in the session, if not initialize it as an empty array
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function addToCart($productId, $productName, $productPrice) {
    global $mysqli; // Assuming you have a database connection
    
    // Check if product exists in the database (security check)
    $stmt = $mysqli->prepare("SELECT id FROM products WHERE id = ?");
    $stmt->bind_param('i', $productId);
    $stmt->execute();
    
    $result = $stmt->get_result();
    if ($result->num_rows > 0) {
        // Check if item already exists in the cart
        if (!isset($_SESSION['cart'][$productId])) {
            $_SESSION['cart'][$productId] = array(
                'id' => $productId,
                'name' => $productName,
                'price' => $productPrice,
                'quantity' => 1
            );
            echo "Product added to cart!";
        } else {
            echo "Product already exists in the cart!";
        }
    } else {
        echo "Invalid product ID!";
    }
}

// Function to update item quantity
function updateCartItem($productId, $newQuantity) {
    if (isset($_SESSION['cart'][$productId])) {
        $_SESSION['cart'][$productId]['quantity'] = max(1, $newQuantity);
        echo "Quantity updated!";
    } else {
        echo "Product not found in cart!";
    }
}

// Function to remove item from cart
function removeFromCart($productId) {
    if (isset($_SESSION['cart'][$productId])) {
        unset($_SESSION['cart'][$productId]);
        echo "Product removed from cart!";
    } else {
        echo "Product not found in cart!";
    }
}

// Function to calculate total price of items in the cart
function calculateTotal() {
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += $item['price'] * $item['quantity'];
    }
    return $total;
}

// Example usage:
// addToCart(1, 'Product A', 29.99);
// updateCartItem(1, 3);
// removeFromCart(1);

// Display cart contents
echo "<pre>";
print_r($_SESSION['cart']);
echo "</pre>";

// Display total price
echo "Total: $" . calculateTotal();
?>


<?php
session_start();

// Function to add item to cart
function addToCart($productId, $productName, $price) {
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }
    
    if (isset($_SESSION['cart'][$productId])) {
        // Item already exists in cart - increment quantity
        $_SESSION['cart'][$productId]['quantity']++;
    } else {
        // Add new item to cart
        $_SESSION['cart'][$productId] = array(
            'product_id' => $productId,
            'product_name' => $productName,
            'price' => $price,
            'quantity' => 1
        );
    }
}

// Function to update quantity of an item in cart
function updateQuantity($productId, $newQuantity) {
    if (isset($_SESSION['cart'][$productId])) {
        $_SESSION['cart'][$productId]['quantity'] = $newQuantity;
    }
}

// Function to delete item from cart
function deleteItemFromCart($productId) {
    if (isset($_SESSION['cart'][$productId])) {
        unset($_SESSION['cart'][$productId]);
    }
}

// Function to display cart contents
function displayCart() {
    if (!empty($_SESSION['cart'])) {
        echo "<table>";
        echo "<tr><th>Product Name</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>";
        
        foreach ($_SESSION['cart'] as $item) {
            $total = $item['price'] * $item['quantity'];
            echo "<tr>";
            echo "<td>" . $item['product_name'] . "</td>";
            echo "<td>$" . number_format($item['price'], 2) . "</td>";
            echo "<td><input type='number' name='quantity[" . $item['product_id'] . "]' value='" . $item['quantity'] . "' min='1'></td>";
            echo "<td>$" . number_format($total, 2) . "</td>";
            echo "<td><a href='delete_item.php?id=" . $item['product_id'] . "'>Delete</a></td>";
            echo "</tr>";
        }
        
        echo "</table>";
    } else {
        echo "Your cart is empty.";
    }
}

// Example usage:
// Add item to cart
if (isset($_GET['action']) && $_GET['action'] == 'add') {
    $productId = 1;
    $productName = "Product Name";
    $price = 29.99;
    addToCart($productId, $productName, $price);
}

// Update quantity of item in cart
if (isset($_POST['update'])) {
    foreach ($_POST['quantity'] as $productId => $newQuantity) {
        updateQuantity($productId, $newQuantity);
    }
}

// Delete item from cart
if (isset($_GET['action']) && $_GET['action'] == 'delete') {
    if (isset($_GET['id'])) {
        deleteItemFromCart($_GET['id']);
    }
}

// Display cart contents
displayCart();
?>


<?php
session_start();
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $productId = $_POST['product_id'];
    $quantity = $_POST['quantity'];
    
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }
    
    $found = false;
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['id'] == $productId) {
            $item['quantity'] += $quantity;
            $found = true;
            break;
        }
    }
    
    if (!$found) {
        $_SESSION['cart'][] = array('id' => $productId, 'quantity' => $quantity);
    }
}
header("Location: view_cart.php");
exit();
?>


<?php
session_start();
?>
<!DOCTYPE html>
<html>
<head><title>Shopping Cart</title></head>
<body>
<h1>Your Shopping Cart</h1>
<table border="1">
    <tr><th>Product ID</th><th>Quantity</th><th>Action</th></tr>
    <?php if (isset($_SESSION['cart']) && count($_SESSION['cart']) > 0): ?>
        <?php foreach ($_SESSION['cart'] as $item): ?>
            <tr>
                <td><?php echo $item['id']; ?></td>
                <td><?php echo $item['quantity']; ?></td>
                <td><a href="remove_from_cart.php?id=<?php echo $item['id']; ?>">Remove</a></td>
            </tr>
        <?php endforeach; ?>
    <?php else: ?>
        <tr><td colspan="3">Your cart is empty.</td></tr>
    <?php endif; ?>
</table>
<br>
<a href="add_to_cart.php">Add More Items</a>
</body>
</html>


<?php
session_start();
if (isset($_GET['id'])) {
    $productId = $_GET['id'];
    
    if (isset($_SESSION['cart'])) {
        foreach ($_SESSION['cart'] as $key => $item) {
            if ($item['id'] == $productId) {
                unset($_SESSION['cart'][$key]);
                break;
            }
        }
        // Re-index the array to avoid gaps in keys
        $_SESSION['cart'] = array_values($_SESSION['cart']);
    }
}
header("Location: view_cart.php");
exit();
?>


<?php
session_start();
?>


if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}


$product_id = 1;
$product_name = "Product Name";
$product_price = 9.99;

foreach ($_SESSION['cart'] as $key => $item) {
    if ($item['product_id'] == $product_id) {
        $_SESSION['cart'][$key]['quantity'] += 1;
        break;
    }
}
if (!isset($_SESSION['cart'][$key])) { // If not found
    array_push($_SESSION['cart'], array(
        'product_id' => $product_id,
        'product_name' => $product_name,
        'price' => $product_price,
        'quantity' => 1
    ));
}


echo "<h2>Shopping Cart</h2>";
echo "<table border='1'>";
echo "<tr><th>Product Name</th><th>Price</th><th>Quantity</th><th>Total</th></tr>";

$total = 0;

foreach ($_SESSION['cart'] as $item) {
    $total += $item['price'] * $item['quantity'];
    echo "<tr>";
    echo "<td>" . $item['product_name'] . "</td>";
    echo "<td>£" . number_format($item['price'], 2) . "</td>";
    echo "<td>" . $item['quantity'] . "</td>";
    echo "<td>£" . number_format($item['price'] * $item['quantity'], 2) . "</td>";
    echo "</tr>";
}

echo "<tr><th colspan='3'>Total</th><th>£" . number_format($total, 2) . "</th></tr>";
echo "</table>";


if (isset($_GET['remove'])) {
    $index = $_GET['remove'];
    if (!empty($index)) {
        unset($_SESSION['cart'][$index]);
        // Re-index array to maintain sequential keys
        $_SESSION['cart'] = array_values($_SESSION['cart']);
    }
}


if (isset($_GET['clear'])) {
    unset($_SESSION['cart']);
    $_SESSION['cart'] = array();
}


<?php
session_start();

// Initialize cart if not set
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add item to cart (example with hardcoded values)
$product_id = 1;
$product_name = "Example Product";
$product_price = 9.99;

foreach ($_SESSION['cart'] as $key => $item) {
    if ($item['product_id'] == $product_id) {
        $_SESSION['cart'][$key]['quantity']++;
        break;
    }
}
if (!isset($_SESSION['cart'][$key])) { // If product not found
    array_push($_SESSION['cart'], array(
        'product_id' => $product_id,
        'product_name' => $product_name,
        'price' => $product_price,
        'quantity' => 1
    ));
}

// Display cart contents
echo "<h2>Shopping Cart</h2>";
echo "<table border='1'>";
echo "<tr><th>Product Name</th><th>Price</th><th>Quantity</th><th>Total</th><th>Actions</th></tr>";

$total = 0;

foreach ($_SESSION['cart'] as $key => $item) {
    $total += $item['price'] * $item['quantity'];
    echo "<tr>";
    echo "<td>" . $item['product_name'] . "</td>";
    echo "<td>£" . number_format($item['price'], 2) . "</td>";
    echo "<td>" . $item['quantity'] . "</td>";
    echo "<td>£" . number_format($item['price'] * $item['quantity'], 2) . "</td>";
    echo "<td><a href='?remove=$key'>Remove</a></td>";
    echo "</tr>";
}

echo "<tr><th colspan='3'>Total</th><th>£" . number_format($total, 2) . "</th></tr>";

// Handle remove action
if (isset($_GET['remove'])) {
    $index = $_GET['remove'];
    if (!empty($index)) {
        unset($_SESSION['cart'][$index]);
        $_SESSION['cart'] = array_values($_SESSION['cart']);
    }
}

// Clear cart example
echo "<p><a href='?clear=1'>Clear Cart</a></p>";

if (isset($_GET['clear'])) {
    unset($_SESSION['cart']);
    $_SESSION['cart'] = array();
}
?>


function connectDB() {
    $servername = "localhost";
    $username = "root";
    $password = "";
    $dbname = "mydb";

    try {
        $conn = new PDO("mysql:host=$servername;dbname=$dbname", $username, $password);
        $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
        return $conn;
    } catch(PDOException $e) {
        echo "Connection failed: " . $e->getMessage();
    }
}


session_start();


function cartAdd($product_id, $quantity) {
    // Check if user is logged in
    if (!isset($_SESSION['user'])) {
        header("Location: login.php");
        return;
    }

    $conn = connectDB();

    try {
        // Get product details from database
        $stmt = $conn->prepare("SELECT * FROM products WHERE id = :product_id");
        $stmt->execute(['product_id' => $product_id]);
        $product = $stmt->fetch(PDO::FETCH_ASSOC);

        if (!$product) {
            throw new Exception("Product not found.");
        }

        // Calculate total price
        $total_price = $product['price'] * $quantity;

        // Check if cart exists in session
        if (!isset($_SESSION['cart'])) {
            $_SESSION['cart'] = array();
        }

        // Add product to cart or update quantity
        if (array_key_exists($product_id, $_SESSION['cart'])) {
            $_SESSION['cart'][$product_id]['quantity'] += $quantity;
            $_SESSION['cart'][$product_id]['total_price'] += $total_price;
        } else {
            $_SESSION['cart'][$product_id] = array(
                'id' => $product_id,
                'name' => $product['name'],
                'price' => $product['price'],
                'quantity' => $quantity,
                'total_price' => $total_price
            );
        }

        // Save cart to database for logged in user
        if (isset($_SESSION['user'])) {
            $user_id = $_SESSION['user']['id'];
            
            // Check if item exists in cart table
            $stmt = $conn->prepare("SELECT id FROM cart WHERE user_id = :user_id AND product_id = :product_id");
            $stmt->execute(['user_id' => $user_id, 'product_id' => $product_id]);
            $exists = $stmt->fetch(PDO::FETCH_ASSOC);

            if ($exists) {
                // Update quantity and total price
                $stmt = $conn->prepare("UPDATE cart SET quantity = quantity + :quantity, total_price = total_price + :total_price WHERE id = :id");
                $stmt->execute([
                    'id' => $exists['id'],
                    'quantity' => $quantity,
                    'total_price' => $total_price
                ]);
            } else {
                // Insert new item into cart
                $stmt = $conn->prepare("INSERT INTO cart (user_id, product_id, quantity, total_price) VALUES (:user_id, :product_id, :quantity, :total_price)");
                $stmt->execute([
                    'user_id' => $user_id,
                    'product_id' => $product_id,
                    'quantity' => $quantity,
                    'total_price' => $total_price
                ]);
            }
        }

    } catch(PDOException $e) {
        echo "Error: " . $e->getMessage();
    } finally {
        $conn = null;
    }

    header("Location: cart.php?success=Product added to cart.");
}


function displayCart() {
    if (!isset($_SESSION['cart'])) {
        return array();
    }

    return $_SESSION['cart'];
}


function updateQuantity($product_id, $quantity) {
    if (isset($_SESSION['cart'][$product_id])) {
        // Get current price
        $conn = connectDB();
        $stmt = $conn->prepare("SELECT price FROM products WHERE id = :product_id");
        $stmt->execute(['product_id' => $product_id]);
        $price = $stmt->fetch(PDO::FETCH_ASSOC)['price'];

        $_SESSION['cart'][$product_id]['quantity'] = $quantity;
        $_SESSION['cart'][$product_id]['total_price'] = $quantity * $price;

        if (isset($_SESSION['user'])) {
            // Update quantity and total price in database
            $stmt = $conn->prepare("UPDATE cart SET quantity = :quantity, total_price = :total_price WHERE user_id = :user_id AND product_id = :product_id");
            $stmt->execute([
                'user_id' => $_SESSION['user']['id'],
                'product_id' => $product_id,
                'quantity' => $quantity,
                'total_price' => $quantity * $price
            ]);
        }
    }

    header("Location: cart.php?success=Quantity updated.");
}


function removeProduct($product_id) {
    if (isset($_SESSION['cart'][$product_id])) {
        unset($_SESSION['cart'][$product_id]);

        if (isset($_SESSION['user'])) {
            // Delete product from database cart
            $conn = connectDB();
            $stmt = $conn->prepare("DELETE FROM cart WHERE user_id = :user_id AND product_id = :product_id");
            $stmt->execute([
                'user_id' => $_SESSION['user']['id'],
                'product_id' => $product_id
            ]);
        }
    }

    header("Location: cart.php?success=Product removed.");
}


function destroyCart() {
    unset($_SESSION['cart']);
    session_unset();
    session_destroy();
    header("Location: index.php");
}


<?php
session_start();


if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}
$cart = &$_SESSION['cart'];


function addToCart($productId, $productName, $price) {
    global $cart;
    
    // Check if product already exists in the cart
    if (isset($cart[$productId])) {
        // If exists, increment quantity
        $cart[$productId]['quantity']++;
    } else {
        // If not exists, add new product to cart
        $cart[$productId] = array(
            'product_id' => $productId,
            'product_name' => $productName,
            'price' => $price,
            'quantity' => 1
        );
    }
}

// Example usage:
addToCart(1, 'Laptop', 999.99);


function updateQuantity($productId, $quantity) {
    global $cart;
    
    if (isset($cart[$productId])) {
        // Ensure quantity is at least 1
        $cart[$productId]['quantity'] = max(1, $quantity);
    }
}

// Example usage:
updateQuantity(1, 2); // Updates quantity of product with ID 1 to 2


function removeFromCart($productId) {
    global $cart;
    
    if (isset($cart[$productId])) {
        unset($cart[$productId]);
        // Re-index the array to maintain numeric keys
        $cart = array_values($cart);
    }
}

// Example usage:
removeFromCart(1); // Removes product with ID 1 from cart


function getCartTotal() {
    global $cart;
    $total = 0.00;
    
    foreach ($cart as $item) {
        $total += $item['price'] * $item['quantity'];
    }
    
    return number_format($total, 2); // Returns total formatted to two decimal places
}

// Example usage:
echo "Total: $" . getCartTotal();


function displayCart() {
    global $cart;
    
    if (empty($cart)) {
        echo "<p>Your cart is empty.</p>";
        return;
    }
    
    echo "<table border='1'>";
    echo "<tr><th>Product</th><th>Price</th><th>Quantity</th><th>Subtotal</th></tr>";
    
    foreach ($cart as $item) {
        $subtotal = $item['price'] * $item['quantity'];
        echo "<tr>";
        echo "<td>" . $item['product_name'] . "</td>";
        echo "<td>$" . number_format($item['price'], 2) . "</td>";
        echo "<td><input type='number' min='1' value='" . $item['quantity'] . "' onChange='updateQuantity(" . $item['product_id'] . ", this.value)'></td>";
        echo "<td>$" . number_format($subtotal, 2) . "</td>";
        echo "<td><button onclick='removeFromCart(" . $item['product_id'] . ")'>Remove</button></td>";
        echo "</tr>";
    }
    
    echo "</table>";
    echo "<p>Total: $" . getCartTotal() . "</p>";
}

// Example usage:
displayCart();


<?php
session_start();

if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}
$cart = &$_SESSION['cart'];

function addToCart($productId, $productName, $price) {
    global $cart;
    
    if (isset($cart[$productId])) {
        $cart[$productId]['quantity']++;
    } else {
        $cart[$productId] = array(
            'product_id' => $productId,
            'product_name' => $productName,
            'price' => $price,
            'quantity' => 1
        );
    }
}

function updateQuantity($productId, $quantity) {
    global $cart;
    
    if (isset($cart[$productId])) {
        $cart[$productId]['quantity'] = max(1, $quantity);
    }
}

function removeFromCart($productId) {
    global $cart;
    
    if (isset($cart[$productId])) {
        unset($cart[$productId]);
        $cart = array_values($cart);
    }
}

function getCartTotal() {
    global $cart;
    $total = 0.00;
    
    foreach ($cart as $item) {
        $total += $item['price'] * $item['quantity'];
    }
    
    return number_format($total, 2);
}

function displayCart() {
    global $cart;
    
    if (empty($cart)) {
        echo "<p>Your cart is empty.</p>";
        return;
    }
    
    echo "<table border='1'>";
    echo "<tr><th>Product</th><th>Price</th><th>Quantity</th><th>Subtotal</th></tr>";
    
    foreach ($cart as $item) {
        $subtotal = $item['price'] * $item['quantity'];
        echo "<tr>";
        echo "<td>" . $item['product_name'] . "</td>";
        echo "<td>$" . number_format($item['price'], 2) . "</td>";
        echo "<td><input type='number' min='1' value='" . $item['quantity'] . "' onChange='updateQuantity(" . $item['product_id'] . ", this.value)'></td>";
        echo "<td>$" . number_format($subtotal, 2) . "</td>";
        echo "<td><button onclick='removeFromCart(" . $item['product_id'] . ")'>Remove</button></td>";
        echo "</tr>";
    }
    
    echo "</table>";
    echo "<p>Total: $" . getCartTotal() . "</p>";
}

// Test the functions
addToCart(1, 'Laptop', 999.99);
addToCart(2, 'Smartphone', 699.99);

updateQuantity(1, 2);

displayCart();

?>


<?php
session_start();

// Initialize or retrieve the cart from session
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add item to cart
if (isset($_GET['add'])) {
    $product_id = isset($_GET['product_id']) ? intval(trim($_GET['product_id'])) : 0;
    $quantity = isset($_GET['quantity']) ? intval(trim($_GET['quantity'])) : 1;

    if ($product_id > 0) {
        // Check if item exists in cart
        $found = false;
        foreach ($_SESSION['cart'] as &$item) {
            if ($item['product_id'] == $product_id) {
                $item['quantity'] += $quantity;
                $found = true;
                break;
            }
        }

        if (!$found) {
            // Add new item
            array_push($_SESSION['cart'], array(
                'product_id' => $product_id,
                'name' => 'Product Name',
                'price' => 29.99, // Replace with actual price
                'quantity' => $quantity
            ));
        }
    }
}

// Remove item from cart
if (isset($_GET['remove'])) {
    $product_id = isset($_GET['product_id']) ? intval(trim($_GET['product_id'])) : 0;

    if ($product_id > 0) {
        foreach ($_SESSION['cart'] as $key => $item) {
            if ($item['product_id'] == $product_id) {
                unset($_SESSION['cart'][$key]);
                break;
            }
        }

        // Reindex the array
        $_SESSION['cart'] = array_values($_SESSION['cart']);
    }
}

// Calculate total price
$total_price = 0.00;
foreach ($_SESSION['cart'] as $item) {
    $total_price += ($item['price'] * $item['quantity']);
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
<h2>Your Shopping Cart:</h2>

<?php if (empty($_SESSION['cart'])): ?>
    <p>Your cart is empty.</p>
<?php else: ?>
    <ul>
        <?php foreach ($_SESSION['cart'] as $item): ?>
            <li>
                Product ID: <?php echo $item['product_id']; ?>,
                Name: <?php echo $item['name']; ?>,
                Price: <?php echo $item['price']; ?>,
                Quantity: <?php echo $item['quantity']; ?>

                <a href="?remove=1&product_id=<?php echo $item['product_id']; ?>">Remove</a>
            </li>
        <?php endforeach; ?>
    </ul>

    <p>Total Price: <?php echo $total_price; ?></p>
<?php endif; ?>

<br>
<a href="index.php">Continue Shopping</a>
</body>
</html>


<?php
session_start();
?>


if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}
$cart = &$_SESSION['cart'];


<?php
session_start();

// Retrieve product details (you would typically fetch this from a database)
$product = array(
    'id' => $_POST['product_id'],
    'name' => 'Product Name',
    'price' => 29.99
);

if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Check if the product is already in the cart
if (isset($_SESSION['cart'][$_POST['product_id']])) {
    // Increment quantity
    $_SESSION['cart'][$_POST['product_id']]['quantity']++;
} else {
    // Add new product to cart
    $_SESSION['cart'][$_POST['product_id']] = array(
        'id' => $product['id'],
        'name' => $product['name'],
        'price' => $product['price'],
        'quantity' => 1
    );
}

// Redirect back to the product page or cart view
header('Location: view_cart.php');
exit();
?>


<?php
session_start();

if (isset($_POST['update'])) {
    foreach ($_POST['quantity'] as $product_id => $quantity) {
        if ($quantity < 1) {
            // Remove item from cart if quantity is less than 1
            unset($_SESSION['cart'][$product_id]);
        } else {
            // Update the quantity
            $_SESSION['cart'][$product_id]['quantity'] = $quantity;
        }
    }
}

// Redirect back to the cart view
header('Location: view_cart.php');
exit();
?>


<?php
session_start();

if (isset($_GET['product_id'])) {
    unset($_SESSION['cart'][$_GET['product_id']]);
}

// Redirect back to the cart view
header('Location: view_cart.php');
exit();
?>


<?php
session_start();

if (!isset($_SESSION['cart']) || empty($_SESSION['cart'])) {
    echo "<p>Your cart is empty.</p>";
} else {
    $cart = $_SESSION['cart'];
?>
<table>
    <tr>
        <th>Product Name</th>
        <th>Price</th>
        <th>Quantity</th>
        <th>Total</th>
        <th>Action</th>
    </tr>
    <?php foreach ($cart as $product_id => $item): ?>
    <tr>
        <td><?php echo $item['name']; ?></td>
        <td>$<?php echo number_format($item['price'], 2); ?></td>
        <td><?php echo $item['quantity']; ?></td>
        <td>$<?php echo number_format($item['price'] * $item['quantity'], 2); ?></td>
        <td><a href="remove_from_cart.php?product_id=<?php echo $product_id; ?>">Remove</a></td>
    </tr>
    <?php endforeach; ?>
</table>

<p>Grand Total: $<?php echo number_format(array_sum(array_column($cart, 'price') * array_column($cart, 'quantity')), 2); ?></p>
<?php } ?>

<a href="checkout.php">Checkout</a>


<?php
// Start the session
session_start();

// Function to initialize cart if not exists
function initCart() {
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }
}

// Add item to cart
function addToCart($productId, $name, $price) {
    initCart();
    $found = false;
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['product_id'] == $productId) {
            $item['quantity']++;
            $found = true;
            break;
        }
    }
    if (!$found) {
        $_SESSION['cart'][] = array(
            'product_id' => $productId,
            'name' => $name,
            'price' => $price,
            'quantity' => 1
        );
    }
}

// Remove item from cart
function removeFromCart($index) {
    initCart();
    if (isset($_SESSION['cart'][$index])) {
        unset($_SESSION['cart'][$index]);
        $_SESSION['cart'] = array_values($_SESSION['cart']);
    }
}

// Update quantity of an item
function updateQuantity($index, $quantity) {
    initCart();
    if (isset($_SESSION['cart'][$index]) && $quantity > 0) {
        $_SESSION['cart'][$index]['quantity'] = $quantity;
    }
}

// Display cart contents and calculate total
function displayCart() {
    initCart();
    $total = 0;
    echo "<table>";
    foreach ($_SESSION['cart'] as $key => $item) {
        $total += $item['price'] * $item['quantity'];
        echo "<tr>";
        echo "<td>{$item['name']}</td>";
        echo "<td>Quantity: {$item['quantity']}</td>";
        echo "<td><a href='?remove={$key}'>Remove</a></td>";
        echo "</tr>";
    }
    echo "<tr><td colspan='3'><strong>Total: $$total</strong></td></tr>";
    echo "</table>";
}

// Example usage:
if (isset($_GET['add'])) {
    $productId = $_GET['add'];
    $name = "Product " . $productId;
    $price = 9.99; // Set actual price
    addToCart($productId, $name, $price);
} elseif (isset($_GET['remove'])) {
    removeFromCart($_GET['remove']);
}

displayCart();
?>


<?php
// Start the session
session_start();

// Check if cart exists in session, if not initialize it
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function addToCart($item_id, $item_name, $price, $quantity) {
    global $mysqli;
    
    // Check if item is already in the cart
    $found = false;
    foreach ($_SESSION['cart'] as $key => $item) {
        if ($item['item_id'] == $item_id) {
            $_SESSION['cart'][$key]['quantity'] += $quantity;
            $found = true;
            break;
        }
    }

    // If item is not in cart, add it
    if (!$found) {
        $item_array = array(
            'item_id' => $item_id,
            'item_name' => $item_name,
            'price' => $price,
            'quantity' => $quantity
        );
        $_SESSION['cart'][] = $item_array;
    }
}

// Function to remove item from cart
function removeFromCart($item_id) {
    foreach ($_SESSION['cart'] as $key => $item) {
        if ($item['item_id'] == $item_id) {
            unset($_SESSION['cart'][$key]);
            break;
        }
    }
    // Re-index the array keys
    $_SESSION['cart'] = array_values($_SESSION['cart']);
}

// Function to calculate total price
function cartTotal() {
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += ($item['price'] * $item['quantity']);
    }
    return number_format($total, 2);
}

// Example usage:
if (isset($_GET['action'])) {
    switch ($_GET['action']) {
        case 'add':
            addToCart(1, 'Product A', 29.99, 1);
            break;
        case 'remove':
            removeFromCart(1);
            break;
        case 'checkout':
            // Process checkout
            print_r($_SESSION['cart']);
            session_unset();
            session_destroy();
            header("Location: index.php");
            exit();
    }
}

// Display cart contents
echo "<h2>Shopping Cart</h2>";
if (empty($_SESSION['cart'])) {
    echo "Your cart is empty!";
} else {
    foreach ($_SESSION['cart'] as $item) {
        echo "Item ID: " . $item['item_id'] . "<br />";
        echo "Name: " . $item['item_name'] . "<br />";
        echo "Price: $" . $item['price'] . "<br />";
        echo "Quantity: " . $item['quantity'] . "<br />";
        echo "<hr />";
    }
    echo "Total: $" . cartTotal();
}
?>

<!-- HTML links to modify cart -->
<a href="?action=add">Add Item</a><br />
<a href="?action=remove">Remove Item</a><br />
<a href="?action=checkout">Checkout</a>


<?php
// Start the session
session_start();

// Check if the cart session exists, if not, initialize it
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to the cart
function addToCart($productId, $productName, $price) {
    global $pdo; // Assuming you have a database connection
    
    // Check if product already exists in the cart
    $itemExists = false;
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['product_id'] == $productId) {
            $itemExists = true;
            break;
        }
    }

    if ($itemExists) {
        // Increment quantity if product already exists
        $item['quantity']++;
    } else {
        // Add new item to the cart
        $_SESSION['cart'][] = array(
            'product_id' => $productId,
            'product_name' => $productName,
            'price' => $price,
            'quantity' => 1
        );
    }
}

// Function to display cart contents
function displayCart() {
    $totalPrice = 0;
    
    echo "<table>";
    echo "<tr><th>Product Name</th><th>Quantity</th><th>Price</th><th>Total</th><th>Action</th></tr>";
    
    foreach ($_SESSION['cart'] as $item) {
        $subtotal = $item['price'] * $item['quantity'];
        $totalPrice += $subtotal;
        
        echo "<tr>";
        echo "<td>" . $item['product_name'] . "</td>";
        echo "<td>" . $item['quantity'] . "</td>";
        echo "<td>₹" . number_format($item['price'], 2) . "</td>";
        echo "<td>₹" . number_format($subtotal, 2) . "</td>";
        echo "<td><a href='cart.php?action=remove&product_id=" . $item['product_id'] . "'>Remove</a></td>";
        echo "</tr>";
    }
    
    echo "<tr><td colspan='4'><strong>Total:</strong> ₹" . number_format($totalPrice, 2) . "</td></tr>";
    echo "</table>";
}

// Function to delete item from cart
function deleteFromCart($productId) {
    $newCart = array();
    
    foreach ($_SESSION['cart'] as $item) {
        if ($item['product_id'] != $productId) {
            $newCart[] = $item;
        }
    }
    
    $_SESSION['cart'] = $newCart;
}

// Handle cart actions
if (isset($_GET['action'])) {
    switch ($_GET['action']) {
        case 'remove':
            deleteFromCart($_GET['product_id']);
            break;
    }
}

// Destroy session when done
function destroySession() {
    session_unset();
    session_destroy();
    header("Location: index.php");
}
?>


<?php
session_start();

// Initialize the cart if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add product to cart
if (isset($_POST['action']) && $_POST['action'] == 'add') {
    $productId = isset($_POST['product_id']) ? intval($_POST['product_id']) : 0;
    $quantity = isset($_POST['quantity']) ? intval($_POST['quantity']) : 1;

    // Check if product is already in cart
    if (array_key_exists($productId, $_SESSION['cart'])) {
        $_SESSION['cart'][$productId] += $quantity;
    } else {
        $_SESSION['cart'][$productId] = $quantity;
    }
}

// Remove product from cart
if (isset($_POST['action']) && $_POST['action'] == 'remove') {
    $productId = isset($_POST['product_id']) ? intval($_POST['product_id']) : 0;

    if (array_key_exists($productId, $_SESSION['cart'])) {
        unset($_SESSION['cart'][$productId]);
    }
}

// Update product quantity in cart
if (isset($_POST['action']) && $_POST['action'] == 'update') {
    $productId = isset($_POST['product_id']) ? intval($_POST['product_id']) : 0;
    $quantity = isset($_POST['quantity']) ? intval($_POST['quantity']) : 1;

    if ($quantity > 0) {
        $_SESSION['cart'][$productId] = $quantity;
    }
}

// Display cart contents
echo "<h2>Shopping Cart</h2>";
echo "<table border='1'>";
echo "<tr><th>Product ID</th><th>Quantity</th><th>Action</th></tr>";

foreach ($_SESSION['cart'] as $product_id => $quantity) {
    echo "<tr>";
    echo "<td>$product_id</td>";
    echo "<td>$quantity</td>";
    echo "<td>";
    echo "<form method='post'>";
    echo "<input type='hidden' name='action' value='remove'>";
    echo "<input type='hidden' name='product_id' value='$product_id'>";
    echo "<button type='submit'>Remove</button>";
    echo "</form>";
    echo "</td>";
    echo "</tr>";
}

echo "</table>";

// Add form to add products
echo "<h2>Add Product to Cart</h2>";
echo "<form method='post'>";
echo "<input type='hidden' name='action' value='add'>";
echo "<label>Product ID:</label><br/>";
echo "<input type='text' name='product_id'><br/>";
echo "<label>Quantity:</label><br/>";
echo "<input type='number' name='quantity' min='1' value='1'><br/>";
echo "<button type='submit'>Add to Cart</button>";
echo "</form>";
?>


<?php
// Start the session
if (session_status() == PHP_SESSION_NONE) {
    session_start();
}

// Initialize cart if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 20px;
            padding: 0;
        }
        .cart-item {
            border: 1px solid #ddd;
            margin-bottom: 10px;
            padding: 10px;
        }
    </style>
</head>
<body>
    <h1>Shopping Cart</h1>

    <!-- Add to cart form -->
    <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
        <input type="text" name="product_id" placeholder="Enter Product ID">
        <input type="text" name="product_name" placeholder="Enter Product Name">
        <input type="number" name="price" placeholder="Enter Price">
        <input type="number" name="quantity" placeholder="Enter Quantity">
        <button type="submit" name="add_to_cart">Add to Cart</button>
    </form>

    <?php
    // Add item to cart
    if (isset($_POST['add_to_cart'])) {
        $product = array(
            'id' => $_POST['product_id'],
            'name' => $_POST['product_name'],
            'price' => $_POST['price'],
            'quantity' => $_POST['quantity']
        );
        
        $_SESSION['cart'][] = $product;
    }

    // Display cart contents
    echo "<h2>Cart Contents:</h2>";
    if (empty($_SESSION['cart'])) {
        echo "Your cart is empty.";
    } else {
        foreach ($_SESSION['cart'] as $key => $item) {
            echo "<div class='cart-item'>";
            echo "<p>Product ID: " . $item['id'] . "</p>";
            echo "<p>Product Name: " . $item['name'] . "</p>";
            echo "<p>Price: $" . number_format($item['price'], 2) . "</p>";
            echo "<p>Quantity: " . $item['quantity'] . "</p>";
            echo "<form method='post'>";
            echo "<input type='hidden' name='remove_index' value='" . $key . "'>";
            echo "<button type='submit' name='remove_from_cart'>Remove</button>";
            echo "</form>";
            echo "</div>";
        }
    }

    // Remove item from cart
    if (isset($_POST['remove_from_cart'])) {
        if (!empty($_POST['remove_index'])) {
            $index = $_POST['remove_index'];
            unset($_SESSION['cart'][$index]);
            // Re-index the array
            $_SESSION['cart'] = array_values($_SESSION['cart']);
        }
    }

    // Calculate total price
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += ($item['price'] * $item['quantity']);
    }
    echo "<h3>Total Price: $" . number_format($total, 2) . "</h3>";

    // Destroy session when done
    // session_destroy();
    ?>
</body>
</html>


<?php
// Start the session
session_start();

// Initialize cart if not set
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add item to cart
function addToCart($item_id, $item_name, $price) {
    global $db;
    
    // Check if item is already in cart
    $found = false;
    foreach ($_SESSION['cart'] as $index => $item) {
        if ($item['id'] == $item_id) {
            $_SESSION['cart'][$index]['quantity']++;
            $found = true;
            break;
        }
    }
    
    // If item not found, add it
    if (!$found) {
        $new_item = array(
            'id' => $item_id,
            'name' => $item_name,
            'price' => $price,
            'quantity' => 1
        );
        $_SESSION['cart'][] = $new_item;
    }
}

// Update item quantity in cart
function updateCart($item_id, $quantity) {
    foreach ($_SESSION['cart'] as $index => $item) {
        if ($item['id'] == $item_id) {
            $_SESSION['cart'][$index]['quantity'] = $quantity;
            break;
        }
    }
}

// Remove item from cart
function removeItem($item_id) {
    $index = array_search($item_id, array_column($_SESSION['cart'], 'id'));
    if ($index !== false) {
        unset($_SESSION['cart'][$index]);
        $_SESSION['cart'] = array_values($_SESSION['cart']); // Re-index the array
    }
}

// Display cart contents
function displayCart() {
    $total_price = 0;
    echo "<table>";
    foreach ($_SESSION['cart'] as $item) {
        echo "<tr>";
        echo "<td>" . $item['name'] . "</td>";
        echo "<td>" . $item['price'] . "</td>";
        echo "<td><input type='number' value='" . $item['quantity'] . "' onchange='updateQuantity(" . $item['id'] . ", this.value)'></td>";
        echo "<td><button onclick='removeItem(" . $item['id'] . ")'>Remove</button></td>";
        echo "</tr>";
        
        $total_price += $item['price'] * $item['quantity'];
    }
    echo "<tr><td colspan='4'><strong>Total: $" . number_format($total_price, 2) . "</strong></td></tr>";
    echo "</table>";
}

// Example usage:
if (isset($_POST['add_to_cart'])) {
    addToCart(1, 'Product Name', 9.99);
} elseif (isset($_GET['remove'])) {
    removeItem($_GET['remove']);
}

// Security measures
session_regenerate(); // Prevent session fixation

// Set session cookie parameters
ini_set('session.cookie_httponly', 1);
ini_set('session.use_strict_mode', 1);

// Display cart contents
displayCart();

// Destroy session when done
if (isset($_GET['logout'])) {
    session_unset();
    session_destroy();
}
?>


<?php
session_start();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <?php
    // Add item to cart
    if (isset($_GET['action']) && $_GET['action'] == 'add') {
        $product_id = $_GET['id'];
        $product_name = $_GET['name'];

        // Initialize cart session variable
        if (!isset($_SESSION['cart'])) {
            $_SESSION['cart'] = array();
        }

        // Add item to the cart
        $item = array(
            'id' => $product_id,
            'name' => $product_name,
            'price' => 10, // Set your product price here
            'quantity' => 1
        );

        // Check if item is already in the cart
        $found = false;
        foreach ($_SESSION['cart'] as &$item_cart) {
            if ($item_cart['id'] == $product_id) {
                $item_cart['quantity']++;
                $found = true;
                break;
            }
        }

        // If not found, add new item to the cart
        if (!$found) {
            array_push($_SESSION['cart'], $item);
        }

        echo "Item added to cart!";
    }

    // View cart items
    echo "<h2>Cart Items:</h2>";
    if (isset($_SESSION['cart']) && count($_SESSION['cart']) > 0) {
        foreach ($_SESSION['cart'] as $item) {
            echo "Product ID: " . $item['id'] . "<br />";
            echo "Product Name: " . $item['name'] . "<br />";
            echo "Price: $" . $item['price'] . "<br />";
            echo "Quantity: " . $item['quantity'] . "<br />";
            echo "Total: $" . ($item['price'] * $item['quantity']) . "<br /><br />";
        }
    } else {
        echo "Your cart is empty!";
    }
    ?>

</body>
</html>


<?php
session_start();
?>


if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}


// Assuming $product_id and $quantity are obtained from your form submission
if (isset($_POST['add_to_cart'])) {
    $product_id = trim(intval($_POST['product_id']));
    $quantity = intval($_POST['quantity']);

    // Check if the product is already in the cart
    if (isset($_SESSION['cart'][$product_id])) {
        $_SESSION['cart'][$product_id]['quantity'] += $quantity;
    } else {
        // Fetch product details from your database
        $conn = mysqli_connect("localhost", "username", "password", "database");
        $query = "SELECT * FROM products WHERE id = '" . mysqli_real_escape_string($conn, $product_id) . "'";
        $result = mysqli_query($conn, $query);
        $product = mysqli_fetch_assoc($result);

        if ($product) {
            $_SESSION['cart'][$product_id] = array(
                'name' => $product['name'],
                'price' => $product['price'],
                'quantity' => $quantity
            );
        } else {
            // Handle error: product not found
            echo "Product not found.";
        }
    }

    // Redirect back to the cart page or show a success message
    header("Location: cart.php");
}


<?php
session_start();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
    <!-- Include CSS for styling -->
    <style>
        .cart-item {
            border: 1px solid #ddd;
            padding: 10px;
            margin-bottom: 5px;
        }
        .remove-btn {
            color: red;
            cursor: pointer;
        }
    </style>
</head>
<body>
    <h2>Your Shopping Cart</h2>
    
    <?php
    if (empty($_SESSION['cart'])) {
        echo "<p>Your cart is empty.</p>";
    } else {
        $total = 0;
        foreach ($_SESSION['cart'] as $item_id => $item) {
            $subtotal = $item['price'] * $item['quantity'];
            $total += $subtotal;
            ?>
            <div class="cart-item">
                <?php echo $item['name']; ?> - 
                <?php echo "$" . number_format($item['price'], 2); ?> x
                <?php echo $item['quantity']; ?> = 
                <?php echo "$" . number_format($subtotal, 2); ?>
                
                <a href="cart.php?action=remove&item_id=<?php echo $item_id; ?>" class="remove-btn">Remove</a>
            </div>
            <?php
        }
        ?>
        <h3>Total: <?php echo "$" . number_format($total, 2); ?></h3>
        <?php
    }
    ?>

    <!-- Add to Cart Button -->
    <form action="add_to_cart.php" method="post">
        <input type="hidden" name="product_id" value="<?php echo $product_id; ?>">
        <input type="number" name="quantity" min="1" max="99" value="1">
        <button type="submit" name="add_to_cart">Add to Cart</button>
    </form>

    <!-- Logout Button -->
    <a href="logout.php">Logout</a>
</body>
</html>


// In your cart page (cart.php)

if (isset($_GET['action']) && $_GET['action'] == 'remove' && isset($_GET['item_id'])) {
    $item_id = intval($_GET['item_id']);
    
    if (isset($_SESSION['cart'][$item_id])) {
        unset($_SESSION['cart'][$item_id]);
        
        // Re-index the cart array to prevent empty indexes
        $_SESSION['cart'] = array_values($_SESSION['cart']);
    }
}


// Add this in your cart.php file
if (isset($_GET['action']) && $_GET['action'] == 'clear') {
    unset($_SESSION['cart']);
    session_unset();
}


// In your logout.php file

session_start();
unset($_SESSION['cart']);
session_destroy();

// Redirect to login page or home page
header("Location: index.php");
exit();


<?php
session_start();

// Initialize cart array if not exists
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add item to cart
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $productId = isset($_POST['product_id']) ? intval($_POST['product_id']) : 0;
    $productName = isset($_POST['product_name']) ? $_POST['product_name'] : '';
    $price = isset($_POST['price']) ? floatval($_POST['price']) : 0.0;
    $quantity = isset($_POST['quantity']) ? intval($_POST['quantity']) : 1;

    if ($productId && $productName && $price) {
        $_SESSION['cart'][] = array(
            'product_id' => $productId,
            'product_name' => $ productName,
            'price' => $price,
            'quantity' => $quantity
        );

        echo "Item added to cart!";
    } else {
        die("Error: Please select a valid product.");
    }
}

// Display the cart contents
echo "<h2>Your Cart:</h2>";
echo "<table border='1'>";
echo "<tr><th>Product ID</th><th>Product Name</th><th>Price</th><th>Quantity</th></tr>";

$total = 0;

foreach ($_SESSION['cart'] as $item) {
    echo "<tr>";
    echo "<td>" . $item['product_id'] . "</td>";
    echo "<td>" . $item['product_name'] . "</td>";
    echo "<td>" . $item['price'] . "</td>";
    echo "<td>" . $item['quantity'] . "</td>";
    echo "</tr>";
    
    $total += ($item['price'] * $item['quantity']);
}

echo "<tr><th colspan='3'>Total:</th><th>" . $total . "</th></tr>";
echo "</table>";
?>


<?php
session_start();
?>


<?php
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Check if the cart session exists, initialize if not
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }

    $product_id = trim($_POST['product_id']);
    $quantity = trim($_POST['quantity']);

    $error = '';

    // Validate input
    if (empty($product_id) || empty($quantity)) {
        $error = "Product ID and quantity are required.";
    } elseif (!is_numeric($quantity)) {
        $error = "Quantity must be a number.";
    }

    if (empty($error)) {
        // Prepare the new item array
        $new_item = array(
            'id' => $product_id,
            'quantity' => $quantity
        );

        // Add the new item to the cart and redirect
        $_SESSION['cart'][] = $new_item;
        header("Location: " . $_SERVER['PHP_SELF']);
        exit();
    }
}
?>


<?php
session_start();

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $error = '';
    $product_id = trim($_POST['product_id']);
    $quantity = trim($_POST['quantity']);

    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }

    if (empty($product_id) || empty($quantity)) {
        $error = "Product ID and quantity are required.";
    } elseif (!is_numeric($quantity)) {
        $error = "Quantity must be a number.";
    }

    if (empty($error)) {
        $new_item = array(
            'id' => $product_id,
            'quantity' => $quantity
        );
        $_SESSION['cart'][] = $new_item;
        header("Location: " . $_SERVER['PHP_SELF']);
        exit();
    }
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Shopping Cart</title>
</head>
<body>
    <?php if (!empty($error)): ?>
        <p style="color: red;"><?php echo $error; ?></p>
    <?php endif; ?>

    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        Product ID: <input type="text" name="product_id" required><br>
        Quantity: <input type="number" name="quantity" min="1" required><br>
        <input type="submit" name="add_to_cart" value="Add to Cart">
    </form>

    <?php if (!empty($_SESSION['cart'])): ?>
        <h3>Cart Items:</h3>
        <ul>
            <?php foreach ($_SESSION['cart'] as $item): ?>
                <li>Product ID: <?php echo $item['id']; ?>, Quantity: <?php echo $item['quantity']; ?></li>
            <?php endforeach; ?>
        </ul>
    <?php else: ?>
        <p>Your cart is empty.</p>
    <?php endif; ?>
</body>
</html>


<?php
session_start();

// Initialize cart if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function add_to_cart($item_id, $item_name, $price) {
    // Check if the item already exists in the cart
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['id'] == $item_id) {
            $item['quantity']++;
            return;
        }
    }
    
    // If not, add the new item to the cart
    $_SESSION['cart'][] = array(
        'id' => $item_id,
        'name' => $item_name,
        'price' => $price,
        'quantity' => 1
    );
}

// Function to remove item from cart
function remove_from_cart($item_id) {
    foreach ($_SESSION['cart'] as $key => $item) {
        if ($item['id'] == $item_id) {
            unset($_SESSION['cart'][$key]);
            break;
        }
    }
    
    // Re-index the array keys
    $_SESSION['cart'] = array_values($_SESSION['cart']);
}

// Function to update item quantity in cart
function update_cart($item_id, $quantity) {
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['id'] == $item_id) {
            $item['quantity'] = $quantity;
            break;
        }
    }
}

// Function to calculate total price of items in cart
function get_cart_total() {
    $total = 0;
    
    foreach ($_SESSION['cart'] as $item) {
        $total += ($item['price'] * $item['quantity']);
    }
    
    return number_format($total, 2);
}

// Function to display cart contents
function display_cart() {
    if (empty($_SESSION['cart'])) {
        echo "Your cart is empty!";
        return;
    }
    
    echo "<h2>Shopping Cart</h2>";
    echo "<table border='1'>";
    echo "<tr><th>Item ID</th><th>Item Name</th><th>Price</th><th>Quantity</th><th>Action</th></tr>";
    
    foreach ($_SESSION['cart'] as $item) {
        echo "<tr>";
        echo "<td>" . $item['id'] . "</td>";
        echo "<td>" . $item['name'] . "</td>";
        echo "<td>$" . number_format($item['price'], 2) . "</td>";
        echo "<td><input type='number' value='" . $item['quantity'] . "' onchange='updateQuantity(" . $item['id'] . ")'></td>";
        echo "<td><a href='remove_item.php?id=" . $item['id'] . "'>Remove</a></td>";
        echo "</tr>";
    }
    
    echo "</table>";
    echo "<p>Total: $" . get_cart_total() . "</p>";
}

// Example usage:
// Start session
session_start();

// Add item to cart
add_to_cart(1, 'Product 1', 29.99);

// Display cart contents
display_cart();

// Remove item from cart
remove_from_cart(1);

// Update quantity of an item
update_cart(1, 2);
?>


<?php
session_start();

// Check if the cart exists in the session, if not initialize it
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add items to the cart
function addToCart($productId, $size) {
    global $pdo; // Assuming you have a PDO database connection
    
    // Check if product exists in the database
    $stmt = $pdo->prepare("SELECT * FROM products WHERE id = ?");
    $stmt->execute([$productId]);
    $product = $stmt->fetch();
    
    if ($product) {
        // Item data to store in the cart
        $item = array(
            'id' => $productId,
            'name' => $product['name'],
            'price' => $product['price'],
            'size' => $size,
            'quantity' => 1
        );
        
        // Check if item already exists in the cart
        foreach ($_SESSION['cart'] as &$cartItem) {
            if ($cartItem['id'] == $productId && $cartItem['size'] == $size) {
                $cartItem['quantity']++;
                return;
            }
        }
        
        // Add new item to the cart
        $_SESSION['cart'][] = $item;
    }
}

// Function to display cart contents
function displayCart() {
    if (empty($_SESSION['cart'])) {
        echo "Your cart is empty.";
        return;
    }
    
    foreach ($_SESSION['cart'] as $item) {
        echo "<div>";
        echo "<h3>{$item['name']}</h3>";
        echo "<p>Size: {$item['size']}</p>";
        echo "<p>Quantity: {$item['quantity']}</p>";
        echo "<p>Price: $" . number_format($item['price'], 2) . "</p>";
        echo "</div>";
    }
}

// Example usage:
if (isset($_POST['add_to_cart'])) {
    $productId = $_POST['product_id'];
    $size = $_POST['size'];
    addToCart($productId, $size);
}

// Display cart
displayCart();

// Optional: Add a checkout button
echo "<form action='checkout.php' method='post'>";
echo "<input type='submit' value='Checkout'>";
echo "</form>";
?>


<?php
session_start();


if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}


function addToCart($productId, $productName, $price) {
    // Check if product is already in cart
    if (isset($_SESSION['cart'][$productId])) {
        // Increment quantity
        $_SESSION['cart'][$productId]['quantity']++;
    } else {
        // Add new product to cart
        $_SESSION['cart'][$productId] = array(
            'product_id' => $productId,
            'product_name' => $productName,
            'price' => $price,
            'quantity' => 1
        );
    }
}


function removeFromCart($productId) {
    if (isset($_SESSION['cart'][$productId])) {
        unset($_SESSION['cart'][$productId]);
        // Re-index the array to maintain clean keys
        $_SESSION['cart'] = array_values($_SESSION['cart']);
    }
}


function calculateTotal() {
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += ($item['price'] * $item['quantity']);
    }
    return $total;
}


echo "<h2>Your Shopping Cart</h2>";
if (empty($_SESSION['cart'])) {
    echo "Your cart is empty.";
} else {
    foreach ($_SESSION['cart'] as $item) {
        echo "<div>";
        echo "<p>Product: {$item['product_name']}</p>";
        echo "<p>Price: \${$item['price']}</p>";
        echo "<p>Quantity: {$item['quantity']}</p>";
        echo "</div>";
    }
}


// Clear all session variables
session_unset();

// Destroy the session cookie
if (ini_get("session.use_cookies")) {
    $params = session_get_cookie_params();
    setcookie(session_name(), '', time() - 42000,
        $params["path"], $params["domain"],
        $params["secure"], $params["httponly"]
    );
}

// Destroy the session
session_destroy();


<?php
session_start();

if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function addToCart($productId, $productName, $price) {
    if (isset($_SESSION['cart'][$productId])) {
        $_SESSION['cart'][$productId]['quantity']++;
    } else {
        $_SESSION['cart'][$productId] = array(
            'product_id' => $productId,
            'product_name' => $productName,
            'price' => $price,
            'quantity' => 1
        );
    }
}

// Function to remove item from cart
function removeFromCart($productId) {
    if (isset($_SESSION['cart'][$productId])) {
        unset($_SESSION['cart'][$productId]);
        $_SESSION['cart'] = array_values($_SESSION['cart']);
    }
}

// Function to calculate total amount
function calculateTotal() {
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += ($item['price'] * $item['quantity']);
    }
    return $total;
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <?php
    // Example usage:
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        if (isset($_POST['add'])) {
            addToCart(1, 'Product 1', 100);
        } elseif (isset($_POST['remove'])) {
            removeFromCart(1);
        }
    }

    echo "<h2>Your Shopping Cart</h2>";
    if (empty($_SESSION['cart'])) {
        echo "Your cart is empty.";
    } else {
        foreach ($_SESSION['cart'] as $item) {
            echo "<div>";
            echo "<p>Product: {$item['product_name']}</p>";
            echo "<p>Price: \${$item['price']}</p>";
            echo "<p>Quantity: {$item['quantity']}</p>";
            echo "</div>";
        }
    }

    echo "<h3>Total Amount: \$" . calculateTotal() . "</h3>";

    // Add form to add/remove items
    echo '<form method="post">';
    echo '<input type="submit" name="add" value="Add Item">';
    echo '<input type="submit" name="remove" value="Remove Item">';
    echo '</form>';
    ?>
</body>
</html>


<?php
// Start the session
session_start();

// Create a function to add items to the cart
function addToCart($id, $name, $price) {
    if (isset($_SESSION['cart'])) {
        // Check if item already exists in the cart
        if (!isset($_SESSION['cart'][$id])) {
            $_SESSION['cart'][$id] = array(
                'id' => $id,
                'name' => $name,
                'price' => $price,
                'quantity' => 1
            );
        } else {
            // If item exists, increment quantity
            $_SESSION['cart'][$id]['quantity']++;
        }
    } else {
        // Initialize the cart if it doesn't exist
        $_SESSION['cart'] = array(
            $id => array(
                'id' => $id,
                'name' => $name,
                'price' => $price,
                'quantity' => 1
            )
        );
    }
}

// Create a function to remove items from the cart
function removeFromCart($id) {
    if (isset($_SESSION['cart'][$id])) {
        unset($_SESSION['cart'][$id]);
    }
}

// Create a function to update item quantity in the cart
function updateQuantity($id, $quantity) {
    if (isset($_SESSION['cart'][$id]) && is_numeric($quantity) && $quantity > 0) {
        $_SESSION['cart'][$id]['quantity'] = $quantity;
    } elseif ($quantity <= 0) {
        removeFromCart($id);
    }
}

// Example usage:

// Adding an item to the cart
addToCart(1, 'Product 1', 29.99);

// Updating quantity of an item
updateQuantity(1, 3);

// Removing an item from the cart
removeFromCart(1);

// Displaying the contents of the cart
echo "<pre>";
print_r($_SESSION['cart']);
echo "</pre>";
?>


<?php
session_start();

// Initialize cart if not already set
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function addToCart($productId, $productName, $price) {
    global $pdo; // Assuming you have a database connection
    
    // Check if product is already in cart
    $itemExists = false;
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['product_id'] == $(productId)) {
            $itemExists = true;
            break;
        }
    }

    if (!$itemExists) {
        // Add new item to cart
        $_SESSION['cart'][] = array(
            'product_id' => $productId,
            'product_name' => $productName,
            'price' => $price,
            'quantity' => 1
        );
    } else {
        echo "Product already in cart!";
    }
}

// Function to remove item from cart
function removeFromCart($productId) {
    foreach ($_SESSION['cart'] as $key => &$item) {
        if ($item['product_id'] == $productId) {
            unset($_SESSION['cart'][$key]);
            break;
        }
    }
    $_SESSION['cart'] = array_values($_SESSION['cart']); // Re-index the array
}

// Function to update item quantity in cart
function updateCartQuantity($productId, $newQuantity) {
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['product_id'] == $productId) {
            $item['quantity'] = $newQuantity;
            break;
        }
    }
}

// Function to calculate total price of cart
function calculateTotal() {
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += ($item['price'] * $item['quantity']);
    }
    return $total;
}

// Display cart contents
function displayCart() {
    if (empty($_SESSION['cart'])) {
        echo "Your cart is empty!";
        return;
    }

    foreach ($_SESSION['cart'] as $item) {
        echo "<div>";
        echo "Product ID: " . $item['product_id'] . "<br />";
        echo "Product Name: " . $item['product_name'] . "<br />";
        echo "Price: $" . number_format($item['price'], 2) . "<br />";
        echo "Quantity: " . $item['quantity'] . "<br />";
        echo "</div>";
    }
}

// Example usage:
// addToCart(1, 'Sample Product', 49.99);
// removeFromCart(1);
// updateCartQuantity(1, 2);
// displayCart();
?>


<?php
// Start the session
if (!isset($_SESSION)) {
    session_start();
}

// Initialize cart session variable if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function addToCart($item_id, $item_name, $price) {
    global $quantity;
    
    // Check if item already exists in cart
    if (isset($_SESSION['cart'][$item_id])) {
        // Update quantity
        $_SESSION['cart'][$item_id]['quantity']++;
    } else {
        // Add new item to cart
        $_SESSION['cart'][$item_id] = array(
            'id' => $item_id,
            'name' => $item_name,
            'price' => $price,
            'quantity' => 1
        );
    }
}

// Function to remove item from cart
function removeFromCart($item_id) {
    if (isset($_SESSION['cart'][$item_id])) {
        unset($_SESSION['cart'][$item_id]);
    }
}

// Function to update quantity of an item in cart
function updateQuantity($item_id, $quantity) {
    if ($quantity > 0 && isset($_SESSION['cart'][$item_id])) {
        $_SESSION['cart'][$item_id]['quantity'] = $quantity;
    }
}

// Example usage:
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Add item to cart
    addToCart(1, 'Product A', 29.99);
    
    // Update quantity
    updateQuantity(1, 3);
    
    // Remove item from cart
    removeFromCart(1);
}

// Display cart contents
echo "<pre>";
print_r($_SESSION['cart']);
echo "</pre>";
?>


<?php
// Start the session
session_name("user_session");
session_start();

// Initialize cart if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add item to cart
if (isset($_POST['add_to_cart'])) {
    $productId = $_POST['product_id'];
    $quantity = $_POST['quantity'];

    // Check if product already exists in cart
    if (array_key_exists($productId, $_SESSION['cart'])) {
        $_SESSION['cart'][$productId] += $quantity;
    } else {
        $_SESSION['cart'][$productId] = $quantity;
    }
}

// Remove item from cart
if (isset($_GET['action']) && $_GET['action'] == 'remove') {
    $productIdToRemove = $_GET['product_id'];
    if (array_key_exists($productIdToRemove, $_SESSION['cart'])) {
        unset($_SESSION['cart'][$productIdToRemove]);
    }
}

// Display the cart contents
echo "<h2>Your Cart</h2>";
if (!empty($_SESSION['cart'])) {
    echo "<ul>";
    foreach ($_SESSION['cart'] as $product_id => $quantity) {
        echo "<li>Product ID: $product_id | Quantity: $quantity ";
        // Add remove link
        echo "<a href='?action=remove&product_id=$product_id'>Remove</a></li>";
    }
    echo "</ul>";
} else {
    echo "Your cart is empty.";
}

// Sample products to add to cart
echo "<h2>Products</h2>";
$products = array(
    1 => 'Product 1',
    2 => 'Product 2',
    3 => 'Product 3'
);

foreach ($products as $id => $name) {
    echo "<div>";
    echo "<form method='post'>";
    echo "<input type='hidden' name='product_id' value='$id'>";
    echo "<input type='text' name='quantity' placeholder='Quantity'>";
    echo "<button type='submit' name='add_to_cart'>Add to Cart</button>";
    echo "</form>";
    echo "</div>";
}
?>


<?php
// Start the session
session_start();

// Check if session exists, if not create it
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function addToCart($productId, $productName, $price) {
    // Check if product is already in cart
    if (isset($_SESSION['cart'][$productId])) {
        // Update quantity
        $_SESSION['cart'][$productId]['quantity']++;
    } else {
        // Add new product to cart
        $_SESSION['cart'][$productId] = array(
            'product_id' => $productId,
            'product_name' => $productName,
            'price' => $price,
            'quantity' => 1
        );
    }
}

// Function to update quantity of item in cart
function updateQuantity($productId, $quantity) {
    if (isset($_SESSION['cart'][$productId])) {
        $_SESSION['cart'][$productId]['quantity'] = $quantity;
    }
}

// Function to remove item from cart
function removeFromCart($productId) {
    if (isset($_SESSION['cart'][$productId])) {
        unset($_SESSION['cart'][$productId]);
    }
}

// Example usage:

// Add product with ID 1, name "Product 1", and price $10.99
addToCart(1, "Product 1", 10.99);

// Update quantity of product 1 to 2
updateQuantity(1, 2);

// Remove product 1 from cart
removeFromCart(1);

// Display cart contents
echo "<h3>Shopping Cart:</h3>";
if (!empty($_SESSION['cart'])) {
    echo "<ul>";
    foreach ($_SESSION['cart'] as $item) {
        echo "<li>" . $item['product_name'] . " - $" . number_format($item['price'], 2) . " x " . $item['quantity'] . "</li>";
    }
    echo "</ul>";
} else {
    echo "<p>Your cart is empty.</p>";
}

// Destroy the session when done
$_SESSION = array();
session_destroy();
?>


<?php
session_start();

// Initialize cart if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to the cart
function addToCart($item_id, $quantity) {
    global $conn; // Assuming you have a database connection

    // Check if the item exists in the cart
    if (isset($_SESSION['cart'][$item_id])) {
        $_SESSION['cart'][$item_id]['quantity'] += $quantity;
    } else {
        // Fetch product details from database
        $query = "SELECT * FROM products WHERE id = ?";
        $stmt = $conn->prepare($query);
        $stmt->bind_param("i", $item_id);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($product = $result->fetch_assoc()) {
            $_SESSION['cart'][$item_id] = array(
                'id' => $product['id'],
                'name' => $product['name'],
                'price' => $product['price'],
                'quantity' => $quantity
            );
        }
    }
}

// Function to remove item from the cart
function removeFromCart($item_id) {
    if (isset($_SESSION['cart'][$item_id])) {
        unset($_SESSION['cart'][$item_id]);
        // Regenerate session ID to prevent fixation
        session_regenerate(true);
    }
}

// Function to empty the entire cart
function emptyCart() {
    $_SESSION['cart'] = array();
    session_regenerate(true);
}

// Function to calculate cart total
function getCartTotal() {
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += ($item['price'] * $item['quantity']);
    }
    return $total;
}

// Display cart items
function displayCartItems() {
    if (empty($_SESSION['cart'])) {
        echo "Your cart is empty.";
    } else {
        foreach ($_SESSION['cart'] as $item) {
            echo "<div>";
            echo "Item ID: " . $item['id'] . "<br>";
            echo "Name: " . $item['name'] . "<br>";
            echo "Price: $" . number_format($item['price'], 2) . "<br>";
            echo "Quantity: " . $item['quantity'] . "<br>";
            echo "<a href='remove_item.php?id=" . $item['id'] . "'>Remove</a><br>";
            echo "</div><hr>";
        }
    }
}

// Example usage:
addToCart(1, 2); // Add item with ID 1 and quantity 2
addToCart(2, 1); // Add item with ID 2 and quantity 1

echo "Total items in cart: " . count($_SESSION['cart']);
echo "<br>Subtotal: $" . number_format(getCartTotal(), 2);

// Display all items in the cart
displayCartItems();

// Remove an item from the cart
removeFromCart(1);
?>


<?php
session_start();

function addToCart($id, $name, $price) {
    global $cart;

    $item = array(
        "id" => $id,
        "name" => $name,
        "price" => $price,
        "quantity" => 1
    );

    if (isset($_SESSION['cart'])) {
        $cart = $_SESSION['cart'];
    } else {
        $cart = array();
    }

    $itemExists = false;
    foreach ($cart as $key => $product) {
        if ($product["id"] == $id) {
            $cart[$key]["quantity"] += 1;
            $itemExists = true;
            break;
        }
    }

    if (!$itemExists) {
        array_push($cart, $item);
    }

    $_SESSION['cart'] = $cart;
}

if (isset($_GET['add'])) {
    $id = isset($_GET['id']) ? intval($_GET['id']) : 0;
    $name = isset($_GET['name']) ? $_GET['name'] : '';
    $price = isset($_GET['price']) ? floatval($_GET['price']) : 0.0;

    addToCart($id, $name, $price);
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <h1>Add Items to Cart</h1>
    <!-- Example form -->
    <form action="cart.php" method="get">
        Item ID: <input type="text" name="id"><br>
        Name: <input type="text" name="name"><br>
        Price: <input type="text" name="price"><br>
        <input type="hidden" name="add" value="1">
        <button type="submit">Add to Cart</button>
    </form>

    <a href="display_cart.php">View Cart</a>
</body>
</html>


<?php
session_start();

function displayCart() {
    if (isset($_SESSION['cart'])) {
        $cart = $_SESSION['cart'];
        foreach ($cart as $key => $product) {
            echo "<div>";
            echo "ID: " . $product["id"] . "<br>";
            echo "Name: " . $product["name"] . "<br>";
            echo "Price: $" . number_format($product["price"], 2) . "<br>";
            echo "Quantity: " . $product["quantity"] . "<br>";
            echo "<a href='cart.php?remove_id=" . $product["id"] . "'>Remove</a>";
            echo "</div><hr/>";
        }
    } else {
        echo "Your cart is empty.";
    }
}

function destroyCart() {
    unset($_SESSION['cart']);
}

if (isset($_GET['remove_id'])) {
    if (isset($_SESSION['cart'])) {
        $cart = $_SESSION['cart'];
        foreach ($cart as $key => $product) {
            if ($product["id"] == intval($_GET['remove_id'])) {
                unset($cart[$key]);
                break;
            }
        }
        // Reindex the array
        $cart = array_values($cart);
        $_SESSION['cart'] = $cart;
    }
}

if (isset($_GET['destroy'])) {
    destroyCart();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <?php displayCart(); ?>

    <a href="cart.php">Add More Items</a><br>
    <a href="display_cart.php?destroy=1">Empty Cart</a>

    <?php
    if (isset($_GET['remove_id'])) {
        echo "Item removed from cart.";
    }
    ?>
</body>
</html>


<?php
session_start();

// Initialize cart if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Product information (you can replace this with data from your database)
$products = array(
    1 => array('name' => 'Product 1', 'price' => 10.00),
    2 => array('name' => 'Product 2', 'price' => 20.00),
    3 => array('name' => 'Product 3', 'price' => 30.00)
);

// Add item to cart
if (isset($_POST['action']) && $_POST['action'] == 'add') {
    $productId = intval($_POST['product_id']);
    if (isset($products[$productId])) {
        // Check if the product is already in the cart
        if (isset($_SESSION['cart'][$productId])) {
            // Increment quantity
            $_SESSION['cart'][$productId]['quantity']++;
        } else {
            // Add new product to cart
            $_SESSION['cart'][$ productId] = array(
                'name' => $products[$productId]['name'],
                'price' => $products[$productId]['price'],
                'quantity' => 1
            );
        }
    }
}

// Remove item from cart
if (isset($_POST['action']) && $_POST['action'] == 'remove') {
    $productId = intval($_POST['product_id']);
    if (isset($_SESSION['cart'][$productId])) {
        unset($_SESSION['cart'][$productId]);
    }
}

// Function to display cart contents
function displayCart() {
    global $products;
    
    echo "<h2>Your Cart</h2>";
    echo "<table border='1'>";
    echo "<tr><th>Product</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>";
    
    if (empty($_SESSION['cart'])) {
        echo "<tr><td colspan='5'>Your cart is empty.</td></tr>";
    } else {
        $total = 0;
        foreach ($_SESSION['cart'] as $id => $item) {
            $subtotal = $item['price'] * $item['quantity'];
            $total += $subtotal;
            
            echo "<tr>";
            echo "<td>" . $item['name'] . "</td>";
            echo "<td>$$item[price]</td>";
            echo "<td><form method='post'><input type='hidden' name='product_id' value='$id'><input type='submit' name='action' value='remove'></form></td>";
            echo "<td>$$subtotal</td>";
            echo "</tr>";
        }
    }
    
    if (!empty($_SESSION['cart'])) {
        echo "<tr><td colspan='3'>Total:</td><td>$$total</td><td></td></tr>";
    }
    echo "</table>";
}

// Display the cart
displayCart();

?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <!-- Product listing -->
    <h2>Products Available</h2>
    <?php foreach ($products as $id => $product): ?>
        <div>
            <h3><?php echo $product['name']; ?></h3>
            <p>Price: $<?php echo number_format($product['price'], 2); ?></p>
            <form method="post">
                <input type="hidden" name="product_id" value="<?php echo $id; ?>">
                <input type="submit" name="action" value="Add to Cart">
            </form>
        </div>
    <?php endforeach; ?>

</body>
</html>


<?php
// Initialize the session
session_start();

// Function to add item to cart
function addToCart($item_id, $item_name, $price) {
    // Check if session exists and has a cart array
    if (isset($_SESSION['cart'])) {
        // Check if item already exists in cart
        if (array_key_exists($item_id, $_SESSION['cart'])) {
            // Increment quantity
            $_SESSION['cart'][$item_id]['quantity']++;
        } else {
            // Add new item to cart
            $_SESSION['cart'][$item_id] = array(
                'item_id' => $item_id,
                'item_name' => $item_name,
                'price' => $price,
                'quantity' => 1
            );
        }
    } else {
        // Create new cart array if it doesn't exist
        $_SESSION['cart'] = array(
            $item_id => array(
                'item_id' => $item_id,
                'item_name' => $item_name,
                'price' => $price,
                'quantity' => 1
            )
        );
    }
}

// Function to remove item from cart
function removeFromCart($item_id) {
    // Check if session exists and has a cart array
    if (isset($_SESSION['cart']) && array_key_exists($item_id, $_SESSION['cart'])) {
        // Remove the item from cart
        unset($_SESSION['cart'][$item_id]);
    }
}

// Function to display cart contents
function displayCart() {
    $total = 0;
    echo "<table border='1'>";
    echo "<tr><th>Item Name</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>";
    
    foreach ($_SESSION['cart'] as $item) {
        $subtotal = $item['price'] * $item['quantity'];
        $total += $subtotal;
        
        echo "<tr>";
        echo "<td>" . $item['item_name'] . "</td>";
        echo "<td>($" . number_format($item['price'], 2) . ")</td>";
        echo "<td><input type='number' min='1' value='" . $item['quantity'] . "'></td>";
        echo "<td>($" . number_format($subtotal, 2) . ")</td>";
        echo "<td><a href='?remove=" . $item['item_id'] . "'>Remove</a></td>";
        echo "</tr>";
    }
    
    echo "<tr><td colspan='4'><strong>Total:</strong> $" . number_format($total, 2) . "</td></tr>";
    echo "</table>";
}

// Example usage:
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    if (isset($_POST['add_to_cart'])) {
        // Add item to cart
        addToCart(1, "Product 1", 9.99);
    }
}

if (isset($_GET['remove'])) {
    // Remove item from cart
    removeFromCart($_GET['remove']);
}

// Display cart contents
echo "<h2>Shopping Cart</h2>";
displayCart();

// Add new items to cart
echo "<form method='post'>";
echo "<input type='hidden' name='add_to_cart'>";
echo "<button type='submit'>Add Product 1</button>";
echo "</form>";
?>


<?php
// Initialize the session
session_start();

// Check if cart exists in the session. If not, create it.
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add item to cart
if (isset($_POST['add_to_cart'])) {
    $productId = $_POST['product_id'];
    $quantity = $_POST['quantity'];

    // Check if product is already in the cart
    if (array_key_exists($productId, $_SESSION['cart'])) {
        // Increment quantity
        $_SESSION['cart'][$productId] += $quantity;
    } else {
        // Add new product to cart
        $_SESSION['cart'][$productId] = $quantity;
    }
}

// Update item quantity in cart
if (isset($_POST['update_quantity'])) {
    $productId = $_POST['product_id'];
    $newQuantity = $_POST['new_quantity'];

    if ($newQuantity > 0) {
        $_SESSION['cart'][$productId] = $newQuantity;
    } else {
        // Remove item if quantity is zero or negative
        unset($_SESSION['cart'][$productId]);
    }
}

// Remove item from cart
if (isset($_POST['remove_item'])) {
    $productId = $_POST['product_id'];
    unset($_SESSION['cart'][$productId]);
}

// Display cart contents
echo "<h2>Your Cart</h2>";
echo "<pre>";
print_r($_SESSION['cart']);
echo "</pre>";

// Sample HTML form to add items to cart
?>
<form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
    Product ID: <input type="text" name="product_id"><br>
    Quantity: <input type="number" name="quantity" min="1" value="1"><br>
    <button type="submit" name="add_to_cart">Add to Cart</button><br><br>

    <!-- Update quantity example -->
    Product ID to update: <input type="text" name="product_id_update">
    New Quantity: <input type="number" name="new_quantity" min="1" value="1">
    <button type="submit" name="update_quantity">Update Quantity</button><br><br>

    <!-- Remove item example -->
    Product ID to remove: <input type="text" name="product_id_remove">
    <button type="submit" name="remove_item">Remove Item</button>
</form>


<?php
session_start();

// Initialize cart if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add item to cart
if (isset($_POST['add_to_cart'])) {
    $product_id = intval($_POST['product_id']);
    $quantity = intval($_POST['quantity']);

    // Check if product is already in cart
    $found = false;
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['product_id'] == $product_id) {
            $item['quantity'] += $quantity;
            $found = true;
            break;
        }
    }

    // If not found, add new product to cart
    if (!$found) {
        $_SESSION['cart'][] = array(
            'product_id' => $product_id,
            'quantity' => $quantity,
            // Add more product details like name, price, etc.
        );
    }
}

// Remove item from cart
if (isset($_POST['remove_from_cart'])) {
    $product_id = intval($_POST['product_id']);

    foreach ($_SESSION['cart'] as $key => &$item) {
        if ($item['product_id'] == $product_id) {
            unset($_SESSION['cart'][$key]);
            break;
        }
    }

    // Re-index cart array
    $_SESSION['cart'] = array_values($_SESSION['cart']);
}

// Update quantity of item in cart
if (isset($_POST['update_quantity'])) {
    $product_id = intval($_POST['product_id']);
    $quantity = intval($_POST['quantity']);

    foreach ($_SESSION['cart'] as &$item) {
        if ($item['product_id'] == $product_id) {
            $item['quantity'] = $quantity;
            break;
        }
    }
}

// Display cart contents
echo "<h2>Your Cart</h2>";
if (empty($_SESSION['cart'])) {
    echo "Your cart is empty.";
} else {
    echo "<table>";
    echo "<tr><th>Product ID</th><th>Quantity</th><th>Action</th></tr>";
    foreach ($_SESSION['cart'] as $item) {
        echo "<tr>";
        echo "<td>" . $item['product_id'] . "</td>";
        echo "<td>" . $item['quantity'] . "</td>";
        echo "<td>
                <form method='post'>
                    <input type='hidden' name='product_id' value='" . $item['product_id'] . "'>
                    <input type='number' name='quantity' min='1' value='" . $item['quantity'] . "'>
                    <button type='submit' name='update_quantity'>Update</button>
                </form>
                <form method='post'>
                    <input type='hidden' name='product_id' value='" . $item['product_id'] . "'>
                    <button type='submit' name='remove_from_cart'>Remove</button>
                </form>
              </td>";
        echo "</tr>";
    }
    echo "</table>";
}

// Sample HTML for adding items to cart
echo "<h2>Products</h2>";
echo "<form method='post'>";
echo "<input type='hidden' name='product_id' value='1'>";
echo "<input type='number' name='quantity' min='1' value='1'>";
echo "<button type='submit' name='add_to_cart'>Add to Cart</button>";
echo "</form>";

// Include this in your HTML file
?>


<?php
// Start the session
session_start();

// Define product data (You can connect this to your database)
$products = array(
    1 => array('name' => 'Product 1', 'price' => 19.99),
    2 => array('name' => 'Product 2', 'price' => 29.99),
    3 => array('name' => 'Product 3', 'price' => 39.99)
);

// Initialize cart if not exists
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add item to cart
if (isset($_GET['action']) && $_GET['action'] == 'add') {
    $productId = intval($_GET['id']);
    
    // Check if product exists in products array
    if (isset($products[$productId])) {
        if (!isset($_SESSION['cart'][$productId])) {
            $_SESSION['cart'][$productId] = array(
                'quantity' => 1,
                'price' => $products[$productId]['price']
            );
        } else {
            $_SESSION['cart'][$productId]['quantity']++;
        }
    }
}

// Update item quantity
if (isset($_POST['action']) && $_POST['action'] == 'update') {
    foreach ($_POST['quantity'] as $productId => $qty) {
        if ($qty < 1) {
            unset($_SESSION['cart'][$productId]);
        } else {
            $_SESSION['cart'][$productId]['quantity'] = $qty;
        }
    }
}

// Remove item from cart
if (isset($_GET['action']) && $_GET['action'] == 'remove') {
    $productId = intval($_GET['id']);
    unset($_SESSION['cart'][$productId]);
}

// Destroy the session and clear the cart
if (isset($_GET['action']) && $_GET['action'] == 'clear')) {
    session_unset();
    session_destroy();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
    <style>
        .cart {
            width: 80%;
            margin: 20px auto;
            padding: 10px;
            border: 1px solid #ccc;
        }
        .product-item {
            padding: 10px;
            margin-bottom: 5px;
            background-color: #f9f9f9;
        }
    </style>
</head>
<body>
    <div class="cart">
        <?php if (!empty($_SESSION['cart'])): ?>
            <h2>Your Cart</h2>
            <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
                <table>
                    <tr>
                        <th>Product Name</th>
                        <th>Price</th>
                        <th>Quantity</th>
                        <th>Total</th>
                        <th>Action</th>
                    </tr>
                    <?php foreach ($_SESSION['cart'] as $productId => $item): ?>
                        <?php
                            $product = $products[$productId];
                            $total = $item['quantity'] * $product['price'];
                        ?>
                        <tr class="product-item">
                            <td><?php echo $product['name']; ?></td>
                            <td><?php echo '$' . number_format($product['price'], 2); ?></td>
                            <td><input type="text" name="quantity[<?php echo $productId; ?>]" value="<?php echo $item['quantity']; ?>" size="3"></td>
                            <td><?php echo '$' . number_format($total, 2); ?></td>
                            <td><a href="?action=remove&id=<?php echo $productId; ?>">Remove</a></td>
                        </tr>
                    <?php endforeach; ?>
                </table>
                <br>
                <input type="hidden" name="action" value="update">
                <button type="submit">Update Cart</button>
                <a href="?action=clear">Clear Cart</a><br><br>
                
                <!-- Calculate and display total amount -->
                <?php 
                    $totalAmount = 0;
                    foreach ($_SESSION['cart'] as $productId => $item) {
                        $totalAmount += $item['quantity'] * $products[$productId]['price'];
                    }
                ?>
                <h3>Grand Total: <?php echo '$' . number_format($totalAmount, 2); ?></h3>
            </form>
        <?php else: ?>
            <p>Your cart is empty!</p>
        <?php endif; ?>

        <!-- Product List -->
        <h2>Product List</h2>
        <?php foreach ($products as $productId => $product): ?>
            <div class="product-item">
                <h3><?php echo $product['name']; ?></h3>
                <p><?php echo '$' . number_format($product['price'], 2); ?></p>
                <a href="?action=add&id=<?php echo $productId; ?>">Add to Cart</a>
            </div>
        <?php endforeach; ?>
    </div>
</body>
</html>


<?php
// Start the session
session_start();

if (isset($_SESSION['cart'])) {
    // Cart exists
} else {
    // Initialize cart as an array
    $_SESSION['cart'] = array();
}

// Handle adding items to the cart
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $productId = intval($_POST['product_id']);
    $productName = $_POST['product_name'];
    $price = floatval($_POST['price']);
    $quantity = intval($_POST['quantity']);

    // Check if product already exists in the cart
    if (isset($_SESSION['cart'][$productId])) {
        // Update quantity
        $_SESSION['cart'][$productId]['quantity'] += $quantity;
    } else {
        // Add new product to cart
        $_SESSION['cart'][$productId] = array(
            'product_id' => $productId,
            'product_name' => $productName,
            'price' => $price,
            'quantity' => $quantity
        );
    }

    // Redirect back to the cart page
    header("Location: cart.php");
    exit();
}

// Display cart contents
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <h1>Your Shopping Cart</h1>
    
    <?php if (empty($_SESSION['cart'])) { ?>
        <p>Your cart is empty.</p>
    <?php } else { ?>
        <table border="1">
            <tr>
                <th>Product Name</th>
                <th>Price</th>
                <th>Quantity</th>
                <th>Total</th>
                <th>Action</th>
            </tr>
            <?php foreach ($_SESSION['cart'] as $item) { ?>
                <tr>
                    <td><?php echo $item['product_name']; ?></td>
                    <td><?php echo "$".$item['price']; ?></td>
                    <td><?php echo $item['quantity']; ?></td>
                    <td><?php echo "$".($item['price'] * $item['quantity']); ?></td>
                    <td><a href="cart.php?action=remove&product_id=<?php echo $item['product_id']; ?>">Remove</a></td>
                </tr>
            <?php } ?>
        </table>
        
        <p>Total: <?php echo "$".array_sum(array_column($_SESSION['cart'], 'price')); ?></p>
    <?php } ?>

    <!-- Add item form -->
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <input type="hidden" name="product_id" value="1">
        <input type="text" name="product_name" placeholder="Enter product name">
        <input type="number" name="price" placeholder="Enter price">
        <input type="number" name="quantity" placeholder="Enter quantity">
        <input type="submit" value="Add to Cart">
    </form>

    <!-- Logout link -->
    <br>
    <a href="logout.php">Logout</a>
</body>
</html>


<?php
session_start();
session_unset();
session_destroy();
header("Location: index.php");
exit();
?>


<?php
session_start();
?>


if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}


function addToCart($productId, $productName, $productPrice) {
    global $pdo; // If you're using a database connection
    
    if (!isset($_SESSION['cart'][$productId])) {
        $_SESSION['cart'][$productId] = array(
            'name' => $productName,
            'price' => $productPrice,
            'quantity' => 1
        );
    } else {
        $_SESSION['cart'][$productId]['quantity']++;
    }
}


function updateCartQuantity($productId, $newQuantity) {
    if (isset($_SESSION['cart'][$productId])) {
        $_SESSION['cart'][$productId]['quantity'] = $newQuantity;
    }
}


function removeFromCart($productId) {
    if (isset($_SESSION['cart'][$productId])) {
        unset($_SESSION['cart'][$productId]);
    }
}

function removeSingleItemFromCart($productId) {
    if (isset($_SESSION['cart'][$productId])) {
        $_SESSION['cart'][$productId]['quantity']--;
        
        if ($_SESSION['cart'][$productId]['quantity'] == 0) {
            unset($_SESSION['cart'][$productId]);
        }
    }
}


function getCartTotal() {
    $total = 0;
    
    foreach ($_SESSION['cart'] as $item) {
        $total += ($item['price'] * $item['quantity']);
    }
    
    return $total;
}


function displayCart() {
    if (empty($_SESSION['cart'])) {
        echo "Your cart is empty.";
        return;
    }
    
    echo "<table>";
    echo "<tr><th>Product</th><th>Price</th><th>Quantity</th><th>Total</th></tr>";
    
    foreach ($_SESSION['cart'] as $productId => $item) {
        $totalItemPrice = $item['price'] * $item['quantity'];
        
        echo "<tr>";
        echo "<td>" . $item['name'] . "</td>";
        echo "<td>₹" . number_format($item['price'], 2) . "</td>";
        echo "<td><input type='number' value='" . $item['quantity'] . "' onchange='updateQuantity(" . $productId . ", this.value);'></td>";
        echo "<td>₹" . number_format($totalItemPrice, 2) . "</td>";
        echo "<td><button onclick='removeFromCart(" . $productId . ");'>Remove</button></td>";
        echo "</tr>";
    }
    
    echo "<tr><td colspan='3'>Total:</td><td>₹" . number_format(getCartTotal(), 2) . "</td></tr>";
    echo "</table>";
}


// Example usage:
productId = 1;
productName = "Example Product";
productPrice = 99.99;

addToCart($productId, $productName, $productPrice);

echo displayCart();


session_unset();
session_destroy();


<?php
// Start the session
session_start();

// Check if session is not started
if (!isset($_SESSION)) {
    session_start();
}

// Function to initialize the shopping cart session
function init_cart() {
    // If cart doesn't exist, create it
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }
}

// Function to add item(s) to the cart
function add_to_cart($product_id, $name, $price, $quantity = 1, $size = '') {
    // Initialize cart session
    init_cart();

    // Check if product already exists in cart
    if (isset($_SESSION['cart'][$product_id])) {
        // Update quantity and size
        $_SESSION['cart'][$product_id]['quantity'] += $quantity;
        $_SESSION['cart'][$product_id]['size'] = $size;
    } else {
        // Add new item to the cart
        $_SESSION['cart'][$product_id] = array(
            'name' => $name,
            'price' => $price,
            'quantity' => $quantity,
            'size' => $size
        );
    }
}

// Function to remove item from the cart
function remove_from_cart($product_id) {
    // Initialize cart session
    init_cart();

    // Check if product exists in cart and unset it
    if (isset($_SESSION['cart'][$product_id])) {
        unset($_SESSION['cart'][$product_id]);
        
        // Re-index the cart array after removing an item
        $_SESSION['cart'] = array_values($_SESSION['cart']);
    }
}

// Function to empty the entire shopping cart
function empty_cart() {
    // Initialize cart session and set it to an empty array
    init_cart();
    
    // Empty all items from the cart
    $_SESSION['cart'] = array();
}

// Example usage:

// Adding an item to the cart
add_to_cart(1, 'Laptop', 999.99, 2, '15.6"');

// Output current cart contents
echo "<pre>";
print_r($_SESSION['cart']);
echo "</pre>";

// Removing an item from the cart
remove_from_cart(1);

// Emptying the cart
empty_cart();

?>


<?php
// Start the session
session_start();

// Initialize cart if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function add_to_cart($product_id, $product_name, $price, $quantity) {
    global $mysqli;
    
    // Check if product is already in the cart
    if (isset($_SESSION['cart'][$product_id])) {
        // If exists, increment quantity
        $_SESSION['cart'][$product_id]['quantity'] += $quantity;
    } else {
        // If not exists, add new product to cart
        $_SESSION['cart'][$product_id] = array(
            'product_id' => $product_id,
            'product_name' => $product_name,
            'price' => $price,
            'quantity' => $quantity
        );
    }
}

// Function to update quantity of item in cart
function update_cart($product_id, $new_quantity) {
    if (isset($_SESSION['cart'][$product_id])) {
        $_SESSION['cart'][$product_id]['quantity'] = $new_quantity;
        
        // If quantity is zero or less, remove the product from cart
        if ($new_quantity <= 0) {
            unset($_SESSION['cart'][$product_id]);
        }
    }
}

// Function to remove item from cart
function remove_from_cart($product_id) {
    if (isset($_SESSION['cart'][$product_id])) {
        unset($_SESSION['cart'][$product_id]);
    }
}

// Function to calculate total amount
function get_cart_total() {
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += ($item['price'] * $item['quantity']);
    }
    return $total;
}

// Function to display cart contents
function display_cart() {
    if (empty($_SESSION['cart'])) {
        echo "<p>Your cart is empty.</p>";
        return;
    }

    echo "<table border='1'>";
    echo "<tr><th>Product</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>";
    
    foreach ($_SESSION['cart'] as $item) {
        $product_total = $item['price'] * $item['quantity'];
        
        echo "<tr>";
        echo "<td>" . $item['product_name'] . "</td>";
        echo "<td> $" . number_format($item['price'], 2) . "</td>";
        echo "<td><form method='post'><input type='number' name='quantity' value='" . $item['quantity'] . "' min='1'></td>";
        echo "<td> $" . number_format($product_total, 2) . "</td>";
        echo "<td><button type='submit' name='update_cart'>Update</button> | <a href='remove.php?id=" . $item['product_id'] . "'>Remove</a></td>";
        echo "</tr>";
    }
    
    echo "</table>";
    
    // Display total amount
    echo "<h3>Total Amount: $" . number_format(get_cart_total(), 2) . "</h3>";
}

// Example usage:
// To add an item to cart
add_to_cart(1, 'Product A', 10.99, 2);

// To update quantity of an item
if ($_SERVER['REQUEST_METHOD'] == 'POST' && isset($_POST['update_cart'])) {
    $product_id = $_GET['id']; // Assuming this is set in the URL
    $new_quantity = intval($_POST['quantity']);
    update_cart($product_id, $new_quantity);
}

// To remove an item from cart
if (isset($_GET['remove'])) {
    remove_from_cart(intval($_GET['id']));
}
?>


<?php
// Start the session
session_start();

// Initialize shopping cart array if it doesn't exist
if (!isset($_SESSION['shopping_cart'])) {
    $_SESSION['shopping_cart'] = array();
}

// Add item to cart
if (isset($_POST['add_to_cart'])) {
    // Get product details from POST data
    $product_id = $_POST['product_id'];
    $product_name = $_POST['product_name'];
    $product_price = $_POST['product_price'];
    
    // Check if the product already exists in the cart
    $item_exists = false;
    foreach ($_SESSION['shopping_cart'] as &$item) {
        if ($item['product_id'] == $product_id) {
            $item['quantity']++;
            $item_exists = true;
            break;
        }
    }
    
    // If product doesn't exist, add it to the cart
    if (!$item_exists) {
        $_SESSION['shopping_cart'][] = array(
            'product_id' => $product_id,
            'product_name' => $product_name,
            'product_price' => $product_price,
            'quantity' => 1
        );
    }
}

// Update item quantity in cart
if (isset($_POST['update_quantity'])) {
    foreach ($_SESSION['shopping_cart'] as &$item) {
        if (isset($_POST['quantity_'.$item['product_id']])) {
            $new_quantity = $_POST['quantity_'.$item['product_id']];
            if ($new_quantity > 0) {
                $item['quantity'] = $new_quantity;
            }
        }
    }
}

// Remove item from cart
if (isset($_GET['remove'])) {
    foreach ($_SESSION['shopping_cart'] as $key => &$item) {
        if ($item['product_id'] == $_GET['remove']) {
            unset($_SESSION['shopping_cart'][$key]);
            break;
        }
    }
}

// Display cart contents
echo "<h2>Shopping Cart</h2>";
echo "<form method='post'>";
echo "<table>";
echo "<tr><th>Product Name</th><th>Price</th><th>Quantity</th><th>Action</th></tr>";

$total = 0;
foreach ($_SESSION['shopping_cart'] as $item) {
    echo "<tr>";
    echo "<td>" . $item['product_name'] . "</td>";
    echo "<td>$" . number_format($item['product_price'], 2) . "</td>";
    echo "<td><input type='number' name='quantity_" . $item['product_id'] . "' value='" . $item['quantity'] . "' min='1'></td>";
    echo "<td><a href='?remove=" . $item['product_id'] . "'>Remove</a></td>";
    echo "</tr>";
    
    $total += $item['product_price'] * $item['quantity'];
}

echo "<tr><td colspan='3'>Total:</td><td>$" . number_format($total, 2) . "</td></tr>";
echo "</table>";
echo "<input type='submit' name='update_quantity' value='Update Cart'>";
echo "</form>";

// Sample product data for testing
$products = array(
    array('id' => '1', 'name' => 'Laptop', 'price' => 999.99),
    array('id' => '2', 'name' => 'Smartphone', 'price' => 699.99),
    array('id' => '3', 'name' => 'Tablet', 'price' => 499.99)
);

// Display products to add
echo "<h2>Products</h2>";
echo "<form method='post'>";
foreach ($products as $product) {
    echo "<div class='product'>";
    echo "<h3>" . $product['name'] . "</h3>";
    echo "<p>Price: $" . number_format($product['price'], 2) . "</p>";
    echo "<input type='hidden' name='product_id' value='" . $product['id'] . "'>";
    echo "<input type='hidden' name='product_name' value='" . $product['name'] . "'>";
    echo "<input type='hidden' name='product_price' value='" . number_format($product['price'], 2) . "'>";
    echo "<button type='submit' name='add_to_cart'>Add to Cart</button>";
    echo "</div>";
}
echo "</form>";
?>


<?php
// Start the session
session_start();

// Check if the cart exists in the session, initialize it if not
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add product to cart
function addToCart($productId, $quantity) {
    global $connection; // Assuming you have a database connection
    
    // Check if product exists in the database
    $stmt = $connection->prepare("SELECT * FROM products WHERE id = ?");
    $stmt->execute([$productId]);
    $product = $stmt->fetch();
    
    if ($product) {
        // Check if product already exists in cart
        if (isset($_SESSION['cart'][$productId])) {
            $_SESSION['cart'][$productId]['quantity'] += $quantity;
        } else {
            $_SESSION['cart'][$productId] = array(
                'id' => $product['id'],
                'name' => $product['name'],
                'price' => $product['price'],
                'quantity' => $quantity
            );
        }
    }
}

// Function to remove product from cart
function removeFromCart($productId) {
    if (isset($_SESSION['cart'][$productId])) {
        unset($_SESSION['cart'][$productId]);
    }
}

// Function to display cart contents
function displayCart() {
    echo "<h2>Shopping Cart</h2>";
    echo "<table border='1'>";
    echo "<tr><th>Product ID</th><th>Name</th><th>Price</th><th>Quantity</th><th>Action</th></tr>";
    
    if (empty($_SESSION['cart'])) {
        echo "<tr><td colspan='5'>Your cart is empty!</td></tr>";
    } else {
        foreach ($_SESSION['cart'] as $item) {
            echo "<tr>";
            echo "<td>{$item['id']}</td>";
            echo "<td>{$item['name']}</td>";
            echo "<td>$$item['price']}</td>";
            echo "<td><input type='number' value='{$item['quantity']}' style='width:50px;'></td>";
            echo "<td><button onclick=\"window.location.href='index.php?action=remove&id={$item['id']}';\">Remove</button></td>";
            echo "</tr>";
        }
    }
    
    echo "</table>";
}

// Handle cart actions
if (isset($_GET['action'])) {
    switch ($_GET['action']) {
        case 'add':
            if (isset($_POST['product_id']) && isset($_POST['quantity'])) {
                addToCart($_POST['product_id'], $_POST['quantity']);
            }
            header("Location: index.php");
            exit();
            
        case 'remove':
            if (isset($_GET['id'])) {
                removeFromCart($_GET['id']);
            }
            header("Location: index.php");
            exit();
    }
}

// Display cart contents
displayCart();

// Calculate total price
$total = 0;
foreach ($_SESSION['cart'] as $item) {
    $total += $item['price'] * $item['quantity'];
}
echo "<h3>Total Price: $$total</h3>";

// Add to cart form
echo "<h2>Add Product to Cart</h2>";
echo "<form method='post' action='index.php?action=add'>";
echo "Product ID: <input type='text' name='product_id'><br>";
echo "Quantity: <input type='number' name='quantity' min='1' value='1'><br>";
echo "<button type='submit'>Add to Cart</button>";
echo "</form>";

// Logout link
echo "<a href='index.php?action=logout'>Logout</a>";
?>



<?php
session_start();
$product_id = $_POST['product_id'];
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}
if (isset($_SESSION['cart'][$product_id])) {
    $_SESSION['cart'][$product_id]++;
} else {
    $_SESSION['cart'][$product_id] = 1;
}
header("Location: product.php");
exit();
?>


<?php
session_start();
echo "<h2>Shopping Cart</h2>";
if (!isset($_SESSION['cart']) || count($_SESSION['cart']) == 0) {
    echo "Your cart is empty.";
} else {
    foreach ($_SESSION['cart'] as $product_id => $quantity) {
        echo "Product ID: $product_id Quantity: $quantity ";
        echo "<a href='remove_item.php?product_id=$product_id'>Remove</a><br />";
    }
}
?>


<?php
session_start();
$product_id = $_GET['product_id'];
if (isset($_SESSION['cart'][$product_id])) {
    unset($_SESSION['cart'][$product_id]);
}
header("Location: cart.php");
exit();
?>


<?php
session_start();

// Initialize cart if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function add_to_cart($item_id, $item_name, $price) {
    global $db;
    
    // Check if item is already in cart
    if (isset($_SESSION['cart'][$item_id])) {
        // Increment quantity
        $_SESSION['cart'][$item_id]['quantity']++;
    } else {
        // Add new item to cart
        $_SESSION['cart'][$item_id] = array(
            'id' => $item_id,
            'name' => $item_name,
            'price' => $price,
            'quantity' => 1
        );
    }
}

// Function to remove item from cart
function remove_from_cart($item_id) {
    if (isset($_SESSION['cart'][$item_id])) {
        unset($_SESSION['cart'][$item_id]);
        // Re-index the array
        $_SESSION['cart'] = array_values($_SESSION['cart']);
    }
}

// Function to update quantity of item in cart
function update_quantity($item_id, $new_quantity) {
    if (isset($_SESSION['cart'][$item_id])) {
        if ($new_quantity > 0) {
            $_SESSION['cart'][$item_id]['quantity'] = $new_quantity;
        } else {
            remove_from_cart($item_id);
        }
    }
}

// Function to display cart contents
function display_cart() {
    $total_price = 0;
    echo "<table>";
    echo "<tr><th>Item</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>";
    
    foreach ($_SESSION['cart'] as $item) {
        $item_total = $item['price'] * $item['quantity'];
        $total_price += $item_total;
        
        echo "<tr>";
        echo "<td>" . $item['name'] . "</td>";
        echo "<td>€" . number_format($item['price'], 2) . "</td>";
        echo "<td><input type='number' value='" . $item['quantity'] . "' onChange='updateQuantity(" . $item['id'] . ", this.value)'></td>";
        echo "<td>€" . number_format($item_total, 2) . "</td>";
        echo "<td><button onClick='removeItem(" . $item['id'] . ")'>Remove</button></td>";
        echo "</tr>";
    }
    
    echo "<tr><td colspan='4'><strong>Total:</strong> €" . number_format($total_price, 2) . "</td></tr>";
    echo "</table>";
}

// Example usage:
if (isset($_GET['action'])) {
    switch ($_GET['action']) {
        case 'add':
            add_to_cart(1, "Product A", 29.99);
            break;
        case 'remove':
            remove_from_cart($_GET['id']);
            break;
        case 'update':
            update_quantity($_GET['id'], $_GET['quantity']);
            break;
    }
}

?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
    <script>
        function updateQuantity(id, quantity) {
            if (quantity <= 0) {
                removeItem(id);
            } else {
                window.location.href = "cart.php?action=update&id=" + id + "&quantity=" + quantity;
            }
        }

        function removeItem(id) {
            window.location.href = "cart.php?action=remove&id=" + id;
        }
    </script>
</head>
<body>
    <?php display_cart(); ?>
</body>
</html>


<?php
session_start();
?>


if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}


// Assume $item_id, $item_name, and $item_price are variables from your product details.
$item_id = 1;
$item_name = "Sample Product";
$item_price = 29.99;

// Check if item already exists in cart
if (isset($_SESSION['cart'][$item_id])) {
    // Increment quantity by 1
    $_SESSION['cart'][$item_id]['quantity']++;
} else {
    // Add new item to the cart
    $_SESSION['cart'][$item_id] = array(
        'id' => $item_id,
        'name' => $item_name,
        'price' => $item_price,
        'quantity' => 1
    );
}


if (!empty($_SESSION['cart'])) {
    echo "<h2>Your Shopping Cart</h2>";
    foreach ($_SESSION['cart'] as $item) {
        echo "Item ID: " . $item['id'] . "<br />";
        echo "Item Name: " . $item['name'] . "<br />";
        echo "Price: $" . number_format($item['price'], 2) . "<br />";
        echo "Quantity: " . $item['quantity'] . "<br />";
        echo "<hr />";
    }
} else {
    echo "Your cart is empty!";
}


// Example of removing an item when a form is submitted
if (isset($_POST['remove_item']) && isset($_POST['item_id'])) {
    $item_id = $_POST['item_id'];
    unset($_SESSION['cart'][$item_id]);
}


// Example of updating quantity when a form is submitted
if (isset($_POST['update_quantity']) && isset($_POST['item_id'])) {
    $item_id = $_POST['item_id'];
    $quantity = intval($_POST['quantity']);
    
    if ($quantity > 0) {
        $_SESSION['cart'][$item_id]['quantity'] = $quantity;
    }
}


if (isset($_GET['clear_cart'])) {
    unset($_SESSION['cart']);
}


<?php
session_start();

if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add item to cart
if (isset($_POST['add_to_cart'])) {
    $item_id = 1;
    $item_name = "Sample Product";
    $item_price = 29.99;

    if (isset($_SESSION['cart'][$item_id])) {
        $_SESSION['cart'][$item_id]['quantity']++;
    } else {
        $_SESSION['cart'][$item_id] = array(
            'id' => $item_id,
            'name' => $item_name,
            'price' => $item_price,
            'quantity' => 1
        );
    }
}

// Display cart contents
echo "<h2>Your Shopping Cart</h2>";
if (!empty($_SESSION['cart'])) {
    foreach ($_SESSION['cart'] as $item) {
        echo "Item ID: " . $item['id'] . "<br />";
        echo "Item Name: " . $item['name'] . "<br />";
        echo "Price: $" . number_format($item['price'], 2) . "<br />";
        echo "Quantity: " . $item['quantity'] . "<br />";
        echo "<hr />";
    }
} else {
    echo "Your cart is empty!";
}

// Form to add item
echo "<form action='index.php' method='post'>";
echo "<button type='submit' name='add_to_cart'>Add Item</button>";
echo "</form>";
?>


<?php
// Start the session
session_start();

// Initialize cart if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function add_to_cart($item_id, $item_name, $price, $quantity) {
    global $db;
    
    // Check if the item is already in the cart
    foreach ($_SESSION['cart'] as $key => $value) {
        if ($value['item_id'] == $item_id) {
            $_SESSION['cart'][$key]['quantity'] += $quantity;
            return;
        }
    }

    // Add new item to cart
    $_SESSION['cart'][] = array(
        'item_id' => $item_id,
        'item_name' => $item_name,
        'price' => $price,
        'quantity' => $quantity
    );
    
    // Regenerate session ID after modification
    session_regenerate(true);
}

// Function to remove item from cart
function remove_from_cart($item_id) {
    foreach ($_SESSION['cart'] as $key => $value) {
        if ($value['item_id'] == $item_id) {
            unset($_SESSION['cart'][$key]);
        }
    }

    // Re-index the array
    $_SESSION['cart'] = array_values($_SESSION['cart']);
    
    // Regenerate session ID after modification
    session_regenerate(true);
}

// Function to clear the cart
function clear_cart() {
    $_SESSION['cart'] = array();
    
    // Regenerate session ID after modification
    session_regenerate(true);
}

// Function to get total cost of items in cart
function get_total_cart_cost() {
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += ($item['price'] * $item['quantity']);
    }
    return $total;
}

// Helper function to display cart contents
function display_cart() {
    if (!empty($_SESSION['cart'])) {
        echo '<table>';
        echo '<tr><th>Item Name</th><th>Quantity</th><th>Price</th><th>Action</th></tr>';
        
        foreach ($_SESSION['cart'] as $item) {
            echo '<tr>';
            echo '<td>' . $item['item_name'] . '</td>';
            echo '<td>' . $item['quantity'] . '</td>';
            echo '<td>$' . number_format($item['price'], 2) . '</td>';
            echo '<td><a href="?remove=' . $item['item_id'] . '">Remove</a></td>';
            echo '</tr>';
        }
        
        echo '</table>';
    } else {
        echo 'Your cart is empty.';
    }
}

// Example usage:
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    if (isset($_POST['add_to_cart'])) {
        // Add item to cart
        add_to_cart(1, "Product 1", 9.99, 2);
        echo '<p>Item added to cart successfully!</p>';
    }
}

// Remove item from cart
if (isset($_GET['remove'])) {
    remove_from_cart($_GET['remove']);
    echo '<p>Item removed from cart successfully!</p>';
}

// Clear cart
if (isset($_GET['clear'])) {
    clear_cart();
    echo '<p>Cart cleared successfully!</p>';
}

// Display current cart contents
display_cart();

// Output total cost
echo '<h3>Total: $' . number_format(get_total_cart_cost(), 2) . '</h3>';
?>


<?php
session_start();

// Initialize cart if not exists
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Adding product to cart
if (isset($_GET['add'])) {
    $id = intval($_GET['id']);
    $name = $_GET['name'];
    $price = floatval($_GET['price']);

    // Create product array
    $product = array(
        'id' => $id,
        'name' => $name,
        'price' => $price,
        'quantity' => 1
    );

    // Check for existing item in cart
    $itemExists = false;
    foreach ($_SESSION['cart'] as $key => $item) {
        if ($item['id'] == $id) {
            $_SESSION['cart'][$key]['quantity']++;
            $itemExists = true;
            break;
        }
    }

    // Add new product if not exists
    if (!$itemExists) {
        $_SESSION['cart'][] = $product;
    }

    header("Location: cart.php");
    exit();
}

// Removing item from cart
if (isset($_GET['remove'])) {
    $id = intval($_GET['id']);
    foreach ($_SESSION['cart'] as $key => $item) {
        if ($item['id'] == $id) {
            unset($_SESSION['cart'][$key]);
            break;
        }
    }
    // Re-index the array
    $_SESSION['cart'] = array_values($_SESSION['cart']);
    header("Location: cart.php");
    exit();
}

// Displaying cart contents
echo "<h2>Shopping Cart</h2>";
if (empty($_SESSION['cart'])) {
    echo "Your cart is empty.";
} else {
    foreach ($_SESSION['cart'] as $item) {
        $totalPrice = $item['price'] * $item['quantity'];
        echo "<div>";
        echo "Product: {$item['name']}<br>";
        echo "Price: \${$item['price']}<br>";
        echo "Quantity: {$item['quantity']}<br>";
        echo "Total: \${$totalPrice}<br>";
        echo "<a href='cart.php?remove={$item['id']}'>Remove</a><br>";
        echo "</div>";
    }
}
?>


<?php
// Initialize the session
session_start();

// Check if cart exists in session, if not, initialize it as empty array
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add item to cart function
function add_to_cart($product_id, $name, $price) {
    global $conn; // Assuming you have a database connection
    
    // Check if product exists in the cart
    if (isset($_SESSION['cart'][$product_id])) {
        $_SESSION['cart'][$product_id]['quantity']++;
    } else {
        // Get product details from database or define them here
        $_SESSION['cart'][$product_id] = array(
            'product_id' => $product_id,
            'name' => $name,
            'price' => $price,
            'quantity' => 1
        );
    }
}

// Remove item from cart function
function remove_from_cart($product_id) {
    if (isset($_SESSION['cart'][$product_id])) {
        unset($_SESSION['cart'][$product_id]);
    }
}

// Update quantity function
function update_quantity($product_id, $quantity) {
    if ($quantity > 0 && isset($_SESSION['cart'][$product_id])) {
        $_SESSION['cart'][$product_id]['quantity'] = $quantity;
    }
}

// Display cart contents
echo "<h2>Shopping Cart</h2>";
if (empty($_SESSION['cart'])) {
    echo "Your cart is empty.";
} else {
    echo "<table border='1'>";
    echo "<tr><th>Product ID</th><th>Name</th><th>Price</th><th>Quantity</th><th>Action</th></tr>";
    
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        echo "<tr>";
        echo "<td>" . $item['product_id'] . "</td>";
        echo "<td>" . $item['name'] . "</td>";
        echo "<td>$" . number_format($item['price'], 2) . "</td>";
        echo "<td><input type='number' value='" . $item['quantity'] . "' onChange='updateQuantity(" . $item['product_id'] . ", this.value)'></td>";
        echo "<td><a href='remove_item.php?product_id=" . $item['product_id'] . "'>Remove</a></td>";
        echo "</tr>";
        
        $total += ($item['price'] * $item['quantity']);
    }
    
    echo "<tr><td colspan='4'><strong>Total:</strong></td><td>$" . number_format($total, 2) . "</td></tr>";
    echo "</table>";
}

// Clear cart function
function clear_cart() {
    unset($_SESSION['cart']);
}

// Example usage:
if (isset($_GET['action'])) {
    switch ($_GET['action']) {
        case 'add':
            add_to_cart(1, "Product 1", 29.99);
            break;
        case 'remove':
            remove_from_cart($_GET['product_id']);
            break;
        case 'update':
            update_quantity($_GET['product_id'], $_GET['quantity']);
            break;
        case 'clear':
            clear_cart();
            break;
    }
}

// Always include this at the bottom of your page to close the session
session_write_close();
?>


<?php
// Start the session
session_start();

// Check if the cart is set in the session. If not, initialize it as an empty array.
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add item to cart
function add_to_cart($product_id, $product_name, $price) {
    global $cart_size;
    
    // Initialize cart if not set
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }
    
    // Calculate the total number of items in the cart
    $cart_size = count($_SESSION['cart']);
    
    // Add item to the cart
    $_SESSION['cart'][$cart_size] = array(
        'product_id' => $product_id,
        'product_name' => $product_name,
        'price' => $price,
        'quantity' => 1
    );
}

// Update quantity of an item in cart
function update_cart($product_id, $new_quantity) {
    // Loop through the cart items to find the matching product ID
    foreach ($_SESSION['cart'] as $key => $item) {
        if ($item['product_id'] == $product_id) {
            $_SESSION['cart'][$key]['quantity'] = $new_quantity;
            break; // Exit loop once found
        }
    }
}

// Remove item from cart
function remove_from_cart($product_id) {
    // Loop through the cart items to find and remove the matching product ID
    foreach ($_SESSION['cart'] as $key => $item) {
        if ($item['product_id'] == $product_id) {
            unset($_SESSION['cart'][$key]);
            break; // Exit loop once found
        }
    }
}

// Calculate total price of items in cart
function get_total() {
    $total = 0;
    
    foreach ($_SESSION['cart'] as $item) {
        $total += ($item['price'] * $item['quantity']);
    }
    
    return $total;
}

// Display cart contents
function display_cart() {
    if (empty($_SESSION['cart'])) {
        echo "Your cart is empty.";
    } else {
        foreach ($_SESSION['cart'] as $item) {
            echo "Product ID: " . $item['product_id'] . "<br>";
            echo "Product Name: " . $item['product_name'] . "<br>";
            echo "Price: $" . number_format($item['price'], 2) . "<br>";
            echo "Quantity: " . $item['quantity'] . "<br><br>";
        }
        
        echo "Total Price: $" . number_format(get_total(), 2);
    }
}

// Destroy the session (clear cart)
function clear_cart() {
    session_unset();
    session_destroy();
}
?>


// Add an item to the cart
add_to_cart(1, "Laptop", 999.99);

// Update quantity of an item in the cart
update_cart(1, 2);

// Remove an item from the cart
remove_from_cart(1);

// Display cart contents
display_cart();

// Clear the entire cart
clear_cart();


<?php
session_start();

// Initialize cart if not exists
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Display cart items
echo "<h2>Your Cart</h2>";
$total = 0;

foreach ($_SESSION['cart'] as $item) {
    echo "Product ID: " . $item['id'] . "<br />";
    echo "Name: " . $item['name'] . "<br />";
    echo "Price: $" . number_format($item['price'], 2) . "<br />";
    echo "Quantity: " . $item['quantity'] . "<br />";
    echo "Total: $" . number_format($item['price'] * $item['quantity'], 2) . "<br /><br />";
    
    $total += ($item['price'] * $item['quantity']);
}

echo "Grand Total: $" . number_format($total, 2) . "<br />";

// Add product to cart
if (isset($_GET['add'])) {
    $productId = $_GET['add'];
    // Assume you fetch product details from database or predefined array
    $products = array(
        1 => array('id' => 1, 'name' => 'Product 1', 'price' => 10.99),
        2 => array('id' => 2, 'name' => 'Product 2', 'price' => 19.99)
    );
    
    if (isset($products[$productId])) {
        $product = $products[$productId];
        $itemExists = false;
        
        foreach ($_SESSION['cart'] as &$item) {
            if ($item['id'] == $product['id']) {
                $item['quantity']++;
                $itemExists = true;
                break;
            }
        }
        
        if (!$itemExists) {
            $newItem = array(
                'id' => $product['id'],
                'name' => $product['name'],
                'price' => $product['price'],
                'quantity' => 1,
                'timestamp' => time()
            );
            $_SESSION['cart'][] = $newItem;
        }
    }
}

// Example link to add product
echo "<a href='?add=1'>Add Product 1</a><br />";
echo "<a href='?add=2'>Add Product 2</a>";
?>


<?php
// Start the session
session_start();

// Initialize cart if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function addToCart($productId, $productName, $productPrice) {
    global $cart;
    
    // Check if product is already in cart
    if (array_search($productId, array_column($cart, 'id')) !== false) {
        // Increment quantity
        foreach ($cart as &$item) {
            if ($item['id'] == $productId) {
                $item['quantity']++;
                break;
            }
        }
    } else {
        // Add new product to cart
        $cart[] = array(
            'id' => $productId,
            'name' => $productName,
            'price' => $productPrice,
            'quantity' => 1
        );
    }
    
    $_SESSION['cart'] = $cart;
}

// Function to remove item from cart
function removeFromCart($productId) {
    global $cart;
    
    // Find and remove product from cart
    foreach ($cart as $key => $item) {
        if ($item['id'] == $productId) {
            unset($cart[$key]);
            break;
        }
    }
    
    // Re-index the array
    $cart = array_values($cart);
    
    $_SESSION['cart'] = $cart;
}

// Function to update item quantity
function updateCartQuantity($productId, $quantity) {
    global $cart;
    
    foreach ($cart as &$item) {
        if ($item['id'] == $productId) {
            $item['quantity'] = $quantity;
            break;
        }
    }
    
    $_SESSION['cart'] = $cart;
}

// Function to calculate cart total
function getCartTotal() {
    global $cart;
    
    $total = 0;
    foreach ($cart as $item) {
        $total += ($item['price'] * $item['quantity']);
    }
    
    return $total;
}

// Example usage:
$productId = 1;
$productName = "Example Product";
$productPrice = 29.99;

// Add item to cart
addToCart($productId, $productName, $productPrice);

// Remove item from cart
removeFromCart($productId);

// Update quantity
updateCartQuantity($productId, 3);

// Get total price of items in cart
$total = getCartTotal();
echo "Total: $" . number_format($total, 2);
?>


<?php
// Start the session
session_start();

// Initialize cart if not already set
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function add_to_cart($item_id, $item_name, $price) {
    global $db;
    
    // Check if the item is already in the cart
    $item_in_cart = false;
    foreach ($_SESSION['cart'] as $index => $item) {
        if ($item['id'] == $item_id) {
            $_SESSION['cart'][$index]['quantity'] += 1;
            $item_in_cart = true;
            break;
        }
    }
    
    // If item is not in cart, add it
    if (!$item_in_cart) {
        $_SESSION['cart'][] = array(
            'id' => $item_id,
            'name' => $item_name,
            'price' => $price,
            'quantity' => 1
        );
    }
}

// Function to update item quantity
function update_quantity($item_id, $new_quantity) {
    global $db;
    
    foreach ($_SESSION['cart'] as $index => $item) {
        if ($item['id'] == $item_id) {
            $_SESSION['cart'][$index]['quantity'] = $new_quantity;
            break;
        }
    }
}

// Function to remove item from cart
function remove_from_cart($item_id) {
    global $db;
    
    foreach ($_SESSION['cart'] as $index => $item) {
        if ($item['id'] == $item_id) {
            unset($_SESSION['cart'][$index]);
            break;
        }
    }
    // Re-index the array
    $_SESSION['cart'] = array_values($_SESSION['cart']);
}

// Function to display cart contents
function display_cart() {
    echo "<h2>Shopping Cart</h2>";
    if (empty($_SESSION['cart'])) {
        echo "Your cart is empty.";
    } else {
        echo "<table>";
        echo "<tr><th>Item Name</th><th>Price</th><th>Quantity</th><th>Total</th></tr>";
        $total = 0;
        foreach ($_SESSION['cart'] as $item) {
            $subtotal = $item['price'] * $item['quantity'];
            echo "<tr>";
            echo "<td>" . $item['name'] . "</td>";
            echo "<td>($" . number_format($item['price'], 2) . ")</td>";
            echo "<td><input type='number' value='" . $item['quantity'] . "' onchange='updateQuantity(" . $item['id'] . ", this.value)'></td>";
            echo "<td>($" . number_format($subtotal, 2) . ")</td>";
            echo "</tr>";
            $total += $subtotal;
        }
        echo "<tr><th colspan='3'>Total:</th><th>($" . number_format($total, 2) . ")</th></tr>";
        echo "</table>";
    }
}

// Example usage:
add_to_cart(1, "Sample Product", 49.99);
update_quantity(1, 2);
remove_from_cart(1);

display_cart();
?>


<?php
// Start the session
session_start();

// Initialize the cart if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function addToCart($productId, $quantity) {
    global $pdo;
    
    // Check if product exists in database
    $stmt = $pdo->prepare("SELECT * FROM products WHERE id = ?");
    $stmt->execute(array($productId));
    $product = $stmt->fetch(PDO::FETCH_ASSOC);
    
    if ($product) {
        // Add or update item in cart
        if (isset($_SESSION['cart'][$productId])) {
            $_SESSION['cart'][$productId]['quantity'] += $quantity;
        } else {
            $_SESSION['cart'][$productId] = array(
                'id' => $productId,
                'name' => $product['name'],
                'price' => $product['price'],
                'quantity' => $quantity
            );
        }
    }
}

// Function to update cart item quantity
function updateCartItem($productId, $newQuantity) {
    if (isset($_SESSION['cart'][$productId])) {
        $_SESSION['cart'][$productId]['quantity'] = $newQuantity;
        
        // Remove item if quantity is 0 or less
        if ($newQuantity <= 0) {
            unset($_SESSION['cart'][$productId]);
        }
    }
}

// Function to remove item from cart
function removeFromCart($productId) {
    if (isset($_SESSION['cart'][$productId])) {
        unset($_SESSION['cart'][$productId]);
    }
}

// Function to empty the entire cart
function emptyCart() {
    $_SESSION['cart'] = array();
}

// Example usage:
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    switch ($_POST['action']) {
        case 'add':
            addToCart($_POST['product_id'], $_POST['quantity']);
            break;
            
        case 'update':
            updateCartItem($_POST['product_id'], $_POST['new_quantity']);
            break;
            
        case 'remove':
            removeFromCart($_POST['product_id']);
            break;
            
        case 'empty':
            emptyCart();
            break;
    }
}

// Display cart contents
function displayCart() {
    if (!isset($_SESSION['cart']) || count($_SESSION['cart']) == 0) {
        echo "<p>Your cart is empty.</p>";
    } else {
        $total = 0;
        
        echo "<table border='1'>";
        echo "<tr><th>Product</th><th>Quantity</th><th>Price</th><th>Total</th></tr>";
        
        foreach ($_SESSION['cart'] as $item) {
            $subtotal = $item['price'] * $item['quantity'];
            $total += $subtotal;
            
            echo "<tr>";
            echo "<td>" . $item['name'] . "</td>";
            echo "<td><input type='number' value='" . $item['quantity'] . "' 
                            onchange=\"updateQuantity('$item[id]', this.value)\"></td>";
            echo "<td>$$item[price]</td>";
            echo "<td>$$subtotal</td>";
            echo "</tr>";
        }
        
        echo "<tr><td colspan='3'><strong>Total:</strong></td><td>$$total</td></tr>";
        echo "</table>";
    }
}

// Close the session
session_write_close();
?>


addToCart($productId, $quantity);


displayCart();


<?php
session_start();

// Initialize cart if not already set
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Sample product data (you can replace this with your database data)
$products = array(
    1 => array('name' => 'Product 1', 'price' => 29.99),
    2 => array('name' => 'Product 2', 'price' => 49.99),
    3 => array('name' => 'Product 3', 'price' => 19.99)
);

// Add item to cart
if (isset($_POST['add_to_cart'])) {
    $product_id = $_POST['product_id'];
    
    if (array_key_exists($product_id, $products)) {
        // Check if item already exists in cart
        if (!isset($_SESSION['cart'][$product_id])) {
            $_SESSION['cart'][$product_id] = array(
                'name' => $products[$product_id]['name'],
                'price' => $products[$product_id]['price'],
                'quantity' => 1
            );
        } else {
            // If item exists, increment quantity
            $_SESSION['cart'][$product_id]['quantity']++;
        }
    }
}

// Remove item from cart
if (isset($_GET['remove'])) {
    $product_id = $_GET['remove'];
    
    if (array_key_exists($product_id, $_SESSION['cart'])) {
        unset($_SESSION['cart'][$product_id]);
    }
}

// Update quantity of an item
if (isset($_POST['update_quantity'])) {
    $product_id = $_POST['product_id'];
    $quantity = max(1, intval($_POST['quantity'])); // Ensure minimum quantity is 1
    
    if (array_key_exists($product_id, $_SESSION['cart'])) {
        $_SESSION['cart'][$product_id]['quantity'] = $quantity;
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
    <style>
        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
        }
        .product-item {
            border: 1px solid #ddd;
            padding: 10px;
            margin-bottom: 10px;
        }
        .cart-item {
            border: 1px solid #ddd;
            padding: 10px;
            margin-bottom: 10px;
        }
    </style>
</head>
<body>
    <div class="container">
        <h2>Products</h2>
        <?php foreach ($products as $id => $product): ?>
            <div class="product-item">
                <h3><?php echo $product['name']; ?></h3>
                <p>$<?php echo number_format($product['price'], 2); ?></p>
                <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
                    <input type="hidden" name="product_id" value="<?php echo $id; ?>">
                    <button type="submit" name="add_to_cart">Add to Cart</button>
                </form>
            </div>
        <?php endforeach; ?>

        <h2>Your Cart</h2>
        <?php if (empty($_SESSION['cart'])): ?>
            <p>Your cart is empty.</p>
        <?php else: ?>
            <table border="1">
                <tr>
                    <th>Product Name</th>
                    <th>Price</th>
                    <th>Quantity</th>
                    <th>Action</th>
                </tr>
                <?php foreach ($_SESSION['cart'] as $id => $item): ?>
                    <tr>
                        <td><?php echo $item['name']; ?></td>
                        <td>$<?php echo number_format($item['price'], 2); ?></td>
                        <td>
                            <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
                                <input type="hidden" name="product_id" value="<?php echo $id; ?>">
                                <input type="number" name="quantity" min="1" value="<?php echo $item['quantity']; ?>">
                                <button type="submit" name="update_quantity">Update</button>
                            </form>
                        </td>
                        <td><a href="?remove=<?php echo $id; ?>">Remove</a></td>
                    </tr>
                <?php endforeach; ?>
            </table>
            <p>Total Items: <?php echo count($_SESSION['cart']); ?></p>
        <?php endif; ?>

        <?php if (!empty($_SESSION['cart'])): ?>
            <form action="?action=checkout" method="post">
                <button type="submit">Checkout</button>
            </form>
        <?php endif; ?>

        <a href="javascript:history.back()">Continue Shopping</a>
    </div>
</body>
</html>


<?php
session_start();
?>


<?php
session_start();

// Check if add to cart button is clicked
if (isset($_POST['add_to_cart'])) {
    // Get product details from form submission
    $productId = isset($_POST['product_id']) ? $_POST['product_id'] : '';
    $productName = isset($_POST['product_name']) ? $_POST['product_name'] : '';
    $productPrice = isset($_POST['product_price']) ? $_POST['product_price'] : 0;
    $quantity = isset($_POST['quantity']) ? $_POST['quantity'] : 1;

    // Initialize cart if not set
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }

    // Check if product already exists in cart
    $productExists = false;
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['product_id'] == $productId) {
            $productExists = true;
            $item['quantity'] += $quantity;
            break;
        }
    }

    // If product does not exist, add it to the cart
    if (!$productExists) {
        $_SESSION['cart'][] = array(
            'product_id' => $productId,
            'product_name' => $productName,
            'product_price' => $productPrice,
            'quantity' => $quantity
        );
    }

    // Redirect back to the product page or cart page
    header('Location: ' . $_SERVER['HTTP_REFERER']);
    exit();
}
?>


<?php
session_start();

// Initialize cart if not set
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

$total = 0;
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <h1>Your Shopping Cart</h1>
    <?php if (empty($_SESSION['cart'])): ?>
        <p>Your cart is empty.</p>
    <?php else: ?>
        <table border="1">
            <tr>
                <th>Product Name</th>
                <th>Price</th>
                <th>Quantity</th>
                <th>Total</th>
            </tr>
            <?php foreach ($_SESSION['cart'] as $item): 
                $total += $item['product_price'] * $item['quantity'];
            ?>
            <tr>
                <td><?php echo htmlspecialchars($item['product_name']); ?></td>
                <td><?php echo "$" . number_format($item['product_price'], 2); ?></td>
                <td><?php echo $item['quantity']; ?></td>
                <td><?php echo "$" . number_format($item['product_price'] * $item['quantity'], 2); ?></td>
            </tr>
            <?php endforeach; ?>
        </table>
        <h3>Grand Total: <?php echo "$" . number_format($total, 2); ?></h3>
    <?php endif; ?>
</body>
</html>


<?php
session_start();
unset($_SESSION['cart']);
session_destroy();
?>


<?php
session_start();
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}
?>
<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <?php if (empty($_SESSION['cart'])): ?>
        <p>Your cart is empty. <a href="add_product.php">Add products</a></p>
    <?php else: ?>
        <h1>Your Shopping Cart</h1>
        <table border="1">
            <tr>
                <th>Product Name</th>
                <th>Price</th>
                <th>Quantity</th>
                <th>Total</th>
            </tr>
            <?php foreach ($_SESSION['cart'] as $item): 
                $total += $item['product_price'] * $item['quantity'];
            ?>
            <tr>
                <td><?php echo htmlspecialchars($item['product_name']); ?></td>
                <td><?php echo "$" . number_format($item['product_price'], 2); ?></td>
                <td><?php echo $item['quantity']; ?></td>
                <td><?php echo "$" . number_format($item['product_price'] * $item['quantity'], 2); ?></td>
            </tr>
            <?php endforeach; ?>
        </table>
        <h3>Grand Total: <?php echo "$" . number_format($total, 2); ?></h3>
    <?php endif; ?>
</body>
</html>


<?php
session_start();

// Initialize cart if not exists
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add item to cart
function addToCart($productId, $productName, $productPrice) {
    // Check if product already in cart
    if (isset($_SESSION['cart'][$productId])) {
        // Increment quantity
        $_SESSION['cart'][$productId]['quantity']++;
    } else {
        // Add new product to cart
        $_SESSION['cart'][$productId] = array(
            'product_id' => $productId,
            'product_name' => $productName,
            'product_price' => $productPrice,
            'quantity' => 1
        );
    }
}

// Update quantity of item in cart
function updateQuantity($productId, $newQuantity) {
    if (isset($_SESSION['cart'][$productId])) {
        $_SESSION['cart'][$productId]['quantity'] = $newQuantity;
    }
}

// Display cart contents
function displayCart() {
    $cartContents = '';
    if (!empty($_SESSION['cart'])) {
        foreach ($_SESSION['cart'] as $item) {
            $cartContents .= "<div>";
            $cartContents .= "Product: " . $item['product_name'] . "<br>";
            $cartContents .= "Price: $" . number_format($item['product_price'], 2) . "<br>";
            $cartContents .= "Quantity: " . $item['quantity'] . "<br>";
            $cartContents .= "Total: $" . number_format($item['product_price'] * $item['quantity'], 2) . "<br>";
            $cartContents .= "</div><hr>";
        }
    } else {
        $cartContents = "Your cart is empty!";
    }
    return $cartContents;
}

// Remove item from cart
function removeItem($productId) {
    if (isset($_SESSION['cart'][$productId])) {
        unset($_SESSION['cart'][$productId]);
    }
}

// Example usage:
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    switch ($_POST['action']) {
        case 'add':
            addToCart(1, 'Laptop', 999.99);
            break;
        case 'update':
            updateQuantity(1, $_POST['quantity']);
            break;
        case 'remove':
            removeItem($_POST['productId']);
            break;
    }
}

// Display cart contents
echo displayCart();
?>


// Clear all cart items
unset($_SESSION['cart']);
$_SESSION['cart'] = array();


session_unset();
session_destroy();


<?php
// Start the session
session_start();

// Initialize cart if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add item to cart
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get item details from form
    $item_id = isset($_POST['item_id']) ? intval($_POST['item_id']) : 0;
    $item_name = isset($_POST['item_name']) ? $_POST['item_name'] : '';
    $item_price = isset($_POST['item_price']) ? floatval($_POST['item_price']) : 0.0;
    $quantity = isset($_POST['quantity']) ? intval($_POST['quantity']) : 1;

    // Validate input
    if ($item_id > 0 && $item_name != '' && $item_price > 0) {
        // Check if item already exists in cart
        $item_exists = false;
        foreach ($_SESSION['cart'] as &$item) {
            if ($item['id'] == $item_id) {
                $item_exists = true;
                $item['quantity'] += $quantity;
                break;
            }
        }

        // If item doesn't exist, add it to the cart
        if (!$item_exists) {
            $_SESSION['cart'][] = array(
                'id' => $item_id,
                'name' => $item_name,
                'price' => $item_price,
                'quantity' => $quantity
            );
        }

        echo "Item added to cart successfully!";
    } else {
        echo "Error: Invalid item details.";
    }
}

// Display cart contents
echo "<h2>Shopping Cart</h2>";
echo "<table border='1'>";
echo "<tr><th>Item Name</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>";

$total = 0;
foreach ($_SESSION['cart'] as $item) {
    echo "<tr>";
    echo "<td>" . $item['name'] . "</td>";
    echo "<td>$" . number_format($item['price'], 2) . "</td>";
    echo "<td>" . $item['quantity'] . "</td>";
    echo "<td>$" . number_format($item['price'] * $item['quantity'], 2) . "</td>";
    echo "<td><a href='?remove_item=" . $item['id'] . "'>Remove</a></td>";
    echo "</tr>";

    $total += $item['price'] * $item['quantity'];
}

echo "<tr><td colspan='4'>Total:</td><td>$" . number_format($total, 2) . "</td></tr>";
echo "</table>";

// Remove item from cart
if (isset($_GET['remove_item'])) {
    $remove_id = intval($_GET['remove_item']);
    
    foreach ($_SESSION['cart'] as $key => &$item) {
        if ($item['id'] == $remove_id) {
            unset($_SESSION['cart'][$key]);
            break;
        }
    }

    echo "Item removed from cart successfully!";
}

// Logout button
echo "<br><a href='logout.php'>Logout</a>";
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart Example</title>
    <style>
        table { width: 100%; }
        th, td { padding: 8px; text-align: left; border-bottom: 1px solid #ddd; }
        tr:hover { background-color: #f5f5f5; }
    </style>
</head>
<body>
    <h1>Shopping Cart Example</h1>

    <!-- Add item form -->
    <form method="post">
        Item ID: <input type="text" name="item_id"><br>
        Item Name: <input type="text" name="item_name"><br>
        Price: <input type="number" step="0.01" name="item_price"><br>
        Quantity: <input type="number" min="1" name="quantity"><br>
        <input type="submit" value="Add to Cart">
    </form>

</body>
</html>


<?php
// Start the session
if (!isset($_SESSION)) {
    session_start();
}

// Initialize cart if not set
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add item to cart
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $item_name = trim($_POST['item_name']);
    $quantity = isset($_POST['quantity']) ? intval($_POST['quantity']) : 1;

    // Validate input
    if ($item_name && $quantity > 0) {
        // Check if item already exists in cart
        $itemExists = false;
        foreach ($_SESSION['cart'] as $key => $item) {
            if ($item['name'] == $item_name) {
                $_SESSION['cart'][$key]['quantity'] += $quantity;
                $itemExists = true;
                break;
            }
        }

        // If item doesn't exist, add it
        if (!$itemExists) {
            array_push($_SESSION['cart'], array(
                'name' => $item_name,
                'quantity' => $quantity
            ));
        }

        $message = "Item added to cart successfully!";
    } else {
        $error = "Please enter a valid item name and quantity.";
    }
}

// Remove item from cart
if (isset($_GET['remove'])) {
    $removeKey = intval($_GET['remove']);
    if (isset($_SESSION['cart'][$removeKey])) {
        unset($_SESSION['cart'][$removeKey]);
        // Re-index the array to maintain keys
        $_SESSION['cart'] = array_values($_SESSION['cart']);
        header("Location: " . $_SERVER["PHP_SELF"]);
        exit;
    }
}

// Clear cart
if (isset($_GET['clear'])) {
    unset($_SESSION['cart']);
    $_SESSION['cart'] = array();
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Shopping Cart</title>
    <style>
        body { font-family: Arial, sans-serif; }
        .container { max-width: 800px; margin: 0 auto; padding: 20px; }
        input, select { padding: 5px; margin: 5px; }
        button { padding: 10px 20px; background-color: #4CAF50; color: white; border: none; cursor: pointer; }
        button:hover { background-color: #45a049; }
        .cart-item { margin: 10px 0; padding: 10px; border: 1px solid #ddd; }
    </style>
</head>
<body>
    <div class="container">
        <?php if (isset($message)): ?>
            <p style="color: green;"><?php echo $message ?></p>
        <?php endif ?>

        <?php if (isset($error)): ?>
            <p style="color: red;"><?php echo $error ?></p>
        <?php endif ?>

        <!-- Add Item Form -->
        <h2>Add Item to Cart</h2>
        <form method="post" action="<?php echo $_SERVER['PHP_SELF'] ?>">
            <input type="text" name="item_name" placeholder="Enter item name" required>
            <input type="number" name="quantity" value="1" min="1">
            <button type="submit">Add to Cart</button>
        </form>

        <!-- Display Cart -->
        <h2>Your Cart</h2>
        <?php if (!empty($_SESSION['cart'])): ?>
            <?php foreach ($_SESSION['cart'] as $key => $item): ?>
                <div class="cart-item">
                    Item: <?php echo $item['name']; ?> 
                    Quantity: <?php echo $item['quantity']; ?>
                    <a href="<?php echo $_SERVER['PHP_SELF'] . '?remove=' . $key; ?>">Remove</a>
                </div>
            <?php endforeach; ?>
            <button onclick="window.location.href='<?php echo $_SERVER['PHP_SELF'] . '?clear=1'; ?>'">Clear Cart</button>
        <?php else: ?>
            <p>Your cart is empty.</p>
        <?php endif; ?>

        <!-- Total Items -->
        <h3>Total Items in Cart: <?php echo count($_SESSION['cart']); ?></h3>
    </div>
</body>
</html>


<?php
session_start();
?>


class ShoppingCart {
    private $cart;

    public function __construct() {
        session_start();
        if (!isset($_SESSION['cart'])) {
            $_SESSION['cart'] = array();
        }
        $this->cart = &$_SESSION['cart'];
    }

    // Methods for cart operations...
}


public function add_item($product_id, $quantity) {
    if (isset($this->cart[$product_id])) {
        $this->cart[$product_id] += $quantity;
    } else {
        $this->cart[$product_id] = $quantity;
    }
}


public function remove_item($product_id, $quantity = null) {
    if ($quantity === null || $quantity >= $this->cart[$product_id]) {
        unset($this->cart[$product_id]);
    } else {
        $this->cart[$product_id] -= $quantity;
    }
}


public function update_quantity($product_id, $new_quantity) {
    if ($new_quantity > 0 && isset($this->cart[$product_id])) {
        $this->cart[$product_id] = $new_quantity;
    }
}


public function calculate_total() {
    $total = 0.0;
    foreach ($this->cart as $item_id => $quantity) {
        // Assuming product data is fetched from a database or an array
        $product_price = getProductPrice($item_id); // Replace with actual method
        $total += ($product_price * $quantity);
    }
    return number_format($total, 2, '.', '');
}


public function get_cart() {
    return $this->cart;
}


<?php
// Start the session
session_start();

// Check if the cart exists in the session; if not, initialize it as an array
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add item to cart
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $item_id = $_POST['item_id'];
    $item_name = $_POST['item_name'];
    $item_price = $_POST['item_price'];
    $quantity = $_POST['quantity'];

    // Check if the item is already in the cart
    $item_exists = false;
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['id'] == $item_id) {
            $item['quantity'] += $quantity;
            $item_exists = true;
            break;
        }
    }

    // If item not found, add it to the cart
    if (!$item_exists) {
        $_SESSION['cart'][] = array(
            'id' => $item_id,
            'name' => $item_name,
            'price' => $item_price,
            'quantity' => $quantity
        );
    }
}

// Remove item from cart
if (isset($_POST['remove_item'])) {
    $item_id = $_POST['item_id'];
    
    // Loop through the cart and remove the item with matching id
    foreach ($_SESSION['cart'] as $key => &$item) {
        if ($item['id'] == $item_id) {
            unset($_SESSION['cart'][$key]);
        }
    }
}

// Display the cart
echo "<h2>Your Cart</h2>";
echo "<table border='1'>";
echo "<tr><th>Item Name</th><th>Price</th><th>Quantity</th><th>Action</th></tr>";

foreach ($_SESSION['cart'] as $item) {
    echo "<tr>";
    echo "<td>" . $item['name'] . "</td>";
    echo "<td>$" . number_format($item['price'], 2) . "</td>";
    echo "<td>" . $item['quantity'] . "</td>";
    echo "<td><form action='cart.php' method='post'>";
    echo "<input type='hidden' name='remove_item' value='true'>";
    echo "<input type='hidden' name='item_id' value='" . $item['id'] . "'>";
    echo "<input type='submit' value='Remove'>";
    echo "</form></td>";
    echo "</tr>";
}

echo "</table>";

// Provide links to checkout and continue shopping
echo "<p><a href='checkout.php'>Checkout</a> | <a href='shop.php'>Continue Shopping</a></p>";
?>


<?php
session_start();
?>


if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Get product details from POST request
    $productId = $_POST['product_id'];
    $quantity = $_POST['quantity'];

    // Initialize cart if not set
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }

    // Check if the product is already in the cart
    if (array_key_exists($productId, $_SESSION['cart'])) {
        // If exists, increase quantity
        $_SESSION['cart'][$productId] += $quantity;
    } else {
        // If not exists, add new product with quantity
        $_SESSION['cart'][$productId] = $quantity;
    }
}


if (isset($_SESSION['cart'])) {
    echo "<h2>Shopping Cart</h2>";
    echo "<ul>";
    foreach ($_SESSION['cart'] as $productId => $quantity) {
        // Assume you have a function or array to get product details by ID
        $product = getProductDetails($productId);
        echo "<li>{$product['name']} - Quantity: {$quantity}</li>";
    }
    echo "</ul>";
} else {
    echo "Your cart is empty.";
}


if ($_SERVER['REQUEST_METHOD'] == 'POST' && isset($_POST['update'])) {
    foreach ($_SESSION['cart'] as $productId => $quantity) {
        if (isset($_POST["quantity_{$productId}"])) {
            $_SESSION['cart'][$productId] = $_POST["quantity_{$productId}"];
        }
    }
}


if ($_SERVER['REQUEST_METHOD'] == 'GET' && isset($_GET['remove'])) {
    $productIdToRemove = $_GET['remove'];
    
    if (isset($_SESSION['cart'][$productIdToRemove])) {
        unset($_SESSION['cart'][$productIdToRemove]);
    }
}


if ($_SERVER['REQUEST_METHOD'] == 'POST' && isset($_POST['clear_cart'])) {
    unset($_SESSION['cart']);
    $_SESSION['cart'] = array();
}


<?php
session_start();

// Initialize cart if not set
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add item to cart
if ($_SERVER['REQUEST_METHOD'] == 'POST' && isset($_POST['add_to_cart'])) {
    $productId = $_POST['product_id'];
    $quantity = $_POST['quantity'];

    if (array_key_exists($productId, $_SESSION['cart'])) {
        $_SESSION['cart'][$productId] += $quantity;
    } else {
        $_SESSION['cart'][$productId] = $quantity;
    }
}

// Update quantities
if ($_SERVER['REQUEST_METHOD'] == 'POST' && isset($_POST['update'])) {
    foreach ($_SESSION['cart'] as $productId => $quantity) {
        if (isset($_POST["quantity_{$productId}"])) {
            $_SESSION['cart'][$productId] = $_POST["quantity_{$productId}"];
        }
    }
}

// Remove item from cart
if ($_SERVER['REQUEST_METHOD'] == 'GET' && isset($_GET['remove'])) {
    $productIdToRemove = $_GET['remove'];
    
    if (isset($_SESSION['cart'][$productIdToRemove])) {
        unset($_SESSION['cart'][$productIdToRemove]);
    }
}

// Clear cart
if ($_SERVER['REQUEST_METHOD'] == 'POST' && isset($_POST['clear_cart'])) {
    unset($_SESSION['cart']);
    $_SESSION['cart'] = array();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>

<h1>Welcome to Our Store</h1>

<!-- Add to Cart Form -->
<form method="post">
    <input type="hidden" name="product_id" value="1">
    <input type="number" name="quantity" placeholder="Quantity" min="1" required>
    <button type="submit" name="add_to_cart">Add to Cart</button>
</form>

<!-- Display Cart -->
<h2>Your Cart:</h2>
<form method="post">
    <?php if (!empty($_SESSION['cart'])): ?>
        <ul>
            <?php foreach ($_SESSION['cart'] as $productId => $quantity): ?>
                <li>
                    Product <?php echo $productId; ?> - Quantity: 
                    <input type="number" name="quantity_<?php echo $productId; ?>" value="<?php echo $quantity; ?>">
                    <a href="?remove=<?php echo $productId; ?>">Remove</a>
                </li>
            <?php endforeach; ?>
        </ul>
        <button type="submit" name="update">Update Cart</button><br>
        <button type="submit" name="clear_cart">Clear Cart</button>
    <?php else: ?>
        Your cart is empty.
    <?php endif; ?>
</form>

<!-- Checkout Button -->
<form method="post">
    <button type="submit" name="checkout">Checkout</button>
</form>

</body>
</html>


<?php
// Start the session
session_start();

// Initialize the cart if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function add_to_cart($product_id, $product_name, $price) {
    global $products;
    
    // Check if product exists in the cart
    if (isset($_SESSION['cart'][$product_id])) {
        // If exists, increase quantity
        $_SESSION['cart'][$product_id]['quantity']++;
    } else {
        // If not exists, add new item
        $item = array(
            'product_id' => $product_id,
            'name' => $product_name,
            'price' => $price,
            'quantity' => 1
        );
        $_SESSION['cart'][$product_id] = $item;
    }
}

// Function to remove item from cart
function remove_from_cart($product_id) {
    if (isset($_SESSION['cart'][$product_id])) {
        unset($_SESSION['cart'][$product_id]);
    }
}

// Function to update quantity of item in cart
function update_quantity($product_id, $new_quantity) {
    if ($new_quantity > 0 && isset($_SESSION['cart'][$product_id])) {
        $_SESSION['cart'][$product_id]['quantity'] = $new_quantity;
    } else if ($new_quantity <= 0) {
        remove_from_cart($product_id);
    }
}

// Function to display cart contents
function display_cart() {
    echo "<h2>Shopping Cart</h2>";
    echo "<table border='1'>";
    echo "<tr><th>Product Name</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>";
    
    $total = 0;
    
    foreach ($_SESSION['cart'] as $item) {
        $subtotal = $item['price'] * $item['quantity'];
        $total += $subtotal;
        
        echo "<tr>";
        echo "<td>" . $item['name'] . "</td>";
        echo "<td>$" . number_format($item['price'], 2) . "</td>";
        echo "<td><input type='number' value='" . $item['quantity'] . "' onChange='updateQuantity(" . $item['product_id'] . ", this.value)'></td>";
        echo "<td>$" . number_format($subtotal, 2) . "</td>";
        echo "<td><button onclick='removeItem(" . $item['product_id'] . ")'>Remove</button></td>";
        echo "</tr>";
    }
    
    echo "<tr>";
    echo "<td colspan='3'><strong>Total:</strong></td>";
    echo "<td>$" . number_format($total, 2) . "</td>";
    echo "<td></td>";
    echo "</tr>";
    
    echo "</table>";
}

// Sample products (you would typically get this from a database)
$products = array(
    1 => array('name' => 'Product 1', 'price' => 9.99),
    2 => array('name' => 'Product 2', 'price' => 14.99),
    3 => array('name' => 'Product 3', 'price' => 19.99)
);

// Example usage:
if (isset($_GET['action'])) {
    switch ($_GET['action']) {
        case 'add':
            if (isset($products[$_GET['id']])) {
                add_to_cart($_GET['id'], $products[$_GET['id']]['name'], $products[$_GET['id']]['price']);
            }
            break;
            
        case 'remove':
            remove_from_cart($_GET['id']);
            break;
            
        case 'update':
            if (isset($_GET['quantity'])) {
                update_quantity($_GET['id'], $_GET['quantity']);
            }
            break;
    }
}

// Display cart contents
display_cart();
?>


<?php
// Initialize the session
session_start();

// Check if the cart exists in the session. If not, initialize it as an array
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function addToCart($productId) {
    // Assuming you have a way to get product details from your database or array
    $product = getProductDetails($productId);
    
    if ($product) {
        if (!isset($_SESSION['cart'][$productId])) {
            $_SESSION['cart'][$productId] = array(
                'id' => $productId,
                'name' => $product['name'],
                'price' => $product['price'],
                'quantity' => 1
            );
        } else {
            // If item already exists, increase quantity
            $_SESSION['cart'][$productId]['quantity']++;
        }
    }
}

// Function to update cart item quantity
function updateCart($productId, $quantity) {
    if (isset($_SESSION['cart'][$productId])) {
        if ($quantity > 0) {
            $_SESSION['cart'][$productId]['quantity'] = $quantity;
        } else {
            // If quantity is zero or negative, remove the item
            unset($_SESSION['cart'][$productId]);
        }
    }
}

// Function to remove item from cart
function removeFromCart($productId) {
    if (isset($_SESSION['cart'][$productId])) {
        unset($_SESSION['cart'][$productId]);
    }
}

// Function to clear all items from cart
function clearCart() {
    $_SESSION['cart'] = array();
}

// Function to get product details (you would typically fetch this from a database)
function getProductDetails($productId) {
    // Example product data - replace with your actual data source
    $products = array(
        1 => array('id' => 1, 'name' => 'Product 1', 'price' => 29.99),
        2 => array('id' => 2, 'name' => 'Product 2', 'price' => 49.99),
        // Add more products as needed
    );
    
    return isset($products[$productId]) ? $products[$productId] : false;
}

// Example usage:
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    switch ($_POST['action']) {
        case 'add':
            addToCart($_POST['product_id']);
            break;
        case 'update':
            updateCart($_POST['product_id'], $_POST['quantity']);
            break;
        case 'remove':
            removeFromCart($_POST['product_id']);
            break;
        case 'clear':
            clearCart();
            break;
    }
}

// Calculate total amount
$total = 0;
foreach ($_SESSION['cart'] as $item) {
    $total += ($item['price'] * $item['quantity']);
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <!-- Display cart items -->
    <?php if (!empty($_SESSION['cart'])): ?>
        <h2>Your Shopping Cart</h2>
        <table border="1">
            <tr>
                <th>Product Name</th>
                <th>Price</th>
                <th>Quantity</th>
                <th>Total</th>
                <th>Action</th>
            </tr>
            <?php foreach ($_SESSION['cart'] as $item): ?>
                <tr>
                    <td><?php echo $item['name']; ?></td>
                    <td>$<?php echo number_format($item['price'], 2); ?></td>
                    <td>
                        <form action="" method="post">
                            <input type="hidden" name="action" value="update">
                            <input type="hidden" name="product_id" value="<?php echo $item['id']; ?>">
                            <input type="number" name="quantity" min="1" value="<?php echo $item['quantity']; ?>" style="width: 50px;">
                            <button type="submit">Update</button>
                        </form>
                    </td>
                    <td>$<?php echo number_format($item['price'] * $item['quantity'], 2); ?></td>
                    <td>
                        <form action="" method="post">
                            <input type="hidden" name="action" value="remove">
                            <input type="hidden" name="product_id" value="<?php echo $item['id']; ?>">
                            <button type="submit">Remove</button>
                        </form>
                    </td>
                </tr>
            <?php endforeach; ?>
        </table>
        <p>Total: $<?php echo number_format($total, 2); ?></p>
        <form action="" method="post">
            <input type="hidden" name="action" value="clear">
            <button type="submit">Clear Cart</button>
        </form>
    <?php else: ?>
        <p>Your cart is empty.</p>
    <?php endif; ?>

    <!-- Add items to cart -->
    <h2>Products Available</h2>
    <?php foreach (getProductDetails() as $product): ?>
        <div style="margin-bottom: 10px;">
            <h3><?php echo $product['name']; ?></h3>
            <p>$<?php echo number_format($product['price'], 2); ?></p>
            <form action="" method="post">
                <input type="hidden" name="action" value="add">
                <input type="hidden" name="product_id" value="<?php echo $product['id']; ?>">
                <button type="submit">Add to Cart</button>
            </form>
        </div>
    <?php endforeach; ?>
</body>
</html>


<?php
session_start();

// Initialize cart if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function addToCart($item_id, $item_name, $price) {
    global $cart;
    
    // Check if the item is already in the cart
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['id'] == $item_id) {
            $item['quantity']++;
            return;
        }
    }
    
    // Add new item to cart
    $_SESSION['cart'][] = array(
        'id' => $item_id,
        'name' => $item_name,
        'price' => $price,
        'quantity' => 1
    );
}

// Function to remove item from cart
function removeFromCart($item_id) {
    global $cart;
    
    // Filter out the item with the specified ID
    $_SESSION['cart'] = array_filter($_SESSION['cart'], function($item) use ($item_id) {
        return $item['id'] != $item_id;
    });
}

// Function to update item quantity
function updateQuantity($item_id, $new_quantity) {
    global $cart;
    
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['id'] == $item_id) {
            // Ensure the quantity is at least 1
            $item['quantity'] = max(1, $new_quantity);
        }
    }
}

// Function to display cart
function displayCart() {
    $output = '<h2>Your Shopping Cart</h2>';
    $output .= '<table border="1">';
    $output .= '<tr><th>Item Name</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>';
    
    foreach ($_SESSION['cart'] as $item) {
        $total = $item['price'] * $item['quantity'];
        $output .= '<tr>';
        $output .= "<td>{$item['name']}</td>";
        $output .= "<td>$$item[price]</td>";
        $output .= "<td><input type='number' value='{$item['quantity']}' onchange='updateQuantity($item[id], this.value)'></td>";
        $output .= "<td>$$total</td>";
        $output .= "<td><button onclick='removeFromCart($item[id])'>Remove</button></td>";
        $output .= '</tr>';
    }
    
    $output .= '</table>';
    return $output;
}

// Calculate subtotal and total
function calculateTotals() {
    $subtotal = 0;
    foreach ($_SESSION['cart'] as $item) {
        $subtotal += $item['price'] * $item['quantity'];
    }
    
    // Add tax (example: 10%)
    $tax = $subtotal * 0.10;
    $total = $subtotal + $tax;
    
    return array(
        'subtotal' => $subtotal,
        'tax' => $tax,
        'total' => $total
    );
}
?>


addToCart(1, 'Item Name', 19.99);


echo displayCart();


$totals = calculateTotals();
echo "Subtotal: $totals[subtotal]";
echo "Tax: $totals[tax]";
echo "Total: $totals[total]";


<?php
session_start();
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Sample product data
$products = array(
    1 => array('name' => 'Product A', 'price' => 29.99),
    2 => array('name' => 'Product B', 'price' => 49.99),
    // Add more products as needed
);

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    if (isset($_POST['add_to_cart'])) {
        $product_id = intval($_POST['product_id']);
        $name = $_POST['name'];
        $price = floatval($_POST['price']);
        
        // Check if the product is already in the cart
        $found = false;
        foreach ($_SESSION['cart'] as &$item) {
            if ($item['product_id'] == $product_id) {
                $item['quantity']++;
                $found = true;
                break;
            }
        }
        
        if (!$found) {
            $_SESSION['cart'][] = array(
                'product_id' => $product_id,
                'name' => $name,
                'price' => $price,
                'quantity' => 1
            );
        }
        
        header('Location: cart.php');
        exit();
    }
}

// Display products with add to cart buttons
foreach ($products as $id => $product) {
    echo "<form method='post'>";
    echo "<input type='hidden' name='product_id' value='" . $id . "'>";
    echo "<input type='hidden' name='name' value='" . htmlspecialchars($product['name']) . "'>";
    echo "<input type='hidden' name='price' value='" . $product['price'] . "'>";
    echo "<button type='submit' name='add_to_cart'>Add to Cart</button>";
    echo "</form>";
}
?>


<?php
session_start();

if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

$total = 0;

// Remove item if requested
if ($_SERVER['REQUEST_METHOD'] == 'POST' && isset($_POST['remove_item'])) {
    $product_id_to_remove = intval($_POST['product_id']);
    
    foreach ($_SESSION['cart'] as $key => &$item) {
        if ($item['product_id'] == $product_id_to_remove) {
            unset($_SESSION['cart'][$key]);
            break;
        }
    }
    
    // Re-index the array
    $_SESSION['cart'] = array_values($_SESSION['cart']);
}

// Calculate total and display cart contents
echo "<h2>Shopping Cart</h2>";
echo "<form method='post'>";

foreach ($_SESSION['cart'] as $item) {
    echo "<div>";
    echo "Product: " . htmlspecialchars($item['name']) . "<br />";
    echo "Price: $" . number_format($item['price'], 2) . "<br />";
    echo "Quantity: " . $item['quantity'] . "<br />";
    
    // Remove button
    echo "<form method='post'>";
    echo "<input type='hidden' name='product_id' value='" . $item['product_id'] . "'>";
    echo "<button type='submit' name='remove_item'>Remove</button>";
    echo "</form>";
    
    $total += ($item['price'] * $item['quantity']);
    echo "</div><br />";
}

echo "<h3>Total: $" . number_format($total, 2) . "</h3>";

if (empty($_SESSION['cart'])) {
    echo "Your cart is empty.";
}
?>


<?php
// Start the session
session_start();

// Initialize the cart if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Initialize total price if it doesn't exist
if (!isset($_SESSION['total_price'])) {
    $_SESSION['total_price'] = 0;
}

// Handle adding items to the cart
if (isset($_POST['action']) && $_POST['action'] == 'add_to_cart') {
    $item_id = isset($_POST['item_id']) ? intval($_POST['item_id']) : '';
    $item_name = isset($_POST['item_name']) ? $_POST['item_name'] : '';
    $item_price = isset($_POST['item_price']) ? floatval($_POST['item_price']) : 0;
    $quantity = isset($_POST['quantity']) ? intval($_POST['quantity']) : 1;

    // Check if the item is already in the cart
    if (isset($_SESSION['cart'][$item_id])) {
        // Update the quantity and total price
        $_SESSION['cart'][$item_id]['quantity'] += $quantity;
        $_SESSION['cart'][$item_id]['total_price'] = $_SESSION['cart'][$item_id]['price'] * $_SESSION['cart'][$item_id]['quantity'];
    } else {
        // Add new item to the cart
        $_SESSION['cart'][$item_id] = array(
            'id' => $item_id,
            'name' => $item_name,
            'price' => $item_price,
            'quantity' => $quantity,
            'total_price' => $item_price * $quantity
        );
    }

    // Update the total price in session
    $_SESSION['total_price'] += ($item_price * $quantity);

    // Redirect back to the cart page or product page
    header('Location: view_cart.php');
    exit();
}

// Handle removing items from the cart
if (isset($_GET['action']) && $_GET['action'] == 'remove') {
    $item_id = isset($_GET['item_id']) ? intval($_GET['item_id']) : '';

    // Check if the item exists in the cart
    if (isset($_SESSION['cart'][$item_id])) {
        // Subtract the item's total price from the session total
        $_SESSION['total_price'] -= $_SESSION['cart'][$item_id]['total_price'];
        unset($_SESSION['cart'][$item_id]);
    }

    // Redirect back to the cart page or product page
    header('Location: view_cart.php');
    exit();
}

// Handle updating quantities in the cart
if (isset($_POST['action']) && $_POST['action'] == 'update_quantity') {
    foreach ($_SESSION['cart'] as $item_id => $item) {
        // Get the new quantity from the form input
        $new_quantity = isset($_POST["quantity_$item_id"]) ? intval($_POST["quantity_$item_id"]) : 1;

        // Update the quantity and total price for the item
        $_SESSION['cart'][$item_id]['quantity'] = $new_quantity;
        $_SESSION['cart'][$item_id]['total_price'] = $_SESSION['cart'][$item_id]['price'] * $new_quantity;

        // Update the session total price
        $_SESSION['total_price'] += ($_SESSION['cart'][$item_id]['price'] * ($new_quantity - $item['quantity']));
    }

    // Redirect back to the cart page or product page
    header('Location: view_cart.php');
    exit();
}
?>


<form action="add_to_cart.php" method="post">
    <input type="hidden" name="item_id" value="<?php echo $product['id']; ?>">
    <input type="hidden" name="item_name" value="<?php echo $product['name']; ?>">
    <input type="hidden" name="item_price" value="<?php echo $product['price']; ?>">
    <input type="text" name="quantity" value="1">
    <button type="submit" name="action" value="add_to_cart">Add to Cart</button>
</form>


<?php
// Start session and include cart code above

echo "<h2>Shopping Cart</h2>";
echo "<p>Total Price: $" . number_format($_SESSION['total_price'], 2) . "</p>";

if (empty($_SESSION['cart'])) {
    echo "<p>Your cart is empty.</p>";
} else {
    echo "<form action='update_cart.php' method='post'>";
    foreach ($_SESSION['cart'] as $item_id => $item) {
        echo "<div class='cart-item'>";
        echo "<h3>" . $item['name'] . "</h3>";
        echo "<p>Price: $" . number_format($item['price'], 2) . "</p>";
        echo "<input type='text' name='quantity_$item_id' value='" . $item['quantity'] . "'>";
        echo "<a href='remove_item.php?item_id=$item_id'>Remove</a>";
        echo "</div>";
    }
    echo "<button type='submit' name='action' value='update_quantity'>Update Quantities</button>";
    echo "</form>";
}
?>


<?php
session_start();
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}
$product_id = 1;
$product_name = "Product A";
$product_price = 29.99;

$cart =& $_SESSION['cart'];
$item_exists = false;
foreach ($cart as $key => $item) {
    if ($item['id'] == $product_id) {
        $cart[$key]['quantity'] += 1;
        $item_exists = true;
        break;
    }
}
if (!$item_exists) {
    $cart[] = array(
        'id' => $product_id,
        'name' => $product_name,
        'price' => $product_price,
        'quantity' => 1
    );
}

header("Location: display_cart.php");
exit();
?>


<?php
session_start();
$cart =& $_SESSION['cart'];
?>

<!DOCTYPE html>
<html>
<head><title>Shopping Cart</title></head>
<body>
<h1>Shopping Cart</h1>
<form action="remove_item.php" method="post">
    <?php foreach ($cart as $key => $item): ?>
        <p><?php echo $item['name']; ?> (<?php echo $item['quantity']; ?> x $<?php echo number_format($item['price'], 2); ?>)</p>
        <input type="hidden" name="id" value="<?php echo $item['id']; ?>">
        <button type="submit">Remove</button><br>
    <?php endforeach; ?>
</form>

Total Items: <?php echo count($cart); ?>
<a href="add_item.php">Add Item</a>
</body>
</html>


<?php
session_start();
$cart =& $_SESSION['cart'];
$product_id = isset($_POST['id']) ? (int)$_POST['id'] : 0;

foreach ($cart as $key => $item) {
    if ($item['id'] == $product_id) {
        unset($cart[$key]);
        break;
    }
}
$_SESSION['cart'] = array_values($cart);

header("Location: display_cart.php");
exit();
?>


<?php
session_start();
?>


<?php
session_start();

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $item_id = htmlspecialchars($_POST['item_id']);
    $quantity = intval($_POST['quantity']);

    if (!empty($item_id) && !empty($quantity) && $quantity > 0) {
        // Check if cart exists in session
        if (isset($_SESSION['cart'])) {
            $found = false;
            foreach ($_SESSION['cart'] as &$item) {
                if ($item['id'] == $item_id) {
                    $item['quantity'] += $quantity;
                    $found = true;
                    break;
                }
            }
            unset($item); // Break the reference
            if (!$found) {
                $_SESSION['cart'][] = array(
                    'id' => $item_id,
                    'quantity' => $quantity
                );
            }
        } else {
            $_SESSION['cart'] = array();
            $_SESSION['cart'][] = array(
                'id' => $item_id,
                'quantity' => $quantity
            );
        }
    } else {
        // Handle invalid input if needed
    }
}

header("Location: cart.php");
exit();
?>


<?php
session_start();

if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array(); // Initialize empty cart
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <h1>Your Shopping Cart</h1>
    
    <?php if (empty($_SESSION['cart'])): ?>
        <p>Your cart is empty.</p>
    <?php else: ?>
        <table border="1">
            <tr>
                <th>Item ID</th>
                <th>Quantity</th>
                <th>Action</th>
            </tr>
            <?php foreach ($_SESSION['cart'] as $key => $item): ?>
                <tr>
                    <td><?php echo htmlspecialchars($item['id']); ?></td>
                    <td><?php echo htmlspecialchars($item['quantity']); ?></td>
                    <td>
                        <form action="remove_item.php" method="post">
                            <input type="hidden" name="item_id" value="<?php echo htmlspecialchars($item['id']); ?>">
                            <input type="submit" value="Remove">
                        </form>
                    </td>
                </tr>
            <?php endforeach; ?>
        </table>
    <?php endif; ?>

    <p><a href="add_item.html">Add More Items</a></p>
</body>
</html>


<?php
session_start();

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $item_id = htmlspecialchars($_POST['item_id']);

    if (isset($_SESSION['cart'])) {
        foreach ($_SESSION['cart'] as $key => $item) {
            if ($item['id'] == $item_id) {
                unset($_SESSION['cart'][$key]);
                break;
            }
        }
        // Re-index the array to maintain keys
        $_SESSION['cart'] = array_values($_SESSION['cart']);
    }
}

header("Location: cart.php");
exit();
?>


<?php
// Start the session
session_start();

class Cart {
    private $cart;

    public function __construct() {
        // Check if cart exists in session, if not initialize it
        if (!isset($_SESSION['cart'])) {
            $_SESSION['cart'] = array();
        }
        $this->cart = &$_SESSION['cart'];
    }

    // Add item to cart
    public function addToCart($item_id, $item_name, $price) {
        // Check if item already exists in cart
        if (isset($this->cart[$item_id])) {
            // Increment quantity by 1
            $this->cart[$item_id]['quantity']++;
        } else {
            // Add new item to cart
            $this->cart[$item_id] = array(
                'item_id' => $item_id,
                'name' => $item_name,
                'price' => $price,
                'quantity' => 1
            );
        }
    }

    // Remove item from cart
    public function removeFromCart($item_id) {
        if (isset($this->cart[$item_id])) {
            unset($this->cart[$item_id]);
        }
    }

    // Update quantity of an item in cart
    public function updateQuantity($item_id, $quantity) {
        if (isset($this->cart[$item_id])) {
            $this->cart[$item_id]['quantity'] = $quantity;
        }
    }

    // Display cart contents
    public function displayCart() {
        echo "<h2>Shopping Cart</h2>";
        echo "<table border='1'>";
        echo "<tr><th>Item Name</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>";
        
        $total = 0;
        foreach ($this->cart as $item) {
            $item_total = $item['price'] * $item['quantity'];
            $total += $item_total;
            
            echo "<tr>";
            echo "<td>".$item['name']."</td>";
            echo "<td>$".$item['price']."</td>";
            echo "<td><input type='number' value='".$item['quantity']."' onchange='updateQuantity(".$item['item_id'].", this.value)'></td>";
            echo "<td>$".$item_total."</td>";
            echo "<td><button onclick='removeItem(".$item['item_id'].")'>Remove</button></td>";
            echo "</tr>";
        }
        
        echo "</table>";
        echo "<h3>Total: $".$total."</h3>";
    }

    // Calculate total price
    public function calculateTotal() {
        $total = 0;
        foreach ($this->cart as $item) {
            $total += $item['price'] * $item['quantity'];
        }
        return $total;
    }
}

// Usage example:
$cart = new Cart();

// Add items to cart
$cart->addToCart(1, 'Laptop', 999);
$cart->addToCart(2, 'Phone', 699);

// Update quantity of an item
$cart->updateQuantity(1, 2);

// Remove an item from cart
$cart->removeFromCart(2);

// Display cart contents
$cart->displayCart();

// Get total price
$total = $cart->calculateTotal();
echo "Total Price: $".$total;

?>


<?php
// Start the session
session_start();

// Initialize cart if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add item to cart
if (isset($_POST['add_to_cart'])) {
    // Get product details from form
    $item_id = $_POST['product_id'];
    $item_name = $_POST['product_name'];
    $item_price = $_POST['product_price'];
    
    // Check if item already exists in cart
    $found = false;
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['id'] == $item_id) {
            $item['quantity']++;
            $found = true;
            break;
        }
    }
    
    // If item not found, add it to cart
    if (!$found) {
        $item = array(
            'id' => $item_id,
            'name' => $item_name,
            'price' => $item_price,
            'quantity' => 1
        );
        $_SESSION['cart'][] = $item;
    }
}

// Remove item from cart
if (isset($_POST['remove_from_cart'])) {
    $item_id = $_POST['product_id'];
    
    // Loop through cart and remove item with matching ID
    foreach ($_SESSION['cart'] as $key => &$item) {
        if ($item['id'] == $item_id) {
            unset($_SESSION['cart'][$key]);
        }
    }
    
    // Re-index the array
    $_SESSION['cart'] = array_values($_SESSION['cart']);
}

// Display cart contents
echo "<h2>Shopping Cart</h2>";
if (empty($_SESSION['cart'])) {
    echo "Your cart is empty.";
} else {
    echo "<table>";
    echo "<tr><th>Item Name</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>";
    foreach ($_SESSION['cart'] as $item) {
        $total = $item['price'] * $item['quantity'];
        echo "<tr>";
        echo "<td>" . $item['name'] . "</td>";
        echo "<td>Rs." . number_format($item['price'], 2) . "</td>";
        echo "<td><input type='number' value='" . $item['quantity'] . "'></td>";
        echo "<td>Rs." . number_format($total, 2) . "</td>";
        echo "<td><form method='post'><button name='remove_from_cart' value='" . $item['id'] . "'>Remove</button></form></td>";
        echo "</tr>";
    }
    echo "</table>";
}

// Sample product form
echo "<h2>Products</h2>";
echo "<div class='product'>";
echo "<form method='post'>";
echo "<input type='hidden' name='product_id' value='1'>";
echo "<input type='hidden' name='product_name' value='Product 1'>";
echo "<input type='hidden' name='product_price' value='99.99'>";
echo "<button name='add_to_cart'>Add to Cart</button>";
echo "</form>";
echo "</div>";

// Add more products here...
?>

<style>
    .container {
        max-width: 800px;
        margin: 0 auto;
        padding: 20px;
    }
    
    .product {
        border: 1px solid #ddd;
        padding: 10px;
        margin-bottom: 10px;
    }
    
    table {
        width: 100%;
        border-collapse: collapse;
        margin-top: 20px;
    }
    
    th, td {
        padding: 10px;
        text-align: left;
        border-bottom: 1px solid #ddd;
    }
</style>


<?php
// Start the session
session_start();

// Check if the cart exists in the session, initialize if not
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function addToCart($item_id, $quantity) {
    global $conn; // Assuming you have a database connection

    // Check if item exists in the database
    $stmt = $conn->prepare("SELECT * FROM products WHERE id = ?");
    $stmt->execute([$item_id]);
    $product = $stmt->fetch();

    if ($product) {
        // Add item to cart
        $_SESSION['cart'][$item_id] = array(
            'id' => $item_id,
            'name' => $product['name'],
            'price' => $product['price'],
            'quantity' => $quantity
        );
        return true;
    }
    return false;
}

// Function to update item quantity in cart
function updateCart($item_id, $quantity) {
    if (isset($_SESSION['cart'][$item_id])) {
        $_SESSION['cart'][$item_id]['quantity'] = $quantity;
        return true;
    }
    return false;
}

// Function to remove item from cart
function removeFromCart($item_id) {
    if (isset($_SESSION['cart'][$item_id])) {
        unset($_SESSION['cart'][$item_id]);
        // Re-index the array
        $_SESSION['cart'] = array_values($_SESSION['cart']);
        return true;
    }
    return false;
}

// Function to calculate total price of items in cart
function cartTotal() {
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += $item['price'] * $item['quantity'];
    }
    return $total;
}

// Example usage:
// Adding an item to the cart
if (isset($_POST['add_to_cart'])) {
    $item_id = intval($_POST['item_id']);
    $quantity = intval($_POST['quantity']);
    if (addToCart($item_id, $quantity)) {
        echo "Item added to cart!";
    } else {
        echo "Error adding item to cart.";
    }
}

// Updating quantity
if (isset($_POST['update_quantity'])) {
    $item_id = intval($_POST['item_id']);
    $quantity = intval($_POST['quantity']);
    if (updateCart($item_id, $quantity)) {
        echo "Quantity updated!";
    } else {
        echo "Error updating quantity.";
    }
}

// Removing item from cart
if (isset($_POST['remove_item'])) {
    $item_id = intval($_POST['item_id']);
    if (removeFromCart($item_id)) {
        echo "Item removed from cart!";
    } else {
        echo "Error removing item.";
    }
}

// Displaying the cart contents
echo "<h2>Shopping Cart</h2>";
if (!empty($_SESSION['cart'])) {
    foreach ($_SESSION['cart'] as $item) {
        echo "Item ID: {$item['id']}<br />";
        echo "Name: {$item['name']}<br />";
        echo "Price: \${$item['price']}<br />";
        echo "Quantity: {$item['quantity']}<br />";
        echo "<hr />";
    }
    echo "Total Price: $" . cartTotal();
} else {
    echo "Your cart is empty!";
}

// Destroy the session when done
// session_unset();
// session_destroy();
?>


<?php
session_start();
// Set cookie parameters for security and compatibility
ini_set('session.cookie_httponly', 'On');
ini_set('session.cookie_secure', 1);
?>


<?php
session_start();

// Get product details from POST request
$product_id = $_POST['product_id'];
$product_name = $_POST['product_name'];
$price = $_POST['price'];
$quantity = $_POST['quantity'];

if (isset($_SESSION['cart'])) {
    $cart = $_SESSION['cart'];
} else {
    $cart = array();
}

// Check if the product is already in the cart
if (array_key_exists($product_id, $cart)) {
    // Update quantity
    $cart[$product_id]['quantity'] += $quantity;
} else {
    // Add new item
    $cart[$product_id] = array(
        'name' => $product_name,
        'price' => $price,
        'quantity' => $quantity
    );
}

$_SESSION['cart'] = $cart;
?>


<?php
session_start();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <?php if (!empty($_SESSION['cart'])): ?>
        <h1>Your Cart</h1>
        <table border="1">
            <tr>
                <th>Product Name</th>
                <th>Price</th>
                <th>Quantity</th>
                <th>Action</th>
            </tr>
            <?php foreach ($_SESSION['cart'] as $id => $item): ?>
                <tr>
                    <td><?php echo $item['name']; ?></td>
                    <td><?php echo '$' . number_format($item['price'], 2); ?></td>
                    <td><?php echo $item['quantity']; ?></td>
                    <td><a href="remove_item.php?id=<?php echo $id; ?>">Remove</a></td>
                </tr>
            <?php endforeach; ?>
        </table>
    <?php else: ?>
        <p>Your cart is empty.</p>
    <?php endif; ?>

    <p><a href="index.php">Continue Shopping</a></p>
    <p><a href="clear_cart.php">Clear Cart</a></p>
</body>
</html>


<?php
session_start();

if (isset($_GET['id'])) {
    $id = $_GET['id'];
    
    if (!empty($_SESSION['cart'][$id])) {
        unset($_SESSION['cart'][$id]);
        
        // Re-index the session array to maintain continuity
        $_SESSION['cart'] = array_values($_SESSION['cart']);
    }
}

header("Location: view_cart.php");
exit();
?>


<?php
session_start();

// Unset and destroy the cart session
unset($_SESSION['cart']);
$_SESSION = array();
session_unset();
session_destroy();

header("Location: index.php");
exit();
?>


<?php
// Start the session
session_start();

// Check if the session 'cart' exists. If not, initialize it as an array.
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to the cart
function addToCart($product_id, $product_name, $price) {
    global $db;
    
    // Check if product exists in database (for security)
    $query = "SELECT * FROM products WHERE id = ?";
    $stmt = $db->prepare($query);
    $stmt->bind_param("i", $product_id);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows > 0) {
        // Check if the product is already in the cart
        if (!isset($_SESSION['cart'][$product_id])) {
            $_SESSION['cart'][$product_id] = array(
                'id' => $product_id,
                'name' => $product_name,
                'price' => $price,
                'quantity' => 1
            );
        } else {
            // If product exists, increment quantity
            $_SESSION['cart'][$product_id]['quantity']++;
        }
    }
}

// Function to update cart item quantity
function updateCartItem($product_id, $new_quantity) {
    if (isset($_SESSION['cart'][$product_id])) {
        $_SESSION['cart'][$product_id]['quantity'] = $new_quantity;
    }
}

// Function to delete item from cart
function deleteCartItem($product_id) {
    if (isset($_SESSION['cart'][$product_id])) {
        unset($_SESSION['cart'][$product_id]);
    }
}

// Function to calculate total price of items in the cart
function calculateTotal() {
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += ($item['price'] * $item['quantity']);
    }
    return $total;
}
?>



<?php
session_start();
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}
?>


<?php
session_start();

$itemId = $_POST['item_id'];
$itemName = $_POST['item_name'];
$itemPrice = $_POST['price'];
$itemQuantity = 1;

$found = false;
foreach ($_SESSION['cart'] as $index => $item) {
    if ($item['item_id'] == $itemId) {
        $_SESSION['cart'][$index]['quantity']++;
        $found = true;
        break;
    }
}

if (!$found) {
    array_push($_SESSION['cart'], array(
        'item_id' => $itemId,
        'name' => $itemName,
        'price' => $itemPrice,
        'quantity' => $itemQuantity
    ));
}

$_SESSION['message'] = "Item added to cart successfully!";
header("Location: cart.php");
exit();
?>


<?php
session_start();

function calculateTotal() {
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += ($item['price'] * $item['quantity']);
    }
    return $total;
}

$message = isset($_SESSION['message']) ? $_SESSION['message'] : '';
unset($_SESSION['message']);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
<?php if ($message) { ?>
    <div style="color: green;"><?php echo $message; ?></div><br>
<?php } ?>

<h2>Your Shopping Cart:</h2>
<table border="1">
    <tr>
        <th>Item Name</th>
        <th>Price</th>
        <th>Quantity</th>
        <th>Total</th>
        <th>Action</th>
    </tr>
    <?php foreach ($_SESSION['cart'] as $index => $item): ?>
        <tr>
            <td><?php echo $item['name']; ?></td>
            <td>$<?php echo number_format($item['price'], 2); ?></td>
            <td><?php echo $item['quantity']; ?></td>
            <td>$<?php echo number_format(($item['price'] * $item['quantity']), 2); ?></td>
            <td><a href="remove_item.php?index=<?php echo $index; ?>">Remove</a></td>
        </tr>
    <?php endforeach; ?>
</table>

<br>
Total Amount: $<?php echo number_format(calculateTotal(), 2); ?>

<br><br>
<a href="products.php">Continue Shopping</a>
</body>
</html>


<?php
session_start();

$index = $_GET['index'];
if (isset($_SESSION['cart'][$index])) {
    array_splice($_SESSION['cart'], $index, 1);
}

$_SESSION['message'] = "Item removed from cart successfully!";
header("Location: cart.php");
exit();
?>


<?php
session_start();

// Regenerate session ID to prevent fixation
session_regenerate(true);

// Secure session cookie settings
ini_set('session.cookie_httponly', 1);
ini_set('session.use_strict_mode', 1);
if (isset($_SERVER['HTTPS'])) {
    ini_set('session.cookie_secure', 1);
}
?>


<?php
session_start();

// Initialize cart if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function addToCart($item_id, $item_name, $price) {
    global $db;
    
    // Check if the item is already in the cart
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['id'] == $item_id) {
            $item['quantity']++;
            return;
        }
    }
    
    // Add new item to cart
    $_SESSION['cart'][] = array(
        'id' => $item_id,
        'name' => $item_name,
        'price' => $price,
        'quantity' => 1
    );
}

// Function to remove item from cart
function removeFromCart($item_id) {
    foreach ($_SESSION['cart'] as $key => &$item) {
        if ($item['id'] == $item_id) {
            unset($_SESSION['cart'][$key]);
            return;
        }
    }
}

// Display cart contents
echo "<h2>Shopping Cart</h2>";
if (empty($_SESSION['cart'])) {
    echo "Your cart is empty.";
} else {
    foreach ($_SESSION['cart'] as $item) {
        echo "<div>";
        echo "Item ID: " . $item['id'] . "<br>";
        echo "Item Name: " . $item['name'] . "<br>";
        echo "Price: $" . number_format($item['price'], 2) . "<br>";
        echo "Quantity: " . $item['quantity'] . "<br>";
        echo "<a href='?remove=" . $item['id'] . "'>Remove</a>";
        echo "</div><hr>";
    }
}

// Calculate total amount
$total = 0;
foreach ($_SESSION['cart'] as $item) {
    $total += $item['price'] * $item['quantity'];
}
echo "<h3>Total Amount: $" . number_format($total, 2) . "</h3>";

// Handle remove action
if (isset($_GET['remove'])) {
    removeFromCart($_GET['remove']);
}

// Add item example
if (!empty($_GET['add'])) {
    $item_id = $_GET['add'];
    // Replace with your actual database query to get item details
    $item_name = "Sample Item";
    $price = 9.99;
    addToCart($item_id, $item_name, $price);
}
?>


$_GET['add'] = $item_id;


$_GET['remove'] = $item_id;


<?php
// Start the session
session_start();

// Initialize cart session variable if not exists
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = serialize(array());
}

// Function to add product to cart
function add_to_cart($product_id, $price) {
    global $pdo; // Assuming you have a PDO database connection

    // Check if product exists in the database
    $stmt = $pdo->prepare("SELECT * FROM products WHERE id = ?");
    $stmt->execute([$product_id]);
    $product = $stmt->fetch();

    if ($product) {
        // Unserialize the cart data
        $cart = unserialize($_SESSION['cart']);

        // Check if product is already in cart
        if (isset($cart[$product_id])) {
            // Increment quantity
            $cart[$product_id]['quantity']++;
        } else {
            // Add new product to cart
            $cart[$product_id] = array(
                'id' => $product_id,
                'name' => $product['name'],
                'price' => $price,
                'quantity' => 1
            );
        }

        // Serialize and save back to session
        $_SESSION['cart'] = serialize($cart);
    }
}

// Function to remove product from cart
function remove_from_cart($product_id) {
    // Unserialize the cart data
    $cart = unserialize($_SESSION['cart']);

    // Remove product from cart
    unset($cart[$product_id]);

    // Re-index array
    $cart = array_values($cart);

    // Serialize and save back to session
    $_SESSION['cart'] = serialize($cart);
}

// Function to update quantity of a product in cart
function update_quantity($product_id, $quantity) {
    // Unserialize the cart data
    $cart = unserialize($_SESSION['cart']);

    if (isset($cart[$product_id])) {
        $cart[$product_id]['quantity'] = max(1, $quantity); // Minimum quantity is 1
    }

    // Serialize and save back to session
    $_SESSION['cart'] = serialize($cart);
}

// Function to calculate total amount in cart
function calculate_total() {
    // Unserialize the cart data
    $cart = unserialize($_SESSION['cart']);
    $total = 0;

    foreach ($cart as $item) {
        $total += $item['price'] * $item['quantity'];
    }

    return $total;
}

// Function to display cart items
function display_cart_items() {
    // Unserialize the cart data
    $cart = unserialize($_SESSION['cart']);

    if (!empty($cart)) {
        echo "<table>";
        echo "<tr><th>Product</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>";

        foreach ($cart as $item) {
            echo "<tr>";
            echo "<td>" . $item['name'] . "</td>";
            echo "<td>$" . number_format($item['price'], 2) . "</td>";
            echo "<td><input type='number' value='" . $item['quantity'] . "' onChange='updateQuantity(" . $item['id'] . ", this.value)'></td>";
            echo "<td>$" . number_format(($item['price'] * $item['quantity']), 2) . "</td>";
            echo "<td><a href='remove_from_cart.php?id=" . $item['id'] . "'>Remove</a></td>";
            echo "</tr>";
        }

        echo "</table>";
    } else {
        echo "Your cart is empty!";
    }
}

// Function to destroy cart session
function destroy_cart_session() {
    // Unset all session variables
    $_SESSION = array();

    // Destroy the session cookie
    if (ini_get("session.use_cookies")) {
        $params = session_get_cookie_params();
        setcookie(session_name(), '', time() - 42000,
            $params["path"], $params["domain"],
            $params["secure"], $params["httponly"]);
    }

    // Finally, destroy the session
    session_destroy();
}
?>


// Add product to cart
add_to_cart(1, 99.99); // Product ID 1, price $99.99

// Display cart items
display_cart_items();

// Remove product from cart
remove_from_cart(1);

// Update quantity of a product
update_quantity(2, 3);

// Calculate total amount
$total = calculate_total();
echo "Total: $" . number_format($total, 2);

// Destroy session
destroy_cart_session();


session_start();


if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}


function addToCart($itemID, $quantity) {
    global $mysqli;
    
    // Check if product exists in database (replace with your actual query)
    $stmt = $mysqli->prepare("SELECT * FROM products WHERE id = ?");
    $stmt->bind_param('i', $itemID);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows > 0) {
        // Check if the item is already in the cart
        if (isset($_SESSION['cart'][$itemID])) {
            $_SESSION['cart'][$itemID] += $quantity;
        } else {
            $_SESSION['cart'][$itemID] = $quantity;
        }
        return true;
    }
    return false;
}


function displayCart() {
    echo "<h2>Your Shopping Cart</h2>";
    echo "<table border='1'>";
    echo "<tr><th>Item ID</th><th>Quantity</th></tr>";
    
    foreach ($_SESSION['cart'] as $itemID => $quantity) {
        echo "<tr><td>$itemID</td><td>$quantity</td></tr>";
    }
    
    echo "</table>";
}


function calculateTotalItems() {
    $total = 0;
    foreach ($_SESSION['cart'] as $itemID => $quantity) {
        $total += $quantity;
    }
    return $total;
}


function removeFromCart($itemID) {
    if (isset($_SESSION['cart'][$itemID])) {
        unset($_SESSION['cart'][$itemID]);
        return true;
    }
    return false;
}


function emptyCart() {
    $_SESSION['cart'] = array();
}


if ($_SERVER["REQUEST_METHOD"] == "POST") {
    if (isset($_POST['itemID']) && isset($_POST['quantity'])) {
        $itemID = intval($_POST['itemID']);
        $quantity = intval($_POST['quantity']);
        addToCart($itemID, $quantity);
    } elseif (isset($_POST['removeItem'])) {
        $itemID = intval($_POST['removeItem']);
        removeFromCart($itemID);
    } elseif (isset($_POST['emptyCart'])) {
        emptyCart();
    }
}


echo "<p>Total items: " . calculateTotalItems() . "</p>";


<?php
// Start the session
session_start();

// Initialize the cart if not exists
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function addToCart($item_id, $item_name, $price, $quantity) {
    global $db;
    
    // Check if the item is already in the cart
    if (isset($_SESSION['cart'][$item_id])) {
        $_SESSION['cart'][$item_id]['quantity'] += $quantity;
    } else {
        $_SESSION['cart'][$item_id] = array(
            'item_id' => $item_id,
            'item_name' => $item_name,
            'price' => $price,
            'quantity' => $quantity
        );
    }
}

// Function to remove item from cart
function removeFromCart($item_id) {
    if (isset($_SESSION['cart'][$item_id])) {
        unset($_SESSION['cart'][$item_id]);
        
        // Re-index the cart array after removal
        $_SESSION['cart'] = array_values($_SESSION['cart']);
    }
}

// Function to update item quantity in cart
function updateCartQuantity($item_id, $new_quantity) {
    if (isset($_SESSION['cart'][$item_id])) {
        $_SESSION['cart'][$item_id]['quantity'] = $new_quantity;
    }
}

// Function to display cart items
function displayCart() {
    if (!empty($_SESSION['cart'])) {
        echo "<table border='1'>";
        echo "<tr><th>Item Name</th><th>Price</th><th>Quantity</th><th>Total</th></tr>";
        
        $grand_total = 0;
        foreach ($_SESSION['cart'] as $item) {
            $total = $item['price'] * $item['quantity'];
            $grand_total += $total;
            
            echo "<tr>";
            echo "<td>{$item['item_name']}</td>";
            echo "<td>$$item[price]</td>";
            echo "<td><input type='number' name='quantity_{$item['item_id']}' value='{$item['quantity']}' min='1'></td>";
            echo "<td>$$total</td>";
            echo "</tr>";
        }
        
        echo "<tr><td colspan='3'>Grand Total:</td><td>$$grand_total</td></tr>";
        echo "</table>";
    } else {
        echo "Your cart is empty!";
    }
}

// Example usage:
addToCart(1, 'Product 1', 19.99, 2);
addToCart(2, 'Product 2', 29.99, 1);

// Display the cart
displayCart();

// Remove an item from the cart
removeFromCart(1);

// Update quantity of an item
updateCartQuantity(2, 3);

?>


<?php
// Start the session
session_start();

// Set up default cart session if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function add_to_cart($item_id, $name, $price) {
    global $db;
    
    // Check if item already exists in cart
    if (isset($_SESSION['cart'][$item_id])) {
        // Increment quantity by 1
        $_SESSION['cart'][$item_id]['quantity']++;
    } else {
        // Add new item to cart
        $_SESSION['cart'][$item_id] = array(
            'item_id' => $item_id,
            'name' => $name,
            'price' => $price,
            'quantity' => 1
        );
    }
}

// Function to remove item from cart
function remove_from_cart($item_id) {
    if (isset($_SESSION['cart'][$item_id])) {
        unset($_SESSION['cart'][$item_id]);
    }
}

// Function to update quantity of an item in cart
function update_quantity($item_id, $quantity) {
    if ($quantity < 1) {
        $quantity = 1;
    }
    
    if (isset($_SESSION['cart'][$item_id])) {
        $_SESSION['cart'][$item_id]['quantity'] = $quantity;
    }
}

// Function to display cart contents
function display_cart() {
    if (!empty($_SESSION['cart'])) {
        echo "<table border='1'>";
        echo "<tr><th>Item ID</th><th>Name</th><th>Price</th><th>Quantity</th><th>Action</th></tr>";
        
        foreach ($_SESSION['cart'] as $item) {
            echo "<tr>";
            echo "<td>" . $item['item_id'] . "</td>";
            echo "<td>" . $item['name'] . "</td>";
            echo "<td>Rs. " . number_format($item['price'], 2) . "</td>";
            echo "<td><input type='text' name='quantity_" . $item['item_id'] . "' value='" . $item['quantity'] . "' size='3'></td>";
            echo "<td><a href='cart.php?action=remove&item_id=" . $item['item_id'] . "'>Remove</a></td>";
            echo "</tr>";
        }
        
        // Add update button
        echo "<tr><td colspan='5'><button onclick='updateCart()'>Update Cart</button></td></tr>";
        
        // Calculate total price
        $total = 0;
        foreach ($_SESSION['cart'] as $item) {
            $total += ($item['price'] * $item['quantity']);
        }
        echo "<tr><td colspan='4'><strong>Total:</strong></td><td>Rs. " . number_format($total, 2) . "</td></tr>";
        
        echo "</table>";
    } else {
        echo "Your cart is empty!";
    }
}

// Handle actions
if (isset($_GET['action'])) {
    switch ($_GET['action']) {
        case 'add':
            if (isset($_GET['item_id'], $_GET['name'], $_GET['price'])) {
                add_to_cart($_GET['item_id'], $_GET['name'], $_GET['price']);
            }
            break;
            
        case 'remove':
            if (isset($_GET['item_id'])) {
                remove_from_cart($_GET['item_id']);
            }
            break;
    }
}

// Update cart quantities
if (isset($_POST['update'])) {
    foreach ($_POST as $key => $value) {
        if (strpos($key, 'quantity_') === 0) {
            $item_id = substr($key, strlen('quantity_'));
            update_quantity($item_id, $value);
        }
    }
}

// Display cart
display_cart();
?>


<?php
session_start();

// Initialize cart if not set
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

$cart = &$_SESSION['cart'];

function addToCart($id, $name, $price) {
    global $cart;

    foreach ($cart as &$item) {
        if ($item['id'] == $id) {
            $item['quantity']++;
            return;
        }
    }

    $cart[] = array(
        'id' => $id,
        'name' => $name,
        'price' => $price,
        'quantity' => 1
    );
}

function updateCart($id, $newQuantity) {
    global $cart;

    foreach ($cart as &$item) {
        if ($item['id'] == $id) {
            $item['quantity'] = $newQuantity;
            return;
        }
    }
}

function removeFromCart($id) {
    global $cart;

    $cart = array_filter($cart, function($item) use ($id) {
        return $item['id'] != $id;
    });
}

// Example usage
if (isset($_GET['action'])) {
    switch ($_GET['action']) {
        case 'add':
            addToCart(1, "Item 1", 10.99);
            break;
        case 'update':
            updateCart(1, 3);
            break;
        case 'remove':
            removeFromCart(1);
            break;
    }
}

// Display cart
echo "<h2>Your Cart</h2>";
if (empty($cart)) {
    echo "Your cart is empty.";
} else {
    $total = 0;
    foreach ($cart as $item) {
        $total += $item['price'] * $item['quantity'];
        echo "
            <div>
                Item ID: {$item['id']}<br>
                Name: {$item['name']}<br>
                Price: \${$item['price']}<br>
                Quantity: {$item['quantity']}
                [<a href='?action=update&id={$item['id']}'>Update</a>] 
                [<a href='?action=remove&id={$item['id']}'>Remove</a>]
            </div>
        ";
    }
    echo "<p>Total: \${$total}</p>";
}

// Update session
$_SESSION['cart'] = $cart;
?>


<?php
// Start the session
session_start();

// Set session save path and cookie parameters
ini_set('session.save_path', '/path/to/session/directory');
ini_set('session.cookie_httponly', 'On');
ini_set('session.cookie_secure', 1); // Forces cookies to be sent only over HTTPS

// Check if the cart exists in the session, initialize it if not
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to the cart
function add_to_cart($product_id, $name, $price, $quantity) {
    global $db;
    
    // Check if product is already in cart
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['id'] == $product_id) {
            // Increment quantity
            $item['quantity'] += $quantity;
            return true;
        }
    }
    
    // Add new item to the cart
    $_SESSION['cart'][] = array(
        'id' => $product_id,
        'name' => $name,
        'price' => $price,
        'quantity' => $quantity
    );
    return true;
}

// Function to remove item from the cart
function remove_from_cart($product_id) {
    foreach ($_SESSION['cart'] as $key => $item) {
        if ($item['id'] == $product_id) {
            unset($_SESSION['cart'][$key]);
            $_SESSION['cart'] = array_values($_SESSION['cart']); // Re-index the array
            return true;
        }
    }
    return false;
}

// Function to update quantity of an item in the cart
function update_quantity($product_id, $new_quantity) {
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['id'] == $product_id) {
            $item['quantity'] = $new_quantity;
            return true;
        }
    }
    return false;
}

// Function to get the total price of items in cart
function get_cart_total() {
    $total = 0.00;
    foreach ($_SESSION['cart'] as $item) {
        $total += ($item['price'] * $item['quantity']);
    }
    return number_format($total, 2);
}

// Example usage:
if (isset($_POST['add_to_cart'])) {
    // Get product details from database
    $product_id = $_POST['product_id'];
    $name = $_POST['name'];
    $price = $_POST['price'];
    $quantity = $_POST['quantity'];

    add_to_cart($product_id, $name, $price, $quantity);
}

if (isset($_GET['remove_item'])) {
    remove_from_cart($_GET['remove_item']);
}

if (isset($_POST['update_quantity'])) {
    update_quantity($_POST['product_id'], $_POST['new_quantity']);
}

// Display cart contents
echo "<h2>Shopping Cart</h2>";
echo "<table>";
echo "<tr><th>Product Name</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>";

foreach ($_SESSION['cart'] as $item) {
    echo "<tr>";
    echo "<td>".$item['name']."</td>";
    echo "<td>".$item['price']."</td>";
    echo "<td>".$item['quantity']."</td>";
    echo "<td>".number_format($item['price'] * $item['quantity'], 2)."</td>";
    echo "<td><a href='cart.php?remove_item=".$item['id']."'>Remove</a></td>";
    echo "</tr>";
}
echo "</table>";
echo "<h3>Total: ".get_cart_total()."</h3>";

// Optional: Destroy the session when done
// $_SESSION = array();
// if (ini_get("session.use_cookies")) {
//     $params = session_get_cookie_params();
//     setcookie(session_name(), '', time() - 42000, $params["path"], $params["domain"], $params["secure"], $params["httponly"]);
// }
// session_destroy();

?>


<?php
session_start();

// Initialize cart if not set
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function add_to_cart($item_id, $quantity) {
    global $connection;
    $item_id = mysqli_real_escape_string($connection, $item_id);
    
    if (isset($_SESSION['cart'][$item_id])) {
        // Update quantity
        $_SESSION['cart'][$item_id]['quantity'] += $quantity;
    } else {
        // Get item details from database
        $query = "SELECT * FROM products WHERE id = '$item_id'";
        $result = mysqli_query($connection, $query);
        
        if (mysqli_num_rows($result) > 0) {
            $item = mysqli_fetch_assoc($result);
            $_SESSION['cart'][$item_id] = array(
                'id' => $item['id'],
                'name' => $item['name'],
                'price' => $item['price'],
                'quantity' => $quantity
            );
        }
    }
}

// Function to remove item from cart
function remove_from_cart($item_id) {
    if (isset($_SESSION['cart'][$item_id])) {
        unset($_SESSION['cart'][$item_id]);
        // Re-index the array if needed
        $_SESSION['cart'] = array_values($_SESSION['cart']);
    }
}

// Function to update item quantity in cart
function update_cart($item_id, $new_quantity) {
    if (isset($_SESSION['cart'][$item_id])) {
        $_SESSION['cart'][$item_id]['quantity'] = $new_quantity;
    }
}

// Function to display cart contents
function display_cart() {
    $total = 0;
    
    echo "<table>";
    echo "<tr><th>Product</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>";
    
    foreach ($_SESSION['cart'] as $item) {
        $subtotal = $item['price'] * $item['quantity'];
        $total += $subtotal;
        
        echo "<tr>";
        echo "<td>" . $item['name'] . "</td>";
        echo "<td>$" . number_format($item['price'], 2) . "</td>";
        echo "<td><input type='number' name='quantity[" . $item['id'] . "]' value='" . $item['quantity'] . "' min='1'></td>";
        echo "<td>$" . number_format($subtotal, 2) . "</td>";
        echo "<td><a href='cart.php?action=remove&id=" . $item['id'] . "'>Remove</a></td>";
        echo "</tr>";
    }
    
    echo "<tr><td colspan='4'><strong>Grand Total:</strong></td><td>$" . number_format($total, 2) . "</td></tr>";
    echo "</table>";
}

// Handle actions
if (isset($_GET['action'])) {
    if ($_GET['action'] == 'add' && isset($_GET['id']) && isset($_GET['quantity'])) {
        add_to_cart($_GET['id'], $_GET['quantity']);
    } elseif ($_GET['action'] == 'remove' && isset($_GET['id'])) {
        remove_from_cart($_GET['id']);
    }
}

// Update quantities if form submitted
if (isset($_POST['update'])) {
    foreach ($_POST['quantity'] as $item_id => $qty) {
        update_cart($item_id, $qty);
    }
}
?>


<?php
session_start();

// Initialize cart if not set
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add item to cart
if (isset($_POST['add_to_cart'])) {
    $productId = $_POST['product_id'];
    
    // Retrieve product details from database or array
    $products = array(
        1 => array('name' => 'Product 1', 'price' => 19.99),
        2 => array('name' => 'Product 2', 'price' => 29.99),
        3 => array('name' => 'Product 3', 'price' => 39.99)
    );
    
    $product = $products[$productId];
    
    // Check if product is already in cart
    if (isset($_SESSION['cart'][$productId])) {
        $_SESSION['cart'][$productId]['quantity']++;
    } else {
        $_SESSION['cart'][$productId] = array(
            'name' => $product['name'],
            'price' => $product['price'],
            'quantity' => 1
        );
    }
}

// Remove item from cart
if (isset($_POST['remove_from_cart'])) {
    $productId = $_POST['product_id'];
    
    if (isset($_SESSION['cart'][$productId])) {
        unset($_SESSION['cart'][$productId]);
        
        // Redirect back to cart page
        header('Location: cart.php');
        exit;
    }
}

// Display cart contents
echo "<h2>Your Cart</h2>";
echo "<form method='post'>";
echo "<table border='1'>";
echo "<tr><th>Product</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>";

foreach ($_SESSION['cart'] as $productId => $item) {
    echo "<tr>";
    echo "<td>" . $item['name'] . "</td>";
    echo "<td>$" . number_format($item['price'], 2) . "</td>";
    echo "<td>" . $item['quantity'] . "</td>";
    echo "<td>$" . number_format($item['price'] * $item['quantity'], 2) . "</td>";
    echo "<td><button type='submit' name='remove_from_cart' value='$productId'>Remove</button></td>";
    echo "</tr>";
}

echo "</table>";
echo "</form>";

// Display total price
$total = 0;
foreach ($_SESSION['cart'] as $item) {
    $total += $item['price'] * $item['quantity'];
}
echo "<h3>Total: $" . number_format($total, 2) . "</h3>";

// Add links to add more products or checkout
echo "<a href='products.php'>Add More Products</a><br>";
echo "<a href='checkout.php'>Proceed to Checkout</a>";
?>


<?php
// Start the session
session_start();

// Check if the cart exists in the session, initialize it if not
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add item to cart
function addToCart($item_id, $quantity) {
    global $pdo; // Assuming you have a database connection

    // Check if item exists in the database
    $stmt = $pdo->prepare("SELECT * FROM products WHERE id = ?");
    $stmt->execute([$item_id]);
    $product = $stmt->fetch();

    if ($product) {
        // Check if item is already in cart
        if (isset($_SESSION['cart'][$item_id])) {
            $_SESSION['cart'][$item_id]['quantity'] += $quantity;
        } else {
            $_SESSION['cart'][$item_id] = array(
                'id' => $item_id,
                'name' => $product['name'],
                'price' => $product['price'],
                'quantity' => $quantity
            );
        }
    }
}

// Display cart contents
function displayCart() {
    if (empty($_SESSION['cart'])) {
        echo "Your cart is empty.";
    } else {
        foreach ($_SESSION['cart'] as $item) {
            echo "<div>";
            echo "<h3>{$item['name']}</h3>";
            echo "<p>Price: \${$item['price']}</p>";
            echo "<p>Quantity: {$item['quantity']}</p>";
            echo "<a href='remove_from_cart.php?id={$item['id']}'>Remove</a>";
            echo "</div>";
        }
    }
}

// Remove item from cart
function removeFromCart($item_id) {
    if (isset($_SESSION['cart'][$item_id])) {
        unset($_SESSION['cart'][$item_id]);
        // Re-index the array to avoid gaps in keys
        $_SESSION['cart'] = array_values($_SESSION['cart']);
    }
}

// Calculate total price of items in cart
function calculateTotal() {
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += ($item['price'] * $item['quantity']);
    }
    return $total;
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <h1>Your Shopping Cart</h1>
    
    <?php displayCart(); ?>
    
    <p>Total: <?php echo calculateTotal(); ?></p>

    <!-- Example form to add items -->
    <form action="add_to_cart.php" method="get">
        Item ID: <input type="text" name="item_id"><br>
        Quantity: <input type="number" name="quantity" value="1"><br>
        <button type="submit">Add to Cart</button>
    </form>
    
    <?php
    // Example of adding an item
    if (isset($_GET['item_id']) && isset($_GET['quantity'])) {
        addToCart($_GET['item_id'], $_GET['quantity']);
    }
    ?>
</body>
</html>


<?php
session_start();
?>


class ShoppingCart {
    private $cart;

    public function __construct() {
        // Initialize the cart from session if it exists
        if (isset($_SESSION['cart'])) {
            $this->cart = $_SESSION['cart'];
        } else {
            $this->cart = array();
        }
    }

    // Add item to cart
    public function add_item($item) {
        // Check if the item already exists in the cart
        foreach ($this->cart as $key => $product) {
            if ($product['id'] == $item['id']) {
                // If it exists, increment the quantity
                $this->cart[$key]['quantity'] += $item['quantity'];
                return;
            }
        }

        // If not found, add new item to cart
        $this->cart[] = array(
            'id' => $item['id'],
            'name' => $item['name'],
            'price' => $item['price'],
            'quantity' => $item['quantity']
        );
    }

    // Update quantity of an item in the cart
    public function update_quantity($product_id, $new_quantity) {
        foreach ($this->cart as $key => $product) {
            if ($product['id'] == $product_id) {
                $this->cart[$key]['quantity'] = $new_quantity;
                return;
            }
        }
    }

    // Remove item from cart
    public function remove_item($product_id) {
        foreach ($this->cart as $key => $product) {
            if ($product['id'] == $product_id) {
                unset($this->cart[$key]);
                break;
            }
        }
        // Re-index the array after unsetting an element
        $this->cart = array_values($this->cart);
    }

    // Get all items in cart
    public function get_cart() {
        return $this->cart;
    }

    // Calculate total price of items in the cart
    public function calculate_total() {
        $total = 0.00;
        foreach ($this->cart as $product) {
            $total += ($product['price'] * $product['quantity']);
        }
        return $total;
    }

    // Save cart to session
    public function save_to_session() {
        $_SESSION['cart'] = $this->cart;
    }
}


// Start a new shopping cart or load existing one from session
$cart = new ShoppingCart();

// Add items to the cart
$item1 = array(
    'id' => 1,
    'name' => 'Laptop',
    'price' => 999.99,
    'quantity' => 1
);

$item2 = array(
    'id' => 2,
    'name' => 'Phone',
    'price' => 499.99,
    'quantity' => 2
);

$cart->add_item($item1);
$cart->add_item($item2);
$cart->save_to_session();

// Update quantity of an item in the cart
$cart->update_quantity(1, 2); // Change laptop quantity to 2
$cart->save_to_session();

// Remove an item from the cart
$cart->remove_item(2); // Remove phone from cart
$cart->save_to_session();

// Get all items in the cart
$items = $cart->get_cart();
print_r($items);

// Calculate total price of items in the cart
$total_price = $cart->calculate_total();
echo "Total Price: $" . number_format($total_price, 2);


<?php
session_start();

// Function to add item to cart
function addToCart($productId, $productName, $price) {
    // Check if cart exists in session, initialize if not
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }
    
    // Check if item is already in cart
    $itemExists = false;
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['product_id'] == $productId) {
            $item['quantity']++;
            $itemExists = true;
            break;
        }
    }
    
    // Add new item if it doesn't exist
    if (!$itemExists) {
        $_SESSION['cart'][] = array(
            'product_id' => $productId,
            'product_name' => $productName,
            'price' => $price,
            'quantity' => 1
        );
    }
}

// Function to update quantity of an item
function updateQuantity($productId, $newQuantity) {
    if (isset($_SESSION['cart'])) {
        foreach ($_SESSION['cart'] as &$item) {
            if ($item['product_id'] == $productId) {
                $item['quantity'] = $newQuantity;
                break;
            }
        }
    }
}

// Function to remove item from cart
function removeFromCart($productId) {
    if (isset($_SESSION['cart'])) {
        foreach ($_SESSION['cart'] as $key => $item) {
            if ($item['product_id'] == $productId) {
                unset($_SESSION['cart'][$key]);
                // Re-index the array
                $_SESSION['cart'] = array_values($_SESSION['cart']);
                break;
            }
        }
    }
}

// Function to display cart contents
function displayCart() {
    if (isset($_SESSION['cart']) && !empty($_SESSION['cart'])) {
        echo "<h2>Your Cart</h2>";
        $totalPrice = 0;
        foreach ($_SESSION['cart'] as $item) {
            echo "<div>";
            echo "Product: " . $item['product_name'] . "<br />";
            echo "Quantity: " . $item['quantity'] . "<br />";
            echo "Price: $" . number_format($item['price'], 2) . "<br />";
            $totalPrice += ($item['price'] * $item['quantity']);
            echo "</div>";
        }
        echo "<h3>Total Price: $" . number_format($totalPrice, 2) . "</h3>";
    } else {
        echo "Your cart is empty.";
    }
}
?>

<!-- Example usage -->
<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <?php
    // Add item to cart
    if (isset($_GET['action']) && $_GET['action'] == 'add') {
        $productId = 1;
        $productName = "Sample Product";
        $price = 29.99;
        addToCart($productId, $productName, $price);
    }
    
    // Update quantity
    if (isset($_GET['action']) && $_GET['action'] == 'update') {
        $productId = 1;
        $newQuantity = 3;
        updateQuantity($productId, $newQuantity);
    }
    
    // Remove item from cart
    if (isset($_GET['action']) && $_GET['action'] == 'remove') {
        $productId = 1;
        removeFromCart($productId);
    }
    
    // Display cart contents
    displayCart();
    ?>
</body>
</html>


<?php
session_start();

// Initialize cart session if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function addToCart($productId, $productName, $productPrice) {
    global $db; // Assuming you have a database connection

    // Check if product exists in database (you should implement this)
    $checkProductQuery = "SELECT * FROM products WHERE id = ?";
    $stmt = $db->prepare($checkProductQuery);
    $stmt->execute([$productId]);
    
    if ($stmt->rowCount() > 0) {
        // Check if item already exists in cart
        foreach ($_SESSION['cart'] as &$item) {
            if ($item['product_id'] == $productId) {
                // Update quantity and total price
                $item['quantity']++;
                $item['total_price'] = $item['price'] * $item['quantity'];
                return;
            }
        }

        // Add new item to cart
        $_SESSION['cart'][] = array(
            'product_id' => $productId,
            'product_name' => $productName,
            'price' => $productPrice,
            'quantity' => 1,
            'total_price' => $productPrice
        );
    }
}

// Function to display cart
function displayCart() {
    $cartOutput = '<h2>Shopping Cart</h2>';
    if (empty($_SESSION['cart'])) {
        $cartOutput .= '<p>Your cart is empty.</p>';
    } else {
        $cartOutput .= '<ul>';
        foreach ($_SESSION['cart'] as $item) {
            $cartOutput .= "<li>{$item['product_name']} - $" . number_format($item['price'], 2) .
                          " x {$item['quantity']} = $" . number_format($item['total_price'], 2) .
                          "</li>";
        }
        $cartOutput .= '</ul>';
        
        // Calculate total price
        $totalPrice = array_sum(array_column($_SESSION['cart'], 'total_price'));
        $cartOutput .= '<p>Total: $' . number_format($totalPrice, 2) . '</p>';
    }
    
    return $cartOutput;
}

// Function to remove item from cart
function removeFromCart($productId) {
    foreach ($_SESSION['cart'] as $key => &$item) {
        if ($item['product_id'] == $productId) {
            unset($_SESSION['cart'][$key]);
            break;
        }
    }
    
    // Reindex the array keys after removal
    $_SESSION['cart'] = array_values($_SESSION['cart']);
}

// Function to clear cart
function clearCart() {
    $_SESSION['cart'] = array();
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Shopping Cart</title>
</head>
<body>
    <!-- Add items to cart -->
    <?php
    // Example usage:
    if (isset($_GET['action'])) {
        switch ($_GET['action']) {
            case 'add':
                addToCart(1, "Laptop", 999.99);
                break;
            case 'remove':
                removeFromCart(1);
                break;
            case 'clear':
                clearCart();
                break;
        }
    }
    
    echo displayCart();
    ?>

    <!-- Links to test cart functionality -->
    <a href="?action=add">Add Item</a> |
    <a href="?action=remove">Remove Item</a> |
    <a href="?action=clear">Clear Cart</a>
</body>
</html>


<?php
// Start the session
session_start();

// Initialize cart if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function addToCart($id, $name, $price) {
    global $mysqli;
    
    // Check if product is already in the cart
    if (isset($_SESSION['cart'][$id])) {
        // Increment quantity
        $_SESSION['cart'][$id]['quantity']++;
    } else {
        // Add new product to cart
        $_SESSION['cart'][$id] = array(
            'id' => $id,
            'name' => $name,
            'price' => $price,
            'quantity' => 1
        );
    }
}

// Function to remove item from cart
function removeFromCart($id) {
    if (isset($_SESSION['cart'][$id])) {
        unset($_SESSION['cart'][$id]);
    }
}

// Function to update quantity of an item in cart
function updateQuantity($id, $quantity) {
    if (isset($_SESSION['cart'][$id]) && is_numeric($quantity) && $quantity >= 1) {
        $_SESSION['cart'][$id]['quantity'] = $quantity;
    }
}

// Function to display cart contents
function displayCart() {
    if (!empty($_SESSION['cart'])) {
        echo "<table border='1'>";
        echo "<tr><th>Product</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>";
        
        $total = 0;
        
        foreach ($_SESSION['cart'] as $item) {
            $productTotal = $item['price'] * $item['quantity'];
            $total += $productTotal;
            
            echo "<tr>";
            echo "<td>" . $item['name'] . "</td>";
            echo "<td>₹" . number_format($item['price'], 2) . "</td>";
            echo "<td><input type='number' value='" . $item['quantity'] . "' onChange='updateQuantity(" . $item['id'] . ", this.value)'></td>";
            echo "<td>₹" . number_format($productTotal, 2) . "</td>";
            echo "<td><button onclick='removeFromCart(" . $item['id'] . ")'>Remove</button></td>";
            echo "</tr>";
        }
        
        echo "<tr><td colspan='3'><strong>Total:</strong></td><td>₹" . number_format($total, 2) . "</td><td></td></tr>";
        echo "</table>";
    } else {
        echo "Your cart is empty!";
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
    <script>
        function addToCart(id, name, price) {
            // Make an AJAX call to add item to cart
            var xhttp = new XMLHttpRequest();
            xhttp.onreadystatechange = function() {
                if (this.readyState == 4 && this.status == 200) {
                    location.reload(); // Refresh the page to update cart display
                }
            };
            xhttp.open("GET", "add_to_cart.php?id=" + id, true);
            xhttp.send();
        }

        function removeFromCart(id) {
            var xhttp = new XMLHttpRequest();
            xhttp.onreadystatechange = function() {
                if (this.readyState == 4 && this.status == 200) {
                    location.reload();
                }
            };
            xhttp.open("GET", "remove_from_cart.php?id=" + id, true);
            xhttp.send();
        }

        function updateQuantity(id, quantity) {
            var xhttp = new XMLHttpRequest();
            xhttp.onreadystatechange = function() {
                if (this.readyState == 4 && this.status == 200) {
                    location.reload();
                }
            };
            xhttp.open("GET", "update_quantity.php?id=" + id + "&quantity=" + quantity, true);
            xhttp.send();
        }
    </script>
</head>
<body>
    <?php
    // Example usage:
    
    // Add item to cart
    if (isset($_GET['action']) && $_GET['action'] == 'add') {
        $id = intval($_GET['id']);
        $name = "Product " . $id;
        $price = 9.99 * $id;
        
        addToCart($id, $name, $price);
    }
    
    // Display cart
    displayCart();
    ?>

    <h2>Add Products to Cart</h2>
    <?php for ($i = 1; $i <= 5; $i++) { ?>
        <div style="margin: 10px;">
            <p>Product <?php echo $i; ?> - Price: ₹<?php echo number_format(9.99 * $i, 2); ?></p>
            <button onclick="addToCart(<?php echo $i; ?>, 'Product <?php echo $i; ?>', <?php echo 9.99 * $i; ?>)">
                Add to Cart
            </button>
        </div>
    <?php } ?>
</body>
</html>


<?php
session_start();
?>


<?php
session_start();

// Check if the product ID is provided
if (isset($_GET['product_id'])) {
    $productId = $_GET['product_id'];
    
    // Initialize cart if it doesn't exist
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }
    
    // Add or update item quantity in the cart
    if (array_key_exists($productId, $_SESSION['cart'])) {
        $_SESSION['cart'][$productId]['quantity']++;
    } else {
        // Assume you have a function to get product details by ID
        $productDetails = getProductDetails($productId);
        
        if (!empty($productDetails)) {
            $_SESSION['cart'][$productId] = array(
                'name' => $productDetails['name'],
                'price' => $productDetails['price'],
                'quantity' => 1
            );
            echo "Product added to cart successfully!";
        } else {
            die("Product not found.");
        }
    }
} else {
    die("No product selected.");
}

// Redirect back to the previous page
header("Location: " . $_SERVER['HTTP_REFERER']);
exit();
?>


<?php
session_start();

if (!isset($_SESSION['cart']) || empty($_SESSION['cart'])) {
    echo "Your cart is empty!";
} else {
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $subtotal = $item['price'] * $item['quantity'];
        $total += $subtotal;
?>
<tr>
    <td><?php echo $item['name']; ?></td>
    <td><?php echo $item['price']; ?></td>
    <td><input type="number" name="quantity[<?php echo $item['id']; ?>]" min="1" value="<?php echo $item['quantity']; ?>"></td>
    <td><?php echo $subtotal; ?></td>
    <td><a href="remove_cart.php?product_id=<?php echo $item['id']; ?>">Remove</a></td>
</tr>
<?php
    }
?>
<tr>
    <td colspan="4"><strong>Total:</strong></td>
    <td><?php echo $total; ?></td>
</table>
<?php
}
?>


<?php
session_start();

if (isset($_POST['quantity'])) {
    foreach ($_POST['quantity'] as $productId => $quantity) {
        if ($quantity < 1) {
            die("Quantity must be at least 1.");
        }
        
        if (isset($_SESSION['cart'][$productId])) {
            $_SESSION['cart'][$productId]['quantity'] = $quantity;
        }
    }
}

header("Location: view_cart.php");
exit();
?>


<?php
session_start();

if (isset($_GET['product_id'])) {
    $productId = $_GET['product_id'];
    
    if (isset($_SESSION['cart'][$productId])) {
        unset($_SESSION['cart'][$productId]);
    }
}

header("Location: view_cart.php");
exit();
?>


<?php
session_start();

if (isset($_SESSION['cart']) && !empty($_SESSION['cart'])) {
    // Here, you would typically connect to your database and insert order details
    // For this example, we'll just show a confirmation message
    echo "Thank you for your order!<br>";
    print_r($_SESSION['cart']);
    
    // Clear the cart after checkout
    unset($_SESSION['cart']);
} else {
    die("Your cart is empty.");
}
?>


<?php
session_start();
?>


if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}


$product_id = 1; // Get from your database or form submission
$product_name = "Product Name";
$price = 99.99;

if (isset($_SESSION['cart'][$product_id])) {
    // Increment quantity if product already exists in cart
    $_SESSION['cart'][$product_id]['quantity']++;
} else {
    // Add new product to cart
    $_SESSION['cart'][$product_id] = array(
        'name' => $product_name,
        'price' => $price,
        'quantity' => 1
    );
}


echo "<h2>Your Shopping Cart</h2>";
if (empty($_SESSION['cart'])) {
    echo "Your cart is empty.";
} else {
    foreach ($_SESSION['cart'] as $item) {
        echo "Product: " . $item['name'] . "<br />";
        echo "Price: $" . $item['price'] . "<br />";
        echo "Quantity: " . $item['quantity'] . "<br />";
        echo "<hr />";
    }
}


if (isset($_GET['remove'])) {
    $product_id = $_GET['remove'];
    if (isset($_SESSION['cart'][$product_id])) {
        unset($_SESSION['cart'][$product_id]);
    }
}


<?php
session_start();

// Initialize cart if not exists
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add product to cart (example)
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $product_id = 1; // Replace with actual product ID from your database or form
    $product_name = "Sample Product";
    $price = 99.99;

    if (!isset($_SESSION['cart'][$product_id])) {
        $_SESSION['cart'][$product_id] = array(
            'name' => $product_name,
            'price' => $price,
            'quantity' => 1
        );
    } else {
        $_SESSION['cart'][$product_id]['quantity']++;
    }
}

// Remove product from cart (example)
if (isset($_GET['remove'])) {
    $product_id = $_GET['remove'];
    unset($_SESSION['cart'][$product_id]);
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart Example</title>
</head>
<body>
    <h2>Add Product to Cart</h2>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <input type="hidden" name="product_id" value="1">
        <input type="submit" name="add_to_cart" value="Add to Cart">
    </form>

    <?php
    // Display cart contents
    if (empty($_SESSION['cart'])) {
        echo "<h3>Your cart is empty.</h3>";
    } else {
        foreach ($_SESSION['cart'] as $product_id => $item) {
            echo "<div style='border: 1px solid #ccc; padding: 10px; margin-bottom: 10px;'>";
            echo "Product: " . $item['name'] . "<br />";
            echo "Price: $" . number_format($item['price'], 2) . "<br />";
            echo "Quantity: " . $item['quantity'] . "<br />";
            echo "<a href='?remove=$product_id'>Remove</a>";
            echo "</div>";
        }
    }
    ?>
</body>
</html>


<?php
// Start the session
session_start();

// Function to add items to the cart
function addToCart($productId, $productName, $productPrice) {
    // Check if the product is already in the cart
    $isProductInCart = false;
    
    if (isset($_SESSION['cart'])) {
        foreach ($_SESSION['cart'] as $item) {
            if ($item['productId'] == $productId) {
                $isProductInCart = true;
                break;
            }
        }
    }

    // If product is not in cart, add it
    if (!$isProductInCart) {
        $_SESSION['cart'][] = array(
            'productId' => $productId,
            'productName' => $productName,
            'productPrice' => $productPrice,
            'quantity' => 1
        );
    } else {
        // If product is already in cart, increment quantity
        foreach ($_SESSION['cart'] as &$item) {
            if ($item['productId'] == $productId) {
                $item['quantity']++;
                break;
            }
        }
    }
}

// Function to remove an item from the cart
function removeFromCart($productId) {
    if (isset($_SESSION['cart'])) {
        foreach ($_SESSION['cart'] as $key => $item) {
            if ($item['productId'] == $productId) {
                unset($_SESSION['cart'][$key]);
                break;
            }
        }
        // Reset array keys
        $_SESSION['cart'] = array_values($_SESSION['cart']);
    }
}

// Function to empty the cart
function emptyCart() {
    $_SESSION['cart'] = array();
}

// Function to display cart items
function displayCart() {
    if (isset($_SESSION['cart']) && count($_SESSION['cart']) > 0) {
        echo "<h2>Shopping Cart</h2>";
        echo "<table>";
        foreach ($_SESSION['cart'] as $item) {
            echo "<tr>";
            echo "<td>" . $item['productName'] . "</td>";
            echo "<td>" . $item['productPrice'] . "</td>";
            echo "<td>" . $item['quantity'] . "</td>";
            echo "<td><a href='remove.php?id=" . $item['productId'] . "'>Remove</a></td>";
            echo "</tr>";
        }
        echo "</table>";
    } else {
        echo "<p>Your cart is empty.</p>";
    }
}

// Function to calculate total price
function calculateTotal() {
    $total = 0;
    if (isset($_SESSION['cart'])) {
        foreach ($_SESSION['cart'] as $item) {
            $total += ($item['productPrice'] * $item['quantity']);
        }
    }
    return $total;
}
?>


<?php
session_start();

// Add a product to the cart
addToCart(1, 'Product 1', 29.99);

// Display cart contents
displayCart();

// Calculate and display total
echo "Total: $" . calculateTotal();

// Remove an item from the cart
removeFromCart(1);

// Empty the entire cart
emptyCart();
?>


<?php
// Start the session
session_start();

// Check if cart exists in session, initialize if not
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function addToCart($item_id, $quantity) {
    global $db;
    
    // Check if the item is already in the cart
    if (isset($_SESSION['cart'][$item_id])) {
        // Update quantity
        $_SESSION['cart'][$item_id]['quantity'] += $quantity;
    } else {
        // Add new item to cart
        // Here, you should fetch the item details from your database
        $result = $db->query("SELECT * FROM products WHERE id = $item_id");
        if ($result && $row = $result->fetch_assoc()) {
            $_SESSION['cart'][$item_id] = array(
                'id' => $row['id'],
                'name' => $row['name'],
                'price' => $row['price'],
                'quantity' => $quantity
            );
        }
    }
}

// Function to remove item from cart
function removeFromCart($item_id) {
    if (isset($_SESSION['cart'][$item_id])) {
        unset($_SESSION['cart'][$item_id]);
    }
}

// Function to update quantity of an item in cart
function updateQuantity($item_id, $quantity) {
    if (isset($_SESSION['cart'][$item_id]) && $quantity > 0) {
        $_SESSION['cart'][$item_id]['quantity'] = $quantity;
    }
}

// Function to get all items in the cart
function getCartItems() {
    return $_SESSION['cart'];
}

// Function to get total number of items in cart
function getTotalItems() {
    return count($_SESSION['cart']);
}

// Function to clear the entire cart
function clearCart() {
    $_SESSION['cart'] = array();
}

// Example usage:
if (isset($_POST['action'])) {
    switch ($_POST['action']) {
        case 'add':
            addToCart($_POST['item_id'], $_POST['quantity']);
            break;
        case 'remove':
            removeFromCart($_POST['item_id']);
            break;
        case 'update':
            updateQuantity($_POST['item_id'], $_POST['quantity']);
            break;
        case 'clear':
            clearCart();
            break;
    }
}

// Display cart items
$cartItems = getCartItems();
foreach ($cartItems as $item) {
    echo "Item ID: " . $item['id'] . "<br />";
    echo "Name: " . $item['name'] . "<br />";
    echo "Price: $" . number_format($item['price'], 2) . "<br />";
    echo "Quantity: " . $item['quantity'] . "<br />";
    echo "Total: $" . number_format($item['price'] * $item['quantity'], 2) . "<br /><hr />";
}

// Display total items in cart
echo "Total Items: " . getTotalItems();
?>


<?php
session_start();

// Initialize cart if not set
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add item to cart
if (isset($_POST['add_to_cart'])) {
    $product_id = intval($_POST['product_id']);
    $product_name = $_POST['product_name'];
    $price = floatval($_POST['price']);

    // Create an array for the new item
    $item = array(
        'id' => $product_id,
        'name' => $product_name,
        'quantity' => 1,
        'price' => $price
    );

    // Add the item to the cart
    $_SESSION['cart'][$product_id] = $item;
}

// Update cart quantities
if (isset($_POST['update_cart'])) {
    foreach ($_POST as $key => $value) {
        if (strpos($key, 'quantity_') !== false) {
            $product_id = str_replace('quantity_', '', $key);
            $quantity = intval($value);

            // Ensure quantity is not negative
            if ($quantity >= 0) {
                $_SESSION['cart'][$product_id]['quantity'] = $quantity;
            }
        }
    }
}

// Remove item from cart
if (isset($_POST['remove_item'])) {
    $product_id = intval($_POST['product_id']);
    
    // Unset the item from the cart
    unset($_SESSION['cart'][$product_id]);
}

// Displaying the cart items
echo "<h2>Shopping Cart</h2>";
echo "<form method='post'>";
echo "<table border='1'>";
echo "<tr><th>Product Name</th><th>Price</th><th>Quantity</th><th>Action</th></tr>";

foreach ($_SESSION['cart'] as $item) {
    echo "<tr>";
    echo "<td>" . $item['name'] . "</td>";
    echo "<td>£" . number_format($item['price'], 2) . "</td>";
    echo "<td><input type='text' name='quantity_" . $item['id'] . "' value='" . $item['quantity'] . "' size='3'></td>";
    echo "<td><button type='submit' name='remove_item' onclick=\"return confirm('Are you sure to remove this item?');\">Remove</button></td>";
    echo "</tr>";
}

echo "</table>";

// Update button
echo "<p><input type='hidden' name='update_cart'><button type='submit'>Update Cart</button></p>";

// Proceed to checkout button
echo "<p><button type='button'><a href='checkout.php'>Proceed to Checkout</a></button></p>";
echo "</form>";
?>

<!-- Add item form -->
<form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
    <input type="hidden" name="product_id" value="<?php echo $product_id; ?>">
    <input type="hidden" name="product_name" value="<?php echo $product_name; ?>">
    <input type="hidden" name="price" value="<?php echo $price; ?>">
    <button type="submit" name="add_to_cart">Add to Cart</button>
</form>


<?php
session_start();

// Initialize cart if not set
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

function add_item_to_cart($productId, $name, $price, $quantity) {
    global $productId, $name, $price, $quantity;

    // Check if product already exists in the cart
    foreach ($_SESSION['cart'] as $index => $item) {
        if ($item['product_id'] == $productId) {
            $_SESSION['cart'][$index]['quantity'] += $quantity;
            return;
        }
    }

    // Add new item to the cart
    array_push($_SESSION['cart'], array(
        'product_id' => $productId,
        'name' => $name,
        'price' => $price,
        'quantity' => $quantity
    ));
}

function remove_item_from_cart($productId) {
    global $productId;

    foreach ($_SESSION['cart'] as $index => $item) {
        if ($item['product_id'] == $productId) {
            unset($_SESSION['cart'][$index]);
            $_SESSION['cart'] = array_values($_SESSION['cart']); // Re-index the array
            return;
        }
    }
}

// Example usage:
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    if (isset($_POST['action'])) {
        $action = $_POST['action'];
        switch ($action) {
            case 'add':
                add_item_to_cart(
                    $_POST['product_id'],
                    $_POST['name'],
                    $_POST['price'],
                    $_POST['quantity']
                );
                break;
            case 'remove':
                remove_item_from_cart($_POST['product_id']);
                break;
        }
    }
}

// Display the cart
echo "<h2>Your Cart</h2>";
$total = 0;

if (empty($_SESSION['cart'])) {
    echo "Your cart is empty.";
} else {
    foreach ($_SESSION['cart'] as $item) {
        $total += $item['price'] * $item['quantity'];
        echo "Product: " . $item['name'] . "<br />";
        echo "Price: $" . number_format($item['price'], 2) . "<br />";
        echo "Quantity: " . $item['quantity'] . "<br />";
        echo "Total for this item: $" . number_format($item['price'] * $item['quantity'], 2) . "<br /><br />";
    }
}

echo "Total Price: $" . number_format($total, 2);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <h1>Welcome to Our Store</h1>
    
    <!-- Add Item Form -->
    <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
        <input type="hidden" name="action" value="add">
        Product ID: <input type="text" name="product_id"><br>
        Name: <input type="text" name="name"><br>
        Price: <input type="number" step="0.01" name="price"><br>
        Quantity: <input type="number" min="1" name="quantity"><br>
        <input type="submit" value="Add to Cart">
    </form>

    <!-- Remove Item Form -->
    <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
        <input type="hidden" name="action" value="remove">
        Product ID to remove: <input type="text" name="product_id"><br>
        <input type="submit" value="Remove from Cart">
    </form>
</body>
</html>


<?php
session_start();
?>


<?php
session_start();

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $item_id = $_POST['item_id'];
    $item_name = $_POST['item_name'];
    $price = $_POST['price'];
    $quantity = $_POST['quantity'];

    // Initialize cart if not set
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }

    $cart = $_SESSION['cart'];

    // Check if item is already in the cart
    $item_in_cart = false;
    foreach ($cart as &$item) {
        if ($item['id'] == $item_id) {
            $item['quantity'] += $quantity;
            $item_in_cart = true;
            break;
        }
    }

    // If not found, add the new item
    if (!$item_in_cart) {
        $cart[] = array(
            'id' => $item_id,
            'name' => $item_name,
            'price' => $price,
            'quantity' => $quantity
        );
    }

    $_SESSION['cart'] = $cart;

    // Redirect back to the product page
    header("Location: product.php");
    exit();
}
?>


<?php
session_start();

if (isset($_SESSION['cart']) && !empty($_SESSION['cart'])) {
    $total = 0;
    echo "<h1>Shopping Cart</h1>";
    foreach ($_SESSION['cart'] as $item) {
        echo "<div>";
        echo "Item ID: " . $item['id'] . "<br>";
        echo "Name: " . $item['name'] . "<br>";
        echo "Price: $" . number_format($item['price'], 2, '.', '') . "<br>";
        echo "Quantity: " . $item['quantity'] . "<br>";
        $total += $item['price'] * $item['quantity'];
        echo "</div>";
    }
    echo "<h3>Total: $" . number_format($total, 2, '.', '') . "</h3>";
} else {
    echo "<h1>Your cart is empty!</h1>";
}
?>


<?php
session_start();

if (isset($_GET['id'])) {
    $item_id = $_GET['id'];
    $cart = $_SESSION['cart'];

    // Loop through the cart to find and remove the item
    foreach ($cart as $key => $item) {
        if ($item['id'] == $item_id) {
            unset($cart[$key]);
            break;
        }
    }

    // Re-index the array
    $_SESSION['cart'] = array_values($cart);

    // Redirect back to the cart page
    header("Location: cart.php");
    exit();
}
?>


<?php
session_start();

if (isset($_SESSION['cart']) && !empty($_SESSION['cart'])) {
    $total = 0;
    echo "<h1>Shopping Cart</h1>";
    foreach ($_SESSION['cart'] as $item) {
        echo "<div>";
        echo "Item ID: " . $item['id'] . "<br>";
        echo "Name: " . $item['name'] . "<br>";
        echo "Price: $" . number_format($item['price'], 2, '.', '') . "<br>";
        echo "Quantity: " . $item['quantity'] . "<br>";
        echo "<a href='remove_item.php?id=" . $item['id'] . "'>Remove</a><br>";
        $total += $item['price'] * $item['quantity'];
        echo "</div>";
    }
    echo "<h3>Total: $" . number_format($total, 2, '.', '') . "</h3>";
} else {
    echo "<h1>Your cart is empty!</h1>";
}
?>


<?php
// Start the session
session_start();

// Check if the cart is already set in the session
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add item to cart
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $item_id = intval($_POST['item_id']);
    $item_name = $_POST['item_name'];
    $item_price = floatval($_POST['item_price']);
    $quantity = intval($_POST['quantity']);

    // Check if item is already in the cart
    if (isset($_SESSION['cart'][$item_id])) {
        // Update quantity
        $_SESSION['cart'][$item_id]['quantity'] += $quantity;
    } else {
        // Add new item
        $_SESSION['cart'][$item_id] = array(
            'id' => $item_id,
            'name' => $item_name,
            'price' => $item_price,
            'quantity' => $quantity
        );
    }
}

// Function to calculate total price
function calculateTotal() {
    global $total;
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += ($item['price'] * $item['quantity']);
    }
    return $total;
}

// Remove item from cart
if (isset($_GET['remove'])) {
    $item_id = intval($_GET['remove']);
    if (isset($_SESSION['cart'][$item_id])) {
        unset($_SESSION['cart'][$item_id]);
        // Re-index the array to maintain numeric keys
        $_SESSION['cart'] = array_values($_SESSION['cart']);
    }
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Shopping Cart</title>
</head>
<body>
    <h1>Shopping Cart</h1>

    <!-- Add to cart form -->
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        Item ID: <input type="text" name="item_id"><br>
        Item Name: <input type="text" name="item_name"><br>
        Price: <input type="number" name="item_price"><br>
        Quantity: <input type="number" name="quantity"><br>
        <input type="submit" value="Add to Cart">
    </form>

    <?php if (!empty($_SESSION['cart'])) { ?>
        <!-- Display cart contents -->
        <h2>Cart Items</h2>
        <ul>
            <?php foreach ($_SESSION['cart'] as $item) { ?>
                <li>
                    <?php echo $item['name']; ?> (ID: <?php echo $item['id']; ?>)
                    - Price: <?php echo $item['price']; ?> 
                    - Quantity: <?php echo $item['quantity']; ?>
                    - Total: <?php echo ($item['price'] * $item['quantity']); ?>
                    <a href="<?php echo $_SERVER['PHP_SELF']; ?>?remove=<?php echo $item['id']; ?>">Remove</a>
                </li>
            <?php } ?>
        </ul>

        <!-- Display total price -->
        <?php calculateTotal(); ?>
        <h3>Total Price: <?php echo $total; ?></h3>
    <?php } else { ?>
        <p>Your cart is empty.</p>
    <?php } ?>

</body>
</html>


<?php
session_start();

// Initialize cart if not already set
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function addToCart($itemId, $itemName, $itemPrice) {
    global $cart;
    
    // Check if item is already in cart
    foreach ($cart as &$item) {
        if ($item['id'] == $itemId) {
            $item['quantity']++;
            return;
        }
    }
    
    // Add new item to cart
    $cart[] = array(
        'id' => $itemId,
        'name' => $itemName,
        'price' => $itemPrice,
        'quantity' => 1
    );
}

// Function to update cart quantity
function updateCart($itemId, $newQuantity) {
    global $cart;
    
    foreach ($cart as &$item) {
        if ($item['id'] == $itemId) {
            $item['quantity'] = $newQuantity;
            return;
        }
    }
}

// Function to remove item from cart
function removeFromCart($itemId) {
    global $cart;
    $cart = array_filter($cart, function($item) use ($itemId) {
        return $item['id'] != $itemId;
    });
}

// Function to calculate total price
function getCartTotal() {
    global $cart;
    $total = 0;
    foreach ($cart as $item) {
        $total += $item['price'] * $item['quantity'];
    }
    return $total;
}

// Handle user input actions
if (isset($_GET['action'])) {
    switch ($_GET['action']) {
        case 'add':
            if (isset($_GET['id'], $_GET['name'], $_GET['price'])) {
                addToCart($_GET['id'], $_GET['name'], $_GET['price']);
            }
            break;
        
        case 'update':
            if (isset($_GET['id'], $_GET['quantity'])) {
                updateCart($_GET['id'], $_GET['quantity']);
            }
            break;
            
        case 'remove':
            if (isset($_GET['id'])) {
                removeFromCart($_GET['id']);
            }
            break;
    }
}

// Get cart contents
$cart = $_SESSION['cart'];
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Shopping Cart</title>
</head>
<body>
    <?php if (count($cart) > 0): ?>
        <h1>Your Shopping Cart</h1>
        <table border="1">
            <thead>
                <tr>
                    <th>Item Name</th>
                    <th>Price</th>
                    <th>Quantity</th>
                    <th>Total</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
                <?php foreach ($cart as $item): ?>
                <tr>
                    <td><?php echo htmlspecialchars($item['name']); ?></td>
                    <td>$<?php echo number_format($item['price'], 2); ?></td>
                    <td>
                        <input type="number" 
                               value="<?php echo $item['quantity']; ?>"
                               onchange="updateQuantity('<?php echo $item['id']; ?>', this.value)">
                    </td>
                    <td>$<?php echo number_format($item['price'] * $item['quantity'], 2); ?></td>
                    <td><a href="?action=remove&id=<?php echo $item['id']; ?>">Remove</a></td>
                </tr>
                <?php endforeach; ?>
            </tbody>
        </table>
        <p>Total: $<?php echo number_format(getCartTotal(), 2); ?></p>
    <?php else: ?>
        <h1>Your Shopping Cart is Empty</h1>
    <?php endif; ?>

    <!-- Add items to cart -->
    <form action="?action=add" method="get">
        <input type="hidden" name="id" value="1">
        <input type="hidden" name="name" value="Product 1">
        <input type="hidden" name="price" value="19.99">
        <button type="submit">Add Product 1</button>
    </form>

    <form action="?action=add" method="get">
        <input type="hidden" name="id" value="2">
        <input type="hidden" name="name" value="Product 2">
        <input type="hidden" name="price" value="29.99">
        <button type="submit">Add Product 2</button>
    </form>

    <!-- Add JavaScript for quantity updates -->
    <script>
        function updateQuantity(itemId, quantity) {
            window.location.href = '?action=update&id=' + itemId + '&quantity=' + quantity;
        }
    </script>
</body>
</html>


<?php
session_start();
?>


if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}


function addToCart($productId, $name, $price) {
    global $mysqli; // Assuming you have a database connection
    $quantity = 1;

    // Check if product exists in the cart
    if (isset($_SESSION['cart'][$productId])) {
        // If it does, increment the quantity
        $_SESSION['cart'][$productId]['quantity']++;
    } else {
        // If not, add the product to the cart
        $_SESSION['cart'][$productId] = array(
            'id' => $productId,
            'name' => $name,
            'price' => $price,
            'quantity' => $quantity
        );
    }
}


function removeFromCart($productId) {
    if (isset($_SESSION['cart'][$productId])) {
        unset($_SESSION['cart'][$productId]);
    }
}


function updateQuantity($productId, $newQuantity) {
    if (isset($_SESSION['cart'][$productId])) {
        if ($newQuantity > 0) {
            $_SESSION['cart'][$productId]['quantity'] = $newQuantity;
        } else {
            removeFromCart($productId);
        }
    }
}


function calculateTotal() {
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += ($item['price'] * $item['quantity']);
    }
    return $total;
}


echo "<h2>Shopping Cart</h2>";
if (empty($_SESSION['cart'])) {
    echo "Your cart is empty.";
} else {
    foreach ($_SESSION['cart'] as $item) {
        echo "<p>" . $item['name'] . "</p>";
        echo "<p>Price: $" . number_format($item['price'], 2) . "</p>";
        echo "<p>Quantity: " . $item['quantity'] . "</p>";
        echo "<hr>";
    }
    echo "<h3>Total: $" . number_format(calculateTotal(), 2) . "</h3>";
}


// Example usage:
productId = 1;
productName = "Product Name";
productPrice = 99.99;

if (isset($_POST['add_to_cart'])) {
    addToCart($productId, $productName, $productPrice);
} elseif (isset($_GET['remove_item'])) {
    $productIdToRemove = $_GET['remove_item'];
    removeFromCart($productIdToRemove);
}

// Display the cart
displayCart();


<?php
session_start();
?>


<?php
session_start();

if (isset($_POST['add_to_cart'])) {
    $productId = $_POST['product_id'];
    $name = $_POST['name'];
    $price = $_POST['price'];
    $quantity = $_POST['quantity'];

    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }

    $itemExists = false;
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['product_id'] == $productId) {
            $itemExists = true;
            break;
        }
    }

    if (!$itemExists) {
        $newItem = array(
            'product_id' => $productId,
            'name' => $name,
            'price' => $price,
            'quantity' => $quantity
        );
        $_SESSION['cart'][] = $newItem;
    }
}

header("Location: view_cart.php");
exit();
?>


<?php
session_start();

if (isset($_SESSION['cart']) && count($_SESSION['cart']) > 0) {
    $cart = $_SESSION['cart'];
} else {
    $cart = array();
}
?>
<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <?php if (empty($cart)): ?>
        <h2>Your cart is empty.</h2>
    <?php else: ?>
        <h2>Your Cart:</h2>
        <?php foreach ($cart as $item): ?>
            <div>
                <img src="<?php echo $item['image_url']; ?>" alt="<?php echo $item['name']; ?>">
                <p><?php echo $item['name']; ?></p>
                <p>Price: <?php echo $item['price']; ?></p>
                <p>Quantity: <?php echo $item['quantity']; ?></p>
                <a href="remove_item.php?product_id=<?php echo $item['product_id']; ?>">Remove</a>
            </div>
        <?php endforeach; ?>
    <?php endif; ?>

    <a href="checkout.php">Proceed to Checkout</a> |
    <a href="index.php">Continue Shopping</a>
</body>
</html>


<?php
session_start();

if (isset($_GET['product_id'])) {
    $productId = $_GET['product_id'];
    foreach ($_SESSION['cart'] as $key => $item) {
        if ($item['product_id'] == $productId) {
            unset($_SESSION['cart'][$key]);
            break;
        }
    }
}

header("Location: view_cart.php");
exit();
?>


<?php
session_start();

if (isset($_POST['product_id']) && isset($_POST['quantity'])) {
    $productId = $_POST['product_id'];
    $newQuantity = $_POST['quantity'];

    foreach ($_SESSION['cart'] as &$item) {
        if ($item['product_id'] == $productId) {
            $item['quantity'] = $newQuantity;
            break;
        }
    }
}

header("Location: view_cart.php");
exit();
?>


<?php
// Start the session
session_start();

// Initialize cart if not already set
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Example: Adding an item to the cart
$productId = 1;
$productName = "Example Product";
$productPrice = 29.99;

// Check if product is already in cart
$itemExists = false;
foreach ($_SESSION['cart'] as $key => $item) {
    if ($item['product_id'] == $productId) {
        // Increment quantity
        $_SESSION['cart'][$key]['quantity']++;
        $itemExists = true;
        break;
    }
}

// If item doesn't exist, add it to the cart
if (!$itemExists) {
    array_push($_SESSION['cart'], array(
        'product_id' => $productId,
        'product_name' => $ProductName,
        'price' => $ProductPrice,
        'quantity' => 1
    ));
}

// Updating quantity of an item
// Example: Increase quantity of product ID 1 by 2
foreach ($_SESSION['cart'] as $key => $item) {
    if ($item['product_id'] == 1) {
        $_SESSION['cart'][$key]['quantity'] += 2;
        break;
    }
}

// Removing an item from cart
// Example: Remove product ID 1
foreach ($_SESSION['cart'] as $key => $item) {
    if ($item['product_id'] == 1) {
        unset($_SESSION['cart'][$key]);
        break;
    }
}
// Re-index the array after removal
$_SESSION['cart'] = array_values($_SESSION['cart']);

// Displaying cart contents
echo "<h2>Your Cart</h2>";
foreach ($_SESSION['cart'] as $item) {
    echo "Product ID: " . $item['product_id'] . "<br>";
    echo "Product Name: " . $item['product_name'] . "<br>";
    echo "Price: $" . number_format($item['price'], 2) . "<br>";
    echo "Quantity: " . $item['quantity'] . "<br>";
    echo "Total: $" . number_format($item['price'] * $item['quantity'], 2) . "<hr>";
}

// Calculate total price
$total = 0;
foreach ($_SESSION['cart'] as $item) {
    $total += $item['price'] * $item['quantity'];
}
echo "Cart Total: $" . number_format($total, 2);

// Example HTML form to add items
?>
<form method="post" action="">
    <input type="text" name="product_id" placeholder="Enter product ID">
    <input type="text" name="product_name" placeholder="Enter product name">
    <input type="number" name="price" placeholder="Enter price">
    <button type="submit">Add to Cart</button>
</form>

// Example usage with form submission
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $productId = isset($_POST['product_id']) ? $_POST['product_id'] : '';
    $productName = isset($_POST['product_name']) ? $_POST['product_name'] : '';
    $price = isset($_POST['price']) ? $_POST['price'] : 0;

    // Add to cart logic here
}


<?php
// Start the session
session_start();

// Check if cart exists in session, if not initialize it
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function addToCart($item_id, $item_name, $price) {
    // Check if the item already exists in the cart
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['id'] == $item_id) {
            $item['quantity']++;
            return;
        }
    }
    
    // If not, add new item to cart
    $_SESSION['cart'][] = array(
        'id' => $item_id,
        'name' => $item_name,
        'price' => $price,
        'quantity' => 1
    );
}

// Function to update quantity of an item in the cart
function updateQuantity($item_id, $new_quantity) {
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['id'] == $item_id) {
            // Ensure quantity is not negative
            $item['quantity'] = max(1, $new_quantity);
            return;
        }
    }
}

// Function to remove item from cart
function removeFromCart($item_id) {
    foreach ($_SESSION['cart'] as $key => $item) {
        if ($item['id'] == $item_id) {
            unset($_SESSION['cart'][$key]);
            // Re-index the array
            $_SESSION['cart'] = array_values($_SESSION['cart']);
            return;
        }
    }
}

// Function to calculate total price of items in cart
function cartTotal() {
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += ($item['price'] * $item['quantity']);
    }
    return $total;
}

// Function to display cart items
function displayCart() {
    if (empty($_SESSION['cart'])) {
        echo "Your cart is empty.";
    } else {
        foreach ($_SESSION['cart'] as $item) {
            echo "<div>";
            echo "Item ID: " . $item['id'] . "<br>";
            echo "Name: " . $item['name'] . "<br>";
            echo "Price: $" . number_format($item['price'], 2) . "<br>";
            echo "Quantity: " . $item['quantity'] . "<br>";
            echo "</div>";
        }
    }
}

// Example usage:
// addToCart(1, 'Product A', 29.99);
// updateQuantity(1, 3);
// removeFromCart(1);

// Display the cart
displayCart();

// Calculate and display total
echo "Total: $" . number_format(cartTotal(), 2);

// Destroy the session when done shopping
// session_unset();
// session_destroy();
?>


<?php
session_start();

// Initialize cart if it doesn't exist yet
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function addToCart($item_id, $item_name, $item_price) {
    global $mysqli;
    
    // Check if the product is already in the cart
    $isInCart = false;
    foreach ($_SESSION['cart'] as $key => $value) {
        if ($value['item_id'] == $item_id) {
            // If item exists, increase quantity
            $_SESSION['cart'][$key]['quantity']++;
            $isInCart = true;
            break;
        }
    }
    
    // If product is not in cart, add it
    if (!$isInCart) {
        array_push($_SESSION['cart'], array(
            'item_id' => $item_id,
            'item_name' => $item_name,
            'item_price' => $item_price,
            'quantity' => 1
        ));
    }
}

// Function to remove item from cart
function removeFromCart($item_id) {
    foreach ($_SESSION['cart'] as $key => $value) {
        if ($value['item_id'] == $item_id) {
            unset($_SESSION['cart'][$key]);
            break;
        }
    }
    
    // Re-index the array keys after removal
    $_SESSION['cart'] = array_values($_SESSION['cart']);
}

// Function to update item quantity
function updateQuantity($item_id, $new_quantity) {
    foreach ($_SESSION['cart'] as $key => $value) {
        if ($value['item_id'] == $item_id) {
            $_SESSION['cart'][$key]['quantity'] = $new_quantity;
            break;
        }
    }
}

// Function to get total price
function getTotalPrice() {
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += ($item['item_price'] * $item['quantity']);
    }
    return $total;
}
?>


// Add an item to cart
addToCart(1, 'Product 1', 29.99);

// Remove an item from cart
removeFromCart(1);

// Update quantity of an item
updateQuantity(1, 3);

// Get total price
$total = getTotalPrice();
echo "Total Price: $total";


<?php
// Start the session
session_start();

// Initialize cart if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function addToCart($itemId, $itemPrice) {
    global $(itemId);
    
    // Check if item already exists in cart
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['id'] == $itemId) {
            $item['quantity']++;
            return;
        }
    }
    
    // Add new item to cart
    $_SESSION['cart'][] = array(
        'id' => $itemId,
        'price' => $itemPrice,
        'quantity' => 1
    );
}

// Function to update quantity of an item
function updateCartQuantity($itemId, $newQuantity) {
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['id'] == $itemId) {
            $item['quantity'] = $newQuantity;
            return;
        }
    }
}

// Function to remove item from cart
function removeFromCart($itemId) {
    $_SESSION['cart'] = array_filter($_SESSION['cart'], function($item) use ($itemId) {
        return $item['id'] != $itemId;
    });
}

// Function to get total items and total price
function getCartTotals() {
    $totalItems = 0;
    $totalPrice = 0;
    
    foreach ($_SESSION['cart'] as $item) {
        $totalItems += $item['quantity'];
        $totalPrice += $item['price'] * $item['quantity'];
    }
    
    return array(
        'total_items' => $totalItems,
        'total_price' => $totalPrice
    );
}

// Example usage:

// Add an item to cart
addToCart(1, 29.99); // Item ID 1, Price $29.99

// Update quantity of item in cart
updateCartQuantity(1, 3);

// Remove an item from cart
removeFromCart(2);

// Get cart totals
$totals = getCartTotals();
echo "Total items: " . $totals['total_items'] . "<br>";
echo "Total price: $" . number_format($totals['total_price'], 2);
?>


     session_start();
     if (!isset($_SESSION['cart'])) {
         $_SESSION['cart'] = array();
     }
     

3. **Add Items to Cart**
   - When a user adds an item, retrieve the product ID from POST data. Check if the product is already in the cart.
     - If it exists, increment the quantity.
     - If not, add the new product with its details (e.g., name, price).
     
     function addToCart($productId) {
         include 'db_connection.php';
         $result = mysqli_query($conn, "SELECT id, name, price FROM products WHERE id=$productId");
         $product = mysqli_fetch_assoc($result);
         if ($product) {
             if (isset($_SESSION['cart'][$productId])) {
                 $_SESSION['cart'][$productId]['quantity']++;
             } else {
                 $_SESSION['cart'][$productId] = array(
                     'id' => $productId,
                     'name' => $product['name'],
                     'price' => $product['price'],
                     'quantity' => 1
                 );
             }
         }
     }
     

4. **Update Cart Quantities**
   - Allow users to adjust quantities by iterating over each item and updating their counts.
     
     function updateCart($cartData) {
         foreach ($cartData as $productId => $quantity) {
             if (isset($_SESSION['cart'][$productId])) {
                 $_SESSION['cart'][$productId]['quantity'] = $quantity;
             }
         }
     }
     

5. **Remove Items from Cart**
   - Provide a method to remove items by unsetting the respective session array element.
     
     function removeFromCart($productId) {
         if (isset($_SESSION['cart'][$productId])) {
             unset($_SESSION['cart'][$productId]);
             $_SESSION['cart'] = array_values($_SESSION['cart']); // Re-index keys
         }
     }
     

6. **Display Cart Contents**
   - Loop through the cart session to display each item's details and calculate totals.
     
     function displayCart() {
         $total = 0;
         foreach ($_SESSION['cart'] as $item) {
             echo "Product: {$item['name']}<br>";
             echo "Price: \${$item['price']}<br>";
             echo "Quantity: {$item['quantity']}<br>";
             $subtotal = $item['price'] * $item['quantity'];
             echo "Subtotal: \$" . number_format($subtotal, 2) . "<br><hr>";
             $total += $subtotal;
         }
         echo "Total Amount: \$" . number_format($total, 2);
     }
     

7. **Handling Session Data**
   - PHP automatically serializes session data when storing it, so no manual serialization is needed.

8. **Testing and Validation**
   - Ensure functions handle cases where product IDs are invalid or quantities become negative.
   - Test adding the same product multiple times to verify quantity increments.

### Final Code Example



<?php
// Start the session
session_start();

// Initialize cart if not set
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add item to cart function
function add_to_cart($product_id, $name, $price) {
    global $session;
    // Check if product exists in cart
    if (isset($_SESSION['cart'][$product_id])) {
        // If exists, increment quantity
        $_SESSION['cart'][$product_id]['quantity']++;
    } else {
        // If not exists, add new item
        $_SESSION['cart'][$product_id] = array(
            'name' => $name,
            'price' => $price,
            'quantity' => 1
        );
    }
}

// Update cart function
function update_cart($product_id, $quantity) {
    global $session;
    if (isset($_SESSION['cart'][$product_id])) {
        $_SESSION['cart'][$product_id]['quantity'] = $quantity;
    }
}

// Remove item from cart function
function remove_from_cart($product_id) {
    global $session;
    unset($_SESSION['cart'][$product_id]);
}

// Calculate total price of items in cart
function get_total() {
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += ($item['price'] * $item['quantity']);
    }
    return $total;
}

// Display cart contents
function display_cart() {
    echo "<table>";
    echo "<tr><th>Product Name</th><th>Price</th><th>Quantity</th><th>Total</th></tr>";
    foreach ($_SESSION['cart'] as $item) {
        echo "<tr>";
        echo "<td>" . $item['name'] . "</td>";
        echo "<td>$" . number_format($item['price'], 2) . "</td>";
        echo "<td><input type='text' size='3' name='quantity[".$product_id."]' value='" . $item['quantity'] ."'></td>";
        echo "<td>$" . number_format(($item['price'] * $item['quantity']), 2) . "</td>";
        echo "<td><a href='".$_SERVER['PHP_SELF']."?action=remove&product_id=".$product_id."'>Remove</a></td>";
        echo "</tr>";
    }
    echo "</table>";
}

// Example usage:
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    if (isset($_POST['add_to_cart'])) {
        $product_id = 1;
        $name = "Sample Product";
        $price = 9.99;
        add_to_cart($product_id, $name, $price);
    }
}

// Update cart
if ($_SERVER['REQUEST_METHOD'] == 'GET') {
    if (isset($_GET['action']) && $_GET['action'] == 'update') {
        foreach ($_POST['quantity'] as $product_id => $qty) {
            update_cart($product_id, $qty);
        }
    }

    // Remove item from cart
    if (isset($_GET['action']) && $_GET['action'] == 'remove' && isset($_GET['product_id'])) {
        remove_from_cart($_GET['product_id']);
    }
}

// Display the cart contents
echo "Your Cart:<br>";
display_cart();
?>


<?php
session_start();
?>


if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}


// Sample item data
$item_id = '1';
$item_name = 'Product 1';
$item_price = 29.99;
$quantity = 1;

// Create item array
$item = array(
    'id' => $item_id,
    'name' => $item_name,
    'price' => $item_price,
    'quantity' => $quantity
);

// Add item to cart
array_push($_SESSION['cart'], $item);


$item_id_to_update = '1';

foreach ($_SESSION['cart'] as &$item) {
    if ($item['id'] === $item_id_to_update) {
        $item['quantity'] += 1;
    }
}


$item_id_to_remove = '1';

foreach ($_SESSION['cart'] as $key => $item) {
    if ($item['id'] === $item_id_to_remove) {
        unset($_SESSION['cart'][$key]);
    }
}


echo '<h2>Shopping Cart</h2>';
echo '<ul>';

foreach ($_SESSION['cart'] as $item) {
    echo '<li>' . $item['name'] . ' - $' . $item['price'] . ' x ' . $item['quantity'] . '</li>';
}

echo '</ul>';


$total = 0;

foreach ($_SESSION['cart'] as $item) {
    $total += ($item['price'] * $item['quantity']);
}

echo '<p>Total: $' . number_format($total, 2) . '</p>';


<?php
session_start();

// Initialize cart if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add item to cart
if (isset($_POST['add_to_cart'])) {
    $item_id = '1';
    $item_name = 'Product 1';
    $item_price = 29.99;
    $quantity = 1;

    $item = array(
        'id' => $item_id,
        'name' => $item_name,
        'price' => $item_price,
        'quantity' => $quantity
    );

    // Check if item already exists in cart
    $item_exists = false;
    foreach ($_SESSION['cart'] as &$item_in_cart) {
        if ($item_in_cart['id'] === $item_id) {
            $item_in_cart['quantity'] += 1;
            $item_exists = true;
        }
    }

    if (!$item_exists) {
        array_push($_SESSION['cart'], $item);
    }
}

// Remove item from cart
if (isset($_GET['remove'])) {
    $item_id_to_remove = $_GET['remove'];

    foreach ($_SESSION['cart'] as $key => $item) {
        if ($item['id'] === $item_id_to_remove) {
            unset($_SESSION['cart'][$key]);
        }
    }
}

// Calculate total price
$total = 0;
foreach ($_SESSION['cart'] as $item) {
    $total += ($item['price'] * $item['quantity']);
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <h2>Add Item to Cart</h2>
    <form method="post">
        <input type="hidden" name="add_to_cart" value="1">
        <button type="submit">Add Product 1 to Cart</button>
    </form>

    <?php if (!empty($_SESSION['cart'])) { ?>
        <h2>Shopping Cart</h2>
        <ul>
            <?php foreach ($_SESSION['cart'] as $item) { ?>
                <li><?php echo $item['name']; ?> - $<?php echo number_format($item['price'], 2); ?> x <?php echo $item['quantity']; ?>
                    <a href="?remove=<?php echo $item['id']; ?>">Remove</a>
                </li>
            <?php } ?>
        </ul>
        <p>Total: $<?php echo number_format($total, 2); ?></p>
    <?php } else { ?>
        <p>Your cart is empty.</p>
    <?php } ?>

    <br>
    <a href="destroy_session.php">Clear Cart</a>
</body>
</html>


<?php
session_start();
unset($_SESSION['cart']);
session_unset();
header("Location: cart.php");
exit();
?>


<?php
// Start the session
session_start();

// Check if the cart exists in the session; if not, initialize it as an empty array
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function addToCart($productId) {
    global $product_id;
    
    // Add product ID to the cart
    if (isset($_GET['add'])) {
        $product_id = $_GET['add'];
        
        // Check if product already exists in the cart
        if (array_key_exists($product_id, $_SESSION['cart'])) {
            // Increment quantity if it's already there
            $_SESSION['cart'][$product_id] += 1;
        } else {
            // Add new product with quantity 1
            $_SESSION['cart'][$product_id] = 1;
        }
        
        // Redirect back to the cart page
        header("Location: view_cart.php");
        exit();
    }
}

// Function to remove item from cart
function removeFromCart($productId) {
    global $product_id;
    
    // Remove product ID from the cart
    if (isset($_GET['remove'])) {
        $product_id = $_GET['remove'];
        
        // Check if product exists in the cart and remove it
        if (array_key_exists($product_id, $_SESSION['cart'])) {
            unset($_SESSION['cart'][$product_id]);
        }
        
        // Redirect back to the cart page
        header("Location: view_cart.php");
        exit();
    }
}

// Example usage:
?>


<?php
session_start();

$total_price = 0;

if (!empty($_SESSION['cart'])) {
    foreach ($_SESSION['cart'] as $product_id => $quantity) {
        // Assuming you have a way to get product details based on ID
        $product_name = "Product ".strval($product_id);
        
        echo "<div>";
        echo "Product: ".$product_name."<br />";
        echo "Quantity: ".$quantity."<br />";
        echo "</div>";
    }
    
    // Calculate total price (example prices)
    foreach ($_SESSION['cart'] as $product_id => $quantity) {
        if ($product_id == 1) {
            $total_price += $quantity * 10; // Example price for product 1
        } elseif ($product_id == 2) {
            $total_price += $quantity * 20; // Example price for product 2
        }
    }
    
    echo "<div>Total Price: \$".number_format($total_price, 2)."</div>";
} else {
    echo "Your cart is empty.";
}
?>


<?php
session_start();

// Initialize cart session if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Display current items in the cart
echo "<h2>Your Cart</h2>";
if (empty($_SESSION['cart'])) {
    echo "Your cart is empty.";
} else {
    foreach ($_SESSION['cart'] as $item) {
        echo "$item <br>";
    }
}

// Add item to cart form
echo <<<_END
<form method="post" action="">
    <input type="text" name="item_name" placeholder="Enter item name">
    <button type="submit">Add Item</button>
</form>
_END;

// Handle adding items to the cart
if (isset($_POST['add_item'])) {
    $newItem = $_POST['item_name'];
    array_push($_SESSION['cart'], $newItem);
    header("Location: " . $_SERVER['PHP_SELF']);
}
?>


<?php
// Start the session
session_start();

// Initialize cart if not set
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function add_to_cart($product_id, $name, $price) {
    global $mysqli;
    
    // Check if product is already in cart
    if (isset($_SESSION['cart'][$product_id])) {
        // Increment quantity
        $_SESSION['cart'][$product_id]['quantity']++;
    } else {
        // Add new product to cart
        $_SESSION['cart'][$product_id] = array(
            'id' => $product_id,
            'name' => $name,
            'price' => $price,
            'quantity' => 1
        );
    }
}

// Function to remove item from cart
function remove_from_cart($product_id) {
    if (isset($_SESSION['cart'][$product_id])) {
        unset($_SESSION['cart'][$product_id]);
        // Re-index the array after unsetting
        $_SESSION['cart'] = array_values($_SESSION['cart']);
    }
}

// Function to update item quantity in cart
function update_cart($product_id, $quantity) {
    if (isset($_SESSION['cart'][$product_id])) {
        $_SESSION['cart'][$product_id]['quantity'] = $quantity;
    }
}

// Function to clear all items from cart
function clear_cart() {
    $_SESSION['cart'] = array();
}

// Example usage:
// Add item to cart
add_to_cart(1, 'Product 1', 19.99);
add_to_cart(2, 'Product 2', 29.99);

// Update quantity of Product 1
update_cart(1, 3);

// Remove Product 2 from cart
remove_from_cart(2);

// Clear all items from cart
clear_cart();

// Display cart contents
echo "<pre>";
print_r($_SESSION['cart']);
echo "</pre>";

// Close the session
session_write_close();
?>


<?php
// Start the session
session_start();

// Initialize cart if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function add_to_cart($product_id, $product_name, $price, $quantity) {
    global $mysqli;
    
    // Check if product is already in cart
    foreach ($_SESSION['cart'] as $key => $item) {
        if ($item['product_id'] == $product_id) {
            $_SESSION['cart'][$key]['quantity'] += $quantity;
            return true;
        }
    }

    // Add new product to cart
    $item = array(
        'product_id' => $product_id,
        'product_name' => $product_name,
        'price' => $price,
        'quantity' => $quantity
    );

    $_SESSION['cart'][] = $item;
    return true;
}

// Function to display cart contents
function display_cart() {
    if (empty($_SESSION['cart'])) {
        echo "Your cart is empty!";
        return;
    }

    foreach ($_SESSION['cart'] as $key => $item) {
        $total_price = $item['price'] * $item['quantity'];
        
        echo "<div class='cart-item'>";
        echo "<p>Product: {$item['product_name']}</p>";
        echo "<p>Price: \${$item['price']}</p>";
        echo "<p>Quantity: {$item['quantity']}</p>";
        echo "<a href='remove_from_cart.php?index={$key}'>Remove</a>";
        echo "</div>";
    }
}

// Function to remove item from cart
function remove_from_cart($index) {
    if (isset($_SESSION['cart'][$index])) {
        array_splice($_SESSION['cart'], $index, 1);
        header("Location: display_cart.php");
        exit();
    }
}

// Function to clear the entire cart
function clear_cart() {
    $_SESSION['cart'] = array();
}

// Close the session
session_write_close();
?>


<?php
// Start the session
session_start();

// Check if the cart exists in the session, if not initialize it
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add an item to the cart
function addToCart($item_id, $name, $price) {
    // Check if the item is already in the cart
    if (isset($_SESSION['cart'][$item_id])) {
        // If it exists, increment the quantity
        $_SESSION['cart'][$item_id]['quantity']++;
    } else {
        // If it doesn't exist, add it to the cart
        $_SESSION['cart'][$item_id] = array(
            'item_id' => $item_id,
            'name' => $name,
            'price' => $price,
            'quantity' => 1
        );
    }
}

// Function to update quantity of an item in the cart
function updateQuantity($item_id, $new_quantity) {
    if ($new_quantity > 0 && isset($_SESSION['cart'][$item_id])) {
        $_SESSION['cart'][$item_id]['quantity'] = $new_quantity;
    }
}

// Function to remove an item from the cart
function removeFromCart($item_id) {
    if (isset($_SESSION['cart'][$item_id])) {
        unset($_SESSION['cart'][$item_id]);
    }
}

// Example usage:

// Adding an item to the cart
addToCart(1, 'Product 1', 19.99);

// Updating quantity of an item
updateQuantity(1, 3);

// Removing an item from the cart
removeFromCart(1);

// Displaying the contents of the cart
echo "<h2>Shopping Cart</h2>";
if (empty($_SESSION['cart'])) {
    echo "Your cart is empty.";
} else {
    echo "<ul>";
    foreach ($_SESSION['cart'] as $item) {
        echo "<li>".$item['name']." - Quantity: ".$item['quantity']."</li>";
    }
    echo "</ul>";
}
?>


<?php
// Start the session
session_start();

// Function to add item to cart
function addToCart($productId) {
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }
    
    // Check if product exists in cart
    if (array_key_exists($productId, $_SESSION['cart'])) {
        // If exists, increment quantity
        $_SESSION['cart'][$productId]['quantity']++;
    } else {
        // If not exists, add new item with quantity 1
        $product = array(
            'id' => $productId,
            'name' => getProductById($productId)['name'],
            'price' => getProductById($productId)['price'],
            'quantity' => 1
        );
        
        $_SESSION['cart'][$productId] = $product;
    }
}

// Function to update cart quantity
function updateCart() {
    if (!empty($_POST['update'])) {
        foreach ($_POST['quantity'] as $id => $qty) {
            if (isset($_SESSION['cart'][$id])) {
                $_SESSION['cart'][$id]['quantity'] = max(1, intval($qty));
            }
        }
    }
}

// Function to remove item from cart
function removeFromCart($productId) {
    if (!empty($_POST['remove'])) {
        unset($_SESSION['cart'][$productId]);
    }
}

// Function to display cart items
function displayCart() {
    $total = 0;
    echo '<table>';
    echo '<tr><th>Product</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>';
    
    if (!empty($_SESSION['cart'])) {
        foreach ($_SESSION['cart'] as $id => $item) {
            $total += ($item['price'] * $item['quantity']);
            echo '<tr>';
            echo '<td>' . $item['name'] . '</td>';
            echo '<td>$' . number_format($item['price'], 2) . '</td>';
            
            // Create quantity form
            echo '<td><form method="post">';
            echo '<input type="number" name="quantity[' . $id . ']" value="' . $item['quantity'] . '" min="1">';
            echo '<button type="submit" name="update">Update</button>';
            echo '</form></td>';
            
            // Create remove button
            echo '<td>$' . number_format($item['price'] * $item['quantity'], 2) . '</td>';
            echo '<td><form method="post"><button type="submit" name="remove" value="' . $id . '">Remove</button></form></td>';
            echo '</tr>';
        }
    } else {
        echo '<tr><td colspan="5">Your cart is empty!</td></tr>';
    }
    
    echo '<tr><td colspan="4"><strong>Total:</strong></td><td>$' . number_format($total, 2) . '</td></tr>';
    echo '</table>';
}

// Function to get product details by ID (you should replace this with your actual database query)
function getProductById($productId) {
    // This is a dummy function for demonstration
    $products = array(
        '1' => array('name' => 'Product 1', 'price' => 29.99),
        '2' => array('name' => 'Product 2', 'price' => 49.99)
    );
    
    return $products[$productId];
}

// Example usage
if (!empty($_GET['action'])) {
    switch ($_GET['action']) {
        case 'add':
            addToCart($_GET['id']);
            break;
            
        case 'remove':
            removeFromCart($_GET['id']);
            break;
            
        case 'destroy':
            unset($_SESSION['cart']);
            $_SESSION['cart'] = array();
            break;
    }
}

// Display cart
displayCart();

// Close the session
session_write_close();
?>


<a href="?action=add&id=1">Add Product 1</a>


<a href="?action=destroy">Empty Cart</a>


<?php
// Start the session
session_start();

// Initialize shopping cart session if it doesn't exist
if (!isset($_SESSION['shopping_cart'])) {
    $_SESSION['shopping_cart'] = array();
}

// Function to add item to cart
function addToCart($productId, $productName, $price) {
    global $db; // Assuming you have a database connection

    // Check if product exists in the database
    $query = "SELECT * FROM products WHERE id = ?";
    $stmt = $db->prepare($query);
    $stmt->execute([$productId]);
    $product = $stmt->fetch();

    if ($product) {
        $item = array(
            'id' => $productId,
            'name' => $productName,
            'price' => $price,
            'quantity' => 1
        );

        // Check if item already exists in cart
        if (isset($_SESSION['shopping_cart'][$productId])) {
            $_SESSION['shopping_cart'][$productId]['quantity']++;
        } else {
            $_SESSION['shopping_cart'][$productId] = $item;
        }
    } else {
        return false; // Product doesn't exist
    }
}

// Function to remove item from cart
function removeFromCart($productId) {
    if (isset($_SESSION['shopping_cart'][$productId])) {
        unset($_SESSION['shopping_cart'][$productId]);
        return true;
    } else {
        return false; // Item not found in cart
    }
}

// Function to update item quantity
function updateQuantity($productId, $quantity) {
    if (isset($_SESSION['shopping_cart'][$productId])) {
        $_SESSION['shopping_cart'][$productId]['quantity'] = max(0, intval($quantity));
        return true;
    } else {
        return false; // Item not found in cart
    }
}

// Function to get total price of items in cart
function getTotalPrice() {
    $total = 0;
    foreach ($_SESSION['shopping_cart'] as $item) {
        $total += ($item['price'] * $item['quantity']);
    }
    return number_format($total, 2);
}

// Function to clear all items from cart
function clearCart() {
    unset($_SESSION['shopping_cart']);
    $_SESSION['shopping_cart'] = array();
}

// Example usage:
if (isset($_GET['action'])) {
    switch ($_GET['action']) {
        case 'add':
            addToCart(1, 'Product 1', 19.99);
            break;
        case 'remove':
            removeFromCart(1);
            break;
        case 'update':
            updateQuantity(1, $_POST['quantity']);
            break;
        case 'clear':
            clearCart();
            break;
    }
}

// Display cart contents
echo "<pre>";
print_r($_SESSION['shopping_cart']);
echo "</pre>";
?>


<?php
// Start the session
session_start();

// Check if the cart exists in the session, initialize if not
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add product to cart
function addToCart($productId, $productName, $productPrice) {
    global $mysqli;
    
    // Check if product already exists in cart
    if (isset($_SESSION['cart'][$productId])) {
        // If exists, increment quantity
        $_SESSION['cart'][$productId]['quantity']++;
    } else {
        // If not exists, add new product to cart
        $_SESSION['cart'][$productId] = array(
            'product_id' => $productId,
            'product_name' => $productName,
            'product_price' => $productPrice,
            'quantity' => 1
        );
    }
}

// Function to update quantity of product in cart
function updateQuantity($productId, $quantity) {
    if (isset($_SESSION['cart'][$productId])) {
        $_SESSION['cart'][$productId]['quantity'] = $quantity;
    }
}

// Function to remove product from cart
function removeFromCart($productId) {
    if (isset($_SESSION['cart'][$productId])) {
        unset($_SESSION['cart'][$productId]);
    }
}

// Display cart contents
echo "<h2>Your Shopping Cart</h2>";
if (!empty($_SESSION['cart'])) {
    echo "<table border='1'>";
    echo "<tr><th>Product ID</th><th>Product Name</th><th>Price</th><th>Quantity</th><th>Action</th></tr>";
    
    foreach ($_SESSION['cart'] as $productId => $item) {
        echo "<tr>";
        echo "<td>" . $item['product_id'] . "</td>";
        echo "<td>" . $item['product_name'] . "</td>";
        echo "<td>$" . number_format($item['product_price'], 2) . "</td>";
        echo "<td><input type='number' name='quantity[" . $productId . "]' value='" . $item['quantity'] . "' min='1'></td>";
        echo "<td><a href='remove_product.php?id=" . $productId . "'>Remove</a></td>";
        echo "</tr>";
    }
    
    echo "</table>";
} else {
    echo "Your cart is empty!";
}

// Calculate total price
$total = 0;
foreach ($_SESSION['cart'] as $item) {
    $total += $item['product_price'] * $item['quantity'];
}
echo "<p>Total: $" . number_format($total, 2) . "</p>";

// Clear cart button
echo "<form action='clear_cart.php' method='post'>";
echo "<input type='submit' value='Clear Cart'>";
echo "</form>";
?>


<?php
// Start the session if it hasn't been started yet
if (session_status() == PHP_SESSION_NONE) {
    session_start();
}

// Function to add items to the cart
function addToCart($item_id, $quantity = 1) {
    // Initialize cart in session if not exists
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }
    
    // Check if item already exists in cart
    if (isset($_SESSION['cart'][$item_id])) {
        // Increment quantity
        $_SESSION['cart'][$item_id] += $quantity;
    } else {
        // Add new item to cart
        $_SESSION['cart'][$item_id] = $quantity;
    }
    
    // Save session data
    session_write_close();
}

// Function to remove items from the cart
function removeFromCart($item_id) {
    if (isset($_SESSION['cart'][$item_id])) {
        unset($_SESSION['cart'][$item_id]);
        session_write_close();
    }
}

// Function to update quantity of items in cart
function updateCartItem($item_id, $quantity) {
    if (isset($_SESSION['cart'][$item_id])) {
        $_SESSION['cart'][$item_id] = $quantity;
        session_write_close();
    } else {
        // Handle error: item not found in cart
        return false;
    }
}

// Function to empty the entire cart
function emptyCart() {
    unset($_SESSION['cart']);
    session_write_close();
}

// Example usage:
// Add an item with ID 1 and quantity 2
addToCart(1, 2);

// Remove an item with ID 1
removeFromCart(1);

// Update quantity of item with ID 1 to 3
updateCartItem(1, 3);

// Empty the entire cart
emptyCart();
?>


<?php
// Start the session
session_start();

// Check if the cart is already set in the session
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Example product data (you would typically retrieve this from a database)
$product_id = 1;
$product_name = "Example Product";
$product_price = 9.99;

// Add product to cart
if (!isset($_POST['add_to_cart'])) {
?>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <input type="hidden" name="product_id" value="<?php echo $product_id; ?>">
        <input type="hidden" name="product_name" value="<?php echo $product_name; ?>">
        <input type="hidden" name="product_price" value="<?php echo $product_price; ?>">
        <button type="submit" name="add_to_cart">Add to Cart</button>
    </form>
<?php
} else {
    // Sanitize input data
    $product_id = htmlspecialchars($_POST['product_id']);
    $product_name = htmlspecialchars($_POST['product_name']);
    $product_price = htmlspecialchars($_POST['product_price']);

    // Check if the product is already in the cart
    $cart_items = $_SESSION['cart'];
    $item_exists = false;

    foreach ($cart_items as $item) {
        if ($item['id'] == $product_id) {
            $item_exists = true;
            break;
        }
    }

    if ($item_exists) {
        echo "Product is already in the cart!";
    } else {
        // Add new product to the cart
        $cart_items[] = array(
            'id' => $product_id,
            'name' => $product_name,
            'price' => $product_price
        );
        
        $_SESSION['cart'] = $cart_items;
        echo "Product added to cart successfully!";
    }
}

// Display the cart contents
echo "<h2>Your Cart</h2>";
echo "<pre>";
print_r($_SESSION['cart']);
echo "</pre>";

// Destroy the session (optional)
if (isset($_GET['logout'])) {
    session_unset();
    session_destroy();
}
?>


<?php
session_start();

if (isset($_SESSION['cart'])) {
    $cart = $_SESSION['cart'];
?>

<h2>Your Shopping Cart</h2>
<table border="1">
    <tr>
        <th>Product ID</th>
        <th>Name</th>
        <th>Price</th>
        <th>Action</th>
    </tr>
    <?php foreach ($cart as $item): ?>
    <tr>
        <td><?php echo $item['id']; ?></td>
        <td><?php echo $item['name']; ?></td>
        <td>$<?php echo number_format($item['price'], 2); ?></td>
        <td><a href="remove_product.php?id=<?php echo $item['id']; ?>">Remove</a></td>
    </tr>
    <?php endforeach; ?>
</table>

<a href="index.php">Continue Shopping</a>

<?php
} else {
    echo "Your cart is empty!";
}
?>


<?php
session_start();

if (isset($_GET['id'])) {
    $product_id = $_GET['id'];
    
    // Remove the product from the cart
    $cart = $_SESSION['cart'];
    foreach ($cart as $key => $item) {
        if ($item['id'] == $product_id) {
            unset($cart[$key]);
            break;
        }
    }
    
    // Re-index the array
    $_SESSION['cart'] = array_values($cart);
}

// Redirect back to cart page
header('Location: view_cart.php');
exit();
?>


<?php
session_start();
?>


$products = [
    1 => ['name' => 'Product A', 'price' => 100],
    2 => ['name' => 'Product B', 'price' => 200],
    // Add more products as needed
];


if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = [];
}


function addToCart($pid) {
    global $products;
    
    if (isset($products[$pid])) {
        if (!isset($_SESSION['cart'][$pid])) {
            $_SESSION['cart'][$pid] = 1;
        } else {
            $_SESSION['cart'][$pid]++;
        }
    }
}

// Example usage:
if (isset($_GET['add'])) {
    addToCart($_GET['add']);
}


function removeFromCart($pid) {
    if (isset($_SESSION['cart'][$pid])) {
        unset($_SESSION['cart'][$pid]);
        
        // Re-index the array keys
        $_SESSION['cart'] = array_values($_SESSION['cart']);
    }
}

// Example usage:
if (isset($_GET['remove'])) {
    removeFromCart($_GET['remove']);
}


echo "<h2>Your Shopping Cart</h2>";
echo "<ul>";

foreach ($_SESSION['cart'] as $key => $quantity) {
    // Assuming $products is an associative array where keys are PIDs
    if (isset($products[$key])) {
        $product = $products[$key];
        echo "<li>";
        echo "{$product['name']} - Quantity: {$quantity} ";
        echo "Price: ₹" . ($product['price'] * $quantity);
        echo " <a href='?remove={$key}'>Remove</a>";
        echo "</li>";
    }
}

echo "</ul>";


if (isset($_GET['logout'])) {
    session_destroy();
    header("Location: index.php");
}


<?php
session_start();

// Sample product data (replace with your database data)
$products = [
    1 => ['name' => 'Product A', 'price' => 100],
    2 => ['name' => 'Product B', 'price' => 200],
];

// Initialize cart session if not exists
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = [];
}

// Function to add item to cart
function addToCart($pid) {
    global $products;
    
    if (isset($products[$pid])) {
        if (!isset($_SESSION['cart'][$pid])) {
            $_SESSION['cart'][$pid] = 1;
        } else {
            $_SESSION['cart'][$pid]++;
        }
    }
}

// Function to remove item from cart
function removeFromCart($pid) {
    if (isset($_SESSION['cart'][$pid])) {
        unset($_SESSION['cart'][$pid]);
        $_SESSION['cart'] = array_values($_SESSION['cart']);
    }
}

// Handle adding items
if (isset($_GET['add'])) {
    addToCart($_GET['add']);
}

// Handle removing items
if (isset($_GET['remove'])) {
    removeFromCart($_GET['remove']);
}

// Display cart contents
echo "<h2>Your Shopping Cart</h2>";
echo "<ul>";

foreach ($_SESSION['cart'] as $key => $quantity) {
    if (isset($products[$key])) {
        $product = $products[$key];
        echo "<li>";
        echo "{$product['name']} - Quantity: {$quantity} ";
        echo "Price: ₹" . ($product['price'] * $quantity);
        echo " <a href='?remove={$key}'>Remove</a>";
        echo "</li>";
    }
}

echo "</ul>";

// Optional: Destroy session on logout
if (isset($_GET['logout'])) {
    session_destroy();
    header("Location: index.php");
}
?>


<?php
// Start the session
session_start();

// Initialize cart if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function addToCart($productId, $productName, $productPrice) {
    global $pdo; // Assuming you have a database connection
    
    // Check if the product already exists in the cart
    foreach ($_SESSION['cart'] as $item) {
        if ($item['id'] == $productId) {
            // If it does, increase quantity
            $_SESSION['cart'][$key]['quantity']++;
            return;
        }
    }
    
    // Add new product to cart
    $item = array(
        'id' => $productId,
        'name' => $productName,
        'price' => $productPrice,
        'quantity' => 1
    );
    
    $_SESSION['cart'][] = $item;
}

// Function to display cart contents
function displayCart() {
    if (empty($_SESSION['cart'])) {
        echo "Your cart is empty.";
        return;
    }
    
    foreach ($_SESSION['cart'] as $item) {
        echo "<div class='cart-item'>";
        echo "<p>Product: {$item['name']}</p>";
        echo "<p>Price: \${$item['price']}</p>";
        echo "<p>Quantity: {$item['quantity']}</p>";
        echo "<a href='removeFromCart.php?id={$item['id']}'>Remove</a>";
        echo "</div>";
    }
}

// Function to remove item from cart
function removeFromCart($productId) {
    foreach ($_SESSION['cart'] as $key => $item) {
        if ($item['id'] == $productId) {
            unset($_SESSION['cart'][$key]);
            return;
        }
    }
    
    // Re-index the array to avoid empty indices
    $_SESSION['cart'] = array_values($_SESSION['cart']);
}

// Function to calculate total cart amount
function calculateTotal() {
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += ($item['price'] * $item['quantity']);
    }
    return $total;
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
    <style>
        .cart-item {
            border: 1px solid #ddd;
            padding: 10px;
            margin-bottom: 10px;
        }
    </style>
</head>
<body>
    <?php
    // Example usage:
    
    // Add items to cart
    addToCart(1, 'Product 1', 19.99);
    addToCart(2, 'Product 2', 29.99);
    
    // Display cart contents
    displayCart();
    
    // Calculate and display total amount
    echo "<h3>Total: \${" . calculateTotal() . "}</h3>";
    ?>
</body>
</html>


<?php
// Initialize session
session_start();

// Check if cart exists, if not initialize it
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function addToCart($product_id, $name, $price) {
    global $cart;

    // Check if product is already in the cart
    $found = false;
    foreach ($cart as &$item) {
        if ($item['product_id'] == $product_id) {
            $item['quantity']++;
            $found = true;
            break;
        }
    }

    if (!$found) {
        // Add new product to cart
        $new_item = array(
            'product_id' => $product_id,
            'name' => $name,
            'price' => $price,
            'quantity' => 1
        );
        array_push($cart, $new_item);
    }
}

// Function to remove item from cart
function removeFromCart($product_id) {
    global $cart;

    // Remove product from cart
    foreach ($cart as $key => $item) {
        if ($item['product_id'] == $product_id) {
            unset($cart[$key]);
            break;
        }
    }

    // Re-index array keys
    $cart = array_values($cart);
}

// Function to calculate total price and quantity
function calculateTotals() {
    global $cart;

    $total_price = 0;
    $total_quantity = 0;

    foreach ($cart as $item) {
        $total_price += $item['price'] * $item['quantity'];
        $total_quantity += $item['quantity'];
    }

    return array('total_price' => $total_price, 'total_quantity' => $total_quantity);
}

// Function to display cart contents
function displayCart() {
    global $cart;

    if (empty($cart)) {
        echo "<p>Your cart is empty.</p>";
        return;
    }

    foreach ($cart as $item) {
        echo "<div class='cart-item'>";
        echo "<h3>" . $item['name'] . "</h3>";
        echo "<p>Price: $" . number_format($item['price'], 2) . "</p>";
        echo "<p>Quantity: " . $item['quantity'] . "</p>";
        echo "<a href='remove.php?id=" . $item['product_id'] . "' class='remove-btn'>Remove</a>";
        echo "</div>";
    }

    // Calculate totals
    $totals = calculateTotals();
    echo "<div class='cart-total'>";
    echo "<h3>Total Items: " . $totals['total_quantity'] . "</h3>";
    echo "<h3>Grand Total: $" . number_format($totals['total_price'], 2) . "</h3>";
    echo "</div>";
}
?>


<?php
session_start();

$product_id = $_GET['id'];
// Get product details from database or another source
$name = "Product Name";
$price = 99.99;

addToCart($product_id, $name, $price);
header("Location: cart.php");
?>


<?php
session_start();

$product_id = $_GET['id'];
removeFromCart($product_id);
header("Location: cart.php");
?>


<?php
session_start();
displayCart();
?>


<?php
session_start();

if (isset($_GET['action']) && $_GET['action'] == 'add') {
    if (!isset($_POST['item_id']) || !isset($_POST['quantity'])) {
        $_SESSION['message'] = "Error: Please enter item ID and quantity.";
        header("Location: cart.php");
        exit();
    }

    $item_id = intval($_POST['item_id']);
    $quantity = intval($_POST['quantity']);

    if ($item_id <= 0 || $quantity <= 0) {
        $_SESSION['message'] = "Error: Item ID and quantity must be positive integers.";
        header("Location: cart.php");
        exit();
    }

    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }

    $itemFound = false;
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['id'] == $item_id) {
            $item['quantity'] += $quantity;
            $itemFound = true;
            break;
        }
    }

    if (!$itemFound) {
        $_SESSION['cart'][] = array('id' => $item_id, 'quantity' => $quantity);
    }

    $_SESSION['message'] = "Item added to cart successfully!";
    header("Location: cart.php");
    exit();
}

// Remove item logic would go here similarly...

?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <?php
    if (isset($_SESSION['message'])) {
        echo "<p>" . $_SESSION['message'] . "</p>";
        unset($_SESSION['message']);
    }
    ?>

    <h1>Add Item to Cart</h1>
    <form action="cart.php?action=add" method="post">
        Item ID: <input type="text" name="item_id"><br>
        Quantity: <input type="text" name="quantity"><br>
        <input type="submit" value="Add to Cart">
    </form>

    <h2>Your Cart</h2>
    <?php
    if (empty($_SESSION['cart'])) {
        echo "<p>Cart is empty.</p>";
    } else {
        foreach ($_SESSION['cart'] as $item) {
            echo "Item ID: " . $item['id'] . ", Quantity: " . $item['quantity'] . "<br>";
            // Add remove buttons here
        }
    }
    ?>
</body>
</html>


<?php
// Start the session
if (session_status() == PHP_SESSION_NONE) {
    session_start();
}

// Initialize cart if not set
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array(
        'items' => array(),
        'total_items' => 0,
        'grand_total' => 0.00
    );
}

// Add item to cart
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get product details from form
    $product_id = isset($_POST['product_id']) ? intval($_POST['product_id']) : '';
    $product_name = isset($_POST['product_name']) ? $_POST['product_name'] : '';
    $product_price = isset($_POST['product_price']) ? floatval($_POST['product_price']) : 0.00;
    $quantity = isset($_POST['quantity']) ? intval($_POST['quantity']) : 1;

    // Check if product is already in cart
    $found_product = false;
    foreach ($_SESSION['cart']['items'] as &$item) {
        if ($item['product_id'] == $product_id) {
            $found_product = true;
            $item['quantity'] += $quantity;
            $item['total_price'] = $item['price'] * $item['quantity'];
            break;
        }
    }

    // If not found, add new product to cart
    if (!$found_product) {
        $_SESSION['cart']['items'][] = array(
            'product_id' => $product_id,
            'product_name' => $product_name,
            'price' => $product_price,
            'quantity' => $quantity,
            'total_price' => $product_price * $quantity
        );
    }

    // Update totals
    $_SESSION['cart']['total_items'] += $quantity;
    $_SESSION['cart']['grand_total'] += $product_price * $quantity;
}

// Calculate grand total
$_SESSION['cart']['grand_total'] = 0.00;
foreach ($_SESSION['cart']['items'] as $item) {
    $_SESSION['cart']['grand_total'] += $item['total_price'];
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
    <style>
        table { width: 100%; border-collapse: collapse; margin: 20px 0; }
        th, td { padding: 8px; text-align: left; border-bottom: 1px solid #ddd; }
        tr:hover { background-color: #f5f5f5; }
    </style>
</head>
<body>
    <h1>Shopping Cart</h1>
    
    <?php if (!empty($_SESSION['cart']['items'])) : ?>
        <table>
            <thead>
                <tr>
                    <th>Product Name</th>
                    <th>Price</th>
                    <th>Quantity</th>
                    <th>Total Price</th>
                </tr>
            </thead>
            <tbody>
                <?php foreach ($_SESSION['cart']['items'] as $item) : ?>
                    <tr>
                        <td><?php echo $item['product_name']; ?></td>
                        <td>$<?php echo number_format($item['price'], 2); ?></td>
                        <td><?php echo $item['quantity']; ?></td>
                        <td>$<?php echo number_format($item['total_price'], 2); ?></td>
                    </tr>
                <?php endforeach; ?>
            </tbody>
        </table>

        <h3>Grand Total: $<?php echo number_format($_SESSION['cart']['grand_total'], 2); ?></h3>
    <?php else : ?>
        <p>Your cart is empty.</p>
    <?php endif; ?>

    <!-- Add item form -->
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        Product ID: <input type="text" name="product_id"><br>
        Product Name: <input type="text" name="product_name"><br>
        Price: <input type="number" step="0.01" name="product_price"><br>
        Quantity: <input type="number" min="1" name="quantity" value="1"><br>
        <input type="submit" value="Add to Cart">
    </form>

    <!-- Destroy session -->
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <input type="hidden" name="destroy_session" value="1">
        <input type="submit" value="Clear Cart and Logout">
    </form>
</body>
</html>

<?php
// Destroy session if requested
if (isset($_POST['destroy_session'])) {
    session_destroy();
}
?>


<?php
// Start the session
session_start();

// Function to add item to cart
function add_to_cart($product_id) {
    // If cart is not set, initialize it as an array
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }

    // Add product ID to cart if it's not already there
    if (array_search($product_id, $_SESSION['cart']) === false) {
        array_push($_SESSION['cart'], $product_id);
    } else {
        echo "Product is already in the cart!";
    }
}

// Function to remove item from cart
function remove_from_cart($product_id) {
    // Check if cart exists and has items
    if (isset($_SESSION['cart']) && !empty($_SESSION['cart'])) {
        $key = array_search($product_id, $_SESSION['cart']);
        if ($key !== false) {
            unset($_SESSION['cart'][$key]);
            // Re-index the array
            $_SESSION['cart'] = array_values($_SESSION['cart']);
        }
    }
}

// Function to display cart items
function display_cart() {
    if (isset($_SESSION['cart']) && !empty($_SESSION['cart'])) {
        echo "Items in your cart: ";
        foreach ($_SESSION['cart'] as $item) {
            echo "<br>Product ID: $item";
        }
    } else {
        echo "Your cart is empty!";
    }
}

// Example usage:
if (isset($_GET['action'])) {
    switch ($_GET['action']) {
        case 'add':
            add_to_cart($_GET['product_id']);
            break;
        case 'remove':
            remove_from_cart($_GET['product_id']);
            break;
    }
}

display_cart();
?>


<?php
// Initialize the session
session_start();

// Set up the cart structure in the session if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add an item to the cart
function addToCart($productId, $productName, $price) {
    // Check if the product is already in the cart
    $found = false;
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['product_id'] == $productId) {
            $item['quantity']++;
            $item['total'] = $item['price'] * $item['quantity'];
            $found = true;
            break;
        }
    }
    
    // If not found, add it to the cart
    if (!$found) {
        $_SESSION['cart'][] = array(
            'product_id' => $productId,
            'product_name' => $productName,
            'price' => $price,
            'quantity' => 1,
            'total' => $price
        );
    }
    
    // Recalculate the total price
    calculateCartTotal();
}

// Function to calculate the cart total
function calculateCartTotal() {
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += $item['total'];
    }
    $_SESSION['cart_total'] = $total;
}

// Function to remove an item from the cart
function removeFromCart($productId) {
    // Remove all instances of the product
    foreach ($_SESSION['cart'] as $key => &$item) {
        if ($item['product_id'] == $productId) {
            unset($_SESSION['cart'][$key]);
        }
    }
    
    // Re-index the array keys
    $_SESSION['cart'] = array_values($_SESSION['cart']);
    
    // Recalculate the total price
    calculateCartTotal();
}

// Display the cart contents
echo "<h2>Shopping Cart</h2>";
if (!empty($_SESSION['cart'])) {
    echo "<table border='1'>";
    echo "<tr><th>Product Name</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>";
    
    foreach ($_SESSION['cart'] as $item) {
        echo "<tr>";
        echo "<td>" . $item['product_name'] . "</td>";
        echo "<td>$" . number_format($item['price'], 2) . "</td>";
        echo "<td>" . $item['quantity'] . "</td>";
        echo "<td>$" . number_format($item['total'], 2) . "</td>";
        echo "<td><a href='?remove=" . $item['product_id'] . "'>Remove</a></td>";
        echo "</tr>";
    }
    
    echo "</table>";
    echo "<p>Total: $" . number_format($_SESSION['cart_total'], 2) . "</p>";
} else {
    echo "<p>Your cart is empty.</p>";
}

// Handle removing items
if (isset($_GET['remove'])) {
    removeFromCart($_GET['remove']);
}
?>


// Example product data
$productId = 1;
$productName = "Sample Product";
$price = 9.99;

addToCart($productId, $productName, $price);


<?php
session_start(); // Start the session

// Initialize cart if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Connect to database
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "myDB";

$conn = mysqli_connect($servername, $username, $password, $dbname);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Add item to cart if add button is clicked
if (isset($_POST['add_to_cart'])) {
    // Get product details from the database
    $product_id = mysqli_real_escape_string($conn, $_POST['product_id']);
    $quantity = mysqli_real_escape_string($conn, $_POST['quantity']);

    $sql = "SELECT * FROM products WHERE id = $product_id";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) == 1) {
        $product = mysqli_fetch_assoc($result);
        
        // Prepare product array
        $product_array = array(
            'id' => $product['id'],
            'name' => $product['name'],
            'price' => $product['price'],
            'quantity' => $quantity
        );
        
        // Check if product exists in cart
        $found = false;
        foreach ($_SESSION['cart'] as $key => $value) {
            if ($value['id'] == $product_array['id']) {
                $_SESSION['cart'][$key]['quantity'] += $product_array['quantity'];
                $found = true;
                break;
            }
        }
        
        // If product not found, add it to cart
        if (!$found) {
            $_SESSION['cart'][] = $product_array;
        }
    } else {
        echo "Product does not exist!";
    }
}

// Update cart quantity if update button is clicked
if (isset($_POST['update_cart'])) {
    foreach ($_SESSION['cart'] as $key => $value) {
        $quantity = mysqli_real_escape_string($conn, $_POST[$value['id']]);
        $_SESSION['cart'][$key]['quantity'] = $quantity;
    }
}

// Remove item from cart if delete button is clicked
if (isset($_GET['remove'])) {
    foreach ($_SESSION['cart'] as $key => $value) {
        if ($value['id'] == $_GET['remove']) {
            unset($_SESSION['cart'][$key]);
            break;
        }
    }
}

// Display cart contents
echo "<h2>Your Cart</h2>";
echo "<form method='post'>";
echo "<table border='1'>";
echo "<tr><th>Product Name</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>";

$total = 0;
foreach ($_SESSION['cart'] as $key => $value) {
    $total += ($value['price'] * $value['quantity']);
    echo "<tr>";
    echo "<td>" . $value['name'] . "</td>";
    echo "<td>$" . number_format($value['price'], 2) . "</td>";
    echo "<td><input type='number' name='" . $value['id'] . "' value='" . $value['quantity'] . "'></td>";
    echo "<td>$" . number_format(($value['price'] * $value['quantity']), 2) . "</td>";
    echo "<td><a href='?remove=" . $value['id'] . "'>Remove</a></td>";
    echo "</tr>";
}

echo "<tr><td colspan='3'><button type='submit' name='update_cart'>Update Cart</button></td>";
echo "<td colspan='2'><strong>Total: $" . number_format($total, 2) . "</strong></td>";
echo "</tr>";
echo "</table>";
echo "</form>";

// Close database connection
mysqli_close($conn);
?>


<?php
// Start the session
session_start();

// Check if the cart exists in the session. If not, initialize it as an empty array.
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function addToCart($productId, $productName, $price) {
    global $product_id;
    
    // Check if product already exists in the cart
    if (isset($_SESSION['cart'][$productId])) {
        // If exists, increment quantity
        $_SESSION['cart'][$productId]['quantity']++;
    } else {
        // If not exists, add new product to cart
        $_SESSION['cart'][$productId] = array(
            'product_id' => $productId,
            'product_name' => $productName,
            'price' => $price,
            'quantity' => 1
        );
    }
}

// Function to remove item from cart
function removeFromCart($productId) {
    if (isset($_SESSION['cart'][$productId])) {
        unset($_SESSION['cart'][$productId]);
        // Re-index the cart array
        $_SESSION['cart'] = array_values($_SESSION['cart']);
    }
}

// Function to update quantity of an item in cart
function updateQuantity($productId, $newQuantity) {
    if (isset($_SESSION['cart'][$productId])) {
        if ($newQuantity > 0) {
            $_SESSION['cart'][$productId]['quantity'] = $newQuantity;
        }
    }
}

// Function to display cart contents
function displayCart() {
    if (!empty($_SESSION['cart'])) {
        echo "<table border='1'>";
        echo "<tr><th>Product ID</th><th>Product Name</th><th>Price</th><th>Quantity</th><th>Total</th></tr>";
        
        $totalPrice = 0;
        foreach ($_SESSION['cart'] as $item) {
            $itemTotal = $item['price'] * $item['quantity'];
            $totalPrice += $itemTotal;
            
            echo "<tr>";
            echo "<td>" . $item['product_id'] . "</td>";
            echo "<td>" . $item['product_name'] . "</td>";
            echo "<td>" . $item['price'] . "</td>";
            echo "<td>" . $item['quantity'] . "</td>";
            echo "<td>" . $itemTotal . "</td>";
            echo "</tr>";
        }
        
        echo "<tr><td colspan='4'><strong>Total:</strong></td><td><strong>" . $totalPrice . "</strong></td></tr>";
        echo "</table>";
    } else {
        echo "Your cart is empty!";
    }
}

// Example usage:
// Add an item to the cart
addToCart(1, 'Product 1', 20.00);

// Remove an item from the cart
removeFromCart(1);

// Update quantity of an item
updateQuantity(1, 3);

// Display the cart contents
displayCart();

?>


<?php
// Initialize the session
session_start();

// Check if the cart exists in the session, if not initialize it
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Sample product data (in a real application, this would come from a database)
$products = array(
    1 => array('name' => 'Product 1', 'price' => 10.00),
    2 => array('name' => 'Product 2', 'price' => 20.00),
    3 => array('name' => 'Product 3', 'price' => 30.00)
);

// Add item to cart
if (isset($_POST['add_to_cart'])) {
    $product_id = intval($_POST['product_id']);
    $quantity = intval($_POST['quantity']);

    if ($quantity > 0) {
        // Check if the product is already in the cart
        if (!isset($_SESSION['cart'][$product_id])) {
            $_SESSION['cart'][$product_id] = array(
                'product_id' => $product_id,
                'name' => $products[$product_id]['name'],
                'price' => $products[$product_id]['price'],
                'quantity' => 1
            );
        } else {
            // Update the quantity if the product is already in the cart
            $_SESSION['cart'][$product_id]['quantity'] += $quantity;
        }
    }
}

// Remove item from cart
if (isset($_GET['remove'])) {
    $product_id = intval($_GET['remove']);
    unset($_SESSION['cart'][$product_id]);
}

// Update quantity of an item in the cart
if (isset($_POST['update_quantity'])) {
    $product_id = intval($_POST['product_id']);
    $quantity = intval($_POST['quantity']);

    if ($quantity > 0 && isset($_SESSION['cart'][$product_id])) {
        $_SESSION['cart'][$product_id]['quantity'] = $quantity;
    }
}

// Logout and destroy the session
if (isset($_GET['logout'])) {
    session_unset();
    session_destroy();
    header("Location: login.php");
    exit();
}
?>


<?php
// Start the session
session_start();

class CartSessionHandler {
    private $cart;

    public function __construct() {
        if (!isset($_SESSION['cart'])) {
            $_SESSION['cart'] = array();
        }
        $this->cart = &$_SESSION['cart'];
    }

    // Add item to cart
    public function addToCart($item_id, $item_name, $price, $quantity = 1) {
        if (isset($this->cart[$item_id])) {
            // If item exists in cart, increment quantity
            $this->cart[$item_id]['quantity'] += $quantity;
        } else {
            // Add new item to cart
            $this->cart[$item_id] = array(
                'id' => $item_id,
                'name' => $item_name,
                'price' => $price,
                'quantity' => $quantity
            );
        }
    }

    // Remove item from cart
    public function removeFromCart($item_id) {
        if (isset($this->cart[$item_id])) {
            unset($this->cart[$item_id]);
            // Re-index the array to maintain numeric keys
            $this->cart = array_values($this->cart);
        }
    }

    // Calculate total price of cart items
    public function calculateTotal() {
        $total = 0;
        foreach ($this->cart as $item) {
            $total += ($item['price'] * $item['quantity']);
        }
        return $total;
    }

    // Clear all items from cart
    public function clearCart() {
        unset($_SESSION['cart']);
        $_SESSION['cart'] = array();
        $this->cart = &$_SESSION['cart'];
    }

    // Get all items in cart
    public function getCartItems() {
        return $this->cart;
    }
}

// Usage example:
$cartHandler = new CartSessionHandler();

// Add item to cart
$cartHandler->addToCart(1, 'Product 1', 29.99, 2);
$cartHandler->addToCart(2, 'Product 2', 49.99, 1);

// Remove item from cart
$cartHandler->removeFromCart(1);

// Display cart contents
echo "<h3>Shopping Cart</h3>";
foreach ($cartHandler->getCartItems() as $item) {
    echo "Item: {$item['name']} - Quantity: {$item['quantity']} - Price: \${$item['price']}</br>";
}

// Calculate and display total price
$total = $cartHandler->calculateTotal();
echo "<h3>Total: \$$total</h3>";

// Clear cart
// $cartHandler->clearCart();

?>


<?php
// Start the session
session_start();

// Check if the cart session exists, if not, initialize it
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add an item to the cart
function add_to_cart($product_id, $product_name, $price) {
    global $cart;
    
    // Check if the product is already in the cart
    $found = false;
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['product_id'] == $product_id) {
            $item['quantity']++;
            $found = true;
            break;
        }
    }
    
    // If not found, add it to the cart
    if (!$found) {
        $_SESSION['cart'][] = array(
            'product_id' => $product_id,
            'product_name' => $product_name,
            'price' => $price,
            'quantity' => 1
        );
    }
}

// Function to update the quantity of an item in the cart
function update_cart_quantity($item_index, $new_quantity) {
    if (isset($_SESSION['cart'][$item_index])) {
        $_SESSION['cart'][$item_index]['quantity'] = max(0, $new_quantity);
    }
}

// Function to remove an item from the cart
function remove_from_cart($item_index) {
    if (isset($_SESSION['cart'][$item_index])) {
        unset($_SESSION['cart'][$item_index]);
        // Re-index the array
        $_SESSION['cart'] = array_values($_SESSION['cart']);
    }
}

// Function to display the contents of the cart
function display_cart() {
    if (!empty($_SESSION['cart'])) {
        echo "<table>";
        echo "<tr><th>Product</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>";
        foreach ($_SESSION['cart'] as $index => $item) {
            $total = $item['price'] * $item['quantity'];
            echo "<tr>";
            echo "<td>" . $item['product_name'] . "</td>";
            echo "<td>$" . number_format($item['price'], 2) . "</td>";
            echo "<td><input type='number' min='1' value='" . $item['quantity'] . "' onChange='updateQuantity(" . $index . ", this.value)'></td>";
            echo "<td>$" . number_format($total, 2) . "</td>";
            echo "<td><button onClick='removeItem(" . $index . ")'>Remove</button></td>";
            echo "</tr>";
        }
        echo "</table>";
    } else {
        echo "Your cart is empty.";
    }
}

// Example usage:
if (isset($_POST['add_to_cart'])) {
    add_to_cart(1, 'Product 1', 29.99);
} elseif (isset($_GET['update_quantity'])) {
    update_cart_quantity($_GET['item_index'], $_GET['quantity']);
} elseif (isset($_GET['remove_item'])) {
    remove_from_cart($_GET['item_index']);
}

// Display the cart
display_cart();
?>


<?php
session_start();
?>


function addToCart($item_id, $item_name, $price) {
    // Check if the item is already in the cart
    if (isset($_SESSION['cart'][$item_id])) {
        // If the item exists, increase its quantity by 1
        $_SESSION['cart'][$item_id]['quantity']++;
    } else {
        // If the item doesn't exist, add it to the cart
        $_SESSION['cart'][$item_id] = array(
            'id' => $item_id,
            'name' => $item_name,
            'price' => $price,
            'quantity' => 1
        );
    }
}


function updateQuantity($item_id, $new_quantity) {
    if (isset($_SESSION['cart'][$item_id])) {
        $_SESSION['cart'][$item_id]['quantity'] = $new_quantity;
    }
}


function removeFromCart($item_id) {
    if (isset($_SESSION['cart'][$item_id])) {
        unset($_SESSION['cart'][$item_id]);
    } else {
        // Handle error: Item not found in cart
        echo "Item not found in cart.";
    }
}


function emptyCart() {
    $_SESSION['cart'] = array();
    // or to destroy the session completely:
    // session_unset();
    // session_destroy();
}


if (!empty($_SESSION['cart'])) {
    echo "<h2>Shopping Cart</h2>";
    foreach ($_SESSION['cart'] as $item) {
        echo "Item ID: " . $item['id'] . "<br />";
        echo "Name: " . $item['name'] . "<br />";
        echo "Price: $" . $item['price'] . "<br />";
        echo "Quantity: " . $item['quantity'] . "<br /><br />";
    }
} else {
    echo "Your cart is empty.";
}


$total = 0;
if (!empty($_SESSION['cart'])) {
    foreach ($_SESSION['cart'] as $item) {
        $total += ($item['price'] * $item['quantity']);
    }
}
echo "Total: $" . number_format($total, 2);


<?php
session_start();

// Sample product data (you would typically get this from a database)
$products = array(
    1 => array('name' => 'Product 1', 'price' => 19.99),
    2 => array('name' => 'Product 2', 'price' => 29.99),
    3 => array('name' => 'Product 3', 'price' => 9.99)
);

// Check if an item is being added to the cart
if (isset($_GET['action'])) {
    $item_id = $_GET['id'];
    switch ($_GET['action']) {
        case 'add':
            addToCart($item_id, $products[$item_id]['name'], $products[$item_id]['price']);
            break;
        case 'remove':
            removeFromCart($item_id);
            break;
        case 'empty':
            emptyCart();
            break;
    }
}

// Display the cart contents
echo "<h1>Shopping Cart Example</h1>";
displayCart();

// Display product catalog
echo "<h2>Product Catalog</h2>";
foreach ($products as $id => $product) {
    echo "<div class='product'>";
    echo "ID: $id | Name: {$product['name']} | Price: $" . number_format($product['price'], 2);
    echo "<a href='cart.php?action=add&id=$id'>Add to Cart</a>";
    echo "</div>";
}
?>


<?php
// Start the session
session_start();

// Initialize cart if not already set
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function addToCart($item_id, $item_name, $price) {
    global $cart;
    
    // Check if item is already in cart
    $found = false;
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['id'] == $item_id) {
            $item['quantity']++;
            $found = true;
            break;
        }
    }
    
    if (!$found) {
        // Add new item to cart
        $item = array(
            'id' => $item_id,
            'name' => $item_name,
            'price' => $price,
            'quantity' => 1
        );
        $_SESSION['cart'][] = $item;
    }
}

// Function to get cart total
function getCartTotal() {
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += ($item['price'] * $item['quantity']);
    }
    return $total;
}

// Function to remove item from cart
function removeFromCart($item_id) {
    global $cart;
    
    // Loop through cart items and remove matching item
    foreach ($_SESSION['cart'] as $key => $item) {
        if ($item['id'] == $item_id) {
            unset($_SESSION['cart'][$key]);
            break;
        }
    }
    
    // Re-index the cart array
    $_SESSION['cart'] = array_values($_SESSION['cart']);
}

// Add sample items to cart
if (isset($_POST['add_to_cart'])) {
    addToCart(1, 'Product 1', 19.99);
} elseif (isset($_POST['remove_from_cart'])) {
    removeFromCart(1);
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <h2>Your Shopping Cart</h2>
    
    <?php if (!empty($_SESSION['cart'])): ?>
        <table border="1">
            <tr>
                <th>Item Name</th>
                <th>Price</th>
                <th>Quantity</th>
                <th>Total</th>
                <th>Action</th>
            </tr>
            <?php foreach ($_SESSION['cart'] as $item): ?>
                <tr>
                    <td><?php echo $item['name']; ?></td>
                    <td>$<?php echo number_format($item['price'], 2); ?></td>
                    <td><?php echo $item['quantity']; ?></td>
                    <td>$<?php echo number_format($item['price'] * $item['quantity'], 2); ?></td>
                    <td>
                        <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
                            <input type="hidden" name="remove_item_id" value="<?php echo $item['id']; ?>">
                            <button type="submit" name="remove_from_cart">Remove</button>
                        </form>
                    </td>
                </tr>
            <?php endforeach; ?>
        </table>
        
        <p><strong>Total: $<?php echo number_format(getCartTotal(), 2); ?></strong></p>
    <?php else: ?>
        <p>Your cart is empty.</p>
    <?php endif; ?>

    <!-- Add to Cart Form -->
    <h3>Add Item to Cart</h3>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <input type="hidden" name="add_item_id" value="1">
        <button type="submit" name="add_to_cart">Add Product 1 to Cart</button>
    </form>
</body>
</html>


   if (!isset($_SESSION['cart'])) {
       $_SESSION['cart'] = array();
   }
   

4. **Adding Items to Cart:**
   Retrieve product details (ID and quantity) from POST data. Validate these inputs if necessary. Check if the product is already in the cart; if so, update its quantity; otherwise, add a new entry.

5. **Removing Items:**
   Use the product ID from POST data to remove the corresponding item from the session array with `unset()`.

6. **Updating Quantities:**
   Retrieve the product ID and new quantity. Loop through the cart items to find the product and update its quantity.

7. **Displaying the Cart:**
   Loop through each item in the cart, displaying details like name, price, quantity, and total. Calculate the grand total by summing individual totals.

8. **Security Considerations:**
   Sanitize inputs to prevent injection attacks, especially if interacting with databases. Ensure session security measures are in place.

9. **Session Management:**
   Set session lifetime using `ini_set()` or adjust settings in `php.ini`. Properly close and destroy sessions when necessary.

10. **Handle Empty Cart:**
    Display a message if the cart is empty to inform the user.

Here's an example implementation:



<?php
// Start session if not already started
if (!isset($_SESSION)) {
    session_start();
}

// Set session parameters (optional)
ini_set('session.cookie_httponly', 1);
ini_set('session.cookie_secure', 1); // if using HTTPS

// Initialize cart session if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add item to cart
if (isset($_POST['add_to_cart'])) {
    $item_id = intval($_POST['item_id']);
    
    // Get current cart items
    $cart_items = $_SESSION['cart'];
    
    // Check if item already exists in cart
    if (!array_key_exists($item_id, $cart_items)) {
        // Add new item with quantity 1
        $cart_items[$item_id] = array(
            'id' => $item_id,
            'name' => 'Product ' . $item_id, // You can replace this with actual product name from database
            'price' => 10.99 * $item_id, // Replace with actual price
            'quantity' => 1
        );
    } else {
        // Increment quantity if item already exists
        $cart_items[$item_id]['quantity']++;
    }
    
    // Update cart session
    $_SESSION['cart'] = $cart_items;
}

// Remove item from cart
if (isset($_POST['remove_from_cart'])) {
    $item_id = intval($_POST['item_id']);
    
    // Get current cart items
    $cart_items = $_SESSION['cart'];
    
    // Remove the item if exists
    if (array_key_exists($item_id, $cart_items)) {
        unset($cart_items[$item_id]);
        
        // Re-index array keys
        $_SESSION['cart'] = array_values($cart_items);
    }
}

// Display cart contents
echo "<h2>Shopping Cart</h2>";
echo "<table border='1'>";
echo "<tr><th>Product Name</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>";

foreach ($_SESSION['cart'] as $item) {
    $total = $item['price'] * $item['quantity'];
    
    echo "<tr>";
    echo "<td>{$item['name']}</td>";
    echo "<td>$$item[price]</td>";
    echo "<td>$item[quantity]</td>";
    echo "<td>$$total</td>";
    echo "<td><form method='post'><input type='hidden' name='item_id' value='{$item['id']}'>";
    echo "<button type='submit' name='remove_from_cart'>Remove</button></form></td>";
    echo "</tr>";
}

echo "</table>";

// Form to add items to cart
echo "<h3>Add Item to Cart</h3>";
echo "<form method='post'>";
echo "<input type='text' name='item_id' placeholder='Enter item ID'>";
echo "<button type='submit' name='add_to_cart'>Add to Cart</button>";
echo "</form>";

// Optional: Display total price
$total_price = 0;
foreach ($_SESSION['cart'] as $item) {
    $total_price += $item['price'] * $item['quantity'];
}

echo "<p>Total Price: $$total_price</p>";
?>


<?php
session_start();

// Initialize cart if not exists
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Sample product catalog (array of products)
$products = array(
    1 => array('name' => 'Product 1', 'price' => 25.00),
    2 => array('name' => 'Product 2', 'price' => 35.00),
    3 => array('name' => 'Product 3', 'price' => 45.00)
);

// Handle adding to cart
if (isset($_GET['action']) && $_GET['action'] == 'add') {
    $productId = intval($_GET['id']);
    
    if (!empty($products[$productId])) {
        if (isset($_SESSION['cart'][$productId])) {
            // Increment quantity
            $_SESSION['cart'][$productId]['quantity']++;
        } else {
            // Add new product to cart
            $_SESSION['cart'][$productId] = array(
                'name' => $products[$productId]['name'],
                'price' => $products[$productId]['price'],
                'quantity' => 1
            );
        }
    }
}

// Handle removing from cart
if (isset($_GET['action']) && $_GET['action'] == 'remove') {
    $productId = intval($_GET['id']);
    
    if (!empty($products[$productId])) {
        if (isset($_SESSION['cart'][$productId])) {
            // Remove the product from cart
            unset($_SESSION['cart'][$productId]);
        }
    }
}

// Calculate total price
$totalPrice = 0.00;
foreach ($_SESSION['cart'] as $item) {
    $totalPrice += ($item['price'] * $item['quantity']);
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
    <style>
        body { font-family: Arial, sans-serif; }
        .cart-item { margin: 10px 0; padding: 5px; border-bottom: 1px solid #ccc; }
        .total-price { font-weight: bold; }
    </style>
</head>
<body>
    <h2>Shopping Cart</h2>

    <!-- Product Catalog -->
    <div style="margin-bottom: 20px;">
        <?php foreach ($products as $id => $product): ?>
            <div style="margin-bottom: 5px;">
                <?php echo $product['name']; ?> - $<?php echo number_format($product['price'], 2); ?>
                <a href="?action=add&id=<?php echo $id; ?>">Add to Cart</a>
            </div>
        <?php endforeach; ?>
    </div>

    <!-- Display Cart Items -->
    <?php if (!empty($_SESSION['cart'])): ?>
        <?php foreach ($_SESSION['cart'] as $id => $item): ?>
            <div class="cart-item">
                <?php echo $item['name']; ?> - $<?php echo number_format($item['price'], 2); ?>
                (Quantity: <?php echo $item['quantity']; ?>)
                <a href="?action=remove&id=<?php echo $id; ?>">Remove</a>
            </div>
        <?php endforeach; ?>

        <!-- Total Price -->
        <div class="total-price">
            Total: $<?php echo number_format($totalPrice, 2); ?>
        </div>
    <?php else: ?>
        <p>Your cart is empty.</p>
    <?php endif; ?>
</body>
</html>


<?php
// Start the session
session_start();

// Function to add item to cart
function addToCart($productId, $quantity = 1) {
    // Check if the cart exists in the session
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }

    // Check if the product is already in the cart
    if (isset($_SESSION['cart'][$productId])) {
        // Increment quantity
        $_SESSION['cart'][$productId] += $quantity;
    } else {
        // Add new product to cart
        $_SESSION['cart'][$productId] = $quantity;
    }

    return true;
}

// Function to update item quantity in cart
function updateCart($productId, $newQuantity) {
    if (isset($_SESSION['cart'][$productId])) {
        $_SESSION['cart'][$productId] = $newQuantity;
        return true;
    }
    return false;
}

// Function to remove item from cart
function removeFromCart($productId) {
    if (isset($_SESSION['cart'][$productId])) {
        unset($_SESSION['cart'][$productId]);
        return true;
    }
    return false;
}

// Function to display cart contents
function displayCart() {
    if (!empty($_SESSION['cart'])) {
        echo "<h2>Shopping Cart</h2>";
        echo "<ul>";
        foreach ($_SESSION['cart'] as $productId => $quantity) {
            echo "<li>Product ID: $productId, Quantity: $quantity</li>";
        }
        echo "</ul>";
    } else {
        echo "Your cart is empty.";
    }
}

// Example usage:

// Add an item to the cart
addToCart(123, 2);

// Update quantity of an item in the cart
updateCart(123, 5);

// Remove an item from the cart
removeFromCart(456);

// Display the contents of the cart
displayCart();

// Clear the cart when user logs out or abandons session
function clearCart() {
    unset($_SESSION['cart']);
    session_unset();
    session_destroy();
}
?>


<?php
// Start the session
session_start();

// Initialize cart if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add item to cart
function addToCart($productId, $name, $price) {
    global $db;
    
    // Check if product already exists in cart
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['product_id'] == $productId) {
            $item['quantity']++;
            return;
        }
    }
    
    // Add new item to cart
    $_SESSION['cart'][] = array(
        'product_id' => $productId,
        'name' => $name,
        'price' => $price,
        'quantity' => 1,
        'total' => $price * 1
    );
}

// Remove item from cart
function removeFromCart($productId) {
    foreach ($_SESSION['cart'] as $key => &$item) {
        if ($item['product_id'] == $productId) {
            unset($_SESSION['cart'][$key]);
            // Re-index the array
            $_SESSION['cart'] = array_values($_SESSION['cart']);
            return;
        }
    }
}

// Calculate total amount in cart
function calculateTotal() {
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += $item['total'];
    }
    return $total;
}

// Display cart items
echo "<h2>Your Cart</h2>";
echo "<table border='1'>";
echo "<tr><th>Product Name</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>";

foreach ($_SESSION['cart'] as $item) {
    echo "<tr>";
    echo "<td>" . $item['name'] . "</td>";
    echo "<td>Rs." . number_format($item['price'], 2) . "</td>";
    echo "<td>" . $item['quantity'] . "</td>";
    echo "<td>Rs." . number_format($item['total'], 2) . "</td>";
    echo "<td><a href='cart.php?action=remove&id=" . $item['product_id'] . "'>Remove</a></td>";
    echo "</tr>";
}

echo "</table>";
echo "<h3>Total Amount: Rs." . number_format(calculateTotal(), 2) . "</h3>";

// Handle actions
if (isset($_GET['action'])) {
    switch ($_GET['action']) {
        case 'add':
            // Add product to cart
            $productId = $_GET['id'];
            // Get product details from database
            $sql = "SELECT * FROM products WHERE id = $productId";
            $result = mysqli_query($db, $sql);
            $product = mysqli_fetch_assoc($result);
            
            addToCart($product['id'], $product['name'], $product['price']);
            break;
            
        case 'remove':
            // Remove product from cart
            $productId = $_GET['id'];
            removeFromCart($productId);
            break;
    }
}
?>


<?php
session_start();

// Initialize cart if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array(
        'items' => array(),
        'currency' => 'USD'
    );
}

// Function to add item to cart
function addToCart($productId, $productName, $price) {
    global $product;
    
    if (isset($_SESSION['cart']['items'][$productId])) {
        // Item already exists in cart, increase quantity
        $_SESSION['cart']['items'][$productId]['quantity']++;
    } else {
        // Add new item to cart
        $_SESSION['cart']['items'][$productId] = array(
            'product_id' => $productId,
            'product_name' => $productName,
            'price' => $price,
            'quantity' => 1
        );
    }
}

// Function to update cart quantity
function updateCartQuantity($productId, $quantity) {
    if (isset($_SESSION['cart']['items'][$productId])) {
        $_SESSION['cart']['items'][$productId]['quantity'] = $quantity;
    }
}

// Function to remove item from cart
function removeFromCart($productId) {
    if (isset($_SESSION['cart']['items'][$productId])) {
        unset($_SESSION['cart']['items'][$productId]);
    }
}

// Function to calculate total price of items in cart
function calculateTotal() {
    $total = 0;
    
    foreach ($_SESSION['cart']['items'] as $item) {
        $total += ($item['price'] * $item['quantity']);
    }
    
    return number_format($total, 2); // Format to two decimal places
}

// Function to clear all items from cart
function clearCart() {
    $_SESSION['cart']['items'] = array();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <?php
    // Add item example
    if (isset($_GET['action']) && $_GET['action'] == 'add') {
        addToCart(1, "Laptop", 999.99);
    }
    
    // Remove item example
    if (isset($_GET['action']) && $_GET['action'] == 'remove' && isset($_GET['id'])) {
        removeFromCart($_GET['id']);
    }

    // Display cart items
    echo "<h2>Shopping Cart</h2>";
    echo "<p>Number of items: " . count($_SESSION['cart']['items']) . "</p>";
    
    if (count($_SESSION['cart']['items']) > 0) {
        echo "<table border='1'>";
        echo "<tr><th>Product Name</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>";
        
        foreach ($_SESSION['cart']['items'] as $item) {
            $totalItem = $item['price'] * $item['quantity'];
            
            echo "<tr>";
            echo "<td>" . $item['product_name'] . "</td>";
            echo "<td>$" . number_format($item['price'], 2) . "</td>";
            echo "<td><input type='number' value='" . $item['quantity'] . "' onChange='updateQuantity(" . $item['product_id'] . ", this.value)'></td>";
            echo "<td>$" . number_format($totalItem, 2) . "</td>";
            echo "<td><a href='cart.php?action=remove&id=" . $item['product_id'] . "'>Remove</a></td>";
            echo "</tr>";
        }
        
        echo "</table>";
        echo "<p>Total: $" . calculateTotal() . "</p>";
    } else {
        echo "<p>Your cart is empty.</p>";
    }

    // Clear cart example
    if (isset($_GET['action']) && $_GET['action'] == 'clear') {
        clearCart();
        header("Location: cart.php");
    }
    
    // Add more items for testing
    if (!isset($_SESSION['cart']['items'])) {
        addToCart(2, "Phone", 499.99);
        addToCart(3, "Tablet", 199.99);
    }
    ?>

</body>
</html>


<?php
// Start the session
session_start();

// Set some cookie parameters for security
ini_set('session.cookie_httponly', true);
ini_set('session.use_strict_mode', 1);

// Check if the cart exists in the session, initialize it if not
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}
?>


<?php
// Product details (this could come from your database)
$product_id = 1;
$product_name = "Example Product";
$product_price = 29.99;

// Check if the product is already in the cart
$found = false;
foreach ($_SESSION['cart'] as $index => $item) {
    if ($item['product_id'] == $product_id) {
        // Increment quantity
        $_SESSION['cart'][$index]['quantity']++;
        $found = true;
        break;
    }
}

// If the product was not found, add it to the cart
if (!$found) {
    $_SESSION['cart'][] = array(
        'product_id' => $product_id,
        'product_name' => $product_name,
        'price' => $product_price,
        'quantity' => 1
    );
}

// Redirect or output success message
echo "Product added to cart!";
?>


<?php
if (!empty($_SESSION['cart'])) {
    echo "<h2>Shopping Cart</h2>";
    echo "<table border='1'>";
    echo "<tr><th>Product Name</th><th>Price</th><th>Quantity</th><th>Total</th></tr>";

    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $product_total = $item['price'] * $item['quantity'];
        $total += $product_total;

        echo "<tr>";
        echo "<td>{$item['product_name']}</td>";
        echo "<td>$" . number_format($item['price'], 2) . "</td>";
        echo "<td>{$item['quantity']}</td>";
        echo "<td>$" . number_format($product_total, 2) . "</td>";
        echo "</tr>";
    }

    echo "<tr><th colspan='3'>Grand Total:</th><th>$" . number_format($total, 2) . "</th></tr>";
    echo "</table>";
} else {
    echo "Your cart is empty!";
}
?>


<?php
if (isset($_GET['remove'])) {
    $product_id = $_GET['remove'];

    // Find and remove the product from the cart
    foreach ($_SESSION['cart'] as $index => $item) {
        if ($item['product_id'] == $product_id) {
            unset($_SESSION['cart'][$index]);
            break;
        }
    }

    // Re-index the array to maintain numeric keys
    $_SESSION['cart'] = array_values($_SESSION['cart']);
}

// Redirect or refresh the page
header("Location: cart.php");
exit();
?>


<?php
session_start();

// Unset all session variables
$_SESSION = array();

// Destroy the session cookie
if (ini_get("session.use_cookies")) {
    $params = session_get_cookie_params();
    setcookie(session_name(), '', time() - 42000,
        $params["path"], $params["domain"],
        $params["secure"], $params["httponly"]
    );
}

// Finally, destroy the session
session_unset();
session_destroy();

header("Location: login.php");
exit();
?>


<?php
session_start();

$item_id = $_GET['item_id'];
$item_name = $_GET['item_name'];

if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

array_push($_SESSION['cart'], array(
    'id' => $item_id,
    'name' => $item_name
));

header('Location: view_cart.php');
?>


<?php
session_start();

echo "<h2>Shopping Cart</h2>";
if (isset($_SESSION['cart']) && count($_SESSION['cart']) > 0) {
    foreach ($_SESSION['cart'] as $index => $item) {
        echo "Item ID: " . $item['id'] . ", Name: " . $item['name'];
        echo "<a href='remove_item.php?index=$index'>Remove</a><br>";
    }
} else {
    echo "Your cart is empty.";
}
echo "<a href='add_item.php'>Add Item</a>";
?>


<?php
session_start();

$index = $_GET['index'];
if (isset($_SESSION['cart'][$index])) {
    unset($_SESSION['cart'][$index]);
}

// Re-index the array to maintain sequential keys
$_SESSION['cart'] = array_values($_SESSION['cart']);
header('Location: view_cart.php');
?>


<?php
session_start();


// Check if cart session exists, if not, create it
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}


function addToCart($productId, $productName, $price) {
    // Create an item array
    $item = array(
        'product_id' => $productId,
        'name' => $productName,
        'price' => $price,
        'quantity' => 1
    );
    
    // Add the item to the cart session
    $_SESSION['cart'][$productId] = $item;
}

// Example usage:
addToCart(1, "Laptop", 999.99);


function updateCartItem($productId, $quantity) {
    if (isset($_SESSION['cart'][$productId])) {
        $_SESSION['cart'][$productId]['quantity'] = $quantity;
    } else {
        // Handle error: product not found in cart
        echo "Product not found in cart!";
    }
}

// Example usage:
updateCartItem(1, 2);


function removeFromCart($productId) {
    if (isset($_SESSION['cart'][$productId])) {
        unset($_SESSION['cart'][$productId]);
        // Re-index the array to maintain proper cart structure
        $_SESSION['cart'] = array_values($_SESSION['cart']);
    } else {
        // Handle error: product not found in cart
        echo "Product not found in cart!";
    }
}

// Example usage:
removeFromCart(1);


function calculateCartTotal() {
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += ($item['price'] * $item['quantity']);
    }
    return $total;
}

// Example usage:
$cartTotal = calculateCartTotal();
echo "Cart Total: $" . number_format($cartTotal, 2);


function displayCart() {
    if (empty($_SESSION['cart'])) {
        echo "Your cart is empty!";
        return;
    }
    
    foreach ($_SESSION['cart'] as $item) {
        echo "<div class='cart-item'>";
        echo "<h3>" . $item['name'] . "</h3>";
        echo "<p>Price: $" . number_format($item['price'], 2) . "</p>";
        echo "<p>Quantity: " . $item['quantity'] . "</p>";
        echo "<a href='update.php?id=" . $item['product_id'] . "'>Update</a>";
        echo "<a href='remove.php?id=" . $item['product_id'] . "'>Remove</a>";
        echo "</div>";
    }
}

// Example usage:
displayCart();


// Destroy all session data
$_SESSION = array();

// If using cookies, delete them as well
if (ini_get("session.use_cookies")) {
    $params = session_get_cookie_params();
    setcookie(session_name(), '', time() - 42000,
        $params["path"], $params["domain"],
        $params["secure"], $params["httponly"]
    );
}

// Finally, destroy the PHP session
session_destroy();

// Redirect to home page after checkout
header("Location: index.php");
exit();


<?php
session_start();

if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add item to cart
addToCart(1, "Laptop", 999.99);

// Update quantity
updateCartItem(1, 2);

// Remove item
removeFromCart(1);

// Display cart contents
displayCart();

// Calculate total price
echo "Total: $" . number_format(calculateCartTotal(), 2);
?>


<?php
// Start the session
session_start();

// Initialize the shopping cart if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add item to cart
function add_to_cart($product_id, $product_name, $price) {
    // Check if product is already in cart
    if (isset($_SESSION['cart'][$product_id])) {
        // Update quantity
        $_SESSION['cart'][$product_id]['quantity']++;
    } else {
        // Add new item
        $_SESSION['cart'][$product_id] = array(
            'id' => $product_id,
            'name' => $product_name,
            'price' => $price,
            'quantity' => 1
        );
    }
}

// Remove item from cart
function remove_from_cart($product_id) {
    if (isset($_SESSION['cart'][$product_id])) {
        unset($_SESSION['cart'][$product_id]);
    }
}

// Display cart contents
function display_cart() {
    $total = 0;
    echo "<table>";
    echo "<tr><th>Product</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>";
    
    foreach ($_SESSION['cart'] as $item) {
        $subtotal = $item['price'] * $item['quantity'];
        $total += $subtotal;
        
        echo "<tr>";
        echo "<td>" . $item['name'] . "</td>";
        echo "<td>£" . number_format($item['price'], 2) . "</td>";
        echo "<td><input type='number' value='" . $item['quantity'] . "' min='1'></td>";
        echo "<td>£" . number_format($subtotal, 2) . "</td>";
        echo "<td><form action='' method='post'><input type='hidden' name='remove_id' value='" . $item['id'] . "'><button type='submit' name='remove_from_cart'>Remove</button></form></td>";
        echo "</tr>";
    }
    
    echo "<tr><td colspan='4'><strong>Total:</strong> £" . number_format($total, 2) . "</td><td></td></tr>";
    echo "</table>";
}

// Add item to cart when form is submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    if (isset($_POST['add_to_cart'])) {
        add_to_cart($_POST['product_id'], $_POST['product_name'], $_POST['price']);
    } elseif (isset($_POST['remove_from_cart'])) {
        remove_from_cart($_POST['remove_id']);
    }
}

// Example product form
echo "<form action='' method='post'>";
echo "<input type='hidden' name='product_id' value='1'>";
echo "<input type='hidden' name='product_name' value='Product 1'>";
echo "<input type='hidden' name='price' value='9.99'>";
echo "<button type='submit' name='add_to_cart'>Add to Cart</button>";
echo "</form>";

// Display the cart
display_cart();

// Destroy session when done
session_destroy();
?>


<?php
session_start();

// Initialize cookie for user identification if not set
if (!isset($_COOKIE['user_id'])) {
    $userId = uniqid();
    setcookie('user_id', $userId, time() + 3600 * 24 * 30, '/'); // Cookie valid for 30 days
}

// Initialize cart session if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function add_to_cart($product_id, $quantity) {
    global $cart;
    
    // Check if item already exists in the cart
    if (isset($cart[$product_id])) {
        $cart[$product_id] += $quantity;
    } else {
        $cart[$product_id] = $quantity;
    }
    
    // Update session cart
    $_SESSION['cart'] = serialize($cart);
}

// Function to update item quantity in cart
function update_quantity($product_id, $new_quantity) {
    global $cart;
    
    if (isset($cart[$product_id])) {
        if ($new_quantity > 0) {
            $cart[$product_id] = $new_quantity;
        } else {
            unset($cart[$product_id]);
        }
        
        // Update session cart
        $_SESSION['cart'] = serialize($cart);
    }
}

// Function to remove item from cart
function remove_item($product_id) {
    global $cart;
    
    if (isset($cart[$product_id])) {
        unset($cart[$product_id]);
        
        // Update session cart
        $_SESSION['cart'] = serialize($cart);
    }
}

// Function to calculate total price
function calculate_total() {
    global $cart;
    
    $total = 0;
    foreach ($cart as $product_id => $quantity) {
        // Get product price from database or other source
        // For this example, we'll assume a dummy price array
        $price_array = array(
            1 => 10.99,
            2 => 15.99,
            3 => 7.99,
            // Add more products as needed
        );
        
        if (isset($price_array[$product_id])) {
            $total += ($quantity * $price_array[$product_id]);
        }
    }
    
    return $total;
}

// Function to display cart contents
function display_cart() {
    global $cart;
    
    echo "<h2>Shopping Cart</h2>";
    echo "<table border='1'>";
    echo "<tr><th>Product ID</th><th>Quantity</th><th>Price</th></tr>";
    
    foreach ($cart as $product_id => $quantity) {
        // Get product price from database or other source
        // For this example, we'll assume a dummy price array
        $price_array = array(
            1 => 10.99,
            2 => 15.99,
            3 => 7.99,
            // Add more products as needed
        );
        
        if (isset($price_array[$product_id])) {
            $price = $price_array[$product_id];
            echo "<tr>";
            echo "<td>$product_id</td>";
            echo "<td>$quantity</td>";
            echo "<td>$$price</td>";
            echo "</tr>";
        }
    }
    
    echo "</table>";
}

// Example usage:
if (isset($_GET['add'])) {
    $product_id = intval($_GET['add']);
    $quantity = 1;
    add_to_cart($product_id, $quantity);
}

if (isset($_GET['remove'])) {
    $product_id = intval($_GET['remove']);
    remove_item($product_id);
}

// Display cart contents
display_cart();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <h1>Welcome to Our Store</h1>
    
    <!-- Example links to add items to the cart -->
    <a href="?add=1">Add Product 1</a><br>
    <a href="?add=2">Add Product 2</a><br>
    <a href="?add=3">Add Product 3</a><br>
    
    <!-- Example links to remove items from the cart -->
    <?php
    foreach ($_SESSION['cart'] as $product_id => $quantity) {
        echo "<a href=\"?remove=$product_id\">Remove Product $product_id</a><br>";
    }
    ?>
</body>
</html>


<?php
session_start();

// Initialize cart if not exists
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function addToCart($productId, $name, $price) {
    $item = array(
        'product_id' => $productId,
        'name' => $name,
        'price' => $price,
        'quantity' => 1
    );
    $_SESSION['cart'][] = $item;
}

// Function to remove item from cart
function removeFromCart($productId) {
    foreach ($_SESSION['cart'] as $key => $item) {
        if ($item['product_id'] == $productId) {
            unset($_SESSION['cart'][$key]);
            break;
        }
    }
    $_SESSION['cart'] = array_values($_SESSION['cart']); // Re-index the array
}

// Function to display cart
function displayCart() {
    if (empty($_SESSION['cart'])) {
        echo "<p>Your cart is empty.</p>";
        return;
    }

    echo "<table border='1'>";
    echo "<tr><th>Product</th><th>Price</th><th>Quantity</th><th>Action</th></tr>";

    foreach ($_SESSION['cart'] as $item) {
        echo "<tr>";
        echo "<td>{$item['name']}</td>";
        echo "<td>$" . number_format($item['price'], 2) . "</td>";
        echo "<td>{$item['quantity']}</td>";
        echo "<td><button onclick=\"removeFromCart({$item['product_id']})\">Remove</button></td>";
        echo "</tr>";
    }

    echo "</table>";
}

// Example usage:
if (isset($_GET['action'])) {
    switch ($_GET['action']) {
        case 'add':
            $productId = $_GET['id'];
            $name = "Product {$productId}";
            $price = rand(10, 100);
            addToCart($productId, $name, $price);
            break;
        case 'remove':
            $productId = $_GET['id'];
            removeFromCart($productId);
            break;
    }
}

// Clear cart example
if (isset($_GET['clear'])) {
    unset($_SESSION['cart']);
    $_SESSION['cart'] = array();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
    <script>
        function removeFromCart(productId) {
            window.location.href = "cart.php?action=remove&id=" + productId;
        }
    </script>
</head>
<body>
    <?php displayCart(); ?>

    <!-- Example products -->
    <h2>Add Products to Cart:</h2>
    <ul>
        <?php for ($i = 1; $i <= 5; $i++) { ?>
            <li>
                Product <?php echo $i; ?> - 
                <a href="cart.php?action=add&id=<?php echo $i; ?>">Add to Cart</a>
            </li>
        <?php } ?>
    </ul>

    <br>
    <a href="cart.php?clear=1">Clear Cart</a>
</body>
</html>


<?php
session_start();

// Initialize cart if not set
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function addToCart($productId, $size) {
    global $db;
    
    // Generate unique key for the item
    $itemKey = md5($productId . $size);
    
    if (isset($_SESSION['cart'][$itemKey])) {
        $_SESSION['cart'][$itemKey]['quantity']++;
    } else {
        // Get product details from database
        $query = "SELECT * FROM products WHERE id = ?";
        $stmt = $db->prepare($query);
        $stmt->execute(array($productId));
        $product = $stmt->fetch();
        
        if ($product) {
            $_SESSION['cart'][$itemKey] = array(
                'id' => $productId,
                'name' => $product['name'],
                'price' => $product['price'],
                'size' => $size,
                'quantity' => 1
            );
        }
    }
    
    // Update session cart
    $_SESSION['cart'] = serialize(unserialize($_SESSION['cart']));
}

// Function to remove item from cart
function removeFromCart($itemKey) {
    if (isset($_SESSION['cart'][$itemKey])) {
        unset($_SESSION['cart'][$itemKey]);
    }
    $_SESSION['cart'] = array_values($_SESSION['cart']);
}

// Function to increase quantity of an item
function increaseQuantity($itemKey) {
    if (isset($_SESSION['cart'][$itemKey])) {
        $_SESSION['cart'][$itemKey]['quantity']++;
    }
}

// Function to decrease quantity of an item
function decreaseQuantity($itemKey) {
    if (isset($_SESSION['cart'][$itemKey])) {
        if ($_SESSION['cart'][$itemKey]['quantity'] > 1) {
            $_SESSION['cart'][$itemKey]['quantity']--;
        } else {
            removeFromCart($itemKey);
        }
    }
}

// Example usage:
// Add item to cart
if (isset($_GET['add'])) {
    addToCart(1, 'L');
}

// Remove item from cart
if (isset($_GET['remove'])) {
    $itemKey = $_GET['remove'];
    removeFromCart($itemKey);
}

// Increase quantity
if (isset($_GET['increase'])) {
    $itemKey = $_GET['increase'];
    increaseQuantity($itemKey);
}

// Decrease quantity
if (isset($_GET['decrease'])) {
    $itemKey = $_GET['decrease'];
    decreaseQuantity($itemKey);
}

// Display cart contents
echo "<pre>";
print_r(unserialize($_SESSION['cart']));
echo "</pre>";
?>


<?php
session_start();

// Initialize cart if not set
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add item to cart
if (isset($_POST['add_to_cart'])) {
    $productId = intval($_POST['product_id']);
    $quantity = intval($_POST['quantity']);

    if ($quantity <= 0) {
        $quantity = 1;
    }

    if (!empty($productId)) {
        if (isset($_SESSION['cart'][$productId])) {
            // Update quantity
            $_SESSION['cart'][$productId]['quantity'] += $quantity;
        } else {
            // Add new item
            $_SESSION['cart'][$productId] = array(
                'product_id' => $productId,
                'name' => getProductName($productId), // Assume this function retrieves the name from database
                'price' => getProductPrice($productId),
                'quantity' => $quantity
            );
        }
    }
}

// Remove item from cart
if (isset($_GET['remove'])) {
    $productId = intval($_GET['remove']);
    if (!empty($productId)) {
        unset($_SESSION['cart'][$productId]);
    }
}

// Update quantity of items
if (isset($_POST['update_qty'])) {
    foreach ($_SESSION['cart'] as $id => $item) {
        $newQuantity = intval($_POST[$id . '_quantity']);
        if ($newQuantity > 0) {
            $_SESSION['cart'][$id]['quantity'] = $newQuantity;
        }
    }
}

// Function to get product name (example)
function getProductName($productId) {
    // Replace with actual database query
    return "Product " . $productId;
}

// Function to get product price (example)
function getProductPrice($productId) {
    // Replace with actual database query
    return 10.99; // Example price
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
    <style>
        .cart-item { padding: 10px; border-bottom: 1px solid #ddd; }
        .total-price { font-weight: bold; margin-top: 20px; }
    </style>
</head>
<body>
    <?php if (!empty($_SESSION['cart'])) : ?>
        <h2>Your Cart</h2>
        <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
            <?php foreach ($_SESSION['cart'] as $id => $item) : ?>
                <div class="cart-item">
                    <p><?php echo $item['name']; ?> - $<?php echo number_format($item['price'], 2); ?></p>
                    <input type="text" name="<?php echo $id; ?>_quantity" value="<?php echo $item['quantity']; ?>" size="3">
                    <a href="?remove=<?php echo $id; ?>">Remove</a>
                </div>
            <?php endforeach; ?>
            <br>
            <button type="submit" name="update_qty">Update Quantities</button>
        </form>

        <?php 
        // Calculate total price
        $total = 0;
        foreach ($_SESSION['cart'] as $item) {
            $total += $item['price'] * $item['quantity'];
        }
        ?>

        <div class="total-price">
            Total: $<?php echo number_format($total, 2); ?>
        </div>
    <?php else : ?>
        <p>Your cart is empty.</p>
    <?php endif; ?>

    <!-- Example Add to Cart Form -->
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        Product ID: <input type="text" name="product_id"><br>
        Quantity: <input type="text" name="quantity" value="1"><br>
        <button type="submit" name="add_to_cart">Add to Cart</button>
    </form>
</body>
</html>


<?php
// Start the session
session_start();

// Initialize cart if not already set
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function addToCart($productId, $productName, $price) {
    global $SESSION;
    
    // Check if product is already in cart
    if (isset($_SESSION['cart'][$productId])) {
        // Increment quantity
        $_SESSION['cart'][$productId]['quantity']++;
    } else {
        // Add new product to cart
        $_SESSION['cart'][$productId] = array(
            'product_id' => $productId,
            'product_name' => $productName,
            'price' => $price,
            'quantity' => 1
        );
    }
}

// Function to remove item from cart
function removeFromCart($productId) {
    global $SESSION;
    
    // Check if product exists in cart
    if (isset($_SESSION['cart'][$productId])) {
        unset($_SESSION['cart'][$productId]);
    }
}

// Function to calculate total price
function calculateTotal() {
    global $SESSION;
    
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += ($item['price'] * $item['quantity']);
    }
    
    return $total;
}

// Example usage:

// Add items to cart
addToCart(1, 'Product A', 29.99);
addToCart(2, 'Product B', 14.99);

// Remove item from cart
removeFromCart(2);

// Display cart contents
echo "<h3>Your Cart:</h3>";
if (!empty($_SESSION['cart'])) {
    foreach ($_SESSION['cart'] as $item) {
        echo "Product: " . $item['product_name'] . "<br />";
        echo "Price: $" . number_format($item['price'], 2) . "<br />";
        echo "Quantity: " . $item['quantity'] . "<br />";
        echo "<hr />";
    }
    
    echo "Total: $" . number_format(calculateTotal(), 2);
} else {
    echo "Your cart is empty.";
}

// Close session
session_write_close();
?>


<?php
// Start the session
session_start();

// Initialize cart if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function addToCart($productId, $productName, $productPrice) {
    global $cart;
    
    // Check if product is already in the cart
    $found = false;
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['id'] == $productId) {
            $item['quantity'] += 1;
            $found = true;
            break;
        }
    }
    
    // If not found, add new item to cart
    if (!$found) {
        $newItem = array(
            'id' => $productId,
            'name' => $productName,
            'price' => $productPrice,
            'quantity' => 1
        );
        array_push($_SESSION['cart'], $newItem);
    }
}

// Function to remove item from cart
function removeFromCart($productId) {
    global $cart;
    
    // Remove the product with matching id
    foreach ($_SESSION['cart'] as $key => $item) {
        if ($item['id'] == $productId) {
            unset($_SESSION['cart'][$key]);
            break;
        }
    }
    
    // Re-index the array after deletion
    $_SESSION['cart'] = array_values($_SESSION['cart']);
}

// Function to calculate cart total price
function getCartTotal() {
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += $item['price'] * $item['quantity'];
    }
    return $total;
}

// Example usage:
// Adding an item to the cart
addToCart(1, 'Laptop', 999.99);

// Removing an item from the cart
removeFromCart(1);

// Getting the total price of items in the cart
$totalPrice = getCartTotal();

// Displaying the cart items
echo "<h2>Shopping Cart</h2>";
echo "<table border='1'>";
echo "<tr><th>Product Name</th><th>Quantity</th><th>Price</th></tr>";

foreach ($_SESSION['cart'] as $item) {
    echo "<tr>";
    echo "<td>" . $item['name'] . "</td>";
    echo "<td>" . $item['quantity'] . "</td>";
    echo "<td>$" . number_format($item['price'], 2) . "</td>";
    echo "</tr>";
}

echo "</table>";
echo "<p>Total: $" . number_format(getCartTotal(), 2) . "</p>";
?>


<?php
session_start();

// Initialize cart if not already set
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add item to cart
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $productId = isset($_POST['product_id']) ? intval($_POST['product_id']) : 0;
    $productName = isset($_POST['product_name']) ? $_POST['product_name'] : '';
    $productPrice = isset($_POST['product_price']) ? floatval($_POST['product_price']) : 0.0;
    $quantity = isset($_POST['quantity']) ? intval($_POST['quantity']) : 1;

    // Check if item is already in cart
    if (isset($_SESSION['cart'][$productId])) {
        $_SESSION['cart'][$productId]['quantity'] += $quantity;
    } else {
        $_SESSION['cart'][$productId] = array(
            'product_id' => $productId,
            'product_name' => $productName,
            'product_price' => $productPrice,
            'quantity' => $quantity
        );
    }
}

// Display cart items
echo "<h2>Your Cart</h2>";
if (empty($_SESSION['cart'])) {
    echo "Your cart is empty.";
} else {
    foreach ($_SESSION['cart'] as $item) {
        echo "<div class='cart-item'>";
        echo "Product: " . $item['product_name'] . "<br />";
        echo "Price: $" . number_format($item['product_price'], 2) . "<br />";
        echo "Quantity: " . $item['quantity'] . "<br />";
        echo "<a href='remove_item.php?id=" . $item['product_id'] . "'>Remove</a>";
        echo "</div><br />";
    }
}

// Add item form
echo "<h2>Add to Cart</h2>";
echo "<form action='" . $_SERVER['PHP_SELF'] . "' method='post'>";
echo "Product ID: <input type='text' name='product_id'><br>";
echo "Product Name: <input type='text' name='product_name'><br>";
echo "Price: <input type='number' step='0.01' name='product_price'><br>";
echo "Quantity: <input type='number' min='1' name='quantity'><br>";
echo "<input type='submit' value='Add to Cart'>";
echo "</form>";

// Clear cart button
echo "<a href='clear_cart.php'>Clear Cart</a>";
?>


<?php
// Start the session
session_start();
?>


<?php
// Check if the form was submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get product ID and quantity from form
    $productId = isset($_POST['product_id']) ? $_POST['product_id'] : '';
    $quantity = isset($_POST['quantity']) ? $_POST['quantity'] : 1;

    // Validate input
    if (!empty($productId) && is_numeric($productId)) {
        // Initialize cart session if it doesn't exist
        if (!isset($_SESSION['cart'])) {
            $_SESSION['cart'] = array();
        }

        // Check if product already exists in the cart
        if (array_key_exists($productId, $_SESSION['cart'])) {
            // Update quantity
            $_SESSION['cart'][$productId] += $quantity;
        } else {
            // Add new product to cart
            $_SESSION['cart'][$productId] = $quantity;
        }
    }
}
?>


<?php
// Check if cart session exists and is not empty
if (isset($_SESSION['cart']) && !empty($_SESSION['cart'])) {
    echo "<h2>Your Shopping Cart</h2>";
    echo "<ul>";

    foreach ($_SESSION['cart'] as $productId => $quantity) {
        // Here, you can fetch product details from your database using $productId
        // For this example, we'll just display the product ID and quantity
        echo "<li>Product ID: $productId | Quantity: $quantity</li>";
    }

    echo "</ul>";
} else {
    echo "Your cart is empty.";
}
?>


<?php
// Check if an item should be removed
if (isset($_GET['remove'])) {
    $productIdToRemove = $_GET['remove'];

    // Check if product exists in cart
    if (isset($_SESSION['cart'][$productIdToRemove])) {
        unset($_SESSION['cart'][$productIdToRemove]);
        echo "Item has been removed from your cart.";
    }
}
?>


<?php
// Check if cart should be cleared
if (isset($_GET['clear'])) {
    unset($_SESSION['cart']);
    echo "Your cart has been cleared.";
}
?>


<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
<?php
session_start();

// Add item to cart
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $productId = isset($_POST['product_id']) ? $_POST['product_id'] : '';
    $quantity = isset($_POST['quantity']) ? $_POST['quantity'] : 1;

    if (!empty($productId) && is_numeric($productId)) {
        if (!isset($_SESSION['cart'])) {
            $_SESSION['cart'] = array();
        }

        if (array_key_exists($productId, $_SESSION['cart'])) {
            $_SESSION['cart'][$productId] += $quantity;
        } else {
            $_SESSION['cart'][$productId] = $quantity;
        }
    }
}

// Remove item from cart
if (isset($_GET['remove'])) {
    $productIdToRemove = $_GET['remove'];
    if (isset($_SESSION['cart'][$productIdToRemove])) {
        unset($_SESSION['cart'][$productIdToRemove]);
    }
}

// Clear cart
if (isset($_GET['clear'])) {
    unset($_SESSION['cart']);
}
?>

<!-- Add Item Form -->
<form method="post">
    Product ID: <input type="text" name="product_id" required><br>
    Quantity: <input type="number" name="quantity" value="1"><br>
    <input type="submit" value="Add to Cart">
</form>

<!-- Display Cart -->
<?php
if (isset($_SESSION['cart']) && !empty($_SESSION['cart'])) {
    echo "<h2>Your Cart:</h2>";
    foreach ($_SESSION['cart'] as $productId => $quantity) {
        // Here, you can fetch product details from your database
        echo "<div>Product ID: $productId | Quantity: $quantity</div>";
        echo "<a href='?remove=$productId'>Remove</a><br>";
    }
    echo "<a href='?clear=1'>Clear Cart</a>";
} else {
    echo "Your cart is empty.";
}
?>
</body>
</html>


<?php
// Start the session
session_start();

// Initialize cart if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function addToCart($productId, $productName, $productPrice) {
    global $productId, $productName, $productPrice;
    
    // Check if product already exists in cart
    if (isset($_SESSION['cart'][$productId])) {
        // If exists, increment quantity
        $_SESSION['cart'][$productId]['quantity']++;
    } else {
        // If not exists, add new product to cart
        $_SESSION['cart'][$productId] = array(
            'product_id' => $productId,
            'product_name' => $productName,
            'product_price' => $productPrice,
            'quantity' => 1
        );
    }
}

// Function to remove item from cart
function removeFromCart($productId) {
    if (isset($_SESSION['cart'][$productId])) {
        unset($_SESSION['cart'][$productId]);
        // Re-index the session array
        $_SESSION['cart'] = array_values($_SESSION['cart']);
    }
}

// Function to update quantity of an item
function updateQuantity($productId, $newQuantity) {
    if (isset($_SESSION['cart'][$productId])) {
        $_SESSION['cart'][$productId]['quantity'] = $newQuantity;
    }
}

// Function to display cart contents
function displayCart() {
    if (!empty($_SESSION['cart'])) {
        echo "<table>";
        echo "<tr><th>Product Name</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>";
        
        foreach ($_SESSION['cart'] as $item) {
            $total = $item['product_price'] * $item['quantity'];
            echo "<tr>";
            echo "<td>" . $item['product_name'] . "</td>";
            echo "<td>$" . number_format($item['product_price'], 2) . "</td>";
            echo "<td><input type='number' value='" . $item['quantity'] . "' onchange='updateQuantity(" . $item['product_id'] . ", this.value)'></td>";
            echo "<td>$" . number_format($total, 2) . "</td>";
            echo "<td><button onclick='removeFromCart(" . $item['product_id'] . ")'>Remove</button></td>";
            echo "</tr>";
        }
        
        // Calculate and display total amount
        $cartTotal = 0;
        foreach ($_SESSION['cart'] as $item) {
            $cartTotal += $item['product_price'] * $item['quantity'];
        }
        
        echo "<tr><td colspan='4'><strong>Total:</strong></td><td>$" . number_format($cartTotal, 2) . "</td></tr>";
        echo "</table>";
    } else {
        echo "Your cart is empty!";
    }
}

// Example usage:
addToCart(1, 'Laptop', 999.99);
addToCart(2, 'Phone', 499.99);

displayCart();

?>


<?php
// Start the session
session_start();

// Initialize cart if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function add_to_cart($product_id, $name, $price) {
    global $pdo; // Assuming you have a database connection

    // Check if product already exists in cart
    $found = false;
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['product_id'] == $product_id) {
            $found = true;
            $item['quantity']++;
            break;
        }
    }

    // If not found, add new item
    if (!$found) {
        $item = array(
            'product_id' => $product_id,
            'name'       => $name,
            'price'      => $price,
            'quantity'   => 1
        );
        array_push($_SESSION['cart'], $item);
    }
}

// Function to display cart items
function display_cart() {
    if (empty($_SESSION['cart'])) {
        echo "Your cart is empty!";
        return;
    }

    $total = 0;

    foreach ($_SESSION['cart'] as $key => $item) {
        $subtotal = $item['price'] * $item['quantity'];
        $total += $subtotal;

        echo "<div class='cart-item'>";
        echo "<p>{$item['name']}</p>";
        echo "<p>Price: \${$item['price']}</p>";
        echo "<p>Quantity: {$item['quantity']}</p>";
        echo "<a href='remove_from_cart.php?id={$key}'>Remove</a>";
        echo "</div>";
    }

    // Display total amount
    echo "<h3>Total: \$$total</h3>";
}

// Function to remove item from cart
function remove_from_cart($item_id) {
    foreach ($_SESSION['cart'] as $key => $item) {
        if ($item['product_id'] == $item_id) {
            unset($_SESSION['cart'][$key]);
            break;
        }
    }

    // Re-index the array
    $_SESSION['cart'] = array_values($_SESSION['cart']);
}

// Example usage:
// Add an item to cart
add_to_cart(1, 'Product 1', 29.99);

// Display cart items
display_cart();

// Remove an item from cart (call this function when user clicks remove button)
if (isset($_GET['id'])) {
    remove_from_cart($_GET['id']);
}
?>


<?php
session_start();
if (isset($_GET['id'])) {
    remove_from_cart($_GET['id']);
}
header("Location: cart.php");
exit;
?>


<?php
// Start the session
session_start();

// Function to add item to cart
function addToCart($product_id, $name, $price) {
    // Check if session variable 'cart' exists. If not, initialize it.
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }
    
    // Check if product already exists in cart
    if (array_key_exists($product_id, $_SESSION['cart'])) {
        // Increment quantity by 1
        $_SESSION['cart'][$product_id]['quantity']++;
    } else {
        // Add new product to cart
        $_SESSION['cart'][$product_id] = array(
            'name' => $name,
            'price' => $price,
            'quantity' => 1
        );
    }
}

// Function to remove item from cart
function removeFromCart($product_id) {
    // Check if product exists in cart and unset it
    if (isset($_SESSION['cart'][$product_id])) {
        unset($_SESSION['cart'][$product_id]);
    } else {
        echo "Product not found in cart!";
    }
}

// Function to display cart contents
function displayCart() {
    $total = 0;
    if (!empty($_SESSION['cart'])) { ?>
        <h2>Your Cart</h2>
        <table>
            <tr>
                <th>Item Name</th>
                <th>Quantity</th>
                <th>Price</th>
                <th>Total</th>
                <th>Action</th>
            </tr>
            <?php
            foreach ($_SESSION['cart'] as $product_id => $item) {
                $total += ($item['price'] * $item['quantity']);
                echo "<tr>";
                echo "<td>{$item['name']}</td>";
                echo "<td>{$item['quantity']}</td>";
                echo "<td>\${$item['price']}</td>";
                echo "<td>\$" . number_format(($item['price'] * $item['quantity']), 2) . "</td>";
                echo "<td><a href='remove_from_cart.php?id=$product_id'>Remove</a></td>";
                echo "</tr>";
            } ?>
        </table>
        <h3>Total: <?php echo "$" . number_format($total, 2); ?></h3>
    <?php } else { 
        echo "Your cart is empty!";
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
    <style>
        body {
            font-family: Arial, sans-serif;
        }
        table {
            width: 100%;
            border-collapse: collapse;
        }
        th, td {
            padding: 8px;
            text-align: left;
            border-bottom: 1px solid #ddd;
        }
        th {
            background-color: #f2f2f2;
        }
    </style>
</head>
<body>
    <h1>Welcome to the Shopping Cart</h1>
    
    <!-- Add items to cart -->
    <a href="add_to_cart.php?id=1&name=Product%201&price=29.99">Add Product 1</a><br>
    <a href="add_to_cart.php?id=2&name=Product%202&price=49.99">Add Product 2</a><br>
    
    <!-- Display cart contents -->
    <?php displayCart(); ?>
</body>
</html>


<?php
session_start();

$product_id = $_GET['id'];
$name = urldecode($_GET['name']);
$price = $_GET['price'];

addToCart($product_id, $name, $price);

header("Location: index.php");
exit();
?>


<?php
session_start();

if (isset($_GET['id'])) {
    removeFromCart($_GET['id']);
}

header("Location: index.php");
exit();
?>


<?php
session_start();

class ShoppingCart {
    private $cart;

    public function __construct() {
        if (!isset($_SESSION['shopping_cart'])) {
            $_SESSION['shopping_cart'] = array();
        }
        $this->cart = &$_SESSION['shopping_cart'];
    }

    // Add item to cart
    public function add_item($product_id, $quantity = 1) {
        $product_id = (string)$product_id;
        if ($quantity < 1) {
            $quantity = 1;
        }
        
        if (!isset($this->cart[$product_id])) {
            $this->cart[$product_id] = array(
                'id' => $product_id,
                'quantity' => 0
            );
        }
        
        $this->cart[$product_id]['quantity'] += $quantity;
    }

    // Update item quantity in cart
    public function update_quantity($product_id, $quantity) {
        $product_id = (string)$product_id;
        if (!isset($this->cart[$product_id])) {
            return false; // Product not found in cart
        }
        
        if ($quantity < 1) {
            $quantity = 1;
        }
        
        $this->cart[$product_id]['quantity'] = $quantity;
    }

    // Remove item from cart
    public function remove_item($product_id) {
        $product_id = (string)$product_id;
        unset($this->cart[$product_id]);
    }

    // Get all items in cart
    public function get_cart() {
        return $this->cart;
    }

    // Calculate total price
    public function total_price($products) {
        $total = 0;
        foreach ($this->cart as $item) {
            if (isset($products[$item['id']]['price'])) {
                $total += $products[$item['id']]['price'] * $item['quantity'];
            }
        }
        return $total;
    }

    // Empty the cart
    public function empty_cart() {
        unset($_SESSION['shopping_cart']);
        $this->cart = array();
    }
}

// Example usage:

// Initialize shopping cart
$cart = new ShoppingCart();

// Define some products (in a real application, this would come from your database)
$products = array(
    '1' => array('name' => 'Product 1', 'price' => 19.99),
    '2' => array('name' => 'Product 2', 'price' => 29.99),
    '3' => array('name' => 'Product 3', 'price' => 39.99)
);

// Add an item to cart
if (isset($_GET['action']) && $_GET['action'] == 'add') {
    $product_id = isset($_GET['id']) ? intval($_GET['id']) : '';
    if ($product_id) {
        $cart->add_item($product_id);
    }
}

// Update item quantity
if (isset($_POST['action']) && $_POST['action'] == 'update') {
    foreach ($_POST as $key => $value) {
        if (strpos($key, 'quantity_') !== false) {
            $product_id = substr($key, 9);
            if ($product_id && is_numeric($value)) {
                $cart->update_quantity($product_id, $value);
            }
        }
    }
}

// Remove item from cart
if (isset($_GET['action']) && $_GET['action'] == 'remove') {
    $product_id = isset($_GET['id']) ? intval($_GET['id']) : '';
    if ($product_id) {
        $cart->remove_item($product_id);
    }
}

// Empty the cart
if (isset($_GET['action']) && $_GET['action'] == 'empty')) {
    $cart->empty_cart();
}
?>


<?php
// Start the session
session_start();

// Initialize cart if not exists
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add item to cart
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $productId = isset($_POST['product_id']) ? intval($_POST['product_id']) : 0;
    $quantity = isset($_POST['quantity']) ? intval($_POST['quantity']) : 1;

    // Check if product is already in cart
    $found = false;
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['product_id'] == $productId) {
            $item['quantity'] += $quantity;
            $found = true;
            break;
        }
    }

    if (!$found) {
        $_SESSION['cart'][] = array(
            'product_id' => $productId,
            'quantity' => $quantity
        );
    }
}

// Display cart contents
echo "<h2>Shopping Cart</h2>";
if (empty($_SESSION['cart'])) {
    echo "Your cart is empty.";
} else {
    echo "<ul>";
    foreach ($_SESSION['cart'] as $item) {
        echo "<li>Product ID: " . $item['product_id'] . " | Quantity: " . $item['quantity'] . "</li>";
    }
    echo "</ul>";
}

// Remove item from cart
if (isset($_GET['remove'])) {
    $productId = intval($_GET['remove']);
    
    // Search for product and remove it
    foreach ($_SESSION['cart'] as $key => $item) {
        if ($item['product_id'] == $productId) {
            unset($_SESSION['cart'][$key]);
            break;
        }
    }
}

// Empty cart
if (isset($_GET['empty'])) {
    $_SESSION['cart'] = array();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <h1>Add Items to Cart</h1>
    <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
        Product ID: <input type="text" name="product_id"><br>
        Quantity: <input type="text" name="quantity" value="1"><br>
        <input type="submit" value="Add to Cart">
    </form>

    <?php if (!empty($_SESSION['cart'])) { ?>
    <h2>Cart Actions</h2>
    <a href="<?php echo $_SERVER['PHP_SELF']; ?>?empty=1">Empty Cart</a><br><br>
    <?php } ?>

    <h3>Products Available for Purchase:</h3>
    <ul>
        <!-- You would typically fetch products from a database here -->
        <li><a href="?remove=1">Remove Product 1</a></li>
        <li><a href="?remove=2">Remove Product 2</a></li>
        <li><a href="?remove=3">Remove Product 3</a></li>
    </ul>
</body>
</html>


<?php
// Start the session
session_start();

// Check if session is already started
if (session_status() === PHP_SESSION_NONE) {
    session_start();
}
?>


<?php
function addToCart($item_id, $item_name, $price) {
    // Check if cart is not set or empty
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }
    
    // Check if item already exists in the cart
    $item_exists = false;
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['id'] == $item_id) {
            $item['quantity']++;
            $item_exists = true;
            break;
        }
    }
    
    // If item doesn't exist, add it to the cart
    if (!$item_exists) {
        $new_item = array(
            'id' => $item_id,
            'name' => $item_name,
            'price' => $price,
            'quantity' => 1
        );
        $_SESSION['cart'][] = $new_item;
    }
}

function updateCart($item_id, $new_quantity) {
    // Check if cart is set and not empty
    if (isset($_SESSION['cart']) && !empty($_SESSION['cart'])) {
        foreach ($_SESSION['cart'] as &$item) {
            if ($item['id'] == $item_id) {
                $item['quantity'] = $new_quantity;
                break;
            }
        }
    }
}

function removeItemFromCart($item_id) {
    // Check if cart is set and not empty
    if (isset($_SESSION['cart']) && !empty($_SESSION['cart'])) {
        foreach ($_SESSION['cart'] as $key => &$item) {
            if ($item['id'] == $item_id) {
                unset($_SESSION['cart'][$key]);
                // Re-index the array keys
                $_SESSION['cart'] = array_values($_SESSION['cart']);
                break;
            }
        }
    }
}
?>


<?php
// Check if form data is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get the item details from the form
    $item_id = $_POST['item_id'];
    $item_name = $_POST['item_name'];
    $price = $_POST['price'];
    
    // Add the item to the cart
    addToCart($item_id, $item_name, $price);
}
header("Location: cart.php");
exit();
?>


<?php
// Check if session is started and cart exists
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <?php
    $total_price = 0;
    
    foreach ($_SESSION['cart'] as $item) {
        $price_total = $item['price'] * $item['quantity'];
        $total_price += $price_total;
        
        echo "<div>";
        echo "Item ID: " . $item['id'] . "<br>";
        echo "Item Name: " . $item['name'] . "<br>";
        echo "Price: $" . number_format($item['price'], 2) . "<br>";
        echo "Quantity: <input type='number' name='quantity_" . $item['id'] . "' value='" . $item['quantity'] . "' min='1'>";
        echo "<form action='update_cart.php' method='post'>";
        echo "<input type='hidden' name='item_id' value='" . $item['id'] . "'>";
        echo "<button type='submit'>Update</button>";
        echo "</form>";
        echo "<a href='remove_from_cart.php?item_id=" . $item['id'] . "'>Remove</a><br>";
        echo "Total for this item: $" . number_format($price_total, 2) . "<br>";
        echo "</div>";
    }
    
    if (empty($_SESSION['cart'])) {
        echo "Your cart is empty.";
    } else {
        echo "<h3>Total Price: $" . number_format($total_price, 2) . "</h3>";
    }
    ?>
</body>
</html>


<?php
session_start();

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    if (isset($_POST['item_id']) && isset($_POST['quantity'])) {
        $item_id = $_POST['item_id'];
        $new_quantity = intval($_POST['quantity']);
        
        updateCart($item_id, $new_quantity);
    }
}

header("Location: cart.php");
exit();
?>


<?php
session_start();

if (isset($_GET['item_id'])) {
    $item_id = $_GET['item_id'];
    removeItemFromCart($item_id);
}

header("Location: cart.php");
exit();
?>


<?php
session_start();
unset($_SESSION['cart']);
session_unset();
session_destroy();

// Redirect to login page or homepage
header("Location: index.php");
exit();
?>


<?php
// Start the session
session_start();

// Initialize cart session if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function add_to_cart($product_id, $product_name, $price, $quantity) {
    global $$_SESSION;
    
    // Check if product already exists in the cart
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['product_id'] == $product_id) {
            // Update quantity if item exists
            $item['quantity'] += $quantity;
            return true;
        }
    }
    
    // Add new item to cart
    $_SESSION['cart'][] = array(
        'product_id' => $product_id,
        'product_name' => $product_name,
        'price' => $price,
        'quantity' => $quantity
    );
    return true;
}

// Function to remove item from cart
function remove_from_cart($product_id) {
    global $_SESSION;
    
    // Remove item from cart
    foreach ($_SESSION['cart'] as $key => &$item) {
        if ($item['product_id'] == $product_id) {
            unset($_SESSION['cart'][$key]);
            break;
        }
    }
    
    // Re-index the array keys
    $_SESSION['cart'] = array_values($_SESSION['cart']);
}

// Function to update item quantity in cart
function update_quantity($product_id, $new_quantity) {
    global $_SESSION;
    
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['product_id'] == $product_id) {
            $item['quantity'] = $new_quantity;
            break;
        }
    }
}

// Function to get cart items
function get_cart() {
    global $_SESSION;
    return $_SESSION['cart'];
}

// Function to calculate total price of the cart
function calculate_total() {
    global $_SESSION;
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += ($item['price'] * $item['quantity']);
    }
    return $total;
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <?php
    // Example usage:
    
    // Add items to cart
    add_to_cart(1, 'Product 1', 10.00, 2);
    add_to_cart(2, 'Product 2', 20.00, 1);
    
    // Display cart contents
    $cart = get_cart();
    echo "<h3>Your Cart:</h3>";
    foreach ($cart as $item) {
        echo "Product ID: " . $item['product_id'] . "<br>";
        echo "Name: " . $item['product_name'] . "<br>";
        echo "Price: $" . number_format($item['price'], 2) . "<br>";
        echo "Quantity: " . $item['quantity'] . "<br><br>";
    }
    
    // Display total price
    $total = calculate_total();
    echo "Total Price: $" . number_format($total, 2);
    
    // Remove an item from cart
    remove_from_cart(1);
    
    // Update quantity of an item
    update_quantity(2, 3);
    ?>
</body>
</html>


<?php
// Start the session
session_start();

// Set session cookie parameters for security
ini_set('session.cookie_httponly', 1);
ini_set('session.use_strict_mode', 1);

// Initialize cart if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function addToCart($item_id, $item_name, $price, $quantity) {
    global $db; // Assuming you have a database connection

    if (isset($_SESSION['cart'][$item_id])) {
        // Item already in cart, increase quantity
        $_SESSION['cart'][$item_id]['quantity'] += $quantity;
    } else {
        // Add new item to cart
        $_SESSION['cart'][$item_id] = array(
            'item_id' => $item_id,
            'name' => $item_name,
            'price' => $price,
            'quantity' => $quantity
        );
    }
}

// Function to remove item from cart
function removeFromCart($item_id) {
    if (isset($_SESSION['cart'][$item_id])) {
        unset($_SESSION['cart'][$item_id]);
        // Re-index the array after unsetting
        $_SESSION['cart'] = array_values($_SESSION['cart']);
    }
}

// Function to update item quantity
function updateQuantity($item_id, $new_quantity) {
    if (isset($_SESSION['cart'][$item_id])) {
        $_SESSION['cart'][$item_id]['quantity'] = $new_quantity;
    }
}

// Function to empty the cart
function emptyCart() {
    $_SESSION['cart'] = array();
}

// Function to display cart contents
function displayCart() {
    if (!empty($_SESSION['cart'])) {
        echo "<table>";
        echo "<tr><th>Item Name</th><th>Price</th><th>Quantity</th><th>Total</th></tr>";
        
        $total_price = 0;
        
        foreach ($_SESSION['cart'] as $item) {
            $subtotal = $item['price'] * $item['quantity'];
            $total_price += $subtotal;
            
            echo "<tr>";
            echo "<td>" . $item['name'] . "</td>";
            echo "<td>₹" . number_format($item['price'], 2) . "</td>";
            echo "<td><input type='number' value='" . $item['quantity'] . "' onchange='updateQuantity(" . $item['item_id'] . ", this.value)'></td>";
            echo "<td>₹" . number_format($subtotal, 2) . "</td>";
            echo "<td><button onclick='removeFromCart(" . $item['item_id'] . ")'>Remove</button></td>";
            echo "</tr>";
        }
        
        echo "<tr><td colspan='3'>Total:</td><td>₹" . number_format($total_price, 2) . "</td></tr>";
        echo "</table>";
    } else {
        echo "Your cart is empty.";
    }
}

// Example usage:

// Add item to cart
if (isset($_GET['action']) && $_GET['action'] == 'add') {
    $item_id = intval($_GET['id']);
    $quantity = intval($_GET['qty']);
    
    // Retrieve item details from database
    $query = "SELECT name, price FROM products WHERE id = $item_id";
    $result = $db->query($query);
    $product = $result->fetch_assoc();
    
    addToCart($item_id, $product['name'], $product['price'], $quantity);
}

// Remove item from cart
if (isset($_GET['action']) && $_GET['action'] == 'remove') {
    $item_id = intval($_GET['id']);
    removeFromCart($item_id);
}

// Empty the cart
if (isset($_GET['action']) && $_GET['action'] == 'empty')) {
    emptyCart();
}

// Display the cart
displayCart();

?>


<?php
// Start the session
session_start();

// Check if the cart exists in the session, initialize it if not
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Example product data (you would typically retrieve this from a database)
$products = array(
    1 => array('name' => 'Product 1', 'price' => 29.99),
    2 => array('name' => 'Product 2', 'price' => 49.99),
    3 => array('name' => 'Product 3', 'price' => 19.99)
);

// Add item to cart
if (isset($_GET['action']) && $_GET['action'] == 'add') {
    $productId = intval($_GET['id']);
    if (isset($products[$productId])) {
        // Check if the product is already in the cart
        if (!isset($_SESSION['cart'][$productId])) {
            $_SESSION['cart'][$productId] = array(
                'name' => $products[$productId]['name'],
                'price' => $products[$productId]['price'],
                'quantity' => 1
            );
        } else {
            // Increment quantity if product already exists
            $_SESSION['cart'][$productId]['quantity']++;
        }
    }
}

// Remove item from cart
if (isset($_GET['action']) && $_GET['action'] == 'remove') {
    $productId = intval($_GET['id']);
    if (isset($_SESSION['cart'][$productId])) {
        unset($_SESSION['cart'][$productId]);
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
    <style>
        .cart-item { padding: 10px; border-bottom: 1px solid #ccc; margin-bottom: 5px; }
    </style>
</head>
<body>
    <h2>Products Available:</h2>
    <?php foreach ($products as $id => $product): ?>
        <div style="margin: 10px;">
            <h3><?php echo $product['name']; ?></h3>
            <p>Price: $<?php echo number_format($product['price'], 2); ?></p>
            <a href="?action=add&id=<?php echo $id; ?>">Add to Cart</a>
        </div>
    <?php endforeach; ?>

    <h2>Your Shopping Cart:</h2>
    <?php if (empty($_SESSION['cart'])): ?>
        <p>Your cart is empty.</p>
    <?php else: ?>
        <div id="cartItems">
            <?php $total = 0; foreach ($_SESSION['cart'] as $id => $item): ?>
                <div class="cart-item">
                    <p><?php echo $item['name']; ?></p>
                    <p>Quantity: <?php echo $item['quantity']; ?></p>
                    <p>Price: $<?php echo number_format($item['price'], 2); ?></p>
                    <form method="post" style="display:inline;">
                        <input type="hidden" name="id" value="<?php echo $id; ?>">
                        <button type="submit" name="remove">Remove</button>
                    </form>
                </div>
            <?php $total += ($item['price'] * $item['quantity']); endforeach; ?>
            <h3>Total: $<?php echo number_format($total, 2); ?></h3>
        </div>
    <?php endif; ?>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        $(document).ready(function(){
            $('button[name="remove"]').click(function(e){
                e.preventDefault();
                var productId = $(this).closest('.cart-item').find('input[name="id"]').val();
                $.ajax({
                    url: '?action=remove&id=' + productId,
                    success: function(response){
                        $('#cartItems').html('<div class="loading">Updating cart...</div>');
                        window.location.reload();
                    }
                });
            });
        });
    </script>
</body>
</html>


<?php
// Start the session
session_start();

// Initialize cart if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Get product details (you would typically retrieve this from your database)
$products = array(
    1 => array('name' => 'Product 1', 'price' => 29.99, 'quantity' => 5),
    2 => array('name' => 'Product 2', 'price' => 49.99, 'quantity' => 3),
    // Add more products as needed
);

// Handle form submission for adding/removing items from cart
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    if (isset($_POST['add_to_cart'])) {
        $productId = intval($_POST['product_id']);
        $quantity = intval($_POST['quantity']);

        // Check if product exists and quantity is valid
        if (isset($products[$productId]) && $quantity > 0) {
            // If item already in cart, update quantity
            if (isset($_SESSION['cart'][$productId])) {
                $_SESSION['cart'][$productId]['quantity'] += $quantity;
            } else {
                // Add new item to cart
                $_SESSION['cart'][$productId] = array(
                    'name' => $products[$productId]['name'],
                    'price' => $products[$productId]['price'],
                    'quantity' => $quantity,
                );
            }
        }
    }

    if (isset($_POST['remove_from_cart'])) {
        $productId = intval($_POST['product_id']);
        // Remove item from cart
        unset($_SESSION['cart'][$productId]);
        // Re-index the array to maintain clean keys
        $_SESSION['cart'] = array_values($_SESSION['cart']);
    }
}

// Display cart contents
echo "<h2>Shopping Cart</h2>";
if (empty($_SESSION['cart'])) {
    echo "Your cart is empty!";
} else {
    foreach ($_SESSION['cart'] as $item) {
        echo "Item: {$item['name']}<br />";
        echo "Price: \${$item['price']}<br />";
        echo "Quantity: {$item['quantity']}<br /><hr />";
    }
}

// Example HTML forms for adding/removing items
echo '<h2>Products</h2>';
foreach ($products as $id => $product) {
    echo "<div style='border:1px solid #ddd; padding:10px; margin:5px 0;'>";
    echo "Product ID: {$id}<br />";
    echo "Name: {$product['name']}<br />";
    echo "Price: \${$product['price']}<br />";
    echo "Available Quantity: {$product['quantity']}<br />";
    
    // Add to cart form
    echo '<form method="post">';
    echo "<input type='hidden' name='product_id' value='{$id}'>";
    echo "Quantity: <input type='number' name='quantity' min='1' max='{$product['quantity']}'><br />";
    echo "<button type='submit' name='add_to_cart'>Add to Cart</button>";
    echo '</form>';
    
    // Remove from cart form (if item is already in cart)
    if (isset($_SESSION['cart'][$id])) {
        echo '<form method="post" style="display:inline;">';
        echo "<input type='hidden' name='product_id' value='{$id}'>";
        echo "<button type='submit' name='remove_from_cart'>Remove from Cart</button>";
        echo '</form>';
    }
    
    echo "</div>";
}

// Display cart contents button
echo '<br /><a href="view_cart.php">View Cart</a>';

?>


<?php
session_start();

echo "<h2>Your Shopping Cart</h2>";
if (empty($_SESSION['cart'])) {
    echo "Your cart is empty!";
} else {
    echo "<table border='1'>";
    echo "<tr><th>Product Name</th><th>Price</th><th>Quantity</th><th>Total</th></tr>";
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $subtotal = $item['price'] * $item['quantity'];
        $total += $subtotal;
        echo "<tr>";
        echo "<td>{$item['name']}</td>";
        echo "<td>\${$item['price']}</td>";
        echo "<td>{$item['quantity']}</td>";
        echo "<td>\${$subtotal}</td>";
        echo "</tr>";
    }
    echo "<tr><td colspan='3'>Total:</td><td>\${$total}</td></tr>";
    echo "</table>";
}

echo '<a href="cart.php">Continue Shopping</a>';
?>


<?php
session_start();
?>


<?php
session_start();

if (isset($_POST['item_id'])) {
    $item_id = $_POST['item_id'];
    
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }
    
    // Add item or update quantity
    if (array_key_exists($item_id, $_SESSION['cart'])) {
        $_SESSION['cart'][$item_id]['quantity']++;
    } else {
        $_SESSION['cart'][$item_id] = array(
            'id' => $item_id,
            'quantity' => 1
        );
    }
    
    header("Location: cart.php?message=Item added to cart");
    exit();
} elseif (isset($_POST['remove_item'])) {
    $item_id = $_POST['remove_item'];
    
    if (isset($_SESSION['cart'][$item_id])) {
        unset($_SESSION['cart'][$item_id]);
        // Re-index the array
        $_SESSION['cart'] = array_values($_SESSION['cart']);
    }
    
    header("Location: cart.php?message=Item removed from cart");
    exit();
}
?>


<?php
session_start();

// Initialize cart if not set
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add item to cart
if (isset($_POST['add_to_cart'])) {
    $productId = $_POST['product_id'];
    $quantity = $_POST['quantity'];
    
    // Check if product exists in cart
    $found = false;
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['product_id'] == $productId) {
            $item['quantity'] += $quantity;
            $found = true;
            break;
        }
    }
    unset($item); // Break the reference
    
    if (!$found) {
        $_SESSION['cart'][] = array(
            'product_id' => $productId,
            'quantity' => $quantity,
            'price' => 100, // Example price
            'name' => 'Product Name' // Example name
        );
    }
}

// Remove item from cart
if (isset($_POST['remove_item'])) {
    $productId = $_POST['product_id'];
    
    foreach ($_SESSION['cart'] as $key => $item) {
        if ($item['product_id'] == $productId) {
            unset($_SESSION['cart'][$key]);
            break;
        }
    }
    // Re-index the array
    $_SESSION['cart'] = array_values($_SESSION['cart']);
}

// Empty cart
if (isset($_POST['empty_cart'])) {
    unset($_SESSION['cart']);
    $_SESSION['cart'] = array();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <?php if (!empty($_SESSION['cart'])): ?>
        <h1>Your Cart</h1>
        <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
            <table border="1">
                <tr>
                    <th>Product Name</th>
                    <th>Quantity</th>
                    <th>Price</th>
                    <th>Total</th>
                    <th>Action</th>
                </tr>
                <?php
                $total = 0;
                foreach ($_SESSION['cart'] as $item):
                    $total += $item['quantity'] * $item['price'];
                    ?>
                    <tr>
                        <td><?php echo $item['name']; ?></td>
                        <td><?php echo $item['quantity']; ?></td>
                        <td>$<?php echo number_format($item['price'], 2); ?></td>
                        <td>$<?php echo number_format($item['quantity'] * $item['price'], 2); ?></td>
                        <td>
                            <input type="hidden" name="product_id" value="<?php echo $item['product_id']; ?>">
                            <input type="submit" name="remove_item" value="Remove">
                        </td>
                    </tr>
                <?php endforeach; ?>
            </table>
            <p>Total: $<?php echo number_format($total, 2); ?></p>
            <input type="submit" name="empty_cart" value="Empty Cart">
        </form>
    <?php else: ?>
        <p>Your cart is empty.</p>
    <?php endif; ?>

    <h1>Add to Cart</h1>
    <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
        <input type="text" name="product_id" placeholder="Enter product ID">
        <input type="number" name="quantity" value="1">
        <input type="submit" name="add_to_cart" value="Add to Cart">
    </form>
</body>
</html>


<?php
// Start the session
session_start();

// Initialize cart if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function addToCart($productId, $productName, $productPrice, $sizeColor) {
    global $mysqli;
    
    // Check if product is already in the cart
    if (isset($_SESSION['cart'][$productId])) {
        // Increment quantity
        $_SESSION['cart'][$productId]['quantity']++;
    } else {
        // Add new item to cart
        $_SESSION['cart'][$productId] = array(
            'product_id' => $productId,
            'product_name' => $productName,
            'product_price' => $productPrice,
            'size_color' => $sizeColor,
            'quantity' => 1
        );
    }
}

// Function to remove item from cart
function removeFromCart($productId) {
    if (isset($_SESSION['cart'][$productId])) {
        unset($_SESSION['cart'][$productId]);
    }
}

// Function to update quantity of an item
function updateQuantity($productId, $quantity) {
    if (isset($_SESSION['cart'][$productId]) && $quantity > 0) {
        $_SESSION['cart'][$productId]['quantity'] = $quantity;
    }
}

// Function to calculate total amount
function cartTotal() {
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += ($item['product_price'] * $item['quantity']);
    }
    return $total;
}

// Displaying the cart items
echo "<h2>Your Shopping Cart</h2>";
if (empty($_SESSION['cart'])) {
    echo "Your cart is empty.";
} else {
    echo "<table>";
    echo "<tr><th>Product Name</th><th>Size/Color</th><th>Quantity</th><th>Price</th><th>Total</th><th>Action</th></tr>";
    
    foreach ($_SESSION['cart'] as $item) {
        echo "<tr>";
        echo "<td>" . $item['product_name'] . "</td>";
        echo "<td>" . $item['size_color'] . "</td>";
        echo "<td><input type='number' min='1' value='" . $item['quantity'] . "' onchange='updateQuantity(" . $item['product_id'] . ", this.value)'></td>";
        echo "<td>Rs. " . number_format($item['product_price'], 2) . "</td>";
        echo "<td>Rs. " . number_format($item['product_price'] * $item['quantity'], 2) . "</td>";
        echo "<td><button onclick='removeFromCart(" . $item['product_id'] . ")'>Remove</button></td>";
        echo "</tr>";
    }
    
    echo "</table>";
    echo "<h3>Grand Total: Rs. " . number_format(cartTotal(), 2) . "</h3>";
    echo "<a href='checkout.php' class='checkout-button'>Checkout</a>";
    echo "<button onclick='clearCart()'>Clear Cart</button>";
}

// Function to clear the cart
function clearCart() {
    unset($_SESSION['cart']);
}
?>


<?php
// Start the session
session_start();

// Include database connection file (assuming you have one)
include('db.php');

// Check if user is logged in
if (!isset($_SESSION['user_id'])) {
    // If not logged in, redirect to login page
    header("Location: login.php?error=Please%20login%20to%20access%20your%20cart.");
    exit();
}

// Initialize cart if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function add_to_cart($product_id, $quantity) {
    global $conn;
    
    // Check if product exists in database
    $stmt = $conn->prepare("SELECT * FROM products WHERE id = ?");
    $stmt->bind_param("i", $product_id);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows > 0) {
        // Check if item already in cart
        if (isset($_SESSION['cart'][$product_id])) {
            $_SESSION['cart'][$product_id]['quantity'] += $quantity;
        } else {
            $row = $result->fetch_assoc();
            $_SESSION['cart'][$product_id] = array(
                'id' => $product_id,
                'name' => $row['name'],
                'price' => $row['price'],
                'quantity' => $quantity
            );
        }
    }
}

// Function to remove item from cart
function remove_from_cart($product_id) {
    if (isset($_SESSION['cart'][$product_id])) {
        unset($_SESSION['cart'][$product_id]);
    }
}

// Handle add to cart action
if (isset($_POST['action']) && $_POST['action'] == 'add') {
    $product_id = intval($_POST['product_id']);
    $quantity = intval($_POST['quantity']);
    
    // Sanitize inputs
    $product_id = mysqli_real_escape_string($conn, $product_id);
    $quantity = mysqli_real_escape_string($conn, $quantity);
    
    add_to_cart($product_id, $quantity);
}

// Handle remove from cart action
if (isset($_GET['action']) && $_GET['action'] == 'remove') {
    $product_id = intval($_GET['product_id']);
    remove_from_cart($product_id);
}

// Display cart contents
echo "<h2>Your Cart</h2>";
echo "<table border='1'>";
echo "<tr><th>Product Name</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>";

$total = 0;
foreach ($_SESSION['cart'] as $item) {
    $total_price = $item['price'] * $item['quantity'];
    $total += $total_price;
    
    echo "<tr>";
    echo "<td>" . $item['name'] . "</td>";
    echo "<td>$" . number_format($item['price'], 2, '.', '') . "</td>";
    echo "<td>" . $item['quantity'] . "</td>";
    echo "<td>$" . number_format($total_price, 2, '.', '') . "</td>";
    echo "<td><a href='cart.php?action=remove&product_id=" . $item['id'] . "'>Remove</a></td>";
    echo "</tr>";
}

echo "</table>";
echo "<h3>Total: $" . number_format($total, 2, '.', '') . "</h3>";
?>


<?php
session_start();

// Initialize cart if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add item to cart
function addToCart($productId, $productName, $price) {
    global $mysqli;
    
    // Check if product is already in cart
    foreach ($_SESSION['cart'] as $item) {
        if ($item['product_id'] == $productId) {
            // Increment quantity
            $_SESSION['cart'][$key]['quantity']++;
            return;
        }
    }
    
    // Add new item to cart
    $sanitizedProductId = mysqli_real_escape_string($mysqli, $productId);
    $sanitizedProductName = mysqli_real_escape_string($mysqli, $productName);
    
    $_SESSION['cart'][] = array(
        'product_id' => $sanitizedProductId,
        'product_name' => $sanitizedProductName,
        'price' => (float)$price,
        'quantity' => 1
    );
}

// Calculate total price of cart items
function calculateTotal() {
    $total = 0;
    
    foreach ($_SESSION['cart'] as $item) {
        $total += ($item['price'] * $item['quantity']);
    }
    
    return number_format($total, 2);
}

// Remove item from cart
function removeFromCart($productId) {
    foreach ($_SESSION['cart'] as $key => $item) {
        if ($item['product_id'] == $productId) {
            unset($_SESSION['cart'][$key]);
        }
    }
    
    // Re-index array keys
    $_SESSION['cart'] = array_values($_SESSION['cart']);
}

// Display cart contents
function displayCart() {
    if (empty($_SESSION['cart'])) {
        echo "<p>Your cart is empty.</p>";
    } else {
        foreach ($_SESSION['cart'] as $item) {
            echo "<div class='cart-item'>";
            echo "<h3>" . $item['product_name'] . "</h3>";
            echo "<p>Price: $" . number_format($item['price'], 2) . "</p>";
            echo "<p>Quantity: " . $item['quantity'] . "</p>";
            echo "<form method='post' action=''>";
            echo "<input type='hidden' name='remove_id' value='" . $item['product_id'] . "'>";
            echo "<button type='submit'>Remove</button>";
            echo "</form>";
            echo "</div>";
        }
    }
}

// Process remove item
if (isset($_POST['remove'])) {
    $productId = $_POST['remove_id'];
    removeFromCart($productId);
}
?>


<?php
session_start();

// Initialize cart if not exists
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

function add_to_cart($item_id, $item_name, $price, $quantity) {
    global $error;
    $found = false;
    
    foreach ($_SESSION['cart'] as $key => $value) {
        if ($value['item_id'] == $item_id) {
            $found = true;
            break;
        }
    }
    
    if (!$found) {
        array_push($_SESSION['cart'], array(
            'item_id' => $item_id,
            'item_name' => $item_name,
            'price' => $price,
            'quantity' => $quantity
        ));
    } else {
        $error = "Item already exists in cart!";
    }
}

function display_cart() {
    if (empty($_SESSION['cart'])) {
        echo "<p>Your cart is empty.</p>";
        return;
    }
    
    $total = 0;
    echo "<table border='1'>
            <tr>
                <th>Item Name</th>
                <th>Price</th>
                <th>Quantity</th>
                <th>Total</th>
                <th>Action</th>
            </tr>";
    
    foreach ($_SESSION['cart'] as $key => $value) {
        $total_item = $value['price'] * $value['quantity'];
        $total += $total_item;
        
        echo "<tr>
                <td>" . $value['item_name'] . "</td>
                <td>₹" . number_format($value['price'], 2) . "</td>
                <td>" . $value['quantity'] . "</td>
                <td>₹" . number_format($total_item, 2) . "</td>
                <td><a href='?action=remove&id=" . $key . "'>Remove</a></td>
              </tr>";
    }
    
    echo "<tr>
            <td colspan='3' align='right'><strong>Total:</strong></td>
            <td colspan='2'><strong>₹" . number_format($total, 2) . "</strong></td>
          </tr>";
    echo "</table>";
}

function remove_from_cart($key) {
    if (isset($_SESSION['cart'][$key])) {
        unset($_SESSION['cart'][$key]);
        // Re-index the array to maintain sequential keys
        $_SESSION['cart'] = array_values($_SESSION['cart']);
    }
}

if (isset($_GET['action'])) {
    switch ($_GET['action']) {
        case 'add':
            $item_id = isset($_GET['id']) ? intval($_GET['id']) : 0;
            $item_name = isset($_GET['name']) ? $_GET['name'] : '';
            $price = isset($_GET['price']) ? floatval($_GET['price']) : 0.0;
            $quantity = isset($_GET['quantity']) ? intval($_GET['quantity']) : 1;
            
            add_to_cart($item_id, $item_name, $price, $quantity);
            break;
        
        case 'remove':
            $key = isset($_GET['id']) ? intval($_GET['id']) : 0;
            remove_from_cart($key);
            break;
    }
}

// Display any error messages
if (isset($error)) {
    echo "<div class='error'>" . $error . "</div>";
    unset($error); // Clear the error after displaying
}

display_cart();
?>


<?php
// Start the session
session_start();

// Set a unique session ID if needed
if (!isset($_SESSION['id'])) {
    $_SESSION['id'] = md5(uniqid(rand(), true));
}
?>


<?php
function addToCart($productId, $quantity) {
    global $pdo; // Assuming you have a PDO connection

    $userId = $_SESSION['id'];

    try {
        $stmt = $pdo->prepare("SELECT id FROM cart WHERE user_id = ? AND product_id = ?");
        $stmt->execute([$userId, $productId]);
        $result = $stmt->fetchAll(PDO::FETCH_ASSOC);

        if (empty($result)) {
            // Insert new item
            $stmt = $pdo->prepare("INSERT INTO cart (user_id, product_id, quantity) VALUES (?, ?, ?)");
            $stmt->execute([$userId, $productId, $quantity]);
        } else {
            // Update existing item
            $stmt = $pdo->prepare("UPDATE cart SET quantity = quantity + ? WHERE user_id = ? AND product_id = ?");
            $stmt->execute([$quantity, $userId, $productId]);
        }

        return true;
    } catch (PDOException $e) {
        echo "Error: " . $e->getMessage();
        return false;
    }
}
?>


<?php
function removeFromCart($productId) {
    global $pdo;

    $userId = $_SESSION['id'];

    try {
        $stmt = $pdo->prepare("DELETE FROM cart WHERE user_id = ? AND product_id = ?");
        $stmt->execute([$userId, $productId]);
        return true;
    } catch (PDOException $e) {
        echo "Error: " . $e->getMessage();
        return false;
    }
}
?>


<?php
function updateCartQuantity($productId, $quantity) {
    global $pdo;

    $userId = $_SESSION['id'];

    try {
        $stmt = $pdo->prepare("UPDATE cart SET quantity = ? WHERE user_id = ? AND product_id = ?");
        $stmt->execute([$quantity, $userId, $productId]);
        return true;
    } catch (PDOException $e) {
        echo "Error: " . $e->getMessage();
        return false;
    }
}
?>


<?php
function getCartContents() {
    global $pdo;

    $userId = $_SESSION['id'];
    $cartItems = array();

    try {
        $stmt = $pdo->prepare("SELECT * FROM cart WHERE user_id = ?");
        $stmt->execute([$userId]);
        $cartItems = $stmt->fetchAll(PDO::FETCH_ASSOC);

        return $cartItems;
    } catch (PDOException $e) {
        echo "Error: " . $e->getMessage();
        return false;
    }
}
?>

<?php
$cartContents = getCartContents();
if (!empty($cartContents)) {
    foreach ($cartContents as $item) {
        // Display each item's details
        echo "<div>Item ID: " . $item['product_id'] . "</div>";
        echo "<div>Quantity: " . $item['quantity'] . "</div>";
        // Add more details as needed
    }
} else {
    echo "Your cart is empty.";
}
?>


<?php
function clearCart() {
    global $pdo;

    $userId = $_SESSION['id'];

    try {
        $stmt = $pdo->prepare("DELETE FROM cart WHERE user_id = ?");
        $stmt->execute([$userId]);
        return true;
    } catch (PDOException $e) {
        echo "Error: " . $e->getMessage();
        return false;
    }
}
?>


<?php
// Start the session
session_start();

// Function to add item to cart
function addToCart($item_id, $item_name, $price, $quantity = 1) {
    // Check if cart is already set in session
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }
    
    // Check if item already exists in cart
    if (array_key_exists($item_id, $_SESSION['cart'])) {
        // If exists, increment quantity
        $_SESSION['cart'][$item_id]['quantity'] += $quantity;
    } else {
        // If not exists, add new item to cart
        $_SESSION['cart'][$item_id] = array(
            'item_id' => $item_id,
            'item_name' => $item_name,
            'price' => $price,
            'quantity' => $quantity
        );
    }
}

// Function to remove item from cart
function removeFromCart($item_id) {
    if (isset($_SESSION['cart'][$item_id])) {
        unset($_SESSION['cart'][$item_id]);
    }
}

// Function to update quantity of an item in cart
function updateQuantity($item_id, $quantity) {
    if (isset($_SESSION['cart'][$item_id]) && $quantity > 0) {
        $_SESSION['cart'][$item_id]['quantity'] = $quantity;
    }
}

// Function to calculate total price
function calculateTotal() {
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += ($item['price'] * $item['quantity']);
    }
    return number_format($total, 2); // Format to 2 decimal places
}

// Function to display cart items
function displayCart() {
    if (!empty($_SESSION['cart'])) {
        echo "<table border='1'>";
        echo "<tr><th>Item Name</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>";
        
        foreach ($_SESSION['cart'] as $item_id => $item) {
            $total_price = $item['price'] * $item['quantity'];
            echo "<tr>";
            echo "<td>" . $item['item_name'] . "</td>";
            echo "<td>£" . number_format($item['price'], 2) . "</td>";
            echo "<td><input type='number' value='" . $item['quantity'] . "' onchange='updateQuantity(" . $item_id . ", this.value)' min='1'></td>";
            echo "<td>£" . number_format($total_price, 2) . "</td>";
            echo "<td><button onclick='removeFromCart(" . $item_id . ")'>Remove</button></td>";
            echo "</tr>";
        }
        
        $cart_total = calculateTotal();
        echo "<tr><td colspan='4'><strong>Cart Total:</strong></td><td>£" . $cart_total . "</td></tr>";
        echo "</table>";
    } else {
        echo "Your cart is empty!";
    }
}

// Function to clear the cart
function clearCart() {
    unset($_SESSION['cart']);
}

// Example usage:
// addToCart(1, 'Product 1', 29.99);
// addToCart(2, 'Product 2', 49.99);

displayCart();
?>


<?php
session_start();

if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

function add_to_cart($item_id, $item_name, $price) {
    global $cart;
    $found = false;

    foreach ($cart as &$item) {
        if ($item['id'] == $item_id) {
            $item['quantity']++;
            $found = true;
            break;
        }
    }

    if (!$found) {
        $cart[] = array(
            'id' => $item_id,
            'name' => $item_name,
            'price' => $price,
            'quantity' => 1
        );
    }
}

function update_quantity($item_id, $new_quantity) {
    global $cart;
    foreach ($cart as &$item) {
        if ($item['id'] == $item_id) {
            $item['quantity'] = $new_quantity;
            break;
        }
    }
}

function remove_item($item_id) {
    global $cart;
    $index = 0;
    foreach ($cart as $key => $item) {
        if ($item['id'] == $item_id) {
            unset($cart[$key]);
            break;
        }
    }
    $_SESSION['cart'] = array_values($cart);
}

function calculate_total() {
    global $cart;
    $total = 0.0;
    foreach ($cart as $item) {
        $total += $item['price'] * $item['quantity'];
    }
    return $total;
}

function display_cart() {
    global $cart;
    if (empty($cart)) {
        echo "Your cart is empty.";
        return;
    }

    echo "<table border='1'>";
    echo "<tr><th>Product</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>";
    foreach ($cart as $item) {
        $total = $item['price'] * $item['quantity'];
        echo "<tr>";
        echo "<td>{$item['name']}</td>";
        echo "<td>\${$item['price']}</td>";
        echo "<td><input type='number' name='quantity{$item['id']}' value='{$item['quantity']}' onchange='updateQuantity({$item['id']}, this.value)'></td>";
        echo "<td>\${$total}</td>";
        echo "<td><button onclick='removeItem({$item['id']})'>Remove</button></td>";
        echo "</tr>";
    }
    echo "</table>";
}

// Example usage:
if (isset($_GET['action'])) {
    $item_id = isset($_GET['id']) ? intval($_GET['id']) : 0;
    switch ($_GET['action']) {
        case 'add':
            add_to_cart($item_id, "Product {$item_id}", 19.99);
            break;
        case 'update':
            $new_quantity = isset($_GET['quantity']) ? intval($_GET['quantity']) : 1;
            update_quantity($item_id, $new_quantity);
            break;
        case 'remove':
            remove_item($item_id);
            break;
    }
}

display_cart();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
    <script>
        function updateQuantity(id, quantity) {
            window.location.href = `?action=update&id=${id}&quantity=${quantity}`;
        }

        function removeItem(id) {
            if (confirm('Are you sure to remove this item?')) {
                window.location.href = `?action=remove&id=${id}`;
            }
        }
    </script>
</head>
<body>
    <h2>Your Shopping Cart</h2>
    <?php display_cart(); ?>
    <p><a href="products.php">Continue Shopping</a></p>
</body>
</html>


<?php
// Start the session
session_start();

// Check if cart exists in the session, if not initialize it
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function add_to_cart($product_id) {
    global $pdo; // Assuming you have a database connection

    // Get product details from database
    $stmt = $pdo->prepare("SELECT * FROM products WHERE id = ?");
    $stmt->execute([$product_id]);
    $product = $stmt->fetch();

    if ($product) {
        // Check if item already exists in cart
        if (isset($_SESSION['cart'][$product_id])) {
            $_SESSION['cart'][$product_id]['quantity']++;
        } else {
            // Add new item to cart
            $_SESSION['cart'][$product_id] = array(
                'id' => $product->id,
                'name' => $product->name,
                'price' => $product->price,
                'quantity' => 1
            );
        }
    }
}

// Function to display cart contents
function display_cart() {
    if (!empty($_SESSION['cart'])) {
        echo '<table>';
        foreach ($_SESSION['cart'] as $item) {
            echo '<tr>';
            echo '<td>' . $item['name'] . '</td>';
            echo '<td>' . $item['price'] . '</td>';
            echo '<td><input type="number" name="quantity[' . $item['id'] . ']" value="' . $item['quantity'] . '"></td>';
            echo '<td><a href="?remove=' . $item['id'] . '">Remove</a></td>';
            echo '</tr>';
        }
        echo '</table>';
    } else {
        echo 'Your cart is empty.';
    }
}

// Function to update cart
function update_cart() {
    if (!empty($_POST['quantity'])) {
        foreach ($_POST['quantity'] as $product_id => $quantity) {
            if ($quantity > 0) {
                $_SESSION['cart'][$product_id]['quantity'] = $quantity;
            } else {
                unset($_SESSION['cart'][$product_id]);
                // Re-index the cart array
                $_SESSION['cart'] = array_values($_SESSION['cart']);
            }
        }
    }
}

// Function to remove item from cart
function remove_from_cart($product_id) {
    if (isset($_SESSION['cart'][$product_id])) {
        unset($_SESSION['cart'][$product_id]);
        // Re-index the cart array
        $_SESSION['cart'] = array_values($_SESSION['cart']);
    }
}

// Example usage:
if (isset($_GET['add'])) {
    add_to_cart($_GET['add']);
} elseif (isset($_GET['remove'])) {
    remove_from_cart($_GET['remove']);
} elseif ($_SERVER['REQUEST_METHOD'] == 'POST') {
    update_cart();
}

display_cart();
?>



<?php
// Start the session
session_start();

// Set default time zone (optional)
date_default_timezone_set('UTC');

// Check if the cart exists in the session, if not, create it
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function addToCart($productId, $productName, $productPrice) {
    global $conn; // Database connection (assuming you have one)
    
    // Check if product exists in the database
    $stmt = $conn->prepare("SELECT * FROM products WHERE id = ?");
    $stmt->bind_param("i", $productId);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows > 0) {
        // Check if item already exists in cart
        if (isset($_SESSION['cart'][$productId])) {
            $_SESSION['cart'][$productId]['quantity']++;
        } else {
            // Add new item to cart
            $_SESSION['cart'][$productId] = array(
                'product_id' => $productId,
                'product_name' => $productName,
                'product_price' => $productPrice,
                'quantity' => 1
            );
        }
    }
}

// Function to update cart quantity
function updateCart($productId, $quantity) {
    if (isset($_SESSION['cart'][$productId])) {
        $_SESSION['cart'][$productId]['quantity'] = $quantity;
    }
}

// Function to remove item from cart
function removeFromCart($productId) {
    if (isset($_SESSION['cart'][$productId])) {
        unset($_SESSION['cart'][$productId]);
    }
}

// Display cart contents
echo "<h2>Your Cart</h2>";
if (!empty($_SESSION['cart'])) {
    echo "<table border='1'>";
    echo "<tr><th>Product Name</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>";
    
    foreach ($_SESSION['cart'] as $item) {
        $total = $item['product_price'] * $item['quantity'];
        echo "<tr>";
        echo "<td>" . $item['product_name'] . "</td>";
        echo "<td> $" . number_format($item['product_price'], 2) . "</td>";
        echo "<td><form method='post'><input type='number' name='quantity' value='" . $item['quantity'] . "' min='1'></td>";
        echo "<td> $" . number_format($total, 2) . "</td>";
        echo "<td><button type='submit' name='update'>Update</button> <a href='?remove=" . $item['product_id'] . "'>Remove</a></td>";
        echo "</tr>";
    }
    
    echo "</table>";
} else {
    echo "Your cart is empty!";
}

// Handle form actions
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    if (isset($_POST['update'])) {
        $productId = $_GET['id']; // Get product ID from URL
        updateCart($productId, $_POST['quantity']);
    }
}

// Remove item from cart if remove link is clicked
if (isset($_GET['remove'])) {
    removeFromCart($_GET['remove']);
}
?>


addToCart($productId, $productName, $productPrice);


<?php
// Initialize the session
session_start();

// Check if the cart exists in the session. If not, initialize it as an empty array
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Example: Adding items to the cart
$item_id = 1;
$quantity = 2;

// Check if the item already exists in the cart
if (array_search($item_id, array_column($_SESSION['cart'], 'item_id')) !== false) {
    // Update the quantity
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['item_id'] == $item_id) {
            $item['quantity'] += $quantity;
            break;
        }
    }
} else {
    // Add new item to the cart
    $_SESSION['cart'][] = array(
        'item_id' => $item_id,
        'quantity' => $quantity
    );
}

// Display the contents of the cart
echo "<h2>Your Cart:</h2>";
foreach ($_SESSION['cart'] as $item) {
    echo "Item ID: " . $item['item_id'] . ", Quantity: " . $item['quantity'] . "<br>";
}

// Remove an item from the cart (example)
if (isset($_GET['remove'])) {
    $remove_item_id = $_GET['remove'];
    
    // Search for the item and remove it
    foreach ($_SESSION['cart'] as $key => $item) {
        if ($item['item_id'] == $remove_item_id) {
            unset($_SESSION['cart'][$key]);
            break;
        }
    }
    // Re-index the array keys
    $_SESSION['cart'] = array_values($_SESSION['cart']);
}

// Optional: Destroy the session when user logs out
// session_unset();
// session_destroy();

?>


<?php
session_start();

// Function to add item to cart
function addToCart($productId, $quantity) {
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }

    // Check if the product already exists in the cart
    $found = false;
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['product_id'] == $productId) {
            $item['quantity'] += $quantity;
            $found = true;
            break;
        }
    }

    // If not found, add new item to cart
    if (!$found) {
        $_SESSION['cart'][] = array(
            'product_id' => $productId,
            'quantity' => $quantity
        );
    }
}

// Function to display cart items
function displayCart() {
    if (!isset($_SESSION['cart']) || count($_SESSION['cart']) == 0) {
        echo "Your cart is empty!";
        return;
    }

    echo "<table>";
    echo "<tr><th>Product ID</th><th>Quantity</th></tr>";

    foreach ($_SESSION['cart'] as $item) {
        echo "<tr>";
        echo "<td>" . $item['product_id'] . "</td>";
        echo "<td>" . $item['quantity'] . "</td>";
        echo "</tr>";
    }

    echo "</table>";
}

// Function to remove item from cart
function removeFromCart($productId) {
    foreach ($_SESSION['cart'] as $key => &$item) {
        if ($item['product_id'] == $productId) {
            unset($_SESSION['cart'][$key]);
            break;
        }
    }

    // Re-index the array
    $_SESSION['cart'] = array_values($_SESSION['cart']);
}

// Example usage:
if (isset($_POST['add_to_cart'])) {
    $productId = isset($_POST['product_id']) ? intval($_POST['product_id']) : 1;
    $quantity = isset($_POST['quantity']) ? intval($_POST['quantity']) : 1;

    addToCart($productId, $quantity);
}

if (isset($_GET['remove'])) {
    $productId = intval($_GET['remove']);
    removeFromCart($productId);
}

// Destroy cart session when done
if (isset($_GET['logout'])) {
    unset($_SESSION['cart']);
}
?>


<?php displayCart(); ?>


<?php
// Start or resume the session
session_start();

// Initialize cart array if it doesn't exist yet
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add item to cart
function addToCart($productId, $productName, $price) {
    global $cartId;
    // Check if product already exists in cart
    $found = false;
    foreach ($_SESSION['cart'] as $index => $item) {
        if ($item['product_id'] == $productId) {
            // Update quantity and total price
            $_SESSION['cart'][$index]['quantity']++;
            $_SESSION['cart'][$index]['total_price'] = $_SESSION['cart'][$index]['price'] * $_SESSION['cart'][$index]['quantity'];
            $found = true;
            break;
        }
    }
    
    if (!$found) {
        // Add new item to cart
        $item = array(
            'product_id' => $productId,
            'product_name' => $productName,
            'price' => $price,
            'quantity' => 1,
            'total_price' => $price
        );
        
        $_SESSION['cart'][] = $item;
    }
}

// Remove item from cart
function removeFromCart($productId) {
    foreach ($_SESSION['cart'] as $index => $item) {
        if ($item['product_id'] == $productId) {
            unset($_SESSION['cart'][$index]);
            // Re-index the array to avoid gaps in numbering
            $_SESSION['cart'] = array_values($_SESSION['cart']);
            break;
        }
    }
}

// Update quantity of item in cart
function updateQuantity($productId, $newQuantity) {
    foreach ($_SESSION['cart'] as $index => $item) {
        if ($item['product_id'] == $productId) {
            $_SESSION['cart'][$index]['quantity'] = $newQuantity;
            $_SESSION['cart'][$index]['total_price'] = $_SESSION['cart'][$index]['price'] * $newQuantity;
            break;
        }
    }
}

// Calculate cart total
function getCartTotal() {
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += $item['total_price'];
    }
    return $total;
}

// Display cart items
function displayCart() {
    if (empty($_SESSION['cart'])) {
        echo "Your cart is empty.";
        return;
    }
    
    echo "<table>";
    echo "<tr><th>Product</th><th>Price</th><th>Quantity</th><th>Total</th></tr>";
    
    foreach ($_SESSION['cart'] as $item) {
        echo "<tr>";
        echo "<td>".$item['product_name']."</td>";
        echo "<td>$".$item['price']."</td>";
        echo "<td>".$item['quantity']."</td>";
        echo "<td>$".number_format($item['total_price'], 2)."</td>";
        echo "</tr>";
    }
    
    echo "</table>";
    
    // Display grand total
    $grandTotal = getCartTotal();
    echo "Grand Total: $".number_format($grandTotal, 2);
}

// Example usage:
addToCart(1, 'Product 1', 19.99);
addToCart(2, 'Product 2', 29.99);

displayCart();

// Remove an item
removeFromCart(1);

// Update quantity of product 2 to 3
updateQuantity(2, 3);

echo "<br><br>";
displayCart();

// Destroy the session when done
session_unset();
session_destroy();
?>


<?php
session_start();

// Initialize cart if not exists
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function addToCart($productId, $productName, $productPrice) {
    global $connection;
    
    // Check if product already exists in the cart
    $found = false;
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['id'] == $productId) {
            $found = true;
            break;
        }
    }
    
    if (!$found) {
        // Add new product to cart
        $_SESSION['cart'][] = array(
            'id' => $productId,
            'name' => $productName,
            'price' => $productPrice,
            'quantity' => 1
        );
    } else {
        // Increment quantity if product already exists
        foreach ($_SESSION['cart'] as &$item) {
            if ($item['id'] == $productId) {
                $item['quantity']++;
                break;
            }
        }
    }
}

// Function to display cart contents
function displayCart() {
    $total = 0;
    echo "<table>";
    echo "<tr><th>Product Name</th><th>Price</th><th>Quantity</th><th>Total</th></tr>";
    
    foreach ($_SESSION['cart'] as $item) {
        $subtotal = $item['price'] * $item['quantity'];
        $total += $subtotal;
        
        echo "<tr>";
        echo "<td>" . $item['name'] . "</td>";
        echo "<td>$" . number_format($item['price'], 2) . "</td>";
        echo "<td><input type='number' value='" . $item['quantity'] . "' min='1'></td>";
        echo "<td>$" . number_format($subtotal, 2) . "</td>";
        echo "<td><a href='remove_item.php?id=" . $item['id'] . "'>Remove</a></td>";
        echo "</tr>";
    }
    
    echo "<tr><td colspan='3'>Total:</td><td>$" . number_format($total, 2) . "</td></tr>";
    echo "</table>";
}

// Function to remove item from cart
function removeItemFromCart($productId) {
    foreach ($_SESSION['cart'] as $key => &$item) {
        if ($item['id'] == $productId) {
            unset($_SESSION['cart'][$key]);
            break;
        }
    }
    
    // Re-index the array after removal
    $_SESSION['cart'] = array_values($_SESSION['cart']);
}

// Function to update quantity of item in cart
function updateCartItemQuantity($productId, $newQuantity) {
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['id'] == $productId) {
            $item['quantity'] = $newQuantity;
            break;
        }
    }
}

// Example usage:

// Add item to cart
if (isset($_POST['add_to_cart'])) {
    $productId = $_POST['product_id'];
    $productName = $_POST['product_name'];
    $productPrice = $_POST['product_price'];
    
    addToCart($productId, $productName, $productPrice);
}

// Remove item from cart
if (isset($_GET['remove_item'])) {
    $productId = $_GET['id'];
    removeItemFromCart($productId);
}

// Update quantity of item in cart
if (isset($_POST['update_quantity'])) {
    $productId = $_POST['item_id'];
    $newQuantity = $_POST['quantity'];
    
    updateCartItemQuantity($productId, $newQuantity);
}
?>


<?php
session_start();
?>


if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}


function addToCart($item_id, $item_name, $price) {
    // Check if the item is already in the cart
    if (isset($_SESSION['cart'][$item_id])) {
        // Increment quantity by 1
        $_SESSION['cart'][$item_id]['quantity']++;
    } else {
        // Add new item to the cart
        $_SESSION['cart'][$item_id] = array(
            'id' => $item_id,
            'name' => $item_name,
            'price' => $price,
            'quantity' => 1,
            'total' => $price
        );
    }
}


function removeFromCart($item_id) {
    if (isset($_SESSION['cart'][$item_id])) {
        unset($_SESSION['cart'][$item_id]);
    }
}


function updateQuantity($item_id, $new_quantity) {
    if (isset($_SESSION['cart'][$item_id])) {
        $_SESSION['cart'][$item_id]['quantity'] = $new_quantity;
        $_SESSION['cart'][$item_id]['total'] = $_SESSION['cart'][$item_id]['price'] * $new_quantity;
    }
}


function calculateCartTotals() {
    $total_items = 0;
    $total_price = 0;

    foreach ($_SESSION['cart'] as $item) {
        $total_items += $item['quantity'];
        $total_price += $item['total'];
    }

    return array(
        'total_items' => $total_items,
        'total_price' => $total_price
    );
}


function emptyCart() {
    $_SESSION['cart'] = array();
}


if (!empty($_SESSION['cart'])) {
    foreach ($_SESSION['cart'] as $item) {
        echo "Item ID: " . $item['id'] . "<br>";
        echo "Item Name: " . $item['name'] . "<br>";
        echo "Price: $" . number_format($item['price'], 2) . "<br>";
        echo "Quantity: " . $item['quantity'] . "<br>";
        echo "Total: $" . number_format($item['total'], 2) . "<br><br>";
    }
} else {
    echo "Your cart is empty!";
}


<?php
session_start();

// Initialize cart if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function addToCart($item_id, $item_name, $price) {
    if (isset($_SESSION['cart'][$item_id])) {
        // Increment quantity by 1
        $_SESSION['cart'][$item_id]['quantity']++;
    } else {
        // Add new item to the cart
        $_SESSION['cart'][$item_id] = array(
            'id' => $item_id,
            'name' => $item_name,
            'price' => $price,
            'quantity' => 1,
            'total' => $price
        );
    }
}

// Function to remove item from cart
function removeFromCart($item_id) {
    if (isset($_SESSION['cart'][$item_id])) {
        unset($_SESSION['cart'][$item_id]);
    }
}

// Function to update quantity
function updateQuantity($item_id, $new_quantity) {
    if (isset($_SESSION['cart'][$item_id]) && is_numeric($new_quantity) && $new_quantity > 0) {
        $_SESSION['cart'][$item_id]['quantity'] = $new_quantity;
        $_SESSION['cart'][$item_id]['total'] = $_SESSION['cart'][$item_id]['price'] * $new_quantity;
    }
}

// Function to calculate totals
function calculateCartTotals() {
    $total_items = 0;
    $total_price = 0;

    foreach ($_SESSION['cart'] as $item) {
        $total_items += $item['quantity'];
        $total_price += $item['total'];
    }

    return array(
        'total_items' => $total_items,
        'total_price' => $total_price
    );
}

// Function to empty cart
function emptyCart() {
    $_SESSION['cart'] = array();
}
?>


<?php
include('cart_functions.php');

// Add an item to the cart
addToCart(1, 'Product 1', 29.99);

// Update quantity of an item
updateQuantity(1, 3);

// Remove an item from the cart
removeFromCart(2);

// Empty the entire cart
emptyCart();

// Calculate totals
$totals = calculateCartTotals();
echo "Total items: " . $totals['total_items'] . "<br>";
echo "Total price: $" . number_format($totals['total_price'], 2);
?>


<?php
// Start the session
session_start();

// Check if cart exists in session, if not initialize it
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function add_to_cart($item_id, $item_name, $price) {
    global $db; // Assuming you have a database connection
    
    // Check if item exists in the cart
    if (isset($_SESSION['cart'][$item_id])) {
        // Update quantity
        $_SESSION['cart'][$item_id]['quantity']++;
    } else {
        // Add new item to cart
        $_SESSION['cart'][$item_id] = array(
            'id' => $item_id,
            'name' => $item_name,
            'price' => $price,
            'quantity' => 1
        );
    }
}

// Function to update quantity of an item in cart
function update_quantity($item_id, $quantity) {
    if (isset($_SESSION['cart'][$item_id])) {
        if ($quantity > 0) {
            $_SESSION['cart'][$item_id]['quantity'] = $quantity;
        } else {
            // Remove the item if quantity is zero or negative
            remove_from_cart($item_id);
        }
    }
}

// Function to remove an item from cart
function remove_from_cart($item_id) {
    if (isset($_SESSION['cart'][$item_id])) {
        unset($_SESSION['cart'][$item_id]);
        // Re-index the array keys
        $_SESSION['cart'] = array_values($_SESSION['cart']);
    }
}

// Function to calculate total price of items in cart
function get_cart_total() {
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += ($item['price'] * $item['quantity']);
    }
    return number_format($total, 2); // Format to two decimal places
}

// Example usage:

// Add an item to cart
add_to_cart(1, 'Product 1', 19.99);

// Update quantity of an item
update_quantity(1, 3);

// Remove an item from cart
remove_from_cart(2);

// Display items in cart
echo "<h2>Your Cart</h2>";
if (!empty($_SESSION['cart'])) {
    foreach ($_SESSION['cart'] as $item) {
        echo "Item ID: {$item['id']}<br>";
        echo "Name: {$item['name']}<br>";
        echo "Price: \${$item['price']}<br>";
        echo "Quantity: {$item['quantity']}<br><br>";
    }
} else {
    echo "Your cart is empty.";
}

// Display total price
echo "<h3>Total Price: \${$_SESSION['cart_total']}</h3>";
?>



<?php
session_start();

// Initialize cart if not already set
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add item to cart
if (isset($_POST['add_to_cart'])) {
    $item_id = $_POST['item_id'];
    $item_name = $_POST['item_name'];
    $item_price = $_POST['item_price'];
    $quantity = $_POST['quantity'];

    // Check if item already exists in cart
    if (isset($_SESSION['cart'][$item_id])) {
        // Update quantity
        $_SESSION['cart'][$item_id]['quantity'] += $quantity;
    } else {
        // Add new item to cart
        $_SESSION['cart'][$item_id] = array(
            'name' => $item_name,
            'price' => $item_price,
            'quantity' => $quantity
        );
    }
}

// Remove item from cart
if (isset($_GET['remove'])) {
    $item_id = $_GET['remove'];
    unset($_SESSION['cart'][$item_id]);
    // Re-index the array after unsetting
    $_SESSION['cart'] = array_values($_SESSION['cart']);
}

// Display cart contents
echo "<h2>Shopping Cart</h2>";
echo "<table>";
echo "<tr><th>Item Name</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>";

foreach ($_SESSION['cart'] as $item_id => $item) {
    $total = $item['price'] * $item['quantity'];
    echo "<tr>";
    echo "<td>" . $item['name'] . "</td>";
    echo "<td>₹" . number_format($item['price'], 2, '.', '') . "</td>";
    echo "<td>" . $item['quantity'] . "</td>";
    echo "<td>₹" . number_format($total, 2, '.', '') . "</td>";
    echo "<td><a href='?remove=$item_id'>Remove</a></td>";
    echo "</tr>";
}

echo "</table>";

// Optional: Add a link to clear the entire cart
echo "<p><a href='clear_cart.php'>Clear Cart</a></p>";
?>

<!-- Example HTML form to add items -->
<form action="" method="post">
    <input type="hidden" name="item_id" value="1">
    <input type="hidden" name="item_name" value="Product 1">
    <input type="hidden" name="item_price" value="9.99">
    <input type="number" name="quantity" min="1" max="5" value="1">
    <button type="submit" name="add_to_cart">Add to Cart</button>
</form>


<?php
session_start();
unset($_SESSION['cart']);
header("Location: shopping_cart.php");
?>


<?php
// Start the session
session_start();

// Initialize the cart if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add items to the cart
function add_to_cart($product_id, $product_name, $price, $quantity) {
    // Check if product is already in cart
    $found = false;
    foreach ($_SESSION['cart'] as $key => $item) {
        if ($item['product_id'] == $product_id) {
            // Increment quantity instead of adding new item
            $_SESSION['cart'][$key]['quantity'] += $quantity;
            $found = true;
            break;
        }
    }

    if (!$found) {
        // Add new product to cart
        $_SESSION['cart'][] = array(
            'product_id' => $product_id,
            'product_name' => $product_name,
            'price' => $price,
            'quantity' => $quantity
        );
    }

    echo "Item added to cart successfully!";
}

// Example usage:
if (isset($_POST['add_to_cart'])) {
    add_to_cart(1, "Laptop", 999.99, 1);
    // You can add more items here if needed
    add_to_cart(2, "Phone", 499.99, 1);
}

// Display the cart contents
echo "<h2>Shopping Cart:</h2>";
if (empty($_SESSION['cart'])) {
    echo "Your cart is empty!";
} else {
    foreach ($_SESSION['cart'] as $item) {
        echo "Product ID: " . $item['product_id'] . "<br>";
        echo "Product Name: " . $item['product_name'] . "<br>";
        echo "Price: $" . number_format($item['price'], 2) . "<br>";
        echo "Quantity: " . $item['quantity'] . "<br><hr>";
    }
}
?>


<?php
session_start();
include 'header.php';

// Function to add item to cart
function add_item($product_id, $name, $price) {
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }
    $item_array = array(
        'id' => $product_id,
        'name' => $name,
        'price' => $price,
        'quantity' => 1
    );
    $_SESSION['cart'][$product_id] = $item_array;
}

// Function to display cart
function display_cart() {
    if (isset($_SESSION['cart']) && count($_SESSION['cart']) > 0) {
        echo "<table>";
        foreach ($_SESSION['cart'] as $item) {
            echo "<tr>";
            echo "<td>" . $item['name'] . "</td>";
            echo "<td> $" . number_format($item['price'], 2) . "</td>";
            echo "<td><a href='cart.php?action=remove&product_id=" . $item['id'] . "'>Remove</a></td>";
            echo "</tr>";
        }
        echo "</table>";
    } else {
        echo "Your cart is empty!";
    }
}

// Function to remove item from cart
function remove_item($product_id) {
    if (isset($_SESSION['cart'][$product_id])) {
        unset($_SESSION['cart'][$product_id]);
        // Re-index the array after unsetting an element
        $_SESSION['cart'] = array_values($_SESSION['cart']);
    }
}

// Handle actions based on request parameters
if (isset($_GET['action'])) {
    switch ($_GET['action']) {
        case 'add':
            if (isset($_GET['product_id'], $_GET['name'], $_GET['price'])) {
                add_item($_GET['product_id'], $_GET['name'], $_GET['price']);
            }
            break;
            
        case 'remove':
            if (isset($_GET['product_id'])) {
                remove_item($_GET['product_id']);
            }
            break;
    }
}

// Display the cart
display_cart();

include 'footer.php';
?>


<?php include 'cart.php'; ?>


<?php
// Initialize the session
session_start();

// Check if session is already started
if (session_status() == PHP_SESSION_NONE) {
    session_start();
}

// Set up the cart structure in the session
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add item to cart
function addToCart($productId, $productName, $productPrice) {
    global $cart;
    
    // Check if product is already in cart
    $found = false;
    foreach ($cart as &$item) {
        if ($item['id'] == $productId) {
            $item['quantity']++;
            $found = true;
            break;
        }
    }
    
    // If product not found, add it to the cart
    if (!$found) {
        $cart[] = array(
            'id' => $productId,
            'name' => $productName,
            'price' => $productPrice,
            'quantity' => 1
        );
    }
}

// Remove item from cart
function removeFromCart($index) {
    global $cart;
    
    // Check if index is valid
    if (isset($cart[$index])) {
        unset($cart[$index]);
        
        // Re-index the array
        $cart = array_values($cart);
    }
}

// Display cart items
function displayCart() {
    global $cart;
    
    if (!empty($cart)) {
        echo "<h2>Your Cart</h2>";
        echo "<ul>";
        foreach ($cart as $index => $item) {
            echo "<li>";
            echo "Product ID: " . $item['id'] . "<br />";
            echo "Name: " . $item['name'] . "<br />";
            echo "Price: $" . number_format($item['price'], 2) . "<br />";
            echo "Quantity: " . $item['quantity'] . "<br />";
            echo "<a href='removeFromCart.php?index=" . $index . "'>Remove</a>";
            echo "</li>";
        }
        echo "</ul>";
    } else {
        echo "<p>Your cart is empty.</p>";
    }
}

// Example usage:
if (isset($_GET['add'])) {
    // Get product details
    $productId = $_GET['product_id'];
    $productName = $_GET['product_name'];
    $productPrice = $_GET['product_price'];
    
    // Add to cart
    addToCart($productId, $productName, $productPrice);
}

// Display the cart
displayCart();
?>


<?php
session_start();
if (isset($_GET['index'])) {
    global $cart;
    removeFromCart($_GET['index']);
}
header('Location: ' . $_SERVER['PHP_SELF']);
?>


<?php
// Start the session
session_start();

// Initialize the cart if it doesn't exist yet
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add an item to the cart
function add_to_cart($item_id, $name, $price, $quantity) {
    global $mysqli;
    
    // Check if the product exists in the database (for security)
    $stmt = $mysqli->prepare("SELECT id FROM products WHERE id = ?");
    $stmt->bind_param("i", $item_id);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows > 0) {
        // Check if the item is already in the cart
        foreach ($_SESSION['cart'] as &$item) {
            if ($item['id'] == $item_id) {
                $item['quantity'] += $quantity;
                break;
            }
        }
        
        // If not, add it to the cart
        if (!isset($_SESSION['cart'][$item_id])) {
            $_SESSION['cart'][] = array(
                'id' => $item_id,
                'name' => htmlspecialchars($name),
                'price' => number_format($price, 2, '.', ''),
                'quantity' => $quantity
            );
        }
    }
}

// Function to display the cart contents
function display_cart() {
    if (empty($_SESSION['cart'])) {
        echo "Your cart is empty.";
        return;
    }
    
    foreach ($_SESSION['cart'] as $item) {
        echo "<div>";
        echo "Item ID: " . $item['id'] . "<br>";
        echo "Name: " . $item['name'] . "<br>";
        echo "Price: $" . $item['price'] . "<br>";
        echo "Quantity: " . $item['quantity'] . "<br>";
        echo "</div><hr>";
    }
    
    // Display total price
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += ($item['price'] * $item['quantity']);
    }
    echo "Total: $" . number_format($total, 2, '.', '');
}

// Function to remove an item from the cart
function remove_item($item_id) {
    foreach ($_SESSION['cart'] as $key => &$item) {
        if ($item['id'] == $item_id) {
            unset($_SESSION['cart'][$key]);
            break;
        }
    }
    // Re-index the array
    $_SESSION['cart'] = array_values($_SESSION['cart']);
}

// Function to calculate total price of items in cart
function calculate_total() {
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += ($item['price'] * $item['quantity']);
    }
    return number_format($total, 2, '.', '');
}

// Example usage:
add_to_cart(1, "Laptop", 999.99, 1);
add_to_cart(2, "Phone", 499.99, 2);
display_cart();

// Remove an item
remove_item(1);
echo "<br>After removing item 1:<br>";
display_cart();
?>


<?php
// Start the session
session_start();

// Initialize cart if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add item to cart
function add_to_cart($product_id, $name, $price) {
    global $db;
    
    // Check if product is already in the cart
    if (isset($_SESSION['cart'][$product_id])) {
        $_SESSION['cart'][$product_id]['quantity']++;
    } else {
        $_SESSION['cart'][$product_id] = array(
            'id' => $product_id,
            'name' => $name,
            'price' => $price,
            'quantity' => 1
        );
    }
}

// Remove item from cart
function remove_from_cart($product_id) {
    if (isset($_SESSION['cart'][$product_id])) {
        unset($_SESSION['cart'][$product_id]);
        // Re-index the array to maintain clean session data
        $_SESSION['cart'] = array_values($_SESSION['cart']);
    }
}

// Update item quantity in cart
function update_cart($product_id, $quantity) {
    if (isset($_SESSION['cart'][$product_id]) && is_numeric($quantity)) {
        $_SESSION['cart'][$product_id]['quantity'] = $quantity;
    }
}

// Display cart content
function display_cart() {
    $total = 0;
    echo "<table>";
    foreach ($_SESSION['cart'] as $item) {
        echo "<tr>";
        echo "<td>" . $item['name'] . "</td>";
        echo "<td> $" . number_format($item['price'], 2) . "</td>";
        echo "<td><input type='number' value='" . $item['quantity'] . "' onchange='updateQuantity(" . $item['id'] . ")'></td>";
        echo "<td><button onclick='removeItem(" . $item['id'] . ")'>Remove</button></td>";
        echo "</tr>";
        
        // Calculate total
        $total += ($item['price'] * $item['quantity']);
    }
    echo "<tr><td colspan='4'><strong>Total: $" . number_format($total, 2) . "</strong></td></tr>";
    echo "</table>";
}
?>


<?php
session_start();

// Initialize cart if it doesn't exist
if (!isset($_SESSION['cart']) || !is_array($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add item to cart
if (isset($_POST['add_to_cart'])) {
    $productId = isset($_POST['product_id']) ? intval($_POST['product_id']) : 0;
    $productName = isset($_POST['product_name']) ? $_POST['product_name'] : '';
    $productPrice = isset($_POST['product_price']) ? floatval($_POST['product_price']) : 0;

    // Check if item already exists in cart
    $itemExists = false;
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['id'] == $productId) {
            $itemExists = true;
            break;
        }
    }

    if (!$itemExists) {
        $_SESSION['cart'][] = array(
            'id' => $productId,
            'name' => $productName,
            'price' => $productPrice,
            'quantity' => 1
        );
    } else {
        // Increment quantity if item exists
        foreach ($_SESSION['cart'] as &$item) {
            if ($item['id'] == $productId) {
                $item['quantity']++;
                break;
            }
        }
    }
}

// Remove item from cart
if (isset($_POST['remove_from_cart'])) {
    $productId = isset($_POST['product_id']) ? intval($_POST['product_id']) : 0;

    foreach ($_SESSION['cart'] as $key => &$item) {
        if ($item['id'] == $productId) {
            unset($_SESSION['cart'][$key]);
            break;
        }
    }

    // Re-index the cart array
    $_SESSION['cart'] = array_values($_SESSION['cart']);
}

// Display cart items
echo "<h2>Shopping Cart</h2>";
echo "<form method='post'>";

if (empty($_SESSION['cart'])) {
    echo "<p>Your cart is empty.</p>";
} else {
    $totalPrice = 0;
    foreach ($_SESSION['cart'] as $item) {
        $priceTotal = $item['price'] * $item['quantity'];
        $totalPrice += $priceTotal;

        echo "<div class='cart-item'>";
        echo "<h3>{$item['name']}</h3>";
        echo "<p>Quantity: {$item['quantity']}</p>";
        echo "<p>Price: \${$item['price']}</p>";
        echo "<p>Total: \${$priceTotal}</p>";
        echo "<button type='submit' name='remove_from_cart' value='{$item['id']}'>Remove</button>";
        echo "</div>";
    }

    echo "<h3>Total Price: $" . number_format($totalPrice, 2) . "</h3>";
}

echo "</form>";

// Sample product to add to cart
echo "<h2>Add Items to Cart</h2>";
echo "<form method='post'>";
echo "<input type='hidden' name='product_id' value='1'>";
echo "<input type='hidden' name='product_name' value='Sample Product'>";
echo "<input type='hidden' name='product_price' value='9.99'>";
echo "<button type='submit' name='add_to_cart'>Add to Cart</button>";
echo "</form>";
?>


<?php
// Start the session
session_start();

// Check if session is not set, initialize it
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function addToCart($productId, $productName, $productPrice) {
    // Check if product exists in the cart
    global $isAdded;
    foreach ($_SESSION['cart'] as $item) {
        if ($item['product_id'] == $productId) {
            $isAdded = true;
            return;
        }
    }

    // Add new item to cart
    $_SESSION['cart'][] = array(
        'product_id' => $productId,
        'product_name' => $productName,
        'product_price' => $productPrice,
        'quantity' => 1
    );
}

// Function to display cart content
function displayCart() {
    if (empty($_SESSION['cart'])) {
        echo "<tr><td colspan='4'>Your cart is empty!</td></tr>";
        return;
    }

    foreach ($_SESSION['cart'] as $item) {
        $id = array_search($item, $_SESSION['cart']);
        echo "
        <tr>
            <td>{$item['product_id']}</td>
            <td>{$item['product_name']}</td>
            <td>£{$item['product_price']}</td>
            <td><input type='number' name='quantity[$id]' value='{$item['quantity']}' min='1'></td>
            <td><a href='remove_from_cart.php?id=$id'>Remove</a></td>
        </tr>";
    }
}

// Function to remove item from cart
function removeFromCart($id) {
    if (isset($_SESSION['cart'][$id])) {
        unset($_SESSION['cart'][$id]);
        // Re-index the array after unsetting an element
        $_SESSION['cart'] = array_values($_SESSION['cart']);
    }
}

// Function to calculate total amount in cart
function calculateTotal() {
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += $item['product_price'] * $item['quantity'];
    }
    return $total;
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Shopping Cart</title>
</head>
<body>
    <h1>Shopping Cart</h1>

    <!-- Display the cart -->
    <table border='1'>
        <tr>
            <th>Product ID</th>
            <th>Product Name</th>
            <th>Price</th>
            <th>Quantity</th>
            <th>Action</th>
        </tr>
        <?php displayCart(); ?>
    </table>

    <!-- Add items to cart -->
    <h2>Add Items to Cart</h2>
    <form action="add_to_cart.php" method="post">
        <input type="hidden" name="product_id" value="<?php echo uniqid(); ?>">
        Product Name: <input type="text" name="product_name"><br>
        Product Price: £<input type="number" name="product_price" min="0.01" step="0.01"><br>
        <input type="submit" value="Add to Cart">
    </form>

    <!-- Proceed to checkout -->
    <a href="checkout.php">Proceed to Checkout</a>

    <?php
    // Example usage:
    if (isset($_POST['product_name']) && isset($_POST['product_price'])) {
        addToCart($_POST['product_id'], $_POST['product_name'], $_POST['product_price']);
    }
    ?>

    <br>
    Total Amount: £<?php echo calculateTotal(); ?>

</body>
</html>


<?php
// Initialize session
session_start();

// Check if cart is already set in session
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function addToCart($productId, $productname, $price, $quantity) {
    global $mysqli;
    
    // Check if product exists in the database
    $query = "SELECT * FROM products WHERE id = ?";
    $stmt = $mysqli->prepare($query);
    $stmt->bind_param("i", $productId);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows > 0) {
        // Check if item already exists in cart
        if (isset($_SESSION['cart'][$productId])) {
            $_SESSION['cart'][$productId]['quantity'] += $quantity;
        } else {
            $_SESSION['cart'][$productId] = array(
                'product_id' => $productId,
                'name' => $productname,
                'price' => $price,
                'quantity' => $quantity
            );
        }
    }
}

// Function to update cart item quantity
function updateCart($productId, $newQuantity) {
    if (isset($_SESSION['cart'][$productId])) {
        $_SESSION['cart'][$productId]['quantity'] = $newQuantity;
    }
}

// Function to remove item from cart
function removeFromCart($productId) {
    if (isset($_SESSION['cart'][$productId])) {
        unset($_SESSION['cart'][$productId]);
    }
}

// Display cart contents
function displayCart() {
    $cartItems = $_SESSION['cart'];
    
    if (empty($cartItems)) {
        echo "<p>Your cart is empty.</p>";
    } else {
        $total = 0;
        echo "<table>";
        echo "<tr><th>Product Name</th><th>Quantity</th><th>Price</th><th>Total</th><th>Action</th></tr>";
        
        foreach ($cartItems as $item) {
            $subtotal = $item['price'] * $item['quantity'];
            $total += $subtotal;
            
            echo "<tr>";
            echo "<td>{$item['name']}</td>";
            echo "<td>";
            // Add quantity update form
            echo "<form method='post'>";
            echo "<input type='hidden' name='product_id' value='{$item['product_id']}'>";
            echo "<input type='number' name='quantity' value='{$item['quantity']}' min='1'>";
            echo "</form>";
            echo "</td>";
            echo "<td>$$item[price]</td>";
            echo "<td>$$subtotal</td>";
            // Add remove button
            echo "<td><button onclick=\"removeFromCart({$item['product_id']})\">Remove</button></td>";
            echo "</tr>";
        }
        
        echo "<tr><td colspan='4'><strong>Total: $$total</strong></td></tr>";
        echo "</table>";
    }
}
?>


<?php
// Start the session
session_start();

// Initialize cart if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Sample product data (you would typically get this from a database)
$products = array(
    1 => array('name' => 'Product 1', 'price' => 19.99),
    2 => array('name' => 'Product 2', 'price' => 29.99),
    3 => array('name' => 'Product 3', 'price' => 9.99)
);

// Add item to cart
if (isset($_GET['action']) && $_GET['action'] == 'add') {
    $productId = intval($_GET['id']);
    
    if (!array_key_exists($productId, $_SESSION['cart'])) {
        $_SESSION['cart'][$productId] = array(
            'name' => $products[$productId]['name'],
            'price' => $products[$productId]['price'],
            'quantity' => 1
        );
    } else {
        // If item already exists, increment quantity
        $_SESSION['cart'][$productId]['quantity']++;
    }
}

// Update cart quantities
if (isset($_POST['update'])) {
    foreach ($_SESSION['cart'] as $key => $value) {
        if (isset($_POST[$key]) && is_numeric($_POST[$key])) {
            $_SESSION['cart'][$key]['quantity'] = intval($_POST[$key]);
        }
    }
}

// Remove item from cart
if (isset($_GET['action']) && $_GET['action'] == 'remove') {
    $productId = intval($_GET['id']);
    
    if (array_key_exists($productId, $_SESSION['cart'])) {
        unset($_SESSION['cart'][$productId]);
        // Re-index the array to prevent empty indexes
        $_SESSION['cart'] = array_values($_SESSION['cart']);
    }
}

// Calculate total price
$total = 0;
foreach ($_SESSION['cart'] as $item) {
    $total += ($item['price'] * $item['quantity']);
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
    <style>
        body { font-family: Arial, sans-serif; }
        .product-list { margin-bottom: 20px; }
        .cart-item { border: 1px solid #ddd; padding: 10px; margin: 5px 0; }
    </style>
</head>
<body>
    <h1>Shopping Cart</h1>

    <?php if (!empty($products)): ?>
        <div class="product-list">
            <?php foreach ($products as $id => $product): ?>
                <div class="product-item">
                    <h3><?php echo $product['name']; ?></h3>
                    <p>Price: <?php echo '$' . number_format($product['price'], 2); ?></p>
                    <a href="?action=add&id=<?php echo $id; ?>">Add to Cart</a>
                </div>
            <?php endforeach; ?>
        </div>
    <?php endif; ?>

    <?php if (!empty($_SESSION['cart'])): ?>
        <h2>Cart Contents</h2>
        <form method="post" action="">
            <?php foreach ($_SESSION['cart'] as $id => $item): ?>
                <div class="cart-item">
                    <p><?php echo $item['name']; ?></p>
                    <p>Price: <?php echo '$' . number_format($item['price'], 2); ?></p>
                    <input type="text" name="<?php echo $id; ?>" value="<?php echo $item['quantity']; ?>" size="3">
                    <a href="?action=remove&id=<?php echo $id; ?>">Remove</a>
                </div>
            <?php endforeach; ?>
            <br>
            <button type="submit" name="update">Update Cart</button>
        </form>
        
        <p>Total: <?php echo '$' . number_format($total, 2); ?></p>
    <?php else: ?>
        <p>Your cart is empty.</p>
    <?php endif; ?>

    <a href="products.php">Continue Shopping</a>
</body>
</html>


<?php
session_start();
?>


if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}


function addToCart($item_id, $name, $price) {
    global $db;
    
    // Check if item is already in the cart
    if (isset($_SESSION['cart'][$item_id])) {
        // If yes, increment quantity
        $_SESSION['cart'][$item_id]['quantity']++;
    } else {
        // If no, add new item to cart
        $_SESSION['cart'][$item_id] = array(
            'id' => $item_id,
            'name' => $name,
            'price' => $price,
            'quantity' => 1
        );
    }
}


function removeFromCart($item_id) {
    if (isset($_SESSION['cart'][$item_id])) {
        unset($_SESSION['cart'][$item_id]);
        // Re-index the array
        $_SESSION['cart'] = array_values($_SESSION['cart']);
    }
}


function updateQuantity($item_id, $quantity) {
    if (isset($_SESSION['cart'][$item_id])) {
        $_SESSION['cart'][$item_id]['quantity'] = $quantity;
    }
}


function clearCart() {
    unset($_SESSION['cart']);
    // Initialize empty cart
    $_SESSION['cart'] = array();
}


<?php
if (!empty($_SESSION['cart'])) {
    echo "<h2>Your Shopping Cart</h2>";
    echo "<table border='1'>";
    echo "<tr><th>Item Name</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>";
    
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += ($item['price'] * $item['quantity']);
        echo "<tr>";
        echo "<td>" . $item['name'] . "</td>";
        echo "<td>₹" . number_format($item['price'], 2, '.', '') . "</td>";
        echo "<td><input type='number' name='quantity[" . $item['id'] . "]' value='" . $item['quantity'] . "' min='1'></td>";
        echo "<td>₹" . number_format(($item['price'] * $item['quantity']), 2, '.', '') . "</td>";
        echo "<td><a href='cart.php?action=remove&id=" . $item['id'] . "'>Remove</a></td>";
        echo "</tr>";
    }
    
    echo "<tr><td colspan='4'><strong>Grand Total:</strong></td><td>₹" . number_format($total, 2, '.', '') . "</td></tr>";
    echo "</table>";
} else {
    echo "Your cart is empty.";
}
?>


<?php
session_start();

if (isset($_GET['action'])) {
    $action = $_GET['action'];
    
    switch ($action) {
        case 'add':
            if (isset($_GET['id']) && isset($_GET['name']) && isset($_GET['price'])) {
                addToCart($_GET['id'], $_GET['name'], $_GET['price']);
            }
            break;
            
        case 'remove':
            if (isset($_GET['id'])) {
                removeFromCart($_GET['id']);
            }
            break;
            
        case 'update':
            foreach ($_POST['quantity'] as $item_id => $qty) {
                updateQuantity($item_id, $qty);
            }
            break;
    }
}

// Function definitions for addToCart, removeFromCart, etc.
?>


session_destroy();


addToCart(1, "Product 1", 100);


removeFromCart(1);


updateQuantity(1, 2);


<?php
// Initialize session
session_start();

// Check if cart is already in the session, if not initialize it
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function addToCart($item_id, $item_name, $price, $quantity) {
    global $cart;
    
    // Filter and validate input data
    $item_id = filter_var($item_id, FILTER_VALIDATE_INT);
    $quantity = filter_var($quantity, FILTER_VALIDATE_INT);
    
    if ($item_id && $quantity > 0) {
        // Check if item already exists in cart
        if (isset($_SESSION['cart'][$item_id])) {
            $_SESSION['cart'][$item_id]['quantity'] += $quantity;
        } else {
            // Add new item to cart
            $_SESSION['cart'][$item_id] = array(
                'item_name' => $item_name,
                'price' => $price,
                'quantity' => $quantity
            );
        }
    }
}

// Function to remove item from cart
function removeFromCart($item_id) {
    global $cart;
    
    // Filter input data
    $item_id = filter_var($item_id, FILTER_VALIDATE_INT);
    
    if ($item_id && isset($_SESSION['cart'][$item_id])) {
        unset($_SESSION['cart'][$item_id]);
    }
}

// Function to update item quantity in cart
function updateCartQuantity($item_id, $quantity) {
    global $cart;
    
    // Filter input data
    $item_id = filter_var($item_id, FILTER_VALIDATE_INT);
    $quantity = filter_var($quantity, FILTER_VALIDATE_INT);
    
    if ($item_id && $quantity > 0) {
        $_SESSION['cart'][$item_id]['quantity'] = $quantity;
    }
}

// Function to display cart items
function displayCart() {
    $total_price = 0;
    
    echo "<table>";
    echo "<tr><th>Item Name</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>";
    
    foreach ($_SESSION['cart'] as $item_id => $item) {
        $total = $item['price'] * $item['quantity'];
        $total_price += $total;
        
        echo "<tr>";
        echo "<td>" . htmlspecialchars($item['item_name']) . "</td>";
        echo "<td> $" . number_format($item['price'], 2) . "</td>";
        echo "<td><input type='number' value='" . $item['quantity'] . "' onchange='updateQuantity(" . $item_id . ", this.value)'></td>";
        echo "<td> $" . number_format($total, 2) . "</td>";
        echo "<td><button onclick='removeItem(" . $item_id . ")'>Remove</button></td>";
        echo "</tr>";
    }
    
    echo "<tr><td colspan='4'><strong>Total Price: $ " . number_format($total_price, 2) . "</strong></td></tr>";
    echo "</table>";
}

// Example usage:
// Add item to cart
if ($_SERVER['REQUEST_METHOD'] == 'POST' && isset($_POST['add_to_cart'])) {
    $item_id = $_POST['item_id'];
    $item_name = $_POST['item_name'];
    $price = $_POST['price'];
    $quantity = $_POST['quantity'];
    
    addToCart($item_id, $item_name, $price, $quantity);
}

// Remove item from cart
if (isset($_GET['remove'])) {
    $item_id = $_GET['remove'];
    removeFromCart($item_id);
}

// Update quantity
if (isset($_POST['update_quantity'])) {
    $item_id = $_POST['item_id'];
    $quantity = $_POST['quantity'];
    
    updateCartQuantity($item_id, $quantity);
}

// Display cart contents
echo "<h2>Your Shopping Cart</h2>";
displayCart();
?>


<?php
// Start the session
session_start();

// Initialize cart if not exists
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add item to cart
if (isset($_POST['add_to_cart'])) {
    $productId = $_POST['product_id'];
    $productName = $_POST['product_name'];
    $productPrice = $_POST['product_price'];
    $quantity = $_POST['quantity'];

    // Check if product already exists in cart
    $found = false;
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['product_id'] == $productId) {
            $item['quantity'] += $quantity;
            $found = true;
            break;
        }
    }

    // If not found, add new product to cart
    if (!$found) {
        $_SESSION['cart'][] = array(
            'product_id' => $productId,
            'name' => $productName,
            'price' => $productPrice,
            'quantity' => $quantity
        );
    }

    // Set success message
    $_SESSION['message'] = "Item added to cart successfully!";
}

// Remove item from cart
if (isset($_POST['remove_item'])) {
    $productId = $_POST['product_id'];
    
    // Loop through cart and remove the product
    foreach ($_SESSION['cart'] as $key => $item) {
        if ($item['product_id'] == $productId) {
            unset($_SESSION['cart'][$key]);
            break;
        }
    }

    // Re-index the array to maintain proper keys
    $_SESSION['cart'] = array_values($_SESSION['cart']);

    // Set success message
    $_SESSION['message'] = "Item removed from cart successfully!";
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Shopping Cart</title>
    <style>
        .container {
            width: 80%;
            margin: 0 auto;
            padding: 20px;
        }
        
        .cart-item {
            border: 1px solid #ddd;
            padding: 10px;
            margin-bottom: 10px;
        }

        .message {
            color: green;
            margin-bottom: 20px;
        }
    </style>
</head>
<body>
    <div class="container">
        <!-- Display message -->
        <?php if (isset($_SESSION['message'])) { ?>
            <div class="message"><?php echo $_SESSION['message']; ?></div>
            <?php unset($_SESSION['message']); } ?>

        <!-- Add to cart form -->
        <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
            <input type="hidden" name="product_id" value="1">
            <input type="hidden" name="product_name" value="Product 1">
            <input type="hidden" name="product_price" value="29.99">
            <label>Quantity: </label>
            <input type="number" name="quantity" min="1" max="5" value="1">
            <button type="submit" name="add_to_cart">Add to Cart</button>
        </form>

        <!-- Display cart -->
        <h2>Your Cart</h2>
        <?php if (empty($_SESSION['cart'])) { ?>
            <p>Your cart is empty.</p>
        <?php } else { ?>
            <?php $grand_total = 0; ?>
            <?php foreach ($_SESSION['cart'] as $item) { ?>
                <div class="cart-item">
                    <h3><?php echo $item['name']; ?></h3>
                    <p>Price: <?php echo "$".$item['price']; ?></p>
                    <p>Quantity: <?php echo $item['quantity']; ?></p>
                    <p>Total: <?php 
                        $total = $item['price'] * $item['quantity'];
                        echo "$".$total; 
                        $grand_total += $total;
                    ?></p>
                    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
                        <input type="hidden" name="product_id" value="<?php echo $item['product_id']; ?>">
                        <button type="submit" name="remove_item">Remove</button>
                    </form>
                </div>
            <?php } ?>
            <h3>Grand Total: <?php echo "$".$grand_total; ?></h3>
        <?php } ?>
    </div>
</body>
</html>


<?php
session_start();

// Initialize cart if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add item to cart
if (isset($_GET['add_to_cart'])) {
    $item_id = $_GET['add_to_cart'];
    
    // Example product details (you would typically get this from a database)
    $products = array(
        1 => array('id' => 1, 'name' => 'Product 1', 'price' => 29.99),
        2 => array('id' => 2, 'name' => 'Product 2', 'price' => 49.99),
        3 => array('id' => 3, 'name' => 'Product 3', 'price' => 19.99)
    );
    
    $product = $products[$item_id];
    
    // Check if item already exists in cart
    $found = false;
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['id'] == $product['id']) {
            $item['quantity']++;
            $found = true;
            break;
        }
    }
    
    // If not found, add it to the cart
    if (!$found) {
        array_push($_SESSION['cart'], array(
            'id' => $product['id'],
            'name' => $product['name'],
            'price' => $product['price'],
            'quantity' => 1
        ));
    }
    
    // Redirect back to the current page
    header('Location: ' . $_SERVER['PHP_SELF']);
    exit();
}

// Remove item from cart
if (isset($_GET['remove_from_cart'])) {
    $item_id = $_GET['remove_from_cart'];
    
    // Find and remove the item
    foreach ($_SESSION['cart'] as $key => &$item) {
        if ($item['id'] == $item_id) {
            unset($_SESSION['cart'][$key]);
            break;
        }
    }
    
    // Redirect back to the current page
    header('Location: ' . $_SERVER['PHP_SELF']);
    exit();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <h1>Shopping Cart</h1>
    
    <?php if (empty($_SESSION['cart'])) { ?>
        <p>Your cart is empty.</p>
    <?php } else { ?>
        <table border="1">
            <tr>
                <th>Product Name</th>
                <th>Price</th>
                <th>Quantity</th>
                <th>Total</th>
                <th>Action</th>
            </tr>
            <?php foreach ($_SESSION['cart'] as $item) { ?>
                <tr>
                    <td><?php echo $item['name']; ?></td>
                    <td>$<?php echo number_format($item['price'], 2); ?></td>
                    <td><?php echo $item['quantity']; ?></td>
                    <td>$<?php echo number_format($item['price'] * $item['quantity'], 2); ?></td>
                    <td><a href="?remove_from_cart=<?php echo $item['id']; ?>">Remove</a></td>
                </tr>
            <?php } ?>
        </table>
        
        <!-- Add more functionality like checkout, update quantities, etc. -->
    <?php } ?>

    <!-- Add items to cart -->
    <h2>Products</h2>
    <div>
        <p><a href="?add_to_cart=1">Add Product 1 to Cart</a></p>
        <p><a href="?add_to_cart=2">Add Product 2 to Cart</a></p>
        <p><a href="?add_to_cart=3">Add Product 3 to Cart</a></p>
    </div>
</body>
</html>


<?php
// Start the session
session_start();

// Check if the cart exists in the session; if not, initialize it
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Example: Adding an item to the cart
function addToCart($productId, $productName, $price) {
    // Create an array for the item
    $item = array(
        'product_id' => $productId,
        'product_name' => $productName,
        'price' => $price,
        'quantity' => 1
    );

    // Check if the product is already in the cart
    $found = false;
    foreach ($_SESSION['cart'] as &$itemInCart) {
        if ($itemInCart['product_id'] == $productId) {
            $itemInCart['quantity']++;
            $found = true;
            break;
        }
    }

    // If not found, add the item to the cart
    if (!$found) {
        array_push($_SESSION['cart'], $item);
    }
}

// Example: Removing an item from the cart
function removeFromCart($productId) {
    foreach ($_SESSION['cart'] as $key => $itemInCart) {
        if ($itemInCart['product_id'] == $productId) {
            unset($_SESSION['cart'][$key]);
            break;
        }
    }

    // Re-index the array keys
    $_SESSION['cart'] = array_values($_SESSION['cart']);
}

// Example: Updating the quantity of an item in the cart
function updateQuantity($productId, $quantity) {
    foreach ($_SESSION['cart'] as &$itemInCart) {
        if ($itemInCart['product_id'] == $productId) {
            $itemInCart['quantity'] = $quantity;
            break;
        }
    }
}

// Example: Calculating the total price of items in the cart
function calculateTotal() {
    $total = 0;
    foreach ($_SESSION['cart'] as $itemInCart) {
        $total += ($itemInCart['price'] * $itemInCart['quantity']);
    }
    return $total;
}

// Usage examples:
addToCart(1, 'Product 1', 19.99);
addToCart(2, 'Product 2', 29.99);

echo "Total: " . calculateTotal(); // Outputs: Total: 49.98

updateQuantity(1, 2);
echo "New Total: " . calculateTotal(); // Outputs: New Total: 59.97

removeFromCart(2);
echo "Final Total: " . calculateTotal(); // Outputs: Final Total: 39.98
?>


<?php
session_start();

// Initialize cart if not already set
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Product information (example)
$product_id = 1;
$product_name = "Laptop";
$product_price = 999.99;

// Add item to cart
if (!isset($_POST['action']) || $_POST['action'] != 'add') {
    // Default view
} else {
    if (!isset($_SESSION['cart'][$product_id])) {
        $_SESSION['cart'][$product_id] = array(
            "name" => $product_name,
            "price" => $product_price,
            "quantity" => 1
        );
    } else {
        $_SESSION['cart'][$product_id]['quantity']++;
    }
}

// Display cart contents
echo "<h2>Shopping Cart</h2>";
echo "<table border='1'>";
echo "<tr><th>Item Name</th><th>Price</th><th>Quantity</th><th>Total</th></tr>";

$cart_total = 0;
foreach ($_SESSION['cart'] as $item_id => $item) {
    $total_price = $item['price'] * $item['quantity'];
    $cart_total += $total_price;
    
    echo "<tr>";
    echo "<td>" . $item['name'] . "</td>";
    echo "<td>$" . number_format($item['price'], 2) . "</td>";
    echo "<td><input type='text' name='quantity[" . $item_id . "]' value='" . $item['quantity'] . "' size='3'></td>";
    echo "<td>$" . number_format($total_price, 2) . "</td>";
    echo "<td><a href='cart.php?action=remove&id=" . $item_id . "'>Remove</a></td>";
    echo "</tr>";
}

echo "<tr><td colspan='4' align='right'><strong>Total:</strong> $" . number_format($cart_total, 2) . "</td></tr>";
echo "</table>";

// Remove item from cart
if (isset($_GET['action']) && $_GET['action'] == 'remove') {
    $item_id = intval($_GET['id']);
    if (isset($_SESSION['cart'][$item_id])) {
        unset($_SESSION['cart'][$item_id]);
        // Redirect back to cart page
        header("Location: cart.php");
        exit;
    }
}

// Optional: Initialize session variables for cart count
if (!isset($_SESSION['cart_count'])) {
    $_SESSION['cart_count'] = 0;
}
$_SESSION['cart_count'] += 1; // Increment cart count when adding items

?>


<?php
// Initialize the session
session_start();
?>


<?php
session_start();

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Retrieve item details from POST
    $item_id = isset($_POST['item_id']) ? intval($_POST['item_id']) : 0;
    $name = isset($_POST['item_name']) ? htmlspecialchars(trim($_POST['item_name'])) : '';
    $price = isset($_POST['price']) ? floatval($_POST['price']) : 0.0;
    $quantity = isset($_POST['quantity']) ? intval($_POST['quantity']) : 1;

    // Initialize cart if not set
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }

    // Check if item is already in cart
    $item_exists = false;
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['id'] == $item_id) {
            $item_exists = true;
            break;
        }
    }

    if ($item_exists) {
        echo "Item already exists in cart!";
    } else {
        // Add new item
        $_SESSION['cart'][] = array(
            'id' => $item_id,
            'name' => $name,
            'price' => $price,
            'quantity' => $quantity
        );
        echo "Item added to cart successfully!";
    }
} else {
    echo "Error: Invalid request method.";
}
?>


<?php
session_start();

if (!isset($_SESSION['cart']) || count($_SESSION['cart']) == 0) {
    echo "Your cart is empty.";
} else {
    echo "<h1>Your Cart</h1>";
    echo "<table border='1'>";
    echo "<tr><th>Item ID</th><th>Name</th><th>Price</th><th>Quantity</th><th>Action</th></tr>";

    foreach ($_SESSION['cart'] as $item) {
        echo "<tr>";
        echo "<td>" . $item['id'] . "</td>";
        echo "<td>" . $item['name'] . "</td>";
        echo "<td>$" . number_format($item['price'], 2) . "</td>";
        echo "<td>" . $item['quantity'] . "</td>";
        echo "<td><a href='remove_from_cart.php?id=" . $item['id'] . "'>Remove</a></td>";
        echo "</tr>";
    }

    echo "</table>";
}
?>


<?php
session_start();

if (isset($_GET['id'])) {
    $item_id = intval($_GET['id']);

    if (isset($_SESSION['cart'])) {
        // Loop through cart and remove item with matching id
        foreach ($_SESSION['cart'] as $key => $item) {
            if ($item['id'] == $item_id) {
                unset($_SESSION['cart'][$key]);
                break;
            }
        }
        // Re-index the array to avoid gaps in keys
        $_SESSION['cart'] = array_values($_SESSION['cart']);
    }

    echo "Item removed from cart!";
} else {
    echo "Error: No item specified.";
}
?>


<?php
session_start();
?>
<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <?php include 'view_cart.php'; ?>
</body>
</html>


<?php
// Code from Step 3 above...
?>


<?php
// Code from Step 5 above...
?>


<?php
// Code from Step 4 above...
?>


<?php
session_start();
?>


<?php
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}
?>


<?php
session_start();

$item_name = "Product 1"; // Replace with actual product name
$item_price = 29.99;     // Replace with actual price

// Check if the cart exists; initialize if not
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add item to cart
array_push($_SESSION['cart'], array(
    'name' => $item_name,
    'price' => $item_price
));

// Redirect back to the product page or cart view
header("Location: cart.php");
exit();
?>


<?php
session_start();

if (isset($_SESSION['cart']) && count($_SESSION['cart']) > 0) {
    $total = 0;
    echo "<h2>Your Shopping Cart</h2>";
    echo "<ul>";
    
    foreach ($_SESSION['cart'] as $index => $item) {
        echo "<li>" . $item['name'] . " - $" . number_format($item['price'], 2);
        echo "<a href='delete_from_cart.php?index=$index'>Remove</a></li>";
    }
    
    foreach ($_SESSION['cart'] as $item) {
        $total += $item['price'];
    }
    echo "</ul>";
    echo "Total: $" . number_format($total, 2);
} else {
    echo "<p>Your cart is empty.</p>";
}
?>


<?php
session_start();

if (isset($_GET['index'])) {
    $index = intval($_GET['index']);
    
    if (isset($_SESSION['cart'][$index])) {
        unset($_SESSION['cart'][$index]);
        
        // Re-index the array
        $_SESSION['cart'] = array_values($_SESSION['cart']);
    }
}

header("Location: cart.php");
exit();
?>


<?php
session_start();

unset($_SESSION['cart']);
session_destroy();

// Redirect to a welcome page or login page
header("Location: welcome.php");
exit();
?>


<?php
// Start the session
session_start();

// Initialize cart if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}
?>


<?php
session_start();

// Check if the form is submitted and product ID is set
if ($_SERVER["REQUEST_METHOD"] == "POST" && isset($_POST['product_id'])) {
    $productId = $_POST['product_id'];
    $productName = $_POST['product_name'];
    $price = $_POST['price'];

    // Initialize cart if it doesn't exist
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }

    // Check if the product is already in the cart
    $found = false;
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['product_id'] == $productId) {
            $item['quantity']++;
            $found = true;
            break;
        }
    }

    // If not found, add the product to the cart
    if (!$found) {
        $_SESSION['cart'][] = array(
            'product_id' => $productId,
            'name' => $productName,
            'price' => $price,
            'quantity' => 1
        );
    }

    // Redirect back to the products page or wherever needed
    header("Location: products.php");
    exit();
}
?>


<?php
session_start();

// Initialize cart if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

$total = 0;
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <?php if (empty($_SESSION['cart'])): ?>
        <p>Your cart is empty.</p>
    <?php else: ?>
        <h2>Your Cart Items:</h2>
        <ul>
            <?php foreach ($_SESSION['cart'] as $item): ?>
                <li>
                    <?php echo $item['name']; ?> 
                    (Quantity: <?php echo $item['quantity']; ?>) 
                    Price: <?php echo $item['price']; ?> 
                    Total: <?php echo $item['price'] * $item['quantity']; ?>
                    
                    <!-- Add a remove button -->
                    <form action="remove_from_cart.php" method="post">
                        <input type="hidden" name="product_id" value="<?php echo $item['product_id']; ?>">
                        <button type="submit">Remove</button>
                    </form>
                </li>
            <?php endforeach; ?>
        </ul>
        
        <!-- Calculate total price -->
        <?php foreach ($_SESSION['cart'] as $item): 
            $total += $item['price'] * $item['quantity'];
        endforeach; ?>

        <h3>Total: <?php echo $total; ?></h3>
    <?php endif; ?>
</body>
</html>


<?php
session_start();

// Check if the form is submitted and product ID is set
if ($_SERVER["REQUEST_METHOD"] == "POST" && isset($_POST['product_id'])) {
    $productId = $_POST['product_id'];

    // Remove the item from the cart
    foreach ($_SESSION['cart'] as $key => &$item) {
        if ($item['product_id'] == $productId) {
            unset($_SESSION['cart'][$key]);
            break;
        }
    }

    // Re-index the array to maintain numeric keys
    $_SESSION['cart'] = array_values($_SESSION['cart']);

    // Redirect back to view cart page
    header("Location: view_cart.php");
    exit();
}
?>


<?php
session_start();
ini_set('display_errors', 1);
error_reporting(E_ALL);

// Check if cart exists in session, initialize if not
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}
?>


<?php
session_start();

if (isset($_POST['add_to_cart'])) {
    $productId = $_POST['product_id'];
    $quantity = intval($_POST['quantity']);

    // Retrieve product details from your database here
    // For example, using mysqli or PDO to fetch product name and price

    if ($quantity > 0) {
        if (isset($_SESSION['cart'][$productId])) {
            // Update quantity if product exists
            $_SESSION['cart'][$productId]['quantity'] += $quantity;
        } else {
            // Add new product to cart
            $_SESSION['cart'][$productId] = array(
                'product_id' => $productId,
                'name' => $productName, // fetched from database
                'price' => $productPrice, // fetched from database
                'quantity' => $quantity
            );
        }
        // Set success message
        $_SESSION['message'] = "Product added to cart successfully!";
    } else {
        $_SESSION['message'] = "Quantity must be at least 1!";
    }
}
// Redirect back to the product page or cart
header("Location: view_cart.php");
exit();
?>


<?php
session_start();

// Check for messages and display them
if (isset($_SESSION['message'])) {
    echo "<div class='message'>" . $_SESSION['message'] . "</div>";
    unset($_SESSION['message']);
}

echo "<h2>Your Cart</h2>";
echo "<a href='products.php'>Continue Shopping</a><br/>";
echo "<a href='checkout.php'>Checkout</a>";

if (empty($_SESSION['cart'])) {
    echo "<p>Your cart is empty.</p>";
} else {
    echo "<table border='1'>";
    echo "<tr><th>Product Name</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>";
    
    foreach ($_SESSION['cart'] as $item) {
        $total = $item['price'] * $item['quantity'];
        echo "<tr>";
        echo "<td>" . $item['name'] . "</td>";
        echo "<td>$" . number_format($item['price'], 2) . "</td>";
        echo "<td>" . $item['quantity'] . "</td>";
        echo "<td>$" . number_format($total, 2) . "</td>";
        echo "<td><form method='post' action='remove_from_cart.php'>
                <input type='hidden' name='product_id' value='" . $item['product_id'] . "'>
                <button type='submit' name='remove_item'>Remove</button>
              </form></td>";
        echo "</tr>";
    }
    
    // Calculate and display total price
    $cartTotal = 0;
    foreach ($_SESSION['cart'] as $item) {
        $cartTotal += $item['price'] * $item['quantity'];
    }
    echo "<tr><th colspan='4'>Cart Total:</th><td>$" . number_format($cartTotal, 2) . "</td></tr>";
    
    echo "</table>";
}
?>


<?php
session_start();

if (isset($_POST['remove_item'])) {
    $productId = $_POST['product_id'];
    
    if (isset($_SESSION['cart'][$productId])) {
        unset($_SESSION['cart'][$productId]);
        $_SESSION['message'] = "Product removed from cart!";
    } else {
        $_SESSION['message'] = "Error removing product!";
    }
}

header("Location: view_cart.php");
exit();
?>


<?php
// Start the session
session_start();

// Initialize cart if not already set
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function addToCart($productId, $productName, $productPrice) {
    global $cart;
    
    // Check if product exists in cart
    $productExists = false;
    foreach ($_SESSION['cart'] as $key => $value) {
        if ($value['product_id'] == $productId) {
            $productExists = true;
            break;
        }
    }
    
    if (!$productExists) {
        // Add new product to cart
        $_SESSION['cart'][] = array(
            'product_id' => $productId,
            'product_name' => $productName,
            'product_price' => $productPrice,
            'quantity' => 1
        );
    }
}

// Function to display cart contents
function showCart() {
    $total = 0;
    if (isset($_SESSION['cart']) && count($_SESSION['cart']) > 0) {
        echo "<table border='1'>";
        echo "<tr><th>Product Name</th><th>Price</th><th>Quantity</th><th>Total</th></tr>";
        
        foreach ($_SESSION['cart'] as $item) {
            $total += ($item['product_price'] * $item['quantity']);
            echo "<tr>";
            echo "<td>" . $item['product_name'] . "</td>";
            echo "<td>Rs. " . $item['product_price'] . "</td>";
            echo "<td>" . $item['quantity'] . "</td>";
            echo "<td>Rs. " . ($item['product_price'] * $item['quantity']) . "</td>";
            echo "</tr>";
        }
        
        echo "<tr><th colspan='3'>Total</th><th>Rs. " . $total . "</th></tr>";
        echo "</table>";
    } else {
        echo "Your cart is empty!";
    }
}

// Example usage
if (isset($_POST['add_to_cart'])) {
    $productId = $_POST['product_id'];
    $productName = $_POST['product_name'];
    $productPrice = $_POST['product_price'];
    
    addToCart($productId, $productName, $productPrice);
}

// Display cart contents
showCart();

// Destroy session when done
session_unset();
session_destroy();
?>


<?php
// Start the session
session_start();

// Initialize cart if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Example product data (you would typically get this from a database)
$products = array(
    1 => array('name' => 'Product 1', 'price' => 19.99),
    2 => array('name' => 'Product 2', 'price' => 29.99),
    3 => array('name' => 'Product 3', 'price' => 9.99)
);

// Add item to cart
function addToCart($productId, $quantity = 1) {
    global $products;
    
    if (isset($products[$productId])) {
        $cartItem = array(
            'id' => $productId,
            'name' => $products[$productId]['name'],
            'price' => $products[$productId]['price'],
            'quantity' => $quantity
        );
        
        $_SESSION['cart'][$productId] = $cartItem;
    }
}

// Remove item from cart
function removeFromCart($productId) {
    if (isset($_SESSION['cart'][$productId])) {
        unset($_SESSION['cart'][$productId]);
    }
}

// Example usage:
if ($_SERVER['REQUEST_METHOD'] == 'GET') {
    // Add product to cart
    if (isset($_GET['action']) && $_GET['action'] == 'add' && isset($_GET['id'])) {
        addToCart($_GET['id']);
    }

    // Remove product from cart
    if (isset($_GET['action']) && $_GET['action'] == 'remove' && isset($_GET['id'])) {
        removeFromCart($_GET['id']);
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
    <style>
        .cart-item { padding: 10px; border-bottom: 1px solid #ddd; }
        .product-list { margin-top: 20px; }
    </style>
</head>
<body>
    <?php if (!empty($_SESSION['cart'])) : ?>
        <h2>Your Cart</h2>
        <?php foreach ($_SESSION['cart'] as $item) : ?>
            <div class="cart-item">
                <?php echo $item['name']; ?> (Quantity: <?php echo $item['quantity']; ?>)
                - Price: $<?php echo number_format($item['price'], 2); ?>
                <a href="?action=remove&id=<?php echo $item['id']; ?>">Remove</a>
            </div>
        <?php endforeach; ?>
    <?php endif; ?>

    <h2>Product List</h2>
    <div class="product-list">
        <?php foreach ($products as $id => $product) : ?>
            <div>
                <?php echo $product['name']; ?> - $<?php echo number_format($product['price'], 2); ?>
                <a href="?action=add&id=<?php echo $id; ?>">Add to Cart</a>
            </div>
        <?php endforeach; ?>
    </div>
</body>
</html>


<?php
session_start();
?>


<?php
session_start();
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Get product details from GET parameters
$product_id = isset($_GET['product_id']) ? intval($_GET['product_id']) : 0;
$name = isset($_GET['name']) ? $_GET['name'] : '';
$price = isset($_GET['price']) ? floatval($_GET['price']) : 0;

// Check if the product is already in the cart
$found = false;
foreach ($_SESSION['cart'] as $key => $item) {
    if ($item['product_id'] == $product_id) {
        $_SESSION['cart'][$key]['quantity']++;
        $found = true;
        break;
    }
}

// Add new product if not found
if (!$found) {
    $_SESSION['cart'][] = array(
        'product_id' => $product_id,
        'name' => $name,
        'price' => $price,
        'quantity' => 1
    );
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Cart</title>
    <style>
        body { font-family: Arial, sans-serif; }
        .cart-item { margin-bottom: 20px; padding: 10px; border: 1px solid #ddd; }
    </style>
</head>
<body>
    <?php include 'view_cart.php'; ?>
</body>
</html>


<?php
session_start();
if (isset($_SESSION['cart']) && count($_SESSION['cart']) > 0) {
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $subtotal = $item['price'] * $item['quantity'];
        $total += $subtotal;
?>
        <div class="cart-item">
            <?php echo $item['name']; ?> (<?php echo $item['product_id']; ?>)
            - Quantity: <?php echo $item['quantity']; ?>
            - Price: $<?php echo number_format($item['price'], 2); ?>
            - Subtotal: $<?php echo number_format($subtotal, 2); ?>
            <a href="remove_item.php?product_id=<?php echo $item['product_id']; ?>">Remove</a>
        </div>
<?php
    }
?>
        <div><strong>Total: $<?php echo number_format($total, 2); ?></strong></div>
<?php
} else {
?>
        <p>Your cart is empty.</p>
<?php
}
?>


<?php
session_start();
if (isset($_GET['product_id'])) {
    $product_id = intval($_GET['product_id']);
    foreach ($_SESSION['cart'] as $key => $item) {
        if ($item['product_id'] == $product_id) {
            unset($_SESSION['cart'][$key]);
            break;
        }
    }
}
// Re-index the array to avoid gaps in keys
$_SESSION['cart'] = array_values($_SESSION['cart']);
header("Location: view_cart.php");
exit();
?>


<?php
session_start();

// Define the session ID constant
define('CART_SESSION_ID', 'shopping_cart');

// Initialize cart if not exists
if (!isset($_SESSION[CART_SESSION_ID])) {
    $_SESSION[CART_SESSION_ID] = array();
}

// Products database (example)
$products = [
    1 => ['name' => 'Product 1', 'price' => 19.99],
    2 => ['name' => 'Product 2', 'price' => 29.99],
    3 => ['name' => 'Product 3', 'price' => 9.99]
];

// Add to cart logic
if (isset($_POST['add_to_cart'])) {
    $productId = intval($_POST['product_id']);
    $quantity = intval($_POST['quantity']);

    if ($quantity > 0 && isset($products[$productId])) {
        session_start();
        $_SESSION[CART_SESSION_ID][$productId] += $quantity;
    }

    header("Location: ".$_SERVER['PHP_SELF']);
    exit;
}

// Remove from cart logic
if (isset($_GET['remove_id'])) {
    $removeId = intval($_GET['remove_id']);

    if (isset($_SESSION[CART_SESSION_ID][$removeId])) {
        unset($_SESSION[CART_SESSION_ID][$removeId]);
    }

    header("Location: ".$_SERVER['PHP_SELF']);
    exit;
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Shopping Cart</title>
    <style>
        .cart-container {
            max-width: 800px;
            margin: 20px auto;
            padding: 20px;
            border: 1px solid #ddd;
            border-radius: 5px;
        }
        
        table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 10px;
        }
        
        th, td {
            padding: 8px;
            text-align: left;
            border-bottom: 1px solid #ddd;
        }
        
        .total-row {
            background-color: #f5f5f5;
            font-weight: bold;
        }

        .empty-cart {
            color: red;
            margin-top: 20px;
            text-align: center;
        }

        form {
            margin-bottom: 30px;
        }

        input[type="number"] {
            width: 60px;
            padding: 4px;
        }
    </style>
</head>
<body>
    <div class="cart-container">
        <?php
        if (empty($_SESSION[CART_SESSION_ID])) {
            echo '<div class="empty-cart">Your cart is empty!</div>';
        } else {
            $total = 0;
            echo '<table>';
            echo '<tr><th>Product Name</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>';
            
            foreach ($_SESSION[CART_SESSION_ID] as $productId => $qty) {
                $product = $products[$productId];
                $totalItem = $product['price'] * $qty;
                $total += $totalItem;

                echo '<tr>';
                echo '<td>' . $product['name'] . '</td>';
                echo '<td>$' . number_format($product['price'], 2) . '</td>';
                echo '<td>' . $qty . '</td>';
                echo '<td>$' . number_format($totalItem, 2) . '</td>';
                echo '<td><a href="?remove_id=' . $productId . '">Remove</a></td>';
                echo '</tr>';
            }
            
            echo '<tr class="total-row"><td colspan="4">Total:</td><td>$' . number_format($total, 2) . '</td></tr>';
            echo '</table>';
        }
        ?>

        <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
            <select name="product_id">
                <?php foreach ($products as $id => $prod): ?>
                    <option value="<?php echo $id; ?>"><?php echo $prod['name']; ?></option>
                <?php endforeach; ?>
            </select>

            <input type="number" name="quantity" min="1" value="1" required>
            <button type="submit" name="add_to_cart">Add to Cart</button>
        </form>
    </div>
</body>
</html>


<?php
// Start the session
session_start();

// Database connection details
$host = 'localhost';
$username = 'your_username';
$password = 'your_password';
$database = 'your_database';

// Connect to MySQL database
$conn = mysqli_connect($host, $username, $password, $database);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Initialize cart session if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function addToCart($productId) {
    global $conn;
    
    // Check if product is already in cart
    if (isset($_SESSION['cart'][$productId])) {
        $_SESSION['cart'][$productId]['quantity']++;
    } else {
        // Get product details from database
        $query = "SELECT name, price FROM products WHERE id = ?";
        $stmt = mysqli_prepare($conn, $query);
        mysqli_stmt_bind_param($stmt, "i", $productId);
        mysqli_stmt_execute($stmt);
        $result = mysqli_stmt_get_result($stmt);
        
        if ($row = mysqli_fetch_assoc($result)) {
            $_SESSION['cart'][$productId] = array(
                'id' => $productId,
                'name' => $row['name'],
                'price' => $row['price'],
                'quantity' => 1
            );
        }
    }
}

// Function to remove item from cart
function removeFromCart($productId) {
    if (isset($_SESSION['cart'][$productId])) {
        unset($_SESSION['cart'][$productId]);
    }
}

// Function to update quantity of item in cart
function updateQuantity($productId, $quantity) {
    if (isset($_SESSION['cart'][$productId])) {
        $_SESSION['cart'][$productId]['quantity'] = max(1, $quantity);
        if ($_SESSION['cart'][$productId]['quantity'] < 1) {
            removeFromCart($productId);
        }
    }
}

// Function to get cart total
function getCartTotal() {
    global $conn;
    
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += ($item['price'] * $item['quantity']);
    }
    return $total;
}

// Example usage:
if (isset($_GET['action'])) {
    switch ($_GET['action']) {
        case 'add':
            if (isset($_GET['id'])) {
                addToCart($_GET['id']);
            }
            break;
            
        case 'remove':
            if (isset($_GET['id'])) {
                removeFromCart($_GET['id']);
            }
            break;
            
        case 'update':
            if (isset($_GET['id']) && isset($_GET['quantity'])) {
                updateQuantity($_GET['id'], $_GET['quantity']);
            }
            break;
    }
}

// Display cart contents
echo "<h2>Shopping Cart</h2>";
if (empty($_SESSION['cart'])) {
    echo "Your cart is empty.";
} else {
    echo "<table>";
    echo "<tr><th>Product</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>";
    foreach ($_SESSION['cart'] as $item) {
        $totalItem = $item['price'] * $item['quantity'];
        echo "<tr>";
        echo "<td>" . $item['name'] . "</td>";
        echo "<td>$$item[price]</td>";
        echo "<td><input type='number' value='" . $item['quantity'] . "' onChange='updateQuantity(" . $item['id'] . ", this.value)'></td>";
        echo "<td>$$totalItem</td>";
        echo "<td><a href='?action=remove&id=" . $item['id'] . "'>Remove</a></td>";
        echo "</tr>";
    }
    echo "</table>";
    echo "<p>Total: $" . number_format(getCartTotal(), 2) . "</p>";
}
?>

<!-- Add this script to update quantities without refreshing -->
<script>
function updateQuantity(productId, quantity) {
    window.location.href = '?action=update&id=' + productId + '&quantity=' + quantity;
}
</script>

<?php
// Close database connection
mysqli_close($conn);
?>


<?php
session_start();


if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}


if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    if (isset($_POST['product_id'], $_POST['product_name'], $_POST['price'])) {
        $productId = intval($_POST['product_id']);
        $productName = htmlspecialchars($_POST['product_name']);
        $price = floatval($_POST['price']);
        $quantity = isset($_POST['quantity']) ? intval($_POST['quantity']) : 1;

        // Check if the product is already in the cart
        $itemExists = false;
        foreach ($_SESSION['cart'] as &$item) {
            if ($item['product_id'] == $productId) {
                $item['quantity'] += $quantity;
                $itemExists = true;
                break;
            }
        }

        // If the product is not in the cart, add it
        if (!$itemExists) {
            $_SESSION['cart'][] = array(
                'product_id' => $productId,
                'product_name' => $productName,
                'price' => $price,
                'quantity' => $quantity
            );
        }

        // Display a success message
        echo "Item added to cart successfully!";
    }
}


<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <h1>Your Shopping Cart</h1>
    <?php if (!empty($_SESSION['cart'])) : ?>
        <table border="1">
            <tr>
                <th>Product Name</th>
                <th>Price</th>
                <th>Quantity</th>
                <th>Total</th>
                <th>Action</th>
            </tr>
            <?php foreach ($_SESSION['cart'] as $item) : ?>
                <tr>
                    <td><?php echo $item['product_name']; ?></td>
                    <td><?php echo "$" . number_format($item['price'], 2); ?></td>
                    <td><?php echo $item['quantity']; ?></td>
                    <td><?php echo "$" . number_format($item['price'] * $item['quantity'], 2); ?></td>
                    <td><a href="remove_from_cart.php?product_id=<?php echo $item['product_id']; ?>">Remove</a></td>
                </tr>
            <?php endforeach; ?>
        </table>

        <h3>Total: <?php echo "$" . number_format(array_sum(array_column($_SESSION['cart'], 'price') * array_column($_SESSION['cart'], 'quantity')), 2); ?></h3>
    <?php else : ?>
        <p>Your cart is empty.</p>
    <?php endif; ?>
</body>
</html>


<?php
session_start();

if (isset($_GET['product_id'])) {
    $productId = intval($_GET['product_id']);

    // Loop through the cart and remove the item with the matching product ID
    foreach ($_SESSION['cart'] as $key => $item) {
        if ($item['product_id'] == $productId) {
            unset($_SESSION['cart'][$key]);
            break;
        }
    }

    // Re-index the array to avoid gaps in keys
    $_SESSION['cart'] = array_values($_SESSION['cart']);

    // Redirect back to the cart page
    header("Location: view_cart.php");
    exit();
}


<?php
session_start();

// Reset the cart session
$_SESSION['cart'] = array();

// Redirect back to the cart page
header("Location: view_cart.php");
exit();


<?php
session_start();

// Unset all session variables
$_SESSION = array();

// Destroy the session cookie
if (ini_get("session.use_cookies")) {
    $params = session_get_cookie_params();
    setcookie(session_name(), '', time() - 42000,
        $params["path"], $params["domain"],
        $params["secure"], $params["httponly"]
    );
}

// Destroy the session
session_destroy();

// Redirect to a logged-out page or home page
header("Location: login.php");
exit();


<?php
// Start the session
session_start();

// Initialize cart session if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function addToCart($item) {
    global $connect; // Assuming you have a database connection
    
    // Get product details from the database
    $query = "SELECT * FROM products WHERE id = ?";
    $stmt = $connect->prepare($query);
    $stmt->bind_param("i", $item['id']);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($row = $result->fetch_assoc()) {
        // Check if item is already in the cart
        if (isset($_SESSION['cart'][$row['id']])) {
            // Update quantity
            $_SESSION['cart'][$row['id']]['quantity']++;
        } else {
            // Add new item to cart
            $item = array(
                'id' => $row['id'],
                'name' => $row['name'],
                'price' => $row['price'],
                'quantity' => 1
            );
            $_SESSION['cart'][$row['id']] = $item;
        }
    }
}

// Function to update cart item quantity
function updateCart($itemId, $quantity) {
    if (isset($_SESSION['cart'][$itemId])) {
        if ($quantity > 0) {
            $_SESSION['cart'][$itemId]['quantity'] = $quantity;
        }
    }
}

// Function to remove item from cart
function removeFromCart($itemId) {
    if (isset($_SESSION['cart'][$itemId])) {
        unset($_SESSION['cart'][$itemId]);
        
        // Re-index the array after deletion
        $_SESSION['cart'] = array_values($_SESSION['cart']);
    }
}

// Function to get total price of items in cart
function cartTotal() {
    $total = 0;
    
    foreach ($_SESSION['cart'] as $item) {
        $total += ($item['price'] * $item['quantity']);
    }
    
    return $total;
}

// Example usage:
// Add item to cart
$item1 = array('id' => 1, 'name' => 'Product 1', 'price' => 10.00);
addToCart($item1);

// Update quantity of an item in cart
updateCart(1, 2);

// Remove item from cart
removeFromCart(1);

// Get total price
$total = cartTotal();
echo "Total: $" . number_format($total, 2);

?>


<?php
// Start the session
session_start();

// Set session configuration
ini_set('session.cookie_httponly', 1);
ini_set('session.use_strict_mode', 1);

// Set session name (optional, but recommended)
session_name('user_cart_session');

// Initialize cart if not exists
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add item to cart
$item_id = isset($_GET['add']) ? intval($_GET['add']) : null;
if ($item_id !== null) {
    // Assuming you have a database connection and product details
    $product_id = $item_id;
    $product_name = "Product " . $product_id;  // Replace with actual product name from database
    $product_price = 29.99;  // Replace with actual product price from database

    if (!isset($_SESSION['cart'][$product_id])) {
        $_SESSION['cart'][$product_id] = array(
            'name' => $product_name,
            'price' => $product_price,
            'quantity' => 1
        );
    } else {
        $_SESSION['cart'][$product_id]['quantity']++;
    }
}

// Remove item from cart
$item_id_remove = isset($_GET['remove']) ? intval($_GET['remove']) : null;
if ($item_id_remove !== null) {
    unset($_SESSION['cart'][$item_id_remove]);
}

// Update quantity of item
$item_update = isset($_GET['update']) ? intval($_GET['update']) : null;
$new_quantity = isset($_GET['quantity']) ? intval($_GET['quantity']) : 1;

if ($item_update !== null && $new_quantity > 0) {
    $_SESSION['cart'][$item_update]['quantity'] = $new_quantity;
}

// Clear cart
if (isset($_GET['clear'])) {
    unset($_SESSION['cart']);
    $_SESSION['cart'] = array();
}

// Display cart contents
echo "<h2>Shopping Cart</h2>";
echo "<table border='1'>";
echo "<tr><th>Product Name</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>";

foreach ($_SESSION['cart'] as $id => $item) {
    $total = $item['price'] * $item['quantity'];
    echo "<tr>";
    echo "<td>" . $item['name'] . "</td>";
    echo "<td>$" . number_format($item['price'], 2) . "</td>";
    echo "<td><input type='number' value='" . $item['quantity'] . "' onChange=\"updateQuantity($id, this.value)\"></td>";
    echo "<td>$" . number_format($total, 2) . "</td>";
    echo "<td><a href='?remove=$id'>Remove</a></td>";
    echo "</tr>";
}

echo "</table>";

// Display total price
$total_price = array_sum(array_map(function($item) {
    return $item['price'] * $item['quantity'];
}, $_SESSION['cart']));

echo "<h3>Total Price: $" . number_format($total_price, 2) . "</h3>";
?>

<!-- Add some styling -->
<style>
table {
    width: 100%;
    border-collapse: collapse;
    margin-top: 20px;
}

th, td {
    padding: 15px;
    text-align: left;
    border-bottom: 1px solid #ddd;
}

input[type="number"] {
    width: 60px;
    padding: 3px;
}

h2, h3 {
    color: #333;
    margin-bottom: 20px;
}
</style>

<!-- JavaScript for quantity update -->
<script>
function updateQuantity(id, quantity) {
    if (quantity > 0) {
        window.location.href = '?update=' + id + '&quantity=' + quantity;
    }
}
</script>

<!-- Add items to cart example links -->
<p>Add Items:</p>
<a href="?add=1">Add Product 1</a> |
<a href="?add=2">Add Product 2</a> |
<a href="?add=3">Add Product 3</a> |

<!-- Clear cart button -->
<br><br>
<button onclick="window.location.href='?clear'">Clear Cart</button>


<?php
session_start();

// Initialize cart if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function add_to_cart($item_id, $item_name, $price) {
    global $conn; // Database connection
    
    // Check if item is already in cart
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['id'] == $item_id) {
            $item['quantity']++;
            return;
        }
    }
    
    // Add new item to cart
    $_SESSION['cart'][] = array(
        'id' => $item_id,
        'name' => $item_name,
        'price' => $price,
        'quantity' => 1
    );
}

// Function to remove item from cart
function remove_from_cart($item_id) {
    foreach ($_SESSION['cart'] as $key => &$item) {
        if ($item['id'] == $item_id) {
            unset($_SESSION['cart'][$key]);
            break;
        }
    }
    
    // Re-index the array keys
    $_SESSION['cart'] = array_values($_SESSION['cart']);
}

// Function to display cart items
function display_cart() {
    if (empty($_SESSION['cart'])) {
        echo "Your cart is empty.";
        return;
    }
    
    foreach ($_SESSION['cart'] as $item) {
        echo "<div class='cart-item'>";
        echo "<h3>" . $item['name'] . "</h3>";
        echo "<p>Price: $" . number_format($item['price'], 2) . "</p>";
        echo "<p>Quantity: " . $item['quantity'] . "</p>";
        echo "<form method='post'>";
        echo "<input type='hidden' name='remove_id' value='" . $item['id'] . "'>";
        echo "<button type='submit'>Remove</button>";
        echo "</form>";
        echo "</div>";
    }
}

// Example usage:
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    if (isset($_POST['add_to_cart'])) {
        // Get item details from database or other source
        $item_id = $_POST['item_id'];
        $item_name = $_POST['item_name'];
        $price = $_POST['price'];
        
        add_to_cart($item_id, $item_name, $price);
    } elseif (isset($_POST['remove_id'])) {
        remove_from_cart($_POST['remove_id']);
    }
}

// Display cart
display_cart();
?>


<?php
session_start();

// Initialize cart if it doesn't exist in session
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function addToCart($productId, $productName, $price) {
    global $cart;
    
    // Check if product is already in the cart
    if (isset($cart[$productId])) {
        // If exists, increment quantity
        $cart[$productId]['quantity']++;
    } else {
        // If not exists, add new product to cart
        $cart[$productId] = array(
            'product_id' => $productId,
            'product_name' => $productName,
            'price' => $price,
            'quantity' => 1
        );
    }
}

// Function to remove item from cart
function removeFromCart($productId) {
    global $cart;
    
    if (isset($cart[$productId])) {
        unset($cart[$productId]);
    }
}

// Function to update quantity of an item
function updateQuantity($productId, $quantity) {
    global $cart;
    
    if (isset($cart[$productId]) && is_numeric($quantity)) {
        $cart[$productId]['quantity'] = $quantity;
    }
}

// Add items to cart example usage
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Example product data
    $productId = 1;
    $productName = "Sample Product";
    $price = 9.99;

    addToCart($productId, $productName, $price);
}

// Display cart contents
echo "<h2>Your Cart</h2>";
if (!empty($_SESSION['cart'])) {
    echo "<table border='1'>";
    foreach ($_SESSION['cart'] as $item) {
        echo "<tr>";
        echo "<td>{$item['product_name']}</td>";
        echo "<td>$$item[price]</td>";
        echo "<td>{$item['quantity']}</td>";
        echo "<td><form action='cart.php' method='post'>";
        echo "<input type='hidden' name='remove_product_id' value='{$item['product_id']}'>";
        echo "<input type='submit' name='remove_item' value='Remove'>";
        echo "</form></td>";
        echo "</tr>";
    }
    echo "</table>";
} else {
    echo "Your cart is empty.";
}

// Update quantity form
echo "<h2>Update Quantity</h2>";
echo "<form action='cart.php' method='post'>";
foreach ($_SESSION['cart'] as $item) {
    echo "<input type='number' name='{$item['product_id']}' min='1' value='{$item['quantity']}'>";
}
echo "<input type='submit' name='update_quantity' value='Update'>";
echo "</form>";

// Handle quantity update
if (isset($_POST['update_quantity'])) {
    foreach ($_POST as $key => $value) {
        if ($key != 'update_quantity') {
            updateQuantity($key, $value);
        }
    }
}

// Handle remove item
if (isset($_POST['remove_item'])) {
    removeFromCart($_POST['remove_product_id']);
}
?>


<?php
session_start();

// Initialize cart if not set
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function add_to_cart($product_id, $name, $price) {
    global $db; // Assuming $db is your database connection

    if (isset($_SESSION['cart'][$product_id])) {
        $_SESSION['cart'][$product_id]['quantity']++;
    } else {
        $_SESSION['cart'][$product_id] = array(
            'id' => $product_id,
            'name' => $name,
            'price' => $price,
            'quantity' => 1
        );
    }
}

// Function to remove item from cart
function remove_from_cart($product_id) {
    if (isset($_SESSION['cart'][$product_id])) {
        unset($_SESSION['cart'][$product_id]);
        $_SESSION['cart'] = array_values($_SESSION['cart']);
    }
}

// Function to update quantity
function update_quantity($product_id, $new_quantity) {
    if ($new_quantity > 0 && isset($_SESSION['cart'][$product_id])) {
        $_SESSION['cart'][$product_id]['quantity'] = $new_quantity;
    }
}

// Function to calculate total price
function calculate_total() {
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += ($item['price'] * $item['quantity']);
    }
    return $total;
}

// Function to display cart items
function display_cart() {
    if (!empty($_SESSION['cart'])) {
        echo "<table border='1'>";
        echo "<tr><th>Product ID</th><th>Name</th><th>Price</th><th>Quantity</th><th>Total</th></tr>";
        foreach ($_SESSION['cart'] as $item) {
            echo "<tr>";
            echo "<td>" . $item['id'] . "</td>";
            echo "<td>" . $item['name'] . "</td>";
            echo "<td>$" . number_format($item['price'], 2) . "</td>";
            echo "<td><input type='number' min='1' value='" . $item['quantity'] . "' onchange='updateQuantity(" . $item['id'] . ", this.value)'></td>";
            echo "<td>$" . number_format($item['price'] * $item['quantity'], 2) . "</td>";
            echo "<td><button onclick='removeItem(" . $item['id'] . ")'>Remove</button></td>";
            echo "</tr>";
        }
        echo "</table>";
    } else {
        echo "Your cart is empty.";
    }
}

// Example usage:
// add_to_cart(1, 'Product 1', 29.99);
// remove_from_cart(1);
// update_quantity(1, 3);
echo "Total: $" . number_format(calculate_total(), 2) . "<br>";
display_cart();
?>


<?php
// Start the session
session_start();

// Check if the cart is already set in the session
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function addToCart($item_id, $item_name, $price) {
    global $CartItem;

    // Create a new CartItem object with default quantity 1
    if (!isset($_SESSION['cart'][$item_id])) {
        $_SESSION['cart'][$item_id] = array(
            'item_id' => $item_id,
            'item_name' => $item_name,
            'price' => $price,
            'quantity' => 1
        );
    } else {
        // If item already exists in cart, increment quantity
        $_SESSION['cart'][$item_id]['quantity']++;
    }
}

// Function to update item quantity in cart
function updateCart($item_id, $quantity) {
    if (isset($_SESSION['cart'][$item_id])) {
        $_SESSION['cart'][$item_id]['quantity'] = $quantity;
    }
}

// Function to remove item from cart
function removeFromCart($item_id) {
    if (isset($_SESSION['cart'][$item_id])) {
        unset($_SESSION['cart'][$item_id]);
    }
}

// Display the contents of the shopping cart
echo "<h2>Shopping Cart</h2>";
echo "<table>";
echo "<tr><th>Item Name</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>";

foreach ($_SESSION['cart'] as $item) {
    $total = $item['price'] * $item['quantity'];
    echo "<tr>";
    echo "<td>" . $item['item_name'] . "</td>";
    echo "<td>$" . number_format($item['price'], 2) . "</td>";
    echo "<td><input type='number' name='quantity[" . $item['item_id'] . "]' value='" . $item['quantity'] . "'></td>";
    echo "<td>$" . number_format($total, 2) . "</td>";
    echo "<td><a href='remove.php?id=" . $item['item_id'] . "'>Remove</a></td>";
    echo "</tr>";
}

echo "</table>";

// Calculate and display grand total
$grand_total = 0;
foreach ($_SESSION['cart'] as $item) {
    $grand_total += $item['price'] * $item['quantity'];
}
echo "<h3>Grand Total: $" . number_format($grand_total, 2) . "</h3>";

// Form for updating quantities
echo "<form method='post' action='update.php'>";
foreach ($_SESSION['cart'] as $item) {
    echo "<input type='hidden' name='id[]' value='" . $item['item_id'] . "'>";
}
echo "<input type='submit' value='Update Cart'>";
echo "</form>";

// Button to empty the cart
echo "<a href='empty.php'>Empty Cart</a>";
?>


<?php
session_start();
unset($_SESSION['cart']);
header("Location: cart.php");
exit();
?>


<?php
session_start();

// Check if the cart is already set in the session
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function add_to_cart($item_id, $item_name, $price) {
    global $db;
    
    // Check if the item already exists in the cart
    $found = false;
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['id'] == $item_id) {
            $item['quantity']++;
            $found = true;
            break;
        }
    }
    
    // If not found, add the new item to the cart
    if (!$found) {
        $_SESSION['cart'][] = array(
            'id' => $item_id,
            'name' => $item_name,
            'price' => $price,
            'quantity' => 1
        );
    }
}

// Function to update item quantity in cart
function update_cart($item_id, $new_quantity) {
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['id'] == $item_id) {
            $item['quantity'] = $new_quantity;
            break;
        }
    }
}

// Function to remove item from cart
function remove_from_cart($item_id) {
    $index = 0;
    foreach ($_SESSION['cart'] as $key => $item) {
        if ($item['id'] == $item_id) {
            unset($_SESSION['cart'][$key]);
            break;
        }
        $index++;
    }
    
    // Re-index the cart array
    $_SESSION['cart'] = array_values($_SESSION['cart']);
}

// Function to calculate total price of items in cart
function calculate_total() {
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += $item['price'] * $item['quantity'];
    }
    return $total;
}

// Function to empty the cart
function empty_cart() {
    $_SESSION['cart'] = array();
}

// Example usage:
if (isset($_GET['action'])) {
    switch ($_GET['action']) {
        case 'add':
            add_to_cart(1, 'Product 1', 25.99);
            break;
        case 'update':
            update_cart(1, $_GET['quantity']);
            break;
        case 'remove':
            remove_from_cart($_GET['id']);
            break;
        case 'empty':
            empty_cart();
            break;
    }
}

// Display the cart contents
echo "<h2>Shopping Cart</h2>";
if (empty($_SESSION['cart'])) {
    echo "Your cart is empty.";
} else {
    echo "<table border='1'>";
    echo "<tr><th>Item Name</th><th>Quantity</th><th>Price</th><th>Total</th><th>Action</th></tr>";
    foreach ($_SESSION['cart'] as $item) {
        $total_price = $item['price'] * $item['quantity'];
        echo "<tr>";
        echo "<td>" . $item['name'] . "</td>";
        echo "<td><input type='number' value='" . $item['quantity'] . "' onchange='updateQuantity(" . $item['id'] . ", this.value)'></td>";
        echo "<td>$$item[price]</td>";
        echo "<td>$$total_price</td>";
        echo "<td><a href='?action=remove&id=" . $item['id'] . "'>Remove</a></td>";
        echo "</tr>";
    }
    echo "</table>";
    
    // Display total price
    echo "<h3>Total: $" . number_format(calculate_total(), 2) . "</h3>";
    
    // Empty cart button
    echo "<br><a href='?action=empty'>Empty Cart</a>";
}
?>

<script>
function updateQuantity(item_id, quantity) {
    if (quantity < 1) {
        quantity = 1;
    }
    window.location.href = '?action=update&quantity=' + quantity + '&id=' + item_id;
}
</script>


<?php
// Start the session
session_start();

// Check if session is not started yet
if (!isset($_SESSION)) {
    session_start();
}

// Initialize cart session if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function add_to_cart($product_id, $product_name, $price, $quantity) {
    global $Cart;
    
    // Check if product already exists in the cart
    $found = false;
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['product_id'] == $product_id) {
            $item['quantity'] += $quantity;
            $found = true;
            break;
        }
    }

    // If product not found, add it to the cart
    if (!$found) {
        $_SESSION['cart'][] = array(
            'product_id' => $product_id,
            'product_name' => $product_name,
            'price' => $price,
            'quantity' => $quantity
        );
    }
}

// Function to update item quantity in cart
function update_cart($product_id, $new_quantity) {
    global $Cart;
    
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['product_id'] == $product_id) {
            $item['quantity'] = $new_quantity;
            break;
        }
    }
}

// Function to remove item from cart
function remove_from_cart($product_id) {
    global $Cart;
    
    // Remove the item with the given product ID
    foreach ($_SESSION['cart'] as $key => $item) {
        if ($item['product_id'] == $product_id) {
            unset($_SESSION['cart'][$key]);
            break;
        }
    }
}

// Function to calculate cart total price
function get_cart_total() {
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += ($item['price'] * $item['quantity']);
    }
    return $total;
}

// Function to display cart items
function display_cart_items() {
    if (empty($_SESSION['cart'])) {
        echo "<p>Your cart is empty.</p>";
        return;
    }

    echo "<table border='1'>";
    echo "<tr><th>Product Name</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>";
    foreach ($_SESSION['cart'] as $item) {
        echo "<tr>";
        echo "<td>{$item['product_name']}</td>";
        echo "<td>${$item['price']}</td>";
        echo "<td>{$item['quantity']}</td>";
        echo "<td>${$item['price'] * $item['quantity']}</td>";
        echo "<td><a href='remove.php?id={$item['product_id']}'>Remove</a></td>";
        echo "</tr>";
    }
    echo "</table>";
}

// Function to display cart summary
function display_cart_summary() {
    $total = get_cart_total();
    $item_count = count($_SESSION['cart']);
    
    echo "<div class='cart-summary'>";
    echo "<p>Items in Cart: {$item_count}</p>";
    echo "<p>Total Price: \${$total}</p>";
    echo "</div>";
}

// Example usage:
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    if (isset($_POST['action'])) {
        switch ($_POST['action']) {
            case 'add':
                add_to_cart($_POST['product_id'], $_POST['product_name'], $_POST['price'], $_POST['quantity']);
                break;
            case 'update':
                update_cart($_POST['product_id'], $_POST['new_quantity']);
                break;
            case 'remove':
                remove_from_cart($_POST['product_id']);
                break;
        }
    }
}

// Destroy session
function destroy_session() {
    // Unset all session variables
    $_SESSION = array();
    
    // If it's desired to delete the cookies
    if (ini_get("session.use_cookies")) {
        $params = session_get_cookie_params();
        setcookie(session_name(), '', time() - 42000,
            $params["path"], $params["domain"],
            $params["secure"], $params["httponly"]
        );
    }
    
    // Finally, destroy the session
    session_destroy();
}
?>


<?php
// Start the session
session_start();
?>


if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}


// Check if the product ID is provided and valid
if (isset($_GET['product_id']) && is_numeric($_GET['product_id'])) {
    $productId = $_GET['product_id'];

    // Add or update the product in the cart
    if (!isset($_SESSION['cart'][$productId])) {
        // Product not in cart, add it with quantity 1
        $_SESSION['cart'][$productId] = 1;
    } else {
        // Product already exists, increment quantity
        $_SESSION['cart'][$productId]++;
    }
}


echo "<h2>Your Cart</h2>";
if (empty($_SESSION['cart'])) {
    echo "Your cart is empty.";
} else {
    foreach ($_SESSION['cart'] as $productId => $quantity) {
        echo "Product ID: $productId, Quantity: $quantity<br>";
    }
}


// Check if a product should be removed
if (isset($_GET['remove'])) {
    $productIdToRemove = $_GET['remove'];
    
    // Check if the product exists in the cart
    if (isset($_SESSION['cart'][$productIdToRemove])) {
        unset($_SESSION['cart'][$productIdToRemove]);
        
        // Re-index the array to maintain keys
        $_SESSION['cart'] = array_values($_SESSION['cart']);
    }
}


// Destroy the session
session_unset();
session_destroy();


<?php
// Start the session
session_start();

// Initialize cart if not set
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add product to cart
if (isset($_GET['add']) && is_numeric($_GET['add'])) {
    $productId = $_GET['add'];
    if (!isset($_SESSION['cart'][$productId])) {
        $_SESSION['cart'][$productId] = 1;
    } else {
        $_SESSION['cart'][$productId]++;
    }
}

// Remove product from cart
if (isset($_GET['remove']) && is_numeric($_GET['remove'])) {
    $productIdToRemove = $_GET['remove'];
    if (isset($_SESSION['cart'][$productIdToRemove])) {
        unset($_SESSION['cart'][$productIdToRemove]);
        $_SESSION['cart'] = array_values($_SESSION['cart']);
    }
}

// Display cart
echo "<h2>Your Cart</h2>";
if (empty($_SESSION['cart'])) {
    echo "Your cart is empty.<br>";
} else {
    foreach ($_SESSION['cart'] as $productId => $quantity) {
        echo "Product ID: $productId, Quantity: $quantity<br>";
    }
}

// Links to add/remove products
echo "<a href='?add=1'>Add Product 1</a><br>";
echo "<a href='?remove=1'>Remove Product 1</a><br>";
?>


<?php
// Initialize the session
session_start();

// Check if session is already started
if (session_status() == PHP_SESSION_NONE) {
    session_start();
}

// Define some products for demonstration
$products = array(
    1 => array('name' => 'Product 1', 'price' => 29.99),
    2 => array('name' => 'Product 2', 'price' => 49.99),
    3 => array('name' => 'Product 3', 'price' => 19.99)
);

// Initialize cart if not exists
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add item to cart
if (isset($_POST['add_to_cart'])) {
    $productId = $_POST['product_id'];
    
    if (!isset($_SESSION['cart'][$productId])) {
        $_SESSION['cart'][$productId] = array(
            'id' => $productId,
            'name' => $products[$productId]['name'],
            'price' => $products[$productId]['price'],
            'quantity' => 1
        );
    } else {
        // Increment quantity if product already exists in cart
        $_SESSION['cart'][$productId]['quantity']++;
    }
}

// Update item quantity
if (isset($_POST['update_cart'])) {
    foreach ($_POST as $key => $value) {
        if (strpos($key, 'quantity_') !== false) {
            $productId = substr($key, 9);
            $_SESSION['cart'][$productId]['quantity'] = $value;
        }
    }
}

// Remove item from cart
if (isset($_GET['remove'])) {
    $productId = $_GET['remove'];
    unset($_SESSION['cart'][$productId]);
}

// Calculate total amount
$totalAmount = 0;
foreach ($_SESSION['cart'] as $item) {
    $totalAmount += ($item['price'] * $item['quantity']);
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Shopping Cart</title>
    <style>
        .cart-item { padding: 10px; border-bottom: 1px solid #ddd; }
        .cart-total { font-weight: bold; padding: 20px 0; }
    </style>
</head>
<body>
    <!-- Product Listing -->
    <h2>Products</h2>
    <?php foreach ($products as $id => $product): ?>
        <div style="margin-bottom: 10px;">
            <h3><?php echo $product['name']; ?></h3>
            <p>Price: $<?php echo number_format($product['price'], 2); ?></p>
            <form action="" method="post">
                <input type="hidden" name="product_id" value="<?php echo $id; ?>">
                <button type="submit" name="add_to_cart">Add to Cart</button>
            </form>
        </div>
    <?php endforeach; ?>

    <!-- Shopping Cart -->
    <h2>Shopping Cart</h2>
    <?php if (!empty($_SESSION['cart'])): ?>
        <form action="" method="post">
            <?php foreach ($_SESSION['cart'] as $id => $item): ?>
                <div class="cart-item">
                    <p><?php echo $item['name']; ?></p>
                    <p>Price: $<?php echo number_format($item['price'], 2); ?></p>
                    <input type="number" name="quantity_<?php echo $id; ?>" value="<?php echo $item['quantity']; ?>">
                    <a href="?remove=<?php echo $id; ?>">Remove</a>
                </div>
            <?php endforeach; ?>
            <button type="submit" name="update_cart">Update Cart</button>
        </form>
        
        <!-- Total Amount -->
        <div class="cart-total">
            Total: $<?php echo number_format($totalAmount, 2); ?>
        </div>

        <!-- Clear Cart -->
        <a href="?clear-cart">Clear Cart</a>
    <?php else: ?>
        <p>Your cart is empty.</p>
    <?php endif; ?>

    <!-- Clear Cart Logic -->
    <?php if (isset($_GET['clear-cart'])) {
        $_SESSION['cart'] = array();
    } ?>
</body>
</html>


<?php
// Initialize session
session_start();
?>


<?php
if (!isset($_SESSION['cart'])) {
    // Initialize an empty cart array
    $_SESSION['cart'] = array();
}
?>


<?php
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    if (isset($_POST['action']) && $_POST['action'] == 'add') {
        $productId = $_POST['product_id'];
        
        // Add the product to the cart
        array_push($_SESSION['cart'], $productId);
        
        // Redirect back to the product page or cart
        header("Location: cart.php");
    }
}
?>


<?php
// Connect to database
include('db_connection.php');

// Get all items from the cart session
$cartItems = $_SESSION['cart'];

// Query the database for product details
foreach ($cartItems as $productId) {
    $query = "SELECT * FROM products WHERE id = ?";
    $stmt = $conn->prepare($query);
    $stmt->bind_param("i", $productId);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($product = $result->fetch_assoc()) {
        // Display product details
        echo "Product ID: " . $product['id'] . "<br>";
        echo "Product Name: " . $product['name'] . "<br>";
        echo "Product Price: $" . number_format($product['price'], 2) . "<br><br>";
    }
}
?>


// In cart.php, within the foreach loop:
echo '<form action="cart.php" method="post">';
echo '<input type="hidden" name="product_id" value="' . $productId . '">';
echo '<button type="submit" name="action" value="remove">Remove</button>';
echo '</form>';


<?php
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    if (isset($_POST['action']) && $_POST['action'] == 'remove') {
        $productId = $_POST['product_id'];
        
        // Find and remove the product from the cart
        foreach ($_SESSION['cart'] as $key => $item) {
            if ($item == $productId) {
                unset($_SESSION['cart'][$key]);
            }
        }
        
        // Re-index the array
        $_SESSION['cart'] = array_values($_SESSION['cart']);
        
        // Redirect back to cart page
        header("Location: cart.php");
    }
}
?>


<?php
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "myDB";

// Create connection
$conn = new mysqli($servername, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}
?>


<?php
// Start the session
session_start();

// Set up error reporting
error_reporting(E_ALL);
ini_set('display_errors', 1);

// Check if session is active
if (isset($_SESSION['cart'])) {
    $cart = $_SESSION['cart'];
} else {
    // Initialize cart as an empty array
    $cart = array();
}

// Check if product was added to cart
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $productId = isset($_POST['product_id']) ? intval($_POST['product_id']) : 0;
    $quantity = isset($_POST['quantity']) ? intval($_POST['quantity']) : 1;

    // Check if product is already in cart
    $found = false;
    foreach ($cart as &$item) {
        if ($item['id'] == $productId) {
            $item['quantity'] += $quantity;
            $found = true;
            break;
        }
    }

    if (!$found) {
        // Add new product to cart
        array_push($cart, array(
            'id' => $productId,
            'name' => "Product {$productId}",  // Replace with actual product name from database
            'quantity' => $quantity,
            'price' => 10.99    // Replace with actual price from database
        ));
    }

    // Update session cart
    $_SESSION['cart'] = $cart;
}

// Display cart contents
echo "<h2>Shopping Cart</h2>";
if (!empty($cart)) {
    echo "<table border='1'>";
    echo "<tr><th>Product Name</th><th>Quantity</th><th>Price</th><th>Action</th></tr>";
    foreach ($cart as $item) {
        echo "<tr>";
        echo "<td>{$item['name']}</td>";
        echo "<td>{$item['quantity']}</td>";
        echo "<td>\${$item['price']}</td>";
        echo "<td><a href='?remove={$item['id']}'>Remove</a></td>";
        echo "</tr>";
    }
    echo "</table>";
} else {
    echo "Your cart is empty.";
}

// Remove item from cart
if (isset($_GET['remove'])) {
    $productId = intval($_GET['remove']);
    foreach ($cart as &$item) {
        if ($item['id'] == $productId) {
            unset($item);
        }
    }
    // Re-index array and update session
    $cart = array_values($cart);
    $_SESSION['cart'] = $cart;
}

// Add item form
echo "<h2>Add Item to Cart</h2>";
echo "<form method='post'>";
echo "<input type='text' name='product_id' placeholder='Enter product ID'><br>";
echo "<input type='text' name='quantity' placeholder='Enter quantity'><br>";
echo "<button type='submit'>Add to Cart</button>";
echo "</form>";

// Optional: Add CSS styling
echo "<style>
    table { width: 100%; margin-top: 20px; }
    th, td { padding: 10px; text-align: left; border-bottom: 1px solid #ddd; }
    th { background-color: #f2f2f2; }
    button { padding: 5px 15px; background-color: #4CAF50; color: white; border: none; }
    button:hover { background-color: #45a049; }
</style>";
?>


<?php
session_start();
?>


function addToCart($item) {
    if (isset($_SESSION['cart'])) {
        $_SESSION['cart'][] = $item;
    } else {
        $_SESSION['cart'] = array($item);
    }
}


if (!empty($_SESSION['cart'])) {
    echo "<h2>Your Cart:</h2>";
    foreach ($_SESSION['cart'] as $key => $value) {
        echo "Item #" . ($key + 1) . ": " . $value . "<br>";
    }
} else {
    echo "Your cart is empty.";
}


function removeFromCart($index) {
    if (!empty($_SESSION['cart'])) {
        unset($_SESSION['cart'][$index]);
        $_SESSION['cart'] = array_values($_SESSION['cart']); // Re-index
    }
}


session_unset();
session_destroy();


<?php
session_start();

$item = "Product 1";
addToCart($item);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <?php include 'display_cart.php'; ?>
</body>
</html>


<?php
if (!empty($_SESSION['cart'])) {
    echo "<h2>Your Cart:</h2>";
    foreach ($_SESSION['cart'] as $key => $value) {
        echo "Item #" . ($key + 1) . ": " . $value . "<br>";
        echo "<a href='remove_from_cart.php?key=$key'>Remove</a><br><br>";
    }
} else {
    echo "Your cart is empty.";
}
?>


<?php
session_start();

if (isset($_GET['key'])) {
    $index = intval($_GET['key']);
    removeFromCart($index);
}

header("Location: display_cart.php");
exit();
?>


<?php
// Start the session
session_start();

// Initialize cart if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add item to cart
$item_id = isset($_GET['item_id']) ? intval($_GET['item_id']) : 0;

if ($item_id > 0) {
    $found = false;
    
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['id'] == $item_id) {
            $item['quantity']++;
            $found = true;
            break;
        }
    }
    
    if (!$found) {
        $_SESSION['cart'][] = array(
            'id' => $item_id,
            'name' => 'Item ' . $item_id, // Replace with actual product name
            'price' => 10.99, // Replace with actual product price
            'quantity' => 1
        );
    }
}

// Display cart contents
echo "<h2>Your Cart</h2>";
echo "<table border='1'>";
echo "<tr><th>Item Name</th><th>Price</th><th>Quantity</th><th>Action</th></tr>";

foreach ($_SESSION['cart'] as $item) {
    echo "<tr>";
    echo "<td>" . $item['name'] . "</td>";
    echo "<td>$" . number_format($item['price'], 2) . "</td>";
    echo "<td>" . $item['quantity'] . "</td>";
    echo "<td><a href='cart.php?remove_id=" . $item['id'] . "'>Remove</a></td>";
    echo "</tr>";
}

echo "</table>";

// Remove item from cart
if (isset($_GET['remove_id'])) {
    $remove_id = intval($_GET['remove_id']);
    
    foreach ($_SESSION['cart'] as $key => $item) {
        if ($item['id'] == $remove_id) {
            unset($_SESSION['cart'][$key]);
            break;
        }
    }
    
    // Re-index the array to maintain proper session structure
    $_SESSION['cart'] = array_values($_SESSION['cart']);
}

// Demo HTML page to test cart functionality
?>
<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <?php include 'cart.php'; ?>
    
    <!-- Add items to cart -->
    <a href="cart.php?item_id=1">Add Item 1</a><br>
    <a href="cart.php?item_id=2">Add Item 2</a><br>
    <a href="cart.php?item_id=3">Add Item 3</a><br>
</body>
</html>


<?php
session_start();
?>


if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}


session_start();

$product_id = $_POST['product_id'];
$quantity = $_POST['quantity'];

if (!isset($_SESSION['cart'][$product_id])) {
    // If item is not in cart, add it
    $_SESSION['cart'][$product_id] = array(
        'id' => $product_id,
        'quantity' => $quantity,
        'price' => $product_price // Get the price from your database or product list
    );
} else {
    // If item is already in cart, update quantity
    $_SESSION['cart'][$product_id]['quantity'] += $quantity;
}

header('Location: cart.php');
exit();


session_start();

if (isset($_POST['id'])) {
    foreach ($_POST['id'] as $key => $product_id) {
        $_SESSION['cart'][$product_id]['quantity'] = $_POST['quantity'][$key];
    }
}

header('Location: cart.php');
exit();


session_start();

$product_id = $_GET['id'];

if (isset($_SESSION['cart'][$product_id])) {
    unset($_SESSION['cart'][$product_id]);
}

header('Location: cart.php');
exit();


<?php
session_start();

if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <?php if (empty($_SESSION['cart'])): ?>
        <p>Your cart is empty.</p>
    <?php else: ?>
        <h2>Your Shopping Cart:</h2>
        <ul>
            <?php foreach ($_SESSION['cart'] as $item): ?>
                <li>
                    Product ID: <?php echo $item['id']; ?><br>
                    Quantity: <?php echo $item['quantity']; ?><br>
                    Price: <?php echo $item['price']; ?><br>
                    <a href="remove_from_cart.php?id=<?php echo $item['id']; ?>">Remove</a>
                </li>
            <?php endforeach; ?>
        </ul>
    <?php endif; ?>

    <p>Total Items in Cart: <?php echo count($_SESSION['cart']); ?></p>
</body>
</html>


function getCartTotal() {
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += ($item['quantity'] * $item['price']);
    }
    return $total;
}


<p>Total Price: <?php echo getCartTotal(); ?></p>


<?php
// Start the session
session_start();

// Set session cookie parameters for security
ini_set('session.cookie_httponly', 1);
ini_set('session.cookie_secure', 1); // Use HTTPS only
ini_set('session.use_strict_mode', 1);

// Check if user is logged in (replace this with your actual authentication check)
$isLoggedIn = isset($_SESSION['user_id']);

// Cart functions

function add_to_cart($item_id, $quantity) {
    global $isLoggedIn;

    // Initialize cart array if it doesn't exist
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }

    // If user is logged in, use their user ID as the cart key
    // Otherwise, use a temporary guest cart
    $cartKey = $isLoggedIn ? 'user_cart' : 'guest_cart';

    if (!isset($_SESSION['cart'][$cartKey])) {
        $_SESSION['cart'][$cartKey] = array();
    }

    // Add item to cart or update quantity if it already exists
    if (isset($_SESSION['cart'][$cartKey][$item_id])) {
        $_SESSION['cart'][$cartKey][$item_id]['quantity'] += $quantity;
    } else {
        $_SESSION['cart'][$cartKey][$item_id] = array(
            'id' => $item_id,
            'quantity' => $quantity
        );
    }
}

function get_cart() {
    global $isLoggedIn;

    // Initialize cart array if it doesn't exist
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }

    // If user is logged in, use their user ID as the cart key
    // Otherwise, use a temporary guest cart
    $cartKey = $isLoggedIn ? 'user_cart' : 'guest_cart';

    if (!isset($_SESSION['cart'][$cartKey])) {
        $_SESSION['cart'][$cartKey] = array();
    }

    return $_SESSION['cart'][$cartKey];
}

function remove_from_cart($item_id) {
    global $isLoggedIn;

    // If user is logged in, use their user ID as the cart key
    // Otherwise, use a temporary guest cart
    $cartKey = $isLoggedIn ? 'user_cart' : 'guest_cart';

    if (isset($_SESSION['cart'][$cartKey][$item_id])) {
        unset($_SESSION['cart'][$cartKey][$item_id]);
    }
}

function update_quantity($item_id, $quantity) {
    global $isLoggedIn;

    // If user is logged in, use their user ID as the cart key
    // Otherwise, use a temporary guest cart
    $cartKey = $isLoggedIn ? 'user_cart' : 'guest_cart';

    if (isset($_SESSION['cart'][$cartKey][$item_id])) {
        $_SESSION['cart'][$cartKey][$item_id]['quantity'] = $quantity;

        // If quantity is zero, remove the item from cart
        if ($_SESSION['cart'][$cartKey][$item_id]['quantity'] == 0) {
            unset($_SESSION['cart'][$cartKey][$item_id]);
        }
    }
}

// Example usage:

// Add an item to cart
add_to_cart(1, 2); // Item ID 1, quantity 2

// Get current cart contents
$cartItems = get_cart();
print_r($cartItems);

// Remove an item from cart
remove_from_cart(1);

// Update quantity of an item
update_quantity(1, 3);

// When user logs in or out:
if ($isLoggedIn) {
    // Merge guest cart with user cart if needed
    if (isset($_SESSION['cart']['guest_cart'])) {
        foreach ($_SESSION['cart']['guest_cart'] as $item) {
            add_to_cart($item['id'], $item['quantity']);
        }
        unset($_SESSION['cart']['guest_cart']);
    }
} else {
    // If user logs out, clear their cart or keep it as guest cart
    unset($_SESSION['cart']['user_cart']);
}

// When clearing the cart:
unset($_SESSION['cart']);

// Always end the session properly
session_write_close();
?>


<?php
// Start the session
session_start();

// Check if the cart session exists, if not initialize it
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function addToCart($productId, $productName, $price) {
    global $connection;
    
    // Check if product is already in cart
    if (isset($_SESSION['cart'][$productId])) {
        // Increment quantity
        $_SESSION['cart'][$productId]['quantity']++;
    } else {
        // Add new product to cart
        $_SESSION['cart'][$productId] = array(
            'product_id' => $productId,
            'product_name' => $productName,
            'price' => $price,
            'quantity' => 1
        );
    }
}

// Function to remove item from cart
function removeFromCart($productId) {
    if (isset($_SESSION['cart'][$productId])) {
        unset($_SESSION['cart'][$productId]);
    }
}

// Function to update quantity of an item in cart
function updateQuantity($productId, $newQuantity) {
    if (isset($_SESSION['cart'][$productId])) {
        $_SESSION['cart'][$productId]['quantity'] = $newQuantity;
    }
}

// Function to get total price of items in cart
function getTotalPrice() {
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += ($item['price'] * $item['quantity']);
    }
    return $total;
}
?>


<?php
// Start the session
if (!isset($_COOKIE[session_name()])) {
    session_start();
}

// Initialize cart if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add item to cart
if (isset($_POST['add_to_cart'])) {
    $productId = intval($_POST['product_id']);
    $quantity = intval($_POST['quantity']);

    // Check if product is already in cart
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['product_id'] == $productId) {
            $item['quantity'] += $quantity;
            break;
        }
    }

    // If not, add new item to cart
    if (!isset($found)) {
        $_SESSION['cart'][] = array(
            'product_id' => $productId,
            'quantity' => $quantity
        );
    }
}

// Remove item from cart
if (isset($_POST['remove_from_cart'])) {
    $productId = intval($_POST['product_id']);

    // Filter out the item to be removed
    $_SESSION['cart'] = array_filter($_SESSION['cart'], function($item) use ($productId) {
        return $item['product_id'] != $productId;
    });

    // Reindex the array
    $_SESSION['cart'] = array_values($_SESSION['cart']);
}

// Display cart contents
echo "<h2>Your Cart</h2>";
if (empty($_SESSION['cart'])) {
    echo "Your cart is empty.";
} else {
    foreach ($_SESSION['cart'] as $item) {
        // Here you would typically fetch product details from your database
        // For this example, we'll assume product_id and quantity are sufficient
        echo "<div>Product ID: {$item['product_id']} | Quantity: {$item['quantity']}</div>";
    }
}

// Logout button to destroy session
echo "<form method='post'>";
echo "<input type='submit' name='logout' value='Logout'>";
echo "</form>";

if (isset($_POST['logout'])) {
    // Destroy the session and clear cookies
    session_unset();
    session_destroy();

    // Set cookie expiration time to the past
    setcookie(session_name(), '', time() - 3600, '/');
}

?>


<?php
session_start();

// Initialize cart if not set
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Sample product data (replace with database query in real application)
$products = array(
    1 => array('name' => 'Laptop', 'price' => 999.99),
    2 => array('name' => 'Smartphone', 'price' => 699.99),
    3 => array('name' => 'Tablet', 'price' => 299.99)
);

// Add item to cart
if (isset($_POST['add_to_cart'])) {
    $item_id = $_POST['product_id'];
    if (isset($products[$item_id])) {
        $product = $products[$item_id];
        if (isset($_SESSION['cart'][$item_id])) {
            // Increment quantity
            $_SESSION['cart'][$item_id]['quantity']++;
        } else {
            // Add new item
            $_SESSION['cart'][$item_id] = array(
                'name' => $product['name'],
                'price' => $product['price'],
                'quantity' => 1
            );
        }
    }
}

// Remove item from cart
if (isset($_POST['remove_item'])) {
    $item_id = $_POST['item_id'];
    if (isset($_SESSION['cart'][$item_id])) {
        unset($_SESSION['cart'][$item_id]);
    }
}

// Calculate total price
$total_price = 0;
foreach ($_SESSION['cart'] as $item) {
    $total_price += $item['price'] * $item['quantity'];
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
    <style>
        .cart-item { margin-bottom: 10px; padding: 5px; border: 1px solid #ddd; }
        .total-price { font-weight: bold; }
    </style>
</head>
<body>
    <?php if (!empty($_SESSION['cart'])) : ?>
        <h2>Your Cart:</h2>
        <div class="cart-items">
            <?php foreach ($_SESSION['cart'] as $item_id => $item) : ?>
                <div class="cart-item">
                    <?php echo $item['name']; ?> (Quantity: <?php echo $item['quantity']; ?>)
                    <br>
                    Price: <?php echo $item['price']; ?> $
                    <form method="post" style="display:inline;">
                        <input type="hidden" name="remove_item" value="true">
                        <input type="hidden" name="item_id" value="<?php echo $item_id; ?>">
                        <button type="submit">Remove</button>
                    </form>
                </div>
            <?php endforeach; ?>
        </div>
        <p class="total-price">Total Price: <?php echo $total_price; ?> $</p>
    <?php else : ?>
        <p>Your cart is empty.</p>
    <?php endif; ?>

    <h2>Products:</h2>
    <?php foreach ($products as $id => $product) : ?>
        <div style="margin: 10px 0;">
            <?php echo $product['name']; ?> - <?php echo $product['price']; ?> $
            <form method="post" action="">
                <input type="hidden" name="product_id" value="<?php echo $id; ?>">
                <button type="submit" name="add_to_cart">Add to Cart</button>
            </form>
        </div>
    <?php endforeach; ?>
</body>
</html>


<?php
session_start();
?>


<?php
session_start();

// Check if the product ID is valid and exists in your database
$product_id = $_POST['product_id'];
$product_name = $_POST['product_name'];
$product_price = $_POST['product_price'];
$quantity = isset($_POST['quantity']) ? (int)$_POST['quantity'] : 1;

if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Check if the product is already in the cart
$found = false;
foreach ($_SESSION['cart'] as &$item) {
    if ($item['product_id'] == $product_id) {
        $item['quantity'] += $quantity;
        $found = true;
        break;
    }
}

if (!$found) {
    $_SESSION['cart'][] = array(
        'product_id' => $product_id,
        'product_name' => $product_name,
        'price' => $product_price,
        'quantity' => $quantity
    );
}

// Redirect back to the product page or cart view
header('Location: cart.php');
exit();
?>


<?php
session_start();

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $product_id = $_POST['product_id'];
    $new_quantity = (int)$_POST['quantity'];

    if (!empty($_SESSION['cart'])) {
        foreach ($_SESSION['cart'] as &$item) {
            if ($item['product_id'] == $product_id) {
                // Ensure quantity is at least 1
                $item['quantity'] = max(1, $new_quantity);
                break;
            }
        }
    }

    header('Location: cart.php');
    exit();
}
?>


<?php
session_start();

if ($_SERVER['REQUEST_METHOD'] == 'GET') {
    $product_id = $_GET['product_id'];

    if (!empty($_SESSION['cart'])) {
        foreach ($_SESSION['cart'] as $key => &$item) {
            if ($item['product_id'] == $product_id) {
                unset($_SESSION['cart'][$key]);
                // Re-index the array
                $_SESSION['cart'] = array_values($_SESSION['cart']);
                break;
            }
        }
    }

    header('Location: cart.php');
    exit();
}
?>


<?php
session_start();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <?php if (empty($_SESSION['cart'])): ?>
        <p>Your cart is empty.</p>
    <?php else: ?>
        <table border="1">
            <tr>
                <th>Product Name</th>
                <th>Price</th>
                <th>Quantity</th>
                <th>Total</th>
                <th>Action</th>
            </tr>
            <?php
            $total = 0;
            foreach ($_SESSION['cart'] as $item):
                $subtotal = $item['price'] * $item['quantity'];
                $total += $subtotal;
                ?>
                <tr>
                    <td><?php echo $item['product_name']; ?></td>
                    <td>$<?php echo number_format($item['price'], 2); ?></td>
                    <td>
                        <form action="update_cart.php" method="post">
                            <input type="hidden" name="product_id" value="<?php echo $item['product_id']; ?>">
                            <input type="number" name="quantity" min="1" value="<?php echo $item['quantity']; ?>" style="width: 50px;">
                            <button type="submit">Update</button>
                        </form>
                    </td>
                    <td>$<?php echo number_format($subtotal, 2); ?></td>
                    <td>
                        <a href="remove_from_cart.php?product_id=<?php echo $item['product_id']; ?>" onclick="return confirm('Are you sure to remove this item?')">Remove</a>
                    </td>
                </tr>
            <?php endforeach; ?>
        </table>
        <h3>Total: $<?php echo number_format($total, 2); ?></h3>
    <?php endif; ?>

    <p><a href="products.php">Continue Shopping</a></p>
</body>
</html>


<?php
session_start();
unset($_SESSION['cart']);
header('Location: cart.php');
exit();
?>


<?php
session_start();
?>


<?php
session_start();

if (isset($_GET['product_id'])) {
    $productId = $_GET['product_id'];
    
    // Fetch product details from your database or hardcoded array
    $products = [
        1 => ['name' => 'Product 1', 'price' => 29.99],
        2 => ['name' => 'Product 2', 'price' => 49.99]
    ];
    
    if (isset($products[$productId])) {
        $product = $products[$productId];
        
        // Initialize cart if not exists
        if (!isset($_SESSION['cart'])) {
            $_SESSION['cart'] = array();
        }
        
        // Check if product is already in cart
        $found = false;
        foreach ($_SESSION['cart'] as &$item) {
            if ($item['product_id'] == $productId) {
                $item['quantity']++;
                $found = true;
                break;
            }
        }
        
        if (!$found) {
            $_SESSION['cart'][] = array(
                'product_id' => $productId,
                'name' => $product['name'],
                'price' => $product['price'],
                'quantity' => 1
            );
        }
    } else {
        // Handle invalid product ID if necessary
    }
    
    header('Location: view_cart.php');
    exit;
}
?>


<?php
session_start();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
    <style>
        .cart-item { margin-bottom: 10px; padding: 5px; border: 1px solid #ddd; }
        .total-price { font-weight: bold; margin-top: 20px; }
        .checkout-button { background-color: #4CAF50; color: white; padding: 10px 20px; text-decoration: none; }
    </style>
</head>
<body>

<h1>Shopping Cart</h1>

<?php
if (isset($_SESSION['cart']) && count($_SESSION['cart']) > 0) {
    $totalPrice = 0;
    
    foreach ($_SESSION['cart'] as $index => $item) {
        $subtotal = $item['price'] * $item['quantity'];
        $totalPrice += $subtotal;
        
        echo "<div class='cart-item'>";
        echo "<h3>{$item['name']}</h3>";
        echo "Price: \${$item['price']}<br/>";
        echo "Quantity: <input type='number' value='{$item['quantity']}' min='1'>";
        // Add form to update quantity here
        echo "<a href='remove_from_cart.php?product_id={$item['product_id']}'>Remove</a>";
        echo "</div>";
    }
    
    echo "<div class='total-price'>";
    echo "Total Price: \${$totalPrice}<br/>";
    echo "<a href='#' class='checkout-button'>Checkout</a>";
    echo "</div>";
} else {
    echo "Your cart is empty.";
}
?>

</body>
</html>


<?php
session_start();

if (isset($_GET['product_id'])) {
    $productId = $_GET['product_id'];
    
    if (isset($_SESSION['cart'])) {
        foreach ($_SESSION['cart'] as $index => $item) {
            if ($item['product_id'] == $productId) {
                unset($_SESSION['cart'][$index]);
                break;
            }
        }
        
        // Re-index the array to maintain numeric keys
        $_SESSION['cart'] = array_values($_SESSION['cart']);
    }
}
header('Location: view_cart.php');
exit;
?>


<?php
// Initialize session
session_start();

// Check if cart exists in session, if not initialize it as array
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function addToCart($productId, $quantity) {
    global $conn; // Database connection
    
    // Check if product is already in cart
    if (isset($_SESSION['cart'][$productId])) {
        // Increment quantity
        $_SESSION['cart'][$productId] += $quantity;
    } else {
        // Add new item to cart
        $_SESSION['cart'][$productId] = $quantity;
    }
    
    // Get product details from database
    $stmt = $conn->prepare("SELECT name, price FROM products WHERE id = ?");
    $stmt->bind_param("i", $productId);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows > 0) {
        $product = $result->fetch_assoc();
        $_SESSION['cart'][$productId]['name'] = $product['name'];
        $_SESSION['cart'][$productId]['price'] = $product['price'];
    }
}

// Function to remove item from cart
function removeFromCart($productId) {
    if (isset($_SESSION['cart'][$productId])) {
        unset($_SESSION['cart'][$productId]);
        // Re-index the array after unsetting an element
        $_SESSION['cart'] = array_values($_SESSION['cart']);
    }
}

// Function to update item quantity in cart
function updateQuantity($productId, $newQuantity) {
    if (isset($_SESSION['cart'][$productId]) && $newQuantity > 0) {
        $_SESSION['cart'][$productId] = $newQuantity;
    }
}

// Function to display cart contents
function displayCart() {
    echo "<h2>Shopping Cart</h2>";
    echo "<table border='1'>";
    echo "<tr><th>Product Name</th><th>Price</th><th>Quantity</th><th>Action</th></tr>";
    
    foreach ($_SESSION['cart'] as $item) {
        // Assuming each item in cart has 'id', 'name', 'price', and quantity
        echo "<tr>";
        echo "<td>" . $item['name'] . "</td>";
        echo "<td>₹" . number_format($item['price'], 2) . "</td>";
        echo "<td><input type='number' value='" . $item['quantity'] . "' name='quantity'></td>";
        echo "<td><a href='remove_item.php?id=" . $item['id'] . "'>Remove</a></td>";
        echo "</tr>";
    }
    
    echo "</table>";
}

// Function to clear cart
function emptyCart() {
    $_SESSION['cart'] = array();
}

// Example usage:
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    if (isset($_POST['add_to_cart'])) {
        addToCart($_POST['product_id'], $_POST['quantity']);
    } elseif (isset($_POST['update_quantity'])) {
        updateQuantity($_POST['product_id'], $_POST['new_quantity']);
    }
}

if (isset($_GET['remove'])) {
    removeFromCart($_GET['id']);
}

if (isset($_GET['empty'])) {
    emptyCart();
}
?>


<?php
// Initialize the session
session_start();

// Check if cart session exists, if not create it
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function addToCart($productId, $quantity) {
    global $productData; // Assuming this holds your product information

    // Get the current cart from session
    $cart = $_SESSION['cart'];

    // Check if product already exists in cart
    if (isset($cart[$productId])) {
        // If exists, increment quantity
        $cart[$productId]['quantity'] += $quantity;
    } else {
        // If not exists, add new product to cart
        $cart[$productId] = array(
            'product_id' => $productId,
            'name' => $productData[$productId]['name'],
            'price' => $productData[$productId]['price'],
            'quantity' => $quantity
        );
    }

    // Update the cart in session
    $_SESSION['cart'] = $cart;
}

// Function to update item quantity
function updateCart($productId, $quantity) {
    if (isset($_SESSION['cart'][$productId])) {
        $_SESSION['cart'][$productId]['quantity'] = $quantity;
    } else {
        // Handle error: product not found in cart
        return false;
    }
}

// Function to remove item from cart
function removeFromCart($productId) {
    if (isset($_SESSION['cart'][$productId])) {
        unset($_SESSION['cart'][$productId]);
        $_SESSION['cart'] = array_values($_SESSION['cart']); // Re-index the array
    } else {
        // Handle error: product not found in cart
        return false;
    }
}

// Function to calculate total price
function cartTotal() {
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += ($item['price'] * $item['quantity']);
    }
    return $total;
}

// Function to display the cart
function displayCart() {
    if (empty($_SESSION['cart'])) {
        echo "<p>Your cart is empty.</p>";
        return;
    }

    echo "<table border='1'>";
    echo "<tr><th>Product</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>";
    
    foreach ($_SESSION['cart'] as $item) {
        echo "<tr>";
        echo "<td>" . $item['name'] . "</td>";
        echo "<td>$" . number_format($item['price'], 2) . "</td>";
        echo "<td><input type='number' name='quantity[" . $item['product_id'] . "]' value='" . $item['quantity'] . "'></td>";
        echo "<td>$" . number_format(($item['price'] * $item['quantity']), 2) . "</td>";
        echo "<td><a href='?remove=" . $item['product_id'] . "'>Remove</a> | <button onclick=\"updateQuantity('" . $item['product_id'] . "')\">Update</button></td>";
        echo "</tr>";
    }
    
    echo "</table>";
}

// Example usage:
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    if (isset($_POST['add_to_cart'])) {
        addToCart(1, 2); // Add product with ID 1 and quantity 2
    } elseif (isset($_POST['update_cart'])) {
        foreach ($_POST['quantity'] as $productId => $qty) {
            updateCart($productId, $qty);
        }
    }
}

// Remove item from cart if remove parameter is set
if (isset($_GET['remove'])) {
    removeFromCart($_GET['remove']);
}

// Display the cart contents
displayCart();

// Destroy the session when done
// session_unset();
// session_destroy();
?>


<?php
session_start();
?>


// Initialize cart if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}


function addToCart($productId, $name, $price) {
    // Check if product is already in the cart
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['product_id'] == $productId) {
            $item['quantity']++;
            $item['total'] = $item['price'] * $item['quantity'];
            return;
        }
    }

    // Add new product to cart
    $_SESSION['cart'][] = array(
        'product_id' => $productId,
        'name' => $name,
        'price' => $price,
        'quantity' => 1,
        'total' => $price
    );
}


function updateQuantity($productId, $newQuantity) {
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['product_id'] == $productId) {
            $item['quantity'] = $newQuantity;
            $item['total'] = $item['price'] * $item['quantity'];
            return;
        }
    }
}


function removeFromCart($productId) {
    foreach ($_SESSION['cart'] as $key => &$item) {
        if ($item['product_id'] == $productId) {
            unset($_SESSION['cart'][$key]);
            break;
        }
    }
    // Re-index the array keys
    $_SESSION['cart'] = array_values($_SESSION['cart']);
}


function getCartTotal() {
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += $item['total'];
    }
    return $total;
}


function displayCart() {
    if (empty($_SESSION['cart'])) {
        echo "Your cart is empty!";
        return;
    }

    foreach ($_SESSION['cart'] as $item) {
        echo "<div>";
        echo "<p>Product ID: " . $item['product_id'] . "</p>";
        echo "<p>Name: " . $item['name'] . "</p>";
        echo "<p>Price: $" . number_format($item['price'], 2) . "</p>";
        echo "<p>Quantity: " . $item['quantity'] . "</p>";
        echo "<p>Total: $" . number_format($item['total'], 2) . "</p>";
        echo "</div>";
    }
}


function clearCart() {
    unset($_SESSION['cart']);
    // Initialize empty cart again
    $_SESSION['cart'] = array();
}


addToCart(1, "Laptop", 999.99);


updateQuantity(1, 2);


removeFromCart(1);


displayCart();


clearCart();


<?php
// Start the session
session_start();

// Check if cart exists in session, if not initialize it
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function addToCart($productId, $productName, $productPrice) {
    global $mysqli;
    
    // Check if product is already in cart
    $found = false;
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['product_id'] == $productId) {
            $found = true;
            break;
        }
    }

    if (!$found) {
        // Add new item to cart
        $_SESSION['cart'][] = array(
            'product_id' => $productId,
            'product_name' => $productName,
            'price' => $productPrice,
            'quantity' => 1
        );
    } else {
        // Update quantity if product already exists in cart
        foreach ($_SESSION['cart'] as &$item) {
            if ($item['product_id'] == $productId) {
                $item['quantity']++;
                break;
            }
        }
    }
}

// Function to update item quantity in cart
function updateQuantity($productId, $quantity) {
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['product_id'] == $productId) {
            $item['quantity'] = $quantity;
            break;
        }
    }
}

// Function to remove item from cart
function removeFromCart($productId) {
    foreach ($_SESSION['cart'] as $key => $item) {
        if ($item['product_id'] == $productId) {
            unset($_SESSION['cart'][$key]);
            $_SESSION['cart'] = array_values($_SESSION['cart']); // Re-index the array
            break;
        }
    }
}

// Function to calculate total price
function cartTotal() {
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += ($item['price'] * $item['quantity']);
    }
    return $total;
}

// Display cart contents
echo "<h2>Shopping Cart</h2>";
if (empty($_SESSION['cart'])) {
    echo "Your cart is empty.";
} else {
    echo "<table border='1'>";
    echo "<tr><th>Product</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>";
    foreach ($_SESSION['cart'] as $item) {
        echo "<tr>";
        echo "<td>" . $item['product_name'] . "</td>";
        echo "<td>$" . number_format($item['price'], 2) . "</td>";
        echo "<td><form method='post'><input type='number' name='quantity' value='" . $item['quantity'] . "' min='1'></td>";
        echo "<td>$" . number_format(($item['price'] * $item['quantity']), 2) . "</td>";
        echo "<td><button type='submit'>Update</button> | <a href='cart.php?action=remove&id=" . $item['product_id'] . "'>Remove</a></td>";
        echo "</tr>";
    }
    echo "</table>";
    
    // Display total price
    echo "<h3>Total: $" . number_format(cartTotal(), 2) . "</h3>";
}

// Handle form submissions
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    if (isset($_POST['quantity'])) {
        $productId = $_GET['id'];
        updateQuantity($productId, $_POST['quantity']);
    }
}

// Handle remove action
if (isset($_GET['action']) && $_GET['action'] == 'remove') {
    $productId = $_GET['id'];
    removeFromCart($productId);
}
?>


<?php
session_start();

// Initialize cart if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function addToCart($productId, $quantity) {
    global $db; // Assuming you have a database connection

    // Check if product is already in the cart
    if (isset($_SESSION['cart'][$productId])) {
        // Increment quantity
        $_SESSION['cart'][$productId] += $quantity;
    } else {
        // Add new item to cart
        $_SESSION['cart'][$productId] = $quantity;

        // Get product details from database
        $query = "SELECT name, price FROM products WHERE id = ?";
        $stmt = $db->prepare($query);
        $stmt->execute([$productId]);
        $product = $stmt->fetch();

        // Store product details in session
        $_SESSION['cart_details'][$productId] = array(
            'name' => $product['name'],
            'price' => $product['price']
        );
    }
}

// Function to remove item from cart
function removeFromCart($productId) {
    if (isset($_SESSION['cart'][$productId])) {
        unset($_SESSION['cart'][$productId]);
        unset($_SESSION['cart_details'][$productId]);
    }
}

// Function to clear the entire cart
function clearCart() {
    $_SESSION['cart'] = array();
    $_SESSION['cart_details'] = array();
}

// Add item to cart if form is submitted
if (isset($_POST['add_to_cart'])) {
    $productId = intval($_POST['product_id']);
    $quantity = intval($_POST['quantity']);

    if ($productId > 0 && $quantity > 0) {
        addToCart($productId, $quantity);
    }
}

// Remove item from cart if remove button is clicked
if (isset($_GET['remove'])) {
    $productId = intval($_GET['remove']);
    removeFromCart($productId);
}

// Clear the entire cart if clear button is clicked
if (isset($_POST['clear_cart'])) {
    clearCart();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
    <style>
        /* Add some basic styling */
        body { font-family: Arial, sans-serif; }
        .cart-item { border-bottom: 1px solid #ccc; padding: 10px; }
        .total-price { font-size: 24px; font-weight: bold; }
    </style>
</head>
<body>
    <h1>Your Shopping Cart</h1>

    <?php if (!empty($_SESSION['cart'])) : ?>
        <?php foreach ($_SESSION['cart'] as $productId => $quantity) : 
            $product = $_SESSION['cart_details'][$productId]; ?>

            <div class="cart-item">
                <p><?php echo htmlspecialchars($product['name']); ?></p>
                <p>Quantity: <?php echo $quantity; ?></p>
                <p>Price: <?php echo "$" . number_format($product['price'], 2); ?></p>
                <a href="?remove=<?php echo $productId; ?>">Remove</a>
            </div>

        <?php endforeach; ?>

        <div class="total-price">
            Total Price: <?php echo calculateTotalPrice(); ?>
        </div>

        <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
            <input type="submit" name="clear_cart" value="Clear Cart">
        </form>

    <?php else : ?>

        <p>Your cart is empty!</p>
        <a href="products.php">Continue Shopping</a>

    <?php endif; ?>

    <!-- Add item form -->
    <h2>Add Item to Cart</h2>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <input type="hidden" name="add_to_cart" value="1">
        <p>Product ID: <input type="text" name="product_id"></p>
        <p>Quantity: <input type="number" name="quantity" min="1"></p>
        <input type="submit" value="Add to Cart">
    </form>

</body>
</html>


<?php
// Start the session
session_start();

// Function to initialize the cart
function initialize_cart() {
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
        $_SESSION['cart']['items'] = array();
        $_SESSION['cart']['total_price'] = 0;
    }
}

// Add an item to the cart
function add_to_cart($product_id, $name, $price) {
    initialize_cart();

    if (!isset($_SESSION['cart']['items'][$product_id])) {
        // Item doesn't exist in the cart. Add it.
        $_SESSION['cart']['items'][$product_id] = array(
            'id' => $product_id,
            'name' => $name,
            'price' => $price,
            'quantity' => 1
        );
    } else {
        // Item already exists in the cart. Increase quantity.
        $_SESSION['cart']['items'][$product_id]['quantity']++;
    }

    // Update total price
    $_SESSION['cart']['total_price'] += $price;
}

// Add multiple quantities of an item to the cart
function add_multiple_to_cart($product_id, $name, $price, $quantity) {
    initialize_cart();

    if (!isset($_SESSION['cart']['items'][$product_id])) {
        // Item doesn't exist in the cart. Add it with specified quantity.
        $_SESSION['cart']['items'][$product_id] = array(
            'id' => $product_id,
            'name' => $name,
            'price' => $price,
            'quantity' => $quantity
        );
    } else {
        // Item already exists in the cart. Increase quantity.
        $_SESSION['cart']['items'][$product_id]['quantity'] += $quantity;
    }

    // Update total price
    $_SESSION['cart']['total_price'] += ($price * $quantity);
}

// Remove an item from the cart
function remove_from_cart($product_id) {
    initialize_cart();

    if (isset($_SESSION['cart']['items'][$product_id])) {
        // Get item details
        $item = $_SESSION['cart']['items'][$product_id];
        
        // Decrease total price
        $_SESSION['cart']['total_price'] -= ($item['price'] * $item['quantity']);
        
        // Remove the item from the cart
        unset($_SESSION['cart']['items'][$product_id]);
    }
}

// Remove a single quantity of an item from the cart
function remove_one_from_cart($product_id) {
    initialize_cart();

    if (isset($_SESSION['cart']['items'][$product_id])) {
        $item = $_SESSION['cart']['items'][$product_id];
        
        // Decrease total price
        $_SESSION['cart']['total_price'] -= $item['price'];
        
        // Decrease quantity by one, or remove the item if quantity is 1
        if ($item['quantity'] > 1) {
            $_SESSION['cart']['items'][$product_id]['quantity']--;
        } else {
            unset($_SESSION['cart']['items'][$product_id]);
        }
    }
}

// Calculate total price of items in cart
function calculate_total() {
    initialize_cart();
    return $_SESSION['cart']['total_price'];
}

// Display the contents of the cart
function display_cart() {
    initialize_cart();
    
    echo "<h2>Shopping Cart</h2>";
    echo "<table border='1'>";
    echo "<tr><th>Product Name</th><th>Price</th><th>Quantity</th><th>Action</th></tr>";
    
    foreach ($_SESSION['cart']['items'] as $item) {
        echo "<tr>";
        echo "<td>" . $item['name'] . "</td>";
        echo "<td>$" . number_format($item['price'], 2) . "</td>";
        echo "<td>" . $item['quantity'] . "</td>";
        echo "<td><a href='remove.php?id=" . $item['id'] . "'>Remove</a></td>";
        echo "</tr>";
    }
    
    echo "</table>";
    echo "<h3>Total: $" . number_format(calculate_total(), 2) . "</h3>";
}

// Example usage:
// Add items to the cart
add_to_cart(1, 'Product 1', 19.99);
add_multiple_to_cart(2, 'Product 2', 29.99, 2);

// Display the cart contents
display_cart();

// Remove an item from the cart
remove_from_cart(1);

// Or remove one quantity of an item
remove_one_from_cart(2);
?>


<?php
// Start the session
if (session_status() == PHP_SESSION_NONE) {
    session_start();
}

// Initialize the cart if not already set
if (!isset($_SESSION['user_cart'])) {
    $cart = array(
        // Sample initial items in the cart
        // Each item has product_id, name, price, and quantity
        0 => array(
            'product_id' => 1,
            'name' => 'Product A',
            'price' => 29.99,
            'quantity' => 2
        ),
        1 => array(
            'product_id' => 2,
            'name' => 'Product B',
            'price' => 49.99,
            'quantity' => 1
        )
    );
    $_SESSION['user_cart'] = $cart;
}

// Function to add items to the cart
function add_to_cart($product_id, $name, $price) {
    global $cart;
    
    // Check if product is already in the cart
    foreach ($cart as &$item) {
        if ($item['product_id'] == $product_id) {
            $item['quantity']++;
            return;
        }
    }
    
    // Add new item to the cart
    $new_item = array(
        'product_id' => $product_id,
        'name' => $name,
        'price' => $price,
        'quantity' => 1
    );
    array_push($cart, $new_item);
    $_SESSION['user_cart'] = $cart;
}

// Function to remove items from the cart
function remove_from_cart($product_id) {
    global $cart;
    
    // Find and remove item with matching product_id
    foreach ($cart as $key => &$item) {
        if ($item['product_id'] == $product_id) {
            unset($cart[$key]);
            break;
        }
    }
    
    // Re-index the array keys
    $cart = array_values($cart);
    $_SESSION['user_cart'] = $cart;
}

// Function to update item quantity in the cart
function update_quantity($product_id, $new_quantity) {
    global $cart;
    
    foreach ($cart as &$item) {
        if ($item['product_id'] == $product_id) {
            $item['quantity'] = $new_quantity;
            $_SESSION['user_cart'] = $cart;
            return;
        }
    }
}

// Function to display the cart
function display_cart() {
    global $cart;
    
    echo "<table border='1'>";
    echo "<tr><th>Product Name</th><th>Price</th><th>Quantity</th><th>Action</th></tr>";
    
    foreach ($cart as $item) {
        echo "<tr>";
        echo "<td>" . $item['name'] . "</td>";
        echo "<td>$" . number_format($item['price'], 2) . "</td>";
        echo "<td><input type='number' value='" . $item['quantity'] . "' 
                onchange='updateQuantity(" . $item['product_id'] . ", this.value)'></td>";
        echo "<td><button onclick='removeItem(" . $item['product_id'] . ")'>Remove</button></td>";
        echo "</tr>";
    }
    
    echo "</table>";
}

// Example usage:
echo "<h2>Shopping Cart:</h2>";
display_cart();

// Add an item to the cart
add_to_cart(3, 'Product C', 19.99);

// Remove an item from the cart
remove_from_cart(2);

// Update quantity of an item
update_quantity(1, 3);

// Display the updated cart
echo "<h2>Updated Cart:</h2>";
display_cart();

// Clear the cart (optional)
$_SESSION['user_cart'] = array();
?>

<script>
function removeItem(product_id) {
    // Make an AJAX call to remove the item from the server-side session
    var xhr = new XMLHttpRequest();
    xhr.open('POST', 'remove_item.php', true);
    xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
    xhr.send('product_id=' + product_id);
}

function updateQuantity(product_id, quantity) {
    // Make an AJAX call to update the quantity in the server-side session
    var xhr = new XMLHttpRequest();
    xhr.open('POST', 'update_quantity.php', true);
    xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
    xhr.send('product_id=' + product_id + '&quantity=' + quantity);
}
</script>


<?php
session_start();

// Initialize cart if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Handle adding item to cart
if (isset($_POST['add_to_cart'])) {
    $item_id = $_POST['item_id'];
    $item_name = $_POST['item_name'];
    
    // Check if item already exists in cart
    if (isset($_SESSION['cart'][$item_id])) {
        echo "<script>alert('Item already added to cart');</script>";
    } else {
        $_SESSION['cart'][$item_id] = array(
            'name' => $item_name,
            'quantity' => 1
        );
    }
}

// Handle removing item from cart
if (isset($_POST['remove_item'])) {
    $item_id = $_POST['item_id'];
    if (isset($_SESSION['cart'][$item_id])) {
        unset($_SESSION['cart'][$item_id]);
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
    <style>
        .cart-item { margin-bottom: 10px; padding: 5px; border: 1px solid #ddd; }
        form { margin-bottom: 20px; }
    </style>
</head>
<body>
    <!-- Add item to cart form -->
    <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
        <input type="hidden" name="item_id" value="1">
        <input type="hidden" name="item_name" value="Product 1">
        <button type="submit" name="add_to_cart">Add to Cart</button>
    </form>

    <!-- Display cart -->
    <?php if (!empty($_SESSION['cart'])) : ?>
        <h2>Your Cart:</h2>
        <?php foreach ($_SESSION['cart'] as $item_id => $item) : ?>
            <div class="cart-item">
                <?php echo $item['name']; ?> (Quantity: <?php echo $item['quantity']; ?>)
                
                <!-- Remove item form -->
                <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
                    <input type="hidden" name="item_id" value="<?php echo $item_id; ?>">
                    <button type="submit" name="remove_item">Remove</button>
                </form>
            </div>
        <?php endforeach; ?>
    <?php else : ?>
        <p>Your cart is empty.</p>
    <?php endif; ?>
</body>
</html>


<?php
// Start the session
session_start();

// Check if the cart is already set in the session, if not initialize it
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function add_to_cart($item_id, $item_name, $price, $quantity) {
    global $$_SESSION;
    
    // Check if the item already exists in the cart
    if (isset($_SESSION['cart'][$item_id])) {
        // Update quantity
        $_SESSION['cart'][$item_id]['quantity'] += $quantity;
    } else {
        // Add new item to cart
        $_SESSION['cart'][$item_id] = array(
            'item_id' => $item_id,
            'item_name' => $item_name,
            'price' => $price,
            'quantity' => $quantity
        );
    }
}

// Function to display cart contents
function show_cart() {
    global $$_SESSION;
    
    if (empty($_SESSION['cart'])) {
        echo "<p>Your cart is empty.</p>";
    } else {
        echo "<table border='1'>";
        echo "<tr><th>Item Name</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>";
        
        foreach ($_SESSION['cart'] as $item_id => $item) {
            echo "<tr>";
            echo "<td>" . $item['item_name'] . "</td>";
            echo "<td>$" . number_format($item['price'], 2) . "</td>";
            echo "<td>" . $item['quantity'] . "</td>";
            echo "<td>$" . number_format($item['price'] * $item['quantity'], 2) . "</td>";
            echo "<td><a href='cart.php?remove=" . $item_id . "'>Remove</a></td>";
            echo "</tr>";
        }
        
        echo "</table>";
    }
}

// Function to remove item from cart
function remove_from_cart($item_id) {
    global $$_SESSION;
    
    if (isset($_SESSION['cart'][$item_id])) {
        unset($_SESSION['cart'][$item_id]);
    }
}

// Example usage:
// Add an item to the cart
add_to_cart(1, "Product A", 29.99, 2);

// Display the cart contents
show_cart();

// Remove an item from the cart (when a remove link is clicked)
if (isset($_GET['remove'])) {
    remove_from_cart($_GET['remove']);
}
?>


<?php
// Initialize session
session_start();

// Check if cart exists in the session; initialize if not
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add an item to the cart
function add_to_cart($product_id, $name, $price) {
    global $session;
    $found = false;
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['product_id'] == $product_id) {
            $item['quantity'] += 1;
            $found = true;
            break;
        }
    }
    if (!$found) {
        $_SESSION['cart'][] = array(
            'product_id' => $product_id,
            'name' => $name,
            'price' => $price,
            'quantity' => 1
        );
    }
}

// Function to update the quantity of an item in the cart
function update_quantity($product_id, $quantity) {
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['product_id'] == $product_id) {
            $item['quantity'] = $quantity;
            break;
        }
    }
}

// Function to remove an item from the cart
function remove_from_cart($product_id) {
    foreach ($_SESSION['cart'] as $key => $item) {
        if ($item['product_id'] == $product_id) {
            unset($_SESSION['cart'][$key]);
            break;
        }
    }
}

// Function to get all items in the cart
function get_cart_items() {
    return $_SESSION['cart'];
}

// Function to get total number of items in the cart
function get_total_items() {
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += $item['quantity'];
    }
    return $total;
}

// Function to calculate the total price of all items in the cart
function cart_total() {
    $total_price = 0.0;
    foreach ($_SESSION['cart'] as $item) {
        $total_price += ($item['price'] * $item['quantity']);
    }
    return $total_price;
}

// Example usage:
// add_to_cart(1, 'Product 1', 29.99);
// update_quantity(1, 3);
// remove_from_cart(1);

?>


<?php
// Start the session
session_start();

// Check if cart session exists, if not initialize it
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add item to cart
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $product_name = $_POST['product_name'];
    $price = $_POST['price'];
    
    // Create an array for the product
    $item = array(
        'name' => $product_name,
        'price' => $price
    );
    
    // Add the item to the cart session
    array_push($_SESSION['cart'], $item);
}

// Display cart contents
echo "<h2>Your Cart</h2>";
echo "<ul>";
foreach ($_SESSION['cart'] as $index => $item) {
    echo "<li>" . $item['name'] . " - $" . $item['price'];
    // Add a remove button for each item
    echo "<form method='get' action=''>";
    echo "<input type='hidden' name='remove_index' value='" . $index . "'>";
    echo "<button type='submit'>Remove</button>";
    echo "</form></li>";
}
echo "</ul>";

// Remove item from cart if requested
if (isset($_GET['remove_index'])) {
    $remove_index = $_GET['remove_index'];
    // Find the index of the item in the cart array
    $item_index = array_search($remove_index, array_column($_SESSION['cart'], 'name'));
    if ($item_index !== false) {
        unset($_SESSION['cart'][$item_index]);
        // Re-index the array
        $_SESSION['cart'] = array_values($_SESSION['cart']);
    }
}

// Optional: Add a form to add items to the cart
echo "<h2>Add Item</h2>";
echo "<form method='post'>";
echo "Product Name: <input type='text' name='product_name'><br>";
echo "Price: <input type='number' step='0.01' name='price'><br>";
echo "<button type='submit'>Add to Cart</button>";
echo "</form>";

// Optional: Add a logout button
echo "<h2>Logout</h2>";
echo "<form method='post'>";
echo "<button type='submit' name='logout'>Logout</button>";
echo "</form>";

if (isset($_POST['logout'])) {
    // Destroy the session and redirect to login page
    session_unset();
    session_destroy();
    header("Location: login.php");
}
?>


<?php
session_start();
?>


<?php
session_start();

// Check if add to cart button is clicked
if (isset($_POST['add_to_cart'])) {
    // Get product details from POST data
    $product_id = $_POST['product_id'];
    $quantity = $_POST['quantity'];

    // Initialize cart session variable if it doesn't exist
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }

    // Check if product is already in the cart
    $found = false;
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['product_id'] == $product_id) {
            $item['quantity'] += $quantity;
            $found = true;
            break;
        }
    }

    // If product is not in the cart, add it
    if (!$found) {
        $_SESSION['cart'][] = array(
            'product_id' => $product_id,
            'quantity' => $quantity
        );
    }

    // Redirect to view cart page
    header('Location: view_cart.php');
}
?>


<?php
session_start();

// Check if cart session exists
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Display cart contents
echo "<h2>Shopping Cart</h2>";
echo "<ul>";

foreach ($_SESSION['cart'] as $item) {
    echo "<li>";
    echo "Product ID: " . $item['product_id'];
    echo " Quantity: " . $item['quantity'];
    echo "</li>";
}

// Add a remove button for each item
foreach ($_SESSION['cart'] as $key => $item) {
    echo "<a href='remove_from_cart.php?remove=$key'>Remove Item</a>";
}

echo "</ul>";
?>


<?php
session_start();

// Check if remove parameter is set
if (isset($_GET['remove'])) {
    // Get the index of the item to remove
    $remove_index = $_GET['remove'];

    // Remove the item from the cart
    unset($_SESSION['cart'][$remove_index]);

    // Re-index the array
    $_SESSION['cart'] = array_values($_SESSION['cart']);

    // Redirect back to view cart page
    header('Location: view_cart.php');
}
?>


<?php
// Check if session is not active
if (session_status() == PHP_SESSION_NONE) {
    // Start the session
    session_start();
}
?>


<?php
// Check if cart exists in the session
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}
?>


<?php
// Function to add item to cart
function addToCart($productId, $name, $price, $quantity) {
    // Check if the product is already in the cart
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['product_id'] == $productId) {
            // If exists, increment quantity
            $item['quantity'] += $quantity;
            return;
        }
    }
    
    // If not exists, add new item to cart
    $_SESSION['cart'][] = array(
        'product_id' => $productId,
        'name'       => $name,
        'price'      => $price,
        'quantity'   => $quantity
    );
}
?>


<?php
// Function to update item quantity in cart
function updateCartQuantity($productId, $newQuantity) {
    // Check if the product exists in the cart
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['product_id'] == $productId) {
            // Update quantity
            $item['quantity'] = $newQuantity;
            return;
        }
    }
}
?>


<?php
// Function to remove item from cart
function removeFromCart($productId) {
    // Initialize index to -1
    $index = -1;
    
    // Loop through cart items
    foreach ($_SESSION['cart'] as $key => $item) {
        if ($item['product_id'] == $productId) {
            // Set index for removal
            $index = $key;
            break;
        }
    }
    
    // If item found, remove it from the cart
    if ($index != -1) {
        unset($_SESSION['cart'][$index]);
        // Re-index the array to maintain proper keys
        $_SESSION['cart'] = array_values($_SESSION['cart']);
    }
}
?>


<?php
// Function to calculate total price of cart items
function calculateTotal() {
    $total = 0;
    
    foreach ($_SESSION['cart'] as $item) {
        $total += ($item['price'] * $item['quantity']);
    }
    
    return $total;
}
?>


<?php
// Display cart contents
echo "<h2>Your Shopping Cart</h2>";
echo "<table>";
echo "<tr><th>Product Name</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>";

foreach ($_SESSION['cart'] as $item) {
    echo "<tr>";
    echo "<td>" . $item['name'] . "</td>";
    echo "<td>$" . number_format($item['price'], 2) . "</td>";
    echo "<td><input type='number' value='" . $item['quantity'] . "' onchange='updateQuantity(" . $item['product_id'] . ", this.value)'></td>";
    echo "<td>$" . number_format(($item['price'] * $item['quantity']), 2) . "</td>";
    echo "<td><button onclick='removeItem(" . $item['product_id'] . ")'>Remove</button></td>";
    echo "</tr>";
}

echo "</table>";
echo "<h3>Total: $" . number_format(calculateTotal(), 2) . "</h3>";
?>


<?php
// Clear all items from cart
$_SESSION['cart'] = array();
?>


<?php
session_start();

if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Sample product data (you would typically fetch this from a database)
$products = array(
    1 => array('name' => 'Product 1', 'price' => 29.99),
    2 => array('name' => 'Product 2', 'price' => 49.99),
    3 => array('name' => 'Product 3', 'price' => 19.99)
);

// Add items to cart
if (isset($_GET['action']) && $_GET['action'] == 'add') {
    $productId = intval($_GET['id']);
    if (isset($products[$productId])) {
        addToCart($productId, $products[$productId]['name'], $products[$productId]['price'], 1);
    }
}

// Update item quantity
if (isset($_POST['action']) && $_POST['action'] == 'update') {
    foreach ($_POST as $key => $value) {
        if (strpos($key, 'quantity_') === 0) {
            $productId = intval(str_replace('quantity_', '', $key));
            updateCartQuantity($productId, $value);
        }
    }
}

// Remove item from cart
if (isset($_GET['action']) && $_GET['action'] == 'remove') {
    $productId = intval($_GET['id']);
    removeFromCart($productId);
}

// Clear cart
if (isset($_GET['action']) && $_GET['action'] == 'clear')) {
    $_SESSION['cart'] = array();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <?php if (!empty($products)): ?>
        <h1>Available Products</h1>
        <ul>
            <?php foreach ($products as $id => $product): ?>
                <li>
                    <?php echo $product['name']; ?> - $<?php echo number_format($product['price'], 2); ?>
                    <a href="?action=add&id=<?php echo $id; ?>">Add to Cart</a>
                </li>
            <?php endforeach; ?>
        </ul>
    <?php endif; ?>

    <?php if (!empty($_SESSION['cart'])): ?>
        <h1>Your Shopping Cart</h1>
        <form method="post" action="?action=update">
            <table border="1">
                <tr>
                    <th>Product Name</th>
                    <th>Price</th>
                    <th>Quantity</th>
                    <th>Total</th>
                    <th>Action</th>
                </tr>
                <?php foreach ($_SESSION['cart'] as $item): ?>
                    <tr>
                        <td><?php echo $item['name']; ?></td>
                        <td>$<?php echo number_format($item['price'], 2); ?></td>
                        <td><input type="number" name="quantity_<?php echo $item['product_id']; ?>" value="<?php echo $item['quantity']; ?>"></td>
                        <td>$<?php echo number_format(($item['price'] * $item['quantity']), 2); ?></td>
                        <td><a href="?action=remove&id=<?php echo $item['product_id']; ?>">Remove</a></td>
                    </tr>
                <?php endforeach; ?>
            </table>
            <input type="submit" value="Update Cart">
        </form>

        <p>Total: $<?php echo number_format(calculateTotal(), 2); ?></p>
        <a href="?action=clear">Clear Cart</a>
    <?php else: ?>
        <p>Your cart is empty.</p>
    <?php endif; ?>

    <script>
        function updateQuantity(productId, quantity) {
            // You can implement an AJAX call here to update the quantity without refreshing the page
            window.location.href = '?action=update&quantity_' + productId + '=' + quantity;
        }

        function removeItem(productId) {
            if (confirm('Are you sure you want to remove this item?')) {
                window.location.href = '?action=remove&id=' + productId;
            }
        }
    </script>
</body>
</html>


<?php
session_start();
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}
?>


<?php
session_start();

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Database connection
    $host = 'localhost';
    $user = 'root';
    $password = '';
    $database = 'shopping_cart';

    $conn = mysqli_connect($host, $user, $password, $database);
    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
    }

    // Sanitize inputs
    $product_id = isset($_POST['product_id']) ? intval($_POST['product_id']) : 0;
    $quantity = isset($_POST['quantity']) ? intval($_POST['quantity']) : 1;

    if ($product_id > 0 && $quantity >= 1) {
        // Retrieve product details
        $stmt = mysqli_prepare($conn, "SELECT id, name AS product_name, price FROM products WHERE id=?");
        mysqli_stmt_bind_param($stmt, 'i', $product_id);
        mysqli_stmt_execute($stmt);
        $result = mysqli_stmt_get_result($stmt);

        if ($row = mysqli_fetch_assoc($result)) {
            // Check stock (if applicable)
            if ($row['stock'] >= $quantity) { // Assuming a stock column exists
                $cart_item = array(
                    'id' => $row['id'],
                    'name' => $row['product_name'],
                    'price' => $row['price'],
                    'quantity' => $quantity
                );

                // Add to cart
                if (isset($_SESSION['cart'])) {
                    $found = false;
                    foreach ($_SESSION['cart'] as &$item) {
                        if ($item['id'] == $product_id) {
                            $item['quantity'] += $quantity;
                            $found = true;
                            break;
                        }
                    }

                    if (!$found) {
                        array_push($_SESSION['cart'], $cart_item);
                    }
                }
            } else {
                $_SESSION['error'] = "Product is out of stock.";
            }
        } else {
            $_SESSION['error'] = "Invalid product ID.";
        }
    } else {
        $_SESSION['error'] = "Please enter a valid quantity.";
    }

    mysqli_close($conn);
}

// Redirect back to the cart view
header("Location: view_cart.php");
exit();
?>


<?php
session_start();

$total = 0;
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
    <style>
        .cart-item { padding: 10px; margin: 5px; border: 1px solid #ddd; }
        .remove-btn { color: red; cursor: pointer; }
    </style>
</head>
<body>
<?php
if (!empty($_SESSION['cart'])) {
    echo "<h2>Your Cart:</h2>";
    foreach ($_SESSION['cart'] as $item) {
        $total += ($item['price'] * $item['quantity']);
        echo "<div class='cart-item'>";
        echo "<p>" . $item['name'] . "</p>";
        echo "<p>Quantity: " . $item['quantity'] . "</p>";
        echo "<p>Price: $" . number_format($item['price'], 2) . "</p>";
        echo "<a href='remove_item.php?id=" . $item['id'] . "' class='remove-btn' onclick=\"return confirm('Are you sure?')\">Remove</a>";
        echo "</div>";
    }
    echo "<h3>Total: $" . number_format($total, 2) . "</h3>";
} else {
    echo "<p>Your cart is empty.</p>";
}
?>

<a href="index.php">Continue Shopping</a>

<?php
if (isset($_SESSION['error'])) {
    echo "<div style='color:red; margin-top:10px;'>" . $_SESSION['error'] . "</div>";
    unset($_SESSION['error']);
}
?>
</body>
</html>


<?php
session_start();

if ($_SERVER['REQUEST_METHOD'] == 'GET') {
    $product_id = isset($_GET['id']) ? intval($_GET['id']) : 0;

    if ($product_id > 0) {
        foreach ($_SESSION['cart'] as $key => $item) {
            if ($item['id'] == $product_id) {
                unset($_SESSION['cart'][$key]);
                break;
            }
        }
    }
}

// Re-index the cart array
$_SESSION['cart'] = array_values($_SESSION['cart']);

header("Location: view_cart.php");
exit();
?>


<?php
// Start the session
session_start();

// Function to add item to cart
function add_to_cart($product_id, $product_name, $price) {
    // Check if cart is already set in session
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }
    
    // Check if item is already in cart
    if (array_key_exists($product_id, $_SESSION['cart'])) {
        // Increment quantity
        $_SESSION['cart'][$product_id]['quantity']++;
    } else {
        // Add new item to cart
        $_SESSION['cart'][$product_id] = array(
            'product_id' => $product_id,
            'product_name' => $product_name,
            'price' => $price,
            'quantity' => 1
        );
    }
}

// Function to update quantity of an item in cart
function update_cart_item($product_id, $new_quantity) {
    if (isset($_SESSION['cart'][$product_id])) {
        $_SESSION['cart'][$product_id]['quantity'] = $new_quantity;
    }
}

// Function to remove item from cart
function remove_from_cart($product_id) {
    if (isset($_SESSION['cart'][$product_id])) {
        unset($_SESSION['cart'][$product_id]);
        // Re-index the array keys
        $_SESSION['cart'] = array_values($_SESSION['cart']);
    }
}

// Function to display cart contents
function display_cart() {
    $output = '';
    
    if (isset($_SESSION['cart']) && count($_SESSION['cart']) > 0) {
        $output .= "<h2>Your Shopping Cart</h2>";
        $output .= "<table border='1'>";
        $output .= "<tr><th>Product Name</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>";
        
        foreach ($_SESSION['cart'] as $item) {
            $total_price = $item['price'] * $item['quantity'];
            $output .= "<tr>";
            $output .= "<td>{$item['product_name']}</td>";
            $output .= "<td>$$item[price]</td>";
            $output .= "<td><input type='number' value='{$item['quantity']}' onchange=\"updateQuantity({$item['product_id']}, this.value)\"></td>";
            $output .= "<td>$$total_price</td>";
            $output .= "<td><a href='remove_from_cart.php?product_id={$item['product_id']}'>Remove</a></td>";
            $output .= "</tr>";
        }
        
        $output .= "</table>";
    } else {
        $output .= "Your cart is empty.";
    }
    
    return $output;
}

// Initialize cart if not set
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}
?>


add_to_cart(1, 'Product 1', 29.99);


update_cart_item(1, 2); // Update quantity to 2 for product ID 1


remove_from_cart(1); // Remove product ID 1 from cart


echo display_cart();


<?php
// Start the session
session_start();

// Check if session variable 'cart' exists; if not, initialize it
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add item to cart
if (isset($_GET['action']) && $_GET['action'] == 'add') {
    $id = isset($_GET['id']) ? intval($_GET['id']) : 0;
    $name = isset($_GET['name']) ? $_GET['name'] : '';
    $price = isset($_GET['price']) ? floatval($_GET['price']) : 0;

    // Check if item already exists in cart
    $itemExists = false;
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['id'] == $id) {
            $itemExists = true;
            break;
        }
    }

    if (!$itemExists) {
        // Add new item to cart
        $_SESSION['cart'][] = array(
            'id' => $id,
            'name' => $name,
            'price' => $price,
            'quantity' => 1
        );
    } else {
        // Increment quantity if item already exists
        foreach ($_SESSION['cart'] as &$item) {
            if ($item['id'] == $id) {
                $item['quantity']++;
                break;
            }
        }
    }
}

// Calculate total price
$total = 0;
foreach ($_SESSION['cart'] as $item) {
    $total += ($item['price'] * $item['quantity']);
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <h1>Your Shopping Cart</h1>

    <?php if (!empty($_SESSION['cart'])): ?>
        <table border="1">
            <tr>
                <th>Product Name</th>
                <th>Price</th>
                <th>Quantity</th>
                <th>Total</th>
                <th>Action</th>
            </tr>
            <?php foreach ($_SESSION['cart'] as $item): ?>
                <tr>
                    <td><?php echo $item['name']; ?></td>
                    <td><?php echo "$".$item['price']; ?></td>
                    <td><?php echo $item['quantity']; ?></td>
                    <td><?php echo "$".($item['price'] * $item['quantity']); ?></td>
                    <td><a href="remove_from_cart.php?id=<?php echo $item['id']; ?>">Remove</a></td>
                </tr>
            <?php endforeach; ?>
        </table>

        <h2>Total: <?php echo "$".$total; ?></h2>

    <?php else: ?>
        <p>Your cart is empty.</p>
    <?php endif; ?>

    <!-- Links to add items -->
    <h2>Add Items</h2>
    <a href="cart.php?action=add&id=1&name=Product%201&price=19.99">Add Product 1 ($19.99)</a><br>
    <a href="cart.php?action=add&id=2&name=Product%202&price=29.99">Add Product 2 ($29.99)</a><br>
    <a href="cart.php?action=add&id=3&name=Product%203&price=39.99">Add Product 3 ($39.99)</a>

    <!-- Logout link -->
    <h2><a href="logout.php">Logout</a></h2>
</body>
</html>


<?php
session_start();
?>


<?php
// Set session cookie parameters
ini_set('session.cookie_httponly', 1);
ini_set('session.use_strict_mode', 1);

// Start the session
session_start();

// Regenerate session ID to prevent session fixation attacks
if (isset($_SESSION['regenerate'])) {
    session_regenerate();
}
?>


<?php
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}
?>


<?php
function addToCart($productId, $productName, $productPrice) {
    // Check if product exists in the cart
    if (isset($_SESSION['cart'][$productId])) {
        $_SESSION['cart'][$productId]['quantity']++;
    } else {
        $_SESSION['cart'][$productId] = array(
            'name' => $productName,
            'price' => $productPrice,
            'quantity' => 1
        );
    }
}
?>


<?php
// Assuming these variables are set from a form or database
$productId = 1;
$productName = "Product Name";
$productPrice = 99.99;

addToCart($productId, $productName, $productPrice);
?>


<?php
echo "<h2>Your Shopping Cart</h2>";
echo "<table>";
echo "<tr><th>Product Name</th><th>Price</th><th>Quantity</th><th>Total</th></tr>";

foreach ($_SESSION['cart'] as $item) {
    $total = $item['price'] * $item['quantity'];
    echo "<tr>";
    echo "<td>" . $item['name'] . "</td>";
    echo "<td> $" . number_format($item['price'], 2) . "</td>";
    echo "<td><input type='number' value='" . $item['quantity'] . "'></td>";
    echo "<td>$" . number_format($total, 2) . "</td>";
    echo "</tr>";
}

echo "</table>";
?>


<?php
// This would be part of a form submission handling

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    foreach ($_SESSION['cart'] as $productId => $item) {
        if (isset($_POST[$productId])) {
            $_SESSION['cart'][$productId]['quantity'] = $_POST[$productId];
        }
    }
}
?>


<?php
function removeFromCart($productId) {
    if (isset($_SESSION['cart'][$productId])) {
        unset($_SESSION['cart'][$productId]);
    }
}
?>


<?php
session_start();
if (isset($_POST['remove'])) {
    $productId = $_POST['remove'];
    removeFromCart($productId);
}
header("Location: cart.php");
exit();
?>


<?php
$total = 0;
foreach ($_SESSION['cart'] as $item) {
    $total += $item['price'] * $item['quantity'];
}
echo "<h3>Grand Total: $" . number_format($total, 2) . "</h3>";
?>


<?php
function clearCart() {
    $_SESSION['cart'] = array();
}
?>

<a href="clear.php">Clear Cart</a>


<?php
session_start();
clearCart();
header("Location: cart.php");
exit();
?>


<?php
session_start();
unset($_SESSION['cart']);
session_unset();
session_destroy();
?>


<?php
session_start();

// Class to handle shopping cart functionality
class ShoppingCart {
    private $cart;

    public function __construct() {
        if (isset($_SESSION['cart'])) {
            $this->cart = $_SESSION['cart'];
        } else {
            $this->cart = array();
            $_SESSION['cart'] = $this->cart;
        }
    }

    // Add item to cart
    public function add_item($product_id, $name, $price, $quantity) {
        if ($quantity <= 0) {
            return false; // Invalid quantity
        }

        $item = array(
            'id' => $product_id,
            'name' => $name,
            'price' => $price,
            'quantity' => $quantity,
            'total' => $price * $quantity
        );

        // Check if item is already in cart
        foreach ($this->cart as $key => $item_in_cart) {
            if ($item_in_cart['id'] == $product_id) {
                // Update quantity and total
                $this->cart[$key]['quantity'] += $quantity;
                $this->cart[$key]['total'] = $this->cart[$key]['price'] * $this->cart[$key]['quantity'];
                break;
            }
        }

        if (!isset($item_in_cart) || $item_in_cart['id'] != $product_id) {
            array_push($this->cart, $item);
        }

        $_SESSION['cart'] = $this->cart;
        return true;
    }

    // Remove item from cart
    public function remove_item($product_id) {
        foreach ($this->cart as $key => $item_in_cart) {
            if ($item_in_cart['id'] == $product_id) {
                unset($this->cart[$key]);
                break;
            }
        }

        $_SESSION['cart'] = array_values($this->cart); // Reset indexes
        return true;
    }

    // Get all items in cart
    public function get_cart() {
        if (isset($_SESSION['cart'])) {
            return $_SESSION['cart'];
        } else {
            return array();
        }
    }

    // Calculate total price of cart
    public function calculate_total() {
        $total = 0;
        foreach ($this->cart as $item) {
            $total += $item['total'];
        }
        return $total;
    }
}

// Example usage:
$shoppingCart = new ShoppingCart();

// Add items to cart
$shoppingCart->add_item(1, 'Product 1', 29.99, 2);
$shoppingCart->add_item(2, 'Product 2', 49.99, 1);
$shoppingCart->add_item(3, 'Product 3', 19.99, 3);

// Remove item from cart
$shoppingCart->remove_item(2);

// Get all items in cart
$cartItems = $shoppingCart->get_cart();
print_r($cartItems); // Display cart contents

// Calculate and display total price
echo "Total Price: $" . number_format($shoppingCart->calculate_total(), 2);
?>


<?php
session_start();

if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Product details (example data)
$product_id = 1;
$product_name = "Example Product";
$product_price = 29.99;
$quantity = 2;

if ($product_id && $product_name && $product_price) {
    if (!isset($_SESSION['cart'][$product_id])) {
        $_SESSION['cart'][$product_id] = array(
            'id' => $product_id,
            'name' => $product_name,
            'price' => $product_price,
            'quantity' => 1
        );
    } else {
        // Update quantity
        $_SESSION['cart'][$product_id]['quantity'] += $quantity;
    }
}

// Display cart contents
echo "<h2>Your Cart</h2>";
$total = 0;

if (!empty($_SESSION['cart'])) {
    foreach ($_SESSION['cart'] as $item) {
        echo "Product: " . $item['name'] . "<br />";
        echo "Quantity: " . $item['quantity'] . "<br />";
        echo "Price: $" . number_format($item['price'], 2) . "<br /><br />";
        $total += ($item['price'] * $item['quantity']);
    }
    echo "Total Price: $" . number_format($total, 2);
} else {
    echo "Your cart is empty.";
}

// Remove item example
if (isset($_GET['remove_id'])) {
    if (!empty($_SESSION['cart'][$_GET['remove_id']])) {
        unset($_SESSION['cart'][$_GET['remove_id']]);
        // Re-index session array to maintain continuity
        $_SESSION['cart'] = array_values($_SESSION['cart']);
    }
}
?>


<?php
// Initialize session
session_start();

// Check if cart exists in session, if not initialize it
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add item to cart
$item_id = 1;
$item_name = "Product 1";
$item_price = 29.99;

if (!isset($_SESSION['cart'][$item_id])) {
    // Item not in cart, add it
    $_SESSION['cart'][$item_id] = array(
        'id' => $item_id,
        'name' => $item_name,
        'price' => $item_price,
        'quantity' => 1
    );
} else {
    // Item already exists in cart, increment quantity
    $_SESSION['cart'][$item_id]['quantity']++;
}

// Display cart contents
echo "<h2>Shopping Cart</h2>";
if (!empty($_SESSION['cart'])) {
    echo "<table>";
    foreach ($_SESSION['cart'] as $item) {
        echo "<tr>";
        echo "<td>" . $item['name'] . "</td>";
        echo "<td>" . $item['price'] . "</td>";
        echo "<td>" . $item['quantity'] . "</td>";
        echo "</tr>";
    }
    echo "</table>";
} else {
    echo "Your cart is empty.";
}

// Remove item from cart
if (isset($_GET['remove'])) {
    $item_id = $_GET['remove'];
    unset($_SESSION['cart'][$item_id]);
}

// Clear all items from cart
if (isset($_GET['clear'])) {
    session_unset();
    session_destroy();
}
?>


<?php
// Initialize the session
session_start();

// Check if the cart is already set in the session
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add an item to the cart
function addToCart($item_id, $item_name, $price) {
    global $connection; // Assuming you have a database connection

    // Check if the item exists in the database
    $query = "SELECT * FROM products WHERE id = $item_id";
    $result = mysqli_query($connection, $query);
    $product = mysqli_fetch_assoc($result);

    if ($product) {
        // Create an array for the item
        $item = array(
            'id' => $item_id,
            'name' => $item_name,
            'price' => $price,
            'quantity' => 1
        );

        // Add the item to the cart in the session
        $_SESSION['cart'][$item_id] = $item;
    } else {
        // Handle case where product does not exist
        echo "Product not found!";
    }
}

// Function to display the cart contents
function displayCart() {
    if (empty($_SESSION['cart'])) {
        echo "Your cart is empty!";
        return;
    }

    foreach ($_SESSION['cart'] as $item) {
        echo "<div>";
        echo "<h3>" . $item['name'] . "</h3>";
        echo "<p>Price: $" . number_format($item['price'], 2) . "</p>";
        echo "<p>Quantity: " . $item['quantity'] . "</p>";
        // Add a remove button
        echo '<form action="remove_from_cart.php" method="post">';
        echo '<input type="hidden" name="item_id" value="' . $item['id'] . '">';
        echo '<button type="submit">Remove</button>';
        echo '</form>';
        echo "</div>";
    }
}

// Function to remove an item from the cart
function removeFromCart($item_id) {
    if (isset($_SESSION['cart'][$item_id])) {
        unset($_SESSION['cart'][$item_id]);
    }
}

// Calculate total price of items in the cart
function calculateTotal() {
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += ($item['price'] * $item['quantity']);
    }
    return number_format($total, 2);
}

// Update quantity of an item in the cart
function updateQuantity($item_id, $new_quantity) {
    if (isset($_SESSION['cart'][$item_id])) {
        $_SESSION['cart'][$item_id]['quantity'] = $new_quantity;
    }
}
?>


<?php
session_start();
if (isset($_POST['add_to_cart'])) {
    $item_id = $_POST['item_id'];
    $item_name = $_POST['item_name'];
    $price = $_POST['price'];
    addToCart($item_id, $item_name, $price);
}
?>


<?php
session_start();
displayCart();
echo "<h3>Total: $" . calculateTotal() . "</h3>";
?>


<?php
session_start();
if (isset($_POST['item_id'])) {
    $item_id = $_POST['item_id'];
    removeFromCart($item_id);
}
header("Location: view_cart.php");
?>


<?php
session_start();
require_once 'db_config.php'; // Include your database configuration

// Function to add an item to the cart
function addToCart($productId) {
    global $conn;
    
    // Check if session is not set or empty
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }
    
    // Get product details from database
    $sql = "SELECT id, name, price FROM products WHERE id = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("i", $productId);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($row = $result->fetch_assoc()) {
        // Check if product is already in the cart
        foreach ($_SESSION['cart'] as &$item) {
            if ($item['id'] == $productId) {
                $item['quantity']++;
                $item['total_price'] = $item['price'] * $item['quantity'];
                return;
            }
        }
        
        // Add new product to cart
        array_push($_SESSION['cart'], array(
            'id' => $row['id'],
            'name' => $row['name'],
            'price' => $row['price'],
            'quantity' => 1,
            'total_price' => $row['price'] * 1
        ));
    } else {
        // Handle error: product not found
        return false;
    }
}

// Function to view cart items
function viewCart() {
    if (isset($_SESSION['cart']) && !empty($_SESSION['cart'])) {
        foreach ($_SESSION['cart'] as $item) {
            echo "ID: " . $item['id'] . "<br>";
            echo "Name: " . $item['name'] . "<br>";
            echo "Price: $" . number_format($item['price'], 2) . "<br>";
            echo "Quantity: " . $item['quantity'] . "<br>";
            echo "Total Price: $" . number_format($item['total_price'], 2) . "<hr>";
        }
    } else {
        echo "Your cart is empty!";
    }
}

// Function to clear the cart
function clearCart() {
    unset($_SESSION['cart']);
}

// Example usage:
// addToCart(1);
// viewCart();
// clearCart();

?>


<?php
session_start();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
    <style>
        .cart-item { margin: 10px; padding: 5px; border: 1px solid #ddd; }
    </style>
</head>
<body>
    <?php
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }

    $products = array(
        array('id' => 'prod001', 'name' => 'Product A', 'price' => 29.99, 'description' => 'Description for Product A'),
        array('id' => 'prod002', 'name' => 'Product B', 'price' => 49.99, 'description' => 'Description for Product B')
    );
    ?>

    <!-- Products Display -->
    <div>
        <?php foreach ($products as $product) { ?>
            <form action="add_to_cart.php" method="post">
                <input type="hidden" name="id" value="<?php echo $product['id']; ?>">
                <input type="hidden" name="name" value="<?php echo $product['name']; ?>">
                <input type="hidden" name="price" value="<?php echo $product['price']; ?>">
                <input type="hidden" name="description" value="<?php echo $product['description']; ?>">
                
                <div style="float: left; margin-right: 20px;">
                    <!-- Product Image -->
                    <img src="placeholder-image.jpg" alt="<?php echo $product['name']; ?>" width="150">
                    
                    <h3><?php echo $product['name']; ?></h3>
                    <p><?php echo $product['description']; ?></p>
                    <p>Price: <?php echo "$".$product['price']; ?></p>
                    <input type="submit" value="Add to Cart">
                </div>
            </form>
        <?php } ?>
    </div>

    <!-- Cart Display -->
    <h2>Your Cart</h2>
    <?php if (!empty($_SESSION['cart'])) { 
        $total = 0;
        foreach ($_SESSION['cart'] as $item) {
            echo "<div class='cart-item'>";
            echo "Item: {$item['name']}<br />";
            echo "Quantity: {$item['quantity']}<br />";
            echo "Price: \${$item['price']} each<br />";
            echo "Total for this item: \${$item['price'] * $item['quantity']}<br />";
            echo "</div>";
            $total += ($item['price'] * $item['quantity']);
        }
        echo "<h3>Total Amount: \$" . number_format($total, 2) . "</h3>";
    } else {
        echo "<p>Your cart is empty.</p>";
    } ?>

</body>
</html>


<?php
session_start();

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $id = $_POST['id'];
    $name = $_POST['name'];
    $price = $_POST['price'];
    $description = $_POST['description'];

    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }

    // Check if product is already in cart
    $found = false;
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['id'] == $id) {
            $item['quantity']++;
            $found = true;
            break;
        }
    }

    if (!$found) {
        $_SESSION['cart'][] = array(
            'id' => $id,
            'name' => $name,
            'price' => $price,
            'description' => $description,
            'quantity' => 1
        );
    }
}

// Redirect back to index page
header("Location: index.php");
exit();
?>


<?php
// Start the session
session_start();

// Function to add item to cart
function addToCart($productId, $name, $price) {
    // Initialize session if not set
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }
    
    // Check if product is already in the cart
    if (isset($_SESSION['cart'][$productId])) {
        // Update quantity
        $_SESSION['cart'][$productId]['quantity'] += 1;
    } else {
        // Add new product to cart
        $_SESSION['cart'][$productId] = array(
            'name' => $name,
            'price' => $price,
            'quantity' => 1
        );
    }
}

// Function to update item quantity in cart
function updateQuantity($productId, $newQuantity) {
    if (isset($_SESSION['cart'][$productId])) {
        // Ensure the new quantity is at least 1
        $newQuantity = max(1, $newQuantity);
        $_SESSION['cart'][$productId]['quantity'] = $newQuantity;
    }
}

// Function to remove item from cart
function removeFromCart($productId) {
    if (isset($_SESSION['cart'][$productId])) {
        unset($_SESSION['cart'][$productId]);
    }
}

// Function to empty the entire cart
function emptyCart() {
    $_SESSION['cart'] = array();
}

// Function to calculate total price of items in cart
function calculateTotal() {
    $total = 0;
    if (isset($_SESSION['cart'])) {
        foreach ($_SESSION['cart'] as $item) {
            $total += ($item['price'] * $item['quantity']);
        }
    }
    return $total;
}

// Function to display items in cart
function displayCart() {
    if (isset($_SESSION['cart']) && !empty($_SESSION['cart'])) {
        echo "<table>";
        echo "<tr><th>Product Name</th><th>Price</th><th>Quantity</th><th>Total</th></tr>";
        
        foreach ($_SESSION['cart'] as $productId => $item) {
            echo "<tr>";
            echo "<td>{$item['name']}</td>";
            echo "<td>$" . number_format($item['price'], 2, '.', '') . "</td>";
            echo "<td><input type='number' value='{$item['quantity']}' min='1' onchange='updateQuantity({$productId}, this.value)'></td>";
            echo "<td>$" . number_format(($item['price'] * $item['quantity']), 2, '.', '') . "</td>";
            echo "<td><button onclick='removeFromCart(" . $productId . ")'>Remove</button></td>";
            echo "</tr>";
        }
        
        echo "</table>";
    } else {
        echo "Your cart is empty!";
    }
}

// Example usage:
// Adding an item to the cart
productId = 1;
name = "Product A";
price = 29.99;

addToCart($productId, $name, $price);

// Updating quantity
updateQuantity(1, 3);

// Removing an item
removeFromCart(1);

// Emptying the cart
emptyCart();

// Displaying the cart
displayCart();
?>


<?php
// Initialize the session
session_start();
?>


// Check if the cart exists; if not, initialize it
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}


if (isset($_GET['action']) && $_GET['action'] == 'add') {
    if (isset($_GET['product_id']) && is_numeric($_GET['product_id'])) {
        $product_id = intval($_GET['product_id']);
        
        // Check if product already exists in the cart
        if (isset($_SESSION['cart'][$product_id])) {
            $_SESSION['cart'][$product_id] += 1;
        } else {
            $_SESSION['cart'][$product_id] = 1;
        }
        
        header("Location: cart.php?action=added&product_id=$product_id");
        exit();
    } else {
        // Handle error: invalid product ID
        header("Location: cart.php?error=invalid_product");
        exit();
    }
}


if (isset($_GET['action']) && $_GET['action'] == 'update') {
    if (isset($_GET['product_id']) && is_numeric($_GET['product_id'])) {
        $product_id = intval($_GET['product_id']);
        
        // Ensure the new quantity is valid
        if (isset($_GET['qty']) && is_numeric($_GET['qty'])) {
            $qty = intval($_GET['qty']);
            
            if ($qty > 0) {
                $_SESSION['cart'][$product_id] = $qty;
                header("Location: cart.php?action=updated&product_id=$product_id");
                exit();
            } else {
                // Remove the item if quantity is zero or negative
                unset($_SESSION['cart'][$product_id]);
                header("Location: cart.php?action=removed&product_id=$product_id");
                exit();
            }
        }
    }
}


if (isset($_GET['action']) && $_GET['action'] == 'remove') {
    if (isset($_GET['product_id']) && is_numeric($_GET['product_id'])) {
        $product_id = intval($_GET['product_id']);
        
        // Remove the product from the cart
        unset($_SESSION['cart'][$product_id]);
        header("Location: cart.php?action=removed&product_id=$product_id");
        exit();
    }
}


<?php
session_start();

// Initialize the cart if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

$cartContents = $_SESSION['cart'];
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <h1>Your Shopping Cart</h1>
    
    <?php if (!empty($cartContents)): ?>
        <table border="1">
            <tr>
                <th>Product ID</th>
                <th>Quantity</th>
                <th>Action</th>
            </tr>
            
            <?php foreach ($cartContents as $product_id => $quantity): ?>
                <tr>
                    <td><?php echo $product_id; ?></td>
                    <td><?php echo $quantity; ?></td>
                    <td>
                        <a href="cart.php?action=remove&product_id=<?php echo $product_id; ?>">Remove</a> |
                        <a href="cart.php?action=update&product_id=<?php echo $product_id; ?>">Update Quantity</a>
                    </td>
                </tr>
            <?php endforeach; ?>
        </table>
    <?php else: ?>
        <p>Your cart is empty.</p>
    <?php endif; ?>

    <!-- Add some test links -->
    <h2>Add Items to Cart:</h2>
    <ul>
        <li><a href="cart.php?action=add&product_id=1">Add Product 1</a></li>
        <li><a href="cart.php?action=add&product_id=2">Add Product 2</a></li>
        <li><a href="cart.php?action=add&product_id=3">Add Product 3</a></li>
    </ul>

    <?php
    // Display messages based on the action
    if (isset($_GET['action'])) {
        $action = $_GET['action'];
        switch ($action) {
            case 'added':
                echo "<p>Product " . $_GET['product_id'] . " has been added to your cart!</p>";
                break;
            case 'removed':
                echo "<p>Product " . $_GET['product_id'] . " has been removed from your cart!</p>";
                break;
            case 'updated':
                echo "<p>Quantity for product " . $_GET['product_id'] . " has been updated!</p>";
                break;
        }
    }

    if (isset($_GET['error'])) {
        switch ($_GET['error']) {
            case 'invalid_product':
                echo "<p>Error: Invalid product ID!</p>";
                break;
        }
    }
    ?>
</body>
</html>


<?php
// Initialize the session
session_start();

// Check if session is already started
if (session_status() !== PHP_SESSION_ACTIVE) {
    session_start();
}

// Function to add item to cart
function addToCart($productId, $productName, $productPrice) {
    global $cart;
    
    // If cart doesn't exist in session, create it
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }
    
    // Check if item already exists in cart
    $itemExists = false;
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['productId'] == $productId) {
            $item['quantity']++;
            $itemExists = true;
            break;
        }
    }
    
    // If item doesn't exist, add it to cart
    if (!$itemExists) {
        $newItem = array(
            'productId' => $productId,
            'productName' => $productName,
            'productPrice' => $productPrice,
            'quantity' => 1
        );
        $_SESSION['cart'][] = $newItem;
    }
}

// Function to update item quantity in cart
function updateCartItem($productId, $newQuantity) {
    global $cart;
    
    // Check if cart exists and update the quantity
    if (isset($_SESSION['cart'])) {
        foreach ($_SESSION['cart'] as &$item) {
            if ($item['productId'] == $productId) {
                $item['quantity'] = $newQuantity;
                break;
            }
        }
    }
}

// Function to remove item from cart
function removeFromCart($productId) {
    global $cart;
    
    // Check if cart exists and remove the item
    if (isset($_SESSION['cart'])) {
        foreach ($_SESSION['cart'] as $key => &$item) {
            if ($item['productId'] == $productId) {
                unset($_SESSION['cart'][$key]);
                break;
            }
        }
    }
}

// Function to calculate total price of items in cart
function getCartTotal() {
    $total = 0;
    
    // Check if cart exists and calculate the total price
    if (isset($_SESSION['cart'])) {
        foreach ($_SESSION['cart'] as $item) {
            $total += ($item['productPrice'] * $item['quantity']);
        }
    }
    
    return $total;
}

// Function to display cart contents
function displayCart() {
    echo "<h2>Your Cart</h2>";
    echo "<table border='1'>";
    echo "<tr><th>Product Name</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>";
    
    // Check if cart exists and display its contents
    if (isset($_SESSION['cart'])) {
        foreach ($_SESSION['cart'] as $item) {
            echo "<tr>";
            echo "<td>" . $item['productName'] . "</td>";
            echo "<td> $" . number_format($item['productPrice'], 2) . "</td>";
            echo "<td><input type='number' value='" . $item['quantity'] . "' onChange='updateQuantity(" . $item['productId'] . ", this.value)'></td>";
            echo "<td> $" . number_format(($item['productPrice'] * $item['quantity']), 2) . "</td>";
            echo "<td><button onclick='removeFromCart(" . $item['productId'] . ")'>Remove</button></td>";
            echo "</tr>";
        }
    } else {
        echo "<tr><td colspan='5'>Your cart is empty.</td></tr>";
    }
    
    echo "</table>";
}

// Example usage:
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    if (isset($_POST['action'])) {
        switch ($_POST['action']) {
            case 'add':
                addToCart($_POST['productId'], $_POST['productName'], $_POST['productPrice']);
                break;
            case 'update':
                updateCartItem($_POST['productId'], $_POST['quantity']);
                break;
            case 'remove':
                removeFromCart($_POST['productId']);
                break;
        }
    }
}

// Display cart contents
displayCart();
?>


<?php
// Start the session
session_start();

// Set session name (optional)
session_name("user_cart");

// Check if session exists, if not create it
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function addToCart($productId, $productName, $productPrice, $size) {
    global $pdo;
    
    // Check if product exists in the database (you should validate this)
    // For example:
    // $stmt = $pdo->prepare("SELECT * FROM products WHERE id = ?");
    // $stmt->execute([$productId]);
    // $product = $stmt->fetch();
    
    // If product exists
    if (!isset($_SESSION['cart'][$productId])) {
        $_SESSION['cart'][$productId] = array(
            'product_id' => $productId,
            'product_name' => $productName,
            'product_price' => $productPrice,
            'quantity' => 1,
            'size' => $size
        );
    } else {
        // If product already exists in cart, increase quantity
        $_SESSION['cart'][$productId]['quantity']++;
    }
}

// Function to update item quantity
function updateQuantity($productId, $quantity) {
    if (isset($_SESSION['cart'][$productId])) {
        $_SESSION['cart'][$productId]['quantity'] = $quantity;
    }
}

// Function to calculate total amount
function cartTotal() {
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += ($item['product_price'] * $item['quantity']);
    }
    return number_format($total, 2);
}

// Function to remove item from cart
function removeFromCart($productId, $size) {
    if (isset($_SESSION['cart'][$productId])) {
        unset($_SESSION['cart'][$productId]);
        // Re-index the array
        $_SESSION['cart'] = array_values($_SESSION['cart']);
    }
}

// Displaying cart contents
if (!empty($_SESSION['cart'])) {
    echo "<h2>Your Cart</h2>";
    echo "<table border='1'>";
    echo "<tr><th>Product Name</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>";
    
    foreach ($_SESSION['cart'] as $item) {
        $totalItem = $item['product_price'] * $item['quantity'];
        echo "<tr>";
        echo "<td>" . $item['product_name'] . "</td>";
        echo "<td>$" . number_format($item['product_price'], 2) . "</td>";
        echo "<td><input type='number' value='" . $item['quantity'] . "' onchange='updateQuantity(" . $item['product_id'] . ", this.value)'></td>";
        echo "<td>$" . number_format($totalItem, 2) . "</td>";
        echo "<td><button onclick='removeFromCart(" . $item['product_id'] . ")'>Remove</button></td>";
        echo "</tr>";
    }
    
    echo "</table>";
    echo "<p>Total: $" . cartTotal() . "</p>";
} else {
    echo "Your cart is empty.";
}

// Destroy session when user logs out
if (isset($_GET['logout'])) {
    session_unset();
    session_destroy();
    header("Location: login.php");
}
?>


<?php
session_start();


// Check if the cart session variable exists, if not, initialize it
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array(
        'items' => array(),
        'total_price' => 0.00
    );
}


// Function to add item to cart
function add_to_cart($product_id) {
    global $products; // Assuming $products is an array of product data
    
    foreach ($_SESSION['cart']['items'] as &$item) {
        if ($item['id'] == $product_id) {
            $item['quantity']++;
            $_SESSION['cart']['total_price'] += $products[$product_id]['price'];
            return;
        }
    }
    
    // If item not found in cart, add it
    $new_item = array(
        'id' => $product_id,
        'name' => $products[$product_id]['name'],
        'price' => $products[$product_id]['price'],
        'quantity' => 1
    );
    
    $_SESSION['cart']['items'][] = $new_item;
    $_SESSION['cart']['total_price'] += $products[$product_id]['price'];
}


// Function to display cart content
function display_cart() {
    if (empty($_SESSION['cart']['items'])) {
        echo "Your cart is empty.";
        return;
    }
    
    echo "<table>";
    echo "<tr><th>Product Name</th><th>Price</th><th>Quantity</th><th>Total</th></tr>";
    
    foreach ($_SESSION['cart']['items'] as $item) {
        echo "<tr>";
        echo "<td>" . $item['name'] . "</td>";
        echo "<td>" . number_format($item['price'], 2) . "</td>";
        echo "<td><input type='number' value='" . $item['quantity'] . "'></td>";
        echo "<td>" . number_format($item['price'] * $item['quantity'], 2) . "</td>";
        echo "</tr>";
    }
    
    echo "<tr><td colspan='3'>Total:</td><td>" . number_format($_SESSION['cart']['total_price'], 2) . "</td></tr>";
    echo "</table>";
}


// Function to remove item from cart
function remove_from_cart($product_id) {
    foreach ($_SESSION['cart']['items'] as $key => &$item) {
        if ($item['id'] == $product_id) {
            $_SESSION['cart']['total_price'] -= $item['price'] * $item['quantity'];
            unset($_SESSION['cart']['items'][$key]);
            return;
        }
    }
}


<?php
// Start the session
session_start();

// Check if the cart exists in the session
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}
?>


<?php
session_start();

// Check if the cart exists in the session
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Get product details from your database or form submission
$product_id = $_POST['product_id'];
$product_name = $_POST['product_name'];
$product_price = $_POST['product_price'];

// Add the item to the cart
$_SESSION['cart'][$product_id] = array(
    'name' => $product_name,
    'price' => $product_price,
    'quantity' => 1
);

// Redirect back to the product page or cart view
header("Location: view_cart.php");
exit();
?>


<?php
session_start();

$total = 0;

if (isset($_SESSION['cart'])) {
    foreach ($_SESSION['cart'] as $item) {
        echo "Item: " . $item['name'] . "<br>";
        echo "Price: $" . number_format($item['price'], 2) . "<br>";
        echo "Quantity: " . $item['quantity'] . "<br>";
        echo "Total for this item: $" . number_format(($item['price'] * $item['quantity']), 2) . "<br><br>";
        
        $total += $item['price'] * $item['quantity'];
    }
    
    echo "Cart Total: $" . number_format($total, 2);
} else {
    echo "Your cart is empty!";
}
?>


<?php
session_start();

// Get product ID and new quantity from form submission
$product_id = $_POST['product_id'];
$new_quantity = $_POST['quantity'];

if (isset($_SESSION['cart'][$product_id])) {
    $_SESSION['cart'][$product_id]['quantity'] = $new_quantity;
}

header("Location: view_cart.php");
exit();
?>


<?php
session_start();

// Get product ID from form submission
$product_id = $_POST['product_id'];

if (isset($_SESSION['cart'][$product_id])) {
    unset($_SESSION['cart'][$product_id]);
}

header("Location: view_cart.php");
exit();
?>


<?php
session_start();

// Check if cart is not empty
if (!empty($_SESSION['cart'])) {
    // Proceed with checkout logic (e.g., payment processing, order confirmation)
    
    // After successful checkout, clear the cart
    unset($_SESSION['cart']);
}

header("Location: thank_you.php");
exit();
?>


<?php
// Start the session
session_start();

// Check if the cart is set in the session, initialize it if not
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add item to cart
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $productId = isset($_POST['product_id']) ? intval($_POST['product_id']) : 0;
    $productName = isset($_POST['product_name']) ? $_POST['product_name'] : '';
    $productPrice = isset($_POST['product_price']) ? floatval($_POST['product_price']) : 0.0;
    $quantity = isset($_POST['quantity']) ? intval($_POST['quantity']) : 1;

    // Check if product is already in the cart
    $found = false;
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['id'] == $productId) {
            $item['quantity'] += $quantity;
            $found = true;
            break;
        }
    }

    if (!$found) {
        // Add new product to cart
        array_push($_SESSION['cart'], array(
            'id' => $productId,
            'name' => $productName,
            'price' => $productPrice,
            'quantity' => $quantity
        ));
    }
}

// Display cart contents
echo "<h2>Shopping Cart</h2>";
echo "<table border='1'>";
echo "<tr><th>Product Name</th><th>Quantity</th><th>Price</th><th>Total</th><th>Action</th></tr>";

foreach ($_SESSION['cart'] as $item) {
    $total = $item['price'] * $item['quantity'];
    echo "<tr>";
    echo "<td>" . $item['name'] . "</td>";
    echo "<td>" . $item['quantity'] . "</td>";
    echo "<td>₹" . number_format($item['price'], 2) . "</td>";
    echo "<td>₹" . number_format($total, 2) . "</td>";
    // Add remove button
    echo "<td><form method='post' action=''>";
    echo "<input type='hidden' name='remove_id' value='" . $item['id'] . "'>";
    echo "<button type='submit'>Remove</button></form></td>";
    echo "</tr>";
}

echo "</table>";

// Remove item from cart
if (isset($_POST['remove_id'])) {
    $removeId = intval($_POST['remove_id']);
    // Search for the product id and remove it from the cart
    foreach ($_SESSION['cart'] as $key => &$item) {
        if ($item['id'] == $removeId) {
            unset($_SESSION['cart'][$key]);
            break;
        }
    }
}

// Add new item form
echo "<h2>Add to Cart</h2>";
echo "<form method='post'>";
echo "Product ID: <input type='number' name='product_id' required><br>";
echo "Product Name: <input type='text' name='product_name' required><br>";
echo "Price: <input type='number' step='0.01' name='product_price' required><br>";
echo "Quantity: <input type='number' min='1' name='quantity' value='1'><br>";
echo "<button type='submit'>Add to Cart</button>";
echo "</form>";
?>


<?php
// Start the session
session_start();

// Check if the cart session exists, if not create it
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function addToCart($product_id, $name, $price) {
    global $mysqli;
    
    // Check if product already exists in the cart
    if (isset($_SESSION['cart'][$product_id])) {
        // If exists, increase quantity
        $_SESSION['cart'][$product_id]['quantity']++;
    } else {
        // If not exists, add new item
        $_SESSION['cart'][$product_id] = array(
            'product_id' => $product_id,
            'name' => $name,
            'price' => $price,
            'quantity' => 1
        );
    }
}

// Function to update quantity of an item in cart
function updateQuantity($product_id, $quantity) {
    if (isset($_SESSION['cart'][$product_id])) {
        $_SESSION['cart'][$product_id]['quantity'] = $quantity;
    }
}

// Function to remove item from cart
function removeFromCart($product_id) {
    if (isset($_SESSION['cart'][$product_id])) {
        unset($_SESSION['cart'][$product_id]);
    }
}

// Function to calculate total price of items in cart
function calculateTotal() {
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += ($item['price'] * $item['quantity']);
    }
    return $total;
}

// Initialize the cart if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}
?>


addToCart(1, 'Product Name', 29.99);


updateQuantity(1, 3); // Update product ID 1 to quantity 3


removeFromCart(1); // Remove product ID 1 from cart


$total = calculateTotal();
echo "Total: $" . number_format($total, 2);


<?php
// Initialize session
session_start();

// Set session variables for the cart
if (!isset($_SESSION['cart'])) {
    // Create empty cart if it doesn't exist
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function addToCart($productId, $name, $price, $quantity, $category) {
    global $mysqli; // Assuming you have a database connection
    
    // Check if the product is already in the cart
    if (isset($_SESSION['cart'][$productId])) {
        // Update quantity if it's already there
        $_SESSION['cart'][$productId]['quantity'] += $quantity;
    } else {
        // Add new item to the cart
        $_SESSION['cart'][$productId] = array(
            'name' => $name,
            'price' => $price,
            'quantity' => $quantity,
            'category' => $category
        );
    }
}

// Function to remove item from cart
function removeFromCart($productId) {
    if (isset($_SESSION['cart'][$productId])) {
        unset($_SESSION['cart'][$productId]);
        // Re-index the array to avoid empty indices
        $_SESSION['cart'] = array_values($_SESSION['cart']);
    }
}

// Function to update quantity of an item in cart
function updateQuantity($productId, $newQuantity) {
    if (isset($_SESSION['cart'][$productId]) && $newQuantity > 0) {
        $_SESSION['cart'][$productId]['quantity'] = $newQuantity;
    } elseif ($newQuantity <= 0) {
        removeFromCart($productId);
    }
}

// Function to display cart items
function displayCart() {
    if (!empty($_SESSION['cart'])) {
        echo "<table border='1'>";
        echo "<tr><th>Product Name</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>";
        
        foreach ($_SESSION['cart'] as $key => $item) {
            $total = $item['price'] * $item['quantity'];
            echo "<tr>";
            echo "<td>" . $item['name'] . "</td>";
            echo "<td>$$item[price]</td>";
            echo "<td><input type='number' value='$item[quantity]' onchange='updateQuantity($key, this.value)'></td>";
            echo "<td>$$total</td>";
            echo "<td><button onclick='removeFromCart($key)'>Remove</button></td>";
            echo "</tr>";
        }
        
        // Calculate and display cart total
        $cartTotal = 0;
        foreach ($_SESSION['cart'] as $item) {
            $cartTotal += $item['price'] * $item['quantity'];
        }
        echo "<tr><td colspan='4'>Cart Total:</td><td>$$cartTotal</td></tr>";
        echo "</table>";
    } else {
        echo "Your cart is empty.";
    }
}

// Example usage:
addToCart(1, 'Product 1', 19.99, 2, 'Electronics');
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
    <script>
        function removeFromCart(productId) {
            if (confirm('Are you sure you want to remove this item?')) {
                window.location.href = 'cart.php?action=remove&productId=' + productId;
            }
        }

        function updateQuantity(productId, newQuantity) {
            if (newQuantity <= 0) {
                removeFromCart(productId);
            } else {
                window.location.href = 'cart.php?action=update&productId=' + productId + '&quantity=' + newQuantity;
            }
        }
    </script>
</head>
<body>
    <?php displayCart(); ?>

    <!-- Add buttons to navigate back or proceed -->
    <button onclick="window.location.href='products.php'">Continue Shopping</button>
    <button onclick="window.location.href='checkout.php'">Checkout</button>
</body>
</html>

// In a separate file (e.g., cart.php), handle actions
<?php
session_start();

if (!empty($_GET['action'])) {
    switch ($_GET['action']) {
        case 'remove':
            if (!empty($_GET['productId'])) {
                removeFromCart($_GET['productId']);
            }
            break;
        
        case 'update':
            if (!empty($_GET['productId']) && !empty($_GET['quantity'])) {
                updateQuantity($_GET['productId'], $_GET['quantity']);
            }
            break;
    }
}

header('Location: cart.php');
exit();
?>


<?php
session_start();

// Initialize cart if not already set
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Example product data (you would typically retrieve this from your database)
$products = array(
    1 => array('name' => 'Product 1', 'price' => 19.99),
    2 => array('name' => 'Product 2', 'price' => 29.99),
    3 => array('name' => 'Product 3', 'price' => 9.99)
);

// Function to add item to cart
function addToCart($productId, $quantity = 1) {
    global $products;
    
    // Check if product exists in the products list
    if (isset($products[$productId])) {
        // Get product details
        $product = $products[$productId];
        
        // Check if item is already in cart
        foreach ($_SESSION['cart'] as &$item) {
            if ($item['id'] == $productId) {
                // If exists, increase quantity
                $item['quantity'] += $quantity;
                return true;
            }
        }
        
        // If not exists, add new item to cart
        $_SESSION['cart'][] = array(
            'id' => $productId,
            'name' => $product['name'],
            'price' => $product['price'],
            'quantity' => $quantity
        );
        
        return true;
    }
    
    // Product not found
    return false;
}

// Function to remove item from cart
function removeFromCart($productId) {
    foreach ($_SESSION['cart'] as $key => &$item) {
        if ($item['id'] == $productId) {
            unset($_SESSION['cart'][$key]);
            return true;
        }
    }
    
    // Product not found in cart
    return false;
}

// Function to update item quantity
function updateQuantity($productId, $quantity) {
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['id'] == $productId) {
            if ($quantity > 0) {
                $item['quantity'] = $quantity;
            }
            return true;
        }
    }
    
    // Product not found in cart
    return false;
}

// Function to calculate total price
function calculateTotal() {
    $total = 0.00;
    foreach ($_SESSION['cart'] as $item) {
        $total += ($item['price'] * $item['quantity']);
    }
    return number_format($total, 2);
}

// Example usage:

// Add product with ID 1 and quantity 2
addToCart(1, 2);

// Add product with ID 3
addToCart(3);

// Remove product with ID 2 (if it exists)
removeFromCart(2);

// Update quantity of product with ID 1 to 3
updateQuantity(1, 3);

// Display cart contents
echo "<h2>Shopping Cart</h2>";
echo "<table border='1'>";
echo "<tr><th>Product Name</th><th>Price</th><th>Quantity</th><th>Total</th></tr>";

foreach ($_SESSION['cart'] as $item) {
    echo "<tr>";
    echo "<td>" . $item['name'] . "</td>";
    echo "<td>$" . number_format($item['price'], 2) . "</td>";
    echo "<td>" . $item['quantity'] . "</td>";
    echo "<td>$" . number_format(($item['price'] * $item['quantity']), 2) . "</td>";
    echo "</tr>";
}

echo "</table>";

// Display total price
echo "<h3>Total: $" . calculateTotal() . "</h3>";

// Destroy the session when done
session_unset();
session_destroy();

?>


<?php
// Start the session
session_start();

// Function to add item to the cart
function addToCart($productId, $productName, $productPrice) {
    // Initialize cart if not set
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }
    
    // Check if item already exists in the cart
    if (isset($_SESSION['cart'][$productId])) {
        // Increment quantity
        $_SESSION['cart'][$productId]['quantity']++;
    } else {
        // Add new item to the cart
        $_SESSION['cart'][$productId] = array(
            'product_name' => $productName,
            'price' => $productPrice,
            'quantity' => 1
        );
    }
}

// Function to remove item from the cart
function removeFromCart($productId) {
    if (isset($_SESSION['cart'][$productId])) {
        unset($_SESSION['cart'][$productId]);
        // Re-index the array to maintain numeric keys
        $_SESSION['cart'] = array_values($_SESSION['cart']);
    }
}

// Function to clear all items from the cart
function clearCart() {
    unset($_SESSION['cart']);
}

// Example usage:

// Add an item to the cart
addToCart(1, 'Product 1', 29.99);
addToCart(2, 'Product 2', 49.99);

// Remove an item from the cart
removeFromCart(1);

// Clear all items from the cart
clearCart();

// Display the contents of the cart
echo "<h3>Your Cart:</h3>";
if (!empty($_SESSION['cart'])) {
    echo "<ul>";
    foreach ($_SESSION['cart'] as $item) {
        echo "<li>" . $item['product_name'] . " - $" . number_format($item['price'], 2) . " x " . $item['quantity'] . "</li>";
    }
    echo "</ul>";
} else {
    echo "<p>Your cart is empty.</p>";
}
?>


<?php
// Initialize session
session_start();

// Set session cookie parameters (optional)
ini_set('session.cookie_lifetime', 3600); // Session lasts for 1 hour
ini_set('session.cookie_path', '/'); // Cookie is valid for entire website

// Check if cart exists in session, if not create it
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function addToCart($productId) {
    global $db; // Assuming you have a database connection
    
    // Get product details from database
    $stmt = $db->prepare("SELECT * FROM products WHERE id = ?");
    $stmt->execute([$productId]);
    $product = $stmt->fetch();

    if ($product) {
        // Check if item already exists in cart
        $found = false;
        foreach ($_SESSION['cart'] as &$item) {
            if ($item['id'] == $product['id']) {
                $item['quantity']++;
                $found = true;
                break;
            }
        }

        // If not found, add new item to cart
        if (!$found) {
            $_SESSION['cart'][] = array(
                'id' => $product['id'],
                'name' => $product['name'],
                'price' => $product['price'],
                'quantity' => 1
            );
        }
    }
}

// Function to update item quantity in cart
function updateQuantity($productId, $newQuantity) {
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['id'] == $productId) {
            $item['quantity'] = $newQuantity;
            break;
        }
    }
}

// Function to remove item from cart
function removeFromCart($productId) {
    $_SESSION['cart'] = array_filter($_SESSION['cart'], function($item) use ($productId) {
        return $item['id'] != $productId;
    });
}

// Example usage:
if (isset($_POST['add_to_cart'])) {
    addToCart($_POST['product_id']);
}

if (isset($_POST['update_quantity'])) {
    updateQuantity($_POST['product_id'], $_POST['quantity']);
}

if (isset($_POST['remove_item'])) {
    removeFromCart($_POST['product_id']);
}
?>



<?php
if (!empty($_SESSION['cart'])) {
    echo "<h2>Shopping Cart</h2>";
    echo "<table>";
    foreach ($_SESSION['cart'] as $item) {
        echo "<tr>";
        echo "<td>{$item['name']}</td>";
        echo "<td>{$item['price']}</td>";
        echo "<td><input type='number' value='{$item['quantity']}'></td>";
        echo "<td><button onclick=\"updateQuantity({$item['id']})\">Update</button></td>";
        echo "<td><button onclick=\"removeFromCart({$item['id']})\">Remove</button></td>";
        echo "</tr>";
    }
    echo "</table>";
} else {
    echo "Your cart is empty.";
}
?>


<?php
session_start();
if (isset($_POST['product_id']) && isset($_POST['quantity'])) {
    updateQuantity($_POST['product_id'], $_POST['quantity']);
}
?>


<?php
session_start();
if (isset($_POST['product_id'])) {
    removeFromCart($_POST['product_id']);
}
?>


<?php
// Start the session
session_start();

// Check if the cart exists in the session. If not, initialize it
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function addToCart($productId, $productName, $productPrice) {
    global $error;
    
    // Check if product ID is valid
    if (empty($productId)) {
        $error = "Invalid product ID.";
        return false;
    }

    // Create an array for the item
    $item = array(
        'id' => $productId,
        'name' => $productName,
        'price' => $productPrice,
        'quantity' => 1
    );

    // Add the item to the cart session
    $_SESSION['cart'][$productId] = $item;
    return true;
}

// Function to display cart contents
function displayCart() {
    if (empty($_SESSION['cart'])) {
        echo "<p>Your cart is empty.</p>";
        return;
    }

    echo "<table border='1'>";
    echo "<tr><th>Product Name</th><th>Price</th><th>Quantity</th><th>Action</th></tr>";

    foreach ($_SESSION['cart'] as $item) {
        echo "<tr>";
        echo "<td>" . $item['name'] . "</td>";
        echo "<td>₹" . number_format($item['price'], 2) . "</td>";
        echo "<td>" . $item['quantity'] . "</td>";
        echo "<td><a href='cart.php?action=remove&id=" . $item['id'] . "'>Remove</a></td>";
        echo "</tr>";
    }

    echo "</table>";
}

// Function to remove item from cart
function removeItem($productId) {
    if (isset($_SESSION['cart'][$productId])) {
        unset($_SESSION['cart'][$productId]);
        // Re-index the array after unsetting an element
        $_SESSION['cart'] = array_values($_SESSION['cart']);
    }
}

// Function to clear all items from cart
function clearCart() {
    $_SESSION['cart'] = array();
}

// Handle cart actions based on request parameters
if (isset($_GET['action'])) {
    switch ($_GET['action']) {
        case 'add':
            $productId = isset($_GET['id']) ? intval($_GET['id']) : 0;
            $productName = "Product " . $productId; // Example product name
            $productPrice = 9.99 + $productId * 10; // Example price
            addToCart($productId, $productName, $productPrice);
            break;

        case 'remove':
            if (isset($_GET['id'])) {
                removeItem(intval($_GET['id']));
            }
            break;

        case 'clear':
            clearCart();
            break;
    }
}

// Display cart contents
displayCart();

// Optional: Add links to add items or clear cart
echo "<p><a href='cart.php?action=add&id=1'>Add Item 1</a></p>";
echo "<p><a href='cart.php?action=add&id=2'>Add Item 2</a></p>";
echo "<p><a href='cart.php?action=clear'>Clear Cart</a></p>";

// Display any error messages
if (isset($error)) {
    echo "<p>Error: " . $error . "</p>";
}
?>


<?php
session_start();
?>


if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}


// Assuming you have a product ID, name, and price
$product_id = 1;
$product_name = "Example Product";
$quantity = 1;

// Create an item array
$item = array(
    'id' => $product_id,
    'name' => $product_name,
    'quantity' => $quantity
);

// Add the item to the cart
array_push($_SESSION['cart'], $item);


echo "<h2>Your Shopping Cart</h2>";
echo "<ul>";

foreach ($_SESSION['cart'] as $item) {
    echo "<li>" . $item['name'] . " (Quantity: " . $item['quantity'] . ")</li>";
}

echo "</ul>";


// Find the index of the item to update
foreach ($_SESSION['cart'] as &$item) {
    if ($item['id'] == $product_id) {
        $item['quantity'] = $new_quantity;
        break;
    }
}
unset($item);


// Remove all instances of the product (if you want to allow multiple quantities)
$_SESSION['cart'] = array_filter($_SESSION['cart'], function($item) use ($product_id) {
    return $item['id'] != $product_id;
});

// Or, remove a specific occurrence if there are duplicates
foreach ($_SESSION['cart'] as $key => $item) {
    if ($item['id'] == $product_id) {
        unset($_SESSION['cart'][$key]);
        break; // Removes the first occurrence
    }
}


$_SESSION['cart'] = array();


<?php
session_start();

// Initialize cart if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Sample product data
$products = array(
    1 => array('name' => 'Laptop', 'price' => 999.99),
    2 => array('name' => 'Smartphone', 'price' => 699.99),
    3 => array('name' => 'Tablet', 'price' => 499.99)
);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <h1>Welcome to Our Store</h1>

    <?php
    // Display products for purchase
    foreach ($products as $id => $product) {
        echo "<div>";
        echo "<h3>{$product['name']}</h3>";
        echo "<p>Price: \${$product['price']}</p>";
        echo "<form action='add_to_cart.php' method='post'>";
        echo "<input type='hidden' name='product_id' value='$id'>";
        echo "<input type='number' name='quantity' min='1' value='1'>";
        echo "<button type='submit'>Add to Cart</button>";
        echo "</form>";
        echo "</div>";
    }
    ?>

    <h2>Your Cart</h2>
    <?php
    if (empty($_SESSION['cart'])) {
        echo "Your cart is empty.";
    } else {
        foreach ($_SESSION['cart'] as $item) {
            echo "<li>{$item['name']} - Quantity: {$item['quantity']}</li>";
        }
    }
    ?>

</body>
</html>


<?php
session_start();

// Get product details from POST request
$product_id = $_POST['product_id'];
$quantity = (int)$_POST['quantity'];

// Sample product data
$products = array(
    1 => array('name' => 'Laptop', 'price' => 999.99),
    2 => array('name' => 'Smartphone', 'price' => 699.99),
    3 => array('name' => 'Tablet', 'price' => 499.99)
);

// Get product details
$product = $products[$product_id];

// Add to cart
$cart_item = array(
    'id' => $product_id,
    'name' => $product['name'],
    'quantity' => $quantity
);

// Check if the item is already in the cart
foreach ($_SESSION['cart'] as &$item) {
    if ($item['id'] == $product_id) {
        $item['quantity'] += $quantity;
        break;
    }
}

// If not found, add it to the cart
if (!isset($found)) {
    array_push($_SESSION['cart'], $cart_item);
}

// Redirect back to the main page
header('Location: index.php');
exit();
?>


<?php
session_start();
?>


if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}


// Assuming $item is an associative array with product details
$item = array(
    'id' => 1,
    'name' => 'Product Name',
    'price' => 29.99,
    'quantity' => 1
);

// Add the item to the cart
array_push($_SESSION['cart'], $item);


if (!empty($_SESSION['cart'])) {
    echo "<h2>Shopping Cart</h2>";
    echo "<ul>";
    foreach ($_SESSION['cart'] as $item) {
        echo "<li>" . $item['name'] . " - $" . number_format($item['price'], 2) . "</li>";
    }
    echo "</ul>";
} else {
    echo "Your cart is empty.";
}


// Remove the item at position 0 (first item)
if (!empty($_SESSION['cart'])) {
    array_splice($_SESSION['cart'], 0, 1);
}


foreach ($_SESSION['cart'] as $key => $item) {
    if ($item['id'] == $productIdToRemove) {
        unset($_SESSION['cart'][$key]);
    }
}

// Re-index the array
$_SESSION['cart'] = array_values($_SESSION['cart']);


session_unset();
session_destroy();


<?php
session_start();

// Initialize cart if not set
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add item to cart
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    if (isset($_POST['action']) && $_POST['action'] == 'add') {
        $item = array(
            'id' => 1,
            'name' => 'Laptop',
            'price' => 999.99,
            'quantity' => 1
        );
        array_push($_SESSION['cart'], $item);
    }
}

// Remove item from cart
if (isset($_GET['remove'])) {
    foreach ($_SESSION['cart'] as $key => $item) {
        if ($item['id'] == $_GET['remove']) {
            unset($_SESSION['cart'][$key]);
        }
    }
    // Re-index the array
    $_SESSION['cart'] = array_values($_SESSION['cart']);
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <h1>Shopping Cart Example</h1>

    <?php if (!empty($_SESSION['cart'])) : ?>
        <h2>Your Cart:</h2>
        <ul>
            <?php foreach ($_SESSION['cart'] as $item) : ?>
                <li><?php echo $item['name']; ?> - $<?php echo number_format($item['price'], 2); ?> 
                    <a href="?remove=<?php echo $item['id']; ?>">Remove</a>
                </li>
            <?php endforeach; ?>
        </ul>
    <?php else : ?>
        <p>Your cart is empty.</p>
    <?php endif; ?>

    <form method="post">
        <input type="hidden" name="action" value="add">
        <button type="submit">Add Item</button>
    </form>

    <a href="logout.php">Logout and Clear Cart</a>
</body>
</html>


<?php
session_start();
session_unset();
session_destroy();
echo "Session has been destroyed!";
?>


<?php
// Start the session
session_start();

// Initialize cart if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add item to cart
function addToCart($productId, $quantity) {
    // Check if product already exists in cart
    foreach ($_SESSION['cart'] as $key => $item) {
        if ($item['product_id'] == $(productId)) {
            // Update quantity
            $_SESSION['cart'][$key]['quantity'] += $quantity;
            return;
        }
    }
    // Add new item to cart
    array_push($_SESSION['cart'], array(
        'product_id' => $productId,
        'quantity' => $quantity
    ));
}

// Remove item from cart
function removeFromCart($productId) {
    foreach ($_SESSION['cart'] as $key => $item) {
        if ($item['product_id'] == $productId) {
            unset($_SESSION['cart'][$key]);
            // Re-index the array keys
            $_SESSION['cart'] = array_values($_SESSION['cart']);
            return;
        }
    }
}

// Update quantity of item in cart
function updateQuantity($productId, $newQuantity) {
    foreach ($_SESSION['cart'] as $key => $item) {
        if ($item['product_id'] == $productId) {
            $_SESSION['cart'][$key]['quantity'] = $newQuantity;
            return;
        }
    }
}

// Display cart contents
function displayCart() {
    echo "<h2>Your Cart</h2>";
    echo "<ul>";
    foreach ($_SESSION['cart'] as $item) {
        echo "<li>Product ID: " . $item['product_id'] . ", Quantity: " . $item['quantity'];
        echo "<a href='removeFromCart.php?productId=" . $item['product_id'] . "'>Remove</a></li>";
    }
    echo "</ul>";
}

// Example usage:
if (isset($_POST['action'])) {
    if ($_POST['action'] == 'add') {
        addToCart($_POST['product_id'], $_POST['quantity']);
    } elseif ($_POST['action'] == 'remove') {
        removeFromCart($_POST['product_id']);
    } elseif ($_POST['action'] == 'update') {
        updateQuantity($_POST['product_id'], $_POST['quantity']);
    }
}

// Display the cart
displayCart();
?>


<?php
session_start();

// Initialize cart if not exists
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

function add_to_cart($item_id, $name, $price) {
    global $db;
    
    // Check if item already exists in the cart
    if (isset($_SESSION['cart'][$item_id])) {
        // Update quantity or handle accordingly
        return false; // Or update logic
    }
    
    // Item details array
    $item = array(
        'id' => $item_id,
        'name' => $name,
        'price' => $price,
        'quantity' => 1,
        'total' => $price * 1
    );
    
    $_SESSION['cart'][$item_id] = $item;
}

// Calculate subtotal
$subtotal = 0;
foreach ($_SESSION['cart'] as $item) {
    $subtotal += $item['total'];
}

// Display cart contents
echo "<h2>Your Cart</h2>";
if (empty($_SESSION['cart'])) {
    echo "Your cart is empty.";
} else {
    echo "<ul>";
    foreach ($_SESSION['cart'] as $id => $item) {
        echo "<li>{$item['name']} - \${$item['price']} x {$item['quantity']} = \${$item['total']}
              <form method='post' action=''>
                  <input type='hidden' name='remove_id' value='$id'>
                  <button type='submit'>Remove</button>
              </form></li>";
    }
    echo "</ul>";
    
    // Remove item functionality
    if (isset($_POST['remove_id'])) {
        $remove_id = $_POST['remove_id'];
        unset($_SESSION['cart'][$remove_id]);
        // Reindex the cart array to maintain clean keys
        $_SESSION['cart'] = array_values($_SESSION['cart']);
    }
    
    echo "<p>Subtotal: \${$subtotal}</p>";
}

// Session security measures
ini_set('session.cookie_httponly', 1);
ini_set('session.cookie_secure', 1);
ini_set('session.use_strict_mode', 1);

if (isset($_SERVER['HTTPS'])) {
    ini_set('session.cookie_samesite', 'Strict');
} else {
    ini_set('session.cookie_samesite', 'Lax');
}

// Regenerate session ID periodically
session_regenerate(true);
?>


<?php
session_start();

// Initialize cart if not set
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

function add_to_cart($item_id, $name, $price, $quantity) {
    global $conn; // Assuming database connection

    foreach ($_SESSION['cart'] as $index => $item) {
        if ($item['id'] == $item_id) {
            $_SESSION['cart'][$index]['quantity'] += $quantity;
            return true;
        }
    }
    
    $new_item = array(
        'id' => $item_id,
        'name' => $name,
        'price' => $price,
        'quantity' => $quantity
    );
    $_SESSION['cart'][] = $new_item;
    return true;
}

function remove_from_cart($item_id) {
    foreach ($_SESSION['cart'] as $index => $item) {
        if ($item['id'] == $item_id) {
            unset($_SESSION['cart'][$index]);
            $_SESSION['cart'] = array_values($_SESSION['cart']);
            return true;
        }
    }
    return false;
}

function update_cart($new_quantities) {
    foreach ($_SESSION['cart'] as $index => $item) {
        if (isset($new_quantities[$index])) {
            $_SESSION['cart'][$index]['quantity'] = intval($new_quantities[$index]);
        }
    }
}

function display_cart() {
    $output = '<table>';
    foreach ($_SESSION['cart'] as $index => $item) {
        $output .= "<tr><td>{$item['name']}</td><td>\${$item['price']}</td><td><input type='number' name='quantity[$index]' value='{$item['quantity']}'></td><td><a href='remove.php?id={$item['id']}'>Remove</a></td></tr>";
    }
    $output .= '</table>';
    return $output;
}

function calculate_total() {
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += $item['price'] * $item['quantity'];
    }
    return $total;
}

function reset_cart() {
    unset($_SESSION['cart']);
    session_destroy();
    header('Location: thank_you.php');
}
?>


<?php
session_start();

// Initialize cart if not set
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add item to cart
if (isset($_GET['action']) && $_GET['action'] == 'add') {
    $productId = $_GET['id'];
    $productName = "Product " . $productId;
    $productPrice = 10.99; // Example price
    
    $item = array(
        'id' => $productId,
        'name' => $productName,
        'price' => $productPrice,
        'quantity' => 1
    );
    
    // Check if item already exists in cart
    $found = false;
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['id'] == $productId) {
            $item['quantity'] += 1;
            $found = true;
            break;
        }
    }
    
    if (!$found) {
        array_push($_SESSION['cart'], $item);
    }
}

// Remove item from cart
if (isset($_GET['action']) && $_GET['action'] == 'remove') {
    $productId = $_GET['id'];
    
    foreach ($_SESSION['cart'] as $key => $item) {
        if ($item['id'] == $productId) {
            unset($_SESSION['cart'][$key]);
            break;
        }
    }
    
    // Re-index the array
    $_SESSION['cart'] = array_values($_SESSION['cart']);
}

// Display cart contents
echo "<h2>Your Cart</h2>";
echo "<table border='1'>";
echo "<tr><th>Product Name</th><th>Price</th><th>Quantity</th><th>Action</th></tr>";

foreach ($_SESSION['cart'] as $item) {
    echo "<tr>";
    echo "<td>" . $item['name'] . "</td>";
    echo "<td>$" . number_format($item['price'], 2) . "</td>";
    echo "<td>" . $item['quantity'] . "</td>";
    echo "<td><a href='?action=remove&id=" . $item['id'] . "'>Remove</a></td>";
    echo "</tr>";
}

echo "</table>";

// Calculate total
$total = 0;
foreach ($_SESSION['cart'] as $item) {
    $total += $item['price'] * $item['quantity'];
}

echo "<h3>Total: $" . number_format($total, 2) . "</h3>";

// Add a sample product link to test adding items
echo "<p><a href='?action=add&id=1'>Add Product 1</a></p>";
echo "<p><a href='?action=add&id=2'>Add Product 2</a></p>";
echo "<p><a href='?action=add&id=3'>Add Product 3</a></p>";

// Close session
session_write_close();
?>


<?php
// Start the session
session_start();

// Initialize cart if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Product details (you would typically get this from a database)
$products = array(
    1 => array('name' => 'Product 1', 'price' => 29.99),
    2 => array('name' => 'Product 2', 'price' => 49.99),
    3 => array('name' => 'Product 3', 'price' => 19.99)
);

// Add item to cart
if (isset($_POST['add_to_cart'])) {
    $product_id = $_POST['product_id'];
    $quantity = $_POST['quantity'];

    // Check if product exists
    if (!isset($products[$product_id])) {
        die("Product not found.");
    }

    // Add or update cart item
    if (isset($_SESSION['cart'][$product_id])) {
        $_SESSION['cart'][$product_id]['quantity'] += $quantity;
    } else {
        $_SESSION['cart'][$product_id] = array(
            'name' => $products[$product_id]['name'],
            'price' => $products[$product_id]['price'],
            'quantity' => $quantity
        );
    }
}

// Remove item from cart
if (isset($_POST['remove_item'])) {
    $product_id = $_POST['product_id'];
    unset($_SESSION['cart'][$product_id]);
}

// Calculate total price
$total_price = 0;
foreach ($_SESSION['cart'] as $item) {
    $total_price += ($item['price'] * $item['quantity']);
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
    <style>
        .cart-item { padding: 10px; border-bottom: 1px solid #ccc; }
        .cart-total { font-weight: bold; padding: 20px 0; }
        .buttons { margin-top: 10px; }
    </style>
</head>
<body>
    <h1>Shopping Cart</h1>

    <!-- Add item form -->
    <form method="post" action="">
        <input type="text" name="product_id" placeholder="Enter product ID">
        <input type="number" name="quantity" min="1" value="1">
        <button type="submit" name="add_to_cart">Add to Cart</button>
    </form>

    <?php if (!empty($_SESSION['cart'])): ?>
        <!-- Display cart items -->
        <div class="cart-items">
            <?php foreach ($_SESSION['cart'] as $product_id => $item): ?>
                <div class="cart-item">
                    <?php echo $item['name']; ?> -
                    Quantity: <?php echo $item['quantity']; ?> -
                    Price: $<?php echo number_format($item['price'], 2); ?>
                    <form method="post" action="" style="display: inline;">
                        <input type="hidden" name="product_id" value="<?php echo $product_id; ?>">
                        <button type="submit" name="remove_item">Remove</button>
                    </form>
                </div>
            <?php endforeach; ?>
        </div>

        <!-- Total price -->
        <div class="cart-total">
            Total: $<?php echo number_format($total_price, 2); ?>
        </div>

        <!-- Checkout button -->
        <div class="buttons">
            <a href="/checkout.php">Proceed to Checkout</a>
        </div>
    <?php else: ?>
        <p>Your cart is empty.</p>
        <a href="/products.php">Continue Shopping</a>
    <?php endif; ?>

    <!-- Continue shopping link -->
    <div class="buttons">
        <a href="/products.php">Continue Shopping</a>
    </div>
</body>
</html>


<?php
// Initialize the session
session_start();

// Set up some sample products (these could come from a database)
$products = array(
    1 => array('name' => 'Product 1', 'price' => 29.99),
    2 => array('name' => 'Product 2', 'price' => 49.99),
    3 => array('name' => 'Product 3', 'price' => 19.99)
);

// Check if the cart exists in the session, if not create it
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add an item to the cart
function addToCart($productId) {
    global $products;
    
    // Generate a unique ID for the cart item
    $uniqueId = uniqid();
    
    if (isset($products[$productId])) {
        $item = $products[$productId];
        $_SESSION['cart'][$uniqueId] = array(
            'id' => $uniqueId,
            'product_id' => $productId,
            'name' => $item['name'],
            'price' => $item['price'],
            'quantity' => 1
        );
    }
}

// Function to update the quantity of an item in the cart
function updateQuantity($cartItemId, $operation) {
    if (isset($_SESSION['cart'][$cartItemId])) {
        if ($operation == 'increase') {
            $_SESSION['cart'][$cartItemId]['quantity']++;
        } elseif ($operation == 'decrease') {
            if ($_SESSION['cart'][$cartItemId]['quantity'] > 1) {
                $_SESSION['cart'][$cartItemId]['quantity']--;
            }
        }
    }
}

// Function to remove an item from the cart
function removeFromCart($cartItemId) {
    unset($_SESSION['cart'][$cartItemId]);
}

// Example usage:
if (isset($_GET['action'])) {
    switch ($_GET['action']) {
        case 'add':
            addToCart($_GET['product_id']);
            break;
        case 'update':
            updateQuantity($_GET['item_id'], $_GET['operation']);
            break;
        case 'remove':
            removeFromCart($_GET['item_id']);
            break;
    }
}

// Display the cart contents
echo "<h2>Shopping Cart</h2>";
echo "<p>Total items: " . count($_SESSION['cart']) . "</p>";

if (!empty($_SESSION['cart'])) {
    echo "<table border='1'>";
    echo "<tr><th>Product Name</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>";
    
    foreach ($_SESSION['cart'] as $item) {
        $total = $item['price'] * $item['quantity'];
        echo "<tr>";
        echo "<td>{$item['name']}</td>";
        echo "<td>$" . number_format($item['price'], 2) . "</td>";
        echo "<td><a href='?action=update&item_id={$item['id']}&operation=decrease'>-</a> {$item['quantity']} <a href='?action=update&item_id={$item['id']}&operation=increase'>+</a></td>";
        echo "<td>$" . number_format($total, 2) . "</td>";
        echo "<td><a href='?action=remove&item_id={$item['id']}'>Remove</a></td>";
        echo "</tr>";
    }
    
    echo "</table>";
} else {
    echo "<p>Your cart is empty.</p>";
}
?>

<h2>Available Products</h2>
<table border="1">
<tr><th>Product Name</th><th>Price</th><th>Action</th></tr>
<?php foreach ($products as $id => $product): ?>
<tr>
    <td><?php echo $product['name']; ?></td>
    <td>$<?php echo number_format($product['price'], 2); ?></td>
    <td><a href="?action=add&product_id=<?php echo $id; ?>">Add to Cart</a></td>
</tr>
<?php endforeach; ?>
</table>


<?php
// Start the session
session_start();

// Initialize cart if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function addToCart($productId, $productName, $price) {
    global $cart;
    
    // Check if product already exists in the cart
    if (isset($_SESSION['cart'][$productId])) {
        // Increment quantity
        $_SESSION['cart'][$productId]['quantity']++;
    } else {
        // Add new product to the cart
        $_SESSION['cart'][$productId] = array(
            'product_id' => $productId,
            'product_name' => $productName,
            'price' => $price,
            'quantity' => 1
        );
    }
}

// Function to update item quantity in cart
function updateCart($productId, $quantity) {
    if (isset($_SESSION['cart'][$productId])) {
        $_SESSION['cart'][$productId]['quantity'] = $quantity;
        
        // If quantity is zero or less, remove the product from cart
        if ($quantity <= 0) {
            unset($_SESSION['cart'][$productId]);
        }
    }
}

// Function to remove item from cart
function removeFromCart($productId) {
    if (isset($_SESSION['cart'][$productId])) {
        unset($_SESSION['cart'][$productId]);
    }
}

// Function to calculate total price of items in the cart
function calculateTotal() {
    $total = 0;
    
    foreach ($_SESSION['cart'] as $item) {
        $total += ($item['price'] * $item['quantity']);
    }
    
    return number_format($total, 2);
}

// Example usage:
// Adding an item to the cart
// addToCart(1, 'Product 1', 10.99);

// Updating quantity of an item in the cart
// updateCart(1, 3);

// Removing an item from the cart
// removeFromCart(1);

// Calculating total price
$total = calculateTotal();

// Displaying the cart content
echo "<h2>Your Cart</h2>";
if (empty($_SESSION['cart'])) {
    echo "Your cart is empty.";
} else {
    echo "<table border='1'>";
    echo "<tr><th>Product Name</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>";
    
    foreach ($_SESSION['cart'] as $item) {
        $totalItem = $item['price'] * $item['quantity'];
        echo "<tr>";
        echo "<td>{$item['product_name']}</td>";
        echo "<td>$".number_format($item['price'], 2)."</td>";
        echo "<td><input type='number' value='{$item['quantity']}' onchange='updateQuantity(".$item['product_id'].", this.value)'></td>";
        echo "<td>$".number_format($totalItem, 2)."</td>";
        echo "<td><button onclick='removeFromCart(".$item['product_id'].")'>Remove</button></td>";
        echo "</tr>";
    }
    
    echo "</table>";
    echo "<h3>Total: $".number_format($total, 2)."</h3>";
}

// Include JavaScript for dynamic updates
?>


<?php
// Start the session
session_start();

// Initialize cart if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function addToCart($productId, $name, $price) {
    global $addToCart;
    
    // Check if product is already in cart
    $found = false;
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['product_id'] == $productId) {
            $item['quantity']++;
            $found = true;
            break;
        }
    }
    
    // If not found, add new product to cart
    if (!$found) {
        $_SESSION['cart'][] = array(
            'product_id' => $productId,
            'name' => $name,
            'price' => $price,
            'quantity' => 1
        );
    }
}

// Function to display cart
function displayCart() {
    echo "<table border='1'>";
    echo "<tr><th>Product Name</th><th>Quantity</th><th>Price</th><th>Total</th><th>Action</th></tr>";
    
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $subtotal = $item['price'] * $item['quantity'];
        $total += $subtotal;
        
        echo "<tr>";
        echo "<td>" . $item['name'] . "</td>";
        echo "<td><input type='number' name='quantity[" . $item['product_id'] . "]' value='" . $item['quantity'] . "'></td>";
        echo "<td>$" . number_format($item['price'], 2) . "</td>";
        echo "<td>$" . number_format($subtotal, 2) . "</td>";
        echo "<td><a href='cart.php?action=remove&product_id=" . $item['product_id'] . "'>Remove</a></td>";
        echo "</tr>";
    }
    
    echo "<tr><td colspan='4'><strong>Total:</strong> $" . number_format($total, 2) . "</td></tr>";
    echo "</table>";
}

// Function to remove item from cart
function removeItemFromCart($productId) {
    foreach ($_SESSION['cart'] as $key => $item) {
        if ($item['product_id'] == $productId) {
            unset($_SESSION['cart'][$key]);
            break;
        }
    }
    
    // Re-index the array to avoid empty keys
    $_SESSION['cart'] = array_values($_SESSION['cart']);
}

// Example usage:
// 1. Add an item to cart (call this from a form or link)
// addToCart(1, 'Product A', 29.99);

// 2. Display the cart contents
displayCart();

// 3. Remove an item from cart (call this via URL with product_id parameter)
if (isset($_GET['action']) && $_GET['action'] == 'remove' && isset($_GET['product_id'])) {
    removeItemFromCart($_GET['product_id']);
}
?>



<?php
session_start();

// Add item when form is submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $productId = 1;
    $name = 'Product A';
    $price = 29.99;
    
    addToCart($productId, $name, $price);
}

displayCart();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <!-- Add product form -->
    <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
        <input type="hidden" name="product_id" value="1">
        <input type="submit" name="add_to_cart" value="Add to Cart">
    </form>

    <?php displayCart(); ?>
</body>
</html>


<?php
session_start();

// Set up the save path for sessions if not already set
$savePath = 'path/to/session/directory';
if (!ini_get('session.save_path')) {
    ini_set('session.save_path', $savePath);
}
?>


// Sample product data (you would typically fetch this from a database)
$products = [
    1 => [
        'id' => 1,
        'name' => 'Laptop',
        'price' => 999.99,
        'quantity' => 5 // Stock quantity
    ],
    2 => [
        'id' => 2,
        'name' => 'Smartphone',
        'price' => 699.99,
        'quantity' => 10
    ],
    3 => [
        'id' => 3,
        'name' => 'Tablet',
        'price' => 299.99,
        'quantity' => 15
    ]
];


function addToCart($productId, $products) {
    global $products;
    
    // Check if the product exists in the products array
    if (!isset($products[$productId])) {
        return false;
    }
    
    // Get product details
    $product = $products[$productId];
    
    // Initialize cart session if it doesn't exist
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = [];
    }
    
    // Check if the product is already in the cart
    if (isset($_SESSION['cart'][$productId])) {
        // Increment quantity, ensuring we don't exceed stock
        $currentQuantity = $_SESSION['cart'][$productId]['quantity'];
        $newQuantity = $currentQuantity + 1;
        
        if ($newQuantity <= $product['quantity']) {
            $_SESSION['cart'][$productId]['quantity'] = $newQuantity;
        }
    } else {
        // Add the product to the cart with a quantity of 1
        $_SESSION['cart'][$productId] = [
            'id' => $productId,
            'name' => $product['name'],
            'price' => $product['price'],
            'quantity' => 1
        ];
    }
    
    return true;
}


function removeFromCart($productId) {
    if (isset($_SESSION['cart'][$productId])) {
        unset($_SESSION['cart'][$productId]);
        // Re-index the cart array to maintain clean keys
        $_SESSION['cart'] = array_values($_SESSION['cart']);
        return true;
    }
    return false;
}


function updateQuantity($productId, $newQuantity) {
    if (isset($_SESSION['cart'][$productId])) {
        // Ensure the new quantity is a positive integer and doesn't exceed stock
        $newQuantity = max(1, min((int)$newQuantity, $products[$productId]['quantity']));
        $_SESSION['cart'][$productId]['quantity'] = $newQuantity;
        return true;
    }
    return false;
}


function calculateCartTotal() {
    $total = 0.00;
    
    if (isset($_SESSION['cart'])) {
        foreach ($_SESSION['cart'] as $item) {
            $total += ($item['price'] * $item['quantity']);
        }
    }
    
    return number_format($total, 2); // Format to two decimal places
}


<?php if (!empty($_SESSION['cart'])) : ?>
    <h2>Your Shopping Cart</h2>
    <table>
        <thead>
            <tr>
                <th>Product Name</th>
                <th>Price</th>
                <th>Quantity</th>
                <th>Total</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            <?php foreach ($_SESSION['cart'] as $item) : ?>
                <tr>
                    <td><?php echo $item['name']; ?></td>
                    <td>$<?php echo number_format($item['price'], 2); ?></td>
                    <td><input type="number" min="1" value="<?php echo $item['quantity']; ?>"></td>
                    <td>$<?php echo number_format($item['price'] * $item['quantity'], 2); ?></td>
                    <td><a href="#" onclick="removeFromCart(<?php echo $item['id']; ?>)">Remove</a></td>
                </tr>
            <?php endforeach; ?>
        </tbody>
    </table>
    <p>Total: $<?php echo calculateCartTotal(); ?></p>
<?php else : ?>
    <p>Your cart is empty.</p>
<?php endif; ?>

<script>
function removeFromCart(productId) {
    // Make an AJAX request to remove the item from the cart
    fetch('cart.php?action=remove&productId=' + productId)
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                location.reload(); // Refresh the page to update the cart display
            }
        });
}
</script>


// Add a product to the cart
productId = 1; // Product ID of the laptop
addToCart($productId, $products);

// Remove a product from the cart
removeFromCart(2); // Removes product with ID 2 (Smartphone)

// Update quantity of an item in the cart
updateQuantity(3, 5); // Sets the quantity of product ID 3 to 5

// Calculate and display the total amount
echo "Total Amount: $" . calculateCartTotal();


<?php
session_start();

// Sample product data (you would typically fetch this from a database)
$products = [
    1 => [
        'id' => 1,
        'name' => 'Laptop',
        'price' => 999.99,
        'quantity' => 5 // Stock quantity
    ],
    2 => [
        'id' => 2,
        'name' => 'Smartphone',
        'price' => 699.99,
        'quantity' => 10
    ],
    3 => [
        'id' => 3,
        'name' => 'Tablet',
        'price' => 299.99,
        'quantity' => 15
    ]
];

// Add a product to the cart
if (isset($_GET['action']) && $_GET['action'] == 'add' && isset($_GET['productId'])) {
    $productId = (int)$_GET['productId'];
    addToCart($productId, $products);
}

// Remove a product from the cart
if (isset($_GET['action']) && $_GET['action'] == 'remove' && isset($_GET['productId'])) {
    $productId = (int)$_GET['productId'];
    removeFromCart($productId);
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Shopping Cart</title>
</head>
<body>
    <?php require_once 'cart-functions.php'; ?>
    
    <!-- Display Products -->
    <h1>Available Products</h1>
    <?php foreach ($products as $product) : ?>
        <div style="margin-bottom: 20px;">
            <h3><?php echo $product['name']; ?></h3>
            <p>$<?php echo number_format($product['price'], 2); ?></p>
            <a href="?action=add&productId=<?php echo $product['id']; ?>">Add to Cart</a>
        </div>
    <?php endforeach; ?>

    <!-- Display Cart -->
    <?php if (!empty($_SESSION['cart'])) : ?>
        <h2>Your Cart</h2>
        <table border="1">
            <thead>
                <tr>
                    <th>Product Name</th>
                    <th>Price</th>
                    <th>Quantity</th>
                    <th>Total</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
                <?php foreach ($_SESSION['cart'] as $item) : ?>
                    <tr>
                        <td><?php echo $item['name']; ?></td>
                        <td>$<?php echo number_format($item['price'], 2); ?></td>
                        <td><input type="number" min="1" value="<?php echo $item['quantity']; ?>"></td>
                        <td>$<?php echo number_format($item['price'] * $item['quantity'], 2); ?></td>
                        <td><a href="?action=remove&productId=<?php echo $item['id']; ?>">Remove</a></td>
                    </tr>
                <?php endforeach; ?>
            </tbody>
        </table>
        <p>Total: $<?php echo calculateCartTotal(); ?></p>
    <?php else : ?>
        <p>Your cart is empty.</p>
    <?php endif; ?>

    <!-- Scripts -->
    <script>
        function removeFromCart(productId) {
            fetch('cart.php?action=remove&productId=' + productId)
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        location.reload(); // Refresh the page to update the cart display
                    }
                });
        }
    </script>
</body>
</html>


<?php
session_start();

// Initialize cart if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Adding items to the cart
if (isset($_POST['add_to_cart'])) {
    $item_id = $_POST['item_id'];
    $item_name = $_POST['item_name'];
    $item_price = $_POST['item_price'];
    $quantity = $_POST['quantity'];

    // Check if item already exists in cart
    $found = false;
    foreach ($_SESSION['cart'] as $key => $value) {
        if ($value['id'] == $item_id) {
            // Update quantity instead of adding new item
            $_SESSION['cart'][$key]['quantity'] += $quantity;
            $found = true;
            break;
        }
    }

    if (!$found) {
        // Add new item to cart
        $_SESSION['cart'][] = array(
            'id' => $item_id,
            'name' => $item_name,
            'price' => $item_price,
            'quantity' => $quantity
        );
    }

    // Redirect back to cart page
    header("Location: cart.php");
    exit();
}

// Displaying the cart contents
echo "<h2>Shopping Cart</h2>";
echo "<table border='1'>";
echo "<tr><th>Item Name</th><th>Price</th><th>Quantity</th><th>Total</th></tr>";

$total_price = 0;

foreach ($_SESSION['cart'] as $item) {
    echo "<tr>";
    echo "<td>" . $item['name'] . "</td>";
    echo "<td>$" . number_format($item['price'], 2) . "</td>";
    echo "<td>" . $item['quantity'] . "</td>";
    echo "<td>$" . number_format($item['price'] * $item['quantity'], 2) . "</td>";
    echo "</tr>";

    // Calculate total price
    $total_price += $item['price'] * $item['quantity'];
}

echo "<tr><th colspan='3'>Total:</th><th>$" . number_format($total_price, 2) . "</th></tr>";
echo "</table>";

// Add a link to continue shopping or go to checkout
echo "<p><a href='products.php'>Continue Shopping</a> | <a href='checkout.php'>Checkout</a></p>";
?>


<?php
// Start the session
session_start();

// Initialize the cart if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add item to cart
if (isset($_GET['id']) && isset($_GET['name'])) {
    $productId = $_GET['id'];
    $productName = $_GET['name'];
    
    // Check if the product already exists in the cart
    $found = false;
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['id'] == $productId) {
            $item['quantity']++;
            $found = true;
            break;
        }
    }
    
    // If not found, add it to the cart
    if (!$found) {
        $_SESSION['cart'][] = array(
            'id' => $productId,
            'name' => $productName,
            'quantity' => 1
        );
    }
    
    // Redirect back to prevent form resubmission
    header('Location: view_cart.php');
    exit;
}

// View cart contents
echo "<h2>Shopping Cart</h2>";
if (empty($_SESSION['cart'])) {
    echo "Your cart is empty.";
} else {
    foreach ($_SESSION['cart'] as $item) {
        echo "Product ID: " . $item['id'] . "<br>";
        echo "Product Name: " . $item['name'] . "<br>";
        echo "Quantity: " . $item['quantity'] . "<br><br>";
        
        // Add a remove button
        echo '<a href="view_cart.php?remove=' . $item['id'] . '">Remove</a><br><br>';
    }
}

// Remove item from cart
if (isset($_GET['remove'])) {
    $productId = $_GET['remove'];
    
    // Loop through the cart and remove the product with matching ID
    foreach ($_SESSION['cart'] as $key => $item) {
        if ($item['id'] == $productId) {
            unset($_SESSION['cart'][$key]);
            break;
        }
    }
    
    // Redirect back to prevent form resubmission
    header('Location: view_cart.php');
    exit;
}
?>


<?php
// Start the session
session_start();

// Check if cart exists in session, if not create it
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function addToCart($productId, $name, $price) {
    global $mysqli;
    
    // Check if product is already in cart
    $productExists = false;
    foreach ($_SESSION['cart'] as $key => $item) {
        if ($item['product_id'] == $productId) {
            $_SESSION['cart'][$key]['quantity']++;
            $productExists = true;
            break;
        }
    }

    // If product doesn't exist in cart, add it
    if (!$productExists) {
        $item = array(
            'product_id' => $productId,
            'name' => $name,
            'price' => $price,
            'quantity' => 1,
            'total' => $price * 1
        );
        $_SESSION['cart'][] = $item;
    }
}

// Function to remove item from cart
function removeFromCart($productId) {
    global $mysqli;

    // Search for product in cart and remove it
    foreach ($_SESSION['cart'] as $key => $item) {
        if ($item['product_id'] == $productId) {
            unset($_SESSION['cart'][$key]);
            break;
        }
    }

    // Re-index the cart array
    $_SESSION['cart'] = array_values($_SESSION['cart']);
}

// Function to update quantity of item in cart
function updateQuantity($productId, $quantity) {
    global $mysqli;

    // Search for product in cart and update quantity
    foreach ($_SESSION['cart'] as $key => $item) {
        if ($item['product_id'] == $productId) {
            $_SESSION['cart'][$key]['quantity'] = $quantity;
            $_SESSION['cart'][$key]['total'] = $_SESSION['cart'][$key]['price'] * $quantity;
            break;
        }
    }
}

// Function to calculate cart total
function getCartTotal() {
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += $item['total'];
    }
    return number_format($total, 2);
}

// Example usage:
if (isset($_POST['action'])) {
    switch ($_POST['action']) {
        case 'add':
            addToCart(1, 'Product Name', 19.99);
            break;
        case 'remove':
            removeFromCart(1);
            break;
        case 'update':
            updateQuantity(1, $_POST['quantity']);
            break;
    }
}

// Display cart contents
echo "<h2>Shopping Cart</h2>";
if (empty($_SESSION['cart'])) {
    echo "Your cart is empty.";
} else {
    echo "<table>";
    echo "<tr><th>Product Name</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>";
    foreach ($_SESSION['cart'] as $item) {
        echo "<tr>";
        echo "<td>".$item['name']."</td>";
        echo "<td>$".$item['price']."</td>";
        echo "<td>".$item['quantity']."</td>";
        echo "<td>$".number_format($item['total'], 2)."</td>";
        echo "<td><a href='?action=remove&product_id=".$item['product_id']."'>Remove</a></td>";
        echo "</tr>";
    }
    echo "</table>";
    echo "<p>Cart Total: $".getCartTotal()."</p>";
}
?>


<?php
// Start the session
session_start();

// Check if the cart exists in the session, initialize it if not
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add an item to the cart
function addToCart($productId, $name, $price) {
    global $addToCartError;
    
    // Check if the product is already in the cart
    $productExists = false;
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['id'] == $productId) {
            $productExists = true;
            break;
        }
    }

    if ($productExists) {
        $addToCartError = "Product already in cart.";
    } else {
        // Add new product to the cart
        $_SESSION['cart'][] = array(
            'id' => $productId,
            'name' => $name,
            'price' => $price,
            'quantity' => 1
        );
        $addToCartError = "Product added to cart successfully!";
    }
}

// Function to view the cart
function viewCart() {
    if (empty($_SESSION['cart'])) {
        echo "Your cart is empty.";
    } else {
        foreach ($_SESSION['cart'] as $item) {
            echo "<p>Item: " . $item['name'] . "</p>";
            echo "<p>Price: $" . number_format($item['price'], 2, '.', '') . "</p>";
            echo "<p>Quantity: " . $item['quantity'] . "</p>";
            echo "<hr />";
        }
    }
}

// Function to update item quantity in the cart
function updateCart($productId, $newQuantity) {
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['id'] == $productId) {
            $item['quantity'] = $newQuantity;
            break;
        }
    }
}

// Function to remove an item from the cart
function removeFromCart($productId) {
    $index = 0;
    foreach ($_SESSION['cart'] as $item) {
        if ($item['id'] == $productId) {
            array_splice($_SESSION['cart'], $index, 1);
            break;
        }
        $index++;
    }

    if (empty($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }
}

// Example usage:
addToCart(1, "Laptop", 999.99);

viewCart();

updateCart(1, 2);
echo "<br />";
viewCart();

removeFromCart(1);
echo "<br />";
viewCart();

?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <?php
    // Display the cart items using a foreach loop
    echo "<h3>Your Shopping Cart:</h3>";
    
    if (!empty($_SESSION['cart'])) {
        echo "<ul>";
        foreach ($_SESSION['cart'] as $item) {
            echo "<li>" . $item['name'] . " - $" . number_format($item['price'], 2, '.', '') . "</li>";
        }
        echo "</ul>";
    } else {
        echo "<p>Your cart is empty.</p>";
    }
    ?>

    <!-- Example form to add items -->
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        Product ID: <input type="text" name="product_id"><br>
        Quantity: <input type="number" name="quantity" min="1" value="1"><br>
        <button type="submit">Add to Cart</button>
    </form>

    <?php
    // Handle form submission
    if ($_SERVER['REQUEST_METHOD'] == 'POST') {
        $productId = $_POST['product_id'];
        $quantity = $_POST['quantity'];
        
        // You would typically fetch the product details from a database here
        $name = "Sample Product";
        $price = 19.99;
        
        addToCart($productId, $name, $price);
        echo "<div>" . $addToCartError . "</div>";
    }
    ?>
</body>
</html>


<?php
session_start();
?>


function addToCart($productId, $name, $price) {
    // Initialize cart if it doesn't exist
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }

    // Check if product already exists in cart
    if (isset($_SESSION['cart'][$productId])) {
        // If exists, increment quantity
        $_SESSION['cart'][$productId]['quantity']++;
    } else {
        // If not, add new item
        $_SESSION['cart'][$productId] = array(
            'name' => $name,
            'price' => $price,
            'quantity' => 1
        );
    }
}


function viewCart() {
    if (isset($_SESSION['cart'])) {
        foreach ($_SESSION['cart'] as $product) {
            echo "Product Name: " . $product['name'] . "<br />";
            echo "Price: $" . number_format($product['price'], 2, '.', '') . "<br />";
            echo "Quantity: " . $product['quantity'] . "<br />";
            echo "Total Price: $" . number_format(($product['price'] * $product['quantity']), 2, '.', '') . "<br />";
            echo "-------------------------------<br />";
        }
    } else {
        echo "Your cart is empty!";
    }
}


function updateQuantity($productId, $newQuantity) {
    if (isset($_SESSION['cart'][$productId])) {
        // Ensure new quantity is positive integer
        $newQuantity = max(1, intval($newQuantity));
        $_SESSION['cart'][$productId]['quantity'] = $newQuantity;
    }
}


function removeFromCart($productId) {
    if (isset($_SESSION['cart'][$productId])) {
        unset($_SESSION['cart'][$productId]);
        // Re-index the session array to prevent issues with empty indices
        $_SESSION['cart'] = array_values($_SESSION['cart']);
    }
}


<?php
session_start();

// Add an item to cart
if (isset($_POST['add_to_cart'])) {
    $productId = $_POST['product_id'];
    $name = "Product Name";
    $price = 99.99;
    addToCart($productId, $name, $price);
}

// Update quantity
if (isset($_POST['update_quantity'])) {
    $productId = $_POST['product_id'];
    $quantity = $_POST['quantity'];
    updateQuantity($productId, $quantity);
}

// Remove item from cart
if (isset($_POST['remove_from_cart'])) {
    $productId = $_POST['product_id'];
    removeFromCart($productId);
}

// Display the current cart contents
viewCart();
?>


<?php
// Initialize session
session_start();

// Check if the cart exists in the session. If not, initialize it as an empty array
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add item to cart
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get product details from form submission or database
    $productId = isset($_POST['product_id']) ? intval($_POST['product_id']) : 0;
    $quantity = isset($_POST['quantity']) ? intval($_POST['quantity']) : 1;

    if ($productId > 0) {
        // Check if the product already exists in the cart
        if (isset($_SESSION['cart'][$productId])) {
            // Update quantity
            $_SESSION['cart'][$productId]['quantity'] += $quantity;
        } else {
            // Add new product to cart
            $_SESSION['cart'][$productId] = array(
                'product_id' => $productId,
                'quantity' => $quantity
            );
        }
    }
}

// Display cart contents
echo "<h2>Your Shopping Cart</h2>";
if (empty($_SESSION['cart'])) {
    echo "Your cart is empty.";
} else {
    echo "<ul>";
    foreach ($_SESSION['cart'] as $item) {
        echo "<li>Product ID: " . $item['product_id'] . ", Quantity: " . $item['quantity'] . 
             " <form action='cart.php' method='post'>
                    <input type='hidden' name='action' value='update'>
                    <input type='hidden' name='product_id' value='" . $item['product_id'] . "'>
                    <input type='text' name='quantity' value='" . $item['quantity'] . "'>
                    <button type='submit'>Update</button>
                </form>
                <form action='cart.php' method='post'>
                    <input type='hidden' name='action' value='remove'>
                    <input type='hidden' name='product_id' value='" . $item['product_id'] . "'>
                    <button type='submit'>Remove</button>
                </form>
             </li>";
    }
    echo "</ul>";
}

// Handle update and remove actions
if ($_SERVER["REQUEST_METHOD"] == "POST" && isset($_POST['action'])) {
    $productId = intval($_POST['product_id']);
    if ($_POST['action'] == 'update') {
        $quantity = intval($_POST['quantity']);
        if ($quantity > 0) {
            $_SESSION['cart'][$productId]['quantity'] = $quantity;
        }
    } elseif ($_POST['action'] == 'remove') {
        unset($_SESSION['cart'][$productId]);
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <h1>Add Items to Cart</h1>
    <form action="cart.php" method="post">
        Product ID: <input type="number" name="product_id" required><br>
        Quantity: <input type="number" name="quantity" min="1" value="1"><br>
        <button type="submit">Add to Cart</button>
    </form>
</body>
</html>


<?php
// Start the session
session_start();
?>


if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}


// Assuming $product_id, $product_name, $price are provided by your application logic

$product_id = $_GET['id']; // For example purposes; in real app, validate input
$product_name = "Product Name";
$price = 19.99;

if (isset($_POST['add_to_cart'])) {
    $quantity = isset($_POST['quantity']) ? intval($_POST['quantity']) : 1;

    if (!array_key_exists($product_id, $_SESSION['cart'])) {
        // Add new product to cart
        $_SESSION['cart'][$product_id] = array(
            'id' => $product_id,
            'name' => $product_name,
            'price' => $price,
            'quantity' => $quantity
        );
    } else {
        // Update quantity if product already exists in cart
        $_SESSION['cart'][$product_id]['quantity'] += $quantity;
    }
}


if (!empty($_SESSION['cart'])) {
    foreach ($_SESSION['cart'] as $item) {
        echo "<p>";
        echo "ID: " . $item['id'] . "<br />";
        echo "Name: " . $item['name'] . "<br />";
        echo "Price: $" . number_format($item['price'], 2) . "<br />";
        echo "Quantity: " . $item['quantity'] . "<br />";
        echo "</p>";
    }
} else {
    echo "Your cart is empty!";
}


if (isset($_GET['remove'])) {
    $product_id = $_GET['remove'];
    
    if (array_key_exists($product_id, $_SESSION['cart'])) {
        unset($_SESSION['cart'][$product_id]);
        // Re-index the array keys to avoid gaps
        $_SESSION['cart'] = array_values($_SESSION['cart']);
    }
}


if (isset($_GET['clear'])) {
    unset($_SESSION['cart']);
    // Optionally, reset the session variable
    $_SESSION['cart'] = array();
}


<?php
session_start();

// Display cart contents
echo "<h2>Your Shopping Cart</h2>";
if (!empty($_SESSION['cart'])) {
    foreach ($_SESSION['cart'] as $item) {
        echo "<div style='border: 1px solid #ccc; padding: 10px; margin-bottom: 5px;'>";
        echo "ID: " . $item['id'] . "<br />";
        echo "Name: " . $item['name'] . "<br />";
        echo "Price: $" . number_format($item['price'], 2) . "<br />";
        echo "Quantity: " . $item['quantity'] . "<br />";
        echo "</div>";
    }
} else {
    echo "Your cart is empty!";
}

echo '<br />';
echo '<a href="remove_item.php?clear=true">Clear Cart</a>';
?>


<?php
session_start();

// Add an item to the cart (this would be called from a form submission)
$product_id = $_POST['product_id'];
$product_name = $_POST['product_name'];
$price = floatval($_POST['price']);
$quantity = intval(isset($_POST['quantity']) ? $_POST['quantity'] : 1);

if (!array_key_exists($product_id, $_SESSION['cart'])) {
    $_SESSION['cart'][$product_id] = array(
        'id' => $product_id,
        'name' => $product_name,
        'price' => $price,
        'quantity' => $quantity
    );
} else {
    $_SESSION['cart'][$product_id]['quantity'] += $quantity;
}

// Redirect back to the product page or cart display
header("Location: display_cart.php");
exit();
?>


<?php
session_start();

if (isset($_GET['remove'])) {
    $product_id = $_GET['remove'];
    
    if (array_key_exists($product_id, $_SESSION['cart'])) {
        unset($_SESSION['cart'][$product_id]);
        // Re-index the array keys to avoid gaps
        $_SESSION['cart'] = array_values($_SESSION['cart']);
    }
} elseif (isset($_GET['clear'])) {
    unset($_SESSION['cart']);
    $_SESSION['cart'] = array();
}

// Redirect back to cart display
header("Location: display_cart.php");
exit();
?>


// Logout script (logout.php)
<?php
session_start();
session_unset(); // Unset all session variables
session_destroy(); // Destroy the session
header("Location: login.php");
exit();
?>


<?php
// Start the session
session_start();

// Check if the cart exists in the session. If not, initialize it as an empty array.
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Adding items to the cart

// Example product data (you would typically retrieve this from a database)
$product_id = 1;
$product_name = "Product 1";
$product_price = 9.99;

// Check if the product is already in the cart
if (isset($_SESSION['cart'][$product_id])) {
    // Increment quantity
    $_SESSION['cart'][$product_id]['quantity']++;
} else {
    // Add new product to cart
    $_SESSION['cart'][$product_id] = array(
        'name' => $product_name,
        'price' => $product_price,
        'quantity' => 1
    );
}

// Displaying items in the cart

echo "<h2>Your Cart</h2>";
if (empty($_SESSION['cart'])) {
    echo "Your cart is empty.";
} else {
    foreach ($_SESSION['cart'] as $item) {
        echo "<div>";
            echo "<p>Product: " . $item['name'] . "</p>";
            echo "<p>Price: $" . number_format($item['price'], 2) . "</p>";
            echo "<p>Quantity: " . $item['quantity'] . "</p>";
            echo "<form action='remove_item.php' method='post'>";
                echo "<input type='hidden' name='product_id' value='" . $item['id'] . "'>";
                echo "<button type='submit'>Remove</button>";
            echo "</form>";
        echo "</div>";
    }
}

// Removing items from the cart

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $product_id = $_POST['product_id'];
    unset($_SESSION['cart'][$product_id]);
}
?>

<!-- Add to Cart Button -->
<form action="add_to_cart.php" method="post">
    <input type="hidden" name="product_id" value="<?php echo $product_id; ?>">
    <button type="submit">Add to Cart</button>
</form>


<?php
// Start the session
session_start();

// Initialize cart if not already set
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Check if action is specified
if (isset($_GET['action'])) {
    $action = $_GET['action'];
    
    switch ($action) {
        case 'add':
            // Add item to cart
            $productId = intval($_GET['id']);
            
            if (!array_key_exists($productId, $_SESSION['cart'])) {
                $_SESSION['cart'][$productId] = array(
                    'id' => $productId,
                    'name' => 'Product ' . $productId,
                    'price' => 100 * $productId,
                    'quantity' => 1
                );
            } else {
                $_SESSION['cart'][$productId]['quantity']++;
            }
            
            header('Location: cart.php');
            exit();
            break;
            
        case 'remove':
            // Remove item from cart
            $productId = intval($_GET['id']);
            
            if (array_key_exists($productId, $_SESSION['cart'])) {
                $key = array_search($productId, array_column($_SESSION['cart'], 'id'));
                unset($_SESSION['cart'][$key]);
                
                // Re-index the array keys
                $_SESSION['cart'] = array_values($_SESSION['cart']);
            }
            
            header('Location: cart.php');
            exit();
            break;
            
        case 'update':
            // Update item quantity
            $productId = intval($_GET['id']);
            $newQuantity = max(1, intval($_GET['quantity']));
            
            if (array_key_exists($productId, $_SESSION['cart'])) {
                $_SESSION['cart'][$productId]['quantity'] = $newQuantity;
            }
            
            header('Location: cart.php');
            exit();
            break;
            
        case 'clear':
            // Clear all items from cart
            $_SESSION['cart'] = array();
            
            header('Location: cart.php');
            exit();
            break;
    }
}

// Display cart contents
echo "<h1>Shopping Cart</h1>";
echo "<p><a href='index.php'>Continue Shopping</a></p>";

if (empty($_SESSION['cart'])) {
    echo "<p>Your cart is empty.</p>";
} else {
    echo "<table border='1'>";
    echo "<tr><th>Product</th><th>Price</th><th>Quantity</th><th>Total</th><th>Actions</th></tr>";
    
    foreach ($_SESSION['cart'] as $item) {
        $total = $item['price'] * $item['quantity'];
        
        echo "<tr>";
        echo "<td>{$item['name']}</td>";
        echo "<td>\${$item['price']}</td>";
        echo "<td><input type='number' value='{$item['quantity']}' min='1'></td>";
        echo "<td>\${$total}</td>";
        echo "<td>";
        echo "<a href='cart.php?action=remove&id={$item['id']}'>Remove</a> | ";
        echo "<a href='cart.php?action=update&id={$item['id']}&quantity=" . (isset($_GET['quantity']) ? $_GET['quantity'] : 1) . "'>";
        if (isset($_GET['quantity'])) {
            echo "Update Quantity";
        } else {
            echo "Update";
        }
        echo "</a>";
        echo "</td>";
        echo "</tr>";
    }
    
    $grandTotal = array_sum(array_column($_SESSION['cart'], 'price')) * array_sum(array_column($_SESSION['cart'], 'quantity'));
    echo "<tr><td colspan='4'><strong>Grand Total:</strong></td><td>\${$grandTotal}</td></tr>";
    echo "</table>";
    
    echo "<p><a href='cart.php?action=clear'>Clear Cart</a></p>";
}
?>


<?php
// Start the session
session_start();

// Initialize cart if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add item to cart
function addToCart($productId, $productName, $productPrice) {
    // Check if product already exists in cart
    if (isset($_SESSION['cart'][$productId])) {
        // Increment quantity
        $_SESSION['cart'][$productId]['quantity']++;
    } else {
        // Add new product
        $_SESSION['cart'][$productId] = array(
            'product_id' => $productId,
            'product_name' => $productName,
            'price' => $productPrice,
            'quantity' => 1
        );
    }
}

// Remove item from cart
function removeFromCart($productId) {
    if (isset($_SESSION['cart'][$productId])) {
        unset($_SESSION['cart'][$productId]);
    }
}

// Update quantity of an item in cart
function updateQuantity($productId, $newQuantity) {
    if (isset($_SESSION['cart'][$productId]) && is_numeric($newQuantity)) {
        $_SESSION['cart'][$productId]['quantity'] = $newQuantity;
    }
}

// Calculate total price
function calculateTotal() {
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += ($item['price'] * $item['quantity']);
    }
    return $total;
}

// Display cart contents
function displayCart() {
    if (!empty($_SESSION['cart'])) {
        echo "<table>";
        echo "<tr><th>Product</th><th>Price</th><th>Quantity</th><th>Total</th></tr>";
        foreach ($_SESSION['cart'] as $item) {
            echo "<tr>";
            echo "<td>" . $item['product_name'] . "</td>";
            echo "<td>$" . number_format($item['price'], 2) . "</td>";
            echo "<td><input type='number' value='" . $item['quantity'] . "' onchange='updateQuantity(" . $item['product_id'] . ", this.value);'></td>";
            echo "<td>$" . number_format(($item['price'] * $item['quantity']), 2) . "</td>";
            echo "<td><button onclick='removeFromCart(" . $item['product_id'] . ");'>Remove</button></td>";
            echo "</tr>";
        }
        echo "</table>";
        echo "<p>Total: $" . number_format(calculateTotal(), 2) . "</p>";
    } else {
        echo "Your cart is empty.";
    }
}

// Example usage:
if (isset($_GET['action'])) {
    switch ($_GET['action']) {
        case 'add':
            addToCart(1, 'Product 1', 29.99);
            header("Location: $_SERVER[PHP_SELF]");
            break;
        
        case 'remove':
            removeFromCart($_GET['id']);
            header("Location: $_SERVER[PHP_SELF]");
            break;
        
        case 'update':
            updateQuantity($_GET['id'], $_GET['quantity']);
            header("Location: $_SERVER[PHP_SELF]");
            break;
    }
}

// Display cart
if (isset($_SESSION['cart'])) {
    displayCart();
} else {
    echo "No items in cart.";
}
?>


<?php
// Start the session
session_start();

// Initialize cart if not already set
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function addToCart($productId, $name, $price) {
    global $mysqli;
    
    // Check if product is already in the cart
    $itemIndex = -1;
    for ($i = 0; $i < count($_SESSION['cart']); $i++) {
        if ($_SESSION['cart'][$i]['product_id'] == $productId) {
            $itemIndex = $i;
            break;
        }
    }

    // If product is not in cart, add it
    if ($itemIndex == -1) {
        $itemArray = array(
            'product_id' => $productId,
            'name' => $name,
            'price' => $price,
            'quantity' => 1
        );
        $_SESSION['cart'][] = $itemArray;
    } else {
        // If product is already in cart, increment quantity
        $_SESSION['cart'][$itemIndex]['quantity']++;
    }

    // Save the updated cart to session
    $_SESSION['cart'] = $_SESSION['cart'];
    session_write_close();
}

// Function to display cart items
function displayCart() {
    $totalPrice = 0;
    
    echo "<h2>Shopping Cart</h2>";
    echo "<table border='1'>";
    echo "<tr><th>Product Name</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>";

    foreach ($_SESSION['cart'] as $item) {
        $subtotal = $item['price'] * $item['quantity'];
        $totalPrice += $subtotal;
        
        echo "<tr>";
        echo "<td>" . $item['name'] . "</td>";
        echo "<td>$" . number_format($item['price'], 2) . "</td>";
        echo "<td><input type='number' value='" . $item['quantity'] . "' onchange='updateQuantity(" . $item['product_id'] . ", this.value)'></td>";
        echo "<td>$" . number_format($subtotal, 2) . "</td>";
        echo "<td><a href='remove_from_cart.php?id=" . $item['product_id'] . "'>Remove</a></td>";
        echo "</tr>";
    }

    echo "<tr><td colspan='4' style='text-align:right'><strong>Total:</strong></td><td>$" . number_format($totalPrice, 2) . "</td></tr>";
    echo "</table>";
}

// Example usage:
if (isset($_GET['action']) && $_GET['action'] == 'add') {
    $productId = intval($_GET['id']);
    $name = "Product " . $productId;
    $price = 19.99; // Replace with actual price
    addToCart($productId, $name, $price);
}

// Display the cart
displayCart();
?>


<?php
session_start();

if (isset($_GET['id']) && is_numeric($_GET['id'])) {
    $productId = intval($_GET['id']);
    
    // Search for the product in the cart
    foreach ($_SESSION['cart'] as $key => $item) {
        if ($item['product_id'] == $productId) {
            unset($_SESSION['cart'][$key]);
            break;
        }
    }
    
    // Re-index the array
    $_SESSION['cart'] = array_values($_SESSION['cart']);
}

header("Location: cart.php");
exit();
?>


<?php
session_start();

// Initialize cart if not already set
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function addToCart($item) {
    global $conn; // Assuming you have a database connection
    
    // Check if the product exists (you should validate this in your application)
    // For simplicity, we'll assume the product exists

    $_SESSION['cart'][$item['id']] = array(
        'id' => $item['id'],
        'name' => $item['name'],
        'price' => $item['price'],
        'quantity' => 1
    );
}

// Function to remove item from cart
function removeFromCart($itemId) {
    if (isset($_SESSION['cart'][$itemId])) {
        unset($_SESSION['cart'][$itemId]);
    }
}

// Function to get cart items
function getCartItems() {
    return isset($_SESSION['cart']) ? $_SESSION['cart'] : array();
}

// Example usage:
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Add item to cart
    if (isset($_POST['add_to_cart'])) {
        $item = array(
            'id' => $_POST['item_id'],
            'name' => $_POST['item_name'],
            'price' => $_POST['item_price']
        );
        addToCart($item);
    }
    
    // Remove item from cart
    if (isset($_POST['remove_from_cart'])) {
        $itemId = $_POST['item_id'];
        removeFromCart($itemId);
    }
}

// Display cart items
$cartItems = getCartItems();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <?php if (!empty($cartItems)): ?>
        <h2>Your Shopping Cart</h2>
        <ul>
            <?php foreach ($cartItems as $item): ?>
                <li>
                    <?php echo $item['name']; ?> - 
                    <?php echo $item['price']; ?> x 
                    <?php echo $item['quantity']; ?>
                    <form action="" method="post">
                        <input type="hidden" name="item_id" value="<?php echo $item['id']; ?>">
                        <button type="submit" name="remove_from_cart">Remove</button>
                    </form>
                </li>
            <?php endforeach; ?>
        </ul>
        <p>Total: <?php echo calculateTotal($cartItems); ?></p>
    <?php else: ?>
        <p>Your cart is empty.</p>
    <?php endif; ?>

    <!-- Add item form -->
    <form action="" method="post">
        <input type="text" name="item_id" placeholder="Item ID" required>
        <input type="text" name="item_name" placeholder="Item Name" required>
        <input type="number" name="item_price" placeholder="Price" required>
        <button type="submit" name="add_to_cart">Add to Cart</button>
    </form>

    <?php
    function calculateTotal($cartItems) {
        $total = 0;
        foreach ($cartItems as $item) {
            $total += $item['price'] * $item['quantity'];
        }
        return $total;
    }
    ?>
</body>
</html>


<?php
// Start the session
session_start();

// Set default time zone (optional but recommended)
date_default_timezone_set('UTC');

// Initialize cart session if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function addToCart($item) {
    global $product_id, $product_name, $product_price;
    
    // Check if the item is already in the cart
    $found = false;
    foreach ($_SESSION['cart'] as &$item_session) {
        if ($item_session['id'] == $item['id']) {
            $item_session['quantity']++;
            $found = true;
            break;
        }
    }
    
    // If item is not found, add it to the cart
    if (!$found) {
        $_SESSION['cart'][] = array(
            'id' => $item['id'],
            'name' => $item['name'],
            'price' => $item['price'],
            'quantity' => 1
        );
    }
}

// Function to update item quantity in cart
function updateCart($item_id, $new_quantity) {
    foreach ($_SESSION['cart'] as &$item_session) {
        if ($item_session['id'] == $item_id) {
            $item_session['quantity'] = $new_quantity;
            break;
        }
    }
}

// Function to remove item from cart
function removeFromCart($item_id) {
    $index = 0;
    foreach ($_SESSION['cart'] as $key => $value) {
        if ($value['id'] == $item_id) {
            unset($_SESSION['cart'][$key]);
            break;
        }
    }
    $_SESSION['cart'] = array_values($_SESSION['cart']); // Re-index the cart
}

// Function to calculate total price
function cartTotal() {
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += ($item['price'] * $item['quantity']);
    }
    return $total;
}

// Example usage:
// Add item to cart
$item1 = array(
    'id' => 1,
    'name' => 'Product 1',
    'price' => 29.99
);
addToCart($item1);

// Update quantity of an item
updateCart(1, 3);

// Remove an item from cart
removeFromCart(1);

// Display cart contents
echo "<h2>Shopping Cart</h2>";
if (empty($_SESSION['cart'])) {
    echo "Your cart is empty.";
} else {
    echo "<table>";
    echo "<tr><th>Item</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>";
    foreach ($_SESSION['cart'] as $item) {
        echo "<tr>";
        echo "<td>" . $item['name'] . "</td>";
        echo "<td>$" . number_format($item['price'], 2) . "</td>";
        echo "<td><input type='number' value='" . $item['quantity'] . "' onchange='updateQuantity(" . $item['id'] . ", this.value)'></td>";
        echo "<td>$" . number_format(($item['price'] * $item['quantity']), 2) . "</td>";
        echo "<td><button onclick='removeFromCart(" . $item['id'] . ")'>Remove</button></td>";
        echo "</tr>";
    }
    echo "</table>";
    
    // Display total price
    echo "<h3>Total: $" . number_format(cartTotal(), 2) . "</h3>";
}

// Optional: Set session cookie parameters (e.g., lifetime, path)
session_set_cookie_params(0, '/');

// Don't forget to close the session if needed
// session_write_close();
?>


<?php
session_start();

// Initialize cart if not set
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Sample product data (for demonstration purposes)
$products = array(
    1 => array('name' => 'Product 1', 'price' => 29.99),
    2 => array('name' => 'Product 2', 'price' => 49.99),
    3 => array('name' => 'Product 3', 'price' => 19.99)
);

// Handle adding items to the cart
if (isset($_POST['action']) && $_POST['action'] == 'add') {
    $item_id = isset($_POST['item_id']) ? intval($_POST['item_id']) : 0;

    if ($item_id != 0) {
        if (!isset($_SESSION['cart'][$item_id])) {
            $_SESSION['cart'][$item_id] = array('quantity' => 1);
        } else {
            $_SESSION['cart'][$item_id]['quantity']++;
        }
    }
}

// Handle removing items from the cart
if (isset($_POST['action']) && $_POST['action'] == 'remove') {
    $item_id = isset($_POST['item_id']) ? intval($_POST['item_id']) : 0;

    if ($item_id != 0) {
        if (isset($_SESSION['cart'][$item_id])) {
            $_SESSION['cart'][$item_id]['quantity']--;
            if ($_SESSION['cart'][$item_id]['quantity'] <= 0) {
                unset($_SESSION['cart'][$item_id]);
            }
        }
    }
}

// Display the cart contents
echo "<h1>Shopping Cart</h1>";
echo "<p><a href='index.php'>Continue Shopping</a></p>";

if (!empty($_SESSION['cart'])) {
    echo "<table border='1'>";
    echo "<tr><th>Product Name</th><th>Price</th><th>Quantity</th><th>Action</th></tr>";
    
    foreach ($_SESSION['cart'] as $item_id => $item) {
        $product = $products[$item_id];
        if ($product) {
            echo "<tr>";
            echo "<td>{$product['name']}</td>";
            echo "<td>$$product[price]</td>";
            echo "<td>{$item['quantity']}</td>";
            echo "<td>";
            echo "<form action='cart.php' method='post'>";
            echo "<input type='hidden' name='action' value='remove'>";
            echo "<input type='hidden' name='item_id' value='$item_id'>";
            echo "<input type='submit' value='Remove'>";
            echo "</form>";
            echo "</td>";
            echo "</tr>";
        }
    }
    
    echo "</table>";
} else {
    echo "Your cart is empty.";
}

// Example form to add items
echo <<<_END
<br>
<h2>Available Products</h2>
<form action="cart.php" method="post">
    <input type="hidden" name="action" value="add">
    <select name="item_id">
        <option value="0">Select a Product</option>
        <option value="1">Product 1 - $29.99</option>
        <option value="2">Product 2 - $49.99</option>
        <option value="3">Product 3 - $19.99</option>
    </select>
    <input type="submit" value="Add to Cart">
</form>
_END;
?>


<?php
session_start();

// Initialize cart if not already set
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add item to cart
if (isset($_POST['add_to_cart'])) {
    // Get product ID from POST request
    $productId = mysqli_real_escape_string($con, $_POST['product_id']);

    if (isset($_SESSION['cart'][$productId])) {
        // If item already exists in cart, increase quantity by 1
        $_SESSION['cart'][$productId]['quantity']++;
    } else {
        // Otherwise, add new item to cart with quantity 1
        $_SESSION['cart'][$productId] = array(
            'product_id' => $productId,
            'quantity' => 1
        );
    }

    // Redirect back to product page
    header('Location: products.php');
    exit();
}

// Remove item from cart
if (isset($_GET['remove'])) {
    $productId = mysqli_real_escape_string($con, $_GET['remove']);
    
    if (isset($_SESSION['cart'][$productId])) {
        unset($_SESSION['cart'][$productId]);
        
        // Redirect back to cart page
        header('Location: cart.php');
        exit();
    }
}

// Display items in cart
echo "<h2>Your Cart</h2>";
if (empty($_SESSION['cart'])) {
    echo "Your cart is empty!";
} else {
    foreach ($_SESSION['cart'] as $item) {
        echo "Product ID: " . $item['product_id'] . ", Quantity: " . $item['quantity'];
        echo "<a href='cart.php?remove=" . $item['product_id'] . "'>Remove</a><br>";
    }
}
?>


<form action="cart.php" method="post">
    <input type="hidden" name="product_id" value="<?php echo $productId; ?>">
    <button type="submit" name="add_to_cart">Add to Cart</button>
</form>


<?php
session_start();

// Initialize cart if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add item to cart
if (isset($_POST['add_to_cart'])) {
    $productId = $_POST['product_id'];
    $productName = $_POST['product_name'];

    // Check if product is already in cart
    $found = false;
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['id'] == $productId) {
            $item['quantity']++;
            $found = true;
            break;
        }
    }

    // If not found, add new item
    if (!$found) {
        $_SESSION['cart'][] = array(
            'id' => $productId,
            'name' => $productName,
            'quantity' => 1
        );
    }

    // Redirect back to cart page
    header('Location: view_cart.php');
}

// View cart contents
if (isset($_GET['action']) && $_GET['action'] == 'view') {
    echo "<h2>Your Cart</h2>";
    echo "<table border='1'>";
    foreach ($_SESSION['cart'] as $item) {
        echo "<tr>";
        echo "<td>Product Name: " . $item['name'] . "</td>";
        echo "<td>Quantity: " . $item['quantity'] . "</td>";
        echo "<td><a href='adjust_quantity.php?action=increment&id=" . $item['id'] . "'>Increment</a></td>";
        echo "<td><a href='adjust_quantity.php?action=decrement&id=" . $item['id'] . "'>Decrement</a></td>";
        echo "<td><a href='remove_item.php?id=" . $item['id'] . "'>Remove</a></td>";
        echo "</tr>";
    }
    echo "</table>";
}

// Adjust quantity
if (isset($_GET['action']) && $_GET['action'] == 'adjust') {
    $quantityChange = ($_GET['type'] == 'increment') ? 1 : -1;
    $productId = $_GET['id'];

    foreach ($_SESSION['cart'] as &$item) {
        if ($item['id'] == $productId) {
            $item['quantity'] += $quantityChange;
            // Ensure quantity doesn't go below 0
            if ($item['quantity'] < 1) {
                $item['quantity'] = 1;
            }
            break;
        }
    }

    // Redirect back to cart page
    header('Location: view_cart.php');
}

// Remove item from cart
if (isset($_GET['action']) && $_GET['action'] == 'remove') {
    $productId = $_GET['id'];

    foreach ($_SESSION['cart'] as $key => $item) {
        if ($item['id'] == $productId) {
            unset($_SESSION['cart'][$key]);
            // Re-index the array
            $_SESSION['cart'] = array_values($_SESSION['cart']);
            break;
        }
    }

    // Redirect back to cart page
    header('Location: view_cart.php');
}
?>


<?php
// Start the session
session_start();

// Initialize the cart if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to the cart
function addToCart($item_id, $item_name, $price) {
    global $cart;
    
    // Check if item is already in the cart
    $found = false;
    foreach ($cart as $index => $item) {
        if ($item['id'] == $item_id) {
            $cart[$index]['quantity']++;
            $found = true;
            break;
        }
    }
    
    // If not found, add new item to the cart
    if (!$found) {
        $cart[] = array(
            'id' => $item_id,
            'name' => $item_name,
            'price' => $price,
            'quantity' => 1
        );
    }
    
    // Update session cart
    $_SESSION['cart'] = $cart;
}

// Function to remove item from the cart
function removeFromCart($item_id) {
    global $cart;
    
    foreach ($cart as $index => $item) {
        if ($item['id'] == $item_id) {
            unset($cart[$index]);
            break;
        }
    }
    
    // Re-index the array
    $cart = array_values($cart);
    
    // Update session cart
    $_SESSION['cart'] = $cart;
}

// Function to update quantity of an item in the cart
function updateQuantity($item_id, $new_quantity) {
    global $cart;
    
    foreach ($cart as $index => $item) {
        if ($item['id'] == $item_id && $new_quantity > 0) {
            $cart[$index]['quantity'] = $new_quantity;
            break;
        }
    }
    
    // Update session cart
    $_SESSION['cart'] = $cart;
}

// Function to display the cart contents
function displayCart() {
    global $cart;
    
    if (empty($cart)) {
        echo "Your cart is empty!";
        return;
    }
    
    foreach ($cart as $item) {
        echo "<div>";
        echo "Item ID: " . $item['id'] . "<br />";
        echo "Name: " . $item['name'] . "<br />";
        echo "Price: $" . number_format($item['price'], 2) . "<br />";
        echo "Quantity: " . $item['quantity'] . "<br />";
        echo "</div>";
    }
}

// Example usage:

// Include header
include('header.php');

// Access the cart session
$cart = $_SESSION['cart'];

// Display cart contents
displayCart();

// Add item to cart
addToCart(1, "Product 1", 29.99);

// Remove item from cart
removeFromCart(1);

// Update quantity of an item
updateQuantity(2, 3);

// Include footer
include('footer.php');
?>


<?php
// Start the session
session_start();

// Check if the cart is already set in the session, initialize it if not
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add an item to the cart
function addToCart($productId, $productName, $productPrice) {
    global $conn; // Assuming you have a database connection

    // Check if the product already exists in the cart
    $found = false;
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['id'] == $productId) {
            $item['quantity']++;
            $found = true;
            break;
        }
    }

    // If not found, add it to the cart
    if (!$found) {
        $_SESSION['cart'][] = array(
            'id' => $productId,
            'name' => $productName,
            'price' => $productPrice,
            'quantity' => 1
        );
    }
}

// Function to remove an item from the cart
function removeFromCart($productId) {
    foreach ($_SESSION['cart'] as $key => &$item) {
        if ($item['id'] == $productId) {
            unset($_SESSION['cart'][$key]);
            break;
        }
    }
    // Re-index the array keys
    $_SESSION['cart'] = array_values($_SESSION['cart']);
}

// Function to update the quantity of an item in the cart
function updateQuantity($productId, $quantity) {
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['id'] == $productId) {
            $item['quantity'] = $quantity;
            break;
        }
    }
}

// Function to calculate total price of items in the cart
function calculateTotal() {
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += ($item['price'] * $item['quantity']);
    }
    return $total;
}

// Displaying the contents of the cart
echo "<h2>Your Cart</h2>";
if (empty($_SESSION['cart'])) {
    echo "Your cart is empty.";
} else {
    echo "<table border='1'>";
    echo "<tr><th>Product Name</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>";
    foreach ($_SESSION['cart'] as $item) {
        echo "<tr>";
        echo "<td>" . $item['name'] . "</td>";
        echo "<td>$" . number_format($item['price'], 2) . "</td>";
        echo "<td><input type='number' value='" . $item['quantity'] . "' onchange='updateQuantity(" . $item['id'] . ", this.value)'></td>";
        echo "<td>$" . number_format(($item['price'] * $item['quantity']), 2) . "</td>";
        echo "<td><button onclick='removeFromCart(" . $item['id'] . ")'>Remove</button></td>";
        echo "</tr>";
    }
    echo "</table>";
    
    // Display total price
    echo "<h3>Total: $" . number_format(calculateTotal(), 2) . "</h3>";
}

// Destroy the session when done
session_unset();
session_destroy();
?>


<?php
// Initialize the session
session_start();

// Check if session exists, if not create it
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add item to cart
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    if (isset($_POST['add_to_cart'])) {
        // Sample product data (you can replace this with your database data)
        $product = array(
            'id' => $_POST['product_id'],
            'name' => $_POST['product_name'],
            'price' => $_POST['product_price'],
            'quantity' => 1
        );

        // Check if product already exists in cart
        $found = false;
        foreach ($_SESSION['cart'] as &$item) {
            if ($item['id'] == $product['id']) {
                $item['quantity']++;
                $found = true;
                break;
            }
        }

        if (!$found) {
            array_push($_SESSION['cart'], $product);
        }
    }
}

// Display cart content
echo "<h2>Shopping Cart</h2>";
if (empty($_SESSION['cart'])) {
    echo "Your cart is empty.";
} else {
    echo "<table border='1'>";
    echo "<tr><th>Product Name</th><th>Price</th><th>Quantity</th><th>Action</th></tr>";
    foreach ($_SESSION['cart'] as $key => $item) {
        echo "<tr>";
        echo "<td>" . $item['name'] . "</td>";
        echo "<td>$" . number_format($item['price'], 2) . "</td>";
        echo "<td><input type='number' min='1' value='" . $item['quantity'] . "'></td>";
        echo "<td><a href='?remove=$key'>Remove</a></td>";
        echo "</tr>";
    }
    echo "</table>";

    // Remove item from cart
    if (isset($_GET['remove'])) {
        array_splice($_SESSION['cart'], $_GET['remove'], 1);
        header("Location: " . $_SERVER['PHP_SELF']);
    }

    // Empty the cart
    if (isset($_POST['empty_cart'])) {
        unset($_SESSION['cart']);
        session_unset();
        session_destroy();
        header("Location: " . $_SERVER['PHP_SELF']);
    }
}

// Display total price and continue shopping option
$total = 0;
foreach ($_SESSION['cart'] as $item) {
    $total += ($item['price'] * $item['quantity']);
}
echo "<p>Total: $" . number_format($total, 2) . "</p>";
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
    <style>
        body { font-family: Arial, sans-serif; }
        table { width: 80%; margin: auto; }
        th, td { padding: 10px; text-align: left; }
    </style>
</head>
<body>
    <h2>Products Available</h2>
    <!-- Add more products here -->
    <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
        <input type="hidden" name="product_id" value="1">
        <input type="hidden" name="product_name" value="Product 1">
        <input type="hidden" name="product_price" value="29.99">
        <button type="submit" name="add_to_cart">Add to Cart</button>
    </form>

    <!-- Add more products here -->
    <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
        <input type="hidden" name="product_id" value="2">
        <input type="hidden" name="product_name" value="Product 2">
        <input type="hidden" name="product_price" value="49.99">
        <button type="submit" name="add_to_cart">Add to Cart</button>
    </form>

    <!-- Empty cart button -->
    <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
        <button type="submit" name="empty_cart">Empty Cart</button>
    </form>

    <!-- Continue shopping link -->
    <p><a href="#">Continue Shopping</a></p>
</body>
</html>


<?php
session_start();
?>


<?php
// Get product details from your database or form
$product_id = isset($_POST['product_id']) ? $_POST['product_id'] : '';
$product_name = isset($_POST['product_name']) ? $_POST['product_name'] : '';
$product_price = isset($_POST['product_price']) ? $_POST['product_price'] : 0;
$quantity = isset($_POST['quantity']) ? $_POST['quantity'] : 1;

// Initialize cart if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add item to the cart
$item = array(
    'id' => $product_id,
    'name' => $product_name,
    'price' => $product_price,
    'quantity' => $quantity
);

$_SESSION['cart'][$product_id] = $item;

echo "Item added to cart!";
?>


<?php
// Check if cart exists in session
if (isset($_SESSION['cart']) && !empty($_SESSION['cart'])) {
    echo "<h2>Shopping Cart</h2>";
    echo "<table border='1'>";
    echo "<tr><th>Product Name</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>";

    foreach ($_SESSION['cart'] as $item) {
        $total = $item['price'] * $item['quantity'];
        echo "<tr>";
        echo "<td>".$item['name']."</td>";
        echo "<td>$".$item['price']."</td>";
        echo "<td>".$item['quantity']."</td>";
        echo "<td>$".number_format($total, 2)."</td>";
        echo "<td><a href='remove_item.php?id=".$item['id']."'>Remove</a></td>";
        echo "</tr>";
    }

    // Calculate cart total
    $cart_total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $cart_total += ($item['price'] * $item['quantity']);
    }
    echo "<tr><td colspan='4'><strong>Cart Total:</strong></td><td>$".number_format($cart_total, 2)."</td></tr>";
    echo "</table>";
} else {
    echo "Your cart is empty!";
}
?>


<?php
session_start();

// Get product ID from URL
$product_id = isset($_GET['id']) ? $_GET['id'] : '';

if (!empty($product_id)) {
    // Remove the item from cart
    unset($_SESSION['cart'][$product_id]);

    // If cart becomes empty, reset it
    if (empty($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }
}

// Redirect back to cart page
header("Location: view_cart.php");
exit();
?>


<?php
session_start();

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $product_id = isset($_POST['product_id']) ? $_POST['product_id'] : '';
    $new_quantity = isset($_POST['quantity']) ? $_POST['quantity'] : 1;

    if (!empty($product_id)) {
        // Update quantity
        $_SESSION['cart'][$product_id]['quantity'] = $new_quantity;
    }
}

// Redirect back to cart page
header("Location: view_cart.php");
exit();
?>


<?php
// Start the session
session_start();

// Set session parameters (optional but recommended for security)
ini_set('session.cookie_httponly', 1);
ini_set('session.cookie_secure', 1); // Only use cookies over HTTPS

// Create a unique session name if desired
session_name("shopping_cart_session");

// Check if the cart exists in the session, create it if not
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add an item to the cart
function add_to_cart($item_id, $quantity) {
    global $products;

    // Check if the item already exists in the cart
    if (isset($_SESSION['cart'][$item_id])) {
        // If it does, increment the quantity
        $_SESSION['cart'][$item_id]['quantity'] += $quantity;
    } else {
        // Get product details from your database or array
        $product = $products[$item_id];
        
        // Add the new item to the cart
        $_SESSION['cart'][$item_id] = array(
            'id' => $item_id,
            'name' => $product['name'],
            'price' => $product['price'],
            'quantity' => $quantity
        );
    }
}

// Function to update the quantity of an item in the cart
function update_quantity($item_id, $new_quantity) {
    if (isset($_SESSION['cart'][$item_id])) {
        $_SESSION['cart'][$item_id]['quantity'] = $new_quantity;
    }
}

// Function to remove an item from the cart
function remove_from_cart($item_id) {
    if (isset($_SESSION['cart'][$item_id])) {
        unset($_SESSION['cart'][$item_id]);
    }
}

// Function to display the contents of the cart
function display_cart() {
    echo "<h2>Shopping Cart</h2>";
    echo "<table border='1'>";
    echo "<tr><th>Item ID</th><th>Name</th><th>Quantity</th><th>Price</th><th>Total</th><th>Action</th></tr>";
    
    foreach ($_SESSION['cart'] as $item) {
        $total = $item['price'] * $item['quantity'];
        echo "<tr>";
        echo "<td>{$item['id']}</td>";
        echo "<td>{$item['name']}</td>";
        echo "<td><input type='number' value='{$item['quantity']}' 
                    onchange='updateQuantity(".$item['id'].", this.value)'></td>";
        echo "<td>$".number_format($item['price'], 2)."</td>";
        echo "<td>$".number_format($total, 2)."</td>";
        echo "<td><a href='remove_item.php?id=".$item['id']."'>Remove</a></td>";
        echo "</tr>";
    }
    
    // Calculate and display subtotal
    $subtotal = 0;
    foreach ($_SESSION['cart'] as $item) {
        $subtotal += $item['price'] * $item['quantity'];
    }
    echo "<tr><td colspan='4'><strong>Subtotal:</strong></td><td>$".number_format($subtotal, 2)."</td></tr>";
    echo "</table>";
}

// Sample product list (replace this with your database query)
$products = array(
    1 => array('name' => 'Product A', 'price' => 29.99),
    2 => array('name' => 'Product B', 'price' => 49.99),
    3 => array('name' => 'Product C', 'price' => 19.99)
);

// Add sample items to the cart (for testing)
if (!isset($_SESSION['cart'])) {
    add_to_cart(1, 2);
    add_to_cart(2, 1);
}

// Close the session
session_write_close();
?>


<?php
// Start the session
session_start();

// Check if the cart exists in the session
if (!isset($_SESSION['cart'])) {
    // Initialize an empty cart array
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function addToCart($productId, $quantity) {
    global $connection; // Assuming you have a database connection
    
    // Check if product exists in the database
    $stmt = $connection->prepare("SELECT * FROM products WHERE id = ?");
    $stmt->bind_param("i", $productId);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows > 0) {
        // Check if item already exists in cart
        if (isset($_SESSION['cart'][$productId])) {
            $_SESSION['cart'][$productId] += $quantity;
        } else {
            $_SESSION['cart'][$productId] = $quantity;
        }
        
        return true;
    }
    
    return false; // Product not found
}

// Function to remove item from cart
function removeFromCart($productId) {
    if (isset($_SESSION['cart'][$productId])) {
        unset($_SESSION['cart'][$productId]);
        return true;
    }
    
    return false; // Item not found in cart
}

// Function to clear the entire cart
function clearCart() {
    $_SESSION['cart'] = array();
}

// Function to get cart contents
function getCart() {
    return $_SESSION['cart'];
}

// Function to calculate total price of items in cart
function calculateTotal() {
    $total = 0;
    
    global $connection; // Assuming you have a database connection
    
    foreach ($_SESSION['cart'] as $productId => $quantity) {
        $stmt = $connection->prepare("SELECT price FROM products WHERE id = ?");
        $stmt->bind_param("i", $productId);
        $stmt->execute();
        $result = $stmt->get_result();
        
        if ($result->num_rows > 0) {
            $product = $result->fetch_assoc();
            $total += $product['price'] * $quantity;
        }
    }
    
    return $total;
}

// Example usage:
// Add item to cart
if (isset($_GET['add'])) {
    $productId = $_GET['add'];
    $quantity = 1; // Default quantity
    
    if (addToCart($productId, $quantity)) {
        echo "Item added to cart!";
    } else {
        echo "Error adding item.";
    }
}

// Remove item from cart
if (isset($_GET['remove'])) {
    $productId = $_GET['remove'];
    
    if (removeFromCart($productId)) {
        echo "Item removed from cart!";
    } else {
        echo "Error removing item.";
    }
}

// Clear cart
if (isset($_GET['clear'])) {
    clearCart();
    echo "Cart cleared!";
}

// Get and display cart contents
$cart = getCart();
echo "<pre>";
print_r($cart);
echo "</pre>";

// Display total price
$totalPrice = calculateTotal();
echo "Total Price: $totalPrice";

// Save the session data
session_write_close();
?>


<?php
session_start();

// Function to add item to cart
function addToCart($product_id, $name, $price, $quantity) {
    // Initialize cart if not exists
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }
    
    // Add new item to the cart
    $item = array(
        'product_id' => $product_id,
        'name' => $name,
        'price' => $price,
        'quantity' => $quantity
    );
    
    $_SESSION['cart'][$product_id] = $item;
}

// Function to remove item from cart
function removeFromCart($product_id) {
    if (isset($_SESSION['cart'][$product_id])) {
        unset($_SESSION['cart'][$product_id]);
    }
}

// Display cart items
if (!empty($_SESSION['cart'])) {
    echo "<h2>Your Cart</h2>";
    echo "<ul>";
    
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        echo "<li>" . $item['name'] . " - $" . number_format($item['price'], 2, '.', '') . " x " . $item['quantity'];
        echo " <a href='?action=remove&id=" . $item['product_id'] . "'>Remove</a></li>";
        
        $total += ($item['price'] * $item['quantity']);
    }
    
    echo "</ul>";
    echo "<h3>Total: $" . number_format($total, 2, '.', '') . "</h3>";
} else {
    echo "Your cart is empty!";
}

// Handle actions
if (isset($_GET['action'])) {
    if ($_GET['action'] == 'remove' && isset($_GET['id'])) {
        removeFromCart($_GET['id']);
        header("Location: " . $_SERVER['PHP_SELF']);
        exit();
    }
}
?>


<?php
// Start the session
session_start();

// Check if the cart session exists, if not, initialize it
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function add_to_cart($item_id, $item_name, $price, $quantity) {
    global $mysqli;
    
    // Check if the item is already in the cart
    if (isset($_SESSION['cart'][$item_id])) {
        // If exists, increment quantity
        $_SESSION['cart'][$item_id]['quantity']++;
    } else {
        // If not exists, add new item to cart
        $_SESSION['cart'][$item_id] = array(
            'id' => $item_id,
            'name' => $item_name,
            'price' => $price,
            'quantity' => $quantity
        );
    }
}

// Function to remove item from cart
function remove_from_cart($item_id) {
    if (isset($_SESSION['cart'][$item_id])) {
        unset($_SESSION['cart'][$item_id]);
        // Re-index the cart array
        $_SESSION['cart'] = array_values($_SESSION['cart']);
    }
}

// Function to update item quantity
function update_quantity($item_id, $new_quantity) {
    if (isset($_SESSION['cart'][$item_id])) {
        $_SESSION['cart'][$item_id]['quantity'] = $new_quantity;
    }
}

// Function to display cart items
function display_cart() {
    if (!empty($_SESSION['cart'])) {
        foreach ($_SESSION['cart'] as $item) {
            echo "<div>";
            echo "Item ID: " . $item['id'] . "<br />";
            echo "Item Name: " . $item['name'] . "<br />";
            echo "Price: $" . number_format($item['price'], 2) . "<br />";
            echo "Quantity: " . $item['quantity'] . "<br />";
            echo "</div>";
        }
    } else {
        echo "Your cart is empty.";
    }
}

// Example usage:
session_start();

// Add item to cart
add_to_cart(1, 'Laptop', 999.99, 1);

// Remove item from cart
remove_from_cart(1);

// Update quantity of an item
update_quantity(2, 3);

// Display cart contents
display_cart();

?>


<?php
// Start the session
session_start();

// Function to add item to cart
function addToCart($productId, $productName, $productPrice, $quantity) {
    // Check if the product is already in the cart
    if (isset($_SESSION['cart'])) {
        foreach ($_SESSION['cart'] as $index => $item) {
            if ($item['product_id'] == $productId) {
                // Update quantity
                $_SESSION['cart'][$index]['quantity'] += $quantity;
                return true;
            }
        }
    }

    // Add new product to cart
    $_SESSION['cart'][] = array(
        'product_id' => $productId,
        'product_name' => $productName,
        'product_price' => $productPrice,
        'quantity' => $quantity
    );
}

// Function to display cart contents
function displayCart() {
    if (isset($_SESSION['cart'])) {
        $total = 0;
        echo "<h3>Shopping Cart</h3>";
        echo "<table border='1'>";
        echo "<tr><th>Product Name</th><th>Quantity</th><th>Price</th><th>Total</th></tr>";
        
        foreach ($_SESSION['cart'] as $item) {
            $totalItem = $item['quantity'] * $item['product_price'];
            $total += $totalItem;
            echo "<tr>";
            echo "<td>" . $item['product_name'] . "</td>";
            echo "<td>" . $item['quantity'] . "</td>";
            echo "<td>$$item[product_price]</td>";
            echo "<td>$$totalItem</td>";
            echo "</tr>";
        }
        
        echo "<tr><td colspan='3'>Total:</td><td>$$total</td></tr>";
        echo "</table>";
    } else {
        echo "Your cart is empty!";
    }
}

// Function to remove item from cart
function removeFromCart($productId) {
    if (isset($_SESSION['cart'])) {
        foreach ($_SESSION['cart'] as $index => $item) {
            if ($item['product_id'] == $productId) {
                unset($_SESSION['cart'][$index]);
                // Re-index the array to avoid empty keys
                $_SESSION['cart'] = array_values($_SESSION['cart']);
                return true;
            }
        }
    }
}

// Usage example:
if (isset($_GET['action'])) {
    switch ($_GET['action']) {
        case 'add':
            $productId = isset($_GET['id']) ? intval($_GET['id']) : 0;
            $productName = isset($_GET['name']) ? $_GET['name'] : '';
            $productPrice = isset($_GET['price']) ? floatval($_GET['price']) : 0.0;
            $quantity = isset($_GET['qty']) ? intval($_GET['qty']) : 1;

            addToCart($productId, $productName, $productPrice, $quantity);
            break;

        case 'remove':
            $productId = isset($_GET['id']) ? intval($_GET['id']) : 0;
            removeFromCart($productId);
            break;
    }
}

displayCart();
?>


<?php
// Start the session
session_start();

// Initialize cart if not exists
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Check if product ID is provided in POST request
if (isset($_POST['product_id']) && isset($_POST['quantity'])) {
    $productId = $_POST['product_id'];
    $quantity = $_POST['quantity'];

    // Validate input
    if ($productId !== "" && $quantity > 0) {
        // If product is already in cart, update quantity
        if (isset($_SESSION['cart'][$productId])) {
            $_SESSION['cart'][$productId] += $quantity;
        } else {
            // Add new product to cart
            $_SESSION['cart'][$productId] = $quantity;
        }
    }
}

// Display cart contents
echo "<h2>Shopping Cart</h2>";
echo "<p>Items in your cart:</p>";

if (empty($_SESSION['cart'])) {
    echo "Your cart is empty.";
} else {
    foreach ($_SESSION['cart'] as $productId => $quantity) {
        echo "Product ID: $productId | Quantity: $quantity<br />";
    }
}

// Add a form to add items to the cart
echo "<form method='post' action=''>";
echo "<input type='text' name='product_id' placeholder='Enter Product ID'>";
echo "<input type='number' name='quantity' placeholder='Enter Quantity'>";
echo "<button type='submit'>Add to Cart</button>";
echo "</form>";

// Add a link to clear the cart
echo "<br />";
echo "<a href='clear_cart.php'>Clear Cart</a>";
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <!-- Your HTML content here -->
</body>
</html>


<?php
session_start();
unset($_SESSION['cart']);
header('Location: ' . $_SERVER['HTTP_REFERER']);
exit;
?>


<?php
// Start the session
session_start();

// Initialize cart if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function addToCart($productId, $productName, $price) {
    global $db; // Assuming you have a database connection
    
    // Check if product is already in the cart
    if (isset($_SESSION['cart'][$productId])) {
        echo "Item already exists in cart";
        return;
    }
    
    // Add new item to the cart
    $_SESSION['cart'][$productId] = array(
        'product_id' => $productId,
        'product_name' => $productName,
        'price' => $price,
        'quantity' => 1
    );
    
    echo "Item added to cart successfully!";
}

// Function to update item quantity in cart
function updateCart($productId, $newQuantity) {
    if (isset($_SESSION['cart'][$productId])) {
        $_SESSION['cart'][$productId]['quantity'] = $newQuantity;
        echo "Quantity updated successfully!";
    } else {
        echo "Item not found in cart";
    }
}

// Function to remove item from cart
function removeFromCart($productId) {
    if (isset($_SESSION['cart'][$productId])) {
        unset($_SESSION['cart'][$productId]);
        echo "Item removed from cart successfully!";
    } else {
        echo "Item not found in cart";
    }
}

// Function to display cart contents
function displayCart() {
    $total = 0;
    
    if (empty($_SESSION['cart'])) {
        echo "<p>Your cart is empty.</p>";
        return;
    }
    
    echo "<table border='1'>";
    echo "<tr><th>Product</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>";
    
    foreach ($_SESSION['cart'] as $item) {
        $total += ($item['price'] * $item['quantity']);
        echo "<tr>";
        echo "<td>" . $item['product_name'] . "</td>";
        echo "<td>₹" . number_format($item['price'], 2) . "</td>";
        echo "<td><input type='number' value='" . $item['quantity'] . "' onchange='updateQuantity(" . $item['product_id'] . ", this.value)'></td>";
        echo "<td>₹" . number_format(($item['price'] * $item['quantity']), 2) . "</td>";
        echo "<td><button onclick='removeFromCart(" . $item['product_id'] . ")'>Remove</button></td>";
        echo "</tr>";
    }
    
    echo "<tr><td colspan='4'><strong>Total:</strong></td><td>₹" . number_format($total, 2) . "</td></tr>";
    echo "</table>";
}

// Example usage:
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    if (isset($_POST['action'])) {
        switch ($_POST['action']) {
            case 'add':
                addToCart($_POST['product_id'], $_POST['product_name'], $_POST['price']);
                break;
                
            case 'update':
                updateCart($_POST['product_id'], $_POST['quantity']);
                break;
                
            case 'remove':
                removeFromCart($_POST['product_id']);
                break;
        }
    }
}

// Display the cart
displayCart();
?>



<?php
// Start the session
session_start();
?>


<?php
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}
?>


<?php
// Function to add item to cart
function addToCart($productId, $productName, $productPrice) {
    global $mysqli; // Assuming you have a database connection
    
    // Check if product exists in the database (optional)
    $stmt = $mysqli->prepare("SELECT id, name, price FROM products WHERE id = ?");
    $stmt->bind_param('i', $productId);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows > 0) {
        // Product exists, add to cart
        $item = array(
            'id' => $productId,
            'name' => $productName,
            'price' => $productPrice,
            'quantity' => 1 // Default quantity is 1
        );
        
        $_SESSION['cart'][] = $item;
    } else {
        // Product does not exist
        echo "Product not found!";
    }
    
    // Close the statement
    $stmt->close();
}

// Example usage:
addToCart(1, 'Sample Product', 29.99);
?>


<?php
if (!empty($_SESSION['cart'])) {
    echo "<h2>Your Shopping Cart</h2>";
    echo "<table>";
    echo "<tr><th>Product Name</th><th>Price</th><th>Quantity</th><th>Total</th></tr>";
    
    foreach ($_SESSION['cart'] as $item) {
        echo "<tr>";
        echo "<td>" . $item['name'] . "</td>";
        echo "<td>$" . number_format($item['price'], 2) . "</td>";
        echo "<td><input type='number' name='quantity[" . $item['id'] . "]' value='" . $item['quantity'] . "'></td>";
        echo "<td>$" . number_format($item['price'] * $item['quantity'], 2) . "</td>";
        echo "<td><a href='remove_item.php?id=" . $item['id'] . "'>Remove</a></td>";
        echo "</tr>";
    }
    
    echo "</table>";
} else {
    echo "<p>Your cart is empty.</p>";
}
?>


<?php
session_start();

if (isset($_GET['id'])) {
    $productId = $_GET['id'];
    
    foreach ($_SESSION['cart'] as $key => $item) {
        if ($item['id'] == $productId) {
            unset($_SESSION['cart'][$key]);
        }
    }
    
    // Re-index the array to maintain proper keys
    $_SESSION['cart'] = array_values($_SESSION['cart']);
}

header("Location: cart.php");
exit();
?>


<?php
$subtotal = 0;
foreach ($_SESSION['cart'] as $item) {
    $subtotal += $item['price'] * $item['quantity'];
}

// Add tax and shipping (example values)
$tax = $subtotal * 0.08; // 8% tax
$shipping = 5.00;

$total = $subtotal + $tax + $shipping;
?>

<h3>Subtotal: $<?php echo number_format($subtotal, 2); ?></h3>
<h3>Tax: $<?php echo number_format($tax, 2); ?></h3>
<h3>Shipping: $<?php echo number_format($shipping, 2); ?></h3>
<h3>Total: $<?php echo number_format($total, 2); ?></h3>


<?php
session_start();
session_unset();
session_destroy();

// Redirect to homepage
header("Location: index.php");
exit();
?>


<?php
session_start();

if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <?php if (!empty($_SESSION['cart'])): ?>
        <h2>Your Shopping Cart</h2>
        <table border="1">
            <tr>
                <th>Product Name</th>
                <th>Price</th>
                <th>Quantity</th>
                <th>Total</th>
                <th>Action</th>
            </tr>
            
            <?php foreach ($_SESSION['cart'] as $item): ?>
                <tr>
                    <td><?php echo $item['name']; ?></td>
                    <td>$<?php echo number_format($item['price'], 2); ?></td>
                    <td><input type="number" name="quantity[<?php echo $item['id']; ?>]" value="<?php echo $item['quantity']; ?>"></td>
                    <td>$<?php echo number_format($item['price'] * $item['quantity'], 2); ?></td>
                    <td><a href="remove_item.php?id=<?php echo $item['id']; ?>">Remove</a></td>
                </tr>
            <?php endforeach; ?>
            
        </table>

        <?php
        // Calculate totals
        $subtotal = array_sum(array_column($_SESSION['cart'], 'price'));
        $tax = $subtotal * 0.08;
        $total = $subtotal + $tax;

        echo "<h3>Subtotal: $" . number_format($subtotal, 2) . "</h3>";
        echo "<h3>Tax (8%): $" . number_format($tax, 2) . "</h3>";
        echo "<h3>Total: $" . number_format($total, 2) . "</h3>";
        ?>

        <a href="checkout.php">Checkout</a> |
        <a href="index.php">Continue Shopping</a>

    <?php else: ?>
        <p>Your cart is empty.</p>
        <a href="index.php">Go shopping</a>
    <?php endif; ?>

    <br>
    <a href="logout.php">Logout</a>
</body>
</html>


<?php
session_start();

// Initialize cart if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add item to cart
if (isset($_POST['add_to_cart'])) {
    $item_id = intval($_POST['item_id']);
    $quantity = intval($_POST['quantity']);

    // Check if the item is already in the cart
    if (array_key_exists($item_id, $_SESSION['cart'])) {
        // If item exists, increment quantity
        $_SESSION['cart'][$item_id] += $quantity;
    } else {
        // If item doesn't exist, add it to cart
        $_SESSION['cart'][$item_id] = $quantity;
    }
}

// Remove item from cart
if (isset($_GET['remove'])) {
    $item_id = intval($_GET['remove']);
    
    if (array_key_exists($item_id, $_SESSION['cart'])) {
        unset($_SESSION['cart'][$item_id]);
    }
}

// Display cart contents
echo "<h2>Shopping Cart</h2>";
if (!empty($_SESSION['cart'])) {
    echo "<ul>";
    foreach ($_SESSION['cart'] as $item_id => $quantity) {
        echo "<li>Item ID: $item_id | Quantity: $quantity <a href='?remove=$item_id'>Remove</a></li>";
    }
    echo "</ul>";
} else {
    echo "Your cart is empty.";
}

// Add item form
echo <<<_END
<form method="post" action="">
    <input type="text" name="item_id" placeholder="Enter item ID" required>
    <input type="number" name="quantity" min="1" value="1" required>
    <button type="submit" name="add_to_cart">Add to Cart</button>
</form>
_END;
?>


<?php
// Start the session
session_start();

// Check if the cart exists in the session, initialize it if not
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to the cart
function addToCart($productId, $name, $price) {
    global $productId, $name, $price;
    
    // Check if product already exists in the cart
    if (isset($_SESSION['cart'][$productId])) {
        $_SESSION['cart'][$productId]['quantity']++;
    } else {
        // Add new product to the cart
        $_SESSION['cart'][$productId] = array(
            'product_id' => $productId,
            'name' => $name,
            'price' => $price,
            'quantity' => 1
        );
    }
}

// Function to update quantity of item in the cart
function updateQuantity($productId, $quantity) {
    if (isset($_SESSION['cart'][$productId])) {
        $_SESSION['cart'][$productId]['quantity'] = $quantity;
    }
}

// Function to remove item from the cart
function removeFromCart($productId) {
    if (isset($_SESSION['cart'][$productId])) {
        unset($_SESSION['cart'][$productId]);
    }
}

// Function to calculate subtotal of items in the cart
function getSubTotal() {
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += ($item['price'] * $item['quantity']);
    }
    return $total;
}

// Example usage:
// Add item to cart
productId = "1";
name = "Product 1";
price = 29.99;

addToCart($productId, $name, $price);

// Update quantity
updateQuantity("1", 3);

// Remove item from cart
removeFromCart("1");

// Calculate subtotal
$subtotal = getSubTotal();
echo "Subtotal: $" . number_format($subtotal, 2);

// Display cart contents
echo "<h2>Your Cart</h2>";
if (empty($_SESSION['cart'])) {
    echo "Your cart is empty!";
} else {
    echo "<table>";
    echo "<tr><th>Product Name</th><th>Price</th><th>Quantity</th><th>Total</th></tr>";
    foreach ($_SESSION['cart'] as $item) {
        $total = $item['price'] * $item['quantity'];
        echo "<tr>";
        echo "<td>" . $item['name'] . "</td>";
        echo "<td>$" . number_format($item['price'], 2) . "</td>";
        echo "<td><input type='number' value='" . $item['quantity'] . "' onChange='updateQuantity(" . $item['product_id'] . ", this.value)'></td>";
        echo "<td>$" . number_format($total, 2) . "</td>";
        echo "<td><button onClick='removeFromCart(" . $item['product_id'] . ")'>Remove</button></td>";
        echo "</tr>";
    }
    echo "</table>";
}
?>


<?php
session_start();
?>


if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}


// Assuming $product_id, $product_name, and $price are variables containing product details

$item = array(
    'product_id' => $product_id,
    'name' => $product_name,
    'quantity' => 1,
    'price' => $price
);

if (isset($_SESSION['cart'][$product_id])) {
    // Increment quantity if the item already exists
    $_SESSION['cart'][$product_id]['quantity']++;
} else {
    // Add new item to cart
    $_SESSION['cart'][$product_id] = $item;
}


if (!empty($_SESSION['cart'])) {
    echo "<h2>Your Cart</h2>";
    echo "<table border='1'>";
    echo "<tr><th>Product ID</th><th>Name</th><th>Quantity</th><th>Price</th><th>Total</th></tr>";
    
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $subtotal = $item['price'] * $item['quantity'];
        $total += $subtotal;
        
        echo "<tr>";
        echo "<td>" . $item['product_id'] . "</td>";
        echo "<td>" . $item['name'] . "</td>";
        echo "<td><input type='number' name='quantity[" . $item['product_id'] . "]' value='" . $item['quantity'] . "'></td>";
        echo "<td>" . $item['price'] . "</td>";
        echo "<td>" . $subtotal . "</td>";
        echo "<td><a href='remove_item.php?id=" . $item['product_id'] . "'>Remove</a></td>";
        echo "</tr>";
    }
    
    echo "</table>";
    echo "<h3>Total: $" . number_format($total, 2) . "</h3>";
} else {
    echo "<p>Your cart is empty.</p>";
}


<?php
session_start();
if (isset($_GET['id'])) {
    $product_id = $_GET['id'];
    if (!empty($_SESSION['cart'][$product_id])) {
        unset($_SESSION['cart'][$product_id]);
    }
}
header("Location: view_cart.php");
exit();
?>


<?php
session_start();

if (!empty($_SESSION['cart'])) {
    // Process the checkout here
    // For example, save to database or proceed with payment
    
    echo "<h2>Checkout</h2>";
    echo "<p>Your order has been processed!</p>";
    
    // Clear the cart after checkout
    unset($_SESSION['cart']);
} else {
    echo "<p>Your cart is empty.</p>";
}
?>


<?php
session_start();
session_unset(); // Unset all session variables
session_destroy(); // Destroy the session

// Redirect to login page or home page
header("Location: index.php");
exit();
?>


<?php
// Initialize the session
session_start();

// Function to add item to cart
function add_to_cart($product_id, $product_name, $price) {
    // Check if cart exists in session
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }
    
    // Check if product is already in cart
    if (array_key_exists($product_id, $_SESSION['cart'])) {
        // Increment quantity
        $_SESSION['cart'][$product_id]['quantity']++;
    } else {
        // Add new product to cart
        $item = array(
            'id' => $product_id,
            'name' => $product_name,
            'price' => $price,
            'quantity' => 1
        );
        $_SESSION['cart'][$product_id] = $item;
    }
}

// Function to remove item from cart
function remove_from_cart($product_id) {
    // Check if cart exists in session
    if (isset($_SESSION['cart']) && array_key_exists($product_id, $_SESSION['cart'])) {
        unset($_SESSION['cart'][$product_id]);
    }
}

// Function to update quantity of an item in cart
function update_quantity($product_id, $quantity) {
    // Check if cart exists in session and product exists in cart
    if (isset($_SESSION['cart']) && array_key_exists($product_id, $_SESSION['cart'])) {
        if ($quantity > 0) {
            $_SESSION['cart'][$product_id]['quantity'] = $quantity;
        } else {
            // If quantity is less than or equal to zero, remove the product
            unset($_SESSION['cart'][$product_id]);
        }
    }
}

// Function to get cart items
function get_cart() {
    if (isset($_SESSION['cart'])) {
        return $_SESSION['cart'];
    } else {
        return array();
    }
}

// Function to calculate total amount in cart
function calculate_total() {
    $total = 0;
    $count = 0;
    
    foreach ($_SESSION['cart'] as $item) {
        $total += ($item['price'] * $item['quantity']);
        $count += $item['quantity'];
    }
    
    return array(
        'total' => $total,
        'count' => $count
    );
}

// Example usage:
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    if (isset($_POST['action'])) {
        switch ($_POST['action']) {
            case 'add':
                add_to_cart($_POST['product_id'], $_POST['product_name'], $_POST['price']);
                break;
            case 'update':
                update_quantity($_POST['product_id'], $_POST['quantity']);
                break;
            case 'remove':
                remove_from_cart($_POST['product_id']);
                break;
        }
    }
}

// Display cart contents
echo "<h2>Shopping Cart</h2>";
echo "<p>Total Items: " . calculate_total()['count'] . "</p>";
echo "<p>Total Amount: $" . number_format(calculate_total()['total'], 2) . "</p>";

// Output the cart items
if (!empty($_SESSION['cart'])) {
    echo "<table border='1'>";
    echo "<tr><th>Product Name</th><th>Price</th><th>Quantity</th><th>Total</th></tr>";
    
    foreach ($_SESSION['cart'] as $item) {
        echo "<tr>";
        echo "<td>" . $item['name'] . "</td>";
        echo "<td>$" . number_format($item['price'], 2) . "</td>";
        echo "<td>" . $item['quantity'] . "</td>";
        echo "<td>$" . number_format($item['price'] * $item['quantity'], 2) . "</td>";
        echo "</tr>";
    }
    
    echo "</table>";
} else {
    echo "Your cart is empty.";
}
?>


<?php
// Start the session
session_start();

// Initialize cart if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function addToCart($productId, $productName, $productPrice) {
    global $db;
    
    // Check if product is already in cart
    $itemIndex = -1;
    foreach ($_SESSION['cart'] as $index => $item) {
        if ($item['id'] == $productId) {
            $itemIndex = $index;
            break;
        }
    }

    if ($itemIndex == -1) {
        // Add new item to cart
        $_SESSION['cart'][] = array(
            'id' => $productId,
            'name' => $productName,
            'price' => $productPrice,
            'quantity' => 1
        );
    } else {
        // Increase quantity of existing item
        $_SESSION['cart'][$itemIndex]['quantity']++;
    }
}

// Function to remove item from cart
function removeFromCart($productId) {
    global $db;
    
    // Find the index of the product in the cart
    foreach ($_SESSION['cart'] as $index => $item) {
        if ($item['id'] == $productId) {
            unset($_SESSION['cart'][$index]);
            break;
        }
    }

    // Re-index the array after removal
    $_SESSION['cart'] = array_values($_SESSION['cart']);
}

// Function to update item quantity in cart
function updateCartItem($productId, $newQuantity) {
    global $db;
    
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['id'] == $productId) {
            $item['quantity'] = $newQuantity;
            break;
        }
    }
}

// Function to display cart items
function displayCart() {
    if (empty($_SESSION['cart'])) {
        echo "Your cart is empty!";
    } else {
        echo "<h3>Your Cart</h3>";
        echo "<ul>";
        foreach ($_SESSION['cart'] as $item) {
            echo "<li>";
            echo $item['name'] . " - $" . number_format($item['price'], 2);
            echo " Quantity: " . $item['quantity'];
            echo "</li>";
        }
        echo "</ul>";
        
        // Calculate total
        $total = 0;
        foreach ($_SESSION['cart'] as $item) {
            $total += ($item['price'] * $item['quantity']);
        }
        echo "<p>Total: $" . number_format($total, 2) . "</p>";
    }
}

// Example usage:
if (isset($_POST['add_to_cart'])) {
    // Add item to cart
    addToCart(1, 'Product 1', 19.99);
} elseif (isset($_GET['remove'])) {
    // Remove item from cart
    removeFromCart($_GET['remove']);
}

// Display the cart contents
displayCart();
?>



<?php
// Start the session if it doesn't exist
if (session_id() == "") {
    session_start();
}

// Set session name (optional)
session_name('user_cart');

// Create a default empty cart if not exists in session
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function addToCart($product_id, $product_name, $price) {
    global $cart;
    
    // Check if product is already in the cart
    if (array_key_exists($product_id, $cart)) {
        $cart[$product_id]['quantity']++;
    } else {
        $cart[$product_id] = array(
            'id' => $product_id,
            'name' => $product_name,
            'price' => $price,
            'quantity' => 1
        );
    }
    
    $_SESSION['cart'] = $cart;
}

// Function to update item quantity in cart
function updateCart($product_id, $quantity) {
    global $cart;
    
    if ($quantity > 0) {
        $cart[$product_id]['quantity'] = $quantity;
    } else {
        removeItemFromCart($product_id);
    }
    
    $_SESSION['cart'] = $cart;
}

// Function to remove item from cart
function removeItemFromCart($product_id) {
    global $cart;
    
    if (array_key_exists($product_id, $cart)) {
        unset($cart[$product_id]);
    }
    
    // Re-index the array to avoid holes in array keys
    $cart = array_values($cart);
    $_SESSION['cart'] = $cart;
}

// Function to calculate cart totals
function getCartTotals() {
    global $cart;
    
    $total_quantity = 0;
    $total_price = 0;
    
    foreach ($cart as $item) {
        $total_quantity += $item['quantity'];
        $total_price += ($item['price'] * $item['quantity']);
    }
    
    return array(
        'total_quantity' => $total_quantity,
        'total_price' => number_format($total_price, 2)
    );
}

// Function to display cart content
function displayCart() {
    global $cart;
    
    if (empty($cart)) {
        echo "Your cart is empty!";
        return;
    }
    
    foreach ($cart as $item) {
        echo "<div class='cart-item'>";
        echo "<p>" . $item['name'] . "</p>";
        echo "<p>Price: $" . number_format($item['price'], 2) . "</p>";
        echo "<p>Quantity: " . $item['quantity'] . "</p>";
        echo "<a href='remove_item.php?id=" . $item['id'] . "'>Remove</a>";
        echo "</div>";
    }
}

// Example usage:
addToCart(1, 'Product 1', 29.99);
addToCart(2, 'Product 2', 49.99);

updateCart(1, 3); // Update quantity to 3

removeItemFromCart(2); // Remove product with id=2

$totals = getCartTotals();
echo "Total items: " . $totals['total_quantity'] . "<br />";
echo "Total price: $" . $totals['total_price'];

// Display cart content
displayCart();

// Destroy session
session_unset();
session_destroy();
?>


<?php
// Start the session
session_start();

// Check if session is started
if (session_status() == PHP_SESSION_NONE) {
    session_start();
}

// Initialize cart session variable if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to the cart
function addToCart($item_id, $item_name, $price) {
    global $quantity;
    
    // Check if item already exists in cart
    foreach ($_SESSION['cart'] as $key => $value) {
        if ($value['item_id'] == $item_id) {
            $_SESSION['cart'][$key]['quantity'] += 1;
            return;
        }
    }

    // If item not found, add it to the cart
    $_SESSION['cart'][] = array(
        "item_id" => $item_id,
        "item_name" => $item_name,
        "price" => $price,
        "quantity" => 1
    );
}

// Function to remove item from the cart
function removeFromCart($index) {
    if (isset($_SESSION['cart'][$index])) {
        unset($_SESSION['cart'][$index]);
        $_SESSION['cart'] = array_values($_SESSION['cart']); // Reset indexes
    }
}

// Function to update quantity of an item in the cart
function updateQuantity($index, $new_quantity) {
    if (isset($_SESSION['cart'][$index])) {
        if ($new_quantity > 0) {
            $_SESSION['cart'][$index]['quantity'] = $new_quantity;
        } else {
            removeFromCart($index);
        }
    }
}

// Function to display cart items
function displayCart() {
    if (!empty($_SESSION['cart'])) {
        echo "<table border='1'>";
        echo "<tr><th>Item Name</th><th>Price</th><th>Quantity</th><th>Total</th></tr>";
        
        $total_price = 0;
        
        foreach ($_SESSION['cart'] as $key => $value) {
            $subtotal = $value['price'] * $value['quantity'];
            $total_price += $subtotal;
            
            echo "<tr>";
            echo "<td>" . $value['item_name'] . "</td>";
            echo "<td>$" . number_format($value['price'], 2, '.', '') . "</td>";
            echo "<td><input type='number' min='1' value='" . $value['quantity'] . "' onchange='updateQuantity(" . $key . ", this.value)'></td>";
            echo "<td>$" . number_format($subtotal, 2, '.', '') . "</td>";
            echo "<td><button onclick='removeFromCart(" . $key . ")'>Remove</button></td>";
            echo "</tr>";
        }
        
        echo "<tr><th colspan='3'>Total:</th><th>$" . number_format($total_price, 2, '.', '') . "</th></tr>";
        echo "</table>";
    } else {
        echo "Your cart is empty.";
    }
}

// Function to empty the entire cart
function emptyCart() {
    $_SESSION['cart'] = array();
}

// Example usage:
addToCart(1, 'Product A', 29.99);
addToCart(2, 'Product B', 49.99);

displayCart();

// To remove an item from cart:
removeFromCart(0); // Removes the first item

// To update quantity of an item:
updateQuantity(0, 3);

// To empty the cart:
emptyCart();
?>


<?php
// Start the session
session_start();

// Initialize cart if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Handle form submission to add items to cart
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get product details from form
    $productId = $_POST['product_id'];
    $productName = $_POST['product_name'];
    $productPrice = $_POST['product_price'];
    $quantity = $_POST['quantity'];

    // Check if the product is already in the cart
    $found = false;
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['product_id'] == $productId) {
            $item['quantity'] += $quantity;
            $found = true;
            break;
        }
    }

    // If not found, add new product to cart
    if (!$found) {
        $_SESSION['cart'][] = array(
            'product_id' => $productId,
            'product_name' => $productName,
            'product_price' => $productPrice,
            'quantity' => $quantity
        );
    }
}

// Display cart contents
echo "<h2>Shopping Cart</h2>";
echo "<table border='1'>";
echo "<tr><th>Product Name</th><th>Quantity</th><th>Price</th><th>Total</th><th>Action</th></tr>";

foreach ($_SESSION['cart'] as $item) {
    $total = $item['product_price'] * $item['quantity'];
    echo "<tr>";
    echo "<td>" . htmlspecialchars($item['product_name']) . "</td>";
    echo "<td>" . htmlspecialchars($item['quantity']) . "</td>";
    echo "<td>₹" . htmlspecialchars($item['product_price']) . "</td>";
    echo "<td>₹" . htmlspecialchars($total) . "</td>";
    echo "<td><a href='remove_from_cart.php?id=" . htmlspecialchars($item['product_id']) . "'>Remove</a></td>";
    echo "</tr>";
}

echo "</table>";

// Add styling
<style>
    table {
        width: 100%;
        border-collapse: collapse;
        margin-top: 20px;
    }
    th, td {
        padding: 15px;
        text-align: left;
        border-bottom: 1px solid #ddd;
    }
    th {
        background-color: #f2f2f2;
    }
    tr:hover {background-color: #f5f5f5;}
</style>

// Navigation links
echo "<a href='product_listing.php'>Continue Shopping</a> | ";
echo "<a href='checkout.php'>Checkout</a>";
?>


<?php
session_start();
header('Cache-Control: private');

// Initialize cart session if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add item to cart
if (isset($_GET['add_item'])) {
    $item_id = intval($_GET['add_item']);
    
    // Check if item already exists in cart
    if (isset($_SESSION['cart'][$item_id])) {
        // Increment quantity by 1
        $_SESSION['cart'][$item_id]['quantity']++;
    } else {
        // Add new item to cart with quantity 1
        $_SESSION['cart'][$item_id] = array(
            'id' => $item_id,
            'quantity' => 1
        );
    }
}

// Remove item from cart
if (isset($_GET['remove_item'])) {
    $item_id = intval($_GET['remove_item']);
    
    if (isset($_SESSION['cart'][$item_id])) {
        unset($_SESSION['cart'][$item_id]);
        
        // Re-index the session array
        $_SESSION['cart'] = array_values($_SESSION['cart']);
    }
}

// Display cart contents
echo "<h2>Your Cart</h2>";
echo "<pre>";
print_r($_SESSION['cart']);
echo "</pre>";

// Example links to add/remove items
echo "<a href='?add_item=1'>Add Item 1</a><br>";
echo "<a href='?add_item=2'>Add Item 2</a><br>";
echo "<a href='?remove_item=1'>Remove Item 1</a><br>";
echo "<a href='?remove_item=2'>Remove Item 2</a><br>";

?>


<?php
// Start the session
session_start();

// Function to add item to cart
function addToCart($item_id, $item_name, $price) {
    // Check if session is started
    if (isset($_SESSION['cart'])) {
        $cart = $_SESSION['cart'];
        
        // Check if item exists in cart
        if (array_key_exists($item_id, $cart)) {
            // If exists, increase quantity
            $cart[$item_id]['quantity']++;
        } else {
            // If not exists, add new item
            $cart[$item_id] = array(
                'name' => $item_name,
                'price' => $price,
                'quantity' => 1
            );
        }
        
        $_SESSION['cart'] = $cart;
    } else {
        // Initialize cart if not exists
        $cart = array();
        $cart[$item_id] = array(
            'name' => $item_name,
            'price' => $price,
            'quantity' => 1
        );
        $_SESSION['cart'] = $cart;
    }
}

// Function to remove item from cart
function removeFromCart($item_id) {
    if (isset($_SESSION['cart'][$item_id])) {
        unset($_SESSION['cart'][$item_id]);
    }
}

// Function to display cart items
function displayCart() {
    if (!empty($_SESSION['cart'])) {
        $total = 0;
        echo "<table border='1'>";
        echo "<tr><th>Item</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>";
        
        foreach ($_SESSION['cart'] as $item_id => $item) {
            $subtotal = $item['price'] * $item['quantity'];
            $total += $subtotal;
            
            echo "<tr>";
            echo "<td>" . $item['name'] . "</td>";
            echo "<td>$$item[price]</td>";
            echo "<td>$item[quantity]</td>";
            echo "<td>$$subtotal</td>";
            echo "<td><a href='?remove=$item_id'>Remove</a></td>";
            echo "</tr>";
        }
        
        echo "<tr><th colspan='4'>Total:</th><th>$$total</th></tr>";
        echo "</table>";
    } else {
        echo "Your cart is empty!";
    }
}

// Function to calculate total price
function calculateTotal() {
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += $item['price'] * $item['quantity'];
    }
    return $total;
}
?>


<?php
// Start the session
session_start();

// Initialize cart if not exists
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function addToCart($item_id, $item_name, $price) {
    global $cart;
    
    // Check if item is already in cart
    $found = false;
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['id'] == $item_id) {
            $item['quantity']++;
            $found = true;
            break;
        }
    }
    
    // If item not found, add it to the cart
    if (!$found) {
        $_SESSION['cart'][] = array(
            'id' => $item_id,
            'name' => $item_name,
            'price' => $price,
            'quantity' => 1
        );
    }
}

// Function to update item quantity in cart
function updateCartItem($item_id, $quantity) {
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['id'] == $item_id) {
            $item['quantity'] = $quantity;
            break;
        }
    }
}

// Function to remove item from cart
function removeFromCart($item_id) {
    $_SESSION['cart'] = array_filter($_SESSION['cart'], function($item) use ($item_id) {
        return $item['id'] != $item_id;
    });
}

// Function to calculate total price of items in cart
function cartTotal() {
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += ($item['price'] * $item['quantity']);
    }
    return $total;
}

// Example usage:

// Add item to cart
addToCart(1, 'Laptop', 999.99);
addToCart(2, 'Phone', 499.99);

// Update quantity of an item
updateCartItem(1, 2);

// Remove an item from cart
removeFromCart(2);

// Calculate total price
echo "Total Price: $" . number_format(cartTotal(), 2);

// Display cart items
echo "<h3>Shopping Cart:</h3>";
foreach ($_SESSION['cart'] as $item) {
    echo "<p>" . $item['name'] . " - $" . $item['price'] . " x " . $item['quantity'] . "</p>";
}
?>


<?php
// Start the session
session_start();

// Initialize cart if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function add_to_cart($item_id, $item_name, $price) {
    global $quantity;
    
    // Check if item is already in the cart
    $found = false;
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['id'] == $item_id) {
            $item['quantity']++;
            $found = true;
            break;
        }
    }

    // If not found, add new item to cart
    if (!$found) {
        $_SESSION['cart'][] = array(
            'id' => $item_id,
            'name' => $item_name,
            'price' => $price,
            'quantity' => 1
        );
    }
}

// Function to remove item from cart
function remove_from_cart($item_id) {
    foreach ($_SESSION['cart'] as $key => $item) {
        if ($item['id'] == $item_id) {
            unset($_SESSION['cart'][$key]);
            break;
        }
    }
    // Re-index the array keys
    $_SESSION['cart'] = array_values($_SESSION['cart']);
}

// Function to update item quantity
function update_quantity($item_id, $new_quantity) {
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['id'] == $item_id) {
            $item['quantity'] = $new_quantity;
            break;
        }
    }
}

// Function to display cart contents
function display_cart() {
    $total_price = 0;

    echo "<table>";
    echo "<tr><th>Item</th><th>Quantity</th><th>Price</th><th>Action</th></tr>";

    foreach ($_SESSION['cart'] as $item) {
        $price = $item['price'] * $item['quantity'];
        $total_price += $price;

        echo "<tr>";
        echo "<td>" . $item['name'] . "</td>";
        echo "<td>" . $item['quantity'] . "</td>";
        echo "<td>£" . number_format($price, 2) . "</td>";
        echo "<td><a href='remove.php?id=" . $item['id'] . "'>Remove</a></td>";
        echo "</tr>";
    }

    echo "<tr><td colspan='3'><strong>Total: £" . number_format($total_price, 2) . "</strong></td><td></td></tr>";
    echo "</table>";
}

// Example usage:
?>


<?php
// Start the session
if (session_status() == PHP_SESSION_NONE) {
    session_start();
}

// Function to add item to cart
function add_to_cart($product_id, $product_name, $price, $quantity) {
    global $_SESSION;
    
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }
    
    // Check if product is already in cart
    if (array_key_exists($product_id, $_SESSION['cart'])) {
        // Update quantity
        $_SESSION['cart'][$product_id]['quantity'] += $quantity;
    } else {
        // Add new product to cart
        $_SESSION['cart'][$product_id] = array(
            'name' => $product_name,
            'price' => $price,
            'quantity' => $quantity
        );
    }
}

// Function to remove item from cart
function remove_from_cart($product_id) {
    global $_SESSION;
    
    if (isset($_SESSION['cart'][$product_id])) {
        unset($_SESSION['cart'][$product_id]);
    }
}

// Function to update quantity of an item
function update_quantity($product_id, $new_quantity) {
    global $_SESSION;
    
    if (isset($_SESSION['cart'][$product_id]) && $new_quantity > 0) {
        $_SESSION['cart'][$product_id]['quantity'] = $new_quantity;
    }
}

// Function to calculate total price
function calculate_total() {
    global $_SESSION;
    $total = 0;
    
    if (isset($_SESSION['cart'])) {
        foreach ($_SESSION['cart'] as $item) {
            $total += ($item['price'] * $item['quantity']);
        }
    }
    
    return $total;
}

// Function to display cart contents
function display_cart() {
    global $_SESSION;
    
    if (isset($_SESSION['cart']) && count($_SESSION['cart']) > 0) {
        echo "<h2>Your Cart</h2>";
        echo "<table border='1'>";
        echo "<tr><th>Product Name</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>";
        
        foreach ($_SESSION['cart'] as $product_id => $item) {
            echo "<tr>";
            echo "<td>{$item['name']}</td>";
            echo "<td>$$item[price]</td>";
            echo "<td><input type='number' value='{$item['quantity']}' onChange='updateQuantity($product_id, this.value)'></td>";
            echo "<td>$$item[price] * {$item['quantity']} = " . ($item['price'] * $item['quantity']) . "</td>";
            echo "<td><button onclick='removeItem($product_id)'>Remove</button></td>";
            echo "</tr>";
        }
        
        echo "</table>";
        echo "<h3>Total: $" . calculate_total() . "</h3>";
    } else {
        echo "<p>Your cart is empty.</p>";
    }
}

// Example usage:
// add_to_cart(1, 'Product 1', 10.99, 2);
// remove_from_cart(1);
// update_quantity(1, 5);
// display_cart();
?>


<?php
// Start the session
session_start();

// Check if the cart exists in the session, if not, initialize it as an array
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Get product details (you would typically get these from a database)
$product_id = 1;
$product_name = "Sample Product";
$product_price = 9.99;

// Add item to cart
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    if (isset($_POST['product_id'])) {
        $product_id = $_POST['product_id'];
        $product_name = $_POST['product_name'];
        $product_price = $_POST['product_price'];
        
        // Check if product already exists in cart
        $found = false;
        foreach ($_SESSION['cart'] as &$item) {
            if ($item['product_id'] == $product_id) {
                // Increment quantity
                $item['quantity']++;
                $found = true;
                break;
            }
        }

        // If product doesn't exist in cart, add it
        if (!$found) {
            $item_array = array(
                'product_id' => $product_id,
                'product_name' => $product_name,
                'price' => $product_price,
                'quantity' => 1
            );
            $_SESSION['cart'][] = $item_array;
        }

        // Redirect to cart page or show confirmation message
        echo "<script>alert('Product added to cart');</script>";
    }
}

// Display cart contents
echo "Cart Contents:<br>";
$total_price = 0;
foreach ($_SESSION['cart'] as $item) {
    $total_price += ($item['price'] * $item['quantity']);
    echo $item['product_name'] . " x" . $item['quantity'] . "<br>";
}

echo "Total Price: $" . number_format($total_price, 2);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <h1>Add to Cart</h1>
    
    <!-- Product details form -->
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="POST">
        <input type="hidden" name="product_id" value="<?php echo $product_id; ?>">
        <input type="hidden" name="product_name" value="<?php echo $product_name; ?>">
        <input type="hidden" name="product_price" value="<?php echo $product_price; ?>">
        
        Quantity: <input type="number" name="quantity" min="1" max="99" value="1">
        <br>
        <button type="submit">Add to Cart</button>
    </form>

    <h2>Current Cart</h2>
    <p>Total Items: <?php echo count($_SESSION['cart']); ?></p>
    <p>Total Price: <?php echo "$" . number_format($total_price, 2); ?></p>

    <a href="view_cart.php">View Cart</a> | 
    <a href="continue_shopping.php">Continue Shopping</a>
</body>
</html>


<?php
// Start the session
session_start();

// Check if the cart session exists, if not initialize it
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function add_to_cart($product_id, $quantity = 1) {
    global $connection; // Assuming you have a database connection
    
    // Check if product exists in the database
    $query = "SELECT * FROM products WHERE id = $product_id";
    $result = mysqli_query($connection, $query);
    
    if (mysqli_num_rows($result) == 1) {
        $product = mysqli_fetch_assoc($result);
        
        // Add or update item in cart
        if (isset($_SESSION['cart'][$product_id])) {
            $_SESSION['cart'][$product_id]['quantity'] += $quantity;
        } else {
            $_SESSION['cart'][$product_id] = array(
                'id' => $product_id,
                'name' => $product['name'],
                'price' => $product['price'],
                'quantity' => $quantity
            );
        }
    }
}

// Function to update cart item quantity
function update_cart($product_id, $quantity) {
    if (isset($_SESSION['cart'][$product_id])) {
        $_SESSION['cart'][$product_id]['quantity'] = $quantity;
    }
}

// Function to remove item from cart
function remove_from_cart($product_id) {
    if (isset($_SESSION['cart'][$product_id])) {
        unset($_SESSION['cart'][$product_id]);
    }
}

// Function to get product info from database
function get_product_info($product_id) {
    global $connection;
    
    $query = "SELECT * FROM products WHERE id = $product_id";
    $result = mysqli_query($connection, $query);
    
    return mysqli_fetch_assoc($result);
}

// Example usage:
if (isset($_GET['action'])) {
    switch ($_GET['action']) {
        case 'add':
            add_to_cart($_GET['id'], $_GET['quantity']);
            break;
            
        case 'update':
            update_cart($_GET['id'], $_GET['quantity']);
            break;
            
        case 'remove':
            remove_from_cart($_GET['id']);
            break;
    }
}

// Display cart contents
function display_cart() {
    if (!empty($_SESSION['cart'])) { ?>
        <table>
            <tr>
                <th>Product Name</th>
                <th>Price</th>
                <th>Quantity</th>
                <th>Action</th>
            </tr>
            <?php foreach ($_SESSION['cart'] as $item): 
                $product_info = get_product_info($item['id']); ?>
            <tr>
                <td><?php echo $product_info['name']; ?></td>
                <td>$<?php echo number_format($product_info['price'], 2); ?></td>
                <td><input type="number" value="<?php echo $item['quantity']; ?>"></td>
                <td><a href="?action=remove&id=<?php echo $item['id']; ?>">Remove</a></td>
            </tr>
            <?php endforeach; ?>
        </table>
    <?php } else { ?>
        <p>Your cart is empty.</p>
    <?php }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart Example</title>
</head>
<body>
    <!-- Add items to cart -->
    <h2>Add Items to Cart:</h2>
    <?php
    $query = "SELECT * FROM products";
    $result = mysqli_query($connection, $query);
    
    while ($product = mysqli_fetch_assoc($result)) { ?>
        <div>
            <h3><?php echo $product['name']; ?></h3>
            <p>$<?php echo number_format($product['price'], 2); ?></p>
            <a href="?action=add&id=<?php echo $product['id']; ?>&quantity=1">Add to Cart</a>
        </div>
    <?php } ?>

    <!-- Display cart contents -->
    <h2>Your Cart:</h2>
    <?php display_cart(); ?>
</body>
</html>


<?php
// Start the session
session_start();

// Initialize cart if not already set
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function addToCart($productId, $productName, $price) {
    global $connection;
    
    // Check if product is already in the cart
    $itemExists = false;
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['product_id'] == $productId) {
            $itemExists = true;
            $item['quantity']++;
            break;
        }
    }
    
    // If item doesn't exist, add it to the cart
    if (!$itemExists) {
        $_SESSION['cart'][] = array(
            'product_id' => $productId,
            'product_name' => $productName,
            'price' => $price,
            'quantity' => 1
        );
    }
}

// Function to update item quantity in cart
function updateQuantity($productId, $newQuantity) {
    global $connection;
    
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['product_id'] == $productId) {
            $item['quantity'] = $newQuantity;
            break;
        }
    }
}

// Function to remove item from cart
function removeFromCart($productId) {
    global $connection;
    
    foreach ($_SESSION['cart'] as $key => $item) {
        if ($item['product_id'] == $productId) {
            unset($_SESSION['cart'][$key]);
            break;
        }
    }
}

// Function to calculate total price
function calculateTotal() {
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += $item['price'] * $item['quantity'];
    }
    return $total;
}

// Function to display cart contents
function displayCart() {
    if (empty($_SESSION['cart'])) {
        echo "Your cart is empty!";
        return;
    }
    
    echo "<table border='1'>";
    echo "<tr><th>Product Name</th><th>Price</th><th>Quantity</th><th>Total</th></tr>";
    foreach ($_SESSION['cart'] as $item) {
        $total = $item['price'] * $item['quantity'];
        echo "<tr>";
        echo "<td>{$item['product_name']}</td>";
        echo "<td>$$item[price]</td>";
        echo "<td><input type='number' value='{$item['quantity']}' onChange='updateQuantity({$item['product_id']}, this.value)'></td>";
        echo "<td>$$total</td>";
        echo "<td><button onclick='removeFromCart({$item['product_id']})'>Remove</button></td>";
        echo "</tr>";
    }
    echo "</table>";
    
    $cartTotal = calculateTotal();
    echo "<h3>Total: $$cartTotal</h3>";
}

// Initialize cart if not set
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Destroy session when user logs out or closes browser
function destroyCart() {
    unset($_SESSION['cart']);
}
?>


<?php
// Start the session
session_start();

// Initialize cart if not already set
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add product to cart
function addToCart($productId, $quantity) {
    global $pdo; // Assuming you have a database connection

    // Check if product exists in the database
    $stmt = $pdo->prepare("SELECT * FROM products WHERE id = ?");
    $stmt->execute([$productId]);
    $product = $stmt->fetch();

    if ($product) {
        $cart = &$_SESSION['cart'];

        // Check if product is already in cart
        if (isset($cart[$productId])) {
            // Increment quantity
            $cart[$productId]['quantity'] += $quantity;
        } else {
            // Add new product to cart
            $cart[$productId] = array(
                'id' => $productId,
                'name' => $product['name'],
                'price' => $product['price'],
                'quantity' => $quantity
            );
        }

        return true;
    } else {
        // Product not found in database
        return false;
    }
}

// Function to remove product from cart
function removeFromCart($productId) {
    $cart = &$_SESSION['cart'];

    if (isset($cart[$productId])) {
        unset($cart[$productId]);
        // Re-index the array
        $cart = array_values($cart);
        $_SESSION['cart'] = $cart;
        return true;
    } else {
        // Product not found in cart
        return false;
    }
}

// Function to update product quantity in cart
function updateQuantity($productId, $quantity) {
    $cart = &$_SESSION['cart'];

    if (isset($cart[$productId])) {
        $cart[$productId]['quantity'] = $quantity;
        return true;
    } else {
        // Product not found in cart
        return false;
    }
}

// Function to calculate total amount in cart
function calculateTotal() {
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += ($item['price'] * $item['quantity']);
    }
    return $total;
}

// Example usage:
// Add a product with ID 1 and quantity 2
if (addToCart(1, 2)) {
    echo "Product added to cart!";
}

// Remove a product with ID 1
if (removeFromCart(1)) {
    echo "Product removed from cart!";
}

// Update quantity of product with ID 1 to 3
if (updateQuantity(1, 3)) {
    echo "Quantity updated!";
}

// Get total amount in cart
$total = calculateTotal();
echo "Total: $" . number_format($total, 2);

// Display cart contents
echo "<h2>Shopping Cart:</h2>";
foreach ($_SESSION['cart'] as $item) {
    echo $item['name'] . " - $" . $item['price'] . " x " . $item['quantity'] . "<br/>";
}
?>


<?php
session_start();

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $productId = $_POST['product_id'];
    $quantity = $_POST['quantity'];

    if (addToCart($productId, $quantity)) {
        echo "Product added to cart!";
    } else {
        echo "Error adding product.";
    }
}
?>


<?php
// Start the session
session_start();

// Initialize cart if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function addToCart($productId, $productName, $productPrice) {
    global $mysqli;
    
    // Check if product is already in the cart
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['id'] == $productId) {
            // Increment quantity
            $item['quantity']++;
            return;
        }
    }

    // Add new item to the cart
    $_SESSION['cart'][] = array(
        'id' => $productId,
        'name' => $productName,
        'price' => $productPrice,
        'quantity' => 1
    );
}

// Function to remove item from cart
function removeFromCart($productId) {
    global $mysqli;
    
    // Remove item from the cart
    foreach ($_SESSION['cart'] as $key => &$item) {
        if ($item['id'] == $productId) {
            unset($_SESSION['cart'][$key]);
            return;
        }
    }
}

// Function to display cart contents
function displayCart() {
    echo "<h2>Shopping Cart</h2>";
    echo "<table border='1'>";
    echo "<tr><th>Product Name</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>";
    
    $total = 0;
    
    foreach ($_SESSION['cart'] as $item) {
        $productTotal = $item['price'] * $item['quantity'];
        $total += $productTotal;
        
        echo "<tr>";
        echo "<td>".$item['name']."</td>";
        echo "<td>RM".number_format($item['price'], 2)."</td>";
        echo "<td><input type='text' name='quantity_".$item['id']."' value='".$item['quantity']."' size='3'></td>";
        echo "<td>RM".number_format($productTotal, 2)."</td>";
        echo "<td><a href='".$_SERVER['PHP_SELF']."?remove=".$item['id']."'>Remove</a></td>";
        echo "</tr>";
    }
    
    echo "<tr>";
    echo "<td colspan='4'><strong>Total:</strong></td>";
    echo "<td>RM".number_format($total, 2)."</td>";
    echo "</tr>";
    
    echo "</table>";
}

// Handle cart operations
if (isset($_GET['action'])) {
    switch ($_GET['action']) {
        case 'add':
            // Add item to cart
            $productId = intval($_GET['id']);
            $productName = $_GET['name'];
            $productPrice = floatval($_GET['price']);
            
            addToCart($productId, $productName, $productPrice);
            break;
        
        case 'remove':
            // Remove item from cart
            $productId = intval($_GET['id']);
            removeFromCart($productId);
            break;
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <?php displayCart(); ?>
    
    <!-- Add new items to the cart -->
    <h2>Add Items to Cart</h2>
    <form method="get" action="<?php echo $_SERVER['PHP_SELF']; ?>">
        Product ID: <input type="text" name="id"><br>
        Product Name: <input type="text" name="name"><br>
        Product Price: <input type="text" name="price"><br>
        <input type="hidden" name="action" value="add">
        <input type="submit" value="Add to Cart">
    </form>
</body>
</html>


<?php
// Start the session
session_start();

// Initialize cart if not set
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add product to cart
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $productId = $_POST['product_id'];
    $quantity = $_POST['quantity'];

    // Validate input
    if (ctype_digit($productId) && $quantity > 0) {
        // Check if product is already in the cart
        if (isset($_SESSION['cart'][$productId])) {
            // Update quantity
            $_SESSION['cart'][$productId] += $quantity;
        } else {
            // Add new product to cart
            $_SESSION['cart'][$productId] = $quantity;
        }
    }
}

// Display cart items
echo "<h2>Your Cart</h2>";
echo "<ul>";
foreach ($_SESSION['cart'] as $product_id => $qty) {
    echo "<li>Product ID: $product_id | Quantity: $qty</li>";
}
echo "</ul>";

// Add form to add products to cart
?>

<form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
    Product ID: <input type="text" name="product_id"><br>
    Quantity: <input type="number" min="1" name="quantity"><br>
    <button type="submit">Add to Cart</button>
</form>



<?php
// Start the session
session_start();

// Add item to cart
if (isset($_GET['add'])) {
    $item_id = $_GET['add'];
    
    // Database connection (replace with your database credentials)
    $db = mysqli_connect("localhost", "username", "password", "database");
    
    // Get product details from the database
    $query = "SELECT id, name, price FROM products WHERE id = ?";
    $stmt = mysqli_prepare($db, $query);
    mysqli_stmt_bind_param($stmt, "i", $item_id);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);
    
    if ($row = mysqli_fetch_assoc($result)) {
        // Check if item already exists in cart
        if (isset($_SESSION['cart']) && !empty($_SESSION['cart'])) {
            $found = false;
            foreach ($_SESSION['cart'] as $key => $item) {
                if ($item['id'] == $row['id']) {
                    $_SESSION['cart'][$key]['quantity']++;
                    $found = true;
                    break;
                }
            }
            if (!$found) {
                $_SESSION['cart'][] = array(
                    'id' => $row['id'],
                    'name' => $row['name'],
                    'price' => $row['price'],
                    'quantity' => 1
                );
            }
        } else {
            // If cart is empty, add the first item
            $_SESSION['cart'] = array(
                array(
                    'id' => $row['id'],
                    'name' => $row['name'],
                    'price' => $row['price'],
                    'quantity' => 1
                )
            );
        }
    }
    
    // Close database connection
    mysqli_close($db);
    
    // Redirect back to the products page
    header('Location: products.php');
    exit();
}

// Display cart items
function displayCart() {
    if (isset($_SESSION['cart']) && !empty($_SESSION['cart'])) {
        $total = 0;
        echo "<table border='1'>";
        echo "<tr><th>Product</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>";
        
        foreach ($_SESSION['cart'] as $item) {
            $subtotal = $item['price'] * $item['quantity'];
            $total += $subtotal;
            
            echo "<tr>";
            echo "<td>" . $item['name'] . "</td>";
            echo "<td>₹" . number_format($item['price'], 2) . "</td>";
            echo "<td><input type='number' value='" . $item['quantity'] . "'></td>";
            echo "<td>₹" . number_format($subtotal, 2) . "</td>";
            echo "<td><a href='cart.php?remove=" . $item['id'] . "'>Remove</a></td>";
            echo "</tr>";
        }
        
        echo "<tr><td colspan='4'><strong>Total:</strong> ₹" . number_format($total, 2) . "</td><td><button>Checkout</button></td></tr>";
        echo "</table>";
    } else {
        echo "No items in your cart.";
    }
}

// Remove item from cart
if (isset($_GET['remove'])) {
    $item_id = $_GET['remove'];
    
    if (isset($_SESSION['cart']) && !empty($_SESSION['cart'])) {
        foreach ($_SESSION['cart'] as $key => $item) {
            if ($item['id'] == $item_id) {
                unset($_SESSION['cart'][$key]);
                break;
            }
        }
        
        // Re-index the cart array
        $_SESSION['cart'] = array_values($_SESSION['cart']);
    }
    
    // Redirect back to cart page
    header('Location: cart.php');
    exit();
}

// Display the cart content
displayCart();

?>


<?php
// Start the session
session_start();


if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}


// Example: Adding an item to the cart when a form is submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $productId = $_POST['product_id'];
    $quantity = isset($_POST['quantity']) ? $_POST['quantity'] : 1;

    // Check if the product is already in the cart
    if (isset($_SESSION['cart'][$productId])) {
        // Increment quantity
        $_SESSION['cart'][$productId]['quantity'] += $quantity;
    } else {
        // Add new product to cart with default values
        $_SESSION['cart'][$productId] = array(
            'id' => $productId,
            'name' => $_POST['product_name'],
            'price' => $_POST['product_price'],
            'quantity' => $quantity
        );
    }
}


if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $productId = $_POST['product_id'];
    $newQuantity = $_POST['quantity'];

    if (isset($_SESSION['cart'][$productId])) {
        $_SESSION['cart'][$productId]['quantity'] = $newQuantity;
    }
}


if ($_SERVER['REQUEST_METHOD'] == 'GET' && isset($_GET['remove'])) {
    $productId = $_GET['remove'];
    if (isset($_SESSION['cart'][$productId])) {
        unset($_SESSION['cart'][$productId]);
        // Re-index the array to maintain clean keys
        $_SESSION['cart'] = array_values($_SESSION['cart']);
    }
}


$total = 0;
foreach ($_SESSION['cart'] as $item) {
    $total += ($item['price'] * $item['quantity']);
}
echo "Total: $" . number_format($total, 2);


if (!empty($_SESSION['cart'])) {
    echo "<table>";
    echo "<tr><th>Product ID</th><th>Name</th><th>Price</th><th>Quantity</th><th>Total</th></tr>";
    foreach ($_SESSION['cart'] as $item) {
        echo "<tr>";
        echo "<td>" . $item['id'] . "</td>";
        echo "<td>" . $item['name'] . "</td>";
        echo "<td>$" . number_format($item['price'], 2) . "</td>";
        echo "<td>" . $item['quantity'] . "</td>";
        echo "<td>$" . number_format(($item['price'] * $item['quantity']), 2) . "</td>";
        echo "<td><a href='?remove=" . $item['id'] . "'>Remove</a></td>";
        echo "</tr>";
    }
    echo "</table>";
} else {
    echo "Your cart is empty.";
}


if (isset($_GET['clear'])) {
    unset($_SESSION['cart']);
    // Optionally redirect to a new page or reload current page
    header('Location: ' . $_SERVER['PHP_SELF']);
}


<?php
session_start();

// Initialize cart if not exists
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add item to cart
if ($_SERVER['REQUEST_METHOD'] == 'POST' && isset($_POST['action']) && $_POST['action'] == 'add') {
    $productId = $_POST['product_id'];
    $quantity = isset($_POST['quantity']) ? $_POST['quantity'] : 1;

    if (isset($_SESSION['cart'][$productId])) {
        $_SESSION['cart'][$productId]['quantity'] += $quantity;
    } else {
        $_SESSION['cart'][$productId] = array(
            'id' => $productId,
            'name' => $_POST['product_name'],
            'price' => $_POST['product_price'],
            'quantity' => $quantity
        );
    }
}

// Update quantity
if ($_SERVER['REQUEST_METHOD'] == 'POST' && isset($_POST['action']) && $_POST['action'] == 'update') {
    foreach ($_SESSION['cart'] as &$item) {
        if (isset($_POST[$item['id'] . '_quantity'])) {
            $newQuantity = intval($_POST[$item['id'] . '_quantity']);
            $item['quantity'] = max($newQuantity, 1);
        }
    }
}

// Remove item
if ($_SERVER['REQUEST_METHOD'] == 'GET' && isset($_GET['remove'])) {
    $productId = $_GET['remove'];
    if (isset($_SESSION['cart'][$productId])) {
        unset($_SESSION['cart'][$productId]);
        $_SESSION['cart'] = array_values($_SESSION['cart']);
    }
}

// Clear cart
if ($_SERVER['REQUEST_METHOD'] == 'GET' && isset($_GET['clear'])) {
    unset($_SESSION['cart']);
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <?php if (!empty($_SESSION['cart'])): ?>
        <h2>Your Cart:</h2>
        <table border="1">
            <tr>
                <th>Product ID</th>
                <th>Name</th>
                <th>Price</th>
                <th>Quantity</th>
                <th>Total</th>
                <th>Action</th>
            </tr>
            <?php foreach ($_SESSION['cart'] as $item): ?>
                <tr>
                    <td><?php echo $item['id']; ?></td>
                    <td><?php echo $item['name']; ?></td>
                    <td>$<?php echo number_format($item['price'], 2); ?></td>
                    <td><input type="number" name="<?php echo $item['id'];?>_quantity" value="<?php echo $item['quantity']; ?>"></td>
                    <td>$<?php echo number_format($item['price'] * $item['quantity'], 2); ?></td>
                    <td><a href="?remove=<?php echo $item['id']; ?>">Remove</a></td>
                </tr>
            <?php endforeach; ?>
        </table>
        <form method="post">
            <input type="hidden" name="action" value="update">
            <button type="submit">Update Cart</button>
        </form>
        <br>
        <a href="?clear=1">Clear Cart</a>
    <?php else: ?>
        <h2>Your cart is empty.</h2>
    <?php endif; ?>

    <!-- Add a sample product to test -->
    <h2>Add Product:</h2>
    <form method="post">
        <input type="hidden" name="action" value="add">
        <input type="text" name="product_id" placeholder="Enter Product ID" required>
        <input type="text" name="product_name" placeholder="Enter Product Name" required>
        <input type="number" name="product_price" step="0.01" placeholder="Enter Price" required>
        <input type="number" name="quantity" value="1">
        <button type="submit">Add to Cart</button>
    </form>
</body>
</html>


<?php
// Start the session
session_start();

// Check if cart exists in session, if not initialize it
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function addToCart($item_id, $name, $price) {
    // Check if item is already in cart
    if (isset($_SESSION['cart'][$item_id])) {
        // If exists, increment quantity
        $_SESSION['cart'][$item_id]['quantity']++;
    } else {
        // If not exists, add new item to cart
        $_SESSION['cart'][$item_id] = array(
            'item_id' => $item_id,
            'name' => $name,
            'price' => $price,
            'quantity' => 1
        );
    }
}

// Function to update quantity of an item in cart
function updateQuantity($item_id, $quantity) {
    if (isset($_SESSION['cart'][$item_id])) {
        $_SESSION['cart'][$item_id]['quantity'] = $quantity;
    }
}

// Function to remove item from cart
function removeFromCart($item_id) {
    unset($_SESSION['cart'][$item_id]);
    // Re-index the array after removal
    $_SESSION['cart'] = array_values($_SESSION['cart']);
}

// Function to calculate total price of all items in cart
function calculateTotal() {
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += ($item['price'] * $item['quantity']);
    }
    return $total;
}

// Example usage:
if (isset($_POST['add_to_cart'])) {
    $item_id = 1;
    $name = "Product Name";
    $price = 29.99;
    addToCart($item_id, $name, $price);
}

if (isset($_POST['update_quantity'])) {
    $item_id = $_POST['item_id'];
    $quantity = intval($_POST['quantity']);
    updateQuantity($item_id, $quantity);
}

if (isset($_GET['remove_item'])) {
    $item_id = $_GET['remove_item'];
    removeFromCart($item_id);
}

// Display cart contents
echo "<h2>Shopping Cart</h2>";
echo "<table>";
echo "<tr><th>Item Name</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>";

foreach ($_SESSION['cart'] as $item) {
    echo "<tr>";
    echo "<td>" . $item['name'] . "</td>";
    echo "<td>$" . number_format($item['price'], 2) . "</td>";
    echo "<td><form method='post'><input type='hidden' name='item_id' value='" . $item['item_id'] . "'/><input type='number' name='quantity' min='1' value='" . $item['quantity'] . "'/></form></td>";
    echo "<td>$" . number_format(($item['price'] * $item['quantity']), 2) . "</td>";
    echo "<td><a href='?remove_item=" . $item['item_id'] . "'>Remove</a></td>";
    echo "</tr>";
}

echo "</table>";
echo "<h3>Total: $" . number_format(calculateTotal(), 2) . "</h3>";
?>



<?php
// Initialize session
session_start();

// Check if cart is set in session. If not, initialize it as an empty array
if (!isset($_SESSION['cart_items'])) {
    $_SESSION['cart_items'] = array();
}

// Function to add item to cart
function addToCart($item_id, $quantity) {
    global $cartItems;
    
    // Check if item already exists in the cart
    if (array_key_exists($item_id, $cartItems)) {
        // Increment quantity
        $cartItems[$item_id]['quantity'] += $quantity;
    } else {
        // Add new item to cart
        $cartItems = &$_SESSION['cart_items'];
        $cartItems[$item_id] = array(
            'id' => $item_id,
            'quantity' => $quantity
        );
    }
}

// Function to remove item from cart
function removeFromCart($item_id) {
    global $cartItems;
    
    // Remove the item from the cart
    unset($cartItems[$item_id]);
}

// Function to update quantity of an item in cart
function updateQuantity($item_id, $new_quantity) {
    global $cartItems;
    
    if ($new_quantity > 0) {
        $cartItems[$item_id]['quantity'] = $new_quantity;
    } else {
        removeFromCart($item_id);
    }
}

// Function to view cart items
function viewCart() {
    global $cartItems;
    
    echo "<h2>Your Cart</h2>";
    echo "<table border='1'>";
    echo "<tr><th>Item ID</th><th>Quantity</th></tr>";
    
    foreach ($cartItems as $item) {
        echo "<tr>";
        echo "<td>" . $item['id'] . "</td>";
        echo "<td>" . $item['quantity'] . "</td>";
        echo "</tr>";
    }
    
    echo "</table>";
}

// Example usage:
session_start();

$cartItems = &$_SESSION['cart_items'];

// Add items to cart
addToCart(1, 2);
addToCart(2, 3);

// Update quantity of item with ID 1
updateQuantity(1, 4);

// Remove item from cart
removeFromCart(2);

// View cart contents
viewCart();

?>


<?php
// Start the session
session_start();

// Initialize cart if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function add_to_cart($product_id, $quantity = 1) {
    global $db; // Assuming you have a database connection

    try {
        if (isset($_SESSION['cart'][$product_id])) {
            // If product exists in cart, increase quantity
            $_SESSION['cart'][$product_id]['quantity'] += $quantity;
        } else {
            // Get product details from database
            $query = "SELECT * FROM products WHERE id = ?";
            $stmt = $db->prepare($query);
            $stmt->execute(array($product_id));
            $product = $stmt->fetch(PDO::FETCH_ASSOC);

            if ($product) {
                // Add new product to cart
                $_SESSION['cart'][$product_id] = array(
                    'id' => $product_id,
                    'name' => $product['name'],
                    'price' => $product['price'],
                    'quantity' => $quantity
                );
            } else {
                throw new Exception("Product not found in database");
            }
        }
    } catch (Exception $e) {
        // Handle error
        echo "Error: " . $e->getMessage();
    }
}

// Function to update cart item quantity
function update_cart_item($product_id, $quantity) {
    if (isset($_SESSION['cart'][$product_id])) {
        $_SESSION['cart'][$product_id]['quantity'] = $quantity;

        if ($_SESSION['cart'][$product_id]['quantity'] <= 0) {
            // Remove item if quantity is zero or negative
            unset($_SESSION['cart'][$product_id]);
        }
    }
}

// Function to remove item from cart
function remove_from_cart($product_id) {
    if (isset($_SESSION['cart'][$product_id])) {
        unset($_SESSION['cart'][$product_id]);
    }
}

// Function to calculate total price of items in cart
function calculate_total() {
    $total = 0;

    foreach ($_SESSION['cart'] as $item) {
        $total += ($item['price'] * $item['quantity']);
    }

    return $total;
}

// Display cart contents
if (!empty($_SESSION['cart'])) {
    echo "<h2>Your Shopping Cart</h2>";
    echo "<table>";
    foreach ($_SESSION['cart'] as $item) {
        echo "<tr>";
        echo "<td>Product ID: " . $item['id'] . "</td>";
        echo "<td>Name: " . $item['name'] . "</td>";
        echo "<td>Quantity: " . $item['quantity'] . "</td>";
        echo "<td>Price: $" . number_format($item['price'], 2) . "</td>";
        echo "<td>Total: $" . number_format(($item['price'] * $item['quantity']), 2) . "</td>";
        echo "</tr>";
    }
    echo "</table>";
    echo "<h3>Grand Total: $" . number_format(calculate_total(), 2) . "</h3>";
} else {
    echo "Your cart is empty.";
}

// Example usage:
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    if (isset($_POST['add_to_cart'])) {
        add_to_cart(1, 2); // Add product with ID 1 and quantity 2
    } elseif (isset($_POST['update_quantity'])) {
        update_cart_item(1, $_POST['quantity']); // Update quantity for product ID 1
    } elseif (isset($_POST['remove_item'])) {
        remove_from_cart(1); // Remove product with ID 1 from cart
    }
}
?>


<?php
session_start();


// Check if cart is already set in session, if not initialize an empty array.
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}


// Example item data
$item_id = 1;
$item_name = "Product A";
$item_price = 29.99;
$item_quantity = 1;

// Check if the item is already in the cart
if (isset($_SESSION['cart'][$item_id])) {
    // Update quantity
    $_SESSION['cart'][$item_id]['quantity'] += $item_quantity;
} else {
    // Add new item to the cart
    $_SESSION['cart'][$item_id] = array(
        'id' => $item_id,
        'name' => $item_name,
        'price' => $item_price,
        'quantity' => $item_quantity
    );
}


$item_id_to_update = 1;
$new_quantity = 2;

if (isset($_SESSION['cart'][$item_id_to_update])) {
    $_SESSION['cart'][$item_id_to_update]['quantity'] = $new_quantity;
}


$item_id_to_remove = 1;

if (isset($_SESSION['cart'][$item_id_to_remove])) {
    unset($_SESSION['cart'][$item_id_to_remove]);
}
// Re-index the array to maintain clean keys
$_SESSION['cart'] = array_values($_SESSION['cart']);


$total_items = 0;
$subtotal = 0;

foreach ($_SESSION['cart'] as $item) {
    $total_items += $item['quantity'];
    $subtotal += ($item['price'] * $item['quantity']);
}

echo "Total Items: " . $total_items . "<br>";
echo "Subtotal: $" . number_format($subtotal, 2);


unset($_SESSION['cart']);
// To completely destroy the session:
session_unset();
session_destroy();


<?php
session_start();

// Initialize cart if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add item to cart
$item_id = 1;
$item_name = "Product A";
$item_price = 29.99;
$item_quantity = 1;

if (isset($_SESSION['cart'][$item_id])) {
    // Update quantity
    $_SESSION['cart'][$item_id]['quantity'] += $item_quantity;
} else {
    // Add new item to cart
    $_SESSION['cart'][$item_id] = array(
        'id' => $item_id,
        'name' => $item_name,
        'price' => $item_price,
        'quantity' => $item_quantity
    );
}

// Update quantity of an item
$item_id_to_update = 1;
$new_quantity = 2;

if (isset($_SESSION['cart'][$item_id_to_update])) {
    $_SESSION['cart'][$item_id_to_update]['quantity'] = $new_quantity;
}

// Remove an item from cart
$item_id_to_remove = 1;

if (isset($_SESSION['cart'][$item_id_to_remove])) {
    unset($_SESSION['cart'][$item_id_to_remove]);
}
$_SESSION['cart'] = array_values($_SESSION['cart']);

// Calculate totals
$total_items = 0;
$subtotal = 0;

foreach ($_SESSION['cart'] as $item) {
    $total_items += $item['quantity'];
    $subtotal += ($item['price'] * $item['quantity']);
}

echo "Total Items: " . $total_items . "<br>";
echo "Subtotal: $" . number_format($subtotal, 2);

// Destroy the session
unset($_SESSION['cart']);
session_unset();
session_destroy();
?>


<?php
// Start the session
session_start();

// Initialize cart if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function add_to_cart($item_id, $item_name, $price, $quantity) {
    global $connection;
    
    // Check if item already exists in the cart
    if (isset($_SESSION['cart'][$item_id])) {
        // Increment quantity
        $_SESSION['cart'][$item_id]['quantity'] += $quantity;
    } else {
        // Add new item to cart
        $_SESSION['cart'][$item_id] = array(
            'item_id' => $item_id,
            'item_name' => $item_name,
            'price' => $price,
            'quantity' => $quantity
        );
    }
}

// Function to remove item from cart
function remove_from_cart($item_id) {
    if (isset($_SESSION['cart'][$item_id])) {
        unset($_SESSION['cart'][$item_id]);
        // Re-index the array
        $_SESSION['cart'] = array_values($_SESSION['cart']);
    }
}

// Function to display cart contents
function display_cart() {
    $total_price = 0;
    
    if (!empty($_SESSION['cart'])) {
        echo "<table border='1'>";
        echo "<tr><th>Item Name</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>";
        
        foreach ($_SESSION['cart'] as $item) {
            $total = $item['price'] * $item['quantity'];
            $total_price += $total;
            
            echo "<tr>";
            echo "<td>" . $item['item_name'] . "</td>";
            echo "<td>$" . number_format($item['price'], 2) . "</td>";
            echo "<td><input type='number' value='" . $item['quantity'] . "' min='1'></td>";
            echo "<td>$" . number_format($total, 2) . "</td>";
            echo "<td><a href='remove_item.php?id=" . $item['item_id'] . "'>Remove</a></td>";
            echo "</tr>";
        }
        
        echo "</table>";
        echo "<h3>Cart Total: $" . number_format($total_price, 2) . "</h3>";
    } else {
        echo "<p>Your cart is empty.</p>";
    }
}

// Function to calculate total price
function calculate_total() {
    $total = 0;
    
    foreach ($_SESSION['cart'] as $item) {
        $total += $item['price'] * $item['quantity'];
    }
    
    return number_format($total, 2);
}
?>


add_to_cart($item_id, $item_name, $price, $quantity);


display_cart();


remove_from_cart($item_id);


<?php
session_start();

$item_id = $_GET['id'];
remove_from_cart($item_id);

header("Location: cart.php");
exit();
?>


<?php
// Initialize session
session_start();

// Set product data (you would typically fetch this from your database)
$products = array(
    1 => array('name' => 'Product 1', 'price' => 29.99),
    2 => array('name' => 'Product 2', 'price' => 49.99),
    3 => array('name' => 'Product 3', 'price' => 19.99)
);

// Initialize cart if not exists
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add product to cart
function addToCart($productId) {
    global $products;
    
    // Check if product exists in products list
    if (isset($products[$productId])) {
        // Check if product is already in the cart
        if (isset($_SESSION['cart'][$productId])) {
            $_SESSION['cart'][$productId]['quantity']++;
        } else {
            $_SESSION['cart'][$productId] = array(
                'id' => $productId,
                'name' => $products[$productId]['name'],
                'price' => $products[$productId]['price'],
                'quantity' => 1
            );
        }
    }
}

// Remove product from cart
function removeFromCart($productId) {
    if (isset($_SESSION['cart'][$productId])) {
        unset($_SESSION['cart'][$productId]);
        $_SESSION['cart'] = array_values($_SESSION['cart']); // Re-index the array
    }
}

// Empty the cart
function emptyCart() {
    $_SESSION['cart'] = array();
}

// Update product quantity in cart
function updateQuantity($productId, $quantity) {
    if (isset($_SESSION['cart'][$productId]) && $quantity > 0) {
        $_SESSION['cart'][$productId]['quantity'] = $quantity;
    }
}

// Calculate total price
function calculateTotal() {
    $total = 0;
    
    foreach ($_SESSION['cart'] as $item) {
        $total += $item['price'] * $item['quantity'];
    }
    
    return number_format($total, 2);
}

// Display cart contents
if (!empty($_SESSION['cart'])) {
    echo "<h2>Shopping Cart</h2>";
    echo "<table border='1'>";
    echo "<tr><th>Product Name</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>";
    
    foreach ($_SESSION['cart'] as $item) {
        $subtotal = $item['price'] * $item['quantity'];
        echo "<tr>";
        echo "<td>{$item['name']}</td>";
        echo "<td>$" . number_format($item['price'], 2) . "</td>";
        echo "<td><input type='number' value='{$item['quantity']}' onChange='updateQuantity("{$item['id']}", this.value)'></td>";
        echo "<td>$" . number_format($subtotal, 2) . "</td>";
        echo "<td><a href='remove_from_cart.php?id={$item['id']}'>Remove</a></td>";
        echo "</tr>";
    }
    
    echo "</table>";
    echo "<p>Grand Total: $" . calculateTotal() . "</p>";
    echo "<p><a href='empty_cart.php'>Empty Cart</a></p>";
} else {
    echo "Your cart is empty!";
}

// Example usage:
// addToCart(1); // Add product with ID 1 to the cart
// removeFromCart(2); // Remove product with ID 2 from the cart
// updateQuantity(3, 2); // Update quantity of product ID 3 to 2
// emptyCart(); // Empty the entire cart

?>


<?php
// Start the session
if (session_status() === PHP_SESSION_NONE) {
    session_start();
}

// Set a custom session name if needed
session_name("user_cart_session");
?>


// Initialize cart session if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Example of adding an item to the cart
function addToCart($productId, $productName, $productPrice) {
    // Check if the product is already in the cart
    $itemExists = false;
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['product_id'] == $productId) {
            $item['quantity'] += 1;
            $item['total_price'] = $item['price'] * $item['quantity'];
            $itemExists = true;
            break;
        }
    }

    // If the product is not in the cart, add it
    if (!$itemExists) {
        $newItem = array(
            'product_id' => $productId,
            'product_name' => $productName,
            'price' => $productPrice,
            'quantity' => 1,
            'total_price' => $productPrice
        );
        $_SESSION['cart'][] = $newItem;
    }
}


function removeFromCart($productId) {
    // Loop through the cart items and remove the matching product
    foreach ($_SESSION['cart'] as $key => $item) {
        if ($item['product_id'] == $productId) {
            unset($_SESSION['cart'][$key]);
            break;
        }
    }

    // Re-index the array to maintain proper numeric keys
    $_SESSION['cart'] = array_values($_SESSION['cart']);
}


function updateQuantity($productId, $newQuantity) {
    // Check if the new quantity is valid (e.g., not negative)
    if ($newQuantity < 1) {
        return false;
    }

    foreach ($_SESSION['cart'] as &$item) {
        if ($item['product_id'] == $productId) {
            $item['quantity'] = $newQuantity;
            $item['total_price'] = $item['price'] * $item['quantity'];
            break;
        }
    }

    return true;
}


function getCartTotal() {
    $total = 0;

    foreach ($_SESSION['cart'] as $item) {
        $total += $item['total_price'];
    }

    return $total;
}


function clearCart() {
    unset($_SESSION['cart']);
    // Re-initialize an empty cart session
    $_SESSION['cart'] = array();
}


addToCart(1, 'Laptop', 999.99);


removeFromCart(1);


updateQuantity(1, 2); // Set quantity to 2


echo "Total price: $" . number_format(getCartTotal(), 2);


clearCart();


<?php
// Start the session
session_start();

// Check if session exists, if not create it
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function addToCart($item_id) {
    // Check if session exists, if not create it
    global $cart;
    if (empty($_SESSION['cart'][$item_id])) {
        // Add new item to cart with quantity 1
        $_SESSION['cart'][$item_id] = 1;
    } else {
        // If item already in cart, increment quantity
        $_SESSION['cart'][$item_id]++;
    }
    
    // Save the cart session
    setcookie('user_cart', serialize($_SESSION['cart']), time() + 3600 * 24 * 30); // Cookie expires after 30 days
}

// Function to remove item from cart
function removeFromCart($item_id) {
    global $cart;
    if (!empty($_SESSION['cart'][$item_id])) {
        unset($_SESSION['cart'][$item_id]);
        
        // Save the cart session
        setcookie('user_cart', serialize($_SESSION['cart']), time() + 3600 * 24 * 30);
    }
}

// Function to update item quantity in cart
function updateQuantity($item_id, $quantity) {
    global $cart;
    if ($quantity > 0) {
        $_SESSION['cart'][$item_id] = $quantity;
        
        // Save the cart session
        setcookie('user_cart', serialize($_SESSION['cart']), time() + 3600 * 24 * 30);
    }
}

// Function to display cart contents
function displayCart() {
    if (!empty($_SESSION['cart'])) {
        $cart = unserialize($_COOKIE['user_cart']);
        echo "<table border='1'>";
        echo "<tr><th>Item ID</th><th>Quantity</th><th>Action</th></tr>";
        
        foreach ($cart as $item_id => $quantity) {
            // Here you would typically fetch the item details from your database
            // For this example, we'll assume a simple product array
            $products = array(
                1 => 'Product 1',
                2 => 'Product 2',
                3 => 'Product 3'
            );
            
            echo "<tr>";
            echo "<td>" . $item_id . "</td>";
            echo "<td>" . $quantity . "</td>";
            echo "<td><a href='remove.php?id=" . $item_id . "'>Remove</a></td>";
            echo "</tr>";
        }
        
        echo "</table>";
    } else {
        echo "Your cart is empty.";
    }
}

// Example usage:
addToCart(1); // Add item with ID 1
updateQuantity(1, 2); // Update quantity of item 1 to 2

// Display the cart contents
displayCart();
?>


   <?php
   session_start();
   

2. **Initialize Cart if Not Set:**
   
   // Initialize cart if it doesn't exist
   if (!isset($_SESSION['cart'])) {
       $_SESSION['cart'] = array();
   }
   

3. **Adding Items to the Cart:**
   - When a user adds an item, check if it's already in the cart.
   
   $productId = intval($_POST['product_id']);
   
   if (isset($_SESSION['cart'][$productId])) {
       // Increment quantity
       $_SESSION['cart'][$productId]['quantity']++;
   } else {
       // Add new product to cart with default quantity 1
       $_SESSION['cart'][$productId] = array(
           'id' => $productId,
           'name' => 'Product Name',
           'price' => 9.99,
           'quantity' => 1
       );
   }
   

4. **Displaying Cart Contents:**
   
   echo '<h2>Shopping Cart</h2>';
   echo '<form method="post" action="remove_from_cart.php">';
   echo '<table border="1">';
   
   foreach ($_SESSION['cart'] as $item) {
       echo '<tr>';
       echo '<td>' . $item['name'] . '</td>';
       echo '<td>$' . number_format($item['price'], 2) . '</td>';
       echo '<td><input type="number" name="quantity[' . $item['id'] . ']" value="' . $item['quantity'] . '" min="1"></td>';
       echo '<td><input type="checkbox" name="remove[]" value="' . $item['id'] . '"></td>';
       echo '</tr>';
   }
   
   echo '</table>';
   echo '<button type="submit">Update Cart</button>';
   echo '<button type="submit" formaction="checkout.php">Checkout</button>';
   echo '</form>';
   

5. **Updating Item Quantities:**
   
   foreach ($_POST['quantity'] as $id => $qty) {
       $_SESSION['cart'][$id]['quantity'] = intval($qty);
   }
   

6. **Removing Items from Cart:**
   
   if (!empty($_POST['remove'])) {
       foreach ($_POST['remove'] as $productId) {
           unset($_SESSION['cart'][$productId]);
       }
       // Re-index the cart array
       $_SESSION['cart'] = array_values($_SESSION['cart']);
   }
   

7. **Calculating Total Price:**
   
   $total = 0;
   foreach ($_SESSION['cart'] as $item) {
       $total += ($item['price'] * $item['quantity']);
   }
   
   echo '<h3>Total: $' . number_format($total, 2) . '</h3>';
   

**Complete Example:**



<?php
// Initialize session
session_start();

// Check if 'cart' session exists, if not create it as an empty array
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add product to cart
function addProductToCart($productId) {
    global $products;
    
    // Get existing products in the cart or initialize as empty array
    $products = isset($_SESSION['cart']) ? $_SESSION['cart'] : [];
    
    // Check if product is already in the cart
    if (isset($products[$productId])) {
        // If exists, increment quantity by 1
        $products[$productId]['quantity']++;
    } else {
        // If not exists, add new product with quantity 1
        $products[$productId] = array(
            'id' => $productId,
            'quantity' => 1
        );
    }
    
    // Save updated cart to session
    $_SESSION['cart'] = $products;
}

// Update product quantity in cart
function updateProductQuantity($productId, $quantity) {
    global $products;
    
    // Get existing products in the cart or initialize as empty array
    $products = isset($_SESSION['cart']) ? $_SESSION['cart'] : [];
    
    if (isset($products[$productId])) {
        // Update quantity, ensuring it's not negative and within reasonable limits
        $quantity = max(0, min($quantity, 10)); // Limit max quantity to 10
        
        if ($quantity > 0) {
            $products[$productId]['quantity'] = $quantity;
        } else {
            unset($products[$productId]);
        }
        
        $_SESSION['cart'] = $products;
    }
}

// Remove product from cart
function removeProductFromCart($productId) {
    global $products;
    
    // Get existing products in the cart or initialize as empty array
    $products = isset($_SESSION['cart']) ? $_SESSION['cart'] : [];
    
    if (isset($products[$productId])) {
        unset($products[$productId]);
        $_SESSION['cart'] = $products;
    }
}

// Calculate total items in cart
function getCartTotalItems() {
    $totalItems = 0;
    
    // Get existing products in the cart or initialize as empty array
    $products = isset($_SESSION['cart']) ? $_SESSION['cart'] : [];
    
    foreach ($products as $product) {
        $totalItems += $product['quantity'];
    }
    
    return $totalItems;
}

// Example usage:
addProductToCart(1); // Add product with ID 1 to cart
updateProductQuantity(1, 3); // Update quantity of product 1 to 3
removeProductFromCart(2); // Remove product with ID 2 from cart

echo "Total items in cart: " . getCartTotalItems();
?>


<?php
session_start();
?>


if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}


// Sample product data
$product_id = 1;
$product_name = "Laptop";
$product_price = 999.99;
$quantity = 2;

// Check if item exists in cart
$item_exists = false;
foreach ($_SESSION['cart'] as $key => $item) {
    if ($item['product_id'] == $product_id) {
        $_SESSION['cart'][$key]['quantity'] += $quantity;
        $item_exists = true;
        break;
    }
}

// If item doesn't exist, add it to the cart
if (!$item_exists) {
    $_SESSION['cart'][] = array(
        "product_id" => $product_id,
        "product_name" => $product_name,
        "product_price" => $product_price,
        "quantity" => $quantity
    );
}


$product_id_to_remove = 1;

foreach ($_SESSION['cart'] as $key => $item) {
    if ($item['product_id'] == $product_id_to_remove) {
        unset($_SESSION['cart'][$key]);
        break;
    }
}

// Re-index the array to maintain numeric keys
$_SESSION['cart'] = array_values($_SESSION['cart']);


$product_id_to_update = 1;
$new_quantity = 3;

foreach ($_SESSION['cart'] as $key => $item) {
    if ($item['product_id'] == $product_id_to_update) {
        $_SESSION['cart'][$key]['quantity'] = $new_quantity;
        break;
    }
}


echo "<h2>Shopping Cart</h2>";
if (empty($_SESSION['cart'])) {
    echo "Your cart is empty!";
} else {
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $subtotal = $item['product_price'] * $item['quantity'];
        $total += $subtotal;
        echo "<div>";
        echo "Product ID: " . $item['product_id'] . "<br>";
        echo "Product Name: " . $item['product_name'] . "<br>";
        echo "Quantity: " . $item['quantity'] . "<br>";
        echo "Price: $" . number_format($item['product_price'], 2) . "<br>";
        echo "Subtotal: $" . number_format($subtotal, 2);
        echo "</div><hr>";
    }
    echo "<h3>Total: $" . number_format($total, 2) . "</h3>";
}


$_SESSION['cart'] = array();


session_unset();
session_destroy();


<?php
session_start();

if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add item to cart
$product_id = 1;
$product_name = "Laptop";
$product_price = 999.99;
$quantity = 2;

$item_exists = false;
foreach ($_SESSION['cart'] as $key => $item) {
    if ($item['product_id'] == $product_id) {
        $_SESSION['cart'][$key]['quantity'] += $quantity;
        $item_exists = true;
        break;
    }
}

if (!$item_exists) {
    $_SESSION['cart'][] = array(
        "product_id" => $product_id,
        "product_name" => $product_name,
        "product_price" => $product_price,
        "quantity" => $quantity
    );
}

// Remove item from cart
$product_id_to_remove = 1;
foreach ($_SESSION['cart'] as $key => $item) {
    if ($item['product_id'] == $product_id_to_remove) {
        unset($_SESSION['cart'][$key]);
        break;
    }
}
$_SESSION['cart'] = array_values($_SESSION['cart']);

// Update item quantity
$product_id_to_update = 1;
$new_quantity = 3;

foreach ($_SESSION['cart'] as $key => $item) {
    if ($item['product_id'] == $product_id_to_update) {
        $_SESSION['cart'][$key]['quantity'] = $new_quantity;
        break;
    }
}

// Display cart contents
echo "<h2>Shopping Cart</h2>";
if (empty($_SESSION['cart'])) {
    echo "Your cart is empty!";
} else {
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $subtotal = $item['product_price'] * $item['quantity'];
        $total += $subtotal;
        echo "<div>";
        echo "Product ID: " . $item['product_id'] . "<br>";
        echo "Product Name: " . $item['product_name'] . "<br>";
        echo "Quantity: " . $item['quantity'] . "<br>";
        echo "Price: $" . number_format($item['product_price'], 2) . "<br>";
        echo "Subtotal: $" . number_format($subtotal, 2);
        echo "</div><hr>";
    }
    echo "<h3>Total: $" . number_format($total, 2) . "</h3>";
}

// Empty cart
$_SESSION['cart'] = array();

// Destroy session
session_unset();
session_destroy();
?>


<?php
// Start session
if (session_status() == PHP_SESSION_NONE) {
    session_start();
}

// Set session variables for the cart
$_SESSION['cart_id'] = uniqid(); // Generate unique cart ID

// Add items to the cart
function addToCart($productId, $quantity) {
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }
    
    $cartItem = array(
        'product_id' => $productId,
        'quantity' => $quantity
    );
    
    $_SESSION['cart'][$_SESSION['cart_id']] = $cartItem;
}

// Display cart items
function displayCart() {
    if (isset($_SESSION['cart'])) {
        echo "<h2>Your Cart:</h2>";
        echo "<ul>";
        foreach ($_SESSION['cart'] as $item) {
            echo "<li>Product ID: " . $item['product_id'] . ", Quantity: " . $item['quantity'] . "</li>";
        }
        echo "</ul>";
    } else {
        echo "<p>Your cart is empty.</p>";
    }
}

// Remove item from cart
function removeItem($productId) {
    if (isset($_SESSION['cart'])) {
        foreach ($_SESSION['cart'] as $key => $item) {
            if ($item['product_id'] == $productId) {
                unset($_SESSION['cart'][$key]);
                $_SESSION['cart'] = array_values($_SESSION['cart']); // Re-index the array
                return true;
            }
        }
    }
    return false;
}

// Empty the cart
function emptyCart() {
    unset($_SESSION['cart']);
    $_SESSION['cart_id'] = uniqid(); // Generate new cart ID
}

// Example usage:
addToCart(123, 2);
displayCart();
removeItem(123);
emptyCart();

?>


<?php
session_start();

// Initialize cart if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function addToCart($productId, $productName, $price) {
    global $cart;
    
    // Check if product already exists in cart
    $found = false;
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['product_id'] == $productId) {
            $item['quantity']++;
            $found = true;
            break;
        }
    }
    
    // Add new item if not found
    if (!$found) {
        $_SESSION['cart'][] = array(
            'product_id' => $productId,
            'product_name' => $productName,
            'price' => $price,
            'quantity' => 1
        );
    }
}

// Function to display cart contents
function displayCart() {
    if (empty($_SESSION['cart'])) {
        echo "Your cart is empty.";
    } else {
        echo "<table>";
        echo "<tr><th>Product</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>";
        
        foreach ($_SESSION['cart'] as $item) {
            $total = $item['price'] * $item['quantity'];
            echo "<tr>";
            echo "<td>" . $item['product_name'] . "</td>";
            echo "<td>$$item[price]</td>";
            echo "<td><input type='number' min='1' value='" . $item['quantity'] . "'></td>";
            echo "<td>$$total</td>";
            echo "<td><a href='?remove=" . $item['product_id'] . "'>Remove</a></td>";
            echo "</tr>";
        }
        
        echo "</table>";
    }
}

// Function to remove item from cart
function removeFromCart($productId) {
    foreach ($_SESSION['cart'] as $key => $item) {
        if ($item['product_id'] == $productId) {
            unset($_SESSION['cart'][$key]);
            break;
        }
    }
    
    // Re-index the array keys
    $_SESSION['cart'] = array_values($_SESSION['cart']);
}

// Function to calculate cart total
function calculateTotal() {
    $total = 0;
    
    foreach ($_SESSION['cart'] as $item) {
        $total += $item['price'] * $item['quantity'];
    }
    
    return $total;
}

// Initialize cart if it doesn't exist
initializeCart();

// Example usage:
if (isset($_GET['add'])) {
    // Add item to cart
    addToCart(1, 'Product 1', 29.99);
} elseif (isset($_GET['remove'])) {
    // Remove item from cart
    removeFromCart($_GET['remove']);
}

?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <!-- Example product to add -->
    <a href="?add=1">Add Product 1 to Cart</a>

    <?php displayCart(); ?>

    <!-- Show total price -->
    <h3>Total: $<?php echo calculateTotal(); ?></h3>

    <!-- Destroy session -->
    <form action="" method="post">
        <input type="submit" name="destroy_session" value="Logout">
    </form>

    <?php
    // Destroy session when user logs out
    if (isset($_POST['destroy_session'])) {
        session_unset();
        session_destroy();
    }
    ?>
</body>
</html>


<?php
session_start();

// Initialize cart if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function addToCart($item_id, $item_name, $price, $quantity) {
    global $db;
    
    // Check if item is already in cart
    $is_in_cart = false;
    foreach ($_SESSION['cart'] as $key => $item) {
        if ($item['item_id'] == $item_id) {
            $_SESSION['cart'][$key]['quantity'] += $quantity;
            $is_in_cart = true;
            break;
        }
    }

    // If item is not in cart, add it
    if (!$is_in_cart) {
        $_SESSION['cart'][] = array(
            'item_id' => $item_id,
            'item_name' => $item_name,
            'price' => $price,
            'quantity' => $quantity
        );
    }
}

// Function to update item quantity in cart
function updateCart($item_id, $quantity) {
    foreach ($_SESSION['cart'] as $key => $item) {
        if ($item['item_id'] == $item_id) {
            $_SESSION['cart'][$key]['quantity'] = $quantity;
            
            // If quantity is 0, remove item from cart
            if ($quantity == 0) {
                unset($_SESSION['cart'][$key]);
                // Re-index the array to maintain keys
                $_SESSION['cart'] = array_values($_SESSION['cart']);
            }
            break;
        }
    }
}

// Function to remove item from cart
function removeFromCart($item_id) {
    foreach ($_SESSION['cart'] as $key => $item) {
        if ($item['item_id'] == $item_id) {
            unset($_SESSION['cart'][$key]);
            // Re-index the array to maintain keys
            $_SESSION['cart'] = array_values($_SESSION['cart']);
            break;
        }
    }
}

// Function to display cart contents
function displayCart() {
    $total_price = 0;
    if (!empty($_SESSION['cart'])) {
        echo "<table>";
        foreach ($_SESSION['cart'] as $item) {
            $price = $item['price'];
            $quantity = $item['quantity'];
            $total = $price * $quantity;
            $total_price += $total;

            echo "<tr>";
            echo "<td>" . $item['item_name'] . "</td>";
            echo "<td>₹" . number_format($price, 2) . "</td>";
            echo "<td><a href='update_cart.php?action=decrease&id=" . $item['item_id'] . "'>-</a> " . $quantity . " <a href='update_cart.php?action=increase&id=" . $item['item_id'] . "'>+</a></td>";
            echo "<td>₹" . number_format($total, 2) . "</td>";
            echo "<td><a href='cart.php?action=remove&id=" . $item['item_id'] . "'>Remove</a></td>";
            echo "</tr>";
        }
        echo "</table>";
        echo "<h3>Total: ₹" . number_format($total_price, 2) . "</h3>";
    } else {
        echo "Your cart is empty!";
    }
}

// Example usage:
if (isset($_GET['action'])) {
    switch ($_GET['action']) {
        case 'add':
            $item_id = $_GET['id'];
            // Get item details from database or array
            $item_name = "Item Name";
            $price = 99.99;
            $quantity = 1;
            addToCart($item_id, $item_name, $price, $quantity);
            break;

        case 'update':
            $item_id = $_GET['id'];
            $quantity = $_GET['quantity'];
            updateCart($item_id, $quantity);
            break;

        case 'remove':
            $item_id = $_GET['id'];
            removeFromCart($item_id);
            break;
    }
}

// Display cart
displayCart();
?>


<?php
// Start the session
session_start();

// Initialize shopping cart session variable if it doesn't exist
if (!isset($_SESSION['shopping_cart'])) {
    $_SESSION['shopping_cart'] = array();
}

// Function to add item to cart
function addToCart($item_id, $item_name, $item_price) {
    global $db;
    
    // Check if item already exists in cart
    foreach ($_SESSION['shopping_cart'] as &$item) {
        if ($item['id'] == $item_id) {
            // If item exists, increase quantity
            $item['quantity']++;
            return;
        }
    }
    
    // If item doesn't exist, add it to the cart
    $_SESSION['shopping_cart'][] = array(
        'id' => $item_id,
        'name' => $item_name,
        'price' => $item_price,
        'quantity' => 1
    );
}

// Function to update quantity of an item in cart
function updateQuantity($item_id, $new_quantity) {
    foreach ($_SESSION['shopping_cart'] as &$item) {
        if ($item['id'] == $item_id) {
            // Ensure quantity is at least 1
            $item['quantity'] = max(1, $new_quantity);
            return;
        }
    }
}

// Function to remove item from cart
function removeFromCart($item_id) {
    foreach ($_SESSION['shopping_cart'] as $key => $item) {
        if ($item['id'] == $item_id) {
            unset($_SESSION['shopping_cart'][$key]);
            // Re-index the array
            $_SESSION['shopping_cart'] = array_values($_SESSION['shopping_cart']);
            return;
        }
    }
}

// Function to calculate total price of items in cart
function cartTotal() {
    $total = 0;
    foreach ($_SESSION['shopping_cart'] as $item) {
        $total += ($item['price'] * $item['quantity']);
    }
    return $total;
}

// Example usage:
// addToCart(1, 'Product A', 29.99);
// updateQuantity(1, 3);
// removeFromCart(1);

// Display cart contents
if (!empty($_SESSION['shopping_cart'])) {
    echo "<h2>Your Shopping Cart</h2>";
    echo "<table>";
    foreach ($_SESSION['shopping_cart'] as $item) {
        echo "<tr>";
        echo "<td>" . $item['name'] . "</td>";
        echo "<td>$$item[price]</td>";
        echo "<td>Quantity: $item[quantity]</td>";
        echo "<td><a href='remove.php?id=$item[id]'>Remove</a></td>";
        echo "</tr>";
    }
    echo "</table>";
    echo "<p>Total: $" . cartTotal() . "</p>";
} else {
    echo "Your cart is empty!";
}

// Destroy session when done
// session_unset();
// session_destroy();
?>


session_start();


if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}


session_start();

if (isset($_POST['add_to_cart'])) {
    $productId = isset($_POST['product_id']) ? $_POST['product_id'] : '';
    $productName = isset($_POST['product_name']) ? $_POST['product_name'] : '';
    $price = isset($_POST['price']) ? $_POST['price'] : 0;
    $quantity = isset($_POST['quantity']) && ctype_digit($_POST['quantity']) ? (int)$_POST['quantity'] : 1;

    if ($productId) {
        $found = false;
        foreach ($_SESSION['cart'] as &$item) {
            if ($item['product_id'] == $productId) {
                $item['quantity'] += $quantity;
                $found = true;
                break;
            }
        }

        if (!$found) {
            $_SESSION['cart'][] = array(
                'product_id' => $productId,
                'name' => $productName,
                'price' => $price,
                'quantity' => $quantity
            );
        }

        $message = "Item added to cart successfully!";
    } else {
        $message = "Error: Product not found.";
    }

    header("Location: product_page.php?msg=" . urlencode($message));
    die();
}


session_start();

echo "<h1>Shopping Cart</h1>";
if (!empty($_SESSION['cart'])) {
    echo "<table border='1'>";
    echo "<tr><th>Product Name</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>";
    foreach ($_SESSION['cart'] as $item) {
        $total = $item['price'] * $item['quantity'];
        echo "<tr>";
        echo "<td>{$item['name']}</td>";
        echo "<td>${$item['price']}</td>";
        echo "<td>{$item['quantity']}</td>";
        echo "<td>${$total}</td>";
        echo "<td><a href='remove_from_cart.php?id={$item['product_id']}'>Remove</a></td>";
        echo "</tr>";
    }
    echo "</table>";
} else {
    echo "Your cart is empty.";
}


session_start();

if (isset($_GET['id'])) {
    $productId = $_GET['id'];
    foreach ($_SESSION['cart'] as $key => $item) {
        if ($item['product_id'] == $productId) {
            unset($_SESSION['cart'][$key]);
            break;
        }
    }
    // Re-index the array
    $_SESSION['cart'] = array_values($_SESSION['cart']);
}

header("Location: view_cart.php");
die();


<?php
// Initialize the session
session_start();

// Check if cart exists in the session, if not initialize it
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function addToCart($productId, $productName) {
    global $mysqli;
    
    // Check if product is already in cart
    $found = false;
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['product_id'] == $productId) {
            $item['quantity']++;
            $found = true;
            break;
        }
    }
    
    // If not found, add new product to cart
    if (!$found) {
        $newItem = array(
            'product_id' => $productId,
            'product_name' => $productName,
            'quantity' => 1
        );
        $_SESSION['cart'][] = $newItem;
    }
    
    // Redirect back to the product page
    header("Location: " . $_SERVER['HTTP_REFERER']);
    exit();
}

// Function to display cart contents
function showCart() {
    if (empty($_SESSION['cart'])) {
        echo "<p>Your cart is empty.</p>";
    } else {
        $total = 0;
        echo "<table border='1'>";
        echo "<tr><th>Product Name</th><th>Quantity</th><th>Total</th><th>Action</th></tr>";
        
        foreach ($_SESSION['cart'] as $item) {
            $subtotal = $item['price'] * $item['quantity'];
            $total += $subtotal;
            
            echo "<tr>";
            echo "<td>" . $item['product_name'] . "</td>";
            echo "<td>" . $item['quantity'] . "</td>";
            echo "<td>$" . number_format($subtotal, 2) . "</td>";
            echo "<td><a href='remove_from_cart.php?id=" . $item['product_id'] . "'>Remove</a></td>";
            echo "</tr>";
        }
        
        echo "<tr><td colspan='3'><strong>Grand Total:</strong></td><td>$" . number_format($total, 2) . "</td></tr>";
        echo "</table>";
    }
}

// Function to clear cart
function clearCart() {
    $_SESSION['cart'] = array();
    header("Location: " . $_SERVER['HTTP_REFERER']);
    exit();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <!-- Add to cart form -->
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <input type="hidden" name="product_id" value="<?php echo $productId; ?>">
        <input type="hidden" name="product_name" value="<?php echo $productName; ?>">
        <button type="submit">Add to Cart</button>
    </form>

    <!-- Display cart contents -->
    <?php showCart(); ?>

    <!-- Clear cart button -->
    <a href="clear_cart.php">Clear Cart</a>
</body>
</html>


<?php
// Start the session
session_start();

// Check if the cart is already set in the session, initialize it if not
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add an item to the cart (example)
$item_id = 1;
$item_name = "Product A";
$item_price = 29.99;
$item_quantity = 1;

// Create an associative array for the item
$item = array(
    'id' => $item_id,
    'name' => $item_name,
    'price' => $item_price,
    'quantity' => $item_quantity
);

// Add the item to the cart
array_push($_SESSION['cart'], $item);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <?php
    // Display the contents of the cart
    if (!empty($_SESSION['cart'])) {
        echo "<h2>Your Cart:</h2>";
        echo "<ul>";
        foreach ($_SESSION['cart'] as $index => $item) {
            echo "<li>";
            echo "ID: " . $item['id'];
            echo ", Name: " . $item['name'];
            echo ", Price: $" . number_format($item['price'], 2);
            echo ", Quantity: " . $item['quantity'];
            echo " <a href='remove_from_cart.php?index=" . $index . "'>Remove</a>";
            echo "</li>";
        }
        echo "</ul>";
    } else {
        echo "<p>Your cart is empty.</p>";
    }
    ?>
    
    <?php
    // Add an item form
    if (isset($_POST['add_to_cart'])) {
        $item_id = $_POST['item_id'];
        $item_name = $_POST['item_name'];
        $item_price = $_POST['item_price'];
        $item_quantity = $_POST['item_quantity'];
        
        // Validate input data
        if (!empty($item_id) && !empty($item_name) && !empty($item_price)) {
            $new_item = array(
                'id' => $item_id,
                'name' => $item_name,
                'price' => $item_price,
                'quantity' => $item_quantity
            );
            
            array_push($_SESSION['cart'], $new_item);
            echo "<p>Item added to cart!</p>";
        } else {
            echo "<p>Please fill in all required fields.</p>";
        }
    }
    ?>
    
    <h2>Add Item to Cart</h2>
    <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
        <label for="item_id">Item ID:</label><br>
        <input type="text" id="item_id" name="item_id"><br><br>
        
        <label for="item_name">Item Name:</label><br>
        <input type="text" id="item_name" name="item_name"><br><br>
        
        <label for="item_price">Price:</label><br>
        <input type="number" step="0.01" id="item_price" name="item_price"><br><br>
        
        <label for="item_quantity">Quantity:</label><br>
        <input type="number" min="1" id="item_quantity" name="item_quantity" value="1"><br><br>
        
        <input type="submit" name="add_to_cart" value="Add to Cart">
    </form>
</body>
</html>

<?php
// Remove an item from the cart (example)
if (isset($_GET['remove'])) {
    $index = $_GET['remove'];
    
    if (!empty($index) && isset($_SESSION['cart'][$index])) {
        unset($_SESSION['cart'][$index]);
        // Re-index the array to maintain proper keys
        $_SESSION['cart'] = array_values($_SESSION['cart']);
        echo "<p>Item removed from cart!</p>";
    } else {
        echo "<p>Invalid item index.</p>";
    }
}
?>


<?php
session_start(); // Initialize the session

// Check if cart exists in session, if not create it
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function addToCart($item_id, $item_name, $item_price) {
    global $conn; // Database connection
    
    // Check if the product exists in database
    $sql = "SELECT * FROM products WHERE id = '$item_id'";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) > 0) {
        // If item not present in cart, add it
        if (!isset($_SESSION['cart'][$item_id])) {
            $_SESSION['cart'][$item_id] = array(
                'id' => $item_id,
                'name' => $item_name,
                'price' => $item_price,
                'quantity' => 1
            );
            echo "Item added to cart!";
        } else {
            // If item already exists, increment quantity
            $_SESSION['cart'][$item_id]['quantity']++;
            echo "Quantity updated!";
        }
    } else {
        echo "Product not found!";
    }
}

// Function to view cart contents
function viewCart() {
    $total = 0;
    if (empty($_SESSION['cart'])) {
        echo "<p>Your cart is empty!</p>";
    } else {
        echo "<table>";
        echo "<tr><th>Item</th><th>Price</th><th>Quantity</th><th>Total</th></tr>";
        
        foreach ($_SESSION['cart'] as $item) {
            $subtotal = $item['price'] * $item['quantity'];
            $total += $subtotal;
            
            echo "<tr>";
            echo "<td>".$item['name']."</td>";
            echo "<td>$".$item['price']."</td>";
            echo "<td>".$item['quantity']."</td>";
            echo "<td>$".number_format($subtotal, 2)."</td>";
            echo "</tr>";
        }
        
        echo "<tr><td colspan='3'><strong>Total:</strong></td><td>$".number_format($total, 2)."</td></tr>";
        echo "</table>";
    }
}

// Function to update item quantity
function updateQuantity($item_id, $quantity) {
    if (isset($_SESSION['cart'][$item_id])) {
        $_SESSION['cart'][$item_id]['quantity'] = $quantity;
        echo "Quantity updated!";
    }
}

// Function to delete item from cart
function deleteItem($item_id) {
    if (isset($_SESSION['cart'][$item_id])) {
        unset($_SESSION['cart'][$item_id]);
        echo "Item removed from cart!";
    }
}

// Example usage:

if ($_GET['action'] == 'add') {
    $id = $_GET['id'];
    $name = $_GET['name'];
    $price = $_GET['price'];
    
    addToCart($id, $name, $price);
} elseif ($_GET['action'] == 'view') {
    viewCart();
} elseif ($_GET['action'] == 'update') {
    $id = $_POST['id'];
    $quantity = $_POST['quantity'];
    
    updateQuantity($id, $quantity);
} elseif ($_GET['action'] == 'delete') {
    $id = $_GET['id'];
    
    deleteItem($id);
}

?>


<?php
session_start();

// Sample product data (you can replace this with your own product fetching logic)
$products = [
    ['id' => 1, 'name' => 'Product 1', 'price' => 29.99],
    ['id' => 2, 'name' => 'Product 2', 'price' => 49.99],
    ['id' => 3, 'name' => 'Product 3', 'price' => 19.99]
];
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <?php if (isset($_SESSION['cart']) && count($_SESSION['cart']) > 0) { ?>
        <a href="view_cart.php">View Cart</a>
    <?php } ?>

    <h2>Products</h2>
    <ul>
        <?php foreach ($products as $product) { ?>
            <li>
                <?php echo $product['name']; ?> - $<?php echo number_format($product['price'], 2); ?>
                <form action="add_to_cart.php" method="post">
                    <input type="hidden" name="id" value="<?php echo $product['id']; ?>">
                    <input type="number" name="quantity" min="1" value="1">
                    <button type="submit">Add to Cart</button>
                </form>
            </li>
        <?php } ?>
    </ul>
</body>
</html>


<?php
session_start();

// Get product data from form submission
$product_id = $_POST['id'];
$quantity = $_POST['quantity'];

// Initialize cart if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Check if item already exists in the cart
$found = false;
foreach ($_SESSION['cart'] as &$item) {
    if ($item['id'] == $product_id) {
        $found = true;
        $item['quantity'] += $quantity;
        break;
    }
}

if (!$found) {
    // Add new item to the cart
    array_push($_SESSION['cart'], array(
        'id' => $product_id,
        'quantity' => $quantity
    ));
}

// Redirect back to main page or wherever you want
header("Location: index.php");
exit();


<?php
session_start();

if (!isset($_SESSION['cart']) || count($_SESSION['cart']) == 0) {
    echo "Your cart is empty!";
    exit();
}

// For demonstration, we'll use a simple array of products (replace with your actual product data)
$products = [
    ['id' => 1, 'name' => 'Product 1', 'price' => 29.99],
    ['id' => 2, 'name' => 'Product 2', 'price' => 49.99],
    ['id' => 3, 'name' => 'Product 3', 'price' => 19.99]
];
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <h2>Your Shopping Cart</h2>
    <?php if (isset($_SESSION['cart']) && count($_SESSION['cart']) > 0) { ?>
        <ul>
            <?php foreach ($_SESSION['cart'] as $item) {
                // Find the product details using the ID
                foreach ($products as $product) {
                    if ($product['id'] == $item['id']) {
                        $total_price = $product['price'] * $item['quantity'];
                        ?>
                        <li>
                            <?php echo $product['name']; ?> (Quantity: <?php echo $item['quantity']; ?>)
                            - Total: $<?php echo number_format($total_price, 2); ?>
                            <form action="update_cart.php" method="post">
                                <input type="hidden" name="id" value="<?php echo $product['id']; ?>">
                                <input type="number" name="quantity" min="1" value="<?php echo $item['quantity']; ?>">
                                <button type="submit">Update</button>
                            </form>
                            <form action="remove_from_cart.php" method="post">
                                <input type="hidden" name="id" value="<?php echo $product['id']; ?>">
                                <button type="submit">Remove</button>
                            </form>
                        </li>
                        <?php
                        break;
                    }
                }
            } ?>
        </ul>
        <a href="remove_from_cart.php">Empty Cart</a>
    <?php } else { ?>
        <p>Your cart is empty!</p>
    <?php } ?>

    <a href="index.php">Continue Shopping</a>
</body>
</html>


<?php
session_start();

if (isset($_POST['id']) && isset($_POST['quantity'])) {
    $product_id = $_POST['id'];
    $new_quantity = $_POST['quantity'];

    foreach ($_SESSION['cart'] as &$item) {
        if ($item['id'] == $product_id) {
            $item['quantity'] = $new_quantity;
            break;
        }
    }

    // Redirect back to cart view
    header("Location: view_cart.php");
    exit();
}


<?php
session_start();

if (isset($_POST['id'])) {
    $product_id = $_POST['id'];

    foreach ($_SESSION['cart'] as $key => &$item) {
        if ($item['id'] == $product_id) {
            unset($_SESSION['cart'][$key]);
            break;
        }
    }

    // Redirect back to cart view
    header("Location: view_cart.php");
    exit();
}


<?php
function format_price($number) {
    return number_format($number, 2);
}
?>


<?php
session_start();
?>


<?php
session_start();

// Get product details from form submission
$product_id = isset($_POST['product_id']) ? $_POST['product_id'] : '';
$product_name = isset($_POST['product_name']) ? $_POST['product_name'] : '';
$product_price = isset($_POST['product_price']) ? $_POST['product_price'] : '';
$quantity = isset($_POST['quantity']) ? $_POST['quantity'] : 1;

// Initialize cart if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Create item array
$item = array(
    'id' => $product_id,
    'name' => $product_name,
    'price' => $product_price,
    'quantity' => $quantity
);

// Check if product already exists in cart
$found = false;
foreach ($_SESSION['cart'] as &$item_cart) {
    if ($item_cart['id'] == $product_id) {
        $item_cart['quantity'] += $quantity;
        $found = true;
        break;
    }
}

if (!$found) {
    array_push($_SESSION['cart'], $item);
}

// Redirect back to cart page
header("Location: view_cart.php");
exit();
?>


<?php
session_start();

$total_price = 0;
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
    <style>
        /* Add your CSS styles here */
        .cart-item { margin: 10px; padding: 10px; border: 1px solid #ddd; }
    </style>
</head>
<body>
    <h2>Your Shopping Cart</h2>

    <?php
    if (isset($_SESSION['cart']) && count($_SESSION['cart']) > 0) {
        foreach ($_SESSION['cart'] as $index => $item) {
            $total_price += ($item['price'] * $item['quantity']);
    ?>

        <div class="cart-item">
            <h3><?php echo $item['name']; ?></h3>
            <p>Price: <?php echo "$" . number_format($item['price'], 2); ?></p>
            <p>Quantity: <?php echo $item['quantity']; ?></p>
            <a href="remove_from_cart.php?index=<?php echo $index; ?>">Remove</a>
        </div>

    <?php
        }
        ?>

        <h3>Total Price: <?php echo "$" . number_format($total_price, 2); ?></h3>
        <a href="checkout.php">Proceed to Checkout</a>

    <?php
    } else {
        ?>

        <p>Your cart is empty.</p>

    <?php
    }
    ?>
</body>
</html>


<?php
session_start();

if (isset($_GET['index'])) {
    $index = $_GET['index'];
    if (isset($_SESSION['cart'][$index])) {
        unset($_SESSION['cart'][$index]);
        // Re-index the array
        $_SESSION['cart'] = array_values($_SESSION['cart']);
    }
}

// Redirect back to cart page
header("Location: view_cart.php");
exit();
?>


<?php
session_start();
session_unset(); // Unset all session variables
session_destroy(); // Destroy the session
header("Location: login.php"); // Redirect to login page
exit();
?>


<form action="add_to_cart.php" method="post">
    <input type="hidden" name="product_id" value="<?php echo $product['id']; ?>">
    <input type="hidden" name="product_name" value="<?php echo $product['name']; ?>">
    <input type="hidden" name="product_price" value="<?php echo $product['price']; ?>">
    <input type="number" name="quantity" min="1" value="1">
    <button type="submit">Add to Cart</button>
</form>


<?php
session_start();

// Initialize cart if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function addToCart($item_id, $quantity = 1) {
    global $db;
    
    // Validate input
    $item_id = intval($item_id);
    $quantity = max(1, intval($quantity));
    
    if (isset($_SESSION['cart'][$item_id])) {
        // If item already exists in cart, update quantity
        $_SESSION['cart'][$item_id]['quantity'] += $quantity;
    } else {
        // Get product details from database
        $result = $db->query("SELECT * FROM products WHERE id = $item_id");
        if ($result && $result->num_rows > 0) {
            $product = $result->fetch_assoc();
            $_SESSION['cart'][$item_id] = array(
                'id' => $item_id,
                'name' => $product['name'],
                'price' => $product['price'],
                'quantity' => $quantity
            );
        }
    }
}

// Function to update cart quantity
function updateCart($item_id, $quantity) {
    $item_id = intval($item_id);
    $quantity = max(1, intval($quantity));
    
    if (isset($_SESSION['cart'][$item_id])) {
        $_SESSION['cart'][$item_id]['quantity'] = $quantity;
    }
}

// Function to remove item from cart
function removeFromCart($item_id) {
    $item_id = intval($item_id);
    
    unset($_SESSION['cart'][$item_id]);
    // Re-index the array
    $_SESSION['cart'] = array_values($_SESSION['cart']);
}

// Display cart contents
function displayCart() {
    if (!empty($_SESSION['cart'])) {
        echo "<table>";
        foreach ($_SESSION['cart'] as $item) {
            echo "<tr>";
                echo "<td>{$item['name']}</td>";
                echo "<td>$$item['price']}</td>";
                echo "<td><input type='number' value='{$item['quantity']}' onChange='updateQuantity({$item['id']}, this.value)'></td>";
                echo "<td><a href='remove.php?id={$item['id']}'>Remove</a></td>";
            echo "</tr>";
        }
        echo "</table>";
    } else {
        echo "Your cart is empty.";
    }
}

// Example usage:
// Adding item to cart
if (isset($_POST['add_to_cart'])) {
    addToCart($_POST['item_id'], $_POST['quantity']);
}

// Updating quantity
if (isset($_POST['update_quantity'])) {
    updateCart($_POST['item_id'], $_POST['quantity']);
}

// Removing item from cart
if (isset($_GET['remove_item'])) {
    removeFromCart($_GET['remove_item']);
}
?>


<?php
// Initialize the session
session_start();

// Include session configuration file
include_once "session_config.php";

// Check if the cart is already set in the session
if (!isset($_SESSION['cart'])) {
    // If not, initialize an empty array for the cart
    $_SESSION['cart'] = array();
}

// Adding items to the cart
function addToCart($productId, $productName, $productPrice) {
    global $mysqli;
    
    // Check if the product is already in the cart
    if (isset($_SESSION['cart'][$productId])) {
        // If yes, increment the quantity
        $_SESSION['cart'][$productId]['quantity']++;
    } else {
        // If no, add the product to the cart
        $item = array(
            'product_id' => $productId,
            'product_name' => $productName,
            'product_price' => $productPrice,
            'quantity' => 1
        );
        $_SESSION['cart'][$productId] = $item;
    }
}

// Displaying the cart contents
function displayCart() {
    if (empty($_SESSION['cart'])) {
        echo "Your cart is empty.";
        return;
    }

    $total = 0;

    // Loop through each item in the cart
    foreach ($_SESSION['cart'] as $item) {
        $productTotal = $item['product_price'] * $item['quantity'];
        $total += $productTotal;

        echo "<div class='cart-item'>";
        echo "<p>Product ID: " . $item['product_id'] . "</p>";
        echo "<p>Product Name: " . $item['product_name'] . "</p>";
        echo "<p>Price: $" . number_format($item['product_price'], 2) . "</p>";
        echo "<p>Quantity: " . $item['quantity'] . "</p>";
        echo "<p>Total: $" . number_format($productTotal, 2) . "</p>";
        echo "</div>";
    }

    // Display the grand total
    echo "<h3>Grand Total: $" . number_format($total, 2) . "</h3>";
}

// Removing items from the cart
function removeItemFromCart($productId) {
    if (isset($_SESSION['cart'][$productId])) {
        unset($_SESSION['cart'][$productId]);
        // Re-index the array to maintain proper structure
        $_SESSION['cart'] = array_values($_SESSION['cart']);
    }
}

// Example usage:
if (isset($_GET['add'])) {
    $productId = intval($_GET['add']);
    addToCart($productId, "Product Name", 29.99);
} elseif (isset($_GET['remove'])) {
    $productId = intval($_GET['remove']);
    removeItemFromCart($productId);
}

// Display the cart
displayCart();
?>


<?php
// Start the session
if (session_status() == PHP_SESSION_NONE) {
    session_start();
}

// Set session save path
$save_path = ini_set('session.save_path', '/tmp');
?>


<!DOCTYPE html>
<html>
<head>
    <title>Add to Cart</title>
</head>
<body>
    <h1>Product Details</h1>
    <form action="add_to_cart.php" method="post">
        <input type="hidden" name="product_id" value="<?php echo $product_id; ?>">
        <input type="text" name="product_name" placeholder="Enter product name">
        <input type="number" name="price" placeholder="Enter price">
        <input type="number" name="quantity" placeholder="Enter quantity">
        <button type="submit">Add to Cart</button>
    </form>
</body>
</html>


<?php
session_start();

// Get product details from form
$product_id = isset($_POST['product_id']) ? $_POST['product_id'] : '';
$product_name = isset($_POST['product_name']) ? $_POST['product_name'] : '';
$price = isset($_POST['price']) ? $_POST['price'] : 0;
$quantity = isset($_POST['quantity']) ? $_POST['quantity'] : 1;

// Validate input
if (empty($product_id) || empty($product_name) || $price <= 0 || $quantity <= 0) {
    die("Invalid product details");
}

// Sanitize input to prevent XSS attacks
$product_id = htmlspecialchars($product_id);
$product_name = htmlspecialchars($product_name);
$price = floatval($price);
$quantity = intval($quantity);

// Initialize cart if not set
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Check if product already exists in cart
$product_exists = false;
foreach ($_SESSION['cart'] as &$item) {
    if ($item['product_id'] == $product_id) {
        $item['quantity'] += $quantity;
        $item['price'] += $price * $quantity;
        $product_exists = true;
        break;
    }
}

// If product does not exist, add it to the cart
if (!$product_exists) {
    $_SESSION['cart'][] = array(
        'product_id' => $product_id,
        'product_name' => $product_name,
        'price' => $price * $quantity,
        'quantity' => $quantity
    );
}

// Redirect back to the cart page
header("Location: view_cart.php");
exit();
?>


<?php
session_start();

// Check if cart exists in session
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <h1>Your Shopping Cart</h1>
    <?php if (empty($_SESSION['cart'])) { ?>
        <p>Your cart is empty.</p>
    <?php } else { ?>
        <table border="1">
            <tr>
                <th>Product Name</th>
                <th>Quantity</th>
                <th>Price</th>
                <th>Action</th>
            </tr>
            <?php foreach ($_SESSION['cart'] as $item) { ?>
                <tr>
                    <td><?php echo $item['product_name']; ?></td>
                    <td><?php echo $item['quantity']; ?></td>
                    <td><?php echo "$" . number_format($item['price'], 2); ?></td>
                    <td>
                        <form action="remove_from_cart.php" method="post">
                            <input type="hidden" name="product_id" value="<?php echo $item['product_id']; ?>">
                            <button type="submit">Remove</button>
                        </form>
                    </td>
                </tr>
            <?php } ?>
        </table>
    <?php } ?>

    <p><a href="continue_shopping.php">Continue Shopping</a></p>
</body>
</html>


<?php
session_start();

// Get product ID from form
$product_id = isset($_POST['product_id']) ? $_POST['product_id'] : '';

// Validate input
if (empty($product_id)) {
    die("Invalid product ID");
}

// Remove the item from cart
foreach ($_SESSION['cart'] as $key => &$item) {
    if ($item['product_id'] == $product_id) {
        unset($_SESSION['cart'][$key]);
        break;
    }
}

// Re-index the array keys
$_SESSION['cart'] = array_values($_SESSION['cart']);

// Redirect back to cart page
header("Location: view_cart.php");
exit();
?>


<?php
// Start the session
session_start();

// Check if the cart exists in the session, initialize if not
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add an item to the cart
function addToCart($productId, $productName, $productPrice) {
    global $mysqli; // Assuming you have a database connection
    
    // Check if the product exists in the database
    $query = "SELECT * FROM products WHERE id = ?";
    $stmt = $mysqli->prepare($query);
    $stmt->bind_param("i", $productId);
    $stmt->execute();
    
    $result = $stmt->get_result();
    if ($row = $result->fetch_assoc()) {
        // Check if the item is already in the cart
        if (!isset($_SESSION['cart'][$productId])) {
            $_SESSION['cart'][$productId] = array(
                'product_id' => $productId,
                'product_name' => $productName,
                'product_price' => $productPrice,
                'quantity' => 1
            );
            return true;
        }
    }
    return false;
}

// Function to remove an item from the cart
function removeFromCart($productId) {
    if (isset($_SESSION['cart'][$productId])) {
        unset($_SESSION['cart'][$productId]);
        // Re-index the array keys
        $_SESSION['cart'] = array_values($_SESSION['cart']);
        return true;
    }
    return false;
}

// Function to display the cart items
function displayCart() {
    if (!empty($_SESSION['cart'])) {
        echo "<h2>Your Cart</h2>";
        echo "<ul>";
        foreach ($_SESSION['cart'] as $item) {
            echo "<li>" . $item['product_name'] . " - $" . number_format($item['product_price'], 2, '.', '') . 
                 " <button onclick='removeFromCart(" . $item['product_id'] . ")'>Remove</button></li>";
        }
        echo "</ul>";
    } else {
        echo "<p>Your cart is empty.</p>";
    }
}

// Example usage:
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    if (isset($_POST['add_to_cart'])) {
        $productId = intval($_POST['product_id']);
        $productName = $_POST['product_name'];
        $productPrice = floatval($_POST['product_price']);
        
        if (addToCart($productId, $productName, $productPrice)) {
            echo "Item added to cart!";
        } else {
            echo "Error adding item.";
        }
    } elseif (isset($_POST['remove_from_cart'])) {
        $productId = intval($_POST['product_id']);
        if (removeFromCart($productId)) {
            echo "Item removed from cart!";
        } else {
            echo "Error removing item.";
        }
    }
}

// Display the current state of the cart
displayCart();
?>


<?php
// Start the session
session_start();

// Initialize cart if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add item to cart function
function addToCart($itemId, $itemName, $itemPrice, $quantity) {
    global $cart;
    
    // Check if the item is already in the cart
    $itemExists = false;
    foreach ($cart as $item) {
        if ($item['id'] == $itemId) {
            $itemExists = true;
            break;
        }
    }

    if (!$itemExists) {
        $cart[] = array(
            'id' => $itemId,
            'name' => $itemName,
            'price' => $itemPrice,
            'quantity' => $quantity
        );
    } else {
        // Increment quantity if item already exists
        foreach ($cart as &$item) {
            if ($item['id'] == $itemId) {
                $item['quantity'] += $quantity;
            }
        }
    }

    // Update session cart
    $_SESSION['cart'] = $cart;
}

// Display cart contents function
function displayCart() {
    global $cart;

    echo "<h2>Shopping Cart</h2>";
    if (empty($cart)) {
        echo "Your cart is empty.";
    } else {
        echo "<table border='1'>";
        echo "<tr><th>Item ID</th><th>Item Name</th><th>Price</th><th>Quantity</th></tr>";
        foreach ($cart as $item) {
            echo "<tr>";
            echo "<td>" . $item['id'] . "</td>";
            echo "<td>" . $item['name'] . "</td>";
            echo "<td>$" . number_format($item['price'], 2) . "</td>";
            echo "<td>" . $item['quantity'] . "</td>";
            echo "</tr>";
        }
        echo "</table>";
    }
}

// Example usage:
$cart = $_SESSION['cart'];

// Add items to cart
addToCart(1, 'Laptop', 999.99, 1);
addToCart(2, 'Phone', 499.99, 2);

// Display cart contents
displayCart();

?>


<?php
session_start();
?>


if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}


function addToCart($product_id, $product_name, $price) {
    // Create an item array with product details and quantity
    $item = array(
        'id' => $product_id,
        'name' => $product_name,
        'price' => $price,
        'quantity' => 1
    );
    
    // Check if the cart is empty
    if (empty($_SESSION['cart'])) {
        $_SESSION['cart'] = array($item);
    } else {
        $found = false;
        
        // Loop through existing items to check for duplicates
        foreach ($_SESSION['cart'] as &$existing_item) {
            if ($existing_item['id'] == $product_id) {
                $existing_item['quantity']++;
                $found = true;
                break;
            }
        }
        
        if (!$found) {
            // Add new item to the cart
            array_push($_SESSION['cart'], $item);
        }
    }
}


function removeFromCart($product_id) {
    foreach ($_SESSION['cart'] as $key => $item) {
        if ($item['id'] == $product_id) {
            unset($_SESSION['cart'][$key]);
            // Re-index the array to avoid gaps in keys
            $_SESSION['cart'] = array_values($_SESSION['cart']);
            break;
        }
    }
}


<?php
if (!empty($_SESSION['cart'])) {
    echo "<table>";
    echo "<tr><th>Product Name</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>";
    
    foreach ($_SESSION['cart'] as $item) {
        $total = $item['price'] * $item['quantity'];
        echo "<tr>";
        echo "<td>" . $item['name'] . "</td>";
        echo "<td> $" . number_format($item['price'], 2, '.', '') . "</td>";
        echo "<td><input type='number' value='" . $item['quantity'] . "' min='1'></td>";
        echo "<td> $" . number_format($total, 2, '.', '') . "</td>";
        echo "<td><a href='remove.php?id=" . $item['id'] . "'>Remove</a></td>";
        echo "</tr>";
    }
    
    echo "</table>";
} else {
    echo "Your cart is empty.";
}
?>


<?php
session_start();

// Add an item to the cart
if (isset($_POST['add_to_cart'])) {
    $product_id = 1;
    $product_name = "Example Product";
    $price = 29.99;
    addToCart($product_id, $product_name, $price);
}

// Remove an item from the cart
if (isset($_GET['remove'])) {
    $product_id = $_GET['id'];
    removeFromCart($product_id);
}
?>


<?php
session_start();

// Initialize cart if not set
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Include the header file
include("header.php");
?>

<!-- Add to Cart Form -->
<form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
    <label for="product_id">Product ID:</label>
    <input type="text" id="product_id" name="product_id">
    <button type="submit">Add to Cart</button>
</form>

<?php
// Add item to cart
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $product_id = $_POST['product_id'];
    
    if (isset($product_id) && !empty($product_id)) {
        if (isset($_SESSION['cart'][$product_id])) {
            // Increment quantity
            $_SESSION['cart'][$product_id]++;
        } else {
            // Add new item
            $_SESSION['cart'][$product_id] = 1;
        }
    }
}

// Display cart contents
echo "<h2>Shopping Cart:</h2>";
if (empty($_SESSION['cart'])) {
    echo "Your cart is empty.";
} else {
    foreach ($_SESSION['cart'] as $item_id => $quantity) {
        echo "Item ID: $item_id, Quantity: $quantity <br>";
    }
}

// Include the footer file
include("footer.php");
?>


<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>


<br>
<a href="cart.php">View Cart</a><br>
<a href="logout.php">Logout</a>
</body>
</html>


     if (!isset($_SESSION['cart'])) {
         $_SESSION['cart'] = array();
     }
     

3. **Add Items to Cart:**
   - Retrieve the product ID from the query string.
   - Check if the product exists in the cart. If not, add it with a quantity of 1; otherwise, increment the quantity.
     
     if (!isset($_SESSION['cart'][$product_id])) {
         $_SESSION['cart'][$product_id] = array(
             'id' => $product_id,
             'quantity' => 1
         );
     } else {
         $_SESSION['cart'][$product_id]['quantity']++;
     }
     

4. **Remove Items from Cart:**
   - Remove the product ID from the session cart and reindex the array.
     
     if (isset($_SESSION['cart'][$product_id])) {
         unset($_SESSION['cart'][$product_id]);
         $_SESSION['cart'] = array_values($_SESSION['cart']);
     }
     

5. **Update Item Quantity:**
   - Validate the new quantity and update it in the session.
     
     $quantity = isset($_POST['quantity']) ? max(1, (int)$_POST['quantity']) : 1;
     $_SESSION['cart'][$product_id]['quantity'] = $quantity;
     

6. **Clear the Cart:**
   - Reset the cart to an empty array.
     
     $_SESSION['cart'] = array();
     

7. **Display Cart Contents:**
   - Loop through the session cart and display each item's details and total price.

**Example Code Implementation:**



<?php
session_start();


if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}


if (isset($_POST['add_to_cart'])) {
    $productId = isset($_POST['product_id']) ? $_POST['product_id'] : '';
    $productName = isset($_POST['product_name']) ? $_POST['product_name'] : '';
    $price = isset($_POST['price']) ? $_POST['price'] : 0;

    if ($productId && $productName && $price) {
        // Check if product is already in cart
        if (isset($_SESSION['cart'][$productId])) {
            // Increment quantity
            $_SESSION['cart'][$productId]['quantity']++;
        } else {
            // Add new item
            $_SESSION['cart'][$productId] = array(
                'name' => $productName,
                'price' => $price,
                'quantity' => 1
            );
        }
    }
}


echo "<h2>Your Shopping Cart</h2>";
echo "<table border='1'>";
echo "<tr><th>Item Name</th><th>Price</th><th>Quantity</th><th>Total</th></tr>";

$total = 0;

foreach ($_SESSION['cart'] as $productId => $item) {
    $productTotal = $item['price'] * $item['quantity'];
    $total += $productTotal;
    echo "<tr>";
    echo "<td>{$item['name']}</td>";
    echo "<td>₹{$item['price']}</td>";
    echo "<td>{$item['quantity']}</td>";
    echo "<td>₹" . number_format($productTotal, 2) . "</td>";
    echo "<td><a href='cart.php?action=remove&product_id=$productId'>Remove</a></td>";
    echo "</tr>";
}

echo "<tr><td colspan='4' align='right'><strong>Grand Total: ₹" . number_format($total, 2) . "</strong></td></tr>";
echo "</table>";


if (isset($_GET['action']) && $_GET['action'] == 'remove' && isset($_GET['product_id'])) {
    $productId = $_GET['product_id'];
    if (isset($_SESSION['cart'][$productId])) {
        unset($_SESSION['cart'][$productId]);
    }
}


<?php
session_start();

if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add to cart
if (isset($_POST['add_to_cart'])) {
    // Product details from form or database
    $productId = isset($_POST['product_id']) ? $_POST['product_id'] : '';
    $productName = isset($_POST['product_name']) ? $_POST['product_name'] : '';
    $price = isset($_POST['price']) ? $_POST['price'] : 0;

    if ($productId && $productName && $price) {
        // Check if product exists in cart
        if (isset($_SESSION['cart'][$productId])) {
            $_SESSION['cart'][$productId]['quantity']++;
        } else {
            $_SESSION['cart'][$productId] = array(
                'name' => $productName,
                'price' => $price,
                'quantity' => 1
            );
        }
    }
}

// Remove from cart
if (isset($_GET['action']) && $_GET['action'] == 'remove' && isset($_GET['product_id'])) {
    $productId = $_GET['product_id'];
    if (isset($_SESSION['cart'][$productId])) {
        unset($_SESSION['cart'][$productId]);
    }
}

// Display cart
echo "<h2>Your Shopping Cart</h2>";
echo "<table border='1'>";
echo "<tr><th>Item Name</th><th>Price</th><th>Quantity</th><th>Total</th></tr>";

$total = 0;

foreach ($_SESSION['cart'] as $productId => $item) {
    $productTotal = $item['price'] * $item['quantity'];
    $total += $productTotal;
    echo "<tr>";
    echo "<td>{$item['name']}</td>";
    echo "<td>₹{$item['price']}</td>";
    echo "<td>{$item['quantity']}</td>";
    echo "<td>₹" . number_format($productTotal, 2) . "</td>";
    echo "<td><a href='cart.php?action=remove&product_id=$productId'>Remove</a></td>";
    echo "</tr>";
}

echo "<tr><td colspan='4' align='right'><strong>Grand Total: ₹" . number_format($total, 2) . "</strong></td></tr>";
echo "</table>";
?>


<?php
session_start();
?>


if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}


<?php
session_start();

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $product_id = $_POST['product_id'];
    $product_name = $_POST['product_name'];
    $price = $_POST['price'];

    // Create an array for the product item
    $item = array(
        'id' => $product_id,
        'name' => $product_name,
        'price' => $price
    );

    // Add the item to the cart session
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }
    
    array_push($_SESSION['cart'], $item);

    // Redirect back to the cart page or a confirmation page
    header("Location: view_cart.php");
    exit();
}
?>


<?php
session_start();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
    <style>
        .cart {
            width: 80%;
            margin: 0 auto;
            padding: 20px;
            border: 1px solid #ccc;
        }
        .cart-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 10px;
            border-bottom: 1px dotted #ccc;
        }
    </style>
</head>
<body>
    <div class="cart">
        <?php if (empty($_SESSION['cart'])) { ?>
            <p>Your cart is empty.</p>
        <?php } else { ?>
            <h2>Shopping Cart</h2>
            <ul>
                <?php foreach ($_SESSION['cart'] as $index => $item) { ?>
                    <li class="cart-item">
                        <span><?php echo $item['name']; ?></span>
                        <span>$<?php echo number_format($item['price'], 2); ?></span>
                        <a href="edit_cart.php?index=<?php echo $index; ?>">Edit</a>
                        <a href="remove_from_cart.php?index=<?php echo $index; ?>">Remove</a>
                    </li>
                <?php } ?>
            </ul>
            <p>Total: $<?php echo number_format(array_sum(array_column($_SESSION['cart'], 'price')), 2); ?></p>
        <?php } ?>
    </div>
</body>
</html>


<?php
session_start();

if (isset($_GET['index']) && is_numeric($_GET['index'])) {
    $index = $_GET['index'];
    
    if (isset($_SESSION['cart'][$index])) {
        // You can modify the item here or redirect to a form for editing quantities
        unset($_SESSION['cart'][$index]);
        array_values($_SESSION['cart']);
        
        header("Location: view_cart.php");
        exit();
    }
}
?>


<?php
session_start();

if (isset($_GET['index']) && is_numeric($_GET['index'])) {
    $index = $_GET['index'];
    
    if (isset($_SESSION['cart'][$index])) {
        unset($_SESSION['cart'][$index]);
        array_values($_SESSION['cart']);
        
        header("Location: view_cart.php");
        exit();
    }
}
?>


<?php
// Start the session
session_start();

// Check if the cart exists in the session, if not, initialize it
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function addToCart($item_id, $name, $price) {
    global $conn; // Assuming you have a database connection

    // Check if the item is already in the cart
    if (isset($_SESSION['cart'][$item_id])) {
        // Update quantity
        $_SESSION['cart'][$item_id]['quantity']++;
        $_SESSION['cart'][$item_id]['total_price'] = $_SESSION['cart'][$item_id]['price'] * $_SESSION['cart'][$item_id]['quantity'];
    } else {
        // Add new item to cart
        $new_item = array(
            'id' => $item_id,
            'name' => $name,
            'price' => $price,
            'quantity' => 1,
            'total_price' => $price
        );
        $_SESSION['cart'][$item_id] = $new_item;
    }
}

// Function to update cart item quantity
function updateCartItem($item_id, $quantity) {
    if (isset($_SESSION['cart'][$item_id])) {
        $_SESSION['cart'][$item_id]['quantity'] = $quantity;
        $_SESSION['cart'][$item_id]['total_price'] = $_SESSION['cart'][$item_id]['price'] * $quantity;
    }
}

// Function to remove item from cart
function removeFromCart($item_id) {
    if (isset($_SESSION['cart'][$item_id])) {
        unset($_SESSION['cart'][$item_id]);
    }
}

// Function to calculate grand total of cart items
function getGrandTotal() {
    $grand_total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $grand_total += $item['total_price'];
    }
    return $grand_total;
}

// Example usage:
if (isset($_GET['action'])) {
    switch ($_GET['action']) {
        case 'add':
            // Add item to cart
            $item_id = intval($_GET['id']);
            $name = "Product ".$_GET['id'];
            $price = 19.99; // Example price
            addToCart($item_id, $name, $price);
            break;
            
        case 'update':
            // Update quantity of item
            $item_id = intval($_GET['id']);
            $quantity = intval($_GET['quantity']);
            updateCartItem($item_id, $quantity);
            break;

        case 'remove':
            // Remove item from cart
            $item_id = intval($_GET['id']);
            removeFromCart($item_id);
            break;
            
        case 'clear':
            // Clear all items from cart
            $_SESSION['cart'] = array();
            break;
    }
}

// Display the cart contents
echo "<h2>Shopping Cart</h2>";
echo "<table border='1'>";
echo "<tr><th>Item Name</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>";

foreach ($_SESSION['cart'] as $item) {
    echo "<tr>";
    echo "<td>".$item['name']."</td>";
    echo "<td>$".$item['price']."</td>";
    echo "<td><input type='number' value='".$item['quantity']."' onChange='updateQuantity(".$item['id'].", this.value)'></td>";
    echo "<td>$".$item['total_price']."</td>";
    echo "<td><a href='cart.php?action=remove&id=".$item['id']."'>Remove</a></td>";
    echo "</tr>";
}

echo "</table>";
echo "<h3>Grand Total: $".getGrandTotal()."</h3>";

// Include a clear cart button
echo "<br /><a href='cart.php?action=clear'>Clear Cart</a>";
?>


<?php
session_start();
?>


if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}


// Get product details (e.g., from a form submission)
$product_id = isset($_POST['product_id']) ? $_POST['product_id'] : '';
$quantity = isset($_POST['quantity']) ? $_POST['quantity'] : 1;

// Check if the product is already in the cart
if (isset($_SESSION['cart'][$product_id])) {
    // If it exists, increment the quantity
    $_SESSION['cart'][$product_id] += $quantity;
} else {
    // If not, add the product to the cart with the given quantity
    $_SESSION['cart'][$product_id] = $quantity;
}

echo "Product added to cart successfully!";


if (isset($_GET['remove'])) {
    $product_id = $_GET['remove'];
    
    if (isset($_SESSION['cart'][$product_id])) {
        unset($_SESSION['cart'][$product_id]);
        
        // Regenerate the session ID to prevent session fixation attacks
        session_regenerate();
        
        echo "Product removed from cart successfully!";
    }
}


if (isset($_POST['update_quantity'])) {
    $product_id = $_POST['product_id'];
    $new_quantity = max(0, intval($_POST['quantity'])); // Ensure quantity is not negative

    if ($new_quantity === 0) {
        unset($_SESSION['cart'][$product_id]);
    } else {
        $_SESSION['cart'][$product_id] = $new_quantity;
    }

    session_regenerate(); // Regenerate the session ID for security
}


if (!empty($_SESSION['cart'])) {
    echo "<h2>Your Shopping Cart</h2>";
    echo "<ul>";
    
    foreach ($_SESSION['cart'] as $product_id => $quantity) {
        // Here, you would typically fetch product details from a database
        // For this example, we'll assume each product ID corresponds to a product name
        // and price.
        
        $product_name = "Product " . $product_id;
        $price = 10.00; // Replace with actual product price
        
        echo "<li>";
        echo "$product_name - Quantity: $quantity";
        echo "</li>";
    }
    
    echo "</ul>";
} else {
    echo "Your cart is empty!";
}


<?php
// Initialize session
session_start();

// Check if session is already started
if (session_status() !== PHP_SESSION_ACTIVE) {
    session_start();
}

// Set initial cart if not exists
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function addToCart($productId, $name, $price) {
    global $conn; // Database connection

    // Check if product already in cart
    $found = false;
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['product_id'] == $productId) {
            $item['quantity']++;
            $found = true;
            break;
        }
    }

    // If not found, add new item to cart
    if (!$found) {
        $uniqueId = uniqid();
        $_SESSION['cart'][] = array(
            'product_id' => $productId,
            'name' => $name,
            'price' => $price,
            'quantity' => 1,
            'unique_id' => $uniqueId
        );
    }

    // Update session cart
    $_SESSION['cart'] = $_SESSION['cart'];
}

// Function to remove item from cart
function removeFromCart($uniqueId) {
    foreach ($_SESSION['cart'] as $key => $item) {
        if ($item['unique_id'] == $uniqueId) {
            unset($_SESSION['cart'][$key]);
            break;
        }
    }

    // Re-index array
    $_SESSION['cart'] = array_values($_SESSION['cart']);
}

// Function to display cart content
function displayCart() {
    $total = 0;
    echo "<table border='1'>";
    echo "<tr><th>Product Name</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>";
    
    foreach ($_SESSION['cart'] as $item) {
        $subtotal = $item['price'] * $item['quantity'];
        $total += $subtotal;
        
        echo "<tr>";
        echo "<td>" . $item['name'] . "</td>";
        echo "<td>₹" . number_format($item['price'], 2) . "</td>";
        echo "<td><input type='number' value='" . $item['quantity'] . "' onchange='updateQuantity(" . $item['unique_id'] . ", this.value)' style='width:50px'></td>";
        echo "<td>₹" . number_format($subtotal, 2) . "</td>";
        echo "<td><a href='remove.php?id=" . $item['unique_id'] . "'>Remove</a></td>";
        echo "</tr>";
    }
    
    echo "<tr><td colspan='4' style='text-align:right; font-weight:bold;'>Grand Total:</td><td>₹" . number_format($total, 2) . "</td></tr>";
    echo "</table>";
}

// Function to update quantity
function updateQuantity($uniqueId, $quantity) {
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['unique_id'] == $uniqueId) {
            $item['quantity'] = max(1, intval($quantity));
            break;
        }
    }
}

// Initialize cart if not exists
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}
?>


<?php
// Add item to cart
addToCart(1, 'Product Name', 100);

// Display cart content
echo "<h2>Shopping Cart</h2>";
displayCart();

// Remove item from cart (link in HTML)
<a href='remove.php?id=<?php echo $item['unique_id']; ?>'>Remove</a>


<?php
// Start the session
session_start();

// Check if session is not set, initialize it
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function addToCart($item_id, $item_name, $price) {
    global $cart;
    
    // Initialize cart if not set
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }
    
    // Check if item already exists in cart
    if (isset($_SESSION['cart'][$item_id])) {
        // If exists, increment quantity
        $_SESSION['cart'][$item_id]['quantity']++;
    } else {
        // If not exists, add new item
        $_SESSION['cart'][$item_id] = array(
            'item_id' => $item_id,
            'name' => $item_name,
            'price' => $price,
            'quantity' => 1
        );
    }
}

// Function to update cart quantity
function updateCart($item_id, $quantity) {
    global $cart;
    
    if ($quantity == 0) {
        removeItemFromCart($item_id);
        return;
    }
    
    $_SESSION['cart'][$item_id]['quantity'] = $quantity;
}

// Function to remove item from cart
function removeItemFromCart($item_id) {
    unset($_SESSION['cart'][$item_id]);
}

// Function to calculate total price
function calculateTotal() {
    $total_price = 0;
    
    foreach ($_SESSION['cart'] as $item) {
        $total_price += ($item['price'] * $item['quantity']);
    }
    
    return $total_price;
}

// Display cart contents
echo "<h2>Your Shopping Cart</h2>";
echo "<table border='1'>";
echo "<tr><th>Item Name</th><th>Quantity</th><th>Price</th><th>Total</th><th>Action</th></tr>";

foreach ($_SESSION['cart'] as $item_id => $item) {
    $total = $item['price'] * $item['quantity'];
    echo "<tr>";
    echo "<td>" . $item['name'] . "</td>";
    echo "<td><input type='number' min='1' value='" . $item['quantity'] . "' onChange='updateQuantity(" . $item_id . ", this.value)'></td>";
    echo "<td>£" . number_format($item['price'], 2) . "</td>";
    echo "<td>£" . number_format($total, 2) . "</td>";
    echo "<td><a href='remove.php?id=" . $item_id . "'>Remove</a></td>";
    echo "</tr>";
}

echo "</table>";
echo "<p>Total: £" . number_format(calculateTotal(), 2) . "</p>";

// Destroy session when done
session_unset();
session_destroy();

?>


<?php
session_start();

// Initialize the cart if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

$cart = $_SESSION['cart'];

// Example product data (you would typically retrieve this from a database)
$products = [
    1 => ['name' => 'Product 1', 'price' => 19.99],
    2 => ['name' => 'Product 2', 'price' => 29.99],
    3 => ['name' => 'Product 3', 'price' => 39.99]
];

// Add product to cart
if (isset($_POST['add_to_cart'])) {
    $productId = intval($_POST['product_id']);
    
    // Check if the product exists in your products array or database
    if (!isset($products[$productId])) {
        die('Product not found!');
    }
    
    // Product details
    $product = [
        'id' => $productId,
        'name' => $products[$productId]['name'],
        'price' => $products[$productId]['price'],
        'quantity' => 1,
        'total_price' => $products[$productId]['price']
    ];
    
    // Check if product is already in cart
    $productExists = false;
    foreach ($cart as &$item) {
        if ($item['id'] == $productId) {
            $item['quantity'] += 1;
            $item['total_price'] = $item['price'] * $item['quantity'];
            $productExists = true;
            break;
        }
    }
    
    // Add new product to cart
    if (!$productExists) {
        array_push($cart, $product);
    }
    
    // Update the session cart
    $_SESSION['cart'] = $cart;
    
    // Redirect back to the cart page
    header('Location: ' . $_SERVER['HTTP_REFERER']);
    exit();
}

// Remove product from cart
if (isset($_GET['remove'])) {
    $productId = intval($_GET['remove']);
    
    foreach ($cart as $key => $item) {
        if ($item['id'] == $productId) {
            unset($cart[$key]);
            break;
        }
    }
    
    // Re-index the array
    $_SESSION['cart'] = array_values($cart);
    
    // Redirect back to the cart page
    header('Location: ' . $_SERVER['HTTP_REFERER']);
    exit();
}

// Display cart contents
echo '<h2>Your Cart</h2>';
if (empty($cart)) {
    echo 'Your cart is empty.';
} else {
    foreach ($cart as $item) {
        echo "<div>";
        echo "Product: {$item['name']}<br />";
        echo "Price: \${$item['price']}<br />";
        echo "Quantity: {$item['quantity']}<br />";
        echo "Total Price: \${$item['total_price']}<br />";
        echo "<a href='?remove={$item['id']}'>Remove</a>";
        echo "</div><hr />";
    }
}

// Optional: Display the total amount
$total = array_sum(array_column($cart, 'total_price'));
echo '<h3>Total Amount: $' . number_format($total, 2) . '</h3>';
?>


<?php
session_start();

// Initialize cart if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add item to cart
function addToCart($productId, $productName, $productPrice) {
    // Check if product already exists in cart
    if (isset($_SESSION['cart'][$productId])) {
        // Increment quantity
        $_SESSION['cart'][$productId]['quantity']++;
    } else {
        // Add new product to cart
        $_SESSION['cart'][$productId] = array(
            'id' => $productId,
            'name' => $productName,
            'price' => $productPrice,
            'quantity' => 1
        );
    }
}

// Calculate total price of items in cart
function cartTotal() {
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += ($item['price'] * $item['quantity']);
    }
    return $total;
}

// Remove item from cart
if (isset($_GET['remove'])) {
    $productIdToRemove = $_GET['remove'];
    unset($_SESSION['cart'][$productIdToRemove]);
}

// Display cart contents
echo "<h2>Your Cart</h2>";
echo "<table border='1'>";
echo "<tr><th>Product Name</th><th>Price</th><th>Quantity</th><th>Action</th></tr>";

foreach ($_SESSION['cart'] as $item) {
    echo "<tr>";
    echo "<td>" . $item['name'] . "</td>";
    echo "<td>$" . number_format($item['price'], 2) . "</td>";
    echo "<td>" . $item['quantity'] . "</td>";
    echo "<td><a href='?remove=" . $item['id'] . "'>Remove</a></td>";
    echo "</tr>";
}

echo "</table>";
echo "<p>Total: $" . number_format(cartTotal(), 2) . "</p>";
?>

<!-- Example usage to add items to cart -->
<a href="<?php echo $_SERVER['PHP_SELF']; ?>?add=1&name=Product%201&price=49.99">Add Product 1</a><br>
<a href="<?php echo $_SERVER['PHP_SELF']; ?>?add=2&name=Product%202&price=99.99">Add Product 2</a>

<?php
// Handle adding items to cart when clicking the links above
if (isset($_GET['add'])) {
    $productId = $_GET['add'];
    $productName = urldecode($_GET['name']);
    $productPrice = $_GET['price'];
    addToCart($productId, $productName, $productPrice);
}
?>


<?php
// Start the session
session_start();

// Initialize cart if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add product to cart
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get product details from form
    $productId = isset($_POST['product_id']) ? intval($_POST['product_id']) : 0;
    $quantity = isset($_POST['quantity']) ? intval($_POST['quantity']) : 1;

    // Validate input
    if ($productId > 0 && $quantity >= 1) {
        // Check if product already exists in cart
        if (isset($_SESSION['cart'][$productId])) {
            // Update quantity
            $_SESSION['cart'][$productId]['quantity'] += $quantity;
        } else {
            // Add new product to cart
            $_SESSION['cart'][$productId] = array(
                'product_id' => $productId,
                'quantity' => $quantity
            );
        }
    }
}

// Remove product from cart
if (isset($_GET['remove'])) {
    $productIdToRemove = intval($_GET['remove']);
    if (isset($_SESSION['cart'][$productIdToRemove])) {
        unset($_SESSION['cart'][$productIdToRemove]);
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 20px;
        }
        .cart-item {
            border-bottom: 1px solid #ddd;
            padding: 10px;
            margin: 5px 0;
        }
    </style>
</head>
<body>
    <h1>Shopping Cart</h1>

    <!-- Add product form -->
    <form method="post" action="">
        Product ID: <input type="number" name="product_id" required><br>
        Quantity: <input type="number" name="quantity" value="1" min="1" required><br>
        <button type="submit">Add to Cart</button>
    </form>

    <!-- Display cart contents -->
    <?php if (!empty($_SESSION['cart'])) { ?>
        <h2>Cart Items:</h2>
        <?php foreach ($_SESSION['cart'] as $item) { ?>
            <div class="cart-item">
                Product ID: <?= $item['product_id'] ?><br>
                Quantity: <?= $item['quantity'] ?> 
                (<a href="?remove=<?= $item['product_id'] ?>">Remove</a>)
            </div>
        <?php } ?>
    <?php } else { ?>
        <p>Your cart is empty.</p>
    <?php } ?>

</body>
</html>


<?php
session_start();
?>


if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}


if (isset($_GET['item_id']) && isset($_GET['quantity'])) {
    $item_id = $_GET['item_id'];
    $quantity = $_GET['quantity'];

    if (!empty($item_id) && !empty($quantity)) {
        if (is_numeric($quantity) && $quantity > 0) {
            // Update the cart
            if (isset($_SESSION['cart'][$item_id])) {
                $_SESSION['cart'][$item_id] += $quantity;
            } else {
                $_SESSION['cart'][$item_id] = $quantity;
            }
        } else {
            echo "Please enter a valid quantity.";
        }
    } else {
        echo "Item ID and quantity are required.";
    }
}


echo "<h2>Your Cart:</h2>";
if (!empty($_SESSION['cart'])) {
    foreach ($_SESSION['cart'] as $item_id => $quantity) {
        echo "Item ID: $item_id, Quantity: $quantity<br>";
        // Include remove functionality
        include_once 'remove_item.php';
    }
} else {
    echo "Your cart is empty.";
}


<?php
session_start();
if (isset($_GET['item_id'])) {
    $item_id = $_GET['item_id'];
    if (!empty($item_id)) {
        unset($_SESSION['cart'][$item_id]);
    }
}
?>


foreach ($_SESSION['cart'] as $item_id => $quantity) {
    echo "Item ID: $item_id, Quantity: $quantity ";
    // Add a remove link that calls remove_item.php with the item_id
    echo "<a href='remove_item.php?item_id=$item_id'>Remove</a><br>";
}


<?php
session_start();

if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Handle adding items to cart
if (isset($_GET['item_id']) && isset($_GET['quantity'])) {
    $item_id = $_GET['item_id'];
    $quantity = $_GET['quantity'];

    if (!empty($item_id) && !empty($quantity)) {
        if (is_numeric($quantity) && $quantity > 0) {
            // Update the cart
            if (isset($_SESSION['cart'][$item_id])) {
                $_SESSION['cart'][$item_id] += $quantity;
            } else {
                $_SESSION['cart'][$item_id] = $quantity;
            }
        } else {
            echo "Please enter a valid quantity.";
        }
    } else {
        echo "Item ID and quantity are required.";
    }
}

// Display cart contents
echo "<h2>Your Cart:</h2>";
if (!empty($_SESSION['cart'])) {
    foreach ($_SESSION['cart'] as $item_id => $quantity) {
        echo "Item ID: $item_id, Quantity: $quantity ";
        // Include remove functionality
        echo "<a href='remove_item.php?item_id=$item_id'>Remove</a><br>";
    }
} else {
    echo "Your cart is empty.";
}

// HTML form to add items
echo <<<_END
<form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="GET">
    Item ID: <input type="text" name="item_id"><br>
    Quantity: <input type="number" name="quantity" min="1"><br>
    <button type="submit">Add to Cart</button>
</form>
_END;
?>


<?php
session_start();
if (isset($_GET['item_id'])) {
    $item_id = $_GET['item_id'];
    if (!empty($item_id)) {
        unset($_SESSION['cart'][$item_id]);
    }
}
// Redirect back to cart page or reload
header("Location: cart.php");
exit();
?>


<?php
// Start the session
session_start();

// Initialize cart if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function add_to_cart($product_id, $product_name, $price, $quantity) {
    global $cart;
    
    // Check if product already exists in cart
    $product_exists = false;
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['product_id'] == $product_id) {
            $item['quantity'] += $quantity;
            $product_exists = true;
            break;
        }
    }
    
    // If product doesn't exist, add it to cart
    if (!$product_exists) {
        $_SESSION['cart'][] = array(
            'product_id' => $product_id,
            'product_name' => $product_name,
            'price' => $price,
            'quantity' => $quantity
        );
    }
}

// Function to remove item from cart
function remove_from_cart($product_id) {
    global $cart;
    
    // Find and remove the product from cart
    foreach ($_SESSION['cart'] as $key => &$item) {
        if ($item['product_id'] == $product_id) {
            unset($_SESSION['cart'][$key]);
            break;
        }
    }
}

// Function to update quantity of item in cart
function update_quantity($product_id, $new_quantity) {
    global $cart;
    
    // Find and update the product quantity
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['product_id'] == $product_id) {
            $item['quantity'] = $new_quantity;
            break;
        }
    }
}

// Function to calculate cart total
function calculate_total() {
    $total = 0;
    
    foreach ($_SESSION['cart'] as $item) {
        $total += ($item['price'] * $item['quantity']);
    }
    
    return $total;
}

// Example usage:
// Add items to cart
add_to_cart(1, 'Product A', 29.99, 2);
add_to_cart(2, 'Product B', 49.99, 1);

// Display cart contents
echo "<pre>";
print_r($_SESSION['cart']);
echo "</pre>";

// Remove an item from cart
remove_from_cart(2);

// Update quantity of an item
update_quantity(1, 3);

// Calculate and display total
echo "Cart Total: $" . calculate_total();

// Display updated cart contents
echo "<pre>";
print_r($_SESSION['cart']);
echo "</pre>";

// End the session
session_write_close();
?>


session_start();


if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}


// Assuming you're receiving product data from a form or query parameters
if ($_SERVER['REQUEST_METHOD'] == 'POST' && isset($_POST['add'])) {
    $productId = $_POST['product_id'];
    $productName = $_POST['product_name'];
    $price = $_POST['price'];

    // Check if the product is already in the cart
    if (isset($_SESSION['cart'][$productId])) {
        // If it exists, increment the quantity
        $_SESSION['cart'][$productId]['quantity']++;
    } else {
        // If not, add the new product to the cart
        $_SESSION['cart'][$productId] = array(
            'product_id' => $productId,
            'product_name' => $productName,
            'price' => $price,
            'quantity' => 1
        );
    }
}


echo "<h2>Your Shopping Cart</h2>";
if (empty($_SESSION['cart'])) {
    echo "Your cart is empty.";
} else {
    foreach ($_SESSION['cart'] as $item) {
        echo "Product: " . $item['product_name'] . "<br />";
        echo "Price: $" . number_format($item['price'], 2) . "<br />";
        echo "Quantity: " . $item['quantity'] . "<br />";
        echo "Total: $" . number_format($item['price'] * $item['quantity'], 2) . "<br /><br />";
    }
}


if (isset($_GET['remove'])) {
    $productId = $_GET['remove'];
    if (isset($_SESSION['cart'][$productId])) {
        unset($_SESSION['cart'][$productId]);
        echo "Item removed from cart.";
    }
}


if ($_SERVER['REQUEST_METHOD'] == 'POST' && isset($_POST['update'])) {
    foreach ($_SESSION['cart'] as $id => $item) {
        if (isset($_POST["quantity_$id"])) {
            $quantity = $_POST["quantity_$id"];
            if ($quantity > 0) {
                $_SESSION['cart'][$id]['quantity'] = $quantity;
            }
        }
    }
}


$total = 0;
foreach ($_SESSION['cart'] as $item) {
    $total += $item['price'] * $item['quantity'];
}

echo "Total Amount: $" . number_format($total, 2);

// Here you would typically add code to process payment,
// save the order to a database, and then clear the cart.
$_SESSION['cart'] = array();


<?php
session_start();

// Initialize cart if not set
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add item to cart
if ($_SERVER['REQUEST_METHOD'] == 'POST' && isset($_POST['add'])) {
    $productId = $_POST['product_id'];
    $productName = $_POST['product_name'];
    $price = $_POST['price'];

    if (isset($_SESSION['cart'][$productId])) {
        $_SESSION['cart'][$productId]['quantity']++;
    } else {
        $_SESSION['cart'][$productId] = array(
            'product_id' => $productId,
            'product_name' => $productName,
            'price' => $price,
            'quantity' => 1
        );
    }
}

// Remove item from cart
if (isset($_GET['remove'])) {
    $productId = $_GET['remove'];
    unset($_SESSION['cart'][$productId]);
}

// Update quantities
if ($_SERVER['REQUEST_METHOD'] == 'POST' && isset($_POST['update'])) {
    foreach ($_SESSION['cart'] as $id => $item) {
        if (isset($_POST["quantity_$id"])) {
            $quantity = $_POST["quantity_$id"];
            if ($quantity > 0) {
                $_SESSION['cart'][$id]['quantity'] = $quantity;
            }
        }
    }
}

// Calculate total
$total = 0;
foreach ($_SESSION['cart'] as $item) {
    $total += $item['price'] * $item['quantity'];
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <?php if (empty($_SESSION['cart'])): ?>
        <h2>Your Shopping Cart is Empty</h2>
    <?php else: ?>
        <h2>Your Shopping Cart</h2>
        <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
            <?php foreach ($_SESSION['cart'] as $id => $item): ?>
                <div>
                    <p><?php echo $item['product_name']; ?></p>
                    <p>Price: <?php echo "$" . number_format($item['price'], 2); ?></p>
                    <p>Quantity: 
                        <input type="text" name="<?php echo "quantity_$id"; ?>" value="<?php echo $item['quantity']; ?>" size="3">
                        <a href="?remove=<?php echo $id; ?>">Remove</a>
                    </p>
                </div>
            <?php endforeach; ?>
            <br/>
            <input type="submit" name="update" value="Update Cart">
        </form>
    <?php endif; ?>

    <h3>Total: <?php echo "$" . number_format($total, 2); ?></h3>

    <!-- Add a form to add items -->
    <h2>Add Items</h2>
    <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
        <input type="hidden" name="add" value="1">
        Product ID: <input type="text" name="product_id"><br/>
        Product Name: <input type="text" name="product_name"><br/>
        Price: <input type="text" name="price"><br/>
        <input type="submit" name="add_item" value="Add to Cart">
    </form>

    <!-- Checkout button -->
    <?php if (!empty($_SESSION['cart'])): ?>
        <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
            <input type="hidden" name="checkout" value="1">
            <input type="submit" value="Proceed to Checkout">
        </form>
    <?php endif; ?>

</body>
</html>


<?php
// Start the session
session_start();

// Initialize cart session variable if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Example product data (you can replace this with your actual product data)
$products = array(
    1 => array('id' => 1, 'name' => 'Product 1', 'price' => 19.99),
    2 => array('id' => 2, 'name' => 'Product 2', 'price' => 29.99),
    3 => array('id' => 3, 'name' => 'Product 3', 'price' => 9.99)
);

// Add item to cart
if (isset($_GET['action']) && $_GET['action'] == 'add') {
    $productId = intval($_GET['id']);
    
    // Check if the product exists in the products array
    if (isset($products[$productId])) {
        // Check if the item is already in the cart
        $itemExists = false;
        foreach ($_SESSION['cart'] as &$item) {
            if ($item['id'] == $productId) {
                $item['quantity']++;
                $itemExists = true;
                break;
            }
        }
        
        // If the item doesn't exist, add it to the cart
        if (!$itemExists) {
            $_SESSION['cart'][] = array(
                'id' => $products[$productId]['id'],
                'name' => $products[$productId]['name'],
                'price' => $products[$productId]['price'],
                'quantity' => 1
            );
        }
    }
}

// Update quantity of an item in cart
if (isset($_POST['update'])) {
    foreach ($_SESSION['cart'] as &$item) {
        if (isset($_POST["quantity_{$item['id']}"])) {
            $quantity = intval($_POST["quantity_{$item['id']}"]);
            if ($quantity > 0) {
                $item['quantity'] = $quantity;
            }
        }
    }
}

// Remove item from cart
if (isset($_GET['action']) && $_GET['action'] == 'remove') {
    $productId = intval($_GET['id']);
    
    // Loop through the cart and remove the specified product
    foreach ($_SESSION['cart'] as $key => $item) {
        if ($item['id'] == $productId) {
            unset($_SESSION['cart'][$key]);
            break;
        }
    }
}

// Display cart items
echo "<h2>Your Cart</h2>";
echo "<table border='1'>";
echo "<tr><th>Product Name</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>";

foreach ($_SESSION['cart'] as $item) {
    $total = $item['price'] * $item['quantity'];
    echo "<tr>";
    echo "<td>{$item['name']}</td>";
    echo "<td>$" . number_format($item['price'], 2) . "</td>";
    echo "<td><form method='post'><input type='number' name='quantity_{$item['id']}' min='1' value='{$item['quantity']}'></form></td>";
    echo "<td>$" . number_format($total, 2) . "</td>";
    echo "<td><a href='?action=remove&id={$item['id']}'>Remove</a></td>";
    echo "</tr>";
}

echo "</table>";

// Display product catalog
echo "<h2>Product Catalog</h2>";
echo "<table border='1'>";
echo "<tr><th>Product Name</th><th>Price</th><th>Action</th></tr>";

foreach ($products as $product) {
    echo "<tr>";
    echo "<td>{$product['name']}</td>";
    echo "<td>$" . number_format($product['price'], 2) . "</td>";
    echo "<td><a href='?action=add&id={$product['id']}'>Add to Cart</a></td>";
    echo "</tr>";
}

echo "</table>";

// Update cart button
echo "<form method='post'>";
echo "<input type='submit' name='update' value='Update Cart'>";
echo "</form>";
?>


<?php
session_start();

// Initialize cart in session if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function addToCart($productId, $productName, $price, $quantity) {
    global $cart;
    
    // Check if product is already in the cart
    foreach ($_SESSION['cart'] as $key => $product) {
        if ($product['product_id'] == $productId) {
            // If exists, increase quantity
            $_SESSION['cart'][$key]['quantity'] += $quantity;
            return true;
        }
    }
    
    // Add new product to cart
    $_SESSION['cart'][] = array(
        'product_id' => $productId,
        'product_name' => $productName,
        'price' => $price,
        'quantity' => $quantity
    );
    return true;
}

// Function to display cart items
function displayCart() {
    $total = 0;
    echo "<table>";
    echo "<tr><th>Product</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>";
    
    foreach ($_SESSION['cart'] as $key => $product) {
        $itemTotal = $product['price'] * $product['quantity'];
        $total += $itemTotal;
        
        echo "<tr>";
        echo "<td>" . $product['product_name'] . "</td>";
        echo "<td>₹" . number_format($product['price'], 2) . "</td>";
        echo "<td><input type='number' value='" . $product['quantity'] . "'></td>";
        echo "<td>₹" . number_format($itemTotal, 2) . "</td>";
        echo "<td><a href='remove_from_cart.php?id=$key'>Remove</a></td>";
        echo "</tr>";
    }
    
    echo "<tr><td colspan='4'><strong>Total: ₹" . number_format($total, 2) . "</strong></td><td></td></tr>";
    echo "</table>";
}

// Function to remove item from cart
function removeFromCart($key) {
    unset($_SESSION['cart'][$key]);
    $_SESSION['cart'] = array_values($_SESSION['cart']); // Re-index the array
}

?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
    <style>
        table {
            width: 100%;
            border-collapse: collapse;
        }
        th, td {
            padding: 12px;
            text-align: left;
            border-bottom: 1px solid #ddd;
        }
        tr:hover {background-color: #f5f5f5;}
    </style>
</head>
<body>

<?php
// Example usage:
// Include the cart.php file at the top of each page
include 'cart.php';

// Add item to cart example
if (isset($_GET['add'])) {
    addToCart(1, 'Product 1', 19.99, 2);
}

// Remove item from cart example
if (isset($_GET['remove'])) {
    removeFromCart($_GET['id']);
}

// Display cart items
displayCart();
?>

</body>
</html>


addToCart($productId, $productName, $price, $quantity);


removeFromCart($key);


<?php
// Start the session
session_start();

// Include necessary files
include_once 'header.php';

function add_item($product_id, $name, $price, $quantity) {
    // Initialize session variable if not set
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }

    // Check if item already exists in cart
    if (array_key_exists($product_id, $_SESSION['cart'])) {
        // Update quantity
        $_SESSION['cart'][$product_id]['quantity'] += $quantity;
    } else {
        // Add new item to cart
        $_SESSION['cart'][$product_id] = array(
            'name' => $name,
            'price' => $price,
            'quantity' => $quantity
        );
    }
}

function remove_item($product_id) {
    if (isset($_SESSION['cart'][$product_id])) {
        unset($_SESSION['cart'][$product_id]);
    }
}

function calculate_total() {
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += ($item['price'] * $item['quantity']);
    }
    return $total;
}
?>

<!-- HTML Content -->
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Shopping Cart</title>
</head>
<body>
    <?php
    // Initialize session cart if not exists
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }

    // Add item to cart
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        if (isset($_POST['add_to_cart'])) {
            add_item($_POST['product_id'], $_POST['name'], $_POST['price'], $_POST['quantity']);
        }
        if (isset($_POST['remove_item'])) {
            remove_item($_POST['product_id']);
        }
    }

    // Display cart items
    echo "<h2>Shopping Cart</h2>";
    echo "<table border='1'>";
    echo "<tr><th>Product Name</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>";

    if (empty($_SESSION['cart'])) {
        echo "<tr><td colspan='5'>Your cart is empty!</td></tr>";
    } else {
        foreach ($_SESSION['cart'] as $product_id => $item) {
            echo "<tr>";
            echo "<td>" . $item['name'] . "</td>";
            echo "<td>₹" . number_format($item['price'], 2) . "</td>";
            echo "<td>" . $item['quantity'] . "</td>";
            echo "<td>₹" . number_format(($item['price'] * $item['quantity']), 2) . "</td>";
            echo "<td><form method='post'><input type='hidden' name='product_id' value='$product_id'><button type='submit' name='remove_item'>Remove</button></form></td>";
            echo "</tr>";
        }
    }

    // Display total amount
    if (!empty($_SESSION['cart'])) {
        $total = calculate_total();
        echo "<tr><td colspan='4'><strong>Total:</strong> ₹" . number_format($total, 2) . "</td></tr>";
    }

    echo "</table>";

    // Add item form
    echo "<h3>Add Item to Cart</h3>";
    echo "<form method='post'>";
    echo "<input type='hidden' name='add_to_cart' value='1'>";
    echo "<input type='text' name='product_id' placeholder='Product ID'>";
    echo "<input type='text' name='name' placeholder='Product Name'>";
    echo "<input type='number' name='price' placeholder='Price'>";
    echo "<input type='number' name='quantity' placeholder='Quantity'>";
    echo "<button type='submit'>Add to Cart</button>";
    echo "</form>";
    ?>

</body>
</html>

<?php
include_once 'footer.php';
?>


<?php
// Initialize the session
session_start();

// Check if the cart exists in the session, if not, create it
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add items to the cart
function addToCart($item_id, $item_name, $price, $quantity) {
    global $connection;
    
    // Check if item already exists in the cart
    if (isset($_SESSION['cart'][$item_id])) {
        // Update quantity and price
        $_SESSION['cart'][$item_id]['quantity'] += $quantity;
        $_SESSION['cart'][$item_id]['price'] = $price * $quantity;
    } else {
        // Add new item to the cart
        $_SESSION['cart'][$item_id] = array(
            'id' => $item_id,
            'name' => $item_name,
            'price' => $price * $quantity,
            'quantity' => $quantity
        );
    }
}

// Example of adding items to the cart
addToCart(1, "Product 1", 10.99, 2);
addToCart(2, "Product 2", 5.99, 1);

// Function to display cart contents
function displayCart() {
    echo "<h2>Shopping Cart</h2>";
    if (empty($_SESSION['cart'])) {
        echo "Your cart is empty.";
    } else {
        echo "<table border='1'>";
        echo "<tr><th>Item ID</th><th>Item Name</th><th>Quantity</th><th>Price</th><th>Action</th></tr>";
        
        foreach ($_SESSION['cart'] as $item) {
            echo "<tr>";
            echo "<td>" . $item['id'] . "</td>";
            echo "<td>" . $item['name'] . "</td>";
            echo "<td>" . $item['quantity'] . "</td>";
            echo "<td>$" . number_format($item['price'], 2) . "</td>";
            echo "<td><a href='remove_item.php?id=" . $item['id'] . "'>Remove</a></td>";
            echo "</tr>";
        }
        
        echo "</table>";
    }
}

// Display the cart contents
displayCart();

// Function to remove an item from the cart
function removeItem($item_id) {
    if (isset($_SESSION['cart'][$item_id])) {
        unset($_SESSION['cart'][$item_id]);
        // Re-index the cart array
        $_SESSION['cart'] = array_values($_SESSION['cart']);
    }
}

// Example of removing an item from the cart
if (isset($_GET['remove'])) {
    removeItem($_GET['id']);
}

// Destroy the session when user logs out or completes purchase
if (isset($_GET['logout'])) {
    session_destroy();
    setcookie(session_name(), '', time() - 3600, '/');
}
?>


<?php
// Start the session
session_start();

// Initialize the cart if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function add_to_cart($product_id, $quantity = 1) {
    global $pdo; // Assuming you have a database connection

    // Check if product exists in the database
    $stmt = $pdo->prepare("SELECT * FROM products WHERE id = ?");
    $stmt->execute([$product_id]);
    $product = $stmt->fetch();

    if ($product) {
        // Add to cart
        $_SESSION['cart'][$product_id] = array(
            'id' => $product_id,
            'quantity' => $quantity,
            'name' => $product['name'],
            'price' => $product['price']
        );
    }
}

// Function to remove item from cart
function remove_from_cart($product_id) {
    if (isset($_SESSION['cart'][$product_id])) {
        unset($_SESSION['cart'][$product_id]);
    }
}

// Function to update quantity of an item in the cart
function update_quantity($product_id, $quantity) {
    if (isset($_SESSION['cart'][$product_id])) {
        $_SESSION['cart'][$product_id]['quantity'] = max(1, $quantity);
    }
}

// Function to display cart contents
function display_cart() {
    if (empty($_SESSION['cart'])) {
        echo "Your cart is empty.";
        return;
    }

    foreach ($_SESSION['cart'] as $item) {
        echo "<div>";
        echo "Product ID: " . $item['id'] . "<br />";
        echo "Name: " . $item['name'] . "<br />";
        echo "Price: $" . number_format($item['price'], 2) . "<br />";
        echo "Quantity: " . $item['quantity'] . "<br />";
        echo "</div>";
    }
}

// Example usage:
if ($_SERVER['REQUEST_METHOD'] == 'GET') {
    if (isset($_GET['action'])) {
        switch ($_GET['action']) {
            case 'add':
                if (isset($_GET['id']) && is_numeric($_GET['id'])) {
                    add_to_cart($_GET['id']);
                }
                break;
            
            case 'remove':
                if (isset($_GET['id']) && is_numeric($_GET['id'])) {
                    remove_from_cart($_GET['id']);
                }
                break;

            case 'update':
                if (isset($_GET['id']) && isset($_GET['quantity']) 
                    && is_numeric($_GET['id']) && is_numeric($_GET['quantity'])) {
                    update_quantity($_GET['id'], $_GET['quantity']);
                }
                break;
        }
    }
}

// Display the cart
display_cart();
?>


<?php
// Start the session
session_start();

// Check if cart exists in session, if not initialize it
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function addToCart($productId, $productName, $productPrice) {
    // If product is already in cart, increment quantity
    if (isset($_SESSION['cart'][$productId])) {
        $_SESSION['cart'][$productId]['quantity']++;
    } else {
        // Add new product to cart
        $_SESSION['cart'][$productId] = array(
            'name' => $productName,
            'price' => $productPrice,
            'quantity' => 1
        );
    }
}

// Function to remove item from cart
function removeFromCart($productId) {
    if (isset($_SESSION['cart'][$productId])) {
        unset($_SESSION['cart'][$productId]);
    }
}

// Add product to cart example
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $productId = $_POST['product_id'];
    $productName = $_POST['product_name'];
    $productPrice = $_POST['product_price'];
    addToCart($productId, $productName, $productPrice);
}

// Remove product from cart example
if (isset($_GET['remove'])) {
    $productId = $_GET['remove'];
    removeFromCart($productId);
}

// Display cart contents
echo "<h2>Your Shopping Cart</h2>";
echo "<table>";
echo "<tr><th>Product Name</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>";

if (!empty($_SESSION['cart'])) {
    foreach ($_SESSION['cart'] as $productId => $product) {
        echo "<tr>";
        echo "<td>" . $product['name'] . "</td>";
        echo "<td>$" . number_format($product['price'], 2) . "</td>";
        echo "<td>" . $product['quantity'] . "</td>";
        echo "<td>$" . number_format($product['price'] * $product['quantity'], 2) . "</td>";
        echo "<td><a href='cart.php?remove=$productId'>Remove</a></td>";
        echo "</tr>";
    }
} else {
    echo "<tr><td colspan='5'>Your cart is empty.</td></tr>";
}

echo "</table>";

// Display total price
$total = 0;
foreach ($_SESSION['cart'] as $product) {
    $total += $product['price'] * $product['quantity'];
}
echo "<h3>Total Price: $" . number_format($total, 2) . "</h3>";
?>

<!-- Add product form -->
<form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
    <input type="hidden" name="product_id" value="1">
    <input type="hidden" name="product_name" value="Product Name">
    <input type="hidden" name="product_price" value="9.99">
    <button type="submit">Add to Cart</button>
</form>


<?php
session_start();

// Check if cart session exists, if not create one
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function add_to_cart($product_id) {
    global $cart;
    
    // Initialize cart if it doesn't exist
    if (empty($cart)) {
        $cart = array(
            $product_id => array(
                'id' => $product_id,
                'quantity' => 1
            )
        );
    } else {
        // Check if product already exists in cart
        if (isset($cart[$product_id])) {
            $cart[$product_id]['quantity']++;
        } else {
            $cart[$product_id] = array(
                'id' => $product_id,
                'quantity' => 1
            );
        }
    }
    
    // Save updated cart to session
    $_SESSION['cart'] = $cart;
}

// Function to remove item from cart
function remove_from_cart($product_id) {
    global $cart;
    
    if (isset($cart[$product_id])) {
        $cart[$product_id]['quantity']--;
        
        // If quantity is zero or less, remove the product entirely
        if ($cart[$product_id]['quantity'] <= 0) {
            unset($cart[$product_id]);
        }
        
        // Save updated cart to session
        $_SESSION['cart'] = $cart;
    }
}

// Function to update item quantity in cart
function update_cart($product_id, $quantity) {
    global $cart;
    
    if (isset($cart[$product_id])) {
        $cart[$product_id]['quantity'] = $quantity;
        
        // Save updated cart to session
        $_SESSION['cart'] = $cart;
    }
}

// Example usage:
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    if (isset($_POST['add_to_cart'])) {
        add_to_cart($_POST['product_id']);
    } elseif (isset($_POST['remove_from_cart'])) {
        remove_from_cart($_POST['product_id']);
    } elseif (isset($_POST['update_quantity'])) {
        update_cart($_POST['product_id'], $_POST['quantity']);
    }
}

// Display cart contents
echo "<pre>";
print_r($_SESSION['cart']);
echo "</pre>";
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <!-- Add to Cart Form -->
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        Product ID: <input type="text" name="product_id"><br>
        <input type="submit" name="add_to_cart" value="Add to Cart">
    </form>

    <!-- Remove from Cart Form -->
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        Product ID: <input type="text" name="product_id"><br>
        <input type="submit" name="remove_from_cart" value="Remove from Cart">
    </form>

    <!-- Update Quantity Form -->
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        Product ID: <input type="text" name="product_id"><br>
        New Quantity: <input type="number" name="quantity"><br>
        <input type="submit" name="update_quantity" value="Update Quantity">
    </form>
</body>
</html>


<?php
// Start or initialize the session
session_start();

// Check if the cart exists in the session; if not, create it
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add items to the cart
function addToCart($productId, $name, $price) {
    global $quantity;
    // Set default quantity if not set
    if (empty($quantity)) {
        $quantity = 1;
    }
    
    // Check if item is already in the cart
    if (isset($_SESSION['cart'][$productId])) {
        // If it exists, increment the quantity
        $_SESSION['cart'][$productId]['quantity'] += $quantity;
    } else {
        // If not, add new item to the cart
        $_SESSION['cart'][$productId] = array(
            'product_id' => $productId,
            'name' => $name,
            'price' => $price,
            'quantity' => $quantity
        );
    }
}

// Function to display cart items
function displayCart() {
    if (empty($_SESSION['cart'])) {
        echo "<p>Your cart is empty.</p>";
        return;
    }

    // Display the cart contents
    echo "<table border='1'>";
    echo "<tr><th>Product ID</th><th>Name</th><th>Price</th><th>Quantity</th><th>Action</th></tr>";
    
    foreach ($_SESSION['cart'] as $item) {
        echo "<tr>";
        echo "<td>" . $item['product_id'] . "</td>";
        echo "<td>" . $item['name'] . "</td>";
        echo "<td>" . $item['price'] . "</td>";
        echo "<td>" . $item['quantity'] . "</td>";
        echo "<td><a href='removeFromCart.php?productId=" . $item['product_id'] . "'>Remove</a></td>";
        echo "</tr>";
    }
    
    echo "</table>";
}

// Function to remove item from cart
function removeFromCart($productId) {
    if (isset($_SESSION['cart'][$productId])) {
        unset($_SESSION['cart'][$productId]);
    }
}

// Example usage:
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $productId = $_POST['product_id'];
    $name = $_POST['name'];
    $price = $_POST['price'];
    
    addToCart($productId, $name, $price);
}

// Display the cart
displayCart();
?>


<?php
// Start the session
session_start();

// Initialize cart if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function add_to_cart($product_id, $name, $price) {
    global $db;
    
    // Check if product already exists in cart
    foreach ($_SESSION['cart'] as $index => $item) {
        if ($item['product_id'] == $product_id) {
            $_SESSION['cart'][$index]['quantity']++;
            return;
        }
    }
    
    // Add new item to cart
    $_SESSION['cart'][] = array(
        'product_id' => $product_id,
        'name' => $name,
        'price' => $price,
        'quantity' => 1
    );
}

// Function to update quantity of an item
function update_quantity($product_id, $new_quantity) {
    foreach ($_SESSION['cart'] as $index => $item) {
        if ($item['product_id'] == $product_id) {
            $_SESSION['cart'][$index]['quantity'] = $new_quantity;
            return;
        }
    }
}

// Function to remove item from cart
function remove_from_cart($product_id) {
    foreach ($_SESSION['cart'] as $index => $item) {
        if ($item['product_id'] == $product_id) {
            unset($_SESSION['cart'][$index]);
            // Re-index the array
            $_SESSION['cart'] = array_values($_SESSION['cart']);
            return;
        }
    }
}

// Function to calculate total price of cart items
function calculate_total() {
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += ($item['price'] * $item['quantity']);
    }
    return $total;
}

// Example usage:
if (isset($_GET['action'])) {
    switch ($_GET['action']) {
        case 'add':
            add_to_cart(1, 'Product 1', 9.99);
            break;
        case 'update':
            update_quantity(1, $_POST['quantity']);
            break;
        case 'remove':
            remove_from_cart($_GET['product_id']);
            break;
    }
}

// Display cart contents
echo "<h2>Shopping Cart</h2>";
if (!empty($_SESSION['cart'])) {
    echo "<ul>";
    foreach ($_SESSION['cart'] as $item) {
        echo "<li>" . $item['name'] . " x" . $item['quantity'] . " - $" . number_format($item['price'], 2) . "</li>";
    }
    echo "</ul>";
    echo "<p>Total: $" . number_format(calculate_total(), 2) . "</p>";
} else {
    echo "Your cart is empty.";
}

// Example buttons to modify cart
echo <<<HTML
<br>
<a href="?action=add">Add Item</a> |
<form method="post" action="?action=update">
Quantity: <input type="number" name="quantity" value="1">
<input type="submit" value="Update Quantity">
</form> |
<a href="?action=remove&product_id=1">Remove Item</a>
HTML;
?>


<?php
// Start the session
session_start();

// Check if the cart exists in the session, if not create it
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add an item to the cart
function add_to_cart($product_id, $product_name, $price) {
    global $quantity;
    
    // Check if product is already in the cart
    if (array_key_exists($product_id, $_SESSION['cart'])) {
        // If quantity is set, update it; otherwise keep it as 1
        if (isset($quantity)) {
            $_SESSION['cart'][$product_id]['quantity'] += $quantity;
        } else {
            $_SESSION['cart'][$product_id]['quantity'] += 1;
        }
        
        // Update the total price for this product
        $_SESSION['cart'][$product_id]['total_price'] = $_SESSION['cart'][$product_id]['price'] * $_SESSION['cart'][$product_id]['quantity'];
    } else {
        // Set default quantity to 1 if not set
        $qty = isset($quantity) ? $quantity : 1;
        
        // Add new product to cart
        $_SESSION['cart'][$product_id] = array(
            'product_id' => $product_id,
            'product_name' => $product_name,
            'price' => $price,
            'quantity' => $qty,
            'total_price' => $price * $qty
        );
    }
}

// Function to remove an item from the cart
function remove_from_cart($product_id) {
    if (array_key_exists($product_id, $_SESSION['cart'])) {
        unset($_SESSION['cart'][$product_id]);
    }
}

// Function to update quantity of an item in the cart
function update_quantity($product_id, $new_quantity) {
    if ($new_quantity > 0 && array_key_exists($product_id, $_SESSION['cart'])) {
        $_SESSION['cart'][$product_id]['quantity'] = $new_quantity;
        $_SESSION['cart'][$product_id]['total_price'] = $_SESSION['cart'][$product_id]['price'] * $new_quantity;
    }
}

// Function to calculate total price of all items in the cart
function calculate_total() {
    $total = 0;
    
    foreach ($_SESSION['cart'] as $item) {
        $total += $item['total_price'];
    }
    
    return $total;
}

// Example usage:
if (isset($_GET['action'])) {
    switch ($_GET['action']) {
        case 'add':
            // Add product with id 1, name "Product A", price 29.99
            add_to_cart(1, "Product A", 29.99);
            break;
            
        case 'remove':
            remove_from_cart($_GET['id']);
            break;
            
        case 'update':
            update_quantity($_GET['id'], $_GET['quantity']);
            break;
    }
}

// Display the cart
echo "<h1>Shopping Cart</h1>";
echo "<pre>";
print_r($_SESSION['cart']);
echo "</pre>";

// Display total price
echo "Total: $" . calculate_total();
?>


<?php
// Start the session
session_start();

// Check if the cart exists in the session; if not, initialize it as an empty array
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add item to cart
if (isset($_GET['add_to_cart'])) {
    $productId = intval($_GET['product_id']);
    $quantity = isset($_GET['quantity']) ? intval($_GET['quantity']) : 1;

    // Check if the product is already in the cart
    if (array_key_exists($productId, $_SESSION['cart'])) {
        // Update quantity
        $_SESSION['cart'][$productId] += $quantity;
    } else {
        // Add new product to cart
        $_SESSION['cart'][$productId] = $quantity;
    }

    // Redirect back to the cart page or product list
    header('Location: cart.php');
    exit();
}

// Remove item from cart
if (isset($_GET['remove_id'])) {
    $productId = intval($_GET['remove_id']);
    
    if (array_key_exists($productId, $_SESSION['cart'])) {
        unset($_SESSION['cart'][$productId]);
    }
    
    // Redirect back to the cart page or product list
    header('Location: cart.php');
    exit();
}

// Display cart contents
echo "<h2>Shopping Cart</h2>";
echo "<table border='1'>";
echo "<tr><th>Product ID</th><th>Quantity</th><th>Action</th></tr>";

foreach ($_SESSION['cart'] as $productId => $quantity) {
    echo "<tr>";
    echo "<td>$productId</td>";
    echo "<td>$quantity</td>";
    echo "<td>";
    echo "<a href='?remove_id=$productId'>Remove</a> | ";
    echo "<a href='#' onclick=\"updateQuantity($productId)\">Update Quantity</a>";
    echo "</td>";
    echo "</tr>";
}

echo "</table>";

// Update quantity form
echo "<script>
function updateQuantity(productId) {
    var newQuantity = prompt('Enter new quantity:', '');
    if (newQuantity !== null && !isNaN(newQuantity)) {
        window.location.href = '?update_quantity=1&product_id=' + productId + '&quantity=' + newQuantity;
    }
}
</script>";
?>

<?php
// Handle quantity update
if (isset($_GET['update_quantity'])) {
    $productId = intval($_GET['product_id']);
    $newQuantity = intval($_GET['quantity']);

    if ($newQuantity > 0 && array_key_exists($productId, $_SESSION['cart'])) {
        $_SESSION['cart'][$productId] = $newQuantity;
    }

    // Redirect back to the cart page or product list
    header('Location: cart.php');
    exit();
}
?>


<?php
// Start the session
session_start();
?>


if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}


function addToCart($item_id, $name, $price) {
    // Check if the item already exists in the cart
    if (isset($_SESSION['cart'][$item_id])) {
        // If it exists, increment the quantity
        $_SESSION['cart'][$item_id]['quantity']++;
    } else {
        // If it doesn't exist, add the item to the cart
        $_SESSION['cart'][$item_id] = array(
            'name' => $name,
            'price' => $price,
            'quantity' => 1
        );
    }
}


function removeFromCart($item_id) {
    // Check if the item exists in the cart
    if (isset($_SESSION['cart'][$item_id])) {
        unset($_SESSION['cart'][$item_id]);
    }
}


function updateQuantity($item_id, $quantity) {
    // Check if the item exists in the cart
    if (isset($_SESSION['cart'][$item_id])) {
        $_SESSION['cart'][$item_id]['quantity'] = $quantity;
    }
}


<?php
// Check if the cart is not empty
if (!empty($_SESSION['cart'])) {
    echo "<h2>Your Shopping Cart</h2>";
    echo "<table border='1'>";
    echo "<tr><th>Item Name</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>";
    
    foreach ($_SESSION['cart'] as $item_id => $item) {
        $total = $item['price'] * $item['quantity'];
        echo "<tr>";
        echo "<td>" . $item['name'] . "</td>";
        echo "<td>$" . number_format($item['price'], 2) . "</td>";
        echo "<td><input type='number' value='" . $item['quantity'] . "' onChange='updateQuantity(" . $item_id . ", this.value)'></td>";
        echo "<td>$" . number_format($total, 2) . "</td>";
        echo "<td><button onClick='removeFromCart(" . $item_id . ")'>Remove</button></td>";
        echo "</tr>";
    }
    
    echo "</table>";
} else {
    echo "<p>Your cart is empty.</p>";
}
?>


function getCartTotal() {
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += $item['price'] * $item['quantity'];
    }
    return number_format($total, 2);
}


function emptyCart() {
    unset($_SESSION['cart']);
}


addToCart(1, 'Product 1', 19.99);


removeFromCart(1);


updateQuantity(1, 2);


displayCart();


echo "Total: $" . getCartTotal();


emptyCart();


<?php
session_start();
?>


class ShoppingCart {
    private $cart;

    public function __construct() {
        if (!isset($_SESSION['cart'])) {
            $_SESSION['cart'] = array();
        }
        $this->cart = &$_SESSION['cart'];
    }

    public function add_item($product_id, $quantity = 1) {
        if (isset($this->cart[$product_id])) {
            $this->cart[$product_id]['quantity'] += $quantity;
        } else {
            $this->cart[$product_id] = array(
                'id' => $product_id,
                'quantity' => $quantity,
                'price' => 0.00 // Set default price
            );
        }
    }

    public function update_quantity($product_id, $new_quantity) {
        if (isset($this->cart[$product_id])) {
            $this->cart[$product_id]['quantity'] = max(0, $new_quantity);
        }
    }

    public function remove_item($product_id) {
        unset($this->cart[$product_id]);
    }

    public function clear_cart() {
        $this->cart = array();
    }

    public function get_cart_contents() {
        return $this->cart;
    }
}


<?php
session_start();
include 'ShoppingCart.php';

$cart = new ShoppingCart();

// Add an item
$cart->add_item(1, 2); // Adds product ID 1 with quantity 2

// Update quantity
$cart->update_quantity(1, 3);

// Remove an item
$cart->remove_item(1);

// Clear the cart
$cart->clear_cart();

// Get cart contents
$contents = $cart->get_cart_contents();
print_r($contents);
?>


<?php
session_start();
include 'ShoppingCart.php';

$cart = new ShoppingCart();
$contents = $cart->get_cart_contents();

if (empty($contents)) {
    echo "Your cart is empty.";
} else {
    foreach ($contents as $item) {
        echo "Product ID: {$item['id']}, Quantity: {$item['quantity']}<br>";
    }
}
?>


// Serialize
$_SESSION['cart'] = serialize($cartContents);

// Unserialize
$cartContents = unserialize($_SESSION['cart']);


<?php
session_start(); // Start the session

// Initialize cart session if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add item to cart
$item_id = 1; // Example item ID
$quantity = 2; // Example quantity

if (isset($_GET['action']) && $_GET['action'] == 'add') {
    if (!isset($_SESSION['cart'][$item_id])) {
        $_SESSION['cart'][$item_id] = array(
            'id' => $item_id,
            'quantity' => $quantity
        );
    } else {
        $_SESSION['cart'][$item_id]['quantity'] += $quantity;
    }
}

// Display cart contents
echo "<h2>Shopping Cart</h2>";
if (empty($_SESSION['cart'])) {
    echo "Your cart is empty.";
} else {
    foreach ($_SESSION['cart'] as $item) {
        echo "Item ID: " . $item['id'] . ", Quantity: " . $item['quantity'] . "<br>";
    }
}

// Remove item from cart
if (isset($_GET['action']) && $_GET['action'] == 'remove') {
    if (!empty($_GET['item_id'])) {
        $item_id = intval($_GET['item_id']);
        if (isset($_SESSION['cart'][$item_id])) {
            unset($_SESSION['cart'][$item_id]);
            // Re-index the array
            $_SESSION['cart'] = array_values($_SESSION['cart']);
        }
    }
}

// Destroy session when done
if (isset($_GET['action']) && $_GET['action'] == 'logout') {
    session_unset();
    session_destroy();
}
?>


<?php
// Start the session
session_start();

// Check if session exists, if not, initialize it
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function add_to_cart($product_id, $name, $price) {
    global $Cart;
    // Check if product already in cart
    if (isset($_SESSION['cart'][$product_id])) {
        // Update quantity
        $_SESSION['cart'][$product_id]['quantity']++;
    } else {
        // Add new product to cart
        $_SESSION['cart'][$product_id] = array(
            'name' => $name,
            'price' => $price,
            'quantity' => 1
        );
    }
}

// Function to update quantity of an item in cart
function update_quantity($product_id, $quantity) {
    if (isset($_SESSION['cart'][$product_id])) {
        $_SESSION['cart'][$product_id]['quantity'] = $quantity;
    }
}

// Function to remove item from cart
function remove_from_cart($product_id) {
    if (isset($_SESSION['cart'][$product_id])) {
        unset($_SESSION['cart'][$product_id]);
    }
}

// Function to calculate total price of items in cart
function calculate_total() {
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += ($item['price'] * $item['quantity']);
    }
    return $total;
}

// Example usage:
// Add item to cart
add_to_cart(1, 'Product 1', 29.99);

// Update quantity of an item
update_quantity(1, 3);

// Remove item from cart
remove_from_cart(1);

// Calculate total price
$total = calculate_total();
echo "Total Price: $" . number_format($total, 2);

// Destroy the session when done
session_unset();
session_destroy();
?>


<?php
session_start();
?>


<?php
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}
?>


function addToCart($item_id, $item_name, $price) {
    global $mysqli;
    
    // Check if the item is already in the cart
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['item_id'] == $item_id) {
            $item['quantity']++;
            return;
        }
    }
    
    // If not, add the item to the cart
    $_SESSION['cart'][] = array(
        'item_id' => $item_id,
        'item_name' => $item_name,
        'price' => $price,
        'quantity' => 1
    );
}


function removeFromCart($item_id) {
    foreach ($_SESSION['cart'] as $key => &$item) {
        if ($item['item_id'] == $item_id) {
            unset($_SESSION['cart'][$key]);
            return;
        }
    }
}


function updateQuantity($item_id, $quantity) {
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['item_id'] == $item_id) {
            $item['quantity'] = $quantity;
            return;
        }
    }
}


function displayCart() {
    if (!empty($_SESSION['cart'])) {
        echo "<table>";
        echo "<tr><th>Item Name</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>";
        
        foreach ($_SESSION['cart'] as $item) {
            $total = $item['price'] * $item['quantity'];
            echo "<tr>";
            echo "<td>" . $item['item_name'] . "</td>";
            echo "<td>₹" . number_format($item['price'], 2) . "</td>";
            echo "<td><input type='number' value='" . $item['quantity'] . "' onchange='updateQuantity(" . $item['item_id'] . ", this.value)'></td>";
            echo "<td>₹" . number_format($total, 2) . "</td>";
            echo "<td><button onclick='removeFromCart(" . $item['item_id'] . ")'>Remove</button></td>";
            echo "</tr>";
        }
        
        // Calculate and display total amount
        $cart_total = 0;
        foreach ($_SESSION['cart'] as $item) {
            $cart_total += $item['price'] * $item['quantity'];
        }
        
        echo "<tr><td colspan='4'>Total Amount:</td><td>₹" . number_format($cart_total, 2) . "</td></tr>";
        echo "</table>";
    } else {
        echo "Your cart is empty.";
    }
}


<?php
$item_id = 1;
$item_name = "Product Name";
$price = 100;

addToCart($item_id, $item_name, $price);
?>


<?php
displayCart();
?>


<?php
$item_id = 1;
removeFromCart($item_id);
?>


<?php
$item_id = 1;
$quantity = 2;
updateQuantity($item_id, $quantity);
?>


<?php
// Start the session
session_start();

// Initialize the cart if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add item to cart
function add_to_cart($product_id, $quantity) {
    // Sanitize inputs
    $product_id = intval($product_id);
    $quantity = intval($quantity);

    if ($quantity > 0) {
        // Check if product is already in cart
        if (isset($_SESSION['cart'][$product_id])) {
            $_SESSION['cart'][$product_id] += $quantity;
        } else {
            $_SESSION['cart'][$product_id] = $quantity;
        }
        
        return true;
    }
    
    return false;
}

// Remove item from cart
function remove_from_cart($product_id) {
    $product_id = intval($product_id);
    
    if (isset($_SESSION['cart'][$product_id])) {
        unset($_SESSION['cart'][$product_id]);
        return true;
    }
    
    return false;
}

// Update quantity of an item in cart
function update_quantity($product_id, $quantity) {
    $product_id = intval($product_id);
    $quantity = intval($quantity);

    if ($quantity > 0 && isset($_SESSION['cart'][$product_id])) {
        $_SESSION['cart'][$product_id] = $quantity;
        return true;
    }
    
    // If quantity is zero, remove the item
    if ($quantity <= 0 && isset($_SESSION['cart'][$product_id])) {
        unset($_SESSION['cart'][$product_id]);
        return true;
    }
    
    return false;
}

// Get cart contents
function get_cart_contents() {
    return $_SESSION['cart'];
}

// Example usage:
// Add item to cart with product ID 1 and quantity 2
add_to_cart(1, 2);

// Remove item with product ID 1 from cart
remove_from_cart(1);

// Update quantity of item with product ID 1 to 3
update_quantity(1, 3);

// Get all items in the cart
$cart = get_cart_contents();

// Always close the session after operations
session_write_close();
?>


<?php
session_start();

// Initialize cart if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function addToCart($productId, $productName, $price) {
    global $mysqli;
    
    // Check if product is already in cart
    $itemExists = false;
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['product_id'] == $productId) {
            $itemExists = true;
            break;
        }
    }
    
    if ($itemExists) {
        // Increment quantity
        $item['quantity']++;
    } else {
        // Add new item to cart
        $_SESSION['cart'][] = array(
            'product_id' => $productId,
            'product_name' => $productName,
            'price' => $price,
            'quantity' => 1
        );
    }
}

// Function to update cart quantity
function updateCartQuantity($productId, $newQuantity) {
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['product_id'] == $productId) {
            if ($newQuantity > 0) {
                $item['quantity'] = $newQuantity;
            } else {
                // Remove item if quantity is zero or negative
                removeItemFromCart($productId);
            }
        }
    }
}

// Function to remove item from cart
function removeItemFromCart($productId) {
    foreach ($_SESSION['cart'] as $key => &$item) {
        if ($item['product_id'] == $productId) {
            unset($_SESSION['cart'][$key]);
        }
    }
    
    // Re-index the array keys
    $_SESSION['cart'] = array_values($_SESSION['cart']);
}

// Function to calculate total price
function getCartTotal() {
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += ($item['price'] * $item['quantity']);
    }
    return $total;
}

// Example usage:
// Add item to cart
addToCart(1, 'Product A', 29.99);
addToCart(2, 'Product B', 49.99);

// Update quantity
updateCartQuantity(1, 3);

// Remove item from cart
removeItemFromCart(2);

// Get total price
echo "Total: $" . number_format(getCartTotal(), 2);

?>


addToCart($productId, $productName, $price);


updateCartQuantity($productId, $newQuantity);


removeItemFromCart($productId);


$total = getCartTotal();


<?php
// Start the session
session_start();

// Set some default session options (optional)
ini_set('session.cookie_httponly', 1);
ini_set('session.save_path', '/path/to/session/directory');

// Function to add item to cart
function addToCart($productId, $quantity) {
    global $_SESSION;

    // Initialize cart if it doesn't exist
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }

    // Check if product already exists in cart
    $productExists = false;
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['id'] == $productId) {
            $item['quantity'] += $quantity;
            $productExists = true;
            break;
        }
    }

    // Add new product to cart if it doesn't exist
    if (!$productExists) {
        $_SESSION['cart'][] = array(
            'id' => $productId,
            'quantity' => $quantity
        );
    }
}

// Function to remove item from cart
function removeFromCart($productId) {
    global $_SESSION;

    // Check if cart exists and has items
    if (isset($_SESSION['cart']) && count($_SESSION['cart']) > 0) {
        // Search for product in cart
        $index = array_search($productId, array_column($_SESSION['cart'], 'id'));

        // Remove item if found
        if ($index !== false) {
            unset($_SESSION['cart'][$index]);
            $_SESSION['cart'] = array_values($_SESSION['cart']); // Re-index the array
        }
    }
}

// Function to display cart contents
function displayCart() {
    global $_SESSION;

    // Check if cart exists and has items
    if (isset($_SESSION['cart']) && count($_SESSION['cart']) > 0) {
        echo "<h2>Your Cart</h2>";
        echo "<ul>";
        foreach ($_SESSION['cart'] as $item) {
            // Here you would typically fetch product details from a database or array
            // For this example, we'll assume product details are known
            $product = getProductDetails($item['id']);
            echo "<li>{$product['name']} ({$product['price']}) x {$item['quantity']}</li>";
        }
        echo "</ul>";
    } else {
        echo "Your cart is empty.";
    }
}

// Example usage:
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    if (isset($_POST['action'])) {
        switch ($_POST['action']) {
            case 'add':
                addToCart($_POST['product_id'], $_POST['quantity']);
                break;
            case 'remove':
                removeFromCart($_POST['product_id']);
                break;
        }
    }
}

// Display cart contents
displayCart();

// Example function to get product details (you would typically fetch this from a database)
function getProductDetails($productId) {
    // This is just an example array - replace with your actual data source
    $products = array(
        1 => array('name' => 'Product A', 'price' => '$9.99'),
        2 => array('name' => 'Product B', 'price' => '$14.99'),
        3 => array('name' => 'Product C', 'price' => '$19.99')
    );
    
    return $products[$productId];
}
?>


<?php
// Start the session
session_start();

// Check if the cart exists in the session. If not, initialize it as an array
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Adding items to the cart
function addToCart($productId, $productName, $productPrice) {
    // Create a new item array with default quantity 1
    $item = array(
        'id' => $productId,
        'name' => $productName,
        'price' => $productPrice,
        'quantity' => 1
    );
    
    // Add the item to the cart session
    $_SESSION['cart'][] = $item;
}

// Updating quantity of items in the cart
function updateCartQuantity($productId, $newQuantity) {
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['id'] == $productId) {
            $item['quantity'] = $newQuantity;
        }
    }
}

// Removing items from the cart
function removeFromCart($productId) {
    foreach ($_SESSION['cart'] as $key => $item) {
        if ($item['id'] == $productId) {
            unset($_SESSION['cart'][$key]);
        }
    }
    
    // Re-index the array after removing an item
    $_SESSION['cart'] = array_values($_SESSION['cart']);
}

// Displaying items in the cart
function displayCart() {
    if (empty($_SESSION['cart'])) {
        echo "Your cart is empty.";
    } else {
        $totalPrice = 0;
        foreach ($_SESSION['cart'] as $item) {
            $subtotal = $item['price'] * $item['quantity'];
            $totalPrice += $subtotal;
            
            echo "<div>";
            echo "Product ID: " . $item['id'] . "<br />";
            echo "Product Name: " . $item['name'] . "<br />";
            echo "Quantity: " . $item['quantity'] . "<br />";
            echo "Subtotal: $" . number_format($subtotal, 2) . "<br />";
            echo "</div>";
        }
        
        echo "<h3>Total Price: $" . number_format($totalPrice, 2) . "</h3>";
    }
}

// Example usage:
// Add an item to the cart
addToCart(1, "Product One", 49.99);

// Update the quantity of an item in the cart
updateCartQuantity(1, 2);

// Remove an item from the cart
removeFromCart(1);

// Display all items in the cart
displayCart();

// End the session
session_unset();
session_destroy();
?>


<?php
session_start();
// Initialize cart if not exists
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

$productId = isset($_GET['product_id']) ? intval($_GET['product_id']) : null;
$action = isset($_GET['action']) ? $_GET['action'] : '';

switch ($action) {
    case 'add':
        if ($productId !== null) {
            $newItem = array(
                'id' => $productId,
                'name' => 'Product Name',
                'price' => 9.99,
                'quantity' => isset($_GET['quantity']) ? intval($_GET['quantity']) : 1
            );
            
            if (isset($_SESSION['cart'][$ productId])) {
                // Update quantity or details
                $_SESSION['cart'][$productId]['quantity'] += $newItem['quantity'];
            } else {
                $_SESSION['cart'][$productId] = $newItem;
            }
        }
        break;

    case 'remove':
        if ($productId !== null) {
            unset($_SESSION['cart'][$productId]);
            // Reindex the array
            $_SESSION['cart'] = array_values($_SESSION['cart']);
        }
        break;
}

// Display cart contents
echo "<h1>Shopping Cart</h1>";
if (!empty($_SESSION['cart'])) {
    echo "<ul>";
    foreach ($_SESSION['cart'] as $item) {
        echo "<li>{$item['name']} - \${$item['price']} x {$item['quantity']}
              <form method='get'>
                  <input type='hidden' name='action' value='remove'>
                  <input type='hidden' name='product_id' value='{$item['id']}'>
                  <button type='submit'>Remove</button>
              </form>
            </li>";
    }
    echo "</ul>";
} else {
    echo "<p>Your cart is empty.</p>";
}

// Optional: Set session lifetime
ini_set('session.gc_maxlifetime', 3600);


<?php
// Start the session
session_start();

// Check if the cart session exists, if not initialize it
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add item to cart
function addToCart($productId, $productName) {
    global $pdo; // Assuming you have a database connection

    // Retrieve product details from database
    $stmt = $pdo->prepare("SELECT * FROM products WHERE id = ?");
    $stmt->execute([$productId]);
    $product = $stmt->fetch();

    if ($product) {
        // Check if the product already exists in the cart
        $found = false;
        foreach ($_SESSION['cart'] as &$item) {
            if ($item['id'] == $productId) {
                $item['quantity']++;
                $found = true;
                break;
            }
        }

        if (!$found) {
            // Add new product to the cart
            $_SESSION['cart'][] = array(
                'id' => $product['id'],
                'name' => $product['name'],
                'price' => $product['price'],
                'quantity' => 1
            );
        }
    }

    // Redirect back to the previous page
    header("Location: product.php");
    exit();
}

// Display cart contents
function displayCart() {
    if (!empty($_SESSION['cart'])) {
        echo "<table border='1'>";
        echo "<tr><th>Product</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>";
        
        $total = 0;
        foreach ($_SESSION['cart'] as $item) {
            echo "<tr>";
            echo "<td>" . $item['name'] . "</td>";
            echo "<td>$" . number_format($item['price'], 2) . "</td>";
            echo "<td><input type='number' name='quantity[" . $item['id'] . "]' value='" . $item['quantity'] . "'></td>";
            echo "<td>$" . number_format($item['price'] * $item['quantity'], 2) . "</td>";
            echo "<td><a href='cart.php?action=remove&id=" . $item['id'] . "'>Remove</a></td>";
            echo "</tr>";
            
            $total += $item['price'] * $item['quantity'];
        }
        
        echo "<tr><td colspan='4'><strong>Total:</strong></td><td>$" . number_format($total, 2) . "</td></tr>";
        echo "</table>";
    } else {
        echo "Your cart is empty.";
    }
}

// Clear the cart
function clearCart() {
    unset($_SESSION['cart']);
}
?>


<?php
session_start();

// Include the cart functions
include 'cart_functions.php';

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    if (isset($_POST['add_to_cart'])) {
        addToCart($_POST['product_id'], $_POST['product_name']);
    }
}
?>


<?php
session_start();

// Include the cart functions
include 'cart_functions.php';

displayCart();
?>

<a href="cart.php?action=clear">Clear Cart</a>


<?php
// Start the session
session_start();

// Check if the cart exists in the session, initialize it if not
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function addToCart($product_id, $name, $price) {
    global $conn; // Database connection (optional)
    
    // Check if the product is already in the cart
    if (isset($_SESSION['cart'][$product_id])) {
        // If exists, increment quantity
        $_SESSION['cart'][$product_id]['quantity']++;
    } else {
        // If not exists, add new item to cart
        $_SESSION['cart'][$product_id] = array(
            'product_id' => $product_id,
            'name'       => $name,
            'price'      => $price,
            'quantity'   => 1
        );
    }
}

// Function to remove item from cart
function removeFromCart($product_id) {
    if (isset($_SESSION['cart'][$product_id])) {
        unset($_SESSION['cart'][$product_id]);
        // Re-index the session array
        $_SESSION['cart'] = array_values($_SESSION['cart']);
    }
}

// Example usage:
if (isset($_POST['add_to_cart'])) {
    $productId = 1;
    $productName = "Sample Product";
    $productPrice = 29.99;
    
    addToCart($productId, $productName, $productPrice);
}

if (isset($_GET['remove_item'])) {
    $productId = $_GET['remove_item'];
    removeFromCart($productId);
}

// Displaying the cart items
echo "<h2>Shopping Cart</h2>";
echo "<table border='1'>";
echo "<tr><th>Product Name</th><th>Price</th><th>Quantity</th><th>Action</th></tr>";

if (!empty($_SESSION['cart'])) {
    foreach ($_SESSION['cart'] as $item) {
        echo "<tr>";
        echo "<td>" . $item['name'] . "</td>";
        echo "<td>$" . number_format($item['price'], 2) . "</td>";
        echo "<td>" . $item['quantity'] . "</td>";
        echo "<td><a href='cart.php?remove_item=" . $item['product_id'] . "'>Remove</a></td>";
        echo "</tr>";
    }
} else {
    echo "<tr><td colspan='4'>Your cart is empty.</td></tr>";
}

echo "</table>";
?>



<?php
session_start();

// Initialize cart if not set
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

function addToCart($item_id, $name, $price) {
    global $conn; // Assuming $conn is your database connection

    // Check if item exists in the database
    $stmt = $conn->prepare("SELECT id, name, price FROM products WHERE id = ?");
    $stmt->bind_param("i", $item_id);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        $item = $result->fetch_assoc();
        
        // Check if item is already in the cart
        $cart = &$_SESSION['cart'];
        $found = false;
        foreach ($cart as &$itemCart) {
            if ($itemCart['id'] == $item_id) {
                $itemCart['quantity']++;
                $found = true;
                break;
            }
        }

        // Add new item if not found
        if (!$found) {
            $cart[] = array(
                'id' => $item['id'],
                'name' => $item['name'],
                'price' => $item['price'],
                'quantity' => 1
            );
        }
    } else {
        // Handle error: item not found in database
        echo "Item not found.";
    }
}

function removeFromCart($item_id) {
    if (isset($_SESSION['cart'])) {
        foreach ($_SESSION['cart'] as $key => $item) {
            if ($item['id'] == $item_id) {
                unset($_SESSION['cart'][$key]);
                break;
            }
        }
        $_SESSION['cart'] = array_values($_SESSION['cart']); // Re-index the array
    }
}

function updateQuantity($item_id, $quantity) {
    if (isset($_SESSION['cart'])) {
        foreach ($_SESSION['cart'] as &$item) {
            if ($item['id'] == $item_id) {
                $item['quantity'] = $quantity;
                break;
            }
        }
    }
}

function displayCart() {
    if (!empty($_SESSION['cart'])) {
        echo "<table>";
        foreach ($_SESSION['cart'] as $item) {
            echo "<tr>";
            echo "<td>" . $item['name'] . "</td>";
            echo "<td>Price: $" . number_format($item['price'], 2, '.', '') . "</td>";
            echo "<td>Quantity: " . $item['quantity'] . "</td>";
            echo "<td><a href='cart.php?action=remove&id=" . $item['id'] . "'>Remove</a></td>";
            echo "<td>
                <form method='post' action=''>
                    <input type='hidden' name='id' value='" . $item['id'] . "'>
                    <input type='number' name='quantity' min='1' value='" . $item['quantity'] . "' style='width:50px;'>
                    <input type='submit' name='update_qty' value='Update'>
                </form>
              </td>";
            echo "</tr>";
        }
        echo "</table>";
    } else {
        echo "Your cart is empty.";
    }
}

function clearCart() {
    unset($_SESSION['cart']);
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
    <!-- Include your CSS here -->
    <style>
        /* Add some basic styling */
        body { font-family: Arial, sans-serif; }
        .cart-item { padding: 10px; border-bottom: 1px solid #ddd; }
        .total-price { font-weight: bold; margin-top: 20px; }
    </style>
</head>
<body>
    <?php
    // Handle actions based on form submissions or GET requests
    if (isset($_GET['action'])) {
        switch ($_GET['action']) {
            case 'add':
                if (isset($_POST['id'], $_POST['name'], $_POST['price'])) {
                    addToCart($_POST['id'], $_POST['name'], $_POST['price']);
                }
                break;
                
            case 'remove':
                if (isset($_GET['id'])) {
                    removeFromCart($_GET['id']);
                }
                break;
        }
    }

    // Update quantity handling
    if (isset($_POST['update_qty'])) {
        if (isset($_POST['id'], $_POST['quantity'])) {
            updateQuantity($_POST['id'], $_POST['quantity']);
        }
    }

    // Clear cart button
    if (isset($_GET['clear'])) {
        clearCart();
    }
    ?>

    <h2>Your Shopping Cart</h2>
    
    <!-- Add items to the cart -->
    <form method="post" action="?action=add">
        Item ID: <input type="number" name="id" required><br>
        Name: <input type="text" name="name" required><br>
        Price: $<input type="number" step="0.01" name="price" required><br>
        <input type="submit" value="Add to Cart">
    </form>

    <!-- Display current cart -->
    <?php displayCart(); ?>

    <!-- Clear cart button -->
    <a href="?clear">Clear Cart</a>
</body>
</html>


<?php
// Start the session
session_start();

// Check if session is initialized
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Adding items to cart
function addToCart($productId, $quantity) {
    // Get product details from database (replace with your actual query)
    $product = getProductDetails($productId);
    
    if ($product) {
        $item = array(
            'id' => $product['id'],
            'name' => $product['name'],
            'price' => $product['price'],
            'quantity' => $quantity
        );
        
        // Check if product already exists in cart
        if (isset($_SESSION['cart'][$productId])) {
            $_SESSION['cart'][$productId]['quantity'] += $quantity;
        } else {
            $_SESSION['cart'][$productId] = $item;
        }
    }
}

// Removing items from cart
function removeFromCart($productId) {
    if (isset($_SESSION['cart'][$productId])) {
        unset($_SESSION['cart'][$productId]);
    }
}

// Updating item quantity in cart
function updateCartItem($productId, $quantity) {
    if (isset($_SESSION['cart'][$productId])) {
        $_SESSION['cart'][$productId]['quantity'] = $quantity;
    }
}

// Function to get product details from database
function getProductDetails($productId) {
    // Replace with your actual database query
    $product = array(
        'id' => $productId,
        'name' => 'Product Name',
        'price' => 100.00
    );
    
    return $product;
}

// Displaying cart contents
function displayCart() {
    if (empty($_SESSION['cart'])) {
        echo "Your cart is empty!";
    } else {
        foreach ($_SESSION['cart'] as $item) {
            echo "Product: " . $item['name'] . "<br>";
            echo "Price: $" . number_format($item['price'], 2) . "<br>";
            echo "Quantity: " . $item['quantity'] . "<br>";
            echo "Total: $" . number_format($item['price'] * $item['quantity'], 2) . "<br><br>";
        }
    }
}

// Example usage:
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    if (isset($_POST['action'])) {
        switch ($_POST['action']) {
            case 'add':
                addToCart($_POST['product_id'], $_POST['quantity']);
                break;
            case 'remove':
                removeFromCart($_POST['product_id']);
                break;
            case 'update':
                updateCartItem($_POST['product_id'], $_POST['quantity']);
                break;
        }
    }
}

// Display cart
displayCart();

// Don't forget to close the session
session_write_close();
?>


<?php
// Initialize session
session_start();

// Check if cart is already set in session
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function addToCart($productId, $quantity) {
    global $/cart;
    
    // Check if product already exists in cart
    if (isset($_SESSION['cart'][$productId])) {
        // If exists, increment quantity
        $_SESSION['cart'][$productId] += $quantity;
    } else {
        // If not exists, add new item
        $_SESSION['cart'][$productId] = $quantity;
    }
}

// Function to remove item from cart
function removeFromCart($productId) {
    global $cart;
    
    // Check if product exists in cart
    if (isset($_SESSION['cart'][$productId])) {
        unset($_SESSION['cart'][$productId]);
        // Reset session array after removal
        $_SESSION['cart'] = array_values($_SESSION['cart']);
    }
}

// Function to get total items in cart
function getTotalItems() {
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += $item;
    }
    return $total;
}

// Function to calculate total amount
function getTotalAmount($productId, $quantity) {
    $total = 0;
    foreach ($_SESSION['cart'] as $product => $qty) {
        // Assuming product ID is the same as price for simplicity
        $total += $product * $qty;
    }
    return $total;
}

// Example usage:

// Add item to cart
if (isset($_POST['add_to_cart'])) {
    $productId = $_POST['product_id'];
    $quantity = $_POST['quantity'];
    addToCart($productId, $quantity);
}

// Remove item from cart
if (isset($_GET['remove'])) {
    $productId = $_GET['remove'];
    removeFromCart($productId);
}

// Display cart contents
echo "Your Cart:<br>";
foreach ($_SESSION['cart'] as $product => $qty) {
    echo "Product: $product, Quantity: $qty<br>";
}
echo "Total Items: " . getTotalItems() . "<br>";
echo "Total Amount: $" . getTotalAmount();

// Links to add/remove items
echo "<a href='add_item.php'>Add Item</a><br>";
echo "<a href='remove_item.php?remove=$productId'>Remove Item</a>";
?>


<?php
// Start the session
session_start();

// Function to add item to cart
function addToCart($productId, $name, $price) {
    // Initialize cart if it doesn't exist
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }
    
    // Check if product already exists in cart
    $productExists = false;
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['productId'] == $productId) {
            $productExists = true;
            break;
        }
    }
    
    if (!$productExists) {
        // Add new product to cart
        $_SESSION['cart'][] = array(
            'productId' => $productId,
            'name' => $name,
            'price' => $price,
            'quantity' => 1
        );
    } else {
        echo "Product already exists in cart.";
    }
}

// Function to update item quantity
function updateCart($productId, $newQuantity) {
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['productId'] == $productId) {
            $item['quantity'] = $newQuantity;
            break;
        }
    }
}

// Function to remove item from cart
function removeFromCart($productId) {
    $index = 0;
    foreach ($_SESSION['cart'] as $key => $item) {
        if ($item['productId'] == $productId) {
            unset($_SESSION['cart'][$key]);
            // Re-index the array
            $_SESSION['cart'] = array_values($_SESSION['cart']);
            break;
        }
    }
}

// Function to display cart contents
function displayCart() {
    if (isset($_SESSION['cart']) && count($_SESSION['cart']) > 0) {
        echo "<table>";
        echo "<tr><th>Product Name</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>";
        $total = 0;
        foreach ($_SESSION['cart'] as $item) {
            $subtotal = $item['price'] * $item['quantity'];
            $total += $subtotal;
            echo "<tr>";
            echo "<td>" . $item['name'] . "</td>";
            echo "<td>₹" . number_format($item['price'], 2) . "</td>";
            echo "<td><input type='number' value='" . $item['quantity'] . "' onChange='updateQuantity(" . $item['productId'] . ", this.value)'></td>";
            echo "<td>₹" . number_format($subtotal, 2) . "</td>";
            echo "<td><button onClick='removeFromCart(" . $item['productId'] . ")'>Remove</button></td>";
            echo "</tr>";
        }
        echo "<tr><td colspan='3'><strong>Total:</strong></td><td>₹" . number_format($total, 2) . "</td><td></td></tr>";
        echo "</table>";
    } else {
        echo "Your cart is empty!";
    }
}

// Example usage:
if (isset($_GET['action'])) {
    switch ($_GET['action']) {
        case 'add':
            $productId = $_GET['productId'];
            $name = $_GET['name'];
            $price = $_GET['price'];
            addToCart($productId, $name, $price);
            break;
            
        case 'update':
            $productId = $_GET['productId'];
            $quantity = $_GET['quantity'];
            updateCart($productId, $quantity);
            break;
            
        case 'remove':
            $productId = $_GET['productId'];
            removeFromCart($productId);
            break;
    }
}

// Display cart
displayCart();
?>


   <?php
   session_start();
   

2. **Initialize the Cart:**
   Check if the cart exists in the session; initialize it as an empty array if not.

   
   if (!isset($_SESSION['cart'])) {
       $_SESSION['cart'] = array();
   }
   

3. **Add Items to the Cart:**
   When a user adds a product, retrieve its details from the database and add it to the cart or update its quantity.

   
   $productId = isset($_GET['product_id']) ? intval($_GET['product_id']) : 0;

   if ($productId > 0) {
       // Connect to your database and fetch product details
       $result = mysqli_query($conn, "SELECT name, price FROM products WHERE id = $productId");
       if ($row = mysqli_fetch_assoc($result)) {
           if (isset($_SESSION['cart'][$productId])) {
               $_SESSION['cart'][$productId]['quantity']++;
           } else {
               $_SESSION['cart'][$productId] = array(
                   'name' => $row['name'],
                   'price' => $row['price'],
                   'quantity' => 1
               );
           }
       }
   }
   

4. **Display Cart Items:**
   Loop through the cart items and display each product's details along with the total.

   
   if (!empty($_SESSION['cart'])) {
       echo "<h2>Your Shopping Cart</h2>";
       $total = 0;
       foreach ($_SESSION['cart'] as $id => $item) {
           $subtotal = $item['price'] * $item['quantity'];
           $total += $subtotal;
           echo "<div>Product: {$item['name']} | Quantity: {$item['quantity']} | Price: \${$item['price']}</div>";
       }
       echo "<h3>Total: \${$total}</h3>";
   } else {
       echo "Your cart is empty.";
   }
   

5. **Remove Items from the Cart:**
   Provide a way to remove items by including links or buttons that trigger removal scripts.

6. **Checkout Process:**
   When checking out, process the order and reset the cart.

   
   if (isset($_POST['checkout'])) {
       // Process checkout here...
       unset($_SESSION['cart']);
   }
   

**Example Implementation:**


