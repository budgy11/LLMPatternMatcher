{"prompt": "Create a purchase functionality using php", "llm_output": "<think>\nOkay, I need to create a purchase functionality using PHP. Let me think about how to approach this.\n\nFirst, I should outline the main components required. The user needs to select products, add them to a cart, review the order, and then proceed to checkout. So, I'll need product listing, a shopping cart, an order review page, and a checkout process.\n\nI'll start by setting up a database. Products will have details like id, name, description, price, quantity, image, and category. The orders table should capture user info, total amount, status, and timestamps. Order items will store each product's details for the specific order.\n\nNext, I'll create the necessary PHP files. There should be a config file to connect to the database. Then, a products page where users can browse items and add them to their cart. The cart functionality will require sessions to keep track of the user's selections. An order review page will display the selected items for confirmation.\n\nFor checkout, I'll need a form that collects user information like name, email, phone, and address. Once submitted, the order should be inserted into the database along with the order items. After processing, redirecting to a thank you page makes sense.\n\nSecurity is important, so I'll use prepared statements in SQL queries to prevent injection attacks. Validating input data before inserting it into the database will help maintain data integrity and security.\n\nI should also handle cases where users might manipulate the cart, like adding items beyond what's available or removing items without proper authorization. Implementing checks when processing orders can address this.\n\nFinally, testing each part step by step is crucial. I'll make sure that products display correctly, adding to cart works, order review shows accurate details, and checkout processes everything smoothly. Error handling should be in place for any issues during these steps.\n</think>\n\nTo create a purchase functionality using PHP, we'll need to implement several components including:\n\n1. **Product Listing Page**\n2. **Shopping Cart Functionality**\n3. **Order Review Page**\n4. **Checkout Process**\n\nHere's an example implementation:\n\n---\n\n### 1. Product Listing Page (`products.php`)\n\n```php\n<?php\n// Connect to database\nrequire_once 'config.php';\n\n// Fetch products from the database\n$products = $db->query(\"SELECT * FROM products ORDER BY id DESC\");\n\n?>\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Product Listing</title>\n    <style>\n        .product {\n            border: 1px solid #ddd;\n            padding: 20px;\n            margin: 10px;\n        }\n    </style>\n</head>\n<body>\n    <?php foreach ($products as $product): ?>\n        <div class=\"product\">\n            <h3><?php echo $product['name']; ?></h3>\n            <p><?php echo $product['description']; ?></p>\n            <p>Price: $<?php echo number_format($product['price'], 2); ?></p>\n            <form action=\"add-to-cart.php\" method=\"post\">\n                <input type=\"hidden\" name=\"id\" value=\"<?php echo $product['id']; ?>\">\n                <input type=\"number\" name=\"quantity\" min=\"1\" max=\"<?php echo $product['quantity']; ?>\" placeholder=\"Quantity\">\n                <button type=\"submit\">Add to Cart</button>\n            </form>\n        </div>\n    <?php endforeach; ?>\n</body>\n</html>\n```\n\n---\n\n### 2. Add to Cart (`add-to-cart.php`)\n\n```php\n<?php\nsession_start();\n\nrequire_once 'config.php';\n\n// Get product details\n$id = $_POST['id'];\n$quantity = $_POST['quantity'];\n\n$product = $db->query(\"SELECT * FROM products WHERE id = ?\", [$id], true);\n\nif ($product && $quantity > 0) {\n    // Add to cart or update quantity\n    if (!isset($_SESSION['cart'][$id])) {\n        $_SESSION['cart'][$id] = [\n            'id' => $id,\n            'name' => $product['name'],\n            'price' => $product['price'],\n            'quantity' => 1\n        ];\n    }\n    // Update quantity if product already exists in cart\n    else {\n        $_SESSION['cart'][$id]['quantity'] += $quantity;\n    }\n\n    header(\"Location: products.php\");\n} else {\n    die(\"Invalid request or out of stock.\");\n}\n```\n\n---\n\n### 3. Order Review Page (`order-review.php`)\n\n```php\n<?php\nsession_start();\n\nrequire_once 'config.php';\n\n// Calculate total price\n$total = 0;\nforeach ($_SESSION['cart'] as $item) {\n    $total += $item['price'] * $item['quantity'];\n}\n\n?>\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Order Review</title>\n    <style>\n        .order-summary {\n            border: 1px solid #ddd;\n            padding: 20px;\n        }\n    </style>\n</head>\n<body>\n    <?php if (!empty($_SESSION['cart'])): ?>\n        <div class=\"order-summary\">\n            <h2>Your Order</h2>\n            <table>\n                <?php foreach ($_SESSION['cart'] as $item): ?>\n                    <tr>\n                        <td><?php echo $item['name']; ?></td>\n                        <td>Quantity: <?php echo $item['quantity']; ?></td>\n                        <td>$<?php echo number_format($item['price'], 2); ?></td>\n                    </tr>\n                <?php endforeach; ?>\n            </table>\n            <h3>Total: $<?php echo number_format($total, 2); ?></h3>\n            <form action=\"checkout.php\" method=\"post\">\n                <button type=\"submit\">Proceed to Checkout</button>\n            </form>\n        </div>\n    <?php else: ?>\n        <p>Your cart is empty.</p>\n    <?php endif; ?>\n</body>\n</html>\n```\n\n---\n\n### 4. Checkout Page (`checkout.php`)\n\n```php\n<?php\nsession_start();\n\nrequire_once 'config.php';\n\nif ($_SERVER['REQUEST_METHOD'] === 'POST') {\n    // Get user data\n    $name = $_POST['name'];\n    $email = $_POST['email'];\n    $phone = $_POST['phone'];\n    $address = $_POST['address'];\n\n    // Insert order into database\n    try {\n        $db->beginTransaction();\n        \n        $orderStmt = $db->prepare(\"INSERT INTO orders (name, email, phone, address, total_amount, status) VALUES (?, ?, ?, ?, ?, 'pending')\");\n        $orderStmt->execute([$name, $email, $phone, $address, $_SESSION['total']]);\n\n        $orderId = $db->lastInsertId();\n\n        // Insert order items\n        foreach ($_SESSION['cart'] as $item) {\n            $itemStmt = $db->prepare(\"INSERT INTO order_items (order_id, product_id, name, price, quantity) VALUES (?, ?, ?, ?, ?)\");\n            $itemStmt->execute([$orderId, $item['id'], $item['name'], $item['price'], $item['quantity']]);\n        }\n\n        // Clear cart\n        unset($_SESSION['cart']);\n        \n        $db->commit();\n        \n        header(\"Location: thank-you.php\");\n    } catch (PDOException $e) {\n        $db->rollBack();\n        die(\"Error processing order: \" . $e->getMessage());\n    }\n}\n?>\n\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Checkout</title>\n    <style>\n        .checkout-form {\n            border: 1px solid #ddd;\n            padding: 20px;\n            max-width: 600px;\n            margin: 0 auto;\n        }\n    </style>\n</head>\n<body>\n    <div class=\"checkout-form\">\n        <h2>Checkout</h2>\n        <form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n            <input type=\"text\" name=\"name\" placeholder=\"Full Name\" required><br><br>\n            <input type=\"email\" name=\"email\" placeholder=\"Email Address\" required><br><br>\n            <input type=\"tel\" name=\"phone\" placeholder=\"Phone Number\" required><br><br>\n            <textarea name=\"address\" placeholder=\"Shipping Address\" rows=\"3\" required></textarea><br><br>\n            <button type=\"submit\">Place Order</button>\n        </form>\n    </div>\n</body>\n</html>\n```\n\n---\n\n### 5. Thank You Page (`thank-you.php`)\n\n```php\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Thank You</title>\n    <style>\n        .thank-you {\n            text-align: center;\n            padding: 40px;\n            font-family: Arial, sans-serif;\n        }\n    </style>\n</head>\n<body>\n    <div class=\"thank-you\">\n        <h1>Thank you for your order!</h1>\n        <p>Your order has been successfully placed and will be processed shortly.</p>\n        <a href=\"products.php\">Continue Shopping</a>\n    </div>\n</body>\n</html>\n```\n\n---\n\n### Database Structure\n\nYou'll need to create the following tables in your database:\n\n```sql\nCREATE TABLE products (\n    id INT AUTO_INCREMENT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    description TEXT,\n    price DECIMAL(10, 2) NOT NULL,\n    quantity INT NOT NULL,\n    image VARCHAR(255),\n    category VARCHAR(255)\n);\n\nCREATE TABLE orders (\n    id INT AUTO_INCREMENT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    phone VARCHAR(20) NOT NULL,\n    address TEXT NOT NULL,\n    total_amount DECIMAL(10, 2) NOT NULL,\n    status VARCHAR(20) DEFAULT 'pending',\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\nCREATE TABLE order_items (\n    id INT AUTO_INCREMENT PRIMARY KEY,\n    order_id INT NOT NULL,\n    product_id INT NOT NULL,\n    name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    quantity INT NOT NULL,\n    FOREIGN KEY (order_id) REFERENCES orders(id)\n);\n```\n\n---\n\n### Notes:\n\n1. **Security**: This implementation is basic and should be enhanced with proper validation, sanitization, and security measures.\n2. **Error Handling**: You might want to add try-catch blocks for better error handling.\n3. **Session Management**: Make sure your PHP session is properly configured in your `php.ini` file.\n4. **Order Status**: The order status can be updated later based on the actual payment processing and fulfillment.\n\nYou can expand this further by adding features like:\n- Payment integration\n- Order tracking\n- User authentication\n- Product filtering and search\n- Coupon codes\n- Wishlist functionality", "code_blocks": ["```php\n<?php\n// Connect to database\nrequire_once 'config.php';\n\n// Fetch products from the database\n$products = $db->query(\"SELECT * FROM products ORDER BY id DESC\");\n\n?>\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Product Listing</title>\n    <style>\n        .product {\n            border: 1px solid #ddd;\n            padding: 20px;\n            margin: 10px;\n        }\n    </style>\n</head>\n<body>\n    <?php foreach ($products as $product): ?>\n        <div class=\"product\">\n            <h3><?php echo $product['name']; ?></h3>\n            <p><?php echo $product['description']; ?></p>\n            <p>Price: $<?php echo number_format($product['price'], 2); ?></p>\n            <form action=\"add-to-cart.php\" method=\"post\">\n                <input type=\"hidden\" name=\"id\" value=\"<?php echo $product['id']; ?>\">\n                <input type=\"number\" name=\"quantity\" min=\"1\" max=\"<?php echo $product['quantity']; ?>\" placeholder=\"Quantity\">\n                <button type=\"submit\">Add to Cart</button>\n            </form>\n        </div>\n    <?php endforeach; ?>\n</body>\n</html>\n```", "```php\n<?php\nsession_start();\n\nrequire_once 'config.php';\n\n// Get product details\n$id = $_POST['id'];\n$quantity = $_POST['quantity'];\n\n$product = $db->query(\"SELECT * FROM products WHERE id = ?\", [$id], true);\n\nif ($product && $quantity > 0) {\n    // Add to cart or update quantity\n    if (!isset($_SESSION['cart'][$id])) {\n        $_SESSION['cart'][$id] = [\n            'id' => $id,\n            'name' => $product['name'],\n            'price' => $product['price'],\n            'quantity' => 1\n        ];\n    }\n    // Update quantity if product already exists in cart\n    else {\n        $_SESSION['cart'][$id]['quantity'] += $quantity;\n    }\n\n    header(\"Location: products.php\");\n} else {\n    die(\"Invalid request or out of stock.\");\n}\n```", "```php\n<?php\nsession_start();\n\nrequire_once 'config.php';\n\n// Calculate total price\n$total = 0;\nforeach ($_SESSION['cart'] as $item) {\n    $total += $item['price'] * $item['quantity'];\n}\n\n?>\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Order Review</title>\n    <style>\n        .order-summary {\n            border: 1px solid #ddd;\n            padding: 20px;\n        }\n    </style>\n</head>\n<body>\n    <?php if (!empty($_SESSION['cart'])): ?>\n        <div class=\"order-summary\">\n            <h2>Your Order</h2>\n            <table>\n                <?php foreach ($_SESSION['cart'] as $item): ?>\n                    <tr>\n                        <td><?php echo $item['name']; ?></td>\n                        <td>Quantity: <?php echo $item['quantity']; ?></td>\n                        <td>$<?php echo number_format($item['price'], 2); ?></td>\n                    </tr>\n                <?php endforeach; ?>\n            </table>\n            <h3>Total: $<?php echo number_format($total, 2); ?></h3>\n            <form action=\"checkout.php\" method=\"post\">\n                <button type=\"submit\">Proceed to Checkout</button>\n            </form>\n        </div>\n    <?php else: ?>\n        <p>Your cart is empty.</p>\n    <?php endif; ?>\n</body>\n</html>\n```", "```php\n<?php\nsession_start();\n\nrequire_once 'config.php';\n\nif ($_SERVER['REQUEST_METHOD'] === 'POST') {\n    // Get user data\n    $name = $_POST['name'];\n    $email = $_POST['email'];\n    $phone = $_POST['phone'];\n    $address = $_POST['address'];\n\n    // Insert order into database\n    try {\n        $db->beginTransaction();\n        \n        $orderStmt = $db->prepare(\"INSERT INTO orders (name, email, phone, address, total_amount, status) VALUES (?, ?, ?, ?, ?, 'pending')\");\n        $orderStmt->execute([$name, $email, $phone, $address, $_SESSION['total']]);\n\n        $orderId = $db->lastInsertId();\n\n        // Insert order items\n        foreach ($_SESSION['cart'] as $item) {\n            $itemStmt = $db->prepare(\"INSERT INTO order_items (order_id, product_id, name, price, quantity) VALUES (?, ?, ?, ?, ?)\");\n            $itemStmt->execute([$orderId, $item['id'], $item['name'], $item['price'], $item['quantity']]);\n        }\n\n        // Clear cart\n        unset($_SESSION['cart']);\n        \n        $db->commit();\n        \n        header(\"Location: thank-you.php\");\n    } catch (PDOException $e) {\n        $db->rollBack();\n        die(\"Error processing order: \" . $e->getMessage());\n    }\n}\n?>\n\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Checkout</title>\n    <style>\n        .checkout-form {\n            border: 1px solid #ddd;\n            padding: 20px;\n            max-width: 600px;\n            margin: 0 auto;\n        }\n    </style>\n</head>\n<body>\n    <div class=\"checkout-form\">\n        <h2>Checkout</h2>\n        <form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n            <input type=\"text\" name=\"name\" placeholder=\"Full Name\" required><br><br>\n            <input type=\"email\" name=\"email\" placeholder=\"Email Address\" required><br><br>\n            <input type=\"tel\" name=\"phone\" placeholder=\"Phone Number\" required><br><br>\n            <textarea name=\"address\" placeholder=\"Shipping Address\" rows=\"3\" required></textarea><br><br>\n            <button type=\"submit\">Place Order</button>\n        </form>\n    </div>\n</body>\n</html>\n```", "```php\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Thank You</title>\n    <style>\n        .thank-you {\n            text-align: center;\n            padding: 40px;\n            font-family: Arial, sans-serif;\n        }\n    </style>\n</head>\n<body>\n    <div class=\"thank-you\">\n        <h1>Thank you for your order!</h1>\n        <p>Your order has been successfully placed and will be processed shortly.</p>\n        <a href=\"products.php\">Continue Shopping</a>\n    </div>\n</body>\n</html>\n```", null]}
