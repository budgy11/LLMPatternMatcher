{"prompt": "Create a purchase functionality using php", "llm_output": "Here's an example of how you can implement a basic purchase functionality in PHP. This will include creating products, adding them to cart, and making payments.\n\n**Database Schema:**\n\nWe'll be using the following database schema:\n\n```sql\nCREATE TABLE products (\n  id INT AUTO_INCREMENT PRIMARY KEY,\n  name VARCHAR(255),\n  price DECIMAL(10,2)\n);\n\nCREATE TABLE orders (\n  id INT AUTO_INCREMENT PRIMARY KEY,\n  user_id INT,\n  order_date DATE DEFAULT CURRENT_DATE,\n  total DECIMAL(10,2)\n);\n\nCREATE TABLE order_items (\n  id INT AUTO_INCREMENT PRIMARY KEY,\n  order_id INT,\n  product_id INT,\n  quantity INT\n);\n```\n\n**Model Files:**\n\nLet's create the following model files:\n\n```php\n// products.model.php\n\nclass Product {\n  public $id;\n  public $name;\n  public $price;\n\n  function __construct($id, $name, $price) {\n    $this->id = $id;\n    $this->name = $name;\n    $this->price = $price;\n  }\n}\n\n// orders.model.php\n\nclass Order {\n  public $id;\n  public $userId;\n  public $orderDate;\n  public $total;\n\n  function __construct($id, $userId, $orderDate, $total) {\n    $this->id = $id;\n    $this->userId = $userId;\n    $this->orderDate = $orderDate;\n    $this->total = $total;\n  }\n}\n\n// order_items.model.php\n\nclass OrderItem {\n  public $id;\n  public $orderId;\n  public $productId;\n  public $quantity;\n\n  function __construct($id, $orderId, $productId, $quantity) {\n    $this->id = $id;\n    $this->orderId = $orderId;\n    $this->productId = $productId;\n    $this->quantity = $quantity;\n  }\n}\n```\n\n**Controller File:**\n\nLet's create a controller file to handle requests:\n\n```php\n// cart.controller.php\n\nclass CartController {\n  private $db;\n\n  function __construct() {\n    require_once 'config/db.php';\n    $this->db = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);\n    if ($this->db->connect_error) {\n      die(\"Connection failed: \" . $this->db->connect_error);\n    }\n  }\n\n  function addProductToCart($productId, $quantity) {\n    // Check if product exists\n    $query = \"SELECT * FROM products WHERE id = '$productId'\";\n    $result = $this->db->query($query);\n    if ($result->num_rows == 0) {\n      return array('error' => 'Product not found');\n    }\n\n    // Add product to cart\n    $query = \"INSERT INTO order_items (order_id, product_id, quantity) VALUES ('\", $_SESSION['userId'], \"', '$productId', '$quantity')\";\n    $result = $this->db->query($query);\n\n    return array('success' => 'Product added to cart');\n  }\n\n  function viewCart() {\n    // Get user id\n    $userId = $_SESSION['userId'];\n\n    // Get order items\n    $query = \"SELECT * FROM order_items WHERE order_id = '$userId'\";\n    $result = $this->db->query($query);\n    $orderItems = array();\n    while ($row = $result->fetch_assoc()) {\n      $orderItem = new OrderItem(\n        $row['id'],\n        $row['order_id'],\n        $row['product_id'],\n        $row['quantity']\n      );\n      array_push($orderItems, $orderItem);\n    }\n\n    // Get order total\n    $query = \"SELECT SUM(price * quantity) AS total FROM order_items WHERE order_id = '$userId'\";\n    $result = $this->db->query($query);\n    $total = 0;\n    if ($result->num_rows > 0) {\n      while ($row = $result->fetch_assoc()) {\n        $total += $row['total'];\n      }\n    }\n\n    return array('orderItems' => $orderItems, 'total' => $total);\n  }\n\n  function checkout() {\n    // Get user id\n    $userId = $_SESSION['userId'];\n\n    // Get order total\n    $query = \"SELECT SUM(price * quantity) AS total FROM order_items WHERE order_id = '$userId'\";\n    $result = $this->db->query($query);\n    $total = 0;\n    if ($result->num_rows > 0) {\n      while ($row = $result->fetch_assoc()) {\n        $total += $row['total'];\n      }\n    }\n\n    // Create order\n    $orderId = $this->db->insert_id + 1;\n    $query = \"INSERT INTO orders (id, user_id, total) VALUES ('$orderId', '$userId', '$total')\";\n    $result = $this->db->query($query);\n\n    // Remove items from cart\n    $query = \"DELETE FROM order_items WHERE order_id = '$userId'\";\n    $result = $this->db->query($query);\n\n    return array('success' => 'Order created');\n  }\n}\n```\n\n**View File:**\n\nLet's create a view file to display the products and cart:\n\n```php\n// cart.view.php\n\nrequire_once 'cart.controller.php';\n\n$cartController = new CartController();\n\nif (isset($_POST['add_to_cart'])) {\n  $productId = $_POST['product_id'];\n  $quantity = $_POST['quantity'];\n  $result = $cartController->addProductToCart($productId, $quantity);\n} elseif (isset($_POST['checkout'])) {\n  $result = $cartController->checkout();\n}\n\nif ($result) {\n  echo json_encode($result);\n}\n\n// Display products\n$query = \"SELECT * FROM products\";\n$result = $this->db->query($query);\n\nwhile ($row = $result->fetch_assoc()) {\n  // Display product name and price\n  echo '<p>' . $row['name'] . ' - $' . $row['price'] . '</p>';\n  echo '<form action=\"\" method=\"post\">';\n  echo '<input type=\"hidden\" name=\"product_id\" value=\"' . $row['id'] . '\">';\n  echo '<button type=\"submit\" name=\"add_to_cart\">Add to Cart</button>';\n  echo '</form>';\n}\n\n// Display cart\nif (isset($_SESSION['userId'])) {\n  $result = $cartController->viewCart();\n  // Display order items and total\n  foreach ($result['orderItems'] as $item) {\n    echo '<p>' . $item->name . ' x' . $item->quantity . '</p>';\n  }\n  echo '<p>Total: $' . $result['total'] . '</p>';\n\n  // Checkout button\n  if (isset($_SESSION['userId'])) {\n    echo '<button type=\"submit\" name=\"checkout\">Checkout</button>';\n  }\n}\n```\n\nThis is a basic implementation of a purchase functionality using PHP. You'll need to modify it according to your specific needs and database schema.\n\nRemember to replace `DB_HOST`, `DB_USER`, `DB_PASSWORD`, and `DB_NAME` with your actual database credentials.\n\nPlease note that this example uses a simplified payment process for demonstration purposes only. In a real-world application, you would want to implement a more secure and robust payment gateway.", "code_blocks": [null, "```php\n// products.model.php\n\nclass Product {\n  public $id;\n  public $name;\n  public $price;\n\n  function __construct($id, $name, $price) {\n    $this->id = $id;\n    $this->name = $name;\n    $this->price = $price;\n  }\n}\n\n// orders.model.php\n\nclass Order {\n  public $id;\n  public $userId;\n  public $orderDate;\n  public $total;\n\n  function __construct($id, $userId, $orderDate, $total) {\n    $this->id = $id;\n    $this->userId = $userId;\n    $this->orderDate = $orderDate;\n    $this->total = $total;\n  }\n}\n\n// order_items.model.php\n\nclass OrderItem {\n  public $id;\n  public $orderId;\n  public $productId;\n  public $quantity;\n\n  function __construct($id, $orderId, $productId, $quantity) {\n    $this->id = $id;\n    $this->orderId = $orderId;\n    $this->productId = $productId;\n    $this->quantity = $quantity;\n  }\n}\n```", "```php\n// cart.controller.php\n\nclass CartController {\n  private $db;\n\n  function __construct() {\n    require_once 'config/db.php';\n    $this->db = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);\n    if ($this->db->connect_error) {\n      die(\"Connection failed: \" . $this->db->connect_error);\n    }\n  }\n\n  function addProductToCart($productId, $quantity) {\n    // Check if product exists\n    $query = \"SELECT * FROM products WHERE id = '$productId'\";\n    $result = $this->db->query($query);\n    if ($result->num_rows == 0) {\n      return array('error' => 'Product not found');\n    }\n\n    // Add product to cart\n    $query = \"INSERT INTO order_items (order_id, product_id, quantity) VALUES ('\", $_SESSION['userId'], \"', '$productId', '$quantity')\";\n    $result = $this->db->query($query);\n\n    return array('success' => 'Product added to cart');\n  }\n\n  function viewCart() {\n    // Get user id\n    $userId = $_SESSION['userId'];\n\n    // Get order items\n    $query = \"SELECT * FROM order_items WHERE order_id = '$userId'\";\n    $result = $this->db->query($query);\n    $orderItems = array();\n    while ($row = $result->fetch_assoc()) {\n      $orderItem = new OrderItem(\n        $row['id'],\n        $row['order_id'],\n        $row['product_id'],\n        $row['quantity']\n      );\n      array_push($orderItems, $orderItem);\n    }\n\n    // Get order total\n    $query = \"SELECT SUM(price * quantity) AS total FROM order_items WHERE order_id = '$userId'\";\n    $result = $this->db->query($query);\n    $total = 0;\n    if ($result->num_rows > 0) {\n      while ($row = $result->fetch_assoc()) {\n        $total += $row['total'];\n      }\n    }\n\n    return array('orderItems' => $orderItems, 'total' => $total);\n  }\n\n  function checkout() {\n    // Get user id\n    $userId = $_SESSION['userId'];\n\n    // Get order total\n    $query = \"SELECT SUM(price * quantity) AS total FROM order_items WHERE order_id = '$userId'\";\n    $result = $this->db->query($query);\n    $total = 0;\n    if ($result->num_rows > 0) {\n      while ($row = $result->fetch_assoc()) {\n        $total += $row['total'];\n      }\n    }\n\n    // Create order\n    $orderId = $this->db->insert_id + 1;\n    $query = \"INSERT INTO orders (id, user_id, total) VALUES ('$orderId', '$userId', '$total')\";\n    $result = $this->db->query($query);\n\n    // Remove items from cart\n    $query = \"DELETE FROM order_items WHERE order_id = '$userId'\";\n    $result = $this->db->query($query);\n\n    return array('success' => 'Order created');\n  }\n}\n```", "```php\n// cart.view.php\n\nrequire_once 'cart.controller.php';\n\n$cartController = new CartController();\n\nif (isset($_POST['add_to_cart'])) {\n  $productId = $_POST['product_id'];\n  $quantity = $_POST['quantity'];\n  $result = $cartController->addProductToCart($productId, $quantity);\n} elseif (isset($_POST['checkout'])) {\n  $result = $cartController->checkout();\n}\n\nif ($result) {\n  echo json_encode($result);\n}\n\n// Display products\n$query = \"SELECT * FROM products\";\n$result = $this->db->query($query);\n\nwhile ($row = $result->fetch_assoc()) {\n  // Display product name and price\n  echo '<p>' . $row['name'] . ' - $' . $row['price'] . '</p>';\n  echo '<form action=\"\" method=\"post\">';\n  echo '<input type=\"hidden\" name=\"product_id\" value=\"' . $row['id'] . '\">';\n  echo '<button type=\"submit\" name=\"add_to_cart\">Add to Cart</button>';\n  echo '</form>';\n}\n\n// Display cart\nif (isset($_SESSION['userId'])) {\n  $result = $cartController->viewCart();\n  // Display order items and total\n  foreach ($result['orderItems'] as $item) {\n    echo '<p>' . $item->name . ' x' . $item->quantity . '</p>';\n  }\n  echo '<p>Total: $' . $result['total'] . '</p>';\n\n  // Checkout button\n  if (isset($_SESSION['userId'])) {\n    echo '<button type=\"submit\" name=\"checkout\">Checkout</button>';\n  }\n}\n```"]}
