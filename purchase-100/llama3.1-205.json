{"prompt": "Create a purchase functionality using php", "llm_output": "Here is an example of a simple purchase functionality in PHP, including database interaction to store the purchase information.\n\n**Database Schema:**\n\nLet's assume we have two tables:\n\n1. `products`:\n\t* `id` (primary key)\n\t* `name`\n\t* `price`\n2. `purchases`:\n\t* `id` (primary key)\n\t* `product_id` (foreign key referencing the `products` table)\n\t* `quantity`\n\t* `total_cost`\n\n**PHP Code:**\n```php\n// config.php (database connection settings)\n$db_host = 'localhost';\n$db_username = 'username';\n$db_password = 'password';\n$db_name = 'mydb';\n\n// Establish database connection\nfunction connectDB() {\n  $conn = new mysqli($GLOBALS['db_host'], $GLOBALS['db_username'], $GLOBALS['db_password'], $GLOBALS['db_name']);\n  if ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n  }\n  return $conn;\n}\n\n// Purchase function\nfunction purchaseProduct($productId, $quantity) {\n  // Retrieve product details from database\n  $conn = connectDB();\n  $stmt = $conn->prepare(\"SELECT price FROM products WHERE id = ?\");\n  $stmt->bind_param('i', $productId);\n  $stmt->execute();\n  $result = $stmt->get_result();\n  if ($result) {\n    $productPrice = $result->fetch_assoc()['price'];\n    // Calculate total cost\n    $totalCost = $productPrice * $quantity;\n    \n    // Insert purchase into database\n    $stmt = $conn->prepare(\"INSERT INTO purchases (product_id, quantity, total_cost) VALUES (?, ?, ?)\");\n    $stmt->bind_param('iis', $productId, $quantity, $totalCost);\n    $stmt->execute();\n    \n    return true; // Purchase successful\n  } else {\n    return false; // Product not found\n  }\n}\n\n// Example usage:\n$productId = 1;\n$quantity = 2;\nif (purchaseProduct($productId, $quantity)) {\n  echo \"Purchase successful!\";\n} else {\n  echo \"Error: Product not found.\";\n}\n```\n**Explanation:**\n\n1. The `connectDB()` function establishes a connection to the database.\n2. The `purchaseProduct()` function takes two parameters: `productId` and `quantity`. It retrieves the product price from the database, calculates the total cost, and inserts a new purchase record into the `purchases` table.\n\n**Note:** This is a simplified example and does not include error handling or security measures that you should implement in a real-world application. Additionally, this assumes a simple database schema; you may need to adjust the code to fit your specific requirements.", "code_blocks": ["```php\n// config.php (database connection settings)\n$db_host = 'localhost';\n$db_username = 'username';\n$db_password = 'password';\n$db_name = 'mydb';\n\n// Establish database connection\nfunction connectDB() {\n  $conn = new mysqli($GLOBALS['db_host'], $GLOBALS['db_username'], $GLOBALS['db_password'], $GLOBALS['db_name']);\n  if ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n  }\n  return $conn;\n}\n\n// Purchase function\nfunction purchaseProduct($productId, $quantity) {\n  // Retrieve product details from database\n  $conn = connectDB();\n  $stmt = $conn->prepare(\"SELECT price FROM products WHERE id = ?\");\n  $stmt->bind_param('i', $productId);\n  $stmt->execute();\n  $result = $stmt->get_result();\n  if ($result) {\n    $productPrice = $result->fetch_assoc()['price'];\n    // Calculate total cost\n    $totalCost = $productPrice * $quantity;\n    \n    // Insert purchase into database\n    $stmt = $conn->prepare(\"INSERT INTO purchases (product_id, quantity, total_cost) VALUES (?, ?, ?)\");\n    $stmt->bind_param('iis', $productId, $quantity, $totalCost);\n    $stmt->execute();\n    \n    return true; // Purchase successful\n  } else {\n    return false; // Product not found\n  }\n}\n\n// Example usage:\n$productId = 1;\n$quantity = 2;\nif (purchaseProduct($productId, $quantity)) {\n  echo \"Purchase successful!\";\n} else {\n  echo \"Error: Product not found.\";\n}\n```"]}
