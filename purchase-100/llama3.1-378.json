{"prompt": "Create a purchase functionality using php", "llm_output": "Here is an example of a basic purchase functionality using PHP, including user input validation and data storage in a MySQL database.\n\n**Note:** This is a simplified example for demonstration purposes. In a real-world scenario, you would want to implement additional security measures, such as authentication and authorization.\n\n**Database schema:**\n```sql\nCREATE TABLE products (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  name VARCHAR(255),\n  price DECIMAL(10,2)\n);\n\nCREATE TABLE orders (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  user_id INT,\n  product_id INT,\n  quantity INT,\n  total DECIMAL(10,2),\n  timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n```\n**purchase.php:**\n```php\n<?php\n\n// Configuration\n$dbHost = 'localhost';\n$dbUsername = 'your_username';\n$dbPassword = 'your_password';\n$dbName = 'your_database';\n\n// Connect to database\n$conn = new mysqli($dbHost, $dbUsername, $dbPassword, $dbName);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Get product list from database\n$sql = \"SELECT * FROM products\";\n$result = $conn->query($sql);\n\n$products = array();\nwhile ($row = $result->fetch_assoc()) {\n    $products[] = array(\n        'id' => $row['id'],\n        'name' => $row['name'],\n        'price' => $row['price']\n    );\n}\n\n?>\n\n<!-- HTML form -->\n<form action=\"\" method=\"post\">\n    <label for=\"product_id\">Select a product:</label>\n    <select name=\"product_id\" id=\"product_id\">\n        <?php foreach ($products as $product) { ?>\n            <option value=\"<?php echo $product['id']; ?>\"><?php echo $product['name']; ?></option>\n        <?php } ?>\n    </select>\n\n    <br><br>\n\n    <label for=\"quantity\">Quantity:</label>\n    <input type=\"number\" id=\"quantity\" name=\"quantity\" required>\n\n    <br><br>\n\n    <button type=\"submit\">Buy Now!</button>\n</form>\n\n<?php\n\n// Handle form submission\nif (isset($_POST['product_id']) && isset($_POST['quantity'])) {\n    $productId = $_POST['product_id'];\n    $quantity = $_POST['quantity'];\n\n    // Validate input\n    if ($quantity <= 0) {\n        echo \"Invalid quantity. Please enter a positive number.\";\n        return;\n    }\n\n    // Get product price from database\n    $sql = \"SELECT price FROM products WHERE id = ?\";\n    $stmt = $conn->prepare($sql);\n    $stmt->bind_param(\"i\", $productId);\n    $stmt->execute();\n    $result = $stmt->get_result();\n\n    if ($row = $result->fetch_assoc()) {\n        $price = $row['price'];\n\n        // Calculate total\n        $total = $price * $quantity;\n\n        // Insert order into database\n        $sql = \"INSERT INTO orders (user_id, product_id, quantity, total) VALUES (?, ?, ?, ?)\";\n        $stmt = $conn->prepare($sql);\n        $stmt->bind_param(\"iiii\", 0, $productId, $quantity, $total);\n        $stmt->execute();\n\n        echo \"Order placed successfully!\";\n    } else {\n        echo \"Error: Product not found.\";\n    }\n}\n\n// Close database connection\n$conn->close();\n?>\n```\nThis code assumes you have a MySQL database set up with the `products` and `orders` tables. When the user submits the form, it validates their input and inserts a new order into the database if everything is valid.\n\n**Note:** This is just an example and should not be used in production without proper testing and security measures.", "code_blocks": [null, "```php\n<?php\n\n// Configuration\n$dbHost = 'localhost';\n$dbUsername = 'your_username';\n$dbPassword = 'your_password';\n$dbName = 'your_database';\n\n// Connect to database\n$conn = new mysqli($dbHost, $dbUsername, $dbPassword, $dbName);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Get product list from database\n$sql = \"SELECT * FROM products\";\n$result = $conn->query($sql);\n\n$products = array();\nwhile ($row = $result->fetch_assoc()) {\n    $products[] = array(\n        'id' => $row['id'],\n        'name' => $row['name'],\n        'price' => $row['price']\n    );\n}\n\n?>\n\n<!-- HTML form -->\n<form action=\"\" method=\"post\">\n    <label for=\"product_id\">Select a product:</label>\n    <select name=\"product_id\" id=\"product_id\">\n        <?php foreach ($products as $product) { ?>\n            <option value=\"<?php echo $product['id']; ?>\"><?php echo $product['name']; ?></option>\n        <?php } ?>\n    </select>\n\n    <br><br>\n\n    <label for=\"quantity\">Quantity:</label>\n    <input type=\"number\" id=\"quantity\" name=\"quantity\" required>\n\n    <br><br>\n\n    <button type=\"submit\">Buy Now!</button>\n</form>\n\n<?php\n\n// Handle form submission\nif (isset($_POST['product_id']) && isset($_POST['quantity'])) {\n    $productId = $_POST['product_id'];\n    $quantity = $_POST['quantity'];\n\n    // Validate input\n    if ($quantity <= 0) {\n        echo \"Invalid quantity. Please enter a positive number.\";\n        return;\n    }\n\n    // Get product price from database\n    $sql = \"SELECT price FROM products WHERE id = ?\";\n    $stmt = $conn->prepare($sql);\n    $stmt->bind_param(\"i\", $productId);\n    $stmt->execute();\n    $result = $stmt->get_result();\n\n    if ($row = $result->fetch_assoc()) {\n        $price = $row['price'];\n\n        // Calculate total\n        $total = $price * $quantity;\n\n        // Insert order into database\n        $sql = \"INSERT INTO orders (user_id, product_id, quantity, total) VALUES (?, ?, ?, ?)\";\n        $stmt = $conn->prepare($sql);\n        $stmt->bind_param(\"iiii\", 0, $productId, $quantity, $total);\n        $stmt->execute();\n\n        echo \"Order placed successfully!\";\n    } else {\n        echo \"Error: Product not found.\";\n    }\n}\n\n// Close database connection\n$conn->close();\n?>\n```"]}
