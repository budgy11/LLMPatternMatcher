{"prompt": "Create a purchase functionality using php", "llm_output": "Here is an example of a basic purchase functionality using PHP:\n\n**Database Schema**\n\nFor this example, we'll assume you have the following database schema:\n\n```sql\nCREATE TABLE products (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  name VARCHAR(255),\n  price DECIMAL(10,2)\n);\n\nCREATE TABLE orders (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  user_id INT,\n  total DECIMAL(10,2),\n  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\nCREATE TABLE order_items (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  order_id INT,\n  product_id INT,\n  quantity INT,\n  FOREIGN KEY (order_id) REFERENCES orders(id),\n  FOREIGN KEY (product_id) REFERENCES products(id)\n);\n```\n\n**PHP Code**\n\nWe'll create a class called `PurchaseController` that will handle the purchase functionality. This class will have methods for adding products to cart, creating an order, and processing payment.\n\n```php\nclass PurchaseController {\n  private $db;\n\n  public function __construct() {\n    $this->db = new PDO('mysql:host=localhost;dbname=shop', 'username', 'password');\n  }\n\n  /**\n   * Add product to cart\n   *\n   * @param int $product_id Product ID\n   * @return void\n   */\n  public function addToCart($product_id) {\n    $stmt = $this->db->prepare(\"SELECT * FROM products WHERE id = :id\");\n    $stmt->bindParam(':id', $product_id);\n    $stmt->execute();\n    $product = $stmt->fetch();\n\n    if ($product) {\n      // Check if product is already in cart\n      $cart = $_SESSION['cart'] ?? [];\n      if (isset($cart[$product_id])) {\n        $cart[$product_id]['quantity']++;\n      } else {\n        $cart[$product_id] = [\n          'id' => $product_id,\n          'name' => $product['name'],\n          'price' => $product['price'],\n          'quantity' => 1\n        ];\n      }\n\n      $_SESSION['cart'] = $cart;\n    }\n  }\n\n  /**\n   * Create order and process payment\n   *\n   * @return void\n   */\n  public function checkout() {\n    if (!isset($_SESSION['cart'])) {\n      echo \"Cart is empty.\";\n      return;\n    }\n\n    // Get user data (assuming we have a logged-in user)\n    $user_id = $_SESSION['user_id'];\n    $total = array_sum(array_column($_SESSION['cart'], 'price') * array_column($_SESSION['cart'], 'quantity'));\n\n    // Create order\n    $stmt = $this->db->prepare(\"INSERT INTO orders (user_id, total) VALUES (:id, :total)\");\n    $stmt->bindParam(':id', $user_id);\n    $stmt->bindParam(':total', $total);\n    $stmt->execute();\n    $order_id = $this->db->lastInsertId();\n\n    // Process payment\n    echo \"Processing payment...\";\n\n    // Remove products from cart and save order items\n    foreach ($_SESSION['cart'] as $product) {\n      $stmt = $this->db->prepare(\"INSERT INTO order_items (order_id, product_id, quantity) VALUES (:id, :pid, :quantity)\");\n      $stmt->bindParam(':id', $order_id);\n      $stmt->bindParam(':pid', $product['id']);\n      $stmt->bindParam(':quantity', $product['quantity']);\n      $stmt->execute();\n    }\n\n    // Clear cart\n    unset($_SESSION['cart']);\n\n    echo \"Order created successfully!\";\n  }\n}\n```\n\n**Usage**\n\nTo use this functionality, you'll need to include the `PurchaseController` class in your PHP file and create an instance of it. Then, you can call the methods as needed.\n\nFor example:\n\n```php\nrequire_once 'PurchaseController.php';\n\n$controller = new PurchaseController();\n$controller->addToCart(1); // Add product with ID 1 to cart\n$controller->checkout(); // Create order and process payment\n```\n\nThis is a basic implementation, and you may need to modify it to fit your specific use case. Additionally, this example assumes that you have already implemented user login functionality and are storing the user's session data in `$_SESSION`.", "code_blocks": [null, "```php\nclass PurchaseController {\n  private $db;\n\n  public function __construct() {\n    $this->db = new PDO('mysql:host=localhost;dbname=shop', 'username', 'password');\n  }\n\n  /**\n   * Add product to cart\n   *\n   * @param int $product_id Product ID\n   * @return void\n   */\n  public function addToCart($product_id) {\n    $stmt = $this->db->prepare(\"SELECT * FROM products WHERE id = :id\");\n    $stmt->bindParam(':id', $product_id);\n    $stmt->execute();\n    $product = $stmt->fetch();\n\n    if ($product) {\n      // Check if product is already in cart\n      $cart = $_SESSION['cart'] ?? [];\n      if (isset($cart[$product_id])) {\n        $cart[$product_id]['quantity']++;\n      } else {\n        $cart[$product_id] = [\n          'id' => $product_id,\n          'name' => $product['name'],\n          'price' => $product['price'],\n          'quantity' => 1\n        ];\n      }\n\n      $_SESSION['cart'] = $cart;\n    }\n  }\n\n  /**\n   * Create order and process payment\n   *\n   * @return void\n   */\n  public function checkout() {\n    if (!isset($_SESSION['cart'])) {\n      echo \"Cart is empty.\";\n      return;\n    }\n\n    // Get user data (assuming we have a logged-in user)\n    $user_id = $_SESSION['user_id'];\n    $total = array_sum(array_column($_SESSION['cart'], 'price') * array_column($_SESSION['cart'], 'quantity'));\n\n    // Create order\n    $stmt = $this->db->prepare(\"INSERT INTO orders (user_id, total) VALUES (:id, :total)\");\n    $stmt->bindParam(':id', $user_id);\n    $stmt->bindParam(':total', $total);\n    $stmt->execute();\n    $order_id = $this->db->lastInsertId();\n\n    // Process payment\n    echo \"Processing payment...\";\n\n    // Remove products from cart and save order items\n    foreach ($_SESSION['cart'] as $product) {\n      $stmt = $this->db->prepare(\"INSERT INTO order_items (order_id, product_id, quantity) VALUES (:id, :pid, :quantity)\");\n      $stmt->bindParam(':id', $order_id);\n      $stmt->bindParam(':pid', $product['id']);\n      $stmt->bindParam(':quantity', $product['quantity']);\n      $stmt->execute();\n    }\n\n    // Clear cart\n    unset($_SESSION['cart']);\n\n    echo \"Order created successfully!\";\n  }\n}\n```", "```php\nrequire_once 'PurchaseController.php';\n\n$controller = new PurchaseController();\n$controller->addToCart(1); // Add product with ID 1 to cart\n$controller->checkout(); // Create order and process payment\n```"]}
