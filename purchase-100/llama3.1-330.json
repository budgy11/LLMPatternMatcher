{"prompt": "Create a purchase functionality using php", "llm_output": "Here's an example of how to create a basic \"Add to Cart\" and \"Checkout\" functionality using PHP:\n\n**Database Schema**\n\nWe'll assume we have a database with the following tables:\n\n* `products`: stores product information (id, name, price)\n* `cart`: stores cart contents for each user (id, user_id, product_id, quantity)\n\n```sql\nCREATE TABLE products (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  price DECIMAL(10,2)\n);\n\nCREATE TABLE cart (\n  id INT AUTO_INCREMENT PRIMARY KEY,\n  user_id INT,\n  product_id INT,\n  quantity INT,\n  FOREIGN KEY (product_id) REFERENCES products(id),\n  FOREIGN KEY (user_id) REFERENCES users(id)\n);\n```\n\n**PHP Code**\n\nLet's create a simple PHP script to handle the purchase functionality.\n\n```php\n// config.php: database connection settings\n<?php\n$host = 'localhost';\n$dbname = 'mydatabase';\n$username = 'root';\n$password = '';\n\ntry {\n    $pdo = new PDO(\"mysql:host=$host;dbname=$dbname\", $username, $password);\n} catch (PDOException $e) {\n    die('Could not connect to database');\n}\n?>\n\n// add_to_cart.php: handle adding product to cart\n<?php\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    // sanitize input data\n    $product_id = $_POST['product_id'];\n    $quantity = (int)$_POST['quantity'];\n\n    // validate quantity\n    if ($quantity <= 0) {\n        echo \"Invalid quantity\";\n        exit;\n    }\n\n    // add product to cart\n    $stmt = $pdo->prepare(\"INSERT INTO cart SET user_id = ?, product_id = ?, quantity = ?\");\n    $result = $stmt->execute(array($_SESSION['user_id'], $product_id, $quantity));\n\n    if ($result) {\n        echo \"Product added to cart\";\n    } else {\n        echo \"Error adding product to cart\";\n    }\n}\n?>\n\n// checkout.php: handle checkout process\n<?php\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    // get user's cart contents\n    $stmt = $pdo->prepare(\"SELECT * FROM cart WHERE user_id = ?\");\n    $result = $stmt->execute(array($_SESSION['user_id']));\n    $cart_contents = $result->fetchAll();\n\n    // calculate total cost\n    $total_cost = 0;\n    foreach ($cart_contents as $item) {\n        $product_price = $pdo->query(\"SELECT price FROM products WHERE id = ?\", array($item['product_id']))->fetchColumn();\n        $total_cost += (int)$product_price * $item['quantity'];\n    }\n\n    // update order status\n    $stmt = $pdo->prepare(\"INSERT INTO orders SET user_id = ?, total_cost = ?\");\n    $result = $stmt->execute(array($_SESSION['user_id'], $total_cost));\n\n    if ($result) {\n        echo \"Order placed successfully\";\n    } else {\n        echo \"Error placing order\";\n    }\n}\n?>\n```\n\n**Example Usage**\n\nLet's say we have a simple HTML form for adding products to cart:\n\n```html\n<!-- add_to_cart.html -->\n<form action=\"add_to_cart.php\" method=\"post\">\n    <input type=\"hidden\" name=\"product_id\" value=\"<?php echo $product['id']; ?>\">\n    <label>Quantity:</label>\n    <input type=\"number\" name=\"quantity\" required>\n    <button type=\"submit\">Add to Cart</button>\n</form>\n```\n\nAnd another form for checking out:\n\n```html\n<!-- checkout.html -->\n<form action=\"checkout.php\" method=\"post\">\n    <p>Total Cost: <?php echo $total_cost; ?></p>\n    <input type=\"hidden\" name=\"order_id\" value=\"<?php echo $new_order['id']; ?>\">\n    <button type=\"submit\">Place Order</button>\n</form>\n```\n\nNote that this is a simplified example and you should handle errors, validation, and security more thoroughly in a real-world application. Additionally, this example assumes that the user's session ID is stored in `$_SESSION['user_id']` which may not be the case depending on your authentication system.", "code_blocks": [null, "```php\n// config.php: database connection settings\n<?php\n$host = 'localhost';\n$dbname = 'mydatabase';\n$username = 'root';\n$password = '';\n\ntry {\n    $pdo = new PDO(\"mysql:host=$host;dbname=$dbname\", $username, $password);\n} catch (PDOException $e) {\n    die('Could not connect to database');\n}\n?>\n\n// add_to_cart.php: handle adding product to cart\n<?php\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    // sanitize input data\n    $product_id = $_POST['product_id'];\n    $quantity = (int)$_POST['quantity'];\n\n    // validate quantity\n    if ($quantity <= 0) {\n        echo \"Invalid quantity\";\n        exit;\n    }\n\n    // add product to cart\n    $stmt = $pdo->prepare(\"INSERT INTO cart SET user_id = ?, product_id = ?, quantity = ?\");\n    $result = $stmt->execute(array($_SESSION['user_id'], $product_id, $quantity));\n\n    if ($result) {\n        echo \"Product added to cart\";\n    } else {\n        echo \"Error adding product to cart\";\n    }\n}\n?>\n\n// checkout.php: handle checkout process\n<?php\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    // get user's cart contents\n    $stmt = $pdo->prepare(\"SELECT * FROM cart WHERE user_id = ?\");\n    $result = $stmt->execute(array($_SESSION['user_id']));\n    $cart_contents = $result->fetchAll();\n\n    // calculate total cost\n    $total_cost = 0;\n    foreach ($cart_contents as $item) {\n        $product_price = $pdo->query(\"SELECT price FROM products WHERE id = ?\", array($item['product_id']))->fetchColumn();\n        $total_cost += (int)$product_price * $item['quantity'];\n    }\n\n    // update order status\n    $stmt = $pdo->prepare(\"INSERT INTO orders SET user_id = ?, total_cost = ?\");\n    $result = $stmt->execute(array($_SESSION['user_id'], $total_cost));\n\n    if ($result) {\n        echo \"Order placed successfully\";\n    } else {\n        echo \"Error placing order\";\n    }\n}\n?>\n```", null, null]}
