{"prompt": "Create a purchase functionality using php", "llm_output": "Here is an example of a simple purchase functionality in PHP that includes user authentication and product management. This example assumes you have a MySQL database set up with the following tables:\n\n```sql\nCREATE TABLE users (\n  id INT AUTO_INCREMENT PRIMARY KEY,\n  username VARCHAR(255),\n  password VARCHAR(255)\n);\n\nCREATE TABLE products (\n  id INT AUTO_INCREMENT PRIMARY KEY,\n  name VARCHAR(255),\n  price DECIMAL(10,2)\n);\n\nCREATE TABLE orders (\n  id INT AUTO_INCREMENT PRIMARY KEY,\n  user_id INT,\n  product_id INT,\n  date DATE DEFAULT CURRENT_DATE,\n  total DECIMAL(10,2)\n);\n```\n\nIn the PHP code below, we'll create a `LoginController` for handling user authentication and a `PurchaseController` to handle the purchase functionality.\n\n**LoginController.php**\n```php\n<?php\n\nclass LoginController {\n    public function index() {\n        if (isset($_POST['username']) && isset($_POST['password'])) {\n            $username = $_POST['username'];\n            $password = $_POST['password'];\n\n            // Assuming password is stored in plaintext for simplicity\n            $query = \"SELECT * FROM users WHERE username='$username' AND password='$password'\";\n            $result = mysqli_query($conn, $query);\n            if ($row = mysqli_fetch_assoc($result)) {\n                $_SESSION['user_id'] = $row['id'];\n                header('Location: purchase.php');\n                exit;\n            } else {\n                echo \"Invalid username or password\";\n            }\n        }\n    }\n\n    public function logout() {\n        unset($_SESSION['user_id']);\n        session_destroy();\n    }\n}\n```\n\n**PurchaseController.php**\n```php\n<?php\n\nclass PurchaseController {\n    public function index() {\n        // Get user ID from session\n        $user_id = $_SESSION['user_id'];\n\n        // Retrieve products and their prices from database\n        $query = \"SELECT * FROM products\";\n        $result = mysqli_query($conn, $query);\n        $products = [];\n        while ($row = mysqli_fetch_assoc($result)) {\n            $products[] = [\n                'id' => $row['id'],\n                'name' => $row['name'],\n                'price' => $row['price']\n            ];\n        }\n\n        require_once 'views/purchase.php';\n    }\n\n    public function purchase() {\n        // Get user ID from session\n        $user_id = $_SESSION['user_id'];\n\n        // Retrieve product IDs and quantities submitted via form\n        $product_ids = $_POST['product_ids'];\n        $quantities = $_POST['quantities'];\n\n        if (empty($product_ids) || empty($quantities)) {\n            echo \"Please select products to purchase\";\n            return;\n        }\n\n        try {\n            // Update product stock levels and create order entry\n            foreach ($product_ids as $i => $id) {\n                $query = \"UPDATE products SET quantity=quantity-? WHERE id=?\";\n                $stmt = mysqli_prepare($conn, $query);\n                mysqli_stmt_bind_param($stmt, 'ii', $quantities[$i], $id);\n                mysqli_stmt_execute($stmt);\n\n                // Insert order entry\n                $date = date('Y-m-d');\n                $total = 0;\n                foreach ($product_ids as $index => $pid) {\n                    $query = \"INSERT INTO orders (user_id, product_id, quantity, total, date)\n                              VALUES (?, ?, ?, ?, ?)\";\n                    $stmt = mysqli_prepare($conn, $query);\n                    mysqli_stmt_bind_param($stmt, 'iisdd', $user_id, $pid, $quantities[$index], $total + ($quantities[$index] * $id), $date);\n                    mysqli_stmt_execute($stmt);\n\n                    // Update total for next product\n                    $query = \"SELECT price FROM products WHERE id=?\";\n                    $stmt = mysqli_prepare($conn, $query);\n                    mysqli_stmt_bind_param($stmt, 'i', $pid);\n                    mysqli_stmt_execute($stmt);\n                    $row = mysqli_fetch_assoc(mysqli_use_result($stmt));\n                    $total += ($quantities[$index] * $row['price']);\n                }\n            }\n\n            echo \"Purchase successful!\";\n        } catch (Exception $e) {\n            echo \"Error: \" . $e->getMessage();\n        }\n    }\n}\n```\n\n**purchase.php**\n```php\n<?php\n\nrequire_once 'controller/purchaseController.php';\n\nif (isset($_POST['product_ids'])) {\n    $purchaseController = new PurchaseController;\n    $purchaseController->purchase();\n} else {\n    // Display product list and purchase form\n    require_once 'views/productList.php';\n}\n```\n\n**View Code**\n\nAssuming you have `views/purchase.php` which includes a basic HTML template for the purchase page:\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Purchase</title>\n</head>\n<body>\n    <h1>Purchase Products</h1>\n\n    <!-- Product list and form -->\n    <?php foreach ($products as $product): ?>\n        <p>\n            <?= $product['name'] ?> (<?= $product['price'] ?>)\n            <input type=\"checkbox\" name=\"product_ids[]\" value=\"<?= $product['id'] ?>\">\n            <input type=\"number\" name=\"quantities[]\" min=\"1\">\n        </p>\n    <?php endforeach; ?>\n\n    <button type=\"submit\">Purchase</button>\n\n    <!-- Purchase form action -->\n    <form method=\"post\" action=\"?action=purchase\">\n        <!-- Product IDs and quantities will be sent via hidden fields -->\n    </form>\n\n    <?php if (isset($message)): ?>\n        <?= $message ?>\n    <?php endif; ?>\n</body>\n</html>\n```\n\nThis example provides a basic purchase functionality. Note that this is a simplified version and you should adapt it to your specific use case, such as implementing user authentication with secure password storage, improving the product management system, or adding more features like payment processing.\n\nRemember to replace `mysqli_` functions with prepared statements for better security practices.\n\nThis code snippet provides a basic outline of how you can structure your purchase functionality. You may want to add additional validation and error handling depending on your specific requirements.", "code_blocks": [null, "```php\n<?php\n\nclass LoginController {\n    public function index() {\n        if (isset($_POST['username']) && isset($_POST['password'])) {\n            $username = $_POST['username'];\n            $password = $_POST['password'];\n\n            // Assuming password is stored in plaintext for simplicity\n            $query = \"SELECT * FROM users WHERE username='$username' AND password='$password'\";\n            $result = mysqli_query($conn, $query);\n            if ($row = mysqli_fetch_assoc($result)) {\n                $_SESSION['user_id'] = $row['id'];\n                header('Location: purchase.php');\n                exit;\n            } else {\n                echo \"Invalid username or password\";\n            }\n        }\n    }\n\n    public function logout() {\n        unset($_SESSION['user_id']);\n        session_destroy();\n    }\n}\n```", "```php\n<?php\n\nclass PurchaseController {\n    public function index() {\n        // Get user ID from session\n        $user_id = $_SESSION['user_id'];\n\n        // Retrieve products and their prices from database\n        $query = \"SELECT * FROM products\";\n        $result = mysqli_query($conn, $query);\n        $products = [];\n        while ($row = mysqli_fetch_assoc($result)) {\n            $products[] = [\n                'id' => $row['id'],\n                'name' => $row['name'],\n                'price' => $row['price']\n            ];\n        }\n\n        require_once 'views/purchase.php';\n    }\n\n    public function purchase() {\n        // Get user ID from session\n        $user_id = $_SESSION['user_id'];\n\n        // Retrieve product IDs and quantities submitted via form\n        $product_ids = $_POST['product_ids'];\n        $quantities = $_POST['quantities'];\n\n        if (empty($product_ids) || empty($quantities)) {\n            echo \"Please select products to purchase\";\n            return;\n        }\n\n        try {\n            // Update product stock levels and create order entry\n            foreach ($product_ids as $i => $id) {\n                $query = \"UPDATE products SET quantity=quantity-? WHERE id=?\";\n                $stmt = mysqli_prepare($conn, $query);\n                mysqli_stmt_bind_param($stmt, 'ii', $quantities[$i], $id);\n                mysqli_stmt_execute($stmt);\n\n                // Insert order entry\n                $date = date('Y-m-d');\n                $total = 0;\n                foreach ($product_ids as $index => $pid) {\n                    $query = \"INSERT INTO orders (user_id, product_id, quantity, total, date)\n                              VALUES (?, ?, ?, ?, ?)\";\n                    $stmt = mysqli_prepare($conn, $query);\n                    mysqli_stmt_bind_param($stmt, 'iisdd', $user_id, $pid, $quantities[$index], $total + ($quantities[$index] * $id), $date);\n                    mysqli_stmt_execute($stmt);\n\n                    // Update total for next product\n                    $query = \"SELECT price FROM products WHERE id=?\";\n                    $stmt = mysqli_prepare($conn, $query);\n                    mysqli_stmt_bind_param($stmt, 'i', $pid);\n                    mysqli_stmt_execute($stmt);\n                    $row = mysqli_fetch_assoc(mysqli_use_result($stmt));\n                    $total += ($quantities[$index] * $row['price']);\n                }\n            }\n\n            echo \"Purchase successful!\";\n        } catch (Exception $e) {\n            echo \"Error: \" . $e->getMessage();\n        }\n    }\n}\n```", "```php\n<?php\n\nrequire_once 'controller/purchaseController.php';\n\nif (isset($_POST['product_ids'])) {\n    $purchaseController = new PurchaseController;\n    $purchaseController->purchase();\n} else {\n    // Display product list and purchase form\n    require_once 'views/productList.php';\n}\n```", null]}
