{"prompt": "Create a purchase functionality using php", "llm_output": "<think>\nOkay, so the user wants to create a purchase functionality using PHP. I need to figure out how to approach this step by step.\n\nFirst, I should outline the main components involved in such a system. There's a database with products and orders, so I'll need to set up tables for both. Products will have details like id, name, description, price, and quantity. Orders will track each purchase with user info, product details, quantity, total price, and timestamps.\n\nNext, connecting to the database is crucial. Using MySQLi is a good choice because it's more secure than the older mysql functions. I'll need to include the connection details like host, username, password, and database name in the code.\n\nFor the purchase functionality itself, I think using sessions makes sense since they can store user information temporarily. So, when a user logs in or selects products, their session will keep track of their cart and personal details.\n\nI'll need functions to add items to the cart, which means inserting into the orders table. Each order should capture the product ID, user ID, quantity, total price, and purchase date. But before adding an item, I should check if the product's stock is sufficient. If it is, proceed; otherwise, return an error.\n\nUpdating quantities in the cart would involve adjusting the number of items a user wants to buy. This means updating the orders table where the order ID matches.\n\nWhen it's time to finalize the purchase, another function will handle that. It should retrieve all items from the cart for the current user and then clear the cart after processing. This ensures the next purchase starts fresh.\n\nDisplaying the cart contents is important too. Users need to see what they're buying before confirming. The function should return an array of their selected products with details, which can be shown on a webpage.\n\nCalculating the total price helps users know exactly how much they'll pay. Summing up all items in the cart gives this total, which can also be displayed.\n\nFinally, HTML and PHP integration is necessary for user interaction. A login form allows users to enter their credentials or register if needed. After logging in, they can access a shopping page where products are listed with buy buttons. Each button triggers an add to cart action, perhaps via AJAX to avoid page reloads.\n\nI should also consider security aspects like prepared statements to prevent SQL injection and session management to keep user data safe. Additionally, error handling is important to inform users if something goes wrong, like insufficient stock.\n\nPutting it all together, the code structure would involve creating database tables, writing PHP functions for each part of the purchase process, connecting these functions through a main script, and integrating them into an HTML interface with some JavaScript for dynamic updates.\n\nI might have missed some details, like handling multiple products in a single purchase or ensuring transactions are atomic to prevent data inconsistencies. Also, implementing a proper shopping cart that allows adding multiple items before checkout is essential. Maybe using AJAX for adding items so the page doesn't reload each time would enhance user experience.\n\nOverall, breaking down the problem into smaller functions and ensuring each part works before integrating them seems like a solid approach. Testing each function thoroughly will help catch any issues early on.\n</think>\n\nHere's an example of how to create a purchase functionality using PHP:\n\n```php\n<?php\n// database configuration\n$host = 'localhost';\n$username = 'root';\n$password = '';\n$db_name = 'purchase_system';\n\n// connect to database\n$conn = new mysqli($host, $username, $password, $db_name);\n\n// check connection\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// create products table\n$sql = \"CREATE TABLE IF NOT EXISTS products (\n    id INT AUTO_INCREMENT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    price DECIMAL(10, 2),\n    quantity INT\n)\";\n\n$conn->query($sql);\n\n// create orders table\n$sql = \"CREATE TABLE IF NOT EXISTS orders (\n    id INT AUTO_INCREMENT PRIMARY KEY,\n    user_id INT,\n    product_id INT,\n    quantity INT,\n    total_price DECIMAL(10, 2),\n    purchase_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)\";\n\n$conn->query($sql);\n\n// function to add item to cart\nfunction addToCart($product_id, $quantity) {\n    global $conn;\n    \n    // check if user is logged in\n    if (!isset($_SESSION['user'])) {\n        return \"Please login to continue.\";\n    }\n    \n    $user_id = $_SESSION['user']['id'];\n    \n    // check product availability\n    $sql = \"SELECT quantity FROM products WHERE id = ?\";\n    $stmt = $conn->prepare($sql);\n    $stmt->bind_param(\"i\", $product_id);\n    $stmt->execute();\n    $result = $stmt->get_result();\n    \n    if ($result->num_rows > 0) {\n        $row = $result->fetch_assoc();\n        \n        if ($quantity > $row['quantity']) {\n            return \"Not enough stock available.\";\n        }\n        \n        // add to cart\n        $sql = \"INSERT INTO orders (user_id, product_id, quantity, total_price) VALUES (?, ?, ?, ?)\";\n        $stmt = $conn->prepare($sql);\n        $price_sql = \"SELECT price FROM products WHERE id = ?\";\n        $price_stmt = $conn->prepare($price_sql);\n        $price_stmt->bind_param(\"i\", $product_id);\n        $price_stmt->execute();\n        $price_result = $price_stmt->get_result();\n        $price_row = $price_result->fetch_assoc();\n        $total_price = $quantity * $price_row['price'];\n        \n        $stmt->bind_param(\"iiid\", $user_id, $product_id, $quantity, $total_price);\n        if ($stmt->execute()) {\n            return \"Item added to cart successfully.\";\n        } else {\n            return \"Error adding item to cart.\";\n        }\n    } else {\n        return \"Product not found.\";\n    }\n}\n\n// function to update quantity in cart\nfunction updateCart($order_id, $quantity) {\n    global $conn;\n    \n    // check if user is logged in\n    if (!isset($_SESSION['user'])) {\n        return \"Please login to continue.\";\n    }\n    \n    // update quantity\n    $sql = \"UPDATE orders SET quantity = ? WHERE id = ?\";\n    $stmt = $conn->prepare($sql);\n    $stmt->bind_param(\"ii\", $quantity, $order_id);\n    \n    if ($stmt->execute()) {\n        return \"Quantity updated successfully.\";\n    } else {\n        return \"Error updating quantity.\";\n    }\n}\n\n// function to remove item from cart\nfunction removeFromCart($order_id) {\n    global $conn;\n    \n    // check if user is logged in\n    if (!isset($_SESSION['user'])) {\n        return \"Please login to continue.\";\n    }\n    \n    // delete order\n    $sql = \"DELETE FROM orders WHERE id = ?\";\n    $stmt = $conn->prepare($sql);\n    $stmt->bind_param(\"i\", $order_id);\n    \n    if ($stmt->execute()) {\n        return \"Item removed from cart successfully.\";\n    } else {\n        return \"Error removing item from cart.\";\n    }\n}\n\n// function to purchase items\nfunction purchaseItems() {\n    global $conn;\n    \n    // check if user is logged in\n    if (!isset($_SESSION['user'])) {\n        return \"Please login to continue.\";\n    }\n    \n    $user_id = $_SESSION['user']['id'];\n    \n    // get all orders for this user\n    $sql = \"SELECT * FROM orders WHERE user_id = ?\";\n    $stmt = $conn->prepare($sql);\n    $stmt->bind_param(\"i\", $user_id);\n    $stmt->execute();\n    $result = $stmt->get_result();\n    \n    if ($result->num_rows > 0) {\n        // update product quantities\n        while ($row = $result->fetch_assoc()) {\n            $product_id = $row['product_id'];\n            $quantity = $row['quantity'];\n            \n            $sql = \"UPDATE products SET quantity = quantity - ? WHERE id = ?\";\n            $update_stmt = $conn->prepare($sql);\n            $update_stmt->bind_param(\"ii\", $quantity, $product_id);\n            $update_stmt->execute();\n        }\n        \n        // clear cart\n        $sql = \"DELETE FROM orders WHERE user_id = ?\";\n        $delete_stmt = $conn->prepare($sql);\n        $delete_stmt->bind_param(\"i\", $user_id);\n        $delete_stmt->execute();\n        \n        return \"Purchase completed successfully.\";\n    } else {\n        return \"Your cart is empty.\";\n    }\n}\n\n// function to display cart\nfunction displayCart() {\n    global $conn;\n    \n    // check if user is logged in\n    if (!isset($_SESSION['user'])) {\n        return \"Please login to continue.\";\n    }\n    \n    $user_id = $_SESSION['user']['id'];\n    \n    // get all orders for this user\n    $sql = \"SELECT * FROM orders WHERE user_id = ?\";\n    $stmt = $conn->prepare($sql);\n    $stmt->bind_param(\"i\", $user_id);\n    $stmt->execute();\n    $result = $stmt->get_result();\n    \n    if ($result->num_rows > 0) {\n        $cart_items = array();\n        \n        while ($row = $result->fetch_assoc()) {\n            // get product details\n            $sql = \"SELECT name, price FROM products WHERE id = ?\";\n            $product_stmt = $conn->prepare($sql);\n            $product_stmt->bind_param(\"i\", $row['product_id']);\n            $product_stmt->execute();\n            $product_result = $product_stmt->get_result();\n            $product_row = $product_result->fetch_assoc();\n            \n            $cart_item = array(\n                'id' => $row['id'],\n                'name' => $product_row['name'],\n                'price' => $product_row['price'],\n                'quantity' => $row['quantity'],\n                'total_price' => $row['total_price']\n            );\n            \n            array_push($cart_items, $cart_item);\n        }\n        \n        return $cart_items;\n    } else {\n        return \"Your cart is empty.\";\n    }\n}\n\n// function to calculate total price\nfunction calculateTotal() {\n    global $conn;\n    \n    // check if user is logged in\n    if (!isset($_SESSION['user'])) {\n        return 0;\n    }\n    \n    $user_id = $_SESSION['user']['id'];\n    \n    // get sum of all total prices for this user\n    $sql = \"SELECT SUM(total_price) AS total FROM orders WHERE user_id = ?\";\n    $stmt = $conn->prepare($sql);\n    $stmt->bind_param(\"i\", $user_id);\n    $stmt->execute();\n    $result = $stmt->get_result();\n    \n    if ($row = $result->fetch_assoc()) {\n        return $row['total'];\n    } else {\n        return 0;\n    }\n}\n\n// function to login user\nfunction loginUser($username, $password) {\n    global $conn;\n    \n    // hash password\n    $hashed_password = md5($password);\n    \n    // check if user exists\n    $sql = \"SELECT * FROM users WHERE username = ? AND password = ?\";\n    $stmt = $conn->prepare($sql);\n    $stmt->bind_param(\"ss\", $username, $hashed_password);\n    $stmt->execute();\n    $result = $stmt->get_result();\n    \n    if ($result->num_rows > 0) {\n        $row = $result->fetch_assoc();\n        \n        // start session and store user details\n        session_start();\n        $_SESSION['user'] = array(\n            'id' => $row['id'],\n            'username' => $row['username']\n        );\n        \n        return \"Login successful.\";\n    } else {\n        return \"Invalid username or password.\";\n    }\n}\n\n// function to register user\nfunction registerUser($username, $password) {\n    global $conn;\n    \n    // check if user already exists\n    $sql = \"SELECT * FROM users WHERE username = ?\";\n    $stmt = $conn->prepare($sql);\n    $stmt->bind_param(\"s\", $username);\n    $stmt->execute();\n    $result = $stmt->get_result();\n    \n    if ($result->num_rows > 0) {\n        return \"Username already exists.\";\n    } else {\n        // hash password\n        $hashed_password = md5($password);\n        \n        // insert new user\n        $sql = \"INSERT INTO users (username, password) VALUES (?, ?)\";\n        $stmt = $conn->prepare($sql);\n        $stmt->bind_param(\"ss\", $username, $hashed_password);\n        \n        if ($stmt->execute()) {\n            session_start();\n            $_SESSION['user'] = array(\n                'id' => $stmt->insert_id,\n                'username' => $username\n            );\n            \n            return \"Registration successful.\";\n        } else {\n            return \"Error registering user.\";\n        }\n    }\n}\n\n// main script\nif (isset($_POST['action'])) {\n    switch ($_POST['action']) {\n        case 'login':\n            $result = loginUser($_POST['username'], $_POST['password']);\n            echo $result;\n            break;\n            \n        case 'register':\n            $result = registerUser($_POST['username'], $_POST['password']);\n            echo $result;\n            break;\n            \n        case 'add_to_cart':\n            $result = addToCart($_POST['product_id'], $_POST['quantity']);\n            echo $result;\n            break;\n            \n        case 'update_cart':\n            $result = updateCart($_POST['order_id'], $_POST['quantity']);\n            echo $result;\n            break;\n            \n        case 'remove_from_cart':\n            $result = removeFromCart($_POST['order_id']);\n            echo $result;\n            break;\n            \n        case 'purchase':\n            $result = purchaseItems();\n            echo $result;\n            break;\n    }\n}\n\n// close database connection\n$conn->close();\n?>\n```\n\nThis code provides a basic purchase functionality with the following features:\n\n1. User authentication (login and registration)\n2. Product management\n3. Shopping cart functionality\n4. Order processing\n\nTo use this code:\n\n1. Create a MySQL database named 'purchase_system'\n2. Add the necessary tables using the SQL statements provided in the code\n3. Update the database connection details (username, password) as needed\n4. Use the functions in your PHP scripts to implement the desired functionality\n\nThe system includes security features like:\n\n- Prepared statements for SQL injection prevention\n- Password hashing using MD5\n- Session management for user authentication\n- Input validation\n\nYou can extend this code by adding more features such as:\n\n- Product categories\n- User profiles\n- Order history\n- Payment integration\n- Shipping options\n- Discount codes\n- Wishlist functionality\n\nRemember to implement proper error handling and security measures when building a production system.\n\nHere's an example of how you could use this code in your HTML pages:\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Purchase System</title>\n</head>\n<body>\n    <?php session_start(); ?>\n    \n    <!-- Login Form -->\n    <form method=\"post\" action=\"\">\n        <input type=\"text\" name=\"username\" placeholder=\"Username\">\n        <input type=\"password\" name=\"password\" placeholder=\"Password\">\n        <button type=\"submit\" name=\"action\" value=\"login\">Login</button>\n        <a href=\"?register\">Register</a>\n    </form>\n\n    <!-- Registration Form -->\n    <?php if (isset($_GET['register'])) { ?>\n    <form method=\"post\" action=\"\">\n        <input type=\"text\" name=\"username\" placeholder=\"Username\">\n        <input type=\"password\" name=\"password\" placeholder=\"Password\">\n        <button type=\"submit\" name=\"action\" value=\"register\">Register</button>\n    </form>\n    <?php } ?>\n\n    <!-- Product Listing -->\n    <?php\n    // Connect to database and fetch products\n    $conn = new mysqli($host, $username, $password, $db_name);\n    \n    if ($conn->connect_error) {\n        die(\"Connection failed: \" . $conn->connect_error);\n    }\n    \n    $sql = \"SELECT * FROM products\";\n    $result = $conn->query($sql);\n    \n    if ($result->num_rows > 0) {\n        while ($row = $result->fetch_assoc()) {\n            echo \"<div>\";\n                echo \"<h2>{$row['name']}</h2>\";\n                echo \"<p>{$row['description']}</p>\";\n                echo \"<p>Price: \\${$row['price']}</p>\";\n                echo \"<p>Available Quantity: {$row['quantity']}</p>\";\n                echo \"<form method='post' action=''>\";\n                    echo \"<input type='hidden' name='action' value='add_to_cart'>\";\n                    echo \"<input type='hidden' name='product_id' value='{$row['id']}'>\";\n                    echo \"<input type='number' name='quantity' min='1' max='{$row['quantity']}' placeholder='Quantity'>\";\n                    echo \"<button type='submit'>Add to Cart</button>\";\n                echo \"</form>\";\n            echo \"</div>\";\n        }\n    } else {\n        echo \"No products found.\";\n    }\n    \n    $conn->close();\n    ?>\n\n    <!-- Display Cart -->\n    <?php\n    session_start();\n    if (isset($_SESSION['user'])) {\n        $cart = displayCart();\n        \n        if ($cart != \"Your cart is empty.\") {\n            foreach ($cart as $item) {\n                echo \"<div>\";\n                    echo \"<h2>{$item['name']}</h2>\";\n                    echo \"<p>Price: \\${$item['price']}</p>\";\n                    echo \"<p>Quantity: {$item['quantity']}</p>\";\n                    echo \"<p>Total: \\${$item['total_price']}</p>\";\n                    echo \"<form method='post' action=''>\";\n                        echo \"<input type='hidden' name='action' value='update_cart'>\";\n                        echo \"<input type='hidden' name='order_id' value='{$item['id']}'>\";\n                        echo \"<input type='number' name='quantity' min='1' max='100' placeholder='New Quantity'>\";\n                        echo \"<button type='submit'>Update</button>\";\n                    echo \"</form>\";\n                    echo \"<form method='post' action=''>\";\n                        echo \"<input type='hidden' name='action' value='remove_from_cart'>\";\n                        echo \"<input type='hidden' name='order_id' value='{$item['id']}'>\";\n                        echo \"<button type='submit'>Remove</button>\";\n                    echo \"</form>\";\n                echo \"</div>\";\n            }\n            \n            $total = calculateTotal();\n            echo \"<h2>Total: \\$$total</h2>\";\n            echo \"<form method='post' action=''>\";\n                echo \"<input type='hidden' name='action' value='purchase'>\";\n                echo \"<button type='submit'>Purchase Now</button>\";\n            echo \"</form>\";\n        } else {\n            echo $cart;\n        }\n    }\n    ?>\n\n    <!-- Logout Link -->\n    <?php if (isset($_SESSION['user'])) { ?>\n    <a href=\"?logout\">Logout</a>\n    \n    <?php\n    if (isset($_GET['logout'])) {\n        session_unset();\n        session_destroy();\n        header(\"Location: ?\");\n    }\n    ?>\n    <?php } ?>\n\n</body>\n</html>\n```\n\nThis example provides a basic implementation of a purchase system. You can customize it further based on your specific needs and add more features as required.", "code_blocks": ["```php\n<?php\n// database configuration\n$host = 'localhost';\n$username = 'root';\n$password = '';\n$db_name = 'purchase_system';\n\n// connect to database\n$conn = new mysqli($host, $username, $password, $db_name);\n\n// check connection\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// create products table\n$sql = \"CREATE TABLE IF NOT EXISTS products (\n    id INT AUTO_INCREMENT PRIMARY KEY,\n    name VARCHAR(255),\n    description TEXT,\n    price DECIMAL(10, 2),\n    quantity INT\n)\";\n\n$conn->query($sql);\n\n// create orders table\n$sql = \"CREATE TABLE IF NOT EXISTS orders (\n    id INT AUTO_INCREMENT PRIMARY KEY,\n    user_id INT,\n    product_id INT,\n    quantity INT,\n    total_price DECIMAL(10, 2),\n    purchase_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)\";\n\n$conn->query($sql);\n\n// function to add item to cart\nfunction addToCart($product_id, $quantity) {\n    global $conn;\n    \n    // check if user is logged in\n    if (!isset($_SESSION['user'])) {\n        return \"Please login to continue.\";\n    }\n    \n    $user_id = $_SESSION['user']['id'];\n    \n    // check product availability\n    $sql = \"SELECT quantity FROM products WHERE id = ?\";\n    $stmt = $conn->prepare($sql);\n    $stmt->bind_param(\"i\", $product_id);\n    $stmt->execute();\n    $result = $stmt->get_result();\n    \n    if ($result->num_rows > 0) {\n        $row = $result->fetch_assoc();\n        \n        if ($quantity > $row['quantity']) {\n            return \"Not enough stock available.\";\n        }\n        \n        // add to cart\n        $sql = \"INSERT INTO orders (user_id, product_id, quantity, total_price) VALUES (?, ?, ?, ?)\";\n        $stmt = $conn->prepare($sql);\n        $price_sql = \"SELECT price FROM products WHERE id = ?\";\n        $price_stmt = $conn->prepare($price_sql);\n        $price_stmt->bind_param(\"i\", $product_id);\n        $price_stmt->execute();\n        $price_result = $price_stmt->get_result();\n        $price_row = $price_result->fetch_assoc();\n        $total_price = $quantity * $price_row['price'];\n        \n        $stmt->bind_param(\"iiid\", $user_id, $product_id, $quantity, $total_price);\n        if ($stmt->execute()) {\n            return \"Item added to cart successfully.\";\n        } else {\n            return \"Error adding item to cart.\";\n        }\n    } else {\n        return \"Product not found.\";\n    }\n}\n\n// function to update quantity in cart\nfunction updateCart($order_id, $quantity) {\n    global $conn;\n    \n    // check if user is logged in\n    if (!isset($_SESSION['user'])) {\n        return \"Please login to continue.\";\n    }\n    \n    // update quantity\n    $sql = \"UPDATE orders SET quantity = ? WHERE id = ?\";\n    $stmt = $conn->prepare($sql);\n    $stmt->bind_param(\"ii\", $quantity, $order_id);\n    \n    if ($stmt->execute()) {\n        return \"Quantity updated successfully.\";\n    } else {\n        return \"Error updating quantity.\";\n    }\n}\n\n// function to remove item from cart\nfunction removeFromCart($order_id) {\n    global $conn;\n    \n    // check if user is logged in\n    if (!isset($_SESSION['user'])) {\n        return \"Please login to continue.\";\n    }\n    \n    // delete order\n    $sql = \"DELETE FROM orders WHERE id = ?\";\n    $stmt = $conn->prepare($sql);\n    $stmt->bind_param(\"i\", $order_id);\n    \n    if ($stmt->execute()) {\n        return \"Item removed from cart successfully.\";\n    } else {\n        return \"Error removing item from cart.\";\n    }\n}\n\n// function to purchase items\nfunction purchaseItems() {\n    global $conn;\n    \n    // check if user is logged in\n    if (!isset($_SESSION['user'])) {\n        return \"Please login to continue.\";\n    }\n    \n    $user_id = $_SESSION['user']['id'];\n    \n    // get all orders for this user\n    $sql = \"SELECT * FROM orders WHERE user_id = ?\";\n    $stmt = $conn->prepare($sql);\n    $stmt->bind_param(\"i\", $user_id);\n    $stmt->execute();\n    $result = $stmt->get_result();\n    \n    if ($result->num_rows > 0) {\n        // update product quantities\n        while ($row = $result->fetch_assoc()) {\n            $product_id = $row['product_id'];\n            $quantity = $row['quantity'];\n            \n            $sql = \"UPDATE products SET quantity = quantity - ? WHERE id = ?\";\n            $update_stmt = $conn->prepare($sql);\n            $update_stmt->bind_param(\"ii\", $quantity, $product_id);\n            $update_stmt->execute();\n        }\n        \n        // clear cart\n        $sql = \"DELETE FROM orders WHERE user_id = ?\";\n        $delete_stmt = $conn->prepare($sql);\n        $delete_stmt->bind_param(\"i\", $user_id);\n        $delete_stmt->execute();\n        \n        return \"Purchase completed successfully.\";\n    } else {\n        return \"Your cart is empty.\";\n    }\n}\n\n// function to display cart\nfunction displayCart() {\n    global $conn;\n    \n    // check if user is logged in\n    if (!isset($_SESSION['user'])) {\n        return \"Please login to continue.\";\n    }\n    \n    $user_id = $_SESSION['user']['id'];\n    \n    // get all orders for this user\n    $sql = \"SELECT * FROM orders WHERE user_id = ?\";\n    $stmt = $conn->prepare($sql);\n    $stmt->bind_param(\"i\", $user_id);\n    $stmt->execute();\n    $result = $stmt->get_result();\n    \n    if ($result->num_rows > 0) {\n        $cart_items = array();\n        \n        while ($row = $result->fetch_assoc()) {\n            // get product details\n            $sql = \"SELECT name, price FROM products WHERE id = ?\";\n            $product_stmt = $conn->prepare($sql);\n            $product_stmt->bind_param(\"i\", $row['product_id']);\n            $product_stmt->execute();\n            $product_result = $product_stmt->get_result();\n            $product_row = $product_result->fetch_assoc();\n            \n            $cart_item = array(\n                'id' => $row['id'],\n                'name' => $product_row['name'],\n                'price' => $product_row['price'],\n                'quantity' => $row['quantity'],\n                'total_price' => $row['total_price']\n            );\n            \n            array_push($cart_items, $cart_item);\n        }\n        \n        return $cart_items;\n    } else {\n        return \"Your cart is empty.\";\n    }\n}\n\n// function to calculate total price\nfunction calculateTotal() {\n    global $conn;\n    \n    // check if user is logged in\n    if (!isset($_SESSION['user'])) {\n        return 0;\n    }\n    \n    $user_id = $_SESSION['user']['id'];\n    \n    // get sum of all total prices for this user\n    $sql = \"SELECT SUM(total_price) AS total FROM orders WHERE user_id = ?\";\n    $stmt = $conn->prepare($sql);\n    $stmt->bind_param(\"i\", $user_id);\n    $stmt->execute();\n    $result = $stmt->get_result();\n    \n    if ($row = $result->fetch_assoc()) {\n        return $row['total'];\n    } else {\n        return 0;\n    }\n}\n\n// function to login user\nfunction loginUser($username, $password) {\n    global $conn;\n    \n    // hash password\n    $hashed_password = md5($password);\n    \n    // check if user exists\n    $sql = \"SELECT * FROM users WHERE username = ? AND password = ?\";\n    $stmt = $conn->prepare($sql);\n    $stmt->bind_param(\"ss\", $username, $hashed_password);\n    $stmt->execute();\n    $result = $stmt->get_result();\n    \n    if ($result->num_rows > 0) {\n        $row = $result->fetch_assoc();\n        \n        // start session and store user details\n        session_start();\n        $_SESSION['user'] = array(\n            'id' => $row['id'],\n            'username' => $row['username']\n        );\n        \n        return \"Login successful.\";\n    } else {\n        return \"Invalid username or password.\";\n    }\n}\n\n// function to register user\nfunction registerUser($username, $password) {\n    global $conn;\n    \n    // check if user already exists\n    $sql = \"SELECT * FROM users WHERE username = ?\";\n    $stmt = $conn->prepare($sql);\n    $stmt->bind_param(\"s\", $username);\n    $stmt->execute();\n    $result = $stmt->get_result();\n    \n    if ($result->num_rows > 0) {\n        return \"Username already exists.\";\n    } else {\n        // hash password\n        $hashed_password = md5($password);\n        \n        // insert new user\n        $sql = \"INSERT INTO users (username, password) VALUES (?, ?)\";\n        $stmt = $conn->prepare($sql);\n        $stmt->bind_param(\"ss\", $username, $hashed_password);\n        \n        if ($stmt->execute()) {\n            session_start();\n            $_SESSION['user'] = array(\n                'id' => $stmt->insert_id,\n                'username' => $username\n            );\n            \n            return \"Registration successful.\";\n        } else {\n            return \"Error registering user.\";\n        }\n    }\n}\n\n// main script\nif (isset($_POST['action'])) {\n    switch ($_POST['action']) {\n        case 'login':\n            $result = loginUser($_POST['username'], $_POST['password']);\n            echo $result;\n            break;\n            \n        case 'register':\n            $result = registerUser($_POST['username'], $_POST['password']);\n            echo $result;\n            break;\n            \n        case 'add_to_cart':\n            $result = addToCart($_POST['product_id'], $_POST['quantity']);\n            echo $result;\n            break;\n            \n        case 'update_cart':\n            $result = updateCart($_POST['order_id'], $_POST['quantity']);\n            echo $result;\n            break;\n            \n        case 'remove_from_cart':\n            $result = removeFromCart($_POST['order_id']);\n            echo $result;\n            break;\n            \n        case 'purchase':\n            $result = purchaseItems();\n            echo $result;\n            break;\n    }\n}\n\n// close database connection\n$conn->close();\n?>\n```", null]}
