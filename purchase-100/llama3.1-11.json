{"prompt": "Create a purchase cart functionality using php", "llm_output": "**Purchase Cart Functionality in PHP**\n=====================================\n\nIn this example, we will create a simple purchase cart functionality using PHP. We'll use sessions to store the items in the cart.\n\n**Database Schema**\n-------------------\n\nWe'll assume you have a `products` table with the following columns:\n\n| Column Name | Data Type |\n| --- | --- |\n| id | int (primary key) |\n| name | varchar(255) |\n| price | decimal(10, 2) |\n\n**cart.php**\n------------\n\n```php\n<?php\nsession_start();\n\n// Check if cart is already created in session\nif (!isset($_SESSION['cart'])) {\n    $_SESSION['cart'] = array();\n}\n\n// Function to add item to cart\nfunction addItemToCart($id, $name, $price) {\n    // Create a new array for the item\n    $item = array(\n        'id' => $id,\n        'name' => $name,\n        'price' => $price\n    );\n    \n    // Add item to cart\n    $_SESSION['cart'][] = $item;\n}\n\n// Function to update item quantity in cart\nfunction updateItemQuantity($id, $quantity) {\n    foreach ($_SESSION['cart'] as &$item) {\n        if ($item['id'] == $id) {\n            $item['quantity'] = $quantity;\n            break;\n        }\n    }\n}\n\n// Function to remove item from cart\nfunction removeItemFromCart($id) {\n    // Remove item by ID\n    $_SESSION['cart'] = array_filter($_SESSION['cart'], function ($item) use ($id) {\n        return $item['id'] != $id;\n    });\n}\n\n// Function to calculate total cost of cart\nfunction calculateTotalCost() {\n    $totalCost = 0;\n    foreach ($_SESSION['cart'] as &$item) {\n        $totalCost += $item['price'];\n    }\n    return $totalCost;\n}\n\n// Example usage:\n$productId = 1;\n$productName = 'Product A';\n$productPrice = 9.99;\n\naddItemToCart($productId, $productName, $productPrice);\n\necho \"Total Cost: $\" . calculateTotalCost();\n?>\n```\n\n**cart-display.php**\n-------------------\n\n```php\n<?php\nsession_start();\n\n// Display cart items and total cost\n?>\n\n<h1>Cart Items:</h1>\n\n<table>\n    <tr>\n        <th>Name</th>\n        <th>Price</th>\n        <th></th>\n    </tr>\n    \n    <?php foreach ($_SESSION['cart'] as $item) : ?>\n    <tr>\n        <td><?php echo $item['name']; ?></td>\n        <td><?php echo \"$\" . $item['price']; ?></td>\n        <td>\n            <a href=\"#\" class=\"remove-item\" data-id=\"<?php echo $item['id']; ?>\">Remove</a>\n        </td>\n    </tr>\n    \n    <?php endforeach; ?>\n</table>\n\n<h2>Total Cost: $<?php echo calculateTotalCost(); ?></h2>\n```\n\n**cart-remove-item.js**\n----------------------\n\n```javascript\n// Remove item from cart on click\ndocument.querySelectorAll('.remove-item').forEach(function (button) {\n    button.addEventListener('click', function () {\n        var id = button.dataset.id;\n        removeItemFromCart(id);\n        window.location.reload();\n    });\n});\n```\n\nThis code includes:\n\n1. A PHP script to add, update and remove items from the cart.\n2. A HTML display of the cart items with a remove link for each item.\n3. A JavaScript function to remove an item from the cart on click.\n\nNote: This is a basic implementation and you should consider security measures such as validating user input and checking session integrity.\n\n**Usage Example**\n\n1. Create a new PHP file (e.g., `cart.php`) with the above code.\n2. Include `cart-display.php` in your HTML template to display the cart items.\n3. Use JavaScript to remove items from the cart when clicked on the \"Remove\" link.\n4. You can update the cart item quantity by calling the `updateItemQuantity()` function.\n\nThis code provides a basic purchase cart functionality using PHP and sessions.", "code_blocks": ["```php\n<?php\nsession_start();\n\n// Check if cart is already created in session\nif (!isset($_SESSION['cart'])) {\n    $_SESSION['cart'] = array();\n}\n\n// Function to add item to cart\nfunction addItemToCart($id, $name, $price) {\n    // Create a new array for the item\n    $item = array(\n        'id' => $id,\n        'name' => $name,\n        'price' => $price\n    );\n    \n    // Add item to cart\n    $_SESSION['cart'][] = $item;\n}\n\n// Function to update item quantity in cart\nfunction updateItemQuantity($id, $quantity) {\n    foreach ($_SESSION['cart'] as &$item) {\n        if ($item['id'] == $id) {\n            $item['quantity'] = $quantity;\n            break;\n        }\n    }\n}\n\n// Function to remove item from cart\nfunction removeItemFromCart($id) {\n    // Remove item by ID\n    $_SESSION['cart'] = array_filter($_SESSION['cart'], function ($item) use ($id) {\n        return $item['id'] != $id;\n    });\n}\n\n// Function to calculate total cost of cart\nfunction calculateTotalCost() {\n    $totalCost = 0;\n    foreach ($_SESSION['cart'] as &$item) {\n        $totalCost += $item['price'];\n    }\n    return $totalCost;\n}\n\n// Example usage:\n$productId = 1;\n$productName = 'Product A';\n$productPrice = 9.99;\n\naddItemToCart($productId, $productName, $productPrice);\n\necho \"Total Cost: $\" . calculateTotalCost();\n?>\n```", "```php\n<?php\nsession_start();\n\n// Display cart items and total cost\n?>\n\n<h1>Cart Items:</h1>\n\n<table>\n    <tr>\n        <th>Name</th>\n        <th>Price</th>\n        <th></th>\n    </tr>\n    \n    <?php foreach ($_SESSION['cart'] as $item) : ?>\n    <tr>\n        <td><?php echo $item['name']; ?></td>\n        <td><?php echo \"$\" . $item['price']; ?></td>\n        <td>\n            <a href=\"#\" class=\"remove-item\" data-id=\"<?php echo $item['id']; ?>\">Remove</a>\n        </td>\n    </tr>\n    \n    <?php endforeach; ?>\n</table>\n\n<h2>Total Cost: $<?php echo calculateTotalCost(); ?></h2>\n```", null]}
