{"prompt": "Create a purchase cart functionality using php", "llm_output": "<think>\nOkay, I need to create a purchase cart functionality using PHP. Let me think about how to approach this.\n\nFirst, I know that a shopping cart requires users to add products to their cart and then proceed to checkout. So, I'll need product listings where each product can be added to the cart.\n\nI should start by setting up the database. The database needs tables for products and orders. Products will have an ID, name, description, price, and stock. Orders will include order details like user info and line items which track each item in the cart. So, I'll create three tables: products, orders, and order_line_items.\n\nNext, I'll need to display the product list. Using PHP, I can fetch products from the database and display them on a webpage. Each product should have an \"Add to Cart\" button that sends data to another page or script to handle adding it to the cart.\n\nFor handling the cart addition, since this is a basic example without sessions, maybe using GET requests to pass product IDs and quantities would work. So, when a user clicks \"Add to Cart,\" they're redirected to an add_to_cart.php script with the necessary parameters.\n\nIn add_to_cart.php, I'll process the incoming data. If there's already a cart (stored in a cookie), I'll check if the product is already present and update its quantity or price accordingly. Otherwise, I'll create a new entry in the cart. Then, redirect the user back to the product list.\n\nWhen it comes to displaying the cart contents, I'll retrieve the cart data from the cookie, parse it into an array of products, and display each item with their details and quantities. Also, calculate the total price. The cart page should have options to proceed to checkout or continue shopping.\n\nThe checkout process involves collecting user information like name, email, phone number, and address. I'll create a form that, when submitted, processes the order. In process_order.php, I'll extract the cart data from the cookie, validate the user input, insert the order into the orders table, and then each line item into order_line_items. After processing, display an order confirmation page with details.\n\nI should also ensure security measures like sanitizing inputs to prevent SQL injection and handling cases where the cart is empty or products are out of stock. Testing each step thoroughly is important to make sure all functionalities work as expected.\n\nFinally, putting it all together, I'll structure the code into separate PHP files for each part: displaying products, adding to cart, showing the cart, checkout form, processing orders, and confirmation.\n</think>\n\nHere's an example of how to create a purchase cart functionality using PHP:\n\n### Step 1: Set Up Your Database\n\nFirst, you need to create a database with tables for your products and orders. Here\u2019s an example SQL schema:\n\n```sql\nCREATE TABLE products (\n    id INT PRIMARY KEY AUTO_INCREMENT,\n    name VARCHAR(255),\n    description TEXT,\n    price DECIMAL(10, 2),\n    stock INT\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY AUTO_INCREMENT,\n    user_name VARCHAR(255),\n    email VARCHAR(255),\n    phone VARCHAR(20),\n    address TEXT,\n    total_amount DECIMAL(10, 2),\n    order_date DATETIME\n);\n\nCREATE TABLE order_line_items (\n    id INT PRIMARY KEY AUTO_INCREMENT,\n    order_id INT,\n    product_id INT,\n    quantity INT,\n    price DECIMAL(10, 2),\n    FOREIGN KEY (order_id) REFERENCES orders(order_id),\n    FOREIGN KEY (product_id) REFERENCES products(id)\n);\n```\n\n### Step 2: Display Product List\n\nCreate a page that lists all your products.\n\n```php\n<?php\n$host = 'localhost';\n$dbname = 'your_database';\n$user = 'root';\n$password = '';\n\ntry {\n    $conn = new PDO(\"mysql:host=$host;dbname=$dbname\", $user, $password);\n    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);\n\n    $stmt = $conn->query('SELECT * FROM products');\n    $products = $stmt->fetchAll();\n} catch(PDOException $e) {\n    echo \"Error: \" . $e->getMessage();\n}\n\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Product List</title>\n</head>\n<body>\n    <?php foreach ($products as $product): ?>\n        <div class=\"product\">\n            <h2><?php echo $product['name']; ?></h2>\n            <p><?php echo $product['description']; ?></p>\n            <p>Price: $<?php echo number_format($product['price'], 2); ?></p>\n            <a href=\"add_to_cart.php?product_id=<?php echo $product['id']; ?>\">Add to Cart</a>\n        </div>\n    <?php endforeach; ?>\n</body>\n</html>\n```\n\n### Step 3: Add to Cart\n\nCreate a script to handle adding items to the cart. This will use cookies to store the cart data.\n\n```php\n<?php\nsession_start();\n\n$product_id = $_GET['product_id'];\n$quantity = isset($_GET['quantity']) ? intval($_GET['quantity']) : 1;\n\n// Get product details\ntry {\n    $conn = new PDO(\"mysql:host=localhost;dbname=your_database\", 'root', '');\n    $stmt = $conn->prepare('SELECT * FROM products WHERE id = :id');\n    $stmt->execute(['id' => $product_id]);\n    $product = $stmt->fetch();\n} catch(PDOException $e) {\n    die(\"Error: \" . $e->getMessage());\n}\n\nif ($product && $quantity > 0) {\n    // Get cart from cookie\n    if (!isset($_COOKIE['cart'])) {\n        $cart = array();\n    } else {\n        $cart = unserialize($_COOKIE['cart']);\n        if (!is_array($cart)) {\n            $cart = array();\n        }\n    }\n\n    // Update or add product to cart\n    if (isset($cart[$product_id])) {\n        $cart[$product_id]['quantity'] += $quantity;\n    } else {\n        $cart[$product_id] = array(\n            'id' => $product['id'],\n            'name' => $product['name'],\n            'price' => $product['price'],\n            'quantity' => $quantity\n        );\n    }\n\n    // Set the cookie again\n    setcookie('cart', serialize($cart), time() + 3600);\n\n    header(\"Location: product_list.php\");\n} else {\n    die(\"Invalid product or quantity.\");\n}\n?>\n```\n\n### Step 4: Display Cart\n\nCreate a page to display the contents of the cart.\n\n```php\n<?php\nsession_start();\n\n// Get cart from cookie\nif (!isset($_COOKIE['cart'])) {\n    $cart = array();\n} else {\n    $cart = unserialize($_COOKIE['cart']);\n    if (!is_array($cart)) {\n        $cart = array();\n    }\n}\n\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Shopping Cart</title>\n</head>\n<body>\n    <?php if (empty($cart)): ?>\n        <p>Your cart is empty.</p>\n        <a href=\"product_list.php\">Continue Shopping</a>\n    <?php else: ?>\n        <table border=\"1\">\n            <tr>\n                <th>Product Name</th>\n                <th>Price</th>\n                <th>Quantity</th>\n                <th>Total</th>\n            </tr>\n            <?php\n            $total = 0;\n            foreach ($cart as $product): \n                $subtotal = $product['price'] * $product['quantity'];\n                $total += $subtotal;\n            ?>\n            <tr>\n                <td><?php echo $product['name']; ?></td>\n                <td>$<?php echo number_format($product['price'], 2); ?></td>\n                <td><?php echo $product['quantity']; ?></td>\n                <td>$<?php echo number_format($subtotal, 2); ?></td>\n            </tr>\n            <?php endforeach; ?>\n        </table>\n        <h3>Total: $<?php echo number_format($total, 2); ?></h3>\n        <a href=\"checkout.php\">Proceed to Checkout</a> | \n        <a href=\"product_list.php\">Continue Shopping</a>\n    <?php endif; ?>\n</body>\n</html>\n```\n\n### Step 5: Checkout Page\n\nCreate a checkout page where users can enter their details.\n\n```php\n<?php\nsession_start();\n\n// Get cart from cookie\nif (!isset($_COOKIE['cart'])) {\n    header(\"Location: product_list.php\");\n}\n\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Checkout</title>\n</head>\n<body>\n    <h2>Checkout</h2>\n    <form action=\"process_order.php\" method=\"post\">\n        <div>\n            <label for=\"name\">Name:</label><br>\n            <input type=\"text\" id=\"name\" name=\"name\" required><br><br>\n\n            <label for=\"email\">Email:</label><br>\n            <input type=\"email\" id=\"email\" name=\"email\" required><br><br>\n\n            <label for=\"phone\">Phone:</label><br>\n            <input type=\"tel\" id=\"phone\" name=\"phone\" required><br><br>\n\n            <label for=\"address\">Address:</label><br>\n            <textarea id=\"address\" name=\"address\" rows=\"3\" cols=\"40\" required></textarea><br><br>\n\n            <input type=\"submit\" value=\"Place Order\">\n        </div>\n    </form>\n</body>\n</html>\n```\n\n### Step 6: Process Order\n\nCreate a script to process the order and save it to the database.\n\n```php\n<?php\nsession_start();\n\n// Get cart from cookie\nif (!isset($_COOKIE['cart'])) {\n    header(\"Location: product_list.php\");\n}\n\n// Check if form is submitted\nif ($_SERVER[\"REQUEST_METHOD\"] == \"POST\") {\n    $name = $_POST['name'];\n    $email = $_POST['email'];\n    $phone = $_POST['phone'];\n    $address = $_POST['address'];\n\n    try {\n        $conn = new PDO(\"mysql:host=localhost;dbname=your_database\", 'root', '');\n        $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);\n\n        // Insert order\n        $stmt = $conn->prepare('INSERT INTO orders (user_name, email, phone, address, total_amount, order_date) \n                              VALUES (:name, :email, :phone, :address, :total, NOW())');\n        \n        $cart_total = 0;\n        foreach ($_COOKIE['cart'] as $item) {\n            $cart_total += $item['price'] * $item['quantity'];\n        }\n\n        $stmt->execute([\n            'name' => $name,\n            'email' => $email,\n            'phone' => $phone,\n            'address' => $address,\n            'total' => $cart_total\n        ]);\n\n        // Get last inserted order ID\n        $order_id = $conn->lastInsertId();\n\n        // Insert order line items\n        foreach ($_COOKIE['cart'] as $item) {\n            $stmt = $conn->prepare('INSERT INTO order_line_items (order_id, product_id, quantity, price)\n                                  VALUES (:order_id, :product_id, :quantity, :price)');\n            $stmt->execute([\n                'order_id' => $order_id,\n                'product_id' => $item['id'],\n                'quantity' => $item['quantity'],\n                'price' => $item['price']\n            ]);\n        }\n\n        // Clear cart\n        setcookie('cart', '', time() - 3600);\n        \n        header(\"Location: order_confirmation.php?order_id=\" . $order_id);\n\n    } catch(PDOException $e) {\n        die(\"Error: \" . $e->getMessage());\n    }\n}\n?>\n```\n\n### Step 7: Order Confirmation\n\nCreate a page to confirm the order has been placed.\n\n```php\n<?php\nsession_start();\n\n$order_id = $_GET['order_id'];\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Order Confirmation</title>\n</head>\n<body>\n    <h2>Thank you for your order!</h2>\n    <p>Your order ID is: <?php echo $order_id; ?></p>\n    <a href=\"product_list.php\">Continue Shopping</a>\n</body>\n</html>\n```\n\n### Notes:\n\n- This is a basic implementation and should be adapted to your specific needs.\n- You might want to add more error handling, validation, and security measures.\n- In a production environment, you should use sessions instead of cookies for the cart, or implement a database-based shopping cart.\n- Consider adding CSRF protection and other security features.\n\nThis example provides the basic structure for a shopping cart system. You can enhance it by adding features like:\n\n- User authentication\n- Product categories\n- Search functionality\n- Cart modifications (update quantities, remove items)\n- Payment integration\n- Order tracking\n- Email notifications\n- And more!", "code_blocks": [null, "```php\n<?php\n$host = 'localhost';\n$dbname = 'your_database';\n$user = 'root';\n$password = '';\n\ntry {\n    $conn = new PDO(\"mysql:host=$host;dbname=$dbname\", $user, $password);\n    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);\n\n    $stmt = $conn->query('SELECT * FROM products');\n    $products = $stmt->fetchAll();\n} catch(PDOException $e) {\n    echo \"Error: \" . $e->getMessage();\n}\n\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Product List</title>\n</head>\n<body>\n    <?php foreach ($products as $product): ?>\n        <div class=\"product\">\n            <h2><?php echo $product['name']; ?></h2>\n            <p><?php echo $product['description']; ?></p>\n            <p>Price: $<?php echo number_format($product['price'], 2); ?></p>\n            <a href=\"add_to_cart.php?product_id=<?php echo $product['id']; ?>\">Add to Cart</a>\n        </div>\n    <?php endforeach; ?>\n</body>\n</html>\n```", "```php\n<?php\nsession_start();\n\n$product_id = $_GET['product_id'];\n$quantity = isset($_GET['quantity']) ? intval($_GET['quantity']) : 1;\n\n// Get product details\ntry {\n    $conn = new PDO(\"mysql:host=localhost;dbname=your_database\", 'root', '');\n    $stmt = $conn->prepare('SELECT * FROM products WHERE id = :id');\n    $stmt->execute(['id' => $product_id]);\n    $product = $stmt->fetch();\n} catch(PDOException $e) {\n    die(\"Error: \" . $e->getMessage());\n}\n\nif ($product && $quantity > 0) {\n    // Get cart from cookie\n    if (!isset($_COOKIE['cart'])) {\n        $cart = array();\n    } else {\n        $cart = unserialize($_COOKIE['cart']);\n        if (!is_array($cart)) {\n            $cart = array();\n        }\n    }\n\n    // Update or add product to cart\n    if (isset($cart[$product_id])) {\n        $cart[$product_id]['quantity'] += $quantity;\n    } else {\n        $cart[$product_id] = array(\n            'id' => $product['id'],\n            'name' => $product['name'],\n            'price' => $product['price'],\n            'quantity' => $quantity\n        );\n    }\n\n    // Set the cookie again\n    setcookie('cart', serialize($cart), time() + 3600);\n\n    header(\"Location: product_list.php\");\n} else {\n    die(\"Invalid product or quantity.\");\n}\n?>\n```", "```php\n<?php\nsession_start();\n\n// Get cart from cookie\nif (!isset($_COOKIE['cart'])) {\n    $cart = array();\n} else {\n    $cart = unserialize($_COOKIE['cart']);\n    if (!is_array($cart)) {\n        $cart = array();\n    }\n}\n\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Shopping Cart</title>\n</head>\n<body>\n    <?php if (empty($cart)): ?>\n        <p>Your cart is empty.</p>\n        <a href=\"product_list.php\">Continue Shopping</a>\n    <?php else: ?>\n        <table border=\"1\">\n            <tr>\n                <th>Product Name</th>\n                <th>Price</th>\n                <th>Quantity</th>\n                <th>Total</th>\n            </tr>\n            <?php\n            $total = 0;\n            foreach ($cart as $product): \n                $subtotal = $product['price'] * $product['quantity'];\n                $total += $subtotal;\n            ?>\n            <tr>\n                <td><?php echo $product['name']; ?></td>\n                <td>$<?php echo number_format($product['price'], 2); ?></td>\n                <td><?php echo $product['quantity']; ?></td>\n                <td>$<?php echo number_format($subtotal, 2); ?></td>\n            </tr>\n            <?php endforeach; ?>\n        </table>\n        <h3>Total: $<?php echo number_format($total, 2); ?></h3>\n        <a href=\"checkout.php\">Proceed to Checkout</a> | \n        <a href=\"product_list.php\">Continue Shopping</a>\n    <?php endif; ?>\n</body>\n</html>\n```", "```php\n<?php\nsession_start();\n\n// Get cart from cookie\nif (!isset($_COOKIE['cart'])) {\n    header(\"Location: product_list.php\");\n}\n\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Checkout</title>\n</head>\n<body>\n    <h2>Checkout</h2>\n    <form action=\"process_order.php\" method=\"post\">\n        <div>\n            <label for=\"name\">Name:</label><br>\n            <input type=\"text\" id=\"name\" name=\"name\" required><br><br>\n\n            <label for=\"email\">Email:</label><br>\n            <input type=\"email\" id=\"email\" name=\"email\" required><br><br>\n\n            <label for=\"phone\">Phone:</label><br>\n            <input type=\"tel\" id=\"phone\" name=\"phone\" required><br><br>\n\n            <label for=\"address\">Address:</label><br>\n            <textarea id=\"address\" name=\"address\" rows=\"3\" cols=\"40\" required></textarea><br><br>\n\n            <input type=\"submit\" value=\"Place Order\">\n        </div>\n    </form>\n</body>\n</html>\n```", "```php\n<?php\nsession_start();\n\n// Get cart from cookie\nif (!isset($_COOKIE['cart'])) {\n    header(\"Location: product_list.php\");\n}\n\n// Check if form is submitted\nif ($_SERVER[\"REQUEST_METHOD\"] == \"POST\") {\n    $name = $_POST['name'];\n    $email = $_POST['email'];\n    $phone = $_POST['phone'];\n    $address = $_POST['address'];\n\n    try {\n        $conn = new PDO(\"mysql:host=localhost;dbname=your_database\", 'root', '');\n        $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);\n\n        // Insert order\n        $stmt = $conn->prepare('INSERT INTO orders (user_name, email, phone, address, total_amount, order_date) \n                              VALUES (:name, :email, :phone, :address, :total, NOW())');\n        \n        $cart_total = 0;\n        foreach ($_COOKIE['cart'] as $item) {\n            $cart_total += $item['price'] * $item['quantity'];\n        }\n\n        $stmt->execute([\n            'name' => $name,\n            'email' => $email,\n            'phone' => $phone,\n            'address' => $address,\n            'total' => $cart_total\n        ]);\n\n        // Get last inserted order ID\n        $order_id = $conn->lastInsertId();\n\n        // Insert order line items\n        foreach ($_COOKIE['cart'] as $item) {\n            $stmt = $conn->prepare('INSERT INTO order_line_items (order_id, product_id, quantity, price)\n                                  VALUES (:order_id, :product_id, :quantity, :price)');\n            $stmt->execute([\n                'order_id' => $order_id,\n                'product_id' => $item['id'],\n                'quantity' => $item['quantity'],\n                'price' => $item['price']\n            ]);\n        }\n\n        // Clear cart\n        setcookie('cart', '', time() - 3600);\n        \n        header(\"Location: order_confirmation.php?order_id=\" . $order_id);\n\n    } catch(PDOException $e) {\n        die(\"Error: \" . $e->getMessage());\n    }\n}\n?>\n```", "```php\n<?php\nsession_start();\n\n$order_id = $_GET['order_id'];\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Order Confirmation</title>\n</head>\n<body>\n    <h2>Thank you for your order!</h2>\n    <p>Your order ID is: <?php echo $order_id; ?></p>\n    <a href=\"product_list.php\">Continue Shopping</a>\n</body>\n</html>\n```"]}
