{"prompt": "Create a purchase cart functionality using php", "llm_output": "Here's an example of how you can create a basic purchase cart functionality in PHP. This will include the following features:\n\n1. Adding items to cart\n2. Removing items from cart\n3. Displaying total cost\n4. Updating quantity of items\n5. Checking out (optional)\n\n**cart.php**\n```php\n<?php\n\n// Set session variables for cart and order\nsession_start();\n$cart = array();\n$order_id = uniqid();\n\nif (!isset($_SESSION['cart'])) {\n    $_SESSION['cart'] = array();\n}\n\n// Function to add item to cart\nfunction add_item_to_cart($product_id, $quantity) {\n    global $cart;\n    if (array_key_exists($product_id, $cart)) {\n        $cart[$product_id] += $quantity;\n    } else {\n        $cart[$product_id] = $quantity;\n    }\n}\n\n// Function to remove item from cart\nfunction remove_item_from_cart($product_id) {\n    global $cart;\n    if (array_key_exists($product_id, $cart)) {\n        unset($cart[$product_id]);\n    }\n}\n\n// Function to update quantity of item in cart\nfunction update_quantity_in_cart($product_id, $quantity) {\n    global $cart;\n    if (array_key_exists($product_id, $cart)) {\n        $cart[$product_id] = $quantity;\n    } else {\n        echo \"Product not found in cart.\";\n    }\n}\n\n// Function to display total cost\nfunction calculate_total_cost() {\n    global $cart;\n    $total_cost = 0;\n    foreach ($cart as $product_id => $quantity) {\n        // Retrieve product price from database or external API\n        $price = get_product_price($product_id);\n        $total_cost += $price * $quantity;\n    }\n    return $total_cost;\n}\n\n// Function to checkout\nfunction checkout() {\n    global $order_id, $cart;\n    // Create new order in database\n    create_new_order($order_id, $cart);\n    // Clear cart and session variables\n    clear_cart_and_session();\n}\n\n?>\n```\n\n**index.php**\n```php\n<?php include 'cart.php'; ?>\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Shopping Cart</title>\n</head>\n<body>\n\n<h1>Shopping Cart</h1>\n\n<!-- Display current cart contents -->\n<table border=\"1\">\n    <tr>\n        <th>Product ID</th>\n        <th>Quantity</th>\n        <th>Price</th>\n        <th>Total Cost</th>\n        <th>Actions</th>\n    </tr>\n    <?php\n        foreach ($cart as $product_id => $quantity) {\n            // Retrieve product details from database or external API\n            $price = get_product_price($product_id);\n            $total_cost = $price * $quantity;\n            ?>\n            <tr>\n                <td><?= $product_id ?></td>\n                <td><?= $quantity ?></td>\n                <td><?= $price ?></td>\n                <td><?= $total_cost ?></td>\n                <td>\n                    <!-- Update quantity -->\n                    <form action=\"\" method=\"post\">\n                        <input type=\"hidden\" name=\"update_quantity\" value=\"<?= $product_id ?>\">\n                        <select name=\"new_quantity\">\n                            <?php for ($i = 1; $i <= 10; $i++) { ?>\n                                <option value=\"<?= $i ?>\" <?= ($quantity == $i) ? 'selected' : '' ?>><?= $i ?></option>\n                            <?php } ?>\n                        </select>\n                        <button type=\"submit\">Update Quantity</button>\n                    </form>\n\n                    <!-- Remove item from cart -->\n                    <form action=\"\" method=\"post\">\n                        <input type=\"hidden\" name=\"remove_item\" value=\"<?= $product_id ?>\">\n                        <button type=\"submit\">Remove Item</button>\n                    </form>\n                </td>\n            </tr>\n        <?php } ?>\n    </table>\n\n<!-- Display total cost -->\n<p>Total Cost: <?= calculate_total_cost() ?></p>\n\n<!-- Add item to cart form -->\n<form action=\"\" method=\"post\">\n    <input type=\"hidden\" name=\"add_item\" value=\"1\">\n    <select name=\"product_id\">\n        <?php\n            // Retrieve list of products from database or external API\n            $products = get_products();\n            foreach ($products as $product) {\n                ?>\n                <option value=\"<?= $product['id'] ?>\"><?= $product['name'] ?></option>\n                <?php\n            }\n        ?>\n    </select>\n    <input type=\"number\" name=\"quantity\" placeholder=\"Quantity\">\n    <button type=\"submit\">Add to Cart</button>\n</form>\n\n<!-- Checkout button -->\n<button onclick=\"checkout()\">Checkout</button>\n\n<script>\nfunction checkout() {\n    // Call PHP function to create new order\n    <?php echo \"alert('Order created successfully!');\"; ?>\n}\n</script>\n```\n\n**functions.php**\n```php\n<?php\n\n// Function to get product price from database or external API\nfunction get_product_price($product_id) {\n    // Retrieve price from database or external API\n    $price = 10.99; // Replace with actual price logic\n    return $price;\n}\n\n// Function to retrieve list of products from database or external API\nfunction get_products() {\n    // Retrieve products from database or external API\n    $products = array(\n        array('id' => 1, 'name' => 'Product A'),\n        array('id' => 2, 'name' => 'Product B'),\n        array('id' => 3, 'name' => 'Product C')\n    );\n    return $products;\n}\n\n// Function to create new order in database\nfunction create_new_order($order_id, $cart) {\n    // Create new order in database\n    // Replace with actual database logic\n    echo \"Order created successfully!\";\n}\n\n// Function to clear cart and session variables\nfunction clear_cart_and_session() {\n    global $cart;\n    $_SESSION['cart'] = array();\n    unset($_SESSION['order_id']);\n}\n?>\n```\nThis is a basic example of how you can create a purchase cart functionality in PHP. The code includes functions for adding items to the cart, removing items from the cart, updating quantities, and checking out. The cart contents are displayed on the page, along with the total cost.\n\nPlease note that this is just an example and you should modify it according to your specific needs. Also, make sure to replace the placeholder database logic with actual code that interacts with your database.\n\nThis is a simplified version of a shopping cart and does not include many features such as:\n\n* Validating user input\n* Handling errors\n* Displaying product details\n* Implementing payment gateway integration\n\nIt's also worth noting that this example uses sessions to store the cart contents, which may not be suitable for all use cases. You might want to consider using a more robust solution like storing the cart in a database or using a library that handles shopping carts.\n\nI hope this helps you get started on implementing a basic shopping cart functionality in PHP!", "code_blocks": ["```php\n<?php\n\n// Set session variables for cart and order\nsession_start();\n$cart = array();\n$order_id = uniqid();\n\nif (!isset($_SESSION['cart'])) {\n    $_SESSION['cart'] = array();\n}\n\n// Function to add item to cart\nfunction add_item_to_cart($product_id, $quantity) {\n    global $cart;\n    if (array_key_exists($product_id, $cart)) {\n        $cart[$product_id] += $quantity;\n    } else {\n        $cart[$product_id] = $quantity;\n    }\n}\n\n// Function to remove item from cart\nfunction remove_item_from_cart($product_id) {\n    global $cart;\n    if (array_key_exists($product_id, $cart)) {\n        unset($cart[$product_id]);\n    }\n}\n\n// Function to update quantity of item in cart\nfunction update_quantity_in_cart($product_id, $quantity) {\n    global $cart;\n    if (array_key_exists($product_id, $cart)) {\n        $cart[$product_id] = $quantity;\n    } else {\n        echo \"Product not found in cart.\";\n    }\n}\n\n// Function to display total cost\nfunction calculate_total_cost() {\n    global $cart;\n    $total_cost = 0;\n    foreach ($cart as $product_id => $quantity) {\n        // Retrieve product price from database or external API\n        $price = get_product_price($product_id);\n        $total_cost += $price * $quantity;\n    }\n    return $total_cost;\n}\n\n// Function to checkout\nfunction checkout() {\n    global $order_id, $cart;\n    // Create new order in database\n    create_new_order($order_id, $cart);\n    // Clear cart and session variables\n    clear_cart_and_session();\n}\n\n?>\n```", "```php\n<?php include 'cart.php'; ?>\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Shopping Cart</title>\n</head>\n<body>\n\n<h1>Shopping Cart</h1>\n\n<!-- Display current cart contents -->\n<table border=\"1\">\n    <tr>\n        <th>Product ID</th>\n        <th>Quantity</th>\n        <th>Price</th>\n        <th>Total Cost</th>\n        <th>Actions</th>\n    </tr>\n    <?php\n        foreach ($cart as $product_id => $quantity) {\n            // Retrieve product details from database or external API\n            $price = get_product_price($product_id);\n            $total_cost = $price * $quantity;\n            ?>\n            <tr>\n                <td><?= $product_id ?></td>\n                <td><?= $quantity ?></td>\n                <td><?= $price ?></td>\n                <td><?= $total_cost ?></td>\n                <td>\n                    <!-- Update quantity -->\n                    <form action=\"\" method=\"post\">\n                        <input type=\"hidden\" name=\"update_quantity\" value=\"<?= $product_id ?>\">\n                        <select name=\"new_quantity\">\n                            <?php for ($i = 1; $i <= 10; $i++) { ?>\n                                <option value=\"<?= $i ?>\" <?= ($quantity == $i) ? 'selected' : '' ?>><?= $i ?></option>\n                            <?php } ?>\n                        </select>\n                        <button type=\"submit\">Update Quantity</button>\n                    </form>\n\n                    <!-- Remove item from cart -->\n                    <form action=\"\" method=\"post\">\n                        <input type=\"hidden\" name=\"remove_item\" value=\"<?= $product_id ?>\">\n                        <button type=\"submit\">Remove Item</button>\n                    </form>\n                </td>\n            </tr>\n        <?php } ?>\n    </table>\n\n<!-- Display total cost -->\n<p>Total Cost: <?= calculate_total_cost() ?></p>\n\n<!-- Add item to cart form -->\n<form action=\"\" method=\"post\">\n    <input type=\"hidden\" name=\"add_item\" value=\"1\">\n    <select name=\"product_id\">\n        <?php\n            // Retrieve list of products from database or external API\n            $products = get_products();\n            foreach ($products as $product) {\n                ?>\n                <option value=\"<?= $product['id'] ?>\"><?= $product['name'] ?></option>\n                <?php\n            }\n        ?>\n    </select>\n    <input type=\"number\" name=\"quantity\" placeholder=\"Quantity\">\n    <button type=\"submit\">Add to Cart</button>\n</form>\n\n<!-- Checkout button -->\n<button onclick=\"checkout()\">Checkout</button>\n\n<script>\nfunction checkout() {\n    // Call PHP function to create new order\n    <?php echo \"alert('Order created successfully!');\"; ?>\n}\n</script>\n```", "```php\n<?php\n\n// Function to get product price from database or external API\nfunction get_product_price($product_id) {\n    // Retrieve price from database or external API\n    $price = 10.99; // Replace with actual price logic\n    return $price;\n}\n\n// Function to retrieve list of products from database or external API\nfunction get_products() {\n    // Retrieve products from database or external API\n    $products = array(\n        array('id' => 1, 'name' => 'Product A'),\n        array('id' => 2, 'name' => 'Product B'),\n        array('id' => 3, 'name' => 'Product C')\n    );\n    return $products;\n}\n\n// Function to create new order in database\nfunction create_new_order($order_id, $cart) {\n    // Create new order in database\n    // Replace with actual database logic\n    echo \"Order created successfully!\";\n}\n\n// Function to clear cart and session variables\nfunction clear_cart_and_session() {\n    global $cart;\n    $_SESSION['cart'] = array();\n    unset($_SESSION['order_id']);\n}\n?>\n```"]}
