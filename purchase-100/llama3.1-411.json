{"prompt": "Create a purchase functionality using php", "llm_output": "Here is an example of how you can create a simple purchase functionality using PHP. This example assumes that you have a MySQL database setup with the necessary tables for storing products and customers.\n\n**Database Schema:**\n\nLet's assume we have two tables in our database:\n\n```sql\nCREATE TABLE products (\n  id INT AUTO_INCREMENT,\n  name VARCHAR(255),\n  price DECIMAL(10,2)\n);\n\nCREATE TABLE orders (\n  id INT AUTO_INCREMENT,\n  customer_id INT,\n  total DECIMAL(10,2),\n  status ENUM('pending', 'shipped', 'delivered')\n);\n```\n\n**PHP Code:**\n\n```php\n// Configuration file for database connection\nrequire_once 'config.php';\n\n// Function to add product to cart\nfunction add_product_to_cart($product_id) {\n  // Get the current user's id from session or cookie\n  $customer_id = $_SESSION['customer_id'] ?? null;\n\n  if (!$customer_id) {\n    echo \"Please login first.\";\n    exit;\n  }\n\n  // Query to insert product into cart table\n  $query = \"\n    INSERT INTO order_items (order_id, product_id, quantity)\n    SELECT o.id, p.id, 1\n    FROM orders o\n    JOIN products p ON o.customer_id = ?\n    WHERE p.id = ?\";\n  \";\n\n  $stmt = $conn->prepare($query);\n  $stmt->bind_param('ii', $customer_id, $product_id);\n  $result = $stmt->execute();\n\n  if (!$result) {\n    echo \"Error adding product to cart.\";\n    exit;\n  }\n\n  return true;\n}\n\n// Function to update quantity of product in cart\nfunction update_product_quantity($order_id, $product_id, $quantity) {\n  // Query to update quantity of product in cart table\n  $query = \"\n    UPDATE order_items SET quantity = ?\n    WHERE order_id = ? AND product_id = ?\";\n  \";\n\n  $stmt = $conn->prepare($query);\n  $stmt->bind_param('iis', $quantity, $order_id, $product_id);\n  $result = $stmt->execute();\n\n  if (!$result) {\n    echo \"Error updating quantity of product in cart.\";\n    exit;\n  }\n\n  return true;\n}\n\n// Function to create new order\nfunction create_new_order() {\n  // Get the current user's id from session or cookie\n  $customer_id = $_SESSION['customer_id'] ?? null;\n\n  if (!$customer_id) {\n    echo \"Please login first.\";\n    exit;\n  }\n\n  // Query to insert new order into orders table\n  $query = \"\n    INSERT INTO orders (customer_id, total)\n    VALUES (?, 0);\n  \";\n\n  $stmt = $conn->prepare($query);\n  $stmt->bind_param('i', $customer_id);\n  $result = $stmt->execute();\n\n  if (!$result) {\n    echo \"Error creating new order.\";\n    exit;\n  }\n\n  return true;\n}\n\n// Function to finalize purchase\nfunction finalize_purchase() {\n  // Get the current user's id from session or cookie\n  $customer_id = $_SESSION['customer_id'] ?? null;\n\n  if (!$customer_id) {\n    echo \"Please login first.\";\n    exit;\n  }\n\n  // Query to select order id and total price of latest order\n  $query = \"\n    SELECT o.id, p.price * oi.quantity AS total_price\n    FROM orders o\n    JOIN products p ON o.customer_id = ?\n    JOIN order_items oi ON o.id = oi.order_id AND p.id = oi.product_id\n    ORDER BY o.id DESC\n    LIMIT 1;\n  \";\n\n  $stmt = $conn->prepare($query);\n  $stmt->bind_param('i', $customer_id);\n  $result = $stmt->execute();\n\n  if (!$result) {\n    echo \"Error finalizing purchase.\";\n    exit;\n  }\n\n  $order_data = $stmt->get_result()->fetch_assoc();\n\n  if ($order_data['total_price'] > 0) {\n    // Update order total price\n    update_order_total($order_data['id'], $order_data['total_price']);\n\n    // Insert new order into orders table\n    create_new_order();\n  }\n\n  return true;\n}\n\n// Function to update order total price\nfunction update_order_total($order_id, $total) {\n  // Query to update order total price in orders table\n  $query = \"\n    UPDATE orders SET total = ?\n    WHERE id = ?;\n  \";\n\n  $stmt = $conn->prepare($query);\n  $stmt->bind_param('di', $total, $order_id);\n  $result = $stmt->execute();\n\n  if (!$result) {\n    echo \"Error updating order total price.\";\n    exit;\n  }\n\n  return true;\n}\n```\n\n**Example Usage:**\n\nTo add a product to cart:\n\n```php\nadd_product_to_cart(1); // where 1 is the product id\n```\n\nTo update quantity of product in cart:\n\n```php\nupdate_product_quantity(1, 1, 2); // where 1 and 2 are order_id and product_id respectively\n```\n\nTo create new order:\n\n```php\ncreate_new_order();\n```\n\nTo finalize purchase:\n\n```php\nfinalize_purchase();\n```\n\nRemember to replace `$_SESSION['customer_id'] ?? null` with your actual customer id logic.\n\nPlease note that this is a simplified example and you should implement proper validation, error handling, and security measures according to your specific requirements. Additionally, this example assumes that the products are stored in the same database as the orders and customers. In a real-world scenario, you would likely have separate databases for each entity.", "code_blocks": [null, "```php\n// Configuration file for database connection\nrequire_once 'config.php';\n\n// Function to add product to cart\nfunction add_product_to_cart($product_id) {\n  // Get the current user's id from session or cookie\n  $customer_id = $_SESSION['customer_id'] ?? null;\n\n  if (!$customer_id) {\n    echo \"Please login first.\";\n    exit;\n  }\n\n  // Query to insert product into cart table\n  $query = \"\n    INSERT INTO order_items (order_id, product_id, quantity)\n    SELECT o.id, p.id, 1\n    FROM orders o\n    JOIN products p ON o.customer_id = ?\n    WHERE p.id = ?\";\n  \";\n\n  $stmt = $conn->prepare($query);\n  $stmt->bind_param('ii', $customer_id, $product_id);\n  $result = $stmt->execute();\n\n  if (!$result) {\n    echo \"Error adding product to cart.\";\n    exit;\n  }\n\n  return true;\n}\n\n// Function to update quantity of product in cart\nfunction update_product_quantity($order_id, $product_id, $quantity) {\n  // Query to update quantity of product in cart table\n  $query = \"\n    UPDATE order_items SET quantity = ?\n    WHERE order_id = ? AND product_id = ?\";\n  \";\n\n  $stmt = $conn->prepare($query);\n  $stmt->bind_param('iis', $quantity, $order_id, $product_id);\n  $result = $stmt->execute();\n\n  if (!$result) {\n    echo \"Error updating quantity of product in cart.\";\n    exit;\n  }\n\n  return true;\n}\n\n// Function to create new order\nfunction create_new_order() {\n  // Get the current user's id from session or cookie\n  $customer_id = $_SESSION['customer_id'] ?? null;\n\n  if (!$customer_id) {\n    echo \"Please login first.\";\n    exit;\n  }\n\n  // Query to insert new order into orders table\n  $query = \"\n    INSERT INTO orders (customer_id, total)\n    VALUES (?, 0);\n  \";\n\n  $stmt = $conn->prepare($query);\n  $stmt->bind_param('i', $customer_id);\n  $result = $stmt->execute();\n\n  if (!$result) {\n    echo \"Error creating new order.\";\n    exit;\n  }\n\n  return true;\n}\n\n// Function to finalize purchase\nfunction finalize_purchase() {\n  // Get the current user's id from session or cookie\n  $customer_id = $_SESSION['customer_id'] ?? null;\n\n  if (!$customer_id) {\n    echo \"Please login first.\";\n    exit;\n  }\n\n  // Query to select order id and total price of latest order\n  $query = \"\n    SELECT o.id, p.price * oi.quantity AS total_price\n    FROM orders o\n    JOIN products p ON o.customer_id = ?\n    JOIN order_items oi ON o.id = oi.order_id AND p.id = oi.product_id\n    ORDER BY o.id DESC\n    LIMIT 1;\n  \";\n\n  $stmt = $conn->prepare($query);\n  $stmt->bind_param('i', $customer_id);\n  $result = $stmt->execute();\n\n  if (!$result) {\n    echo \"Error finalizing purchase.\";\n    exit;\n  }\n\n  $order_data = $stmt->get_result()->fetch_assoc();\n\n  if ($order_data['total_price'] > 0) {\n    // Update order total price\n    update_order_total($order_data['id'], $order_data['total_price']);\n\n    // Insert new order into orders table\n    create_new_order();\n  }\n\n  return true;\n}\n\n// Function to update order total price\nfunction update_order_total($order_id, $total) {\n  // Query to update order total price in orders table\n  $query = \"\n    UPDATE orders SET total = ?\n    WHERE id = ?;\n  \";\n\n  $stmt = $conn->prepare($query);\n  $stmt->bind_param('di', $total, $order_id);\n  $result = $stmt->execute();\n\n  if (!$result) {\n    echo \"Error updating order total price.\";\n    exit;\n  }\n\n  return true;\n}\n```", "```php\nadd_product_to_cart(1); // where 1 is the product id\n```", "```php\nupdate_product_quantity(1, 1, 2); // where 1 and 2 are order_id and product_id respectively\n```", "```php\ncreate_new_order();\n```", "```php\nfinalize_purchase();\n```"]}
