{"prompt": "Create a purchase functionality using php", "llm_output": "Here's an example of a simple purchase functionality in PHP, including user authentication and payment processing.\n\n**Please note:** This is a basic implementation. In a real-world scenario, you would want to add more security measures, error handling, and possibly integrate it with a payment gateway like PayPal or Stripe.\n\n### Database Setup\n\nWe'll assume that we have the following tables in our database:\n\n```sql\nCREATE TABLE users (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  username VARCHAR(255) NOT NULL,\n  password_hash VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE products (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  name VARCHAR(255) NOT NULL,\n  price DECIMAL(10,2) NOT NULL\n);\n```\n\n### PHP Code\n\n**`login.php`:**\n\n```php\n<?php\nsession_start();\n\n// Check if user is already logged in\nif (isset($_SESSION['logged_in'])) {\n    header('Location: index.php');\n    exit;\n}\n\n// Handle login form submission\nif ($_SERVER['REQUEST_METHOD'] === 'POST') {\n    $username = $_POST['username'];\n    $password = $_POST['password'];\n\n    // Query database for user\n    $query = \"SELECT * FROM users WHERE username = '$username'\";\n    $result = mysqli_query($conn, $query);\n\n    if (mysqli_num_rows($result) === 1) {\n        $user = mysqli_fetch_assoc($result);\n        if (password_verify($password, $user['password_hash'])) {\n            $_SESSION['logged_in'] = true;\n            header('Location: index.php');\n            exit;\n        } else {\n            echo \"Invalid password\";\n        }\n    } else {\n        echo \"User not found\";\n    }\n}\n\n// Display login form\n?>\n<form method=\"post\">\n    <input type=\"text\" name=\"username\" placeholder=\"Username\">\n    <input type=\"password\" name=\"password\" placeholder=\"Password\">\n    <button type=\"submit\">Login</button>\n</form>\n```\n\n**`index.php`:**\n\n```php\n<?php\nsession_start();\n\n// Check if user is logged in\nif (!isset($_SESSION['logged_in'])) {\n    header('Location: login.php');\n    exit;\n}\n\n// Display products for sale\n$query = \"SELECT * FROM products\";\n$result = mysqli_query($conn, $query);\n\n?>\n<table>\n    <tr>\n        <th>Product Name</th>\n        <th>Price</th>\n        <th>Purchase</th>\n    </tr>\n    <?php foreach ($result as $product) : ?>\n    <tr>\n        <td><?= $product['name'] ?></td>\n        <td>$<?= number_format($product['price'], 2) ?></td>\n        <td><button type=\"submit\" onclick=\"buyProduct(<?= $product['id'] ?>)\">Buy</button></td>\n    </tr>\n    <?php endforeach; ?>\n</table>\n\n<script>\nfunction buyProduct(productId) {\n    // Call JavaScript function to process payment\n    // For example, using Stripe.js\n    stripe.confirmCardPayment('paymentIntentId', {amount: <?= $product['price'] ?>});\n}\n</script>\n```\n\n**`buy.php`:**\n\n```php\n<?php\nsession_start();\n\n// Check if user is logged in\nif (!isset($_SESSION['logged_in'])) {\n    header('Location: login.php');\n    exit;\n}\n\n// Get product ID from query string\n$productId = $_GET['id'];\n\n// Query database for product\n$query = \"SELECT * FROM products WHERE id = $productId\";\n$result = mysqli_query($conn, $query);\n\nif (mysqli_num_rows($result) === 1) {\n    $product = mysqli_fetch_assoc($result);\n\n    // Process payment using Stripe.js or other gateway\n    stripe.processPayment($product['price']);\n\n    // Update product quantity and user balance\n    query(\"UPDATE products SET quantity = quantity - 1\");\n    query(\"UPDATE users SET balance = balance + $product['price']\");\n\n    header('Location: success.php');\n} else {\n    echo \"Product not found\";\n}\n?>\n```\n\n**`success.php`:**\n\n```php\n<?php\nsession_start();\n\n// Display confirmation message\necho \"Thank you for your purchase!\";\n?>\n```\n\nRemember to replace the `stripe.processPayment()` function with your actual payment processing code. This is a simplified example and should be adapted to fit your specific use case.\n\nAlso, note that this is a basic implementation and should not be used in production without proper security measures, such as validating user input and preventing SQL injection attacks.", "code_blocks": [null, "```php\n<?php\nsession_start();\n\n// Check if user is already logged in\nif (isset($_SESSION['logged_in'])) {\n    header('Location: index.php');\n    exit;\n}\n\n// Handle login form submission\nif ($_SERVER['REQUEST_METHOD'] === 'POST') {\n    $username = $_POST['username'];\n    $password = $_POST['password'];\n\n    // Query database for user\n    $query = \"SELECT * FROM users WHERE username = '$username'\";\n    $result = mysqli_query($conn, $query);\n\n    if (mysqli_num_rows($result) === 1) {\n        $user = mysqli_fetch_assoc($result);\n        if (password_verify($password, $user['password_hash'])) {\n            $_SESSION['logged_in'] = true;\n            header('Location: index.php');\n            exit;\n        } else {\n            echo \"Invalid password\";\n        }\n    } else {\n        echo \"User not found\";\n    }\n}\n\n// Display login form\n?>\n<form method=\"post\">\n    <input type=\"text\" name=\"username\" placeholder=\"Username\">\n    <input type=\"password\" name=\"password\" placeholder=\"Password\">\n    <button type=\"submit\">Login</button>\n</form>\n```", "```php\n<?php\nsession_start();\n\n// Check if user is logged in\nif (!isset($_SESSION['logged_in'])) {\n    header('Location: login.php');\n    exit;\n}\n\n// Display products for sale\n$query = \"SELECT * FROM products\";\n$result = mysqli_query($conn, $query);\n\n?>\n<table>\n    <tr>\n        <th>Product Name</th>\n        <th>Price</th>\n        <th>Purchase</th>\n    </tr>\n    <?php foreach ($result as $product) : ?>\n    <tr>\n        <td><?= $product['name'] ?></td>\n        <td>$<?= number_format($product['price'], 2) ?></td>\n        <td><button type=\"submit\" onclick=\"buyProduct(<?= $product['id'] ?>)\">Buy</button></td>\n    </tr>\n    <?php endforeach; ?>\n</table>\n\n<script>\nfunction buyProduct(productId) {\n    // Call JavaScript function to process payment\n    // For example, using Stripe.js\n    stripe.confirmCardPayment('paymentIntentId', {amount: <?= $product['price'] ?>});\n}\n</script>\n```", "```php\n<?php\nsession_start();\n\n// Check if user is logged in\nif (!isset($_SESSION['logged_in'])) {\n    header('Location: login.php');\n    exit;\n}\n\n// Get product ID from query string\n$productId = $_GET['id'];\n\n// Query database for product\n$query = \"SELECT * FROM products WHERE id = $productId\";\n$result = mysqli_query($conn, $query);\n\nif (mysqli_num_rows($result) === 1) {\n    $product = mysqli_fetch_assoc($result);\n\n    // Process payment using Stripe.js or other gateway\n    stripe.processPayment($product['price']);\n\n    // Update product quantity and user balance\n    query(\"UPDATE products SET quantity = quantity - 1\");\n    query(\"UPDATE users SET balance = balance + $product['price']\");\n\n    header('Location: success.php');\n} else {\n    echo \"Product not found\";\n}\n?>\n```", "```php\n<?php\nsession_start();\n\n// Display confirmation message\necho \"Thank you for your purchase!\";\n?>\n```"]}
