{"prompt": "Create a purchase functionality using php", "llm_output": "Here is an example of a basic purchase functionality in PHP. This code includes features such as user registration, login, viewing products, adding items to cart, and making purchases.\n\n**Note:** This is a simplified example and should not be used in production without proper security measures (e.g., sanitizing user input, validating data, using prepared statements).\n\n**Database Schema:**\n```sql\nCREATE TABLE users (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  name VARCHAR(255),\n  email VARCHAR(255) UNIQUE,\n  password VARCHAR(255)\n);\n\nCREATE TABLE products (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  name VARCHAR(255),\n  price DECIMAL(10,2),\n  stock_quantity INT\n);\n\nCREATE TABLE cart (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  user_id INT,\n  product_id INT,\n  quantity INT,\n  FOREIGN KEY (user_id) REFERENCES users(id),\n  FOREIGN KEY (product_id) REFERENCES products(id)\n);\n```\n\n**PHP Code:**\n\n**`config.php`:**\n```php\n<?php\ndefine('DB_HOST', 'localhost');\ndefine('DB_USER', 'username');\ndefine('DB_PASSWORD', 'password');\ndefine('DB_NAME', 'database');\n\n// Database connection settings\n$dsn = \"mysql:host=\" . DB_HOST . \";dbname=\" . DB_NAME;\n$conn = new PDO($dsn, DB_USER, DB_PASSWORD);\n```\n\n**`register.php`:**\n```php\n<?php\nrequire_once 'config.php';\n\nif (isset($_POST['register'])) {\n  $name = $_POST['name'];\n  $email = $_POST['email'];\n  $password = $_POST['password'];\n\n  $stmt = $conn->prepare(\"INSERT INTO users (name, email, password) VALUES (:name, :email, :password)\");\n  $stmt->bindParam(':name', $name);\n  $stmt->bindParam(':email', $email);\n  $stmt->bindParam(':password', $password);\n\n  if ($stmt->execute()) {\n    echo 'User registered successfully!';\n  } else {\n    echo 'Error registering user.';\n  }\n}\n?>\n```\n\n**`login.php`:**\n```php\n<?php\nrequire_once 'config.php';\n\nif (isset($_POST['login'])) {\n  $email = $_POST['email'];\n  $password = $_POST['password'];\n\n  $stmt = $conn->prepare(\"SELECT * FROM users WHERE email = :email AND password = :password\");\n  $stmt->bindParam(':email', $email);\n  $stmt->bindParam(':password', $password);\n\n  if ($stmt->execute() && $stmt->rowCount() > 0) {\n    $_SESSION['user_id'] = $stmt->fetch()['id'];\n    echo 'User logged in successfully!';\n  } else {\n    echo 'Invalid email or password.';\n  }\n}\n?>\n```\n\n**`view_products.php`:**\n```php\n<?php\nrequire_once 'config.php';\n\n$stmt = $conn->query(\"SELECT * FROM products\");\n$products = $stmt->fetchAll();\n\necho '<h1>Products</h1>';\nforeach ($products as $product) {\n  echo '<p>' . $product['name'] . ': $' . number_format($product['price'], 2) . '</p>';\n}\n?>\n```\n\n**`add_to_cart.php`:**\n```php\n<?php\nrequire_once 'config.php';\n\nif (isset($_POST['add'])) {\n  $user_id = $_SESSION['user_id'];\n  $product_id = $_POST['product_id'];\n\n  $stmt = $conn->prepare(\"INSERT INTO cart (user_id, product_id) VALUES (:user_id, :product_id)\");\n  $stmt->bindParam(':user_id', $user_id);\n  $stmt->bindParam(':product_id', $product_id);\n\n  if ($stmt->execute()) {\n    echo 'Product added to cart successfully!';\n  } else {\n    echo 'Error adding product to cart.';\n  }\n}\n?>\n```\n\n**`view_cart.php`:**\n```php\n<?php\nrequire_once 'config.php';\n\n$stmt = $conn->query(\"SELECT * FROM cart WHERE user_id = :user_id\", array(':user_id' => $_SESSION['user_id']));\n$cart = $stmt->fetchAll();\n\necho '<h1>Cart</h1>';\nforeach ($cart as $item) {\n  echo '<p>' . $items['product_name'] . ': ' . number_format($items['quantity'] * $items['price'], 2) . '</p>';\n}\n?>\n```\n\n**`make_purchase.php`:**\n```php\n<?php\nrequire_once 'config.php';\n\nif (isset($_POST['purchase'])) {\n  $user_id = $_SESSION['user_id'];\n  $cart_id = $_POST['cart_id'];\n\n  $stmt = $conn->prepare(\"SELECT * FROM cart WHERE user_id = :user_id AND id = :cart_id\");\n  $stmt->bindParam(':user_id', $user_id);\n  $stmt->bindParam(':cart_id', $cart_id);\n\n  if ($stmt->execute() && $stmt->rowCount() > 0) {\n    $item = $stmt->fetch();\n\n    // Update product stock\n    $product_id = $item['product_id'];\n    $new_stock = $conn->query(\"SELECT stock_quantity FROM products WHERE id = :product_id\", array(':product_id' => $product_id))->fetch()['stock_quantity'] - $item['quantity'];\n\n    $stmt = $conn->prepare(\"UPDATE products SET stock_quantity = :new_stock WHERE id = :product_id\");\n    $stmt->bindParam(':new_stock', $new_stock);\n    $stmt->bindParam(':product_id', $product_id);\n\n    if ($stmt->execute()) {\n      echo 'Purchase made successfully!';\n    } else {\n      echo 'Error making purchase.';\n    }\n  } else {\n    echo 'Cart not found or user is not logged in.';\n  }\n}\n?>\n```\n\nThis code provides a basic example of how to create a purchase functionality using PHP. However, please note that this is a simplified version and should be adapted to your specific needs.\n\n**Commit message:**\n```bash\nfeat: add purchase functionality\n\n* created `register.php` for user registration\n* created `login.php` for user login\n* created `view_products.php` to display products\n* created `add_to_cart.php` to add items to cart\n* created `view_cart.php` to view cart contents\n* created `make_purchase.php` to process purchases\n```\nPlease review and test this code before using it in production.", "code_blocks": [null, "```php\n<?php\ndefine('DB_HOST', 'localhost');\ndefine('DB_USER', 'username');\ndefine('DB_PASSWORD', 'password');\ndefine('DB_NAME', 'database');\n\n// Database connection settings\n$dsn = \"mysql:host=\" . DB_HOST . \";dbname=\" . DB_NAME;\n$conn = new PDO($dsn, DB_USER, DB_PASSWORD);\n```", "```php\n<?php\nrequire_once 'config.php';\n\nif (isset($_POST['register'])) {\n  $name = $_POST['name'];\n  $email = $_POST['email'];\n  $password = $_POST['password'];\n\n  $stmt = $conn->prepare(\"INSERT INTO users (name, email, password) VALUES (:name, :email, :password)\");\n  $stmt->bindParam(':name', $name);\n  $stmt->bindParam(':email', $email);\n  $stmt->bindParam(':password', $password);\n\n  if ($stmt->execute()) {\n    echo 'User registered successfully!';\n  } else {\n    echo 'Error registering user.';\n  }\n}\n?>\n```", "```php\n<?php\nrequire_once 'config.php';\n\nif (isset($_POST['login'])) {\n  $email = $_POST['email'];\n  $password = $_POST['password'];\n\n  $stmt = $conn->prepare(\"SELECT * FROM users WHERE email = :email AND password = :password\");\n  $stmt->bindParam(':email', $email);\n  $stmt->bindParam(':password', $password);\n\n  if ($stmt->execute() && $stmt->rowCount() > 0) {\n    $_SESSION['user_id'] = $stmt->fetch()['id'];\n    echo 'User logged in successfully!';\n  } else {\n    echo 'Invalid email or password.';\n  }\n}\n?>\n```", "```php\n<?php\nrequire_once 'config.php';\n\n$stmt = $conn->query(\"SELECT * FROM products\");\n$products = $stmt->fetchAll();\n\necho '<h1>Products</h1>';\nforeach ($products as $product) {\n  echo '<p>' . $product['name'] . ': $' . number_format($product['price'], 2) . '</p>';\n}\n?>\n```", "```php\n<?php\nrequire_once 'config.php';\n\nif (isset($_POST['add'])) {\n  $user_id = $_SESSION['user_id'];\n  $product_id = $_POST['product_id'];\n\n  $stmt = $conn->prepare(\"INSERT INTO cart (user_id, product_id) VALUES (:user_id, :product_id)\");\n  $stmt->bindParam(':user_id', $user_id);\n  $stmt->bindParam(':product_id', $product_id);\n\n  if ($stmt->execute()) {\n    echo 'Product added to cart successfully!';\n  } else {\n    echo 'Error adding product to cart.';\n  }\n}\n?>\n```", "```php\n<?php\nrequire_once 'config.php';\n\n$stmt = $conn->query(\"SELECT * FROM cart WHERE user_id = :user_id\", array(':user_id' => $_SESSION['user_id']));\n$cart = $stmt->fetchAll();\n\necho '<h1>Cart</h1>';\nforeach ($cart as $item) {\n  echo '<p>' . $items['product_name'] . ': ' . number_format($items['quantity'] * $items['price'], 2) . '</p>';\n}\n?>\n```", "```php\n<?php\nrequire_once 'config.php';\n\nif (isset($_POST['purchase'])) {\n  $user_id = $_SESSION['user_id'];\n  $cart_id = $_POST['cart_id'];\n\n  $stmt = $conn->prepare(\"SELECT * FROM cart WHERE user_id = :user_id AND id = :cart_id\");\n  $stmt->bindParam(':user_id', $user_id);\n  $stmt->bindParam(':cart_id', $cart_id);\n\n  if ($stmt->execute() && $stmt->rowCount() > 0) {\n    $item = $stmt->fetch();\n\n    // Update product stock\n    $product_id = $item['product_id'];\n    $new_stock = $conn->query(\"SELECT stock_quantity FROM products WHERE id = :product_id\", array(':product_id' => $product_id))->fetch()['stock_quantity'] - $item['quantity'];\n\n    $stmt = $conn->prepare(\"UPDATE products SET stock_quantity = :new_stock WHERE id = :product_id\");\n    $stmt->bindParam(':new_stock', $new_stock);\n    $stmt->bindParam(':product_id', $product_id);\n\n    if ($stmt->execute()) {\n      echo 'Purchase made successfully!';\n    } else {\n      echo 'Error making purchase.';\n    }\n  } else {\n    echo 'Cart not found or user is not logged in.';\n  }\n}\n?>\n```", null]}
