{"prompt": "Create a purchase functionality using php", "llm_output": "<think>\nAlright, the user wants to create a purchase functionality using PHP. I need to break this down into manageable steps.\n\nFirst, I should consider what a basic purchase system entails. It needs to handle product information, allow users to add items to a cart, and process the checkout. So, I'll outline the components: products list, cart storage, displaying the cart, processing payment, confirming the order, and showing confirmation or errors.\n\nNext, I'll think about how to structure the PHP code. Since it's a single-page application for simplicity, I'll use includes to separate different parts of the functionality. Each include will handle a specific task: products list, cart functions, displaying products, showing the cart, processing checkout, and handling errors or success messages.\n\nFor the products, an array in config.php makes sense. It's easy to manage and modify later. The cart needs to be stored on the client side, so using cookies is a simple approach. I'll write functions to add items to the cart and calculate the total price.\n\nWhen displaying the cart, I'll retrieve the cart data from the cookie, loop through each item, and display them with their details. Also, include a remove button for each item.\n\nProcessing checkout involves checking if there's an active cart and whether payment is successful. For now, a simulated payment with a random success rate will suffice. Depending on the result, the user gets a confirmation or an error message.\n\nI should also handle cases where the cart is empty by redirecting the user to add items first. Error handling is important, so I'll include try-catch blocks and informative messages for the user.\n\nFinally, I'll outline how each part connects: includes at the top, header, main content based on the action (view products or view cart), processing checkout if needed, and a footer. This structure keeps the code organized and easy to understand.\n\nI need to make sure all parts are covered in the answer, providing clear explanations so the user can implement each step without confusion.\n</think>\n\nHere's an example of a purchase functionality using PHP:\n\n```php\n<?php\n// Include required files\nrequire_once('config.php');\nrequire_once('functions/cart_functions.php');\nrequire_once('includes/header.php');\n\n// Get products list\n$products = get_products();\n\n// Handle add to cart action\nif (isset($_POST['add_to_cart'])) {\n    $product_id = $_POST['product_id'];\n    add_to_cart($product_id);\n    header(\"Location: index.php\");\n    exit();\n}\n\n// Handle remove from cart action\nif (isset($_GET['remove_from_cart'])) {\n    $product_id = $_GET['remove_from_cart'];\n    remove_from_cart($product_id);\n    header(\"Location: cart.php\");\n    exit();\n}\n\n// Process checkout\nif (isset($_POST['checkout'])) {\n    process_checkout();\n    header(\"Location: confirmation.php\");\n    exit();\n}\n?>\n\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Store</title>\n    <link rel=\"stylesheet\" href=\"css/styles.css\">\n</head>\n<body>\n    <!-- Main Content -->\n    <div class=\"container\">\n        <?php if (!isset($_GET['action'])) { ?>\n            <!-- Display products -->\n            <?php foreach ($products as $product) { ?>\n                <div class=\"product-card\">\n                    <h3><?php echo $product['name']; ?></h3>\n                    <p>$<?php echo number_format($product['price'], 2); ?></p>\n                    <form action=\"index.php\" method=\"post\">\n                        <input type=\"hidden\" name=\"product_id\" value=\"<?php echo $product['id']; ?>\">\n                        <button type=\"submit\" name=\"add_to_cart\">Add to Cart</button>\n                    </form>\n                </div>\n            <?php } ?>\n\n        <?php } else if ($_GET['action'] == 'view_cart') { ?>\n            <!-- Display cart -->\n            <?php \n                $cart = get_cart();\n                $total_price = calculate_total($cart);\n            ?>\n            <h2>Your Cart</h2>\n            <?php foreach ($cart as $item) { ?>\n                <div class=\"cart-item\">\n                    <h3><?php echo $products[$item['id']]['name']; ?></h3>\n                    <p>$<?php echo number_format($products[$item['id']]['price'], 2); ?></p>\n                    <p>Quantity: <?php echo $item['quantity']; ?></p>\n                    <a href=\"index.php?action=view_cart&remove_from_cart=<?php echo $item['id']; ?>\">Remove</a>\n                </div>\n            <?php } ?>\n            <h3>Total Price: $<?php echo number_format($total_price, 2); ?></h3>\n            <form action=\"index.php\" method=\"post\">\n                <button type=\"submit\" name=\"checkout\">Checkout</button>\n            </form>\n\n        <?php } ?>\n\n        <!-- Confirmation page -->\n        <?php if (isset($_GET['action']) && $_GET['action'] == 'confirmation') { ?>\n            <h2>Order Confirmed!</h2>\n            <p>Your order has been successfully processed.</p>\n            <a href=\"index.php\">Continue Shopping</a>\n        <?php } ?>\n\n        <!-- Error page -->\n        <?php if (isset($_GET['error'])) { ?>\n            <div class=\"error\">\n                <p><?php echo $_GET['error']; ?></p>\n            </div>\n        <?php } ?>\n    </div>\n\n<?php\n// Include footer\nrequire_once('includes/footer.php');\n?>\n```\n\nThis example includes the following functionality:\n\n1. Product listing page\n\n2. Add to cart functionality\n\n3. Cart viewing page with item removal capability\n\n4. Checkout process\n\n5. Order confirmation page\n\nTo make this work, you'll need to create additional files:\n\n1. `config.php` - To store product information and database connection details\n2. `functions/cart_functions.php` - To handle cart operations (add/remove items, calculate totals)\n3. `includes/header.php` and `includes/footer.php` - For common page elements\n\nHere's the content for each of these files:\n\n**config.php:**\n```php\n<?php\n// Product information\n$products = array(\n    1 => array(\n        'name' => 'Product 1',\n        'price' => 29.99,\n    ),\n    2 => array(\n        'name' => 'Product 2',\n        'price' => 49.99,\n    ),\n    // Add more products as needed\n);\n\n// Database connection details (if using a database)\n$host = \"localhost\";\n$username = \"username\";\n$password = \"password\";\n$db_name = \"store_db\";\n?>\n```\n\n**functions/cart_functions.php:**\n```php\n<?php\nfunction get_cart() {\n    if (!isset($_COOKIE['cart'])) {\n        return array();\n    }\n    return unserialize($_COOKIE['cart']);\n}\n\nfunction add_to_cart($product_id) {\n    $cart = get_cart();\n    if (array_key_exists($product_id, $cart)) {\n        $cart[$product_id]['quantity']++;\n    } else {\n        $cart[$product_id] = array('id' => $product_id, 'quantity' => 1);\n    }\n    setcookie('cart', serialize($cart), time() + (86400 * 30));\n}\n\nfunction remove_from_cart($product_id) {\n    $cart = get_cart();\n    if (array_key_exists($product_id, $cart)) {\n        unset($cart[$product_id]);\n        setcookie('cart', serialize($cart), time() + (86400 * 30));\n    }\n}\n\nfunction calculate_total($cart) {\n    global $products;\n    $total = 0;\n    foreach ($cart as $item) {\n        $product = $products[$item['id']];\n        $total += $product['price'] * $item['quantity'];\n    }\n    return $total;\n}\n\nfunction process_checkout() {\n    // Here you would typically connect to a payment gateway\n    // For this example, we'll simulate a successful payment\n    try {\n        $cart = get_cart();\n        if (empty($cart)) {\n            throw new Exception(\"Your cart is empty\");\n        }\n        \n        // Simulate payment success or failure\n        if (rand(1, 10) > 2) { // 80% chance of success\n            // Process the order\n            setcookie('cart', \"\", time() - 3600);\n            return true;\n        } else {\n            throw new Exception(\"Payment failed\");\n        }\n    } catch (Exception $e) {\n        header(\"Location: index.php?error=\" . urlencode($e->getMessage()));\n        exit();\n    }\n}\n?>\n```\n\n**includes/header.php:**\n```php\n<?php\nsession_start();\nrequire_once('config.php');\n\n// Get cart count\nfunction get_cart_count() {\n    $cart = unserialize($_COOKIE['cart']);\n    return count($cart);\n}\n\n?>\n\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Store</title>\n    <link rel=\"stylesheet\" href=\"css/styles.css\">\n</head>\n<body>\n    <header>\n        <h1>Welcome to Our Store</h1>\n        <nav>\n            <a href=\"index.php\">Products</a>\n            <a href=\"index.php?action=view_cart\">Cart (<?php echo isset($_COOKIE['cart']) ? count(unserialize($_COOKIE['cart'])) : 0; ?>)</a>\n        </nav>\n    </header>\n```\n\n**includes/footer.php:**\n```php\n<footer>\n    <p>&copy; <?php echo date('Y'); ?> Your Store. All rights reserved.</p>\n</footer>\n</body>\n</html>\n```\n\nTo use this code:\n\n1. Create a new directory for your project\n\n2. Copy all the files into the appropriate directories (e.g., `css/`, `includes/`, etc.)\n\n3. Customize the product list in `config.php`\n\n4. Modify the payment processing logic in `cart_functions.php` to integrate with an actual payment gateway\n\n5. Add any additional error handling or features as needed\n\nThis is a basic implementation that you can build upon based on your specific requirements.", "code_blocks": ["```php\n<?php\n// Include required files\nrequire_once('config.php');\nrequire_once('functions/cart_functions.php');\nrequire_once('includes/header.php');\n\n// Get products list\n$products = get_products();\n\n// Handle add to cart action\nif (isset($_POST['add_to_cart'])) {\n    $product_id = $_POST['product_id'];\n    add_to_cart($product_id);\n    header(\"Location: index.php\");\n    exit();\n}\n\n// Handle remove from cart action\nif (isset($_GET['remove_from_cart'])) {\n    $product_id = $_GET['remove_from_cart'];\n    remove_from_cart($product_id);\n    header(\"Location: cart.php\");\n    exit();\n}\n\n// Process checkout\nif (isset($_POST['checkout'])) {\n    process_checkout();\n    header(\"Location: confirmation.php\");\n    exit();\n}\n?>\n\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Store</title>\n    <link rel=\"stylesheet\" href=\"css/styles.css\">\n</head>\n<body>\n    <!-- Main Content -->\n    <div class=\"container\">\n        <?php if (!isset($_GET['action'])) { ?>\n            <!-- Display products -->\n            <?php foreach ($products as $product) { ?>\n                <div class=\"product-card\">\n                    <h3><?php echo $product['name']; ?></h3>\n                    <p>$<?php echo number_format($product['price'], 2); ?></p>\n                    <form action=\"index.php\" method=\"post\">\n                        <input type=\"hidden\" name=\"product_id\" value=\"<?php echo $product['id']; ?>\">\n                        <button type=\"submit\" name=\"add_to_cart\">Add to Cart</button>\n                    </form>\n                </div>\n            <?php } ?>\n\n        <?php } else if ($_GET['action'] == 'view_cart') { ?>\n            <!-- Display cart -->\n            <?php \n                $cart = get_cart();\n                $total_price = calculate_total($cart);\n            ?>\n            <h2>Your Cart</h2>\n            <?php foreach ($cart as $item) { ?>\n                <div class=\"cart-item\">\n                    <h3><?php echo $products[$item['id']]['name']; ?></h3>\n                    <p>$<?php echo number_format($products[$item['id']]['price'], 2); ?></p>\n                    <p>Quantity: <?php echo $item['quantity']; ?></p>\n                    <a href=\"index.php?action=view_cart&remove_from_cart=<?php echo $item['id']; ?>\">Remove</a>\n                </div>\n            <?php } ?>\n            <h3>Total Price: $<?php echo number_format($total_price, 2); ?></h3>\n            <form action=\"index.php\" method=\"post\">\n                <button type=\"submit\" name=\"checkout\">Checkout</button>\n            </form>\n\n        <?php } ?>\n\n        <!-- Confirmation page -->\n        <?php if (isset($_GET['action']) && $_GET['action'] == 'confirmation') { ?>\n            <h2>Order Confirmed!</h2>\n            <p>Your order has been successfully processed.</p>\n            <a href=\"index.php\">Continue Shopping</a>\n        <?php } ?>\n\n        <!-- Error page -->\n        <?php if (isset($_GET['error'])) { ?>\n            <div class=\"error\">\n                <p><?php echo $_GET['error']; ?></p>\n            </div>\n        <?php } ?>\n    </div>\n\n<?php\n// Include footer\nrequire_once('includes/footer.php');\n?>\n```", "```php\n<?php\n// Product information\n$products = array(\n    1 => array(\n        'name' => 'Product 1',\n        'price' => 29.99,\n    ),\n    2 => array(\n        'name' => 'Product 2',\n        'price' => 49.99,\n    ),\n    // Add more products as needed\n);\n\n// Database connection details (if using a database)\n$host = \"localhost\";\n$username = \"username\";\n$password = \"password\";\n$db_name = \"store_db\";\n?>\n```", "```php\n<?php\nfunction get_cart() {\n    if (!isset($_COOKIE['cart'])) {\n        return array();\n    }\n    return unserialize($_COOKIE['cart']);\n}\n\nfunction add_to_cart($product_id) {\n    $cart = get_cart();\n    if (array_key_exists($product_id, $cart)) {\n        $cart[$product_id]['quantity']++;\n    } else {\n        $cart[$product_id] = array('id' => $product_id, 'quantity' => 1);\n    }\n    setcookie('cart', serialize($cart), time() + (86400 * 30));\n}\n\nfunction remove_from_cart($product_id) {\n    $cart = get_cart();\n    if (array_key_exists($product_id, $cart)) {\n        unset($cart[$product_id]);\n        setcookie('cart', serialize($cart), time() + (86400 * 30));\n    }\n}\n\nfunction calculate_total($cart) {\n    global $products;\n    $total = 0;\n    foreach ($cart as $item) {\n        $product = $products[$item['id']];\n        $total += $product['price'] * $item['quantity'];\n    }\n    return $total;\n}\n\nfunction process_checkout() {\n    // Here you would typically connect to a payment gateway\n    // For this example, we'll simulate a successful payment\n    try {\n        $cart = get_cart();\n        if (empty($cart)) {\n            throw new Exception(\"Your cart is empty\");\n        }\n        \n        // Simulate payment success or failure\n        if (rand(1, 10) > 2) { // 80% chance of success\n            // Process the order\n            setcookie('cart', \"\", time() - 3600);\n            return true;\n        } else {\n            throw new Exception(\"Payment failed\");\n        }\n    } catch (Exception $e) {\n        header(\"Location: index.php?error=\" . urlencode($e->getMessage()));\n        exit();\n    }\n}\n?>\n```", "```php\n<?php\nsession_start();\nrequire_once('config.php');\n\n// Get cart count\nfunction get_cart_count() {\n    $cart = unserialize($_COOKIE['cart']);\n    return count($cart);\n}\n\n?>\n\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Store</title>\n    <link rel=\"stylesheet\" href=\"css/styles.css\">\n</head>\n<body>\n    <header>\n        <h1>Welcome to Our Store</h1>\n        <nav>\n            <a href=\"index.php\">Products</a>\n            <a href=\"index.php?action=view_cart\">Cart (<?php echo isset($_COOKIE['cart']) ? count(unserialize($_COOKIE['cart'])) : 0; ?>)</a>\n        </nav>\n    </header>\n```", "```php\n<footer>\n    <p>&copy; <?php echo date('Y'); ?> Your Store. All rights reserved.</p>\n</footer>\n</body>\n</html>\n```"]}
