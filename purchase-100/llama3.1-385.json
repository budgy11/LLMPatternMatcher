{"prompt": "Create a purchase functionality using php", "llm_output": "Here is an example of how you can create a basic purchase functionality in PHP. This will include creating a user, adding items to cart, and making a purchase.\n\n**Please note that this is just a simplified example and may not be suitable for production use without further development and security considerations.**\n\n### Database Schema\n\nFirstly, let's assume we have the following database schema:\n\n```sql\nCREATE TABLE users (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  name VARCHAR(255),\n  email VARCHAR(255)\n);\n\nCREATE TABLE products (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  name VARCHAR(255),\n  price DECIMAL(10,2)\n);\n\nCREATE TABLE cart_items (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  user_id INT,\n  product_id INT,\n  quantity INT\n);\n\nCREATE TABLE orders (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  user_id INT,\n  order_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n  total DECIMAL(10,2)\n);\n\nCREATE TABLE order_items (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  order_id INT,\n  product_id INT,\n  quantity INT\n);\n```\n\n### PHP Code\n\n```php\n// config.php\n<?php\ndefine('DB_HOST', 'localhost');\ndefine('DB_USER', 'username');\ndefine('DB_PASSWORD', 'password');\ndefine('DB_NAME', 'database_name');\n\n$connection = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);\n\nif ($connection->connect_error) {\n    die(\"Connection failed: \" . $connection->connect_error);\n}\n?>\n\n// functions.php\n<?php\n\nfunction create_user($name, $email) {\n  $query = \"INSERT INTO users (name, email) VALUES (?, ?)\";\n  $stmt = $connection->prepare($query);\n  $stmt->bind_param(\"ss\", $name, $email);\n  $result = $stmt->execute();\n  return $result;\n}\n\nfunction add_to_cart($user_id, $product_id, $quantity) {\n  $query = \"INSERT INTO cart_items (user_id, product_id, quantity) VALUES (?, ?, ?)\";\n  $stmt = $connection->prepare($query);\n  $stmt->bind_param(\"iii\", $user_id, $product_id, $quantity);\n  $result = $stmt->execute();\n  return $result;\n}\n\nfunction make_purchase($user_id) {\n  $query = \"SELECT c.user_id, p.price, ci.quantity FROM cart_items ci JOIN products p ON ci.product_id = p.id WHERE ci.user_id = ?\";\n  $stmt = $connection->prepare($query);\n  $stmt->bind_param(\"i\", $user_id);\n  $stmt->execute();\n  $result = $stmt->get_result();\n\n  if ($result) {\n    $order_total = 0;\n    while ($row = $result->fetch_assoc()) {\n      $order_total += $row['price'] * $row['quantity'];\n    }\n\n    $query = \"INSERT INTO orders (user_id, total) VALUES (?, ?)\";\n    $stmt = $connection->prepare($query);\n    $stmt->bind_param(\"id\", $user_id, $order_total);\n    $result = $stmt->execute();\n\n    if ($result) {\n      // remove items from cart\n      $query = \"DELETE FROM cart_items WHERE user_id = ?\";\n      $stmt = $connection->prepare($query);\n      $stmt->bind_param(\"i\", $user_id);\n      $result = $stmt->execute();\n    }\n  }\n\n  return $result;\n}\n\n?>\n```\n\n### Example Usage\n\n```php\n// create a new user\n$user_name = \"John Doe\";\n$user_email = \"johndoe@example.com\";\n$result = create_user($user_name, $user_email);\necho \"User created: \" . ($result ? \"Yes\" : \"No\") . \"\\n\";\n\n// add items to cart\n$user_id = 1;\n$product_ids[] = 1;\n$quantities[] = 2;\n\nforeach (array_combine($product_ids, $quantities) as $product_id => $quantity) {\n  $result = add_to_cart($user_id, $product_id, $quantity);\n  echo \"Item added to cart: \" . ($result ? \"Yes\" : \"No\") . \"\\n\";\n}\n\n// make a purchase\n$result = make_purchase($user_id);\necho \"Purchase made: \" . ($result ? \"Yes\" : \"No\") . \"\\n\";\n```\n\nThis is a simplified example and you should consider implementing additional security measures, such as input validation and sanitization, to prevent SQL injection attacks. Additionally, you may want to add more features, such as handling multiple payment methods or displaying the order summary.", "code_blocks": [null, "```php\n// config.php\n<?php\ndefine('DB_HOST', 'localhost');\ndefine('DB_USER', 'username');\ndefine('DB_PASSWORD', 'password');\ndefine('DB_NAME', 'database_name');\n\n$connection = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);\n\nif ($connection->connect_error) {\n    die(\"Connection failed: \" . $connection->connect_error);\n}\n?>\n\n// functions.php\n<?php\n\nfunction create_user($name, $email) {\n  $query = \"INSERT INTO users (name, email) VALUES (?, ?)\";\n  $stmt = $connection->prepare($query);\n  $stmt->bind_param(\"ss\", $name, $email);\n  $result = $stmt->execute();\n  return $result;\n}\n\nfunction add_to_cart($user_id, $product_id, $quantity) {\n  $query = \"INSERT INTO cart_items (user_id, product_id, quantity) VALUES (?, ?, ?)\";\n  $stmt = $connection->prepare($query);\n  $stmt->bind_param(\"iii\", $user_id, $product_id, $quantity);\n  $result = $stmt->execute();\n  return $result;\n}\n\nfunction make_purchase($user_id) {\n  $query = \"SELECT c.user_id, p.price, ci.quantity FROM cart_items ci JOIN products p ON ci.product_id = p.id WHERE ci.user_id = ?\";\n  $stmt = $connection->prepare($query);\n  $stmt->bind_param(\"i\", $user_id);\n  $stmt->execute();\n  $result = $stmt->get_result();\n\n  if ($result) {\n    $order_total = 0;\n    while ($row = $result->fetch_assoc()) {\n      $order_total += $row['price'] * $row['quantity'];\n    }\n\n    $query = \"INSERT INTO orders (user_id, total) VALUES (?, ?)\";\n    $stmt = $connection->prepare($query);\n    $stmt->bind_param(\"id\", $user_id, $order_total);\n    $result = $stmt->execute();\n\n    if ($result) {\n      // remove items from cart\n      $query = \"DELETE FROM cart_items WHERE user_id = ?\";\n      $stmt = $connection->prepare($query);\n      $stmt->bind_param(\"i\", $user_id);\n      $result = $stmt->execute();\n    }\n  }\n\n  return $result;\n}\n\n?>\n```", "```php\n// create a new user\n$user_name = \"John Doe\";\n$user_email = \"johndoe@example.com\";\n$result = create_user($user_name, $user_email);\necho \"User created: \" . ($result ? \"Yes\" : \"No\") . \"\\n\";\n\n// add items to cart\n$user_id = 1;\n$product_ids[] = 1;\n$quantities[] = 2;\n\nforeach (array_combine($product_ids, $quantities) as $product_id => $quantity) {\n  $result = add_to_cart($user_id, $product_id, $quantity);\n  echo \"Item added to cart: \" . ($result ? \"Yes\" : \"No\") . \"\\n\";\n}\n\n// make a purchase\n$result = make_purchase($user_id);\necho \"Purchase made: \" . ($result ? \"Yes\" : \"No\") . \"\\n\";\n```"]}
