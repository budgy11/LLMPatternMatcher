{"prompt": "Create a purchase cart functionality using php", "llm_output": "Here is an example of a basic purchase cart functionality using PHP:\n\n**cart.php**\n```php\n<?php\nsession_start();\n\n// Check if the cart is already loaded in session\nif (!isset($_SESSION['cart'])) {\n    $_SESSION['cart'] = array();\n}\n\n// Function to add item to cart\nfunction addItemToCart($product_id, $quantity) {\n    global $_SESSION;\n    // Check if product is already in cart\n    foreach ($_SESSION['cart'] as &$item) {\n        if ($item['id'] == $product_id) {\n            // Update quantity if it's the same product\n            $item['quantity'] += $quantity;\n            return true;\n        }\n    }\n    // Add new item to cart\n    $_SESSION['cart'][] = array('id' => $product_id, 'quantity' => $quantity);\n    return true;\n}\n\n// Function to remove item from cart\nfunction removeItemFromCart($product_id) {\n    global $_SESSION;\n    foreach ($_SESSION['cart'] as $key => &$item) {\n        if ($item['id'] == $product_id) {\n            unset($_SESSION['cart'][$key]);\n            return true;\n        }\n    }\n    return false;\n}\n\n// Function to update quantity of item in cart\nfunction updateQuantity($product_id, $new_quantity) {\n    global $_SESSION;\n    foreach ($_SESSION['cart'] as &$item) {\n        if ($item['id'] == $product_id) {\n            $item['quantity'] = $new_quantity;\n            return true;\n        }\n    }\n    return false;\n}\n\n// Function to calculate total cost of cart\nfunction calculateTotal() {\n    global $_SESSION;\n    $total = 0;\n    foreach ($_SESSION['cart'] as &$item) {\n        $total += $item['price'] * $item['quantity'];\n    }\n    return $total;\n}\n?>\n```\n**index.php**\n```php\n<?php\nrequire_once 'cart.php';\n\n// Initialize cart with some sample products (you can replace this with your database or API)\n$_SESSION['products'] = array(\n    1 => array('name' => 'Product 1', 'price' => 9.99),\n    2 => array('name' => 'Product 2', 'price' => 14.99),\n    3 => array('name' => 'Product 3', 'price' => 19.99)\n);\n\n// Example usage: add item to cart\naddItemToCart(1, 2);\naddItemToCart(2, 1);\naddItemToCart(1, 3); // quantity will be increased for product 1\n\n// Get total cost of cart\n$total = calculateTotal();\necho 'Total: $' . number_format($total, 2);\n\n// Example usage: remove item from cart\nremoveItemFromCart(2);\n\n// Example usage: update quantity of item in cart\nupdateQuantity(1, 5);\n?>\n```\nThis code defines four functions:\n\n* `addItemToCart`: adds an item to the cart with a specified quantity. If the product is already in the cart, it will increase the existing quantity.\n* `removeItemFromCart`: removes an item from the cart by its ID.\n* `updateQuantity`: updates the quantity of an item in the cart.\n* `calculateTotal`: calculates the total cost of all items in the cart.\n\nThe code also includes some sample products and usage examples to demonstrate how to use these functions.", "code_blocks": ["```php\n<?php\nsession_start();\n\n// Check if the cart is already loaded in session\nif (!isset($_SESSION['cart'])) {\n    $_SESSION['cart'] = array();\n}\n\n// Function to add item to cart\nfunction addItemToCart($product_id, $quantity) {\n    global $_SESSION;\n    // Check if product is already in cart\n    foreach ($_SESSION['cart'] as &$item) {\n        if ($item['id'] == $product_id) {\n            // Update quantity if it's the same product\n            $item['quantity'] += $quantity;\n            return true;\n        }\n    }\n    // Add new item to cart\n    $_SESSION['cart'][] = array('id' => $product_id, 'quantity' => $quantity);\n    return true;\n}\n\n// Function to remove item from cart\nfunction removeItemFromCart($product_id) {\n    global $_SESSION;\n    foreach ($_SESSION['cart'] as $key => &$item) {\n        if ($item['id'] == $product_id) {\n            unset($_SESSION['cart'][$key]);\n            return true;\n        }\n    }\n    return false;\n}\n\n// Function to update quantity of item in cart\nfunction updateQuantity($product_id, $new_quantity) {\n    global $_SESSION;\n    foreach ($_SESSION['cart'] as &$item) {\n        if ($item['id'] == $product_id) {\n            $item['quantity'] = $new_quantity;\n            return true;\n        }\n    }\n    return false;\n}\n\n// Function to calculate total cost of cart\nfunction calculateTotal() {\n    global $_SESSION;\n    $total = 0;\n    foreach ($_SESSION['cart'] as &$item) {\n        $total += $item['price'] * $item['quantity'];\n    }\n    return $total;\n}\n?>\n```", "```php\n<?php\nrequire_once 'cart.php';\n\n// Initialize cart with some sample products (you can replace this with your database or API)\n$_SESSION['products'] = array(\n    1 => array('name' => 'Product 1', 'price' => 9.99),\n    2 => array('name' => 'Product 2', 'price' => 14.99),\n    3 => array('name' => 'Product 3', 'price' => 19.99)\n);\n\n// Example usage: add item to cart\naddItemToCart(1, 2);\naddItemToCart(2, 1);\naddItemToCart(1, 3); // quantity will be increased for product 1\n\n// Get total cost of cart\n$total = calculateTotal();\necho 'Total: $' . number_format($total, 2);\n\n// Example usage: remove item from cart\nremoveItemFromCart(2);\n\n// Example usage: update quantity of item in cart\nupdateQuantity(1, 5);\n?>\n```"]}
