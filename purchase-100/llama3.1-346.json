{"prompt": "Create a purchase functionality using php", "llm_output": "Here is an example of a basic purchase functionality using PHP, MySQL, and HTML. This example assumes you have already set up a database with the necessary tables.\n\n**Database Schema:**\n\nWe'll need two tables for this functionality:\n\n1. `products`:\n\t* `id`: The unique identifier for each product.\n\t* `name`: The name of the product.\n\t* `price`: The price of the product.\n2. `orders`:\n\t* `id`: The unique identifier for each order.\n\t* `customer_name`: The name of the customer who made the purchase.\n\t* `product_id`: The ID of the product purchased.\n\t* `quantity`: The number of products purchased.\n\n**PHP Code:**\n\nCreate a file called `purchase.php` and add the following code:\n\n```php\n<?php\n\n// Database connection settings\n$host = 'localhost';\n$dbname = 'your_database_name';\n$username = 'your_username';\n$password = 'your_password';\n\n// Connect to database\n$conn = new mysqli($host, $username, $password, $dbname);\n\n// Check for errors\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Function to get products from database\nfunction get_products() {\n    global $conn;\n    $sql = \"SELECT * FROM products\";\n    $result = $conn->query($sql);\n    if (!$result) {\n        return false;\n    }\n    return $result;\n}\n\n// Function to process purchase\nfunction process_purchase($product_id, $quantity) {\n    global $conn;\n    // Check if product exists\n    $sql = \"SELECT * FROM products WHERE id = '$product_id'\";\n    $result = $conn->query($sql);\n    if (!$result || $result->num_rows == 0) {\n        return false; // Product not found\n    }\n    \n    // Get product price\n    $row = $result->fetch_assoc();\n    $price = $row['price'];\n    \n    // Check if quantity is valid\n    if ($quantity <= 0) {\n        return false; // Invalid quantity\n    }\n    \n    // Insert order into database\n    $sql = \"INSERT INTO orders (customer_name, product_id, quantity) VALUES ('\", '', $product_id, \", \", $quantity, \")\";\n    if (!$conn->query($sql)) {\n        return false; // Error inserting order\n    }\n    \n    // Update product stock\n    $new_stock = $row['stock'] - $quantity;\n    $sql = \"UPDATE products SET stock = '$new_stock' WHERE id = '$product_id'\";\n    if (!$conn->query($sql)) {\n        return false; // Error updating product stock\n    }\n    \n    return true; // Purchase processed successfully\n}\n\n// Display form for customer to input quantity\n?>\n<html>\n<head>\n    <title>Purchase Product</title>\n</head>\n<body>\n    <?php\n    $products = get_products();\n    if ($products) {\n        ?>\n        <form action=\"\" method=\"post\">\n            <select name=\"product_id\" required>\n                <?php\n                while ($row = $products->fetch_assoc()) {\n                    echo \"<option value='\" . $row['id'] . \"'>\" . $row['name'] . \"</option>\";\n                }\n                ?>\n            </select>\n            Quantity: <input type=\"number\" name=\"quantity\" min=\"1\">\n            <input type=\"submit\" name=\"purchase\" value=\"Purchase\">\n        </form>\n        <?php\n    } else {\n        echo \"Error getting products.\";\n    }\n    \n    // Process purchase form submission\n    if (isset($_POST['purchase'])) {\n        $product_id = $_POST['product_id'];\n        $quantity = $_POST['quantity'];\n        if (process_purchase($product_id, $quantity)) {\n            echo \"Purchase successful!\";\n        } else {\n            echo \"Error processing purchase.\";\n        }\n    }\n    ?>\n</body>\n</html>\n```\n\n**How it Works:**\n\n1. The PHP script connects to the database using the `mysqli` extension.\n2. It defines two functions: `get_products()` to retrieve products from the database, and `process_purchase()` to process a purchase request.\n3. When the customer submits the form with their product choice and quantity, the script calls `process_purchase()` to insert an order into the database and update the product stock accordingly.\n\n**Note:** This is a basic example for illustration purposes only. In a real-world scenario, you should implement proper error handling, input validation, and security measures (such as user authentication and authorization) to ensure safe and reliable functionality.\n\nAlso, remember to replace placeholders (`your_database_name`, `your_username`, `your_password`) with your actual database credentials.", "code_blocks": ["```php\n<?php\n\n// Database connection settings\n$host = 'localhost';\n$dbname = 'your_database_name';\n$username = 'your_username';\n$password = 'your_password';\n\n// Connect to database\n$conn = new mysqli($host, $username, $password, $dbname);\n\n// Check for errors\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Function to get products from database\nfunction get_products() {\n    global $conn;\n    $sql = \"SELECT * FROM products\";\n    $result = $conn->query($sql);\n    if (!$result) {\n        return false;\n    }\n    return $result;\n}\n\n// Function to process purchase\nfunction process_purchase($product_id, $quantity) {\n    global $conn;\n    // Check if product exists\n    $sql = \"SELECT * FROM products WHERE id = '$product_id'\";\n    $result = $conn->query($sql);\n    if (!$result || $result->num_rows == 0) {\n        return false; // Product not found\n    }\n    \n    // Get product price\n    $row = $result->fetch_assoc();\n    $price = $row['price'];\n    \n    // Check if quantity is valid\n    if ($quantity <= 0) {\n        return false; // Invalid quantity\n    }\n    \n    // Insert order into database\n    $sql = \"INSERT INTO orders (customer_name, product_id, quantity) VALUES ('\", '', $product_id, \", \", $quantity, \")\";\n    if (!$conn->query($sql)) {\n        return false; // Error inserting order\n    }\n    \n    // Update product stock\n    $new_stock = $row['stock'] - $quantity;\n    $sql = \"UPDATE products SET stock = '$new_stock' WHERE id = '$product_id'\";\n    if (!$conn->query($sql)) {\n        return false; // Error updating product stock\n    }\n    \n    return true; // Purchase processed successfully\n}\n\n// Display form for customer to input quantity\n?>\n<html>\n<head>\n    <title>Purchase Product</title>\n</head>\n<body>\n    <?php\n    $products = get_products();\n    if ($products) {\n        ?>\n        <form action=\"\" method=\"post\">\n            <select name=\"product_id\" required>\n                <?php\n                while ($row = $products->fetch_assoc()) {\n                    echo \"<option value='\" . $row['id'] . \"'>\" . $row['name'] . \"</option>\";\n                }\n                ?>\n            </select>\n            Quantity: <input type=\"number\" name=\"quantity\" min=\"1\">\n            <input type=\"submit\" name=\"purchase\" value=\"Purchase\">\n        </form>\n        <?php\n    } else {\n        echo \"Error getting products.\";\n    }\n    \n    // Process purchase form submission\n    if (isset($_POST['purchase'])) {\n        $product_id = $_POST['product_id'];\n        $quantity = $_POST['quantity'];\n        if (process_purchase($product_id, $quantity)) {\n            echo \"Purchase successful!\";\n        } else {\n            echo \"Error processing purchase.\";\n        }\n    }\n    ?>\n</body>\n</html>\n```"]}
