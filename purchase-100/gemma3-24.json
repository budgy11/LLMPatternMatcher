{"prompt": "Create a purchase cart functionality using php", "llm_output": "```php\n<?php\nsession_start();\n\n// Database connection details (replace with your actual credentials)\n$db_host = \"localhost\";\n$db_user = \"your_db_user\";\n$db_pass = \"your_db_password\";\n$db_name = \"your_db_name\";\n\n// Ensure the database connection works\n$conn = new mysqli($db_host, $db_user, $db_pass, $db_name);\nif ($conn->connect_error) {\n  die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Function to check if a product is in the cart\nfunction isInCart($product_id) {\n  global $conn;\n  if (isset($_SESSION['cart'][$product_id]['quantity'])) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\n// Function to update cart quantity\nfunction updateCartQuantity($product_id, $quantity) {\n  global $conn;\n\n  if (isset($_SESSION['cart'][$product_id])) {\n    $_SESSION['cart'][$product_id]['quantity'] += $quantity;\n    $_SESSION['cart'][$product_id]['quantity'] = max(0, $_SESSION['cart'][$product_id]['quantity']); // Ensure quantity doesn't go below 0\n  } else {\n    // If product not in cart, add it with the specified quantity\n    $_SESSION['cart'][$product_id] = ['quantity' => $quantity];\n  }\n}\n\n// Function to remove a product from the cart\nfunction removeProductFromCart($product_id) {\n  if (isset($_SESSION['cart'][$product_id])) {\n    unset($_SESSION['cart'][$product_id]);\n  }\n}\n\n// Function to get cart total\nfunction getCartTotal($cart) {\n    $total = 0;\n    foreach ($cart as $product_id => $item) {\n        $total += $item['price'] * $item['quantity'];\n    }\n    return $total;\n}\n\n// Handle adding to cart\nif (isset($_POST['add_to_cart'])) {\n  $product_id = $_POST['product_id'];\n  $quantity = $_POST['quantity'];\n\n  // Validate quantity (optional, but recommended)\n  if (empty($quantity) || $quantity <= 0) {\n    echo \"<p style='color:red;'>Invalid quantity.</p>\";\n    exit;\n  }\n\n  updateCartQuantity($product_id, $quantity);\n  echo \"<p>Product added to cart.</p>\";\n}\n\n// Handle removing from cart\nif (isset($_POST['remove_from_cart'])) {\n  $product_id = $_POST['product_id'];\n  removeProductFromCart($product_id);\n  echo \"<p>Product removed from cart.</p>\";\n}\n\n// Handle updating quantity\nif (isset($_POST['update_quantity'])) {\n  $product_id = $_POST['product_id'];\n  $quantity = $_POST['quantity'];\n\n  // Validate quantity\n  if (empty($quantity) || $quantity <= 0) {\n    echo \"<p style='color:red;'>Invalid quantity.</p>\";\n    exit;\n  }\n  updateCartQuantity($product_id, $quantity);\n}\n\n\n// Display the cart contents\n$cart_items = [];\nif (isset($_SESSION['cart'])) {\n    foreach ($_SESSION['cart'] as $product_id => $item) {\n        // Fetch product details from your database\n        $product_query = \"SELECT * FROM products WHERE id = ?\";\n        $stmt = $conn->prepare($product_query);\n        $stmt->bind_param(\"i\", $product_id);\n        $stmt->execute();\n        $result = $stmt->get_result();\n        $product = $result->fetch_assoc();\n\n        if ($product) {\n            $cart_items[] = [\n                'id' => $product['id'],\n                'name' => $product['name'],\n                'price' => $product['price'],\n                'quantity' => $item['quantity']\n            ];\n        }\n    }\n}\n\n$cart_total = getCartTotal($cart_items);\n\n\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n  <title>Shopping Cart</title>\n  <style>\n    .cart-item {\n      border: 1px solid #ccc;\n      padding: 10px;\n      margin-bottom: 10px;\n    }\n  </style>\n</head>\n<body>\n\n  <h1>Shopping Cart</h1>\n\n  <?php if (empty($cart_items)) {\n      echo \"<p>Your cart is empty.</p>\";\n    } else {\n        echo \"<table class='cart-items'>\";\n        echo \"<tr><th>Product</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>\";\n\n        foreach ($cart_items as $item) {\n          echo '<tr class=\"cart-item\">';\n          echo \"<td>\" . $item['name'] . \"</td>\";\n          echo \"<td>$\" . $item['price'] . \"</td>\";\n          echo \"<td>\" . $item['quantity'] . \"</td>\";\n          echo \"<td>$\" . $item['quantity'] * $item['price'] . \"</td>\";\n          echo \"<td><form method='post'><input type='hidden' name='product_id' value='\" . $item['id'] . \"'> <button type='submit'>Remove</button></form></td>\";\n          echo \"</tr>\";\n        }\n\n        echo \"</table>\";\n        echo \"<p><strong>Total: $\" . $cart_total . \"</strong></p>\";\n    }\n\n    ?>\n\n  <hr>\n\n  <h2>Add to Cart</h2>\n  <?php if (empty($cart_items)) {\n        echo \"<form method='post'>\n                  <label for='product_id'>Product ID:</label>\n                  <input type='number' id='product_id' name='product_id' required>\n                  <label for='quantity'>Quantity:</label>\n                  <input type='number' id='quantity' name='quantity' value='1' min='1'>\n                  <button type='submit' name='add_to_cart'>Add to Cart</button>\n                </form>\";\n    }\n    ?>\n\n</body>\n</html>\n```\n\nKey improvements and explanations:\n\n* **Database Connection:**  Includes a basic connection to the database.  *Crucially, you MUST replace the placeholder database credentials with your actual values.*  Also, adds error handling to check if the connection was successful.\n* **`isInCart()` Function:**  A function to check if a product is already in the cart.  This avoids duplicates.\n* **`updateCartQuantity()` Function:**  Updates the quantity of an item in the cart.  Crucially, it handles adding a new item if it's not already present, and prevents the quantity from going below zero using `max()`.\n* **`removeProductFromCart()` Function:** Removes the product from the cart.\n* **`getCartTotal()` Function:** Calculates the total cost of the cart items.\n* **Session Management:** Uses `session_start()` to maintain the cart contents across multiple pages.\n* **Clearer Cart Display:**  The HTML code now iterates through the `cart_items` array to display each product's information.\n* **Form for Adding Items:**  The  `Add to Cart` form now uses the product ID and quantity.\n* **Input Validation:** The code now includes basic input validation for quantity, preventing empty or negative values.\n* **HTML Structure:**  The HTML structure is improved for better readability and presentation. The cart items are displayed in a table, and the form is clear.\n* **Error Handling:**  Includes basic error handling for the database connection.\n* **Security:**  While this example is simplified, it's *essential* to implement proper security measures in a production environment, including:\n    * **Prepared Statements:** Using prepared statements (as shown) protects against SQL injection attacks.\n    * **Input Validation and Sanitization:**  Validate *all* user input to prevent malicious code from being injected into your database queries.\n    * **CSRF Protection:**  Implement Cross-Site Request Forgery (CSRF) protection.\n    * **HTTPS:**  Always use HTTPS to encrypt communication between the user's browser and your server.\n* **Comments:**  The code is well-commented to explain the functionality.\n\n**How to use:**\n\n1.  **Database Setup:**  Create a database (e.g., `shopping_cart`) and a table (e.g., `products`) with at least `id`, `name`, and `price` columns.  Insert some sample products into the table.\n2.  **Replace Credentials:**  Update the database connection details (`$db_host`, `$db_user`, `$db_pass`, `$db_name`) with your actual credentials.\n3.  **Save the Code:** Save the PHP code as a `.php` file (e.g., `shopping_cart.php`).\n4.  **Run the File:**  Place the file in your web server's document root and access it through your web browser (e.g., `http://localhost/shopping_cart.php`).\n\nThis revised code provides a much more functional and understandable base for building a shopping cart system. Remember to adapt and extend it based on your specific requirements and always prioritize security best practices.\n", "code_blocks": ["```php\n<?php\nsession_start();\n\n// Database connection details (replace with your actual credentials)\n$db_host = \"localhost\";\n$db_user = \"your_db_user\";\n$db_pass = \"your_db_password\";\n$db_name = \"your_db_name\";\n\n// Ensure the database connection works\n$conn = new mysqli($db_host, $db_user, $db_pass, $db_name);\nif ($conn->connect_error) {\n  die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Function to check if a product is in the cart\nfunction isInCart($product_id) {\n  global $conn;\n  if (isset($_SESSION['cart'][$product_id]['quantity'])) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\n// Function to update cart quantity\nfunction updateCartQuantity($product_id, $quantity) {\n  global $conn;\n\n  if (isset($_SESSION['cart'][$product_id])) {\n    $_SESSION['cart'][$product_id]['quantity'] += $quantity;\n    $_SESSION['cart'][$product_id]['quantity'] = max(0, $_SESSION['cart'][$product_id]['quantity']); // Ensure quantity doesn't go below 0\n  } else {\n    // If product not in cart, add it with the specified quantity\n    $_SESSION['cart'][$product_id] = ['quantity' => $quantity];\n  }\n}\n\n// Function to remove a product from the cart\nfunction removeProductFromCart($product_id) {\n  if (isset($_SESSION['cart'][$product_id])) {\n    unset($_SESSION['cart'][$product_id]);\n  }\n}\n\n// Function to get cart total\nfunction getCartTotal($cart) {\n    $total = 0;\n    foreach ($cart as $product_id => $item) {\n        $total += $item['price'] * $item['quantity'];\n    }\n    return $total;\n}\n\n// Handle adding to cart\nif (isset($_POST['add_to_cart'])) {\n  $product_id = $_POST['product_id'];\n  $quantity = $_POST['quantity'];\n\n  // Validate quantity (optional, but recommended)\n  if (empty($quantity) || $quantity <= 0) {\n    echo \"<p style='color:red;'>Invalid quantity.</p>\";\n    exit;\n  }\n\n  updateCartQuantity($product_id, $quantity);\n  echo \"<p>Product added to cart.</p>\";\n}\n\n// Handle removing from cart\nif (isset($_POST['remove_from_cart'])) {\n  $product_id = $_POST['product_id'];\n  removeProductFromCart($product_id);\n  echo \"<p>Product removed from cart.</p>\";\n}\n\n// Handle updating quantity\nif (isset($_POST['update_quantity'])) {\n  $product_id = $_POST['product_id'];\n  $quantity = $_POST['quantity'];\n\n  // Validate quantity\n  if (empty($quantity) || $quantity <= 0) {\n    echo \"<p style='color:red;'>Invalid quantity.</p>\";\n    exit;\n  }\n  updateCartQuantity($product_id, $quantity);\n}\n\n\n// Display the cart contents\n$cart_items = [];\nif (isset($_SESSION['cart'])) {\n    foreach ($_SESSION['cart'] as $product_id => $item) {\n        // Fetch product details from your database\n        $product_query = \"SELECT * FROM products WHERE id = ?\";\n        $stmt = $conn->prepare($product_query);\n        $stmt->bind_param(\"i\", $product_id);\n        $stmt->execute();\n        $result = $stmt->get_result();\n        $product = $result->fetch_assoc();\n\n        if ($product) {\n            $cart_items[] = [\n                'id' => $product['id'],\n                'name' => $product['name'],\n                'price' => $product['price'],\n                'quantity' => $item['quantity']\n            ];\n        }\n    }\n}\n\n$cart_total = getCartTotal($cart_items);\n\n\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n  <title>Shopping Cart</title>\n  <style>\n    .cart-item {\n      border: 1px solid #ccc;\n      padding: 10px;\n      margin-bottom: 10px;\n    }\n  </style>\n</head>\n<body>\n\n  <h1>Shopping Cart</h1>\n\n  <?php if (empty($cart_items)) {\n      echo \"<p>Your cart is empty.</p>\";\n    } else {\n        echo \"<table class='cart-items'>\";\n        echo \"<tr><th>Product</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>\";\n\n        foreach ($cart_items as $item) {\n          echo '<tr class=\"cart-item\">';\n          echo \"<td>\" . $item['name'] . \"</td>\";\n          echo \"<td>$\" . $item['price'] . \"</td>\";\n          echo \"<td>\" . $item['quantity'] . \"</td>\";\n          echo \"<td>$\" . $item['quantity'] * $item['price'] . \"</td>\";\n          echo \"<td><form method='post'><input type='hidden' name='product_id' value='\" . $item['id'] . \"'> <button type='submit'>Remove</button></form></td>\";\n          echo \"</tr>\";\n        }\n\n        echo \"</table>\";\n        echo \"<p><strong>Total: $\" . $cart_total . \"</strong></p>\";\n    }\n\n    ?>\n\n  <hr>\n\n  <h2>Add to Cart</h2>\n  <?php if (empty($cart_items)) {\n        echo \"<form method='post'>\n                  <label for='product_id'>Product ID:</label>\n                  <input type='number' id='product_id' name='product_id' required>\n                  <label for='quantity'>Quantity:</label>\n                  <input type='number' id='quantity' name='quantity' value='1' min='1'>\n                  <button type='submit' name='add_to_cart'>Add to Cart</button>\n                </form>\";\n    }\n    ?>\n\n</body>\n</html>\n```"]}
