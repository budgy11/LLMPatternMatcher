{"prompt": "Create a purchase functionality using php", "llm_output": "Here is an example of a simple purchase functionality in PHP:\n\n**Note:** This is a basic example and you should consider security, validation, and error handling in your production code.\n\n**Database Schema:**\n\nLet's assume we have two tables: `products` and `orders`.\n\n`products` table:\n\n| Column Name | Data Type | Description |\n| --- | --- | --- |\n| id | int | Unique product ID |\n| name | varchar | Product name |\n| price | decimal | Product price |\n\n`orders` table:\n\n| Column Name | Data Type | Description |\n| --- | --- | --- |\n| id | int | Unique order ID |\n| customer_id | int | Customer ID (foreign key) |\n| product_id | int | Product ID (foreign key) |\n| quantity | int | Order quantity |\n| total_amount | decimal | Total amount of the order |\n\n**Code:**\n\n```php\n// config.php\ndefine('DB_HOST', 'localhost');\ndefine('DB_USERNAME', 'your_username');\ndefine('DB_PASSWORD', 'your_password');\ndefine('DB_NAME', 'your_database');\n\n// db_connection.php\n<?php\nfunction connect_to_db() {\n    $conn = new PDO(\"mysql:host=\".DB_HOST.\";dbname=\".DB_NAME, DB_USERNAME, DB_PASSWORD);\n    return $conn;\n}\n\nfunction execute_query($query) {\n    try {\n        $stmt = $conn->prepare($query);\n        $stmt->execute();\n        return $stmt;\n    } catch (PDOException $e) {\n        echo \"Error: \" . $e->getMessage() . \"<br>\";\n        die();\n    }\n}\n?>\n\n// purchase.php\n<?php\nrequire_once 'config.php';\nrequire_once 'db_connection.php';\n\nif (isset($_POST['submit'])) {\n    // Get product ID and quantity from form data\n    $product_id = $_POST['product_id'];\n    $quantity = $_POST['quantity'];\n\n    // Validate product ID and quantity\n    if ($product_id == '' || $quantity == '') {\n        echo \"Error: Please enter both product ID and quantity.<br>\";\n        die();\n    }\n\n    // Get product details from database\n    $query = \"SELECT * FROM products WHERE id = :product_id\";\n    $stmt = execute_query($query);\n    $stmt->bindParam(':product_id', $product_id);\n\n    $product = $stmt->fetch(PDO::FETCH_ASSOC);\n    if ($product == false) {\n        echo \"Error: Product not found.<br>\";\n        die();\n    }\n\n    // Calculate total amount\n    $total_amount = $product['price'] * $quantity;\n\n    // Insert order into database\n    $query = \"INSERT INTO orders (customer_id, product_id, quantity, total_amount)\n              VALUES (:customer_id, :product_id, :quantity, :total_amount)\";\n    $stmt = execute_query($query);\n    $stmt->bindParam(':customer_id', $_SESSION['user']['id']);\n    $stmt->bindParam(':product_id', $product_id);\n    $stmt->bindParam(':quantity', $quantity);\n    $stmt->bindParam(':total_amount', $total_amount);\n\n    // Update product quantity\n    $query = \"UPDATE products SET quantity = quantity - :quantity WHERE id = :product_id\";\n    execute_query($query);\n    $stmt->bindParam(':quantity', $quantity);\n    $stmt->bindParam(':product_id', $product_id);\n\n    echo \"Order placed successfully!\";\n}\n\n// Display purchase form\n?>\n\n<form action=\"\" method=\"post\">\n    <label for=\"product_id\">Product ID:</label>\n    <input type=\"text\" id=\"product_id\" name=\"product_id\"><br><br>\n    <label for=\"quantity\">Quantity:</label>\n    <input type=\"number\" id=\"quantity\" name=\"quantity\"><br><br>\n    <input type=\"submit\" name=\"submit\" value=\"Place Order\">\n</form>\n```\n\n**How it works:**\n\n1. The user fills out the purchase form with product ID and quantity.\n2. When the form is submitted, the PHP script validates the input data and gets the product details from the database.\n3. It calculates the total amount by multiplying the product price with the ordered quantity.\n4. Then, it inserts a new order into the `orders` table with the customer ID, product ID, quantity, and total amount.\n5. Finally, it updates the product quantity in the `products` table.\n\nNote: This is a very basic example, you may want to add more features such as payment gateway integration, user authentication, etc.\n\nAlso, make sure to update your database credentials and table schema according to your needs.", "code_blocks": ["```php\n// config.php\ndefine('DB_HOST', 'localhost');\ndefine('DB_USERNAME', 'your_username');\ndefine('DB_PASSWORD', 'your_password');\ndefine('DB_NAME', 'your_database');\n\n// db_connection.php\n<?php\nfunction connect_to_db() {\n    $conn = new PDO(\"mysql:host=\".DB_HOST.\";dbname=\".DB_NAME, DB_USERNAME, DB_PASSWORD);\n    return $conn;\n}\n\nfunction execute_query($query) {\n    try {\n        $stmt = $conn->prepare($query);\n        $stmt->execute();\n        return $stmt;\n    } catch (PDOException $e) {\n        echo \"Error: \" . $e->getMessage() . \"<br>\";\n        die();\n    }\n}\n?>\n\n// purchase.php\n<?php\nrequire_once 'config.php';\nrequire_once 'db_connection.php';\n\nif (isset($_POST['submit'])) {\n    // Get product ID and quantity from form data\n    $product_id = $_POST['product_id'];\n    $quantity = $_POST['quantity'];\n\n    // Validate product ID and quantity\n    if ($product_id == '' || $quantity == '') {\n        echo \"Error: Please enter both product ID and quantity.<br>\";\n        die();\n    }\n\n    // Get product details from database\n    $query = \"SELECT * FROM products WHERE id = :product_id\";\n    $stmt = execute_query($query);\n    $stmt->bindParam(':product_id', $product_id);\n\n    $product = $stmt->fetch(PDO::FETCH_ASSOC);\n    if ($product == false) {\n        echo \"Error: Product not found.<br>\";\n        die();\n    }\n\n    // Calculate total amount\n    $total_amount = $product['price'] * $quantity;\n\n    // Insert order into database\n    $query = \"INSERT INTO orders (customer_id, product_id, quantity, total_amount)\n              VALUES (:customer_id, :product_id, :quantity, :total_amount)\";\n    $stmt = execute_query($query);\n    $stmt->bindParam(':customer_id', $_SESSION['user']['id']);\n    $stmt->bindParam(':product_id', $product_id);\n    $stmt->bindParam(':quantity', $quantity);\n    $stmt->bindParam(':total_amount', $total_amount);\n\n    // Update product quantity\n    $query = \"UPDATE products SET quantity = quantity - :quantity WHERE id = :product_id\";\n    execute_query($query);\n    $stmt->bindParam(':quantity', $quantity);\n    $stmt->bindParam(':product_id', $product_id);\n\n    echo \"Order placed successfully!\";\n}\n\n// Display purchase form\n?>\n\n<form action=\"\" method=\"post\">\n    <label for=\"product_id\">Product ID:</label>\n    <input type=\"text\" id=\"product_id\" name=\"product_id\"><br><br>\n    <label for=\"quantity\">Quantity:</label>\n    <input type=\"number\" id=\"quantity\" name=\"quantity\"><br><br>\n    <input type=\"submit\" name=\"submit\" value=\"Place Order\">\n</form>\n```"]}
