{"prompt": "Create a purchase functionality using php", "llm_output": "Here is an example of a basic purchase functionality using PHP, HTML, and MySQL:\n\n**Note:** This is just a simplified example to demonstrate the concept. You should always follow best practices for security, validation, and error handling in your production code.\n\n**Database Setup:**\n\nCreate a database table `orders` with the following columns:\n```sql\nCREATE TABLE orders (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  customer_name VARCHAR(255),\n  customer_email VARCHAR(255),\n  order_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n  total DECIMAL(10,2)\n);\n```\n**PHP Code:**\n\nCreate a file `purchase.php` with the following code:\n```php\n<?php\n\n// Include database connection settings\nrequire_once 'db_settings.php';\n\n// Get the product ID and quantity from the form data\n$product_id = $_POST['product_id'];\n$quantity = $_POST['quantity'];\n\n// Validate input data\nif (!$product_id || !$quantity) {\n  echo 'Error: Product ID or Quantity not provided.';\n  exit;\n}\n\n// Retrieve product details from database\n$query = \"SELECT * FROM products WHERE id = '$product_id'\";\n$result = mysqli_query($conn, $query);\n$product = mysqli_fetch_assoc($result);\n\n// Check if product exists and is available in stock\nif (!$product || $product['stock'] < $quantity) {\n  echo 'Error: Product not found or out of stock.';\n  exit;\n}\n\n// Calculate total cost\n$total = $product['price'] * $quantity;\n\n// Create a new order in the database\n$query = \"INSERT INTO orders (customer_name, customer_email, order_date, total)\n          VALUES ('$product['name'], '$product['email'], NOW(), '$total')\";\nmysqli_query($conn, $query);\n\n// Update product stock\n$query = \"UPDATE products SET stock = stock - $quantity WHERE id = '$product_id'\";\nmysqli_query($conn, $query);\n\n// Redirect to a confirmation page or send an email notification\nheader('Location: confirm_purchase.php');\nexit;\n?>\n```\n**HTML Form:**\n\nCreate an HTML form in `purchase.html` with the following code:\n```html\n<!DOCTYPE html>\n<html>\n<head>\n  <title>Purchase Product</title>\n</head>\n<body>\n  <h1>Purchase Product</h1>\n  <form action=\"purchase.php\" method=\"post\">\n    <label for=\"product_id\">Product ID:</label>\n    <input type=\"text\" id=\"product_id\" name=\"product_id\"><br><br>\n    <label for=\"quantity\">Quantity:</label>\n    <input type=\"number\" id=\"quantity\" name=\"quantity\"><br><br>\n    <input type=\"submit\" value=\"Purchase\">\n  </form>\n</body>\n</html>\n```\n**How it works:**\n\n1. The user submits the form with the product ID and quantity.\n2. The PHP code validates the input data and checks if the product exists in the database.\n3. If the product is available, the code calculates the total cost and creates a new order in the `orders` table.\n4. The code then updates the product stock by subtracting the purchased quantity from the current stock.\n5. Finally, the user is redirected to a confirmation page (not shown here).\n\nRemember to replace the database connection settings with your actual database credentials. This example uses a simple form validation and assumes that the user data is trusted. You should always use prepared statements or parameterized queries to prevent SQL injection attacks.", "code_blocks": [null, "```php\n<?php\n\n// Include database connection settings\nrequire_once 'db_settings.php';\n\n// Get the product ID and quantity from the form data\n$product_id = $_POST['product_id'];\n$quantity = $_POST['quantity'];\n\n// Validate input data\nif (!$product_id || !$quantity) {\n  echo 'Error: Product ID or Quantity not provided.';\n  exit;\n}\n\n// Retrieve product details from database\n$query = \"SELECT * FROM products WHERE id = '$product_id'\";\n$result = mysqli_query($conn, $query);\n$product = mysqli_fetch_assoc($result);\n\n// Check if product exists and is available in stock\nif (!$product || $product['stock'] < $quantity) {\n  echo 'Error: Product not found or out of stock.';\n  exit;\n}\n\n// Calculate total cost\n$total = $product['price'] * $quantity;\n\n// Create a new order in the database\n$query = \"INSERT INTO orders (customer_name, customer_email, order_date, total)\n          VALUES ('$product['name'], '$product['email'], NOW(), '$total')\";\nmysqli_query($conn, $query);\n\n// Update product stock\n$query = \"UPDATE products SET stock = stock - $quantity WHERE id = '$product_id'\";\nmysqli_query($conn, $query);\n\n// Redirect to a confirmation page or send an email notification\nheader('Location: confirm_purchase.php');\nexit;\n?>\n```", null]}
