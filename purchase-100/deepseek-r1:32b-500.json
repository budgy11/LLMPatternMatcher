{"prompt": "Create a purchase functionality using php", "llm_output": "<think>\nAlright, I need to create a purchase functionality using PHP. Let me break this down step by step.\n\nFirst, I should set up the database because everything starts there. I'll need tables for users, products, and orders. The users table will store customer information like name, email, and password. The products table will have details about each item, such as product ID, name, description, price, and stock quantity. Then, the orders table will track each purchase with order ID, user ID, product ID, quantity, total price, and the date of purchase.\n\nNext, I'll create a registration page so users can sign up. This page will collect their name, email, and password. I need to make sure to hash the password for security before storing it in the database.\n\nAfter registration, there should be a login page. Users will enter their email and password, which I'll check against the database. If they match, I'll start a session to keep them logged in.\n\nOnce logged in, users should see a product listing page. This page will display all available products with their details and an \"Add to Cart\" button. I'll fetch the products from the database and loop through them to show each one.\n\nWhen a user clicks \"Add to Cart,\" I need to handle that action. I'll check if the product is in stock. If it is, I'll add it to the cart, which I can store in the session so it persists across pages. I'll also update the quantity if the product is already in the cart.\n\nThe shopping cart page will display all items the user has added. It should show each product's name, price, quantity, and total cost for that item. There should be options to update quantities or remove items entirely. If the user decides to proceed with the purchase, they'll go to a checkout page.\n\nOn the checkout page, I'll pre-fill the form with the user's information from their session. They can enter shipping address details. After submitting, I'll validate the input to ensure all required fields are filled. Then, I'll process the order by inserting it into the orders table and deducting the quantity from the products table.\n\nFinally, an order confirmation page will thank the user and display their order details. This gives them a summary of what they bought and any necessary follow-up information.\n\nThroughout this process, I need to consider security measures like preventing SQL injection with prepared statements and handling sessions securely. Also, form validation is important to ensure data integrity and a good user experience.\n</think>\n\nHere's an example of how to create a purchase functionality using PHP:\n\n### Step 1: Set Up Your Database\n\nFirst, you'll need to create a database to store your products, users, and orders.\n\n```sql\n-- Create users table\nCREATE TABLE users (\n    id INT AUTO_INCREMENT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) UNIQUE NOT NULL,\n    password_hash VARCHAR(255) NOT NULL\n);\n\n-- Create products table\nCREATE TABLE products (\n    id INT AUTO_INCREMENT PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    description TEXT NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    stock_quantity INT NOT NULL DEFAULT 0\n);\n\n-- Create orders table\nCREATE TABLE orders (\n    id INT AUTO_INCREMENT PRIMARY KEY,\n    user_id INT NOT NULL,\n    product_id INT NOT NULL,\n    quantity INT NOT NULL,\n    total_price DECIMAL(10, 2) NOT NULL,\n    purchase_date DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    FOREIGN KEY (user_id) REFERENCES users(id),\n    FOREIGN KEY (product_id) REFERENCES products(id)\n);\n```\n\n### Step 2: Create a Registration Page\n\n```php\n<?php\nsession_start();\ninclude 'db_connection.php';\n\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    $name = $_POST['name'];\n    $email = $_POST['email'];\n    $password = password_hash($_POST['password'], PASSWORD_DEFAULT);\n\n    $sql = \"INSERT INTO users (name, email, password_hash) VALUES (?, ?, ?)\";\n    $stmt = $conn->prepare($sql);\n    $stmt->bind_param(\"sss\", $name, $email, $password);\n    \n    if ($stmt->execute()) {\n        echo \"Registration successful!\";\n        header(\"Location: login.php\");\n        exit();\n    } else {\n        echo \"Error registering user.\";\n    }\n}\n?>\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Register</title>\n</head>\n<body>\n    <h1>Register</h1>\n    <form method=\"post\">\n        <input type=\"text\" name=\"name\" placeholder=\"Enter your name\" required><br><br>\n        <input type=\"email\" name=\"email\" placeholder=\"Enter your email\" required><br><br>\n        <input type=\"password\" name=\"password\" placeholder=\"Enter password\" required><br><br>\n        <button type=\"submit\">Register</button>\n    </form>\n</body>\n</html>\n```\n\n### Step 3: Create a Login Page\n\n```php\n<?php\nsession_start();\ninclude 'db_connection.php';\n\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    $email = $_POST['email'];\n    $password = $_POST['password'];\n\n    $sql = \"SELECT * FROM users WHERE email=?\";\n    $stmt = $conn->prepare($sql);\n    $stmt->bind_param(\"s\", $email);\n    $stmt->execute();\n    $result = $stmt->get_result();\n\n    if ($result->num_rows == 1) {\n        $user = $result->fetch_assoc();\n        if (password_verify($password, $user['password_hash'])) {\n            $_SESSION['user_id'] = $user['id'];\n            $_SESSION['name'] = $user['name'];\n            header(\"Location: products.php\");\n            exit();\n        } else {\n            echo \"Incorrect password.\";\n        }\n    } else {\n        echo \"No user found with this email.\";\n    }\n}\n?>\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Login</title>\n</head>\n<body>\n    <h1>Login</h1>\n    <form method=\"post\">\n        <input type=\"email\" name=\"email\" placeholder=\"Enter your email\" required><br><br>\n        <input type=\"password\" name=\"password\" placeholder=\"Enter password\" required><br><br>\n        <button type=\"submit\">Login</button>\n    </form>\n</body>\n</html>\n```\n\n### Step 4: Create a Product Listing Page\n\n```php\n<?php\nsession_start();\ninclude 'db_connection.php';\n\n$sql = \"SELECT * FROM products\";\n$result = $conn->query($sql);\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Products</title>\n</head>\n<body>\n    <h1>Welcome, <?=$_SESSION['name']?>!</h1>\n    <a href=\"logout.php\">Logout</a><br><br>\n    \n    <?php while ($product = $result->fetch_assoc()): ?>\n        <div style=\"border: 1px solid #ddd; padding: 10px;\">\n            <h2><?php echo $product['product_name']; ?></h2>\n            <p><?php echo $product['description']; ?></p>\n            <p>Price: <?php echo $product['price']; ?>$</p>\n            <p>Available Quantity: <?php echo $product['stock_quantity']; ?></p>\n            <form action=\"add_to_cart.php\" method=\"post\">\n                <input type=\"hidden\" name=\"product_id\" value=\"<?php echo $product['id']; ?>\">\n                <input type=\"number\" name=\"quantity\" min=\"1\" max=\"<?php echo $product['stock_quantity']; ?>\" required>\n                <button type=\"submit\">Add to Cart</button>\n            </form>\n        </div><br>\n    <?php endwhile; ?>\n    \n    <a href=\"cart.php\">View Cart</a>\n</body>\n</html>\n```\n\n### Step 5: Create an Add to Cart Page\n\n```php\n<?php\nsession_start();\ninclude 'db_connection.php';\n\nif (isset($_POST['product_id']) && isset($_POST['quantity'])) {\n    $product_id = $_POST['product_id'];\n    $quantity = $_POST['quantity'];\n\n    // Check if product is in stock\n    $sql = \"SELECT * FROM products WHERE id=?\";\n    $stmt = $conn->prepare($sql);\n    $stmt->bind_param(\"i\", $product_id);\n    $stmt->execute();\n    $result = $stmt->get_result();\n\n    if ($result->num_rows > 0) {\n        $product = $result->fetch_assoc();\n        if ($quantity <= $product['stock_quantity']) {\n            // Add to cart\n            if (!isset($_SESSION['cart'])) {\n                $_SESSION['cart'] = array();\n            }\n            \n            if (array_key_exists($product_id, $_SESSION['cart'])) {\n                $_SESSION['cart'][$product_id]['quantity'] += $quantity;\n            } else {\n                $_SESSION['cart'][$product_id] = array(\n                    'product_name' => $product['product_name'],\n                    'price' => $product['price'],\n                    'quantity' => $quantity\n                );\n            }\n            \n            echo \"Product added to cart!\";\n        } else {\n            echo \"Not enough stock available.\";\n        }\n    } else {\n        echo \"Product not found.\";\n    }\n}\n?>\n```\n\n### Step 6: Create a Cart Page\n\n```php\n<?php\nsession_start();\ninclude 'db_connection.php';\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Shopping Cart</title>\n</head>\n<body>\n    <h1>Your Shopping Cart</h1>\n    <a href=\"products.php\">Continue Shopping</a><br><br>\n\n    <?php if (!empty($_SESSION['cart'])): ?>\n        <table border=\"1\">\n            <tr>\n                <th>Product Name</th>\n                <th>Price</th>\n                <th>Quantity</th>\n                <th>Total</th>\n                <th>Action</th>\n            </tr>\n            \n            <?php foreach ($_SESSION['cart'] as $product_id => $item): ?>\n                <tr>\n                    <td><?php echo $item['product_name']; ?></td>\n                    <td><?php echo $item['price']; ?>$</td>\n                    <td><input type=\"number\" name=\"quantity\" min=\"1\" max=\"<?php echo $item['quantity']; ?>\"></td>\n                    <td><?php echo $item['price'] * $item['quantity']; ?>$</td>\n                    <td>\n                        <a href=\"update_cart.php?product_id=<?php echo $product_id; ?>\">Update</a> |\n                        <a href=\"remove_from_cart.php?product_id=<?php echo $product_id; ?>\">Remove</a>\n                    </td>\n                </tr>\n            <?php endforeach; ?>\n        </table><br>\n        \n        <button onclick=\"window.location.href='checkout.php'\">Proceed to Checkout</button>\n    <?php else: ?>\n        <p>Your cart is empty.</p>\n    <?php endif; ?>\n</body>\n</html>\n```\n\n### Step 7: Create a Checkout Page\n\n```php\n<?php\nsession_start();\ninclude 'db_connection.php';\n\n// Get user details from session\n$user_id = $_SESSION['user_id'];\n\nif (isset($_POST['submit'])) {\n    $total_price = 0;\n    \n    foreach ($_SESSION['cart'] as $product_id => $item) {\n        $total_price += $item['price'] * $item['quantity'];\n    }\n    \n    // Insert order into database\n    $sql = \"INSERT INTO orders (user_id, product_id, quantity, total_price) VALUES (?, ?, ?, ?)\";\n    $stmt = $conn->prepare($sql);\n    $stmt->bind_param(\"iidi\", $user_id, $product_id, $item['quantity'], $total_price);\n    \n    if ($stmt->execute()) {\n        // Deduct stock from products table\n        $sql = \"UPDATE products SET stock_quantity=stock_quantity-? WHERE id=?\";\n        $stmt = $conn->prepare($sql);\n        $stmt->bind_param(\"ii\", $item['quantity'], $product_id);\n        $stmt->execute();\n        \n        unset($_SESSION['cart']);\n        echo \"Order placed successfully!\";\n    } else {\n        echo \"Error placing order.\";\n    }\n}\n?>\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Checkout</title>\n</head>\n<body>\n    <h1>Checkout</h1>\n    \n    <form method=\"post\">\n        <input type=\"hidden\" name=\"total_price\" value=\"<?php echo $total_price; ?>\">\n        \n        <p>Shipping Address:</p>\n        <input type=\"text\" name=\"address_line_1\" placeholder=\"Enter address line 1\" required><br>\n        <input type=\"text\" name=\"city\" placeholder=\"Enter city\" required><br>\n        <input type=\"text\" name=\"state\" placeholder=\"Enter state\"><br>\n        <input type=\"text\" name=\"zip_code\" placeholder=\"Enter zip code\" required><br><br>\n        \n        <button type=\"submit\" name=\"submit\">Place Order</button>\n    </form>\n</body>\n</html>\n```\n\n### Step 8: Create an Order Confirmation Page\n\n```php\n<?php\nsession_start();\ninclude 'db_connection.php';\n\nif (isset($_GET['order_id'])) {\n    $order_id = $_GET['order_id'];\n    \n    $sql = \"SELECT * FROM orders WHERE id=?\";\n    $stmt = $conn->prepare($sql);\n    $stmt->bind_param(\"i\", $order_id);\n    $stmt->execute();\n    $result = $stmt->get_result();\n    \n    if ($result->num_rows > 0) {\n        $order = $result->fetch_assoc();\n    } else {\n        die(\"Order not found.\");\n    }\n}\n?>\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Order Confirmation</title>\n</head>\n<body>\n    <h1>Thank you for your purchase!</h1>\n    \n    <p>Your order details:</p>\n    <p>Order ID: <?php echo $order['id']; ?></p>\n    <p>Product: <?php echo $order['product_name']; ?></p>\n    <p>Quantity: <?php echo $order['quantity']; ?></p>\n    <p>Total Price: <?php echo $order['total_price']; ?>$</p>\n    \n    <a href=\"products.php\">Continue Shopping</a>\n</body>\n</html>\n```\n\n### Step 9: Create a Logout Page\n\n```php\n<?php\nsession_start();\nunset($_SESSION['user_id']);\nunset($_SESSION['name']);\nheader(\"Location: login.php\");\nexit();\n?>\n```\n\nThis is a basic implementation of a purchase functionality using PHP. You can enhance it by:\n\n1. Adding more security measures (e.g., CSRF protection, input validation)\n2. Implementing a proper shopping cart system\n3. Adding payment integration with gateways like PayPal or Stripe\n4. Improving the user interface\n5. Adding error handling and logging\n6. Implementing email notifications for orders\n7. Adding an admin panel to manage products and users\n\nRemember to replace `db_connection.php` with your actual database connection details.\n\n```php\n<?php\n$host = 'localhost';\n$dbname = 'your_database_name';\n$username = 'root';\n$password = '';\n\ntry {\n    $conn = new PDO(\"mysql:host=$host;dbname=$dbname\", $username, $password);\n    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);\n} catch(PDOException $e) {\n    echo \"Connection failed: \" . $e->getMessage();\n}\n?>\n```", "code_blocks": [null, "```php\n<?php\nsession_start();\ninclude 'db_connection.php';\n\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    $name = $_POST['name'];\n    $email = $_POST['email'];\n    $password = password_hash($_POST['password'], PASSWORD_DEFAULT);\n\n    $sql = \"INSERT INTO users (name, email, password_hash) VALUES (?, ?, ?)\";\n    $stmt = $conn->prepare($sql);\n    $stmt->bind_param(\"sss\", $name, $email, $password);\n    \n    if ($stmt->execute()) {\n        echo \"Registration successful!\";\n        header(\"Location: login.php\");\n        exit();\n    } else {\n        echo \"Error registering user.\";\n    }\n}\n?>\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Register</title>\n</head>\n<body>\n    <h1>Register</h1>\n    <form method=\"post\">\n        <input type=\"text\" name=\"name\" placeholder=\"Enter your name\" required><br><br>\n        <input type=\"email\" name=\"email\" placeholder=\"Enter your email\" required><br><br>\n        <input type=\"password\" name=\"password\" placeholder=\"Enter password\" required><br><br>\n        <button type=\"submit\">Register</button>\n    </form>\n</body>\n</html>\n```", "```php\n<?php\nsession_start();\ninclude 'db_connection.php';\n\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    $email = $_POST['email'];\n    $password = $_POST['password'];\n\n    $sql = \"SELECT * FROM users WHERE email=?\";\n    $stmt = $conn->prepare($sql);\n    $stmt->bind_param(\"s\", $email);\n    $stmt->execute();\n    $result = $stmt->get_result();\n\n    if ($result->num_rows == 1) {\n        $user = $result->fetch_assoc();\n        if (password_verify($password, $user['password_hash'])) {\n            $_SESSION['user_id'] = $user['id'];\n            $_SESSION['name'] = $user['name'];\n            header(\"Location: products.php\");\n            exit();\n        } else {\n            echo \"Incorrect password.\";\n        }\n    } else {\n        echo \"No user found with this email.\";\n    }\n}\n?>\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Login</title>\n</head>\n<body>\n    <h1>Login</h1>\n    <form method=\"post\">\n        <input type=\"email\" name=\"email\" placeholder=\"Enter your email\" required><br><br>\n        <input type=\"password\" name=\"password\" placeholder=\"Enter password\" required><br><br>\n        <button type=\"submit\">Login</button>\n    </form>\n</body>\n</html>\n```", "```php\n<?php\nsession_start();\ninclude 'db_connection.php';\n\n$sql = \"SELECT * FROM products\";\n$result = $conn->query($sql);\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Products</title>\n</head>\n<body>\n    <h1>Welcome, <?=$_SESSION['name']?>!</h1>\n    <a href=\"logout.php\">Logout</a><br><br>\n    \n    <?php while ($product = $result->fetch_assoc()): ?>\n        <div style=\"border: 1px solid #ddd; padding: 10px;\">\n            <h2><?php echo $product['product_name']; ?></h2>\n            <p><?php echo $product['description']; ?></p>\n            <p>Price: <?php echo $product['price']; ?>$</p>\n            <p>Available Quantity: <?php echo $product['stock_quantity']; ?></p>\n            <form action=\"add_to_cart.php\" method=\"post\">\n                <input type=\"hidden\" name=\"product_id\" value=\"<?php echo $product['id']; ?>\">\n                <input type=\"number\" name=\"quantity\" min=\"1\" max=\"<?php echo $product['stock_quantity']; ?>\" required>\n                <button type=\"submit\">Add to Cart</button>\n            </form>\n        </div><br>\n    <?php endwhile; ?>\n    \n    <a href=\"cart.php\">View Cart</a>\n</body>\n</html>\n```", "```php\n<?php\nsession_start();\ninclude 'db_connection.php';\n\nif (isset($_POST['product_id']) && isset($_POST['quantity'])) {\n    $product_id = $_POST['product_id'];\n    $quantity = $_POST['quantity'];\n\n    // Check if product is in stock\n    $sql = \"SELECT * FROM products WHERE id=?\";\n    $stmt = $conn->prepare($sql);\n    $stmt->bind_param(\"i\", $product_id);\n    $stmt->execute();\n    $result = $stmt->get_result();\n\n    if ($result->num_rows > 0) {\n        $product = $result->fetch_assoc();\n        if ($quantity <= $product['stock_quantity']) {\n            // Add to cart\n            if (!isset($_SESSION['cart'])) {\n                $_SESSION['cart'] = array();\n            }\n            \n            if (array_key_exists($product_id, $_SESSION['cart'])) {\n                $_SESSION['cart'][$product_id]['quantity'] += $quantity;\n            } else {\n                $_SESSION['cart'][$product_id] = array(\n                    'product_name' => $product['product_name'],\n                    'price' => $product['price'],\n                    'quantity' => $quantity\n                );\n            }\n            \n            echo \"Product added to cart!\";\n        } else {\n            echo \"Not enough stock available.\";\n        }\n    } else {\n        echo \"Product not found.\";\n    }\n}\n?>\n```", "```php\n<?php\nsession_start();\ninclude 'db_connection.php';\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Shopping Cart</title>\n</head>\n<body>\n    <h1>Your Shopping Cart</h1>\n    <a href=\"products.php\">Continue Shopping</a><br><br>\n\n    <?php if (!empty($_SESSION['cart'])): ?>\n        <table border=\"1\">\n            <tr>\n                <th>Product Name</th>\n                <th>Price</th>\n                <th>Quantity</th>\n                <th>Total</th>\n                <th>Action</th>\n            </tr>\n            \n            <?php foreach ($_SESSION['cart'] as $product_id => $item): ?>\n                <tr>\n                    <td><?php echo $item['product_name']; ?></td>\n                    <td><?php echo $item['price']; ?>$</td>\n                    <td><input type=\"number\" name=\"quantity\" min=\"1\" max=\"<?php echo $item['quantity']; ?>\"></td>\n                    <td><?php echo $item['price'] * $item['quantity']; ?>$</td>\n                    <td>\n                        <a href=\"update_cart.php?product_id=<?php echo $product_id; ?>\">Update</a> |\n                        <a href=\"remove_from_cart.php?product_id=<?php echo $product_id; ?>\">Remove</a>\n                    </td>\n                </tr>\n            <?php endforeach; ?>\n        </table><br>\n        \n        <button onclick=\"window.location.href='checkout.php'\">Proceed to Checkout</button>\n    <?php else: ?>\n        <p>Your cart is empty.</p>\n    <?php endif; ?>\n</body>\n</html>\n```", "```php\n<?php\nsession_start();\ninclude 'db_connection.php';\n\n// Get user details from session\n$user_id = $_SESSION['user_id'];\n\nif (isset($_POST['submit'])) {\n    $total_price = 0;\n    \n    foreach ($_SESSION['cart'] as $product_id => $item) {\n        $total_price += $item['price'] * $item['quantity'];\n    }\n    \n    // Insert order into database\n    $sql = \"INSERT INTO orders (user_id, product_id, quantity, total_price) VALUES (?, ?, ?, ?)\";\n    $stmt = $conn->prepare($sql);\n    $stmt->bind_param(\"iidi\", $user_id, $product_id, $item['quantity'], $total_price);\n    \n    if ($stmt->execute()) {\n        // Deduct stock from products table\n        $sql = \"UPDATE products SET stock_quantity=stock_quantity-? WHERE id=?\";\n        $stmt = $conn->prepare($sql);\n        $stmt->bind_param(\"ii\", $item['quantity'], $product_id);\n        $stmt->execute();\n        \n        unset($_SESSION['cart']);\n        echo \"Order placed successfully!\";\n    } else {\n        echo \"Error placing order.\";\n    }\n}\n?>\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Checkout</title>\n</head>\n<body>\n    <h1>Checkout</h1>\n    \n    <form method=\"post\">\n        <input type=\"hidden\" name=\"total_price\" value=\"<?php echo $total_price; ?>\">\n        \n        <p>Shipping Address:</p>\n        <input type=\"text\" name=\"address_line_1\" placeholder=\"Enter address line 1\" required><br>\n        <input type=\"text\" name=\"city\" placeholder=\"Enter city\" required><br>\n        <input type=\"text\" name=\"state\" placeholder=\"Enter state\"><br>\n        <input type=\"text\" name=\"zip_code\" placeholder=\"Enter zip code\" required><br><br>\n        \n        <button type=\"submit\" name=\"submit\">Place Order</button>\n    </form>\n</body>\n</html>\n```", "```php\n<?php\nsession_start();\ninclude 'db_connection.php';\n\nif (isset($_GET['order_id'])) {\n    $order_id = $_GET['order_id'];\n    \n    $sql = \"SELECT * FROM orders WHERE id=?\";\n    $stmt = $conn->prepare($sql);\n    $stmt->bind_param(\"i\", $order_id);\n    $stmt->execute();\n    $result = $stmt->get_result();\n    \n    if ($result->num_rows > 0) {\n        $order = $result->fetch_assoc();\n    } else {\n        die(\"Order not found.\");\n    }\n}\n?>\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Order Confirmation</title>\n</head>\n<body>\n    <h1>Thank you for your purchase!</h1>\n    \n    <p>Your order details:</p>\n    <p>Order ID: <?php echo $order['id']; ?></p>\n    <p>Product: <?php echo $order['product_name']; ?></p>\n    <p>Quantity: <?php echo $order['quantity']; ?></p>\n    <p>Total Price: <?php echo $order['total_price']; ?>$</p>\n    \n    <a href=\"products.php\">Continue Shopping</a>\n</body>\n</html>\n```", "```php\n<?php\nsession_start();\nunset($_SESSION['user_id']);\nunset($_SESSION['name']);\nheader(\"Location: login.php\");\nexit();\n?>\n```", "```php\n<?php\n$host = 'localhost';\n$dbname = 'your_database_name';\n$username = 'root';\n$password = '';\n\ntry {\n    $conn = new PDO(\"mysql:host=$host;dbname=$dbname\", $username, $password);\n    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);\n} catch(PDOException $e) {\n    echo \"Connection failed: \" . $e->getMessage();\n}\n?>\n```"]}
