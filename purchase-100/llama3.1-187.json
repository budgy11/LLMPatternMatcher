{"prompt": "Create a purchase functionality using php", "llm_output": "Here is an example of a basic purchase functionality using PHP, including user authentication and validation.\n\n**Note:** This is a simplified example and you should consider implementing additional security measures (e.g., encryption, secure payment gateways) in a real-world application.\n\n### Database Setup\n\nFirst, let's set up the database schema. We'll use MySQL for this example.\n```sql\nCREATE TABLE users (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  email VARCHAR(255) NOT NULL,\n  password VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE products (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  name VARCHAR(255) NOT NULL,\n  price DECIMAL(10,2) NOT NULL\n);\n\nCREATE TABLE orders (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  user_id INT NOT NULL,\n  product_id INT NOT NULL,\n  quantity INT NOT NULL,\n  total_price DECIMAL(10,2) NOT NULL,\n  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n```\n### PHP Code\n\nNext, let's create the PHP code for the purchase functionality.\n\n**`config.php`**\n```php\n<?php\n// Database configuration\n$host = 'localhost';\n$dbname = 'store';\n$username = 'root';\n$password = '';\n\ntry {\n    $conn = new PDO(\"mysql:host=$host;dbname=$dbname\", $username, $password);\n} catch (PDOException $e) {\n    die('ERROR: Unable to connect to database. ' . $e->getMessage());\n}\n```\n**`login.php`**\n```php\n<?php\n// User authentication\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    $email = $_POST['email'];\n    $password = $_POST['password'];\n\n    $stmt = $conn->prepare(\"SELECT * FROM users WHERE email = :email\");\n    $stmt->bindParam(':email', $email);\n    $stmt->execute();\n\n    if ($stmt->rowCount() > 0) {\n        // User found, verify password\n        $user = $stmt->fetch();\n        if (password_verify($password, $user['password'])) {\n            // Login successful, set session variables\n            $_SESSION['user_id'] = $user['id'];\n            header('Location: dashboard.php');\n            exit;\n        }\n    }\n\n    echo 'Invalid email or password';\n}\n?>\n```\n**`product.php`**\n```php\n<?php\n// Display products\n$stmt = $conn->query(\"SELECT * FROM products\");\n$products = $stmt->fetchAll();\n\nforeach ($products as $product) {\n    ?>\n    <div class=\"product\">\n        <h2><?php echo $product['name']; ?></h2>\n        <p>Price: <?php echo $product['price']; ?></p>\n        <form action=\"cart.php\" method=\"post\">\n            <input type=\"hidden\" name=\"product_id\" value=\"<?php echo $product['id']; ?>\">\n            <button type=\"submit\">Add to Cart</button>\n        </form>\n    </div>\n    <?php\n}\n?>\n```\n**`cart.php`**\n```php\n<?php\n// Add product to cart\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    $product_id = $_POST['product_id'];\n    $quantity = 1; // default quantity\n\n    // Check if user is logged in\n    if (!isset($_SESSION['user_id'])) {\n        echo 'You must be logged in to add products to your cart';\n        exit;\n    }\n\n    // Get product price and calculate total price\n    $stmt = $conn->prepare(\"SELECT * FROM products WHERE id = :id\");\n    $stmt->bindParam(':id', $product_id);\n    $stmt->execute();\n    $product = $stmt->fetch();\n    $total_price = $product['price'] * $quantity;\n\n    // Insert order into database\n    $order_id = uniqid();\n    $stmt = $conn->prepare(\"INSERT INTO orders (user_id, product_id, quantity, total_price) VALUES (:user_id, :product_id, :quantity, :total_price)\");\n    $stmt->bindParam(':user_id', $_SESSION['user_id']);\n    $stmt->bindParam(':product_id', $product_id);\n    $stmt->bindParam(':quantity', $quantity);\n    $stmt->bindParam(':total_price', $total_price);\n    $stmt->execute();\n\n    echo 'Product added to cart successfully';\n}\n?>\n```\n**`dashboard.php`**\n```php\n<?php\n// Display user's orders\n$stmt = $conn->prepare(\"SELECT * FROM orders WHERE user_id = :user_id\");\n$stmt->bindParam(':user_id', $_SESSION['user_id']);\n$stmt->execute();\n$orders = $stmt->fetchAll();\n\nforeach ($orders as $order) {\n    ?>\n    <div class=\"order\">\n        <h2>Order #<?php echo $order['id']; ?></h2>\n        <p>Product: <?php echo $conn->prepare(\"SELECT name FROM products WHERE id = :id\")->bindParam(':id', $order['product_id'])->execute()->fetch()['name']; ?></p>\n        <p>Quantity: <?php echo $order['quantity']; ?></p>\n        <p>Total Price: <?php echo $order['total_price']; ?></p>\n    </div>\n    <?php\n}\n?>\n```\nThis is a basic example of a purchase functionality using PHP, including user authentication and validation. You should consider implementing additional security measures (e.g., encryption, secure payment gateways) in a real-world application.\n\nNote: This code is for illustration purposes only and may not work as-is in your production environment. You will need to modify it to fit your specific requirements and ensure that it meets all relevant security standards.", "code_blocks": [null, "```php\n<?php\n// Database configuration\n$host = 'localhost';\n$dbname = 'store';\n$username = 'root';\n$password = '';\n\ntry {\n    $conn = new PDO(\"mysql:host=$host;dbname=$dbname\", $username, $password);\n} catch (PDOException $e) {\n    die('ERROR: Unable to connect to database. ' . $e->getMessage());\n}\n```", "```php\n<?php\n// User authentication\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    $email = $_POST['email'];\n    $password = $_POST['password'];\n\n    $stmt = $conn->prepare(\"SELECT * FROM users WHERE email = :email\");\n    $stmt->bindParam(':email', $email);\n    $stmt->execute();\n\n    if ($stmt->rowCount() > 0) {\n        // User found, verify password\n        $user = $stmt->fetch();\n        if (password_verify($password, $user['password'])) {\n            // Login successful, set session variables\n            $_SESSION['user_id'] = $user['id'];\n            header('Location: dashboard.php');\n            exit;\n        }\n    }\n\n    echo 'Invalid email or password';\n}\n?>\n```", "```php\n<?php\n// Display products\n$stmt = $conn->query(\"SELECT * FROM products\");\n$products = $stmt->fetchAll();\n\nforeach ($products as $product) {\n    ?>\n    <div class=\"product\">\n        <h2><?php echo $product['name']; ?></h2>\n        <p>Price: <?php echo $product['price']; ?></p>\n        <form action=\"cart.php\" method=\"post\">\n            <input type=\"hidden\" name=\"product_id\" value=\"<?php echo $product['id']; ?>\">\n            <button type=\"submit\">Add to Cart</button>\n        </form>\n    </div>\n    <?php\n}\n?>\n```", "```php\n<?php\n// Add product to cart\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    $product_id = $_POST['product_id'];\n    $quantity = 1; // default quantity\n\n    // Check if user is logged in\n    if (!isset($_SESSION['user_id'])) {\n        echo 'You must be logged in to add products to your cart';\n        exit;\n    }\n\n    // Get product price and calculate total price\n    $stmt = $conn->prepare(\"SELECT * FROM products WHERE id = :id\");\n    $stmt->bindParam(':id', $product_id);\n    $stmt->execute();\n    $product = $stmt->fetch();\n    $total_price = $product['price'] * $quantity;\n\n    // Insert order into database\n    $order_id = uniqid();\n    $stmt = $conn->prepare(\"INSERT INTO orders (user_id, product_id, quantity, total_price) VALUES (:user_id, :product_id, :quantity, :total_price)\");\n    $stmt->bindParam(':user_id', $_SESSION['user_id']);\n    $stmt->bindParam(':product_id', $product_id);\n    $stmt->bindParam(':quantity', $quantity);\n    $stmt->bindParam(':total_price', $total_price);\n    $stmt->execute();\n\n    echo 'Product added to cart successfully';\n}\n?>\n```", "```php\n<?php\n// Display user's orders\n$stmt = $conn->prepare(\"SELECT * FROM orders WHERE user_id = :user_id\");\n$stmt->bindParam(':user_id', $_SESSION['user_id']);\n$stmt->execute();\n$orders = $stmt->fetchAll();\n\nforeach ($orders as $order) {\n    ?>\n    <div class=\"order\">\n        <h2>Order #<?php echo $order['id']; ?></h2>\n        <p>Product: <?php echo $conn->prepare(\"SELECT name FROM products WHERE id = :id\")->bindParam(':id', $order['product_id'])->execute()->fetch()['name']; ?></p>\n        <p>Quantity: <?php echo $order['quantity']; ?></p>\n        <p>Total Price: <?php echo $order['total_price']; ?></p>\n    </div>\n    <?php\n}\n?>\n```"]}
