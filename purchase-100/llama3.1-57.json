{"prompt": "Create a purchase cart functionality using php", "llm_output": "Here is an example of a basic purchase cart functionality using PHP:\n\n**cart.php**\n```php\n<?php\n\n// Initialize session\nsession_start();\n\n// Define cart array in session\nif (!isset($_SESSION['cart'])) {\n    $_SESSION['cart'] = array();\n}\n\n// Function to add item to cart\nfunction add_item_to_cart($item_id, $quantity) {\n    // Check if item already exists in cart\n    foreach ($_SESSION['cart'] as &$item) {\n        if ($item['id'] == $item_id) {\n            // Increment quantity of existing item\n            $item['quantity'] += $quantity;\n            return;\n        }\n    }\n\n    // Add new item to cart\n    $_SESSION['cart'][] = array('id' => $item_id, 'quantity' => $quantity);\n}\n\n// Function to remove item from cart\nfunction remove_item_from_cart($item_id) {\n    // Find index of item in cart\n    foreach ($_SESSION['cart'] as &$item) {\n        if ($item['id'] == $item_id) {\n            unset($item);\n            return;\n        }\n    }\n\n    // Remove empty element\n    array_splice($_SESSION['cart'], array_search(false, $_SESSION['cart']), 1);\n}\n\n// Function to update quantity of item in cart\nfunction update_item_quantity($item_id, $new_quantity) {\n    // Find index of item in cart\n    foreach ($_SESSION['cart'] as &$item) {\n        if ($item['id'] == $item_id) {\n            $item['quantity'] = $new_quantity;\n            return;\n        }\n    }\n}\n\n// Function to calculate total cost of items in cart\nfunction calculate_total_cost() {\n    $total_cost = 0;\n\n    // Iterate over each item in cart\n    foreach ($_SESSION['cart'] as $item) {\n        // Assume price is stored in a database or array for simplicity\n        $price = get_price($item['id']);\n        $total_cost += $price * $item['quantity'];\n    }\n\n    return $total_cost;\n}\n\n// Function to display cart contents\nfunction display_cart_contents() {\n    echo '<h2>Cart Contents:</h2>';\n    echo '<table border=\"1\">';\n    echo '<tr><th>Item ID</th><th>Quantity</th><th>Price</th></tr>';\n\n    // Iterate over each item in cart\n    foreach ($_SESSION['cart'] as $item) {\n        echo '<tr>';\n        echo '<td>' . $item['id'] . '</td>';\n        echo '<td>' . $item['quantity'] . '</td>';\n        echo '<td>$' . get_price($item['id']) . '</td>';\n        echo '</tr>';\n    }\n\n    echo '</table>';\n}\n\n// Function to process checkout\nfunction process_checkout() {\n    // Assume payment processing is handled separately for simplicity\n    echo 'Thank you for your purchase!';\n}\n\n?>\n```\n\n**cart.html**\n```html\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Cart</title>\n</head>\n<body>\n\n    <?php include 'cart.php'; ?>\n\n    <h1>Cart:</h1>\n\n    <!-- Form to add item to cart -->\n    <form action=\"\" method=\"post\">\n        <label for=\"item_id\">Item ID:</label>\n        <input type=\"text\" id=\"item_id\" name=\"item_id\"><br><br>\n        <label for=\"quantity\">Quantity:</label>\n        <input type=\"number\" id=\"quantity\" name=\"quantity\"><br><br>\n        <input type=\"submit\" value=\"Add to Cart\">\n    </form>\n\n    <!-- Form to remove item from cart -->\n    <form action=\"\" method=\"post\">\n        <label for=\"remove_item_id\">Item ID:</label>\n        <input type=\"text\" id=\"remove_item_id\" name=\"remove_item_id\"><br><br>\n        <input type=\"submit\" value=\"Remove from Cart\">\n    </form>\n\n    <!-- Display cart contents -->\n    <?php display_cart_contents(); ?>\n\n    <!-- Form to checkout -->\n    <form action=\"\" method=\"post\">\n        <input type=\"submit\" value=\"Checkout\">\n    </form>\n\n</body>\n</html>\n```\n\n**cart.js**\n```javascript\n// Add event listener to add item to cart form\ndocument.querySelector('form#add_item').addEventListener('submit', function(event) {\n    event.preventDefault();\n    var item_id = document.querySelector('input[name=item_id]').value;\n    var quantity = parseInt(document.querySelector('input[name=quantity]').value);\n    add_item_to_cart(item_id, quantity);\n});\n\n// Add event listener to remove item from cart form\ndocument.querySelector('form#remove_item').addEventListener('submit', function(event) {\n    event.preventDefault();\n    var item_id = document.querySelector('input[name=remove_item_id]').value;\n    remove_item_from_cart(item_id);\n});\n\n// Add event listener to checkout form\ndocument.querySelector('form#checkout').addEventListener('submit', function(event) {\n    event.preventDefault();\n    process_checkout();\n});\n```\n\n**get_price.php**\n```php\n<?php\n\n// Assume price is stored in a database or array for simplicity\nfunction get_price($item_id) {\n    // Replace with actual database query or array lookup\n    $prices = array(\n        '1' => 9.99,\n        '2' => 19.99,\n        '3' => 29.99\n    );\n    return $prices[$item_id];\n}\n\n?>\n```\n\nThis example includes the following functionality:\n\n*   A cart array is stored in the session, where each item is represented by its ID and quantity.\n*   The `add_item_to_cart` function adds a new item to the cart or increments the quantity of an existing item.\n*   The `remove_item_from_cart` function removes an item from the cart.\n*   The `update_item_quantity` function updates the quantity of an item in the cart.\n*   The `calculate_total_cost` function calculates the total cost of all items in the cart.\n*   The `display_cart_contents` function displays the contents of the cart, including each item's ID, quantity, and price.\n*   The `process_checkout` function processes checkout (e.g., handles payment processing).\n*   Forms are included for adding an item to the cart, removing an item from the cart, and checking out.\n\nNote that this is a basic example, and you may need to modify it to fit your specific requirements. Additionally, this example assumes that prices are stored in a database or array for simplicity. In a real-world application, you would likely retrieve prices from a database using SQL queries.", "code_blocks": ["```php\n<?php\n\n// Initialize session\nsession_start();\n\n// Define cart array in session\nif (!isset($_SESSION['cart'])) {\n    $_SESSION['cart'] = array();\n}\n\n// Function to add item to cart\nfunction add_item_to_cart($item_id, $quantity) {\n    // Check if item already exists in cart\n    foreach ($_SESSION['cart'] as &$item) {\n        if ($item['id'] == $item_id) {\n            // Increment quantity of existing item\n            $item['quantity'] += $quantity;\n            return;\n        }\n    }\n\n    // Add new item to cart\n    $_SESSION['cart'][] = array('id' => $item_id, 'quantity' => $quantity);\n}\n\n// Function to remove item from cart\nfunction remove_item_from_cart($item_id) {\n    // Find index of item in cart\n    foreach ($_SESSION['cart'] as &$item) {\n        if ($item['id'] == $item_id) {\n            unset($item);\n            return;\n        }\n    }\n\n    // Remove empty element\n    array_splice($_SESSION['cart'], array_search(false, $_SESSION['cart']), 1);\n}\n\n// Function to update quantity of item in cart\nfunction update_item_quantity($item_id, $new_quantity) {\n    // Find index of item in cart\n    foreach ($_SESSION['cart'] as &$item) {\n        if ($item['id'] == $item_id) {\n            $item['quantity'] = $new_quantity;\n            return;\n        }\n    }\n}\n\n// Function to calculate total cost of items in cart\nfunction calculate_total_cost() {\n    $total_cost = 0;\n\n    // Iterate over each item in cart\n    foreach ($_SESSION['cart'] as $item) {\n        // Assume price is stored in a database or array for simplicity\n        $price = get_price($item['id']);\n        $total_cost += $price * $item['quantity'];\n    }\n\n    return $total_cost;\n}\n\n// Function to display cart contents\nfunction display_cart_contents() {\n    echo '<h2>Cart Contents:</h2>';\n    echo '<table border=\"1\">';\n    echo '<tr><th>Item ID</th><th>Quantity</th><th>Price</th></tr>';\n\n    // Iterate over each item in cart\n    foreach ($_SESSION['cart'] as $item) {\n        echo '<tr>';\n        echo '<td>' . $item['id'] . '</td>';\n        echo '<td>' . $item['quantity'] . '</td>';\n        echo '<td>$' . get_price($item['id']) . '</td>';\n        echo '</tr>';\n    }\n\n    echo '</table>';\n}\n\n// Function to process checkout\nfunction process_checkout() {\n    // Assume payment processing is handled separately for simplicity\n    echo 'Thank you for your purchase!';\n}\n\n?>\n```", null, null, "```php\n<?php\n\n// Assume price is stored in a database or array for simplicity\nfunction get_price($item_id) {\n    // Replace with actual database query or array lookup\n    $prices = array(\n        '1' => 9.99,\n        '2' => 19.99,\n        '3' => 29.99\n    );\n    return $prices[$item_id];\n}\n\n?>\n```"]}
