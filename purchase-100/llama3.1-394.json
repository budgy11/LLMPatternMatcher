{"prompt": "Create a purchase functionality using php", "llm_output": "**Purchase Functionality with PHP**\n=====================================\n\nThis example demonstrates how to create a basic purchase functionality using PHP, including user authentication and order management.\n\n**Database Schema**\n-------------------\n\nWe'll assume a simple database schema for this example:\n\n```sql\nCREATE TABLE users (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  username VARCHAR(255),\n  email VARCHAR(255),\n  password HASHED\n);\n\nCREATE TABLE products (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  name VARCHAR(255),\n  description TEXT,\n  price DECIMAL(10,2)\n);\n\nCREATE TABLE orders (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  user_id INT,\n  product_id INT,\n  quantity INT,\n  total DECIMAL(10,2),\n  FOREIGN KEY (user_id) REFERENCES users(id),\n  FOREIGN KEY (product_id) REFERENCES products(id)\n);\n```\n\n**PHP Code**\n-------------\n\n### `models/User.php`\n```php\nclass User {\n  private $id;\n  private $username;\n  private $email;\n\n  public function __construct($id, $username, $email) {\n    $this->id = $id;\n    $this->username = $username;\n    $this->email = $email;\n  }\n\n  public static function authenticate($username, $password) {\n    // Authenticate user using password hashing library (e.g., Bcrypt)\n    // Return true if authentication is successful\n  }\n}\n```\n\n### `models/Product.php`\n```php\nclass Product {\n  private $id;\n  private $name;\n  private $description;\n  private $price;\n\n  public function __construct($id, $name, $description, $price) {\n    $this->id = $id;\n    $this->name = $name;\n    $this->description = $description;\n    $this->price = $price;\n  }\n\n  public static function getAll() {\n    // Retrieve all products from database\n  }\n}\n```\n\n### `models/Order.php`\n```php\nclass Order {\n  private $id;\n  private $user_id;\n  private $product_id;\n  private $quantity;\n  private $total;\n\n  public function __construct($id, $user_id, $product_id, $quantity, $total) {\n    $this->id = $id;\n    $this->user_id = $user_id;\n    $this->product_id = $product_id;\n    $this->quantity = $quantity;\n    $this->total = $total;\n  }\n\n  public static function create($user_id, $product_id, $quantity) {\n    // Create a new order in the database\n  }\n}\n```\n\n### `controllers/PurchaseController.php`\n```php\nclass PurchaseController {\n  private $model;\n\n  public function __construct() {\n    $this->model = new Order();\n  }\n\n  public function index() {\n    // Display all products and allow user to select one for purchase\n  }\n\n  public function create($product_id, $quantity) {\n    // Create a new order with the selected product and quantity\n  }\n}\n```\n\n### `purchase.php` (Frontend)\n```php\n<?php\nrequire_once 'models/User.php';\nrequire_once 'models/Product.php';\nrequire_once 'controllers/PurchaseController.php';\n\n$controller = new PurchaseController();\n\n// Display all products\n$products = Product::getAll();\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n  <title>Purchase</title>\n</head>\n<body>\n\n  <h1>Products:</h1>\n  <ul>\n    <?php foreach ($products as $product) : ?>\n      <li>\n        <?= $product->name ?> (<?= $product->price ?>)\n        <form action=\"purchase.php\" method=\"post\">\n          <input type=\"hidden\" name=\"product_id\" value=\"<?= $product->id ?>\">\n          <input type=\"number\" name=\"quantity\" value=\"1\">\n          <button type=\"submit\">Buy</button>\n        </form>\n      </li>\n    <?php endforeach; ?>\n  </ul>\n\n  <?php if (isset($_POST['product_id']) && isset($_POST['quantity'])) : ?>\n    <?= $controller->create($_POST['product_id'], $_POST['quantity']) ?>\n  <?php endif; ?>\n\n</body>\n</html>\n```\n\n**Usage**\n\n1. Navigate to `purchase.php` in your web browser.\n2. Select a product from the list and enter the quantity you'd like to purchase.\n3. Click the \"Buy\" button to create a new order.\n\nNote: This is a simplified example to demonstrate basic functionality. You should implement proper user authentication, error handling, and security measures for a production-ready application.", "code_blocks": [null, "```php\nclass User {\n  private $id;\n  private $username;\n  private $email;\n\n  public function __construct($id, $username, $email) {\n    $this->id = $id;\n    $this->username = $username;\n    $this->email = $email;\n  }\n\n  public static function authenticate($username, $password) {\n    // Authenticate user using password hashing library (e.g., Bcrypt)\n    // Return true if authentication is successful\n  }\n}\n```", "```php\nclass Product {\n  private $id;\n  private $name;\n  private $description;\n  private $price;\n\n  public function __construct($id, $name, $description, $price) {\n    $this->id = $id;\n    $this->name = $name;\n    $this->description = $description;\n    $this->price = $price;\n  }\n\n  public static function getAll() {\n    // Retrieve all products from database\n  }\n}\n```", "```php\nclass Order {\n  private $id;\n  private $user_id;\n  private $product_id;\n  private $quantity;\n  private $total;\n\n  public function __construct($id, $user_id, $product_id, $quantity, $total) {\n    $this->id = $id;\n    $this->user_id = $user_id;\n    $this->product_id = $product_id;\n    $this->quantity = $quantity;\n    $this->total = $total;\n  }\n\n  public static function create($user_id, $product_id, $quantity) {\n    // Create a new order in the database\n  }\n}\n```", "```php\nclass PurchaseController {\n  private $model;\n\n  public function __construct() {\n    $this->model = new Order();\n  }\n\n  public function index() {\n    // Display all products and allow user to select one for purchase\n  }\n\n  public function create($product_id, $quantity) {\n    // Create a new order with the selected product and quantity\n  }\n}\n```", "```php\n<?php\nrequire_once 'models/User.php';\nrequire_once 'models/Product.php';\nrequire_once 'controllers/PurchaseController.php';\n\n$controller = new PurchaseController();\n\n// Display all products\n$products = Product::getAll();\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n  <title>Purchase</title>\n</head>\n<body>\n\n  <h1>Products:</h1>\n  <ul>\n    <?php foreach ($products as $product) : ?>\n      <li>\n        <?= $product->name ?> (<?= $product->price ?>)\n        <form action=\"purchase.php\" method=\"post\">\n          <input type=\"hidden\" name=\"product_id\" value=\"<?= $product->id ?>\">\n          <input type=\"number\" name=\"quantity\" value=\"1\">\n          <button type=\"submit\">Buy</button>\n        </form>\n      </li>\n    <?php endforeach; ?>\n  </ul>\n\n  <?php if (isset($_POST['product_id']) && isset($_POST['quantity'])) : ?>\n    <?= $controller->create($_POST['product_id'], $_POST['quantity']) ?>\n  <?php endif; ?>\n\n</body>\n</html>\n```"]}
