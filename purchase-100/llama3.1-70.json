{"prompt": "Create a purchase cart functionality using php", "llm_output": "Here is an example of a simple purchase cart functionality implemented in PHP:\n\n**cart.php**\n```php\n<?php\n// Initialize session\nsession_start();\n\n// Set default values for cart\n$_SESSION['cart'] = array();\n$cart = $_SESSION['cart'];\n\n// Function to add item to cart\nfunction add_to_cart($item_id, $quantity) {\n  global $cart;\n  if (array_key_exists($item_id, $cart)) {\n    $cart[$item_id] += $quantity;\n  } else {\n    $cart[$item_id] = $quantity;\n  }\n}\n\n// Function to remove item from cart\nfunction remove_from_cart($item_id) {\n  global $cart;\n  unset($cart[$item_id]);\n}\n\n// Function to update quantity in cart\nfunction update_quantity($item_id, $new_quantity) {\n  global $cart;\n  if (array_key_exists($item_id, $cart)) {\n    $cart[$item_id] = $new_quantity;\n  }\n}\n\n// Function to get total cost of items in cart\nfunction get_total_cost() {\n  global $cart;\n  $total_cost = 0;\n  foreach ($cart as $item_id => $quantity) {\n    // Assume prices are stored in a database or an array for simplicity\n    $prices = array(\n      'product1' => 9.99,\n      'product2' => 14.99,\n      // Add more products here...\n    );\n    if (array_key_exists($item_id, $prices)) {\n      $total_cost += $quantity * $prices[$item_id];\n    }\n  }\n  return $total_cost;\n}\n\n// Function to display cart contents\nfunction display_cart() {\n  global $cart;\n  echo '<h2>Cart Contents:</h2>';\n  foreach ($cart as $item_id => $quantity) {\n    // Assume product names are stored in a database or an array for simplicity\n    $product_names = array(\n      'product1' => 'Product 1',\n      'product2' => 'Product 2',\n      // Add more products here...\n    );\n    if (array_key_exists($item_id, $product_names)) {\n      echo '<p>' . $quantity . ' x ' . $product_names[$item_id] . '</p>';\n    }\n  }\n}\n?>\n```\n**index.php**\n```php\n<?php\nrequire_once 'cart.php';\n\n// Display cart contents and add item to cart form\ndisplay_cart();\n\necho '<form action=\"add_to_cart.php\" method=\"post\">';\necho '<select name=\"product\">';\nforeach (array('product1', 'product2') as $product) {\n  echo '<option value=\"' . $product . '\">' . $product . '</option>';\n}\necho '</select>';\necho '<input type=\"number\" name=\"quantity\" min=\"1\">';\necho '<button type=\"submit\">Add to Cart</button>';\necho '</form>';\n\n// Display total cost of items in cart\necho '<p>Total Cost: ' . get_total_cost() . '</p>';\n?>\n```\n**add_to_cart.php**\n```php\n<?php\nrequire_once 'cart.php';\n\n// Get product ID and quantity from form submission\n$product_id = $_POST['product'];\n$quantity = (int) $_POST['quantity'];\n\n// Add item to cart\nadd_to_cart($product_id, $quantity);\n\n// Redirect back to index.php with updated cart contents\nheader('Location: index.php');\nexit;\n?>\n```\nThis example demonstrates a basic purchase cart functionality using PHP. The `cart.php` file contains the core functions for managing the cart, while the `index.php` file displays the cart contents and an add item to cart form. When the user submits the form, the `add_to_cart.php` script adds the item to the cart and redirects back to `index.php`.\n\nNote that this is a simplified example and you may want to add more features, such as:\n\n* User authentication and session management\n* Product database integration for retrieving prices and names\n* Cart validation (e.g., checking if the product exists in the database)\n* Payment gateway integration\n\nAlso, this example uses a simple `$_SESSION` array to store the cart contents. You may want to consider using a more robust storage solution, such as a database, depending on your application's requirements.", "code_blocks": ["```php\n<?php\n// Initialize session\nsession_start();\n\n// Set default values for cart\n$_SESSION['cart'] = array();\n$cart = $_SESSION['cart'];\n\n// Function to add item to cart\nfunction add_to_cart($item_id, $quantity) {\n  global $cart;\n  if (array_key_exists($item_id, $cart)) {\n    $cart[$item_id] += $quantity;\n  } else {\n    $cart[$item_id] = $quantity;\n  }\n}\n\n// Function to remove item from cart\nfunction remove_from_cart($item_id) {\n  global $cart;\n  unset($cart[$item_id]);\n}\n\n// Function to update quantity in cart\nfunction update_quantity($item_id, $new_quantity) {\n  global $cart;\n  if (array_key_exists($item_id, $cart)) {\n    $cart[$item_id] = $new_quantity;\n  }\n}\n\n// Function to get total cost of items in cart\nfunction get_total_cost() {\n  global $cart;\n  $total_cost = 0;\n  foreach ($cart as $item_id => $quantity) {\n    // Assume prices are stored in a database or an array for simplicity\n    $prices = array(\n      'product1' => 9.99,\n      'product2' => 14.99,\n      // Add more products here...\n    );\n    if (array_key_exists($item_id, $prices)) {\n      $total_cost += $quantity * $prices[$item_id];\n    }\n  }\n  return $total_cost;\n}\n\n// Function to display cart contents\nfunction display_cart() {\n  global $cart;\n  echo '<h2>Cart Contents:</h2>';\n  foreach ($cart as $item_id => $quantity) {\n    // Assume product names are stored in a database or an array for simplicity\n    $product_names = array(\n      'product1' => 'Product 1',\n      'product2' => 'Product 2',\n      // Add more products here...\n    );\n    if (array_key_exists($item_id, $product_names)) {\n      echo '<p>' . $quantity . ' x ' . $product_names[$item_id] . '</p>';\n    }\n  }\n}\n?>\n```", "```php\n<?php\nrequire_once 'cart.php';\n\n// Display cart contents and add item to cart form\ndisplay_cart();\n\necho '<form action=\"add_to_cart.php\" method=\"post\">';\necho '<select name=\"product\">';\nforeach (array('product1', 'product2') as $product) {\n  echo '<option value=\"' . $product . '\">' . $product . '</option>';\n}\necho '</select>';\necho '<input type=\"number\" name=\"quantity\" min=\"1\">';\necho '<button type=\"submit\">Add to Cart</button>';\necho '</form>';\n\n// Display total cost of items in cart\necho '<p>Total Cost: ' . get_total_cost() . '</p>';\n?>\n```", "```php\n<?php\nrequire_once 'cart.php';\n\n// Get product ID and quantity from form submission\n$product_id = $_POST['product'];\n$quantity = (int) $_POST['quantity'];\n\n// Add item to cart\nadd_to_cart($product_id, $quantity);\n\n// Redirect back to index.php with updated cart contents\nheader('Location: index.php');\nexit;\n?>\n```"]}
