{"prompt": "Create a purchase functionality using php", "llm_output": "Here is an example of a simple purchase functionality in PHP:\n\n**Note:** This is a basic implementation and you may want to add more features such as user authentication, payment gateways, inventory management, etc.\n\n**Database Schema:**\n\nWe will use a simple database schema with the following tables:\n\n* `users`: stores user information\n* `products`: stores product information\n* `orders`: stores order information\n\n```sql\nCREATE TABLE users (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  name VARCHAR(255),\n  email VARCHAR(255)\n);\n\nCREATE TABLE products (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  name VARCHAR(255),\n  price DECIMAL(10,2)\n);\n\nCREATE TABLE orders (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  user_id INT,\n  product_id INT,\n  order_date DATE,\n  total DECIMAL(10,2),\n  FOREIGN KEY (user_id) REFERENCES users(id),\n  FOREIGN KEY (product_id) REFERENCES products(id)\n);\n```\n\n**PHP Code:**\n\nWe will use a simple PHP script to handle the purchase functionality. We will use `mysqli` extension for database operations.\n\n```php\n// config.php\n<?php\n$host = 'localhost';\n$dbname = 'example_db';\n$username = 'root';\n$password = '';\n\n$conn = new mysqli($host, $username, $password, $dbname);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n?>\n\n// functions.php\n<?php\nfunction add_product($name, $price) {\n    global $conn;\n    $query = \"INSERT INTO products (name, price) VALUES ('$name', '$price')\";\n    if ($conn->query($query)) {\n        return true;\n    } else {\n        echo \"Error: \" . $conn->error;\n        return false;\n    }\n}\n\nfunction get_products() {\n    global $conn;\n    $query = \"SELECT * FROM products\";\n    $result = $conn->query($query);\n    if ($result) {\n        $products = array();\n        while ($row = $result->fetch_assoc()) {\n            $products[] = $row;\n        }\n        return $products;\n    } else {\n        echo \"Error: \" . $conn->error;\n        return false;\n    }\n}\n\nfunction purchase($user_id, $product_id) {\n    global $conn;\n    $query = \"INSERT INTO orders (user_id, product_id, order_date, total)\n              VALUES ('$user_id', '$product_id', NOW(), (SELECT price FROM products WHERE id='$product_id'))\";\n    if ($conn->query($query)) {\n        return true;\n    } else {\n        echo \"Error: \" . $conn->error;\n        return false;\n    }\n}\n?>\n\n// purchase.php\n<?php\nrequire_once 'config.php';\nrequire_once 'functions.php';\n\nif (isset($_POST['submit'])) {\n    $user_id = $_POST['user_id'];\n    $product_id = $_POST['product_id'];\n\n    if ($purchase($user_id, $product_id)) {\n        echo \"Purchase successful!\";\n    } else {\n        echo \"Error purchasing product.\";\n    }\n}\n\n$products = get_products();\n?>\n\n<html>\n  <body>\n    <?php foreach ($products as $product) { ?>\n      <p>\n        <b><?php echo $product['name']; ?></b> - $<?php echo number_format($product['price'], 2); ?>\n        <form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n          <input type=\"hidden\" name=\"user_id\" value=\"<?php echo $_POST['user_id']; ?>\">\n          <input type=\"hidden\" name=\"product_id\" value=\"<?php echo $product['id']; ?>\">\n          <button type=\"submit\" name=\"submit\">Purchase</button>\n        </form>\n      </p>\n    <?php } ?>\n  </body>\n</html>\n```\n\n**Usage:**\n\n1. Create a new page called `purchase.php` and add the code above.\n2. Add the `config.php` file to the same directory as `purchase.php`.\n3. Run the script in your browser.\n\nThis will display a list of products with a purchase button next to each one. When you click on a product, it will submit a form with the user ID and product ID as hidden fields. The `purchase()` function is called when the form is submitted, which inserts a new order into the database if everything goes smoothly.\n\nPlease note that this is a basic example and does not include any error handling or validation for the input data. You should add these features to make your application more robust.\n\nAlso, you need to replace `localhost`, `example_db`, `root` and an empty password with your actual MySQL server host, database name, username and password respectively.", "code_blocks": [null, "```php\n// config.php\n<?php\n$host = 'localhost';\n$dbname = 'example_db';\n$username = 'root';\n$password = '';\n\n$conn = new mysqli($host, $username, $password, $dbname);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n?>\n\n// functions.php\n<?php\nfunction add_product($name, $price) {\n    global $conn;\n    $query = \"INSERT INTO products (name, price) VALUES ('$name', '$price')\";\n    if ($conn->query($query)) {\n        return true;\n    } else {\n        echo \"Error: \" . $conn->error;\n        return false;\n    }\n}\n\nfunction get_products() {\n    global $conn;\n    $query = \"SELECT * FROM products\";\n    $result = $conn->query($query);\n    if ($result) {\n        $products = array();\n        while ($row = $result->fetch_assoc()) {\n            $products[] = $row;\n        }\n        return $products;\n    } else {\n        echo \"Error: \" . $conn->error;\n        return false;\n    }\n}\n\nfunction purchase($user_id, $product_id) {\n    global $conn;\n    $query = \"INSERT INTO orders (user_id, product_id, order_date, total)\n              VALUES ('$user_id', '$product_id', NOW(), (SELECT price FROM products WHERE id='$product_id'))\";\n    if ($conn->query($query)) {\n        return true;\n    } else {\n        echo \"Error: \" . $conn->error;\n        return false;\n    }\n}\n?>\n\n// purchase.php\n<?php\nrequire_once 'config.php';\nrequire_once 'functions.php';\n\nif (isset($_POST['submit'])) {\n    $user_id = $_POST['user_id'];\n    $product_id = $_POST['product_id'];\n\n    if ($purchase($user_id, $product_id)) {\n        echo \"Purchase successful!\";\n    } else {\n        echo \"Error purchasing product.\";\n    }\n}\n\n$products = get_products();\n?>\n\n<html>\n  <body>\n    <?php foreach ($products as $product) { ?>\n      <p>\n        <b><?php echo $product['name']; ?></b> - $<?php echo number_format($product['price'], 2); ?>\n        <form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n          <input type=\"hidden\" name=\"user_id\" value=\"<?php echo $_POST['user_id']; ?>\">\n          <input type=\"hidden\" name=\"product_id\" value=\"<?php echo $product['id']; ?>\">\n          <button type=\"submit\" name=\"submit\">Purchase</button>\n        </form>\n      </p>\n    <?php } ?>\n  </body>\n</html>\n```"]}
