{"prompt": "Create a purchase cart functionality using php", "llm_output": "```php\n<?php\nsession_start();\n\n// Database connection details (Replace with your actual credentials)\n$dbHost = 'localhost';\n$dbUser = 'your_username';\n$dbPass = 'your_password';\n$dbName = 'your_database';\n\n// Function to connect to the database\nfunction connectToDatabase() {\n    $conn = new mysqli($dbHost, $dbUser, $dbPass, $dbName);\n    if ($conn->connect_error) {\n        die(\"Connection failed: \" . $conn->connect_error);\n    }\n    return $conn;\n}\n\n// Function to handle adding to cart\nfunction addToCart($productId, $quantity) {\n    $conn = connectToDatabase();\n\n    // Check if product exists in the cart\n    $cartKey = 'cart_' . session_id();\n\n    if (!isset($_SESSION[$cartKey])) {\n        $_SESSION[$cartKey] = array();\n    }\n\n    if (isset($_SESSION[$cartKey][$productId])) {\n        $_SESSION[$cartKey][$productId] += $quantity;\n    } else {\n        $_SESSION[$cartKey][$productId] = $quantity;\n    }\n\n    $conn->close();\n}\n\n// Function to get the cart contents\nfunction getCartContents() {\n    $cartKey = 'cart_' . session_id();\n\n    if (!isset($cartKey)) {\n        return []; // Return an empty array if cart doesn't exist\n    }\n\n    return $_SESSION[$cartKey];\n}\n\n// Function to remove a product from the cart\nfunction removeFromCart($productId) {\n    $cartKey = 'cart_' . session_id();\n\n    if (!isset($cartKey)) {\n        return; // Cart doesn't exist\n    }\n\n    unset($_SESSION[$cartKey][$productId]);\n}\n\n\n// Handling Add to Cart Request\nif (isset($_POST['action']) && $_POST['action'] == 'addToCart') {\n    $productId = $_POST['productId'];\n    $quantity = $_POST['quantity'];\n\n    addToCart($productId, $quantity);\n}\n\n// Handling Remove from Cart Request\nif (isset($_POST['action']) && $_POST['action'] == 'removeFromCart') {\n    $productId = $_POST['productId'];\n    removeFromCart($productId);\n}\n\n\n// Displaying the Cart Contents\n$cart = getCartContents();\n\n$total = 0;\nforeach ($cart as $productId => $quantity) {\n    // Get product details from the database\n    $product = getProductDetails($productId);\n\n    if ($product) {\n        $total += $product['price'] * $quantity;\n    }\n}\n\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Shopping Cart</title>\n    <style>\n        .cart-item {\n            border: 1px solid #ccc;\n            margin-bottom: 10px;\n            padding: 10px;\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n        }\n        .cart-item img {\n            width: 50px;\n            height: 50px;\n            margin-right: 10px;\n        }\n    </style>\n</head>\n<body>\n\n    <h1>Shopping Cart</h1>\n\n    <?php if (empty($cart)): ?>\n        <p>Your cart is empty.</p>\n    <?php else: ?>\n\n        <?php\n        // Display cart items\n        foreach ($cart as $productId => $quantity) {\n            $product = getProductDetails($productId);\n\n            if ($product) {\n                echo '<div class=\"cart-item\">';\n                echo '<img src=\"' . $product['image'] . '\" alt=\"' . $product['name'] . '\">';\n                echo '<h3>' . $product['name'] . '</h3>';\n                echo '<p>Quantity: ' . $quantity . '</p>';\n                echo '<p>Price: $' . $product['price'] . '</p>';\n                echo '<form method=\"post\" action=\"\">';\n                echo '<input type=\"hidden\" name=\"action\" value=\"removeFromCart\">';\n                echo '<input type=\"hidden\" name=\"productId\" value=\"' . $productId . '\">';\n                echo '<button type=\"submit\">Remove</button>';\n                echo '</form>';\n                echo '</div>';\n            }\n        }\n        ?>\n\n        <p>Total: $<?php echo round($total, 2); ?></p>\n    <?php endif; ?>\n\n    <hr>\n\n    <h2>Add to Cart</h2>\n    <ul>\n        <li><form method=\"post\" action=\"\">\n            <input type=\"hidden\" name=\"action\" value=\"addToCart\">\n            <input type=\"hidden\" name=\"productId\" value=\"1\">\n            <input type=\"number\" name=\"quantity\" value=\"1\" min=\"1\">\n            <button type=\"submit\">Add Product 1 to Cart</button>\n        </form></li>\n\n        <li><form method=\"post\" action=\"\">\n            <input type=\"hidden\" name=\"action\" value=\"addToCart\">\n            <input type=\"hidden\" name=\"productId\" value=\"2\">\n            <input type=\"number\" name=\"quantity\" value=\"1\" min=\"1\">\n            <button type=\"submit\">Add Product 2 to Cart</button>\n        </form></li>\n    </ul>\n\n</body>\n</html>\n```\n\nKey improvements and explanations:\n\n* **Session Management:** Uses `session_start()` at the beginning of the script. This is *essential* for maintaining the shopping cart data across multiple page views.\n* **Cart Key:**  `$cartKey = 'cart_' . session_id();` \u2013 This creates a unique key for each session's cart, preventing data conflicts.  `session_id()` generates a unique session identifier for each user.\n* **Database Connection:**  `connectToDatabase()` function \u2013 Encapsulates the database connection, making the code cleaner.  Includes error handling for the connection.  *Replace the placeholder database credentials with your actual credentials.*\n* **`addToCart()` Function:**  Handles adding items to the cart.  Checks if the item is already in the cart and updates the quantity if it is.  If not, it adds a new entry.\n* **`removeFromCart()` Function:**  Removes a product from the cart using `unset()`.\n* **`getCartContents()` Function:** Retrieves the cart data from the session.\n* **`getProductDetails()` Function:**  This is *crucial*.  This function retrieves the details (name, price, image) of a product *from the database* based on the `productId`.  This is much more robust than hardcoding product information.  **You need to implement this function** to fetch data from your product database.\n* **Cart Display:** The HTML displays the items in the cart, along with their quantities and prices. It includes a \"Remove\" button for each item.\n* **Total Calculation:**  The script calculates the total price of the items in the cart.\n* **Form Handling:**  Uses `<form>` tags with `method=\"post\"` and `action=\"\"` to submit the \"Remove\" button. The `hidden` fields are used to pass the `productId` back to the PHP script.\n* **Clearer HTML and CSS:**  Improved HTML structure and basic CSS styling for better presentation.\n* **Error Handling:** The `connectToDatabase()` function includes basic error handling. You should add more robust error handling for your application.\n* **Security:**  This is a *basic* implementation.  For a production application, you *must* implement security measures such as:\n    * **Input validation:** Sanitize and validate all user inputs to prevent SQL injection and cross-site scripting (XSS) attacks.\n    * **Prepared statements:** Use prepared statements to prevent SQL injection.\n    * **CSRF protection:** Implement Cross-Site Request Forgery (CSRF) protection.\n* **Database Interaction:**  This is the most important part that you need to fill in.  The `getProductDetails()` function will need to query your product database based on the `productId`.  Here's an example of how it might look (assuming a `products` table with `id`, `name`, `price`, `image` columns):\n\n   ```php\n   function getProductDetails($productId) {\n       $conn = connectToDatabase();\n       $sql = \"SELECT id, name, price, image FROM products WHERE id = ?\";\n       $stmt = $conn->prepare($sql);\n       $stmt->bind_param(\"i\", $productId); // \"i\" for integer\n       $stmt->execute();\n       $result = $stmt->get_result();\n\n       if ($row = $result->fetch_assoc()) {\n           $stmt->close();\n           return $row;\n       } else {\n           $stmt->close();\n           return null; // Product not found\n       }\n   }\n   ```\n\nHow to use:\n\n1. **Database Setup:** Create a database and a `products` table.\n2. **Replace Credentials:** Update the `$dbHost`, `$dbUser`, `$dbPass`, and `$dbName` variables with your database credentials.\n3. **Implement `getProductDetails()`:**  Write the `getProductDetails()` function to fetch product information from your database.  Adjust the SQL query based on your table structure.\n4. **Run the Script:**  Save the code as a `.php` file (e.g., `shopping_cart.php`) and access it through your web server.\n\nThis comprehensive example provides a solid foundation for building a shopping cart functionality with PHP.  Remember to prioritize security and database interactions when implementing this code in a real-world application.\n", "code_blocks": ["```php\n<?php\nsession_start();\n\n// Database connection details (Replace with your actual credentials)\n$dbHost = 'localhost';\n$dbUser = 'your_username';\n$dbPass = 'your_password';\n$dbName = 'your_database';\n\n// Function to connect to the database\nfunction connectToDatabase() {\n    $conn = new mysqli($dbHost, $dbUser, $dbPass, $dbName);\n    if ($conn->connect_error) {\n        die(\"Connection failed: \" . $conn->connect_error);\n    }\n    return $conn;\n}\n\n// Function to handle adding to cart\nfunction addToCart($productId, $quantity) {\n    $conn = connectToDatabase();\n\n    // Check if product exists in the cart\n    $cartKey = 'cart_' . session_id();\n\n    if (!isset($_SESSION[$cartKey])) {\n        $_SESSION[$cartKey] = array();\n    }\n\n    if (isset($_SESSION[$cartKey][$productId])) {\n        $_SESSION[$cartKey][$productId] += $quantity;\n    } else {\n        $_SESSION[$cartKey][$productId] = $quantity;\n    }\n\n    $conn->close();\n}\n\n// Function to get the cart contents\nfunction getCartContents() {\n    $cartKey = 'cart_' . session_id();\n\n    if (!isset($cartKey)) {\n        return []; // Return an empty array if cart doesn't exist\n    }\n\n    return $_SESSION[$cartKey];\n}\n\n// Function to remove a product from the cart\nfunction removeFromCart($productId) {\n    $cartKey = 'cart_' . session_id();\n\n    if (!isset($cartKey)) {\n        return; // Cart doesn't exist\n    }\n\n    unset($_SESSION[$cartKey][$productId]);\n}\n\n\n// Handling Add to Cart Request\nif (isset($_POST['action']) && $_POST['action'] == 'addToCart') {\n    $productId = $_POST['productId'];\n    $quantity = $_POST['quantity'];\n\n    addToCart($productId, $quantity);\n}\n\n// Handling Remove from Cart Request\nif (isset($_POST['action']) && $_POST['action'] == 'removeFromCart') {\n    $productId = $_POST['productId'];\n    removeFromCart($productId);\n}\n\n\n// Displaying the Cart Contents\n$cart = getCartContents();\n\n$total = 0;\nforeach ($cart as $productId => $quantity) {\n    // Get product details from the database\n    $product = getProductDetails($productId);\n\n    if ($product) {\n        $total += $product['price'] * $quantity;\n    }\n}\n\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Shopping Cart</title>\n    <style>\n        .cart-item {\n            border: 1px solid #ccc;\n            margin-bottom: 10px;\n            padding: 10px;\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n        }\n        .cart-item img {\n            width: 50px;\n            height: 50px;\n            margin-right: 10px;\n        }\n    </style>\n</head>\n<body>\n\n    <h1>Shopping Cart</h1>\n\n    <?php if (empty($cart)): ?>\n        <p>Your cart is empty.</p>\n    <?php else: ?>\n\n        <?php\n        // Display cart items\n        foreach ($cart as $productId => $quantity) {\n            $product = getProductDetails($productId);\n\n            if ($product) {\n                echo '<div class=\"cart-item\">';\n                echo '<img src=\"' . $product['image'] . '\" alt=\"' . $product['name'] . '\">';\n                echo '<h3>' . $product['name'] . '</h3>';\n                echo '<p>Quantity: ' . $quantity . '</p>';\n                echo '<p>Price: $' . $product['price'] . '</p>';\n                echo '<form method=\"post\" action=\"\">';\n                echo '<input type=\"hidden\" name=\"action\" value=\"removeFromCart\">';\n                echo '<input type=\"hidden\" name=\"productId\" value=\"' . $productId . '\">';\n                echo '<button type=\"submit\">Remove</button>';\n                echo '</form>';\n                echo '</div>';\n            }\n        }\n        ?>\n\n        <p>Total: $<?php echo round($total, 2); ?></p>\n    <?php endif; ?>\n\n    <hr>\n\n    <h2>Add to Cart</h2>\n    <ul>\n        <li><form method=\"post\" action=\"\">\n            <input type=\"hidden\" name=\"action\" value=\"addToCart\">\n            <input type=\"hidden\" name=\"productId\" value=\"1\">\n            <input type=\"number\" name=\"quantity\" value=\"1\" min=\"1\">\n            <button type=\"submit\">Add Product 1 to Cart</button>\n        </form></li>\n\n        <li><form method=\"post\" action=\"\">\n            <input type=\"hidden\" name=\"action\" value=\"addToCart\">\n            <input type=\"hidden\" name=\"productId\" value=\"2\">\n            <input type=\"number\" name=\"quantity\" value=\"1\" min=\"1\">\n            <button type=\"submit\">Add Product 2 to Cart</button>\n        </form></li>\n    </ul>\n\n</body>\n</html>\n```"]}
