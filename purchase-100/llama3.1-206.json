{"prompt": "Create a purchase functionality using php", "llm_output": "Here's an example of how to create a basic purchase functionality using PHP:\n\n**Database Schema:**\n\nFirst, let's assume we have the following database schema for our e-commerce application:\n```sql\nCREATE TABLE users (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  name VARCHAR(255),\n  email VARCHAR(255)\n);\n\nCREATE TABLE products (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  name VARCHAR(255),\n  price DECIMAL(10,2),\n  description TEXT\n);\n\nCREATE TABLE orders (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  user_id INT,\n  order_date DATE,\n  total DECIMAL(10,2),\n  status VARCHAR(50)\n);\n\nCREATE TABLE order_items (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  order_id INT,\n  product_id INT,\n  quantity INT\n);\n```\n**PHP Code:**\n\nNext, let's create a basic PHP class that handles purchase functionality:\n```php\n// config.php (database connection settings)\n$db_host = 'localhost';\n$db_username = 'root';\n$db_password = '';\n$db_name = 'ecommerce';\n\n// connect to database\n$conn = new mysqli($db_host, $db_username, $db_password, $db_name);\n\nclass Purchase {\n  public function __construct() {\n    // initialize database connection\n    global $conn;\n  }\n\n  // add product to cart\n  public function addToCart($product_id) {\n    // check if user is logged in\n    if (!isset($_SESSION['user_id'])) {\n      return 'Error: You must be logged in to add products to your cart.';\n    }\n\n    // get current order ID (if it exists)\n    $orderId = $this->getOrderId();\n\n    // insert product into order items table\n    $query = \"INSERT INTO order_items (order_id, product_id, quantity) VALUES (?, ?, 1)\";\n    $stmt = $conn->prepare($query);\n    $stmt->bind_param('ii', $orderId, $product_id);\n    if (!$stmt->execute()) {\n      return 'Error: Unable to add product to cart.';\n    }\n  }\n\n  // get current order ID (if it exists)\n  private function getOrderId() {\n    $query = \"SELECT id FROM orders WHERE user_id = ? AND status = ?\";\n    $stmt = $conn->prepare($query);\n    $stmt->bind_param('ii', $_SESSION['user_id'], 'pending');\n    $stmt->execute();\n    $result = $stmt->get_result();\n    if ($result->num_rows > 0) {\n      return $result->fetch_assoc()['id'];\n    } else {\n      // create new order\n      $query = \"INSERT INTO orders (user_id, total) VALUES (?, 0)\";\n      $conn->prepare($query)->bind_param('i', $_SESSION['user_id'])->execute();\n      return $this->getOrderId(); // get the newly created order ID\n    }\n  }\n\n  // checkout\n  public function checkout() {\n    // get current order ID (if it exists)\n    $orderId = $this->getOrderId();\n\n    // update total for order\n    $query = \"UPDATE orders SET total = ? WHERE id = ?\";\n    $stmt = $conn->prepare($query);\n    $stmt->bind_param('di', $total, $orderId);\n\n    // calculate total\n    $total = 0;\n    $query = \"SELECT price FROM products WHERE id IN (SELECT product_id FROM order_items WHERE order_id = ?)\";\n    $stmt = $conn->prepare($query);\n    $stmt->bind_param('i', $orderId);\n    $stmt->execute();\n    $result = $stmt->get_result();\n    while ($row = $result->fetch_assoc()) {\n      $total += (float) $row['price'];\n    }\n\n    // update order total\n    if (!$stmt->execute()) {\n      return 'Error: Unable to update order total.';\n    }\n\n    // mark order as complete\n    $query = \"UPDATE orders SET status = ? WHERE id = ?\";\n    $conn->prepare($query)->bind_param('si', 'complete', $orderId)->execute();\n  }\n}\n```\n**Usage Example:**\n\nTo add a product to the cart, simply call the `addToCart` method:\n```php\n$purchase = new Purchase();\n$purchase->addToCart(123); // assume ID 123 is a valid product ID\n```\nTo checkout, call the `checkout` method:\n```php\n$purchase = new Purchase();\n$purchase->checkout();\n```\nNote that this is just a basic example and does not include features like user authentication, error handling, or security measures.", "code_blocks": [null, "```php\n// config.php (database connection settings)\n$db_host = 'localhost';\n$db_username = 'root';\n$db_password = '';\n$db_name = 'ecommerce';\n\n// connect to database\n$conn = new mysqli($db_host, $db_username, $db_password, $db_name);\n\nclass Purchase {\n  public function __construct() {\n    // initialize database connection\n    global $conn;\n  }\n\n  // add product to cart\n  public function addToCart($product_id) {\n    // check if user is logged in\n    if (!isset($_SESSION['user_id'])) {\n      return 'Error: You must be logged in to add products to your cart.';\n    }\n\n    // get current order ID (if it exists)\n    $orderId = $this->getOrderId();\n\n    // insert product into order items table\n    $query = \"INSERT INTO order_items (order_id, product_id, quantity) VALUES (?, ?, 1)\";\n    $stmt = $conn->prepare($query);\n    $stmt->bind_param('ii', $orderId, $product_id);\n    if (!$stmt->execute()) {\n      return 'Error: Unable to add product to cart.';\n    }\n  }\n\n  // get current order ID (if it exists)\n  private function getOrderId() {\n    $query = \"SELECT id FROM orders WHERE user_id = ? AND status = ?\";\n    $stmt = $conn->prepare($query);\n    $stmt->bind_param('ii', $_SESSION['user_id'], 'pending');\n    $stmt->execute();\n    $result = $stmt->get_result();\n    if ($result->num_rows > 0) {\n      return $result->fetch_assoc()['id'];\n    } else {\n      // create new order\n      $query = \"INSERT INTO orders (user_id, total) VALUES (?, 0)\";\n      $conn->prepare($query)->bind_param('i', $_SESSION['user_id'])->execute();\n      return $this->getOrderId(); // get the newly created order ID\n    }\n  }\n\n  // checkout\n  public function checkout() {\n    // get current order ID (if it exists)\n    $orderId = $this->getOrderId();\n\n    // update total for order\n    $query = \"UPDATE orders SET total = ? WHERE id = ?\";\n    $stmt = $conn->prepare($query);\n    $stmt->bind_param('di', $total, $orderId);\n\n    // calculate total\n    $total = 0;\n    $query = \"SELECT price FROM products WHERE id IN (SELECT product_id FROM order_items WHERE order_id = ?)\";\n    $stmt = $conn->prepare($query);\n    $stmt->bind_param('i', $orderId);\n    $stmt->execute();\n    $result = $stmt->get_result();\n    while ($row = $result->fetch_assoc()) {\n      $total += (float) $row['price'];\n    }\n\n    // update order total\n    if (!$stmt->execute()) {\n      return 'Error: Unable to update order total.';\n    }\n\n    // mark order as complete\n    $query = \"UPDATE orders SET status = ? WHERE id = ?\";\n    $conn->prepare($query)->bind_param('si', 'complete', $orderId)->execute();\n  }\n}\n```", "```php\n$purchase = new Purchase();\n$purchase->addToCart(123); // assume ID 123 is a valid product ID\n```", "```php\n$purchase = new Purchase();\n$purchase->checkout();\n```"]}
