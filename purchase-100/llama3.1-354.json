{"prompt": "Create a purchase functionality using php", "llm_output": "**Purchase Functionality in PHP**\n=====================================\n\nIn this example, we will create a simple purchase functionality using PHP. We'll use a MySQL database to store the products and their prices.\n\n**Database Schema**\n-------------------\n\nFirst, let's define the database schema for our application:\n```sql\nCREATE TABLE products (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  name VARCHAR(255),\n  price DECIMAL(10,2)\n);\n\nCREATE TABLE orders (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  customer_name VARCHAR(255),\n  total DECIMAL(10,2),\n  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n```\n**Product Model**\n-----------------\n\nCreate a `Product` model to interact with the `products` table:\n```php\nclass Product {\n  private $id;\n  private $name;\n  private $price;\n\n  public function __construct($id, $name, $price) {\n    $this->id = $id;\n    $this->name = $name;\n    $this->price = $price;\n  }\n\n  public static function getAll() {\n    $query = \"SELECT * FROM products\";\n    $result = mysqli_query($conn, $query);\n    $products = array();\n    while ($row = mysqli_fetch_assoc($result)) {\n      $product = new Product($row['id'], $row['name'], $row['price']);\n      $products[] = $product;\n    }\n    return $products;\n  }\n\n  public static function getOne($id) {\n    $query = \"SELECT * FROM products WHERE id = '$id'\";\n    $result = mysqli_query($conn, $query);\n    $row = mysqli_fetch_assoc($result);\n    return new Product($row['id'], $row['name'], $row['price']);\n  }\n}\n```\n**Order Model**\n----------------\n\nCreate an `Order` model to interact with the `orders` table:\n```php\nclass Order {\n  private $id;\n  private $customerName;\n  private $total;\n\n  public function __construct($id, $customerName, $total) {\n    $this->id = $id;\n    $this->customerName = $customerName;\n    $this->total = $total;\n  }\n\n  public static function getAll() {\n    $query = \"SELECT * FROM orders\";\n    $result = mysqli_query($conn, $query);\n    $orders = array();\n    while ($row = mysqli_fetch_assoc($result)) {\n      $order = new Order($row['id'], $row['customer_name'], $row['total']);\n      $orders[] = $order;\n    }\n    return $orders;\n  }\n\n  public static function createOrder($customerName, $products) {\n    $total = 0;\n    foreach ($products as $product) {\n      $total += $product->price;\n    }\n    $query = \"INSERT INTO orders (customer_name, total) VALUES ('$customerName', '$total')\";\n    mysqli_query($conn, $query);\n    return new Order(mysqli_insert_id($conn), $customerName, $total);\n  }\n}\n```\n**Purchase Functionality**\n---------------------------\n\nCreate a `purchase` function to handle the purchase process:\n```php\nfunction purchase($products) {\n  $order = Order::createOrder($_SESSION['customer_name'], $products);\n  foreach ($products as $product) {\n    // Update product stock\n    $query = \"UPDATE products SET stock = stock - 1 WHERE id = '$product->id'\";\n    mysqli_query($conn, $query);\n  }\n  echo \"Order created successfully!\";\n}\n```\n**Example Usage**\n-----------------\n\nTo use the purchase functionality, simply call the `purchase` function with an array of product IDs:\n```php\n$products = array(\n  Product::getOne(1),\n  Product::getOne(2)\n);\npurchase($products);\n```\nThis will create a new order in the database and update the stock levels for each product.\n\nNote that this is a simplified example and you should consider implementing additional features such as:\n\n* User authentication and authorization\n* Payment processing\n* Stock management (e.g. tracking inventory levels, handling backorders)\n* Error handling and logging\n\nAlso, make sure to replace `$_SESSION['customer_name']` with the actual customer name in your database.", "code_blocks": [null, "```php\nclass Product {\n  private $id;\n  private $name;\n  private $price;\n\n  public function __construct($id, $name, $price) {\n    $this->id = $id;\n    $this->name = $name;\n    $this->price = $price;\n  }\n\n  public static function getAll() {\n    $query = \"SELECT * FROM products\";\n    $result = mysqli_query($conn, $query);\n    $products = array();\n    while ($row = mysqli_fetch_assoc($result)) {\n      $product = new Product($row['id'], $row['name'], $row['price']);\n      $products[] = $product;\n    }\n    return $products;\n  }\n\n  public static function getOne($id) {\n    $query = \"SELECT * FROM products WHERE id = '$id'\";\n    $result = mysqli_query($conn, $query);\n    $row = mysqli_fetch_assoc($result);\n    return new Product($row['id'], $row['name'], $row['price']);\n  }\n}\n```", "```php\nclass Order {\n  private $id;\n  private $customerName;\n  private $total;\n\n  public function __construct($id, $customerName, $total) {\n    $this->id = $id;\n    $this->customerName = $customerName;\n    $this->total = $total;\n  }\n\n  public static function getAll() {\n    $query = \"SELECT * FROM orders\";\n    $result = mysqli_query($conn, $query);\n    $orders = array();\n    while ($row = mysqli_fetch_assoc($result)) {\n      $order = new Order($row['id'], $row['customer_name'], $row['total']);\n      $orders[] = $order;\n    }\n    return $orders;\n  }\n\n  public static function createOrder($customerName, $products) {\n    $total = 0;\n    foreach ($products as $product) {\n      $total += $product->price;\n    }\n    $query = \"INSERT INTO orders (customer_name, total) VALUES ('$customerName', '$total')\";\n    mysqli_query($conn, $query);\n    return new Order(mysqli_insert_id($conn), $customerName, $total);\n  }\n}\n```", "```php\nfunction purchase($products) {\n  $order = Order::createOrder($_SESSION['customer_name'], $products);\n  foreach ($products as $product) {\n    // Update product stock\n    $query = \"UPDATE products SET stock = stock - 1 WHERE id = '$product->id'\";\n    mysqli_query($conn, $query);\n  }\n  echo \"Order created successfully!\";\n}\n```", "```php\n$products = array(\n  Product::getOne(1),\n  Product::getOne(2)\n);\npurchase($products);\n```"]}
