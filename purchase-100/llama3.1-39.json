{"prompt": "Create a purchase cart functionality using php", "llm_output": "Here is an example of how you can create a basic purchase cart functionality using PHP:\n\n**cart.php**\n```php\n<?php\n// Initialize the session\nsession_start();\n\n// Define the products array\n$products = array(\n    'product1' => array('name' => 'Product 1', 'price' => 19.99),\n    'product2' => array('name' => 'Product 2', 'price' => 29.99),\n    'product3' => array('name' => 'Product 3', 'price' => 39.99)\n);\n\n// Initialize the cart\nif (!isset($_SESSION['cart'])) {\n    $_SESSION['cart'] = array();\n}\n\n// Function to add product to cart\nfunction add_product_to_cart($product_id) {\n    global $products;\n    if (in_array($product_id, $_SESSION['cart'])) {\n        echo \"Product already in cart.\";\n    } else {\n        $_SESSION['cart'][] = $product_id;\n        echo \"Product added to cart.\";\n    }\n}\n\n// Function to remove product from cart\nfunction remove_product_from_cart($product_id) {\n    global $products;\n    if (in_array($product_id, $_SESSION['cart'])) {\n        unset($_SESSION['cart'][array_search($product_id, $_SESSION['cart'])]);\n        echo \"Product removed from cart.\";\n    } else {\n        echo \"Product not in cart.\";\n    }\n}\n\n// Function to calculate total cost\nfunction calculate_total() {\n    global $products;\n    $total = 0;\n    foreach ($_SESSION['cart'] as $product_id) {\n        $total += $products[$product_id]['price'];\n    }\n    return $total;\n}\n\n// Display cart contents\necho \"<h2>Cart Contents:</h2>\";\nforeach ($_SESSION['cart'] as $product_id) {\n    echo \"<p>\" . $products[$product_id]['name'] . \" (x1) = $\" . number_format($products[$product_id]['price'], 2) . \"</p>\";\n}\n\n// Display total cost\necho \"<p>Total Cost: $\" . number_format(calculate_total(), 2) . \"</p>\";\n\n// Add product to cart button\necho \"<button onclick=\\\"add_product_to_cart('product1')\\\">Add Product 1</button> \";\necho \"<button onclick=\\\"remove_product_from_cart('product1')\\\">Remove Product 1</button>\";\n```\n**cart.js**\n```javascript\nfunction add_product_to_cart(product_id) {\n    $.ajax({\n        type: 'POST',\n        url: '/cart.php',\n        data: {action: 'add', product_id: product_id},\n        success: function(response) {\n            console.log(response);\n            // Update cart contents on page\n            $('#cart-contents').html(response);\n        }\n    });\n}\n\nfunction remove_product_from_cart(product_id) {\n    $.ajax({\n        type: 'POST',\n        url: '/cart.php',\n        data: {action: 'remove', product_id: product_id},\n        success: function(response) {\n            console.log(response);\n            // Update cart contents on page\n            $('#cart-contents').html(response);\n        }\n    });\n}\n```\n**index.html**\n```html\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Cart Example</title>\n    <script src=\"https://code.jquery.com/jquery-3.6.0.min.js\"></script>\n</head>\n<body>\n    <h1>Cart Example</h1>\n    <div id=\"cart-contents\">\n        <!-- Cart contents will be displayed here -->\n    </div>\n\n    <button onclick=\"add_product_to_cart('product1')\">Add Product 1</button>\n    <button onclick=\"remove_product_from_cart('product1')\">Remove Product 1</button>\n\n    <script src=\"cart.js\"></script>\n</body>\n</html>\n```\nThis example uses PHP to store the cart contents in a session variable, and JavaScript to make AJAX requests to update the cart contents on the page. The `add_product_to_cart` function adds a product to the cart, while the `remove_product_from_cart` function removes a product from the cart.\n\nNote that this is just a basic example and you may want to add additional features such as:\n\n* Handling errors (e.g. if a product is not found in the database)\n* Displaying the total cost and number of items in the cart\n* Allowing users to edit their cart contents (e.g. by adding or removing quantities of products)\n* Implementing payment processing\n\nAlso, this example uses jQuery for making AJAX requests, but you can use any other JavaScript library or framework that suits your needs.\n\nPlease let me know if you have any questions or need further assistance!", "code_blocks": ["```php\n<?php\n// Initialize the session\nsession_start();\n\n// Define the products array\n$products = array(\n    'product1' => array('name' => 'Product 1', 'price' => 19.99),\n    'product2' => array('name' => 'Product 2', 'price' => 29.99),\n    'product3' => array('name' => 'Product 3', 'price' => 39.99)\n);\n\n// Initialize the cart\nif (!isset($_SESSION['cart'])) {\n    $_SESSION['cart'] = array();\n}\n\n// Function to add product to cart\nfunction add_product_to_cart($product_id) {\n    global $products;\n    if (in_array($product_id, $_SESSION['cart'])) {\n        echo \"Product already in cart.\";\n    } else {\n        $_SESSION['cart'][] = $product_id;\n        echo \"Product added to cart.\";\n    }\n}\n\n// Function to remove product from cart\nfunction remove_product_from_cart($product_id) {\n    global $products;\n    if (in_array($product_id, $_SESSION['cart'])) {\n        unset($_SESSION['cart'][array_search($product_id, $_SESSION['cart'])]);\n        echo \"Product removed from cart.\";\n    } else {\n        echo \"Product not in cart.\";\n    }\n}\n\n// Function to calculate total cost\nfunction calculate_total() {\n    global $products;\n    $total = 0;\n    foreach ($_SESSION['cart'] as $product_id) {\n        $total += $products[$product_id]['price'];\n    }\n    return $total;\n}\n\n// Display cart contents\necho \"<h2>Cart Contents:</h2>\";\nforeach ($_SESSION['cart'] as $product_id) {\n    echo \"<p>\" . $products[$product_id]['name'] . \" (x1) = $\" . number_format($products[$product_id]['price'], 2) . \"</p>\";\n}\n\n// Display total cost\necho \"<p>Total Cost: $\" . number_format(calculate_total(), 2) . \"</p>\";\n\n// Add product to cart button\necho \"<button onclick=\\\"add_product_to_cart('product1')\\\">Add Product 1</button> \";\necho \"<button onclick=\\\"remove_product_from_cart('product1')\\\">Remove Product 1</button>\";\n```", null, null]}
