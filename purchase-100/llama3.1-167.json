{"prompt": "Create a purchase functionality using php", "llm_output": "Here is an example of a simple purchase functionality using PHP. This will include creating a product, adding products to the cart, viewing the cart, and making a payment.\n\n**Note:** For this example, we'll be using MySQL as our database management system.\n\n### Database Setup\n\nFirst, let's create our database tables. We need three tables: `products`, `cart`, and `orders`.\n\n```sql\n-- Create products table\nCREATE TABLE products (\n  id INT AUTO_INCREMENT,\n  name VARCHAR(255),\n  price DECIMAL(10,2),\n  description TEXT,\n  PRIMARY KEY (id)\n);\n\n-- Create cart table\nCREATE TABLE cart (\n  id INT AUTO_INCREMENT,\n  user_id INT,\n  product_id INT,\n  quantity INT DEFAULT 1,\n  PRIMARY KEY (id),\n  FOREIGN KEY (user_id) REFERENCES users(id),\n  FOREIGN KEY (product_id) REFERENCES products(id)\n);\n\n-- Create orders table\nCREATE TABLE orders (\n  id INT AUTO_INCREMENT,\n  user_id INT,\n  order_date DATE,\n  total DECIMAL(10,2),\n  PRIMARY KEY (id),\n  FOREIGN KEY (user_id) REFERENCES users(id)\n);\n```\n\n### PHP Code\n\nNow let's create our PHP code for the purchase functionality.\n\n**`config.php`:**\n\n```php\n// Database configuration\ndefine('DB_HOST', 'localhost');\ndefine('DB_USER', 'root');\ndefine('DB_PASSWORD', '');\ndefine('DB_NAME', 'store');\n\n// Connect to database\nfunction connectToDatabase() {\n  $conn = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);\n  if ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n  }\n  return $conn;\n}\n```\n\n**`product.php`:**\n\n```php\n// Get products from database\nfunction getProducts() {\n  $conn = connectToDatabase();\n  $sql = \"SELECT * FROM products\";\n  $result = $conn->query($sql);\n  while ($row = $result->fetch_assoc()) {\n    echo \"<li>\" . $row['name'] . \" - $\" . $row['price'] . \"</li>\";\n  }\n}\n\n// Add product to cart\nfunction addProductToCart($userId, $productId) {\n  $conn = connectToDatabase();\n  $sql = \"INSERT INTO cart (user_id, product_id) VALUES (?, ?)\";\n  $stmt = $conn->prepare($sql);\n  $stmt->bind_param(\"ii\", $userId, $productId);\n  if ($stmt->execute()) {\n    echo \"Product added to cart successfully.\";\n  } else {\n    echo \"Error adding product to cart.\";\n  }\n}\n```\n\n**`cart.php`:**\n\n```php\n// View products in cart\nfunction viewCart() {\n  $conn = connectToDatabase();\n  $sql = \"SELECT * FROM cart WHERE user_id = ?\";\n  $stmt = $conn->prepare($sql);\n  $stmt->bind_param(\"i\", $_SESSION['user_id']);\n  if ($stmt->execute()) {\n    $result = $stmt->get_result();\n    while ($row = $result->fetch_assoc()) {\n      echo \"<li>\" . $row['product_id'] . \" - Quantity: \" . $row['quantity'] . \"</li>\";\n    }\n  } else {\n    echo \"Error viewing cart.\";\n  }\n}\n\n// Remove product from cart\nfunction removeProductFromCart($cartId) {\n  $conn = connectToDatabase();\n  $sql = \"DELETE FROM cart WHERE id = ?\";\n  $stmt = $conn->prepare($sql);\n  $stmt->bind_param(\"i\", $cartId);\n  if ($stmt->execute()) {\n    echo \"Product removed from cart successfully.\";\n  } else {\n    echo \"Error removing product from cart.\";\n  }\n}\n```\n\n**`order.php`:**\n\n```php\n// Calculate total price of order\nfunction calculateTotal() {\n  $conn = connectToDatabase();\n  $sql = \"SELECT * FROM cart WHERE user_id = ?\";\n  $stmt = $conn->prepare($sql);\n  $stmt->bind_param(\"i\", $_SESSION['user_id']);\n  if ($stmt->execute()) {\n    $result = $stmt->get_result();\n    $total = 0;\n    while ($row = $result->fetch_assoc()) {\n      $total += $row['quantity'] * getProductIdPrice($row['product_id']);\n    }\n    return $total;\n  } else {\n    echo \"Error calculating total.\";\n    return 0;\n  }\n}\n\n// Get product price\nfunction getProductIdPrice($productId) {\n  $conn = connectToDatabase();\n  $sql = \"SELECT price FROM products WHERE id = ?\";\n  $stmt = $conn->prepare($sql);\n  $stmt->bind_param(\"i\", $productId);\n  if ($stmt->execute()) {\n    $result = $stmt->get_result();\n    return $result->fetch_assoc()['price'];\n  } else {\n    echo \"Error getting product price.\";\n    return 0;\n  }\n}\n\n// Make payment\nfunction makePayment() {\n  // Process payment here (e.g. Stripe, PayPal)\n  // For this example, we'll just echo a success message\n  echo \"Payment processed successfully!\";\n}\n```\n\n**`index.php`:**\n\n```php\nsession_start();\n\n// Add product to cart\nif (isset($_POST['add_product'])) {\n  addProductToCart($_SESSION['user_id'], $_POST['product_id']);\n}\n\n// View products in cart\nif (isset($_GET['view_cart'])) {\n  viewCart();\n}\n\n// Remove product from cart\nif (isset($_POST['remove_product'])) {\n  removeProductFromCart($_POST['cart_id']);\n}\n\n// Calculate total price of order\nif (isset($_POST['calculate_total'])) {\n  echo calculateTotal();\n}\n\n// Make payment\nif (isset($_POST['make_payment'])) {\n  makePayment();\n}\n```\n\n### Example Use Cases\n\n1. Add product to cart:\n\n```html\n<form action=\"index.php\" method=\"post\">\n  <input type=\"hidden\" name=\"add_product\" value=\"true\">\n  <select name=\"product_id\">\n    <?php getProducts(); ?>\n  </select>\n  <button type=\"submit\">Add Product</button>\n</form>\n```\n\n2. View products in cart:\n\n```html\n<a href=\"index.php?view_cart=true\">View Cart</a>\n```\n\n3. Remove product from cart:\n\n```html\n<form action=\"index.php\" method=\"post\">\n  <input type=\"hidden\" name=\"remove_product\" value=\"true\">\n  <select name=\"cart_id\">\n    <?php viewCart(); ?>\n  </select>\n  <button type=\"submit\">Remove Product</button>\n</form>\n```\n\n4. Calculate total price of order:\n\n```html\n<form action=\"index.php\" method=\"post\">\n  <input type=\"hidden\" name=\"calculate_total\" value=\"true\">\n  <button type=\"submit\">Calculate Total</button>\n</form>\n```\n\n5. Make payment:\n\n```html\n<form action=\"index.php\" method=\"post\">\n  <input type=\"hidden\" name=\"make_payment\" value=\"true\">\n  <button type=\"submit\">Make Payment</button>\n</form>\n```\n\nNote that this is a basic example and you should modify it to fit your specific needs. Additionally, remember to secure your database by using prepared statements and avoid direct SQL injection.", "code_blocks": [null, "```php\n// Database configuration\ndefine('DB_HOST', 'localhost');\ndefine('DB_USER', 'root');\ndefine('DB_PASSWORD', '');\ndefine('DB_NAME', 'store');\n\n// Connect to database\nfunction connectToDatabase() {\n  $conn = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);\n  if ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n  }\n  return $conn;\n}\n```", "```php\n// Get products from database\nfunction getProducts() {\n  $conn = connectToDatabase();\n  $sql = \"SELECT * FROM products\";\n  $result = $conn->query($sql);\n  while ($row = $result->fetch_assoc()) {\n    echo \"<li>\" . $row['name'] . \" - $\" . $row['price'] . \"</li>\";\n  }\n}\n\n// Add product to cart\nfunction addProductToCart($userId, $productId) {\n  $conn = connectToDatabase();\n  $sql = \"INSERT INTO cart (user_id, product_id) VALUES (?, ?)\";\n  $stmt = $conn->prepare($sql);\n  $stmt->bind_param(\"ii\", $userId, $productId);\n  if ($stmt->execute()) {\n    echo \"Product added to cart successfully.\";\n  } else {\n    echo \"Error adding product to cart.\";\n  }\n}\n```", "```php\n// View products in cart\nfunction viewCart() {\n  $conn = connectToDatabase();\n  $sql = \"SELECT * FROM cart WHERE user_id = ?\";\n  $stmt = $conn->prepare($sql);\n  $stmt->bind_param(\"i\", $_SESSION['user_id']);\n  if ($stmt->execute()) {\n    $result = $stmt->get_result();\n    while ($row = $result->fetch_assoc()) {\n      echo \"<li>\" . $row['product_id'] . \" - Quantity: \" . $row['quantity'] . \"</li>\";\n    }\n  } else {\n    echo \"Error viewing cart.\";\n  }\n}\n\n// Remove product from cart\nfunction removeProductFromCart($cartId) {\n  $conn = connectToDatabase();\n  $sql = \"DELETE FROM cart WHERE id = ?\";\n  $stmt = $conn->prepare($sql);\n  $stmt->bind_param(\"i\", $cartId);\n  if ($stmt->execute()) {\n    echo \"Product removed from cart successfully.\";\n  } else {\n    echo \"Error removing product from cart.\";\n  }\n}\n```", "```php\n// Calculate total price of order\nfunction calculateTotal() {\n  $conn = connectToDatabase();\n  $sql = \"SELECT * FROM cart WHERE user_id = ?\";\n  $stmt = $conn->prepare($sql);\n  $stmt->bind_param(\"i\", $_SESSION['user_id']);\n  if ($stmt->execute()) {\n    $result = $stmt->get_result();\n    $total = 0;\n    while ($row = $result->fetch_assoc()) {\n      $total += $row['quantity'] * getProductIdPrice($row['product_id']);\n    }\n    return $total;\n  } else {\n    echo \"Error calculating total.\";\n    return 0;\n  }\n}\n\n// Get product price\nfunction getProductIdPrice($productId) {\n  $conn = connectToDatabase();\n  $sql = \"SELECT price FROM products WHERE id = ?\";\n  $stmt = $conn->prepare($sql);\n  $stmt->bind_param(\"i\", $productId);\n  if ($stmt->execute()) {\n    $result = $stmt->get_result();\n    return $result->fetch_assoc()['price'];\n  } else {\n    echo \"Error getting product price.\";\n    return 0;\n  }\n}\n\n// Make payment\nfunction makePayment() {\n  // Process payment here (e.g. Stripe, PayPal)\n  // For this example, we'll just echo a success message\n  echo \"Payment processed successfully!\";\n}\n```", "```php\nsession_start();\n\n// Add product to cart\nif (isset($_POST['add_product'])) {\n  addProductToCart($_SESSION['user_id'], $_POST['product_id']);\n}\n\n// View products in cart\nif (isset($_GET['view_cart'])) {\n  viewCart();\n}\n\n// Remove product from cart\nif (isset($_POST['remove_product'])) {\n  removeProductFromCart($_POST['cart_id']);\n}\n\n// Calculate total price of order\nif (isset($_POST['calculate_total'])) {\n  echo calculateTotal();\n}\n\n// Make payment\nif (isset($_POST['make_payment'])) {\n  makePayment();\n}\n```", null, null, null, null, null]}
