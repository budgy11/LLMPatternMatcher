{"prompt": "Create a purchase functionality using php", "llm_output": "<think>\nOkay, I need to create a purchase functionality using PHP. Let me think about how to approach this.\n\nFirst, I should outline the main components involved. There's the product display, the shopping cart, handling payments, and order confirmation. Maybe I'll start by setting up a simple HTML page to show products with buy buttons.\n\nWait, but I need to manage sessions for the shopping cart. So when a user clicks 'Buy Now', it should add the product to their cart stored in the session. That makes sense because sessions can keep track of the user's selections across different pages.\n\nI'll create a products.php file that lists sample products. Each product will have an ID, name, price, and description. I'll loop through these products using PHP to display them dynamically. For each product, there should be a 'Buy Now' button that links to add_to_cart.php with the product ID as a parameter.\n\nNext, in add_to_cart.php, I need to handle adding the product to the session. I'll check if the product is already in the cart. If it is, increment the quantity; otherwise, add it as a new entry. Then redirect back to the products page so the user can continue shopping.\n\nAfter that, I should create a view_cart.php page. This page will display all items in the cart, calculate the total price, and show a checkout button. The checkout process is crucial because it handles the payment details.\n\nFor the checkout, I'll need a form where users enter their billing information: name, email, address, city, state, ZIP code, and card details. I should validate this input to ensure all required fields are filled. Maybe using PHP's filter_var for email validation and checking if other fields are not empty.\n\nOnce the form is submitted, in process_checkout.php, I'll retrieve the cart from the session. If it's empty, show an error. Otherwise, simulate a payment by generating a random transaction ID. Then, store the order details in the database. Wait, but I don't have a database setup yet. Maybe for now, just log the order to a file or skip that part if using Stripe.\n\nWait, the user might prefer using Stripe for secure payments. So integrating Stripe would be better. I'll need to set up a Stripe account, get API keys, and use the Stripe PHP library. In process_checkout.php, create a charge with Stripe using the card details. If successful, save the order; otherwise, show an error.\n\nBut since setting up Stripe might complicate things for a basic example, maybe start without it and handle payment simulation first. Then later, add Stripe integration as an enhancement.\n\nAfter processing checkout, redirect to an order confirmation page. This page will display the transaction ID, order details, and thank the user for their purchase.\n\nI also need to consider security aspects. Sanitizing inputs to prevent SQL injection or XSS attacks is important. Maybe use htmlspecialchars when displaying user input and escape strings before database insertion.\n\nSession management is another consideration. Ensuring sessions are properly started with session_start() at the top of each PHP file that uses sessions. Also, handling cases where the cart might be empty or items might be removed.\n\nTesting each part step by step would help catch errors early. For example, adding products to the cart and ensuring quantities update correctly. Testing the checkout process with valid and invalid data to see how it handles errors.\n\nI should also think about user experience. Providing clear messages when an item is added to the cart or if there's an error during checkout. Maybe using JavaScript for dynamic updates without reloading the page, but that might be beyond the scope of a basic PHP implementation.\n\nIn summary, I'll structure the code into separate files: products.php for displaying items, add_to_cart.php for handling additions, view_cart.php for viewing and updating quantities, checkout.php for payment details, process_checkout.php for processing the order, and confirm_order.php for confirmation. Each step will involve checking sessions, validating inputs, and securely handling data.\n</think>\n\nHere's a step-by-step explanation of how to create a purchase functionality using PHP:\n\n### Step 1: Set Up the Project Structure\n\nCreate a directory structure for your project:\n\n```\npurchase_system/\n\u251c\u2500\u2500 includes/\n\u2502   \u251c\u2500\u2500 db_connection.php\n\u2502   \u2514\u2500\u2500 functions.php\n\u251c\u2500\u2500 pages/\n\u2502   \u251c\u2500\u2500 products.php\n\u2502   \u251c\u2500\u2500 view_cart.php\n\u2502   \u251c\u2500\u2500 checkout.php\n\u2502   \u2514\u2500\u2500 confirm_order.php\n\u2514\u2500\u2500 scripts/\n    \u2514\u2500\u2500 add_to_cart.php\n```\n\n### Step 2: Create the Database\n\nSet up a MySQL database and create tables for `products`, `orders`, and `order_details`.\n\n```sql\nCREATE TABLE products (\n    id INT AUTO_INCREMENT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    price DECIMAL(10,2) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE orders (\n    order_id INT AUTO_INCREMENT PRIMARY KEY,\n    user_name VARCHAR(255),\n    email VARCHAR(255),\n    address TEXT,\n    transaction_id VARCHAR(255),\n    total_amount DECIMAL(10,2),\n    order_date DATETIME DEFAULT CURRENT_TIMESTAMP\n);\n\nCREATE TABLE order_details (\n    id INT AUTO_INCREMENT PRIMARY KEY,\n    order_id INT,\n    product_id INT,\n    quantity INT,\n    price DECIMAL(10,2),\n    FOREIGN KEY (order_id) REFERENCES orders(order_id),\n    FOREIGN KEY (product_id) REFERENCES products(id)\n);\n```\n\n### Step 3: Set Up Database Connection\n\nIn `includes/db_connection.php`, add your database credentials.\n\n```php\n<?php\n$host = \"localhost\";\n$username = \"root\";\n$password = \"\";\n$dbname = \"purchase_system\";\n\n$conn = mysqli_connect($host, $username, $password, $dbname);\n\nif (!$conn) {\n    die(\"Connection failed: \" . mysqli_connect_error());\n}\n?>\n```\n\n### Step 4: Create Helper Functions\n\nIn `includes/functions.php`, add functions for working with the cart and orders.\n\n```php\n<?php\nsession_start();\n\nfunction get_products() {\n    include 'db_connection.php';\n    $query = \"SELECT * FROM products\";\n    $result = mysqli_query($conn, $query);\n    return $result;\n}\n\nfunction add_to_cart($product_id) {\n    if (!isset($_SESSION['cart'])) {\n        $_SESSION['cart'] = array();\n    }\n    \n    if (isset($_SESSION['cart'][$product_id])) {\n        $_SESSION['cart'][$product_id]['quantity']++;\n    } else {\n        $query = \"SELECT name, price FROM products WHERE id = ?\";\n        $stmt = mysqli_prepare($conn, $query);\n        mysqli_stmt_bind_param($stmt, 'i', $product_id);\n        mysqli_stmt_execute($stmt);\n        $result = mysqli_stmt_get_result($stmt);\n        $product = mysqli_fetch_assoc($result);\n        \n        $_SESSION['cart'][$product_id] = array(\n            'name' => $product['name'],\n            'price' => $product['price'],\n            'quantity' => 1\n        );\n    }\n}\n\nfunction update_cart($product_id, $quantity) {\n    if ($quantity > 0) {\n        $_SESSION['cart'][$product_id]['quantity'] = $quantity;\n    } else {\n        unset($_SESSION['cart'][$product_id]);\n    }\n}\n\nfunction calculate_total() {\n    $total = 0;\n    foreach ($_SESSION['cart'] as $item) {\n        $total += ($item['price'] * $item['quantity']);\n    }\n    return $total;\n}\n?>\n```\n\n### Step 5: Display Products (products.php)\n\nIn `pages/products.php`, display sample products with buy buttons.\n\n```php\n<?php\ninclude '../includes/db_connection.php';\ninclude '../includes/functions.php';\n\n$products = get_products();\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Product List</title>\n</head>\n<body>\n    <h1>Products</h1>\n    <?php while ($product = mysqli_fetch_assoc($products)): ?>\n        <div>\n            <h2><?php echo $product['name']; ?></h2>\n            <p><?php echo $product['description']; ?></p>\n            <p>$<?php echo number_format($product['price'], 2); ?></p>\n            <a href=\"../scripts/add_to_cart.php?id=<?php echo $product['id']; ?>\">Buy Now</a>\n        </div>\n    <?php endwhile; ?>\n    <a href=\"view_cart.php\">View Cart</a>\n</body>\n</html>\n```\n\n### Step 6: Add to Cart (add_to_cart.php)\n\nIn `scripts/add_to_cart.php`, handle adding products to the session cart.\n\n```php\n<?php\ninclude '../includes/functions.php';\n\nif (isset($_GET['id'])) {\n    add_to_cart($_GET['id']);\n}\n\nheader(\"Location: ../pages/products.php\");\nexit();\n?>\n```\n\n### Step 7: View Cart (view_cart.php)\n\nIn `pages/view_cart.php`, display the cart contents and allow updates.\n\n```php\n<?php\ninclude '../includes/db_connection.php';\ninclude '../includes/functions.php';\n\nif (!isset($_SESSION['cart'])) {\n    $_SESSION['cart'] = array();\n}\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Shopping Cart</title>\n</head>\n<body>\n    <h1>Your Shopping Cart</h1>\n    <?php if (empty($_SESSION['cart'])): ?>\n        <p>Your cart is empty. <a href=\"products.php\">Continue shopping</a>.</p>\n    <?php else: ?>\n        <table border=\"1\">\n            <tr>\n                <th>Product</th>\n                <th>Price</th>\n                <th>Quantity</th>\n                <th>Total</th>\n            </tr>\n            <?php foreach ($_SESSION['cart'] as $id => $item): ?>\n                <tr>\n                    <td><?php echo $item['name']; ?></td>\n                    <td>$<?php echo number_format($item['price'], 2); ?></td>\n                    <td>\n                        <form action=\"../scripts/update_cart.php\" method=\"POST\">\n                            <input type=\"hidden\" name=\"id\" value=\"<?php echo $id; ?>\">\n                            <input type=\"number\" name=\"quantity\" min=\"1\" value=\"<?php echo $item['quantity']; ?>\">\n                            <button type=\"submit\">Update</button>\n                        </form>\n                    </td>\n                    <td>$<?php echo number_format($item['price'] * $item['quantity'], 2); ?></td>\n                </tr>\n            <?php endforeach; ?>\n        </table>\n        <p>Total: $<?php echo number_format(calculate_total(), 2); ?></p>\n        <a href=\"checkout.php\">Proceed to Checkout</a> |\n        <a href=\"products.php\">Continue Shopping</a>\n    <?php endif; ?>\n</body>\n</html>\n```\n\n### Step 8: Checkout Page (checkout.php)\n\nIn `pages/checkout.php`, create a form for payment details.\n\n```php\n<?php\nsession_start();\nif (empty($_SESSION['cart'])) {\n    header(\"Location: products.php\");\n    exit();\n}\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Checkout</title>\n</head>\n<body>\n    <h1>Checkout</h1>\n    <form action=\"process_checkout.php\" method=\"POST\">\n        <div>\n            <label for=\"name\">Name:</label>\n            <input type=\"text\" id=\"name\" name=\"name\" required>\n        </div>\n        <div>\n            <label for=\"email\">Email:</label>\n            <input type=\"email\" id=\"email\" name=\"email\" required>\n        </div>\n        <div>\n            <label for=\"address\">Address:</label>\n            <textarea id=\"address\" name=\"address\" required></textarea>\n        </div>\n        <div>\n            <label for=\"city\">City:</label>\n            <input type=\"text\" id=\"city\" name=\"city\" required>\n        </div>\n        <div>\n            <label for=\"state\">State:</label>\n            <input type=\"text\" id=\"state\" name=\"state\" required>\n        </div>\n        <div>\n            <label for=\"zip_code\">ZIP Code:</label>\n            <input type=\"text\" id=\"zip_code\" name=\"zip_code\" pattern=\"[0-9]{5}\" required>\n        </div>\n        <h2>Payment Information</h2>\n        <div>\n            <label for=\"card_number\">Card Number:</label>\n            <input type=\"text\" id=\"card_number\" name=\"card_number\" pattern=\"[0-9]{16}\" required>\n        </div>\n        <div>\n            <label for=\"cvv\">CVV:</label>\n            <input type=\"text\" id=\"cvv\" name=\"cvv\" pattern=\"[0-9]{3}\" required>\n        </div>\n        <button type=\"submit\">Place Order</button>\n    </form>\n</body>\n</html>\n```\n\n### Step 9: Process Checkout (process_checkout.php)\n\nIn `pages/process_checkout.php`, handle the checkout process.\n\n```php\n<?php\ninclude '../includes/db_connection.php';\nsession_start();\n\nif (!empty($_SESSION['cart']) && isset($_POST)) {\n    $name = htmlspecialchars(trim($_POST['name']));\n    $email = filter_var($_POST['email'], FILTER_VALIDATE_EMAIL);\n    $address = htmlspecialchars(trim($_POST['address']));\n    $city = htmlspecialchars(trim($_POST['city']));\n    $state = htmlspecialchars(trim($_POST['state']));\n    $zip_code = htmlspecialchars(trim($_POST['zip_code']));\n    \n    // Simulate transaction ID\n    $transaction_id = 'txn_' . time() . '_' . rand(1000, 9999);\n    \n    // Insert order into database\n    $order_query = \"INSERT INTO orders (user_name, email, address, transaction_id, total_amount) \n                    VALUES (?, ?, ?, ?, ?)\";\n    $stmt_order = mysqli_prepare($conn, $order_query);\n    mysqli_stmt_bind_param($stmt_order, 'ssdss', $name, $email, $address, $transaction_id, calculate_total());\n    \n    if (mysqli_stmt_execute($stmt_order)) {\n        $order_id = mysqli_insert_id($conn);\n        \n        foreach ($_SESSION['cart'] as $id => $item) {\n            $detail_query = \"INSERT INTO order_details (order_id, product_id, quantity, price)\n                            VALUES (?, ?, ?, ?)\";\n            $stmt_detail = mysqli_prepare($conn, $detail_query);\n            mysqli_stmt_bind_param($stmt_detail, 'iidi', $order_id, $id, $item['quantity'], $item['price']);\n            \n            if (!mysqli_stmt_execute($stmt_detail)) {\n                echo \"Error saving order details: \" . mysqli_error($conn);\n                exit();\n            }\n        }\n        \n        // Clear cart\n        unset($_SESSION['cart']);\n        header(\"Location: confirm_order.php?order_id=$order_id\");\n        exit();\n    } else {\n        die(\"Error processing order: \" . mysqli_error($conn));\n    }\n} else {\n    header(\"Location: view_cart.php\");\n    exit();\n}\n?>\n```\n\n### Step 10: Confirmation Page (confirm_order.php)\n\nIn `pages/confirm_order.php`, show the order confirmation.\n\n```php\n<?php\ninclude '../includes/db_connection.php';\nsession_start();\n\nif (!isset($_GET['order_id'])) {\n    header(\"Location: products.php\");\n    exit();\n}\n\n$order_id = $_GET['order_id'];\n$query = \"SELECT * FROM orders WHERE order_id = ?\";\n$stmt = mysqli_prepare($conn, $query);\nmysqli_stmt_bind_param($stmt, 'i', $order_id);\nmysqli_stmt_execute($stmt);\n$result = mysqli_stmt_get_result($stmt);\n$order = mysqli_fetch_assoc($result);\n\nif (!$order) {\n    header(\"Location: products.php\");\n    exit();\n}\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Order Confirmation</title>\n</head>\n<body>\n    <h1>Thank You for Your Order!</h1>\n    <p>Your order has been successfully processed.</p>\n    <div>\n        <h2>Order Details:</h2>\n        <p><strong>Name:</strong> <?php echo $order['user_name']; ?></p>\n        <p><strong>Email:</strong> <?php echo $order['email']; ?></p>\n        <p><strong>Transaction ID:</strong> <?php echo $order['transaction_id']; ?></p>\n        <p><strong>Total Amount:</strong> $<?php echo number_format($order['total_amount'], 2); ?></p>\n    </div>\n</body>\n</html>\n```\n\n### Step 11: Update Cart Quantity (update_cart.php)\n\nIn `scripts/update_cart.php`, handle quantity updates.\n\n```php\n<?php\ninclude '../includes/functions.php';\n\nif (isset($_POST['id']) && isset($_POST['quantity'])) {\n    update_cart($_POST['id'], $_POST['quantity']);\n}\n\nheader(\"Location: ../pages/view_cart.php\");\nexit();\n?>\n```\n\n### Step 12: Testing the Purchase Process\n\n1. **Display Products:** Visit `products.php` to see available items.\n2. **Add to Cart:** Click 'Buy Now' to add products to your cart.\n3. **View Cart:** Check out the items in your cart and adjust quantities as needed.\n4. **Checkout:** Provide billing information and submit the order.\n5. **Confirmation:** Receive a confirmation page with transaction details.\n\n### Step 13: Implement Payment Integration\n\nTo integrate Stripe for secure payments:\n\n1. Sign up for a Stripe account and get API keys.\n2. Install the Stripe PHP library using Composer:\n   ```bash\n   composer require stripe/stripe-php\n   ```\n3. In `process_checkout.php`, replace the payment simulation with actual Stripe charges.\n\n### Step 14: Enhance Security\n\n- **Sanitize Inputs:** Use functions like `htmlspecialchars()` and `mysqli_real_escape_string()`.\n- **Validate Forms:** Ensure all required fields are filled before processing.\n- **Use HTTPS:** Secure your site to protect sensitive information.\n- **Prevent Session Hijacking:** Implement secure session management practices.\n\n### Step 15: Error Handling\n\n- Add error messages for invalid inputs or failed transactions.\n- Use try-catch blocks where appropriate to handle exceptions gracefully.\n\n### Step 16: Order Tracking and Email Notifications\n\n- Send confirmation emails upon successful orders.\n- Provide an order tracking page where users can view their purchase history.\n\nThis comprehensive guide outlines the creation of a basic PHP-based e-commerce purchase system, including product display, cart management, checkout, payment processing, and order confirmation.", "code_blocks": [null, null, "```php\n<?php\n$host = \"localhost\";\n$username = \"root\";\n$password = \"\";\n$dbname = \"purchase_system\";\n\n$conn = mysqli_connect($host, $username, $password, $dbname);\n\nif (!$conn) {\n    die(\"Connection failed: \" . mysqli_connect_error());\n}\n?>\n```", "```php\n<?php\nsession_start();\n\nfunction get_products() {\n    include 'db_connection.php';\n    $query = \"SELECT * FROM products\";\n    $result = mysqli_query($conn, $query);\n    return $result;\n}\n\nfunction add_to_cart($product_id) {\n    if (!isset($_SESSION['cart'])) {\n        $_SESSION['cart'] = array();\n    }\n    \n    if (isset($_SESSION['cart'][$product_id])) {\n        $_SESSION['cart'][$product_id]['quantity']++;\n    } else {\n        $query = \"SELECT name, price FROM products WHERE id = ?\";\n        $stmt = mysqli_prepare($conn, $query);\n        mysqli_stmt_bind_param($stmt, 'i', $product_id);\n        mysqli_stmt_execute($stmt);\n        $result = mysqli_stmt_get_result($stmt);\n        $product = mysqli_fetch_assoc($result);\n        \n        $_SESSION['cart'][$product_id] = array(\n            'name' => $product['name'],\n            'price' => $product['price'],\n            'quantity' => 1\n        );\n    }\n}\n\nfunction update_cart($product_id, $quantity) {\n    if ($quantity > 0) {\n        $_SESSION['cart'][$product_id]['quantity'] = $quantity;\n    } else {\n        unset($_SESSION['cart'][$product_id]);\n    }\n}\n\nfunction calculate_total() {\n    $total = 0;\n    foreach ($_SESSION['cart'] as $item) {\n        $total += ($item['price'] * $item['quantity']);\n    }\n    return $total;\n}\n?>\n```", "```php\n<?php\ninclude '../includes/db_connection.php';\ninclude '../includes/functions.php';\n\n$products = get_products();\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Product List</title>\n</head>\n<body>\n    <h1>Products</h1>\n    <?php while ($product = mysqli_fetch_assoc($products)): ?>\n        <div>\n            <h2><?php echo $product['name']; ?></h2>\n            <p><?php echo $product['description']; ?></p>\n            <p>$<?php echo number_format($product['price'], 2); ?></p>\n            <a href=\"../scripts/add_to_cart.php?id=<?php echo $product['id']; ?>\">Buy Now</a>\n        </div>\n    <?php endwhile; ?>\n    <a href=\"view_cart.php\">View Cart</a>\n</body>\n</html>\n```", "```php\n<?php\ninclude '../includes/functions.php';\n\nif (isset($_GET['id'])) {\n    add_to_cart($_GET['id']);\n}\n\nheader(\"Location: ../pages/products.php\");\nexit();\n?>\n```", "```php\n<?php\ninclude '../includes/db_connection.php';\ninclude '../includes/functions.php';\n\nif (!isset($_SESSION['cart'])) {\n    $_SESSION['cart'] = array();\n}\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Shopping Cart</title>\n</head>\n<body>\n    <h1>Your Shopping Cart</h1>\n    <?php if (empty($_SESSION['cart'])): ?>\n        <p>Your cart is empty. <a href=\"products.php\">Continue shopping</a>.</p>\n    <?php else: ?>\n        <table border=\"1\">\n            <tr>\n                <th>Product</th>\n                <th>Price</th>\n                <th>Quantity</th>\n                <th>Total</th>\n            </tr>\n            <?php foreach ($_SESSION['cart'] as $id => $item): ?>\n                <tr>\n                    <td><?php echo $item['name']; ?></td>\n                    <td>$<?php echo number_format($item['price'], 2); ?></td>\n                    <td>\n                        <form action=\"../scripts/update_cart.php\" method=\"POST\">\n                            <input type=\"hidden\" name=\"id\" value=\"<?php echo $id; ?>\">\n                            <input type=\"number\" name=\"quantity\" min=\"1\" value=\"<?php echo $item['quantity']; ?>\">\n                            <button type=\"submit\">Update</button>\n                        </form>\n                    </td>\n                    <td>$<?php echo number_format($item['price'] * $item['quantity'], 2); ?></td>\n                </tr>\n            <?php endforeach; ?>\n        </table>\n        <p>Total: $<?php echo number_format(calculate_total(), 2); ?></p>\n        <a href=\"checkout.php\">Proceed to Checkout</a> |\n        <a href=\"products.php\">Continue Shopping</a>\n    <?php endif; ?>\n</body>\n</html>\n```", "```php\n<?php\nsession_start();\nif (empty($_SESSION['cart'])) {\n    header(\"Location: products.php\");\n    exit();\n}\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Checkout</title>\n</head>\n<body>\n    <h1>Checkout</h1>\n    <form action=\"process_checkout.php\" method=\"POST\">\n        <div>\n            <label for=\"name\">Name:</label>\n            <input type=\"text\" id=\"name\" name=\"name\" required>\n        </div>\n        <div>\n            <label for=\"email\">Email:</label>\n            <input type=\"email\" id=\"email\" name=\"email\" required>\n        </div>\n        <div>\n            <label for=\"address\">Address:</label>\n            <textarea id=\"address\" name=\"address\" required></textarea>\n        </div>\n        <div>\n            <label for=\"city\">City:</label>\n            <input type=\"text\" id=\"city\" name=\"city\" required>\n        </div>\n        <div>\n            <label for=\"state\">State:</label>\n            <input type=\"text\" id=\"state\" name=\"state\" required>\n        </div>\n        <div>\n            <label for=\"zip_code\">ZIP Code:</label>\n            <input type=\"text\" id=\"zip_code\" name=\"zip_code\" pattern=\"[0-9]{5}\" required>\n        </div>\n        <h2>Payment Information</h2>\n        <div>\n            <label for=\"card_number\">Card Number:</label>\n            <input type=\"text\" id=\"card_number\" name=\"card_number\" pattern=\"[0-9]{16}\" required>\n        </div>\n        <div>\n            <label for=\"cvv\">CVV:</label>\n            <input type=\"text\" id=\"cvv\" name=\"cvv\" pattern=\"[0-9]{3}\" required>\n        </div>\n        <button type=\"submit\">Place Order</button>\n    </form>\n</body>\n</html>\n```", "```php\n<?php\ninclude '../includes/db_connection.php';\nsession_start();\n\nif (!empty($_SESSION['cart']) && isset($_POST)) {\n    $name = htmlspecialchars(trim($_POST['name']));\n    $email = filter_var($_POST['email'], FILTER_VALIDATE_EMAIL);\n    $address = htmlspecialchars(trim($_POST['address']));\n    $city = htmlspecialchars(trim($_POST['city']));\n    $state = htmlspecialchars(trim($_POST['state']));\n    $zip_code = htmlspecialchars(trim($_POST['zip_code']));\n    \n    // Simulate transaction ID\n    $transaction_id = 'txn_' . time() . '_' . rand(1000, 9999);\n    \n    // Insert order into database\n    $order_query = \"INSERT INTO orders (user_name, email, address, transaction_id, total_amount) \n                    VALUES (?, ?, ?, ?, ?)\";\n    $stmt_order = mysqli_prepare($conn, $order_query);\n    mysqli_stmt_bind_param($stmt_order, 'ssdss', $name, $email, $address, $transaction_id, calculate_total());\n    \n    if (mysqli_stmt_execute($stmt_order)) {\n        $order_id = mysqli_insert_id($conn);\n        \n        foreach ($_SESSION['cart'] as $id => $item) {\n            $detail_query = \"INSERT INTO order_details (order_id, product_id, quantity, price)\n                            VALUES (?, ?, ?, ?)\";\n            $stmt_detail = mysqli_prepare($conn, $detail_query);\n            mysqli_stmt_bind_param($stmt_detail, 'iidi', $order_id, $id, $item['quantity'], $item['price']);\n            \n            if (!mysqli_stmt_execute($stmt_detail)) {\n                echo \"Error saving order details: \" . mysqli_error($conn);\n                exit();\n            }\n        }\n        \n        // Clear cart\n        unset($_SESSION['cart']);\n        header(\"Location: confirm_order.php?order_id=$order_id\");\n        exit();\n    } else {\n        die(\"Error processing order: \" . mysqli_error($conn));\n    }\n} else {\n    header(\"Location: view_cart.php\");\n    exit();\n}\n?>\n```", "```php\n<?php\ninclude '../includes/db_connection.php';\nsession_start();\n\nif (!isset($_GET['order_id'])) {\n    header(\"Location: products.php\");\n    exit();\n}\n\n$order_id = $_GET['order_id'];\n$query = \"SELECT * FROM orders WHERE order_id = ?\";\n$stmt = mysqli_prepare($conn, $query);\nmysqli_stmt_bind_param($stmt, 'i', $order_id);\nmysqli_stmt_execute($stmt);\n$result = mysqli_stmt_get_result($stmt);\n$order = mysqli_fetch_assoc($result);\n\nif (!$order) {\n    header(\"Location: products.php\");\n    exit();\n}\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Order Confirmation</title>\n</head>\n<body>\n    <h1>Thank You for Your Order!</h1>\n    <p>Your order has been successfully processed.</p>\n    <div>\n        <h2>Order Details:</h2>\n        <p><strong>Name:</strong> <?php echo $order['user_name']; ?></p>\n        <p><strong>Email:</strong> <?php echo $order['email']; ?></p>\n        <p><strong>Transaction ID:</strong> <?php echo $order['transaction_id']; ?></p>\n        <p><strong>Total Amount:</strong> $<?php echo number_format($order['total_amount'], 2); ?></p>\n    </div>\n</body>\n</html>\n```", "```php\n<?php\ninclude '../includes/functions.php';\n\nif (isset($_POST['id']) && isset($_POST['quantity'])) {\n    update_cart($_POST['id'], $_POST['quantity']);\n}\n\nheader(\"Location: ../pages/view_cart.php\");\nexit();\n?>\n```"]}
