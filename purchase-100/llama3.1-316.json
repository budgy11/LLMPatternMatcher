{"prompt": "Create a purchase functionality using php", "llm_output": "Here is an example of a simple purchase functionality using PHP, including user authentication and database interaction. This example assumes you have the following:\n\n1. A MySQL database with two tables: `users` and `orders`.\n2. The `phpMyAdmin` extension installed to interact with your database.\n3. Basic knowledge of PHP.\n\n**Database Schema**\n\nFirst, let's create the necessary database schema:\n\n```sql\nCREATE TABLE users (\n    id INT PRIMARY KEY AUTO_INCREMENT,\n    username VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    password VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE orders (\n    id INT PRIMARY KEY AUTO_INCREMENT,\n    user_id INT NOT NULL,\n    product_name VARCHAR(255) NOT NULL,\n    quantity INT NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(id)\n);\n```\n\n**Authentication and User Model**\n\nCreate a `User.php` file to handle user authentication:\n\n```php\nclass User {\n    private $db;\n\n    function __construct($db) {\n        $this->db = $db;\n    }\n\n    public function login($username, $password) {\n        $query = \"SELECT * FROM users WHERE username = '$username' AND password = '$password'\";\n        return $this->db->query($query)->fetch_assoc();\n    }\n}\n```\n\n**Order Model**\n\nCreate an `Order.php` file to handle order-related functionality:\n\n```php\nclass Order {\n    private $db;\n\n    function __construct($db) {\n        $this->db = $db;\n    }\n\n    public function create_order($user_id, $product_name, $quantity, $price) {\n        $query = \"INSERT INTO orders (user_id, product_name, quantity, price) VALUES ('$user_id', '$product_name', '$quantity', '$price')\";\n        return $this->db->query($query);\n    }\n}\n```\n\n**Purchase Functionality**\n\nCreate a `purchase.php` file to handle the purchase functionality:\n\n```php\nrequire_once 'User.php';\nrequire_once 'Order.php';\n\n$db = new mysqli('localhost', 'username', 'password', 'database_name');\n\nif ($db->connect_error) {\n    die(\"Connection failed: \" . $db->connect_error);\n}\n\n$user = new User($db);\n\nif (isset($_POST['username']) && isset($_POST['password'])) {\n    $user_data = $user->login($_POST['username'], $_POST['password']);\n\n    if ($user_data) {\n        echo 'Welcome, ' . $user_data['username'] . '!';\n\n        $order = new Order($db);\n\n        $product_name = isset($_POST['product_name']) ? $_POST['product_name'] : '';\n        $quantity = (int)isset($_POST['quantity']);\n        $price = (float)isset($_POST['price']);\n\n        if ($quantity > 0 && $price > 0) {\n            $order->create_order($user_data['id'], $product_name, $quantity, $price);\n            echo 'Order placed successfully!';\n        } else {\n            echo 'Invalid quantity or price.';\n        }\n    } else {\n        echo 'Invalid username or password.';\n    }\n}\n\n?>\n\n<form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n    <label for=\"username\">Username:</label>\n    <input type=\"text\" id=\"username\" name=\"username\"><br><br>\n\n    <label for=\"password\">Password:</label>\n    <input type=\"password\" id=\"password\" name=\"password\"><br><br>\n\n    <label for=\"product_name\">Product Name:</label>\n    <input type=\"text\" id=\"product_name\" name=\"product_name\"><br><br>\n\n    <label for=\"quantity\">Quantity:</label>\n    <input type=\"number\" id=\"quantity\" name=\"quantity\"><br><br>\n\n    <label for=\"price\">Price:</label>\n    <input type=\"number\" id=\"price\" name=\"price\"><br><br>\n\n    <input type=\"submit\" value=\"Purchase\">\n</form>\n```\n\nThis code creates a basic purchase functionality with user authentication and order creation. The `purchase.php` file includes a form for users to input their details, product information, and quantity/price. After submitting the form, it checks if the user's credentials are valid and then places an order in the database.\n\nPlease note that this is a simplified example and you may need to adjust it according to your specific needs and security requirements (e.g., password hashing).", "code_blocks": [null, "```php\nclass User {\n    private $db;\n\n    function __construct($db) {\n        $this->db = $db;\n    }\n\n    public function login($username, $password) {\n        $query = \"SELECT * FROM users WHERE username = '$username' AND password = '$password'\";\n        return $this->db->query($query)->fetch_assoc();\n    }\n}\n```", "```php\nclass Order {\n    private $db;\n\n    function __construct($db) {\n        $this->db = $db;\n    }\n\n    public function create_order($user_id, $product_name, $quantity, $price) {\n        $query = \"INSERT INTO orders (user_id, product_name, quantity, price) VALUES ('$user_id', '$product_name', '$quantity', '$price')\";\n        return $this->db->query($query);\n    }\n}\n```", "```php\nrequire_once 'User.php';\nrequire_once 'Order.php';\n\n$db = new mysqli('localhost', 'username', 'password', 'database_name');\n\nif ($db->connect_error) {\n    die(\"Connection failed: \" . $db->connect_error);\n}\n\n$user = new User($db);\n\nif (isset($_POST['username']) && isset($_POST['password'])) {\n    $user_data = $user->login($_POST['username'], $_POST['password']);\n\n    if ($user_data) {\n        echo 'Welcome, ' . $user_data['username'] . '!';\n\n        $order = new Order($db);\n\n        $product_name = isset($_POST['product_name']) ? $_POST['product_name'] : '';\n        $quantity = (int)isset($_POST['quantity']);\n        $price = (float)isset($_POST['price']);\n\n        if ($quantity > 0 && $price > 0) {\n            $order->create_order($user_data['id'], $product_name, $quantity, $price);\n            echo 'Order placed successfully!';\n        } else {\n            echo 'Invalid quantity or price.';\n        }\n    } else {\n        echo 'Invalid username or password.';\n    }\n}\n\n?>\n\n<form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n    <label for=\"username\">Username:</label>\n    <input type=\"text\" id=\"username\" name=\"username\"><br><br>\n\n    <label for=\"password\">Password:</label>\n    <input type=\"password\" id=\"password\" name=\"password\"><br><br>\n\n    <label for=\"product_name\">Product Name:</label>\n    <input type=\"text\" id=\"product_name\" name=\"product_name\"><br><br>\n\n    <label for=\"quantity\">Quantity:</label>\n    <input type=\"number\" id=\"quantity\" name=\"quantity\"><br><br>\n\n    <label for=\"price\">Price:</label>\n    <input type=\"number\" id=\"price\" name=\"price\"><br><br>\n\n    <input type=\"submit\" value=\"Purchase\">\n</form>\n```"]}
