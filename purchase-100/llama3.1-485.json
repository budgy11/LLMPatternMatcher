{"prompt": "Create a purchase functionality using php", "llm_output": "Here is an example of a basic purchase functionality using PHP. This example will include:\n\n1. Creating a database to store purchase information\n2. Generating a unique order ID for each purchase\n3. Adding items to the cart\n4. Viewing the cart contents\n5. Checking out and making a purchase\n6. Updating stock levels\n\n**Note:** This is a basic example and you should consider implementing additional functionality such as user authentication, payment gateways, and error handling.\n\n### Step 1: Create a database to store purchase information\n\nCreate a new MySQL database and add the following tables:\n\n```sql\nCREATE TABLE orders (\n    id INT AUTO_INCREMENT PRIMARY KEY,\n    order_id VARCHAR(255) NOT NULL,\n    customer_name VARCHAR(255),\n    total DECIMAL(10,2)\n);\n\nCREATE TABLE order_items (\n    id INT AUTO_INCREMENT PRIMARY KEY,\n    order_id INT,\n    product_id INT,\n    quantity INT,\n    price DECIMAL(10,2),\n    FOREIGN KEY (order_id) REFERENCES orders(id)\n);\n```\n\n### Step 2: Connect to the database and create a purchase functionality\n\nCreate a new PHP file called `purchase.php` and add the following code:\n\n```php\n<?php\nrequire_once 'db_connect.php';\n\n// Function to generate a unique order ID\nfunction generate_order_id() {\n    return substr(uniqid(rand(), true), 0, 8);\n}\n\n// Function to get cart contents\nfunction get_cart_contents($cart) {\n    $contents = array();\n    foreach ($cart as $product_id => $quantity) {\n        $contents[] = array(\n            'product_id' => $product_id,\n            'quantity' => $quantity\n        );\n    }\n    return $contents;\n}\n\n// Function to process a purchase\nfunction process_purchase($order_id, $customer_name, $total) {\n    // Update orders table with new order information\n    $query = \"INSERT INTO orders (order_id, customer_name, total)\n              VALUES ('$order_id', '$customer_name', '$total')\";\n    mysql_query($query);\n\n    // Get the ID of the newly created order\n    $order_id = mysql_insert_id();\n\n    // Update order_items table with new item information\n    foreach ($cart as $product_id => $quantity) {\n        $query = \"INSERT INTO order_items (order_id, product_id, quantity, price)\n                  VALUES ('$order_id', '$product_id', '$quantity', 'price')\";\n        mysql_query($query);\n    }\n\n    // Update stock levels in products table\n    foreach ($cart as $product_id => $quantity) {\n        $query = \"UPDATE products SET stock_level = stock_level - '$quantity'\n                  WHERE id = '$product_id'\";\n        mysql_query($query);\n    }\n}\n\n// Function to display the cart contents\nfunction display_cart_contents($cart) {\n    echo '<h2>Cart Contents:</h2>';\n    foreach ($cart as $product_id => $quantity) {\n        $product_info = get_product_info($product_id);\n        echo \"<p>$product_info['name'] x $quantity</p>\";\n    }\n}\n\n// Function to display the checkout form\nfunction display_checkout_form() {\n    ?>\n    <h2>Checkout:</h2>\n    <form action=\"checkout.php\" method=\"post\">\n        <label for=\"customer_name\">Customer Name:</label>\n        <input type=\"text\" id=\"customer_name\" name=\"customer_name\"><br><br>\n        <input type=\"submit\" value=\"Proceed to Checkout\">\n    </form>\n    <?php\n}\n\n// Function to display the success message after checkout\nfunction display_success_message() {\n    echo '<h2>Success!</h2>';\n    echo '<p>Your order has been successfully processed.</p>';\n}\n\n?>\n```\n\n### Step 3: Create a checkout functionality\n\nCreate a new PHP file called `checkout.php` and add the following code:\n\n```php\n<?php\nrequire_once 'purchase.php';\n\n// Check if customer has submitted the form\nif (isset($_POST['customer_name'])) {\n    $order_id = generate_order_id();\n    $cart_contents = $_SESSION['cart'];\n    process_purchase($order_id, $_POST['customer_name'], calculate_total($cart_contents));\n    display_success_message();\n} else {\n    display_checkout_form();\n}\n\nfunction calculate_total($cart) {\n    $total = 0;\n    foreach ($cart as $product_id => $quantity) {\n        $product_info = get_product_info($product_id);\n        $total += $product_info['price'] * $quantity;\n    }\n    return $total;\n}\n?>\n```\n\n### Step 4: Add items to the cart\n\nCreate a new PHP file called `add_to_cart.php` and add the following code:\n\n```php\n<?php\nrequire_once 'db_connect.php';\n\n// Get the product ID from the URL parameter\n$product_id = $_GET['product_id'];\n\n// Check if product exists in the database\n$query = \"SELECT * FROM products WHERE id = '$product_id'\";\n$result = mysql_query($query);\nif (mysql_num_rows($result) == 1) {\n    // Get the product information\n    $product_info = mysql_fetch_array($result);\n\n    // Check if cart is already populated with this product\n    if (!isset($_SESSION['cart'][$product_id])) {\n        $_SESSION['cart'][$product_id] = array('quantity' => 0, 'price' => $product_info['price']);\n    }\n\n    // Increment the quantity of the product in the cart\n    $_SESSION['cart'][$product_id]['quantity']++;\n\n    // Redirect to cart page\n    header(\"Location: cart.php\");\n} else {\n    echo \"Product not found!\";\n}\n?>\n```\n\n### Step 5: Display the cart contents\n\nCreate a new PHP file called `cart.php` and add the following code:\n\n```php\n<?php\nrequire_once 'db_connect.php';\n\n// Get the cart contents from the session\n$cart = $_SESSION['cart'];\n\ndisplay_cart_contents($cart);\n?>\n```\n\nThis is a basic example of how you can create a purchase functionality using PHP. You will need to modify and expand on this code to fit your specific needs.\n\n**Note:** This example uses MySQLi extension which is deprecated since PHP 5.5.0. Consider using PDO or MySQLi prepared statements for security reasons.", "code_blocks": [null, "```php\n<?php\nrequire_once 'db_connect.php';\n\n// Function to generate a unique order ID\nfunction generate_order_id() {\n    return substr(uniqid(rand(), true), 0, 8);\n}\n\n// Function to get cart contents\nfunction get_cart_contents($cart) {\n    $contents = array();\n    foreach ($cart as $product_id => $quantity) {\n        $contents[] = array(\n            'product_id' => $product_id,\n            'quantity' => $quantity\n        );\n    }\n    return $contents;\n}\n\n// Function to process a purchase\nfunction process_purchase($order_id, $customer_name, $total) {\n    // Update orders table with new order information\n    $query = \"INSERT INTO orders (order_id, customer_name, total)\n              VALUES ('$order_id', '$customer_name', '$total')\";\n    mysql_query($query);\n\n    // Get the ID of the newly created order\n    $order_id = mysql_insert_id();\n\n    // Update order_items table with new item information\n    foreach ($cart as $product_id => $quantity) {\n        $query = \"INSERT INTO order_items (order_id, product_id, quantity, price)\n                  VALUES ('$order_id', '$product_id', '$quantity', 'price')\";\n        mysql_query($query);\n    }\n\n    // Update stock levels in products table\n    foreach ($cart as $product_id => $quantity) {\n        $query = \"UPDATE products SET stock_level = stock_level - '$quantity'\n                  WHERE id = '$product_id'\";\n        mysql_query($query);\n    }\n}\n\n// Function to display the cart contents\nfunction display_cart_contents($cart) {\n    echo '<h2>Cart Contents:</h2>';\n    foreach ($cart as $product_id => $quantity) {\n        $product_info = get_product_info($product_id);\n        echo \"<p>$product_info['name'] x $quantity</p>\";\n    }\n}\n\n// Function to display the checkout form\nfunction display_checkout_form() {\n    ?>\n    <h2>Checkout:</h2>\n    <form action=\"checkout.php\" method=\"post\">\n        <label for=\"customer_name\">Customer Name:</label>\n        <input type=\"text\" id=\"customer_name\" name=\"customer_name\"><br><br>\n        <input type=\"submit\" value=\"Proceed to Checkout\">\n    </form>\n    <?php\n}\n\n// Function to display the success message after checkout\nfunction display_success_message() {\n    echo '<h2>Success!</h2>';\n    echo '<p>Your order has been successfully processed.</p>';\n}\n\n?>\n```", "```php\n<?php\nrequire_once 'purchase.php';\n\n// Check if customer has submitted the form\nif (isset($_POST['customer_name'])) {\n    $order_id = generate_order_id();\n    $cart_contents = $_SESSION['cart'];\n    process_purchase($order_id, $_POST['customer_name'], calculate_total($cart_contents));\n    display_success_message();\n} else {\n    display_checkout_form();\n}\n\nfunction calculate_total($cart) {\n    $total = 0;\n    foreach ($cart as $product_id => $quantity) {\n        $product_info = get_product_info($product_id);\n        $total += $product_info['price'] * $quantity;\n    }\n    return $total;\n}\n?>\n```", "```php\n<?php\nrequire_once 'db_connect.php';\n\n// Get the product ID from the URL parameter\n$product_id = $_GET['product_id'];\n\n// Check if product exists in the database\n$query = \"SELECT * FROM products WHERE id = '$product_id'\";\n$result = mysql_query($query);\nif (mysql_num_rows($result) == 1) {\n    // Get the product information\n    $product_info = mysql_fetch_array($result);\n\n    // Check if cart is already populated with this product\n    if (!isset($_SESSION['cart'][$product_id])) {\n        $_SESSION['cart'][$product_id] = array('quantity' => 0, 'price' => $product_info['price']);\n    }\n\n    // Increment the quantity of the product in the cart\n    $_SESSION['cart'][$product_id]['quantity']++;\n\n    // Redirect to cart page\n    header(\"Location: cart.php\");\n} else {\n    echo \"Product not found!\";\n}\n?>\n```", "```php\n<?php\nrequire_once 'db_connect.php';\n\n// Get the cart contents from the session\n$cart = $_SESSION['cart'];\n\ndisplay_cart_contents($cart);\n?>\n```"]}
