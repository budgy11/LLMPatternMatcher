{"prompt": "Create a purchase functionality using php", "llm_output": "<think>\nAlright, I need to help the user create a purchase functionality using PHP. Let me think about what that entails.\n\nFirst, I should outline the main components required for such a system. It seems like we'll need a database to store product information, users, and orders. So, creating tables for products, users, and order details makes sense.\n\nNext, I'll consider user authentication since purchases require a registered user. Implementing login and registration forms with password hashing is essential for security.\n\nThen, the shopping cart functionality comes into play. I'll need to allow users to add items to their cart, view it, and proceed to checkout. Using sessions can help keep track of the cart contents as the user navigates the site.\n\nFor the checkout process, after the user selects items, they should be able to review their order and confirm the purchase. This involves calculating the total price and handling the payment submission.\n\nI'll also need to handle cases where a user isn't logged in\u2014redirecting them to the login page before allowing them to purchase anything.\n\nSecurity is a big concern, so using prepared statements with PDO will help prevent SQL injection. Encrypting passwords with bcrypt is another important step to protect user data.\n\nLet me break down the code structure. Starting with the database setup, then moving on to authentication functions like registration and login. After that, handling cart operations\u2014adding items, displaying them, and managing quantities. Finally, processing the checkout by creating orders in the database and redirecting appropriately.\n\nI should also consider error handling and user feedback, making sure messages are displayed clearly when actions succeed or fail.\n\nTesting each part step by step is crucial. For example, ensuring that adding a product to the cart works correctly and that the total price calculation is accurate.\n\nOverall, organizing the code into separate files for clarity\u2014like including a database connection file in each script\u2014will make maintenance easier.\n</think>\n\nHere's an example of a purchase functionality using PHP:\n\nThis example includes:\n1. Product display\n2. Shopping cart management\n3. User authentication\n4. Order processing\n\nFirst, create a `products.php` table in your database:\n\n```sql\nCREATE TABLE products (\n    id INT AUTO_INCREMENT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    description TEXT,\n    stock INT NOT NULL\n);\n\n-- Add some sample products\nINSERT INTO products (name, price, description, stock) VALUES \n('Laptop', 999.99, 'High-performance laptop', 5),\n('Smartphone', 699.99, 'Latest smartphone model', 10),\n('Tablet', 349.99, 'Lightweight tablet', 8);\n```\n\nNext, create a `users.php` table:\n\n```sql\nCREATE TABLE users (\n    id INT AUTO_INCREMENT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL UNIQUE,\n    password_hash VARCHAR(255) NOT NULL,\n    email VARCHAR(100) NOT NULL UNIQUE\n);\n```\n\nNow, create the main PHP files.\n\n1. `index.php`:\n\n```php\n<?php\ninclude 'db_connection.php';\n\n// Get all products\n$query = \"SELECT * FROM products\";\n$result = $conn->query($query);\n\n?>\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Store</title>\n</head>\n<body>\n    <?php if (!isset($_SESSION['user_id'])): ?>\n        <a href=\"login.php\">Login</a> | <a href=\"register.php\">Register</a>\n    <?php else: ?>\n        <a href=\"cart.php\">View Cart</a> | <a href=\"logout.php\">Logout</a>\n    <?php endif; ?>\n\n    <h1>Welcome to Our Store</h1>\n    \n    <?php while ($row = $result->fetch(PDO::FETCH_ASSOC)): ?>\n        <div style=\"border: 1px solid #ddd; padding: 10px; margin-bottom: 10px;\">\n            <h2><?php echo $row['name']; ?></h2>\n            <p><?php echo $row['description']; ?></p>\n            <p>Price: $<?php echo number_format($row['price'], 2); ?></p>\n            <?php if ($row['stock'] > 0): ?>\n                <form action=\"add_to_cart.php\" method=\"POST\">\n                    <input type=\"hidden\" name=\"product_id\" value=\"<?php echo $row['id']; ?>\">\n                    <input type=\"number\" name=\"quantity\" min=\"1\" max=\"<?php echo $row['stock']; ?>\" value=\"1\">\n                    <button type=\"submit\">Add to Cart</button>\n                </form>\n            <?php else: ?>\n                <p>Out of stock</p>\n            <?php endif; ?>\n        </div>\n    <?php endwhile; ?>\n\n</body>\n</html>\n```\n\n2. `cart.php`:\n\n```php\n<?php\nsession_start();\ninclude 'db_connection.php';\n\nif (!isset($_SESSION['user_id'])) {\n    header(\"Location: login.php\");\n    exit();\n}\n\n// Get cart items\n$cart_items = [];\nif (isset($_SESSION['cart'])) {\n    $product_ids = implode(',', array_keys($_SESSION['cart']));\n    \n    $query = \"SELECT * FROM products WHERE id IN ($product_ids)\";\n    $result = $conn->query($query);\n    \n    while ($row = $result->fetch(PDO::FETCH_ASSOC)) {\n        $cart_items[] = [\n            'id' => $row['id'],\n            'name' => $row['name'],\n            'price' => $row['price'],\n            'quantity' => $_SESSION['cart'][$row['id']]\n        ];\n    }\n}\n\n$total_price = array_reduce($cart_items, function ($carry, $item) {\n    return $carry + ($item['price'] * $item['quantity']);\n}, 0);\n\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Shopping Cart</title>\n</head>\n<body>\n    <a href=\"index.php\">Back to Store</a> | <a href=\"logout.php\">Logout</a>\n\n    <?php if (empty($cart_items)): ?>\n        <p>Your cart is empty.</p>\n        <a href=\"index.php\">Continue shopping</a>\n    <?php else: ?>\n\n        <h1>Your Shopping Cart</h1>\n        \n        <table border=\"1\">\n            <tr>\n                <th>Product Name</th>\n                <th>Quantity</th>\n                <th>Price</th>\n                <th>Total</th>\n                <th>Action</th>\n            </tr>\n            \n            <?php foreach ($cart_items as $item): ?>\n                <tr>\n                    <td><?php echo $item['name']; ?></td>\n                    <td><input type=\"number\" name=\"quantity\" min=\"1\" value=\"<?php echo $item['quantity']; ?>\"></td>\n                    <td>$<?php echo number_format($item['price'], 2); ?></td>\n                    <td>$<?php echo number_format($item['price'] * $item['quantity'], 2); ?></td>\n                    <td>\n                        <a href=\"remove_from_cart.php?id=<?php echo $item['id']; ?>\">Remove</a>\n                        <form style=\"display: inline;\" action=\"update_cart.php\" method=\"POST\">\n                            <input type=\"hidden\" name=\"product_id\" value=\"<?php echo $item['id']; ?>\">\n                            <button type=\"submit\">Update</button>\n                        </form>\n                    </td>\n                </tr>\n            <?php endforeach; ?>\n        </table>\n\n        <p>Total: $<?php echo number_format($total_price, 2); ?></p>\n        \n        <a href=\"checkout.php\">Checkout</a> | \n        <a href=\"index.php\">Continue shopping</a>\n\n    <?php endif; ?>\n\n</body>\n</html>\n```\n\n3. `add_to_cart.php`:\n\n```php\n<?php\nsession_start();\ninclude 'db_connection.php';\n\nif (!isset($_SESSION['user_id'])) {\n    header(\"Location: login.php\");\n    exit();\n}\n\nif (isset($_POST['product_id']) && isset($_POST['quantity'])) {\n    $product_id = $_POST['product_id'];\n    $quantity = max(1, min((int)$_POST['quantity'], 10)); // Limit quantity to 1-10\n    \n    if (!isset($_SESSION['cart'])) {\n        $_SESSION['cart'] = array();\n    }\n    \n    if (array_key_exists($product_id, $_SESSION['cart'])) {\n        $_SESSION['cart'][$product_id] += $quantity;\n    } else {\n        $_SESSION['cart'][$product_id] = $quantity;\n    }\n}\n\nheader(\"Location: index.php\");\nexit();\n```\n\n4. `update_cart.php`:\n\n```php\n<?php\nsession_start();\ninclude 'db_connection.php';\n\nif (!isset($_SESSION['user_id'])) {\n    header(\"Location: login.php\");\n    exit();\n}\n\nif (isset($_POST['product_id']) && isset($_POST['quantity'])) {\n    $product_id = $_POST['product_id'];\n    $quantity = max(1, (int)$_POST['quantity']);\n    \n    if (isset($_SESSION['cart'][$product_id])) {\n        $_SESSION['cart'][$product_id] = $quantity;\n    }\n}\n\nheader(\"Location: cart.php\");\nexit();\n```\n\n5. `remove_from_cart.php`:\n\n```php\n<?php\nsession_start();\ninclude 'db_connection.php';\n\nif (!isset($_GET['id'])) {\n    header(\"Location: cart.php\");\n    exit();\n}\n\n$id = $_GET['id'];\n\nif (isset($_SESSION['cart'][$id])) {\n    unset($_SESSION['cart'][$id]);\n}\n\nheader(\"Location: cart.php\");\nexit();\n```\n\n6. `checkout.php`:\n\n```php\n<?php\nsession_start();\ninclude 'db_connection.php';\n\nif (!isset($_SESSION['user_id'])) {\n    header(\"Location: login.php\");\n    exit();\n}\n\n// Get cart items\n$cart_items = [];\nif (isset($_SESSION['cart'])) {\n    $product_ids = implode(',', array_keys($_SESSION['cart']));\n    \n    $query = \"SELECT * FROM products WHERE id IN ($product_ids)\";\n    $result = $conn->query($query);\n    \n    while ($row = $result->fetch(PDO::FETCH_ASSOC)) {\n        $cart_items[] = [\n            'id' => $row['id'],\n            'name' => $row['name'],\n            'price' => $row['price'],\n            'quantity' => $_SESSION['cart'][$row['id']]\n        ];\n    }\n}\n\n$total_price = array_reduce($cart_items, function ($carry, $item) {\n    return $carry + ($item['price'] * $item['quantity']);\n}, 0);\n\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Checkout</title>\n</head>\n<body>\n    <?php if (empty($cart_items)): ?>\n        <p>Your cart is empty.</p>\n        <a href=\"index.php\">Continue shopping</a>\n    <?php else: ?>\n\n        <h1>Review Your Order</h1>\n\n        <table border=\"1\">\n            <tr>\n                <th>Product Name</th>\n                <th>Quantity</th>\n                <th>Price</th>\n                <th>Total</th>\n            </tr>\n            \n            <?php foreach ($cart_items as $item): ?>\n                <tr>\n                    <td><?php echo $item['name']; ?></td>\n                    <td><?php echo $item['quantity']; ?></td>\n                    <td>$<?php echo number_format($item['price'], 2); ?></td>\n                    <td>$<?php echo number_format($item['price'] * $item['quantity'], 2); ?></td>\n                </tr>\n            <?php endforeach; ?>\n        </table>\n\n        <p>Total: $<?php echo number_format($total_price, 2); ?></p>\n\n        <form action=\"process_order.php\" method=\"POST\">\n            <button type=\"submit\">Confirm Purchase</button>\n        </form>\n\n    <?php endif; ?>\n\n</body>\n</html>\n```\n\n7. `process_order.php`:\n\n```php\n<?php\nsession_start();\ninclude 'db_connection.php';\n\nif (!isset($_SESSION['user_id'])) {\n    header(\"Location: login.php\");\n    exit();\n}\n\n// Get cart items\n$cart_items = [];\nif (isset($_SESSION['cart'])) {\n    $product_ids = implode(',', array_keys($_SESSION['cart']));\n    \n    $query = \"SELECT * FROM products WHERE id IN ($product_ids)\";\n    $result = $conn->query($query);\n    \n    while ($row = $result->fetch(PDO::FETCH_ASSOC)) {\n        $cart_items[] = [\n            'id' => $row['id'],\n            'name' => $row['name'],\n            'price' => $row['price'],\n            'quantity' => $_SESSION['cart'][$row['id']]\n        ];\n    }\n}\n\nif (!empty($cart_items)) {\n    // Insert order into database\n    try {\n        $conn->beginTransaction();\n        \n        $order_query = \"INSERT INTO orders (user_id, total_amount) VALUES (:user_id, :total)\";\n        $stmt = $conn->prepare($order_query);\n        $stmt->execute([\n            'user_id' => $_SESSION['user_id'],\n            'total' => array_reduce($cart_items, function ($carry, $item) {\n                return $carry + ($item['price'] * $item['quantity']);\n            }, 0)\n        ]);\n        \n        $order_id = $conn->lastInsertId();\n        \n        foreach ($cart_items as $item) {\n            $order_details_query = \"INSERT INTO order_details (order_id, product_id, quantity, price) \n                                  VALUES (:order_id, :product_id, :quantity, :price)\";\n            \n            $stmt = $conn->prepare($order_details_query);\n            $stmt->execute([\n                'order_id' => $order_id,\n                'product_id' => $item['id'],\n                'quantity' => $item['quantity'],\n                'price' => $item['price']\n            ]);\n        }\n        \n        // Clear the cart\n        unset($_SESSION['cart']);\n        $conn->commit();\n        \n        header(\"Location: thank_you.php\");\n        exit();\n    } catch (PDOException $e) {\n        $conn->rollBack();\n        die(\"Error processing your order: \" . $e->getMessage());\n    }\n} else {\n    header(\"Location: index.php\");\n    exit();\n}\n```\n\n8. `thank_you.php`:\n\n```php\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Thank You</title>\n</head>\n<body>\n    <h1>Thank you for your purchase!</h1>\n    <p>Your order has been processed successfully.</p>\n    <a href=\"index.php\">Continue shopping</a>\n</body>\n</html>\n```\n\n9. `login.php`:\n\n```php\n<?php\nsession_start();\ninclude 'db_connection.php';\n\nif (isset($_SESSION['user_id'])) {\n    header(\"Location: index.php\");\n    exit();\n}\n\n$error = '';\nif ($_SERVER[\"REQUEST_METHOD\"] == \"POST\") {\n    $username = $_POST['username'];\n    $password = $_POST['password'];\n\n    $stmt = $conn->prepare(\"SELECT * FROM users WHERE username = :username\");\n    $stmt->execute(['username' => $username]);\n    \n    $user = $stmt->fetch(PDO::FETCH_ASSOC);\n    \n    if ($user && password_verify($password, $user['password_hash'])) {\n        $_SESSION['user_id'] = $user['id'];\n        header(\"Location: index.php\");\n        exit();\n    } else {\n        $error = \"Invalid username or password\";\n    }\n}\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Login</title>\n</head>\n<body>\n    <?php if (!isset($_SESSION['user_id'])): ?>\n        <h1>Login</h1>\n        <form method=\"POST\" action=\"<?php echo $_SERVER[\"PHP_SELF\"]; ?>\">\n            <p>\n                <label>Username:</label><br>\n                <input type=\"text\" name=\"username\" required>\n            </p>\n            <p>\n                <label>Password:</label><br>\n                <input type=\"password\" name=\"password\" required>\n            </p>\n            <button type=\"submit\">Login</button>\n        </form>\n        <?php if (!empty($error)): ?>\n            <p style=\"color: red;\"><?php echo $error; ?></p>\n        <?php endif; ?>\n\n        <p>Don't have an account? <a href=\"register.php\">Register here</a>.</p>\n    <?php else: ?>\n        <p>You are already logged in!</p>\n        <a href=\"index.php\">Go to store</a>\n    <?php endif; ?>\n\n</body>\n</html>\n```\n\n10. `register.php`:\n\n```php\n<?php\nsession_start();\ninclude 'db_connection.php';\n\nif (isset($_SESSION['user_id'])) {\n    header(\"Location: index.php\");\n    exit();\n}\n\n$error = '';\nif ($_SERVER[\"REQUEST_METHOD\"] == \"POST\") {\n    $username = $_POST['username'];\n    $email = $_POST['email'];\n    $password = $_POST['password'];\n    \n    // Check if username or email already exists\n    $stmt = $conn->prepare(\"SELECT * FROM users WHERE username = :username OR email = :email\");\n    $stmt->execute(['username' => $username, 'email' => $email]);\n    \n    if ($stmt->fetch(PDO::FETCH_ASSOC)) {\n        $error = \"Username or email already exists\";\n    } else {\n        // Hash the password\n        $password_hash = password_hash($password, PASSWORD_BCRYPT);\n        \n        try {\n            $conn->beginTransaction();\n            \n            $query = \"INSERT INTO users (username, email, password_hash) VALUES (:username, :email, :password_hash)\";\n            $stmt = $conn->prepare($query);\n            $stmt->execute([\n                'username' => $username,\n                'email' => $email,\n                'password_hash' => $password_hash\n            ]);\n            \n            // Login the user automatically after registration\n            $_SESSION['user_id'] = $conn->lastInsertId();\n            $conn->commit();\n            \n            header(\"Location: index.php\");\n            exit();\n        } catch (PDOException $e) {\n            $conn->rollBack();\n            die(\"Error registering your account: \" . $e->getMessage());\n        }\n    }\n}\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Register</title>\n</head>\n<body>\n    <?php if (!isset($_SESSION['user_id'])): ?>\n        <h1>Register</h1>\n        <form method=\"POST\" action=\"<?php echo $_SERVER[\"PHP_SELF\"]; ?>\">\n            <p>\n                <label>Username:</label><br>\n                <input type=\"text\" name=\"username\" required>\n            </p>\n            <p>\n                <label>Email:</label><br>\n                <input type=\"email\" name=\"email\" required>\n            </p>\n            <p>\n                <label>Password:</label><br>\n                <input type=\"password\" name=\"password\" required>\n            </p>\n            <button type=\"submit\">Register</button>\n        </form>\n        <?php if (!empty($error)): ?>\n            <p style=\"color: red;\"><?php echo $error; ?></p>\n        <?php endif; ?>\n\n        <p>Already have an account? <a href=\"login.php\">Login here</a>.</p>\n    <?php else: ?>\n        <p>You are already logged in!</p>\n        <a href=\"index.php\">Go to store</a>\n    <?php endif; ?>\n\n</body>\n</html>\n```\n\n11. `logout.php`:\n\n```php\n<?php\nsession_start();\nunset($_SESSION['user_id']);\nsession_destroy();\nheader(\"Location: login.php\");\nexit();\n?>\n```\n\nThis is a complete e-commerce system with:\n- Product listing (you'll need to populate the database)\n- Shopping cart functionality\n- Checkout process\n- Order processing\n- User authentication\n- Secure password storage\n\nTo use this system, you'll need to:\n\n1. Create the necessary database tables\n2. Populate the products table with your items\n3. Set up the database connection details in the `db_connection.php` file (which should be included at the top of each PHP file)\n4. Test all functionalities\n\nRemember to replace the placeholder database connection code with your actual database credentials.\n\nYou can extend this system by:\n- Adding product images\n- Implementing a more robust shopping cart\n- Adding user profiles and addresses\n- Integrating a payment gateway\n- Implementing an admin panel for managing products and orders", "code_blocks": [null, null, "```php\n<?php\ninclude 'db_connection.php';\n\n// Get all products\n$query = \"SELECT * FROM products\";\n$result = $conn->query($query);\n\n?>\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Store</title>\n</head>\n<body>\n    <?php if (!isset($_SESSION['user_id'])): ?>\n        <a href=\"login.php\">Login</a> | <a href=\"register.php\">Register</a>\n    <?php else: ?>\n        <a href=\"cart.php\">View Cart</a> | <a href=\"logout.php\">Logout</a>\n    <?php endif; ?>\n\n    <h1>Welcome to Our Store</h1>\n    \n    <?php while ($row = $result->fetch(PDO::FETCH_ASSOC)): ?>\n        <div style=\"border: 1px solid #ddd; padding: 10px; margin-bottom: 10px;\">\n            <h2><?php echo $row['name']; ?></h2>\n            <p><?php echo $row['description']; ?></p>\n            <p>Price: $<?php echo number_format($row['price'], 2); ?></p>\n            <?php if ($row['stock'] > 0): ?>\n                <form action=\"add_to_cart.php\" method=\"POST\">\n                    <input type=\"hidden\" name=\"product_id\" value=\"<?php echo $row['id']; ?>\">\n                    <input type=\"number\" name=\"quantity\" min=\"1\" max=\"<?php echo $row['stock']; ?>\" value=\"1\">\n                    <button type=\"submit\">Add to Cart</button>\n                </form>\n            <?php else: ?>\n                <p>Out of stock</p>\n            <?php endif; ?>\n        </div>\n    <?php endwhile; ?>\n\n</body>\n</html>\n```", "```php\n<?php\nsession_start();\ninclude 'db_connection.php';\n\nif (!isset($_SESSION['user_id'])) {\n    header(\"Location: login.php\");\n    exit();\n}\n\n// Get cart items\n$cart_items = [];\nif (isset($_SESSION['cart'])) {\n    $product_ids = implode(',', array_keys($_SESSION['cart']));\n    \n    $query = \"SELECT * FROM products WHERE id IN ($product_ids)\";\n    $result = $conn->query($query);\n    \n    while ($row = $result->fetch(PDO::FETCH_ASSOC)) {\n        $cart_items[] = [\n            'id' => $row['id'],\n            'name' => $row['name'],\n            'price' => $row['price'],\n            'quantity' => $_SESSION['cart'][$row['id']]\n        ];\n    }\n}\n\n$total_price = array_reduce($cart_items, function ($carry, $item) {\n    return $carry + ($item['price'] * $item['quantity']);\n}, 0);\n\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Shopping Cart</title>\n</head>\n<body>\n    <a href=\"index.php\">Back to Store</a> | <a href=\"logout.php\">Logout</a>\n\n    <?php if (empty($cart_items)): ?>\n        <p>Your cart is empty.</p>\n        <a href=\"index.php\">Continue shopping</a>\n    <?php else: ?>\n\n        <h1>Your Shopping Cart</h1>\n        \n        <table border=\"1\">\n            <tr>\n                <th>Product Name</th>\n                <th>Quantity</th>\n                <th>Price</th>\n                <th>Total</th>\n                <th>Action</th>\n            </tr>\n            \n            <?php foreach ($cart_items as $item): ?>\n                <tr>\n                    <td><?php echo $item['name']; ?></td>\n                    <td><input type=\"number\" name=\"quantity\" min=\"1\" value=\"<?php echo $item['quantity']; ?>\"></td>\n                    <td>$<?php echo number_format($item['price'], 2); ?></td>\n                    <td>$<?php echo number_format($item['price'] * $item['quantity'], 2); ?></td>\n                    <td>\n                        <a href=\"remove_from_cart.php?id=<?php echo $item['id']; ?>\">Remove</a>\n                        <form style=\"display: inline;\" action=\"update_cart.php\" method=\"POST\">\n                            <input type=\"hidden\" name=\"product_id\" value=\"<?php echo $item['id']; ?>\">\n                            <button type=\"submit\">Update</button>\n                        </form>\n                    </td>\n                </tr>\n            <?php endforeach; ?>\n        </table>\n\n        <p>Total: $<?php echo number_format($total_price, 2); ?></p>\n        \n        <a href=\"checkout.php\">Checkout</a> | \n        <a href=\"index.php\">Continue shopping</a>\n\n    <?php endif; ?>\n\n</body>\n</html>\n```", "```php\n<?php\nsession_start();\ninclude 'db_connection.php';\n\nif (!isset($_SESSION['user_id'])) {\n    header(\"Location: login.php\");\n    exit();\n}\n\nif (isset($_POST['product_id']) && isset($_POST['quantity'])) {\n    $product_id = $_POST['product_id'];\n    $quantity = max(1, min((int)$_POST['quantity'], 10)); // Limit quantity to 1-10\n    \n    if (!isset($_SESSION['cart'])) {\n        $_SESSION['cart'] = array();\n    }\n    \n    if (array_key_exists($product_id, $_SESSION['cart'])) {\n        $_SESSION['cart'][$product_id] += $quantity;\n    } else {\n        $_SESSION['cart'][$product_id] = $quantity;\n    }\n}\n\nheader(\"Location: index.php\");\nexit();\n```", "```php\n<?php\nsession_start();\ninclude 'db_connection.php';\n\nif (!isset($_SESSION['user_id'])) {\n    header(\"Location: login.php\");\n    exit();\n}\n\nif (isset($_POST['product_id']) && isset($_POST['quantity'])) {\n    $product_id = $_POST['product_id'];\n    $quantity = max(1, (int)$_POST['quantity']);\n    \n    if (isset($_SESSION['cart'][$product_id])) {\n        $_SESSION['cart'][$product_id] = $quantity;\n    }\n}\n\nheader(\"Location: cart.php\");\nexit();\n```", "```php\n<?php\nsession_start();\ninclude 'db_connection.php';\n\nif (!isset($_GET['id'])) {\n    header(\"Location: cart.php\");\n    exit();\n}\n\n$id = $_GET['id'];\n\nif (isset($_SESSION['cart'][$id])) {\n    unset($_SESSION['cart'][$id]);\n}\n\nheader(\"Location: cart.php\");\nexit();\n```", "```php\n<?php\nsession_start();\ninclude 'db_connection.php';\n\nif (!isset($_SESSION['user_id'])) {\n    header(\"Location: login.php\");\n    exit();\n}\n\n// Get cart items\n$cart_items = [];\nif (isset($_SESSION['cart'])) {\n    $product_ids = implode(',', array_keys($_SESSION['cart']));\n    \n    $query = \"SELECT * FROM products WHERE id IN ($product_ids)\";\n    $result = $conn->query($query);\n    \n    while ($row = $result->fetch(PDO::FETCH_ASSOC)) {\n        $cart_items[] = [\n            'id' => $row['id'],\n            'name' => $row['name'],\n            'price' => $row['price'],\n            'quantity' => $_SESSION['cart'][$row['id']]\n        ];\n    }\n}\n\n$total_price = array_reduce($cart_items, function ($carry, $item) {\n    return $carry + ($item['price'] * $item['quantity']);\n}, 0);\n\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Checkout</title>\n</head>\n<body>\n    <?php if (empty($cart_items)): ?>\n        <p>Your cart is empty.</p>\n        <a href=\"index.php\">Continue shopping</a>\n    <?php else: ?>\n\n        <h1>Review Your Order</h1>\n\n        <table border=\"1\">\n            <tr>\n                <th>Product Name</th>\n                <th>Quantity</th>\n                <th>Price</th>\n                <th>Total</th>\n            </tr>\n            \n            <?php foreach ($cart_items as $item): ?>\n                <tr>\n                    <td><?php echo $item['name']; ?></td>\n                    <td><?php echo $item['quantity']; ?></td>\n                    <td>$<?php echo number_format($item['price'], 2); ?></td>\n                    <td>$<?php echo number_format($item['price'] * $item['quantity'], 2); ?></td>\n                </tr>\n            <?php endforeach; ?>\n        </table>\n\n        <p>Total: $<?php echo number_format($total_price, 2); ?></p>\n\n        <form action=\"process_order.php\" method=\"POST\">\n            <button type=\"submit\">Confirm Purchase</button>\n        </form>\n\n    <?php endif; ?>\n\n</body>\n</html>\n```", "```php\n<?php\nsession_start();\ninclude 'db_connection.php';\n\nif (!isset($_SESSION['user_id'])) {\n    header(\"Location: login.php\");\n    exit();\n}\n\n// Get cart items\n$cart_items = [];\nif (isset($_SESSION['cart'])) {\n    $product_ids = implode(',', array_keys($_SESSION['cart']));\n    \n    $query = \"SELECT * FROM products WHERE id IN ($product_ids)\";\n    $result = $conn->query($query);\n    \n    while ($row = $result->fetch(PDO::FETCH_ASSOC)) {\n        $cart_items[] = [\n            'id' => $row['id'],\n            'name' => $row['name'],\n            'price' => $row['price'],\n            'quantity' => $_SESSION['cart'][$row['id']]\n        ];\n    }\n}\n\nif (!empty($cart_items)) {\n    // Insert order into database\n    try {\n        $conn->beginTransaction();\n        \n        $order_query = \"INSERT INTO orders (user_id, total_amount) VALUES (:user_id, :total)\";\n        $stmt = $conn->prepare($order_query);\n        $stmt->execute([\n            'user_id' => $_SESSION['user_id'],\n            'total' => array_reduce($cart_items, function ($carry, $item) {\n                return $carry + ($item['price'] * $item['quantity']);\n            }, 0)\n        ]);\n        \n        $order_id = $conn->lastInsertId();\n        \n        foreach ($cart_items as $item) {\n            $order_details_query = \"INSERT INTO order_details (order_id, product_id, quantity, price) \n                                  VALUES (:order_id, :product_id, :quantity, :price)\";\n            \n            $stmt = $conn->prepare($order_details_query);\n            $stmt->execute([\n                'order_id' => $order_id,\n                'product_id' => $item['id'],\n                'quantity' => $item['quantity'],\n                'price' => $item['price']\n            ]);\n        }\n        \n        // Clear the cart\n        unset($_SESSION['cart']);\n        $conn->commit();\n        \n        header(\"Location: thank_you.php\");\n        exit();\n    } catch (PDOException $e) {\n        $conn->rollBack();\n        die(\"Error processing your order: \" . $e->getMessage());\n    }\n} else {\n    header(\"Location: index.php\");\n    exit();\n}\n```", "```php\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Thank You</title>\n</head>\n<body>\n    <h1>Thank you for your purchase!</h1>\n    <p>Your order has been processed successfully.</p>\n    <a href=\"index.php\">Continue shopping</a>\n</body>\n</html>\n```", "```php\n<?php\nsession_start();\ninclude 'db_connection.php';\n\nif (isset($_SESSION['user_id'])) {\n    header(\"Location: index.php\");\n    exit();\n}\n\n$error = '';\nif ($_SERVER[\"REQUEST_METHOD\"] == \"POST\") {\n    $username = $_POST['username'];\n    $password = $_POST['password'];\n\n    $stmt = $conn->prepare(\"SELECT * FROM users WHERE username = :username\");\n    $stmt->execute(['username' => $username]);\n    \n    $user = $stmt->fetch(PDO::FETCH_ASSOC);\n    \n    if ($user && password_verify($password, $user['password_hash'])) {\n        $_SESSION['user_id'] = $user['id'];\n        header(\"Location: index.php\");\n        exit();\n    } else {\n        $error = \"Invalid username or password\";\n    }\n}\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Login</title>\n</head>\n<body>\n    <?php if (!isset($_SESSION['user_id'])): ?>\n        <h1>Login</h1>\n        <form method=\"POST\" action=\"<?php echo $_SERVER[\"PHP_SELF\"]; ?>\">\n            <p>\n                <label>Username:</label><br>\n                <input type=\"text\" name=\"username\" required>\n            </p>\n            <p>\n                <label>Password:</label><br>\n                <input type=\"password\" name=\"password\" required>\n            </p>\n            <button type=\"submit\">Login</button>\n        </form>\n        <?php if (!empty($error)): ?>\n            <p style=\"color: red;\"><?php echo $error; ?></p>\n        <?php endif; ?>\n\n        <p>Don't have an account? <a href=\"register.php\">Register here</a>.</p>\n    <?php else: ?>\n        <p>You are already logged in!</p>\n        <a href=\"index.php\">Go to store</a>\n    <?php endif; ?>\n\n</body>\n</html>\n```", "```php\n<?php\nsession_start();\ninclude 'db_connection.php';\n\nif (isset($_SESSION['user_id'])) {\n    header(\"Location: index.php\");\n    exit();\n}\n\n$error = '';\nif ($_SERVER[\"REQUEST_METHOD\"] == \"POST\") {\n    $username = $_POST['username'];\n    $email = $_POST['email'];\n    $password = $_POST['password'];\n    \n    // Check if username or email already exists\n    $stmt = $conn->prepare(\"SELECT * FROM users WHERE username = :username OR email = :email\");\n    $stmt->execute(['username' => $username, 'email' => $email]);\n    \n    if ($stmt->fetch(PDO::FETCH_ASSOC)) {\n        $error = \"Username or email already exists\";\n    } else {\n        // Hash the password\n        $password_hash = password_hash($password, PASSWORD_BCRYPT);\n        \n        try {\n            $conn->beginTransaction();\n            \n            $query = \"INSERT INTO users (username, email, password_hash) VALUES (:username, :email, :password_hash)\";\n            $stmt = $conn->prepare($query);\n            $stmt->execute([\n                'username' => $username,\n                'email' => $email,\n                'password_hash' => $password_hash\n            ]);\n            \n            // Login the user automatically after registration\n            $_SESSION['user_id'] = $conn->lastInsertId();\n            $conn->commit();\n            \n            header(\"Location: index.php\");\n            exit();\n        } catch (PDOException $e) {\n            $conn->rollBack();\n            die(\"Error registering your account: \" . $e->getMessage());\n        }\n    }\n}\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Register</title>\n</head>\n<body>\n    <?php if (!isset($_SESSION['user_id'])): ?>\n        <h1>Register</h1>\n        <form method=\"POST\" action=\"<?php echo $_SERVER[\"PHP_SELF\"]; ?>\">\n            <p>\n                <label>Username:</label><br>\n                <input type=\"text\" name=\"username\" required>\n            </p>\n            <p>\n                <label>Email:</label><br>\n                <input type=\"email\" name=\"email\" required>\n            </p>\n            <p>\n                <label>Password:</label><br>\n                <input type=\"password\" name=\"password\" required>\n            </p>\n            <button type=\"submit\">Register</button>\n        </form>\n        <?php if (!empty($error)): ?>\n            <p style=\"color: red;\"><?php echo $error; ?></p>\n        <?php endif; ?>\n\n        <p>Already have an account? <a href=\"login.php\">Login here</a>.</p>\n    <?php else: ?>\n        <p>You are already logged in!</p>\n        <a href=\"index.php\">Go to store</a>\n    <?php endif; ?>\n\n</body>\n</html>\n```", "```php\n<?php\nsession_start();\nunset($_SESSION['user_id']);\nsession_destroy();\nheader(\"Location: login.php\");\nexit();\n?>\n```"]}
