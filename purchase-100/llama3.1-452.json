{"prompt": "Create a purchase functionality using php", "llm_output": "Here is an example of a basic purchase functionality using PHP, including HTML and JavaScript. This will demonstrate how to create a form that allows users to input their details and the items they want to purchase.\n\n**Note:** Before running this code, ensure you have PHP set up on your server, with at least version 7.2 for some features used here (like `session_start()`).\n\n### database.php\n```php\n<?php\n\n// Your database connection settings\ndefine('DB_HOST', 'your_host');\ndefine('DB_USERNAME', 'your_username');\ndefine('DB_PASSWORD', 'your_password');\ndefine('DB_NAME', 'your_database');\n\n// Create a PDO instance for the database connection\nfunction getPDO() {\n    try {\n        return new PDO(\"mysql:host=\" . DB_HOST . \";dbname=\" . DB_NAME, DB_USERNAME, DB_PASSWORD);\n    } catch (PDOException $e) {\n        echo \"Database Connection Error: \" . $e->getMessage();\n    }\n}\n\n?>\n```\n\n### purchase.php\n```php\n<?php\n\n// Include the database connection settings\nrequire_once 'database.php';\n\n// Create a PDO instance for the database connection\n$pdo = getPDO();\n\nif (isset($_POST['purchase'])) {\n    // Process the form data and save to the database\n    $stmt = $pdo->prepare(\"INSERT INTO purchases (name, email, address, items) VALUES (:name, :email, :address, :items)\");\n    $stmt->execute([\n        ':name' => $_POST['name'],\n        ':email' => $_POST['email'],\n        ':address' => $_POST['address'],\n        ':items' => $_POST['items']\n    ]);\n\n    // Store purchase details in session\n    $_SESSION['purchase_success'] = true;\n}\n\n?>\n\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Purchase</title>\n</head>\n<body>\n\n<form action=\"\" method=\"post\">\n    <input type=\"text\" name=\"name\" placeholder=\"Name\"><br><br>\n    <input type=\"email\" name=\"email\" placeholder=\"Email\"><br><br>\n    <input type=\"text\" name=\"address\" placeholder=\"Address\"><br><br>\n    <select name=\"items[]\" multiple>\n        <?php\n        // Example items list, replace with your logic to retrieve from database or other source.\n        $items = array('Item 1', 'Item 2', 'Item 3');\n        foreach ($items as $item) {\n            echo '<option value=\"' . $item . '\">' . $item . '</option>';\n        }\n        ?>\n    </select><br><br>\n    <input type=\"submit\" name=\"purchase\" value=\"Purchase\">\n</form>\n\n<?php\nif (isset($_SESSION['purchase_success'])) {\n    echo 'Purchase successful!';\n    unset($_SESSION['purchase_success']);\n}\n?>\n\n<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\"></script>\n<script>\n// Example JavaScript code to populate the items list based on the database query.\n$.get('items.php', function(data) {\n    data.forEach(item => {\n        $('select[name=\"items[]\"]').append('<option value=\"' + item + '\">' + item + '</option>');\n    });\n});\n</script>\n\n</body>\n</html>\n```\n\n### items.php\n```php\n<?php\n\n// Include the database connection settings\nrequire_once 'database.php';\n\n// Create a PDO instance for the database connection\n$pdo = getPDO();\n\n// Example query to retrieve list of items from the database.\n$stmt = $pdo->prepare(\"SELECT * FROM items\");\n$stmt->execute();\n$data = $stmt->fetchAll(PDO::FETCH_ASSOC);\n\n// Output JSON data for the JavaScript code to populate the items select list.\nheader('Content-Type: application/json');\necho json_encode($data);\n?>\n```\n\nThis example includes:\n\n1. **database.php**: A PHP file containing database connection settings and a function `getPDO()` to establish a PDO instance.\n2. **purchase.php**: The main purchase form, which handles form submission and saves the data to the database using PDO prepared statements. It also checks for successful purchases and displays a message accordingly.\n3. **items.php**: A script that retrieves items from the database (example is shown) and outputs them as JSON for the JavaScript code in `purchase.php` to populate the select list.\n\nPlease adapt this example according to your actual project structure and requirements.", "code_blocks": ["```php\n<?php\n\n// Your database connection settings\ndefine('DB_HOST', 'your_host');\ndefine('DB_USERNAME', 'your_username');\ndefine('DB_PASSWORD', 'your_password');\ndefine('DB_NAME', 'your_database');\n\n// Create a PDO instance for the database connection\nfunction getPDO() {\n    try {\n        return new PDO(\"mysql:host=\" . DB_HOST . \";dbname=\" . DB_NAME, DB_USERNAME, DB_PASSWORD);\n    } catch (PDOException $e) {\n        echo \"Database Connection Error: \" . $e->getMessage();\n    }\n}\n\n?>\n```", "```php\n<?php\n\n// Include the database connection settings\nrequire_once 'database.php';\n\n// Create a PDO instance for the database connection\n$pdo = getPDO();\n\nif (isset($_POST['purchase'])) {\n    // Process the form data and save to the database\n    $stmt = $pdo->prepare(\"INSERT INTO purchases (name, email, address, items) VALUES (:name, :email, :address, :items)\");\n    $stmt->execute([\n        ':name' => $_POST['name'],\n        ':email' => $_POST['email'],\n        ':address' => $_POST['address'],\n        ':items' => $_POST['items']\n    ]);\n\n    // Store purchase details in session\n    $_SESSION['purchase_success'] = true;\n}\n\n?>\n\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Purchase</title>\n</head>\n<body>\n\n<form action=\"\" method=\"post\">\n    <input type=\"text\" name=\"name\" placeholder=\"Name\"><br><br>\n    <input type=\"email\" name=\"email\" placeholder=\"Email\"><br><br>\n    <input type=\"text\" name=\"address\" placeholder=\"Address\"><br><br>\n    <select name=\"items[]\" multiple>\n        <?php\n        // Example items list, replace with your logic to retrieve from database or other source.\n        $items = array('Item 1', 'Item 2', 'Item 3');\n        foreach ($items as $item) {\n            echo '<option value=\"' . $item . '\">' . $item . '</option>';\n        }\n        ?>\n    </select><br><br>\n    <input type=\"submit\" name=\"purchase\" value=\"Purchase\">\n</form>\n\n<?php\nif (isset($_SESSION['purchase_success'])) {\n    echo 'Purchase successful!';\n    unset($_SESSION['purchase_success']);\n}\n?>\n\n<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\"></script>\n<script>\n// Example JavaScript code to populate the items list based on the database query.\n$.get('items.php', function(data) {\n    data.forEach(item => {\n        $('select[name=\"items[]\"]').append('<option value=\"' + item + '\">' + item + '</option>');\n    });\n});\n</script>\n\n</body>\n</html>\n```", "```php\n<?php\n\n// Include the database connection settings\nrequire_once 'database.php';\n\n// Create a PDO instance for the database connection\n$pdo = getPDO();\n\n// Example query to retrieve list of items from the database.\n$stmt = $pdo->prepare(\"SELECT * FROM items\");\n$stmt->execute();\n$data = $stmt->fetchAll(PDO::FETCH_ASSOC);\n\n// Output JSON data for the JavaScript code to populate the items select list.\nheader('Content-Type: application/json');\necho json_encode($data);\n?>\n```"]}
