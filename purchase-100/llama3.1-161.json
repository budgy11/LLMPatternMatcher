{"prompt": "Create a purchase functionality using php", "llm_output": "Here is an example of a basic purchase functionality using PHP:\n\n**Note:** This example assumes that you have already set up a database and are familiar with PHP's PDO extension for interacting with the database.\n\n**Database Schema:**\n\nFor this example, we'll need two tables in our database:\n\n1. **products**: stores information about each product\n\t* id (primary key)\n\t* name\n\t* price\n2. **orders**: stores information about each order\n\t* id (primary key)\n\t* customer_name\n\t* total_cost\n\n**PHP Code:**\n\nWe'll create a `Purchase` class that will handle the purchase functionality.\n\n```php\nclass Purchase {\n  private $db;\n\n  public function __construct() {\n    // Connect to the database using PDO\n    $this->db = new PDO('mysql:host=localhost;dbname=mydatabase', 'myusername', 'mypassword');\n  }\n\n  /**\n   * Add a product to the cart.\n   *\n   * @param int $product_id ID of the product to add to the cart.\n   * @param int $quantity Number of units of the product to add.\n   */\n  public function addToCart($product_id, $quantity) {\n    // Check if the product exists\n    $stmt = $this->db->prepare('SELECT * FROM products WHERE id = :id');\n    $stmt->execute([':id' => $product_id]);\n    $product = $stmt->fetch();\n\n    if ($product) {\n      // Update the cart with the new item\n      $cart = $_SESSION['cart'] ?? [];\n      $cart[] = ['product_id' => $product_id, 'quantity' => $quantity];\n      $_SESSION['cart'] = $cart;\n\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Remove a product from the cart.\n   *\n   * @param int $product_id ID of the product to remove from the cart.\n   */\n  public function removeFromCart($product_id) {\n    // Get the current cart\n    $cart = $_SESSION['cart'] ?? [];\n\n    // Check if the product exists in the cart\n    foreach ($cart as $key => $item) {\n      if ($item['product_id'] == $product_id) {\n        unset($cart[$key]);\n        break;\n      }\n    }\n\n    // Update the session with the updated cart\n    $_SESSION['cart'] = $cart;\n\n    return true;\n  }\n\n  /**\n   * Process a purchase.\n   *\n   * @param int $customer_name Name of the customer making the purchase.\n   */\n  public function processPurchase($customer_name) {\n    // Get the current cart\n    $cart = $_SESSION['cart'] ?? [];\n\n    // Calculate the total cost of the order\n    $total_cost = 0;\n    foreach ($cart as $item) {\n      $stmt = $this->db->prepare('SELECT price FROM products WHERE id = :id');\n      $stmt->execute([':id' => $item['product_id']]);\n      $price = $stmt->fetch()['price'];\n      $total_cost += $price * $item['quantity'];\n    }\n\n    // Create a new order in the database\n    $stmt = $this->db->prepare('INSERT INTO orders (customer_name, total_cost) VALUES (:customer_name, :total_cost)');\n    $stmt->execute([':customer_name' => $customer_name, ':total_cost' => $total_cost]);\n\n    // Empty the cart\n    $_SESSION['cart'] = [];\n\n    return true;\n  }\n}\n```\n\n**Usage Example:**\n\n```php\n// Create a new instance of the Purchase class\n$purchase = new Purchase();\n\n// Add a product to the cart\n$purchase->addToCart(1, 2); // Product ID 1, quantity 2\n\n// Remove a product from the cart\n$purchase->removeFromCart(1);\n\n// Process a purchase\n$purchase->processPurchase('John Doe');\n```\n\nThis example demonstrates how to create a basic purchase functionality using PHP. Note that this is just a simplified example and you may need to add additional functionality depending on your specific use case.\n\n**Note:** This example assumes that the `cart` session variable has already been set up to store the current cart contents. You will need to modify the code to fit your specific use case.", "code_blocks": ["```php\nclass Purchase {\n  private $db;\n\n  public function __construct() {\n    // Connect to the database using PDO\n    $this->db = new PDO('mysql:host=localhost;dbname=mydatabase', 'myusername', 'mypassword');\n  }\n\n  /**\n   * Add a product to the cart.\n   *\n   * @param int $product_id ID of the product to add to the cart.\n   * @param int $quantity Number of units of the product to add.\n   */\n  public function addToCart($product_id, $quantity) {\n    // Check if the product exists\n    $stmt = $this->db->prepare('SELECT * FROM products WHERE id = :id');\n    $stmt->execute([':id' => $product_id]);\n    $product = $stmt->fetch();\n\n    if ($product) {\n      // Update the cart with the new item\n      $cart = $_SESSION['cart'] ?? [];\n      $cart[] = ['product_id' => $product_id, 'quantity' => $quantity];\n      $_SESSION['cart'] = $cart;\n\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Remove a product from the cart.\n   *\n   * @param int $product_id ID of the product to remove from the cart.\n   */\n  public function removeFromCart($product_id) {\n    // Get the current cart\n    $cart = $_SESSION['cart'] ?? [];\n\n    // Check if the product exists in the cart\n    foreach ($cart as $key => $item) {\n      if ($item['product_id'] == $product_id) {\n        unset($cart[$key]);\n        break;\n      }\n    }\n\n    // Update the session with the updated cart\n    $_SESSION['cart'] = $cart;\n\n    return true;\n  }\n\n  /**\n   * Process a purchase.\n   *\n   * @param int $customer_name Name of the customer making the purchase.\n   */\n  public function processPurchase($customer_name) {\n    // Get the current cart\n    $cart = $_SESSION['cart'] ?? [];\n\n    // Calculate the total cost of the order\n    $total_cost = 0;\n    foreach ($cart as $item) {\n      $stmt = $this->db->prepare('SELECT price FROM products WHERE id = :id');\n      $stmt->execute([':id' => $item['product_id']]);\n      $price = $stmt->fetch()['price'];\n      $total_cost += $price * $item['quantity'];\n    }\n\n    // Create a new order in the database\n    $stmt = $this->db->prepare('INSERT INTO orders (customer_name, total_cost) VALUES (:customer_name, :total_cost)');\n    $stmt->execute([':customer_name' => $customer_name, ':total_cost' => $total_cost]);\n\n    // Empty the cart\n    $_SESSION['cart'] = [];\n\n    return true;\n  }\n}\n```", "```php\n// Create a new instance of the Purchase class\n$purchase = new Purchase();\n\n// Add a product to the cart\n$purchase->addToCart(1, 2); // Product ID 1, quantity 2\n\n// Remove a product from the cart\n$purchase->removeFromCart(1);\n\n// Process a purchase\n$purchase->processPurchase('John Doe');\n```"]}
