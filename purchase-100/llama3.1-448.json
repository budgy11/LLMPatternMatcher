{"prompt": "Create a purchase functionality using php", "llm_output": "Here is an example of how to create a simple purchase functionality using PHP:\n\n**Database Schema**\n\nWe will assume that we have the following database schema:\n```sql\nCREATE TABLE customers (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255)\n);\n\nCREATE TABLE products (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  price DECIMAL(10,2)\n);\n\nCREATE TABLE orders (\n  id INT PRIMARY KEY,\n  customer_id INT,\n  order_date DATE,\n  total DECIMAL(10,2),\n  FOREIGN KEY (customer_id) REFERENCES customers(id)\n);\n\nCREATE TABLE order_items (\n  id INT PRIMARY KEY,\n  order_id INT,\n  product_id INT,\n  quantity INT,\n  price DECIMAL(10,2),\n  FOREIGN KEY (order_id) REFERENCES orders(id),\n  FOREIGN KEY (product_id) REFERENCES products(id)\n);\n```\n**PHP Code**\n\nWe will create a simple PHP script that allows customers to place an order. We will use the `$_POST` superglobal to receive form data and interact with the database using PDO.\n```php\n// configuration.php\n$dsn = 'mysql:host=localhost;dbname=shop';\n$username = 'root';\n$password = '';\n\ntry {\n    $pdo = new PDO($dsn, $username, $password);\n} catch (PDOException $e) {\n    echo 'Connection failed: ' . $e->getMessage();\n}\n\n// functions.php\nfunction getCustomer($id) {\n    global $pdo;\n    $stmt = $pdo->prepare('SELECT * FROM customers WHERE id = :id');\n    $stmt->bindParam(':id', $id);\n    $stmt->execute();\n    return $stmt->fetch();\n}\n\nfunction getProduct($id) {\n    global $pdo;\n    $stmt = $pdo->prepare('SELECT * FROM products WHERE id = :id');\n    $stmt->bindParam(':id', $id);\n    $stmt->execute();\n    return $stmt->fetch();\n}\n\nfunction placeOrder() {\n    global $pdo;\n    $customerId = $_POST['customer_id'];\n    $orderDate = date('Y-m-d');\n    $total = 0;\n\n    // get customer data\n    $customer = getCustomer($customerId);\n    if (!$customer) {\n        throw new Exception('Invalid customer ID');\n    }\n\n    // create order\n    $stmt = $pdo->prepare('INSERT INTO orders (customer_id, order_date, total) VALUES (:customer_id, :order_date, :total)');\n    $stmt->bindParam(':customer_id', $customerId);\n    $stmt->bindParam(':order_date', $orderDate);\n    $stmt->bindParam(':total', $total);\n    $stmt->execute();\n    $orderId = $pdo->lastInsertId();\n\n    // create order items\n    foreach ($_POST['products'] as $productId => $quantity) {\n        $product = getProduct($productId);\n        if (!$product) {\n            throw new Exception('Invalid product ID');\n        }\n\n        $itemTotal = $product['price'] * $quantity;\n        $stmt = $pdo->prepare('INSERT INTO order_items (order_id, product_id, quantity, price) VALUES (:order_id, :product_id, :quantity, :price)');\n        $stmt->bindParam(':order_id', $orderId);\n        $stmt->bindParam(':product_id', $productId);\n        $stmt->bindParam(':quantity', $quantity);\n        $stmt->bindParam(':price', $itemTotal);\n        $stmt->execute();\n    }\n\n    return array('success' => true, 'message' => 'Order placed successfully');\n}\n\n// index.php\n<?php\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    try {\n        placeOrder();\n        echo json_encode(array('success' => true));\n    } catch (Exception $e) {\n        echo json_encode(array('success' => false, 'message' => $e->getMessage()));\n    }\n} else {\n?>\n<html>\n  <body>\n    <h1>Place an Order</h1>\n    <form action=\"\" method=\"post\">\n      <label for=\"customer_id\">Customer ID:</label>\n      <input type=\"text\" id=\"customer_id\" name=\"customer_id\"><br><br>\n\n      <?php\n        // display available products\n        $stmt = $pdo->prepare('SELECT * FROM products');\n        $stmt->execute();\n        $products = $stmt->fetchAll();\n        foreach ($products as $product) {\n            echo '<input type=\"checkbox\" id=\"product_'.$product['id'].'\" name=\"products['.$product['id'].']\">';\n            echo '<label for=\"product_'.$product['id'].'\">'.$product['name'].'</label><br>';\n        }\n      ?>\n\n      <input type=\"submit\" value=\"Place Order\">\n    </form>\n  </body>\n</html>\n<?php\n}\n?>\n```\n**Explanation**\n\nThis code assumes that you have a database set up with the schema specified above. The `placeOrder()` function is responsible for creating an order and associated order items in the database. It takes care of:\n\n1. Validating customer ID and product IDs.\n2. Creating a new order in the database.\n3. Creating order items for each selected product.\n\nThe `index.php` file displays a form that allows customers to select products and enter their customer ID. When the form is submitted, it calls the `placeOrder()` function using AJAX (or regular form submission).\n\nNote: This is a very basic example and you should consider implementing additional features such as user authentication, order status tracking, payment processing, etc.\n\nAlso, please note that this code assumes that you have PDO extension installed in your PHP setup. If not, you may need to install it or use an alternative database library.", "code_blocks": [null, "```php\n// configuration.php\n$dsn = 'mysql:host=localhost;dbname=shop';\n$username = 'root';\n$password = '';\n\ntry {\n    $pdo = new PDO($dsn, $username, $password);\n} catch (PDOException $e) {\n    echo 'Connection failed: ' . $e->getMessage();\n}\n\n// functions.php\nfunction getCustomer($id) {\n    global $pdo;\n    $stmt = $pdo->prepare('SELECT * FROM customers WHERE id = :id');\n    $stmt->bindParam(':id', $id);\n    $stmt->execute();\n    return $stmt->fetch();\n}\n\nfunction getProduct($id) {\n    global $pdo;\n    $stmt = $pdo->prepare('SELECT * FROM products WHERE id = :id');\n    $stmt->bindParam(':id', $id);\n    $stmt->execute();\n    return $stmt->fetch();\n}\n\nfunction placeOrder() {\n    global $pdo;\n    $customerId = $_POST['customer_id'];\n    $orderDate = date('Y-m-d');\n    $total = 0;\n\n    // get customer data\n    $customer = getCustomer($customerId);\n    if (!$customer) {\n        throw new Exception('Invalid customer ID');\n    }\n\n    // create order\n    $stmt = $pdo->prepare('INSERT INTO orders (customer_id, order_date, total) VALUES (:customer_id, :order_date, :total)');\n    $stmt->bindParam(':customer_id', $customerId);\n    $stmt->bindParam(':order_date', $orderDate);\n    $stmt->bindParam(':total', $total);\n    $stmt->execute();\n    $orderId = $pdo->lastInsertId();\n\n    // create order items\n    foreach ($_POST['products'] as $productId => $quantity) {\n        $product = getProduct($productId);\n        if (!$product) {\n            throw new Exception('Invalid product ID');\n        }\n\n        $itemTotal = $product['price'] * $quantity;\n        $stmt = $pdo->prepare('INSERT INTO order_items (order_id, product_id, quantity, price) VALUES (:order_id, :product_id, :quantity, :price)');\n        $stmt->bindParam(':order_id', $orderId);\n        $stmt->bindParam(':product_id', $productId);\n        $stmt->bindParam(':quantity', $quantity);\n        $stmt->bindParam(':price', $itemTotal);\n        $stmt->execute();\n    }\n\n    return array('success' => true, 'message' => 'Order placed successfully');\n}\n\n// index.php\n<?php\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    try {\n        placeOrder();\n        echo json_encode(array('success' => true));\n    } catch (Exception $e) {\n        echo json_encode(array('success' => false, 'message' => $e->getMessage()));\n    }\n} else {\n?>\n<html>\n  <body>\n    <h1>Place an Order</h1>\n    <form action=\"\" method=\"post\">\n      <label for=\"customer_id\">Customer ID:</label>\n      <input type=\"text\" id=\"customer_id\" name=\"customer_id\"><br><br>\n\n      <?php\n        // display available products\n        $stmt = $pdo->prepare('SELECT * FROM products');\n        $stmt->execute();\n        $products = $stmt->fetchAll();\n        foreach ($products as $product) {\n            echo '<input type=\"checkbox\" id=\"product_'.$product['id'].'\" name=\"products['.$product['id'].']\">';\n            echo '<label for=\"product_'.$product['id'].'\">'.$product['name'].'</label><br>';\n        }\n      ?>\n\n      <input type=\"submit\" value=\"Place Order\">\n    </form>\n  </body>\n</html>\n<?php\n}\n?>\n```"]}
