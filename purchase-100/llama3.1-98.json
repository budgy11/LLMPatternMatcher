{"prompt": "Create a purchase cart functionality using php", "llm_output": "Here is an example of how you can implement a simple purchase cart functionality in PHP:\n\n**cart.php**\n```php\n<?php\n\n// Initialize session variables\nsession_start();\n\n// Define products array\n$products = [\n    ['id' => 1, 'name' => 'Product A', 'price' => 9.99],\n    ['id' => 2, 'name' => 'Product B', 'price' => 19.99],\n    ['id' => 3, 'name' => 'Product C', 'price' => 29.99]\n];\n\n// Initialize cart array\n$_SESSION['cart'] = [];\n\n// Display cart contents\nfunction display_cart() {\n    global $products;\n    global $_SESSION;\n    echo '<h2>Cart Contents:</h2>';\n    echo '<table border=\"1\">';\n    echo '<tr><th>Product</th><th>Price</th><th>Quantity</th></tr>';\n    foreach ($_SESSION['cart'] as $product_id => $quantity) {\n        $product = array_filter($products, function ($p) use ($product_id) { return $p['id'] == $product_id; });\n        echo '<tr><td>' . $product[0]['name'] . '</td><td>$' . number_format($product[0]['price'], 2) . '</td><td>' . $quantity . '</td></tr>';\n    }\n    echo '</table>';\n}\n\n// Add product to cart\nfunction add_to_cart($product_id, $quantity = 1) {\n    global $_SESSION;\n    if (isset($_SESSION['cart'][$product_id])) {\n        $_SESSION['cart'][$product_id] += $quantity;\n    } else {\n        $_SESSION['cart'][$product_id] = $quantity;\n    }\n}\n\n// Remove product from cart\nfunction remove_from_cart($product_id) {\n    global $_SESSION;\n    unset($_SESSION['cart'][$product_id]);\n}\n\n// Calculate total cost of cart contents\nfunction calculate_total() {\n    global $_SESSION;\n    global $products;\n    $total = 0;\n    foreach ($_SESSION['cart'] as $product_id => $quantity) {\n        $product = array_filter($products, function ($p) use ($product_id) { return $p['id'] == $product_id; });\n        $total += $product[0]['price'] * $quantity;\n    }\n    return number_format($total, 2);\n}\n\n// Display checkout form\nfunction display_checkout_form() {\n    global $_SESSION;\n    echo '<h2>Checkout:</h2>';\n    echo '<form action=\"checkout.php\" method=\"post\">';\n    echo '<table border=\"1\">';\n    echo '<tr><th>Product</th><th>Price</th><th>Quantity</th></tr>';\n    foreach ($_SESSION['cart'] as $product_id => $quantity) {\n        $product = array_filter($products, function ($p) use ($product_id) { return $p['id'] == $product_id; });\n        echo '<tr><td>' . $product[0]['name'] . '</td><td>$' . number_format($product[0]['price'], 2) . '</td><td>' . $quantity . '</td></tr>';\n    }\n    echo '</table>';\n    echo '<input type=\"submit\" value=\"Proceed to Checkout\">';\n    echo '</form>';\n}\n\n// Display cart contents and checkout form\ndisplay_cart();\necho '<p>Total: $' . calculate_total() . '</p>';\ndisplay_checkout_form();\n\n?>\n```\n**checkout.php**\n```php\n<?php\n\n// Initialize session variables\nsession_start();\n\n// Process checkout form submission\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    // Get cart contents from session variable\n    global $_SESSION;\n    $cart = $_SESSION['cart'];\n\n    // Calculate total cost of cart contents\n    $total = 0;\n    foreach ($cart as $product_id => $quantity) {\n        $product = array_filter($products, function ($p) use ($product_id) { return $p['id'] == $product_id; });\n        $total += $product[0]['price'] * $quantity;\n    }\n\n    // Process payment (e.g. via PayPal or Stripe)\n    echo 'Payment processed successfully! Thank you for your order.';\n} else {\n    header('Location: cart.php');\n}\n\n?>\n```\nThis example uses PHP sessions to store the cart contents and checkout form data. The `cart.php` file displays the cart contents, allows users to add or remove products, and calculates the total cost of the cart contents. The `checkout.php` file processes the checkout form submission and sends the user a thank-you message after successful payment processing.\n\nNote that this is a simplified example and you should consider implementing additional features such as:\n\n* Validating user input\n* Handling errors and exceptions\n* Implementing security measures (e.g. HTTPS, authentication)\n* Integrating with payment gateways (e.g. PayPal, Stripe)\n\nI hope this helps! Let me know if you have any questions or need further assistance.", "code_blocks": ["```php\n<?php\n\n// Initialize session variables\nsession_start();\n\n// Define products array\n$products = [\n    ['id' => 1, 'name' => 'Product A', 'price' => 9.99],\n    ['id' => 2, 'name' => 'Product B', 'price' => 19.99],\n    ['id' => 3, 'name' => 'Product C', 'price' => 29.99]\n];\n\n// Initialize cart array\n$_SESSION['cart'] = [];\n\n// Display cart contents\nfunction display_cart() {\n    global $products;\n    global $_SESSION;\n    echo '<h2>Cart Contents:</h2>';\n    echo '<table border=\"1\">';\n    echo '<tr><th>Product</th><th>Price</th><th>Quantity</th></tr>';\n    foreach ($_SESSION['cart'] as $product_id => $quantity) {\n        $product = array_filter($products, function ($p) use ($product_id) { return $p['id'] == $product_id; });\n        echo '<tr><td>' . $product[0]['name'] . '</td><td>$' . number_format($product[0]['price'], 2) . '</td><td>' . $quantity . '</td></tr>';\n    }\n    echo '</table>';\n}\n\n// Add product to cart\nfunction add_to_cart($product_id, $quantity = 1) {\n    global $_SESSION;\n    if (isset($_SESSION['cart'][$product_id])) {\n        $_SESSION['cart'][$product_id] += $quantity;\n    } else {\n        $_SESSION['cart'][$product_id] = $quantity;\n    }\n}\n\n// Remove product from cart\nfunction remove_from_cart($product_id) {\n    global $_SESSION;\n    unset($_SESSION['cart'][$product_id]);\n}\n\n// Calculate total cost of cart contents\nfunction calculate_total() {\n    global $_SESSION;\n    global $products;\n    $total = 0;\n    foreach ($_SESSION['cart'] as $product_id => $quantity) {\n        $product = array_filter($products, function ($p) use ($product_id) { return $p['id'] == $product_id; });\n        $total += $product[0]['price'] * $quantity;\n    }\n    return number_format($total, 2);\n}\n\n// Display checkout form\nfunction display_checkout_form() {\n    global $_SESSION;\n    echo '<h2>Checkout:</h2>';\n    echo '<form action=\"checkout.php\" method=\"post\">';\n    echo '<table border=\"1\">';\n    echo '<tr><th>Product</th><th>Price</th><th>Quantity</th></tr>';\n    foreach ($_SESSION['cart'] as $product_id => $quantity) {\n        $product = array_filter($products, function ($p) use ($product_id) { return $p['id'] == $product_id; });\n        echo '<tr><td>' . $product[0]['name'] . '</td><td>$' . number_format($product[0]['price'], 2) . '</td><td>' . $quantity . '</td></tr>';\n    }\n    echo '</table>';\n    echo '<input type=\"submit\" value=\"Proceed to Checkout\">';\n    echo '</form>';\n}\n\n// Display cart contents and checkout form\ndisplay_cart();\necho '<p>Total: $' . calculate_total() . '</p>';\ndisplay_checkout_form();\n\n?>\n```", "```php\n<?php\n\n// Initialize session variables\nsession_start();\n\n// Process checkout form submission\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    // Get cart contents from session variable\n    global $_SESSION;\n    $cart = $_SESSION['cart'];\n\n    // Calculate total cost of cart contents\n    $total = 0;\n    foreach ($cart as $product_id => $quantity) {\n        $product = array_filter($products, function ($p) use ($product_id) { return $p['id'] == $product_id; });\n        $total += $product[0]['price'] * $quantity;\n    }\n\n    // Process payment (e.g. via PayPal or Stripe)\n    echo 'Payment processed successfully! Thank you for your order.';\n} else {\n    header('Location: cart.php');\n}\n\n?>\n```"]}
