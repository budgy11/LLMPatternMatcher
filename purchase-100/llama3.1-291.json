{"prompt": "Create a purchase functionality using php", "llm_output": "Here's an example of a basic purchase functionality using PHP, HTML, and MySQL. This will include the following features:\n\n* User registration\n* Login\n* Adding products to cart\n* Viewing cart contents\n* Making purchases\n\n**Database Schema**\n\nFirst, let's create the database schema for our e-commerce application.\n\n```sql\nCREATE TABLE users (\n    id INT PRIMARY KEY AUTO_INCREMENT,\n    name VARCHAR(255),\n    email VARCHAR(255) UNIQUE,\n    password VARCHAR(255)\n);\n\nCREATE TABLE products (\n    id INT PRIMARY KEY AUTO_INCREMENT,\n    name VARCHAR(255),\n    price DECIMAL(10, 2)\n);\n\nCREATE TABLE cart (\n    id INT PRIMARY KEY AUTO_INCREMENT,\n    user_id INT,\n    product_id INT,\n    quantity INT\n);\n```\n\n**PHP Code**\n\nLet's assume we have the following PHP files:\n\n* `index.php` for user registration and login\n* `cart.php` for viewing cart contents\n* `products.php` for adding products to cart\n* `checkout.php` for making purchases\n\n**index.php**\n```php\n<?php\n// include database connection file\nrequire_once 'db_connection.php';\n\nif (isset($_POST['register'])) {\n    // register user\n    $name = $_POST['name'];\n    $email = $_POST['email'];\n    $password = password_hash($_POST['password'], PASSWORD_DEFAULT);\n    \n    $query = \"INSERT INTO users (name, email, password) VALUES (:name, :email, :password)\";\n    $stmt = $pdo->prepare($query);\n    $stmt->bindParam(':name', $name);\n    $stmt->bindParam(':email', $email);\n    $stmt->bindParam(':password', $password);\n    $stmt->execute();\n    \n    echo \"User registered successfully!\";\n}\n\nif (isset($_POST['login'])) {\n    // login user\n    $email = $_POST['email'];\n    $password = $_POST['password'];\n    \n    $query = \"SELECT * FROM users WHERE email = :email AND password = :password\";\n    $stmt = $pdo->prepare($query);\n    $stmt->bindParam(':email', $email);\n    $stmt->bindParam(':password', $password);\n    $stmt->execute();\n    \n    if ($stmt->rowCount() > 0) {\n        echo \"Logged in successfully!\";\n    } else {\n        echo \"Invalid email or password\";\n    }\n}\n?>\n\n<form method=\"post\">\n    <input type=\"text\" name=\"name\" placeholder=\"Name\">\n    <input type=\"email\" name=\"email\" placeholder=\"Email\">\n    <input type=\"password\" name=\"password\" placeholder=\"Password\">\n    <button type=\"submit\" name=\"register\">Register</button>\n</form>\n\n<form method=\"post\">\n    <input type=\"text\" name=\"email\" placeholder=\"Email\">\n    <input type=\"password\" name=\"password\" placeholder=\"Password\">\n    <button type=\"submit\" name=\"login\">Login</button>\n</form>\n```\n\n**cart.php**\n```php\n<?php\n// include database connection file\nrequire_once 'db_connection.php';\n\nif (isset($_SESSION['user_id'])) {\n    // get cart contents for current user\n    $query = \"SELECT * FROM cart WHERE user_id = :user_id\";\n    $stmt = $pdo->prepare($query);\n    $stmt->bindParam(':user_id', $_SESSION['user_id']);\n    $stmt->execute();\n    \n    if ($stmt->rowCount() > 0) {\n        while ($row = $stmt->fetch()) {\n            echo $row['product_name'] . \" x \" . $row['quantity'];\n        }\n    } else {\n        echo \"Cart is empty\";\n    }\n} else {\n    echo \"Please login to view cart contents\";\n}\n?>\n```\n\n**products.php**\n```php\n<?php\n// include database connection file\nrequire_once 'db_connection.php';\n\nif (isset($_POST['add_to_cart'])) {\n    // add product to cart\n    $product_id = $_POST['product_id'];\n    $user_id = $_SESSION['user_id'];\n    \n    $query = \"INSERT INTO cart (user_id, product_id, quantity) VALUES (:user_id, :product_id, 1)\";\n    $stmt = $pdo->prepare($query);\n    $stmt->bindParam(':user_id', $user_id);\n    $stmt->bindParam(':product_id', $product_id);\n    $stmt->execute();\n    \n    echo \"Product added to cart successfully!\";\n}\n\n// display products\n$query = \"SELECT * FROM products\";\n$stmt = $pdo->query($query);\n\nwhile ($row = $stmt->fetch()) {\n    echo \"<button type='submit' name='add_to_cart' value='\" . $row['id'] .\"'>\" . $row['name'] . \"</button>\";\n}\n?>\n```\n\n**checkout.php**\n```php\n<?php\n// include database connection file\nrequire_once 'db_connection.php';\n\nif (isset($_POST['make_purchase'])) {\n    // make purchase\n    $cart_contents = $_SESSION['cart_contents'];\n    \n    foreach ($cart_contents as $product_id => $quantity) {\n        $query = \"UPDATE cart SET quantity = :quantity WHERE product_id = :product_id AND user_id = :user_id\";\n        $stmt = $pdo->prepare($query);\n        $stmt->bindParam(':quantity', $quantity);\n        $stmt->bindParam(':product_id', $product_id);\n        $stmt->bindParam(':user_id', $_SESSION['user_id']);\n        $stmt->execute();\n    }\n    \n    echo \"Purchase made successfully!\";\n}\n\n// display cart contents\nif (isset($_SESSION['cart_contents'])) {\n    echo \"<form method='post'>\";\n    foreach ($_SESSION['cart_contents'] as $product_id => $quantity) {\n        echo $product_id . \" x \" . $quantity;\n    }\n    echo \"<button type='submit' name='make_purchase'>Make Purchase</button>\";\n    echo \"</form>\";\n} else {\n    echo \"No items in cart\";\n}\n?>\n```\n\n**db_connection.php**\n```php\n<?php\n$pdo = new PDO('mysql:host=localhost;dbname=ecommerce', 'username', 'password');\n?>\n```\n\nThis is a basic example and does not include any security measures such as authentication or authorization. It's recommended to use a framework like Laravel or CodeIgniter for building a real-world e-commerce application.\n\nAlso, this code assumes that the user has already registered and logged in before accessing the cart and making purchases. You would need to add additional logic to handle these cases.\n\nNote: This is not an exhaustive example, but it should give you an idea of how to create a basic purchase functionality using PHP.", "code_blocks": [null, "```php\n<?php\n// include database connection file\nrequire_once 'db_connection.php';\n\nif (isset($_POST['register'])) {\n    // register user\n    $name = $_POST['name'];\n    $email = $_POST['email'];\n    $password = password_hash($_POST['password'], PASSWORD_DEFAULT);\n    \n    $query = \"INSERT INTO users (name, email, password) VALUES (:name, :email, :password)\";\n    $stmt = $pdo->prepare($query);\n    $stmt->bindParam(':name', $name);\n    $stmt->bindParam(':email', $email);\n    $stmt->bindParam(':password', $password);\n    $stmt->execute();\n    \n    echo \"User registered successfully!\";\n}\n\nif (isset($_POST['login'])) {\n    // login user\n    $email = $_POST['email'];\n    $password = $_POST['password'];\n    \n    $query = \"SELECT * FROM users WHERE email = :email AND password = :password\";\n    $stmt = $pdo->prepare($query);\n    $stmt->bindParam(':email', $email);\n    $stmt->bindParam(':password', $password);\n    $stmt->execute();\n    \n    if ($stmt->rowCount() > 0) {\n        echo \"Logged in successfully!\";\n    } else {\n        echo \"Invalid email or password\";\n    }\n}\n?>\n\n<form method=\"post\">\n    <input type=\"text\" name=\"name\" placeholder=\"Name\">\n    <input type=\"email\" name=\"email\" placeholder=\"Email\">\n    <input type=\"password\" name=\"password\" placeholder=\"Password\">\n    <button type=\"submit\" name=\"register\">Register</button>\n</form>\n\n<form method=\"post\">\n    <input type=\"text\" name=\"email\" placeholder=\"Email\">\n    <input type=\"password\" name=\"password\" placeholder=\"Password\">\n    <button type=\"submit\" name=\"login\">Login</button>\n</form>\n```", "```php\n<?php\n// include database connection file\nrequire_once 'db_connection.php';\n\nif (isset($_SESSION['user_id'])) {\n    // get cart contents for current user\n    $query = \"SELECT * FROM cart WHERE user_id = :user_id\";\n    $stmt = $pdo->prepare($query);\n    $stmt->bindParam(':user_id', $_SESSION['user_id']);\n    $stmt->execute();\n    \n    if ($stmt->rowCount() > 0) {\n        while ($row = $stmt->fetch()) {\n            echo $row['product_name'] . \" x \" . $row['quantity'];\n        }\n    } else {\n        echo \"Cart is empty\";\n    }\n} else {\n    echo \"Please login to view cart contents\";\n}\n?>\n```", "```php\n<?php\n// include database connection file\nrequire_once 'db_connection.php';\n\nif (isset($_POST['add_to_cart'])) {\n    // add product to cart\n    $product_id = $_POST['product_id'];\n    $user_id = $_SESSION['user_id'];\n    \n    $query = \"INSERT INTO cart (user_id, product_id, quantity) VALUES (:user_id, :product_id, 1)\";\n    $stmt = $pdo->prepare($query);\n    $stmt->bindParam(':user_id', $user_id);\n    $stmt->bindParam(':product_id', $product_id);\n    $stmt->execute();\n    \n    echo \"Product added to cart successfully!\";\n}\n\n// display products\n$query = \"SELECT * FROM products\";\n$stmt = $pdo->query($query);\n\nwhile ($row = $stmt->fetch()) {\n    echo \"<button type='submit' name='add_to_cart' value='\" . $row['id'] .\"'>\" . $row['name'] . \"</button>\";\n}\n?>\n```", "```php\n<?php\n// include database connection file\nrequire_once 'db_connection.php';\n\nif (isset($_POST['make_purchase'])) {\n    // make purchase\n    $cart_contents = $_SESSION['cart_contents'];\n    \n    foreach ($cart_contents as $product_id => $quantity) {\n        $query = \"UPDATE cart SET quantity = :quantity WHERE product_id = :product_id AND user_id = :user_id\";\n        $stmt = $pdo->prepare($query);\n        $stmt->bindParam(':quantity', $quantity);\n        $stmt->bindParam(':product_id', $product_id);\n        $stmt->bindParam(':user_id', $_SESSION['user_id']);\n        $stmt->execute();\n    }\n    \n    echo \"Purchase made successfully!\";\n}\n\n// display cart contents\nif (isset($_SESSION['cart_contents'])) {\n    echo \"<form method='post'>\";\n    foreach ($_SESSION['cart_contents'] as $product_id => $quantity) {\n        echo $product_id . \" x \" . $quantity;\n    }\n    echo \"<button type='submit' name='make_purchase'>Make Purchase</button>\";\n    echo \"</form>\";\n} else {\n    echo \"No items in cart\";\n}\n?>\n```", "```php\n<?php\n$pdo = new PDO('mysql:host=localhost;dbname=ecommerce', 'username', 'password');\n?>\n```"]}
