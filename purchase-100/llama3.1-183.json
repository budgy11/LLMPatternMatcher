{"prompt": "Create a purchase functionality using php", "llm_output": "Here's an example of a basic purchase functionality in PHP. This includes the following:\n\n* User authentication (for demonstration purposes, we'll use a simple password-based system)\n* Product database with categories and products\n* Cart system to hold user's selected products\n* Purchase form to complete order\n* Payment processing using Stripe API (you'll need to create an account on Stripe)\n\nPlease note that this is a simplified example and you should never store sensitive data like passwords or payment credentials directly in your code. You should always use secure storage mechanisms like hashed passwords and token-based authentication.\n\n**Database Schema**\n\n```sql\nCREATE TABLE users (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255),\n  password VARCHAR(255)\n);\n\nCREATE TABLE categories (\n  id INT PRIMARY KEY,\n  name VARCHAR(255)\n);\n\nCREATE TABLE products (\n  id INT PRIMARY KEY,\n  category_id INT,\n  name VARCHAR(255),\n  price DECIMAL(10,2)\n);\n\nCREATE TABLE cart (\n  id INT PRIMARY KEY,\n  user_id INT,\n  product_id INT\n);\n```\n\n**Code**\n\n**config.php**\n```php\n<?php\n\ndefine('DB_HOST', 'your_host');\ndefine('DB_USER', 'your_username');\ndefine('DB_PASSWORD', 'your_password');\ndefine('DB_NAME', 'your_database');\n\n?>\n```\n\n**auth.php**\n```php\n<?php\n\nfunction authenticate($username, $password) {\n  // Simple password-based authentication for demonstration purposes only!\n  global $db;\n  $query = \"SELECT * FROM users WHERE name = '$username' AND password = '$password'\";\n  return mysqli_query($db, $query);\n}\n\n?>\n```\n\n**database.php**\n```php\n<?php\n\nfunction db_connect() {\n  global $db;\n  $conn = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);\n  if ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n  }\n  $db = $conn;\n}\n\nfunction get_products() {\n  $query = \"SELECT * FROM products\";\n  return mysqli_query($db, $query)->fetch_all(MYSQLI_ASSOC);\n}\n\n?>\n```\n\n**cart.php**\n```php\n<?php\n\nfunction add_to_cart($product_id) {\n  global $user_id;\n  $query = \"INSERT INTO cart (user_id, product_id) VALUES ('$user_id', '$product_id')\";\n  return mysqli_query($db, $query);\n}\n\nfunction get_cart_contents() {\n  $query = \"SELECT * FROM cart WHERE user_id = '$user_id'\";\n  return mysqli_query($db, $query)->fetch_all(MYSQLI_ASSOC);\n}\n\n?>\n```\n\n**purchase.php**\n```php\n<?php\n\nfunction checkout() {\n  global $user_id;\n  $cart = get_cart_contents();\n  if (empty($cart)) {\n    echo \"Cart is empty!\";\n    exit;\n  }\n  \n  // Process payment using Stripe API\n  require_once 'stripe-php/init.php';\n  \\Stripe\\Stripe::setApiKey('YOUR_STRIPE_SECRET_KEY');\n  \n  foreach ($cart as $item) {\n    $product = get_product($item['product_id']);\n    $amount = $product['price'] * $item['quantity'];\n    $charge = \\Stripe\\Charge::create(array(\n      'amount' => $amount,\n      'currency' => 'usd',\n      'source' => $_POST['token'],\n      'description' => \"Order #{$item['id']}\"\n    ));\n  }\n  \n  // Clear cart contents\n  $query = \"DELETE FROM cart WHERE user_id = '$user_id'\";\n  mysqli_query($db, $query);\n}\n\nfunction get_product($product_id) {\n  $query = \"SELECT * FROM products WHERE id = '$product_id'\";\n  return mysqli_query($db, $query)->fetch_assoc();\n}\n\n?>\n```\n\n**index.php**\n```php\n<?php\n\nrequire_once 'config.php';\nrequire_once 'database.php';\n$db_connect();\n\nif (isset($_POST['login'])) {\n  authenticate($_POST['username'], $_POST['password']);\n  if ($result = authenticate($_POST['username'], $_POST['password'])) {\n    $user_id = mysqli_fetch_assoc($result)['id'];\n  } else {\n    echo \"Invalid username or password!\";\n    exit;\n  }\n}\n\nif (isset($_POST['add_to_cart'])) {\n  add_to_cart($_POST['product_id']);\n}\n\nif (isset($_POST['checkout'])) {\n  checkout();\n}\n\n?>\n```\n\n**Note**: This code is for demonstration purposes only and should not be used in production without proper security measures, such as input validation, error handling, and secure password storage.\n\nYou will need to create an account on Stripe and replace `'YOUR_STRIPE_SECRET_KEY'` with your secret key. You'll also need to set up a payment gateway to handle the actual processing of payments.", "code_blocks": [null, "```php\n<?php\n\ndefine('DB_HOST', 'your_host');\ndefine('DB_USER', 'your_username');\ndefine('DB_PASSWORD', 'your_password');\ndefine('DB_NAME', 'your_database');\n\n?>\n```", "```php\n<?php\n\nfunction authenticate($username, $password) {\n  // Simple password-based authentication for demonstration purposes only!\n  global $db;\n  $query = \"SELECT * FROM users WHERE name = '$username' AND password = '$password'\";\n  return mysqli_query($db, $query);\n}\n\n?>\n```", "```php\n<?php\n\nfunction db_connect() {\n  global $db;\n  $conn = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);\n  if ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n  }\n  $db = $conn;\n}\n\nfunction get_products() {\n  $query = \"SELECT * FROM products\";\n  return mysqli_query($db, $query)->fetch_all(MYSQLI_ASSOC);\n}\n\n?>\n```", "```php\n<?php\n\nfunction add_to_cart($product_id) {\n  global $user_id;\n  $query = \"INSERT INTO cart (user_id, product_id) VALUES ('$user_id', '$product_id')\";\n  return mysqli_query($db, $query);\n}\n\nfunction get_cart_contents() {\n  $query = \"SELECT * FROM cart WHERE user_id = '$user_id'\";\n  return mysqli_query($db, $query)->fetch_all(MYSQLI_ASSOC);\n}\n\n?>\n```", "```php\n<?php\n\nfunction checkout() {\n  global $user_id;\n  $cart = get_cart_contents();\n  if (empty($cart)) {\n    echo \"Cart is empty!\";\n    exit;\n  }\n  \n  // Process payment using Stripe API\n  require_once 'stripe-php/init.php';\n  \\Stripe\\Stripe::setApiKey('YOUR_STRIPE_SECRET_KEY');\n  \n  foreach ($cart as $item) {\n    $product = get_product($item['product_id']);\n    $amount = $product['price'] * $item['quantity'];\n    $charge = \\Stripe\\Charge::create(array(\n      'amount' => $amount,\n      'currency' => 'usd',\n      'source' => $_POST['token'],\n      'description' => \"Order #{$item['id']}\"\n    ));\n  }\n  \n  // Clear cart contents\n  $query = \"DELETE FROM cart WHERE user_id = '$user_id'\";\n  mysqli_query($db, $query);\n}\n\nfunction get_product($product_id) {\n  $query = \"SELECT * FROM products WHERE id = '$product_id'\";\n  return mysqli_query($db, $query)->fetch_assoc();\n}\n\n?>\n```", "```php\n<?php\n\nrequire_once 'config.php';\nrequire_once 'database.php';\n$db_connect();\n\nif (isset($_POST['login'])) {\n  authenticate($_POST['username'], $_POST['password']);\n  if ($result = authenticate($_POST['username'], $_POST['password'])) {\n    $user_id = mysqli_fetch_assoc($result)['id'];\n  } else {\n    echo \"Invalid username or password!\";\n    exit;\n  }\n}\n\nif (isset($_POST['add_to_cart'])) {\n  add_to_cart($_POST['product_id']);\n}\n\nif (isset($_POST['checkout'])) {\n  checkout();\n}\n\n?>\n```"]}
