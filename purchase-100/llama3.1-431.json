{"prompt": "Create a purchase functionality using php", "llm_output": "Here is an example of a basic purchase functionality using PHP, HTML, and MySQL:\n\n**Note:** This is a simplified example and you should consider implementing additional security measures (e.g., validation, sanitization, authentication) in a real-world application.\n\n**Database Schema:**\n```sql\nCREATE TABLE products (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  name VARCHAR(255),\n  price DECIMAL(10,2)\n);\n\nCREATE TABLE orders (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  user_id INT,\n  product_id INT,\n  quantity INT,\n  total_price DECIMAL(10,2),\n  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n```\n**PHP Code ( purchase.php ):**\n```php\n<?php\n\n// Configuration\n$host = 'localhost';\n$username = 'your_username';\n$password = 'your_password';\n$dbname = 'your_database';\n\n// Connect to database\n$conn = new mysqli($host, $username, $password, $dbname);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Get product ID from URL parameter\n$productId = $_GET['id'];\n\n// Check if product exists\n$result = $conn->query(\"SELECT * FROM products WHERE id = '$productId'\");\n\nif (!$result->num_rows > 0) {\n    echo 'Product not found!';\n    exit;\n}\n\n// Get user input (quantity)\n$quantity = isset($_POST['quantity']) ? $_POST['quantity'] : '';\n\n// Validate quantity\nif (!ctype_digit($quantity)) {\n    echo 'Invalid quantity!';\n    exit;\n}\n\n// Calculate total price\n$totalPrice = $result->fetch_assoc()['price'] * $quantity;\n\n// Insert order into database\n$sql = \"INSERT INTO orders (user_id, product_id, quantity, total_price) VALUES (?, ?, ?, ?)\";\n$stmt = $conn->prepare($sql);\n$stmt->bind_param('iiii', $_SESSION['user_id'], $productId, $quantity, $totalPrice);\n$stmt->execute();\n\n// Redirect to confirmation page\nheader('Location: confirmation.php');\nexit;\n\n?>\n```\n**HTML Code ( purchase.html ):**\n```html\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Make a Purchase</title>\n</head>\n<body>\n\n<form action=\"purchase.php\" method=\"post\">\n    <label for=\"quantity\">Quantity:</label>\n    <input type=\"number\" id=\"quantity\" name=\"quantity\">\n    <button type=\"submit\">Purchase</button>\n    <input type=\"hidden\" name=\"id\" value=\"<?php echo $productId; ?>\">\n</form>\n\n</body>\n</html>\n```\n**Explanation:**\n\n1. The PHP code connects to the database using `mysqli` and selects a product by its ID.\n2. It then validates user input for quantity, ensuring it's a positive integer.\n3. If valid, it calculates the total price by multiplying the product price with the quantity.\n4. Finally, it inserts an order into the database with the user's ID, product ID, quantity, and total price.\n\n**Example Use Case:**\n\n1. User visits `purchase.html` and selects a product from the page (e.g., `?id=1`).\n2. The form submits to `purchase.php`, passing the product ID as a hidden field.\n3. On submission, PHP validates the user input for quantity and calculates the total price.\n4. If valid, it inserts an order into the database with the calculated total price.\n\n**Note:** This is a basic example and you should consider implementing additional security measures (e.g., validation, sanitization, authentication) in a real-world application.", "code_blocks": [null, "```php\n<?php\n\n// Configuration\n$host = 'localhost';\n$username = 'your_username';\n$password = 'your_password';\n$dbname = 'your_database';\n\n// Connect to database\n$conn = new mysqli($host, $username, $password, $dbname);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Get product ID from URL parameter\n$productId = $_GET['id'];\n\n// Check if product exists\n$result = $conn->query(\"SELECT * FROM products WHERE id = '$productId'\");\n\nif (!$result->num_rows > 0) {\n    echo 'Product not found!';\n    exit;\n}\n\n// Get user input (quantity)\n$quantity = isset($_POST['quantity']) ? $_POST['quantity'] : '';\n\n// Validate quantity\nif (!ctype_digit($quantity)) {\n    echo 'Invalid quantity!';\n    exit;\n}\n\n// Calculate total price\n$totalPrice = $result->fetch_assoc()['price'] * $quantity;\n\n// Insert order into database\n$sql = \"INSERT INTO orders (user_id, product_id, quantity, total_price) VALUES (?, ?, ?, ?)\";\n$stmt = $conn->prepare($sql);\n$stmt->bind_param('iiii', $_SESSION['user_id'], $productId, $quantity, $totalPrice);\n$stmt->execute();\n\n// Redirect to confirmation page\nheader('Location: confirmation.php');\nexit;\n\n?>\n```", null]}
