{"prompt": "Create a purchase functionality using php", "llm_output": "Here is an example of a basic purchase functionality in PHP:\n\n**Database Schema**\n\nFor this example, we will use a simple database schema with two tables: `products` and `orders`.\n\n`products` table:\n```sql\nCREATE TABLE products (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  price DECIMAL(10,2)\n);\n```\n\n`orders` table:\n```sql\nCREATE TABLE orders (\n  id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  order_date DATE,\n  total DECIMAL(10,2)\n);\n```\n\n**PHP Code**\n\nCreate a new PHP file (e.g. `purchase.php`) and add the following code:\n\n```php\n<?php\n\n// Include database connection settings\nrequire_once 'dbconnect.php';\n\n// Check if user is logged in\nif (!isset($_SESSION['username'])) {\n  header('Location: login.php');\n  exit;\n}\n\n// Get product ID from URL parameter\n$productId = $_GET['product_id'];\n\n// Retrieve product details from database\n$query = \"SELECT * FROM products WHERE id = '$productId'\";\n$result = mysqli_query($conn, $query);\n$product = mysqli_fetch_assoc($result);\n\n// Check if product exists\nif (empty($product)) {\n  echo 'Product not found';\n  exit;\n}\n\n// Get user's session data\n$username = $_SESSION['username'];\n\n// Calculate order total\n$orderTotal = $product['price'];\n\n// Insert new order into database\n$query = \"INSERT INTO orders (customer_name, order_date, total) VALUES ('$username', NOW(), '$orderTotal')\";\nmysqli_query($conn, $query);\n\n// Get the ID of the newly created order\n$orderId = mysqli_insert_id($conn);\n\n// Update product stock levels\n$query = \"UPDATE products SET quantity = quantity - 1 WHERE id = '$productId'\";\nmysqli_query($conn, $query);\n\n// Display a confirmation message\necho 'Your purchase has been successful!';\n\n?>\n```\n\n**Explanation**\n\nThis code assumes that you have a `dbconnect.php` file that establishes a connection to your database. It also assumes that you have set up sessions and are logged in.\n\nThe code retrieves the product ID from the URL parameter and checks if the product exists in the database. If it does, it calculates the order total and inserts a new order into the database. It then updates the product stock levels by decrementing the quantity by 1.\n\n**Note**\n\nThis is a basic example and you should consider implementing proper validation, error handling, and security measures (e.g. prepared statements) to prevent SQL injection attacks.\n\n**Example Use Case**\n\nTo use this code, simply call the `purchase.php` file from your URL with the product ID as a parameter:\n\n```\nhttp://example.com/purchase.php?product_id=1\n```\n\nReplace `http://example.com/` with your own domain and make sure to update the database schema and PHP code according to your needs.", "code_blocks": [null, null, "```php\n<?php\n\n// Include database connection settings\nrequire_once 'dbconnect.php';\n\n// Check if user is logged in\nif (!isset($_SESSION['username'])) {\n  header('Location: login.php');\n  exit;\n}\n\n// Get product ID from URL parameter\n$productId = $_GET['product_id'];\n\n// Retrieve product details from database\n$query = \"SELECT * FROM products WHERE id = '$productId'\";\n$result = mysqli_query($conn, $query);\n$product = mysqli_fetch_assoc($result);\n\n// Check if product exists\nif (empty($product)) {\n  echo 'Product not found';\n  exit;\n}\n\n// Get user's session data\n$username = $_SESSION['username'];\n\n// Calculate order total\n$orderTotal = $product['price'];\n\n// Insert new order into database\n$query = \"INSERT INTO orders (customer_name, order_date, total) VALUES ('$username', NOW(), '$orderTotal')\";\nmysqli_query($conn, $query);\n\n// Get the ID of the newly created order\n$orderId = mysqli_insert_id($conn);\n\n// Update product stock levels\n$query = \"UPDATE products SET quantity = quantity - 1 WHERE id = '$productId'\";\nmysqli_query($conn, $query);\n\n// Display a confirmation message\necho 'Your purchase has been successful!';\n\n?>\n```", null]}
