{"prompt": "Create a purchase functionality using php", "llm_output": "<think>\nOkay, so the user wants to create a purchase functionality using PHP. I need to figure out how to approach this.\n\nFirst, I should outline what the functionality entails. It needs to handle a shopping cart with items, each having an ID, name, price, and quantity. Then, when the user clicks buy, it processes the order.\n\nI'll start by setting up a basic HTML structure for the cart display. Using PHP to loop through the cart items and display each one. I should include links to add or remove items, which means I need functions for those actions.\n\nNext, the purchase button needs to trigger an order processing function. So, when the form is submitted, it calls process_order(). This function should check if there are items in the cart. If not, show an error message.\n\nIf there are items, it needs to calculate the total price. I'll loop through each item, multiply quantity by price, and sum it all up.\n\nThen, display a confirmation page with order details: date, items, quantities, prices, and total. Also, include a thank you message and a link back to the shop.\n\nI should also think about how the cart is stored. In this example, it's using $_SESSION['cart'], so I need to make sure sessions are started properly elsewhere in the code.\n\nI'll structure the PHP functions at the top of the file for better organization. The HTML comes after that, including forms for adding/removing items and submitting the order.\n\nTesting is important. I should ensure that all functionalities work: adding items, removing them, calculating totals correctly, and displaying the confirmation page accurately.\n\nFinally, I'll provide some notes on how to expand this functionality in the future, like integrating a database or payment gateway.\n</think>\n\nHere's an example of purchase functionality using PHP. This includes:\n\n1. A shopping cart implementation\n2. Product display\n3. Order processing\n4. Payment handling (simplified)\n\n```php\n<?php\n// Start session to store cart items\nsession_start();\n\n// Database connection (replace with your credentials)\n$servername = \"localhost\";\n$username = \"username\";\n$password = \"password\";\n$dbname = \"shop\";\n\n$conn = new mysqli($servername, $username, $password, $dbname);\n\n// Get products from database\nfunction get_products() {\n    global $conn;\n    $query = \"SELECT * FROM products LIMIT 6\"; // Simple query to get top 6 products\n    $result = $conn->query($query);\n    return $result;\n}\n\n// Add item to cart\nfunction add_to_cart($product_id) {\n    if (!isset($_SESSION['cart'])) {\n        $_SESSION['cart'] = array();\n    }\n    \n    if (isset($_SESSION['cart'][$product_id])) {\n        $_SESSION['cart'][$product_id]['quantity']++;\n    } else {\n        $product = get_product_details($product_id);\n        $_SESSION['cart'][$product_id] = array(\n            'id' => $product_id,\n            'name' => $product['name'],\n            'price' => $product['price'],\n            'quantity' => 1\n        );\n    }\n}\n\n// Remove item from cart\nfunction remove_from_cart($product_id) {\n    if (isset($_SESSION['cart'][$product_id])) {\n        unset($_SESSION['cart'][$product_id]);\n    }\n}\n\n// Get product details\nfunction get_product_details($product_id) {\n    global $conn;\n    $query = \"SELECT * FROM products WHERE id = '$product_id'\";\n    $result = $conn->query($query);\n    return $result->fetch_assoc();\n}\n\n// Process order\nfunction process_order() {\n    if (empty($_SESSION['cart'])) {\n        echo \"Your cart is empty!\";\n        return;\n    }\n    \n    // Calculate total price\n    $total_price = 0;\n    foreach ($_SESSION['cart'] as $item) {\n        $total_price += $item['price'] * $item['quantity'];\n    }\n    \n    // Here you would typically:\n    // 1. Insert order into database\n    // 2. Process payment (using a payment gateway)\n    // 3. Send confirmation email\n    \n    // For this example, we'll just display the order details\n    echo \"<h2>Order Summary</h2>\";\n    echo \"<p>Date: \" . date(\"Y-m-d H:i:s\") . \"</p>\";\n    echo \"<table border='1'>\";\n    echo \"<tr><th>Item</th><th>Quantity</th><th>Price</th></tr>\";\n    \n    foreach ($_SESSION['cart'] as $item) {\n        echo \"<tr>\";\n        echo \"<td>\" . $item['name'] . \"</td>\";\n        echo \"<td>\" . $item['quantity'] . \"</td>\";\n        echo \"<td>$\" . number_format($item['price'], 2) . \"</td>\";\n        echo \"</tr>\";\n    }\n    \n    echo \"<tr><td colspan='2'>Total:</td><td>$\" . number_format($total_price, 2) . \"</td></tr>\";\n    echo \"</table>\";\n    echo \"<p>Thank you for your purchase!</p>\";\n}\n\n// Main logic\nif ($_SERVER[\"REQUEST_METHOD\"] == \"POST\") {\n    if (isset($_POST['action'])) {\n        switch ($_POST['action']) {\n            case 'add':\n                add_to_cart($_POST['product_id']);\n                break;\n            case 'remove':\n                remove_from_cart($_POST['product_id']);\n                break;\n            case 'purchase':\n                process_order();\n                break;\n        }\n    }\n}\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Online Store</title>\n    <style>\n        body { font-family: Arial, sans-serif; }\n        .cart-item { border-bottom: 1px solid #ddd; padding: 10px; }\n        table { width: 100%; margin-top: 20px; }\n        th, td { padding: 8px; text-align: left; }\n    </style>\n</head>\n<body>\n    <h1>Welcome to Our Store</h1>\n\n    <?php if (!empty($_SESSION['cart'])) : ?>\n        <h2>Your Cart</h2>\n        <div id=\"cart\">\n            <?php foreach ($_SESSION['cart'] as $item) : ?>\n                <div class=\"cart-item\">\n                    <?php echo $item['name']; ?> (Quantity: <?php echo $item['quantity']; ?>)\n                    <form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n                        <input type=\"hidden\" name=\"action\" value=\"remove\">\n                        <input type=\"hidden\" name=\"product_id\" value=\"<?php echo $item['id']; ?>\">\n                        <button type=\"submit\">Remove</button>\n                    </form>\n                </div>\n            <?php endforeach; ?>\n        </div>\n        \n        <form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n            <input type=\"hidden\" name=\"action\" value=\"purchase\">\n            <button type=\"submit\">Purchase</button>\n        </form>\n    <?php endif; ?>\n\n    <h2>Available Products</h2>\n    <?php $products = get_products(); while ($product = $products->fetch_assoc()) : ?>\n        <div class=\"product\">\n            <h3><?php echo $product['name']; ?></h3>\n            <p>$<?php echo number_format($product['price'], 2); ?></p>\n            <form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n                <input type=\"hidden\" name=\"action\" value=\"add\">\n                <input type=\"hidden\" name=\"product_id\" value=\"<?php echo $product['id']; ?>\">\n                <button type=\"submit\">Add to Cart</button>\n            </form>\n        </div>\n    <?php endwhile; ?>\n\n</body>\n</html>\n```\n\nThis code provides:\n\n1. A simple store interface with products\n2. Ability to add/remove items from the cart\n3. Order processing functionality\n4. Display of order summary\n\nFeatures:\n- Session-based shopping cart\n- Product display using database connection\n- Add/Remove functionality\n- Order confirmation page\n- Basic HTML/CSS styling\n\nTo use this code:\n\n1. Replace the database credentials with your own\n2. Create a `products` table in your database with at least `id`, `name`, and `price` columns\n3. Populate the products table with sample data\n4. Run the script on a PHP-enabled web server\n\nThe code can be extended by:\n\n1. Adding user authentication\n2. Implementing a full payment system (e.g., Stripe, PayPal)\n3. Adding more product details and filtering options\n4. Implementing an admin panel for managing products\n5. Adding order history functionality\n6. Implementing coupon codes and discounts\n\nRemember to:\n- Add proper error handling\n- Sanitize all user inputs\n- Use prepared statements to prevent SQL injection\n- Implement secure payment processing\n- Add CSRF protection\n- Handle session security properly", "code_blocks": ["```php\n<?php\n// Start session to store cart items\nsession_start();\n\n// Database connection (replace with your credentials)\n$servername = \"localhost\";\n$username = \"username\";\n$password = \"password\";\n$dbname = \"shop\";\n\n$conn = new mysqli($servername, $username, $password, $dbname);\n\n// Get products from database\nfunction get_products() {\n    global $conn;\n    $query = \"SELECT * FROM products LIMIT 6\"; // Simple query to get top 6 products\n    $result = $conn->query($query);\n    return $result;\n}\n\n// Add item to cart\nfunction add_to_cart($product_id) {\n    if (!isset($_SESSION['cart'])) {\n        $_SESSION['cart'] = array();\n    }\n    \n    if (isset($_SESSION['cart'][$product_id])) {\n        $_SESSION['cart'][$product_id]['quantity']++;\n    } else {\n        $product = get_product_details($product_id);\n        $_SESSION['cart'][$product_id] = array(\n            'id' => $product_id,\n            'name' => $product['name'],\n            'price' => $product['price'],\n            'quantity' => 1\n        );\n    }\n}\n\n// Remove item from cart\nfunction remove_from_cart($product_id) {\n    if (isset($_SESSION['cart'][$product_id])) {\n        unset($_SESSION['cart'][$product_id]);\n    }\n}\n\n// Get product details\nfunction get_product_details($product_id) {\n    global $conn;\n    $query = \"SELECT * FROM products WHERE id = '$product_id'\";\n    $result = $conn->query($query);\n    return $result->fetch_assoc();\n}\n\n// Process order\nfunction process_order() {\n    if (empty($_SESSION['cart'])) {\n        echo \"Your cart is empty!\";\n        return;\n    }\n    \n    // Calculate total price\n    $total_price = 0;\n    foreach ($_SESSION['cart'] as $item) {\n        $total_price += $item['price'] * $item['quantity'];\n    }\n    \n    // Here you would typically:\n    // 1. Insert order into database\n    // 2. Process payment (using a payment gateway)\n    // 3. Send confirmation email\n    \n    // For this example, we'll just display the order details\n    echo \"<h2>Order Summary</h2>\";\n    echo \"<p>Date: \" . date(\"Y-m-d H:i:s\") . \"</p>\";\n    echo \"<table border='1'>\";\n    echo \"<tr><th>Item</th><th>Quantity</th><th>Price</th></tr>\";\n    \n    foreach ($_SESSION['cart'] as $item) {\n        echo \"<tr>\";\n        echo \"<td>\" . $item['name'] . \"</td>\";\n        echo \"<td>\" . $item['quantity'] . \"</td>\";\n        echo \"<td>$\" . number_format($item['price'], 2) . \"</td>\";\n        echo \"</tr>\";\n    }\n    \n    echo \"<tr><td colspan='2'>Total:</td><td>$\" . number_format($total_price, 2) . \"</td></tr>\";\n    echo \"</table>\";\n    echo \"<p>Thank you for your purchase!</p>\";\n}\n\n// Main logic\nif ($_SERVER[\"REQUEST_METHOD\"] == \"POST\") {\n    if (isset($_POST['action'])) {\n        switch ($_POST['action']) {\n            case 'add':\n                add_to_cart($_POST['product_id']);\n                break;\n            case 'remove':\n                remove_from_cart($_POST['product_id']);\n                break;\n            case 'purchase':\n                process_order();\n                break;\n        }\n    }\n}\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Online Store</title>\n    <style>\n        body { font-family: Arial, sans-serif; }\n        .cart-item { border-bottom: 1px solid #ddd; padding: 10px; }\n        table { width: 100%; margin-top: 20px; }\n        th, td { padding: 8px; text-align: left; }\n    </style>\n</head>\n<body>\n    <h1>Welcome to Our Store</h1>\n\n    <?php if (!empty($_SESSION['cart'])) : ?>\n        <h2>Your Cart</h2>\n        <div id=\"cart\">\n            <?php foreach ($_SESSION['cart'] as $item) : ?>\n                <div class=\"cart-item\">\n                    <?php echo $item['name']; ?> (Quantity: <?php echo $item['quantity']; ?>)\n                    <form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n                        <input type=\"hidden\" name=\"action\" value=\"remove\">\n                        <input type=\"hidden\" name=\"product_id\" value=\"<?php echo $item['id']; ?>\">\n                        <button type=\"submit\">Remove</button>\n                    </form>\n                </div>\n            <?php endforeach; ?>\n        </div>\n        \n        <form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n            <input type=\"hidden\" name=\"action\" value=\"purchase\">\n            <button type=\"submit\">Purchase</button>\n        </form>\n    <?php endif; ?>\n\n    <h2>Available Products</h2>\n    <?php $products = get_products(); while ($product = $products->fetch_assoc()) : ?>\n        <div class=\"product\">\n            <h3><?php echo $product['name']; ?></h3>\n            <p>$<?php echo number_format($product['price'], 2); ?></p>\n            <form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n                <input type=\"hidden\" name=\"action\" value=\"add\">\n                <input type=\"hidden\" name=\"product_id\" value=\"<?php echo $product['id']; ?>\">\n                <button type=\"submit\">Add to Cart</button>\n            </form>\n        </div>\n    <?php endwhile; ?>\n\n</body>\n</html>\n```"]}
