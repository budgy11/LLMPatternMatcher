{"prompt": "Create a purchase functionality using php", "llm_output": "Here's an example of how you can create a basic purchase functionality using PHP. This will involve creating two tables in the database: `products` and `orders`.\n\n**Database Schema**\n\n```sql\nCREATE TABLE products (\n    id INT PRIMARY KEY AUTO_INCREMENT,\n    name VARCHAR(255),\n    price DECIMAL(10, 2)\n);\n\nCREATE TABLE orders (\n    id INT PRIMARY KEY AUTO_INCREMENT,\n    product_id INT,\n    customer_name VARCHAR(255),\n    order_date DATE,\n    total_cost DECIMAL(10, 2),\n    FOREIGN KEY (product_id) REFERENCES products(id)\n);\n```\n\n**PHP Code**\n\nLet's create a simple PHP application with the following functionality:\n\n*   Add a new product\n*   View all products\n*   Make a purchase\n\nHere's an example implementation using object-oriented programming in PHP.\n\n```php\n// database configuration\ndefine('DB_HOST', 'localhost');\ndefine('DB_USER', 'root');\ndefine('DB_PASSWORD', '');\ndefine('DB_NAME', 'store');\n\nclass Product {\n    private $id;\n    private $name;\n    private $price;\n\n    public function __construct($id, $name, $price) {\n        $this->id = $id;\n        $this->name = $name;\n        $this->price = $price;\n    }\n\n    public static function getAll() {\n        // database connection\n        $conn = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);\n\n        if ($conn->connect_error) {\n            die(\"Connection failed: \" . $conn->connect_error);\n        }\n\n        $sql = \"SELECT * FROM products\";\n        $result = $conn->query($sql);\n\n        $products = array();\n        while ($row = $result->fetch_assoc()) {\n            $product = new Product($row['id'], $row['name'], $row['price']);\n            $products[] = $product;\n        }\n\n        return $products;\n    }\n\n    public function addProduct() {\n        // database connection\n        $conn = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);\n\n        if ($conn->connect_error) {\n            die(\"Connection failed: \" . $conn->connect_error);\n        }\n\n        $sql = \"INSERT INTO products (name, price) VALUES (?, ?)\";\n        $stmt = $conn->prepare($sql);\n        $stmt->bind_param(\"ss\", $this->name, $this->price);\n\n        if ($stmt->execute()) {\n            echo \"Product added successfully!\";\n        } else {\n            echo \"Error adding product: \" . $conn->error;\n        }\n    }\n\n    public function makePurchase() {\n        // database connection\n        $conn = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);\n\n        if ($conn->connect_error) {\n            die(\"Connection failed: \" . $conn->connect_error);\n        }\n\n        $sql = \"INSERT INTO orders (product_id, customer_name, order_date, total_cost) VALUES (?, ?, NOW(), ?)\";\n        $stmt = $conn->prepare($sql);\n        $stmt->bind_param(\"si\", $this->id, $_POST['customer_name'], $this->price);\n\n        if ($stmt->execute()) {\n            echo \"Order placed successfully!\";\n        } else {\n            echo \"Error placing order: \" . $conn->error;\n        }\n    }\n}\n\n// create a new product\n$product = new Product(0, 'New Product', 10.99);\n$product->addProduct();\n\n// view all products\n$products = Product::getAll();\nforeach ($products as $product) {\n    echo $product->name . ' - ' . $product->price . '<br>';\n}\n\n// make a purchase\n$product->id = 1;\n$product->makePurchase();\n```\n\n**Frontend Code**\n\nYou can use HTML and PHP to create a simple frontend for the above functionality.\n\n```html\n<!-- add new product form -->\n<form action=\"\" method=\"post\">\n    <label for=\"name\">Product Name:</label>\n    <input type=\"text\" id=\"name\" name=\"name\"><br><br>\n    <label for=\"price\">Price:</label>\n    <input type=\"number\" step=\"0.01\" id=\"price\" name=\"price\"><br><br>\n    <button type=\"submit\" name=\"add_product\">Add Product</button>\n</form>\n\n<!-- view all products table -->\n<table>\n    <?php\n        $products = Product::getAll();\n        foreach ($products as $product) {\n            echo '<tr>';\n            echo '<td>' . $product->name . '</td>';\n            echo '<td>' . $product->price . '</td>';\n            echo '</tr>';\n        }\n    ?>\n</table>\n\n<!-- make a purchase form -->\n<form action=\"\" method=\"post\">\n    <label for=\"customer_name\">Customer Name:</label>\n    <input type=\"text\" id=\"customer_name\" name=\"customer_name\"><br><br>\n    <button type=\"submit\" name=\"make_purchase\">Make Purchase</button>\n</form>\n```\n\nThis example demonstrates a simple purchase functionality using PHP and MySQL. However, you should ensure that you handle user input securely to prevent SQL injection attacks.\n\n**Remember to replace the database credentials with your actual database credentials.**", "code_blocks": [null, "```php\n// database configuration\ndefine('DB_HOST', 'localhost');\ndefine('DB_USER', 'root');\ndefine('DB_PASSWORD', '');\ndefine('DB_NAME', 'store');\n\nclass Product {\n    private $id;\n    private $name;\n    private $price;\n\n    public function __construct($id, $name, $price) {\n        $this->id = $id;\n        $this->name = $name;\n        $this->price = $price;\n    }\n\n    public static function getAll() {\n        // database connection\n        $conn = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);\n\n        if ($conn->connect_error) {\n            die(\"Connection failed: \" . $conn->connect_error);\n        }\n\n        $sql = \"SELECT * FROM products\";\n        $result = $conn->query($sql);\n\n        $products = array();\n        while ($row = $result->fetch_assoc()) {\n            $product = new Product($row['id'], $row['name'], $row['price']);\n            $products[] = $product;\n        }\n\n        return $products;\n    }\n\n    public function addProduct() {\n        // database connection\n        $conn = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);\n\n        if ($conn->connect_error) {\n            die(\"Connection failed: \" . $conn->connect_error);\n        }\n\n        $sql = \"INSERT INTO products (name, price) VALUES (?, ?)\";\n        $stmt = $conn->prepare($sql);\n        $stmt->bind_param(\"ss\", $this->name, $this->price);\n\n        if ($stmt->execute()) {\n            echo \"Product added successfully!\";\n        } else {\n            echo \"Error adding product: \" . $conn->error;\n        }\n    }\n\n    public function makePurchase() {\n        // database connection\n        $conn = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);\n\n        if ($conn->connect_error) {\n            die(\"Connection failed: \" . $conn->connect_error);\n        }\n\n        $sql = \"INSERT INTO orders (product_id, customer_name, order_date, total_cost) VALUES (?, ?, NOW(), ?)\";\n        $stmt = $conn->prepare($sql);\n        $stmt->bind_param(\"si\", $this->id, $_POST['customer_name'], $this->price);\n\n        if ($stmt->execute()) {\n            echo \"Order placed successfully!\";\n        } else {\n            echo \"Error placing order: \" . $conn->error;\n        }\n    }\n}\n\n// create a new product\n$product = new Product(0, 'New Product', 10.99);\n$product->addProduct();\n\n// view all products\n$products = Product::getAll();\nforeach ($products as $product) {\n    echo $product->name . ' - ' . $product->price . '<br>';\n}\n\n// make a purchase\n$product->id = 1;\n$product->makePurchase();\n```", null]}
