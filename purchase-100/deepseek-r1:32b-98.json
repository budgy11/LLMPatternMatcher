{"prompt": "Create a purchase cart functionality using php", "llm_output": "<think>\nAlright, I need to create a purchase cart functionality using PHP. Let me think about how to approach this.\n\nFirst, I know that handling a shopping cart in PHP typically involves sessions because they allow data to persist across multiple pages without requiring a database. So, I'll start by initializing a session at the beginning of each relevant page.\n\nNext, I should display the products available for purchase. I can hardcode some product data for simplicity, like product ID, name, price, and quantity. This way, users can see what's available and select items to add to their cart.\n\nThen, I need to handle adding items to the cart. When a user clicks an \"Add to Cart\" button, the selected product should be added to the session. I'll check if the product is already in the cart; if it is, I'll increment its quantity. If not, I'll add it as a new entry with a quantity of one.\n\nAfter adding items, displaying the cart contents is essential. I'll retrieve the products from the session and list them, showing each item's name, price, quantity, and total cost. I should also calculate the overall subtotal of all items in the cart.\n\nI shouldn't forget to include options for users to update their cart or proceed to checkout. This might involve buttons that take them to a page where they can adjust quantities or confirm their purchase.\n\nAdditionally, adding a feature to clear the cart would be helpful for users who want to start fresh. I'll add a button that resets the cart session.\n\nThroughout this process, I need to ensure that my code is secure and handles cases where the cart might be empty. Using isset() functions appropriately will prevent errors when accessing session variables.\n\nFinally, I'll structure the HTML with proper styling using Bootstrap for responsiveness. This will make the user interface clean and easy to navigate on different devices.\n\nPutting it all together, I'll create separate PHP files for displaying products, managing the cart, and handling checkout. Each page will include necessary sections like navigation bars and footers to maintain a consistent look and feel.\n</think>\n\nHere's an example of how you can implement a purchase cart functionality using PHP:\n\n```php\n<?php\n// Initialize session\nsession_start();\n\n// Check if cart is already set in the session, if not, initialize it\nif (!isset($_SESSION['cart'])) {\n    $_SESSION['cart'] = array();\n}\n\n// Sample products (you can replace this with a database)\n$products = array(\n    1 => array('name' => 'Product 1', 'price' => 19.99),\n    2 => array('name' => 'Product 2', 'price' => 29.99),\n    3 => array('name' => 'Product 3', 'price' => 9.99)\n);\n\n// Add to cart functionality\nif (isset($_POST['add_to_cart'])) {\n    $productId = intval($_POST['product_id']);\n    $quantity = isset($_POST['quantity']) ? intval($_POST['quantity']) : 1;\n\n    if (!empty($products[$productId])) {\n        // Check if product already exists in the cart\n        if (isset($_SESSION['cart'][$productId])) {\n            // Update quantity\n            $_SESSION['cart'][$productId]['quantity'] += $quantity;\n        } else {\n            // Add new product to cart\n            $_SESSION['cart'][$productId] = array(\n                'name' => $products[$productId]['name'],\n                'price' => $products[$productId]['price'],\n                'quantity' => $quantity\n            );\n        }\n    }\n}\n\n// Update cart functionality\nif (isset($_POST['update_cart'])) {\n    foreach ($_SESSION['cart'] as $id => $item) {\n        if (isset($_POST[\"quantity_$id\"])) {\n            $newQuantity = intval($_POST[\"quantity_$id\"]);\n            if ($newQuantity > 0) {\n                $_SESSION['cart'][$id]['quantity'] = $newQuantity;\n            }\n        }\n    }\n}\n\n// Clear cart functionality\nif (isset($_GET['clear_cart'])) {\n    unset($_SESSION['cart']);\n}\n?>\n\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Shopping Cart</title>\n    <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css\">\n</head>\n<body>\n\n<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n    <div class=\"container\">\n        <a class=\"navbar-brand\" href=\"#\">Shopping Cart</a>\n        <button class=\"btn btn-primary\" onclick=\"window.location.href='cart.php'\">View Cart</button>\n    </div>\n</nav>\n\n<div class=\"container mt-4\">\n\n<?php\n// Display products\necho \"<h2>Products Available</h2>\";\necho \"<div class='row'>\";\nforeach ($products as $id => $product) {\n    echo \"<div class='col-md-3 mb-4'>\";\n    echo \"<div class='card'>\";\n    echo \"<div class='card-body'>\";\n    echo \"<h5 class='card-title'>\".$product['name'].\"</h5>\";\n    echo \"<p class='card-text'>$\".$product['price'].\"</p>\";\n    echo \"<form method='post'>\";\n    echo \"<input type='hidden' name='product_id' value='\".$id.\"'>\";\n    echo \"<input type='number' min='1' name='quantity' value='1'>\";\n    echo \"<button type='submit' name='add_to_cart' class='btn btn-primary'>Add to Cart</button>\";\n    echo \"</form>\";\n    echo \"</div></div></div>\";\n}\necho \"</div>\";\n\n// Display cart\nif (!empty($_SESSION['cart'])) {\n    $cart = $_SESSION['cart'];\n    $subtotal = 0;\n    \n    echo \"<h2>Your Cart</h2>\";\n    echo \"<form method='post'>\";\n    echo \"<table class='table'>\";\n    echo \"<thead><tr><th>Product</th><th>Price</th><th>Quantity</th><th>Total</th></tr></thead>\";\n    foreach ($cart as $id => $item) {\n        $total = $item['price'] * $item['quantity'];\n        $subtotal += $total;\n        \n        echo \"<tr>\";\n        echo \"<td>\".$item['name'].\"</td>\";\n        echo \"<td>$\".$item['price'].\"</td>\";\n        echo \"<td><input type='number' min='1' name='quantity_$id' value='\".$item['quantity'].\"'></td>\";\n        echo \"<td>$\".number_format($total, 2).\"</td>\";\n        echo \"</tr>\";\n    }\n    echo \"</table>\";\n    echo \"<button type='submit' name='update_cart' class='btn btn-primary mr-2'>Update Cart</button>\";\n    echo \"<a href='cart.php?clear_cart=1' class='btn btn-danger mr-2'>Clear Cart</a>\";\n    echo \"<a href='checkout.php' class='btn btn-success'>Checkout</a>\";\n    echo \"</form>\";\n} else {\n    echo \"<p>Your cart is empty.</p>\";\n}\n?>\n\n</div>\n\n<script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js\"></script>\n</body>\n</html>\n```\n\nThis code creates a basic shopping cart with the following features:\n\n1. Displays available products\n2. Allows users to add items to the cart\n3. Shows the current state of the cart\n4. Updates quantities of items in the cart\n5. Clears the entire cart\n\nTo use this code:\n\n1. Save it as `cart.php`\n2. Make sure you have a web server with PHP installed\n3. Access it through your browser\n\nKey features and components:\n\n- Uses PHP sessions to store the cart data\n- Displays products with their prices and add-to-cart buttons\n- Allows users to adjust quantities of items in the cart\n- Shows subtotal for each item and overall cart subtotal\n- Includes a clear cart option\n\nTo expand this functionality, you could:\n\n1. Add more product details (e.g., images, descriptions)\n2. Implement a checkout process\n3. Add user authentication\n4. Connect to a database for persistent storage\n5. Add payment processing\n6. Include error handling and validation\n7. Add more styling and animations\n\nRemember that this is a basic example and you should consider adding security measures (like CSRF protection) and proper input validation before using it in a production environment.\n\nYou can also separate the cart display into another file (`cart.php`) and have different pages for product listing and cart viewing to improve organization and user experience.", "code_blocks": ["```php\n<?php\n// Initialize session\nsession_start();\n\n// Check if cart is already set in the session, if not, initialize it\nif (!isset($_SESSION['cart'])) {\n    $_SESSION['cart'] = array();\n}\n\n// Sample products (you can replace this with a database)\n$products = array(\n    1 => array('name' => 'Product 1', 'price' => 19.99),\n    2 => array('name' => 'Product 2', 'price' => 29.99),\n    3 => array('name' => 'Product 3', 'price' => 9.99)\n);\n\n// Add to cart functionality\nif (isset($_POST['add_to_cart'])) {\n    $productId = intval($_POST['product_id']);\n    $quantity = isset($_POST['quantity']) ? intval($_POST['quantity']) : 1;\n\n    if (!empty($products[$productId])) {\n        // Check if product already exists in the cart\n        if (isset($_SESSION['cart'][$productId])) {\n            // Update quantity\n            $_SESSION['cart'][$productId]['quantity'] += $quantity;\n        } else {\n            // Add new product to cart\n            $_SESSION['cart'][$productId] = array(\n                'name' => $products[$productId]['name'],\n                'price' => $products[$productId]['price'],\n                'quantity' => $quantity\n            );\n        }\n    }\n}\n\n// Update cart functionality\nif (isset($_POST['update_cart'])) {\n    foreach ($_SESSION['cart'] as $id => $item) {\n        if (isset($_POST[\"quantity_$id\"])) {\n            $newQuantity = intval($_POST[\"quantity_$id\"]);\n            if ($newQuantity > 0) {\n                $_SESSION['cart'][$id]['quantity'] = $newQuantity;\n            }\n        }\n    }\n}\n\n// Clear cart functionality\nif (isset($_GET['clear_cart'])) {\n    unset($_SESSION['cart']);\n}\n?>\n\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Shopping Cart</title>\n    <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css\">\n</head>\n<body>\n\n<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n    <div class=\"container\">\n        <a class=\"navbar-brand\" href=\"#\">Shopping Cart</a>\n        <button class=\"btn btn-primary\" onclick=\"window.location.href='cart.php'\">View Cart</button>\n    </div>\n</nav>\n\n<div class=\"container mt-4\">\n\n<?php\n// Display products\necho \"<h2>Products Available</h2>\";\necho \"<div class='row'>\";\nforeach ($products as $id => $product) {\n    echo \"<div class='col-md-3 mb-4'>\";\n    echo \"<div class='card'>\";\n    echo \"<div class='card-body'>\";\n    echo \"<h5 class='card-title'>\".$product['name'].\"</h5>\";\n    echo \"<p class='card-text'>$\".$product['price'].\"</p>\";\n    echo \"<form method='post'>\";\n    echo \"<input type='hidden' name='product_id' value='\".$id.\"'>\";\n    echo \"<input type='number' min='1' name='quantity' value='1'>\";\n    echo \"<button type='submit' name='add_to_cart' class='btn btn-primary'>Add to Cart</button>\";\n    echo \"</form>\";\n    echo \"</div></div></div>\";\n}\necho \"</div>\";\n\n// Display cart\nif (!empty($_SESSION['cart'])) {\n    $cart = $_SESSION['cart'];\n    $subtotal = 0;\n    \n    echo \"<h2>Your Cart</h2>\";\n    echo \"<form method='post'>\";\n    echo \"<table class='table'>\";\n    echo \"<thead><tr><th>Product</th><th>Price</th><th>Quantity</th><th>Total</th></tr></thead>\";\n    foreach ($cart as $id => $item) {\n        $total = $item['price'] * $item['quantity'];\n        $subtotal += $total;\n        \n        echo \"<tr>\";\n        echo \"<td>\".$item['name'].\"</td>\";\n        echo \"<td>$\".$item['price'].\"</td>\";\n        echo \"<td><input type='number' min='1' name='quantity_$id' value='\".$item['quantity'].\"'></td>\";\n        echo \"<td>$\".number_format($total, 2).\"</td>\";\n        echo \"</tr>\";\n    }\n    echo \"</table>\";\n    echo \"<button type='submit' name='update_cart' class='btn btn-primary mr-2'>Update Cart</button>\";\n    echo \"<a href='cart.php?clear_cart=1' class='btn btn-danger mr-2'>Clear Cart</a>\";\n    echo \"<a href='checkout.php' class='btn btn-success'>Checkout</a>\";\n    echo \"</form>\";\n} else {\n    echo \"<p>Your cart is empty.</p>\";\n}\n?>\n\n</div>\n\n<script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js\"></script>\n</body>\n</html>\n```"]}
