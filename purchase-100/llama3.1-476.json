{"prompt": "Create a purchase functionality using php", "llm_output": "Here is an example of a basic purchase functionality using PHP, including HTML for the form and database connection. This example assumes you have a MySQL database set up with the necessary tables.\n\n**Database Structure:**\n\nFor this example, let's assume we have two tables: `products` and `orders`. The `products` table would contain information about each product available for purchase, and the `orders` table will store orders placed by customers.\n\n```sql\nCREATE TABLE products (\n    id INT AUTO_INCREMENT,\n    name VARCHAR(255),\n    price DECIMAL(10, 2)\n);\n\nCREATE TABLE orders (\n    id INT AUTO_INCREMENT,\n    customer_name VARCHAR(255),\n    product_id INT,\n    quantity INT,\n    total_cost DECIMAL(10, 2),\n    order_date DATE\n);\n```\n\n**PHP Code:**\n\n```php\n// Include the database connection file (assuming it's named 'db.php')\ninclude 'db.php';\n\n// Form handling and purchase logic\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    $customerName = $_POST['customer_name'];\n    $productId = $_POST['product_id'];\n    $quantity = $_POST['quantity'];\n\n    // Validate the form data\n    if (empty($customerName) || empty($productId) || empty($quantity)) {\n        echo \"Please fill in all fields.\";\n        return;\n    }\n\n    // Retrieve product details for validation and calculation\n    $sql = \"SELECT * FROM products WHERE id = '$productId'\";\n    $result = mysqli_query($conn, $sql);\n    if (mysqli_num_rows($result) == 0) {\n        echo \"Invalid product ID.\";\n        return;\n    }\n    $productData = mysqli_fetch_assoc($result);\n\n    // Calculate the total cost\n    $totalCost = $productData['price'] * $quantity;\n\n    // Insert the order into the database\n    $sql = \"\n        INSERT INTO orders (customer_name, product_id, quantity, total_cost)\n        VALUES ('$customerName', '$productId', '$quantity', '$totalCost')\n    \";\n    if (!mysqli_query($conn, $sql)) {\n        echo \"Failed to insert order.\";\n        return;\n    }\n\n    // Update the stock of the product\n    $newQuantity = $productData['stock'] - $quantity;\n    $sql = \"UPDATE products SET stock = '$newQuantity' WHERE id = '$productId'\";\n    if (!mysqli_query($conn, $sql)) {\n        echo \"Failed to update product stock.\";\n        return;\n    }\n\n    // Success message\n    echo \"Order placed successfully!\";\n}\n\n// Display the purchase form\n?>\n\n<form action=\"\" method=\"post\">\n    <label for=\"customer_name\">Customer Name:</label>\n    <input type=\"text\" id=\"customer_name\" name=\"customer_name\"><br><br>\n\n    <label for=\"product_id\">Product ID:</label>\n    <select id=\"product_id\" name=\"product_id\">\n        <?php\n        // Retrieve products from the database and display them in a dropdown menu\n        $sql = \"SELECT * FROM products\";\n        $result = mysqli_query($conn, $sql);\n        while ($row = mysqli_fetch_assoc($result)) {\n            echo \"<option value='\" . $row['id'] . \"'>\" . $row['name'] . \"</option>\";\n        }\n        ?>\n    </select><br><br>\n\n    <label for=\"quantity\">Quantity:</label>\n    <input type=\"number\" id=\"quantity\" name=\"quantity\"><br><br>\n\n    <button type=\"submit\">Place Order</button>\n</form>\n```\n\n**Note:**\n\n1. This example assumes that you have a PHP file named `db.php` which includes the database connection settings.\n2. Always validate and sanitize user input to prevent SQL injection attacks.\n3. Consider using prepared statements instead of direct query execution for better security.\n4. This is a basic example; in real-world scenarios, you would likely want to handle errors and exceptions more robustly.\n\n**Remember:** Error handling, validation, and sanitization are critical components of secure coding practices.", "code_blocks": [null, "```php\n// Include the database connection file (assuming it's named 'db.php')\ninclude 'db.php';\n\n// Form handling and purchase logic\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    $customerName = $_POST['customer_name'];\n    $productId = $_POST['product_id'];\n    $quantity = $_POST['quantity'];\n\n    // Validate the form data\n    if (empty($customerName) || empty($productId) || empty($quantity)) {\n        echo \"Please fill in all fields.\";\n        return;\n    }\n\n    // Retrieve product details for validation and calculation\n    $sql = \"SELECT * FROM products WHERE id = '$productId'\";\n    $result = mysqli_query($conn, $sql);\n    if (mysqli_num_rows($result) == 0) {\n        echo \"Invalid product ID.\";\n        return;\n    }\n    $productData = mysqli_fetch_assoc($result);\n\n    // Calculate the total cost\n    $totalCost = $productData['price'] * $quantity;\n\n    // Insert the order into the database\n    $sql = \"\n        INSERT INTO orders (customer_name, product_id, quantity, total_cost)\n        VALUES ('$customerName', '$productId', '$quantity', '$totalCost')\n    \";\n    if (!mysqli_query($conn, $sql)) {\n        echo \"Failed to insert order.\";\n        return;\n    }\n\n    // Update the stock of the product\n    $newQuantity = $productData['stock'] - $quantity;\n    $sql = \"UPDATE products SET stock = '$newQuantity' WHERE id = '$productId'\";\n    if (!mysqli_query($conn, $sql)) {\n        echo \"Failed to update product stock.\";\n        return;\n    }\n\n    // Success message\n    echo \"Order placed successfully!\";\n}\n\n// Display the purchase form\n?>\n\n<form action=\"\" method=\"post\">\n    <label for=\"customer_name\">Customer Name:</label>\n    <input type=\"text\" id=\"customer_name\" name=\"customer_name\"><br><br>\n\n    <label for=\"product_id\">Product ID:</label>\n    <select id=\"product_id\" name=\"product_id\">\n        <?php\n        // Retrieve products from the database and display them in a dropdown menu\n        $sql = \"SELECT * FROM products\";\n        $result = mysqli_query($conn, $sql);\n        while ($row = mysqli_fetch_assoc($result)) {\n            echo \"<option value='\" . $row['id'] . \"'>\" . $row['name'] . \"</option>\";\n        }\n        ?>\n    </select><br><br>\n\n    <label for=\"quantity\">Quantity:</label>\n    <input type=\"number\" id=\"quantity\" name=\"quantity\"><br><br>\n\n    <button type=\"submit\">Place Order</button>\n</form>\n```"]}
