{"prompt": "Create a purchase functionality using php", "llm_output": "Here is an example of a simple purchase functionality in PHP:\n\n**Database Schema**\n\nFirst, let's assume we have the following database schema:\n\n```sql\nCREATE TABLE products (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  name VARCHAR(255),\n  price DECIMAL(10,2)\n);\n\nCREATE TABLE orders (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  user_id INT,\n  total_cost DECIMAL(10,2),\n  status VARCHAR(50) DEFAULT 'pending'\n);\n\nCREATE TABLE order_items (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  order_id INT,\n  product_id INT,\n  quantity INT\n);\n```\n\n**PHP Code**\n\nNow, let's create a simple purchase functionality in PHP using the database schema above:\n\n```php\n// Connect to database\n$conn = new mysqli('localhost', 'username', 'password', 'database');\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Function to get all products\nfunction get_products() {\n  global $conn;\n  $query = \"SELECT * FROM products\";\n  $result = $conn->query($query);\n  return $result->fetch_all(MYSQLI_ASSOC);\n}\n\n// Function to add product to cart\nfunction add_to_cart($product_id, $quantity) {\n  global $conn;\n  if (!isset($_SESSION['cart'])) {\n    $_SESSION['cart'] = array();\n  }\n  if (array_key_exists($product_id, $_SESSION['cart'])) {\n    $_SESSION['cart'][$product_id]['quantity'] += $quantity;\n  } else {\n    $_SESSION['cart'][$product_id] = array('product_id' => $product_id, 'quantity' => $quantity);\n  }\n}\n\n// Function to checkout\nfunction checkout() {\n  global $conn;\n  if (!isset($_SESSION['cart']) || empty($_SESSION['cart'])) {\n    echo \"Cart is empty!\";\n    return false;\n  }\n  \n  // Calculate total cost\n  $total_cost = 0;\n  foreach ($_SESSION['cart'] as $item) {\n    $query = \"SELECT price FROM products WHERE id = ?\";\n    $stmt = $conn->prepare($query);\n    $stmt->bind_param(\"i\", $item['product_id']);\n    $stmt->execute();\n    $result = $stmt->get_result();\n    $price = $result->fetch_assoc()['price'];\n    $total_cost += $price * $item['quantity'];\n  }\n  \n  // Insert order\n  $query = \"INSERT INTO orders (user_id, total_cost, status) VALUES (?, ?, ?)\";\n  $stmt = $conn->prepare($query);\n  $stmt->bind_param(\"iii\", $_SESSION['user_id'], $total_cost, 1); // status = 1 means pending\n  $stmt->execute();\n  \n  // Get order ID\n  $order_id = $conn->insert_id;\n  \n  // Insert order items\n  foreach ($_SESSION['cart'] as $item) {\n    $query = \"INSERT INTO order_items (order_id, product_id, quantity) VALUES (?, ?, ?)\";\n    $stmt = $conn->prepare($query);\n    $stmt->bind_param(\"iii\", $order_id, $item['product_id'], $item['quantity']);\n    $stmt->execute();\n  }\n  \n  // Clear cart\n  unset($_SESSION['cart']);\n  \n  return true;\n}\n```\n\n**Example Usage**\n\n```php\n// Assuming we have a user logged in and stored in the session\n$_SESSION['user_id'] = 1;\n\n// Get all products\n$products = get_products();\n\n// Add product to cart\nadd_to_cart(1, 2);\n\n// Checkout\nif (checkout()) {\n  echo \"Order placed successfully!\";\n} else {\n  echo \"Error while placing order.\";\n}\n```\n\nThis is a basic example of how you can implement a purchase functionality in PHP. Note that this code assumes a simple database schema and does not include any error handling or security measures. In a real-world application, you would want to add more features such as user authentication, validation, and sanitization of input data.", "code_blocks": [null, "```php\n// Connect to database\n$conn = new mysqli('localhost', 'username', 'password', 'database');\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Function to get all products\nfunction get_products() {\n  global $conn;\n  $query = \"SELECT * FROM products\";\n  $result = $conn->query($query);\n  return $result->fetch_all(MYSQLI_ASSOC);\n}\n\n// Function to add product to cart\nfunction add_to_cart($product_id, $quantity) {\n  global $conn;\n  if (!isset($_SESSION['cart'])) {\n    $_SESSION['cart'] = array();\n  }\n  if (array_key_exists($product_id, $_SESSION['cart'])) {\n    $_SESSION['cart'][$product_id]['quantity'] += $quantity;\n  } else {\n    $_SESSION['cart'][$product_id] = array('product_id' => $product_id, 'quantity' => $quantity);\n  }\n}\n\n// Function to checkout\nfunction checkout() {\n  global $conn;\n  if (!isset($_SESSION['cart']) || empty($_SESSION['cart'])) {\n    echo \"Cart is empty!\";\n    return false;\n  }\n  \n  // Calculate total cost\n  $total_cost = 0;\n  foreach ($_SESSION['cart'] as $item) {\n    $query = \"SELECT price FROM products WHERE id = ?\";\n    $stmt = $conn->prepare($query);\n    $stmt->bind_param(\"i\", $item['product_id']);\n    $stmt->execute();\n    $result = $stmt->get_result();\n    $price = $result->fetch_assoc()['price'];\n    $total_cost += $price * $item['quantity'];\n  }\n  \n  // Insert order\n  $query = \"INSERT INTO orders (user_id, total_cost, status) VALUES (?, ?, ?)\";\n  $stmt = $conn->prepare($query);\n  $stmt->bind_param(\"iii\", $_SESSION['user_id'], $total_cost, 1); // status = 1 means pending\n  $stmt->execute();\n  \n  // Get order ID\n  $order_id = $conn->insert_id;\n  \n  // Insert order items\n  foreach ($_SESSION['cart'] as $item) {\n    $query = \"INSERT INTO order_items (order_id, product_id, quantity) VALUES (?, ?, ?)\";\n    $stmt = $conn->prepare($query);\n    $stmt->bind_param(\"iii\", $order_id, $item['product_id'], $item['quantity']);\n    $stmt->execute();\n  }\n  \n  // Clear cart\n  unset($_SESSION['cart']);\n  \n  return true;\n}\n```", "```php\n// Assuming we have a user logged in and stored in the session\n$_SESSION['user_id'] = 1;\n\n// Get all products\n$products = get_products();\n\n// Add product to cart\nadd_to_cart(1, 2);\n\n// Checkout\nif (checkout()) {\n  echo \"Order placed successfully!\";\n} else {\n  echo \"Error while placing order.\";\n}\n```"]}
