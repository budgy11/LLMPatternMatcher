{"prompt": "Create a purchase cart functionality using php", "llm_output": "Here is an example of a basic purchase cart functionality using PHP:\n\n**cart.php**\n```php\n<?php\n// Cart class to handle cart operations\nclass Cart {\n  private $items;\n\n  public function __construct() {\n    $this->items = array();\n  }\n\n  // Add item to cart\n  public function addItem($item_id, $quantity) {\n    if (array_key_exists($item_id, $this->items)) {\n      $this->items[$item_id]['quantity'] += $quantity;\n    } else {\n      $this->items[$item_id] = array('price' => 0, 'quantity' => $quantity);\n    }\n  }\n\n  // Remove item from cart\n  public function removeItem($item_id) {\n    if (array_key_exists($item_id, $this->items)) {\n      unset($this->items[$item_id]);\n    }\n  }\n\n  // Update quantity of an item in cart\n  public function updateQuantity($item_id, $quantity) {\n    if (array_key_exists($item_id, $this->items)) {\n      $this->items[$item_id]['quantity'] = $quantity;\n    }\n  }\n\n  // Get total price of items in cart\n  public function getTotalPrice() {\n    $total_price = 0;\n    foreach ($this->items as $item) {\n      $total_price += $item['price'] * $item['quantity'];\n    }\n    return $total_price;\n  }\n\n  // Display cart contents\n  public function displayCart() {\n    echo '<h2>Shopping Cart</h2>';\n    echo '<table border=\"1\">';\n    echo '<tr><th>Item ID</th><th>Price</th><th>Quantity</th></tr>';\n    foreach ($this->items as $item) {\n      echo '<tr><td>' . $item['item_id'] . '</td><td>' . $item['price'] . '</td><td>' . $item['quantity'] . '</td></tr>';\n    }\n    echo '</table>';\n  }\n\n  // Checkout\n  public function checkout() {\n    // Process payment and update database\n    echo 'Thank you for your order!';\n  }\n}\n?>\n```\n**index.php**\n```php\n<?php\nrequire_once 'cart.php';\n\n// Create cart instance\n$cart = new Cart();\n\n// Add items to cart\n$cart->addItem(1, 2);\n$cart->addItem(2, 3);\n\n// Display cart contents\n$cart->displayCart();\n\n// Get total price of items in cart\necho 'Total price: $' . $cart->getTotalPrice() . '<br>';\n\n// Checkout\n$cart->checkout();\n?>\n```\nThis example demonstrates the basic functionality of a purchase cart:\n\n1. The `Cart` class has methods to add, remove, and update items in the cart.\n2. The `displayCart()` method displays the contents of the cart as an HTML table.\n3. The `getTotalPrice()` method calculates the total price of all items in the cart.\n4. The `checkout()` method processes payment and updates the database (this step is omitted for brevity).\n\nNote that this example assumes a simple database schema with an `orders` table to store order information, but you can modify it according to your specific needs.\n\nAlso, please note that this is just a basic example, in real-world applications, you should consider implementing proper validation, error handling and security measures.", "code_blocks": ["```php\n<?php\n// Cart class to handle cart operations\nclass Cart {\n  private $items;\n\n  public function __construct() {\n    $this->items = array();\n  }\n\n  // Add item to cart\n  public function addItem($item_id, $quantity) {\n    if (array_key_exists($item_id, $this->items)) {\n      $this->items[$item_id]['quantity'] += $quantity;\n    } else {\n      $this->items[$item_id] = array('price' => 0, 'quantity' => $quantity);\n    }\n  }\n\n  // Remove item from cart\n  public function removeItem($item_id) {\n    if (array_key_exists($item_id, $this->items)) {\n      unset($this->items[$item_id]);\n    }\n  }\n\n  // Update quantity of an item in cart\n  public function updateQuantity($item_id, $quantity) {\n    if (array_key_exists($item_id, $this->items)) {\n      $this->items[$item_id]['quantity'] = $quantity;\n    }\n  }\n\n  // Get total price of items in cart\n  public function getTotalPrice() {\n    $total_price = 0;\n    foreach ($this->items as $item) {\n      $total_price += $item['price'] * $item['quantity'];\n    }\n    return $total_price;\n  }\n\n  // Display cart contents\n  public function displayCart() {\n    echo '<h2>Shopping Cart</h2>';\n    echo '<table border=\"1\">';\n    echo '<tr><th>Item ID</th><th>Price</th><th>Quantity</th></tr>';\n    foreach ($this->items as $item) {\n      echo '<tr><td>' . $item['item_id'] . '</td><td>' . $item['price'] . '</td><td>' . $item['quantity'] . '</td></tr>';\n    }\n    echo '</table>';\n  }\n\n  // Checkout\n  public function checkout() {\n    // Process payment and update database\n    echo 'Thank you for your order!';\n  }\n}\n?>\n```", "```php\n<?php\nrequire_once 'cart.php';\n\n// Create cart instance\n$cart = new Cart();\n\n// Add items to cart\n$cart->addItem(1, 2);\n$cart->addItem(2, 3);\n\n// Display cart contents\n$cart->displayCart();\n\n// Get total price of items in cart\necho 'Total price: $' . $cart->getTotalPrice() . '<br>';\n\n// Checkout\n$cart->checkout();\n?>\n```"]}
