{"prompt": "Create a purchase functionality using php", "llm_output": "Here's an example of how to create a basic purchase functionality in PHP. This example includes user registration, login, and purchasing products.\n\n**Database Structure**\n\nFirst, let's assume we have a database with the following structure:\n\n```sql\nCREATE TABLE users (\n    id INT PRIMARY KEY AUTO_INCREMENT,\n    username VARCHAR(255),\n    password VARCHAR(255)\n);\n\nCREATE TABLE products (\n    id INT PRIMARY KEY AUTO_INCREMENT,\n    name VARCHAR(255),\n    price DECIMAL(10, 2)\n);\n\nCREATE TABLE orders (\n    id INT PRIMARY KEY AUTO_INCREMENT,\n    user_id INT,\n    total_price DECIMAL(10, 2),\n    FOREIGN KEY (user_id) REFERENCES users(id)\n);\n```\n\n**PHP Code**\n\nWe'll use PHP's built-in `mysqli` extension to interact with the database.\n\n```php\n<?php\n\n// Configuration file for database connection details\nrequire_once 'config.php';\n\nclass Purchase {\n    private $conn;\n\n    function __construct() {\n        $this->conn = new mysqli(HOST, USERNAME, PASSWORD, DATABASE);\n    }\n\n    // User registration\n    function registerUser($username, $password) {\n        if ($this->conn->query(\"INSERT INTO users (username, password) VALUES ('$username', '$password')\")) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    // User login\n    function loginUser($username, $password) {\n        $result = $this->conn->query(\"SELECT * FROM users WHERE username = '$username' AND password = '$password'\");\n        if ($result->num_rows > 0) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    // Add product to cart\n    function addProductToCart($user_id, $product_id, $quantity) {\n        $this->conn->query(\"INSERT INTO orders (user_id, product_id, quantity) VALUES ($user_id, $product_id, $quantity)\");\n    }\n\n    // Get user's cart contents\n    function getCartContents($user_id) {\n        $result = $this->conn->query(\"SELECT * FROM orders WHERE user_id = $user_id\");\n        return $result;\n    }\n\n    // Calculate total cost of products in cart\n    function calculateTotalCost($cart_contents) {\n        $total_cost = 0;\n        foreach ($cart_contents as $product) {\n            $total_cost += $product['price'] * $product['quantity'];\n        }\n        return $total_cost;\n    }\n\n    // Process payment and update order status\n    function processPayment($user_id, $payment_method, $payment_details) {\n        if ($this->conn->query(\"UPDATE orders SET status = 'paid' WHERE user_id = $user_id\")) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    // Remove product from cart\n    function removeProductFromCart($user_id, $product_id) {\n        $this->conn->query(\"DELETE FROM orders WHERE user_id = $user_id AND product_id = $product_id\");\n    }\n\n}\n\n// Example usage:\n$purchase = new Purchase();\n\n// Register a user\n$username = 'john';\n$password = 'password123';\necho $purchase->registerUser($username, $password) ? \"User registered successfully\" : \"Failed to register user\";\n\n// Login as the newly created user\necho $purchase->loginUser($username, $password) ? \"Login successful\" : \"Login failed\";\n\n// Add a product to cart\n$product_id = 1;\n$quantity = 2;\necho $purchase->addProductToCart(1, $product_id, $quantity) ? \"Product added to cart successfully\" : \"Failed to add product to cart\";\n\n// Get cart contents\n$cart_contents = $purchase->getCartContents(1);\necho var_dump($cart_contents);\n\n// Calculate total cost of products in cart\n$total_cost = $purchase->calculateTotalCost($cart_contents);\necho \"Total cost: $\" . number_format($total_cost, 2) . \"\\n\";\n\n// Process payment and update order status\n$payment_method = 'credit_card';\n$payment_details = array('card_number' => '1234-5678-9012-3456', 'expiration_date' => '2025-01');\necho $purchase->processPayment(1, $payment_method, $payment_details) ? \"Payment processed successfully\" : \"Failed to process payment\";\n\n// Remove product from cart\necho $purchase->removeProductFromCart(1, 1) ? \"Product removed from cart successfully\" : \"Failed to remove product from cart\";\n```\n\n**Config.php**\n\n```php\n<?php\n\n// Configuration file for database connection details\ndefine('HOST', 'localhost');\ndefine('USERNAME', 'root');\ndefine('PASSWORD', '');\ndefine('DATABASE', 'purchase');\n\n?>\n```\n\nThis is a basic example of how you can implement purchase functionality using PHP. You will need to modify it based on your specific requirements and security considerations (e.g., password hashing, input validation, etc.).", "code_blocks": [null, "```php\n<?php\n\n// Configuration file for database connection details\nrequire_once 'config.php';\n\nclass Purchase {\n    private $conn;\n\n    function __construct() {\n        $this->conn = new mysqli(HOST, USERNAME, PASSWORD, DATABASE);\n    }\n\n    // User registration\n    function registerUser($username, $password) {\n        if ($this->conn->query(\"INSERT INTO users (username, password) VALUES ('$username', '$password')\")) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    // User login\n    function loginUser($username, $password) {\n        $result = $this->conn->query(\"SELECT * FROM users WHERE username = '$username' AND password = '$password'\");\n        if ($result->num_rows > 0) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    // Add product to cart\n    function addProductToCart($user_id, $product_id, $quantity) {\n        $this->conn->query(\"INSERT INTO orders (user_id, product_id, quantity) VALUES ($user_id, $product_id, $quantity)\");\n    }\n\n    // Get user's cart contents\n    function getCartContents($user_id) {\n        $result = $this->conn->query(\"SELECT * FROM orders WHERE user_id = $user_id\");\n        return $result;\n    }\n\n    // Calculate total cost of products in cart\n    function calculateTotalCost($cart_contents) {\n        $total_cost = 0;\n        foreach ($cart_contents as $product) {\n            $total_cost += $product['price'] * $product['quantity'];\n        }\n        return $total_cost;\n    }\n\n    // Process payment and update order status\n    function processPayment($user_id, $payment_method, $payment_details) {\n        if ($this->conn->query(\"UPDATE orders SET status = 'paid' WHERE user_id = $user_id\")) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    // Remove product from cart\n    function removeProductFromCart($user_id, $product_id) {\n        $this->conn->query(\"DELETE FROM orders WHERE user_id = $user_id AND product_id = $product_id\");\n    }\n\n}\n\n// Example usage:\n$purchase = new Purchase();\n\n// Register a user\n$username = 'john';\n$password = 'password123';\necho $purchase->registerUser($username, $password) ? \"User registered successfully\" : \"Failed to register user\";\n\n// Login as the newly created user\necho $purchase->loginUser($username, $password) ? \"Login successful\" : \"Login failed\";\n\n// Add a product to cart\n$product_id = 1;\n$quantity = 2;\necho $purchase->addProductToCart(1, $product_id, $quantity) ? \"Product added to cart successfully\" : \"Failed to add product to cart\";\n\n// Get cart contents\n$cart_contents = $purchase->getCartContents(1);\necho var_dump($cart_contents);\n\n// Calculate total cost of products in cart\n$total_cost = $purchase->calculateTotalCost($cart_contents);\necho \"Total cost: $\" . number_format($total_cost, 2) . \"\\n\";\n\n// Process payment and update order status\n$payment_method = 'credit_card';\n$payment_details = array('card_number' => '1234-5678-9012-3456', 'expiration_date' => '2025-01');\necho $purchase->processPayment(1, $payment_method, $payment_details) ? \"Payment processed successfully\" : \"Failed to process payment\";\n\n// Remove product from cart\necho $purchase->removeProductFromCart(1, 1) ? \"Product removed from cart successfully\" : \"Failed to remove product from cart\";\n```", "```php\n<?php\n\n// Configuration file for database connection details\ndefine('HOST', 'localhost');\ndefine('USERNAME', 'root');\ndefine('PASSWORD', '');\ndefine('DATABASE', 'purchase');\n\n?>\n```"]}
