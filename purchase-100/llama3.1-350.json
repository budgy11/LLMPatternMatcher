{"prompt": "Create a purchase functionality using php", "llm_output": "Here is an example of a basic purchase functionality using PHP:\n\n**Database Schema:**\n\nWe will use a MySQL database with the following tables:\n\n```sql\nCREATE TABLE users (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  name VARCHAR(255),\n  email VARCHAR(255)\n);\n\nCREATE TABLE products (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  name VARCHAR(255),\n  price DECIMAL(10,2)\n);\n\nCREATE TABLE orders (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  user_id INT,\n  order_date DATE,\n  total DECIMAL(10,2),\n  FOREIGN KEY (user_id) REFERENCES users(id)\n);\n\nCREATE TABLE order_items (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  order_id INT,\n  product_id INT,\n  quantity INT,\n  FOREIGN KEY (order_id) REFERENCES orders(id),\n  FOREIGN KEY (product_id) REFERENCES products(id)\n);\n```\n\n**PHP Code:**\n\nWe will use a PHP script to handle the purchase functionality. We will use the following files:\n\n* `index.php`: This is the main file that handles user input and sends data to the `purchase.php` file.\n* `purchase.php`: This file processes the purchase request, creates an order, and updates the stock of products.\n\n**index.php:**\n```php\n<?php\nrequire_once 'config.php'; // database connection settings\n\n// form handling\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n  $product_id = $_POST['product_id'];\n  $quantity = $_POST['quantity'];\n\n  // validate user input\n  if (empty($product_id) || empty($quantity)) {\n    echo \"Error: Please fill in all fields.\";\n    exit;\n  }\n\n  // send data to purchase.php\n  header('Location: purchase.php?product_id=' . $product_id . '&quantity=' . $quantity);\n  exit;\n}\n?>\n<!DOCTYPE html>\n<html>\n<head>\n  <title>Purchase</title>\n</head>\n<body>\n  <h1>Purchase</h1>\n  <form action=\"\" method=\"post\">\n    <label for=\"product_id\">Product ID:</label>\n    <input type=\"text\" id=\"product_id\" name=\"product_id\"><br><br>\n    <label for=\"quantity\">Quantity:</label>\n    <input type=\"number\" id=\"quantity\" name=\"quantity\"><br><br>\n    <input type=\"submit\" value=\"Purchase\">\n  </form>\n</body>\n</html>\n```\n\n**purchase.php:**\n```php\n<?php\nrequire_once 'config.php'; // database connection settings\n\n// get product ID and quantity from URL parameters\n$product_id = $_GET['product_id'];\n$quantity = $_GET['quantity'];\n\n// validate user input\nif (empty($product_id) || empty($quantity)) {\n  echo \"Error: Invalid product ID or quantity.\";\n  exit;\n}\n\n// check if product exists and has enough stock\n$query = \"SELECT * FROM products WHERE id = '$product_id'\";\n$result = mysqli_query($conn, $query);\n$product = mysqli_fetch_assoc($result);\n\nif ($product['stock'] < $quantity) {\n  echo \"Error: Not enough stock available for this product.\";\n  exit;\n}\n\n// create order and update stock\n$query = \"\n  INSERT INTO orders (user_id, order_date, total)\n  VALUES ('', CURDATE(), '$quantity * \" . $product['price'] . \"')\";\n\nmysqli_query($conn, $query);\n\n$query = \"\n  UPDATE products SET stock = stock - $quantity WHERE id = '$product_id'\";\nmysqli_query($conn, $query);\n\n// create order items\nfor ($i = 0; $i < $quantity; $i++) {\n  $query = \"INSERT INTO order_items (order_id, product_id) VALUES ((SELECT MAX(id) FROM orders), '$product_id')\";\n  mysqli_query($conn, $query);\n}\n\necho \"Order created successfully!\";\n?>\n```\n\n**config.php:**\n```php\n<?php\n// database connection settings\n$conn = new mysqli('localhost', 'username', 'password', 'database');\n\nif ($conn->connect_error) {\n  die(\"Connection failed: \" . $conn->connect_error);\n}\n?>\n```\n\nThis is a basic example of how you can create a purchase functionality using PHP. Note that this code does not include any error handling or security measures, and should not be used in production without further modification.\n\nAlso note that the database schema and PHP code are simplified for demonstration purposes only. In a real-world application, you would want to add more features, such as user authentication, payment processing, and inventory management.", "code_blocks": [null, "```php\n<?php\nrequire_once 'config.php'; // database connection settings\n\n// form handling\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n  $product_id = $_POST['product_id'];\n  $quantity = $_POST['quantity'];\n\n  // validate user input\n  if (empty($product_id) || empty($quantity)) {\n    echo \"Error: Please fill in all fields.\";\n    exit;\n  }\n\n  // send data to purchase.php\n  header('Location: purchase.php?product_id=' . $product_id . '&quantity=' . $quantity);\n  exit;\n}\n?>\n<!DOCTYPE html>\n<html>\n<head>\n  <title>Purchase</title>\n</head>\n<body>\n  <h1>Purchase</h1>\n  <form action=\"\" method=\"post\">\n    <label for=\"product_id\">Product ID:</label>\n    <input type=\"text\" id=\"product_id\" name=\"product_id\"><br><br>\n    <label for=\"quantity\">Quantity:</label>\n    <input type=\"number\" id=\"quantity\" name=\"quantity\"><br><br>\n    <input type=\"submit\" value=\"Purchase\">\n  </form>\n</body>\n</html>\n```", "```php\n<?php\nrequire_once 'config.php'; // database connection settings\n\n// get product ID and quantity from URL parameters\n$product_id = $_GET['product_id'];\n$quantity = $_GET['quantity'];\n\n// validate user input\nif (empty($product_id) || empty($quantity)) {\n  echo \"Error: Invalid product ID or quantity.\";\n  exit;\n}\n\n// check if product exists and has enough stock\n$query = \"SELECT * FROM products WHERE id = '$product_id'\";\n$result = mysqli_query($conn, $query);\n$product = mysqli_fetch_assoc($result);\n\nif ($product['stock'] < $quantity) {\n  echo \"Error: Not enough stock available for this product.\";\n  exit;\n}\n\n// create order and update stock\n$query = \"\n  INSERT INTO orders (user_id, order_date, total)\n  VALUES ('', CURDATE(), '$quantity * \" . $product['price'] . \"')\";\n\nmysqli_query($conn, $query);\n\n$query = \"\n  UPDATE products SET stock = stock - $quantity WHERE id = '$product_id'\";\nmysqli_query($conn, $query);\n\n// create order items\nfor ($i = 0; $i < $quantity; $i++) {\n  $query = \"INSERT INTO order_items (order_id, product_id) VALUES ((SELECT MAX(id) FROM orders), '$product_id')\";\n  mysqli_query($conn, $query);\n}\n\necho \"Order created successfully!\";\n?>\n```", "```php\n<?php\n// database connection settings\n$conn = new mysqli('localhost', 'username', 'password', 'database');\n\nif ($conn->connect_error) {\n  die(\"Connection failed: \" . $conn->connect_error);\n}\n?>\n```"]}
