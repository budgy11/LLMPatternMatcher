{"prompt": "Create a purchase functionality using php", "llm_output": "Here's an example of how you can create a basic purchase functionality using PHP. This example assumes that you have already set up a database to store your products and users.\n\n**Database Schema:**\n\nFirst, let's assume we have the following database schema:\n\n```sql\nCREATE TABLE products (\n  id INT PRIMARY KEY,\n  name VARCHAR(255),\n  price DECIMAL(10,2)\n);\n\nCREATE TABLE orders (\n  id INT PRIMARY KEY,\n  user_id INT,\n  order_date DATE,\n  total DECIMAL(10,2)\n);\n\nCREATE TABLE order_items (\n  id INT PRIMARY KEY,\n  order_id INT,\n  product_id INT,\n  quantity INT\n);\n```\n\n**PHP Code:**\n\nNow let's create the PHP code for the purchase functionality:\n\n```php\n// Configuration file (config.php)\nrequire_once 'config.php';\n\n// Database connection\n$db = new PDO('mysql:host=localhost;dbname=your_database', 'your_username', 'your_password');\n\n// Function to add a product to cart\nfunction add_product_to_cart($product_id, $quantity) {\n  // Get user's cart ID from session or database\n  $cart_id = $_SESSION['cart_id'];\n  \n  // Insert new order item into cart table\n  $query = \"INSERT INTO cart (user_id, product_id, quantity)\n            VALUES (:user_id, :product_id, :quantity)\";\n  $stmt = $db->prepare($query);\n  $stmt->bindParam(':user_id', $_SESSION['user_id']);\n  $stmt->bindParam(':product_id', $product_id);\n  $stmt->bindParam(':quantity', $quantity);\n  $stmt->execute();\n}\n\n// Function to checkout (place order)\nfunction place_order() {\n  // Get user's cart ID from session or database\n  $cart_id = $_SESSION['cart_id'];\n  \n  // Insert new order into orders table\n  $query = \"INSERT INTO orders (user_id, total)\n            VALUES (:user_id, :total)\";\n  $stmt = $db->prepare($query);\n  $stmt->bindParam(':user_id', $_SESSION['user_id']);\n  $stmt->bindParam(':total', $_POST['total']);\n  $stmt->execute();\n  \n  // Get the newly inserted order ID\n  $order_id = $db->lastInsertId('orders');\n  \n  // Update quantity of each product in cart table\n  foreach ($_SESSION['cart'] as $item) {\n    $query = \"UPDATE products SET quantity = quantity - :quantity WHERE id = :product_id\";\n    $stmt = $db->prepare($query);\n    $stmt->bindParam(':quantity', $item['quantity']);\n    $stmt->bindParam(':product_id', $item['product_id']);\n    $stmt->execute();\n    \n    // Insert new order item into order_items table\n    $query = \"INSERT INTO order_items (order_id, product_id, quantity)\n              VALUES (:order_id, :product_id, :quantity)\";\n    $stmt = $db->prepare($query);\n    $stmt->bindParam(':order_id', $order_id);\n    $stmt->bindParam(':product_id', $item['product_id']);\n    $stmt->bindParam(':quantity', $item['quantity']);\n    $stmt->execute();\n  }\n  \n  // Clear cart\n  unset($_SESSION['cart']);\n}\n\n// Process purchase functionality\nif (isset($_POST['purchase'])) {\n  $total = 0;\n  foreach ($_SESSION['cart'] as $item) {\n    $price = get_product_price($item['product_id']);\n    $total += ($price * $item['quantity']);\n  }\n  \n  // Update total in form and proceed with checkout\n  $_POST['total'] = $total;\n  place_order();\n} else {\n  echo \"Error: unable to process purchase.\";\n}\n```\n\n**Form for Purchase Functionality:**\n\nHere's a simple example of how you can create a form for the purchase functionality:\n\n```php\n<form action=\"\" method=\"post\">\n  <table>\n    <?php foreach ($_SESSION['cart'] as $item): ?>\n      <tr>\n        <td><?php echo $item['product_name']; ?></td>\n        <td><?php echo $item['quantity']; ?> x <?php echo get_product_price($item['product_id']); ?></td>\n      </tr>\n    <?php endforeach; ?>\n  </table>\n  \n  <input type=\"hidden\" name=\"total\" value=\"<?php echo $_POST['total']; ?>\">\n  <button type=\"submit\" name=\"purchase\">Purchase</button>\n</form>\n```\n\n**get_product_price Function:**\n\nFinally, here's a simple example of how you can create the `get_product_price` function:\n\n```php\nfunction get_product_price($product_id) {\n  $query = \"SELECT price FROM products WHERE id = :id\";\n  $stmt = $db->prepare($query);\n  $stmt->bindParam(':id', $product_id);\n  $stmt->execute();\n  \n  return $stmt->fetchColumn();\n}\n```\n\nRemember to replace the placeholders (e.g. `your_database`, `your_username`, etc.) with your actual database credentials.\n\nThis code provides a basic example of how you can create a purchase functionality using PHP and MySQL. You may need to modify it according to your specific requirements.", "code_blocks": [null, "```php\n// Configuration file (config.php)\nrequire_once 'config.php';\n\n// Database connection\n$db = new PDO('mysql:host=localhost;dbname=your_database', 'your_username', 'your_password');\n\n// Function to add a product to cart\nfunction add_product_to_cart($product_id, $quantity) {\n  // Get user's cart ID from session or database\n  $cart_id = $_SESSION['cart_id'];\n  \n  // Insert new order item into cart table\n  $query = \"INSERT INTO cart (user_id, product_id, quantity)\n            VALUES (:user_id, :product_id, :quantity)\";\n  $stmt = $db->prepare($query);\n  $stmt->bindParam(':user_id', $_SESSION['user_id']);\n  $stmt->bindParam(':product_id', $product_id);\n  $stmt->bindParam(':quantity', $quantity);\n  $stmt->execute();\n}\n\n// Function to checkout (place order)\nfunction place_order() {\n  // Get user's cart ID from session or database\n  $cart_id = $_SESSION['cart_id'];\n  \n  // Insert new order into orders table\n  $query = \"INSERT INTO orders (user_id, total)\n            VALUES (:user_id, :total)\";\n  $stmt = $db->prepare($query);\n  $stmt->bindParam(':user_id', $_SESSION['user_id']);\n  $stmt->bindParam(':total', $_POST['total']);\n  $stmt->execute();\n  \n  // Get the newly inserted order ID\n  $order_id = $db->lastInsertId('orders');\n  \n  // Update quantity of each product in cart table\n  foreach ($_SESSION['cart'] as $item) {\n    $query = \"UPDATE products SET quantity = quantity - :quantity WHERE id = :product_id\";\n    $stmt = $db->prepare($query);\n    $stmt->bindParam(':quantity', $item['quantity']);\n    $stmt->bindParam(':product_id', $item['product_id']);\n    $stmt->execute();\n    \n    // Insert new order item into order_items table\n    $query = \"INSERT INTO order_items (order_id, product_id, quantity)\n              VALUES (:order_id, :product_id, :quantity)\";\n    $stmt = $db->prepare($query);\n    $stmt->bindParam(':order_id', $order_id);\n    $stmt->bindParam(':product_id', $item['product_id']);\n    $stmt->bindParam(':quantity', $item['quantity']);\n    $stmt->execute();\n  }\n  \n  // Clear cart\n  unset($_SESSION['cart']);\n}\n\n// Process purchase functionality\nif (isset($_POST['purchase'])) {\n  $total = 0;\n  foreach ($_SESSION['cart'] as $item) {\n    $price = get_product_price($item['product_id']);\n    $total += ($price * $item['quantity']);\n  }\n  \n  // Update total in form and proceed with checkout\n  $_POST['total'] = $total;\n  place_order();\n} else {\n  echo \"Error: unable to process purchase.\";\n}\n```", "```php\n<form action=\"\" method=\"post\">\n  <table>\n    <?php foreach ($_SESSION['cart'] as $item): ?>\n      <tr>\n        <td><?php echo $item['product_name']; ?></td>\n        <td><?php echo $item['quantity']; ?> x <?php echo get_product_price($item['product_id']); ?></td>\n      </tr>\n    <?php endforeach; ?>\n  </table>\n  \n  <input type=\"hidden\" name=\"total\" value=\"<?php echo $_POST['total']; ?>\">\n  <button type=\"submit\" name=\"purchase\">Purchase</button>\n</form>\n```", "```php\nfunction get_product_price($product_id) {\n  $query = \"SELECT price FROM products WHERE id = :id\";\n  $stmt = $db->prepare($query);\n  $stmt->bindParam(':id', $product_id);\n  $stmt->execute();\n  \n  return $stmt->fetchColumn();\n}\n```"]}
