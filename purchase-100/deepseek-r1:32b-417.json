{"prompt": "Create a purchase functionality using php", "llm_output": "<think>\nOkay, I need to create a purchase functionality using PHP. Let me think about how to approach this step by step.\n\nFirst, I should consider the main components involved in a purchase process. There's the product selection, adding items to the cart, calculating totals including taxes and discounts, handling payment, and then confirming the order.\n\nI'll start by setting up a basic HTML structure for displaying products. Each product should have details like name, price, quantity available, and an \"Add to Cart\" button. Using a simple array to store product data makes sense for now since I don't have a database set up yet.\n\nNext, handling the shopping cart. The cart needs to be stored somewhere between page requests. Using PHP sessions seems appropriate because they are easy to manage and persist across pages. When a user clicks \"Add to Cart,\" I'll check if the product is already in the session; if so, increment the quantity. If not, add it with quantity one.\n\nCalculating the cart total is important. For each item in the cart, I'll multiply the price by quantity and sum them all up. I should also include tax calculation here. Maybe a fixed tax rate for simplicity. Applying a discount could be a percentage off the total before tax, or after? Hmm, I think applying it to the subtotal makes more sense, then adding tax on top.\n\nWhen the user proceeds to checkout, I need to display their cart items and let them review. Then, handle payment information. For this example, I'll simulate the payment process with a form that collects name, card number, etc., but won't actually process it since integrating real payment gateways is beyond the scope here.\n\nAfter confirming the purchase, I should clear the cart to prevent accidental reuse and display an order confirmation page with details like items bought, total amount, and perhaps an order number for reference. Keeping track of orders could be done by incrementing a session variable or storing in a database, but again, without a database, a simple counter will suffice.\n\nI also need to make sure the code is secure. Since this is a basic example, I'll use isset() checks properly and ensure that form inputs are validated before processing. Using prepared statements would be better if using a database, but since I'm not, maybe just sanitizing inputs in the future.\n\nTesting each part step by step is crucial. First, adding items to the cart, checking if quantities update correctly. Then, calculating totals with tax and discount accurately. Finally, ensuring that the checkout process works smoothly and the order confirmation appears correctly after submission.\n\nI should also consider user experience aspects, like clear buttons, error messages for invalid inputs, and a summary of their purchase before confirming. Maybe add some CSS to make it look nicer, but since this is functionality-focused, I'll keep it simple with basic styling.\n\nPutting it all together, the code will have several sections: product display, cart handling, checkout form, payment processing (simulated), order confirmation, and necessary session management throughout.\n</think>\n\nHere's an example of a purchase functionality using PHP. This includes a basic implementation for adding items to a shopping cart, displaying the cart, and processing the purchase.\n\n### Step 1: Create the Product Display Page (`products.php`)\n\n```php\n<?php\nsession_start();\n// Sample products (you can replace this with data from your database)\n$products = array(\n    array('id' => 1, 'name' => 'Product A', 'price' => 29.99),\n    array('id' => 2, 'name' => 'Product B', 'price' => 49.99),\n    array('id' => 3, 'name' => 'Product C', 'price' => 19.99)\n);\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Products</title>\n    <style>\n        .product {\n            border: 1px solid #ddd;\n            padding: 10px;\n            margin: 10px;\n        }\n        button {\n            background-color: green;\n            color: white;\n            padding: 5px 10px;\n            border: none;\n            border-radius: 4px;\n            cursor: pointer;\n        }\n    </style>\n</head>\n<body>\n    <h1>Products</h1>\n    <?php foreach ($products as $product): ?>\n        <div class=\"product\">\n            <h3><?php echo $product['name']; ?></h3>\n            <p>$<?php echo number_format($product['price'], 2); ?></p>\n            <form action=\"add_to_cart.php\" method=\"post\">\n                <input type=\"hidden\" name=\"id\" value=\"<?php echo $product['id']; ?>\">\n                <input type=\"hidden\" name=\"name\" value=\"<?php echo $product['name']; ?>\">\n                <input type=\"hidden\" name=\"price\" value=\"<?php echo $product['price']; ?>\">\n                <button type=\"submit\">Add to Cart</button>\n            </form>\n        </div>\n    <?php endforeach; ?>\n    \n    <a href=\"cart.php\">View Cart</a>\n</body>\n</html>\n```\n\n### Step 2: Create the Add to Cart Page (`add_to_cart.php`)\n\n```php\n<?php\nsession_start();\n// Get product details from form submission\n$id = isset($_POST['id']) ? $_POST['id'] : '';\n$name = isset($_POST['name']) ? $_POST['name'] : '';\n$price = isset($_POST['price']) ? $_POST['price'] : 0;\n\nif ($id && $name && $price) {\n    // Initialize cart if it doesn't exist\n    if (!isset($_SESSION['cart'])) {\n        $_SESSION['cart'] = array();\n    }\n    \n    // Check if product is already in the cart\n    if (array_key_exists($id, $_SESSION['cart'])) {\n        $_SESSION['cart'][$id]['quantity'] += 1;\n    } else {\n        $_SESSION['cart'][$id] = array(\n            'id' => $id,\n            'name' => $name,\n            'price' => $price,\n            'quantity' => 1\n        );\n    }\n    \n    echo \"<script>alert('Product added to cart!');</script>\";\n}\n\n// Redirect back to products page\nheader(\"Location: products.php\");\nexit();\n?>\n```\n\n### Step 3: Create the Cart Page (`cart.php`)\n\n```php\n<?php\nsession_start();\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Shopping Cart</title>\n    <style>\n        .cart-item {\n            border: 1px solid #ddd;\n            padding: 10px;\n            margin: 10px;\n        }\n        button {\n            background-color: red;\n            color: white;\n            padding: 5px 10px;\n            border: none;\n            border-radius: 4px;\n            cursor: pointer;\n        }\n    </style>\n</head>\n<body>\n    <h1>Shopping Cart</h1>\n    \n    <?php if (isset($_SESSION['cart']) && count($_SESSION['cart']) > 0): ?>\n        <?php $total = 0; ?>\n        \n        <?php foreach ($_SESSION['cart'] as $item): ?>\n            <div class=\"cart-item\">\n                <h3><?php echo $item['name']; ?></h3>\n                <p>Quantity: <?php echo $item['quantity']; ?></p>\n                <p>$<?php echo number_format($item['price'], 2); ?></p>\n                \n                <?php \n                    $subtotal = $item['price'] * $item['quantity'];\n                    $total += $subtotal;\n                ?>\n                \n                <form action=\"remove_from_cart.php\" method=\"post\">\n                    <input type=\"hidden\" name=\"id\" value=\"<?php echo $item['id']; ?>\">\n                    <button type=\"submit\">Remove</button>\n                </form>\n            </div>\n        <?php endforeach; ?>\n        \n        <h3>Total: $<?php echo number_format($total, 2); ?></h3>\n        <a href=\"checkout.php\"><button>Checkout</button></a>\n    <?php else: ?>\n        <p>Your cart is empty.</p>\n        <a href=\"products.php\">Continue Shopping</a>\n    <?php endif; ?>\n</body>\n</html>\n```\n\n### Step 4: Create the Remove from Cart Page (`remove_from_cart.php`)\n\n```php\n<?php\nsession_start();\n// Get product ID to remove\n$id = isset($_POST['id']) ? $_POST['id'] : '';\n\nif ($id) {\n    if (isset($_SESSION['cart'][$id])) {\n        unset($_SESSION['cart'][$id]);\n        \n        echo \"<script>alert('Product removed from cart!');</script>\";\n    }\n}\n\n// Redirect back to cart page\nheader(\"Location: cart.php\");\nexit();\n?>\n```\n\n### Step 5: Create the Checkout Page (`checkout.php`)\n\n```php\n<?php\nsession_start();\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Checkout</title>\n    <style>\n        .order-summary {\n            border: 1px solid #ddd;\n            padding: 20px;\n            margin: 20px;\n        }\n        form {\n            max-width: 500px;\n            margin: 0 auto;\n        }\n        input, select {\n            width: 100%;\n            padding: 8px;\n            margin: 10px 0;\n            box-sizing: border-box;\n        }\n    </style>\n</head>\n<body>\n    <h1>Checkout</h1>\n    \n    <?php if (!isset($_SESSION['cart']) || count($_SESSION['cart']) == 0): ?>\n        <p>Your cart is empty.</p>\n        <a href=\"products.php\">Continue Shopping</a>\n    <?php else: ?>\n        <div class=\"order-summary\">\n            <h2>Order Summary</h2>\n            \n            <?php $total = 0; ?>\n            <?php foreach ($_SESSION['cart'] as $item): ?>\n                <?php \n                    $subtotal = $item['price'] * $item['quantity'];\n                    $total += $subtotal;\n                ?>\n                \n                <div class=\"cart-item\">\n                    <h3><?php echo $item['name']; ?></h3>\n                    <p>Quantity: <?php echo $item['quantity']; ?></p>\n                    <p>$<?php echo number_format($item['price'], 2); ?></p>\n                </div>\n            <?php endforeach; ?>\n            \n            <h3>Total Amount: $<?php echo number_format($total, 2); ?></h3>\n        </div>\n\n        <h2>Payment Information</h2>\n        <form action=\"process_payment.php\" method=\"post\">\n            <label for=\"name\">Name:</label>\n            <input type=\"text\" id=\"name\" name=\"name\" required>\n\n            <label for=\"card_number\">Card Number:</label>\n            <input type=\"text\" id=\"card_number\" name=\"card_number\" required>\n\n            <label for=\"expiry_date\">Expiry Date:</label>\n            <input type=\"text\" id=\"expiry_date\" name=\"expiry_date\" placeholder=\"MM/YY\" required>\n\n            <label for=\"cvv\">CVV:</label>\n            <input type=\"text\" id=\"cvv\" name=\"cvv\" required>\n\n            <button type=\"submit\">Place Order</button>\n        </form>\n    <?php endif; ?>\n</body>\n</html>\n```\n\n### Step 6: Create the Payment Processing Page (`process_payment.php`)\n\n```php\n<?php\nsession_start();\n// Get payment details\n$name = isset($_POST['name']) ? $_POST['name'] : '';\n$card_number = isset($_POST['card_number']) ? $_POST['card_number'] : '';\n$expiry_date = isset($_POST['expiry_date']) ? $_POST['expiry_date'] : '';\n$cvv = isset($_POST['cvv']) ? $_POST['cvv'] : '';\n\n// Process payment (this is a simplified example)\nif ($name && $card_number && $expiry_date && $cvv) {\n    // Normally, you would integrate with a payment gateway here\n    // For this example, we'll just simulate the payment processing\n    \n    // Calculate total amount from session cart\n    $total = 0;\n    foreach ($_SESSION['cart'] as $item) {\n        $total += $item['price'] * $item['quantity'];\n    }\n\n    // Clear the cart after purchase\n    unset($_SESSION['cart']);\n    \n    // You can store the order in a database here if needed\n    \n    header(\"Location: confirmation.php?amount=\" . urlencode($total));\n} else {\n    echo \"<script>alert('Payment details are required!');</script>\";\n    header(\"Location: checkout.php\");\n}\nexit();\n?>\n```\n\n### Step 7: Create the Confirmation Page (`confirmation.php`)\n\n```php\n<?php\nsession_start();\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Order Confirmation</title>\n    <style>\n        .confirmation {\n            text-align: center;\n            padding: 20px;\n        }\n    </style>\n</head>\n<body>\n    <div class=\"confirmation\">\n        <h1>Thank you for your purchase!</h1>\n        <?php if (isset($_GET['amount'])): ?>\n            <p>Your order has been processed successfully.</p>\n            <p>Total Amount: $<?php echo number_format($_GET['amount'], 2); ?></p>\n        <?php else: ?>\n            <p>There was an error processing your order. Please try again.</p>\n        <?php endif; ?>\n        \n        <a href=\"products.php\">Continue Shopping</a>\n    </div>\n</body>\n</html>\n```\n\n### How to Use This Code:\n\n1. Place all these files in your web server's document root directory.\n2. Access `products.php` through a web browser to start shopping.\n3. Add items to your cart, view the cart, and checkout when ready.\n\n### Features Included:\n\n- Product display with prices\n- Shopping cart functionality\n- Adding/removing items from cart\n- Order summary with total amount calculation\n- Checkout form for payment details\n- Payment processing (simplified example)\n- Order confirmation page\n\n### Notes:\n\n1. This is a basic implementation and should be adapted to your specific needs.\n2. In a real-world application, you would need:\n   - Secure storage of payment information\n   - Integration with a payment gateway (e.g., PayPal, Stripe)\n   - Proper error handling and validation\n   - Database integration for storing orders and customer data\n3. You might want to add:\n   - User authentication\n   - Product quantity checking\n   - More detailed order tracking\n   - Email notifications for purchases\n   - Coupon codes/discount functionality\n\nThis example provides a basic structure that you can build upon based on your specific requirements.", "code_blocks": ["```php\n<?php\nsession_start();\n// Sample products (you can replace this with data from your database)\n$products = array(\n    array('id' => 1, 'name' => 'Product A', 'price' => 29.99),\n    array('id' => 2, 'name' => 'Product B', 'price' => 49.99),\n    array('id' => 3, 'name' => 'Product C', 'price' => 19.99)\n);\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Products</title>\n    <style>\n        .product {\n            border: 1px solid #ddd;\n            padding: 10px;\n            margin: 10px;\n        }\n        button {\n            background-color: green;\n            color: white;\n            padding: 5px 10px;\n            border: none;\n            border-radius: 4px;\n            cursor: pointer;\n        }\n    </style>\n</head>\n<body>\n    <h1>Products</h1>\n    <?php foreach ($products as $product): ?>\n        <div class=\"product\">\n            <h3><?php echo $product['name']; ?></h3>\n            <p>$<?php echo number_format($product['price'], 2); ?></p>\n            <form action=\"add_to_cart.php\" method=\"post\">\n                <input type=\"hidden\" name=\"id\" value=\"<?php echo $product['id']; ?>\">\n                <input type=\"hidden\" name=\"name\" value=\"<?php echo $product['name']; ?>\">\n                <input type=\"hidden\" name=\"price\" value=\"<?php echo $product['price']; ?>\">\n                <button type=\"submit\">Add to Cart</button>\n            </form>\n        </div>\n    <?php endforeach; ?>\n    \n    <a href=\"cart.php\">View Cart</a>\n</body>\n</html>\n```", "```php\n<?php\nsession_start();\n// Get product details from form submission\n$id = isset($_POST['id']) ? $_POST['id'] : '';\n$name = isset($_POST['name']) ? $_POST['name'] : '';\n$price = isset($_POST['price']) ? $_POST['price'] : 0;\n\nif ($id && $name && $price) {\n    // Initialize cart if it doesn't exist\n    if (!isset($_SESSION['cart'])) {\n        $_SESSION['cart'] = array();\n    }\n    \n    // Check if product is already in the cart\n    if (array_key_exists($id, $_SESSION['cart'])) {\n        $_SESSION['cart'][$id]['quantity'] += 1;\n    } else {\n        $_SESSION['cart'][$id] = array(\n            'id' => $id,\n            'name' => $name,\n            'price' => $price,\n            'quantity' => 1\n        );\n    }\n    \n    echo \"<script>alert('Product added to cart!');</script>\";\n}\n\n// Redirect back to products page\nheader(\"Location: products.php\");\nexit();\n?>\n```", "```php\n<?php\nsession_start();\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Shopping Cart</title>\n    <style>\n        .cart-item {\n            border: 1px solid #ddd;\n            padding: 10px;\n            margin: 10px;\n        }\n        button {\n            background-color: red;\n            color: white;\n            padding: 5px 10px;\n            border: none;\n            border-radius: 4px;\n            cursor: pointer;\n        }\n    </style>\n</head>\n<body>\n    <h1>Shopping Cart</h1>\n    \n    <?php if (isset($_SESSION['cart']) && count($_SESSION['cart']) > 0): ?>\n        <?php $total = 0; ?>\n        \n        <?php foreach ($_SESSION['cart'] as $item): ?>\n            <div class=\"cart-item\">\n                <h3><?php echo $item['name']; ?></h3>\n                <p>Quantity: <?php echo $item['quantity']; ?></p>\n                <p>$<?php echo number_format($item['price'], 2); ?></p>\n                \n                <?php \n                    $subtotal = $item['price'] * $item['quantity'];\n                    $total += $subtotal;\n                ?>\n                \n                <form action=\"remove_from_cart.php\" method=\"post\">\n                    <input type=\"hidden\" name=\"id\" value=\"<?php echo $item['id']; ?>\">\n                    <button type=\"submit\">Remove</button>\n                </form>\n            </div>\n        <?php endforeach; ?>\n        \n        <h3>Total: $<?php echo number_format($total, 2); ?></h3>\n        <a href=\"checkout.php\"><button>Checkout</button></a>\n    <?php else: ?>\n        <p>Your cart is empty.</p>\n        <a href=\"products.php\">Continue Shopping</a>\n    <?php endif; ?>\n</body>\n</html>\n```", "```php\n<?php\nsession_start();\n// Get product ID to remove\n$id = isset($_POST['id']) ? $_POST['id'] : '';\n\nif ($id) {\n    if (isset($_SESSION['cart'][$id])) {\n        unset($_SESSION['cart'][$id]);\n        \n        echo \"<script>alert('Product removed from cart!');</script>\";\n    }\n}\n\n// Redirect back to cart page\nheader(\"Location: cart.php\");\nexit();\n?>\n```", "```php\n<?php\nsession_start();\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Checkout</title>\n    <style>\n        .order-summary {\n            border: 1px solid #ddd;\n            padding: 20px;\n            margin: 20px;\n        }\n        form {\n            max-width: 500px;\n            margin: 0 auto;\n        }\n        input, select {\n            width: 100%;\n            padding: 8px;\n            margin: 10px 0;\n            box-sizing: border-box;\n        }\n    </style>\n</head>\n<body>\n    <h1>Checkout</h1>\n    \n    <?php if (!isset($_SESSION['cart']) || count($_SESSION['cart']) == 0): ?>\n        <p>Your cart is empty.</p>\n        <a href=\"products.php\">Continue Shopping</a>\n    <?php else: ?>\n        <div class=\"order-summary\">\n            <h2>Order Summary</h2>\n            \n            <?php $total = 0; ?>\n            <?php foreach ($_SESSION['cart'] as $item): ?>\n                <?php \n                    $subtotal = $item['price'] * $item['quantity'];\n                    $total += $subtotal;\n                ?>\n                \n                <div class=\"cart-item\">\n                    <h3><?php echo $item['name']; ?></h3>\n                    <p>Quantity: <?php echo $item['quantity']; ?></p>\n                    <p>$<?php echo number_format($item['price'], 2); ?></p>\n                </div>\n            <?php endforeach; ?>\n            \n            <h3>Total Amount: $<?php echo number_format($total, 2); ?></h3>\n        </div>\n\n        <h2>Payment Information</h2>\n        <form action=\"process_payment.php\" method=\"post\">\n            <label for=\"name\">Name:</label>\n            <input type=\"text\" id=\"name\" name=\"name\" required>\n\n            <label for=\"card_number\">Card Number:</label>\n            <input type=\"text\" id=\"card_number\" name=\"card_number\" required>\n\n            <label for=\"expiry_date\">Expiry Date:</label>\n            <input type=\"text\" id=\"expiry_date\" name=\"expiry_date\" placeholder=\"MM/YY\" required>\n\n            <label for=\"cvv\">CVV:</label>\n            <input type=\"text\" id=\"cvv\" name=\"cvv\" required>\n\n            <button type=\"submit\">Place Order</button>\n        </form>\n    <?php endif; ?>\n</body>\n</html>\n```", "```php\n<?php\nsession_start();\n// Get payment details\n$name = isset($_POST['name']) ? $_POST['name'] : '';\n$card_number = isset($_POST['card_number']) ? $_POST['card_number'] : '';\n$expiry_date = isset($_POST['expiry_date']) ? $_POST['expiry_date'] : '';\n$cvv = isset($_POST['cvv']) ? $_POST['cvv'] : '';\n\n// Process payment (this is a simplified example)\nif ($name && $card_number && $expiry_date && $cvv) {\n    // Normally, you would integrate with a payment gateway here\n    // For this example, we'll just simulate the payment processing\n    \n    // Calculate total amount from session cart\n    $total = 0;\n    foreach ($_SESSION['cart'] as $item) {\n        $total += $item['price'] * $item['quantity'];\n    }\n\n    // Clear the cart after purchase\n    unset($_SESSION['cart']);\n    \n    // You can store the order in a database here if needed\n    \n    header(\"Location: confirmation.php?amount=\" . urlencode($total));\n} else {\n    echo \"<script>alert('Payment details are required!');</script>\";\n    header(\"Location: checkout.php\");\n}\nexit();\n?>\n```", "```php\n<?php\nsession_start();\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Order Confirmation</title>\n    <style>\n        .confirmation {\n            text-align: center;\n            padding: 20px;\n        }\n    </style>\n</head>\n<body>\n    <div class=\"confirmation\">\n        <h1>Thank you for your purchase!</h1>\n        <?php if (isset($_GET['amount'])): ?>\n            <p>Your order has been processed successfully.</p>\n            <p>Total Amount: $<?php echo number_format($_GET['amount'], 2); ?></p>\n        <?php else: ?>\n            <p>There was an error processing your order. Please try again.</p>\n        <?php endif; ?>\n        \n        <a href=\"products.php\">Continue Shopping</a>\n    </div>\n</body>\n</html>\n```"]}
