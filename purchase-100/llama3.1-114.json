{"prompt": "Create a purchase functionality using php", "llm_output": "Here is an example of a basic purchase functionality in PHP:\n\n**Note:** This example assumes that you have already set up a MySQL database with the necessary tables for storing products, customers, and orders. You will need to modify this code to fit your specific database schema.\n\n**Database Schema:**\n\n```sql\nCREATE TABLE products (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  name VARCHAR(255),\n  price DECIMAL(10,2)\n);\n\nCREATE TABLE customers (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  name VARCHAR(255),\n  email VARCHAR(255)\n);\n\nCREATE TABLE orders (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  customer_id INT,\n  total DECIMAL(10,2),\n  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\nCREATE TABLE order_items (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  order_id INT,\n  product_id INT,\n  quantity INT,\n  FOREIGN KEY (order_id) REFERENCES orders(id),\n  FOREIGN KEY (product_id) REFERENCES products(id)\n);\n```\n\n**PHP Code:**\n\n```php\n// config.php\ndefine('DB_HOST', 'localhost');\ndefine('DB_USERNAME', 'root');\ndefine('DB_PASSWORD', '');\ndefine('DB_NAME', 'store');\n\n// database connection function\nfunction db_connect() {\n  $conn = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);\n  if ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n  }\n  return $conn;\n}\n\n// product model class\nclass Product {\n  private $id;\n  private $name;\n  private $price;\n\n  public function __construct($id, $name, $price) {\n    $this->id = $id;\n    $this->name = $name;\n    $this->price = $price;\n  }\n\n  public function getID() {\n    return $this->id;\n  }\n\n  public function getName() {\n    return $this->name;\n  }\n\n  public function getPrice() {\n    return $this->price;\n  }\n}\n\n// cart class\nclass Cart {\n  private $products;\n\n  public function __construct() {\n    $this->products = array();\n  }\n\n  public function addProduct($product_id, $quantity) {\n    if (array_key_exists($product_id, $this->products)) {\n      $this->products[$product_id]['quantity'] += $quantity;\n    } else {\n      $this->products[$product_id] = array('quantity' => $quantity);\n    }\n  }\n\n  public function getProducts() {\n    return $this->products;\n  }\n}\n\n// order class\nclass Order {\n  private $id;\n  private $customer_id;\n  private $total;\n\n  public function __construct($customer_id, $total) {\n    $this->customer_id = $customer_id;\n    $this->total = $total;\n  }\n\n  public function getID() {\n    return $this->id;\n  }\n\n  public function getCustomerID() {\n    return $this->customer_id;\n  }\n\n  public function getTotal() {\n    return $this->total;\n  }\n}\n\n// purchase functionality\nfunction process_purchase($cart, $customer_id) {\n  // calculate total cost of items in cart\n  $total = 0;\n  foreach ($cart->getProducts() as $product_id => $product_info) {\n    $total += (float)$product_info['quantity'] * get_product_price($product_id);\n  }\n\n  // create new order\n  $order = new Order($customer_id, $total);\n\n  // insert order into database\n  $conn = db_connect();\n  $stmt = $conn->prepare(\"INSERT INTO orders (customer_id, total) VALUES (?, ?)\");\n  $stmt->bind_param('ii', $order->getCustomerID(), $order->getTotal());\n  $stmt->execute();\n\n  // get ID of newly created order\n  $order_id = $conn->insert_id;\n\n  // insert each product into the order_items table\n  foreach ($cart->getProducts() as $product_id => $product_info) {\n    $quantity = $product_info['quantity'];\n    $stmt = $conn->prepare(\"INSERT INTO order_items (order_id, product_id, quantity) VALUES (?, ?, ?)\");\n    $stmt->bind_param('iii', $order_id, $product_id, $quantity);\n    $stmt->execute();\n  }\n\n  // close database connection\n  $conn->close();\n\n  return $order_id;\n}\n\n// get price of a product from database\nfunction get_product_price($product_id) {\n  $conn = db_connect();\n  $stmt = $conn->prepare(\"SELECT price FROM products WHERE id = ?\");\n  $stmt->bind_param('i', $product_id);\n  $stmt->execute();\n  $result = $stmt->get_result();\n  $row = $result->fetch_array(MYSQLI_ASSOC);\n  return (float)$row['price'];\n}\n```\n\n**Example Usage:**\n\n```php\n// create a new cart object\n$cart = new Cart();\n\n// add some products to the cart\n$cart->addProduct(1, 2); // product_id 1, quantity 2\n$cart->addProduct(3, 1); // product_id 3, quantity 1\n\n// get customer ID (e.g. from a login system)\n$customer_id = 123;\n\n// process the purchase\n$order_id = process_purchase($cart, $customer_id);\n\n// print out order ID\necho \"Order ID: $order_id\";\n```\n\nNote that this is just a basic example and you will likely need to modify it to fit your specific requirements. Additionally, you should always validate user input and sanitize any data being inserted into the database to prevent SQL injection attacks.\n\nAlso note that in a real-world application, you would typically want to handle errors more robustly than simply dying when there's an error connecting to the database.\n\nThis example also assumes that you're using a MySQL database. If you're using a different database system (e.g. PostgreSQL), you'll need to modify the SQL queries accordingly.", "code_blocks": [null, "```php\n// config.php\ndefine('DB_HOST', 'localhost');\ndefine('DB_USERNAME', 'root');\ndefine('DB_PASSWORD', '');\ndefine('DB_NAME', 'store');\n\n// database connection function\nfunction db_connect() {\n  $conn = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);\n  if ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n  }\n  return $conn;\n}\n\n// product model class\nclass Product {\n  private $id;\n  private $name;\n  private $price;\n\n  public function __construct($id, $name, $price) {\n    $this->id = $id;\n    $this->name = $name;\n    $this->price = $price;\n  }\n\n  public function getID() {\n    return $this->id;\n  }\n\n  public function getName() {\n    return $this->name;\n  }\n\n  public function getPrice() {\n    return $this->price;\n  }\n}\n\n// cart class\nclass Cart {\n  private $products;\n\n  public function __construct() {\n    $this->products = array();\n  }\n\n  public function addProduct($product_id, $quantity) {\n    if (array_key_exists($product_id, $this->products)) {\n      $this->products[$product_id]['quantity'] += $quantity;\n    } else {\n      $this->products[$product_id] = array('quantity' => $quantity);\n    }\n  }\n\n  public function getProducts() {\n    return $this->products;\n  }\n}\n\n// order class\nclass Order {\n  private $id;\n  private $customer_id;\n  private $total;\n\n  public function __construct($customer_id, $total) {\n    $this->customer_id = $customer_id;\n    $this->total = $total;\n  }\n\n  public function getID() {\n    return $this->id;\n  }\n\n  public function getCustomerID() {\n    return $this->customer_id;\n  }\n\n  public function getTotal() {\n    return $this->total;\n  }\n}\n\n// purchase functionality\nfunction process_purchase($cart, $customer_id) {\n  // calculate total cost of items in cart\n  $total = 0;\n  foreach ($cart->getProducts() as $product_id => $product_info) {\n    $total += (float)$product_info['quantity'] * get_product_price($product_id);\n  }\n\n  // create new order\n  $order = new Order($customer_id, $total);\n\n  // insert order into database\n  $conn = db_connect();\n  $stmt = $conn->prepare(\"INSERT INTO orders (customer_id, total) VALUES (?, ?)\");\n  $stmt->bind_param('ii', $order->getCustomerID(), $order->getTotal());\n  $stmt->execute();\n\n  // get ID of newly created order\n  $order_id = $conn->insert_id;\n\n  // insert each product into the order_items table\n  foreach ($cart->getProducts() as $product_id => $product_info) {\n    $quantity = $product_info['quantity'];\n    $stmt = $conn->prepare(\"INSERT INTO order_items (order_id, product_id, quantity) VALUES (?, ?, ?)\");\n    $stmt->bind_param('iii', $order_id, $product_id, $quantity);\n    $stmt->execute();\n  }\n\n  // close database connection\n  $conn->close();\n\n  return $order_id;\n}\n\n// get price of a product from database\nfunction get_product_price($product_id) {\n  $conn = db_connect();\n  $stmt = $conn->prepare(\"SELECT price FROM products WHERE id = ?\");\n  $stmt->bind_param('i', $product_id);\n  $stmt->execute();\n  $result = $stmt->get_result();\n  $row = $result->fetch_array(MYSQLI_ASSOC);\n  return (float)$row['price'];\n}\n```", "```php\n// create a new cart object\n$cart = new Cart();\n\n// add some products to the cart\n$cart->addProduct(1, 2); // product_id 1, quantity 2\n$cart->addProduct(3, 1); // product_id 3, quantity 1\n\n// get customer ID (e.g. from a login system)\n$customer_id = 123;\n\n// process the purchase\n$order_id = process_purchase($cart, $customer_id);\n\n// print out order ID\necho \"Order ID: $order_id\";\n```"]}
