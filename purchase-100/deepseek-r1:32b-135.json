{"prompt": "Create a purchase functionality using php", "llm_output": "<think>\nAlright, the user wants to create a purchase functionality using PHP. Let me break down what that entails.\n\nFirst, I need to consider the basic components of a purchasing system. There should be a way for users to view available products, see their details, and add them to a cart. So, I'll outline sections like displaying products, product details, and the shopping cart.\n\nNext, user authentication is crucial. Users shouldn't be able to purchase without logging in, so I'll include a login system with registration. This means setting up user sessions to keep track of logged-in users.\n\nFor the database, I'll need tables for users, products, orders, order items, and categories. This structure will help manage data efficiently. I'll also think about how to display products categorically, making it easier for users to browse.\n\nWhen a user adds a product to their cart, I'll use PHP sessions to store the cart items temporarily. This way, the cart persists across page reloads until the user checks out or clears it.\n\nMoving on to checkout, after adding items, users should review their order. Here, I'll calculate the total price by summing up each item's cost. Then, upon placing the order, I'll insert the order details into the orders table and each item into order_items for tracking purposes.\n\nSecurity is a big concern. I'll implement prepared statements with PDO to prevent SQL injection. Also, sanitizing inputs will help avoid other vulnerabilities.\n\nFinally, after a successful purchase, redirecting the user to a thank you page makes sense. This provides feedback and completes the transaction process.\n\nI should also mention testing considerations, like ensuring all functionalities work smoothly and that security measures are robust. Maybe suggest using different databases or expanding features for future enhancements.\n</think>\n\nHere\u2019s an example of how to create a purchase functionality using PHP:\n\n### Step 1: Create a Database\nFirst, you need to set up your database with tables for users, products, orders, and order items.\n\n```sql\nCREATE TABLE `users` (\n    `id` INT AUTO_INCREMENT PRIMARY KEY,\n    `username` VARCHAR(50) UNIQUE NOT NULL,\n    `email` VARCHAR(100) UNIQUE NOT NULL,\n    `password` VARCHAR(255) NOT NULL,\n    `created_at` DATETIME DEFAULT CURRENT_TIMESTAMP\n);\n\nCREATE TABLE `products` (\n    `id` INT AUTO_INCREMENT PRIMARY KEY,\n    `name` VARCHAR(100) NOT NULL,\n    `description` TEXT NOT NULL,\n    `price` DECIMAL(10, 2) NOT NULL,\n    `stock` INT NOT NULL,\n    `category_id` INT NOT NULL,\n    `created_at` DATETIME DEFAULT CURRENT_TIMESTAMP\n);\n\nCREATE TABLE `orders` (\n    `id` INT AUTO_INCREMENT PRIMARY KEY,\n    `user_id` INT NOT NULL,\n    `total_price` DECIMAL(10, 2) NOT NULL,\n    `order_status` VARCHAR(50) NOT NULL,\n    `created_at` DATETIME DEFAULT CURRENT_TIMESTAMP,\n    FOREIGN KEY (`user_id`) REFERENCES `users`(`id`)\n);\n\nCREATE TABLE `order_items` (\n    `id` INT AUTO_INCREMENT PRIMARY KEY,\n    `order_id` INT NOT NULL,\n    `product_id` INT NOT NULL,\n    `quantity` INT NOT NULL,\n    `price` DECIMAL(10, 2) NOT NULL,\n    FOREIGN KEY (`order_id`) REFERENCES `orders`(`id`),\n    FOREIGN KEY (`product_id`) REFERENCES `products`(`id`)\n);\n\nCREATE TABLE `categories` (\n    `id` INT AUTO_INCREMENT PRIMARY KEY,\n    `name` VARCHAR(50) NOT NULL\n);\n```\n\n### Step 2: User Authentication\n\n#### Login Page (login.php)\n```php\n<?php\nsession_start();\nrequire 'db_connection.php';\n\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    $username = $_POST['username'];\n    $password = $_POST['password'];\n\n    $stmt = $conn->prepare(\"SELECT * FROM users WHERE username = ?\");\n    $stmt->execute([$username]);\n    $user = $stmt->fetch(PDO::FETCH_ASSOC);\n\n    if ($user && password_verify($password, $user['password'])) {\n        $_SESSION['user'] = $user;\n        header('Location: index.php');\n        exit();\n    } else {\n        $error = \"Invalid username or password!\";\n    }\n}\n?>\n```\n\n#### Registration Page (register.php)\n```php\n<?php\nsession_start();\nrequire 'db_connection.php';\n\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    $username = $_POST['username'];\n    $email = $_POST['email'];\n    $password = password_hash($_POST['password'], PASSWORD_DEFAULT);\n\n    try {\n        $stmt = $conn->prepare(\"INSERT INTO users (username, email, password) VALUES (?, ?, ?)\");\n        $stmt->execute([$username, $email, $password]);\n        header('Location: login.php');\n        exit();\n    } catch (PDOException $e) {\n        $error = \"Username or email already exists!\";\n    }\n}\n?>\n```\n\n### Step 3: Display Products\n\n#### Index Page (index.php)\n```php\n<?php\nsession_start();\nrequire 'db_connection.php';\n\nif (!isset($_SESSION['user'])) {\n    header('Location: login.php');\n    exit();\n}\n\n// Get all products\n$stmt = $conn->query(\"SELECT * FROM products\");\n$products = $stmt->fetchAll(PDO::FETCH_ASSOC);\n\n// Get categories for filtering\n$stmt_categories = $conn->query(\"SELECT * FROM categories\");\n(categories) = $stmt_categories->fetchAll(PDO::FETCH_ASSOC);\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Product List</title>\n</head>\n<body>\n    <?php if (!empty($categories)): ?>\n        <select name=\"category_filter\">\n            <option value=\"\">All Categories</option>\n            <?php foreach ($categories as $category): ?>\n                <option value=\"<?php echo $category['id']; ?>\"><?php echo $category['name']; ?></option>\n            <?php endforeach; ?>\n        </select>\n    <?php endif; ?>\n\n    <?php foreach ($products as $product): ?>\n        <div class=\"product-item\">\n            <h2><?php echo $product['name']; ?></h2>\n            <p><?php echo $product['description']; ?></p>\n            <p>Price: $<?php echo number_format($product['price'], 2); ?></p>\n            <?php if ($product['stock'] > 0): ?>\n                <form action=\"add_to_cart.php\" method=\"POST\">\n                    <input type=\"hidden\" name=\"product_id\" value=\"<?php echo $product['id']; ?>\">\n                    <input type=\"number\" name=\"quantity\" min=\"1\" max=\"<?php echo $product['stock']; ?>\" value=\"1\">\n                    <button type=\"submit\">Add to Cart</button>\n                </form>\n            <?php else: ?>\n                <p>Out of Stock</p>\n            <?php endif; ?>\n        </div>\n    <?php endforeach; ?>\n\n    <!-- Add pagination if needed -->\n</body>\n</html>\n```\n\n### Step 4: Add to Cart Functionality\n\n#### add_to_cart.php\n```php\n<?php\nsession_start();\nrequire 'db_connection.php';\n\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    $product_id = $_POST['product_id'];\n    $quantity = (int)$_POST['quantity'];\n\n    // Get product details\n    $stmt = $conn->prepare(\"SELECT * FROM products WHERE id = ?\");\n    $stmt->execute([$product_id]);\n    $product = $stmt->fetch(PDO::FETCH_ASSOC);\n\n    if ($product && $product['stock'] >= $quantity) {\n        // Add to cart (stored in session)\n        if (!isset($_SESSION['cart'])) {\n            $_SESSION['cart'] = array();\n        }\n\n        $item = array(\n            'id' => $product_id,\n            'name' => $product['name'],\n            'price' => $product['price'],\n            'quantity' => $quantity\n        );\n\n        $_SESSION['cart'][] = $item;\n\n        header('Location: index.php');\n        exit();\n    }\n}\n?>\n```\n\n### Step 5: View Cart and Checkout\n\n#### cart.php\n```php\n<?php\nsession_start();\nrequire 'db_connection.php';\n\nif (!isset($_SESSION['user'])) {\n    header('Location: login.php');\n    exit();\n}\n\n// Calculate total price\n$total = 0;\nforeach ($_SESSION['cart'] as $item) {\n    $total += ($item['price'] * $item['quantity']);\n}\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Shopping Cart</title>\n</head>\n<body>\n    <?php if (!empty($_SESSION['cart'])): ?>\n        <h2>Your Shopping Cart</h2>\n        <table>\n            <tr>\n                <th>Product Name</th>\n                <th>Quantity</th>\n                <th>Price</th>\n                <th>Total</th>\n            </tr>\n            <?php foreach ($_SESSION['cart'] as $item): ?>\n                <tr>\n                    <td><?php echo $item['name']; ?></td>\n                    <td><?php echo $item['quantity']; ?></td>\n                    <td>$<?php echo number_format($item['price'], 2); ?></td>\n                    <td>$<?php echo number_format($item['price'] * $item['quantity'], 2); ?></td>\n                </tr>\n            <?php endforeach; ?>\n        </table>\n        <h3>Total: $<?php echo number_format($total, 2); ?></h3>\n        <a href=\"checkout.php\">Proceed to Checkout</a> |\n        <a href=\"index.php\">Continue Shopping</a>\n    <?php else: ?>\n        <p>Your cart is empty!</p>\n        <a href=\"index.php\">Go back to shopping</a>\n    <?php endif; ?>\n\n    <!-- Add a button to clear the cart -->\n    <?php if (!empty($_SESSION['cart'])): ?>\n        <form action=\"clear_cart.php\" method=\"POST\">\n            <button type=\"submit\">Clear Cart</button>\n        </form>\n    <?php endif; ?>\n</body>\n</html>\n```\n\n### Step 6: Checkout and Order Confirmation\n\n#### checkout.php\n```php\n<?php\nsession_start();\nrequire 'db_connection.php';\n\nif (!isset($_SESSION['user'])) {\n    header('Location: login.php');\n    exit();\n}\n\n// Calculate total price\n$total = 0;\nforeach ($_SESSION['cart'] as $item) {\n    $total += ($item['price'] * $item['quantity']);\n}\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Checkout</title>\n</head>\n<body>\n    <?php if (!empty($_SESSION['cart'])): ?>\n        <h2>Review Your Order</h2>\n        <table>\n            <tr>\n                <th>Product Name</th>\n                <th>Quantity</th>\n                <th>Price</th>\n                <th>Total</th>\n            </tr>\n            <?php foreach ($_SESSION['cart'] as $item): ?>\n                <tr>\n                    <td><?php echo $item['name']; ?></td>\n                    <td><?php echo $item['quantity']; ?></td>\n                    <td>$<?php echo number_format($item['price'], 2); ?></td>\n                    <td>$<?php echo number_format($item['price'] * $item['quantity'], 2); ?></td>\n                </tr>\n            <?php endforeach; ?>\n        </table>\n        <h3>Total: $<?php echo number_format($total, 2); ?></h3>\n\n        <!-- Payment Form -->\n        <form action=\"process_order.php\" method=\"POST\">\n            <input type=\"hidden\" name=\"total_price\" value=\"<?php echo $total; ?>\">\n            <button type=\"submit\">Place Order</button>\n        </form>\n    <?php else: ?>\n        <p>Your cart is empty!</p>\n        <a href=\"index.php\">Go back to shopping</a>\n    <?php endif; ?>\n</body>\n</html>\n```\n\n### Step 7: Process Order\n\n#### process_order.php\n```php\n<?php\nsession_start();\nrequire 'db_connection.php';\n\nif (!isset($_SESSION['user'])) {\n    header('Location: login.php');\n    exit();\n}\n\n// Get total price from form\n$total_price = (float)$_POST['total_price'];\n\ntry {\n    // Insert order into orders table\n    $stmt_order = $conn->prepare(\"INSERT INTO orders (user_id, total_price, order_status) VALUES (?, ?, 'pending')\");\n    $stmt_order->execute([$_SESSION['user']['id'], $total_price]);\n\n    $order_id = $conn->lastInsertId();\n\n    // Insert order items into order_items table\n    foreach ($_SESSION['cart'] as $item) {\n        $stmt_item = $conn->prepare(\"INSERT INTO order_items (order_id, product_id, quantity, price) VALUES (?, ?, ?, ?)\");\n        $stmt_item->execute([$order_id, $item['id'], $item['quantity'], $item['price']]);\n    }\n\n    // Clear the cart\n    unset($_SESSION['cart']);\n\n    header('Location: thank_you.php');\n} catch (PDOException $e) {\n    die(\"Error processing order: \" . $e->getMessage());\n}\n?>\n```\n\n### Step 8: Thank You Page\n\n#### thank_you.php\n```php\n<?php\nsession_start();\nrequire 'db_connection.php';\n\nif (!isset($_SESSION['user'])) {\n    header('Location: login.php');\n    exit();\n}\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Thank You</title>\n</head>\n<body>\n    <h2>Thank you for your purchase!</h2>\n    <p>Your order has been successfully placed. We will notify you once it's shipped.</p>\n    <a href=\"index.php\">Continue Shopping</a>\n</body>\n</html>\n```\n\n### Step 9: Clear Cart\n\n#### clear_cart.php\n```php\n<?php\nsession_start();\nunset($_SESSION['cart']);\nheader('Location: cart.php');\nexit();\n?>\n```\n\n### Step 10: Database Connection\n\n#### db_connection.php\n```php\n<?php\n$host = 'localhost';\n$dbname = 'your_database_name';\n$username = 'root';\n$password = '';\n\ntry {\n    $conn = new PDO(\"mysql:host=$host;dbname=$dbname\", $username, $password);\n    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);\n} catch (PDOException $e) {\n    die(\"Connection failed: \" . $e->getMessage());\n}\n?>\n```\n\n### Explanation:\n\n1. **User Authentication**: Users can log in or register before making purchases.\n2. **Product Display**: Products are displayed with their details and categories for filtering.\n3. **Add to Cart**: Users can add products to their cart with the desired quantity.\n4. **Shopping Cart**: Shows the items in the user's cart with total prices.\n5. **Checkout Process**: Reviews the order and processes it, storing the order in the database.\n6. **Order Confirmation**: Thanks the user for their purchase and redirects them back to shopping.\n\nThis is a basic implementation and can be extended with additional features such as:\n- Payment integration (e.g., Stripe, PayPal)\n- Shipping address details\n- Order tracking\n- User dashboard with order history\n- Product search functionality\n- More robust error handling\n- Secure password storage\n\nRemember to secure your application by sanitizing inputs, using prepared statements, and implementing proper error handling.", "code_blocks": [null, "```php\n<?php\nsession_start();\nrequire 'db_connection.php';\n\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    $username = $_POST['username'];\n    $password = $_POST['password'];\n\n    $stmt = $conn->prepare(\"SELECT * FROM users WHERE username = ?\");\n    $stmt->execute([$username]);\n    $user = $stmt->fetch(PDO::FETCH_ASSOC);\n\n    if ($user && password_verify($password, $user['password'])) {\n        $_SESSION['user'] = $user;\n        header('Location: index.php');\n        exit();\n    } else {\n        $error = \"Invalid username or password!\";\n    }\n}\n?>\n```", "```php\n<?php\nsession_start();\nrequire 'db_connection.php';\n\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    $username = $_POST['username'];\n    $email = $_POST['email'];\n    $password = password_hash($_POST['password'], PASSWORD_DEFAULT);\n\n    try {\n        $stmt = $conn->prepare(\"INSERT INTO users (username, email, password) VALUES (?, ?, ?)\");\n        $stmt->execute([$username, $email, $password]);\n        header('Location: login.php');\n        exit();\n    } catch (PDOException $e) {\n        $error = \"Username or email already exists!\";\n    }\n}\n?>\n```", "```php\n<?php\nsession_start();\nrequire 'db_connection.php';\n\nif (!isset($_SESSION['user'])) {\n    header('Location: login.php');\n    exit();\n}\n\n// Get all products\n$stmt = $conn->query(\"SELECT * FROM products\");\n$products = $stmt->fetchAll(PDO::FETCH_ASSOC);\n\n// Get categories for filtering\n$stmt_categories = $conn->query(\"SELECT * FROM categories\");\n(categories) = $stmt_categories->fetchAll(PDO::FETCH_ASSOC);\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Product List</title>\n</head>\n<body>\n    <?php if (!empty($categories)): ?>\n        <select name=\"category_filter\">\n            <option value=\"\">All Categories</option>\n            <?php foreach ($categories as $category): ?>\n                <option value=\"<?php echo $category['id']; ?>\"><?php echo $category['name']; ?></option>\n            <?php endforeach; ?>\n        </select>\n    <?php endif; ?>\n\n    <?php foreach ($products as $product): ?>\n        <div class=\"product-item\">\n            <h2><?php echo $product['name']; ?></h2>\n            <p><?php echo $product['description']; ?></p>\n            <p>Price: $<?php echo number_format($product['price'], 2); ?></p>\n            <?php if ($product['stock'] > 0): ?>\n                <form action=\"add_to_cart.php\" method=\"POST\">\n                    <input type=\"hidden\" name=\"product_id\" value=\"<?php echo $product['id']; ?>\">\n                    <input type=\"number\" name=\"quantity\" min=\"1\" max=\"<?php echo $product['stock']; ?>\" value=\"1\">\n                    <button type=\"submit\">Add to Cart</button>\n                </form>\n            <?php else: ?>\n                <p>Out of Stock</p>\n            <?php endif; ?>\n        </div>\n    <?php endforeach; ?>\n\n    <!-- Add pagination if needed -->\n</body>\n</html>\n```", "```php\n<?php\nsession_start();\nrequire 'db_connection.php';\n\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    $product_id = $_POST['product_id'];\n    $quantity = (int)$_POST['quantity'];\n\n    // Get product details\n    $stmt = $conn->prepare(\"SELECT * FROM products WHERE id = ?\");\n    $stmt->execute([$product_id]);\n    $product = $stmt->fetch(PDO::FETCH_ASSOC);\n\n    if ($product && $product['stock'] >= $quantity) {\n        // Add to cart (stored in session)\n        if (!isset($_SESSION['cart'])) {\n            $_SESSION['cart'] = array();\n        }\n\n        $item = array(\n            'id' => $product_id,\n            'name' => $product['name'],\n            'price' => $product['price'],\n            'quantity' => $quantity\n        );\n\n        $_SESSION['cart'][] = $item;\n\n        header('Location: index.php');\n        exit();\n    }\n}\n?>\n```", "```php\n<?php\nsession_start();\nrequire 'db_connection.php';\n\nif (!isset($_SESSION['user'])) {\n    header('Location: login.php');\n    exit();\n}\n\n// Calculate total price\n$total = 0;\nforeach ($_SESSION['cart'] as $item) {\n    $total += ($item['price'] * $item['quantity']);\n}\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Shopping Cart</title>\n</head>\n<body>\n    <?php if (!empty($_SESSION['cart'])): ?>\n        <h2>Your Shopping Cart</h2>\n        <table>\n            <tr>\n                <th>Product Name</th>\n                <th>Quantity</th>\n                <th>Price</th>\n                <th>Total</th>\n            </tr>\n            <?php foreach ($_SESSION['cart'] as $item): ?>\n                <tr>\n                    <td><?php echo $item['name']; ?></td>\n                    <td><?php echo $item['quantity']; ?></td>\n                    <td>$<?php echo number_format($item['price'], 2); ?></td>\n                    <td>$<?php echo number_format($item['price'] * $item['quantity'], 2); ?></td>\n                </tr>\n            <?php endforeach; ?>\n        </table>\n        <h3>Total: $<?php echo number_format($total, 2); ?></h3>\n        <a href=\"checkout.php\">Proceed to Checkout</a> |\n        <a href=\"index.php\">Continue Shopping</a>\n    <?php else: ?>\n        <p>Your cart is empty!</p>\n        <a href=\"index.php\">Go back to shopping</a>\n    <?php endif; ?>\n\n    <!-- Add a button to clear the cart -->\n    <?php if (!empty($_SESSION['cart'])): ?>\n        <form action=\"clear_cart.php\" method=\"POST\">\n            <button type=\"submit\">Clear Cart</button>\n        </form>\n    <?php endif; ?>\n</body>\n</html>\n```", "```php\n<?php\nsession_start();\nrequire 'db_connection.php';\n\nif (!isset($_SESSION['user'])) {\n    header('Location: login.php');\n    exit();\n}\n\n// Calculate total price\n$total = 0;\nforeach ($_SESSION['cart'] as $item) {\n    $total += ($item['price'] * $item['quantity']);\n}\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Checkout</title>\n</head>\n<body>\n    <?php if (!empty($_SESSION['cart'])): ?>\n        <h2>Review Your Order</h2>\n        <table>\n            <tr>\n                <th>Product Name</th>\n                <th>Quantity</th>\n                <th>Price</th>\n                <th>Total</th>\n            </tr>\n            <?php foreach ($_SESSION['cart'] as $item): ?>\n                <tr>\n                    <td><?php echo $item['name']; ?></td>\n                    <td><?php echo $item['quantity']; ?></td>\n                    <td>$<?php echo number_format($item['price'], 2); ?></td>\n                    <td>$<?php echo number_format($item['price'] * $item['quantity'], 2); ?></td>\n                </tr>\n            <?php endforeach; ?>\n        </table>\n        <h3>Total: $<?php echo number_format($total, 2); ?></h3>\n\n        <!-- Payment Form -->\n        <form action=\"process_order.php\" method=\"POST\">\n            <input type=\"hidden\" name=\"total_price\" value=\"<?php echo $total; ?>\">\n            <button type=\"submit\">Place Order</button>\n        </form>\n    <?php else: ?>\n        <p>Your cart is empty!</p>\n        <a href=\"index.php\">Go back to shopping</a>\n    <?php endif; ?>\n</body>\n</html>\n```", "```php\n<?php\nsession_start();\nrequire 'db_connection.php';\n\nif (!isset($_SESSION['user'])) {\n    header('Location: login.php');\n    exit();\n}\n\n// Get total price from form\n$total_price = (float)$_POST['total_price'];\n\ntry {\n    // Insert order into orders table\n    $stmt_order = $conn->prepare(\"INSERT INTO orders (user_id, total_price, order_status) VALUES (?, ?, 'pending')\");\n    $stmt_order->execute([$_SESSION['user']['id'], $total_price]);\n\n    $order_id = $conn->lastInsertId();\n\n    // Insert order items into order_items table\n    foreach ($_SESSION['cart'] as $item) {\n        $stmt_item = $conn->prepare(\"INSERT INTO order_items (order_id, product_id, quantity, price) VALUES (?, ?, ?, ?)\");\n        $stmt_item->execute([$order_id, $item['id'], $item['quantity'], $item['price']]);\n    }\n\n    // Clear the cart\n    unset($_SESSION['cart']);\n\n    header('Location: thank_you.php');\n} catch (PDOException $e) {\n    die(\"Error processing order: \" . $e->getMessage());\n}\n?>\n```", "```php\n<?php\nsession_start();\nrequire 'db_connection.php';\n\nif (!isset($_SESSION['user'])) {\n    header('Location: login.php');\n    exit();\n}\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Thank You</title>\n</head>\n<body>\n    <h2>Thank you for your purchase!</h2>\n    <p>Your order has been successfully placed. We will notify you once it's shipped.</p>\n    <a href=\"index.php\">Continue Shopping</a>\n</body>\n</html>\n```", "```php\n<?php\nsession_start();\nunset($_SESSION['cart']);\nheader('Location: cart.php');\nexit();\n?>\n```", "```php\n<?php\n$host = 'localhost';\n$dbname = 'your_database_name';\n$username = 'root';\n$password = '';\n\ntry {\n    $conn = new PDO(\"mysql:host=$host;dbname=$dbname\", $username, $password);\n    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);\n} catch (PDOException $e) {\n    die(\"Connection failed: \" . $e->getMessage());\n}\n?>\n```"]}
