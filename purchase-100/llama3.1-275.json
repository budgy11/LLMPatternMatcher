{"prompt": "Create a purchase functionality using php", "llm_output": "Here's an example of a simple purchase functionality using PHP. This example will include the following features:\n\n1. User registration and login\n2. Product catalog with add to cart functionality\n3. Order placement and payment processing (mocked payment gateways)\n\n**Note:** For production use, you'll need to integrate this with your own database, authentication mechanisms, and payment gateway APIs.\n\n### **Database Setup**\n\nCreate a database with the following schema:\n```sql\nCREATE TABLE users (\n    id INT PRIMARY KEY AUTO_INCREMENT,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    password VARCHAR(255)\n);\n\nCREATE TABLE products (\n    id INT PRIMARY KEY AUTO_INCREMENT,\n    name VARCHAR(100),\n    description TEXT,\n    price DECIMAL(10,2)\n);\n\nCREATE TABLE carts (\n    id INT PRIMARY KEY AUTO_INCREMENT,\n    user_id INT,\n    product_id INT,\n    quantity INT\n);\n```\n### **PHP Code**\n\n**`config.php`:**\n```php\n<?php\n\ndefine('DB_HOST', 'localhost');\ndefine('DB_USER', 'root');\ndefine('DB_PASSWORD', '');\ndefine('DB_NAME', 'store');\n\n?>\n```\n\n**`db.php`:**\n```php\n<?php\n\nrequire_once 'config.php';\n\nfunction connect() {\n    $conn = new PDO(\"mysql:host=\".DB_HOST.\";dbname=\".DB_NAME, DB_USER, DB_PASSWORD);\n    return $conn;\n}\n\nfunction disconnect($conn) {\n    $conn = null;\n}\n?>\n```\n\n**`user.php`:**\n```php\n<?php\n\nclass User {\n    private $db;\n\n    function __construct() {\n        $this->db = connect();\n    }\n\n    function register($username, $email, $password) {\n        $stmt = $this->db->prepare(\"INSERT INTO users (username, email, password) VALUES (?, ?, ?)\");\n        $stmt->execute(array($username, $email, password_hash($password, PASSWORD_DEFAULT)));\n        return $this->db->lastInsertId();\n    }\n\n    function login($username, $password) {\n        $stmt = $this->db->prepare(\"SELECT * FROM users WHERE username = ?\");\n        $stmt->execute(array($username));\n        $user = $stmt->fetch();\n        if ($user && password_verify($password, $user['password'])) {\n            return $user;\n        }\n        return null;\n    }\n}\n\n?>\n```\n\n**`product.php`:**\n```php\n<?php\n\nclass Product {\n    private $db;\n\n    function __construct() {\n        $this->db = connect();\n    }\n\n    function getAllProducts() {\n        $stmt = $this->db->prepare(\"SELECT * FROM products\");\n        $stmt->execute();\n        return $stmt->fetchAll();\n    }\n\n    function getProduct($id) {\n        $stmt = $this->db->prepare(\"SELECT * FROM products WHERE id = ?\");\n        $stmt->execute(array($id));\n        return $stmt->fetch();\n    }\n}\n\n?>\n```\n\n**`cart.php`:**\n```php\n<?php\n\nclass Cart {\n    private $user_id;\n    private $product_id;\n    private $quantity;\n\n    function __construct() {\n        $this->db = connect();\n    }\n\n    function addProduct($user_id, $product_id, $quantity) {\n        $stmt = $this->db->prepare(\"INSERT INTO carts (user_id, product_id, quantity) VALUES (?, ?, ?)\");\n        $stmt->execute(array($user_id, $product_id, $quantity));\n        return $this->db->lastInsertId();\n    }\n\n    function getCartProducts() {\n        $stmt = $this->db->prepare(\"SELECT * FROM carts WHERE user_id = ?\");\n        $stmt->execute(array($_SESSION['user_id']));\n        return $stmt->fetchAll();\n    }\n}\n\n?>\n```\n\n**`order.php`:**\n```php\n<?php\n\nclass Order {\n    private $user_id;\n    private $cart;\n\n    function __construct() {\n        $this->db = connect();\n        $this->cart = new Cart();\n    }\n\n    function placeOrder($user_id) {\n        // Payment processing (mocked for demo purposes)\n        if ($_SESSION['payment_method'] == 'paypal') {\n            // PayPal payment gateway code here\n        } elseif ($_SESSION['payment_method'] == 'stripe') {\n            // Stripe payment gateway code here\n        }\n\n        // Save order to database\n        $stmt = $this->db->prepare(\"INSERT INTO orders (user_id) VALUES (?)\");\n        $stmt->execute(array($user_id));\n        return $this->db->lastInsertId();\n    }\n}\n\n?>\n```\n\n**`index.php`:**\n```php\n<?php\n\nrequire_once 'config.php';\nrequire_once 'db.php';\nrequire_once 'user.php';\nrequire_once 'product.php';\nrequire_once 'cart.php';\nrequire_once 'order.php';\n\nif (isset($_SESSION['logged_in'])) {\n    // User is logged in, display products and cart\n    $products = new Product();\n    $cart = new Cart();\n\n    echo '<h1>Product Catalog</h1>';\n    echo '<ul>';\n    foreach ($products->getAllProducts() as $product) {\n        echo '<li>' . $product['name'] . ' - ' . $product['price'] . '</li>';\n        echo '<button class=\"add-to-cart\" data-id=\"' . $product['id'] . '\">Add to Cart</button>';\n    }\n    echo '</ul>';\n\n    echo '<h1>Cart</h1>';\n    echo '<table>';\n    foreach ($cart->getCartProducts() as $product) {\n        echo '<tr><td>' . $product['name'] . '</td><td>' . $product['quantity'] . '</td></tr>';\n    }\n    echo '</table>';\n\n    // Place order button\n    if (isset($_SESSION['user_id'])) {\n        echo '<button class=\"place-order\">Place Order</button>';\n    }\n} else {\n    // User is not logged in, display login form\n    echo '<h1>Login Form</h1>';\n    echo '<form action=\"login.php\" method=\"post\">';\n    echo '<label>Username:</label><br>';\n    echo '<input type=\"text\" name=\"username\"><br>';\n    echo '<label>Password:</label><br>';\n    echo '<input type=\"password\" name=\"password\"><br>';\n    echo '<button type=\"submit\">Login</button>';\n    echo '</form>';\n}\n?>\n\n<script>\n    $(document).ready(function() {\n        $('.add-to-cart').click(function() {\n            var productId = $(this).data('id');\n            $.ajax({\n                type: 'POST',\n                url: 'cart.php',\n                data: {action: 'addProduct', userId: <?= $_SESSION['user_id'] ?>, productId: productId},\n                success: function(response) {\n                    console.log(response);\n                }\n            });\n        });\n\n        $('.place-order').click(function() {\n            var userId = <?= $_SESSION['user_id'] ?>;\n            $.ajax({\n                type: 'POST',\n                url: 'order.php',\n                data: {action: 'placeOrder', userId: userId},\n                success: function(response) {\n                    console.log(response);\n                }\n            });\n        });\n    });\n</script>\n```\n\n**`login.php`:**\n```php\n<?php\n\nrequire_once 'config.php';\nrequire_once 'db.php';\nrequire_once 'user.php';\n\nif (isset($_POST['username']) && isset($_POST['password'])) {\n    $username = $_POST['username'];\n    $password = $_POST['password'];\n\n    $user = new User();\n    if ($user->login($username, $password)) {\n        $_SESSION['logged_in'] = true;\n        $_SESSION['user_id'] = $user->id;\n        header('Location: index.php');\n        exit;\n    } else {\n        echo 'Invalid username or password';\n    }\n}\n?>\n```\n\nThis is a basic implementation of purchase functionality using PHP. It includes user registration and login, product catalog with add to cart functionality, and order placement with payment processing (mocked for demo purposes). You'll need to integrate this with your own database, authentication mechanisms, and payment gateway APIs for production use.", "code_blocks": [null, "```php\n<?php\n\ndefine('DB_HOST', 'localhost');\ndefine('DB_USER', 'root');\ndefine('DB_PASSWORD', '');\ndefine('DB_NAME', 'store');\n\n?>\n```", "```php\n<?php\n\nrequire_once 'config.php';\n\nfunction connect() {\n    $conn = new PDO(\"mysql:host=\".DB_HOST.\";dbname=\".DB_NAME, DB_USER, DB_PASSWORD);\n    return $conn;\n}\n\nfunction disconnect($conn) {\n    $conn = null;\n}\n?>\n```", "```php\n<?php\n\nclass User {\n    private $db;\n\n    function __construct() {\n        $this->db = connect();\n    }\n\n    function register($username, $email, $password) {\n        $stmt = $this->db->prepare(\"INSERT INTO users (username, email, password) VALUES (?, ?, ?)\");\n        $stmt->execute(array($username, $email, password_hash($password, PASSWORD_DEFAULT)));\n        return $this->db->lastInsertId();\n    }\n\n    function login($username, $password) {\n        $stmt = $this->db->prepare(\"SELECT * FROM users WHERE username = ?\");\n        $stmt->execute(array($username));\n        $user = $stmt->fetch();\n        if ($user && password_verify($password, $user['password'])) {\n            return $user;\n        }\n        return null;\n    }\n}\n\n?>\n```", "```php\n<?php\n\nclass Product {\n    private $db;\n\n    function __construct() {\n        $this->db = connect();\n    }\n\n    function getAllProducts() {\n        $stmt = $this->db->prepare(\"SELECT * FROM products\");\n        $stmt->execute();\n        return $stmt->fetchAll();\n    }\n\n    function getProduct($id) {\n        $stmt = $this->db->prepare(\"SELECT * FROM products WHERE id = ?\");\n        $stmt->execute(array($id));\n        return $stmt->fetch();\n    }\n}\n\n?>\n```", "```php\n<?php\n\nclass Cart {\n    private $user_id;\n    private $product_id;\n    private $quantity;\n\n    function __construct() {\n        $this->db = connect();\n    }\n\n    function addProduct($user_id, $product_id, $quantity) {\n        $stmt = $this->db->prepare(\"INSERT INTO carts (user_id, product_id, quantity) VALUES (?, ?, ?)\");\n        $stmt->execute(array($user_id, $product_id, $quantity));\n        return $this->db->lastInsertId();\n    }\n\n    function getCartProducts() {\n        $stmt = $this->db->prepare(\"SELECT * FROM carts WHERE user_id = ?\");\n        $stmt->execute(array($_SESSION['user_id']));\n        return $stmt->fetchAll();\n    }\n}\n\n?>\n```", "```php\n<?php\n\nclass Order {\n    private $user_id;\n    private $cart;\n\n    function __construct() {\n        $this->db = connect();\n        $this->cart = new Cart();\n    }\n\n    function placeOrder($user_id) {\n        // Payment processing (mocked for demo purposes)\n        if ($_SESSION['payment_method'] == 'paypal') {\n            // PayPal payment gateway code here\n        } elseif ($_SESSION['payment_method'] == 'stripe') {\n            // Stripe payment gateway code here\n        }\n\n        // Save order to database\n        $stmt = $this->db->prepare(\"INSERT INTO orders (user_id) VALUES (?)\");\n        $stmt->execute(array($user_id));\n        return $this->db->lastInsertId();\n    }\n}\n\n?>\n```", "```php\n<?php\n\nrequire_once 'config.php';\nrequire_once 'db.php';\nrequire_once 'user.php';\nrequire_once 'product.php';\nrequire_once 'cart.php';\nrequire_once 'order.php';\n\nif (isset($_SESSION['logged_in'])) {\n    // User is logged in, display products and cart\n    $products = new Product();\n    $cart = new Cart();\n\n    echo '<h1>Product Catalog</h1>';\n    echo '<ul>';\n    foreach ($products->getAllProducts() as $product) {\n        echo '<li>' . $product['name'] . ' - ' . $product['price'] . '</li>';\n        echo '<button class=\"add-to-cart\" data-id=\"' . $product['id'] . '\">Add to Cart</button>';\n    }\n    echo '</ul>';\n\n    echo '<h1>Cart</h1>';\n    echo '<table>';\n    foreach ($cart->getCartProducts() as $product) {\n        echo '<tr><td>' . $product['name'] . '</td><td>' . $product['quantity'] . '</td></tr>';\n    }\n    echo '</table>';\n\n    // Place order button\n    if (isset($_SESSION['user_id'])) {\n        echo '<button class=\"place-order\">Place Order</button>';\n    }\n} else {\n    // User is not logged in, display login form\n    echo '<h1>Login Form</h1>';\n    echo '<form action=\"login.php\" method=\"post\">';\n    echo '<label>Username:</label><br>';\n    echo '<input type=\"text\" name=\"username\"><br>';\n    echo '<label>Password:</label><br>';\n    echo '<input type=\"password\" name=\"password\"><br>';\n    echo '<button type=\"submit\">Login</button>';\n    echo '</form>';\n}\n?>\n\n<script>\n    $(document).ready(function() {\n        $('.add-to-cart').click(function() {\n            var productId = $(this).data('id');\n            $.ajax({\n                type: 'POST',\n                url: 'cart.php',\n                data: {action: 'addProduct', userId: <?= $_SESSION['user_id'] ?>, productId: productId},\n                success: function(response) {\n                    console.log(response);\n                }\n            });\n        });\n\n        $('.place-order').click(function() {\n            var userId = <?= $_SESSION['user_id'] ?>;\n            $.ajax({\n                type: 'POST',\n                url: 'order.php',\n                data: {action: 'placeOrder', userId: userId},\n                success: function(response) {\n                    console.log(response);\n                }\n            });\n        });\n    });\n</script>\n```", "```php\n<?php\n\nrequire_once 'config.php';\nrequire_once 'db.php';\nrequire_once 'user.php';\n\nif (isset($_POST['username']) && isset($_POST['password'])) {\n    $username = $_POST['username'];\n    $password = $_POST['password'];\n\n    $user = new User();\n    if ($user->login($username, $password)) {\n        $_SESSION['logged_in'] = true;\n        $_SESSION['user_id'] = $user->id;\n        header('Location: index.php');\n        exit;\n    } else {\n        echo 'Invalid username or password';\n    }\n}\n?>\n```"]}
