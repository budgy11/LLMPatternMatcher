{"prompt": "Create a purchase functionality using php", "llm_output": "Here is an example of a basic purchase functionality in PHP:\n\n**Note:** This is a simplified example and does not include any security measures, error handling, or database interactions. In a real-world application, you would need to add these features to ensure the integrity and security of your system.\n\n**purchase.php**\n```php\n<?php\n\n// Set up the configuration\n$cart = array(); // array to store cart items\n$totalCost = 0; // total cost of items in cart\n$discount = 0; // discount percentage (optional)\n\n// Function to add item to cart\nfunction addItemToCart($itemId, $itemName, $itemPrice) {\n    global $cart;\n    global $totalCost;\n\n    $cart[$itemId] = array('name' => $itemName, 'price' => $itemPrice);\n    $totalCost += $itemPrice;\n}\n\n// Function to remove item from cart\nfunction removeFromCart($itemId) {\n    global $cart;\n    global $totalCost;\n\n    if (isset($cart[$itemId])) {\n        unset($cart[$itemId]);\n        $totalCost -= $cart[$itemId]['price'];\n    }\n}\n\n// Function to calculate total cost with discount\nfunction calculateTotalCost() {\n    global $discount;\n    global $totalCost;\n\n    if ($discount > 0) {\n        return $totalCost * (1 - ($discount / 100));\n    } else {\n        return $totalCost;\n    }\n}\n\n// Function to process purchase\nfunction processPurchase() {\n    global $cart;\n    global $totalCost;\n\n    // Calculate total cost with discount\n    $totalCost = calculateTotalCost();\n\n    // Print out the cart contents and total cost\n    echo \"Your cart contains:\\n\";\n    foreach ($cart as $item) {\n        echo \"$item[name] - \\$\" . number_format($item['price'], 2) . \"\\n\";\n    }\n    echo \"Total: \\$$\" . number_format($totalCost, 2) . \"\\n\";\n\n    // Process payment (not implemented in this example)\n}\n\n// Test the functions\naddItemToCart(1, 'Item 1', 10.99);\naddItemToCart(2, 'Item 2', 5.99);\nremoveFromCart(1);\n\nprocessPurchase();\n\n?>\n```\nThis code defines four functions:\n\n* `addItemToCart()`: adds an item to the cart and updates the total cost.\n* `removeFromCart()`: removes an item from the cart and updates the total cost.\n* `calculateTotalCost()`: calculates the total cost of items in the cart, taking into account any discount percentage.\n* `processPurchase()`: prints out the contents of the cart and the total cost, simulating a payment processing step.\n\nYou can add items to the cart using `addItemToCart()` and remove them using `removeFromCart()`. The `calculateTotalCost()` function can be used to calculate the total cost with discount. Finally, calling `processPurchase()` will print out the cart contents and total cost.\n\n**Note:** This is a basic example and does not include any error handling or security measures. In a real-world application, you would need to add these features to ensure the integrity and security of your system.\n\nYou can use this code as a starting point for building a more complex e-commerce application.", "code_blocks": ["```php\n<?php\n\n// Set up the configuration\n$cart = array(); // array to store cart items\n$totalCost = 0; // total cost of items in cart\n$discount = 0; // discount percentage (optional)\n\n// Function to add item to cart\nfunction addItemToCart($itemId, $itemName, $itemPrice) {\n    global $cart;\n    global $totalCost;\n\n    $cart[$itemId] = array('name' => $itemName, 'price' => $itemPrice);\n    $totalCost += $itemPrice;\n}\n\n// Function to remove item from cart\nfunction removeFromCart($itemId) {\n    global $cart;\n    global $totalCost;\n\n    if (isset($cart[$itemId])) {\n        unset($cart[$itemId]);\n        $totalCost -= $cart[$itemId]['price'];\n    }\n}\n\n// Function to calculate total cost with discount\nfunction calculateTotalCost() {\n    global $discount;\n    global $totalCost;\n\n    if ($discount > 0) {\n        return $totalCost * (1 - ($discount / 100));\n    } else {\n        return $totalCost;\n    }\n}\n\n// Function to process purchase\nfunction processPurchase() {\n    global $cart;\n    global $totalCost;\n\n    // Calculate total cost with discount\n    $totalCost = calculateTotalCost();\n\n    // Print out the cart contents and total cost\n    echo \"Your cart contains:\\n\";\n    foreach ($cart as $item) {\n        echo \"$item[name] - \\$\" . number_format($item['price'], 2) . \"\\n\";\n    }\n    echo \"Total: \\$$\" . number_format($totalCost, 2) . \"\\n\";\n\n    // Process payment (not implemented in this example)\n}\n\n// Test the functions\naddItemToCart(1, 'Item 1', 10.99);\naddItemToCart(2, 'Item 2', 5.99);\nremoveFromCart(1);\n\nprocessPurchase();\n\n?>\n```"]}
