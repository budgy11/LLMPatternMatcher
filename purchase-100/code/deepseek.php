
<?php
session_start();
// Connect to your database
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "myDB";

$conn = new mysqli($servername, $username, $password, $dbname);
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}
?>


<!DOCTYPE html>
<html>
<head>
    <title>Products</title>
</head>
<body>
    <?php
    // Query to fetch products from database
    $sql = "SELECT id, name, price FROM products";
    $result = $conn->query($sql);
    
    if ($result->num_rows > 0) {
        while($row = $result->fetch_assoc()) {
            echo "<div class='product'>";
            echo "<h3>".$row['name']."</h3>";
            echo "<p>Price: \$".$row['price']."</p>";
            echo "<button onclick=\"addToCart(".$row['id'].")\">Add to Cart</button>";
            echo "</div>";
        }
    } else {
        echo "No products found";
    }
    ?>
    
    <script>
    function addToCart(productId) {
        // Use AJAX to add item to cart
        var xmlhttp = new XMLHttpRequest();
        xmlhttp.onreadystatechange = function() {
            if (xmlhttp.readyState == 4 && xmlhttp.status == 200) {
                // Update cart display
                showCart();
            }
        };
        xmlhttp.open("GET", "add_item.php?id=" + productId, true);
        xmlhttp.send();
    }
    
    function showCart() {
        var xmlhttp = new XMLHttpRequest();
        xmlhttp.onreadystatechange = function() {
            if (xmlhttp.readyState == 4 && xmlhttp.status == 200) {
                document.getElementById("cart").innerHTML = xmlhttp.responseText;
            }
        };
        xmlhttp.open("GET", "get_cart.php", true);
        xmlhttp.send();
    }
    
    // Show cart initially
    showCart();
    </script>
    
    <div id="cart"></div>
</body>
</html>


<?php
session_start();
include 'db_connection.php';

if (isset($_GET['id'])) {
    $productId = $_GET['id'];
    
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }
    
    if (array_key_exists($productId, $_SESSION['cart'])) {
        // Increment quantity
        $_SESSION['cart'][$productId]['quantity']++;
    } else {
        // Get product details
        $sql = "SELECT id, name, price FROM products WHERE id = ?";
        $stmt = $conn->prepare($sql);
        $stmt->bind_param("i", $productId);
        $stmt->execute();
        $result = $stmt->get_result();
        
        if ($result->num_rows > 0) {
            $product = $result->fetch_assoc();
            $_SESSION['cart'][$productId] = array(
                'id' => $product['id'],
                'name' => $product['name'],
                'price' => $product['price'],
                'quantity' => 1
            );
        }
    }
}
?>


<?php
session_start();
include 'db_connection.php';

echo "<h2>Shopping Cart</h2>";
echo "<table>";
echo "<tr><th>Product</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>";

if (isset($_SESSION['cart']) && !empty($_SESSION['cart'])) {
    foreach ($_SESSION['cart'] as $id => $item) {
        echo "<tr>";
        echo "<td>".$item['name']."</td>";
        echo "<td>\$".$item['price']."</td>";
        echo "<td>".$item['quantity']."</td>";
        echo "<td>\$".($item['price'] * $item['quantity'])."</td>";
        echo "<td><button onclick=\"removeItem(".$id.")\">Remove</button></td>";
        echo "</tr>";
    }
} else {
    echo "<tr><td colspan='5'>Your cart is empty.</td></tr>";
}
echo "</table>";
?>


<?php
session_start();
if (isset($_GET['id'])) {
    $productId = $_GET['id'];
    
    if (isset($_SESSION['cart'][$productId])) {
        unset($_SESSION['cart'][$productId]);
    }
}
?>


<?php
session_start();
?>


<?php
include('includes/db.php');

// Get all products from database
$products = $pdo->query("SELECT * FROM products")->fetchAll(PDO::FETCH_ASSOC);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Products</title>
</head>
<body>
    <?php foreach ($products as $product): ?>
        <div style="border: 1px solid #ddd; padding: 10px; margin-bottom: 10px;">
            <h3><?php echo $product['name']; ?></h3>
            <p><?php echo $product['description']; ?></p>
            <p>Price: <?php echo $product['price']; ?> $</p>
            <form action="add_to_cart.php" method="post">
                <input type="hidden" name="id" value="<?php echo $product['id']; ?>">
                <input type="number" name="quantity" min="1" max="99" value="1">
                <button type="submit">Add to Cart</button>
            </form>
        </div>
    <?php endforeach; ?>

    <a href="cart.php">View Cart</a>
</body>
</html>


<?php
session_start();
include('includes/db.php');

if (isset($_POST['id']) && isset($_POST['quantity'])) {
    $product_id = $_POST['id'];
    $quantity = $_POST['quantity'];

    // Check if product is already in cart
    if (isset($_SESSION['cart'][$product_id])) {
        // Update quantity
        $_SESSION['cart'][$product_id]['quantity'] += $quantity;
    } else {
        // Get product details
        $stmt = $pdo->prepare("SELECT name, price FROM products WHERE id = ?");
        $stmt->execute([$product_id]);
        $product = $stmt->fetch(PDO::FETCH_ASSOC);
        
        if ($product) {
            $_SESSION['cart'][$product_id] = [
                'name' => $product['name'],
                'price' => $product['price'],
                'quantity' => $quantity
            ];
        }
    }

    header("Location: cart.php");
    exit();
}
?>


<?php
session_start();
include('includes/db.php');

if (empty($_SESSION['cart'])) {
    $cart_items = [];
} else {
    $cart_items = $_SESSION['cart'];
}

$total_price = array_reduce($cart_items, function($carry, $item) {
    return $carry + ($item['price'] * $item['quantity']);
}, 0);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <?php if (!empty($cart_items)): ?>
        <h2>Your Cart</h2>
        <table border="1">
            <tr>
                <th>Product Name</th>
                <th>Quantity</th>
                <th>Price</th>
                <th>Total</th>
            </tr>
            <?php foreach ($cart_items as $id => $item): ?>
                <tr>
                    <td><?php echo $item['name']; ?></td>
                    <td><?php echo $item['quantity']; ?></td>
                    <td><?php echo $item['price']; ?> $</td>
                    <td><?php echo ($item['price'] * $item['quantity']); ?> $</td>
                </tr>
            <?php endforeach; ?>
        </table>
        <h3>Total: <?php echo $total_price; ?> $</h3>
        <a href="checkout.php">Proceed to Checkout</a> |
        <a href="products.php">Continue Shopping</a>
    <?php else: ?>
        <p>Your cart is empty.</p>
        <a href="products.php">Go shopping</a>
    <?php endif; ?>

    <!-- Optional: Remove item functionality -->
    <?php if (!empty($cart_items)): ?>
        <form action="remove_from_cart.php" method="post">
            <input type="number" name="id" placeholder="Enter product ID to remove">
            <button type="submit">Remove Item</button>
        </form>
    <?php endif; ?>
</body>
</html>


<?php
session_start();

if (isset($_POST['id'])) {
    $product_id = $_POST['id'];
    
    if (isset($_SESSION['cart'][$product_id])) {
        unset($_SESSION['cart'][$product_id]);
    }
}

header("Location: cart.php");
exit();
?>


<?php
session_start();

// Check if cart is empty
if (empty($_SESSION['cart'])) {
    header("Location: products.php");
    exit();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
</head>
<body>
    <?php if (!empty($_SESSION['cart'])): ?>
        <h2>Enter your details to complete the purchase</h2>
        <form action="process_order.php" method="post">
            <label for="name">Name:</label><br>
            <input type="text" id="name" name="name" required><br>

            <label for="email">Email:</label><br>
            <input type="email" id="email" name="email" required><br>

            <label for="address">Address:</label><br>
            <textarea id="address" name="address" rows="3" required></textarea><br>

            <label for="phone">Phone:</label><br>
            <input type="tel" id="phone" name="phone" required><br>

            <h3>Payment Information</h3>
            <label for="card_number">Card Number:</label><br>
            <input type="text" id="card_number" name="card_number" required><br>

            <label for="expiry_date">Expiry Date:</label><br>
            <input type="text" id="expiry_date" name="expiry_date" placeholder="MM/YY" required><br>

            <label for="cvv">CVV:</label><br>
            <input type="password" id="cvv" name="cvv" required><br>

            <button type="submit">Complete Purchase</button>
        </form>
    <?php else: ?>
        <p>Your cart is empty.</p>
        <a href="products.php">Go shopping</a>
    <?php endif; ?>
</body>
</html>


<?php
session_start();
include('includes/db.php');

// Check if cart is empty
if (empty($_SESSION['cart'])) {
    header("Location: products.php");
    exit();
}

// Get form data
$name = $_POST['name'];
$email = $_POST['email'];
$address = $_POST['address'];
$phone = $_POST['phone'];
$card_number = $_POST['card_number'];
$expiry_date = $_POST['expiry_date'];
$cvv = $_POST['cvv'];

// Calculate total price
$total_price = array_reduce($_SESSION['cart'], function($carry, $item) {
    return $carry + ($item['price'] * $item['quantity']);
}, 0);

try {
    // Insert order into orders table
    $order_stmt = $pdo->prepare("INSERT INTO orders (name, email, address, phone, total_price) 
                                VALUES (?, ?, ?, ?, ?)");
    $order_stmt->execute([$name, $email, $address, $phone, $total_price]);

    $order_id = $pdo->lastInsertId();

    // Insert order items into order_items table
    foreach ($_SESSION['cart'] as $product_id => $item) {
        $item_stmt = $pdo->prepare("INSERT INTO order_items (order_id, product_id, quantity, price)
                                    VALUES (?, ?, ?, ?)");
        $item_stmt->execute([$order_id, $product_id, $item['quantity'], $item['price']]);
    }

    // Clear cart
    unset($_SESSION['cart']);

    // Display success message
    echo "<h2>Thank you for your purchase!</h2>";
    echo "<p>Your order has been processed successfully.</p>";
    echo "<a href='products.php'>Continue shopping</a>";

} catch (PDOException $e) {
    echo "Error: " . $e->getMessage();
}
?>


<?php
try {
    $pdo = new PDO('mysql:host=localhost;dbname=your_database_name', 'username', 'password');
    $pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    die("Could not connect to the database: " . $e->getMessage());
}
?>


<?php
session_start();
require 'functions.php'; // Create this file later
?>

<!DOCTYPE html>
<html>
<head>
    <title>Online Store</title>
    <style>
        /* Add your CSS styles here */
        body { font-family: Arial, sans-serif; }
        .product { border: 1px solid #ddd; padding: 10px; margin: 10px 0; }
        .cart { width: 80%; margin: 0 auto; }
    </style>
</head>
<body>
    <?php
    // Display products
    $products = array(
        array('id' => 1, 'name' => 'Product 1', 'price' => 29.99),
        array('id' => 2, 'name' => 'Product 2', 'price' => 49.99),
        array('id' => 3, 'name' => 'Product 3', 'price' => 19.99)
    );

    foreach ($products as $product) {
        echo "<div class='product'>";
        echo "<h2>{$product['name']}</h2>";
        echo "<p>Price: \${$product['price']}</p>";
        echo "<form action='add_to_cart.php' method='post'>";
        echo "<input type='hidden' name='id' value='{$product['id']}'>";
        echo "<input type='number' name='quantity' min='1' value='1'>";
        echo "<button type='submit'>Add to Cart</button>";
        echo "</form>";
        echo "</div>";
    }
    ?>

    <a href="view_cart.php">View Cart</a>
</body>
</html>


<?php
session_start();

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $id = $_POST['id'];
    $quantity = $_POST['quantity'];

    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }

    if (array_key_exists($id, $_SESSION['cart'])) {
        $_SESSION['cart'][$id]['quantity'] += $quantity;
    } else {
        $_SESSION['cart'][$id] = array(
            'id' => $id,
            'quantity' => $quantity
        );
    }
}

header('Location: index.php');
exit();
?>


<?php
session_start();

if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
    <style>
        .cart { width: 80%; margin: 0 auto; }
        table { width: 100%; border-collapse: collapse; }
        th, td { padding: 10px; text-align: left; }
        th { background-color: #f2f2f2; }
    </style>
</head>
<body>
    <h1>Your Shopping Cart</h1>
    
    <?php if (empty($_SESSION['cart'])) : ?>
        <p>Your cart is empty.</p>
        <a href="index.php">Continue Shopping</a>
    <?php else : ?>
        <table>
            <tr>
                <th>Product ID</th>
                <th>Quantity</th>
                <th>Action</th>
            </tr>
            
            <?php foreach ($_SESSION['cart'] as $item) : ?>
                <tr>
                    <td><?php echo $item['id']; ?></td>
                    <td><?php echo $item['quantity']; ?></td>
                    <td><a href="remove_from_cart.php?id=<?php echo $item['id']; ?>">Remove</a></td>
                </tr>
            <?php endforeach; ?>
        </table>

        <p>Total Items: <?php echo array_sum(array_column($_SESSION['cart'], 'quantity')); ?></p>
        <a href="checkout.php">Checkout</a> | <a href="index.php">Continue Shopping</a>
    <?php endif; ?>
</body>
</html>


<?php
session_start();

if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Calculate total price
$total = 0;
foreach ($_SESSION['cart'] as $item) {
    // In a real application, you'd fetch the product details from a database
    $products = array(
        1 => 29.99,
        2 => 49.99,
        3 => 19.99
    );
    
    $total += $products[$item['id']] * $item['quantity'];
}

// Process payment (this is a simplified example)
function processPayment($total) {
    // In a real application, you'd integrate with a payment gateway here
    return true; // Simulate successful payment
}

if (!empty($_SESSION['cart'])) {
    if (processPayment($total)) {
        // Clear cart after purchase
        unset($_SESSION['cart']);
        
        echo "<h1>Thank you for your purchase!</h1>";
        echo "<p>Your order has been processed successfully.</p>";
        echo "<p>Total amount paid: \$" . number_format($total, 2) . "</p>";
    } else {
        echo "<h1>Error processing payment</h1>";
        echo "<p>There was an error processing your payment. Please try again.</p>";
    }
} else {
    header('Location: index.php');
    exit();
}
?>


<?php
session_start();
include('db_connection.php');

// Fetch all products from database
$sql = "SELECT * FROM products";
$result = $conn->query($sql);

if ($result->num_rows > 0) {
    while ($row = $result->fetch_assoc()) {
        echo '<div class="product">';
        echo '<h3>' . $row['name'] . '</h3>';
        echo '<p>Price: $' . number_format($row['price'], 2) . '</p>';
        echo '<p>Quantity Available: ' . $row['quantity'] . '</p>';
        echo '<a href="add_to_cart.php?id=' . $row['id'] . '" class="btn">Add to Cart</a>';
        echo '</div>';
    }
} else {
    echo 'No products available.';
}
$conn->close();
?>


<?php
session_start();
include('db_connection.php');

if (isset($_GET['id']) && is_numeric($_GET['id'])) {
    $product_id = $_GET['id'];
    
    // Fetch product details
    $sql = "SELECT * FROM products WHERE id = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param('i', $product_id);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows > 0) {
        $product = $result->fetch_assoc();
        
        // Add to cart
        if (isset($_SESSION['cart'])) {
            $found = false;
            foreach ($_SESSION['cart'] as &$item) {
                if ($item['id'] == $product_id) {
                    $item['quantity']++;
                    $found = true;
                    break;
                }
            }
            if (!$found) {
                array_push($_SESSION['cart'], array(
                    'id' => $product['id'],
                    'name' => $product['name'],
                    'price' => $product['price'],
                    'quantity' => 1
                ));
            }
        } else {
            $_SESSION['cart'] = array();
            array_push($_SESSION['cart'], array(
                'id' => $product['id'],
                'name' => $product['name'],
                'price' => $product['price'],
                'quantity' => 1
            ));
        }
    }
    
    header('Location: cart.php');
} else {
    echo 'Invalid product ID';
}
$conn->close();
?>


<?php
session_start();
include('db_connection.php');

if (isset($_SESSION['cart'])) {
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        echo '<div class="cart-item">';
        echo '<h3>' . $item['name'] . '</h3>';
        echo '<p>Quantity: ' . $item['quantity'] . '</p>';
        echo '<p>Price: $' . number_format($item['price'], 2) . '</p>';
        $total += $item['price'] * $item['quantity'];
        echo '<a href="remove_from_cart.php?id=' . $item['id'] . '" class="btn">Remove</a>';
        echo '</div>';
    }
    echo '<h3>Total: $' . number_format($total, 2) . '</h3>';
    echo '<a href="checkout.php" class="btn">Checkout</a>';
} else {
    echo 'Your cart is empty.';
}
$conn->close();
?>


<?php
session_start();

if (isset($_GET['id']) && is_numeric($_GET['id'])) {
    $product_id = $_GET['id'];
    
    if (isset($_SESSION['cart'])) {
        foreach ($_SESSION['cart'] as $key => &$item) {
            if ($item['id'] == $product_id) {
                unset($_SESSION['cart'][$key]);
                break;
            }
        }
        // Re-index the array
        $_SESSION['cart'] = array_values($_SESSION['cart']);
    }
}
header('Location: cart.php');
?>


<?php
session_start();
include('db_connection.php');

if (!isset($_SESSION['cart']) || count($_SESSION['cart']) == 0) {
    echo 'Your cart is empty. Please add products first.';
} else {
    // Display checkout form
    if (!isset($_POST['submit'])) {
        ?>
        <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
            <h2>Checkout</h2>
            <div class="checkout-form">
                <label for="name">Name:</label>
                <input type="text" id="name" name="name" required>
                
                <label for="email">Email:</label>
                <input type="email" id="email" name="email" required>
                
                <label for="address">Address:</label>
                <textarea id="address" name="address" required></textarea>
                
                <button type="submit" name="submit">Place Order</button>
            </div>
        </form>
        <?php
    } else {
        // Process order
        $name = $_POST['name'];
        $email = $_POST['email'];
        $address = $_POST['address'];
        
        foreach ($_SESSION['cart'] as $item) {
            // Update product quantity and insert into orders table
            $sql = "UPDATE products SET quantity = quantity - ? WHERE id = ?";
            $stmt = $conn->prepare($sql);
            $stmt->bind_param('ii', $item['quantity'], $item['id']);
            $stmt->execute();
            
            // Insert order
            $order_sql = "INSERT INTO orders (product_id, user_id, quantity, total_price) VALUES (?, ?, ?, ?)";
            $order_stmt = $conn->prepare($order_sql);
            $order_stmt->bind_param('iiid', $item['id'], 1, $item['quantity'], ($item['price'] * $item['quantity']));
            $order_stmt->execute();
        }
        
        // Clear cart
        unset($_SESSION['cart']);
        
        echo 'Thank you for your order! Your order has been placed successfully.';
    }
}
$conn->close();
?>


<?php
$host = "localhost";
$username = "root";
$password = "";
$dbname = "your_database_name";

$conn = new mysqli($host, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}
?>


<?php
// Configuration
session_start();

// Database connection (replace with your own credentials)
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "myDB";

// Create database connection
$conn = new mysqli($servername, $username, $password, $dbname);
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to get products from database
function getProducts() {
    global $conn;
    $sql = "SELECT * FROM products";
    $result = $conn->query($sql);
    return $result;
}

// Function to add product to cart
function addToCart($productId) {
    global $_SESSION;
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }
    if (!array_key_exists($productId, $_SESSION['cart'])) {
        $_SESSION['cart'][$productId] = 1;
    } else {
        $_SESSION['cart'][$productId]++;
    }
}

// Function to update cart
function updateCart($productId, $quantity) {
    global $_SESSION;
    if ($quantity > 0) {
        $_SESSION['cart'][$productId] = $quantity;
    } else {
        unset($_SESSION['cart'][$productId]);
    }
}

// Function to get product details from database
function getProductDetails($productId) {
    global $conn;
    $sql = "SELECT * FROM products WHERE id = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("i", $productId);
    $stmt->execute();
    $result = $stmt->get_result();
    return $result->fetch_assoc();
}

// Function to save order
function saveOrder($userId, $cartItems) {
    global $conn;
    // Save order details
    $sql = "INSERT INTO orders (user_id, total_amount) VALUES (?, ?)";
    $stmt = $conn->prepare($sql);
    $totalAmount = 0;
    foreach ($cartItems as $productId => $quantity) {
        $product = getProductDetails($productId);
        $totalAmount += $product['price'] * $quantity;
    }
    $stmt->bind_param("id", $userId, $totalAmount);
    $stmt->execute();
    $orderId = $conn->insert_id;

    // Save order items
    foreach ($cartItems as $productId => $quantity) {
        $sql = "INSERT INTO order_items (order_id, product_id, quantity) VALUES (?, ?, ?)";
        $stmt = $conn->prepare($sql);
        $stmt->bind_param("iii", $orderId, $productId, $quantity);
        $stmt->execute();
    }
    return $orderId;
}

// Function to process payment
function processPayment($amount) {
    // Implement your payment gateway logic here
    // For this example, we'll just simulate the payment
    return true; // Return true if payment is successful
}
?>


<!DOCTYPE html>
<html>
<head>
    <title>Product List</title>
</head>
<body>
    <?php
    $products = getProducts();
    while ($product = $products->fetch_assoc()) {
        echo "<div>";
        echo "<h2>" . $product['name'] . "</h2>";
        echo "<p>Price: $" . number_format($product['price'], 2) . "</p>";
        echo "<p>Description: " . $product['description'] . "</p>";
        echo "<form action='add-to-cart.php' method='post'>";
        echo "<input type='hidden' name='product_id' value='" . $product['id'] . "'>";
        echo "<button type='submit'>Add to Cart</button>";
        echo "</form>";
        echo "</div><br/>";
    }
    ?>
    <a href="cart.php">View Cart</a>
</body>
</html>


<?php
session_start();
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    if (isset($_POST['product_id'])) {
        addToCart($_POST['product_id']);
    }
}
header("Location: product-list.php");
exit();
?>


<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <?php
    if (isset($_SESSION['cart'])) {
        $total = 0;
        echo "<form action='update-cart.php' method='post'>";
        foreach ($_SESSION['cart'] as $productId => $quantity) {
            $product = getProductDetails($productId);
            echo "<div>";
            echo "<h3>" . $product['name'] . "</h3>";
            echo "<p>Price: $" . number_format($product['price'], 2) . "</p>";
            echo "<input type='number' name='" . $productId . "' value='" . $quantity . "'>";
            echo "<button type='submit'>Update</button>";
            echo "<form action='remove-from-cart.php' method='post'>";
            echo "<input type='hidden' name='product_id' value='" . $productId . "'>";
            echo "<button type='submit'>Remove</button>";
            echo "</form>";
            echo "</div><br/>";
            $total += $product['price'] * $quantity;
        }
        echo "<h2>Total: $" . number_format($total, 2) . "</h2>";
        echo "</form>";
    } else {
        echo "Your cart is empty.";
    }
    ?>
    <?php if (!empty($_SESSION['cart'])) { ?>
        <a href="checkout.php">Checkout</a>
    <?php } ?>
    <br/>
    <a href="product-list.php">Continue Shopping</a>
</body>
</html>


<?php
session_start();
foreach ($_POST as $productId => $quantity) {
    updateCart($productId, $quantity);
}
header("Location: cart.php");
exit();
?>


<?php
session_start();
if (isset($_POST['product_id'])) {
    unset($_SESSION['cart'][$_POST['product_id']]);
}
header("Location: cart.php");
exit();
?>


<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
</head>
<body>
    <?php
    if (!isset($_SESSION['checkout'])) {
        $_SESSION['checkout'] = array(
            'name' => '',
            'email' => '',
            'address' => '',
            'phone' => ''
        );
    }
    ?>
    <form action="process-checkout.php" method="post">
        <h2>Shipping Information</h2>
        <p>Name: <input type="text" name="name" value="<?php echo $_SESSION['checkout']['name']; ?>"></p>
        <p>Email: <input type="email" name="email" value="<?php echo $_SESSION['checkout']['email']; ?>"></p>
        <p>Address: <input type="text" name="address" value="<?php echo $_SESSION['checkout']['address']; ?>"></p>
        <p>Phone: <input type="tel" name="phone" value="<?php echo $_SESSION['checkout']['phone']; ?>"></p>
        <button type="submit">Continue</button>
    </form>
</body>
</html>


<?php
session_start();
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $_SESSION['checkout'] = array(
        'name' => $_POST['name'],
        'email' => $_POST['email'],
        'address' => $_POST['address'],
        'phone' => $_POST['phone']
    );
}
header("Location: confirm-order.php");
exit();
?>


<!DOCTYPE html>
<html>
<head>
    <title>Confirm Order</title>
</head>
<body>
    <?php
    $cartItems = $_SESSION['cart'];
    $checkoutData = $_SESSION['checkout'];
    $total = 0;
    
    foreach ($cartItems as $productId => $quantity) {
        $product = getProductDetails($productId);
        $total += $product['price'] * $quantity;
    }
    
    if (processPayment($total)) {
        // Save order to database
        $orderId = saveOrder(1, $cartItems); // Assuming user ID is 1 for this example
        unset($_SESSION['cart']);
        unset($_SESSION['checkout']);
        
        echo "<h2>Thank you for your order!</h2>";
        echo "<p>Your order number is #" . $orderId . "</p>";
        echo "<p>Total: $" . number_format($total, 2) . "</p>";
        echo "<p>Name: " . $checkoutData['name'] . "</p>";
        echo "<p>Email: " . $checkoutData['email'] . "</p>";
        echo "<p>Address: " . $checkoutData['address'] . "</p>";
        echo "<p>Phone: " . $checkoutData['phone'] . "</p>";
    } else {
        echo "<h2>Payment failed. Please try again.</h2>";
    }
    ?>
</body>
</html>


<?php
// Connect to the database
$host = 'localhost';
$dbname = 'my_store';
$username = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}

// Fetch products from the database
$sql = "SELECT * FROM products";
$stmt = $conn->prepare($sql);
$stmt->execute();

$products = $stmt->fetchAll(PDO::FETCH_ASSOC);

// Display products
foreach ($products as $product) {
    echo "<div class='product'>";
    echo "<h3>{$product['name']}</h3>";
    echo "<p>Price: \${$product['price']}</p>";
    echo "<button onclick='addToCart({$product['id']})'>Add to Cart</button>";
    echo "</div>";
}
?>


<?php
session_start();

if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

$product_id = $_POST['product_id'];

// Check if product is already in the cart
if (array_key_exists($product_id, $_SESSION['cart'])) {
    // Increase quantity
    $_SESSION['cart'][$product_id]['quantity']++;
} else {
    // Get product details from database
    $sql = "SELECT * FROM products WHERE id = ?";
    $stmt = $conn->prepare($sql);
    $stmt->execute([$product_id]);
    $product = $stmt->fetch(PDO::FETCH_ASSOC);

    $_SESSION['cart'][$product_id] = array(
        'name' => $product['name'],
        'price' => $product['price'],
        'quantity' => 1
    );
}

echo "Product added to cart!";
?>


<?php
session_start();

if (empty($_SESSION['cart'])) {
    header("Location: index.php");
    exit();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
</head>
<body>
    <h1>Your Cart</h1>
    
    <?php
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        echo "<div>";
        echo "<p>{$item['name']}</p>";
        echo "<p>Quantity: {$item['quantity']}</p>";
        echo "<p>Price: \${$item['price']}</p>";
        echo "</div>";
        
        $total += $item['price'] * $item['quantity'];
    }
    
    echo "<h2>Total: \${$total}</h2>";
    ?>
    
    <form action="process_order.php" method="POST">
        <input type="text" name="name" placeholder="Enter your name" required>
        <input type="email" name="email" placeholder="Enter your email" required>
        <textarea name="address" placeholder="Enter your address" required></textarea>
        <button type="submit">Place Order</button>
    </form>
</body>
</html>


<?php
session_start();

if (!isset($_POST['name']) || !isset($_POST['email']) || !isset($_POST['address'])) {
    die("Invalid request");
}

try {
    $conn = new PDO("mysql:host=localhost;dbname=my_store", "root", "");
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

// Insert order into the orders table
$sql = "INSERT INTO orders (name, email, address, total_amount, order_date)
        VALUES (?, ?, ?, ?, NOW())";

$stmt = $conn->prepare($sql);
$stmt->execute([$_POST['name'], $_POST['email'], $_POST['address'], $_SESSION['cart_total']]);

$order_id = $conn->lastInsertId();

// Insert order items into the order_items table
foreach ($_SESSION['cart'] as $item) {
    $sql = "INSERT INTO order_items (order_id, product_name, price, quantity)
            VALUES (?, ?, ?, ?)";
    
    $stmt = $conn->prepare($sql);
    $stmt->execute([$order_id, $item['name'], $item['price'], $item['quantity']]);
}

// Clear the cart
unset($_SESSION['cart']);

echo "Order processed successfully! Your order ID is {$order_id}";
?>


<?php
header("Location: thankyou.php");
exit();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Thank You</title>
</head>
<body>
    <h1>Thank You for Your Order!</h1>
    <p>Your order has been received and will be processed shortly.</p>
    <a href="index.php">Continue Shopping</a>
</body>
</html>


<?php
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "myDB";

// Create connection
$conn = mysqli_connect($servername, $username, $password, $dbname);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

$sql = "SELECT * FROM products";
$result = mysqli_query($conn, $sql);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Product Catalog</title>
</head>
<body>
    <h1>Product Catalog</h1>
    <?php if (mysqli_num_rows($result) > 0) { ?>
        <table border="1">
            <tr>
                <th>Name</th>
                <th>Price</th>
                <th>Description</th>
                <th>Action</th>
            </tr>
            <?php while ($row = mysqli_fetch_assoc($result)) { ?>
                <tr>
                    <td><?php echo $row["name"]; ?></td>
                    <td>$<?php echo $row["price"]; ?></td>
                    <td><?php echo $row["description"]; ?></td>
                    <td><a href="addtocart.php?id=<?php echo $row["id"]; ?>">Add to Cart</a></td>
                </tr>
            <?php } ?>
        </table>
    <?php } else { ?>
        <p>No products available.</p>
    <?php } ?>

    <p><a href="cart.php">View Cart</a></p>

<?php
mysqli_close($conn);
?>
</body>
</html>


<?php
session_start();

$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "myDB";

// Create connection
$conn = mysqli_connect($servername, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

$product_id = $_GET['id'];

$sql = "SELECT * FROM products WHERE id = $product_id";
$result = mysqli_query($conn, $sql);
$product = mysqli_fetch_assoc($result);

// Add product to cart
if (isset($_SESSION['cart'])) {
    if (array_key_exists($product_id, $_SESSION['cart'])) {
        // Increment quantity
        $_SESSION['cart'][$product_id]['quantity']++;
    } else {
        // Add new product
        $_SESSION['cart'][$product_id] = array(
            'name' => $product['name'],
            'price' => $product['price'],
            'quantity' => 1
        );
    }
} else {
    $_SESSION['cart'] = array();
    $_SESSION['cart'][$product_id] = array(
        'name' => $product['name'],
        'price' => $product['price'],
        'quantity' => 1
    );
}

mysqli_close($conn);

// Redirect back to product catalog
header('Location: index.php');
exit();


<?php
session_start();

$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "myDB";

// Create connection
$conn = mysqli_connect($servername, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

$total = 0;
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <h1>Shopping Cart</h1>
    
    <?php if (!empty($_SESSION['cart'])) { ?>
        <table border="1">
            <tr>
                <th>Name</th>
                <th>Price</th>
                <th>Quantity</th>
                <th>Total</th>
                <th>Action</th>
            </tr>
            <?php foreach ($_SESSION['cart'] as $product_id => $item) { 
                $sql = "SELECT * FROM products WHERE id = $product_id";
                $result = mysqli_query($conn, $sql);
                $product = mysqli_fetch_assoc($result); ?>

                <tr>
                    <td><?php echo $product['name']; ?></td>
                    <td>$<?php echo $item['price']; ?></td>
                    <td><form action="updatecart.php" method="post">
                        <input type="hidden" name="id" value="<?php echo $product_id; ?>">
                        <input type="number" name="quantity" min="1" value="<?php echo $item['quantity']; ?>">
                        <input type="submit" value="Update">
                    </form></td>
                    <td>$<?php echo number_format($item['price'] * $item['quantity'], 2); ?></td>
                    <td><a href="removefromcart.php?id=<?php echo $product_id; ?>">Remove</a></td>
                </tr>

                <?php $total += $item['price'] * $item['quantity']; ?>
            <?php } ?>
        </table>
        <h3>Total: $<?php echo number_format($total, 2); ?></h3>
        <p><a href="checkout.php">Checkout</a></p>
    <?php } else { ?>
        <p>Your cart is empty.</p>
        <p><a href="index.php">Continue Shopping</a></p>
    <?php } ?>

<?php
mysqli_close($conn);
?>
</body>
</html>


<?php
session_start();

$product_id = $_POST['id'];
$quantity = $_POST['quantity'];

if (isset($_SESSION['cart'][$product_id])) {
    $_SESSION['cart'][$product_id]['quantity'] = $quantity;
}

// Redirect back to cart page
header('Location: cart.php');
exit();


<?php
session_start();

$product_id = $_GET['id'];

if (isset($_SESSION['cart'][$product_id])) {
    unset($_SESSION['cart'][$product_id]);
}

// Redirect back to cart page
header('Location: cart.php');
exit();


<?php
session_start();

$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "myDB";

$conn = mysqli_connect($servername, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
</head>
<body>
    <h1>Checkout</h1>
    
    <?php if (!empty($_SESSION['cart'])) { ?>
        <form action="processorder.php" method="post">
            <table border="1">
                <tr>
                    <th>Name</th>
                    <th>Price</th>
                    <th>Quantity</th>
                    <th>Total</th>
                </tr>
                <?php $total = 0; foreach ($_SESSION['cart'] as $product_id => $item) { 
                    $sql = "SELECT * FROM products WHERE id = $product_id";
                    $result = mysqli_query($conn, $sql);
                    $product = mysqli_fetch_assoc($result); ?>

                    <tr>
                        <td><?php echo $product['name']; ?></td>
                        <td>$<?php echo $item['price']; ?></td>
                        <td><?php echo $item['quantity']; ?></td>
                        <td>$<?php echo number_format($item['price'] * $item['quantity'], 2); ?></td>
                    </tr>

                    <?php $total += $item['price'] * $item['quantity']; ?>
                <?php } ?>
            </table>
            <h3>Total: $<?php echo number_format($total, 2); ?></h3>

            <div>
                <label for="name">Name:</label>
                <input type="text" id="name" name="name" required><br>
                
                <label for="email">Email:</label>
                <input type="email" id="email" name="email" required><br>
                
                <label for="address">Address:</label>
                <input type="text" id="address" name="address" required><br>
                
                <label for="payment_method">Payment Method:</label>
                <select id="payment_method" name="payment_method">
                    <option value="credit_card">Credit Card</option>
                    <option value="debit_card">Debit Card</option>
                    <option value="paypal">PayPal</option>
                </select><br>

                <input type="submit" value="Place Order">
            </div>
        </form>
    <?php } else { ?>
        <p>Your cart is empty.</p>
        <p><a href="index.php">Continue Shopping</a></p>
    <?php } ?>

<?php
mysqli_close($conn);
?>
</body>
</html>


<?php
session_start();

$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "myDB";

$conn = mysqli_connect($servername, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Get order details from form
$name = $_POST['name'];
$email = $_POST['email'];
$address = $_POST['address'];
$payment_method = $_POST['payment_method'];

// Calculate total
$total = 0;
foreach ($_SESSION['cart'] as $product_id => $item) {
    $total += $item['price'] * $item['quantity'];
}

// Insert order into orders table
$sql = "INSERT INTO orders (name, email, address, payment_method, total_amount)
        VALUES ('$name', '$email', '$address', '$payment_method', $total)";
if (mysqli_query($conn, $sql)) {
    $order_id = mysqli_insert_id($conn);

    // Insert order details into order_details table
    foreach ($_SESSION['cart'] as $product_id => $item) {
        $price = $item['price'];
        $quantity = $item['quantity'];
        
        $sql_details = "INSERT INTO order_details (order_id, product_id, price, quantity)
                        VALUES ($order_id, $product_id, $price, $quantity)";
        mysqli_query($conn, $sql_details);
    }

    // Clear cart
    unset($_SESSION['cart']);
    
    // Send confirmation email
    $to = $email;
    $subject = "Order Confirmation";
    $message = "Thank you for your order! Your order ID is #$order_id and has been processed successfully.";
    $headers = "From: noreply@example.com";

    mail($to, $subject, $message, $headers);

    // Redirect to thank you page
    header('Location: confirmation.php');
    exit();
} else {
    echo "Error processing order: " . mysqli_error($conn);
}

mysqli_close($conn);


<!DOCTYPE html>
<html>
<head>
    <title>Order Confirmation</title>
</head>
<body>
    <h1>Thank you for your order!</h1>
    <p>Your order has been processed successfully.</p>
    <p><a href="index.php">Continue Shopping</a></p>
</body>
</html>


<?php
session_start();

$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "myDB";

$conn = mysqli_connect($servername, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Assuming user is logged in and has a user_id session variable
$user_id = $_SESSION['user_id'];

$sql = "SELECT * FROM orders WHERE user_id = $user_id";
$result = mysqli_query($conn, $sql);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Order History</title>
</head>
<body>
    <h1>Order History</h1>
    
    <?php if (mysqli_num_rows($result) > 0) { ?>
        <table border="1">
            <tr>
                <th>Order ID</th>
                <th>Date</th>
                <th>Total Amount</th>
                <th>Status</th>
            </tr>
            <?php while ($row = mysqli_fetch_assoc($result)) { ?>
                <tr>
                    <td><?php echo $row["id"]; ?></td>
                    <td><?php echo $row["order_date"]; ?></td>
                    <td>$<?php echo number_format($row["total_amount"], 2); ?></td>
                    <td><?php echo $row["status"]; ?></td>
                </tr>
            <?php } ?>
        </table>
    <?php } else { ?>
        <p>No orders found.</p>
    <?php } ?>

<?php
mysqli_close($conn);
?>
</body>
</html>


<?php
// database connection
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "myDB";

// Create connection
$conn = new mysqli($servername, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to sanitize input
function sanitize($data) {
    return htmlspecialchars(trim($data));
}

// Handle form submission
if ($_SERVER['REQUEST_METHOD'] == 'POST') {

    // Get product details from hidden inputs
    $productId = $_POST['product_id'];
    $price = $_POST['price'];
    $quantity = $_POST['quantity'];

    // Validate and sanitize input
    $name = sanitize($_POST['name']);
    $email = sanitize($_POST['email']);
    $cardNumber = sanitize($_POST['card_number']);
    $expiryDate = sanitize($_POST['expiry_date']);
    $cvv = sanitize($_POST['cvv']);
    $address = sanitize($_POST['address']);
    $city = sanitize($_POST['city']);
    $state = sanitize($_POST['state']);
    $zipCode = sanitize($_POST['zip_code']);

    // Basic validation
    if (empty($name) || empty($email) || empty($cardNumber) || empty($expiryDate) || empty($cvv)) {
        die("Please fill in all required fields");
    }

    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        die("Invalid email format");
    }

    // Process payment (simulated)
    $orderTotal = $price * $quantity;

    // Here you would typically integrate with a payment gateway
    // For this example, we'll just simulate the payment processing
    $paymentStatus = "paid";  // In real application, this should be determined by the payment gateway

    // Insert order into database
    $sql = "INSERT INTO orders (customer_name, customer_email, product_id, quantity, price, total_amount, payment_status)
            VALUES ('$name', '$email', '$productId', '$quantity', '$price', '$orderTotal', '$paymentStatus')";

    if ($conn->query($sql) === TRUE) {
        $orderId = $conn->insert_id;
        
        // Insert order items
        $sqlItems = "INSERT INTO order_items (order_id, product_id, quantity, price)
                    VALUES ('$orderId', '$productId', '$quantity', '$price')";
        if ($conn->query($sqlItems) === TRUE) {
            // Payment successful
            echo "<h2>Thank you for your purchase!</h2>";
            echo "<p>Your order ID is: $orderId</p>";
            echo "<p>Order details:</p>";
            echo "<ul>";
            echo "<li>Name: $name</li>";
            echo "<li>Email: $email</li>";
            echo "<li>Product: $productId</li>";
            echo "<li>Quantity: $quantity</li>";
            echo "<li>Price: $$price</li>";
            echo "<li>Total Amount: $$orderTotal</li>";
            echo "</ul>";
        } else {
            die("Error inserting order items: " . $conn->error);
        }
    } else {
        die("Error inserting order: " . $conn->error);
    }

} else {

// Display purchase form
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Purchase Product</title>
</head>
<body>

<h1>Product Purchase</h1>

<form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
    <!-- Product details -->
    <input type="hidden" name="product_id" value="1">
    <input type="hidden" name="price" value="29.99">
    <input type="hidden" name="quantity" value="1">

    <div>
        <label for="name">Name:</label><br>
        <input type="text" id="name" name="name" required>
    </div>

    <div>
        <label for="email">Email:</label><br>
        <input type="email" id="email" name="email" required>
    </div>

    <div>
        <label for="card_number">Card Number:</label><br>
        <input type="text" id="card_number" name="card_number" required pattern="[0-9]{16}">
    </div>

    <div>
        <label for="expiry_date">Expiry Date (MM/YY):</label><br>
        <input type="text" id="expiry_date" name="expiry_date" required pattern="(0[1-9]|1[0-2])\/\d{2}">
    </div>

    <div>
        <label for="cvv">CVV:</label><br>
        <input type="text" id="cvv" name="cvv" required pattern="[0-9]{3}">
    </div>

    <div>
        <label for="address">Address:</label><br>
        <textarea id="address" name="address" required></textarea>
    </div>

    <div>
        <label for="city">City:</label><br>
        <input type="text" id="city" name="city" required>
    </div>

    <div>
        <label for="state">State:</label><br>
        <input type="text" id="state" name="state">
    </div>

    <div>
        <label for="zip_code">Zip Code:</label><br>
        <input type="text" id="zip_code" name="zip_code" pattern="[0-9]{5}">
    </div>

    <button type="submit">Purchase</button>
</form>

</body>
</html>

<?php
}
// Close database connection
$conn->close();
?>


<?php
session_start();
?>


<!DOCTYPE html>
<html>
<head>
    <title>Add to Cart</title>
</head>
<body>
    <h1>Product List</h1>
    <?php
    // Simulated product data
    $products = array(
        1 => array('name' => 'Laptop', 'price' => 999.99),
        2 => array('name' => 'Smartphone', 'price' => 699.99)
    );
    
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }
    
    if (isset($_POST['add_to_cart'])) {
        $productId = intval($_POST['product_id']);
        $quantity = intval($_POST['quantity']);
        
        if ($quantity > 0) {
            if (!isset($_SESSION['cart'][$productId])) {
                $_SESSION['cart'][$productId] = array(
                    'name' => $products[$productId]['name'],
                    'price' => $products[$productId]['price'],
                    'quantity' => 0
                );
            }
            
            $_SESSION['cart'][$productId]['quantity'] += $quantity;
        }
        
        header("Location: view_cart.php");
        exit();
    }
    ?>
    
    <form action="add_to_cart.php" method="POST">
        <select name="product_id">
            <?php foreach ($products as $id => $product): ?>
                <option value="<?php echo $id; ?>"><?php echo $product['name']; ?></option>
            <?php endforeach; ?>
        </select>
        
        Quantity: <input type="number" name="quantity" min="1" value="1">
        
        <button type="submit" name="add_to_cart">Add to Cart</button>
    </form>
    
    <a href="view_cart.php">View Cart</a>
</body>
</html>


<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <?php
    if (!isset($_SESSION['cart']) || empty($_SESSION['cart'])) {
        echo "Your cart is empty. <a href='add_to_cart.php'>Add items</a>";
        exit();
    }
    
    $total = 0;
    ?>
    
    <h1>Your Cart</h1>
    <table border="1">
        <tr>
            <th>Product Name</th>
            <th>Price</th>
            <th>Quantity</th>
            <th>Total</th>
        </tr>
        
        <?php foreach ($_SESSION['cart'] as $item): ?>
            <tr>
                <td><?php echo $item['name']; ?></td>
                <td>$<?php echo number_format($item['price'], 2); ?></td>
                <td><?php echo $item['quantity']; ?></td>
                <td>$<?php echo number_format($item['price'] * $item['quantity'], 2); ?></td>
            </tr>
            
            <?php $total += $item['price'] * $item['quantity']; ?>
        <?php endforeach; ?>
        
        <tr>
            <th colspan="3">Total:</th>
            <th>$<?php echo number_format($total, 2); ?></th>
        </tr>
    </table>
    
    <a href="payment.php">Proceed to Checkout</a> |
    <a href="add_to_cart.php">Add More Items</a>
</body>
</html>


<!DOCTYPE html>
<html>
<head>
    <title>Payment Information</title>
</head>
<body>
    <?php
    if (!isset($_SESSION['cart']) || empty($_SESSION['cart'])) {
        echo "Your cart is empty. Please add items first.";
        exit();
    }
    ?>
    
    <h1>Payment Information</h1>
    <form action="process_payment.php" method="POST">
        <p>
            Name on Card: <br>
            <input type="text" name="card_name" required>
        </p>
        
        <p>
            Credit Card Number: <br>
            <input type="number" name="card_number" required>
        </p>
        
        <p>
            Expiration Date (MM/YY): <br>
            <input type="text" name="expiration_date" pattern="\d{2}/\d{2}" required>
        </p>
        
        <p>
            CVV: <br>
            <input type="number" name="cvv" min="100" max="999" required>
        </p>
        
        <button type="submit">Complete Purchase</button>
    </form>
    
    <a href="view_cart.php">Back to Cart</a>
</body>
</html>


<!DOCTYPE html>
<html>
<head>
    <title>Payment Confirmation</title>
</head>
<body>
    <?php
    // Reset the cart after processing
    session_unset();
    session_destroy();
    
    // Simulated payment success
    $payment_success = true;
    
    if ($payment_success) {
        echo "<h1>Thank You for Your Purchase!</h1>";
        echo "<p>Your transaction was successful.</p>";
    } else {
        echo "<h1>Payment Failed</h1>";
        echo "<p>There was an error processing your payment. Please try again.</p>";
    }
    
    ?>
    
    <a href="add_to_cart.php">Continue Shopping</a>
</body>
</html>


<?php
session_start();
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function add_to_cart($product_id, $quantity) {
    if ($quantity > 0) {
        if (!isset($_SESSION['cart'][$product_id])) {
            $_SESSION['cart'][$product_id] = 0;
        }
        $_SESSION['cart'][$product_id] += $quantity;
    }
}

// Function to update cart
function update_cart($product_id, $quantity) {
    if ($quantity > 0) {
        $_SESSION['cart'][$product_id] = $quantity;
    } else {
        remove_from_cart($product_id);
    }
}

// Function to remove item from cart
function remove_from_cart($product_id) {
    unset($_SESSION['cart'][$product_id]);
}

// Function to calculate total price
function cart_total() {
    global $conn; // Assuming you have a database connection
    $total = 0;
    foreach ($_SESSION['cart'] as $id => $quantity) {
        $sql = "SELECT price FROM products WHERE id = ?";
        $stmt = $conn->prepare($sql);
        $stmt->bind_param('i', $id);
        $stmt->execute();
        $result = $stmt->get_result();
        if ($row = $result->fetch_assoc()) {
            $total += $row['price'] * $quantity;
        }
    }
    return $total;
}
?>


<?php
include('db.php');
session_start();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Products</title>
</head>
<body>
    <h1>Our Products</h1>
    <?php
    $sql = "SELECT * FROM products";
    $result = $conn->query($sql);
    
    if ($result->num_rows > 0) {
        while ($row = $result->fetch_assoc()) {
            echo "<div>";
            echo "<h2>" . $row['name'] . "</h2>";
            echo "<p>Price: $" . number_format($row['price'], 2) . "</p>";
            echo "<p>Description: " . $row['description'] . "</p>";
            echo "<a href='add_to_cart.php?id=" . $row['id'] . "'>Add to Cart</a>";
            echo "</div><br />";
        }
    } else {
        echo "No products found.";
    }
    ?>
</body>
</html>

<?php
$conn->close();
?>


<?php
include('db.php');
session_start();

if (isset($_GET['id'])) {
    $product_id = $_GET['id'];
    add_to_cart($product_id, 1);
}

header("Location: cart.php");
exit();
?>


<?php
include('db.php');
session_start();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <h1>Your Shopping Cart</h1>
    
    <?php if (!empty($_SESSION['cart'])): ?>
        <form action="update_cart.php" method="post">
            <table>
                <tr>
                    <th>Product ID</th>
                    <th>Quantity</th>
                    <th>Action</th>
                </tr>
                
                <?php foreach ($_SESSION['cart'] as $id => $quantity): ?>
                    <tr>
                        <td><?php echo $id; ?></td>
                        <td><input type="number" name="<?php echo $id; ?>" value="<?php echo $quantity; ?>"></td>
                        <td><a href="remove_from_cart.php?id=<?php echo $id; ?>">Remove</a></td>
                    </tr>
                <?php endforeach; ?>
                
                <tr>
                    <td colspan="3">
                        <input type="submit" name="updateCart" value="Update Cart">
                        <a href="checkout.php">Checkout</a>
                    </td>
                </tr>
            </table>
        </form>
        
        <p>Total: <?php echo "$" . number_format(cart_total(), 2); ?></p>
    <?php else: ?>
        <p>Your cart is empty.</p>
    <?php endif; ?>
    
    <p><a href="products.php">Continue Shopping</a></p>
</body>
</html>

<?php
$conn->close();
?>


<?php
include('db.php');
session_start();

foreach ($_POST as $id => $quantity) {
    if (is_numeric($id)) { // Check if the key is a product ID
        update_cart($id, $quantity);
    }
}

header("Location: cart.php");
exit();
?>


<?php
include('db.php');
session_start();

if (isset($_GET['id'])) {
    remove_from_cart($_GET['id']);
}

header("Location: cart.php");
exit();
?>


<?php
session_start();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
</head>
<body>
    <h1>Checkout</h1>
    
    <?php if (!empty($_SESSION['cart'])): ?>
        <form action="process_payment.php" method="post">
            <table>
                <tr>
                    <th>Product ID</th>
                    <th>Quantity</th>
                </tr>
                
                <?php foreach ($_SESSION['cart'] as $id => $quantity): ?>
                    <tr>
                        <td><?php echo $id; ?></td>
                        <td><?php echo $quantity; ?></td>
                    </tr>
                <?php endforeach; ?>
                
                <tr>
                    <td colspan="2">
                        <h3>Customer Information</h3>
                        <p>Name: <input type="text" name="name" required></p>
                        <p>Email: <input type="email" name="email" required></p>
                        <p>Phone: <input type="tel" name="phone"></p>
                        <p>Address: <input type="text" name="address" required></p>
                    </td>
                </tr>
                
                <tr>
                    <td colspan="2">
                        <input type="submit" value="Place Order">
                        <a href="cart.php">Cancel</a>
                    </td>
                </tr>
            </table>
        </form>
    <?php else: ?>
        <p>Your cart is empty. Please add items to your cart first.</p>
    <?php endif; ?>
</body>
</html>


<?php
session_start();
include('db.php');

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Get customer information
    $name = $_POST['name'];
    $email = $_POST['email'];
    $phone = $_POST['phone'];
    $address = $_POST['address'];
    
    // Calculate total price
    $total_price = cart_total();
    
    // Insert order into database
    $sql = "INSERT INTO orders (name, email, phone, address, total_price) VALUES (?, ?, ?, ?, ?)";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("sssad", $name, $email, $phone, $address, $total_price);
    
    if ($stmt->execute()) {
        // Clear cart
        $_SESSION['cart'] = array();
        
        echo "<h1>Thank you for your order!</h1>";
        echo "<p>Your order has been received and will be processed shortly.</p>";
        echo "<p>Total Amount: $" . number_format($total_price, 2) . "</p>";
    } else {
        echo "Error processing your order. Please try again later.";
    }
    
    $stmt->close();
}

$conn->close();
?>


<?php
$servername = "localhost";
$username = "root";
$password = "";
$dbname = "your_database_name";

// Create connection
$conn = new mysqli($servername, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}
?>


<?php
// Start session
session_start();
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Shopping Cart</title>
    <style>
        .cart {
            width: 90%;
            margin: 20px auto;
            padding: 20px;
            border: 1px solid #ddd;
            border-radius: 5px;
        }
        
        .product {
            display: flex;
            align-items: center;
            margin-bottom: 20px;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 5px;
        }

        .product img {
            width: 100px;
            height: 100px;
            object-fit: cover;
            margin-right: 20px;
        }

        .cart-item {
            display: flex;
            align-items: center;
            justify-content: space-between;
            border-bottom: 1px solid #ddd;
            padding: 10px 0;
        }
    </style>
</head>
<body>

<?php
// Product list with Add to Cart buttons
$products = array(
    array('id' => 1, 'name' => 'Product 1', 'price' => 29.99),
    array('id' => 2, 'name' => 'Product 2', 'price' => 49.99),
    array('id' => 3, 'name' => 'Product 3', 'price' => 19.99),
);

// Add item to cart
if (isset($_POST['add_to_cart'])) {
    $productId = $_POST['product_id'];
    
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }
    
    if (array_key_exists($productId, $_SESSION['cart'])) {
        // Increment quantity
        $_SESSION['cart'][$productId]['quantity']++;
    } else {
        // Add new product to cart
        $product = array_search($productId, array_column($products, 'id'));
        $newItem = array(
            'id' => $products[$product]['id'],
            'name' => $products[$product]['name'],
            'price' => $products[$product]['price'],
            'quantity' => 1
        );
        $_SESSION['cart'][$productId] = $newItem;
    }
}
?>

<h2>Products</h2>
<div class="cart">
    <?php foreach ($products as $product): ?>
        <div class="product">
            <img src="placeholder.jpg" alt="<?php echo $product['name']; ?>">
            <div>
                <h3><?php echo $product['name']; ?></h3>
                <p>Price: <?php echo '$'.$product['price']; ?></p>
                <form action="" method="POST">
                    <input type="hidden" name="product_id" value="<?php echo $product['id']; ?>">
                    <button type="submit" name="add_to_cart">Add to Cart</button>
                </form>
            </div>
        </div>
    <?php endforeach; ?>
    
    <a href="view_cart.php">View Cart</a>
</div>

<?php
// Calculate and display cart total
$total = 0;
if (isset($_SESSION['cart'])) {
    foreach ($_SESSION['cart'] as $item) {
        $total += ($item['price'] * $item['quantity']);
    }
}
?>

<h3>Total: <?php echo '$'.$total; ?></h3>

</body>
</html>


<?php
session_start();

if (!isset($_SESSION['cart']) || empty($_SESSION['cart'])) {
    header("Location: index.php");
    exit();
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>View Cart</title>
    <style>
        /* Add your CSS styles here */
    </style>
</head>
<body>
    <h2>Your Shopping Cart</h2>
    
    <?php if (!empty($_SESSION['cart'])): ?>
        <div class="cart">
            <?php foreach ($_SESSION['cart'] as $item): ?>
                <div class="cart-item">
                    <img src="placeholder.jpg" alt="<?php echo $item['name']; ?>" style="width: 100px;">
                    <h3><?php echo $item['name']; ?></h3>
                    <p>Price: <?php echo '$'.$item['price']; ?></p>
                    <div class="quantity">
                        <form action="update_cart.php" method="POST">
                            <input type="hidden" name="product_id" value="<?php echo $item['id']; ?>">
                            <input type="number" name="quantity" min="1" value="<?php echo $item['quantity']; ?>" style="width: 50px;">
                            <button type="submit">Update</button>
                        </form>
                    </div>
                    <form action="update_cart.php" method="POST">
                        <input type="hidden" name="product_id" value="<?php echo $item['id']; ?>">
                        <button type="submit" name="remove_item">Remove</button>
                    </form>
                </div>
            <?php endforeach; ?>
        </div>
        
        <p>Total: <?php echo '$'.number_format($total, 2); ?></p>
        <a href="checkout.php">Checkout</a> | 
        <a href="index.php">Continue Shopping</a>
    <?php else: ?>
        <p>Your cart is empty.</p>
        <a href="index.php">Back to Products</a>
    <?php endif; ?>

</body>
</html>


<?php
session_start();

if (isset($_POST['product_id'])) {
    $productId = $_POST['product_id'];
    
    if (isset($_POST['quantity']) && is_numeric($_POST['quantity']) && $_POST['quantity'] > 0) {
        // Update quantity
        $_SESSION['cart'][$productId]['quantity'] = $_POST['quantity'];
    } elseif (isset($_POST['remove_item'])) {
        // Remove item from cart
        unset($_SESSION['cart'][$productId]);
    }
    
    header("Location: view_cart.php");
    exit();
}
?>


<?php
session_start();

if (!isset($_SESSION['cart']) || empty($_SESSION['cart'])) {
    header("Location: index.php");
    exit();
}

// Calculate total price
$total = 0;
foreach ($_SESSION['cart'] as $item) {
    $total += ($item['price'] * $item['quantity']);
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Checkout</title>
</head>
<body>
    <h2>Checkout</h2>
    
    <div class="cart">
        <?php foreach ($_SESSION['cart'] as $item): ?>
            <div class="cart-item">
                <img src="placeholder.jpg" alt="<?php echo $item['name']; ?>" style="width: 100px;">
                <h3><?php echo $item['name']; ?></h3>
                <p>Price: <?php echo '$'.$item['price']; ?></p>
                <p>Quantity: <?php echo $item['quantity']; ?></p>
            </div>
        <?php endforeach; ?>
    </div>

    <h3>Total Price: <?php echo '$'.number_format($total, 2); ?></h3>

    <!-- Add your checkout form here -->
    <form action="" method="POST">
        <h3>Shipping Information</h3>
        <input type="text" name="name" placeholder="Name" required><br>
        <input type="email" name="email" placeholder="Email" required><br>
        <input type="text" name="address" placeholder="Address" required><br>
        <button type="submit">Place Order</button>
    </form>

    <?php
    // Process order submission
    if ($_SERVER['REQUEST_METHOD'] == 'POST') {
        // Here you would typically connect to a database and store the order details
        // For now, just display a thank you message
        echo "<h2>Thank you for your order!</h2>";
        // Clear cart after purchase
        unset($_SESSION['cart']);
    }
    ?>

</body>
</html>


<!DOCTYPE html>
<html>
<head>
    <title>Product Store</title>
</head>
<body>
    <?php
        $conn = mysqli_connect("localhost", "root", "", "product_store");
        
        if (!$conn) {
            die("Connection failed: " . mysqli_connect_error());
        }
        
        $sql = "SELECT * FROM products";
        $result = mysqli_query($conn, $sql);
    ?>

    <div style="margin: 20px;">
        <?php while ($row = mysqli_fetch_assoc($result)) { ?>
            <div style="border: 1px solid #ddd; padding: 10px; margin-bottom: 10px;">
                <h3><?php echo $row['name']; ?></h3>
                <p>Price: <?php echo "$" . number_format($row['price'], 2); ?></p>
                <?php if ($row['image']) { ?>
                    <img src="<?php echo $row['image']; ?>" alt="<?php echo $row['name']; ?>" style="max-width: 200px;">
                <?php } ?>
                <p><?php echo $row['description']; ?></p>
                <form action="add_to_cart.php" method="post">
                    <input type="hidden" name="product_id" value="<?php echo $row['id']; ?>">
                    <input type="number" name="quantity" value="1" min="1" style="width: 50px;">
                    <button type="submit">Add to Cart</button>
                </form>
            </div>
        <?php } ?>
    </div>

    <a href="cart.php">View Cart</a>

    <?php
        mysqli_close($conn);
    ?>
</body>
</html>


<?php
session_start();

$product_id = $_POST['product_id'];
$quantity = $_POST['quantity'];

$conn = mysqli_connect("localhost", "root", "", "product_store");
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

$sql = "SELECT * FROM products WHERE id = $product_id";
$result = mysqli_query($conn, $sql);
$product = mysqli_fetch_assoc($result);

if ($product) {
    if (isset($_SESSION['cart'])) {
        $cart =& $_SESSION['cart'];
    } else {
        $cart = array();
    }

    if (!array_key_exists($product_id, $cart)) {
        $cart[$product_id] = array(
            'name' => $product['name'],
            'price' => $product['price'],
            'quantity' => 0
        );
    }
    
    $cart[$product_id]['quantity'] += $quantity;
}

mysqli_close($conn);
header("Location: product_store.php");
exit();
?>


<?php
session_start();

$conn = mysqli_connect("localhost", "root", "", "product_store");
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

$cart =& $_SESSION['cart'];
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <?php if (!empty($cart)) { ?>
        <h1>Your Shopping Cart</h1>
        <table border="1">
            <tr>
                <th>Product Name</th>
                <th>Price</th>
                <th>Quantity</th>
                <th>Total</th>
                <th>Action</th>
            </tr>
            
            <?php $total = 0; 
            foreach ($cart as $id => $product) { ?>
                <tr>
                    <td><?php echo $product['name']; ?></td>
                    <td><?php echo "$" . number_format($product['price'], 2); ?></td>
                    <td><input type="number" id="quantity_<?php echo $id; ?>" value="<?php echo $product['quantity']; ?>" min="1"></td>
                    <td><?php echo "$" . number_format(($product['price'] * $product['quantity']), 2); ?></td>
                    <td>
                        <a href="update_cart.php?action=remove&id=<?php echo $id; ?>">Remove</a>
                    </td>
                </tr>
                <?php $total += ($product['price'] * $product['quantity']); ?>
            <?php } ?>
            
            <tr>
                <td colspan="3" align="right">Total:</td>
                <td><?php echo "$" . number_format($total, 2); ?></td>
                <td></td>
            </tr>
        </table>
        
        <script>
            document.querySelectorAll('input[type=number]').forEach(input => {
                input.addEventListener('change', function() {
                    const id = this.id.split('_')[1];
                    fetch(`update_cart.php?action=update&id=${id}&quantity=${this.value}`)
                        .then(response => location.reload());
                });
            });
        </script>

        <form action="checkout.php" method="post">
            <input type="submit" value="Proceed to Checkout">
        </form>
    <?php } else { ?>
        <h1>Your cart is empty!</h1>
        <a href="product_store.php">Back to Store</a>
    <?php } ?>

    <?php
        mysqli_close($conn);
    ?>
</body>
</html>


<?php
session_start();

$conn = mysqli_connect("localhost", "root", "", "product_store");
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

$cart =& $_SESSION['cart'];
$action = isset($_GET['action']) ? $_GET['action'] : '';
$id = isset($_GET['id']) ? (int)$_GET['id'] : 0;

switch ($action) {
    case 'remove':
        if (array_key_exists($id, $cart)) {
            unset($cart[$id]);
        }
        break;
        
    case 'update':
        $quantity = isset($_GET['quantity']) ? (int)$_GET['quantity'] : 1;
        if ($quantity < 1) {
            $quantity = 1;
        }
        if (array_key_exists($id, $cart)) {
            $cart[$id]['quantity'] = $quantity;
        }
        break;
}

header("Location: cart.php");
exit();
?>


<?php
session_start();

if (!isset($_SESSION['cart']) || empty($_SESSION['cart'])) {
    header("Location: cart.php");
    exit();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
</head>
<body>
    <?php if (isset($_POST['submit'])) { 
        $user_name = $_POST['name'];
        $email = $_POST['email'];
        $address = $_POST['address'];
        
        $conn = mysqli_connect("localhost", "root", "", "product_store");
        if (!$conn) {
            die("Connection failed: " . mysqli_connect_error());
        }
        
        // Calculate total
        $total = 0;
        foreach ($_SESSION['cart'] as $id => $product) {
            $total += ($product['price'] * $product['quantity']);
        }
        
        // Insert order into database
        $sql = "INSERT INTO orders (user_name, email, address, total_amount)
                VALUES ('$user_name', '$email', '$address', $total)";
        mysqli_query($conn, $sql);
        $order_id = mysqli_insert_id($conn);
        
        // Clear cart
        unset($_SESSION['cart']);
        
        // Send email receipt
        $to = $email;
        $subject = "Order Confirmation";
        $message = "Thank you for your order! Your order ID is #" . $order_id .
                   "
Total Amount: $" . number_format($total, 2) .
                   "
Please check your email for further details.";
        
        mail($to, $subject, $message);
        
        // Redirect to thank you page
        header("Location: thank_you.php");
        exit();
    } ?>
    
    <h1>Checkout</h1>
    <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
        <label>Name:</label><br>
        <input type="text" name="name" required><br><br>
        
        <label>Email:</label><br>
        <input type="email" name="email" required><br><br>
        
        <label>Address:</label><br>
        <textarea name="address" rows="4" cols="30" required></textarea><br><br>
        
        <input type="submit" name="submit" value="Place Order">
    </form>
</body>
</html>


<!DOCTYPE html>
<html>
<head>
    <title>Thank You!</title>
</head>
<body>
    <h1>Thank you for your order!</h1>
    <p>Your order has been successfully processed.</p>
    <a href="product_store.php">Continue Shopping</a>
</body>
</html>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'shopping_cart';
$username = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}

// Product class
class Product {
    private $conn;

    public function __construct($db_connection) {
        $this->conn = $db_connection;
    }

    // Get all products
    public function getProducts() {
        try {
            $stmt = $this->conn->query("SELECT * FROM products");
            return $stmt->fetchAll(PDO::FETCH_ASSOC);
        } catch (PDOException $e) {
            echo "Error: " . $e->getMessage();
        }
    }

    // Get product by ID
    public function getProductById($id) {
        try {
            $stmt = $this->conn->prepare("SELECT * FROM products WHERE id = ?");
            $stmt->execute([$id]);
            return $stmt->fetch(PDO::FETCH_ASSOC);
        } catch (PDOException $e) {
            echo "Error: " . $e->getMessage();
        }
    }

    // Add product
    public function addProduct($data) {
        try {
            $stmt = $this->conn->prepare("INSERT INTO products SET 
                name = ?, 
                price = ?, 
                description = ?, 
                quantity = ?, 
                category = ?");
            $stmt->execute([
                $data['name'],
                $data['price'],
                $data['description'],
                $data['quantity'],
                $data['category']
            ]);
            return true;
        } catch (PDOException $e) {
            echo "Error: " . $e->getMessage();
            return false;
        }
    }

    // Update product
    public function updateProduct($id, $data) {
        try {
            $stmt = $this->conn->prepare("UPDATE products SET 
                name = ?, 
                price = ?, 
                description = ?, 
                quantity = ?, 
                category = ? WHERE id = ?");
            $stmt->execute([
                $data['name'],
                $data['price'],
                $data['description'],
                $data['quantity'],
                $data['category'],
                $id
            ]);
            return true;
        } catch (PDOException $e) {
            echo "Error: " . $e->getMessage();
            return false;
        }
    }

    // Delete product
    public function deleteProduct($id) {
        try {
            $stmt = $this->conn->prepare("DELETE FROM products WHERE id = ?");
            $stmt->execute([$id]);
            return true;
        } catch (PDOException $e) {
            echo "Error: " . $e->getMessage();
            return false;
        }
    }
}

// Order class
class Order {
    private $conn;

    public function __construct($db_connection) {
        $this->conn = $db_connection;
    }

    // Get all orders
    public function getOrders() {
        try {
            $stmt = $this->conn->query("SELECT * FROM orders");
            return $stmt->fetchAll(PDO::FETCH_ASSOC);
        } catch (PDOException $e) {
            echo "Error: " . $e->getMessage();
        }
    }

    // Get order by ID
    public function getOrderById($id) {
        try {
            $stmt = $this->conn->prepare("SELECT * FROM orders WHERE id = ?");
            $stmt->execute([$id]);
            return $stmt->fetch(PDO::FETCH_ASSOC);
        } catch (PDOException $e) {
            echo "Error: " . $e->getMessage();
        }
    }

    // Process order
    public function processOrder($data, $product_id, $user_id) {
        try {
            // Check if product is in stock
            $product = new Product($this->conn);
            $product_details = $product->getProductById($product_id);
            
            if ($product_details['quantity'] < $data['quantity']) {
                return false; // Not enough stock
            }

            // Update product quantity
            $new_quantity = $product_details['quantity'] - $data['quantity'];
            $update_stmt = $this->conn->prepare("UPDATE products SET quantity = ? WHERE id = ?");
            $update_stmt->execute([$new_quantity, $product_id]);

            // Insert order
            $order_stmt = $this->conn->prepare("INSERT INTO orders SET 
                user_id = ?, 
                product_id = ?, 
                quantity = ?, 
                order_date = NOW(), 
                status = 'pending', 
                payment_method = ?");
            $order_stmt->execute([
                $user_id,
                $product_id,
                $data['quantity'],
                $data['payment_method']
            ]);
            
            return true;
        } catch (PDOException $e) {
            echo "Error: " . $e->getMessage();
            return false;
        }
    }

    // Get order history for user
    public function getOrderHistory($user_id) {
        try {
            $stmt = $this->conn->prepare("SELECT * FROM orders WHERE user_id = ?");
            $stmt->execute([$user_id]);
            return $stmt->fetchAll(PDO::FETCH_ASSOC);
        } catch (PDOException $e) {
            echo "Error: " . $e->getMessage();
        }
    }
}

// User class
class User {
    private $conn;

    public function __construct($db_connection) {
        $this->conn = $db_connection;
    }

    // Register user
    public function register($data) {
        try {
            // Check if username exists
            $check_stmt = $this->conn->prepare("SELECT * FROM users WHERE username = ?");
            $check_stmt->execute([$data['username']]);
            
            if ($check_stmt->rowCount() > 0) {
                return false; // Username already exists
            }

            // Hash password
            $hashed_password = password_hash($data['password'], PASSWORD_DEFAULT);

            // Insert user
            $stmt = $this->conn->prepare("INSERT INTO users SET 
                username = ?, 
                email = ?, 
                password = ?, 
                address = ?, 
                phone = ?, 
                created_at = NOW()");
            $stmt->execute([
                $data['username'],
                $data['email'],
                $hashed_password,
                $data['address'],
                $data['phone']
            ]);
            
            return true;
        } catch (PDOException $e) {
            echo "Error: " . $e->getMessage();
            return false;
        }
    }

    // Login user
    public function login($username, $password) {
        try {
            $stmt = $this->conn->prepare("SELECT * FROM users WHERE username = ?");
            $stmt->execute([$username]);
            $user = $stmt->fetch(PDO::FETCH_ASSOC);

            if (!$user || !password_verify($password, $user['password'])) {
                return false;
            }

            // Start session
            session_start();
            $_SESSION['user_id'] = $user['id'];
            $_SESSION['username'] = $user['username'];
            
            return true;
        } catch (PDOException $e) {
            echo "Error: " . $e->getMessage();
            return false;
        }
    }

    // Get user by ID
    public function getUserById($id) {
        try {
            $stmt = $this->conn->prepare("SELECT * FROM users WHERE id = ?");
            $stmt->execute([$id]);
            return $stmt->fetch(PDO::FETCH_ASSOC);
        } catch (PDOException $e) {
            echo "Error: " . $e->getMessage();
        }
    }

    // Update user
    public function updateUser($id, $data) {
        try {
            $stmt = $this->conn->prepare("UPDATE users SET 
                username = ?, 
                email = ?, 
                address = ?, 
                phone = ? WHERE id = ?");
            $stmt->execute([
                $data['username'],
                $data['email'],
                $data['address'],
                $data['phone'],
                $id
            ]);
            
            return true;
        } catch (PDOException $e) {
            echo "Error: " . $e->getMessage();
            return false;
        }
    }

    // Delete user
    public function deleteUser($id) {
        try {
            $stmt = $this->conn->prepare("DELETE FROM users WHERE id = ?");
            $stmt->execute([$id]);
            
            session_unset();
            session_destroy();
            
            return true;
        } catch (PDOException $e) {
            echo "Error: " . $e->getMessage();
            return false;
        }
    }
}

// Create tables if not exists
try {
    // Products table
    $conn->exec("CREATE TABLE IF NOT EXISTS products (
        id INT AUTO_INCREMENT PRIMARY KEY,
        name VARCHAR(255) NOT NULL,
        price DECIMAL(10, 2) NOT NULL,
        description TEXT,
        quantity INT NOT NULL,
        category VARCHAR(255)
    )");

    // Orders table
    $conn->exec("CREATE TABLE IF NOT EXISTS orders (
        id INT AUTO_INCREMENT PRIMARY KEY,
        user_id INT NOT NULL,
        product_id INT NOT NULL,
        quantity INT NOT NULL,
        order_date DATETIME DEFAULT CURRENT_TIMESTAMP,
        status ENUM('pending', 'completed', 'cancelled') DEFAULT 'pending',
        payment_method VARCHAR(255)
    )");

    // Users table
    $conn->exec("CREATE TABLE IF NOT EXISTS users (
        id INT AUTO_INCREMENT PRIMARY KEY,
        username VARCHAR(255) UNIQUE NOT NULL,
        email VARCHAR(255) UNIQUE NOT NULL,
        password VARCHAR(255) NOT NULL,
        address TEXT,
        phone VARCHAR(20),
        created_at DATETIME DEFAULT CURRENT_TIMESTAMP
    )");
} catch (PDOException $e) {
    echo "Error creating tables: " . $e->getMessage();
}

// Front-end code example (checkout.php)
?>
<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
</head>
<body>
    <?php
    // Check if user is logged in
    session_start();
    if (!isset($_SESSION['user_id'])) {
        header("Location: login.php");
        exit();
    }

    $order = new Order($conn);
    $product = new Product($conn);

    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        // Process order
        $data = [
            'quantity' => $_POST['quantity'],
            'payment_method' => $_POST['payment_method']
        ];
        
        $user_id = $_SESSION['user_id'];
        $product_id = $_GET['id'];

        if ($order->processOrder($data, $product_id, $user_id)) {
            echo "<div class='alert alert-success'>Order processed successfully!</div>";
        } else {
            echo "<div class='alert alert-danger'>Error processing order!</div>";
        }
    }

    // Get product details
    if (isset($_GET['id'])) {
        $product_details = $product->getProductById($_GET['id']);
    ?>

    <div class="container mt-5">
        <h2>Checkout</h2>
        <form method="POST" action="<?php echo $_SERVER['PHP_SELF']; ?>">
            <input type="hidden" name="id" value="<?php echo $product_details['id']; ?>">
            
            <div class="form-group">
                <label>Product:</label>
                <input type="text" class="form-control" value="<?php echo $product_details['name']; ?>" readonly>
            </div>

            <div class="form-group">
                <label>Price:</label>
                <input type="number" step="0.01" class="form-control" value="<?php echo $product_details['price']; ?>" readonly>
            </div>

            <div class="form-group">
                <label>Quantity:</label>
                <input type="number" min="1" max="<?php echo $product_details['quantity']; ?>" name="quantity" class="form-control" required>
            </div>

            <div class="form-group">
                <label>Payment Method:</label>
                <select name="payment_method" class="form-control" required>
                    <option value="">Select Payment Method</option>
                    <option value="credit_card">Credit Card</option>
                    <option value="paypal">PayPal</option>
                </select>
            </div>

            <button type="submit" class="btn btn-primary">Place Order</button>
        </form>
    </div>

    <?php } ?>

    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
</body>
</html>


<?php
// Database connection
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'purchase_system';

$conn = new mysqli($host, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to get products from database
function get_products() {
    global $conn;
    $sql = "SELECT * FROM products";
    $result = $conn->query($sql);
    
    if ($result->num_rows > 0) {
        while ($row = $result->fetch_assoc()) {
            echo "<div class='product'>";
            echo "<h3>" . $row['name'] . "</h3>";
            echo "<p>Price: $" . number_format($row['price'], 2) . "</p>";
            echo "<form action='add_to_cart.php' method='post'>";
            echo "<input type='hidden' name='product_id' value='" . $row['id'] . "'>";
            echo "<input type='number' name='quantity' min='1' max='" . $row['quantity'] . "' value='1'>";
            echo "<button type='submit'>Add to Cart</button>";
            echo "</form>";
            echo "</div>";
        }
    } else {
        echo "No products available.";
    }
}

// Function to add items to cart
function add_to_cart($product_id, $quantity) {
    global $conn;
    
    if (isset($_SESSION['cart'])) {
        $cart = $_SESSION['cart'];
        
        if (array_key_exists($product_id, $cart)) {
            $cart[$product_id]['quantity'] += $quantity;
        } else {
            $sql = "SELECT * FROM products WHERE id = ?";
            $stmt = $conn->prepare($sql);
            $stmt->bind_param("i", $product_id);
            $stmt->execute();
            
            $result = $stmt->get_result();
            $product = $result->fetch_assoc();
            
            $cart[$product_id] = array(
                'name' => $product['name'],
                'price' => $product['price'],
                'quantity' => $quantity
            );
        }
    } else {
        $sql = "SELECT * FROM products WHERE id = ?";
        $stmt = $conn->prepare($sql);
        $stmt->bind_param("i", $product_id);
        $stmt->execute();
        
        $result = $stmt->get_result();
        $product = $result->fetch_assoc();
        
        $_SESSION['cart'] = array(
            $product_id => array(
                'name' => $product['name'],
                'price' => $product['price'],
                'quantity' => $quantity
            )
        );
    }
    
    $_SESSION['cart'] = $cart;
}

// Function to process checkout
function process_checkout() {
    global $conn;
    
    if (!isset($_SESSION['user_id'])) {
        header("Location: login.php");
        exit();
    }
    
    $total_price = 0;
    $order_items = array();
    
    foreach ($_SESSION['cart'] as $product_id => $item) {
        $total_price += ($item['price'] * $item['quantity']);
        
        $order_items[] = array(
            'product_id' => $product_id,
            'quantity' => $item['quantity'],
            'user_id' => $_SESSION['user_id']
        );
    }
    
    // Insert order into database
    $sql = "INSERT INTO orders (total_price, user_id) VALUES (?, ?)";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("di", $total_price, $_SESSION['user_id']);
    $stmt->execute();
    
    $order_id = $conn->insert_id;
    
    // Insert order items into database
    foreach ($order_items as $item) {
        $sql = "INSERT INTO order_items (order_id, product_id, quantity, user_id) 
                VALUES (?, ?, ?, ?)";
        $stmt = $conn->prepare($sql);
        $stmt->bind_param("iiii", $order_id, $item['product_id'], $item['quantity'], $item['user_id']);
        $stmt->execute();
    }
    
    // Update product quantities
    foreach ($_SESSION['cart'] as $product_id => $item) {
        $sql = "UPDATE products SET quantity = quantity - ? WHERE id = ?";
        $stmt = $conn->prepare($sql);
        $stmt->bind_param("ii", $item['quantity'], $product_id);
        $stmt->execute();
    }
    
    // Clear cart
    unset($_SESSION['cart']);
    
    return true;
}
?>


<?php
// Connect to the database
$host = "localhost";
$user = "username";
$password = "password";
$db_name = "ecommerce";

$conn = mysqli_connect($host, $user, $password, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Product listing page
echo "<table>";
echo "<tr><th>Product</th><th>Price</th><th>Action</th></tr>";

// Display products from database
$sql = "SELECT * FROM products";
$result = mysqli_query($conn, $sql);

while ($row = mysqli_fetch_assoc($result)) {
    echo "<tr>";
    echo "<td>" . $row['product_name'] . "</td>";
    echo "<td>$" . $row['price'] . "</td>";
    echo "<td><form action='add_to_cart.php' method='post'><input type='hidden' name='id' value='" . $row['id'] . "'/><input type='submit' value='Add to Cart'/></form></td>";
    echo "</tr>";
}

echo "</table>";

// Add to cart functionality
if (isset($_POST['id'])) {
    session_start();
    
    $product_id = $_POST['id'];
    
    // Check if product is already in the cart
    if (!isset($_SESSION['cart'][$product_id])) {
        $_SESSION['cart'][$product_id] = array(
            'quantity' => 1,
            'price' => $row['price']
        );
    } else {
        $_SESSION['cart'][$product_id]['quantity']++;
    }
    
    header("Location: cart.php");
}

// Cart page
session_start();

echo "<table>";
echo "<tr><th>Product</th><th>Quantity</th><th>Price</th><th>Total</th><th>Action</th></tr>";

$total = 0;

foreach ($_SESSION['cart'] as $product_id => $item) {
    $sql = "SELECT * FROM products WHERE id=" . $product_id;
    $result = mysqli_query($conn, $sql);
    $row = mysqli_fetch_assoc($result);
    
    echo "<tr>";
    echo "<td>" . $row['product_name'] . "</td>";
    echo "<td>" . $item['quantity'] . "</td>";
    echo "<td>$" . $item['price'] . "</td>";
    echo "<td>$" . number_format($item['price'] * $item['quantity'], 2) . "</td>";
    echo "<td><form action='remove_from_cart.php' method='post'><input type='hidden' name='id' value='" . $product_id . "'/><input type='submit' value='Remove'/></form></td>";
    echo "</tr>";
    
    $total += $item['price'] * $item['quantity'];
}

echo "<tr><td colspan='4'>Total: $" . number_format($total, 2) . "</td><td><a href='checkout.php'>Checkout</a></td></tr>";
echo "</table>";

// Checkout page
if (isset($_POST['submit'])) {
    // Validate input
    $name = mysqli_real_escape_string($conn, $_POST['name']);
    $email = mysqli_real_escape_string($conn, $_POST['email']);
    $address = mysqli_real_escape_string($conn, $_POST['address']);
    
    if (empty($name) || empty($email) || empty($address)) {
        die("Please fill in all required fields");
    }
    
    // Process payment
    // ... Payment processing code here ...
    
    // Clear cart
    session_unset();
    session_destroy();
    
    // Display confirmation message
    echo "<h2>Thank you for your purchase!</h2>";
    echo "<p>Your order has been received and will be processed shortly.</p>";
}

// Remove from cart functionality
if (isset($_POST['id'])) {
    session_start();
    $product_id = $_POST['id'];
    
    if (isset($_SESSION['cart'][$product_id])) {
        unset($_SESSION['cart'][$product_id]);
    }
    
    header("Location: cart.php");
}

mysqli_close($conn);
?>


<?php
session_start();

// Sample products
$products = array(
    array(
        'id' => 1,
        'name' => 'Laptop',
        'price' => 999.99,
        'description' => 'High performance laptop'
    ),
    array(
        'id' => 2,
        'name' => 'Smartphone',
        'price' => 699.99,
        'description' => 'Latest smartphone model'
    ),
    array(
        'id' => 3,
        'name' => 'Tablet',
        'price' => 299.99,
        'description' => 'Portable tablet device'
    )
);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Online Store</title>
</head>
<body>
    <h1>Welcome to Our Online Store</h1>
    
    <?php
    foreach ($products as $product) {
        echo "<div>";
        echo "<h2>{$product['name']}</h2>";
        echo "<p>Description: {$product['description']}</p>";
        echo "<p>Price: \${$product['price']}</p>";
        echo "<a href='add_to_cart.php?id={$product['id']}'>Add to Cart</a>";
        echo "</div>";
    }
    ?>
    
    <p><a href="view_cart.php">View Shopping Cart</a></p>
</body>
</html>


<?php
session_start();

// Get product ID from query string
$product_id = isset($_GET['id']) ? intval($_GET['id']) : 0;

// Sample products (you should retrieve this from a database in a real application)
$products = array(
    1 => array('name' => 'Laptop', 'price' => 999.99),
    2 => array('name' => 'Smartphone', 'price' => 699.99),
    3 => array('name' => 'Tablet', 'price' => 299.99)
);

// Check if product exists
if (isset($products[$product_id])) {
    $product = $products[$product_id];
    
    // If cart doesn't exist, initialize it
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }
    
    // Add item to cart or update quantity
    if (isset($_SESSION['cart'][$product_id])) {
        $_SESSION['cart'][$product_id]['quantity']++;
    } else {
        $_SESSION['cart'][$product_id] = array(
            'name' => $product['name'],
            'price' => $product['price'],
            'quantity' => 1
        );
    }
    
    echo "Item added to cart: {$product['name']}";
} else {
    echo "Invalid product ID";
}

// Redirect back to the product page after a short delay
header("Refresh: 2; url=index.php");
?>


<?php
session_start();

// Calculate total price
$total = 0;
$tax_rate = 0.08;

if (isset($_SESSION['cart'])) {
    foreach ($_SESSION['cart'] as $item) {
        $total += $item['price'] * $item['quantity'];
    }
}

// Apply tax
$total_with_tax = $total + ($total * $tax_rate);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <h1>Your Shopping Cart</h1>
    
    <?php if (!empty($_SESSION['cart'])): ?>
        <table border="1">
            <tr>
                <th>Item</th>
                <th>Price</th>
                <th>Quantity</th>
                <th>Total</th>
                <th>Actions</th>
            </tr>
            
            <?php foreach ($_SESSION['cart'] as $id => $item): ?>
                <tr>
                    <td><?php echo $item['name']; ?></td>
                    <td>$<?php echo number_format($item['price'], 2); ?></td>
                    <td><?php echo $item['quantity']; ?></td>
                    <td>$<?php echo number_format($item['price'] * $item['quantity'], 2); ?></td>
                    <td><a href="remove_from_cart.php?id=<?php echo $id; ?>">Remove</a></td>
                </tr>
            <?php endforeach; ?>
        </table>
        
        <p>Subtotal: $<?php echo number_format($total, 2); ?></p>
        <p>Tax (8%): $<?php echo number_format($total * $tax_rate, 2); ?></p>
        <p>Total: $<?php echo number_format($total_with_tax, 2); ?></p>
        
        <form action="process_payment.php" method="post">
            <h2>Payment Information</h2>
            <label>Credit Card Number:</label><br>
            <input type="text" name="card_number" required><br><br>
            
            <label>Name on Card:</label><br>
            <input type="text" name="name_on_card" required><br><br>
            
            <label>Expiration Date:</label><br>
            <input type="text" name="expiry_date" placeholder="MM/YY" required><br><br>
            
            <label>CVV:</label><br>
            <input type="text" name="cvv" required><br><br>
            
            <button type="submit">Place Order</button>
        </form>
    <?php else: ?>
        <p>Your cart is empty.</p>
    <?php endif; ?>
    
    <p><a href="index.php">Continue Shopping</a></p>
</body>
</html>


<?php
session_start();

// Get payment information
$card_number = $_POST['card_number'];
$name_on_card = $_POST['name_on_card'];
$expiry_date = $_POST['expiry_date'];
$cvv = $_POST['cvv'];

// In a real application, you would:
// 1. Validate the payment details
// 2. Connect to a payment gateway
// 3. Process the transaction

// For this example, we'll simulate successful payment
$transaction_id = time();

// Log the transaction (you would store this in your database)
$transaction_log = "Transaction ID: $transaction_id
";
$transaction_log .= "Card Number: $card_number
";
$transaction_log .= "Name on Card: $name_on_card
";
$transaction_log .= "Expiry Date: $expiry_date
";
$transaction_log .= "CVV: $cvv
";

file_put_contents('transactions.log', $transaction_log, FILE_APPEND);

// Clear the cart
unset($_SESSION['cart']);

// Redirect to thank you page
header("Location: thank_you.php");
?>


<?php
session_start();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Thank You</title>
</head>
<body>
    <h1>Thank You for Your Purchase!</h1>
    
    <p>Your order has been processed successfully.</p>
    
    <p><a href="index.php">Continue Shopping</a></p>
</body>
</html>


<?php
// Configuration
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

try {
    // Connect to the database
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

    // Get form data
    $product_name = $_POST['product_name'];
    $quantity = $_POST['quantity'];
    $price = $_POST['price'];
    $user_name = $_POST['user_name'];
    $email = $_POST['email'];

    // Validate input
    if (empty($product_name) || empty($quantity) || empty($price) || empty($user_name) || empty($email)) {
        die("All fields are required.");
    }

    if (!is_numeric($quantity) || !is_numeric($price) || $quantity <= 0 || $price <= 0) {
        die("Quantity and price must be positive numbers.");
    }

    // Calculate total
    $total = $quantity * $price;

    // Insert into database
    $stmt = $conn->prepare("
        INSERT INTO orders (product_name, quantity, price, total, user_name, email, purchase_date)
        VALUES (:product_name, :quantity, :price, :total, :user_name, :email, NOW())
    ");
    
    $stmt->bindParam(':product_name', $product_name);
    $stmt->bindParam(':quantity', $quantity);
    $quantity = (int)$quantity;
    $stmt->bindParam(':price', $price);
    $price = floatval($price);
    $stmt->bindParam(':total', $total);
    $total = floatval($total);
    $stmt->bindParam(':user_name', $user_name);
    $stmt->bindParam(':email', $email);

    if ($stmt->execute()) {
        // Get the order ID
        $order_id = $conn->lastInsertId();

        // Email notification to admin and customer
        $admin_email = "your_admin_email@example.com";
        $subject = "New Order Received (Order #" . $order_id . ")";
        $message = "
            <html>
                <head>
                    <title>New Order</title>
                </head>
                <body>
                    <p>A new order has been received:</p>
                    <p><strong>Order ID:</strong> " . $order_id . "</p>
                    <p><strong>Product:</strong> " . $product_name . "</p>
                    <p><strong>Quantity:</strong> " . $quantity . "</p>
                    <p><strong>Price:</strong> $" . number_format($price, 2) . "</p>
                    <p><strong>Total:</strong> $" . number_format($total, 2) . "</p>
                    <p><strong>Name:</strong> " . $user_name . "</p>
                    <p><strong>Email:</strong> " . $email . "</p>
                </body>
            </html>
        ";

        // Send email
        $headers = "MIME-Version: 1.0\r
";
        $headers .= "Content-Type: text/html; charset=UTF-8\r
";
        $headers .= "From: Order System <order-system@" . $_SERVER['SERVER_NAME'] . ">\r
";

        mail($admin_email, $subject, $message, $headers);
        mail($email, $subject, $message, $headers);

        // Show success message
        echo "<h2>Thank you for your purchase!</h2>";
        echo "<p>Your order has been received. A confirmation email has been sent to " . $email . ". Your order ID is #" . $order_id . ".</p>";
    } else {
        die("Error processing your order.");
    }

} catch(PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}
?>


<?php
// Configuration
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

    // Query all orders
    $stmt = $conn->query("SELECT * FROM orders ORDER BY purchase_date DESC");
    $orders = $stmt->fetchAll(PDO::FETCH_ASSOC);

} catch(PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Order Review</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            max-width: 1200px;
            margin: 20px auto;
            padding: 20px;
        }
        table {
            width: 100%;
            border-collapse: collapse;
        }
        th, td {
            padding: 12px;
            text-align: left;
            border-bottom: 1px solid #ddd;
        }
        tr:hover {background-color: #f5f5f5;}
        .total-row {
            font-weight: bold;
            background-color: #f9f9f9;
        }
    </style>
</head>
<body>
    <h2>Order Review</h2>

    <?php if (!empty($orders)): ?>
        <table>
            <tr>
                <th>Order ID</th>
                <th>Product Name</th>
                <th>Quantity</th>
                <th>Price</th>
                <th>Total</th>
                <th>Name</th>
                <th>Email</th>
                <th>Purchase Date</th>
            </tr>

            <?php foreach ($orders as $order): ?>
                <tr>
                    <td><?php echo $order['order_id']; ?></td>
                    <td><?php echo $order['product_name']; ?></td>
                    <td><?php echo $order['quantity']; ?></td>
                    <td>$<?php echo number_format($order['price'], 2); ?></td>
                    <td>$<?php echo number_format($order['total'], 2); ?></td>
                    <td><?php echo $order['user_name']; ?></td>
                    <td><?php echo $order['email']; ?></td>
                    <td><?php echo $order['purchase_date']; ?></td>
                </tr>
            <?php endforeach; ?>

        </table>
    <?php else: ?>
        <p>No orders found.</p>
    <?php endif; ?>

</body>
</html>


session_start();

// Connect to database
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "myDB";

$conn = new mysqli($servername, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function add_to_cart($product_id, $quantity) {
    global $conn;
    
    // Check if product exists
    $stmt = $conn->prepare("SELECT id, price, stock FROM products WHERE id = ?");
    $stmt->bind_param("i", $product_id);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows > 0) {
        $product = $result->fetch_assoc();
        
        // Check if quantity is available
        if ($quantity <= $product['stock']) {
            $cart_item = array(
                'id' => $product['id'],
                'name' => $product['name'],
                'price' => $product['price'],
                'quantity' => $quantity,
                'total_price' => $product['price'] * $quantity
            );
            
            if (isset($_SESSION['cart'])) {
                $_SESSION['cart'][] = $cart_item;
            } else {
                $_SESSION['cart'] = array($cart_item);
            }
            
            return true;
        } else {
            return false; // Not enough stock
        }
    } else {
        return false; // Product not found
    }
}


function view_cart() {
    if (isset($_SESSION['cart'])) {
        $total = 0;
        foreach ($_SESSION['cart'] as $item) {
            echo "<div>";
            echo "Product: " . $item['name'] . "<br />";
            echo "Price: $" . number_format($item['price'], 2) . "<br />";
            echo "Quantity: " . $item['quantity'] . "<br />";
            echo "Total: $" . number_format($item['total_price'], 2) . "<br />";
            echo "</div>";
            
            $total += $item['total_price'];
        }
        echo "<h3>Total: $" . number_format($total, 2) . "</h3>";
    } else {
        echo "Your cart is empty.";
    }
}


function checkout() {
    if (!isset($_SESSION['user_id'])) {
        header("Location: login.php");
        exit();
    }
    
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += $item['total_price'];
    }
    
    // Insert order into database
    $stmt = $conn->prepare("INSERT INTO orders (user_id, total, payment_status) VALUES (?, ?, 'pending')");
    $stmt->bind_param("id", $_SESSION['user_id'], $total);
    $stmt->execute();
    $order_id = $conn->insert_id;
    
    // Insert order details
    foreach ($_SESSION['cart'] as $item) {
        $stmt = $conn->prepare("INSERT INTO order_details (order_id, product_id, quantity, price) VALUES (?, ?, ?, ?)");
        $stmt->bind_param("iidi", $order_id, $item['id'], $item['quantity'], $item['price']);
        $stmt->execute();
    }
    
    // Clear cart
    unset($_SESSION['cart']);
    
    return $order_id;
}


function process_payment($order_id, $payment_method) {
    global $conn;
    
    // Calculate total amount
    $total = 0;
    $stmt = $conn->prepare("SELECT price, quantity FROM order_details WHERE order_id = ?");
    $stmt->bind_param("i", $order_id);
    $stmt->execute();
    $result = $stmt->get_result();
    
    while ($row = $result->fetch_assoc()) {
        $total += $row['price'] * $row['quantity'];
    }
    
    // Insert payment
    $stmt = $conn->prepare("INSERT INTO payments (order_id, payment_method, amount) VALUES (?, ?, ?)");
    $stmt->bind_param("isi", $order_id, $payment_method, $total);
    $stmt->execute();
    
    // Update order status
    $stmt = $conn->prepare("UPDATE orders SET payment_status = 'completed' WHERE id = ?");
    $stmt->bind_param("i", $order_id);
    $stmt->execute();
}


function login($email, $password) {
    global $conn;
    
    $stmt = $conn->prepare("SELECT id, username FROM users WHERE email = ? AND password_hash = ?");
    $stmt->bind_param("ss", $email, md5($password));
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows > 0) {
        $_SESSION['user_id'] = $row['id'];
        $_SESSION['username'] = $row['username'];
        return true;
    } else {
        return false; // Invalid credentials
    }
}


session_start();

// Add a product to cart
add_to_cart(1, 2);

// View cart
view_cart();

// Checkout
if (isset($_SESSION['user_id'])) {
    $order_id = checkout();
    
    // Process payment
    process_payment($order_id, 'credit_card');
} else {
    echo "Please log in to continue.";
}


<?php
// config.php - Database configuration
$host = 'localhost';
$dbname = 'ecommerce';
$username = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Product Purchase</title>
</head>
<body>
<?php
// Include database connection
include_once("config.php");

if (isset($_GET['product_id']) && isset($_GET['user_id'])) {
    $product_id = $_GET['product_id'];
    $user_id = $_GET['user_id'];

    try {
        // Query product details
        $stmt = $conn->prepare("SELECT * FROM products WHERE id = ?");
        $stmt->execute([$product_id]);
        $product = $stmt->fetch(PDO::FETCH_ASSOC);

        if ($product) {
            // Payment processing (simplified)
            $amount = $product['price'];
            $description = "Purchase of " . $product['name'];

            // Redirect to payment gateway
            header("Location: payment_gateway.php?amount=" . urlencode($amount) . "&user_id=" . urlencode($user_id) . "&order_id=123");
            exit();
        } else {
            echo "Product not found.";
        }
    } catch(PDOException $e) {
        echo "Error: " . $e->getMessage();
    }
} else {
    echo "Invalid request.";
}
?>
</body>
</html>

<?php
// payment_gateway.php - Payment processing logic
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Process payment
    $amount = $_POST['amount'];
    $user_id = $_POST['user_id'];
    $order_id = $_POST['order_id'];

    // Here you would integrate with a real payment gateway
    // For example, using Stripe, PayPal, or another service

    // Simplified success handling
    if (processPayment($amount)) {
        // Record the purchase in the database
        try {
            $conn = new PDO("mysql:host=localhost;dbname=ecommerce", 'root', '');
            $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

            $stmt = $conn->prepare("INSERT INTO purchases (user_id, order_id, amount) VALUES (?, ?, ?)");
            $stmt->execute([$user_id, $order_id, $amount]);

            echo "Payment successful!";
        } catch(PDOException $e) {
            echo "Error: " . $e->getMessage();
        }
    } else {
        echo "Payment failed.";
    }
}

function processPayment($amount) {
    // This is a placeholder function
    // Replace with actual payment processing logic
    return true;
}
?>


<?php
session_start();
require_once "db_connection.php";

// Fetch all products from database
$products = $conn->query("SELECT * FROM products");
?>

<!DOCTYPE html>
<html>
<head>
    <title>Products</title>
</head>
<body>
    <h1>Available Products</h1>
    <?php while ($product = $products->fetch_assoc()): ?>
        <div style="border: 1px solid #ddd; padding: 10px; margin-bottom: 10px;">
            <h3><?php echo $product['name']; ?></h3>
            <p><?php echo $product['description']; ?></p>
            <p>Price: <?php echo "$" . number_format($product['price'], 2); ?></p>
            <form action="add_to_cart.php" method="GET">
                <input type="hidden" name="id" value="<?php echo $product['id']; ?>">
                <?php if ($product['stock'] > 0): ?>
                    <button type="submit">Buy Now</button>
                <?php else: ?>
                    <p>Out of stock</p>
                <?php endif; ?>
            </form>
        </div>
    <?php endwhile; ?>

    <a href="cart.php">View Cart</a>
</body>
</html>


<?php
session_start();
require_once "db_connection.php";

if (isset($_GET['id'])) {
    $product_id = $_GET['id'];
    
    // Fetch product details from database
    $result = $conn->query("SELECT * FROM products WHERE id = $product_id");
    if ($product = $result->fetch_assoc()) {
        // Add to cart
        $cart_item = array(
            'id' => $product['id'],
            'name' => $product['name'],
            'price' => $product['price'],
            'quantity' => 1
        );
        
        if (empty($_SESSION['cart'])) {
            $_SESSION['cart'] = array();
        }
        
        // Add product to cart or increase quantity if already present
        $found_product = false;
        foreach ($_SESSION['cart'] as &$item) {
            if ($item['id'] == $product_id) {
                $item['quantity']++;
                $found_product = true;
                break;
            }
        }
        
        if (!$found_product) {
            array_push($_SESSION['cart'], $cart_item);
        }
    } else {
        // Product not found
        echo "Product not found!";
    }
}

header("Location: cart.php");
exit();
?>


<?php
session_start();
require_once "db_connection.php";

// Calculate subtotal
$subtotal = 0;
foreach ($_SESSION['cart'] as $item) {
    $subtotal += ($item['price'] * $item['quantity']);
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <h1>Your Shopping Cart</h1>
    
    <?php if (!empty($_SESSION['cart'])): ?>
        <form action="checkout.php" method="POST">
            <?php foreach ($_SESSION['cart'] as $item): ?>
                <div style="border: 1px solid #ddd; padding: 10px; margin-bottom: 10px;">
                    <h3><?php echo $item['name']; ?></h3>
                    <p>Price: <?php echo "$" . number_format($item['price'], 2); ?></p>
                    <input type="number" name="quantity_<?php echo $item['id']; ?>" value="<?php echo $item['quantity']; ?>" min="1">
                    <a href="remove_from_cart.php?id=<?php echo $item['id']; ?>">Remove</a>
                </div>
            <?php endforeach; ?>
            
            <p>Subtotal: <?php echo "$" . number_format($subtotal, 2); ?></p>
            <button type="submit">Checkout</button>
        </form>
    <?php else: ?>
        <p>Your cart is empty.</p>
    <?php endif; ?>

    <a href="products.php">Continue Shopping</a>
</body>
</html>


<?php
session_start();

if (isset($_GET['id'])) {
    $product_id = $_GET['id'];
    
    // Remove product from cart
    foreach ($_SESSION['cart'] as $key => $item) {
        if ($item['id'] == $product_id) {
            unset($_SESSION['cart'][$key]);
            break;
        }
    }
    
    // Re-index array keys
    $_SESSION['cart'] = array_values($_SESSION['cart']);
}

header("Location: cart.php");
exit();
?>


<?php
session_start();

if (!empty($_POST)) {
    // Process order
    $order_details = array(
        'user_name' => $_POST['name'],
        'email' => $_POST['email'],
        'address' => $_POST['address'],
        'phone' => $_POST['phone']
    );
    
    // Store order details in session for confirmation page
    $_SESSION['order'] = $order_details;
    header("Location: order_confirmation.php");
} else {
    // Show checkout form
?>
<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
</head>
<body>
    <h1>Checkout</h1>
    <form action="checkout.php" method="POST">
        <div style="border: 1px solid #ddd; padding: 20px;">
            <label for="name">Name:</label><br>
            <input type="text" name="name" required><br><br>
            
            <label for="email">Email:</label><br>
            <input type="email" name="email" required><br><br>
            
            <label for="address">Address:</label><br>
            <textarea name="address" rows="3" cols="40" required></textarea><br><br>
            
            <label for="phone">Phone Number:</label><br>
            <input type="tel" name="phone" required><br><br>
            
            <h2>Payment Method</h2>
            <input type="radio" name="payment_method" value="credit_card" checked> Credit Card
            <input type="radio" name="payment_method" value="paypal"> PayPal<br><br>
            
            <!-- Add more payment method fields if needed -->
        </div>
        
        <?php foreach ($_SESSION['cart'] as $item): ?>
            <p><?php echo $item['name']; ?> x<?php echo $item['quantity']; ?></p>
        <?php endforeach; ?>
        
        <button type="submit">Complete Purchase</button>
    </form>
</body>
</html>
<?php } // End of POST check


<?php
session_start();
require_once "db_connection.php";

// Store order in database
if (isset($_SESSION['order']) && !empty($_SESSION['cart'])) {
    $user_name = $_SESSION['order']['user_name'];
    $email = $_SESSION['order']['email'];
    $address = $_SESSION['order']['address'];
    $phone = $_SESSION['order']['phone'];
    
    foreach ($_SESSION['cart'] as $item) {
        // Insert order into orders table
        $stmt = $conn->prepare("INSERT INTO orders (product_id, user_name, quantity, total_price, purchase_date, payment_status) VALUES (?, ?, ?, ?, NOW(), ?)");
        $stmt->bind_param("iisds", $item['id'], $user_name, $item['quantity'], ($item['price'] * $item['quantity']), 'completed');
        $stmt->execute();
    }
    
    // Clear cart
    unset($_SESSION['cart']);
}

// Show confirmation message
?>

<!DOCTYPE html>
<html>
<head>
    <title>Order Confirmation</title>
</head>
<body>
    <h1>Thank you for your purchase!</h1>
    <?php if (isset($_SESSION['order'])): ?>
        <p>Your order has been successfully placed.</p>
        <p>Name: <?php echo $_SESSION['order']['user_name']; ?></p>
        <p>Email: <?php echo $_SESSION['order']['email']; ?></p>
        <p>Address: <?php echo $_SESSION['order']['address']; ?></p>
        <p>Phone Number: <?php echo $_SESSION['order']['phone']; ?></p>
        
        <!-- Display order details -->
        <?php foreach ($_SESSION['cart'] as $item): ?>
            <div style="border: 1px solid #ddd; padding: 10px; margin-bottom: 10px;">
                <h3><?php echo $item['name']; ?></h3>
                <p>Quantity: <?php echo $item['quantity']; ?></p>
                <p>Total: <?php echo "$" . number_format(($item['price'] * $item['quantity']), 2); ?></p>
            </div>
        <?php endforeach; ?>
        
        <p>Your order will be processed shortly.</p>
    <?php endif; ?>
</body>
</html>

<?php
// Unset order details after confirmation
unset($_SESSION['order']);
?>


<?php
$servername = "localhost";
$username = "root";
$password = "";
$dbname = "your_database_name";

$conn = new mysqli($servername, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}
?>


<?php
// Database connection
$host = 'localhost';
$dbname = 'eCommerce';
$user = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $user, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}

// Product class
class Product {
    private static $conn;

    public function __construct($connection) {
        self::$conn = $connection;
    }

    // Get all products
    public static function getAllProducts() {
        try {
            $stmt = self::$conn->query("SELECT * FROM products");
            return $stmt->fetchAll(PDO::FETCH_ASSOC);
        } catch(PDOException $e) {
            echo "Error: " . $e->getMessage();
            return false;
        }
    }

    // Add new product
    public static function addProduct($name, $price, $description) {
        try {
            $stmt = self::$conn->prepare("INSERT INTO products (name, price, description) VALUES (:name, :price, :description)");
            $stmt->bindParam(':name', $name);
            $stmt->bindParam(':price', $price);
            $stmt->bindParam(':description', $description);
            return $stmt->execute();
        } catch(PDOException $e) {
            echo "Error: " . $e->getMessage();
            return false;
        }
    }

    // Update product
    public static function updateProduct($id, $name, $price, $description) {
        try {
            $stmt = self::$conn->prepare("UPDATE products SET name=:name, price=:price, description=:description WHERE id=:id");
            $stmt->bindParam(':id', $id);
            $stmt->bindParam(':name', $name);
            $stmt->bindParam(':price', $price);
            $stmt->bindParam(':description', $description);
            return $stmt->execute();
        } catch(PDOException $e) {
            echo "Error: " . $e->getMessage();
            return false;
        }
    }

    // Delete product
    public static function deleteProduct($id) {
        try {
            $stmt = self::$conn->prepare("DELETE FROM products WHERE id=:id");
            $stmt->bindParam(':id', $id);
            return $stmt->execute();
        } catch(PDOException $e) {
            echo "Error: " . $e->getMessage();
            return false;
        }
    }
}

// Order class
class Order {
    private static $conn;

    public function __construct($connection) {
        self::$conn = $connection;
    }

    // Get all orders
    public static function getAllOrders() {
        try {
            $stmt = self::$conn->query("SELECT * FROM orders");
            return $stmt->fetchAll(PDO::FETCH_ASSOC);
        } catch(PDOException $e) {
            echo "Error: " . $e->getMessage();
            return false;
        }
    }

    // Add new order
    public static function addOrder($userId, $totalAmount) {
        try {
            $stmt = self::$conn->prepare("INSERT INTO orders (user_id, total_amount, order_date) VALUES (:user_id, :total_amount, NOW())");
            $stmt->bindParam(':user_id', $userId);
            $stmt->bindParam(':total_amount', $totalAmount);
            return $stmt->execute();
        } catch(PDOException $e) {
            echo "Error: " . $e->getMessage();
            return false;
        }
    }

    // Get order details
    public static function getOrderDetails($orderId) {
        try {
            $stmt = self::$conn->prepare("SELECT * FROM orders WHERE id=:id");
            $stmt->bindParam(':id', $orderId);
            $stmt->execute();
            return $stmt->fetch(PDO::FETCH_ASSOC);
        } catch(PDOException $e) {
            echo "Error: " . $e->getMessage();
            return false;
        }
    }
}

// Cart class
class Cart {
    private static $conn;

    public function __construct($connection) {
        self::$conn = $connection;
    }

    // Add item to cart
    public static function addToCart($userId, $productId, $quantity) {
        try {
            // Check if product already exists in cart
            $stmt = self::$conn->prepare("SELECT id FROM cart WHERE user_id=:user_id AND product_id=:product_id");
            $stmt->bindParam(':user_id', $userId);
            $stmt->bindParam(':product_id', $productId);
            $stmt->execute();

            if ($stmt->rowCount() > 0) {
                // Update quantity
                $stmt = self::$conn->prepare("UPDATE cart SET quantity=:quantity WHERE user_id=:user_id AND product_id=:product_id");
                $stmt->bindParam(':quantity', $quantity);
                return $stmt->execute();
            } else {
                // Insert new item
                $stmt = self::$conn->prepare("INSERT INTO cart (user_id, product_id, quantity) VALUES (:user_id, :product_id, :quantity)");
                $stmt->bindParam(':user_id', $userId);
                $stmt->bindParam(':product_id', $productId);
                $stmt->bindParam(':quantity', $quantity);
                return $stmt->execute();
            }
        } catch(PDOException $e) {
            echo "Error: " . $e->getMessage();
            return false;
        }
    }

    // Get cart items
    public static function getCartItems($userId) {
        try {
            $stmt = self::$conn->prepare("SELECT * FROM cart WHERE user_id=:user_id");
            $stmt->bindParam(':user_id', $userId);
            $stmt->execute();
            return $stmt->fetchAll(PDO::FETCH_ASSOC);
        } catch(PDOException $e) {
            echo "Error: " . $e->getMessage();
            return false;
        }
    }

    // Remove item from cart
    public static function removeFromCart($userId, $productId) {
        try {
            $stmt = self::$conn->prepare("DELETE FROM cart WHERE user_id=:user_id AND product_id=:product_id");
            $stmt->bindParam(':user_id', $userId);
            $stmt->bindParam(':product_id', $productId);
            return $stmt->execute();
        } catch(PDOException $e) {
            echo "Error: " . $e->getMessage();
            return false;
        }
    }
}

// Initialize classes
$product = new Product($conn);
$order = new Order($conn);
$cart = new Cart($conn);

?>

<!DOCTYPE html>
<html>
<head>
    <title>E-Commerce</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 20px;
        }
        .container {
            max-width: 1200px;
            margin: 0 auto;
        }
        .product-list {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
            gap: 20px;
        }
        .product-card {
            border: 1px solid #ddd;
            padding: 10px;
            text-align: center;
        }
    </style>
</head>
<body>
    <div class="container">
        <?php
        // Display products
        $products = Product::getAllProducts();
        if ($products) {
            echo "<h2>Product List</h2>";
            echo "<div class='product-list'>";
            foreach ($products as $product) {
                echo "<div class='product-card'>";
                echo "<h3>" . $product['name'] . "</h3>";
                echo "<p>Price: $" . number_format($product['price'], 2) . "</p>";
                echo "<p>Description: " . $product['description'] . "</p>";
                echo "<form action='add_to_cart.php' method='post'>";
                echo "<input type='hidden' name='product_id' value='" . $product['id'] . "'>";
                echo "<input type='number' name='quantity' min='1' value='1'>";
                echo "<button type='submit'>Add to Cart</button>";
                echo "</form>";
                echo "</div>";
            }
            echo "</div>";
        }
        ?>

        <?php
        // Display cart
        session_start();
        $userId = 1; // Replace with actual user ID
        $cartItems = Cart::getCartItems($userId);
        if ($cartItems) {
            echo "<h2>Your Cart</h2>";
            echo "<table border='1'>";
            echo "<tr><th>Product</th><th>Quantity</th><th>Total</th><th>Action</th></tr>";
            $total = 0;
            foreach ($cartItems as $item) {
                $product = Product::getProductById($item['product_id']);
                if ($product) {
                    $subtotal = $product['price'] * $item['quantity'];
                    $total += $subtotal;
                    echo "<tr>";
                    echo "<td>" . $product['name'] . "</td>";
                    echo "<td><input type='number' name='quantity_" . $item['id'] . "' value='" . $item['quantity'] . "'></td>";
                    echo "<td>$" . number_format($subtotal, 2) . "</td>";
                    echo "<td><a href='update_cart.php?id=" . $item['id'] . "&userId=" . $userId . "'>Update</a> | <a href='remove_from_cart.php?id=" . $item['id'] . "&userId=" . $userId . "'>Remove</a></td>";
                    echo "</tr>";
                }
            }
            echo "<tr><td colspan='3'>Total: $" . number_format($total, 2) . "</td><td><a href='checkout.php'>Checkout</a></td></tr>";
            echo "</table>";
        } else {
            echo "<p>Your cart is empty.</p>";
        }
        ?>
    </div>
</body>
</html>

<!-- Separate files needed -->
<!-- add_to_cart.php, update_cart.php, remove_from_cart.php, checkout.php -->


<?php
session_start();
require_once 'db_connection.php';

// Get all products from database
$sql = "SELECT * FROM products";
$result = $conn->query($sql);
$products = $result->fetch_all(MYSQLI_ASSOC);

// Add product to cart
if (isset($_GET['add_to_cart'])) {
    $productId = $_GET['add_to_cart'];
    
    if (!isset($_SESSION['cart'][$productId])) {
        // Get product details from database
        $sql = "SELECT * FROM products WHERE id = ?";
        $stmt = $conn->prepare($sql);
        $stmt->bind_param("i", $productId);
        $stmt->execute();
        $result = $stmt->get_result();
        $product = $result->fetch_assoc();
        
        $_SESSION['cart'][$productId] = array(
            'name' => $product['name'],
            'price' => $product['price'],
            'quantity' => 1
        );
    } else {
        // Increment quantity if product already exists in cart
        $_SESSION['cart'][$productId]['quantity']++;
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Store</title>
</head>
<body>
    <h1>Our Products</h1>
    <?php foreach ($products as $product) { ?>
        <div style="border: 1px solid #ddd; padding: 10px; margin: 5px;">
            <h3><?php echo $product['name']; ?></h3>
            <p>Price: $<?php echo number_format($product['price'], 2); ?></p>
            <?php if ($product['image_path']) { ?>
                <img src="<?php echo $product['image_path']; ?>" alt="<?php echo $product['name']; ?>" width="100">
            <?php } ?>
            <a href="?add_to_cart=<?php echo $product['id']; ?>">Add to Cart</a>
        </div>
    <?php } ?>

    <p><a href="cart.php">View Cart</a></p>
</body>
</html>


<?php
session_start();

// Calculate total price
$total = 0;
foreach ($_SESSION['cart'] as $item) {
    $total += $item['price'] * $item['quantity'];
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <h1>Your Shopping Cart</h1>
    
    <?php if (empty($_SESSION['cart'])) { ?>
        <p>Your cart is empty.</p>
    <?php } else { ?>
        <table border="1">
            <tr>
                <th>Product Name</th>
                <th>Price</th>
                <th>Quantity</th>
                <th>Total</th>
                <th>Action</th>
            </tr>
            
            <?php foreach ($_SESSION['cart'] as $id => $item) { ?>
                <tr>
                    <td><?php echo $item['name']; ?></td>
                    <td>$<?php echo number_format($item['price'], 2); ?></td>
                    <td>
                        <form action="update_cart.php" method="post">
                            <input type="hidden" name="product_id" value="<?php echo $id; ?>">
                            <input type="number" name="quantity" min="1" value="<?php echo $item['quantity']; ?>" style="width: 50px;">
                            <button type="submit">Update</button>
                        </form>
                    </td>
                    <td>$<?php echo number_format($item['price'] * $item['quantity'], 2); ?></td>
                    <td><a href="delete_item.php?id=<?php echo $id; ?>">Delete</a></td>
                </tr>
            <?php } ?>
        </table>
        
        <p>Total: $<?php echo number_format($total, 2); ?></p>
    <?php } ?>

    <p><a href="index.php">Continue Shopping</a></p>
</body>
</html>


<?php
session_start();
require_once 'db_connection.php';

if (isset($_POST['quantity']) && isset($_POST['product_id'])) {
    $productId = $_POST['product_id'];
    $quantity = max(1, intval($_POST['quantity']));
    
    if (isset($_SESSION['cart'][$productId])) {
        $_SESSION['cart'][$productId]['quantity'] = $quantity;
    }
}

header('Location: cart.php');
exit();


<?php
session_start();

if (isset($_GET['id'])) {
    $productId = $_GET['id'];
    
    if (isset($_SESSION['cart'][$productId])) {
        unset($_SESSION['cart'][$productId]);
    }
}

header('Location: cart.php');
exit();


<?php
$host = 'localhost';
$username = 'root'; // Change to your database username
$password = '';      // Change to your database password
$dbname = 'shopping_cart';

$conn = new mysqli($host, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}
?>


<?php
require 'config.php';

// Fetch all products from the database
$sql = "SELECT * FROM products";
$stmt = $pdo->query($sql);
$products = $stmt->fetchAll(PDO::FETCH_ASSOC);

?>

<!DOCTYPE html>
<html>
<head>
    <title>Product Store</title>
    <style>
        .product {
            border: 1px solid #ddd;
            padding: 10px;
            margin: 5px;
        }
        .price {
            color: red;
            font-weight: bold;
        }
    </style>
</head>
<body>
    <h1>Product Store</h1>
    <?php foreach ($products as $product): ?>
        <div class="product">
            <?php if ($product['image_url']): ?>
                <img src="<?php echo htmlspecialchars($product['image_url'], ENT_QUOTES, 'UTF-8'); ?>" alt="<?php echo htmlspecialchars($product['name'], ENT_QUOTES, 'UTF-8'); ?>" style="max-width: 200px;">
            <?php endif; ?>
            <h3><?php echo htmlspecialchars($product['name'], ENT_QUOTES, 'UTF-8'); ?></h3>
            <p><?php echo nl2br(htmlspecialchars($product['description'], ENT_QUOTES, 'UTF-8')); ?></p>
            <p class="price">$<?php echo number_format($product['price'], 2); ?></p>
            <?php if ($product['stock'] > 0): ?>
                <form action="add_to_cart.php" method="post">
                    <input type="hidden" name="product_id" value="<?php echo $product['id']; ?>">
                    <input type="number" name="quantity" min="1" max="<?php echo $product['stock']; ?>" value="1">
                    <button type="submit">Add to Cart</button>
                </form>
            <?php else: ?>
                <p>Out of Stock</p>
            <?php endif; ?>
        </div>
    <?php endforeach; ?>

    <a href="cart.php">View Cart</a>
</body>
</html>


<?php
session_start();

if (isset($_POST['product_id']) && isset($_POST['quantity'])) {
    $product_id = $_POST['product_id'];
    $quantity = $_POST['quantity'];

    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }

    // Check if the product is already in the cart
    if (array_key_exists($product_id, $_SESSION['cart'])) {
        $_SESSION['cart'][$product_id] += $quantity;
    } else {
        $_SESSION['cart'][$product_id] = $quantity;
    }

    header('Location: index.php');
} else {
    header('Location: index.php');
}


<?php
session_start();

require 'config.php';

// Get product details for items in the cart
$cart = array();
if (isset($_SESSION['cart'])) {
    foreach ($_SESSION['cart'] as $product_id => $quantity) {
        $sql = "SELECT * FROM products WHERE id = ?";
        $stmt = $pdo->prepare($sql);
        $stmt->execute([$product_id]);
        $product = $stmt->fetch(PDO::FETCH_ASSOC);

        if ($product && $product['stock'] >= $quantity) {
            $cart[] = array_merge(['quantity' => $quantity], $product);
        }
    }
}

?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
    <style>
        .cart-item {
            border: 1px solid #ddd;
            padding: 10px;
            margin: 5px;
        }
    </style>
</head>
<body>
    <h1>Your Shopping Cart</h1>
    <?php if ($cart): ?>
        <?php foreach ($cart as $item): ?>
            <div class="cart-item">
                <h3><?php echo htmlspecialchars($item['name'], ENT_QUOTES, 'UTF-8'); ?></h3>
                <p>Quantity: <?php echo $item['quantity']; ?></p>
                <p>Price: $<?php echo number_format($item['price'], 2); ?></p>
                <form action="remove_from_cart.php" method="post">
                    <input type="hidden" name="product_id" value="<?php echo $item['id']; ?>">
                    <button type="submit">Remove</button>
                </form>
            </div>
        <?php endforeach; ?>

        <h3>Total: $<?php 
            $total = 0;
            foreach ($cart as $item) {
                $total += $item['price'] * $item['quantity'];
            }
            echo number_format($total, 2); 
        ?></h3>
        
        <a href="checkout.php">Proceed to Checkout</a> |
        <a href="index.php">Continue Shopping</a>
    <?php else: ?>
        <p>Your cart is empty.</p>
        <a href="index.php">Go Back to Store</a>
    <?php endif; ?>
</body>
</html>


<?php
session_start();

if (isset($_POST['product_id'])) {
    $product_id = $_POST['product_id'];

    if (isset($_SESSION['cart'][$product_id])) {
        unset($_SESSION['cart'][$product_id]);
    }

    header('Location: cart.php');
} else {
    header('Location: cart.php');
}


<?php
session_start();

if (!isset($_SESSION['cart']) || empty($_SESSION['cart'])) {
    header('Location: index.php');
}

require 'config.php';

// Calculate total price
$total = 0;
foreach ($_SESSION['cart'] as $product_id => $quantity) {
    $sql = "SELECT * FROM products WHERE id = ?";
    $stmt = $pdo->prepare($sql);
    $stmt->execute([$product_id]);
    $product = $stmt->fetch(PDO::FETCH_ASSOC);

    if ($product && $product['stock'] >= $quantity) {
        $total += $product['price'] * $quantity;
    }
}

?>

<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
</head>
<body>
    <h1>Checkout</h1>
    <?php if (!isset($_SESSION['cart']) || empty($_SESSION['cart'])): ?>
        <p>Your cart is empty.</p>
        <a href="index.php">Go Back to Store</a>
    <?php else: ?>
        <form action="process_order.php" method="post">
            <div style="float: left; width: 50%; margin-right: 20px;">
                <h3>Shipping Information</h3>
                <p>Please fill in your details:</p>
                <input type="text" name="name" placeholder="Full Name" required><br>
                <input type="email" name="email" placeholder="Email Address" required><br>
                <textarea name="address" placeholder="Shipping Address" required></textarea><br>
            </div>

            <div style="float: left; width: 50%; background-color: #f0f0f0;">
                <h3>Your Order</h3>
                <?php foreach ($_SESSION['cart'] as $product_id => $quantity): ?>
                    <?php 
                        $sql = "SELECT * FROM products WHERE id = ?";
                        $stmt = $pdo->prepare($sql);
                        $stmt->execute([$product_id]);
                        $product = $stmt->fetch(PDO::FETCH_ASSOC);
                    ?>
                    <p><?php echo htmlspecialchars($product['name'], ENT_QUOTES, 'UTF-8'); ?> x <?php echo $quantity; ?></p>
                <?php endforeach; ?>

                <h4>Total: $<?php echo number_format($total, 2); ?></h4>
            </div>

            <br style="clear: both;">
            <input type="submit" value="Place Order">
        </form>
    <?php endif; ?>
</body>
</html>


<?php
session_start();

require 'config.php';

if (isset($_POST['name'], $_POST['email'], $_POST['address'])) {
    $cart = $_SESSION['cart'];
    $total_price = 0;

    foreach ($cart as $product_id => $quantity) {
        $sql = "SELECT * FROM products WHERE id = ?";
        $stmt = $pdo->prepare($sql);
        $stmt->execute([$product_id]);
        $product = $stmt->fetch(PDO::FETCH_ASSOC);

        if (!$product || $product['stock'] < $quantity) {
            // Not enough stock or product not found
            header('Location: checkout.php');
            exit();
        }

        $total_price += $product['price'] * $quantity;
    }

    // Insert the order into the orders table
    $sql = "INSERT INTO orders (user_name, email, address, product_id, quantity, total_price) 
            VALUES (:name, :email, :address, :product_id, :quantity, :total_price)";

    foreach ($cart as $product_id => $quantity) {
        $stmt = $pdo->prepare($sql);
        $stmt->execute([
            'name' => $_POST['name'],
            'email' => $_POST['email'],
            'address' => $_POST['address'],
            'product_id' => $product_id,
            'quantity' => $quantity,
            'total_price' => $total_price
        ]);
    }

    // Clear the cart
    unset($_SESSION['cart']);

    header('Location: order_confirmation.php');
} else {
    header('Location: checkout.php');
}


<?php
session_start();

?>

<!DOCTYPE html>
<html>
<head>
    <title>Order Confirmation</title>
</head>
<body>
    <h1>Thank You for Your Order!</h1>
    <p>Your order has been received and will be processed shortly.</p>
    <a href="index.php">Continue Shopping</a>
</body>
</html>


<?php
$host = 'localhost';
$dbname = 'your_database_name';
$user = 'your_username';
$password = 'your_password';

try {
    $pdo = new PDO("mysql:host=$host;dbname=$dbname", $user, $password);
    $pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    die('Connection failed: ' . $e->getMessage());
}
?>


<?php
// Database connection configuration
$host = 'localhost';
$dbname = 'ecommerce';
$username = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

// Function to display available products
function displayProducts() {
    global $conn;
    
    try {
        $stmt = $conn->query("SELECT * FROM products");
        while ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {
            echo "<div class='product'>";
            echo "<h3>" . $row['name'] . "</h3>";
            echo "<p>Price: $" . number_format($row['price'], 2) . "</p>";
            echo "<button onclick=\"addToCart(" . $row['id'] . ")\">Add to Cart</button>";
            echo "</div>";
        }
    } catch (PDOException $e) {
        die("Error displaying products: " . $e->getMessage());
    }
}

// Function to add item to cart
function addToCart($productId) {
    global $conn;
    
    try {
        // Check if product exists
        $stmt = $conn->prepare("SELECT * FROM products WHERE id = ?");
        $stmt->execute([$productId]);
        
        if ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {
            $item = array(
                'id' => $row['id'],
                'name' => $row['name'],
                'price' => $row['price'],
                'quantity' => 1
            );
            
            // Check if item is already in cart
            if (isset($_SESSION['cart'][$productId])) {
                $_SESSION['cart'][$productId]['quantity']++;
            } else {
                $_SESSION['cart'][$productId] = $item;
            }
        }
    } catch (PDOException $e) {
        die("Error adding to cart: " . $e->getMessage());
    }
}

// Function to update item quantity in cart
function updateQuantity($productId, $quantity) {
    global $conn;
    
    try {
        // Validate quantity
        if ($quantity <= 0) {
            removeItem($productId);
            return;
        }
        
        $_SESSION['cart'][$productId]['quantity'] = $quantity;
    } catch (PDOException $e) {
        die("Error updating quantity: " . $e->getMessage());
    }
}

// Function to remove item from cart
function removeItem($productId) {
    global $conn;
    
    try {
        unset($_SESSION['cart'][$productId]);
    } catch (PDOException $e) {
        die("Error removing item: " . $e->getMessage());
    }
}

// Function to calculate total price of items in cart
function calculateTotal() {
    if (!isset($_SESSION['cart'])) {
        return 0;
    }
    
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += ($item['price'] * $item['quantity']);
    }
    
    return number_format($total, 2);
}

// Function to process the purchase
function processPurchase() {
    global $conn;
    
    try {
        if (!isset($_SESSION['cart'])) {
            die("Your cart is empty.");
        }
        
        // Get customer details from form submission
        $customerId = $_POST['customer_id'];
        $totalAmount = calculateTotal();
        
        // Insert order into orders table
        $stmt = $conn->prepare("INSERT INTO orders (customer_id, total_amount, order_date) VALUES (?, ?, NOW())");
        $stmt->execute([$customerId, $totalAmount]);
        $orderId = $conn->lastInsertId();
        
        // Insert order items into order_items table
        foreach ($_SESSION['cart'] as $item) {
            $stmt = $conn->prepare("INSERT INTO order_items (order_id, product_id, quantity, price) VALUES (?, ?, ?, ?)");
            $stmt->execute([$orderId, $item['id'], $item['quantity'], $item['price']]);
        }
        
        // Clear cart
        unset($_SESSION['cart']);
        
        // Optional: Send confirmation email
        sendPurchaseConfirmation($customerId, $orderId, $totalAmount);
        
        echo "Order placed successfully! Order ID: #" . $orderId;
    } catch (PDOException $e) {
        die("Error processing purchase: " . $e->getMessage());
    }
}

// Function to send purchase confirmation email
function sendPurchaseConfirmation($customerId, $orderId, $totalAmount) {
    // Implement your email sending logic here
    // You can use PHP's built-in mail() function or a library like PHPMailer
    $to = "customer@example.com";
    $subject = "Order Confirmation - #" . $orderId;
    $message = "Dear Customer,

Thank you for your purchase! Your order details are as follows:

Order ID: #" . $orderId . "
Total Amount: $" . $totalAmount . "

Best regards,
Your E-commerce Team";
    
    mail($to, $subject, $message);
}

// Initialize session
session_start();

// Example usage:
if (isset($_POST['add_to_cart'])) {
    addToCart($_POST['product_id']);
} elseif (isset($_POST['update_quantity'])) {
    updateQuantity($_POST['product_id'], $_POST['quantity']);
} elseif (isset($_POST['remove_item'])) {
    removeItem($_POST['product_id']);
} elseif (isset($_POST['process_order'])) {
    processPurchase();
}
?>


<?php
// Database connection
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'shop';

$conn = mysqli_connect($host, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Start session
session_start();

// Product listing page (view_products.php)
if ($_SERVER['PHP_SELF'] == '/view_products.php') {
    // Display all products
    $sql = "SELECT * FROM products";
    $result = mysqli_query($conn, $sql);

    echo "<table>";
    while ($row = mysqli_fetch_assoc($result)) {
        echo "<tr>";
        echo "<td>" . $row['id'] . "</td>";
        echo "<td>" . $row['name'] . "</td>";
        echo "<td>" . $row['price'] . "</td>";
        echo "<td><form action='add_to_cart.php' method='post'>";
        echo "<input type='hidden' name='product_id' value='" . $row['id'] . "'>";
        echo "<button type='submit'>Add to Cart</button>";
        echo "</form></td>";
        echo "</tr>";
    }
    echo "</table>";
}

// Add to cart functionality (add_to_cart.php)
if ($_SERVER['PHP_SELF'] == '/add_to_cart.php') {
    $product_id = mysqli_real_escape_string($conn, $_POST['product_id']);

    // Check if product exists
    $sql = "SELECT * FROM products WHERE id = $product_id";
    $result = mysqli_query($conn, $sql);
    if (mysqli_num_rows($result) == 0) {
        die("Product does not exist.");
    }

    // Add to cart
    $_SESSION['cart'][$product_id] = isset($_SESSION['cart'][$product_id]) ? $_SESSION['cart'][$product_id] + 1 : 1;

    header("Location: view_cart.php");
}

// View cart page (view_cart.php)
if ($_SERVER['PHP_SELF'] == '/view_cart.php') {
    echo "<h2>Your Cart</h2>";
    $total = 0;
    
    foreach ($_SESSION['cart'] as $product_id => $quantity) {
        $sql = "SELECT * FROM products WHERE id = $product_id";
        $result = mysqli_query($conn, $sql);
        $row = mysqli_fetch_assoc($result);

        echo "<div>";
        echo "Item: " . $row['name'] . "<br />";
        echo "Price: $" . number_format($row['price'], 2) . "<br />";
        echo "Quantity: <input type='number' name='quantity' value='$quantity'>";
        echo "<form action='update_cart.php' method='post'>";
        echo "<input type='hidden' name='product_id' value='" . $product_id . "'>";
        echo "<button type='submit'>Update</button>";
        echo "</form><br />";
        echo "</div>";

        $total += $row['price'] * $quantity;
    }

    echo "<h3>Grand Total: $" . number_format($total, 2) . "</h3>";
    echo "<a href='checkout.php'>Proceed to Checkout</a>";
}

// Update cart functionality (update_cart.php)
if ($_SERVER['PHP_SELF'] == '/update_cart.php') {
    $product_id = mysqli_real_escape_string($conn, $_POST['product_id']);
    $quantity = intval($_POST['quantity']);

    if ($quantity > 0) {
        $_SESSION['cart'][$product_id] = $quantity;
    } else {
        unset($_SESSION['cart'][$product_id]);
    }

    header("Location: view_cart.php");
}

// Checkout functionality (checkout.php)
if ($_SERVER['PHP_SELF'] == '/checkout.php') {
    if (empty($_SESSION['cart'])) {
        die("Your cart is empty.");
    }

    // Insert order into database
    $user_id = $_SESSION['user_id']; // Assuming user is logged in
    $total_amount = calculate_total();

    $sql = "INSERT INTO orders (user_id, total_amount, created_at) 
            VALUES ($user_id, $total_amount, NOW())";
    mysqli_query($conn, $sql);
    $order_id = mysqli_insert_id($conn);

    // Insert order items
    foreach ($_SESSION['cart'] as $product_id => $quantity) {
        $sql = "SELECT price FROM products WHERE id = $product_id";
        $result = mysqli_query($conn, $sql);
        $row = mysqli_fetch_assoc($result);

        $item_total = $row['price'] * $quantity;

        $sql = "INSERT INTO order_items (order_id, product_id, quantity, total) 
                VALUES ($order_id, $product_id, $quantity, $item_total)";
        mysqli_query($conn, $sql);
    }

    // Clear cart
    unset($_SESSION['cart']);

    header("Location: thank_you.php");
}

// Thank you page (thank_you.php)
if ($_SERVER['PHP_SELF'] == '/thank_you.php') {
    echo "<h2>Thank You for Your Order!</h2>";
    echo "<p>Your order has been successfully placed.</p>";
}
?>



<?php
$servername = "localhost";
$username = "root";
$password = "";
$dbname = "purchase_system";

// Create connection
$conn = new mysqli($servername, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}
?>


<?php
include('db_config.php');

$sql = "SELECT * FROM products";
$result = $conn->query($sql);

if ($result->num_rows > 0) {
    while($row = $result->fetch_assoc()) {
        echo "<div class='product'>";
        echo "<h2>".$row['name']."</h2>";
        echo "<p>Price: \$".$row['price']."</p>";
        echo "<p>Quantity Available: ".$row['quantity']."</p>";
        echo "<form action='add_to_cart.php' method='post'>";
        echo "<input type='hidden' name='product_id' value='".$row['id']."'>";
        echo "<input type='number' name='quantity' min='1' max='".$row['quantity']."' placeholder='Enter quantity'>";
        echo "<button type='submit'>Add to Cart</button>";
        echo "</form>";
        echo "</div>";
    }
} else {
    echo "No products found";
}
$conn->close();
?>


<?php
session_start();

if(isset($_POST['product_id']) && isset($_POST['quantity'])) {
    $product_id = $_POST['product_id'];
    $quantity = $_POST['quantity'];

    if(!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }

    if(array_key_exists($product_id, $_SESSION['cart'])) {
        $_SESSION['cart'][$product_id]['quantity'] += $quantity;
    } else {
        // Get product details
        include('db_config.php');
        $sql = "SELECT * FROM products WHERE id = '$product_id'";
        $result = $conn->query($sql);
        $row = $result->fetch_assoc();
        
        $_SESSION['cart'][$product_id] = array(
            'name' => $row['name'],
            'price' => $row['price'],
            'quantity' => $quantity
        );
    }

    header("Location: index.php");
}
?>


<?php
session_start();
include('db_config.php');

function show_cart() {
    if(isset($_SESSION['cart'])) {
        $total = 0;
        foreach ($_SESSION['cart'] as $key => $value) {
            $item_total = $value['price'] * $value['quantity'];
            $total += $item_total;
            echo "<div class='cart-item'>";
            echo "<h3>".$value['name']."</h3>";
            echo "<p>Quantity: ".$value['quantity']."</p>";
            echo "<p>Price: \$".$value['price']."</p>";
            echo "</div>";
        }
        echo "<div class='total'>Total Amount: \$".number_format($total, 2)."</div>";
    } else {
        echo "Your cart is empty";
    }
}

echo show_cart();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
</head>
<body>
    <?php show_cart(); ?>

    <form action='process_order.php' method='post'>
        <h2>Shipping Information</h2>
        <input type='text' name='user_name' placeholder='Full Name' required><br>
        <input type='email' name='email' placeholder='Email Address' required><br>
        <textarea name='address' placeholder='Shipping Address' required></textarea><br>
        <input type='tel' name='phone' placeholder='Phone Number' required><br>
        <button type='submit'>Place Order</button>
    </form>
</body>
</html>


<?php
session_start();
include('db_config.php');

if(isset($_POST)) {
    // Generate unique order ID
    $order_id = uniqid();

    // Get total amount from cart session
    $total_amount = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total_amount += ($item['price'] * $item['quantity']);
    }

    // Insert into orders table
    $user_name = $_POST['user_name'];
    $email = $_POST['email'];
    $address = $_POST['address'];
    $phone = $_POST['phone'];

    $sql_order = "INSERT INTO orders (order_id, user_name, email, address, phone, total_amount)
                  VALUES ('$order_id', '$user_name', '$email', '$address', '$phone', '".number_format($total_amount, 2)."')";
    
    if ($conn->query($sql_order) === TRUE) {
        // Insert into order_details table
        foreach ($_SESSION['cart'] as $product_id => $item) {
            $sql_detail = "INSERT INTO order_details (order_id, product_id, quantity, price)
                          VALUES ('$order_id', '$product_id', '".$item['quantity']."', '".number_format($item['price'], 2)."')";
            if ($conn->query($sql_detail)) {
                // Update product quantity in products table
                $new_quantity = $_POST['quantity'] - $item['quantity'];
                $sql_update_product = "UPDATE products SET quantity = '$new_quantity' WHERE id = '$product_id'";
                $conn->query($sql_update_product);
            }
        }

        // Clear cart session
        unset($_SESSION['cart']);
        
        echo "Order placed successfully! Your order ID is: ".$order_id;
    } else {
        echo "Error placing the order: " . $conn->error;
    }

} else {
    header("Location: checkout.php");
}
?>


<?php
// Connect to database
$conn = mysqli_connect("localhost", "username", "password", "database_name");

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Fetch products from database
$sql = "SELECT * FROM products";
$result = mysqli_query($conn, $sql);

?>

<!DOCTYPE html>
<html>
<head>
    <title>Product Store</title>
</head>
<body>
    <h1>Our Products</h1>
    <?php while ($row = mysqli_fetch_assoc($result)) { ?>
        <div style="border: 1px solid #ddd; padding: 10px; margin: 5px;">
            <h3><?php echo $row['name']; ?></h3>
            <p>Price: $<?php echo $row['price']; ?></p>
            <p>Description: <?php echo $row['description']; ?></p>
            <form action="add_to_cart.php" method="post">
                <input type="hidden" name="product_id" value="<?php echo $row['id']; ?>">
                <input type="number" name="quantity" min="1" value="1">
                <button type="submit">Add to Cart</button>
            </form>
        </div>
    <?php } ?>

    <a href="cart.php">View Cart</a>
</body>
</html>

<?php
// Close database connection
mysqli_close($conn);
?>


<?php
session_start();

if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Get product ID and quantity from POST request
$product_id = intval($_POST['product_id']);
$quantity = intval($_POST['quantity']);

// Check if product is already in cart
foreach ($_SESSION['cart'] as $key => $item) {
    if ($item['product_id'] == $product_id) {
        $_SESSION['cart'][$key]['quantity'] += $quantity;
        echo "Item added to cart successfully!";
        exit();
    }
}

// Add new product to cart
array_push($_SESSION['cart'], array(
    'product_id' => $product_id,
    'quantity' => $quantity
));

echo "Item added to cart successfully!";
?>


<?php
session_start();

// Connect to database
$conn = mysqli_connect("localhost", "username", "password", "database_name");

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <?php if (!empty($_SESSION['cart'])) { ?>
        <h1>Your Shopping Cart</h1>
        <table border="1">
            <tr>
                <th>Product Name</th>
                <th>Price</th>
                <th>Quantity</th>
                <th>Total</th>
            </tr>
            <?php
            $total = 0;
            foreach ($_SESSION['cart'] as $item) {
                $product_id = $item['product_id'];
                $sql = "SELECT * FROM products WHERE id=$product_id";
                $result = mysqli_query($conn, $sql);
                $row = mysqli_fetch_assoc($result);

                if ($row) {
                    $price = $row['price'];
                    $total_price = $price * $item['quantity'];
                    $total += $total_price;
            ?>
                <tr>
                    <td><?php echo $row['name']; ?></td>
                    <td>$<?php echo $price; ?></td>
                    <td><?php echo $item['quantity']; ?></td>
                    <td>$<?php echo $total_price; ?></td>
                </tr>
            <?php } } ?>
        </table>
        <h3>Total: $<?php echo $total; ?></h3>
        <form action="checkout.php" method="post">
            <button type="submit">Checkout</button>
        </form>
    <?php } else { ?>
        <p>Your cart is empty.</p>
        <a href="products.php">Go back to products</a>
    <?php } ?>

</body>
</html>

<?php
mysqli_close($conn);
?>


<?php
session_start();

// Connect to database
$conn = mysqli_connect("localhost", "username", "password", "database_name");

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

?>

<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
</head>
<body>
    <?php if (!empty($_SESSION['cart'])) { ?>
        <h1>Checkout</h1>
        <form action="process_order.php" method="post">
            <label for="name">Name:</label><br>
            <input type="text" id="name" name="name" required><br>

            <label for="email">Email:</label><br>
            <input type="email" id="email" name="email" required><br>

            <label for="address">Address:</label><br>
            <textarea id="address" name="address" rows="5" required></textarea><br>

            <button type="submit">Place Order</button>
        </form>
    <?php } else { ?>
        <p>Your cart is empty.</p>
        <a href="products.php">Go back to products</a>
    <?php } ?>

</body>
</html>

<?php
mysqli_close($conn);
?>


<?php
session_start();

// Connect to database
$conn = mysqli_connect("localhost", "username", "password", "database_name");

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Get user details from POST request
$user_name = $_POST['name'];
$user_email = $_POST['email'];
$user_address = $_POST['address'];

foreach ($_SESSION['cart'] as $item) {
    $product_id = $item['product_id'];
    $quantity = $item['quantity'];
    
    // Insert order into orders table
    $sql = "INSERT INTO orders (product_id, quantity, user_name, user_email, purchase_date)
            VALUES ($product_id, $quantity, '$user_name', '$user_email', NOW())";
            
    if (!mysqli_query($conn, $sql)) {
        die("Error: " . mysqli_error($conn));
    }
}

// Clear the cart
unset($_SESSION['cart']);

echo "Order placed successfully!";
header("Location: thank_you.php");

?>

<?php
mysqli_close($conn);
?>


<?php
// Connect to database
$host = 'localhost';
$user = 'root';
$password = '';
$dbname = 'test';

$conn = mysqli_connect($host, $user, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Fetch products from database
$sql = "SELECT * FROM products";
$result = mysqli_query($conn, $sql);

if (mysqli_num_rows($result) > 0) {
    while ($row = mysqli_fetch_assoc($result)) {
        echo "<div class='product'>";
        echo "<h2>" . $row['name'] . "</h2>";
        echo "<p>Price: $" . number_format($row['price'], 2) . "</p>";
        echo "<p>Description: " . $row['description'] . "</p>";
        echo "<p>Stock: " . $row['stock'] . "</p>";
        echo "<form action='add_to_cart.php' method='post'>";
        echo "<input type='hidden' name='product_id' value='" . $row['id'] . "'>";
        echo "<input type='number' name='quantity' min='1' max='" . $row['stock'] . "' placeholder='Quantity'>";
        echo "<button type='submit'>Add to Cart</button>";
        echo "</form>";
        echo "</div>";
    }
} else {
    echo "No products found.";
}

mysqli_close($conn);
?>


<?php
session_start();

$product_id = $_POST['product_id'];
$quantity = isset($_POST['quantity']) ? intval($_POST['quantity']) : 1;

// Connect to database
$conn = mysqli_connect('localhost', 'root', '', 'test');

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

$sql = "SELECT * FROM products WHERE id = $product_id";
$result = mysqli_query($conn, $sql);
$product = mysqli_fetch_assoc($result);

if ($quantity > $product['stock']) {
    echo "<script>alert('Not enough stock available!');</script>";
} else {
    if (isset($_SESSION['cart'][$product_id])) {
        $_SESSION['cart'][$product_id]['quantity'] += $quantity;
    } else {
        $_SESSION['cart'][$product_id] = array(
            'name' => $product['name'],
            'price' => $product['price'],
            'quantity' => $quantity
        );
    }
}

mysqli_close($conn);
echo "<script>window.location.href='view_cart.php';</script>";
?>


<?php
session_start();

if (empty($_SESSION['cart'])) {
    echo "Your cart is empty.";
} else {
    $total = 0;
    foreach ($_SESSION['cart'] as $product) {
        $subtotal = $product['price'] * $product['quantity'];
        $total += $subtotal;
        echo "<div class='item'>";
        echo "<h3>" . $product['name'] . "</h3>";
        echo "<p>Quantity: " . $product['quantity'] . "</p>";
        echo "<p>Price: $" . number_format($product['price'], 2) . "</p>";
        echo "<p>Subtotal: $" . number_format($subtotal, 2) . "</p>";
        echo "<form action='remove_from_cart.php' method='post'>";
        echo "<input type='hidden' name='product_id' value='" . $product['id'] . "'>";
        echo "<button type='submit'>Remove</button>";
        echo "</form>";
        echo "</div>";
    }
    echo "<h3>Total: $" . number_format($total, 2) . "</h3>";
    echo "<a href='checkout.php'>Proceed to Checkout</a>";
}
?>


<?php
session_start();

$product_id = $_POST['product_id'];
unset($_SESSION['cart'][$product_id]);
echo "<script>window.location.href='view_cart.php';</script>";
?>


<?php
session_start();
require_once 'db_connection.php';

if (isset($_POST['submit'])) {
    // Get form data
    $name = $_POST['name'];
    $email = $_POST['email'];
    $phone = $_POST['phone'];
    $address = $_POST['address'];

    if (empty($name) || empty($email) || empty($phone) || empty($address)) {
        echo "All fields are required!";
    } else {
        // Insert order into orders table
        $order_sql = "INSERT INTO orders (name, email, phone, address, total_amount) 
                      VALUES ('$name', '$email', '$phone', '$address', $_SESSION['total'])";
        mysqli_query($conn, $order_sql);
        $order_id = mysqli_insert_id($conn);

        // Insert order details into order_details table
        foreach ($_SESSION['cart'] as $product) {
            $detail_sql = "INSERT INTO order_details (order_id, product_id, quantity, price)
                           VALUES ($order_id, $product['id'], $product['quantity'], $product['price'])";
            mysqli_query($conn, $detail_sql);
        }

        // Clear cart
        unset($_SESSION['cart']);
        
        echo "<h2>Thank you for your order!</h2>";
        echo "<p>Your order number is: #" . $order_id . "</p>";
    }
} else {
    ?>
    <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
        <label>Name:</label><br>
        <input type="text" name="name"><br>
        
        <label>Email:</label><br>
        <input type="email" name="email"><br>
        
        <label>Phone:</label><br>
        <input type="tel" name="phone"><br>
        
        <label>Address:</label><br>
        <input type="text" name="address"><br>
        
        <button type="submit" name="submit">Complete Purchase</button>
    </form>
    <?php
}
?>


class User {
    private $db;

    public function __construct($database) {
        $this->db = $database;
    }

    // Register new user
    public function register($name, $email, $password, $phone, $address) {
        try {
            $hashPassword = password_hash($password, PASSWORD_DEFAULT);
            $stmt = $this->db->prepare("INSERT INTO users (name, email, password, phone, address) VALUES (?, ?, ?, ?, ?)");
            $stmt->execute([$name, $email, $hashPassword, $phone, $address]);
            return true;
        } catch (PDOException $e) {
            echo "Registration Error: " . $e->getMessage();
            return false;
        }
    }

    // Login user
    public function login($email, $password) {
        try {
            $stmt = $this->db->prepare("SELECT * FROM users WHERE email = ?");
            $stmt->execute([$email]);
            $user = $stmt->fetch(PDO::FETCH_ASSOC);

            if ($user && password_verify($password, $user['password'])) {
                $_SESSION['user'] = [
                    'id' => $user['id'],
                    'name' => $user['name'],
                    'email' => $user['email']
                ];
                return true;
            }
            return false;
        } catch (PDOException $e) {
            echo "Login Error: " . $e->getMessage();
            return false;
        }
    }

    // Get user profile
    public function getProfile($userId) {
        try {
            $stmt = $this->db->prepare("SELECT * FROM users WHERE id = ?");
            $stmt->execute([$userId]);
            return $stmt->fetch(PDO::FETCH_ASSOC);
        } catch (PDOException $e) {
            echo "Profile Error: " . $e->getMessage();
            return false;
        }
    }
}


class Product {
    private $db;

    public function __construct($database) {
        $this->db = $database;
    }

    // Add new product
    public function addProduct($name, $description, $price, $stock, $image, $category) {
        try {
            $stmt = $this->db->prepare("INSERT INTO products (name, description, price, stock, image, category) VALUES (?, ?, ?, ?, ?, ?)");
            $stmt->execute([$name, $description, $price, $stock, $image, $category]);
            return true;
        } catch (PDOException $e) {
            echo "Product Addition Error: " . $e->getMessage();
            return false;
        }
    }

    // Get all products
    public function getAllProducts() {
        try {
            $stmt = $this->db->prepare("SELECT * FROM products");
            $stmt->execute();
            return $stmt->fetchAll(PDO::FETCH_ASSOC);
        } catch (PDOException $e) {
            echo "Product Retrieval Error: " . $e->getMessage();
            return false;
        }
    }

    // Get product details
    public function getProductDetails($productId) {
        try {
            $stmt = $this->db->prepare("SELECT * FROM products WHERE id = ?");
            $stmt->execute([$productId]);
            return $stmt->fetch(PDO::FETCH_ASSOC);
        } catch (PDOException $e) {
            echo "Product Details Error: " . $e->getMessage();
            return false;
        }
    }
}


class Order {
    private $db;

    public function __construct($database) {
        $this->db = $database;
    }

    // Create new order
    public function createOrder($userId, $cartItems, $totalAmount, $paymentMethod, $shippingAddress) {
        try {
            $orderDate = date('Y-m-d H:i:s');
            $transactionId = uniqid();

            // Insert main order
            $stmt = $this->db->prepare("INSERT INTO orders (user_id, total_amount, payment_method, shipping_address, transaction_id) 
                                      VALUES (?, ?, ?, ?, ?)");
            $stmt->execute([$userId, $totalAmount, $paymentMethod, $shippingAddress, $transactionId]);
            $orderId = $this->db->lastInsertId();

            // Insert order details
            foreach ($cartItems as $item) {
                $this->addOrderDetail($orderId, $item['id'], $item['quantity'], $item['subtotal']);
            }

            return [
                'order_id' => $orderId,
                'transaction_id' => $transactionId,
                'total_amount' => $totalAmount
            ];
        } catch (PDOException $e) {
            echo "Order Creation Error: " . $e->getMessage();
            return false;
        }
    }

    // Add order details
    private function addOrderDetail($orderId, $productId, $quantity, $subtotal) {
        try {
            $stmt = $this->db->prepare("INSERT INTO order_details (order_id, product_id, quantity, subtotal) 
                                      VALUES (?, ?, ?, ?)");
            $stmt->execute([$orderId, $productId, $quantity, $subtotal]);
            return true;
        } catch (PDOException $e) {
            echo "Order Detail Error: " . $e->getMessage();
            return false;
        }
    }

    // Get user orders
    public function getUserOrders($userId) {
        try {
            $stmt = $this->db->prepare("SELECT * FROM orders WHERE user_id = ?");
            $stmt->execute([$userId]);
            return $stmt->fetchAll(PDO::FETCH_ASSOC);
        } catch (PDOException $e) {
            echo "Order Retrieval Error: " . $e->getMessage();
            return false;
        }
    }

    // Update order status
    public function updateOrderStatus($orderId, $newStatus) {
        try {
            $stmt = $this->db->prepare("UPDATE orders SET order_status = ? WHERE id = ?");
            $stmt->execute([$newStatus, $orderId]);
            return true;
        } catch (PDOException $e) {
            echo "Order Status Update Error: " . $e->getMessage();
            return false;
        }
    }
}


// Start session
session_start();

// Check if user is logged in
if (isset($_SESSION['user'])) {
    $userId = $_SESSION['user']['id'];
} else {
    // Redirect to login page
    header("Location: login.php");
    exit();
}

// Add item to cart
if (isset($_POST['add_to_cart'])) {
    $productId = $_POST['product_id'];
    $quantity = $_POST['quantity'];

    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }

    // Check if product is already in cart
    if (array_key_exists($productId, $_SESSION['cart'])) {
        $_SESSION['cart'][$productId]['quantity'] += $quantity;
    } else {
        $product = new Product($db);
        $productDetails = $product->getProductDetails($productId);

        $_SESSION['cart'][$productId] = array(
            'id' => $productId,
            'name' => $productDetails['name'],
            'price' => $productDetails['price'],
            'quantity' => $quantity,
            'subtotal' => $productDetails['price'] * $quantity
        );
    }
}

// Remove item from cart
if (isset($_GET['remove'])) {
    $productId = $_GET['remove'];
    unset($_SESSION['cart'][$productId]);
}


// Display cart contents
if (isset($_SESSION['cart'])) {
    $cartItems = $_SESSION['cart'];
    $totalAmount = array_sum(array_column($cartItems, 'subtotal'));
} else {
    // No items in cart
    header("Location: products.php");
    exit();
}

// Process checkout
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $paymentMethod = $_POST['payment_method'];
    $shippingAddress = $_POST['shipping_address'];

    try {
        $order = new Order($db);
        $orderResult = $order->createOrder(
            $userId,
            array_values($cartItems),
            $totalAmount,
            $paymentMethod,
            $shippingAddress
        );

        if ($orderResult) {
            // Clear cart
            unset($_SESSION['cart']);

            // Redirect to thank you page
            header("Location: thankyou.php?order_id=" . $orderResult['order_id']);
            exit();
        }
    } catch (PDOException $e) {
        echo "Error processing your order: " . $e->getMessage();
    }
}


// Send order confirmation email
function sendOrderConfirmation($email, $orderId, $totalAmount, $transactionId) {
    $subject = "Order Confirmation #{$orderId}";
    $message = "
        <html>
            <head>
                <title>Order Confirmation</title>
            </head>
            <body>
                <h1>Your order has been received!</h1>
                <p>Order ID: {$orderId}</p>
                <p>Total Amount: ${$totalAmount}</p>
                <p>Transaction ID: {$transactionId}</p>
                <p>We will ship your items within 2-3 business days.</p>
            </body>
        </html>
    ";
    
    $headers = "MIME-Version: 1.0" . "\r
";
    $headers .= "Content-type:text/html;charset=UTF-8" . "\r
";
    $headers .= "From: Your Store <yourstore@example.com>" . "\r
";

    mail($email, $subject, $message, $headers);
}


// Connect to database
try {
    $db = new PDO("mysql:host=localhost;dbname=your_database", "username", "password");
    $db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

// Create user instance
$user = new User($db);

// Check if user is logged in
if (!isset($_SESSION['user'])) {
    header("Location: login.php");
    exit();
}

// Display user profile
$userProfile = $user->getProfile($_SESSION['user']['id']);
echo "Welcome, " . $userProfile['name'] . "!";

// Display all products
$product = new Product($db);
$products = $product->getAllProducts();

foreach ($products as $product) {
    echo "<div class='product'>";
    echo "<h2>{$product['name']}</h2>";
    echo "<p>Price: $" . number_format($product['price'], 2) . "</p>";
    echo "<form action='add_to_cart.php' method='post'>";
    echo "<input type='hidden' name='product_id' value='{$product['id']}'>";
    echo "<input type='number' name='quantity' min='1' max='{$product['stock']}' value='1'>";
    echo "<button type='submit' name='add_to_cart'>Add to Cart</button>";
    echo "</form>";
    echo "</div>";
}


<?php
// Configuration file (config.php)
$host = 'localhost';
$dbname = 'shop_db';
$user = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $user, $password);
} catch(PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Product List</title>
    <style>
        body { font-family: Arial, sans-serif; }
        .product { margin: 20px; padding: 10px; border: 1px solid #ddd; }
        .cart { margin: 20px; padding: 10px; background-color: #f8f9fa; }
        .checkout-form { margin: 20px; padding: 10px; max-width: 500px; }
    </style>
</head>
<body>

<?php
// Display products (products.php)
include('config.php');

$sql = "SELECT * FROM products";
$stmt = $conn->prepare($sql);
$stmt->execute();

if ($stmt->rowCount() > 0) {
    while ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {
        echo "<div class='product'>";
        echo "<h3>" . $row['name'] . "</h3>";
        echo "<p>Description: " . $row['description'] . "</p>";
        echo "<p>Price: $" . number_format($row['price'], 2) . "</p>";
        echo "<a href='add_to_cart.php?id=" . $row['id'] . "' class='btn'>Add to Cart</a>";
        echo "</div>";
    }
} else {
    echo "No products available.";
}

$conn = null;
?>


<?php
// Add to cart functionality (add_to_cart.php)
session_start();
include('config.php');

$product_id = $_GET['id'];

if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

if (!array_key_exists($product_id, $_SESSION['cart'])) {
    $sql = "SELECT price FROM products WHERE id = ?";
    $stmt = $conn->prepare($sql);
    $stmt->execute([$product_id]);
    
    if ($row = $stmt->fetch()) {
        $_SESSION['cart'][$product_id] = array(
            'quantity' => 1,
            'price' => $row['price']
        );
        header("Location: view_cart.php");
    }
} else {
    // Product already in cart
    header("Location: view_cart.php");
}

$conn = null;
?>



<?php
// View cart contents (view_cart.php)
session_start();
include('config.php');

$total = 0;

echo "<div class='cart'>";
if (!empty($_SESSION['cart'])) {
    echo "<h2>Your Cart</h2>";
    
    foreach ($_SESSION['cart'] as $id => $item) {
        $sql = "SELECT name, description, price FROM products WHERE id = ?";
        $stmt = $conn->prepare($sql);
        $stmt->execute([$id]);
        
        if ($row = $stmt->fetch()) {
            echo "<div class='product'>";
            echo "<h3>" . $row['name'] . "</h3>";
            echo "<p>Description: " . $row['description'] . "</p>";
            echo "<p>Quantity: " . $item['quantity'] . "</p>";
            echo "<p>Price: $" . number_format($item['price'], 2) . "</p>";
            echo "<a href='remove_from_cart.php?id=" . $id . "' class='btn'>Remove</a>";
            echo "</div>";
            
            $total += $item['quantity'] * $item['price'];
        }
    }
    
    echo "<h3>Total: $" . number_format($total, 2) . "</h3>";
    echo "<a href='checkout.php' class='btn'>Checkout</a>";
} else {
    echo "Your cart is empty.";
}
echo "</div>";

$conn = null;
?>



<?php
// Checkout page (checkout.php)
session_start();
include('config.php');

if (!empty($_SESSION['cart'])) {
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        // Process checkout
        $name = $_POST['name'];
        $email = $_POST['email'];
        $address = $_POST['address'];
        $payment_method = $_POST['payment_method'];
        
        // Insert order into database
        $sql = "INSERT INTO orders (name, email, address, payment_method, total_amount) 
                VALUES (?, ?, ?, ?, ?)";
        $stmt = $conn->prepare($sql);
        $stmt->execute([$name, $email, $address, $payment_method, $total]);
        
        $order_id = $conn->lastInsertId();
        
        // Insert order items
        foreach ($_SESSION['cart'] as $id => $item) {
            $sql = "INSERT INTO order_items (product_id, quantity, price, order_id)
                    VALUES (?, ?, ?, ?)";
            $stmt = $conn->prepare($sql);
            $stmt->execute([$id, $item['quantity'], $item['price'], $order_id]);
        }
        
        // Clear cart
        unset($_SESSION['cart']);
        
        header("Location: thank_you.php");
    } else {
        // Display checkout form
        echo "<form method='post' action='checkout.php'>";
        echo "<h2>Checkout</h2>";
        echo "<div class='checkout-form'>";
        echo "<label>Name:</label><br>";
        echo "<input type='text' name='name' required><br>";
        
        echo "<label>Email:</label><br>";
        echo "<input type='email' name='email' required><br>";
        
        echo "<label>Address:</label><br>";
        echo "<input type='text' name='address' required><br>";
        
        echo "<label>Payment Method:</label><br>";
        echo "<select name='payment_method'>";
        echo "<option value='credit_card'>Credit Card</option>";
        echo "<option value='paypal'>PayPal</option>";
        echo "</select><br>";
        
        echo "<input type='submit' value='Place Order'>";
        echo "</div>";
        echo "</form>";
    }
} else {
    header("Location: view_cart.php?error=empty");
}

$conn = null;
?>



<?php
// Thank you page (thank_you.php)
session_start();
include('config.php');

echo "<h2>Thank You for Your Order!</h2>";
echo "<p>Your order has been successfully processed.</p>";
echo "<a href='products.php'>Continue Shopping</a>";

$conn = null;
?>



class User {
    private $db;

    public function __construct($dbConnection) {
        $this->db = $dbConnection;
    }

    // Method to create a new user
    public function createUser($name, $email, $password) {
        try {
            $stmt = $this->db->prepare("INSERT INTO users (name, email, password_hash) VALUES (?, ?, ?)");
            $stmt->execute([$name, $email, md5($password)]);
            return true;
        } catch (PDOException $e) {
            echo "Error: " . $e->getMessage();
            return false;
        }
    }

    // Method to login user
    public function loginUser($email, $password) {
        try {
            $stmt = $this->db->prepare("SELECT * FROM users WHERE email = ?");
            $stmt->execute([$email]);
            $user = $stmt->fetch(PDO::FETCH_ASSOC);

            if ($user && md5($password) === $user['password_hash']) {
                // Start session
                session_start();
                $_SESSION['user'] = $user;
                return true;
            } else {
                return false;
            }
        } catch (PDOException $e) {
            echo "Error: " . $e->getMessage();
            return false;
        }
    }

    // Method to check if user exists
    public function isUserExist($email) {
        try {
            $stmt = $this->db->prepare("SELECT id FROM users WHERE email = ?");
            $stmt->execute([$email]);
            return $stmt->rowCount() > 0;
        } catch (PDOException $e) {
            echo "Error: " . $e->getMessage();
            return false;
        }
    }

    // Other methods like updateProfile, deleteUser can be added similarly
}


class Product {
    private $db;

    public function __construct($dbConnection) {
        $this->db = $dbConnection;
    }

    // Method to add product
    public function addProduct($name, $description, $price, $stock) {
        try {
            $stmt = $this->db->prepare("INSERT INTO products (name, description, price, stock) VALUES (?, ?, ?, ?)");
            $stmt->execute([$name, $description, $price, $stock]);
            return true;
        } catch (PDOException $e) {
            echo "Error: " . $e->getMessage();
            return false;
        }
    }

    // Method to get all products
    public function getAllProducts() {
        try {
            $stmt = $this->db->query("SELECT * FROM products");
            return $stmt->fetchAll(PDO::FETCH_ASSOC);
        } catch (PDOException $e) {
            echo "Error: " . $e->getMessage();
            return false;
        }
    }

    // Other methods like updateProduct, deleteProduct can be added similarly
}


class Order {
    private $db;

    public function __construct($dbConnection) {
        $this->db = $dbConnection;
    }

    // Method to create new order
    public function createOrder($userId, $cartItems) {
        try {
            // Calculate total amount
            $totalAmount = 0;
            foreach ($cartItems as $item) {
                $totalAmount += $item['subtotal'];
            }

            // Insert into orders table
            $stmt = $this->db->prepare("INSERT INTO orders (user_id, total_amount) VALUES (?, ?)");
            $stmt->execute([$userId, $totalAmount]);
            $orderId = $this->db->lastInsertId();

            // Insert each item into order_items
            foreach ($cartItems as $item) {
                $stmt = $this->db->prepare("INSERT INTO order_items (order_id, product_id, quantity, subtotal) VALUES (?, ?, ?, ?)");
                $stmt->execute([$orderId, $item['product_id'], $item['quantity'], $item['subtotal']]);
            }

            return $orderId;
        } catch (PDOException $e) {
            echo "Error: " . $e->getMessage();
            return false;
        }
    }

    // Method to get order details
    public function getOrderById($orderId) {
        try {
            $stmt = $this->db->prepare("SELECT * FROM orders WHERE id = ?");
            $stmt->execute([$orderId]);
            return $stmt->fetch(PDO::FETCH_ASSOC);
        } catch (PDOException $e) {
            echo "Error: " . $e->getMessage();
            return false;
        }
    }

    // Method to get orders by user
    public function getOrdersByUser($userId) {
        try {
            $stmt = $this->db->prepare("SELECT * FROM orders WHERE user_id = ?");
            $stmt->execute([$userId]);
            return $stmt->fetchAll(PDO::FETCH_ASSOC);
        } catch (PDOException $e) {
            echo "Error: " . $e->getMessage();
            return false;
        }
    }

    // Other methods like updateOrderStatus can be added similarly
}


class Payment {
    private $db;

    public function __construct($dbConnection) {
        $this->db = $dbConnection;
    }

    // Method to process payment
    public function processPayment($orderId, $paymentMethod, $amount) {
        try {
            // Check if order exists and has not been paid yet
            $order = new Order($this->db);
            $orderDetails = $order->getOrderById($orderId);

            if (!$orderDetails || $orderDetails['status'] !== 'pending') {
                return ['success' => false, 'message' => 'Invalid order'];
            }

            // Insert into payments table
            $stmt = $this->db->prepare("INSERT INTO payments (order_id, payment_method, amount) VALUES (?, ?, ?)");
            $stmt->execute([$orderId, $paymentMethod, $amount]);
            $paymentId = $this->db->lastInsertId();

            // Update order status to completed
            $stmt = $this->db->prepare("UPDATE orders SET status = 'completed' WHERE id = ?");
            $stmt->execute([$orderId]);

            return ['success' => true, 'message' => 'Payment processed successfully', 'payment_id' => $paymentId];
        } catch (PDOException $e) {
            echo "Error: " . $e->getMessage();
            return ['success' => false, 'message' => 'Payment failed'];
        }
    }

    // Other methods like refundPayment can be added similarly
}


<!DOCTYPE html>
<html>
<head>
    <title>Product Catalog</title>
</head>
<body>
    <?php
        include 'db_connection.php';
        $product = new Product($conn);
        $products = $product->getAllProducts();

        if ($products) {
            foreach ($products as $prod) {
                echo "<div>";
                echo "<h2>" . $prod['name'] . "</h2>";
                echo "<p>" . $prod['description'] . "</p>";
                echo "<p>Price: $" . number_format($prod['price'], 2) . "</p>";
                echo "<button onclick=\"addToCart(" . $prod['id'] . ")\">Add to Cart</button>";
                echo "</div><br/>";
            }
        } else {
            echo "No products found.";
        }
    ?>
    <script>
        function addToCart(productId) {
            // Implement cart functionality here
        }
    </script>
</body>
</html>


<?php
session_start();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <?php
        if (isset($_SESSION['cart'])) {
            $total = 0;
            foreach ($_SESSION['cart'] as $item) {
                echo "<div>";
                echo "<h3>" . $item['name'] . "</h3>";
                echo "<p>Quantity: " . $item['quantity'] . "</p>";
                echo "<p>Subtotal: $" . number_format($item['subtotal'], 2) . "</p>";
                echo "</div><br/>";
                $total += $item['subtotal'];
            }
            echo "<h3>Total: $" . number_format($total, 2) . "</h3>";
            echo "<a href='checkout.php'>Proceed to Checkout</a>";
        } else {
            echo "Your cart is empty.";
        }
    ?>
</body>
</html>


<?php
session_start();
include 'db_connection.php';
$user = new User($conn);
$product = new Product($conn);
$order = new Order($conn);

if (!isset($_SESSION['user'])) {
    header("Location: login.php");
    exit();
}

$currentUserId = $_SESSION['user']['id'];
$cartItems = isset($_SESSION['cart']) ? $_SESSION['cart'] : [];
?>

<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
</head>
<body>
    <?php
        if (empty($cartItems)) {
            echo "Your cart is empty.";
            exit();
        }

        // Create order
        $orderId = $order->createOrder($currentUserId, $cartItems);

        if ($orderId) {
            // Process payment
            $paymentMethod = 'credit_card'; // This should be dynamic based on user selection
            $amount = $cartItems['total']; // Calculate total amount

            $payment = new Payment($conn);
            $result = $payment->processPayment($orderId, $paymentMethod, $amount);

            if ($result['success']) {
                echo "Thank you for your purchase!";
                unset($_SESSION['cart']);
                header("Location: thankyou.php");
            } else {
                echo "Payment failed. Please try again.";
            }
        } else {
            echo "Error creating order.";
        }
    ?>
</body>
</html>


<?php
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}
?>


<!DOCTYPE html>
<html>
<head>
    <title>Login</title>
</head>
<body>
    <?php
        include 'db_connection.php';
        $user = new User($conn);

        if ($_SERVER['REQUEST_METHOD'] == 'POST') {
            $email = $_POST['email'];
            $password = $_POST['password'];

            if ($user->loginUser($email, $password)) {
                header("Location: index.php");
                exit();
            } else {
                echo "Invalid credentials.";
            }
        }
    ?>
    <form method="post">
        Email: <input type="email" name="email" required><br>
        Password: <input type="password" name="password" required><br>
        <button type="submit">Login</button>
    </form>
    <a href="register.php">Register here</a>
</body>
</html>


<!DOCTYPE html>
<html>
<head>
    <title>Register</title>
</head>
<body>
    <?php
        include 'db_connection.php';
        $user = new User($conn);

        if ($_SERVER['REQUEST_METHOD'] == 'POST') {
            $name = $_POST['name'];
            $email = $_POST['email'];
            $password = $_POST['password'];

            if (!$user->isUserExist($email)) {
                if ($user->createUser($name, $email, $password)) {
                    echo "Registration successful. Please login.";
                    header("Location: login.php");
                    exit();
                } else {
                    echo "Error creating user.";
                }
            } else {
                echo "Email already exists.";
            }
        }
    ?>
    <form method="post">
        Name: <input type="text" name="name" required><br>
        Email: <input type="email" name="email" required><br>
        Password: <input type="password" name="password" required><br>
        <button type="submit">Register</button>
    </form>
    <a href="login.php">Login here</a>
</body>
</html>


<?php
session_start();

// Initialize cart if not exists
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Get the cart
$cart = &$_SESSION['cart'];

// Function to add item to cart
function addToCart($id, $name, $price) {
    global $cart;
    
    // Check if product already in cart
    $productIndex = array_search($id, array_column($cart, 'id'));
    
    if ($productIndex === false) {
        $cart[] = array(
            'id' => $id,
            'name' => $name,
            'price' => $price,
            'quantity' => 1
        );
    } else {
        // Increment quantity
        $cart[$productIndex]['quantity']++;
    }
}

// Function to update item quantity
function updateCart($id, $quantity) {
    global $cart;
    
    foreach ($cart as &$item) {
        if ($item['id'] == $id) {
            $item['quantity'] = $quantity;
            break;
        }
    }
}

// Function to remove item from cart
function removeFromCart($id) {
    global $cart;
    
    foreach ($cart as $key => $item) {
        if ($item['id'] == $id) {
            unset($cart[$key]);
            break;
        }
    }
    // Re-index the array after removal
    $cart = array_values($cart);
}

// Calculate total price
function calculateTotal() {
    global $cart;
    
    $total = 0;
    foreach ($cart as $item) {
        $total += $item['price'] * $item['quantity'];
    }
    
    return $total;
}
?>


<?php
session_start();

if (isset($_POST['id']) && isset($_POST['name']) && isset($_POST['price'])) {
    include 'cart.php';
    
    $id = $_POST['id'];
    $name = $_POST['name'];
    $price = $_POST['price'];
    
    addToCart($id, $name, $price);
}

// Redirect back to product page
header('Location: product_page.php');
exit();
?>


<?php include 'cart.php'; ?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <h2>Your Shopping Cart</h2>
    
    <?php if (!empty($cart)): ?>
        <table border="1">
            <tr>
                <th>Product Name</th>
                <th>Price</th>
                <th>Quantity</th>
                <th>Total</th>
                <th>Action</th>
            </tr>
            
            <?php foreach ($cart as $key => $item): ?>
                <tr>
                    <td><?php echo $item['name']; ?></td>
                    <td>$<?php echo number_format($item['price'], 2); ?></td>
                    <td>
                        <form action="update_cart.php" method="post">
                            <input type="hidden" name="id" value="<?php echo $item['id']; ?>">
                            <input type="number" name="quantity" min="1" value="<?php echo $item['quantity']; ?>">
                            <button type="submit">Update</button>
                        </form>
                    </td>
                    <td>$<?php echo number_format($item['price'] * $item['quantity'], 2); ?></td>
                    <td><a href="remove_from_cart.php?id=<?php echo $item['id']; ?>">Remove</a></td>
                </tr>
            <?php endforeach; ?>
            
            <tr>
                <td colspan="4">Total:</td>
                <td>$<?php echo number_format(calculateTotal(), 2); ?></td>
            </tr>
        </table>
        
        <br>
        <a href="checkout.php">Proceed to Checkout</a>
    <?php else: ?>
        <p>Your cart is empty.</p>
        <a href="product_page.php">Continue Shopping</a>
    <?php endif; ?>
</body>
</html>


<?php
session_start();

if (isset($_POST['id']) && isset($_POST['quantity'])) {
    include 'cart.php';
    
    $id = $_POST['id'];
    $quantity = intval($_POST['quantity']);
    
    if ($quantity >= 1) {
        updateCart($id, $quantity);
    }
}

header('Location: view_cart.php');
exit();
?>


<?php
session_start();

if (isset($_GET['id'])) {
    include 'cart.php';
    
    $id = intval($_GET['id']);
    removeFromCart($id);
}

header('Location: view_cart.php');
exit();
?>


<?php include 'cart.php'; ?>

<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
</head>
<body>
    <?php if (!empty($cart)): ?>
        <h2>Checkout</h2>
        
        <h3>Order Summary</h3>
        <table border="1">
            <tr>
                <th>Product Name</th>
                <th>Price</th>
                <th>Quantity</th>
                <th>Total</th>
            </tr>
            
            <?php foreach ($cart as $item): ?>
                <tr>
                    <td><?php echo $item['name']; ?></td>
                    <td>$<?php echo number_format($item['price'], 2); ?></td>
                    <td><?php echo $item['quantity']; ?></td>
                    <td>$<?php echo number_format($item['price'] * $item['quantity'], 2); ?></td>
                </tr>
            <?php endforeach; ?>
            
            <tr>
                <td colspan="3">Total:</td>
                <td>$<?php echo number_format(calculateTotal(), 2); ?></td>
            </tr>
        </table>

        <br>
        <form action="purchase.php" method="post">
            <h3>Payment Information</h3>
            <label for="card_number">Card Number:</label><br>
            <input type="text" id="card_number" name="card_number" required><br>
            
            <label for="expiry_date">Expiry Date:</label><br>
            <input type="text" id="expiry_date" name="expiry_date" required><br>
            
            <label for="cvv">CVV:</label><br>
            <input type="text" id="cvv" name="cvv" required><br>
            
            <button type="submit">Purchase</button>
        </form>
    <?php else: ?>
        <p>Your cart is empty. Please add items to your cart first.</p>
        <a href="product_page.php">Continue Shopping</a>
    <?php endif; ?>
</body>
</html>


<?php
session_start();

if (!empty($_SESSION['cart']) && isset($_POST['card_number']) && isset($_POST['expiry_date']) && isset($_POST['cvv'])) {
    // Here you would typically connect to a database and process the payment
    
    // For this example, we'll just display a success message
    echo "<h2>Purchase Successful!</h2>";
    
    // Clear the cart
    $_SESSION['cart'] = array();
} else {
    header('Location: checkout.php');
    exit();
}
?>


<?php
session_start();
require 'db_connection.php';

// Fetch products from database
$products = mysqli_query($conn, "SELECT * FROM products");
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shop</title>
</head>
<body>
    <h1>Products</h1>
    <?php while ($product = mysqli_fetch_assoc($products)) { ?>
        <div>
            <img src="<?php echo $product['image']; ?>" alt="<?php echo $product['name']; ?>">
            <h2><?php echo $product['name']; ?></h2>
            <p><?php echo $product['description']; ?></p>
            <p>Price: $<?php echo number_format($product['price'], 2); ?></p>
            <form action="add_to_cart.php" method="post">
                <input type="hidden" name="id" value="<?php echo $product['id']; ?>">
                <input type="number" name="quantity" min="1" max="99" placeholder="Quantity">
                <button type="submit">Add to Cart</button>
            </form>
        </div>
    <?php } ?>
    <a href="cart.php">View Cart</a>
</body>
</html>


<?php
session_start();
require 'db_connection.php';

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $product_id = $_POST['id'];
    $quantity = $_POST['quantity'];

    // Get product details
    $result = mysqli_query($conn, "SELECT * FROM products WHERE id = '$product_id'");
    if ($row = mysqli_fetch_assoc($result)) {
        $item = array(
            'id' => $row['id'],
            'name' => $row['name'],
            'price' => $row['price'],
            'quantity' => $quantity,
            'image' => $row['image']
        );

        // Add to cart
        if (isset($_SESSION['cart'])) {
            $found = false;
            foreach ($_SESSION['cart'] as &$item_in_cart) {
                if ($item_in_cart['id'] == $item['id']) {
                    $item_in_cart['quantity'] += $quantity;
                    $found = true;
                    break;
                }
            }
            if (!$found) {
                $_SESSION['cart'][] = $item;
            }
        } else {
            $_SESSION['cart'] = array($item);
        }
    }

    header('Location: cart.php');
}
?>


<?php
session_start();
require 'db_connection.php';
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <?php if (!empty($_SESSION['cart'])) { ?>
        <h1>Your Shopping Cart</h1>
        <table>
            <thead>
                <tr>
                    <th>Image</th>
                    <th>Name</th>
                    <th>Price</th>
                    <th>Quantity</th>
                    <th>Total</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
                <?php
                $total = 0;
                foreach ($_SESSION['cart'] as $item) {
                    $subtotal = $item['price'] * $item['quantity'];
                    $total += $subtotal;
                    ?>
                    <tr>
                        <td><img src="<?php echo $item['image']; ?>" alt="<?php echo $item['name']; ?>"></td>
                        <td><?php echo $item['name']; ?></td>
                        <td>$<?php echo number_format($item['price'], 2); ?></td>
                        <td><?php echo $item['quantity']; ?></td>
                        <td>$<?php echo number_format($subtotal, 2); ?></td>
                        <td><a href="remove_from_cart.php?id=<?php echo $item['id']; ?>">Remove</a></td>
                    </tr>
                <?php } ?>
            </tbody>
        </table>
        <h2>Total: $<?php echo number_format($total, 2); ?></h2>
        <form action="checkout.php" method="post">
            <input type="hidden" name="total_amount" value="<?php echo $total; ?>">
            <button type="submit">Checkout</button>
        </form>
    <?php } else { ?>
        <p>Your cart is empty!</p>
    <?php } ?>
    <a href="index.php">Back to Shop</a>
</body>
</html>


<?php
session_start();
require 'db_connection.php';

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $total_amount = $_POST['total_amount'];
    
    // Get user details
    $user_name = isset($_POST['name']) ? mysqli_real_escape_string($conn, $_POST['name']) : '';
    $email = isset($_POST['email']) ? mysqli_real_escape_string($conn, $_POST['email']) : '';

    if (empty($user_name) || empty($email)) {
        die("Please fill in all required fields!");
    }

    // Insert order into database
    $order_query = "INSERT INTO orders (user_name, email, total_amount) VALUES ('$user_name', '$email', '$total_amount')";
    mysqli_query($conn, $order_query);
    $order_id = mysqli_insert_id($conn);

    // Insert order items
    foreach ($_SESSION['cart'] as $item) {
        $insert_item = "INSERT INTO order_items (order_id, product_id, quantity, price)
                        VALUES ('$order_id', '{$item['id']}', '{$item['quantity']}', '{$item['price']}')";
        mysqli_query($conn, $insert_item);
    }

    // Clear cart
    unset($_SESSION['cart']);
    
    // Redirect to invoice page
    header('Location: invoice.php?order_id=' . $order_id);
} else {
    ?>
    <h1>Checkout</h1>
    <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
        <div>
            <label for="name">Name:</label><br>
            <input type="text" id="name" name="name" required><br>

            <label for="email">Email:</label><br>
            <input type="email" id="email" name="email" required><br>

            <input type="hidden" name="total_amount" value="<?php echo $total; ?>">
            <button type="submit">Place Order</button>
        </div>
    </form>
    <?php
}
?>


<?php
session_start();
require 'db_connection.php';

$order_id = isset($_GET['order_id']) ? $_GET['order_id'] : '';

if ($order_id) {
    $order_query = "SELECT * FROM orders WHERE order_id = '$order_id'";
    $result = mysqli_query($conn, $order_query);
    $order = mysqli_fetch_assoc($result);

    $items_query = "SELECT oi.*, p.name AS product_name 
                    FROM order_items oi
                    JOIN products p ON oi.product_id = p.id 
                    WHERE oi.order_id = '$order_id'";
    $items_result = mysqli_query($conn, $items_query);
    $items = array();
    while ($item = mysqli_fetch_assoc($items_result)) {
        $items[] = $item;
    }
} else {
    die("Invalid order ID!");
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Invoice</title>
</head>
<body>
    <h1>Thank You for Your Order!</h1>
    <p>Your order has been received. Order ID: <?php echo $order_id; ?></p>
    
    <h2>Billing Information:</h2>
    <p>Name: <?php echo $order['user_name']; ?></p>
    <p>Email: <?php echo $order['email']; ?></p>
    
    <h2>Order Details:</h2>
    <table>
        <thead>
            <tr>
                <th>Product</th>
                <th>Quantity</th>
                <th>Price</th>
                <th>Total</th>
            </tr>
        </thead>
        <tbody>
            <?php foreach ($items as $item) { ?>
                <tr>
                    <td><?php echo $item['product_name']; ?></td>
                    <td><?php echo $item['quantity']; ?></td>
                    <td>$<?php echo number_format($item['price'], 2); ?></td>
                    <td>$<?php echo number_format($item['price'] * $item['quantity'], 2); ?></td>
                </tr>
            <?php } ?>
        </tbody>
    </table>
    
    <h2>Total Amount: $<?php echo number_format($order['total_amount'], 2); ?></h2>
</body>
</html>


function calculateTotalPrice($quantity, $price) {
    return $quantity * $price;
}


// Assuming you have a database connection established
function placeOrder($user_id, $product_name, $quantity, $price) {
    $total_price = calculateTotalPrice($quantity, $price);
    
    $sql = "INSERT INTO orders (user_id, product_name, quantity, price) VALUES (?, ?, ?, ?)";
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, "isdd", $user_id, $product_name, $quantity, $price);
    
    if (mysqli_stmt_execute($stmt)) {
        return true;
    } else {
        return false;
    }
}


function processPayment($amount) {
    // This is a placeholder for actual payment processing logic
    // You would need to integrate with a payment gateway here
    
    return true; // Return true if payment is successful
}


if (isset($_POST['purchase'])) {
    $user_id = $_SESSION['user_id']; // Assuming user is logged in
    $product_name = $_POST['product_name'];
    $quantity = intval($_POST['quantity']);
    $price = floatval($_POST['price']);
    
    if ($quantity <= 0) {
        echo "Quantity must be greater than zero.";
        exit();
    }
    
    if (processPayment($price)) {
        if (placeOrder($user_id, $product_name, $quantity, $price)) {
            // Order placed successfully
            echo "Purchase completed successfully!";
            
            // You can redirect the user to a thank you page here
            header("Location: thank_you.php");
            exit();
        } else {
            echo "Error placing order.";
        }
    } else {
        echo "Payment failed. Please try again.";
    }
}


<?php
session_start();

// Database connection
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'purchase';

$conn = mysqli_connect($host, $username, $password, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

function calculateTotalPrice($quantity, $price) {
    return $quantity * $price;
}

function placeOrder($conn, $user_id, $product_name, $quantity, $price) {
    $total_price = calculateTotalPrice($quantity, $price);
    
    $sql = "INSERT INTO orders (user_id, product_name, quantity, price) VALUES (?, ?, ?, ?)";
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, "isdd", $user_id, $product_name, $quantity, $price);
    
    if (mysqli_stmt_execute($stmt)) {
        return true;
    } else {
        return false;
    }
}

function processPayment($amount) {
    // Placeholder for actual payment processing
    return true;
}

if (isset($_POST['purchase'])) {
    $user_id = $_SESSION['user_id'];
    $product_name = mysqli_real_escape_string($conn, $_POST['product_name']);
    $quantity = intval($_POST['quantity']);
    $price = floatval($_POST['price']);
    
    if ($quantity <= 0) {
        echo "Quantity must be greater than zero.";
        exit();
    }
    
    if (processPayment($price)) {
        if (placeOrder($conn, $user_id, $product_name, $quantity, $price)) {
            header("Location: thank_you.php");
            exit();
        } else {
            echo "Error placing order.";
        }
    } else {
        echo "Payment failed. Please try again.";
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Purchase Product</title>
</head>
<body>
    <h1>Product Purchase</h1>
    <form method="POST" action="<?php echo $_SERVER['PHP_SELF']; ?>">
        <input type="hidden" name="product_name" value="Example Product">
        <label>Quantity:</label>
        <input type="number" name="quantity" min="1" required><br>
        <label>Price:</label>
        <input type="number" step="0.01" name="price" required><br>
        <button type="submit" name="purchase">Purchase</button>
    </form>
</body>
</html>

<?php
mysqli_close($conn);
?>


<?php
$host = "localhost";
$user = "root";
$password = "";
$dbname = "ecommerce";

$conn = mysqli_connect($host, $user, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}
?>


<?php
session_start();
include('db.php');

// Retrieve all products from the database
$sql = "SELECT * FROM products";
$result = mysqli_query($conn, $sql);
$products = mysqli_fetch_all($result, MYSQLI_ASSOC);

mysqli_close($conn);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Product List</title>
</head>
<body>
    <?php foreach ($products as $product) { ?>
        <div style="border: 1px solid #ccc; padding: 10px; margin: 5px;">
            <h3><?php echo $product['name']; ?></h3>
            <p>Price: $<?php echo number_format($product['price'], 2); ?></p>
            <p>Description: <?php echo $product['description']; ?></p>
            <form action="add_to_cart.php" method="post">
                <input type="hidden" name="id" value="<?php echo $product['id']; ?>">
                <input type="hidden" name="name" value="<?php echo $product['name']; ?>">
                <input type="hidden" name="price" value="<?php echo $product['price']; ?>">
                <button type="submit">Add to Cart</button>
            </form>
        </div>
    <?php } ?>

    <a href="cart.php">View Cart</a>
</body>
</html>


<?php
session_start();
include('db.php');

// Get product details from POST request
$id = mysqli_real_escape_string($conn, $_POST['id']);
$name = mysqli_real_escape_string($conn, $_POST['name']);
$price = mysqli_real_escape_string($conn, $_POST['price']);

// Add to cart
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

$cartItem = array(
    'id' => $id,
    'name' => $name,
    'price' => $price,
    'quantity' => 1
);

// Check if product is already in cart
$foundProductIndex = -1;
for ($i=0; $i<count($_SESSION['cart']); $i++) {
    if ($_SESSION['cart'][$i]['id'] == $id) {
        $foundProductIndex = $i;
        break;
    }
}

if ($foundProductIndex != -1) {
    $_SESSION['cart'][$foundProductIndex]['quantity']++;
} else {
    array_push($_SESSION['cart'], $cartItem);
}

mysqli_close($conn);

// Redirect back to products page
header("Location: products.php");
exit();
?>


<?php
session_start();
include('db.php');

if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

$total = 0;
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <?php if (empty($_SESSION['cart'])) { ?>
        <h2>Your cart is empty.</h2>
    <?php } else { ?>
        <h2>Your Shopping Cart:</h2>
        <table border="1">
            <tr>
                <th>Product Name</th>
                <th>Price</th>
                <th>Quantity</th>
                <th>Total</th>
                <th>Action</th>
            </tr>
            <?php foreach ($_SESSION['cart'] as $index => $product) { ?>
                <tr>
                    <td><?php echo $product['name']; ?></td>
                    <td>$<?php echo number_format($product['price'], 2); ?></td>
                    <td>
                        <form action="update_cart.php" method="post">
                            <input type="hidden" name="index" value="<?php echo $index; ?>">
                            <input type="number" name="quantity" min="1" max="5" value="<?php echo $product['quantity']; ?>" style="width: 40px;">
                            <button type="submit">Update</button>
                        </form>
                    </td>
                    <td>$<?php echo number_format($product['price'] * $product['quantity'], 2); ?></td>
                    <td><a href="remove_from_cart.php?index=<?php echo $index; ?>">Remove</a></td>
                </tr>
                <?php $total += ($product['price'] * $product['quantity']); ?>
            <?php } ?>
        </table>
        <h3>Grand Total: $<?php echo number_format($total, 2); ?></h3>
        <a href="checkout.php">Checkout</a>
    <?php } ?>

    <br>
    <a href="products.php">Continue Shopping</a>
</body>
</html>


<?php
session_start();
include('db.php');

$index = mysqli_real_escape_string($conn, $_POST['index']);
$quantity = mysqli_real_escape_string($conn, $_POST['quantity']);

if (isset($_SESSION['cart'][$index])) {
    $_SESSION['cart'][$index]['quantity'] = $quantity;
}

mysqli_close($conn);
header("Location: cart.php");
exit();
?>


<?php
session_start();

$index = $_GET['index'];
if (isset($_SESSION['cart'][$index])) {
    unset($_SESSION['cart'][$index]);
}

// Re-index array keys
$_SESSION['cart'] = array_values($_SESSION['cart']);

header("Location: cart.php");
exit();
?>


<?php
session_start();
include('db.php');

if (empty($_SESSION['cart'])) {
    header("Location: products.php");
    exit();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
</head>
<body>
    <h2>Enter Your Details to Complete the Purchase:</h2>
    <form action="process_order.php" method="post">
        <label>Name:</label><br>
        <input type="text" name="name" required><br>

        <label>Email:</label><br>
        <input type="email" name="email" required><br>

        <label>Address:</label><br>
        <textarea name="address" rows="4" cols="30" required></textarea><br>

        <button type="submit">Place Order</button>
    </form>
</body>
</html>


<?php
session_start();
include('db.php');

// Get user details from POST request
$name = mysqli_real_escape_string($conn, $_POST['name']);
$email = mysqli_real_escape_string($conn, $_POST['email']);
$address = mysqli_real_escape_string($conn, $_POST['address']);

// Check if cart is not empty
if (empty($_SESSION['cart'])) {
    header("Location: products.php");
    exit();
}

// Check stock availability for all items in the cart
foreach ($_SESSION['cart'] as $product) {
    $sql = "SELECT stock_quantity FROM products WHERE id = '$product[id]'";
    $result = mysqli_query($conn, $sql);
    $row = mysqli_fetch_assoc($result);

    if ($row['stock_quantity'] < $product['quantity']) {
        echo "Sorry, we do not have enough stock of " . $product['name'];
        header("Location: cart.php");
        exit();
    }
}

// Deduct the quantity from products table
foreach ($_SESSION['cart'] as $product) {
    $sql = "UPDATE products SET stock_quantity = stock_quantity - '$product[quantity]' WHERE id = '$product[id]'";
    mysqli_query($conn, $sql);
}

// Insert order into orders table
$sql = "INSERT INTO orders (name, email, address, total_amount) VALUES ('$name', '$email', '$address', '$total')";
mysqli_query($conn, $sql);

$order_id = mysqli_insert_id($conn);

// Insert each product in the cart as an order item
foreach ($_SESSION['cart'] as $product) {
    $sql = "INSERT INTO order_items (order_id, product_id, product_name, price, quantity) VALUES ('$order_id', '$product[id]', '$product[name]', '$product[price]', '$product[quantity]')";
    mysqli_query($conn, $sql);
}

// Clear the cart
unset($_SESSION['cart']);

mysqli_close($conn);

header("Location: confirmation.php");
exit();
?>


<!DOCTYPE html>
<html>
<head>
    <title>Order Confirmation</title>
</head>
<body>
    <h2>Thank you for your order!</h2>
    <p>Your order has been successfully placed.</p>
    <a href="products.php">Continue Shopping</a>
</body>
</html>


<?php
session_start();

if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add item to cart
function add_to_cart($product_id, $quantity) {
    if (isset($_SESSION['cart'][$product_id])) {
        $_SESSION['cart'][$product_id] += $quantity;
    } else {
        $_SESSION['cart'][$product_id] = $quantity;
    }
}

// Remove item from cart
function remove_from_cart($product_id) {
    unset($_SESSION['cart'][$product_id]);
}

// Update quantity of item in cart
function update_cart($product_id, $quantity) {
    if ($quantity > 0) {
        $_SESSION['cart'][$product_id] = $quantity;
    } else {
        remove_from_cart($product_id);
    }
}
?>


<?php
session_start();

// Verify if user is logged in
if (!isset($_SESSION['user_id'])) {
    header("Location: login.php");
    exit();
}

// Database connection
try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
} catch(PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

// Get cart items from session
$cart = $_SESSION['cart'];

// Check if cart is empty
if (empty($cart)) {
    header("Location: index.php");
    exit();
}

// Insert order into database
$stmt = $conn->prepare("
    INSERT INTO orders 
    SET user_id = ?,
        total_amount = ?,
        status = 'pending',
        created_at = NOW()
");

$total_amount = 0;
foreach ($cart as $product_id => $quantity) {
    // Get product price from database
    $prod_stmt = $conn->prepare("SELECT price FROM products WHERE id = ?");
    $prod_stmt->execute([$product_id]);
    $price = $prod_stmt->fetchColumn();
    
    $total_amount += $price * $quantity;
}

$stmt->execute([$_SESSION['user_id'], $total_amount]);

// Get the order ID
$order_id = $conn->lastInsertId();

// Insert order details into database
foreach ($cart as $product_id => $quantity) {
    $details_stmt = $conn->prepare("
        INSERT INTO order_details 
        SET order_id = ?,
            product_id = ?,
            quantity = ?,
            created_at = NOW()
    ");
    $details_stmt->execute([$order_id, $product_id, $quantity]);
}

// Clear the cart
unset($_SESSION['cart']);

// Redirect to thank you page
header("Location: order_confirmation.php");
exit();
?>


<?php
session_start();

if (!isset($_SESSION['user_id'])) {
    header("Location: login.php");
    exit();
}

// Database connection
try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
} catch(PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

// Get all orders for current user
$stmt = $conn->prepare("SELECT * FROM orders WHERE user_id = ? ORDER BY created_at DESC");
$stmt->execute([$_SESSION['user_id']]);
$orders = $stmt->fetchAll();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Order History</title>
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>

<div class="container mt-4">
    <h2>Your Order History</h2>
    <?php if (!empty($orders)): ?>
        <table class="table table-striped">
            <thead>
                <tr>
                    <th>Order ID</th>
                    <th>Date</th>
                    <th>Total Amount</th>
                    <th>Status</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
                <?php foreach ($orders as $order): ?>
                    <tr>
                        <td><?php echo $order['id']; ?></td>
                        <td><?php echo date('Y-m-d H:i:s', strtotime($order['created_at'])); ?></td>
                        <td><?php echo "$" . number_format($order['total_amount'], 2); ?></td>
                        <td><?php echo $order['status']; ?></td>
                        <td><a href="view_order.php?id=<?php echo $order['id']; ?>" class="btn btn-primary">View Details</a></td>
                    </tr>
                <?php endforeach; ?>
            </tbody>
        </table>
    <?php else: ?>
        <p>No orders found.</p>
    <?php endif; ?>
</div>

<!-- Bootstrap JS -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>


<?php
session_start();

if (!isset($_SESSION['user_id'])) {
    header("Location: login.php");
    exit();
}

// Get order ID from URL
$order_id = isset($_GET['id']) ? intval($_GET['id']) : 0;

// Database connection
try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
} catch(PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

// Get order details
$stmt = $conn->prepare("
    SELECT 
        orders.*, 
        users.name as customer_name,
        SUM(order_details.quantity * products.price) AS total_amount
    FROM orders 
    LEFT JOIN users ON orders.user_id = users.id 
    LEFT JOIN order_details ON orders.id = order_details.order_id 
    LEFT JOIN products ON order_details.product_id = products.id 
    WHERE orders.id = ?
");
$stmt->execute([$order_id]);
$order = $stmt->fetch();

// Get all items in the order
$items_stmt = $conn->prepare("
    SELECT 
        products.*,
        order_details.quantity
    FROM order_details 
    LEFT JOIN products ON order_details.product_id = products.id 
    WHERE order_details.order_id = ?
");
$items_stmt->execute([$order_id]);
$items = $items_stmt->fetchAll();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Order Details</title>
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>

<div class="container mt-4">
    <h2>Order #<?php echo $order['id']; ?></h2>
    
    <div class="row">
        <div class="col-md-6">
            <h5>Customer Information:</h5>
            <p>Name: <?php echo $order['customer_name']; ?></p>
            <p>Email: <?php echo $order['email']; ?></p>
            <p>Order Date: <?php echo date('Y-m-d H:i:s', strtotime($order['created_at'])); ?></p>
            <p>Status: <?php echo $order['status']; ?></p>
        </div>
        
        <div class="col-md-6">
            <h5>Order Summary:</h5>
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>Product</th>
                        <th>Quantity</th>
                        <th>Price</th>
                        <th>Total</th>
                    </tr>
                </thead>
                <tbody>
                    <?php foreach ($items as $item): ?>
                        <tr>
                            <td><?php echo $item['name']; ?></td>
                            <td><?php echo $item['quantity']; ?></td>
                            <td><?php echo "$" . number_format($item['price'], 2); ?></td>
                            <td><?php echo "$" . number_format($item['price'] * $item['quantity'], 2); ?></td>
                        </tr>
                    <?php endforeach; ?>
                </tbody>
            </table>
        </div>
    </div>
</div>

<!-- Bootstrap JS -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'shop';
$user = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $user, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
    <style>
        body { font-family: Arial, sans-serif; }
        .product { margin-bottom: 20px; padding: 10px; border: 1px solid #ddd; }
        .cart { margin-top: 20px; }
        .checkout { margin-top: 20px; }
    </style>
</head>
<body>

<?php
// Get products from database
try {
    $stmt = $conn->query("SELECT * FROM products");
    $products = $stmt->fetchAll(PDO::FETCH_ASSOC);
} catch (PDOException $e) {
    echo "Error: " . $e->getMessage();
}

if (!isset($_SESSION)) {
    session_start();
}
?>

<?php
// Add product to cart
if (isset($_GET['action']) && $_GET['action'] == 'add') {
    $id = intval($_GET['id']);
    $product = array(
        'id' => $id,
        'name' => $products[$id]['name'],
        'price' => $products[$id]['price']
    );
    
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }
    $_SESSION['cart'][$id] = $product;
}
?>

<?php
// Remove product from cart
if (isset($_GET['action']) && $_GET['action'] == 'remove') {
    $id = intval($_GET['id']);
    if (isset($_SESSION['cart'][$id])) {
        unset($_SESSION['cart'][$id]);
    }
}
?>

<!-- Product Display -->
<h1>Products</h1>
<?php foreach ($products as $product): ?>
<div class="product">
    <h3><?php echo $product['name']; ?></h3>
    <p>Price: <?php echo $product['price']; ?>$</p>
    <a href="?action=add&id=<?php echo $product['id']; ?>">Add to Cart</a>
</div>
<?php endforeach; ?>

<!-- Shopping Cart -->
<h1>Your Cart</h1>
<div class="cart">
<?php if (isset($_SESSION['cart'])): ?>
    <?php foreach ($_SESSION['cart'] as $item): ?>
        <div class="product">
            <h3><?php echo $item['name']; ?></h3>
            <p>Price: <?php echo $item['price']; ?>$</p>
            <a href="?action=remove&id=<?php echo $item['id']; ?>">Remove from Cart</a>
        </div>
    <?php endforeach; ?>
<?php else: ?>
    <p>Your cart is empty.</p>
<?php endif; ?>

<?php if (isset($_SESSION['cart'])): ?>
<a href="checkout.php">Proceed to Checkout</a>
<?php endif; ?>

</div>

<!-- Checkout Form -->
<h1>Checkout</h1>
<div class="checkout">
<?php
if (!isset($_SESSION['user_id'])) {
    header('Location: login.php');
}
?>

<form method="post" action="process_checkout.php">
    <input type="text" name="name" placeholder="Full Name" required><br>
    <input type="email" name="email" placeholder="Email Address" required><br>
    <input type="tel" name="phone" placeholder="Phone Number" required><br>
    <input type="text" name="address" placeholder="Shipping Address" required><br>
    <button type="submit">Place Order</button>
</form>

</div>

<?php
$conn = null;
?>

</body>
</html>


<?php
session_start();

// Check if user is logged in
if (!isset($_SESSION['user_id'])) {
    header('Location: login.php');
}

// Get cart items from session
$cart = $_SESSION['cart'];

try {
    // Connect to database
    $conn = new PDO("mysql:host=localhost;dbname=shop", "root", "");
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

    // Insert order into orders table
    $stmt = $conn->prepare("INSERT INTO orders (user_id, total) VALUES (:user_id, :total)");
    $stmt->bindParam(':user_id', $_SESSION['user_id']);
    $stmt->bindParam(':total', calculateTotal($cart));
    $stmt->execute();

    // Get order ID
    $order_id = $conn->lastInsertId();

    // Insert order items into order_items table
    foreach ($cart as $item) {
        $stmt = $conn->prepare("INSERT INTO order_items (order_id, product_id, quantity, price) VALUES (:order_id, :product_id, 1, :price)");
        $stmt->bindParam(':order_id', $order_id);
        $stmt->bindParam(':product_id', $item['id']);
        $stmt->bindParam(':price', $item['price']);
        $stmt->execute();
    }

    // Clear cart
    unset($_SESSION['cart']);

    header('Location: thankyou.php');
} catch (PDOException $e) {
    echo "Error: " . $e->getMessage();
}

// Calculate total function
function calculateTotal($cart) {
    $total = 0;
    foreach ($cart as $item) {
        $total += $item['price'];
    }
    return $total;
}
?>


<?php
session_start();
require 'db_connection.php';

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $username = $_POST['username'];
    $password = $_POST['password'];

    $stmt = $conn->prepare("SELECT * FROM users WHERE username = ?");
    $stmt->execute([$username]);
    $user = $stmt->fetch(PDO::FETCH_ASSOC);

    if ($user && password_verify($password, $user['password'])) {
        $_SESSION['user'] = $user;
        header('Location: index.php');
        exit();
    } else {
        $error = "Invalid username or password!";
    }
}
?>


<?php
session_start();
require 'db_connection.php';

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $username = $_POST['username'];
    $email = $_POST['email'];
    $password = password_hash($_POST['password'], PASSWORD_DEFAULT);

    try {
        $stmt = $conn->prepare("INSERT INTO users (username, email, password) VALUES (?, ?, ?)");
        $stmt->execute([$username, $email, $password]);
        header('Location: login.php');
        exit();
    } catch (PDOException $e) {
        $error = "Username or email already exists!";
    }
}
?>


<?php
session_start();
require 'db_connection.php';

if (!isset($_SESSION['user'])) {
    header('Location: login.php');
    exit();
}

// Get all products
$stmt = $conn->query("SELECT * FROM products");
$products = $stmt->fetchAll(PDO::FETCH_ASSOC);

// Get categories for filtering
$stmt_categories = $conn->query("SELECT * FROM categories");
(categories) = $stmt_categories->fetchAll(PDO::FETCH_ASSOC);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Product List</title>
</head>
<body>
    <?php if (!empty($categories)): ?>
        <select name="category_filter">
            <option value="">All Categories</option>
            <?php foreach ($categories as $category): ?>
                <option value="<?php echo $category['id']; ?>"><?php echo $category['name']; ?></option>
            <?php endforeach; ?>
        </select>
    <?php endif; ?>

    <?php foreach ($products as $product): ?>
        <div class="product-item">
            <h2><?php echo $product['name']; ?></h2>
            <p><?php echo $product['description']; ?></p>
            <p>Price: $<?php echo number_format($product['price'], 2); ?></p>
            <?php if ($product['stock'] > 0): ?>
                <form action="add_to_cart.php" method="POST">
                    <input type="hidden" name="product_id" value="<?php echo $product['id']; ?>">
                    <input type="number" name="quantity" min="1" max="<?php echo $product['stock']; ?>" value="1">
                    <button type="submit">Add to Cart</button>
                </form>
            <?php else: ?>
                <p>Out of Stock</p>
            <?php endif; ?>
        </div>
    <?php endforeach; ?>

    <!-- Add pagination if needed -->
</body>
</html>


<?php
session_start();
require 'db_connection.php';

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $product_id = $_POST['product_id'];
    $quantity = (int)$_POST['quantity'];

    // Get product details
    $stmt = $conn->prepare("SELECT * FROM products WHERE id = ?");
    $stmt->execute([$product_id]);
    $product = $stmt->fetch(PDO::FETCH_ASSOC);

    if ($product && $product['stock'] >= $quantity) {
        // Add to cart (stored in session)
        if (!isset($_SESSION['cart'])) {
            $_SESSION['cart'] = array();
        }

        $item = array(
            'id' => $product_id,
            'name' => $product['name'],
            'price' => $product['price'],
            'quantity' => $quantity
        );

        $_SESSION['cart'][] = $item;

        header('Location: index.php');
        exit();
    }
}
?>


<?php
session_start();
require 'db_connection.php';

if (!isset($_SESSION['user'])) {
    header('Location: login.php');
    exit();
}

// Calculate total price
$total = 0;
foreach ($_SESSION['cart'] as $item) {
    $total += ($item['price'] * $item['quantity']);
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <?php if (!empty($_SESSION['cart'])): ?>
        <h2>Your Shopping Cart</h2>
        <table>
            <tr>
                <th>Product Name</th>
                <th>Quantity</th>
                <th>Price</th>
                <th>Total</th>
            </tr>
            <?php foreach ($_SESSION['cart'] as $item): ?>
                <tr>
                    <td><?php echo $item['name']; ?></td>
                    <td><?php echo $item['quantity']; ?></td>
                    <td>$<?php echo number_format($item['price'], 2); ?></td>
                    <td>$<?php echo number_format($item['price'] * $item['quantity'], 2); ?></td>
                </tr>
            <?php endforeach; ?>
        </table>
        <h3>Total: $<?php echo number_format($total, 2); ?></h3>
        <a href="checkout.php">Proceed to Checkout</a> |
        <a href="index.php">Continue Shopping</a>
    <?php else: ?>
        <p>Your cart is empty!</p>
        <a href="index.php">Go back to shopping</a>
    <?php endif; ?>

    <!-- Add a button to clear the cart -->
    <?php if (!empty($_SESSION['cart'])): ?>
        <form action="clear_cart.php" method="POST">
            <button type="submit">Clear Cart</button>
        </form>
    <?php endif; ?>
</body>
</html>


<?php
session_start();
require 'db_connection.php';

if (!isset($_SESSION['user'])) {
    header('Location: login.php');
    exit();
}

// Calculate total price
$total = 0;
foreach ($_SESSION['cart'] as $item) {
    $total += ($item['price'] * $item['quantity']);
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
</head>
<body>
    <?php if (!empty($_SESSION['cart'])): ?>
        <h2>Review Your Order</h2>
        <table>
            <tr>
                <th>Product Name</th>
                <th>Quantity</th>
                <th>Price</th>
                <th>Total</th>
            </tr>
            <?php foreach ($_SESSION['cart'] as $item): ?>
                <tr>
                    <td><?php echo $item['name']; ?></td>
                    <td><?php echo $item['quantity']; ?></td>
                    <td>$<?php echo number_format($item['price'], 2); ?></td>
                    <td>$<?php echo number_format($item['price'] * $item['quantity'], 2); ?></td>
                </tr>
            <?php endforeach; ?>
        </table>
        <h3>Total: $<?php echo number_format($total, 2); ?></h3>

        <!-- Payment Form -->
        <form action="process_order.php" method="POST">
            <input type="hidden" name="total_price" value="<?php echo $total; ?>">
            <button type="submit">Place Order</button>
        </form>
    <?php else: ?>
        <p>Your cart is empty!</p>
        <a href="index.php">Go back to shopping</a>
    <?php endif; ?>
</body>
</html>


<?php
session_start();
require 'db_connection.php';

if (!isset($_SESSION['user'])) {
    header('Location: login.php');
    exit();
}

// Get total price from form
$total_price = (float)$_POST['total_price'];

try {
    // Insert order into orders table
    $stmt_order = $conn->prepare("INSERT INTO orders (user_id, total_price, order_status) VALUES (?, ?, 'pending')");
    $stmt_order->execute([$_SESSION['user']['id'], $total_price]);

    $order_id = $conn->lastInsertId();

    // Insert order items into order_items table
    foreach ($_SESSION['cart'] as $item) {
        $stmt_item = $conn->prepare("INSERT INTO order_items (order_id, product_id, quantity, price) VALUES (?, ?, ?, ?)");
        $stmt_item->execute([$order_id, $item['id'], $item['quantity'], $item['price']]);
    }

    // Clear the cart
    unset($_SESSION['cart']);

    header('Location: thank_you.php');
} catch (PDOException $e) {
    die("Error processing order: " . $e->getMessage());
}
?>


<?php
session_start();
require 'db_connection.php';

if (!isset($_SESSION['user'])) {
    header('Location: login.php');
    exit();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Thank You</title>
</head>
<body>
    <h2>Thank you for your purchase!</h2>
    <p>Your order has been successfully placed. We will notify you once it's shipped.</p>
    <a href="index.php">Continue Shopping</a>
</body>
</html>


<?php
session_start();
unset($_SESSION['cart']);
header('Location: cart.php');
exit();
?>


<?php
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}
?>


<?php
$host = "localhost";
$username = "root";
$password = "";
$dbname = "eshop";

$conn = mysqli_connect($host, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}
?>


<?php include 'config.php'; ?>

<!DOCTYPE html>
<html>
<head>
    <title>Product Catalog</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
</head>
<body>
    <div class="container mt-5">
        <?php
            $sql = "SELECT * FROM products";
            $result = mysqli_query($conn, $sql);
            
            while ($row = mysqli_fetch_assoc($result)) {
                echo '
                    <div class="card mb-4 shadow-sm">
                        <div class="card-body">
                            <h5 class="card-title">' . $row['name'] . '</h5>
                            <p class="card-text">Price: $' . number_format($row['price'], 2) . '</p>
                            <a href="add_to_cart.php?id=' . $row['id'] . '" class="btn btn-primary">Add to Cart</a>
                        </div>
                    </div>';
            }
        ?>
    </div>
</body>
</html>


<?php include 'config.php'; ?>

<?php
session_start();

$product_id = $_GET['id'];

// Check if product exists in database
$sql = "SELECT * FROM products WHERE id = $product_id";
$result = mysqli_query($conn, $sql);

if ($result && mysqli_num_rows($result) > 0) {
    $product = mysqli_fetch_assoc($result);
    
    // Add to cart
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }
    
    if (isset($_SESSION['cart'][$product_id])) {
        // Increment quantity
        $_SESSION['cart'][$product_id]['quantity']++;
    } else {
        // Add new product
        $_SESSION['cart'][$product_id] = array(
            'name' => $product['name'],
            'price' => $product['price'],
            'quantity' => 1,
            'image' => $product['image']
        );
    }
    
    echo "<script>alert('Product added to cart');</script>";
} else {
    echo "<script>alert('Product not found');</script>";
}

header("Location: catalog.php");
?>


<?php include 'config.php'; ?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
</head>
<body>
    <div class="container mt-5">
        <?php
            session_start();
            
            if (!isset($_SESSION['cart']) || count($_SESSION['cart']) == 0) {
                echo "<h3>Your cart is empty</h3>";
            } else {
                $total = 0;
                
                echo '<table class="table table-striped">
                        <thead>
                            <tr>
                                <th>Product Name</th>
                                <th>Price</th>
                                <th>Quantity</th>
                                <th>Total</th>
                                <th>Action</th>
                            </tr>
                        </thead>
                        <tbody>';
                
                foreach ($_SESSION['cart'] as $id => $item) {
                    $total += ($item['price'] * $item['quantity']);
                    
                    echo '<tr>
                            <td>' . $item['name'] . '</td>
                            <td>$' . number_format($item['price'], 2) . '</td>
                            <td><input type="number" value="' . $item['quantity'] . '" style="width:60px;" id="qty_' . $id . '"></td>
                            <td>$' . number_format(($item['price'] * $item['quantity']), 2) . '</td>
                            <td><button class="btn btn-sm btn-danger" onclick="removeFromCart(' . $id . ')">Remove</button></td>
                          </tr>';
                }
                
                echo '</tbody>
                    </table>';
                
                echo '<h3>Total: $' . number_format($total, 2) . '</h3>';
            }
        ?>
        
        <div style="margin-top:20px;">
            <?php if (isset($_SESSION['cart'])) { ?>
                <a href="checkout.php" class="btn btn-primary">Checkout</a>
            <?php } ?>
            <a href="catalog.php" class="btn btn-secondary">Continue Shopping</a>
        </div>
    </div>

    <script>
        function removeFromCart(id) {
            window.location.href = "remove_from_cart.php?id=" + id;
        }
    </script>
</body>
</html>


<?php include 'config.php'; ?>

<?php
session_start();

$product_id = $_GET['id'];

if (isset($_SESSION['cart'][$product_id])) {
    unset($_SESSION['cart'][$product_id]);
}

header("Location: cart.php");
?>


<?php include 'config.php'; ?>

<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
</head>
<body>
    <div class="container mt-5">
        <?php
            session_start();
            
            if (!isset($_SESSION['cart']) || count($_SESSION['cart']) == 0) {
                header("Location: catalog.php");
            }
        ?>
        
        <h3>Shipping Information</h3>
        <form action="process_payment.php" method="POST">
            <div class="row">
                <div class="col-md-6 mb-3">
                    <label for="firstName">First Name</label>
                    <input type="text" name="firstName" required class="form-control">
                </div>
                <div class="col-md-6 mb-3">
                    <label for="lastName">Last Name</label>
                    <input type="text" name="lastName" required class="form-control">
                </div>
                <div class="col-md-12 mb-3">
                    <label for="email">Email</label>
                    <input type="email" name="email" required class="form-control">
                </div>
                <div class="col-md-12 mb-3">
                    <label for="address">Address</label>
                    <input type="text" name="address" required class="form-control">
                </div>
                <div class="col-md-6 mb-3">
                    <label for="city">City</label>
                    <input type="text" name="city" required class="form-control">
                </div>
                <div class="col-md-4 mb-3">
                    <label for="state">State</label>
                    <input type="text" name="state" required class="form-control">
                </div>
                <div class="col-md-2 mb-3">
                    <label for="zipCode">Zip Code</label>
                    <input type="number" name="zipCode" required class="form-control">
                </div>
            </div>
            
            <h3>Payment Information</h3>
            <div class="row">
                <div class="col-md-6 mb-3">
                    <label for="cardNumber">Card Number</label>
                    <input type="number" name="cardNumber" required class="form-control">
                </div>
                <div class="col-md-4 mb-3">
                    <label for="expiryMonth">Expiry Month</label>
                    <select name="expiryMonth" required class="form-control">
                        <option value="">Select Month</option>
                        <?php for ($i=1; $i<=12; $i++) { ?>
                            <option value="<?php echo str_pad($i, 2, '0', STR_PAD_LEFT); ?>"><?php echo $i; ?></option>
                        <?php } ?>
                    </select>
                </div>
                <div class="col-md-2 mb-3">
                    <label for="expiryYear">Expiry Year</label>
                    <select name="expiryYear" required class="form-control">
                        <option value="">Select Year</option>
                        <?php $currentYear = date('Y'); for ($i=$currentYear; $i<=$currentYear+10; $i++) { ?>
                            <option value="<?php echo $i; ?>"><?php echo $i; ?></option>
                        <?php } ?>
                    </select>
                </div>
            </div>
            
            <button type="submit" class="btn btn-primary">Place Order</button>
        </form>
    </div>
</body>
</html>


<?php include 'config.php'; ?>

<?php
session_start();

// Validate input data (simplified)
foreach ($_POST as $key => $value) {
    if (!isset($_POST[$key]) || empty(trim($_POST[$key]))) {
        header("Location: checkout.php");
        exit();
    }
}

// Simulate payment processing
$isValidPayment = true; // In real application, integrate with payment gateway

if ($isValidPayment) {
    $orderTotal = 0;
    
    foreach ($_SESSION['cart'] as $item) {
        $orderTotal += $item['price'] * $item['quantity'];
    }
    
    // Insert order into database
    $sqlOrder = "INSERT INTO orders (total, status) VALUES (" . mysqli_real_escape_string($conn, $orderTotal) . ", 'Processing')";
    $resultOrder = mysqli_query($conn, $sqlOrder);
    
    if ($resultOrder && $orderId = mysqli_insert_id($conn)) {
        // Insert order items
        foreach ($_SESSION['cart'] as $id => $item) {
            $sqlItem = "INSERT INTO order_items (order_id, product_id, quantity, price)
                        VALUES (" . $orderId . ", " . $id . ", " . $item['quantity'] . ", " . $item['price'] . ")";
            mysqli_query($conn, $sqlItem);
        }
        
        // Clear cart
        unset($_SESSION['cart']);
    }
    
    header("Location: order_confirmation.php");
} else {
    echo "<script>alert('Payment failed');</script>";
    header("Location: checkout.php");
}
?>


<?php include 'config.php'; ?>

<!DOCTYPE html>
<html>
<head>
    <title>Order Confirmation</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
</head>
<body>
    <div class="container mt-5">
        <h3>Thank you for your order!</h3>
        <p>Your order has been successfully processed.</p>
        <a href="catalog.php" class="btn btn-primary">Continue Shopping</a>
    </div>
</body>
</html>


<?php
include("db_connection.php");

// Get form data
$product_id = $_POST['product_id'];
$quantity = isset($_POST['quantity']) ? $_POST['quantity'] : 1;
$price = $_POST['price'];

if ($product_id && $quantity > 0) {
    // Calculate total amount
    $total_amount = $price * $quantity;

    // Here you would typically:
    // - Check if the product exists in the database
    // - Update inventory (decrease quantity)
    // - Insert into orders table
    // - Redirect to payment gateway or confirmation page

    // For demonstration, let's display the purchase details
    echo "<h2>Purchase Confirmation</h2>";
    echo "<p>Product ID: $product_id</p>";
    echo "<p>Quantity: $quantity</p>";
    echo "<p>Unit Price: $price</p>";
    echo "<p>Total Amount: $total_amount</p>";
    
    // In a real application, you would redirect to a payment page or confirm the order
} else {
    // Handle error
    echo "Invalid purchase request!";
}

// Close database connection
$conn->close();
?>


<?php
$servername = "localhost";
$username = "root";
$password = "";
$dbname = "my_store";

// Create connection
$conn = new mysqli($servername, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}
?>


<?php
// Connect to database
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'your_database_name';

$conn = new mysqli($host, $username, $password, $dbname);
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Fetch products from database
$sql = "SELECT * FROM products";
$result = $conn->query($sql);

if ($result->num_rows > 0) {
    while ($row = $result->fetch_assoc()) {
        echo "<div class='product'>";
        echo "<h2>" . $row['name'] . "</h2>";
        echo "<p>" . $row['description'] . "</p>";
        echo "<p>Price: $" . number_format($row['price'], 2) . "</p>";
        echo "<p>Quantity Available: " . $row['quantity'] . "</p>";
        echo "<form action='add_to_cart.php' method='post'>";
        echo "<input type='hidden' name='product_id' value='" . $row['id'] . "'>";
        echo "<input type='number' name='quantity' min='1' max='" . $row['quantity'] . "' value='1'>";
        echo "<button type='submit'>Add to Cart</button>";
        echo "</form>";
        echo "</div>";
    }
} else {
    echo "No products available.";
}

$conn->close();
?>


<?php
session_start();

// Get product details
$product_id = $_POST['product_id'];
$quantity = $_POST['quantity'];

// Connect to database
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'your_database_name';

$conn = new mysqli($host, $username, $password, $dbname);
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

$sql = "SELECT * FROM products WHERE id = ?";
$stmt = $conn->prepare($sql);
$stmt->bind_param('i', $product_id);
$stmt->execute();
$result = $stmt->get_result();

if ($result->num_rows > 0) {
    $product = $result->fetch_assoc();
    
    // Add to cart
    if (isset($_SESSION['cart'])) {
        if (array_key_exists($product_id, $_SESSION['cart'])) {
            $_SESSION['cart'][$product_id]['quantity'] += $quantity;
        } else {
            $_SESSION['cart'][$product_id] = array(
                'name' => $product['name'],
                'price' => $product['price'],
                'quantity' => $quantity
            );
        }
    } else {
        $_SESSION['cart'] = array(
            $product_id => array(
                'name' => $product['name'],
                'price' => $product['price'],
                'quantity' => $quantity
            )
        );
    }
}

$conn->close();

// Redirect back to products page
header("Location: products.php");
exit();
?>


<?php
session_start();

if (empty($_SESSION['cart'])) {
    header("Location: products.php");
    exit();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
</head>
<body>
    <h1>Checkout</h1>
    
    <form action="process_order.php" method="post">
        <!-- User Information -->
        <div>
            <label for="name">Name:</label>
            <input type="text" id="name" name="name" required>
        </div>
        
        <div>
            <label for="email">Email:</label>
            <input type="email" id="email" name="email" required>
        </div>
        
        <div>
            <label for="address">Address:</label>
            <textarea id="address" name="address" required></textarea>
        </div>
        
        <div>
            <label for="city">City:</label>
            <input type="text" id="city" name="city" required>
        </div>
        
        <div>
            <label for="state">State:</label>
            <input type="text" id="state" name="state" required>
        </div>
        
        <div>
            <label for="zip_code">Zip Code:</label>
            <input type="text" id="zip_code" name="zip_code" required>
        </div>
        
        <div>
            <label for="payment_method">Payment Method:</label>
            <select id="payment_method" name="payment_method" required>
                <option value="">Choose...</option>
                <option value="credit_card">Credit Card</option>
                <option value="paypal">PayPal</option>
            </select>
        </div>
        
        <!-- Display Cart Items -->
        <?php
        $total = 0;
        foreach ($_SESSION['cart'] as $item) {
            echo "<div class='cart-item'>";
            echo "<p>" . $item['name'] . "</p>";
            echo "<p>Quantity: " . $item['quantity'] . "</p>";
            echo "<p>Price: $" . number_format($item['price'], 2) . "</p>";
            $total += $item['price'] * $item['quantity'];
            echo "</div>";
        }
        echo "<h3>Total: $" . number_format($total, 2) . "</h3>";
        ?>
        
        <button type="submit">Place Order</button>
    </form>
</body>
</html>


<?php
session_start();

if (empty($_SESSION['cart']) || empty($_POST)) {
    header("Location: checkout.php");
    exit();
}

// Sanitize and validate input
$name = htmlspecialchars(trim($_POST['name']));
$email = htmlspecialchars(trim($_POST['email']));
$address = htmlspecialchars(trim($_POST['address']));
$city = htmlspecialchars(trim($_POST['city']));
$state = htmlspecialchars(trim($_POST['state']));
$zip_code = htmlspecialchars(trim($_POST['zip_code']));
$payment_method = htmlspecialchars(trim($_POST['payment_method']));

if (empty($name) || empty($email) || empty($address) || empty($city) || empty($state) || empty($zip_code) || empty($payment_method)) {
    header("Location: checkout.php");
    exit();
}

// Connect to database
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'your_database_name';

$conn = new mysqli($host, $username, $password, $dbname);
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Insert order
$total_amount = 0;
foreach ($_SESSION['cart'] as $item) {
    $total_amount += $item['price'] * $item['quantity'];
}

$sql = "INSERT INTO orders (user_id, total_amount, status) VALUES (?, ?, ?)";
$stmt = $conn->prepare($sql);
$stmt->bind_param('isi', 1, $total_amount, 'pending'); // Assuming user_id is 1 for testing
$stmt->execute();
$order_id = $stmt->insert_id;

// Insert order items
foreach ($_SESSION['cart'] as $product_id => $item) {
    $price = $item['price'];
    $quantity = $item['quantity'];
    
    $sql_item = "INSERT INTO order_items (order_id, product_id, quantity, price) VALUES (?, ?, ?, ?)";
    $stmt_item = $conn->prepare($sql_item);
    $stmt_item->bind_param('iiid', $order_id, $product_id, $quantity, $price);
    $stmt_item->execute();
}

// Clear cart
unset($_SESSION['cart']);
$_SESSION['cart'] = array();

$conn->close();

// Redirect to confirmation page
header("Location: order_confirmation.php?order_id=" . $order_id);
exit();
?>


<?php
session_start();

$order_id = isset($_GET['order_id']) ? intval($_GET['order_id']) : 0;
if ($order_id == 0) {
    header("Location: products.php");
    exit();
}

// Connect to database
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'your_database_name';

$conn = new mysqli($host, $username, $password, $dbname);
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Fetch order details
$sql = "SELECT * FROM orders WHERE id = ?";
$stmt = $conn->prepare($sql);
$stmt->bind_param('i', $order_id);
$stmt->execute();
$result = $stmt->get_result();

if ($result->num_rows > 0) {
    $order = $result->fetch_assoc();
    
    // Fetch order items
    $sql_items = "SELECT * FROM order_items WHERE order_id = ?";
    $stmt_items = $conn->prepare($sql_items);
    $stmt_items->bind_param('i', $order_id);
    $stmt_items->execute();
    $items_result = $stmt_items->get_result();
    
    echo "<h1>Order Confirmation</h1>";
    echo "<p>Order ID: " . $order['id'] . "</p>";
    echo "<p>Total Amount: $" . number_format($order['total_amount'], 2) . "</p>";
    echo "<h2>Items Purchased:</h2>";
    
    while ($item = $items_result->fetch_assoc()) {
        // Get product name
        $product_sql = "SELECT name FROM products WHERE id = ?";
        $product_stmt = $conn->prepare($product_sql);
        $product_stmt->bind_param('i', $item['product_id']);
        $product_stmt->execute();
        $product_result = $product_stmt->get_result();
        
        if ($product_result->num_rows > 0) {
            $product = $product_result->fetch_assoc();
            echo "<div class='order-item'>";
            echo "<p>" . $product['name'] . "</p>";
            echo "<p>Quantity: " . $item['quantity'] . "</p>";
            echo "<p>Price: $" . number_format($item['price'], 2) . "</p>";
            echo "</div>";
        }
    }
} else {
    echo "Order not found.";
}

$conn->close();
?>


<?php
session_start();

// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'shopping_cart';

$conn = mysqli_connect($host, $username, $password, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Products array (you can replace this with database data)
$products = array(
    1 => array('id' => 1, 'name' => 'Product 1', 'description' => 'Description of product 1', 'price' => 25.00),
    2 => array('id' => 2, 'name' => 'Product 2', 'description' => 'Description of product 2', 'price' => 35.00),
    3 => array('id' => 3, 'name' => 'Product 3', 'description' => 'Description of product 3', 'price' => 45.00)
);

// Function to display products
function displayProducts() {
    global $products;
    
    echo "<table border='1'>";
    echo "<tr><th>Product ID</th><th>Name</th><th>Description</th><th>Price</th><th>Action</th></tr>";
    
    foreach ($products as $product) {
        echo "<tr>";
        echo "<td>{$product['id']}</td>";
        echo "<td>{$product['name']}</td>";
        echo "<td>{$product['description']}</td>";
        echo "<td>$$product[price]</td>";
        echo "<td><a href='add_to_cart.php?id={$product['id']}'>Add to Cart</a></td>";
        echo "</tr>";
    }
    
    echo "</table>";
}

// Function to add item to cart
function addToCart($productId, $quantity = 1) {
    global $_SESSION;
    
    if (isset($_SESSION['cart'][$productId])) {
        // Update quantity
        $_SESSION['cart'][$productId]['quantity'] += $quantity;
    } else {
        // Add new product
        $product = getProductById($productId);
        if ($product) {
            $product['quantity'] = $quantity;
            $_SESSION['cart'][$productId] = $product;
        }
    }
}

// Function to update cart quantity
function updateCartQuantity($productId, $quantity) {
    global $_SESSION;
    
    if (isset($_SESSION['cart'][$productId])) {
        $_SESSION['cart'][$productId]['quantity'] = $quantity;
    }
}

// Function to remove item from cart
function removeFromCart($productId) {
    global $_SESSION;
    
    unset($_SESSION['cart'][$productId]);
}

// Function to calculate total price
function calculateTotal() {
    global $_SESSION;
    
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += ($item['price'] * $item['quantity']);
    }
    return $total;
}

// Function to get product by ID
function getProductById($id) {
    global $products;
    
    if (isset($products[$id])) {
        return $products[$id];
    }
    return false;
}

// Function to process checkout
function processCheckout() {
    global $_SESSION;
    
    // Validate required fields
    if (!isset($_POST['name'], $_POST['email'], $_POST['address'])) {
        return "Please fill in all required fields.";
    }
    
    $name = mysqli_real_escape_string($conn, $_POST['name']);
    $email = mysqli_real_escape_string($conn, $_POST['email']);
    $address = mysqli_real_escape_string($conn, $_POST['address']);
    $payment_method = isset($_POST['payment']) ? mysqli_real_escape_string($conn, $_POST['payment']) : '';
    
    // Check if cart is empty
    if (empty($_SESSION['cart'])) {
        return "Your cart is empty.";
    }
    
    // Insert order into database
    $sql = "INSERT INTO orders (name, email, address, payment_method, total_amount) 
            VALUES ('$name', '$email', '$address', '$payment_method', '" . calculateTotal() . "')";
            
    if (mysqli_query($conn, $sql)) {
        // Get order ID
        $order_id = mysqli_insert_id($conn);
        
        // Insert order items into database
        foreach ($_SESSION['cart'] as $item) {
            $sql_item = "INSERT INTO order_items (order_id, product_id, quantity, price)
                        VALUES ('$order_id', '{$item['id']}', '{$item['quantity']}', '{$item['price']}')";
            mysqli_query($conn, $sql_item);
        }
        
        // Clear cart
        $_SESSION['cart'] = array();
        
        return "Order processed successfully! Your order ID is #$order_id.";
    } else {
        return "Error processing your order: " . mysqli_error($conn);
    }
}

// Function to sanitize input data
function sanitizeInput($data) {
    $data = trim($data);
    $data = htmlspecialchars($data);
    return $data;
}
?>


<?php
// add_to_cart.php
session_start();

if (isset($_POST['product_id']) && isset($_SESSION['cart'])) {
    $productId = $_POST['product_id'];
    $quantity = $_POST['quantity'];

    // Check if product already exists in cart
    if (array_key_exists($productId, $_SESSION['cart'])) {
        // Update quantity
        $_SESSION['cart'][$productId]['quantity'] += $quantity;
    } else {
        // Add new product to cart
        $products = array(
            1 => array('name' => 'Laptop', 'price' => 999.99),
            2 => array('name' => 'Phone', 'price' => 699.99),
            3 => array('name' => 'Tablet', 'price' => 299.99)
        );

        $_SESSION['cart'][$productId] = array(
            'product_name' => $products[$productId]['name'],
            'price' => $products[$productId]['price'],
            'quantity' => $quantity
        );
    }
}

header("Location: cart.php");
exit();
?>


<?php
// cart.php
session_start();

if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css">
</head>
<body>
    <div class="container">
        <h2>Your Shopping Cart</h2>
        
        <?php if (empty($_SESSION['cart'])) { ?>
            <p>Your cart is empty.</p>
        <?php } else { ?>
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>Product Name</th>
                        <th>Price</th>
                        <th>Quantity</th>
                        <th>Total</th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tbody>
                    <?php $total = 0; ?>
                    <?php foreach ($_SESSION['cart'] as $productId => $item) { ?>
                        <?php $subtotal = $item['price'] * $item['quantity']; ?>
                        <?php $total += $subtotal; ?>
                        <tr>
                            <td><?php echo $item['product_name']; ?></td>
                            <td>$<?php echo number_format($item['price'], 2); ?></td>
                            <td><?php echo $item['quantity']; ?></td>
                            <td>$<?php echo number_format($subtotal, 2); ?></td>
                            <td>
                                <form action="remove_from_cart.php" method="post">
                                    <input type="hidden" name="product_id" value="<?php echo $productId; ?>">
                                    <button type="submit" class="btn btn-danger">Remove</button>
                                </form>
                            </td>
                        </tr>
                    <?php } ?>
                </tbody>
                <tfoot>
                    <tr>
                        <td colspan="4"><strong>Total:</strong></td>
                        <td>$<?php echo number_format($total, 2); ?></td>
                    </tr>
                </tfoot>
            </table>
        <?php } ?>

        <a href="products.php" class="btn btn-primary">Continue Shopping</a>
    </div>

    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>
</body>
</html>


<?php
// remove_from_cart.php
session_start();

if (isset($_POST['product_id'])) {
    $productId = $_POST['product_id'];
    
    if (isset($_SESSION['cart'][$productId])) {
        unset($_SESSION['cart'][$productId]);
    }
}

header("Location: cart.php");
exit();
?>


<?php
// Process.php - Handles payment submission
session_start();

require 'includes/db_connection.php';
require 'includes/stripe-php-3.19.0/init.php';

\Stripe\Stripe::setApiKey('your_stripe_secret_key');

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    try {
        // Get cart items from session
        $cart = isset($_SESSION['cart']) ? $_SESSION['cart'] : [];

        if (empty($cart)) {
            throw new Exception("Your cart is empty.");
        }

        // Calculate total amount
        $totalAmount = 0;
        foreach ($cart as $item) {
            $totalAmount += $item['price'] * $item['quantity'];
        }
        
        $totalCents = (int) ($totalAmount * 100); // Convert to cents

        // Create the payment charge
        $charge = \Stripe\Charge::create([
            'amount' => $totalCents,
            'currency' => 'usd',
            'source' => $_POST['stripeToken'],
            'description' => 'Purchase from Your Store'
        ]);

        if ($charge->status == 'succeeded') {
            // Payment successful
            // Clear cart
            unset($_SESSION['cart']);
            
            // Redirect to thank you page
            header('Location: thankyou.php');
            exit();
        } else {
            throw new Exception("Payment failed. Please try again.");
        }

    } catch (\Stripe\Exception\CardException $e) {
        // The card has been declined
        http_response_code(400);
        echo json_encode(['success' => false, 'message' => $e->getMessage()]);
        exit();
    } catch (Exception $e) {
        // General error
        http_response_code(500);
        echo json_encode(['success' => false, 'message' => $e->getMessage()]);
        exit();
    }
}
?>


// Registration
if ($_SERVER['REQUEST_METHOD'] == 'POST' && isset($_POST['register'])) {
    $email = $_POST['email'];
    $password = $_POST['password'];
    // Hash the password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);
    
    // Insert into users table
    $stmt = $conn->prepare("INSERT INTO users (email, password_hash) VALUES (?, ?)");
    $stmt->bind_param("ss", $email, $hashed_password);
    if ($stmt->execute()) {
        echo "Registration successful!";
        // Redirect to login page
    }
}

// Login
if ($_SERVER['REQUEST_METHOD'] == 'POST' && isset($_POST['login'])) {
    $email = $_POST['email'];
    $password = $_POST['password'];
    
    $stmt = $conn->prepare("SELECT id, password_hash FROM users WHERE email = ?");
    $stmt->bind_param("s", $email);
    $stmt->execute();
    $result = $stmt->get_result();
    if ($result->num_rows > 0) {
        $row = $result->fetch_assoc();
        if (password_verify($password, $row['password_hash'])) {
            // Start session
            session_start();
            $_SESSION['user_id'] = $row['id'];
            header("Location: products.php");
        } else {
            echo "Invalid password!";
        }
    } else {
        echo "User not found!";
    }
}


<?php
// products.php
session_start();
if (!isset($_SESSION['user_id'])) {
    header("Location: login.php");
}

$conn = // Your database connection here;

$stmt = $conn->prepare("SELECT * FROM products");
$stmt->execute();
$result = $stmt->get_result();

?>

<!DOCTYPE html>
<html>
<head>
    <title>Product List</title>
</head>
<body>
    <?php while ($product = $result->fetch_assoc()): ?>
        <div class="product">
            <h2><?php echo $product['name']; ?></h2>
            <p><?php echo $product['description']; ?></p>
            <p>Price: <?php echo $product['price']; ?> USD</p>
            <form action="add_to_cart.php" method="post">
                <input type="hidden" name="product_id" value="<?php echo $product['id']; ?>">
                <input type="number" name="quantity" min="1" max="<?php echo $product['quantity']; ?>" value="1">
                <button type="submit">Add to Cart</button>
            </form>
        </div>
    <?php endwhile; ?>
    
    <a href="cart.php">View Cart</a>
</body>
</html>


// add_to_cart.php
session_start();
if (!isset($_SESSION['user_id'])) {
    header("Location: login.php");
}

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $product_id = $_POST['product_id'];
    $quantity = $_POST['quantity'];
    
    if (empty($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }
    
    if (!isset($_SESSION['cart'][$product_id])) {
        $_SESSION['cart'][$product_id] = 0;
    }
    
    $_SESSION['cart'][$product_id] += $quantity;
}

header("Location: products.php");


// cart.php
session_start();
if (!isset($_SESSION['user_id'])) {
    header("Location: login.php");
}

$conn = // Your database connection here;

$cart_total = 0;
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <?php if (!empty($_SESSION['cart'])): ?>
        <h2>Your Cart</h2>
        <?php foreach ($_SESSION['cart'] as $product_id => $quantity): 
            $stmt = $conn->prepare("SELECT * FROM products WHERE id = ?");
            $stmt->bind_param("i", $product_id);
            $stmt->execute();
            $result = $stmt->get_result();
            $product = $result->fetch_assoc();
        ?>
        <div class="cart-item">
            <h3><?php echo $product['name']; ?></h3>
            <p>Quantity: <?php echo $quantity; ?></p>
            <p>Price: <?php echo $product['price'] * $quantity; ?> USD</p>
            <form action="update_cart.php" method="post">
                <input type="hidden" name="product_id" value="<?php echo $product_id; ?>">
                <input type="number" name="quantity" min="1" max="<?php echo $product['quantity']; ?>" value="<?php echo $quantity; ?>">
                <button type="submit">Update</button>
            </form>
        </div>
        <?php $cart_total += $product['price'] * $quantity; ?>
        <?php endforeach; ?>
        
        <h3>Total: <?php echo $cart_total; ?> USD</h3>
        <a href="checkout.php">Proceed to Checkout</a>
    <?php else: ?>
        <p>Your cart is empty!</p>
    <?php endif; ?>
    
    <a href="products.php">Continue Shopping</a>
</body>
</html>


// update_cart.php
session_start();
if (!isset($_SESSION['user_id'])) {
    header("Location: login.php");
}

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $product_id = $_POST['product_id'];
    $quantity = $_POST['quantity'];
    
    if (!empty($_SESSION['cart']) && isset($_SESSION['cart'][$product_id])) {
        $_SESSION['cart'][$product_id] = $quantity;
    }
}

header("Location: cart.php");


// checkout.php
session_start();
if (!isset($_SESSION['user_id'])) {
    header("Location: login.php");
}

$cart_total = 0;
$conn = // Your database connection here;

?>

<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
</head>
<body>
    <?php if (!empty($_SESSION['cart'])): ?>
        <h2> Checkout </h2>
        
        <?php foreach ($_SESSION['cart'] as $product_id => $quantity): 
            $stmt = $conn->prepare("SELECT * FROM products WHERE id = ?");
            $stmt->bind_param("i", $product_id);
            $stmt->execute();
            $result = $stmt->get_result();
            $product = $result->fetch_assoc();
        ?>
        
        <?php $cart_total += $product['price'] * $quantity; ?>
        <?php endforeach; ?>
        
        <form action="process_payment.php" method="post">
            <h3>Payment Details</h3>
            <input type="hidden" name="total_amount" value="<?php echo $cart_total; ?>">
            
            <label for="card_number">Card Number:</label><br>
            <input type="text" id="card_number" name="card_number" required><br>
            
            <label for="card_name">Name on Card:</label><br>
            <input type="text" id="card_name" name="card_name" required><br>
            
            <label for="exp_date">Expiry Date:</label><br>
            <input type="text" id="exp_date" name="exp_date" placeholder="MM/YY" required><br>
            
            <label for="cvv">CVV:</label><br>
            <input type="text" id="cvv" name="cvv" required><br>
            
            <button type="submit">Complete Purchase</button>
        </form>
    <?php else: ?>
        <p>Your cart is empty!</p>
    <?php endif; ?>
    
    <a href="cart.php">Back to Cart</a>
</body>
</html>


// process_payment.php
session_start();
if (!isset($_SESSION['user_id'])) {
    header("Location: login.php");
}

$conn = // Your database connection here;

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $total_amount = $_POST['total_amount'];
    $card_number = $_POST['card_number'];
    $card_name = $_POST['card_name'];
    $exp_date = $_POST['exp_date'];
    $cvv = $_POST['cvv'];
    
    // For this example, we'll assume payment is successful
    // In a real application, you would integrate with a payment gateway
    
    // Insert order into orders table
    $stmt = $conn->prepare("INSERT INTO orders (user_id, total_amount, payment_method) VALUES (?, ?, 'credit_card')");
    $stmt->bind_param("id", $_SESSION['user_id'], $total_amount);
    if ($stmt->execute()) {
        $order_id = $conn->insert_id;
        
        // Insert order items
        foreach ($_SESSION['cart'] as $product_id => $quantity) {
            $stmt_item = $conn->prepare("SELECT price FROM products WHERE id = ?");
            $stmt_item->bind_param("i", $product_id);
            $stmt_item->execute();
            $result_item = $stmt_item->get_result();
            $product_price = $result_item->fetch_assoc()['price'];
            
            $total_item_price = $quantity * $product_price;
            
            $stmt_order_item = $conn->prepare("INSERT INTO order_items (order_id, product_id, quantity, price) VALUES (?, ?, ?, ?)");
            $stmt_order_item->bind_param("iidi", $order_id, $product_id, $quantity, $total_item_price);
            $stmt_order_item->execute();
        }
        
        // Clear cart
        unset($_SESSION['cart']);
        
        // Redirect to confirmation page
        header("Location: purchase_confirmation.php");
    } else {
        echo "Error processing your order!";
    }
}


// purchase_confirmation.php
session_start();
if (!isset($_SESSION['user_id'])) {
    header("Location: login.php");
}

$conn = // Your database connection here;

// Retrieve last order details
$stmt = $conn->prepare("SELECT * FROM orders WHERE user_id = ? ORDER BY created_at DESC LIMIT 1");
$stmt->bind_param("i", $_SESSION['user_id']);
$stmt->execute();
$result = $stmt->get_result();
$order = $result->fetch_assoc();

?>

<!DOCTYPE html>
<html>
<head>
    <title>Purchase Confirmation</title>
</head>
<body>
    <h2>Thank you for your purchase!</h2>
    <p>Your order has been processed successfully.</p>
    
    <h3>Order Details:</h3>
    <p>Order ID: <?php echo $order['id']; ?></p>
    <p>Total Amount: <?php echo $order['total_amount']; ?> USD</p>
    <p>Payment Method: <?php echo $order['payment_method']; ?></p>
    
    <a href="products.php">Continue Shopping</a>
</body>
</html>


// logout.php
session_start();
unset($_SESSION['user_id']);
session_destroy();
header("Location: login.php");


<?php
// Database connection
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

try {
    $pdo = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    die("Could not connect to the database: " . $e->getMessage());
}

// Add product to cart
function add_to_cart($product_id, $quantity, $price, $user_id) {
    global $pdo;
    
    try {
        // Check if the product is already in the cart
        $stmt = $pdo->prepare("SELECT id FROM purchase WHERE user_id = ? AND product_id = ?");
        $stmt->execute([$user_id, $product_id]);
        
        if ($stmt->rowCount() > 0) {
            // Update quantity and price
            $cart_item_id = $stmt->fetch(PDO::FETCH_ASSOC)['id'];
            $pdo->prepare("UPDATE purchase SET quantity = ?, total_price = ? WHERE id = ?")
                ->execute([$quantity, $price * $quantity, $cart_item_id]);
        } else {
            // Add new product to cart
            $pdo->prepare("INSERT INTO purchase (user_id, product_id, quantity, price) VALUES (?, ?, ?, ?)")
                ->execute([$user_id, $product_id, $quantity, $price]);
        }
        
        return true;
    } catch (PDOException $e) {
        error_log("Error adding to cart: " . $e->getMessage());
        return false;
    }
}

// Get cart items
function get_cart_items($user_id) {
    global $pdo;
    
    try {
        $stmt = $pdo->prepare("SELECT * FROM purchase WHERE user_id = ?");
        $stmt->execute([$user_id]);
        
        return $stmt->fetchAll(PDO::FETCH_ASSOC);
    } catch (PDOException $e) {
        error_log("Error fetching cart items: " . $e->getMessage());
        return [];
    }
}

// Calculate cart total
function get_cart_total($user_id) {
    global $pdo;
    
    try {
        $stmt = $pdo->prepare("SELECT SUM(price * quantity) AS total FROM purchase WHERE user_id = ?");
        $stmt->execute([$user_id]);
        
        return $stmt->fetch(PDO::FETCH_ASSOC)['total'];
    } catch (PDOException $e) {
        error_log("Error calculating cart total: " . $e->getMessage());
        return 0;
    }
}

// Update cart item quantity
function update_cart_item($cart_id, $new_quantity) {
    global $pdo;
    
    try {
        $pdo->prepare("UPDATE purchase SET quantity = ? WHERE id = ?")
            ->execute([$new_quantity, $cart_id]);
        
        return true;
    } catch (PDOException $e) {
        error_log("Error updating cart item: " . $e->getMessage());
        return false;
    }
}

// Delete cart item
function delete_cart_item($cart_id) {
    global $pdo;
    
    try {
        $pdo->prepare("DELETE FROM purchase WHERE id = ?")
            ->execute([$cart_id]);
        
        return true;
    } catch (PDOException $e) {
        error_log("Error deleting cart item: " . $e->getMessage());
        return false;
    }
}

// Process payment
function process_payment($user_id, $card_number, $card_name, $cvc, $expiry_date) {
    // Validate input
    if (!preg_match('/^\d{16}$/', $card_number)) {
        return ['error' => 'Invalid card number'];
    }
    
    if (!preg_match('/^[a-zA-Z ]+$/',$card_name)) {
        return ['error' => 'Invalid card holder name'];
    }
    
    if (!preg_match('/^\d{3}$/', $cvc)) {
        return ['error' => 'Invalid CVC'];
    }
    
    // Sanitize input
    $card_number = htmlspecialchars($card_number);
    $card_name = htmlspecialchars($card_name);
    $cvc = htmlspecialchars($cvc);
    $expiry_date = htmlspecialchars($expiry_date);

    // Here you would typically integrate with a payment gateway
    // For this example, we'll assume the payment is successful
    
    try {
        // Get cart items
        $cart_items = get_cart_items($user_id);
        
        if (empty($cart_items)) {
            return ['error' => 'Your cart is empty'];
        }
        
        // Calculate total amount
        $total_amount = get_cart_total($user_id);
        
        // Create order
        $stmt = $pdo->prepare("INSERT INTO orders (user_id, total_amount) VALUES (?, ?)");
        $stmt->execute([$user_id, $total_amount]);
        $order_id = $pdo->lastInsertId();
        
        // Insert order items
        foreach ($cart_items as $item) {
            $pdo->prepare("INSERT INTO order_items (order_id, product_id, quantity, price) VALUES (?, ?, ?, ?)")
                ->execute([$order_id, $item['product_id'], $item['quantity'], $item['price']]);
        }
        
        // Clear cart
        $pdo->prepare("DELETE FROM purchase WHERE user_id = ?")
            ->execute([$user_id]);
        
        return ['success' => true, 'order_id' => $order_id];
    } catch (PDOException $e) {
        error_log("Error processing payment: " . $e->getMessage());
        return ['error' => 'Payment processing failed'];
    }
}

// Example usage:
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    try {
        // Sanitize input
        $product_id = (int)$_POST['product_id'];
        $quantity = (int)$_POST['quantity'];
        $price = (float)$_POST['price'];
        $user_id = (int)$_SESSION['user_id']; // Assuming user is logged in
        
        if ($quantity <= 0) {
            throw new Exception('Quantity must be greater than zero');
        }
        
        add_to_cart($product_id, $quantity, $price, $user_id);
        
        // Redirect to cart page
        header("Location: cart.php");
        exit();
    } catch (Exception $e) {
        die("Error: " . $e->getMessage());
    }
}

// Example payment processing:
if ($_SERVER['REQUEST_METHOD'] == 'POST' && isset($_POST['process_payment'])) {
    try {
        $card_number = $_POST['card_number'];
        $card_name = $_POST['card_name'];
        $cvc = $_POST['cvc'];
        $expiry_date = $_POST['expiry_date'];
        
        $user_id = (int)$_SESSION['user_id']; // Assuming user is logged in
        
        $result = process_payment($user_id, $card_number, $card_name, $cvc, $expiry_date);
        
        if (isset($result['error'])) {
            die("Error: " . $result['error']);
        } else {
            // Payment successful, show order confirmation
            echo "Order placed successfully! Order ID: #" . $result['order_id'];
        }
    } catch (Exception $e) {
        die("Payment error: " . $e->getMessage());
    }
}
?>


<?php
// Connect to the database
$host = 'localhost';
$dbname = 'your_database';
$username = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}

// Fetch products from the database
try {
    $stmt = $conn->query("SELECT * FROM products");
    $products = $stmt->fetchAll(PDO::FETCH_ASSOC);
} catch (PDOException $e) {
    echo "Error fetching products: " . $e->getMessage();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Product List</title>
</head>
<body>
    <?php if (!empty($products)): ?>
        <?php foreach ($products as $product): ?>
            <div style="border: 1px solid #ddd; padding: 20px; margin: 5px;">
                <h3><?php echo $product['name']; ?></h3>
                <p><?php echo $product['description']; ?></p>
                <p>Price: <?php echo '$' . number_format($product['price'], 2); ?></p>
                <p>Available Quantity: <?php echo $product['quantity']; ?></p>
                <form action="add_to_cart.php" method="post">
                    <input type="hidden" name="id" value="<?php echo $product['id']; ?>">
                    <input type="number" name="quantity" min="1" max="<?php echo $product['quantity']; ?>" value="1">
                    <button type="submit">Add to Cart</button>
                </form>
            </div>
        <?php endforeach; ?>
    <?php else: ?>
        <p>No products available.</p>
    <?php endif; ?>
</body>
</html>


<?php
session_start();

if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

$product_id = isset($_POST['id']) ? intval($_POST['id']) : 0;
$quantity = isset($_POST['quantity']) ? intval($_POST['quantity']) : 1;

// Connect to the database
$host = 'localhost';
$dbname = 'your_database';
$username = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}

// Check if the product exists and has sufficient quantity
try {
    $stmt = $conn->prepare("SELECT * FROM products WHERE id = ?");
    $stmt->execute([$product_id]);
    $product = $stmt->fetch(PDO::FETCH_ASSOC);

    if ($product && $quantity <= $product['quantity']) {
        // Add to cart
        if (!isset($_SESSION['cart'][$product_id])) {
            $_SESSION['cart'][$product_id] = 0;
        }
        $_SESSION['cart'][$product_id] += $quantity;

        header("Location: products.php");
        exit();
    } else {
        header("Location: error.php?message=Insufficient quantity or product not found.");
        exit();
    }
} catch (PDOException $e) {
    header("Location: error.php?message=Error adding to cart.");
    exit();
}
?>


<?php
session_start();

if (empty($_SESSION['cart'])) {
    header("Location: products.php");
    exit();
}

// Connect to the database
$host = 'localhost';
$dbname = 'your_database';
$username = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}

// Get cart items
$cartItems = $_SESSION['cart'];
$cartProducts = array();

foreach ($cartItems as $id => $quantity) {
    try {
        $stmt = $conn->prepare("SELECT * FROM products WHERE id = ?");
        $stmt->execute([$id]);
        $product = $stmt->fetch(PDO::FETCH_ASSOC);
        
        if ($product) {
            $cartProducts[] = array(
                'name' => $product['name'],
                'price' => $product['price'],
                'quantity' => $quantity,
                'total' => $product['price'] * $quantity
            );
        }
    } catch (PDOException $e) {
        // Handle error
    }
}

// Calculate total amount
$totalAmount = array_sum(array_column($cartProducts, 'total'));
?>

<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
</head>
<body>
    <h2>Your Order</h2>
    <?php if (!empty($cartProducts)): ?>
        <table border="1">
            <tr>
                <th>Product Name</th>
                <th>Price</th>
                <th>Quantity</th>
                <th>Total</th>
            </tr>
            <?php foreach ($cartProducts as $item): ?>
                <tr>
                    <td><?php echo $item['name']; ?></td>
                    <td><?php echo '$' . number_format($item['price'], 2); ?></td>
                    <td><?php echo $item['quantity']; ?></td>
                    <td><?php echo '$' . number_format($item['total'], 2); ?></td>
                </tr>
            <?php endforeach; ?>
            <tr>
                <th colspan="3">Total Amount:</th>
                <td><?php echo '$' . number_format($totalAmount, 2); ?></td>
            </tr>
        </table>

        <h3>Shipping Information</h3>
        <form action="process_order.php" method="post">
            <label for="name">Name:</label><br>
            <input type="text" id="name" name="name" required><br><br>

            <label for="email">Email:</label><br>
            <input type="email" id="email" name="email" required><br><br>

            <label for="address">Address:</label><br>
            <textarea id="address" name="address" required></textarea><br><br>

            <label for="city">City:</label><br>
            <input type="text" id="city" name="city" required><br><br>

            <label for="state">State:</label><br>
            <input type="text" id="state" name="state" required><br><br>

            <label for="zip_code">ZIP Code:</label><br>
            <input type="text" id="zip_code" name="zip_code" required><br><br>

            <label for="phone">Phone Number:</label><br>
            <input type="tel" id="phone" name="phone" required><br><br>

            <button type="submit">Place Order</button>
        </form>
    <?php else: ?>
        <p>Your cart is empty.</p>
    <?php endif; ?>
</body>
</html>


<?php
session_start();

if (empty($_SESSION['cart'])) {
    header("Location: products.php");
    exit();
}

// Connect to the database
$host = 'localhost';
$dbname = 'your_database';
$username = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}

// Validate form inputs
if (!isset($_POST['name'], $_POST['email'], $_POST['address'], $_POST['city'], $_POST['state'], $_POST['zip_code'], $_POST['phone'])) {
    header("Location: checkout.php");
    exit();
}

$name = htmlspecialchars(trim($_POST['name']));
$email = htmlspecialchars(trim($_POST['email']));
$address = htmlspecialchars(trim($_POST['address']));
$city = htmlspecialchars(trim($_POST['city']));
$state = htmlspecialchars(trim($_POST['state']));
$zip_code = htmlspecialchars(trim($_POST['zip_code']));
$phone = htmlspecialchars(trim($_POST['phone']));

// Calculate total amount
$totalAmount = 0;
$cartItems = $_SESSION['cart'];
$products = array();

foreach ($cartItems as $id => $quantity) {
    try {
        $stmt = $conn->prepare("SELECT * FROM products WHERE id = ?");
        $stmt->execute([$id]);
        $product = $stmt->fetch(PDO::FETCH_ASSOC);

        if ($product && $quantity <= $product['quantity']) {
            $totalAmount += $product['price'] * $quantity;
            $products[] = array(
                'name' => $product['name'],
                'price' => $product['price'],
                'quantity' => $quantity
            );
        }
    } catch (PDOException $e) {
        // Handle error
    }
}

// Insert order into the database
try {
    $stmt = $conn->prepare("INSERT INTO orders (customer_name, customer_email, total_amount, order_date) VALUES (?, ?, ?, NOW())");
    $stmt->execute([$name, $email, $totalAmount]);
    $order_id = $conn->lastInsertId();

    // Insert order items
    foreach ($products as $product) {
        $stmt = $conn->prepare("INSERT INTO order_items (order_id, product_name, price, quantity) VALUES (?, ?, ?, ?)");
        $stmt->execute([$order_id, $product['name'], $product['price'], $product['quantity']]);
    }

    // Deduct quantities from products
    foreach ($cartItems as $id => $quantity) {
        try {
            $stmt = $conn->prepare("UPDATE products SET quantity = quantity - ? WHERE id = ?");
            $stmt->execute([$quantity, $id]);
        } catch (PDOException $e) {
            // Handle error
        }
    }

    // Clear the cart
    unset($_SESSION['cart']);

    header("Location: confirmation.php");
    exit();
} catch (PDOException $e) {
    echo "Error processing order: " . $e->getMessage();
}
?>


<!DOCTYPE html>
<html>
<head>
    <title>Order Confirmation</title>
</head>
<body>
    <h2>Your order has been successfully processed!</h2>
    <p>Thank you for your purchase. We will contact you shortly to confirm your order.</p>
    <a href="products.php">Continue shopping</a>
</body>
</html>


<?php
session_start();

// Sample product data
$products = [
    1 => ['name' => 'Product 1', 'price' => 19.99],
    2 => ['name' => 'Product 2', 'price' => 29.99],
    3 => ['name' => 'Product 3', 'price' => 39.99],
];

// Function to add item to cart
function add_to_cart($item_id, $quantity = 1) {
    global $products;
    
    if (!isset($_SESSION['cart'][$item_id])) {
        $_SESSION['cart'][$item_id] = [
            'name' => $products[$item_id]['name'],
            'price' => $products[$item_id]['price'],
            'quantity' => 0
        ];
    }
    
    $_SESSION['cart'][$item_id]['quantity'] += $quantity;
}

// Function to view cart
function view_cart() {
    if (empty($_SESSION['cart'])) {
        echo "<p>Your cart is empty</p>";
        return;
    }
    
    echo '<table>';
    echo '<tr><th>Product Name</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>';
    
    foreach ($_SESSION['cart'] as $item_id => $item) {
        echo '<tr>';
        echo "<td>{$item['name']}</td>";
        echo "<td>$$item[price]</td>";
        echo "<td><form method='post' action='update_cart.php'><input type='hidden' name='id' value='$item_id'><input type='number' name='quantity' min='1' value='{$item['quantity']}'></td>";
        echo "<td>$$item[price] * {$item['quantity']}</td>";
        echo "<td><button type='submit'>Update</button> | <a href='delete_item.php?id=$item_id'>Delete</a></td>";
        echo '</tr>';
    }
    
    echo '</table>';
}

// Function to update cart
function update_cart($item_id, $quantity) {
    global $products;
    
    if (isset($_SESSION['cart'][$item_id])) {
        $_SESSION['cart'][$item_id]['quantity'] = max(1, $quantity);
    }
}

// Function to delete item from cart
function delete_item($item_id) {
    unset($_SESSION['cart'][$item_id]);
}

// Checkout process
if ($_SERVER['REQUEST_METHOD'] == 'POST' && isset($_POST['checkout'])) {
    // Process checkout
    if (!isset($_SESSION['cart'])) {
        die("Your cart is empty");
    }
    
    // Validate input
    $name = trim($_POST['name']);
    $email = trim($_POST['email']);
    
    if (empty($name) || empty($email)) {
        die("Please fill in all required fields");
    }
    
    // Calculate total amount
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += $item['price'] * $item['quantity'];
    }
    
    // Process payment (you would need to integrate with a payment gateway here)
    echo "<h2>Thank you for your order!</h2>";
    echo "<p>Name: $name</p>";
    echo "<p>Email: $email</p>";
    echo "<p>Total amount paid: $$total</p>";
    
    // Reset cart
    $_SESSION['cart'] = [];
}

// Add item to cart if item_id is provided
if (isset($_GET['item_id'])) {
    add_to_cart($_GET['item_id']);
}
?>


<?php
session_start();

if ($_SERVER['REQUEST_METHOD'] == 'POST' && isset($_POST['id']) && isset($_POST['quantity'])) {
    $item_id = $_POST['id'];
    $quantity = intval($_POST['quantity']);
    
    update_cart($item_id, $quantity);
}
header('Location: cart.php');
exit();
?>


<?php
session_start();

if (isset($_GET['id'])) {
    delete_item($_GET['id']);
}
header('Location: cart.php');
exit();
?>


<?php
session_start();

// Display checkout form
?>

<form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
    <h2>Checkout</h2>
    
    <label for="name">Name:</label><br>
    <input type="text" id="name" name="name" required><br>
    
    <label for="email">Email:</label><br>
    <input type="email" id="email" name="email" required><br>
    
    <h3>Shipping Address</h3>
    <!-- Add shipping address fields here -->
    
    <button type="submit" name="checkout">Place Order</button>
</form>


<?php
// Initialize session
session_start();

// Sample product data (you can replace this with your database)
$products = array(
    1 => array(
        'name' => 'Product 1',
        'price' => 29.99,
    ),
    2 => array(
        'name' => 'Product 2',
        'price' => 49.99,
    ),
    3 => array(
        'name' => 'Product 3',
        'price' => 19.99,
    )
);

// Function to add item to cart
function addToCart($productId, $quantity = 1) {
    global $products;
    
    if (isset($_SESSION['cart'])) {
        $cart =& $_SESSION['cart'];
    } else {
        $cart = array();
    }
    
    if (!isset($cart[$productId])) {
        $cart[$productId] = array(
            'name' => $products[$productId]['name'],
            'price' => $products[$productId]['price'],
            'quantity' => $quantity
        );
    } else {
        $cart[$productId]['quantity'] += $quantity;
    }
    
    $_SESSION['cart'] = $cart;
}

// Function to display cart contents
function displayCart() {
    if (!isset($_SESSION['cart']) || empty($_SESSION['cart'])) {
        echo "<p>Your cart is empty.</p>";
        return;
    }
    
    $cart =& $_SESSION['cart'];
    $total = 0;
    
    echo "<table border='1'>";
    echo "<tr><th>Product</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>";
    
    foreach ($cart as $productId => $item) {
        $subtotal = $item['price'] * $item['quantity'];
        $total += $subtotal;
        
        echo "<tr>";
        echo "<td>{$item['name']}</td>";
        echo "<td>$$item[price]</td>";
        echo "<td><input type='text' name='quantity[$productId]' value='{$item['quantity']}' style='width:50px'></td>";
        echo "<td>$$subtotal</td>";
        echo "<td><a href='cart.php?action=remove&id=$productId'>Remove</a></td>";
        echo "</tr>";
    }
    
    echo "<tr><td colspan='4'><strong>Total:</strong> $$total</td><td><a href='checkout.php'>Purchase</a></td></tr>";
    echo "</table>";
}

// Function to remove item from cart
function removeFromCart($productId) {
    if (isset($_SESSION['cart'][$productId])) {
        unset($_SESSION['cart'][$productId]);
    }
}

// Process purchase
if ($_SERVER['REQUEST_METHOD'] == 'POST' && isset($_POST['purchase'])) {
    // Here you would typically process the payment and save the order to the database
    // For this example, we'll just display a confirmation message
    if (empty($_SESSION['cart'])) {
        echo "<p>Your cart is empty. Please add items first.</p>";
    } else {
        $total = 0;
        foreach ($_SESSION['cart'] as $item) {
            $total += $item['price'] * $item['quantity'];
        }
        
        // Payment processing logic goes here
        // For example:
        sleep(1); // Simulate payment processing time
        
        echo "<p>Thank you for your purchase!</p>";
        echo "<p>Your order total was: $$total</p>";
        
        // Clear the cart after purchase
        unset($_SESSION['cart']);
    }
}
?>


<?php
session_start();

if (!empty($_GET['action'])) {
    switch ($_GET['action']) {
        case 'add':
            if (!empty($_GET['id']) && is_numeric($_GET['id'])) {
                addToCart($_GET['id']);
            }
            break;
            
        case 'remove':
            if (!empty($_GET['id']) && is_numeric($_GET['id'])) {
                removeFromCart($_GET['id']);
            }
            break;
    }
}

header("Location: index.php");
exit();
?>


<?php
session_start();

// Display cart contents and purchase form
echo "<h2>Checkout</h2>";
displayCart();

if (empty($_SESSION['cart'])) {
    echo "<p>Your cart is empty. Please add items first.</p>";
} else {
    // Payment form
    echo "<form method='post'>";
    echo "<input type='submit' name='purchase' value='Purchase'>";
    echo "</form>";
}
?>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    die("Could not connect to the database: " . $e->getMessage());
}

// Function to sanitize input
function sanitize($data) {
    return htmlspecialchars(trim($data));
}

// Check if form is submitted
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    // Get form data
    $name = sanitize($_POST['name']);
    $email = sanitize($_POST['email']);
    $address = sanitize($_POST['address']);
    $phone = sanitize($_POST['phone']);
    $product_id = $_POST['product_id'];
    $quantity = $_POST['quantity'];
    $total_price = $_POST['total_price'];

    // Prepare the order data
    $orderData = [
        'order_id' => uniqid(),
        'name' => $name,
        'email' => $email,
        'address' => $address,
        'phone' => $phone,
        'product_id' => $product_id,
        'quantity' => $quantity,
        'total_price' => $total_price,
        'payment_status' => 'pending',
        'order_date' => date('Y-m-d H:i:s')
    ];

    // Insert order into database
    try {
        $stmt = $conn->prepare("INSERT INTO orders 
            (order_id, name, email, address, phone, product_id, quantity, total_price, payment_status, order_date)
            VALUES (:order_id, :name, :email, :address, :phone, :product_id, :quantity, :total_price, :payment_status, :order_date)");
        
        $stmt->execute($orderData);

        // Redirect to payment page
        header("Location: payment.php?order_id=" . $orderData['order_id']);
        exit();
    } catch (PDOException $e) {
        die("Error processing order: " . $e->getMessage());
    }
}

// Display form if not submitted
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Purchase Form</title>
    <style>
        body { font-family: Arial, sans-serif; max-width: 600px; margin: 20px auto; padding: 20px; }
        .form-group { margin-bottom: 15px; }
        label { display: block; margin-bottom: 5px; }
        input, select, textarea { width: 100%; padding: 8px; border: 1px solid #ddd; }
        button { background-color: #4CAF50; color: white; padding: 10px 20px; text-align: center; cursor: pointer; }
        button:hover { background-color: #45a049; }
    </style>
</head>
<body>
    <h1>Purchase Form</h1>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <div class="form-group">
            <label for="name">Full Name:</label>
            <input type="text" id="name" name="name" required>
        </div>

        <div class="form-group">
            <label for="email">Email:</label>
            <input type="email" id="email" name="email" required>
        </div>

        <div class="form-group">
            <label for="address">Address:</label>
            <textarea id="address" name="address" rows="3" required></textarea>
        </div>

        <div class="form-group">
            <label for="phone">Phone Number:</label>
            <input type="tel" id="phone" name="phone" required>
        </div>

        <div class="form-group">
            <label for="product_id">Product ID:</label>
            <input type="text" id="product_id" name="product_id" required>
        </div>

        <div class="form-group">
            <label for="quantity">Quantity:</label>
            <input type="number" id="quantity" name="quantity" min="1" required>
        </div>

        <div class="form-group">
            <label for="total_price">Total Price:</label>
            <input type="number" id="total_price" name="total_price" step="0.01" required>
        </div>

        <button type="submit">Place Order</button>
    </form>
</body>
</html>


// Include Stripe PHP library
require_once('vendor/autoload.php');
\Stripe\Stripe::setApiKey('your_stripe_secret_key');

// In your payment processing page
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    $order_id = $_GET['order_id'];
    
    try {
        // Create charge in Stripe
        $charge = \Stripe\Charge::create([
            'amount' => $total_price * 100, // Convert to cents
            'currency' => 'usd',
            'source' => $_POST['stripeToken'],
            'description' => "Order #$order_id",
        ]);

        // Update payment status in database
        $stmt = $conn->prepare("UPDATE orders SET payment_status = 'completed', payment_date = NOW() WHERE order_id = :order_id");
        $stmt->execute(['order_id' => $order_id]);

        // Show success message
        echo "Payment completed successfully!";
    } catch (\Stripe\Exception\CardException $e) {
        // Error: The card was declined
        die("Card was declined: " . $e->getMessage());
    } catch (\Exception $e) {
        // Other errors occurred
        die("An error occurred: " . $e->getMessage());
    }
}


<?php
session_start();

// Sample products array
$products = [
    1 => [
        'name' => 'Product 1',
        'price' => 49.99,
        'description' => 'This is product 1 description.',
    ],
    2 => [
        'name' => 'Product 2',
        'price' => 79.99,
        'description' => 'This is product 2 description.',
    ],
    3 => [
        'name' => 'Product 3',
        'price' => 99.99,
        'description' => 'This is product 3 description.',
    ]
];

// Initialize cart if not exists
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = [];
}

// Check if item was added to cart
if (isset($_POST['add_to_cart'])) {
    $product_id = intval($_POST['product_id']);
    $quantity = intval($_POST['quantity']);

    // Validate quantity
    if ($quantity > 0) {
        // Update cart or create new entry
        if (array_key_exists($product_id, $_SESSION['cart'])) {
            $_SESSION['cart'][$product_id]['quantity'] += $quantity;
        } else {
            $_SESSION['cart'][$product_id] = [
                'name' => $products[$product_id]['name'],
                'price' => $products[$product_id]['price'],
                'quantity' => $quantity
            ];
        }
    }

    // Redirect back to product list
    header('Location: purchase.php');
    exit();
}

// Calculate total price of items in cart
$total_price = 0;
foreach ($_SESSION['cart'] as $item) {
    $total_price += ($item['price'] * $item['quantity']);
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Purchase System</title>
    <style>
        .container {
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
        }
        
        .product-card {
            border: 1px solid #ddd;
            padding: 10px;
            margin-bottom: 10px;
        }
    </style>
</head>
<body>
    <div class="container">
        <?php if (empty($_SESSION['cart'])) { ?>
            <h2>Shopping Cart is Empty</h2>
        <?php } else { ?>
            <h2>Your Shopping Cart</h2>
            <?php foreach ($_SESSION['cart'] as $product_id => $item) { ?>
                <div class="product-card">
                    <h3><?php echo $item['name']; ?></h3>
                    <p>Price: $<?php echo number_format($item['price'], 2); ?></p>
                    <p>Quantity: <?php echo $item['quantity']; ?></p>
                    <a href="#">Remove</a>
                </div>
            <?php } ?>
            <p>Total Price: $<?php echo number_format($total_price, 2); ?></p>
            <a href="checkout.php">Checkout</a>
        <?php } ?>

        <h2>Products Available for Purchase</h2>
        <?php foreach ($products as $product_id => $product) { ?>
            <div class="product-card">
                <h3><?php echo $product['name']; ?></h3>
                <p>Price: $<?php echo number_format($product['price'], 2); ?></p>
                <p><?php echo $product['description']; ?></p>
                <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
                    <input type="hidden" name="product_id" value="<?php echo $product_id; ?>">
                    <label>Quantity: </label>
                    <input type="number" name="quantity" min="1" value="1">
                    <button type="submit" name="add_to_cart">Add to Cart</button>
                </form>
            </div>
        <?php } ?>

        <p><a href="view_cart.php">View Cart</a></p>
    </div>
</body>
</html>


<?php
// Database connection
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "myDB";

$conn = new mysqli($servername, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Create products table if not exists
$sql = "CREATE TABLE IF NOT EXISTS products (
id INT AUTO_INCREMENT PRIMARY KEY,
name VARCHAR(255),
description TEXT,
price DECIMAL(10, 2),
stock INT
)";

$conn->query($sql);

// Create orders table if not exists
$sql = "CREATE TABLE IF NOT EXISTS orders (
id INT AUTO_INCREMENT PRIMARY KEY,
user_name VARCHAR(255),
email VARCHAR(255),
address TEXT,
total DECIMAL(10, 2),
order_date DATETIME DEFAULT CURRENT_TIMESTAMP
)";

$conn->query($sql);

// Create order_items table if not exists
$sql = "CREATE TABLE IF NOT EXISTS order_items (
id INT AUTO_INCREMENT PRIMARY KEY,
order_id INT,
product_id INT,
quantity INT,
price DECIMAL(10, 2)
)";

$conn->query($sql);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Online Store</title>
</head>
<body>
    <?php
    session_start();

    // Add product to cart functionality
    if (isset($_GET['action'])) {
        $product_id = $_GET['id'];
        
        switch ($_GET['action']) {
            case 'add':
                if (!isset($_SESSION['cart'][$product_id])) {
                    $_SESSION['cart'][$product_id] = array(
                        'quantity' => 1
                    );
                } else {
                    $_SESSION['cart'][$product_id]['quantity']++;
                }
                break;
                
            case 'remove':
                unset($_SESSION['cart'][$product_id]);
                break;
        }
    }

    // Display products from database
    $sql = "SELECT * FROM products";
    $result = $conn->query($sql);

    if ($result->num_rows > 0) {
        while ($row = $result->fetch_assoc()) {
            echo "<div style='border: 1px solid #ddd; padding: 10px; margin: 5px;'>";
            echo "<h3>" . $row['name'] . "</h3>";
            echo "<p>" . $row['description'] . "</p>";
            echo "<p>Price: $" . number_format($row['price'], 2) . "</p>";
            echo "<a href='?action=add&id=" . $row['id'] . "'>Add to Cart</a>";
            echo "</div>";
        }
    } else {
        echo "No products found.";
    }

    // Display cart
    if (!empty($_SESSION['cart'])) {
        echo "<h2>Your Cart:</h2>";
        echo "<ul>";
        foreach ($_SESSION['cart'] as $product_id => $item) {
            $sql = "SELECT * FROM products WHERE id = $product_id";
            $result = $conn->query($sql);
            $row = $result->fetch_assoc();
            
            echo "<li>" . $row['name'] . " - Quantity: " . $item['quantity'] . 
                 " <a href='?action=remove&id=" . $row['id'] . "'>Remove</a></li>";
        }
        echo "</ul>";
    }

    // Checkout form
    if (isset($_POST['checkout'])) {
        // Process checkout
        $user_name = $_POST['name'];
        $email = $_POST['email'];
        $address = $_POST['address'];
        
        // Calculate total
        $total = 0;
        foreach ($_SESSION['cart'] as $product_id => $item) {
            $sql = "SELECT price FROM products WHERE id = $product_id";
            $result = $conn->query($sql);
            $row = $result->fetch_assoc();
            $total += $row['price'] * $item['quantity'];
        }
        
        // Insert order
        $sql = "INSERT INTO orders (user_name, email, address, total) 
                VALUES ('$user_name', '$email', '$address', $total)";
        $conn->query($sql);
        $order_id = $conn->insert_id;
        
        // Insert order items
        foreach ($_SESSION['cart'] as $product_id => $item) {
            $sql = "SELECT price FROM products WHERE id = $product_id";
            $result = $conn->query($sql);
            $row = $result->fetch_assoc();
            
            $sql = "INSERT INTO order_items (order_id, product_id, quantity, price)
                    VALUES ($order_id, $product_id, " . $item['quantity'] . ", " . $row['price'] . ")";
            $conn->query($sql);
        }
        
        // Clear cart
        unset($_SESSION['cart']);
        
        echo "<h2>Thank you for your order!</h2>";
    } elseif (!empty($_SESSION['cart'])) {
        // Show checkout form
        echo "<h2>Checkout</h2>";
        echo "<form method='post'>";
        echo "<label>Name:</label><br>";
        echo "<input type='text' name='name'><br>";
        echo "<label>Email:</label><br>";
        echo "<input type='email' name='email'><br>";
        echo "<label>Address:</label><br>";
        echo "<input type='text' name='address'><br>";
        echo "<label>Payment Method:</label><br>";
        echo "<select name='payment_method'>";
        echo "<option value='credit_card'>Credit Card</option>";
        echo "<option value='paypal'>PayPal</option>";
        echo "</select><br>";
        echo "<input type='submit' name='checkout' value='Place Order'>";
        echo "</form>";
    }

    $conn->close();
    ?>
</body>
</html>


<?php
// Database connection
$host = 'localhost';
$username = 'root';
$password = '';
$database = 'shopping_cart';

$conn = new mysqli($host, $username, $password, $database);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Product listing page
function showProducts() {
    global $conn;
    $sql = "SELECT * FROM products";
    $result = $conn->query($sql);
    
    if ($result->num_rows > 0) {
        while ($row = $result->fetch_assoc()) {
            echo "<div class='product'>";
            echo "<h3>" . $row['name'] . "</h3>";
            echo "<p>Price: $" . $row['price'] . "</p>";
            echo "<a href='add_to_cart.php?id=" . $row['id'] . "'>Add to Cart</a>";
            echo "</div>";
        }
    } else {
        echo "No products found.";
    }
}

// Add to cart functionality
function addToCart($productId) {
    session_start();
    
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }
    
    if (isset($_SESSION['cart'][$productId])) {
        $_SESSION['cart'][$productId]['quantity']++;
    } else {
        $sql = "SELECT * FROM products WHERE id=" . $productId;
        $result = $conn->query($sql);
        
        if ($result->num_rows > 0) {
            $product = $result->fetch_assoc();
            $_SESSION['cart'][$productId] = array(
                'name' => $product['name'],
                'price' => $product['price'],
                'quantity' => 1
            );
        }
    }
}

// View cart functionality
function viewCart() {
    session_start();
    
    if (empty($_SESSION['cart'])) {
        echo "Your cart is empty.";
        return;
    }
    
    foreach ($_SESSION['cart'] as $productId => $product) {
        echo "<div class='cart-item'>";
        echo "<h3>" . $product['name'] . "</h3>";
        echo "<p>Price: $" . $product['price'] . "</p>";
        echo "<p>Quantity: " . $product['quantity'] . "</p>";
        echo "<a href='remove_from_cart.php?id=" . $productId . "'>Remove</a>";
        echo "</div>";
    }
    
    // Calculate total price
    $total = 0;
    foreach ($_SESSION['cart'] as $product) {
        $total += ($product['price'] * $product['quantity']);
    }
    echo "<h3>Total: $" . $total . "</h3>";
}

// Checkout functionality
function checkout() {
    session_start();
    
    if (empty($_SESSION['cart'])) {
        header("Location: product_listing.php");
        return;
    }
    
    // Display cart items again
    viewCart();
    
    // Add payment and shipping form here
    echo "<form action='process_order.php' method='POST'>";
    echo "<h3>Payment Information</h3>";
    echo "<input type='text' name='card_number' placeholder='Card Number'>";
    echo "<input type='text' name='card_cvv' placeholder='CVV'>";
    echo "<h3>Shipping Information</h3>";
    echo "<input type='text' name='name' placeholder='Full Name'>";
    echo "<input type='text' name='address' placeholder='Address'>";
    echo "<input type='text' name='email' placeholder='Email'>";
    echo "<input type='submit' value='Place Order'>";
    echo "</form>";
}

// Process order functionality
function processOrder() {
    session_start();
    
    if (empty($_SESSION['cart'])) {
        header("Location: product_listing.php");
        return;
    }
    
    // Insert order into database
    $sql = "INSERT INTO orders (total_amount, created_at) VALUES (" .
           $_POST['total'] . ", NOW())";
    $conn->query($sql);
    
    $order_id = $conn->insert_id;
    
    // Insert order items into database
    foreach ($_SESSION['cart'] as $product) {
        $sql = "INSERT INTO order_items (order_id, product_name, price, quantity) VALUES (" .
               $order_id . ", '" . $product['name'] . "', " . $product['price'] . ", " . $product['quantity'] . ")";
        $conn->query($sql);
    }
    
    // Clear cart
    unset($_SESSION['cart']);
    
    header("Location: order_confirmation.php?order_id=" . $order_id);
}

// Order confirmation page
function showOrderConfirmation() {
    if (isset($_GET['order_id'])) {
        echo "<h2>Thank you for your purchase!</h2>";
        echo "<p>Your order number is: " . $_GET['order_id'] . "</p>";
    } else {
        echo "Invalid order.";
    }
}
?>


<?php
// Session initialization
session_start();

// Database connection (replace with your database credentials)
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "myDB";

$conn = mysqli_connect($servername, $username, $password, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to get product details
function getProductDetails($productId) {
    global $conn;
    $sql = "SELECT * FROM products WHERE id = ?";
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, "s", $productId);
    mysqli_execute($stmt);
    $result = mysqli_get_result($stmt);
    return $result->fetch_assoc();
}

// Function to calculate cart total
function cartTotal() {
    global $conn;
    if (isset($_SESSION['cart'])) {
        $total = 0;
        foreach ($_SESSION['cart'] as $item) {
            $product = getProductDetails($item['id']);
            $total += ($product['price'] * $item['quantity']);
        }
        return $total;
    } else {
        return 0;
    }
}

// Add item to cart
if (isset($_POST['add_to_cart'])) {
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }

    $productId = $_POST['product_id'];
    $quantity = isset($_POST['quantity']) ? intval($_POST['quantity']) : 1;

    // Check if product exists
    $product = getProductDetails($productId);
    if ($product) {
        foreach ($_SESSION['cart'] as &$item) {
            if ($item['id'] == $productId) {
                $item['quantity'] += $quantity;
                break;
            }
        }
        if (!isset($_SESSION['cart'][$ productId])) {
            $_SESSION['cart'][] = array(
                'id' => $productId,
                'name' => $product['name'],
                'price' => $product['price'],
                'quantity' => $quantity
            );
        }
    }
}

// Remove item from cart
if (isset($_GET['remove'])) {
    $productId = $_GET['remove'];
    foreach ($_SESSION['cart'] as $key => $item) {
        if ($item['id'] == $productId) {
            unset($_SESSION['cart'][$key]);
            break;
        }
    }
}

// Update item quantity
if (isset($_POST['update_quantity'])) {
    $productId = $_POST['product_id'];
    $quantity = isset($_POST['quantity']) ? intval($_POST['quantity']) : 1;

    foreach ($_SESSION['cart'] as &$item) {
        if ($item['id'] == $productId) {
            $item['quantity'] = $quantity;
            break;
        }
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
    <style>
        .container {
            width: 80%;
            margin: 0 auto;
            padding: 20px;
            font-family: Arial, sans-serif;
        }
        .cart-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 10px;
            border-bottom: 1px solid #ddd;
        }
        .product-image {
            width: 200px;
            height: 200px;
            object-fit: cover;
        }
    </style>
</head>
<body>
    <div class="container">
        <?php if (isset($_SESSION['cart']) && count($_SESSION['cart']) > 0): ?>
            <h1>Your Cart</h1>
            <table width="100%">
                <tr>
                    <th>Product Name</th>
                    <th>Price</th>
                    <th>Quantity</th>
                    <th>Total</th>
                    <th>Action</th>
                </tr>
                <?php foreach ($_SESSION['cart'] as $item): ?>
                    <tr class="cart-item">
                        <td><?php echo $item['name']; ?></td>
                        <td>$<?php echo number_format($item['price'], 2); ?></td>
                        <td>
                            <form action="cart.php" method="post">
                                <input type="hidden" name="product_id" value="<?php echo $item['id']; ?>">
                                <input type="number" name="quantity" value="<?php echo $item['quantity']; ?>" min="1">
                                <button type="submit" name="update_quantity">Update</button>
                            </form>
                        </td>
                        <td>$<?php echo number_format($item['price'] * $item['quantity'], 2); ?></td>
                        <td><a href="cart.php?remove=<?php echo $item['id']; ?>">Remove</a></td>
                    </tr>
                <?php endforeach; ?>
            </table>
            <h3>Total: $<?php echo number_format(cartTotal(), 2); ?></h3>
            <a href="checkout.php">Checkout</a>
        <?php else: ?>
            <p>Your cart is empty!</p>
            <a href="products.php">Continue Shopping</a>
        <?php endif; ?>
    </div>
</body>
</html>

<?php
// Close database connection
mysqli_close($conn);
?>


<?php
session_start();

// Include database connection (you should create your own)
include('includes/db.php');

// Include header and navigation
include('includes/header.php');
include('includes/navigation.php');

// Function to get products from database
function get_products() {
    global $conn;
    $query = "SELECT * FROM products";
    $result = mysqli_query($conn, $query);
    return $result;
}

// Function to add item to cart
function add_to_cart($product_id, $quantity) {
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }
    
    if (isset($_SESSION['cart'][$product_id])) {
        $_SESSION['cart'][$product_id]['quantity'] += $quantity;
    } else {
        $_SESSION['cart'][$product_id] = array(
            'id' => $product_id,
            'quantity' => $quantity
        );
    }
}

// Function to calculate total price of cart items
function get_total() {
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $price_query = "SELECT price FROM products WHERE id=" . $item['id'];
        $result = mysqli_query($conn, $price_query);
        $row = mysqli_fetch_assoc($result);
        $total += ($row['price'] * $item['quantity']);
    }
    return $total;
}
?>

<!-- Product Display -->
<div class="container">
    <h2>Our Products</h2>
    <?php
    $products = get_products();
    while ($product = mysqli_fetch_assoc($products)) {
        echo "<div class='product'>";
        echo "<h3>" . $product['name'] . "</h3>";
        echo "<p>Price: $" . number_format($product['price'], 2) . "</p>";
        echo "<form action='cart.php' method='post'>";
        echo "<input type='hidden' name='product_id' value='" . $product['id'] . "'>";
        echo "<input type='number' name='quantity' min='1' max='99' value='1'>";
        echo "<button type='submit'>Add to Cart</button>";
        echo "</form>";
        echo "</div>";
    }
    ?>
</div>

<?php
include('includes/footer.php');
?>


<?php
session_start();

// Include database connection and header/navigation
include('includes/db.php');
include('includes/header.php');
include('includes/navigation.php');

// Handle adding to cart
if (isset($_POST['product_id']) && isset($_POST['quantity'])) {
    add_to_cart($_POST['product_id'], $_POST['quantity']);
}

// Function definitions (same as above)
function get_products() { ... }
function add_to_cart($product_id, $quantity) { ... }
function get_total() { ... }

// Display cart contents
echo "<h2>Your Cart</h2>";
if (!isset($_SESSION['cart']) || count($_SESSION['cart']) == 0) {
    echo "Your cart is empty!";
} else {
    foreach ($_SESSION['cart'] as $item_id => $item) {
        $product_query = "SELECT * FROM products WHERE id=" . $item['id'];
        $result = mysqli_query($conn, $product_query);
        $product = mysqli_fetch_assoc($result);
        
        echo "<div class='cart-item'>";
        echo "<h3>" . $product['name'] . "</h3>";
        echo "<p>Quantity: " . $item['quantity'] . "</p>";
        echo "<p>Price: $" . number_format($product['price'], 2) . "</p>";
        echo "<form action='cart.php' method='post'>";
        echo "<input type='hidden' name='remove_id' value='" . $item['id'] . "'>";
        echo "<button type='submit'>Remove</button>";
        echo "</form>";
        echo "</div>";
    }
    
    // Remove item from cart
    if (isset($_POST['remove_id'])) {
        unset($_SESSION['cart'][$_POST['remove_id']]);
    }
    
    echo "<p>Total: $" . number_format(get_total(), 2) . "</p>";
    echo "<a href='checkout.php' class='button'>Checkout</a>";
}
?>

<?php
include('includes/footer.php');
?>


<?php
session_start();

// Include database connection and header/navigation
include('includes/db.php');
include('includes/header.php');
include('includes/navigation.php');

// Function definitions (same as above)
function get_products() { ... }
function add_to_cart($product_id, $quantity) { ... }
function get_total() { ... }

// Display checkout form
echo "<h2>Checkout</h2>";
if (!isset($_SESSION['cart']) || count($_SESSION['cart']) == 0) {
    echo "Your cart is empty!";
} else {
    // Display cart contents
    foreach ($_SESSION['cart'] as $item_id => $item) {
        $product_query = "SELECT * FROM products WHERE id=" . $item['id'];
        $result = mysqli_query($conn, $product_query);
        $product = mysqli_fetch_assoc($result);
        
        echo "<div class='checkout-item'>";
        echo "<h3>" . $product['name'] . "</h3>";
        echo "<p>Quantity: " . $item['quantity'] . "</p>";
        echo "<p>Price: $" . number_format($product['price'], 2) . "</p>";
        echo "</div>";
    }
    
    // Display order summary
    echo "<div class='order-summary'>";
    echo "<h3>Order Summary</h3>";
    echo "<p>Total Items: " . count($_SESSION['cart']) . "</p>";
    echo "<p>Total Price: $" . number_format(get_total(), 2) . "</p>";
    echo "</div>";

    // Checkout form
    echo "<form action='checkout.php' method='post'>";
    echo "<h3>Shipping Information</h3>";
    echo "<input type='text' name='first_name' placeholder='First Name' required><br>";
    echo "<input type='text' name='last_name' placeholder='Last Name' required><br>";
    echo "<input type='email' name='email' placeholder='Email Address' required><br>";
    echo "<input type='text' name='address' placeholder='Shipping Address' required><br>";
    echo "<button type='submit'>Place Order</button>";
    echo "</form>";

    // Process order
    if ($_SERVER['REQUEST_METHOD'] == 'POST') {
        $order_details = array(
            'first_name' => $_POST['first_name'],
            'last_name' => $_POST['last_name'],
            'email' => $_POST['email'],
            'address' => $_POST['address'],
            'total' => get_total(),
            'items' => serialize($_SESSION['cart'])
        );

        // Here you would typically insert this data into a database
        // For now, we'll just display the order confirmation

        header("Location: confirmation.php");
    }
}
?>

<?php
include('includes/footer.php');
?>


<?php
session_start();

// Include database connection and header/navigation
include('includes/db.php');
include('includes/header.php');
include('includes/navigation.php');

echo "<h2>Order Confirmation</h2>";
echo "<p>Thank you for your order!</p>";
echo "<p>Your order number is: #" . rand(1000, 9999) . "</p>";
echo "<p>Total Amount: $" . number_format(get_total(), 2) . "</p>";

// Clear cart
unset($_SESSION['cart']);

?>

<?php
include('includes/footer.php');
?>


<?php
// Initialize session for storing cart items
session_start();

// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'shopping_cart';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

// Get product details from database
function getProducts() {
    global $conn;
    $stmt = $conn->query("SELECT * FROM products");
    return $stmt->fetchAll();
}

// Add item to cart
if (isset($_POST['add_to_cart'])) {
    $product_id = intval($_POST['product_id']);
    $quantity = intval($_POST['quantity']);

    if ($quantity > 0) {
        // Check if product exists in database
        $stmt = $conn->prepare("SELECT * FROM products WHERE id = ?");
        $stmt->execute([$product_id]);
        $product = $stmt->fetch();

        if ($product) {
            $cart_item = array(
                'id' => $product['id'],
                'name' => $product['name'],
                'price' => $product['price'],
                'quantity' => $quantity
            );

            // Check if cart is empty or item already exists
            if (empty($_SESSION['cart'])) {
                $_SESSION['cart'] = array($cart_item);
            } else {
                $item_exists = false;
                foreach ($_SESSION['cart'] as &$item) {
                    if ($item['id'] == $product_id) {
                        $item['quantity'] += $quantity;
                        $item_exists = true;
                        break;
                    }
                }
                if (!$item_exists) {
                    array_push($_SESSION['cart'], $cart_item);
                }
            }

            echo "<script>alert('Item added to cart');</script>";
        } else {
            echo "<script>alert('Product does not exist');</script>";
        }
    } else {
        echo "<script>alert('Please enter a valid quantity');</script>";
    }
}

// Checkout functionality
if (isset($_POST['checkout'])) {
    // Validate form inputs
    $name = htmlspecialchars(trim($_POST['name']));
    $email = htmlspecialchars(trim($_POST['email']));
    $address = htmlspecialchars(trim($_POST['address']));
    $phone = htmlspecialchars(trim($_POST['phone']));

    if (empty($name) || empty($email) || empty($address) || empty($phone)) {
        echo "<script>alert('Please fill in all required fields');</script>";
    } else {
        // Calculate total amount
        $total_amount = 0;
        foreach ($_SESSION['cart'] as $item) {
            $total_amount += ($item['price'] * $item['quantity']);
        }

        // Payment processing (simplified)
        if (processPayment($email, $total_amount)) {
            // Clear cart after successful payment
            $_SESSION['cart'] = array();

            // Redirect to confirmation page
            header("Location: confirmation.php");
            exit();
        } else {
            echo "<script>alert('Payment failed');</script>";
        }
    }
}

// Simplified payment processing function
function processPayment($email, $amount) {
    // In a real application, this would integrate with a payment gateway
    // For now, just simulate success
    return true;
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
    <style>
        /* Add your CSS styles here */
        .product-list { margin: 20px; }
        .cart-item { margin: 10px 0; }
        input[type="number"] { width: 50px; }
        button { padding: 8px 16px; background-color: #4CAF50; color: white; border: none; cursor: pointer; }
        button:hover { background-color: #45a049; }
    </style>
</head>
<body>
    <h2>Products</h2>
    <?php
    $products = getProducts();
    foreach ($products as $product) {
        echo "<div class='product-list'>";
        echo "<h3>{$product['name']}</h3>";
        echo "<p>Price: \${$product['price']}</p>";
        echo "<form method='post' action=''>";
        echo "<input type='hidden' name='product_id' value='{$product['id']}'>";
        echo "<input type='number' name='quantity' min='1' value='1'>";
        echo "<button type='submit' name='add_to_cart'>Add to Cart</button>";
        echo "</form>";
        echo "</div>";
    }
    ?>

    <h2>Shopping Cart</h2>
    <?php
    if (!empty($_SESSION['cart'])) {
        foreach ($_SESSION['cart'] as $item) {
            echo "<div class='cart-item'>";
            echo "<p>{$item['name']} - \${$item['price']} x {$item['quantity']}</p>";
            echo "</div>";
        }
        // Calculate and display total
        $total = 0;
        foreach ($_SESSION['cart'] as $item) {
            $total += ($item['price'] * $item['quantity']);
        }
        echo "<h3>Total: \$$total</h3>";

        // Checkout form
        echo "<form method='post' action=''>";
        echo "<h2>Checkout</h2>";
        echo "<p>Name:</p><input type='text' name='name' required><br>";
        echo "<p>Email:</p><input type='email' name='email' required><br>";
        echo "<p>Address:</p><input type='text' name='address' required><br>";
        echo "<p>Phone:</p><input type='tel' name='phone' required><br>";
        echo "<button type='submit' name='checkout'>Complete Purchase</button>";
        echo "</form>";
    } else {
        echo "Your cart is empty.";
    }
    ?>

    <h2>Order History</h2>
    <?php
    // Display past orders (simplified)
    $orders = file_get_contents('transactions.log');
    if (!empty($orders)) {
        echo "<pre>" . htmlspecialchars($orders) . "</pre>";
    } else {
        echo "No past orders.";
    }
    ?>

</body>
</html>

// Add this code to confirmation.php
<?php
session_start();

// Log transaction details
$current_date = date('Y-m-d H:i:s');
$transaction_id = md5(uniqid());
$user_email = isset($_SESSION['user']) ? $_SESSION['user'] : 'Guest';
$total_amount = isset($_GET['amount']) ? $_GET['amount'] : 0;

$log_data = "Transaction ID: {$transaction_id}
Date: {$current_date}
User Email: {$user_email}
Total Amount: \${$total_amount}

";
file_put_contents('transactions.log', $log_data, FILE_APPEND);

echo "<h2>Order Confirmation</h2>";
echo "<p>Your order has been processed successfully!</p>";
echo "<p>Transaction ID: {$transaction_id}</p>";
echo "<p>Total Amount: \${$total_amount}</p>";
echo "<a href='index.php'>Continue Shopping</a>";
?>


<?php
// Include required files
require_once('config.php');
require_once('functions/cart_functions.php');
require_once('includes/header.php');

// Get products list
$products = get_products();

// Handle add to cart action
if (isset($_POST['add_to_cart'])) {
    $product_id = $_POST['product_id'];
    add_to_cart($product_id);
    header("Location: index.php");
    exit();
}

// Handle remove from cart action
if (isset($_GET['remove_from_cart'])) {
    $product_id = $_GET['remove_from_cart'];
    remove_from_cart($product_id);
    header("Location: cart.php");
    exit();
}

// Process checkout
if (isset($_POST['checkout'])) {
    process_checkout();
    header("Location: confirmation.php");
    exit();
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Store</title>
    <link rel="stylesheet" href="css/styles.css">
</head>
<body>
    <!-- Main Content -->
    <div class="container">
        <?php if (!isset($_GET['action'])) { ?>
            <!-- Display products -->
            <?php foreach ($products as $product) { ?>
                <div class="product-card">
                    <h3><?php echo $product['name']; ?></h3>
                    <p>$<?php echo number_format($product['price'], 2); ?></p>
                    <form action="index.php" method="post">
                        <input type="hidden" name="product_id" value="<?php echo $product['id']; ?>">
                        <button type="submit" name="add_to_cart">Add to Cart</button>
                    </form>
                </div>
            <?php } ?>

        <?php } else if ($_GET['action'] == 'view_cart') { ?>
            <!-- Display cart -->
            <?php 
                $cart = get_cart();
                $total_price = calculate_total($cart);
            ?>
            <h2>Your Cart</h2>
            <?php foreach ($cart as $item) { ?>
                <div class="cart-item">
                    <h3><?php echo $products[$item['id']]['name']; ?></h3>
                    <p>$<?php echo number_format($products[$item['id']]['price'], 2); ?></p>
                    <p>Quantity: <?php echo $item['quantity']; ?></p>
                    <a href="index.php?action=view_cart&remove_from_cart=<?php echo $item['id']; ?>">Remove</a>
                </div>
            <?php } ?>
            <h3>Total Price: $<?php echo number_format($total_price, 2); ?></h3>
            <form action="index.php" method="post">
                <button type="submit" name="checkout">Checkout</button>
            </form>

        <?php } ?>

        <!-- Confirmation page -->
        <?php if (isset($_GET['action']) && $_GET['action'] == 'confirmation') { ?>
            <h2>Order Confirmed!</h2>
            <p>Your order has been successfully processed.</p>
            <a href="index.php">Continue Shopping</a>
        <?php } ?>

        <!-- Error page -->
        <?php if (isset($_GET['error'])) { ?>
            <div class="error">
                <p><?php echo $_GET['error']; ?></p>
            </div>
        <?php } ?>
    </div>

<?php
// Include footer
require_once('includes/footer.php');
?>


<?php
// Product information
$products = array(
    1 => array(
        'name' => 'Product 1',
        'price' => 29.99,
    ),
    2 => array(
        'name' => 'Product 2',
        'price' => 49.99,
    ),
    // Add more products as needed
);

// Database connection details (if using a database)
$host = "localhost";
$username = "username";
$password = "password";
$db_name = "store_db";
?>


<?php
function get_cart() {
    if (!isset($_COOKIE['cart'])) {
        return array();
    }
    return unserialize($_COOKIE['cart']);
}

function add_to_cart($product_id) {
    $cart = get_cart();
    if (array_key_exists($product_id, $cart)) {
        $cart[$product_id]['quantity']++;
    } else {
        $cart[$product_id] = array('id' => $product_id, 'quantity' => 1);
    }
    setcookie('cart', serialize($cart), time() + (86400 * 30));
}

function remove_from_cart($product_id) {
    $cart = get_cart();
    if (array_key_exists($product_id, $cart)) {
        unset($cart[$product_id]);
        setcookie('cart', serialize($cart), time() + (86400 * 30));
    }
}

function calculate_total($cart) {
    global $products;
    $total = 0;
    foreach ($cart as $item) {
        $product = $products[$item['id']];
        $total += $product['price'] * $item['quantity'];
    }
    return $total;
}

function process_checkout() {
    // Here you would typically connect to a payment gateway
    // For this example, we'll simulate a successful payment
    try {
        $cart = get_cart();
        if (empty($cart)) {
            throw new Exception("Your cart is empty");
        }
        
        // Simulate payment success or failure
        if (rand(1, 10) > 2) { // 80% chance of success
            // Process the order
            setcookie('cart', "", time() - 3600);
            return true;
        } else {
            throw new Exception("Payment failed");
        }
    } catch (Exception $e) {
        header("Location: index.php?error=" . urlencode($e->getMessage()));
        exit();
    }
}
?>


<?php
session_start();
require_once('config.php');

// Get cart count
function get_cart_count() {
    $cart = unserialize($_COOKIE['cart']);
    return count($cart);
}

?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Store</title>
    <link rel="stylesheet" href="css/styles.css">
</head>
<body>
    <header>
        <h1>Welcome to Our Store</h1>
        <nav>
            <a href="index.php">Products</a>
            <a href="index.php?action=view_cart">Cart (<?php echo isset($_COOKIE['cart']) ? count(unserialize($_COOKIE['cart'])) : 0; ?>)</a>
        </nav>
    </header>


<footer>
    <p>&copy; <?php echo date('Y'); ?> Your Store. All rights reserved.</p>
</footer>
</body>
</html>


<?php
// Connect to database
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'purchase_system';

$conn = mysqli_connect($host, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Fetch products from database
$sql = "SELECT * FROM products";
$result = mysqli_query($conn, $sql);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Product List</title>
</head>
<body>
    <?php while ($row = mysqli_fetch_assoc($result)) { ?>
        <div style="border: 1px solid #ddd; padding: 10px; margin: 5px;">
            <h3><?php echo $row['name']; ?></h3>
            <p>Price: <?php echo $row['price']; ?>$</p>
            <p>Description: <?php echo $row['description']; ?></p>
            <form action="add_to_cart.php" method="post">
                <input type="hidden" name="product_id" value="<?php echo $row['id']; ?>">
                <input type="number" name="quantity" min="1" max="<?php echo $row['stock']; ?>" value="1">
                <button type="submit">Add to Cart</button>
            </form>
        </div>
    <?php } ?>
</body>
</html>

<?php
mysqli_close($conn);
?>


<?php
session_start();

// Connect to database
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'purchase_system';

$conn = mysqli_connect($host, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Check if product exists and stock is sufficient
$product_id = $_POST['product_id'];
$quantity = $_POST['quantity'];

$sql = "SELECT * FROM products WHERE id = $product_id";
$result = mysqli_query($conn, $sql);
$product = mysqli_fetch_assoc($result);

if ($product && $quantity <= $product['stock']) {
    // Add to cart
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }

    $item = array(
        'id' => $product_id,
        'name' => $product['name'],
        'price' => $product['price'],
        'quantity' => $quantity,
        'subtotal' => $product['price'] * $quantity
    );

    $_SESSION['cart'][$product_id] = $item;
}

header("Location: cart.php");
?>


<?php
session_start();

// Connect to database
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'purchase_system';

$conn = mysqli_connect($host, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <?php if (isset($_SESSION['cart']) && count($_SESSION['cart']) > 0) { ?>
        <h1>Your Cart</h1>
        <table border="1">
            <tr>
                <th>Product Name</th>
                <th>Price</th>
                <th>Quantity</th>
                <th>Subtotal</th>
                <th>Action</th>
            </tr>
            <?php foreach ($_SESSION['cart'] as $item) { ?>
                <tr>
                    <td><?php echo $item['name']; ?></td>
                    <td><?php echo $item['price']; ?>$</td>
                    <td>
                        <form action="update_cart.php" method="post">
                            <input type="hidden" name="product_id" value="<?php echo $item['id']; ?>">
                            <input type="number" name="quantity" min="1" max="10" value="<?php echo $item['quantity']; ?>">
                            <button type="submit">Update</button>
                        </form>
                    </td>
                    <td><?php echo $item['subtotal']; ?>$</td>
                    <td><a href="remove_from_cart.php?product_id=<?php echo $item['id']; ?>">Remove</a></td>
                </tr>
            <?php } ?>
        </table>
        <p>Total: <?php echo array_sum(array_column($_SESSION['cart'], 'subtotal')); ?>$</p>
        <a href="checkout.php">Proceed to Checkout</a>
    <?php } else { ?>
        <h1>Your cart is empty!</h1>
        <a href="index.php">Go back to shop</a>
    <?php } ?>
</body>
</html>

<?php
mysqli_close($conn);
?>


<?php
session_start();

// Connect to database
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'purchase_system';

$conn = mysqli_connect($host, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Update cart item
$product_id = $_POST['product_id'];
$quantity = $_POST['quantity'];

if (isset($_SESSION['cart'][$product_id])) {
    // Check if quantity is valid and stock is sufficient
    $sql = "SELECT stock FROM products WHERE id = $product_id";
    $result = mysqli_query($conn, $sql);
    $stock = mysqli_fetch_assoc($result)['stock'];

    if ($quantity <= $stock) {
        $_SESSION['cart'][$product_id]['quantity'] = $quantity;
        $_SESSION['cart'][$product_id]['subtotal'] = $_SESSION['cart'][$product_id]['price'] * $quantity;
    }
}

header("Location: cart.php");
?>


<?php
session_start();

$product_id = $_GET['product_id'];

if (isset($_SESSION['cart'][$product_id])) {
    unset($_SESSION['cart'][$product_id]);
}

header("Location: cart.php");
?>


<?php
session_start();

// Connect to database
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'purchase_system';

$conn = mysqli_connect($host, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Check if user is logged in
if (!isset($_SESSION['user_id'])) {
    header("Location: login.php");
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
</head>
<body>
    <?php if (isset($_SESSION['cart']) && count($_SESSION['cart']) > 0) { ?>
        <h1>Checkout</h1>
        <form action="process_order.php" method="post">
            <table border="1">
                <tr>
                    <th>Product Name</th>
                    <th>Price</th>
                    <th>Quantity</th>
                    <th>Subtotal</th>
                </tr>
                <?php foreach ($_SESSION['cart'] as $item) { ?>
                    <tr>
                        <td><?php echo $item['name']; ?></td>
                        <td><?php echo $item['price']; ?>$</td>
                        <td><?php echo $item['quantity']; ?></td>
                        <td><?php echo $item['subtotal']; ?>$</td>
                    </tr>
                <?php } ?>
            </table>
            <p>Total: <?php echo array_sum(array_column($_SESSION['cart'], 'subtotal')); ?>$</p>

            <h3>Shipping Information</h3>
            <label for="name">Name:</label><br>
            <input type="text" id="name" name="name" required><br><br>

            <label for="email">Email:</label><br>
            <input type="email" id="email" name="email" required><br><br>

            <label for="address">Address:</label><br>
            <textarea id="address" name="address" rows="5" cols="30" required></textarea><br><br>

            <button type="submit">Place Order</button>
        </form>
    <?php } else { ?>
        <h1>Your cart is empty!</h1>
        <a href="index.php">Go back to shop</a>
    <?php } ?>
</body>
</html>

<?php
mysqli_close($conn);
?>


<?php
session_start();

// Connect to database
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'purchase_system';

$conn = mysqli_connect($host, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Check if user is logged in
if (!isset($_SESSION['user_id'])) {
    header("Location: login.php");
}

// Get cart items
$cart = $_SESSION['cart'];
$total_amount = array_sum(array_column($cart, 'subtotal'));

// Insert order into orders table
$sql = "INSERT INTO orders (user_id, total_amount, status) VALUES (?, ?, ?)";
$stmt = $conn->prepare($sql);
$stmt->bind_param("ids", $_SESSION['user_id'], $total_amount, "pending");
$stmt->execute();
$order_id = $stmt->insert_id;

// Insert order items into order_items table
foreach ($cart as $item) {
    $sql = "INSERT INTO order_items (order_id, product_id, quantity, subtotal) VALUES (?, ?, ?, ?)";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("iiid", $order_id, $item['id'], $item['quantity'], $item['subtotal']);
    $stmt->execute();

    // Update product stock
    $sql = "UPDATE products SET stock = stock - ? WHERE id = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("ii", $item['quantity'], $item['id']);
    $stmt->execute();
}

// Empty cart
unset($_SESSION['cart']);

header("Location: order_confirmation.php?order_id=$order_id");
?>


<?php
session_start();

// Connect to database
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'purchase_system';

$conn = mysqli_connect($host, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

$order_id = $_GET['order_id'];

// Fetch order details
$sql = "SELECT * FROM orders WHERE id = $order_id";
$result = mysqli_query($conn, $sql);
$order = mysqli_fetch_assoc($result);

// Fetch order items
$sql = "SELECT oi.*, p.name AS product_name FROM order_items oi JOIN products p ON oi.product_id = p.id WHERE oi.order_id = $order_id";
$result = mysqli_query($conn, $sql);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Order Confirmation</title>
</head>
<body>
    <h1>Thank you for your order!</h1>
    <p>Your order ID is: <?php echo $order['id']; ?></p>
    <p>Total Amount: <?php echo $order['total_amount']; ?>$</p>

    <h2>Order Details</h2>
    <table border="1">
        <tr>
            <th>Product Name</th>
            <th>Quantity</th>
            <th>Subtotal</th>
        </tr>
        <?php while ($item = mysqli_fetch_assoc($result)) { ?>
            <tr>
                <td><?php echo $item['product_name']; ?></td>
                <td><?php echo $item['quantity']; ?></td>
                <td><?php echo $item['subtotal']; ?>$</td>
            </tr>
        <?php } ?>
    </table>

    <p>Your order will be processed shortly. Check your email for confirmation.</p>
</body>
</html>

<?php
mysqli_close($conn);
?>


<?php
// config.php - Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$database = 'my_shop';

$conn = mysqli_connect($host, $username, $password, $database);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}
?>

<?php
// products.php - Displaying available products
session_start();

include('config.php');

$query = "SELECT * FROM products";
$result = mysqli_query($conn, $query);

if (isset($_POST['add_to_cart'])) {
    $product_id = $_POST['product_id'];
    $quantity = $_POST['quantity'];

    if (!isset($_SESSION['cart'][$product_id])) {
        $_SESSION['cart'][$product_id] = 0;
    }
    $_SESSION['cart'][$product_id] += $quantity;
}

header('Location: cart.php');
exit();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Product Catalog</title>
    <link rel="stylesheet" type="text/css" href="style.css">
</head>
<body>
    <h1>Product Catalog</h1>
    <?php while ($row = mysqli_fetch_assoc($result)): ?>
        <div class="product">
            <img src="<?php echo $row['image']; ?>" alt="<?php echo $row['name']; ?>">
            <h2><?php echo $row['name']; ?></h2>
            <p><?php echo $row['description']; ?></p>
            <p>Price: <?php echo '$'.$row['price']; ?></p>
            <form action="add_to_cart.php" method="post">
                <input type="hidden" name="product_id" value="<?php echo $row['id']; ?>">
                <input type="number" name="quantity" min="1" max="99" value="1">
                <button type="submit" name="add_to_cart">Add to Cart</button>
            </form>
        </div>
    <?php endwhile; ?>
    <p><a href="cart.php">View Cart</a></p>
</body>
</html>

<?php
// cart.php - Displaying user's shopping cart
session_start();

include('config.php');

$total = 0;
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
    <link rel="stylesheet" type="text/css" href="style.css">
</head>
<body>
    <h1>Your Shopping Cart</h1>
    <?php if (!empty($_SESSION['cart'])): ?>
        <table>
            <tr>
                <th>Product</th>
                <th>Price</th>
                <th>Quantity</th>
                <th>Total</th>
            </tr>
            <?php foreach ($_SESSION['cart'] as $product_id => $quantity): 
                $query = "SELECT * FROM products WHERE id=$product_id";
                $result = mysqli_query($conn, $query);
                $row = mysqli_fetch_assoc($result); ?>
                <tr>
                    <td><?php echo $row['name']; ?></td>
                    <td><?php echo '$'.$row['price']; ?></td>
                    <td><?php echo $quantity; ?></td>
                    <td><?php echo '$'.number_format($row['price'] * $quantity, 2); ?></td>
                </tr>
                <?php $total += $row['price'] * $quantity; ?>
            <?php endforeach; ?>
            <tr>
                <td colspan="3">Total:</td>
                <td><?php echo '$'.number_format($total, 2); ?></td>
            </tr>
        </table>
        <form action="checkout.php" method="post">
            <button type="submit">Checkout</button>
        </form>
    <?php else: ?>
        <p>Your cart is empty. Please add some products first.</p>
        <a href="products.php">Continue Shopping</a>
    <?php endif; ?>
</body>
</html>

<?php
// checkout.php - Processing payment
session_start();

include('config.php');

if (isset($_SESSION['cart'])) {
    // Process payment here (this is a simplified example)
    // In real application, you would integrate with a payment gateway
    
    // Simulate payment processing
    $success = true;
    
    if ($success) {
        // Clear cart
        unset($_SESSION['cart']);
        header('Location: confirmation.php');
        exit();
    } else {
        echo "Payment failed. Please try again.";
    }
} else {
    echo "No items in your cart.";
}
?>

<?php
// confirmation.php - Order confirmation page
session_start();

include('config.php');

if (isset($_SESSION['order_id'])) {
    $order_id = $_SESSION['order_id'];
    // Retrieve order details from database
    $query = "SELECT * FROM orders WHERE id=$order_id";
    $result = mysqli_query($conn, $query);
    $order = mysqli_fetch_assoc($result);
    
    echo "<h1>Order Confirmation</h1>";
    echo "<p>Your order has been processed successfully!</p>";
    echo "<p>Order ID: " . $order['id'] . "</p>";
    echo "<p>Total Amount: $" . number_format($order['total'], 2) . "</p>";
} else {
    echo "No order found.";
}
?>

<!-- style.css -->
body {
    font-family: Arial, sans-serif;
    max-width: 800px;
    margin: 0 auto;
    padding: 20px;
}

.product {
    border: 1px solid #ddd;
    padding: 10px;
    margin-bottom: 20px;
}

table {
    width: 100%;
    border-collapse: collapse;
    margin-top: 20px;
}

th, td {
    padding: 10px;
    text-align: left;
    border-bottom: 1px solid #ddd;
}

button {
    background-color: #4CAF50;
    color: white;
    padding: 10px 20px;
    border: none;
    border-radius: 4px;
    cursor: pointer;
}

button:hover {
    background-color: #45a049;
}


<?php
// Database configuration
$host = 'localhost';
$dbname = 'shop';
$username = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Product List</title>
</head>
<body>
    <?php
        // Fetch products from database
        $stmt = $conn->query("SELECT * FROM products");
        while ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {
            echo "<div>";
            echo "<h2>".$row['name']."</h2>";
            echo "<p>".$row['description']."</p>";
            echo "<p>Price: \$".$row['price']."</p>";
            echo "<a href='add_to_cart.php?id=".$row['id']."'>Add to Cart</a>";
            echo "</div>";
        }
    ?>
</body>
</html>

// add_to_cart.php
<?php
session_start();
if(isset($_GET['id'])){
    $id = $_GET['id'];
    
    // Fetch product details from database
    $stmt = $conn->prepare("SELECT * FROM products WHERE id = ?");
    $stmt->execute([$id]);
    $product = $stmt->fetch(PDO::FETCH_ASSOC);
    
    if($product){
        // Add to cart
        $_SESSION['cart'][] = array(
            'id' => $product['id'],
            'name' => $product['name'],
            'price' => $product['price'],
            'quantity' => 1
        );
        
        header("Location: index.php");
    }
}
?>

// cart.php
<?php
session_start();
?>
<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <?php
        if(isset($_SESSION['cart'])){
            $total = 0;
            foreach($_SESSION['cart'] as $item){
                echo "<div>";
                echo "<h3>".$item['name']."</h3>";
                echo "<p>Quantity: ".$item['quantity']."</p>";
                echo "<p>Price: \$".$item['price']."</p>";
                echo "</div>";
                $total += $item['price'] * $item['quantity'];
            }
            echo "<h2>Total: \$".$total."</h2>";
        } else {
            echo "Your cart is empty!";
        }
    ?>
    <a href="checkout.php">Checkout</a>
</body>
</html>

// checkout.php
<?php
session_start();
?>
<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
</head>
<body>
    <?php
        if(isset($_SESSION['cart'])){
            $total = 0;
            foreach($_SESSION['cart'] as $item){
                $total += $item['price'] * $item['quantity'];
            }
        }
    ?>
    
    <form action="process_payment.php" method="post">
        <h2>Payment Information</h2>
        <p>Name: <input type="text" name="name" required></p>
        <p>Email: <input type="email" name="email" required></p>
        <p>Phone: <input type="tel" name="phone"></p>
        <p>Address: <textarea name="address" rows="4" cols="30"></textarea></p>
        <p>Card Number: <input type="text" name="card_number" required></p>
        <p>CVV: <input type="text" name="cvv" required></p>
        <p>Total Amount: \$<?php echo $total; ?></p>
        <input type="submit" value="Complete Purchase">
    </form>
</body>
</html>

// process_payment.php
<?php
session_start();
?>
<!DOCTYPE html>
<html>
<head>
    <title>Order Confirmation</title>
</head>
<body>
    <?php
        if(isset($_POST['card_number'])){
            // Simulate payment processing
            $order_id = time();
            
            // Save order to database
            foreach($_SESSION['cart'] as $item){
                $stmt = $conn->prepare("INSERT INTO orders (product_id, quantity, price, order_id) VALUES (?, ?, ?, ?)");
                $stmt->execute([$item['id'], $item['quantity'], $item['price'], $order_id]);
            }
            
            // Clear cart
            unset($_SESSION['cart']);
            
            echo "<h2>Order Confirmation</h2>";
            echo "<p>Your order has been received!</p>";
            echo "<p>Order ID: ".$order_id."</p>";
        } else {
            echo "Payment failed!";
        }
    ?>
</body>
</html>


<?php
session_start();
include 'db.php';

if (isset($_POST['submit'])) {
    $username = $_POST['username'];
    $email = $_POST['email'];
    $password = $_POST['password'];
    $confirm_password = $_POST['confirm_password'];

    // Validate inputs
    if ($password !== $confirm_password) {
        die("Passwords do not match!");
    }

    // Hash password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);

    try {
        $stmt = $conn->prepare("INSERT INTO users (username, email, password_hash) VALUES (?, ?, ?)");
        $stmt->execute([$username, $email, $hashed_password]);
        echo "Registration successful!";
        header("Location: login.php");
    } catch (Exception $e) {
        die("Error: " . $e->getMessage());
    }
}
?>


<?php
session_start();
include 'db.php';

if (isset($_POST['submit'])) {
    $username = $_POST['username'];
    $password = $_POST['password'];

    try {
        $stmt = $conn->prepare("SELECT * FROM users WHERE username = ?");
        $stmt->execute([$username]);
        $user = $stmt->fetch();

        if ($user && password_verify($password, $user['password_hash'])) {
            $_SESSION['user_id'] = $user['id'];
            header("Location: products.php");
        } else {
            echo "Invalid username or password!";
        }
    } catch (Exception $e) {
        die("Error: " . $e->getMessage());
    }
}
?>


<?php
session_start();
include 'db.php';

try {
    $stmt = $conn->prepare("SELECT * FROM products");
    $stmt->execute();
    $products = $stmt->fetchAll();
} catch (Exception $e) {
    die("Error: " . $e->getMessage());
}
?>
<!DOCTYPE html>
<html>
<head>
    <title>Products</title>
</head>
<body>
<?php foreach ($products as $product): ?>
    <div class="product">
        <h3><?php echo $product['name']; ?></h3>
        <p><?php echo $product['description']; ?></p>
        <p>Price: <?php echo $product['price']; ?>$</p>
        <form action="add_to_cart.php" method="post">
            <input type="hidden" name="product_id" value="<?php echo $product['id']; ?>">
            <input type="number" name="quantity" min="1" max="<?php echo $product['quantity']; ?>" required>
            <button type="submit">Add to Cart</button>
        </form>
    </div>
<?php endforeach; ?>
<a href="checkout.php">Checkout</a>
</body>
</html>


<?php
session_start();

if (isset($_POST['product_id']) && isset($_POST['quantity'])) {
    $product_id = $_POST['product_id'];
    $quantity = $_POST['quantity'];

    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }

    // Get product details
    include 'db.php';
    try {
        $stmt = $conn->prepare("SELECT * FROM products WHERE id = ?");
        $stmt->execute([$product_id]);
        $product = $stmt->fetch();

        if ($quantity <= $product['quantity']) {
            $_SESSION['cart'][$product_id] = array(
                'id' => $product['id'],
                'name' => $product['name'],
                'price' => $product['price'],
                'quantity' => $quantity,
                'total_price' => $product['price'] * $quantity
            );
        } else {
            die("Not enough stock!");
        }
    } catch (Exception $e) {
        die("Error: " . $e->getMessage());
    }
}
header("Location: products.php");
?>


<?php
session_start();
include 'db.php';

if (!isset($_SESSION['user_id'])) {
    header("Location: login.php");
}

// Get user details
$user_id = $_SESSION['user_id'];
try {
    $stmt = $conn->prepare("SELECT * FROM users WHERE id = ?");
    $stmt->execute([$user_id]);
    $user = $stmt->fetch();
} catch (Exception $e) {
    die("Error: " . $e->getMessage());
}
?>
<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
</head>
<body>
<h2>Order Details</h2>
<?php if (!empty($_SESSION['cart'])): ?>
    <table>
        <tr>
            <th>Product Name</th>
            <th>Quantity</th>
            <th>Price</th>
            <th>Total</th>
        </tr>
        <?php $grand_total = 0; foreach ($_SESSION['cart'] as $item): ?>
            <tr>
                <td><?php echo $item['name']; ?></td>
                <td><?php echo $item['quantity']; ?></td>
                <td><?php echo $item['price']; ?>$</td>
                <td><?php echo $item['total_price']; ?>$</td>
            </tr>
            <?php $grand_total += $item['total_price']; ?>
        <?php endforeach; ?>
    </table>
    <h3>Grand Total: <?php echo $grand_total; ?>$</h3>

    <form action="process_order.php" method="post">
        <!-- User details -->
        <input type="hidden" name="user_id" value="<?php echo $user['id']; ?>">
        <input type="hidden" name="total_amount" value="<?php echo $grand_total; ?>">

        <h3>Contact Information</h3>
        <p>Your information is already filled based on your account:</p>
        <p>Name: <?php echo $user['username']; ?></p>
        <p>Email: <?php echo $user['email']; ?></p>

        <!-- Additional fields if needed -->
        <label for="phone">Phone Number:</label>
        <input type="tel" id="phone" name="phone">

        <h3>Shipping Address</h3>
        <textarea name="address" placeholder="Enter your shipping address..." required></textarea>

        <button type="submit">Confirm Order</button>
    </form>
<?php else: ?>
    <p>Your cart is empty!</p>
<?php endif; ?>
</body>
</html>


<?php
session_start();
include 'db.php';

if (!isset($_SESSION['user_id'])) {
    header("Location: login.php");
}

try {
    // Insert into orders table
    $stmt = $conn->prepare("
        INSERT INTO orders (user_id, total_amount, contact_name, email, phone, address) 
        VALUES (?, ?, ?, ?, ?, ?)
    ");
    $stmt->execute([
        $_POST['user_id'],
        $_POST['total_amount'],
        $_POST['contact_name'] ?? $_SESSION['username'], // Use session if not provided
        $_POST['email'],
        $_POST['phone'],
        $_POST['address']
    ]);
    $order_id = $conn->lastInsertId();

    // Insert into order_items table
    foreach ($_SESSION['cart'] as $item) {
        $stmt = $conn->prepare("
            INSERT INTO order_items (order_id, product_id, quantity, price, total_price)
            VALUES (?, ?, ?, ?, ?)
        ");
        $stmt->execute([
            $order_id,
            $item['id'],
            $item['quantity'],
            $item['price'],
            $item['total_price']
        ]);
    }

    // Clear the cart
    unset($_SESSION['cart']);

    echo "Order placed successfully!";
} catch (Exception $e) {
    die("Error: " . $e->getMessage());
}
?>


<?php
session_start();
unset($_SESSION['user_id']);
session_unset();
session_destroy();
header("Location: login.php");
exit;
?>


<?php
// index.php - Product Catalog Page

// Database connection
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
} catch (PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}

// Fetch products from database
$stmt = $conn->query('SELECT * FROM products');
$products = $stmt->fetchAll(PDO::FETCH_ASSOC);

?>

<!DOCTYPE html>
<html>
<head>
    <title>Product Catalog</title>
    <style>
        /* Add your CSS styles here */
    </style>
</head>
<body>
    <h1>Product Catalog</h1>
    
    <?php foreach ($products as $product): ?>
        <div class="product">
            <h2><?php echo $product['name']; ?></h2>
            <p><?php echo $product['description']; ?></p>
            <p>Price: $<?php echo number_format($product['price'], 2); ?></p>
            <form action="add_to_cart.php" method="post">
                <input type="hidden" name="product_id" value="<?php echo $product['id']; ?>">
                <input type="number" name="quantity" min="1" max="<?php echo $product['stock']; ?>" placeholder="Quantity" required>
                <button type="submit">Add to Cart</button>
            </form>
        </div>
    <?php endforeach; ?>

    <a href="shopping_cart.php">Go to Shopping Cart</a>
</body>
</html>


<?php
// add_to_cart.php

session_start();

$product_id = $_POST['product_id'];
$quantity = $_POST['quantity'];

if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

if (isset($_SESSION['cart'][$product_id])) {
    $_SESSION['cart'][$product_id]['quantity'] += $quantity;
} else {
    // Fetch product details from database
    $conn = new PDO("mysql:host=localhost;dbname=your_database_name", "root", "");
    $stmt = $conn->prepare('SELECT * FROM products WHERE id = ?');
    $stmt->execute([$product_id]);
    $product = $stmt->fetch(PDO::FETCH_ASSOC);

    $_SESSION['cart'][$product_id] = array(
        'name' => $product['name'],
        'price' => $product['price'],
        'quantity' => $quantity
    );
}

header("Location: " . $_SERVER['HTTP_REFERER']);
exit();


<?php
// shopping_cart.php

session_start();

?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <h1>Your Shopping Cart</h1>

    <?php if (!empty($_SESSION['cart'])): ?>
        <table>
            <tr>
                <th>Product Name</th>
                <th>Price</th>
                <th>Quantity</th>
                <th>Total</th>
                <th>Action</th>
            </tr>
            
            <?php foreach ($_SESSION['cart'] as $id => $item): ?>
                <tr>
                    <td><?php echo $item['name']; ?></td>
                    <td>$<?php echo number_format($item['price'], 2); ?></td>
                    <td><input type="number" id="quantity_<?php echo $id; ?>" value="<?php echo $item['quantity']; ?>"></td>
                    <td>$<?php echo number_format($item['price'] * $item['quantity'], 2); ?></td>
                    <td>
                        <button onclick="updateQuantity(<?php echo $id; ?>, '<?php echo $item['name']; ?>')">Update</button>
                        <a href="remove_from_cart.php?id=<?php echo $id; ?>">Remove</a>
                    </td>
                </tr>
            <?php endforeach; ?>

            <tr>
                <th colspan="3">Total:</th>
                <td>$<?php 
                    $total = 0;
                    foreach ($_SESSION['cart'] as $item) {
                        $total += $item['price'] * $item['quantity'];
                    }
                    echo number_format($total, 2); 
                ?></td>
            </tr>
        </table>

        <script>
            function updateQuantity(productId, productName) {
                var quantity = document.getElementById('quantity_' + productId).value;
                if (quantity > 0) {
                    // Use AJAX to send the updated quantity
                    var xmlhttp = new XMLHttpRequest();
                    xmlhttp.onreadystatechange = function() {
                        if (xmlhttp.readyState == 4 && xmlhttp.status == 200) {
                            window.location.reload();
                        }
                    };
                    xmlhttp.open("POST", "update_cart.php", true);
                    xmlhttp.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
                    xmlhttp.send("id=" + productId + "&quantity=" + quantity);
                } else {
                    alert("Quantity must be at least 1!");
                }
            }
        </script>

    <?php else: ?>
        <p>Your cart is empty.</p>
    <?php endif; ?>

    <a href="<?php echo isset($_SESSION['cart']) && !empty($_SESSION['cart']) ? 'checkout.php' : 'index.php'; ?>">Continue Shopping</a>
    <?php if (!empty($_SESSION['cart'])): ?>
        <a href="checkout.php">Checkout</a>
    <?php endif; ?>

</body>
</html>


<?php
// update_cart.php

session_start();

if (isset($_POST['id']) && isset($_POST['quantity'])) {
    $id = $_POST['id'];
    $quantity = $_POST['quantity'];

    if (!empty($quantity) && $quantity > 0) {
        if (isset($_SESSION['cart'][$id])) {
            $_SESSION['cart'][$id]['quantity'] = $quantity;
        }
    } else {
        unset($_SESSION['cart'][$id]);
    }

    // You can return a JSON response or just reload the page
    echo "success";
} else {
    echo "error";
}


<?php
// remove_from_cart.php

session_start();

if (isset($_GET['id'])) {
    $id = $_GET['id'];
    if (isset($_SESSION['cart'][$id])) {
        unset($_SESSION['cart'][$id]);
    }
}

header("Location: shopping_cart.php");
exit();


<?php
// checkout.php

session_start();

if (!empty($_SESSION['cart'])) {
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += $item['price'] * $item['quantity'];
    }
} else {
    header("Location: index.php");
    exit();
}

?>

<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
</head>
<body>
    <h1>Checkout</h1>

    <?php if (!empty($_SESSION['cart'])): ?>

        <form action="process_payment.php" method="post">
            <div>
                <h2>Billing Information</h2>
                <input type="text" name="name" placeholder="Full Name" required>
                <input type="email" name="email" placeholder="Email Address" required>
                <input type="tel" name="phone" placeholder="Phone Number">
                
                <h3>Shipping Address</h3>
                <input type="text" name="address" placeholder="Street Address" required>
                <input type="text" name="city" placeholder="City" required>
                <input type="text" name="state" placeholder="State" required>
                <input type="zip" name="zipcode" placeholder="Zip Code" required>

                <h3>Payment Information</h3>
                <div>
                    <label><input type="radio" name="payment_method" value="credit_card" checked>Credit Card</label>
                    <label><input type="radio" name="payment_method" value="paypal">PayPal</label>
                </div>

                <!-- Add credit card fields here -->
                <?php if (isset($_GET['error'])): ?>
                    <p style="color: red;"><?php echo $_GET['error']; ?></p>
                <?php endif; ?>

                <input type="hidden" name="total" value="<?php echo $total; ?>">
                <button type="submit">Complete Purchase</button>
            </div>
        </form>

    <?php else: ?>
        <p>Your cart is empty.</p>
        <a href="index.php">Continue Shopping</a>
    <?php endif; ?>

</body>
</html>


<?php
// process_payment.php

session_start();

if (isset($_POST['total']) && !empty($_SESSION['cart'])) {

    // Calculate total amount
    $total = $_POST['total'];

    // Validate form inputs
    if (!isset($_POST['name'], $_POST['email'], $_POST['address'], $_POST['city'], $_POST['state'], $_POST['zipcode'])) {
        header("Location: checkout.php?error=Please fill in all required fields");
        exit();
    }

    // Simulate payment processing (replace with actual payment gateway integration)
    $payment_method = $_POST['payment_method'];
    
    if ($payment_method == 'credit_card') {
        // Validate credit card information
        // ...
    } elseif ($payment_method == 'paypal') {
        // Redirect to PayPal or process through their API
        // ...
    }

    // For this example, assume payment is successful

    // Save order to database
    $conn = new PDO("mysql:host=localhost;dbname=your_database_name", "root", "");
    
    try {
        // Start transaction
        $conn->beginTransaction();

        // Insert into orders table
        $stmt = $conn->prepare('INSERT INTO orders (user_id, total_amount, payment_method, status) VALUES (?, ?, ?, ?)');
        $order_id = isset($_SESSION['user_id']) ? $_SESSION['user_id'] : 0;
        $result = $stmt->execute([$order_id, $total, $payment_method, 'completed']);

        // Get the new order ID
        $last_order_id = $conn->lastInsertId();

        // Insert each item into order_items table
        foreach ($_SESSION['cart'] as $product) {
            $stmt = $conn->prepare('INSERT INTO order_items (order_id, product_id, quantity, price) VALUES (?, ?, ?, ?)');
            $result = $stmt->execute([$last_order_id, $product['id'], $product['quantity'], $product['price']]);
        }

        // Commit transaction
        $conn->commit();

        // Clear the cart
        unset($_SESSION['cart']);

        header("Location: thank_you.php?order_id=" . $last_order_id);
    } catch (PDOException $e) {
        // Rollback transaction in case of error
        $conn->rollBack();
        echo "Error processing your order: " . $e->getMessage();
    }
} else {
    header("Location: index.php");
}


<?php
// thank_you.php

session_start();

$order_id = $_GET['order_id'] ?? null;
$total = isset($_SESSION['cart']) ? array_sum(array_map(function($item) { return $item['price'] * $item['quantity']; }, $_SESSION['cart'])) : 0;

?>

<!DOCTYPE html>
<html>
<head>
    <title>Thank You</title>
</head>
<body>
    <h1>Thank You for Your Order!</h1>
    
    <?php if ($order_id && isset($_GET['total'])): ?>
        <p>Your order ID is: <?php echo $order_id; ?></p>
        <p>Total amount: $<?php echo number_format($total, 2); ?></p>
        <p>We will send you an email confirmation shortly.</p>
    <?php else: ?>
        <p>There was an error processing your order. Please try again.</p>
    <?php endif; ?>

</body>
</html>


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Product List</title>
</head>
<body>
    <?php
        // Sample product data
        $products = array(
            array('id' => 1, 'name' => 'Laptop', 'description' => 'Dell XPS 15', 'price' => 999.99),
            array('id' => 2, 'name' => 'Phone', 'description' => 'iPhone 13 Pro', 'price' => 799.99),
            array('id' => 3, 'name' => 'Tablet', 'description' => 'Samsung Galaxy Tab S7', 'price' => 599.99)
        );
    ?>

    <h1>Available Products</h1>
    <?php foreach ($products as $product): ?>
        <div style="border: 1px solid #ddd; padding: 10px; margin-bottom: 10px;">
            <img src="placeholder-image.jpg" alt="<?php echo $product['name']; ?>" width="200">
            <h2><?php echo $product['name']; ?></h2>
            <p><?php echo $product['description']; ?></p>
            <p>Price: $<?php echo number_format($product['price'], 2); ?></p>
            <form action="cart.php" method="post">
                <input type="hidden" name="id" value="<?php echo $product['id']; ?>">
                <input type="hidden" name="name" value="<?php echo $product['name']; ?>">
                <input type="hidden" name="price" value="<?php echo $product['price']; ?>">
                <input type="number" name="quantity" min="1" max="5" value="1">
                <button type="submit">Add to Cart</button>
            </form>
        </div>
    <?php endforeach; ?>

    <a href="cart.php">View Cart</a>
</body>
</html>


<?php session_start(); ?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Shopping Cart</title>
</head>
<body>
    <?php
        if (!isset($_SESSION['cart'])) {
            $_SESSION['cart'] = array();
        }

        // Add item to cart
        if ($_SERVER["REQUEST_METHOD"] == "POST") {
            $id = $_POST['id'];
            $name = $_POST['name'];
            $price = $_POST['price'];
            $quantity = $_POST['quantity'];

            if (isset($_SESSION['cart'][$id])) {
                $_SESSION['cart'][$id]['quantity'] += $quantity;
            } else {
                $_SESSION['cart'][$id] = array(
                    'id' => $id,
                    'name' => $name,
                    'price' => $price,
                    'quantity' => $quantity
                );
            }
        }

        // Update cart
        if (isset($_POST['update'])) {
            foreach ($_SESSION['cart'] as $id => $item) {
                if (isset($_POST[$id])) {
                    $_SESSION['cart'][$id]['quantity'] = $_POST[$id];
                }
            }
        }

        // Calculate total
        $total = 0;
        foreach ($_SESSION['cart'] as $item) {
            $total += $item['price'] * $item['quantity'];
        }
    ?>

    <h1>Your Cart</h1>
    <?php if (empty($_SESSION['cart'])): ?>
        <p>Your cart is empty.</p>
    <?php else: ?>
        <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
            <?php foreach ($_SESSION['cart'] as $id => $item): ?>
                <div style="border: 1px solid #ddd; padding: 10px; margin-bottom: 10px;">
                    <h2><?php echo $item['name']; ?></h2>
                    <p>Price: $<?php echo number_format($item['price'], 2); ?></p>
                    <input type="number" name="<?php echo $id; ?>" min="1" value="<?php echo $item['quantity']; ?>">
                </div>
            <?php endforeach; ?>
            <button type="submit" name="update">Update Cart</button>
        </form>

        <h2>Total: $<?php echo number_format($total, 2); ?></h2>
        <a href="checkout.php">Proceed to Checkout</a>
    <?php endif; ?>

    <a href="products.php">Continue Shopping</a>
</body>
</html>


<?php session_start(); ?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Checkout</title>
</head>
<body>
    <?php
        // Get cart contents
        $cart = $_SESSION['cart'];
        
        // Calculate total
        $total = 0;
        foreach ($cart as $item) {
            $total += $item['price'] * $item['quantity'];
        }

        if ($_SERVER["REQUEST_METHOD"] == "POST") {
            // Process order details
            $name = $_POST['name'];
            $email = $_POST['email'];
            $address = $_POST['address'];
            $phone = $_POST['phone'];
            $payment_method = $_POST['payment_method'];

            // Generate order ID
            $order_id = time();

            // Display order confirmation
            echo "<h2>Order Confirmation</h2>";
            echo "<p>Your order has been placed successfully!</p>";
            echo "<p>Order ID: " . $order_id . "</p>";
            echo "<p>Total Amount: $" . number_format($total, 2) . "</p>";
            echo "<p>Thank you for your purchase!</p>";

            // Clear cart
            $_SESSION['cart'] = array();
        }
    ?>

    <?php if (empty($_POST)): ?>
        <h1>Checkout</h1>
        <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
            <div style="border: 1px solid #ddd; padding: 20px;">
                <h2>Billing Information</h2>
                <input type="text" name="name" placeholder="Full Name" required><br><br>
                <input type="email" name="email" placeholder="Email Address" required><br><br>
                <textarea name="address" placeholder="Shipping Address" rows="3" required></textarea><br><br>
                <input type="tel" name="phone" placeholder="Phone Number" required><br><br>

                <h2>Payment Method</h2>
                <select name="payment_method" required>
                    <option value="">Select Payment Method</option>
                    <option value="credit_card">Credit Card</option>
                    <option value="debit_card">Debit Card</option>
                    <option value="paypal">PayPal</option>
                </select><br><br>

                <button type="submit" style="background-color: #4CAF50; color: white; padding: 12px 24px;">Place Order</button>
            </div>
        </form>
    <?php endif; ?>

    <a href="cart.php">Go Back to Cart</a>
</body>
</html>


<?php
// Database connection
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "myDB";

$conn = mysqli_connect($servername, $username, $password, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// User authentication functions

function registerUser($username, $email, $password, $address) {
    global $conn;
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);
    
    $sql = "INSERT INTO users (username, email, password, address) VALUES ('$username', '$email', '$hashed_password', '$address')";
    if (mysqli_query($conn, $sql)) {
        return true;
    } else {
        return false;
    }
}

function loginUser($email, $password) {
    global $conn;
    $sql = "SELECT * FROM users WHERE email='$email'";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) == 1) {
        $user = mysqli_fetch_assoc($result);
        if (password_verify($password, $user['password'])) {
            $_SESSION['user'] = array(
                'id' => $user['id'],
                'username' => $user['username'],
                'email' => $user['email']
            );
            return true;
        }
    }
    return false;
}

// Product functions

function getProducts() {
    global $conn;
    $sql = "SELECT * FROM products";
    $result = mysqli_query($conn, $sql);
    $products = array();
    
    while ($row = mysqli_fetch_assoc($result)) {
        $products[] = $row;
    }
    
    return $products;
}

function getProductById($id) {
    global $conn;
    $sql = "SELECT * FROM products WHERE id='$id'";
    $result = mysqli_query($conn, $sql);
    return mysqli_fetch_assoc($result);
}

// Cart functions

function addToCart($productId, $quantity) {
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }
    
    if (isset($_SESSION['cart'][$productId])) {
        $_SESSION['cart'][$productId]['quantity'] += $quantity;
    } else {
        $product = getProductById($productId);
        $_SESSION['cart'][$productId] = array(
            'id' => $product['id'],
            'name' => $product['name'],
            'price' => $product['price'],
            'quantity' => $quantity
        );
    }
}

function getCartTotal() {
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += ($item['price'] * $item['quantity']);
    }
    return $total;
}

// Order functions

function placeOrder() {
    if (!isset($_SESSION['user'])) {
        header("Location: login.php");
        exit();
    }
    
    $userId = $_SESSION['user']['id'];
    $cart = $_SESSION['cart'];
    $totalPrice = getCartTotal();
    
    foreach ($cart as $item) {
        $sql = "INSERT INTO orders (user_id, product_id, quantity, total_price) VALUES ('$userId', '{$item['id']}', '{$item['quantity']}', '{$item['price'] * $item['quantity']}')";
        mysqli_query($conn, $sql);
    }
    
    // Clear cart
    unset($_SESSION['cart']);
}

// Database tables creation

function createTables() {
    global $conn;
    
    // Create users table
    $sql = "CREATE TABLE IF NOT EXISTS users (
        id INT AUTO_INCREMENT PRIMARY KEY,
        username VARCHAR(255),
        email VARCHAR(255),
        password VARCHAR(255),
        address TEXT
    )";
    mysqli_query($conn, $sql);
    
    // Create products table
    $sql = "CREATE TABLE IF NOT EXISTS products (
        id INT AUTO_INCREMENT PRIMARY KEY,
        name VARCHAR(255),
        description TEXT,
        price DECIMAL(10, 2),
        stock INT
    )";
    mysqli_query($conn, $sql);
    
    // Create orders table
    $sql = "CREATE TABLE IF NOT EXISTS orders (
        id INT AUTO_INCREMENT PRIMARY KEY,
        user_id INT,
        product_id INT,
        quantity INT,
        total_price DECIMAL(10, 2),
        date DATETIME DEFAULT CURRENT_TIMESTAMP,
        FOREIGN KEY (user_id) REFERENCES users(id),
        FOREIGN KEY (product_id) REFERENCES products(id)
    )";
    mysqli_query($conn, $sql);
}

createTables();

// Sample product data
if (getProducts() == 0) {
    $products = array(
        array('name' => 'Product 1', 'description' => 'Description for Product 1', 'price' => 29.99, 'stock' => 10),
        array('name' => 'Product 2', 'description' => 'Description for Product 2', 'price' => 49.99, 'stock' => 5),
        array('name' => 'Product 3', 'description' => 'Description for Product 3', 'price' => 19.99, 'stock' => 20)
    );
    
    foreach ($products as $product) {
        $sql = "INSERT INTO products (name, description, price, stock) VALUES ('{$product['name']}', '{$product['description']}', {$product['price']}, {$product['stock']})";
        mysqli_query($conn, $sql);
    }
}
?>


<?php
session_start();

// Initialize cart if not exists
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function addToCart($productId) {
    global $products;
    
    // Check if product exists in products list
    if (isset($products[$productId])) {
        $product = $products[$productId];
        
        // Check if item already exists in cart
        foreach ($_SESSION['cart'] as &$item) {
            if ($item['id'] == $productId) {
                $item['quantity']++;
                return;
            }
        }
        
        // Add new item to cart
        $_SESSION['cart'][] = array(
            'id' => $productId,
            'name' => $product['name'],
            'price' => $product['price'],
            'description' => $product['description'],
            'quantity' => 1
        );
    }
}

// Function to update cart item quantity
function updateCart($productId, $newQuantity) {
    // Loop through cart items
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['id'] == $productId) {
            $item['quantity'] = max(0, intval($newQuantity));
            
            // Remove item if quantity is 0 or less
            if ($item['quantity'] <= 0) {
                removeItemFromCart($productId);
            }
            return;
        }
    }
}

// Function to remove item from cart
function removeItemFromCart($productId) {
    foreach ($_SESSION['cart'] as $key => $item) {
        if ($item['id'] == $productId) {
            unset($_SESSION['cart'][$key]);
            break;
        }
    }
    $_SESSION['cart'] = array_values($_SESSION['cart']); // Re-index the array
}

// Function to calculate total price
function calculateTotal() {
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += ($item['price'] * $item['quantity']);
    }
    return $total;
}

// Sample products list (you can connect this to your database)
$products = array(
    1 => array(
        'id' => 1,
        'name' => 'Product 1',
        'description' => 'Description of product 1',
        'price' => 29.99
    ),
    2 => array(
        'id' => 2,
        'name' => 'Product 2',
        'description' => 'Description of product 2',
        'price' => 49.99
    ),
    // Add more products as needed
);

// Display cart contents function
function displayCart() {
    $cart = $_SESSION['cart'];
    if (empty($cart)) {
        echo '<p>Your cart is empty.</p>';
        return;
    }
    
    echo '<table border="1">';
    echo '<tr><th>Product</th><th>Description</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>';
    
    foreach ($cart as $item) {
        echo '<tr>';
        echo '<td>' . htmlspecialchars($item['name']) . '</td>';
        echo '<td>' . htmlspecialchars($item['description']) . '</td>';
        echo '<td>$' . number_format($item['price'], 2) . '</td>';
        echo '<td><input type="text" name="quantity-' . $item['id'] . '" value="' . $item['quantity'] . '" size="3"></td>';
        echo '<td>$' . number_format(($item['price'] * $item['quantity']), 2) . '</td>';
        echo '<td><button onclick="removeFromCart(' . $item['id'] . ')">Remove</button></td>';
        echo '</tr>';
    }
    
    echo '</table>';
    echo '<p>Total: $' . number_format(calculateTotal(), 2) . '</p>';
}

// Process form actions
if (isset($_POST['action'])) {
    switch ($_POST['action']) {
        case 'add':
            addToCart(intval($_POST['product_id']));
            break;
        case 'update':
            foreach ($_POST as $key => $value) {
                if (strpos($key, 'quantity-') === 0) {
                    $productId = intval(substr($key, 9));
                    updateCart($productId, $value);
                }
            }
            break;
        case 'remove':
            removeItemFromCart(intval($_POST['product_id']));
            break;
    }
}

// Example usage:
echo '<form method="post" action="">';
echo '<input type="hidden" name="action" value="add">';
echo '<select name="product_id">';
foreach ($products as $product) {
    echo '<option value="' . $product['id'] . '">' . $product['name'] . '</option>';
}
echo '</select>';
echo '<button type="submit">Add to Cart</button>';
echo '</form>';

// Display the cart
displayCart();

?>


<?php
session_start();
require 'db_connection.php';

// Database connection function
function getPDO() {
    try {
        $pdo = new PDO('mysql:host=localhost;dbname=shop', 'root', '');
        $pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
        return $pdo;
    } catch (PDOException $e) {
        die("Database connection failed: " . $e->getMessage());
    }
}

// Product class
class Product {
    public function __construct($id, $name, $description, $price, $stock) {
        $this->id = $id;
        $this->name = $name;
        $this->description = $description;
        $this->price = $price;
        $this->stock = $stock;
    }
}

// Display products
function displayProducts() {
    try {
        $pdo = getPDO();
        $stmt = $pdo->query("SELECT * FROM products");
        while ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {
            $product = new Product($row['id'], $row['name'], $row['description'], $row['price'], $row['stock']);
            echo '<div class="col-md-4">';
            echo '<img src="' . $product->image . '" alt="' . $product->name . '">';
            echo '<h3>' . $product->name . '</h3>';
            echo '<p>' . $product->description . '</p>';
            echo '<p>Price: $' . number_format($product->price, 2) . '</p>';
            echo '<button onclick="addToCart(' . $product->id . ')">Add to Cart</button>';
            echo '</div>';
        }
    } catch (PDOException $e) {
        die("Error displaying products: " . $e->getMessage());
    }
}

// Add item to cart
function addToCart($productId) {
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }

    if (isset($_SESSION['cart'][$productId])) {
        $_SESSION['cart'][$productId]['quantity']++;
    } else {
        try {
            $pdo = getPDO();
            $stmt = $pdo->prepare("SELECT * FROM products WHERE id = ?");
            $stmt->execute([$productId]);
            $row = $stmt->fetch(PDO::FETCH_ASSOC);
            
            if ($row) {
                $_SESSION['cart'][$productId] = array(
                    'id' => $row['id'],
                    'name' => $row['name'],
                    'price' => $row['price'],
                    'quantity' => 1
                );
            }
        } catch (PDOException $e) {
            die("Error adding to cart: " . $e->getMessage());
        }
    }
}

// Update cart quantity
function updateCart($productId, $quantity) {
    if (isset($_SESSION['cart'][$productId])) {
        $_SESSION['cart'][$productId]['quantity'] = $quantity;
    }
}

// Remove item from cart
function removeFromCart($productId) {
    unset($_SESSION['cart'][$productId]);
}

// Calculate total price
function calculateTotal() {
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += ($item['price'] * $item['quantity']);
    }
    return $total;
}

// Checkout functionality
if (isset($_POST['checkout'])) {
    if (!empty($_SESSION['cart']) && isset($_POST['name'], $_POST['email'], $_POST['address'])) {
        try {
            $pdo = getPDO();
            
            // Check stock availability
            foreach ($_SESSION['cart'] as $item) {
                $stmt = $pdo->prepare("SELECT stock FROM products WHERE id = ?");
                $stmt->execute([$item['id']]);
                $stock = $stmt->fetchColumn();

                if ($stock < $item['quantity']) {
                    die("Error: Not enough stock for product #" . $item['id']);
                }
            }

            // Deduct stock and save order
            foreach ($_SESSION['cart'] as $item) {
                $stmt = $pdo->prepare("UPDATE products SET stock = stock - ? WHERE id = ?");
                $stmt->execute([$item['quantity'], $item['id']]);

                $orderStmt = $pdo->prepare("INSERT INTO orders (user_name, user_email, product_id, quantity, total_price, purchase_date) VALUES (?, ?, ?, ?, ?, NOW())");
                $orderStmt->execute([$_POST['name'], $_POST['email'], $item['id'], $item['quantity'], ($item['price'] * $item['quantity'])]);
            }

            // Clear cart
            unset($_SESSION['cart']);
            header("Location: confirmation.php?order_id=" . $pdo->lastInsertId());
        } catch (PDOException $e) {
            die("Error processing order: " . $e->getMessage());
        }
    }
}

// Confirmation page
if (isset($_GET['order_id'])) {
    try {
        $pdo = getPDO();
        $stmt = $pdo->prepare("SELECT * FROM orders WHERE order_id = ?");
        $stmt->execute([$_GET['order_id']]);
        $order = $stmt->fetch(PDO::FETCH_ASSOC);
        
        echo "<h2>Thank you for your purchase!</h2>";
        echo "<p>Your order details:</p>";
        echo "<p>Name: " . $order['user_name'] . "</p>";
        echo "<p>Email: " . $order['user_email'] . "</p>";
        echo "<p>Product ID: " . $order['product_id'] . "</p>";
        echo "<p>Quantity: " . $order['quantity'] . "</p>";
        echo "<p>Total Price: $" . number_format($order['total_price'], 2) . "</p>";
    } catch (PDOException $e) {
        die("Error fetching order details: " . $e->getMessage());
    }
}

// Admin view orders
if (isset($_GET['admin'])) {
    try {
        $pdo = getPDO();
        $stmt = $pdo->query("SELECT * FROM orders");
        
        echo "<h2>Orders List</h2>";
        while ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {
            echo "<div class='order'>";
            echo "<p>Order ID: " . $row['order_id'] . "</p>";
            echo "<p>User Name: " . $row['user_name'] . "</p>";
            echo "<p>Email: " . $row['user_email'] . "</p>";
            echo "<p>Product ID: " . $row['product_id'] . "</p>";
            echo "<p>Quantity: " . $row['quantity'] . "</p>";
            echo "<p>Total Price: $" . number_format($row['total_price'], 2) . "</p>";
            echo "</div>";
        }
    } catch (PDOException $e) {
        die("Error fetching orders: " . $e->getMessage());
    }
}
?>


class Product {
    private $db;

    public function __construct($db_connection) {
        $this->db = $db_connection;
    }

    // Get all products from the database
    public function getAllProducts() {
        $query = "SELECT * FROM products";
        return $this->db->query($query);
    }

    // Get a single product by ID
    public function getProductById($id) {
        $stmt = $this->db->prepare("SELECT * FROM products WHERE id = ?");
        $stmt->execute([$id]);
        return $stmt->fetch();
    }
}


class Order {
    private $db;

    public function __construct($db_connection) {
        $this->db = $db_connection;
    }

    // Insert a new order into the database
    public function createOrder($customer_name, $customer_email, $total_amount) {
        $stmt = $this->db->prepare("INSERT INTO orders (customer_name, customer_email, total_amount, payment_status) VALUES (?, ?, ?, 'completed')");
        return $stmt->execute([$customer_name, $customer_email, $total_amount]);
    }

    // Insert order items
    public function createOrderItems($order_id, $product_id, $quantity, $price) {
        $stmt = $this->db->prepare("INSERT INTO order_items (order_id, product_id, quantity, price) VALUES (?, ?, ?, ?)");
        return $stmt->execute([$order_id, $product_id, $quantity, $price]);
    }

    // Get the last inserted order ID
    public function getLastOrderId() {
        return $this->db->lastInsertId();
    }
}


<?php
// Connect to your database
$db = new PDO('mysql:host=localhost;dbname=your_database', 'username', 'password');

// Initialize classes
$product = new Product($db);

// Get all products
$products = $product->getAllProducts();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <?php foreach ($products as $product): ?>
        <div class="product">
            <h2><?php echo $product['name']; ?></h2>
            <p><?php echo $product['description']; ?></p>
            <p>Price: <?php echo $product['price']; ?> USD</p>
            <form action="add_to_cart.php" method="post">
                <input type="hidden" name="id" value="<?php echo $product['id']; ?>">
                <input type="number" name="quantity" min="1" max="<?php echo $product['stock']; ?>" placeholder="Quantity">
                <button type="submit">Add to Cart</button>
            </form>
        </div>
    <?php endforeach; ?>
</body>
</html>


<?php
session_start();

// Connect to your database
$db = new PDO('mysql:host=localhost;dbname=your_database', 'username', 'password');

// Get product details
$product_id = $_POST['id'];
$quantity = $_POST['quantity'];

if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Check if the product exists in the cart
if (array_key_exists($product_id, $_SESSION['cart'])) {
    // Update quantity
    $current_quantity = $_SESSION['cart'][$product_id]['quantity'];
    $new_quantity = $current_quantity + $quantity;
    $_SESSION['cart'][$product_id]['quantity'] = $new_quantity;
} else {
    // Add new product to cart
    $product = new Product($db);
    $product_details = $product->getProductById($product_id);

    if ($product_details) {
        $_SESSION['cart'][$product_id] = array(
            'id' => $product_details['id'],
            'name' => $product_details['name'],
            'price' => $product_details['price'],
            'quantity' => $quantity,
            'stock' => $product_details['stock']
        );
    }
}

header("Location: cart.php");
exit();
?>


<?php
session_start();

// Connect to your database
$db = new PDO('mysql:host=localhost;dbname=your_database', 'username', 'password');
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <?php if (!empty($_SESSION['cart'])): ?>
        <h2>Your Cart</h2>
        <form action="checkout.php" method="post">
            <?php foreach ($_SESSION['cart'] as $product_id => $product): ?>
                <div class="cart-item">
                    <p><?php echo $product['name']; ?></p>
                    <p>Price: <?php echo $product['price']; ?> USD</p>
                    <input type="number" name="quantity[<?php echo $product['id']; ?>]" min="1" max="<?php echo $product['stock']; ?>" value="<?php echo $product['quantity']; ?>">
                    <a href="remove_from_cart.php?id=<?php echo $product['id']; ?>">Remove</a>
                </div>
            <?php endforeach; ?>
            <button type="submit">Checkout</button>
        </form>
    <?php else: ?>
        <p>Your cart is empty.</p>
    <?php endif; ?>
</body>
</html>


<?php
session_start();

// Get product ID from query string
$product_id = $_GET['id'];

if (isset($_SESSION['cart'][$product_id])) {
    unset($_SESSION['cart'][$product_id]);
}

header("Location: cart.php");
exit();
?>


<?php
session_start();

// Connect to your database
$db = new PDO('mysql:host=localhost;dbname=your_database', 'username', 'password');
$order = new Order($db);

// Get customer details from POST request
$customer_name = $_POST['name'];
$customer_email = $_POST['email'];

// Calculate total amount
$total_amount = 0;
foreach ($_SESSION['cart'] as $product_id => $product) {
    $total_amount += ($product['price'] * $product['quantity']);
}

// Create order
$order->createOrder($customer_name, $customer_email, $total_amount);
$last_order_id = $order->getLastOrderId();

// Insert order items
foreach ($_SESSION['cart'] as $product_id => $product) {
    $order->createOrderItems(
        $last_order_id,
        $product['id'],
        $product['quantity'],
        $product['price']
    );
}

// Clear cart
unset($_SESSION['cart']);

header("Location: thank_you.php?order_id=$last_order_id");
exit();
?>


<?php
session_start();

// Get order ID from query string
$order_id = $_GET['order_id'];
?>

<!DOCTYPE html>
<html>
<head>
    <title>Thank You</title>
</head>
<body>
    <h2>Thank you for your purchase!</h2>
    <p>Your order ID is <?php echo $order_id; ?>.</p>
    <p>We will send your order confirmation to the email address provided.</p>
</body>
</html>


<?php
session_start();

// Sample product data
$products = array(
    1 => array(
        'id' => 1,
        'name' => 'Laptop',
        'description' => 'HP Laptop with 8GB RAM and 500GB HDD',
        'price' => 699.99,
        'quantity' => 10
    ),
    2 => array(
        'id' => 2,
        'name' => 'Smartphone',
        'description' => 'Apple iPhone X',
        'price' => 999.99,
        'quantity' => 5
    ),
    3 => array(
        'id' => 3,
        'name' => 'Tablet',
        'description' => 'Samsung Galaxy Tab S6',
        'price' => 799.99,
        'quantity' => 8
    )
);

// Initialize cart if not exists in session
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to calculate total price
function calculateTotal($cart) {
    $total = 0;
    foreach ($cart as $item) {
        $total += $item['price'] * $item['quantity'];
    }
    return $total;
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Online Store</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>
    <!-- Navigation -->
    <nav class="navbar navbar-expand-lg navbar-dark bg-dark">
        <div class="container">
            <a class="navbar-brand" href="#">Online Store</a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav ms-auto">
                    <li class="nav-item">
                        <a class="nav-link" href="#">Products</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="#cart">Cart</a>
                    </li>
                </ul>
            </div>
        </div>
    </nav>

    <!-- Product Display -->
    <div class="container mt-4">
        <h2>Available Products</h2>
        <div class="row">
            <?php foreach ($products as $product): ?>
                <div class="col-md-4 mb-4">
                    <div class="card">
                        <img src="placeholder.jpg" class="card-img-top" alt="<?php echo $product['name']; ?>">
                        <div class="card-body">
                            <h5 class="card-title"><?php echo $product['name']; ?></h5>
                            <p class="card-text"><?php echo $product['description']; ?></p>
                            <p class="card-text">$<?php echo number_format($product['price'], 2); ?></p>
                            <?php if ($product['quantity'] > 0): ?>
                                <form action="" method="post">
                                    <input type="hidden" name="product_id" value="<?php echo $product['id']; ?>">
                                    <button type="submit" class="btn btn-primary">Add to Cart</button>
                                </form>
                            <?php else: ?>
                                <p class="text-danger">Out of Stock</p>
                            <?php endif; ?>
                        </div>
                    </div>
                </div>
            <?php endforeach; ?>
        </div>

        <!-- Shopping Cart -->
        <div id="cart" class="mt-5">
            <h2>Your Shopping Cart</h2>
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>Product Name</th>
                        <th>Description</th>
                        <th>Price</th>
                        <th>Quantity</th>
                        <th>Total</th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tbody>
                    <?php foreach ($_SESSION['cart'] as $item): ?>
                        <tr>
                            <td><?php echo $item['name']; ?></td>
                            <td><?php echo $item['description']; ?></td>
                            <td>$<?php echo number_format($item['price'], 2); ?></td>
                            <td><input type="number" min="1" value="<?php echo $item['quantity']; ?>"></td>
                            <td>$<?php echo number_format($item['price'] * $item['quantity'], 2); ?></td>
                            <td>
                                <form action="" method="post">
                                    <input type="hidden" name="remove_id" value="<?php echo $item['id']; ?>">
                                    <button type="submit" class="btn btn-danger">Remove</button>
                                </form>
                            </td>
                        </tr>
                    <?php endforeach; ?>
                </tbody>
            </table>
            <div class="float-end">
                <h4>Total: $<?php echo number_format(calculateTotal($_SESSION['cart']), 2); ?></h4>
                <a href="#checkout" class="btn btn-success">Checkout</a>
            </div>
        </div>

        <!-- Checkout Section -->
        <div id="checkout" class="mt-5">
            <?php
            if (!empty($_SESSION['cart'])) {
                // Process checkout here (e.g., payment processing, order confirmation)
                echo "<h2>Order Confirmation</h2>";
                echo "<p>Your order has been confirmed!</p>";
                echo "<a href='index.php' class='btn btn-primary'>Continue Shopping</a>";
            } else {
                echo "<h3>Your cart is empty.</h3>";
            }
            ?>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>

<?php
// Add product to cart
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    if (isset($_POST['product_id'])) {
        $productId = $_POST['product_id'];
        $product = $products[$productId];
        
        // Check if product is in stock and add to cart
        if ($product['quantity'] > 0) {
            if (!array_key_exists($productId, $_SESSION['cart'])) {
                $_SESSION['cart'][$productId] = array(
                    'id' => $product['id'],
                    'name' => $product['name'],
                    'description' => $product['description'],
                    'price' => $product['price'],
                    'quantity' => 1
                );
            } else {
                $_SESSION['cart'][$productId]['quantity']++;
            }
        }
    }

    // Remove product from cart
    if (isset($_POST['remove_id'])) {
        $removeId = $_POST['remove_id'];
        unset($_SESSION['cart'][$removeId]);
    }

    // Refresh the page to show changes
    ob_start();
    header("Location: " . $_SERVER['PHP_SELF']);
    exit();
}
?>


<?php
require 'db_connection.php';

// Fetch all products from database
$products = $conn->query("SELECT * FROM products");
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Product List</title>
</head>
<body>
    <h1>Available Products</h1>
    <?php while ($row = $products->fetch_assoc()): ?>
        <div style="border: 1px solid #ddd; padding: 10px; margin: 5px;">
            <h3><?php echo $row['name']; ?></h3>
            <p><?php echo $row['description']; ?></p>
            <p>Price: <?php echo "$" . number_format($row['price'], 2); ?></p>
            <a href="cart.php?action=add&id=<?php echo $row['id']; ?>">Add to Cart</a>
        </div>
    <?php endwhile; ?>
    <br><br>
    <a href="cart.php">View Cart</a>
</body>
</html>

<?php
// Close database connection
$conn->close();
?>


<?php
session_start();

require 'db_connection.php';

$action = isset($_GET['action']) ? $_GET['action'] : '';
$product_id = isset($_GET['id']) ? intval($_GET['id']) : 0;

if ($action == 'add') {
    // Add product to cart
    $product = $conn->query("SELECT * FROM products WHERE id = '$product_id'");
    if ($row = $product->fetch_assoc()) {
        $item = array(
            'id' => $row['id'],
            'name' => $row['name'],
            'price' => $row['price']
        );

        if (isset($_SESSION['cart'][$product_id])) {
            // Increment quantity
            $_SESSION['cart'][$product_id]['quantity']++;
        } else {
            // Add new item
            $_SESSION['cart'][$product_id] = array(
                'id' => $item['id'],
                'name' => $item['name'],
                'price' => $item['price'],
                'quantity' => 1
            );
        }
    }
}

if ($action == 'remove') {
    // Remove product from cart
    unset($_SESSION['cart'][$product_id]);
}

// Calculate total price
$total = 0;
foreach ($_SESSION['cart'] as $item) {
    $total += $item['price'] * $item['quantity'];
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Shopping Cart</title>
</head>
<body>
    <?php if (!empty($_SESSION['cart'])): ?>
        <h1>Your Shopping Cart</h1>
        <table border="1" style="width: 100%">
            <tr>
                <th>Product Name</th>
                <th>Price</th>
                <th>Quantity</th>
                <th>Total</th>
                <th>Action</th>
            </tr>
            <?php foreach ($_SESSION['cart'] as $key => $item): ?>
                <tr>
                    <td><?php echo $item['name']; ?></td>
                    <td><?php echo "$" . number_format($item['price'], 2); ?></td>
                    <td><?php echo $item['quantity']; ?></td>
                    <td><?php echo "$" . number_format($item['price'] * $item['quantity'], 2); ?></td>
                    <td><a href="cart.php?action=remove&id=<?php echo $key; ?>">Remove</a></td>
                </tr>
            <?php endforeach; ?>
        </table>
        <p>Total: <?php echo "$" . number_format($total, 2); ?></p>
        <form action="checkout.php" method="post">
            <input type="submit" value="Checkout">
        </form>
    <?php else: ?>
        <h3>Your cart is empty.</h3>
    <?php endif; ?>

    <br><br>
    <a href="index.php">Continue Shopping</a>
</body>
</html>

<?php
// Close database connection
$conn->close();
?>


<?php
session_start();

require 'db_connection.php';

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Validate input
    $name = trim($_POST['name']);
    $email = trim($_POST['email']);
    $address = trim($_POST['address']);
    $phone = trim($_POST['phone']);

    if (empty($name) || empty($email) || empty($address) || empty($phone)) {
        die("Please fill in all required fields.");
    }

    // Get cart items
    $cart = $_SESSION['cart'];
    foreach ($cart as $item) {
        // Insert order into database
        $order_id = uniqid();
        $sql = "INSERT INTO orders (id, user_name, email, address, phone, product_id, quantity, total_price)
                VALUES ('$order_id', '$name', '$email', '$address', '$phone', 
                        '" . $item['id'] . "', '" . $item['quantity'] . "', 
                        '" . ($item['price'] * $item['quantity']) . "')";
        
        if (!$conn->query($sql)) {
            die("Error: " . $conn->error);
        }
    }

    // Clear cart
    unset($_SESSION['cart']);

    // Redirect to thank you page
    header('Location: thank_you.php');
    exit();
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Checkout</title>
</head>
<body>
    <h1>Checkout Form</h1>
    <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
        <label for="name">Name:</label><br>
        <input type="text" id="name" name="name" required><br>

        <label for="email">Email:</label><br>
        <input type="email" id="email" name="email" required><br>

        <label for="address">Address:</label><br>
        <textarea id="address" name="address" required></textarea><br>

        <label for="phone">Phone:</label><br>
        <input type="tel" id="phone" name="phone" required><br>

        <input type="submit" value="Place Order">
    </form>
</body>
</html>

<?php
// Close database connection
$conn->close();
?>


<?php
session_start();

require 'db_connection.php';

?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Thank You</title>
</head>
<body>
    <h1>Thank You for Your Purchase!</h1>
    <p>Your order has been successfully placed.</p>
    <br><br>
    <a href="index.php">Continue Shopping</a>
</body>
</html>

<?php
// Close database connection
$conn->close();
?>


<?php
$host = 'localhost';
$user = 'root'; // Change to your MySQL username
$password = ''; // Change to your MySQL password
$db_name = 'purchase_system';

// Create connection
$conn = new mysqli($host, $user, $password, $db_name);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}
?>


<?php
session_start();
include('db_connection.php');

// Get all products from database
$sql = "SELECT * FROM products";
$result = $conn->query($sql);

if ($result->num_rows > 0) {
    while ($row = $result->fetch_assoc()) {
        echo "<div class='product'>";
        echo "<h3>" . $row['name'] . "</h3>";
        echo "<p>" . $row['description'] . "</p>";
        echo "<p>Price: $" . number_format($row['price'], 2) . "</p>";
        echo "<p>Quantity Available: " . $row['quantity'] . "</p>";
        echo "<form action='add_to_cart.php' method='post'>";
        echo "<input type='hidden' name='product_id' value='" . $row['id'] . "'>";
        echo "<input type='number' name='quantity' min='1' max='" . $row['quantity'] . "' value='1'>";
        echo "<button type='submit'>Add to Cart</button>";
        echo "</form>";
        echo "</div>";
    }
} else {
    echo "No products available.";
}
$conn->close();
?>


<?php
session_start();
include('db_connection.php');

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $product_id = $_POST['product_id'];
    $quantity = $_POST['quantity'];

    // Check if product exists in database
    $sql = "SELECT * FROM products WHERE id = $product_id";
    $result = $conn->query($sql);
    
    if ($result->num_rows == 1) {
        $row = $result->fetch_assoc();
        
        // Add or update cart session
        if (isset($_SESSION['cart'][$product_id])) {
            $_SESSION['cart'][$product_id]['quantity'] += $quantity;
        } else {
            $_SESSION['cart'][$product_id] = array(
                'name' => $row['name'],
                'price' => $row['price'],
                'quantity' => $quantity
            );
        }
        
        // Calculate subtotal
        $subtotal = 0;
        foreach ($_SESSION['cart'] as $item) {
            $subtotal += ($item['price'] * $item['quantity']);
        }
        $_SESSION['subtotal'] = $subtotal;
    }
    
    header('Location: cart.php');
}
$conn->close();
?>


<?php
session_start();
include('db_connection.php');

echo "<h1>Shopping Cart</h1>";
if (!empty($_SESSION['cart'])) {
    $subtotal = 0;
    foreach ($_SESSION['cart'] as $product_id => $item) {
        echo "<div class='cart-item'>";
        echo "<h3>" . $item['name'] . "</h3>";
        echo "<p>Price: $" . number_format($item['price'], 2) . "</p>";
        echo "<p>Quantity: " . $item['quantity'] . "</p>";
        echo "<form action='update_cart.php' method='post'>";
        echo "<input type='hidden' name='product_id' value='" . $product_id . "'>";
        echo "<input type='number' name='new_quantity' min='1' max='999' value='" . $item['quantity'] . "'>";
        echo "<button type='submit'>Update Quantity</button>";
        echo "</form>";
        echo "</div>";
        $subtotal += ($item['price'] * $item['quantity']);
    }
    echo "<h2>Subtotal: $" . number_format($subtotal, 2) . "</h2>";
} else {
    echo "Your cart is empty.";
}

echo "<a href='checkout.php'>Proceed to Checkout</a>";
$conn->close();
?>


<?php
session_start();

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $product_id = $_POST['product_id'];
    $new_quantity = $_POST['new_quantity'];

    if (isset($_SESSION['cart'][$product_id])) {
        $_SESSION['cart'][$product_id]['quantity'] = $new_quantity;
        
        // Calculate subtotal
        $subtotal = 0;
        foreach ($_SESSION['cart'] as $item) {
            $subtotal += ($item['price'] * $item['quantity']);
        }
        $_SESSION['subtotal'] = $subtotal;
    }
    
    header('Location: cart.php');
}
?>


<?php
session_start();

if (empty($_SESSION['cart'])) {
    header('Location: index.php');
}

echo "<h1>Checkout</h1>";
?>

<form action="process_order.php" method="post">
    <div class="checkout-form">
        <h2>Billing Information</h2>
        <label for="name">Name:</label>
        <input type="text" id="name" name="name" required>
        
        <label for="email">Email:</label>
        <input type="email" id="email" name="email" required>
        
        <label for="phone">Phone Number:</label>
        <input type="tel" id="phone" name="phone">
        
        <label for="address">Shipping Address:</label>
        <textarea id="address" name="address" required></textarea>
        
        <button type="submit">Place Order</button>
    </div>
</form>

<?php
// Display cart contents
if (!empty($_SESSION['cart'])) {
    $subtotal = 0;
    foreach ($_SESSION['cart'] as $product_id => $item) {
        echo "<div class='cart-item'>";
        echo "<h3>" . $item['name'] . "</h3>";
        echo "<p>Price: $" . number_format($item['price'], 2) . "</p>";
        echo "<p>Quantity: " . $item['quantity'] . "</p>";
        echo "</div>";
        $subtotal += ($item['price'] * $item['quantity']);
    }
    echo "<h2>Subtotal: $" . number_format($subtotal, 2) . "</h2>";
}
?>



<?php
session_start();
include('db_connection.php');

if (empty($_SESSION['cart'])) {
    header('Location: index.php');
}

// Get form data
$name = $_POST['name'];
$email = $_POST['email'];
$phone = $_POST['phone'];
$address = $_POST['address'];

foreach ($_SESSION['cart'] as $product_id => $item) {
    // Insert order into database
    $sql = "INSERT INTO orders (user_name, user_email, product_id, quantity, price, total_price)
            VALUES ('$name', '$email', $product_id, {$item['quantity']}, {$item['price']}, " . ($item['price'] * $item['quantity']) . ")";
    
    if ($conn->query($sql) === TRUE) {
        // Update product quantity
        $new_quantity = $item['quantity'];
        $update_sql = "UPDATE products SET quantity = quantity - $new_quantity WHERE id = $product_id";
        $conn->query($update_sql);
    }
}

// Clear cart
unset($_SESSION['cart']);
unset($_SESSION['subtotal']);

header('Location: thank_you.php');
$conn->close();
?>


<?php
session_start();

echo "<h1>Thank You for Your Order!</h1>";
echo "<p>Your order has been received successfully.</p>";
echo "<a href='index.php'>Continue Shopping</a>";

// Optional: Display order details here if needed
?>


<?php
$servername = "localhost";
$username = "root";
$password = "";
$dbname = "your_database_name";

$conn = new mysqli($servername, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}
?>


<?php
session_start();

// Sample product data
$products = array(
    array('id' => 1, 'name' => 'Product 1', 'price' => 29.99),
    array('id' => 2, 'name' => 'Product 2', 'price' => 14.99),
    array('id' => 3, 'name' => 'Product 3', 'price' => 39.99)
);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Products</title>
</head>
<body>
    <h1>Our Products</h1>
    
    <?php foreach ($products as $product): ?>
        <div class="product">
            <h2><?php echo $product['name']; ?></h2>
            <p>$<?php echo number_format($product['price'], 2); ?></p>
            <a href="add-to-cart.php?id=<?php echo $product['id']; ?>">Add to Cart</a>
        </div>
    <?php endforeach; ?>
    
    <a href="view-cart.php">View Cart</a>
</body>
</html>


<?php
session_start();

// Get product ID from URL
$product_id = isset($_GET['id']) ? intval($_GET['id']) : 0;

if ($product_id > 0) {
    // Initialize cart if not exists
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }

    // Check if product is already in cart
    $found = false;
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['id'] == $product_id) {
            $item['quantity']++;
            $found = true;
            break;
        }
    }

    // Add new product to cart if not found
    if (!$found) {
        array_push($_SESSION['cart'], array(
            'id' => $product_id,
            'quantity' => 1
        ));
    }
}

// Redirect back to products page
header("Location: products.php");
exit();


<?php
session_start();

// Sample product data for demonstration
$products = array(
    array('id' => 1, 'name' => 'Product 1', 'price' => 29.99),
    array('id' => 2, 'name' => 'Product 2', 'price' => 14.99),
    array('id' => 3, 'name' => 'Product 3', 'price' => 39.99)
);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <h1>Your Shopping Cart</h1>
    
    <?php if (!isset($_SESSION['cart']) || count($_SESSION['cart']) == 0): ?>
        <p>Your cart is empty.</p>
    <?php else: ?>
        <table border="1">
            <tr>
                <th>Product Name</th>
                <th>Price</th>
                <th>Quantity</th>
                <th>Total</th>
                <th>Action</th>
            </tr>
            
            <?php
            $total = 0;
            foreach ($_SESSION['cart'] as $item) {
                $product = array_filter($products, function ($p) use ($item) {
                    return $p['id'] == $item['id'];
                });
                $product = reset($product);
                
                $subtotal = $product['price'] * $item['quantity'];
                $total += $subtotal;
            ?>
            
            <tr>
                <td><?php echo $product['name']; ?></td>
                <td>$<?php echo number_format($product['price'], 2); ?></td>
                <td>
                    <form action="update-cart.php" method="post">
                        <input type="hidden" name="id" value="<?php echo $item['id']; ?>">
                        <input type="number" name="quantity" min="1" max="99" value="<?php echo $item['quantity']; ?>" style="width: 50px;">
                        <button type="submit">Update</button>
                    </form>
                </td>
                <td>$<?php echo number_format($subtotal, 2); ?></td>
                <td><a href="remove-from-cart.php?id=<?php echo $item['id']; ?>">Remove</a></td>
            </tr>
            
            <?php } ?>
        </table>
        
        <h2>Total: $<?php echo number_format($total, 2); ?></h2>
        <form action="checkout.php" method="post">
            <input type="submit" value="Proceed to Checkout">
        </form>
    <?php endif; ?>

    <br>
    <a href="products.php">Continue Shopping</a>
</body>
</html>


<?php
session_start();

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Get product ID and quantity
    $product_id = isset($_POST['id']) ? intval($_POST['id']) : 0;
    $quantity = isset($_POST['quantity']) ? max(1, min(99, intval($_POST['quantity']))) : 1;

    if ($product_id > 0) {
        // Update cart
        foreach ($_SESSION['cart'] as &$item) {
            if ($item['id'] == $product_id) {
                $item['quantity'] = $quantity;
                break;
            }
        }
    }

    // Redirect back to cart page
    header("Location: view-cart.php");
    exit();
}


<?php
session_start();

// Get product ID from URL
$product_id = isset($_GET['id']) ? intval($_GET['id']) : 0;

if ($product_id > 0) {
    // Remove item from cart
    $_SESSION['cart'] = array_filter($_SESSION['cart'], function ($item) use ($product_id) {
        return $item['id'] != $product_id;
    });
}

// Redirect back to cart page
header("Location: view-cart.php");
exit();


<?php
session_start();

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Simulate order processing
    $order_id = time(); // Use timestamp as order ID

    // Save order details to database here
    
    // Clear cart after purchase
    unset($_SESSION['cart']);
    
    header("Location: thank-you.php?order_id=$order_id");
    exit();
}

// If cart is empty, redirect back
if (!isset($_SESSION['cart']) || count($_SESSION['cart']) == 0) {
    header("Location: view-cart.php");
    exit();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
</head>
<body>
    <h1> Checkout Form </h1>

    <form action="checkout.php" method="post">
        <label> Full Name: </label><br>
        <input type="text" name="name" required><br><br>

        <label> Email: </label><br>
        <input type="email" name="email" required><br><br>

        <label> Address: </label><br>
        <textarea name="address" rows="3" cols="30" required></textarea><br><br>

        <label> Payment Method: </label><br>
        <select name="payment_method">
            <option value="credit">Credit Card</option>
            <option value="debit">Debit Card</option>
            <option value="paypal">PayPal</option>
        </select><br><br>

        <!-- Add more payment fields here if needed -->

        <input type="submit" value="Place Order">
    </form>

    <a href="view-cart.php">Back to Cart</a>
</body>
</html>


<?php
session_start();

$order_id = isset($_GET['order_id']) ? $_GET['order_id'] : '';
?>

<!DOCTYPE html>
<html>
<head>
    <title>Thank You for Your Order!</title>
</head>
<body>
    <h1>Thank You for Your Order!</h1>
    
    <?php if ($order_id): ?>
        <p>Your order ID is: <?php echo $order_id; ?></p>
    <?php else: ?>
        <p>We've received your order successfully.</p>
    <?php endif; ?>

    <p>We will process your order and ship it as soon as possible.</p>
    
    <a href="products.php">Continue Shopping</a>
</body>
</html>


<?php
// Database connection (you should configure your database details)
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'purchase_system';

$conn = mysqli_connect($host, $username, $password, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Product catalog (you can replace this with your database query)
$products = array(
    1 => array('name' => 'Product A', 'price' => 29.99),
    2 => array('name' => 'Product B', 'price' => 49.99),
    3 => array('name' => 'Product C', 'price' => 79.99)
);

// Check if purchase is initiated
if (isset($_GET['purchase'])) {
    $productId = intval($_GET['purchase']);
    
    // Validate product ID
    if (!array_key_exists($productId, $products)) {
        die("Invalid product ID");
    }
    
    // Calculate total price (you can add taxes, discounts here)
    $totalPrice = $products[$productId]['price'];
    
    // Here you would typically connect to a payment gateway or handle the purchase logic
    // For this example, we'll just display the confirmation
    
    echo "<h2>Purchase Confirmation</h2>";
    echo "You are about to purchase: " . $products[$productId]['name'] . "<br>";
    echo "Total Price: $" . number_format($totalPrice, 2);
    
} else {
    // Display product catalog
    echo "<h1>Product Catalog</h1>";
    echo "<ul>";
    foreach ($products as $id => $product) {
        echo "<li>" . $product['name'] . " - $" . number_format($product['price'], 2) .
             " <a href='?purchase=" . $id . "'>Purchase Now</a></li>";
    }
    echo "</ul>";
}

// Close database connection
mysqli_close($conn);
?>


session_start();

// Cart initialization
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add product to cart
if (isset($_GET['add_to_cart'])) {
    $productId = intval($_GET['add_to_cart']);
    if (array_key_exists($productId, $products)) {
        if (!isset($_SESSION['cart'][$productId])) {
            $_SESSION['cart'][$productId] = array(
                'name' => $products[$productId]['name'],
                'price' => $products[$productId]['price'],
                'quantity' => 1
            );
        }
    }
}

// View cart contents
if (isset($_GET['view_cart'])) {
    echo "<h2>Shopping Cart</h2>";
    echo "<ul>";
    foreach ($_SESSION['cart'] as $id => $item) {
        echo "<li>" . $item['name'] . " - $" . number_format($item['price'], 2) .
             " x" . $item['quantity'] . "</li>";
    }
    echo "</ul>";
}

// Continue with the previous code...


<?php
// Database configuration
$host = 'localhost';
$dbname = 'purchase_system';
$username = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$products", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}

// Start session
session_start();

// Product data (you can replace this with your database query)
$products = array(
    array(
        'id' => 1,
        'name' => 'Laptop',
        'price' => 999.99,
        'description' => 'High performance laptop'
    ),
    array(
        'id' => 2,
        'name' => 'Smartphone',
        'price' => 699.99,
        'description' => 'Latest smartphone model'
    ),
    // Add more products as needed
);

// Function to add product to cart
function addToCart($productId) {
    global $products;
    
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }
    
    foreach ($products as $product) {
        if ($product['id'] == $productId) {
            if (array_key_exists($productId, $_SESSION['cart'])) {
                $_SESSION['cart'][$productId]['quantity']++;
            } else {
                $_SESSION['cart'][$productId] = array(
                    'name' => $product['name'],
                    'price' => $product['price'],
                    'quantity' => 1
                );
            }
        }
    }
}

// Function to get cart contents
function getCart() {
    if (isset($_SESSION['cart'])) {
        return $_SESSION['cart'];
    } else {
        return array();
    }
}

// Function to process order
function processOrder($cart, $userDetails) {
    global $conn;
    
    // Insert order into database
    try {
        $stmt = $conn->prepare("INSERT INTO orders (user_name, user_email, product_details, total_price, purchase_date)
                              VALUES (:name, :email, :products, :total, NOW())");
        
        $productList = array();
        $totalPrice = 0;
        
        foreach ($cart as $productId => $item) {
            $productList[] = $item['name'] . ' x' . $item['quantity'];
            $totalPrice += $item['price'] * $item['quantity'];
        }
        
        $stmt->bindParam(':name', $userDetails['name']);
        $stmt->bindParam(':email', $userDetails['email']);
        $stmt->bindParam(':products', implode(', ', $productList));
        $stmt->bindParam(':total', $totalPrice);
        
        $stmt->execute();
        
        // Clear cart
        unset($_SESSION['cart']);
        
        return true;
    } catch(PDOException $e) {
        echo "Error: " . $e->getMessage();
        return false;
    }
}

// Function to display cart contents
function displayCart() {
    $cart = getCart();
    if (!empty($cart)) {
        echo '<h3>Your Cart:</h3>';
        echo '<ul>';
        foreach ($cart as $productId => $item) {
            echo "<li>{$item['name']} x{$item['quantity']}";
        }
        echo '</ul>';
        
        // Calculate total price
        $total = 0;
        foreach ($cart as $item) {
            $total += $item['price'] * $item['quantity'];
        }
        echo "Total: $" . number_format($total, 2);
    } else {
        echo '<p>Your cart is empty.</p>';
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Online Store</title>
    <style>
        body { font-family: Arial, sans-serif; margin: 0; padding: 20px; }
        .product-list { display: flex; flex-wrap: wrap; gap: 20px; }
        .product { border: 1px solid #ddd; padding: 15px; width: 300px; text-align: center; }
        .cart { margin-top: 20px; }
    </style>
</head>
<body>
    <h1>Welcome to Our Store</h1>

    <!-- Display products -->
    <div class="product-list">
        <?php foreach ($products as $product): ?>
            <div class="product">
                <h3><?php echo $product['name']; ?></h3>
                <p><?php echo $product['description']; ?></p>
                <p>Price: $<?php echo number_format($product['price'], 2); ?></p>
                <form action="" method="post">
                    <input type="hidden" name="productId" value="<?php echo $product['id']; ?>">
                    <button type="submit" name="add_to_cart">Add to Cart</button>
                </form>
            </div>
        <?php endforeach; ?>
    </div>

    <!-- Display cart -->
    <div class="cart">
        <?php 
        // Check if add to cart button was clicked
        if (isset($_POST['add_to_cart'])) {
            addToCart($_POST['productId']);
        }
        
        displayCart();
        ?>

        <!-- Checkout form -->
        <?php if (!empty(getCart())): ?>
            <h3>Checkout</h3>
            <form action="" method="post">
                <input type="text" name="name" placeholder="Your Name" required><br><br>
                <input type="email" name="email" placeholder="Email Address" required><br><br>
                <input type="text" name="address" placeholder="Shipping Address" required><br><br>
                <button type="submit" name="checkout">Complete Purchase</button>
            </form>

            <!-- Process checkout -->
            <?php 
            if (isset($_POST['checkout'])) {
                $userDetails = array(
                    'name' => $_POST['name'],
                    'email' => $_POST['email']
                );
                
                processOrder(getCart(), $userDetails);
                echo '<p>Thank you for your purchase!</p>';
            }
            ?>
        <?php endif; ?>

        <!-- Display cart contents -->
        <h3>Your Cart:</h3>
        <?php displayCart(); ?>
    </div>
</body>
</html>

<!-- Create an orders table in your database with the following columns:
- id (INT, AUTO_INCREMENT)
- user_name (VARCHAR(255))
- user_email (VARCHAR(255))
- product_details (TEXT)
- total_price (DECIMAL(10,2))
- purchase_date (DATETIME)
-->


<?php
// Connect to database
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "myDB";

$conn = mysqli_connect($servername, $username, $password, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Fetch products from database
$sql = "SELECT * FROM products";
$result = mysqli_query($conn, $sql);

if (mysqli_num_rows($result) > 0) {
    while ($row = mysqli_fetch_assoc($result)) {
        echo "<div class='product'>";
        echo "<h2>" . $row['name'] . "</h2>";
        echo "<p>Price: $" . $row['price'] . "</p>";
        echo "<form action='add_to_cart.php' method='post'>";
        echo "<input type='hidden' name='id' value='" . $row['id'] . "'>";
        echo "<input type='number' name='quantity' min='1' max='" . $row['stock'] . "' placeholder='Quantity'>";
        echo "<button type='submit'>Add to Cart</button>";
        echo "</form>";
        echo "</div>";
    }
} else {
    echo "No products found.";
}

mysqli_close($conn);
?>


<?php
session_start();

if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Display cart contents
echo "<h1>Your Cart</h1>";
echo "<table>";
echo "<tr><th>Product</th><th>Quantity</th><th>Total</th><th>Action</th></tr>";

foreach ($_SESSION['cart'] as $item) {
    echo "<tr>";
    echo "<td>" . $item['name'] . "</td>";
    echo "<td><input type='number' name='quantity[" . $item['id'] . "]' value='" . $item['quantity'] . "' min='1' max='" . $item['stock'] . "'></td>";
    echo "<td>$" . number_format($item['price'] * $item['quantity'], 2) . "</td>";
    echo "<td><a href='remove_from_cart.php?id=" . $item['id'] . "'>Remove</a></td>";
    echo "</tr>";
}

echo "</table>";

// Update cart quantities
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    foreach ($_POST['quantity'] as $id => $qty) {
        $_SESSION['cart'][$id]['quantity'] = $qty;
    }
}

// Proceed to checkout
echo "<a href='checkout.php'>Proceed to Checkout</a>";
?>


<?php
session_start();

if (!isset($_SESSION['cart']) || count($_SESSION['cart']) == 0) {
    echo "Your cart is empty.";
    exit();
}

// Display order summary
echo "<h1>Checkout</h1>";
echo "<table>";
echo "<tr><th>Product</th><th>Quantity</th><th>Total</th></tr>";

$total = 0;

foreach ($_SESSION['cart'] as $item) {
    $total += $item['price'] * $item['quantity'];
    echo "<tr>";
    echo "<td>" . $item['name'] . "</td>";
    echo "<td>" . $item['quantity'] . "</td>";
    echo "<td>$" . number_format($item['price'] * $item['quantity'], 2) . "</td>";
    echo "</tr>";
}

echo "<tr><td colspan='2'><strong>Grand Total:</strong></td><td><strong>$" . number_format($total, 2) . "</strong></td></tr>";
echo "</table>";

// Process payment
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Here you would typically integrate with a payment gateway
    // For this example, we'll just simulate the payment process
    $order_id = time(); // Generate unique order ID
    
    foreach ($_SESSION['cart'] as $item) {
        // Update inventory and record sale
        // This is a simplified example - in real application, you should use transactions to ensure data consistency
        mysqli_query($conn, "UPDATE products SET stock=stock-" . $item['quantity'] . " WHERE id=" . $item['id']);
        mysqli_query($conn, "INSERT INTO orders (order_id, product_id, quantity, price) VALUES (" . $order_id . ", " . $item['id'] . ", " . $item['quantity'] . ", " . $item['price'] . ")");
    }
    
    // Clear cart
    $_SESSION['cart'] = array();
    
    // Redirect to confirmation page
    header("Location: purchase_confirmation.php?order_id=" . $order_id);
}
?>


<?php
session_start();

// Get order ID from query string
$order_id = isset($_GET['order_id']) ? $_GET['order_id'] : '';

if ($order_id == '') {
    echo "Invalid order ID.";
    exit();
}

// Fetch order details from database
$conn = mysqli_connect($servername, $username, $password, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

$sql = "SELECT * FROM orders WHERE order_id=" . $order_id;
$result = mysqli_query($conn, $sql);

if (mysqli_num_rows($result) > 0) {
    echo "<h1>Purchase Confirmation</h1>";
    echo "<p>Your order has been processed successfully.</p>";
    echo "<table>";
    echo "<tr><th>Product</th><th>Quantity</th><th>Total</th></tr>";
    
    while ($row = mysqli_fetch_assoc($result)) {
        $product_name = mysqli_query($conn, "SELECT name FROM products WHERE id=" . $row['product_id']);
        $product_name = mysqli_fetch_assoc($product_name)['name'];
        
        echo "<tr>";
        echo "<td>" . $product_name . "</td>";
        echo "<td>" . $row['quantity'] . "</td>";
        echo "<td>$" . number_format($row['price'], 2) . "</td>";
        echo "</tr>";
    }
    
    echo "</table>";
} else {
    echo "Order not found.";
}

mysqli_close($conn);
?>


<?php
session_start();

if (isset($_GET['id'])) {
    // Remove item from cart
    foreach ($_SESSION['cart'] as $key => $item) {
        if ($item['id'] == $_GET['id']) {
            unset($_SESSION['cart'][$key]);
        }
    }
}

// Redirect back to cart page
header("Location: cart.php");
?>


<?php
session_start();

if (isset($_POST['id']) && isset($_POST['quantity'])) {
    $id = $_POST['id'];
    $quantity = $_POST['quantity'];
    
    // Validate input
    if (!is_numeric($quantity) || $quantity < 1) {
        die("Invalid quantity.");
    }
    
    // Check if product exists and has enough stock
    $conn = mysqli_connect($servername, $username, $password, $dbname);
    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
    }
    
    $sql = "SELECT * FROM products WHERE id=" . $id;
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) == 0) {
        die("Product not found.");
    }
    
    $product = mysqli_fetch_assoc($result);
    
    if ($quantity > $product['stock']) {
        die("Not enough stock available.");
    }
    
    // Add to cart
    $_SESSION['cart'][$id] = array(
        'id' => $id,
        'name' => $product['name'],
        'price' => $product['price'],
        'quantity' => $quantity,
        'stock' => $product['stock']
    );
    
    mysqli_close($conn);
}

// Redirect back to products page
header("Location: products.php");
?>


<?php
include('config.php');

// Fetch products from database
$sql = "SELECT * FROM products";
$result = $conn->query($sql);

if ($result->num_rows > 0) {
    while ($row = $result->fetch_assoc()) {
        echo '
            <div class="product">
                <h2>' . $row['name'] . '</h2>
                <p>' . $row['description'] . '</p>
                <p>Price: $' . number_format($row['price'], 2) . '</p>
                <img src="' . $row['image_url'] . '" alt="' . $row['name'] . '">
                <form action="addtocart.php" method="post">
                    <input type="hidden" name="id" value="' . $row['id'] . '">
                    <button type="submit">Add to Cart</button>
                </form>
            </div>';
    }
} else {
    echo "No products found.";
}
$conn->close();
?>


<?php
session_start();

include('config.php');

if (isset($_POST['id'])) {
    $productId = $_POST['id'];
    
    // Check if product exists in database
    $sql = "SELECT * FROM products WHERE id = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("i", $productId);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        $product = $result->fetch_assoc();
        
        // Add to cart or update quantity
        if (isset($_SESSION['cart'][$productId])) {
            $_SESSION['cart'][$productId]['quantity']++;
        } else {
            $_SESSION['cart'][$productId] = [
                'id' => $productId,
                'name' => $product['name'],
                'price' => $product['price'],
                'quantity' => 1
            ];
        }
    }
    
    header("Location: cart.php");
    exit();
}
$conn->close();
?>


<?php
session_start();

include('config.php');

// Calculate total price and quantity
$totalPrice = 0;
$totalQuantity = 0;

if (isset($_SESSION['cart'])) {
    foreach ($_SESSION['cart'] as $item) {
        $totalPrice += ($item['price'] * $item['quantity']);
        $totalQuantity += $item['quantity'];
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <?php if (!empty($_SESSION['cart'])): ?>
        <h2>Your Cart</h2>
        <table>
            <tr>
                <th>Product Name</th>
                <th>Price</th>
                <th>Quantity</th>
                <th>Total</th>
                <th>Action</th>
            </tr>
            <?php foreach ($_SESSION['cart'] as $item): ?>
                <tr>
                    <td><?php echo $item['name']; ?></td>
                    <td>$<?php echo number_format($item['price'], 2); ?></td>
                    <td>
                        <form action="updatecart.php" method="post">
                            <input type="hidden" name="id" value="<?php echo $item['id']; ?>">
                            <input type="number" name="quantity" min="1" value="<?php echo $item['quantity']; ?>" style="width: 50px;">
                            <button type="submit">Update</button>
                        </form>
                    </td>
                    <td>$<?php echo number_format($item['price'] * $item['quantity'], 2); ?></td>
                    <td>
                        <form action="removefromcart.php" method="post">
                            <input type="hidden" name="id" value="<?php echo $item['id']; ?>">
                            <button type="submit">Remove</button>
                        </form>
                    </td>
                </tr>
            <?php endforeach; ?>
        </table>
        <p>Total: $<?php echo number_format($totalPrice, 2); ?></p>
        <a href="checkout.php">Proceed to Checkout</a>
    <?php else: ?>
        <p>Your cart is empty.</p>
        <a href="index.php">Continue Shopping</a>
    <?php endif; ?>
</body>
</html>


<?php
session_start();

include('config.php');

if (empty($_SESSION['cart'])) {
    header("Location: cart.php");
    exit();
}

// Include Stripe PHP library
require_once 'vendor/autoload.php';
\Stripe\Stripe::setApiKey('your_stripe_secret_key');

?>

<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
    <!-- Include Stripe JavaScript -->
    <script src="https://js.stripe.com/v3/"></script>
</head>
<body>
    <?php if (!empty($_SESSION['cart'])): ?>
        <h2>Payment Details</h2>
        <form action="processpayment.php" method="post" id="checkout-form">
            <!-- Payment form fields -->
            <input type="hidden" name="amount" value="<?php echo $totalPrice * 100; ?>">
            
            <div class="form-row">
                <label for="card-element">Card Number</label>
                <div id="card-element"></div>
            </div>

            <button type="submit">Pay Now</button>
        </form>

        <script>
            const stripe = Stripe('your_stripe_publishable_key');
            const elements = stripe.elements();
            const cardElement = elements.create('card');
            
            cardElement.mount('#card-element');

            document.getElementById('checkout-form').addEventListener('submit', async (e) => {
                e.preventDefault();
                
                const { error, paymentMethod } = await stripe.createPaymentMethod({
                    type: 'card',
                    card: cardElement
                });

                if (error) {
                    console.error(error);
                } else {
                    document.getElementById('checkout-form').appendChild(
                        input = document.createElement('input')
                    );
                    input.type = 'hidden';
                    input.name = 'payment_method_id';
                    input.value = paymentMethod.id;
                    
                    document.getElementById('checkout-form').submit();
                }
            });
        </script>
    <?php else: ?>
        <p>Your cart is empty.</p>
        <a href="index.php">Continue Shopping</a>
    <?php endif; ?>
</body>
</html>


<?php
session_start();

include('config.php');
require_once 'vendor/autoload.php';

if (!isset($_POST['amount']) || !isset($_POST['payment_method_id'])) {
    die("Invalid request");
}

try {
    \Stripe\Charge::create([
        'amount' => $_POST['amount'],
        'currency' => 'usd',
        'payment_method' => $_POST['payment_method_id'],
        'description' => 'Product Purchase'
    ]);
    
    // Clear cart
    unset($_SESSION['cart']);
    
    echo "<h2>Payment Successful!</h2>";
    echo "<p>Thank you for your purchase!</p>";
    echo "<a href='index.php'>Continue Shopping</a>";
} catch (\Stripe\Exception\CardException $e) {
    echo "Error: " . $e->getMessage();
}
?>


<?php
session_start();

if (isset($_POST['id']) && isset($_POST['quantity'])) {
    $productId = $_POST['id'];
    $newQuantity = intval($_POST['quantity']);
    
    if ($newQuantity < 1) {
        $newQuantity = 1;
    }
    
    if (isset($_SESSION['cart'][$productId])) {
        $_SESSION['cart'][$productId]['quantity'] = $newQuantity;
    }
}
header("Location: cart.php");
exit();
?>


<?php
session_start();

if (isset($_POST['id'])) {
    $productId = $_POST['id'];
    
    if (isset($_SESSION['cart'][$productId])) {
        unset($_SESSION['cart'][$productId]);
    }
}
header("Location: cart.php");
exit();
?>


<?php
session_start();
?>


<?php
function get_products() {
    // This is a simplified product list; in real application, you would fetch this from a database
    $products = array(
        array('id' => '1', 'name' => 'Product 1', 'price' => 29.99, 'quantity' => 5),
        array('id' => '2', 'name' => 'Product 2', 'price' => 49.99, 'quantity' => 3),
        array('id' => '3', 'name' => 'Product 3', 'price' => 19.99, 'quantity' => 10)
    );
    return $products;
}

function add_to_cart($product_id, $quantity = 1) {
    global $db;
    
    // Check if the product exists
    $products = get_products();
    $product = array_filter($products, function($p) use ($product_id) {
        return $p['id'] == $product_id;
    });
    $product = reset($product);
    
    if (empty($product)) {
        return false;
    }
    
    // Check if the product is already in the cart
    if (!isset($_SESSION['cart'][$product_id])) {
        $_SESSION['cart'][$product_id] = array(
            'id' => $product_id,
            'name' => $product['name'],
            'price' => $product['price'],
            'quantity' => 0
        );
    }
    
    // Update the quantity
    $new_quantity = $_SESSION['cart'][$product_id]['quantity'] + $quantity;
    if ($new_quantity > $product['quantity']) {
        return false; // Not enough stock
    }
    
    $_SESSION['cart'][$product_id]['quantity'] = $new_quantity;
    return true;
}

function get_cart_items() {
    return isset($_SESSION['cart']) ? $_SESSION['cart'] : array();
}

function remove_item_from_cart($product_id) {
    if (isset($_SESSION['cart'][$product_id])) {
        unset($_SESSION['cart'][$product_id]);
        return true;
    }
    return false;
}
?>


<?php
include('functions.php');
$products = get_products();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Product List</title>
</head>
<body>
    <?php foreach ($products as $product): ?>
        <div style="border: 1px solid #ddd; padding: 10px; margin: 5px;">
            <h3><?php echo $product['name']; ?></h3>
            <p>Price: <?php echo '$' . number_format($product['price'], 2); ?></p>
            <form action="add_to_cart.php" method="post">
                <input type="hidden" name="product_id" value="<?php echo $product['id']; ?>">
                <input type="text" name="quantity" placeholder="Quantity" value="1">
                <button type="submit">Add to Cart</button>
            </form>
        </div>
    <?php endforeach; ?>
    
    <a href="view_cart.php">View Cart</a>
</body>
</html>


<?php
include('functions.php');
cart_session();

if (isset($_POST['product_id']) && isset($_POST['quantity'])) {
    $product_id = $_POST['product_id'];
    $quantity = intval($_POST['quantity']);
    
    if ($quantity < 1) {
        $quantity = 1;
    }
    
    add_to_cart($product_id, $quantity);
}

header("Location: index.php");
exit();
?>


<?php
include('functions.php');
cart_session();
$cart_items = get_cart_items();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <?php if (!empty($cart_items)): ?>
        <h2>Your Shopping Cart</h2>
        <?php foreach ($cart_items as $item): ?>
            <div style="border: 1px solid #ddd; padding: 10px; margin: 5px;">
                <h3><?php echo $item['name']; ?></h3>
                <p>Price: <?php echo '$' . number_format($item['price'], 2); ?></p>
                <p>Quantity: <?php echo $item['quantity']; ?></p>
                <a href="remove_item.php?id=<?php echo $item['id']; ?>">Remove</a>
            </div>
        <?php endforeach; ?>
        
        <h3>Total: <?php echo '$' . number_format(calculate_total(), 2); ?></h3>
        <form action="checkout.php" method="post">
            <button type="submit">Checkout</button>
        </form>
    <?php else: ?>
        <p>Your cart is empty.</p>
    <?php endif; ?>
    
    <a href="index.php">Continue Shopping</a>
</body>
</html>


<?php
include('functions.php');
cart_session();

if (isset($_GET['id'])) {
    $product_id = $_GET['id'];
    remove_item_from_cart($product_id);
}

header("Location: view_cart.php");
exit();
?>


<?php
include('functions.php');
cart_session();

if (empty(get_cart_items())) {
    header("Location: index.php");
    exit();
}

// Process the order here
// This is a simplified example; in real application, you would:
// - Validate user input
// - Check if cart is not empty
// - Check quantities against stock
// - Calculate total amount
// - Save order details to database
// - Deduct quantities from products
// - Clear the cart

header("Location: thank_you.php");
exit();
?>


<?php
include('functions.php');
cart_session();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Thank You</title>
</head>
<body>
    <h2>Thank you for your order!</h2>
    <p>Your order has been successfully processed.</p>
    <a href="index.php">Continue Shopping</a>
</body>
</html>


<?php
class Database {
    private $host = 'localhost';
    private $db_name = 'your_database_name';
    private $username = 'root';
    private $password = '';
    public $conn;

    // Connect to the database
    function __construct() {
        try {
            $this->conn = new PDO("mysql:host=" . $this->host . ";dbname=" . $this->db_name, $this->username, $this->password);
            $this->conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
        } catch (PDOException $e) {
            echo "Connection failed: " . $e->getMessage();
        }
    }

    // Execute query
    public function executeQuery($query, $params = array()) {
        try {
            $stmt = $this->conn->prepare($query);
            $stmt->execute($params);
            return $stmt;
        } catch (PDOException $e) {
            die("Error executing query: " . $e->getMessage());
        }
    }

    // Fetch all rows
    public function fetchAll($query, $params = array()) {
        try {
            $stmt = $this->conn->prepare($query);
            $stmt->execute($params);
            return $stmt->fetchAll(PDO::FETCH_ASSOC);
        } catch (PDOException $e) {
            die("Error fetching data: " . $e->getMessage());
        }
    }
}
?>


<?php
session_start();
include 'database.php';

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $email = $_POST['email'];
    $password = $_POST['password'];

    try {
        $db = new Database();
        $stmt = $db->executeQuery("SELECT * FROM users WHERE email = ?", array($email));
        $user = $stmt->fetch(PDO::FETCH_ASSOC);

        if ($user) {
            if (password_verify($password, $user['password_hash'])) {
                $_SESSION['user_id'] = $user['id'];
                $_SESSION['user_name'] = $user['name'];
                header("Location: products.php");
                exit();
            } else {
                echo "Invalid password!";
            }
        } else {
            echo "User not found!";
        }
    } catch (PDOException $e) {
        die("Error: " . $e->getMessage());
    }
}
?>


<?php
session_start();
include 'database.php';

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $name = $_POST['name'];
    $email = $_POST['email'];
    $password = password_hash($_POST['password'], PASSWORD_DEFAULT);

    try {
        $db = new Database();
        $stmt = $db->executeQuery("INSERT INTO users (name, email, password_hash) VALUES (?, ?, ?)", array($name, $email, $password));
        echo "Registration successful! Please login.";
        header("Location: login.php");
        exit();
    } catch (PDOException $e) {
        die("Error registering user: " . $e->getMessage());
    }
}
?>


<?php
session_start();
include 'database.php';

$db = new Database();
$products = $db->fetchAll("SELECT * FROM products");

if (empty($products)) {
    die("No products available.");
}
?>
<!DOCTYPE html>
<html>
<head>
    <title>Products</title>
</head>
<body>
    <h1>Available Products</h1>
    <?php foreach ($products as $product): ?>
        <div>
            <h2><?php echo $product['name']; ?></h2>
            <p><?php echo $product['description']; ?></p>
            <p>Price: $<?php echo number_format($product['price'], 2); ?></p>
            <form action="add_to_cart.php" method="post">
                <input type="hidden" name="product_id" value="<?php echo $product['id']; ?>">
                <input type="number" name="quantity" min="1" max="<?php echo $product['stock']; ?>" required>
                <button type="submit">Add to Cart</button>
            </form>
        </div>
    <?php endforeach; ?>
    <a href="cart.php">View Cart</a> | <a href="logout.php">Logout</a>
</body>
</html>


<?php
session_start();

if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

$product_id = intval($_POST['product_id']);
$quantity = intval($_POST['quantity']);

// Check if product exists in database
$db = new Database();
$stmt = $db->executeQuery("SELECT stock FROM products WHERE id = ?", array($product_id));
$product = $stmt->fetch(PDO::FETCH_ASSOC);

if (!$product) {
    die("Product not found!");
}

if ($quantity > $product['stock']) {
    die("Not enough stock available.");
}

// Add to cart
$_SESSION['cart'][$product_id] = $quantity;

header("Location: products.php");
exit();
?>


<?php
session_start();
include 'database.php';

if (!isset($_SESSION['user_id'])) {
    die("Please login to make a purchase.");
}

$cart = $_SESSION['cart'];

try {
    $db = new Database();

    foreach ($cart as $product_id => $quantity) {
        // Check product stock
        $stmt = $db->executeQuery("SELECT name, price, stock FROM products WHERE id = ?", array($product_id));
        $product = $stmt->fetch(PDO::FETCH_ASSOC);

        if (!$product) {
            die("Product not found.");
        }

        if ($quantity > $product['stock']) {
            die("Not enough stock available for " . $product['name']);
        }

        // Update product stock
        $db->executeQuery("UPDATE products SET stock = stock - ? WHERE id = ?", array($quantity, $product_id));

        // Insert order into orders table
        $total_price = $product['price'] * $quantity;
        $db->executeQuery("INSERT INTO orders (user_id, product_id, quantity, total_price) VALUES (?, ?, ?, ?)", 
            array($_SESSION['user_id'], $product_id, $quantity, $total_price));
    }

    // Clear cart
    unset($_SESSION['cart']);
    echo "Purchase successful!";
} catch (PDOException $e) {
    die("Error processing order: " . $e->getMessage());
}
?>


<?php
session_start();
include 'database.php';

if (!isset($_SESSION['user_id'])) {
    die("Please login to view your orders.");
}

$db = new Database();
$orders = $db->fetchAll("
    SELECT o.id, p.name as product_name, o.quantity, o.total_price, o.purchase_date 
    FROM orders o
    JOIN products p ON o.product_id = p.id
    WHERE o.user_id = ?
", array($_SESSION['user_id']));

if (empty($orders)) {
    echo "No orders found.";
} else {
    foreach ($orders as $order) {
        echo "<div>";
        echo "<h3>Order #" . $order['id'] . "</h3>";
        echo "<p>Product: " . $order['product_name'] . "</p>";
        echo "<p>Quantity: " . $order['quantity'] . "</p>";
        echo "<p>Total Price: $" . number_format($order['total_price'], 2) . "</p>";
        echo "<p>Purchased on: " . $order['purchase_date'] . "</p>";
        echo "</div>";
    }
}
?>


<?php
session_start();
unset($_SESSION['user_id']);
unset($_SESSION['cart']);
header("Location: login.php");
exit();
?>


<?php
session_start();
require_once 'db_connection.php';

class PurchaseHandler {
    private $conn;

    public function __construct($host, $username, $password, $dbname) {
        $this->conn = new mysqli($host, $username, $password, $dbname);
        if ($this->conn->connect_error) {
            die("Connection failed: " . $this->conn->connect_error);
        }
    }

    // Display products
    public function getProducts() {
        $sql = "SELECT * FROM products";
        $result = $this->conn->query($sql);
        
        if ($result->num_rows > 0) {
            return $result;
        } else {
            return false;
        }
    }

    // Add to cart functionality
    public function addToCart($product_id, $quantity) {
        if (!isset($_SESSION['cart'])) {
            $_SESSION['cart'] = array();
        }
        
        if (isset($_SESSION['cart'][$product_id])) {
            $_SESSION['cart'][$product_id] += $quantity;
        } else {
            $_SESSION['cart'][$product_id] = $quantity;
        }
    }

    // Update cart quantity
    public function updateCart($product_id, $new_quantity) {
        if ($new_quantity > 0) {
            $_SESSION['cart'][$product_id] = $new_quantity;
        } else {
            unset($_SESSION['cart'][$product_id]);
        }
    }

    // Checkout functionality
    public function checkout($user_info, $payment_method) {
        if (empty($_SESSION['cart'])) {
            return false; // Empty cart
        }

        // Calculate total amount
        $total_amount = 0;
        foreach ($_SESSION['cart'] as $product_id => $quantity) {
            $sql = "SELECT price FROM products WHERE id = ?";
            $stmt = $this->conn->prepare($sql);
            $stmt->bind_param("i", $product_id);
            $stmt->execute();
            $result = $stmt->get_result();

            if ($row = $result->fetch_assoc()) {
                $total_amount += $row['price'] * $quantity;
            }
        }

        // Insert order into database
        $sql = "INSERT INTO orders (user_name, email, phone, total_amount, payment_method)
                VALUES (?, ?, ?, ?, ?)";
        $stmt = $this->conn->prepare($sql);
        $stmt->bind_param("sssd", $user_info['name'], $user_info['email'], $user_info['phone'], $total_amount, $payment_method);

        if ($stmt->execute()) {
            // Clear cart
            unset($_SESSION['cart']);
            return true;
        } else {
            return false;
        }
    }

    // Get order details by ID
    public function getOrderDetails($order_id) {
        $sql = "SELECT * FROM orders WHERE id = ?";
        $stmt = $this->conn->prepare($sql);
        $stmt->bind_param("i", $order_id);
        $stmt->execute();
        return $stmt->get_result()->fetch_assoc();
    }
}

// Initialize purchase handler
$purchaseHandler = new PurchaseHandler(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);

// Display products
$products = $purchaseHandler->getProducts();

?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Purchase System</title>
    <style>
        body { font-family: Arial, sans-serif; }
        .product-grid { display: grid; grid-template-columns: repeat(3, 1fr); gap: 20px; padding: 20px; }
        .product-card { border: 1px solid #ddd; padding: 15px; text-align: center; }
        button { padding: 8px 16px; background-color: #4CAF50; color: white; border: none; cursor: pointer; }
    </style>
</head>
<body>
    <h2>Products</h2>
    <div class="product-grid">
        <?php while ($row = $products->fetch_assoc()): ?>
            <div class="product-card">
                <h3><?php echo $row['name']; ?></h3>
                <p>Price: $<?php echo number_format($row['price'], 2); ?></p>
                <p>Description: <?php echo $row['description']; ?></p>
                <form action="cart.php" method="post">
                    <input type="hidden" name="product_id" value="<?php echo $row['id']; ?>">
                    <button type="submit">Add to Cart</button>
                </form>
            </div>
        <?php endwhile; ?>
    </div>

    <h2>Your Cart</h2>
    <?php if (!empty($_SESSION['cart'])): ?>
        <table border="1">
            <tr><th>Product ID</th><th>Quantity</th><th>Action</th></tr>
            <?php foreach ($_SESSION['cart'] as $product_id => $quantity): ?>
                <tr>
                    <td><?php echo $product_id; ?></td>
                    <td><?php echo $quantity; ?></td>
                    <td>
                        <form action="update_cart.php" method="post">
                            <input type="hidden" name="product_id" value="<?php echo $product_id; ?>">
                            <input type="number" name="new_quantity" min="1" value="<?php echo $quantity; ?>">
                            <button type="submit">Update</button>
                        </form>
                    </td>
                </tr>
            <?php endforeach; ?>
        </table>
    <?php else: ?>
        <p>Your cart is empty.</p>
    <?php endif; ?>

    <h2>Checkout</h2>
    <form action="checkout.php" method="post">
        <input type="text" name="name" placeholder="Name" required><br>
        <input type="email" name="email" placeholder="Email" required><br>
        <input type="tel" name="phone" placeholder="Phone Number" required><br>
        <select name="payment_method">
            <option value="credit_card">Credit Card</option>
            <option value="paypal">PayPal</option>
        </select><br>
        <button type="submit">Place Order</button>
    </form>

    <?php
    // Check if payment was successful
    if (isset($_GET['order_id'])) {
        $order = $purchaseHandler->getOrderDetails($_GET['order_id']);
        echo "<h2>Thank you for your purchase!</h2>";
        echo "<p>Your order details:</p>";
        echo "<p>Name: " . $order['user_name'] . "</p>";
        echo "<p>Email: " . $order['email'] . "</p>";
        echo "<p>Total Amount: $" . number_format($order['total_amount'], 2) . "</p>";
    }
    ?>
</body>
</html>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'shopping_db';
$username = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

// Product class
class Product {
    private $conn;

    public function __construct($db_connection) {
        $this->conn = $db_connection;
    }

    public function getAllProducts() {
        try {
            $stmt = $this->conn->query("SELECT * FROM products");
            return $stmt->fetchAll(PDO::FETCH_ASSOC);
        } catch (PDOException $e) {
            die("Error: " . $e->getMessage());
        }
    }

    public function getProductById($id) {
        try {
            $stmt = $this->conn->prepare("SELECT * FROM products WHERE id = ?");
            $stmt->execute([$id]);
            return $stmt->fetch(PDO::FETCH_ASSOC);
        } catch (PDOException $e) {
            die("Error: " . $e->getMessage());
        }
    }
}

// Order class
class Order {
    private $conn;

    public function __construct($db_connection) {
        $this->conn = $db_connection;
    }

    public function createOrder($products, $user_id, $total_amount) {
        try {
            $order_date = date('Y-m-d H:i:s');
            $status = 'pending';

            // Insert order
            $stmt = $this->conn->prepare("INSERT INTO orders (user_id, total_amount, status, order_date) 
                                        VALUES (?, ?, ?, ?)");
            $stmt->execute([$user_id, $total_amount, $status, $order_date]);

            $order_id = $this->conn->lastInsertId();

            // Insert order details
            foreach ($products as $product) {
                $stmt = $this->conn->prepare("INSERT INTO order_details (order_id, product_id, quantity, price)
                                            VALUES (?, ?, ?, ?)");
                $stmt->execute([$order_id, $product['id'], $product['quantity'], $product['price']]);
            }

            return $order_id;
        } catch (PDOException $e) {
            die("Error: " . $e->getMessage());
        }
    }

    public function updateOrderStatus($order_id, $status) {
        try {
            $stmt = $this->conn->prepare("UPDATE orders SET status = ? WHERE id = ?");
            $stmt->execute([$status, $order_id]);
        } catch (PDOException $e) {
            die("Error: " . $e->getMessage());
        }
    }

    public function calculateTotal($cart) {
        $total = 0;
        foreach ($cart as $item) {
            $total += $item['price'] * $item['quantity'];
        }
        return $total;
    }

    public function processPayment($amount, $card_info) {
        // Payment processing logic here
        // For this example, we'll just simulate payment success
        return true;
    }
}

// Usage example

$product = new Product($conn);
$products = $product->getAllProducts();

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    if (isset($_POST['action'])) {
        switch ($_POST['action']) {
            case 'add_to_cart':
                // Add product to cart
                break;
            case 'checkout':
                // Process checkout
                break;
            case 'place_order':
                $order = new Order($conn);
                $cart = $_SESSION['cart'];
                $total_amount = $order->calculateTotal($cart);

                if ($order->processPayment($total_amount, $_POST)) {
                    $user_id = 1; // Get from session or authentication
                    $order_id = $order->createOrder($cart, $user_id, $total_amount);
                    $order->updateOrderStatus($order_id, 'completed');

                    unset($_SESSION['cart']);
                    header("Location: thank_you.php");
                }
                break;
        }
    }
}

// Display products
foreach ($products as $product) {
    echo "<div class='product'>";
    echo "<h3>{$product['name']}</h3>";
    echo "<p>Price: \${$product['price']}</p>";
    echo "<form method='post' action='index.php'>";
    echo "<input type='hidden' name='action' value='add_to_cart'>";
    echo "<input type='hidden' name='product_id' value='{$product['id']}'>";
    echo "<button type='submit'>Add to Cart</button>";
    echo "</form>";
    echo "</div>";
}
?>


<?php
// Connect to the database
$connection = mysqli_connect("localhost", "username", "password", "database_name");
if (!$connection) {
    die("Connection failed: " . mysqli_connect_error());
}

// Fetch products from the database
$sql = "SELECT * FROM products";
$result = mysqli_query($connection, $sql);

// Display products
echo "<h2>Available Products</h2>";
while ($row = mysqli_fetch_assoc($result)) {
    echo "<div class='product'>";
    echo "<h3>" . $row['name'] . "</h3>";
    echo "<p>Price: $" . $row['price'] . "</p>";
    echo "<form action='add_to_cart.php' method='post'>";
    echo "<input type='hidden' name='product_id' value='" . $row['id'] . "'>";
    echo "<input type='number' name='quantity' min='1' max='10' placeholder='Quantity'>";
    echo "<button type='submit'>Add to Cart</button>";
    echo "</form>";
    echo "</div>";
}
?>


<?php
session_start();

// Check if the cart exists in session, initialize if not
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Get product ID and quantity from form
$product_id = $_POST['product_id'];
$quantity = $_POST['quantity'];

// Add to cart
$_SESSION['cart'][$product_id] = $quantity;

// Redirect back to products page
header("Location: products.php");
exit();
?>


<?php
session_start();

if (empty($_SESSION['cart'])) {
    echo "Your cart is empty. Please add some products.";
} else {
    // Connect to database
    $connection = mysqli_connect("localhost", "username", "password", "database_name");
    if (!$connection) {
        die("Connection failed: " . mysqli_connect_error());
    }

    // Calculate total price
    $total = 0;
    foreach ($_SESSION['cart'] as $product_id => $quantity) {
        $sql = "SELECT * FROM products WHERE id = ?";
        $stmt = mysqli_prepare($connection, $sql);
        mysqli_stmt_bind_param($stmt, "i", $product_id);
        mysqli_stmt_execute($stmt);
        $result = mysqli_stmt_get_result($stmt);
        $row = mysqli_fetch_assoc($result);

        $total += ($row['price'] * $quantity);
    }

    // Display checkout form
    echo "<h2>Checkout</h2>";
    echo "<form action='process_payment.php' method='post'>";
    echo "<label for='name'>Name:</label><br>";
    echo "<input type='text' id='name' name='name'><br><br>";
    echo "<label for='email'>Email:</label><br>";
    echo "<input type='email' id='email' name='email'><br><br>";
    echo "<label for='card_number'>Card Number:</label><br>";
    echo "<input type='text' id='card_number' name='card_number'><br><br>";
    echo "<label for='cvv'>CVV:</label><br>";
    echo "<input type='text' id='cvv' name='cvv'><br><br>";
    echo "<label for='total'>Total Amount: $" . $total . "</label><br><br>";
    echo "<button type='submit'>Complete Purchase</button>";
    echo "</form>";
}
?>


<?php
session_start();

// Validate input data
if (empty($_POST['name']) || empty($_POST['email']) || empty($_POST['card_number']) || empty($_POST['cvv'])) {
    die("All fields are required!");
}

// Connect to database
$connection = mysqli_connect("localhost", "username", "password", "database_name");
if (!$connection) {
    die("Connection failed: " . mysqli_connect_error());
}

try {
    // Start transaction
    mysqli_begin_transaction($connection);

    // Insert order into orders table
    $sql = "INSERT INTO orders (name, email, total_amount) VALUES (?, ?, ?)";
    $stmt = mysqli_prepare($connection, $sql);
    mysqli_stmt_bind_param($stmt, "sss", $_POST['name'], $_POST['email'], $_POST['total']);
    mysqli_stmt_execute($stmt);
    $order_id = mysqli_insert_id($connection);

    // Insert order items into order_items table
    foreach ($_SESSION['cart'] as $product_id => $quantity) {
        $sql = "SELECT * FROM products WHERE id = ?";
        $stmt = mysqli_prepare($connection, $sql);
        mysqli_stmt_bind_param($stmt, "i", $product_id);
        mysqli_stmt_execute($stmt);
        $result = mysqli_stmt_get_result($stmt);
        $row = mysqli_fetch_assoc($result);

        $sql = "INSERT INTO order_items (order_id, product_id, quantity) VALUES (?, ?, ?)";
        $stmt = mysqli_prepare($connection, $sql);
        mysqli_stmt_bind_param($stmt, "iii", $order_id, $product_id, $quantity);
        mysqli_stmt_execute($stmt);

        // Update stock in products table
        $new_stock = $row['stock'] - $quantity;
        if ($new_stock < 0) {
            throw new Exception("Not enough stock for product: " . $row['name']);
        }
        $sql = "UPDATE products SET stock = ? WHERE id = ?";
        $stmt = mysqli_prepare($connection, $sql);
        mysqli_stmt_bind_param($stmt, "ii", $new_stock, $product_id);
        mysqli_stmt_execute($stmt);
    }

    // Commit transaction
    mysqli_commit($connection);

    // Clear cart and display success message
    unset($_SESSION['cart']);
    echo "Purchase completed successfully!";
} catch (Exception $e) {
    // Rollback transaction on error
    mysqli_rollback($connection);
    die("Error: " . $e->getMessage());
}

// Close database connection
mysqli_close($connection);
?>


<?php
session_start();

// Products array (could be fetched from a database in real application)
$products = [
    1 => ['name' => 'Laptop', 'price' => 999.99, 'image' => 'laptop.jpg'],
    2 => ['name' => 'Smartphone', 'price' => 699.99, 'image' => 'smartphone.jpg'],
    3 => ['name' => 'Tablet', 'price' => 299.99, 'image' => 'tablet.jpg']
];

// Cart initialization
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = [];
}

// Add to cart functionality
if (isset($_GET['action']) && $_GET['action'] == 'add') {
    $productId = intval($_GET['product_id']);
    if (!array_key_exists($productId, $_SESSION['cart'])) {
        $_SESSION['cart'][$productId] = 1;
    } else {
        $_SESSION['cart'][$productId]++;
    }
}

// Remove from cart functionality
if (isset($_GET['action']) && $_GET['action'] == 'remove') {
    $productId = intval($_GET['product_id']);
    if (array_key_exists($productId, $_SESSION['cart'])) {
        unset($_SESSION['cart'][$productId]);
    }
}

// Cart quantity update functionality
if (isset($_POST['update_cart'])) {
    foreach ($_POST['quantity'] as $productId => $quantity) {
        if ($quantity == 0) {
            unset($_SESSION['cart'][$productId]);
        } else {
            $_SESSION['cart'][$productId] = intval($quantity);
        }
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
    <style>
        .product-list {
            margin: 20px;
        }
        .product-item {
            border: 1px solid #ddd;
            padding: 10px;
            margin-bottom: 20px;
        }
        .cart-total {
            font-size: 24px;
            font-weight: bold;
            margin-top: 20px;
        }
    </style>
</head>
<body>
    <h1>Product List</h1>
    
    <?php if (!empty($products)): ?>
        <div class="product-list">
            <?php foreach ($products as $id => $product): ?>
                <div class="product-item">
                    <img src="<?php echo $product['image']; ?>" alt="<?php echo $product['name']; ?>" style="width: 100px;">
                    <h3><?php echo $product['name']; ?></h3>
                    <p>Price: $<?php echo number_format($product['price'], 2); ?></p>
                    <?php if (isset($_SESSION['cart'][$id])): ?>
                        <form method="post" action="?action=remove&product_id=<?php echo $id; ?>">
                            <input type="submit" value="Remove from Cart">
                        </form>
                    <?php else: ?>
                        <a href="?action=add&product_id=<?php echo $id; ?>">Add to Cart</a>
                    <?php endif; ?>
                </div>
            <?php endforeach; ?>
        </div>
    <?php endif; ?>

    <?php if (!empty($_SESSION['cart'])): ?>
        <h2>Your Cart</h2>
        <form method="post" action="?update_cart">
            <table border="1">
                <tr>
                    <th>Product</th>
                    <th>Quantity</th>
                    <th>Total</th>
                </tr>
                <?php $total = 0; ?>
                <?php foreach ($_SESSION['cart'] as $productId => $quantity): ?>
                    <?php $product = $products[$productId]; ?>
                    <tr>
                        <td><?php echo $product['name']; ?></td>
                        <td><input type="number" name="quantity[<?php echo $productId; ?>]" value="<?php echo $quantity; ?>"></td>
                        <td>$<?php echo number_format($product['price'] * $quantity, 2); ?></td>
                    </tr>
                    <?php $total += $product['price'] * $quantity; ?>
                <?php endforeach; ?>
            </table>
            <div class="cart-total">Total: $<?php echo number_format($total, 2); ?></div>
            <input type="submit" value="Update Cart">
        </form>

        <!-- Checkout Form -->
        <h3>Proceed to Checkout</h3>
        <form action="process_order.php" method="post">
            <table>
                <tr>
                    <th>Name:</th>
                    <td><input type="text" name="name" required></td>
                </tr>
                <tr>
                    <th>Email:</th>
                    <td><input type="email" name="email" required></td>
                </tr>
                <tr>
                    <th>Shipping Address:</th>
                    <td><textarea name="address" rows="3" required></textarea></td>
                </tr>
                <tr>
                    <th>Payment Method:</th>
                    <td>
                        <select name="payment_method">
                            <option value="credit_card">Credit Card</option>
                            <option value="debit_card">Debit Card</option>
                            <option value="paypal">PayPal</option>
                        </select>
                    </td>
                </tr>
            </table>
            <input type="hidden" name="cart_total" value="<?php echo $total; ?>">
            <input type="submit" value="Place Order">
        </form>
    <?php else: ?>
        <p>Your cart is empty!</p>
    <?php endif; ?>

    <a href="?action=view_cart">View Cart</a>
</body>
</html>

<?php
// process_order.php (Separate file)
session_start();

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $name = $_POST['name'];
    $email = $_POST['email'];
    $address = $_POST['address'];
    $payment_method = $_POST['payment_method'];
    $cart_total = $_POST['cart_total'];

    // Validate input data
    if (empty($name) || empty($email) || empty($address)) {
        die("Please fill in all required fields.");
    }

    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        die("Invalid email format.");
    }

    // Process the payment (simulated)
    $order_status = "successful"; // In real application, integrate with payment gateway

    if ($order_status == "successful") {
        // Clear cart
        unset($_SESSION['cart']);

        // Display success message
        echo "<h2>Thank you for your order!</h2>";
        echo "<p>Your order has been processed successfully.</p>";
        echo "<p>Total amount: $" . number_format($cart_total, 2) . "</p>";
    } else {
        echo "Payment failed. Please try again.";
    }
}
?>


<?php
class Product {
    private $id;
    private $name;
    private $price;
    private $description;
    private $quantity;

    public function __construct($id, $name, $price, $description, $quantity) {
        $this->id = $id;
        $this->name = $name;
        $this->price = $price;
        $this->description = $description;
        $this->quantity = $quantity;
    }

    public function getId() { return $this->id; }
    public function getName() { return $this->name; }
    public function getPrice() { return $this->price; }
    public function getDescription() { return $this->description; }
    public function getQuantity() { return $this->quantity; }

    public function setQuantity($quantity) {
        $this->quantity = $quantity;
    }
}
?>


<?php
class Cart {
    private $products;

    public function __construct() {
        $this->products = array();
    }

    public function addToCart($product, $quantity) {
        if ($this->isProductInCart($product)) {
            $this->updateQuantity($product, $quantity);
        } else {
            $this->products[$product->getId()] = array(
                'product' => $product,
                'quantity' => $quantity
            );
        }
    }

    public function isProductInCart($product) {
        return isset($this->products[$product->getId()]);
    }

    public function updateQuantity($product, $quantity) {
        if ($this->isProductInCart($product)) {
            $this->products[$product->getId()]['quantity'] = $quantity;
        }
    }

    public function removeProduct($productId) {
        unset($this->products[$productId]);
    }

    public function getProducts() {
        return $this->products;
    }

    public function calculateTotal() {
        $total = 0.0;
        foreach ($this->products as $productData) {
            $total += $productData['product']->getPrice() * $productData['quantity'];
        }
        return $total;
    }
}
?>


<?php
class Database {
    private static $instance = null;

    public static function getInstance() {
        if (self::$instance === null) {
            self::$instance = new PDO('mysql:host=localhost;dbname=shop', 'root', '');
        }
        return self::$instance;
    }

    public static function getAllProducts() {
        $query = "SELECT * FROM products";
        $stmt = self::getInstance()->prepare($query);
        $stmt->execute();
        return $stmt->fetchAll(PDO::FETCH_ASSOC);
    }

    public static function createOrder($userId, $totalAmount) {
        $query = "INSERT INTO orders (user_id, total_amount, order_date)
                  VALUES (?, ?, NOW())";
        $stmt = self::getInstance()->prepare($query);
        $stmt->execute(array($userId, $totalAmount));
        return self::getLastInsertId();
    }

    public static function getLastInsertId() {
        return self::getInstance()->lastInsertId();
    }
}
?>


<?php
session_start();

require_once 'Product.php';
require_once 'Cart.php';

$cart = new Cart();
if (isset($_SESSION['cart'])) {
    $cart->products = $_SESSION['cart'];
}

// Add to cart
if (isset($_POST['add_to_cart'])) {
    $productId = $_POST['product_id'];
    $quantity = $_POST['quantity'];

    // Fetch product from database
    $query = "SELECT * FROM products WHERE id = ?";
    $stmt = Database::getInstance()->prepare($query);
    $stmt->execute(array($productId));
    $productData = $stmt->fetch(PDO::FETCH_ASSOC);

    if ($productData) {
        $product = new Product(
            $productData['id'],
            $productData['name'],
            $productData['price'],
            $productData['description'],
            $productData['quantity']
        );
        $cart->addToCart($product, $quantity);
        $_SESSION['cart'] = $cart->getProducts();
    }
}

// Remove from cart
if (isset($_GET['remove'])) {
    $productId = $_GET['remove'];
    $cart->removeProduct($productId);
    $_SESSION['cart'] = $cart->getProducts();
}

// Update quantity
if (isset($_POST['update_quantity'])) {
    $productId = $_POST['product_id'];
    $quantity = $_POST['quantity'];

    foreach ($cart->getProducts() as $id => $productData) {
        if ($id == $productId) {
            $cart->updateQuantity($productData['product'], $quantity);
        }
    }
    $_SESSION['cart'] = $cart->getProducts();
}

// Checkout
if (isset($_POST['checkout'])) {
    // Validate user input
    $name = trim($_POST['name']);
    $email = trim($_POST['email']);
    $address = trim($_POST['address']);
    $paymentMethod = $_POST['payment_method'];

    if ($name && $email && $address && $paymentMethod) {
        // Create order in database
        $totalAmount = $cart->calculateTotal();
        $orderId = Database::createOrder(1, $totalAmount); // Assuming user ID is 1

        // Clear cart
        unset($_SESSION['cart']);
        header("Location: thank_you.php?order_id=$orderId");
    }
}
?>


<?php
session_start();

if (isset($_GET['order_id'])) {
    $orderId = $_GET['order_id'];
} else {
    die('No order ID provided');
}

// Fetch order details from database
$query = "SELECT * FROM orders WHERE id = ?";
$stmt = Database::getInstance()->prepare($query);
$stmt->execute(array($orderId));
$orderData = $stmt->fetch(PDO::FETCH_ASSOC);

if (!$orderData) {
    die('Invalid order ID');
}
?>
<!DOCTYPE html>
<html>
<head>
    <title>Thank You</title>
</head>
<body>
    <h1>Thank You for Your Order!</h1>
    <p>Your order has been received successfully.</p>
    <p>Order ID: <?php echo $orderData['id']; ?></p>
    <p>Total Amount: $<?php echo number_format($orderData['total_amount'], 2); ?></p>
</body>
</html>


<?php
// Connect to the database
$host = "localhost";
$user = "root";
$password = "";
$dbname = "my_store";

$conn = new mysqli($host, $user, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Query to get all products
$sql = "SELECT * FROM products";
$result = $conn->query($sql);

?>

<!DOCTYPE html>
<html>
<head>
    <title>Product Catalog</title>
</head>
<body>
    <?php if ($result->num_rows > 0) : ?>
        <table border="1">
            <tr>
                <th>Name</th>
                <th>Description</th>
                <th>Price</th>
                <th>Quantity</th>
                <th>Action</th>
            </tr>
            <?php while ($row = $result->fetch_assoc()) : ?>
                <tr>
                    <td><?php echo $row["name"]; ?></td>
                    <td><?php echo $row["description"]; ?></td>
                    <td>$<?php echo number_format($row["price"], 2); ?></td>
                    <td><?php echo $row["quantity"]; ?></td>
                    <td><a href="add_to_cart.php?id=<?php echo $row["id"]; ?>">Add to Cart</a></td>
                </tr>
            <?php endwhile; ?>
        </table>
    <?php else : ?>
        <p>No products available.</p>
    <?php endif; ?>

    <br>
    <a href="cart.php">View Cart</a>
</body>
</html>

<?php
$conn->close();
?>


<?php
session_start();

if (!isset($_GET['id'])) {
    header("Location: catalog.php");
    exit();
}

// Connect to database
$host = "localhost";
$user = "root";
$password = "";
$dbname = "my_store";

$conn = new mysqli($host, $user, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

$product_id = $_GET['id'];

// Fetch product details
$sql = "SELECT * FROM products WHERE id=?";
$stmt = $conn->prepare($sql);
$stmt->bind_param('i', $product_id);
$stmt->execute();
$result = $stmt->get_result();

if ($result->num_rows > 0) {
    $product = $result->fetch_assoc();
    
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }
    
    // Check if product is already in cart
    $found = false;
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['id'] == $product_id) {
            $item['quantity']++;
            $found = true;
            break;
        }
    }
    
    if (!$found) {
        array_push($_SESSION['cart'], array(
            'id' => $product_id,
            'name' => $product['name'],
            'price' => $product['price'],
            'quantity' => 1
        ));
    }
}

$stmt->close();
$conn->close();

header("Location: cart.php");
exit();
?>


<?php
session_start();

// Connect to database
$host = "localhost";
$user = "root";
$password = "";
$dbname = "my_store";

$conn = new mysqli($host, $user, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <?php if (isset($_SESSION['cart']) && count($_SESSION['cart']) > 0) : ?>
        <table border="1">
            <tr>
                <th>Name</th>
                <th>Price</th>
                <th>Quantity</th>
                <th>Total</th>
                <th>Action</th>
            </tr>
            <?php
            $total = 0;
            foreach ($_SESSION['cart'] as $item) :
                $total += ($item['price'] * $item['quantity']);
                ?>
                <tr>
                    <td><?php echo $item['name']; ?></td>
                    <td>$<?php echo number_format($item['price'], 2); ?></td>
                    <td><?php echo $item['quantity']; ?></td>
                    <td>$<?php echo number_format(($item['price'] * $item['quantity']), 2); ?></td>
                    <td><a href="remove_from_cart.php?id=<?php echo $item['id']; ?>">Remove</a></td>
                </tr>
            <?php endforeach; ?>
        </table>
        
        <p>Total: $<?php echo number_format($total, 2); ?></p>
        <br>
        <a href="checkout.php">Checkout</a> | 
        <a href="catalog.php">Continue Shopping</a>
    <?php else : ?>
        <p>Your cart is empty.</p>
        <a href="catalog.php">View Catalog</a>
    <?php endif; ?>

</body>
</html>

<?php
$conn->close();
?>


<?php
session_start();

if (!isset($_GET['id'])) {
    header("Location: cart.php");
    exit();
}

$product_id = $_GET['id'];

if (isset($_SESSION['cart'])) {
    foreach ($_SESSION['cart'] as $key => $item) {
        if ($item['id'] == $product_id) {
            unset($_SESSION['cart'][$key]);
            break;
        }
    }
    // Re-index the array
    $_SESSION['cart'] = array_values($_SESSION['cart']);
}

header("Location: cart.php");
exit();
?>


<?php
session_start();

if (!isset($_SESSION['cart']) || count($_SESSION['cart']) == 0) {
    header("Location: catalog.php");
    exit();
}

// Connect to database
$host = "localhost";
$user = "root";
$password = "";
$dbname = "my_store";

$conn = new mysqli($host, $user, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
</head>
<body>
    <h1>Payment Information</h1>
    
    <?php
    if (isset($_POST['submit'])) {
        // Validate and process the payment information
        $name = $_POST['name'];
        $email = $_POST['email'];
        $address = $_POST['address'];
        
        foreach ($_SESSION['cart'] as $item) {
            // Insert each item into orders table
            $sql = "INSERT INTO orders (user_name, user_email, product_name, quantity, total_price) 
                    VALUES (?, ?, ?, ?, ?)";
            
            $stmt = $conn->prepare($sql);
            $stmt->bind_param("ssdii", $name, $email, $item['name'], $item['quantity'], ($item['price'] * $item['quantity']));
            
            if (!$stmt->execute()) {
                die("Error inserting order: " . $stmt->error);
            }
        }
        
        // Clear the cart
        unset($_SESSION['cart']);
        
        echo "<h2>Thank you for your purchase!</h2>";
        header("Location: thankyou.php");
    } else {
    ?>
    
    <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
        <table>
            <tr>
                <td>Name:</td>
                <td><input type="text" name="name" required></td>
            </tr>
            <tr>
                <td>Email:</td>
                <td><input type="email" name="email" required></td>
            </tr>
            <tr>
                <td>Address:</td>
                <td><input type="text" name="address" required></td>
            </tr>
            <tr>
                <td colspan="2"><button type="submit" name="submit">Place Order</button></td>
            </tr>
        </table>
    </form>
    
    <?php } ?>

    <br>
    <a href="cart.php">Back to Cart</a>

</body>
</html>

<?php
$conn->close();
?>


<!DOCTYPE html>
<html>
<head>
    <title>Thank You for Your Purchase!</title>
</head>
<body>
    <h1>Thank You for Your Purchase!</h1>
    <p>Your order has been received and is being processed.</p>
    <br>
    <a href="catalog.php">Continue Shopping</a>
</body>
</html>


<?php
require_once 'config.php';

// Fetch all products from database
$stmt = $pdo->query('SELECT * FROM products');
$products = $stmt->fetchAll(PDO::FETCH_ASSOC);

?>

<!DOCTYPE html>
<html>
<head>
    <title>Product List</title>
</head>
<body>
    <h1>Available Products</h1>
    <?php foreach ($products as $product): ?>
        <div class="product">
            <h2><?php echo $product['name']; ?></h2>
            <p><?php echo $product['description']; ?></p>
            <p>Price: <?php echo $product['price']; ?></p>
            <a href="add_to_cart.php?id=<?php echo $product['id']; ?>">Add to Cart</a>
        </div>
    <?php endforeach; ?>
</body>
</html>


<?php
session_start();
require_once 'config.php';

if (!isset($_SESSION['user_id'])) {
    header('Location: login.php');
    exit();
}

$product_id = $_GET['id'];

// Insert into orders table
$stmt = $pdo->prepare('INSERT INTO orders (user_id, product_id, quantity) VALUES (?, ?, 1)');
$stmt->execute([$_SESSION['user_id'], $product_id]);

echo "Product added to cart successfully!";
echo "<br><a href='view_cart.php'>View Cart</a>";


<?php
session_start();
require_once 'config.php';

if (!isset($_SESSION['user_id'])) {
    header('Location: login.php');
    exit();
}

// Fetch all orders for the current user
$stmt = $pdo->prepare('SELECT o.id, p.name, p.price, o.quantity FROM orders o JOIN products p ON o.product_id = p.id WHERE o.user_id = ?');
$stmt->execute([$_SESSION['user_id']]);
$orders = $stmt->fetchAll(PDO::FETCH_ASSOC);

?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <h1>Your Shopping Cart</h1>
    <?php if (empty($orders)): ?>
        <p>Your cart is empty.</p>
    <?php else: ?>
        <table>
            <tr>
                <th>Product Name</th>
                <th>Price</th>
                <th>Quantity</th>
                <th>Action</th>
            </tr>
            <?php foreach ($orders as $order): ?>
                <tr>
                    <td><?php echo $order['name']; ?></td>
                    <td><?php echo $order['price']; ?></td>
                    <td><input type="number" name="quantity" min="1" value="<?php echo $order['quantity']; ?>"></td>
                    <td>
                        <a href="update_cart.php?id=<?php echo $order['id']; ?>">Update</a>
                        <a href="remove_from_cart.php?id=<?php echo $order['id']; ?>">Remove</a>
                    </td>
                </tr>
            <?php endforeach; ?>
        </table>
    <?php endif; ?>
    <br>
    <a href="checkout.php">Checkout</a>
    <br>
    <a href="index.php">Continue Shopping</a>
</body>
</html>


<?php
session_start();
require_once 'config.php';

if (!isset($_SESSION['user_id'])) {
    header('Location: login.php');
    exit();
}

$order_id = $_GET['id'];
$new_quantity = $_POST['quantity'];

// Update quantity in orders table
$stmt = $pdo->prepare('UPDATE orders SET quantity = ? WHERE id = ? AND user_id = ?');
$stmt->execute([$new_quantity, $order_id, $_SESSION['user_id']]);

header('Location: view_cart.php');


<?php
session_start();
require_once 'config.php';

if (!isset($_SESSION['user_id'])) {
    header('Location: login.php');
    exit();
}

// Get order details
$stmt = $pdo->prepare('SELECT o.id, p.name, p.price, o.quantity FROM orders o JOIN products p ON o.product_id = p.id WHERE o.user_id = ?');
$stmt->execute([$_SESSION['user_id']]);
$orders = $stmt->fetchAll(PDO::FETCH_ASSOC);

// Calculate total price
$total_price = 0;
foreach ($orders as $order) {
    $total_price += $order['price'] * $order['quantity'];
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
</head>
<body>
    <h1>Order Summary</h1>
    <table>
        <tr>
            <th>Product Name</th>
            <th>Price</th>
            <th>Quantity</th>
            <th>Total</th>
        </tr>
        <?php foreach ($orders as $order): ?>
            <tr>
                <td><?php echo $order['name']; ?></td>
                <td><?php echo $order['price']; ?></td>
                <td><?php echo $order['quantity']; ?></td>
                <td><?php echo $order['price'] * $order['quantity']; ?></td>
            </tr>
        <?php endforeach; ?>
    </table>
    <h2>Total Price: <?php echo $total_price; ?></h2>

    <h3>Payment Information</h3>
    <form action="process_payment.php" method="POST">
        <input type="text" name="card_number" placeholder="Card Number" required>
        <input type="text" name="card_name" placeholder="Name on Card" required>
        <input type="text" name="cvv" placeholder="CVV" required>
        <button type="submit">Place Order</button>
    </form>
</body>
</html>


<?php
session_start();
require_once 'config.php';

if (!isset($_SESSION['user_id'])) {
    header('Location: login.php');
    exit();
}

// Get order details
$stmt = $pdo->prepare('SELECT o.id, p.name, p.price, o.quantity FROM orders o JOIN products p ON o.product_id = p.id WHERE o.user_id = ?');
$stmt->execute([$_SESSION['user_id']]);
$orders = $stmt->fetchAll(PDO::FETCH_ASSOC);

// Calculate total price
$total_price = 0;
foreach ($orders as $order) {
    $total_price += $order['price'] * $order['quantity'];
}

// Here you would normally process the payment with a payment gateway
// For this example, we'll just simulate successful payment

// Delete orders after purchase
$stmt = $pdo->prepare('DELETE FROM orders WHERE user_id = ?');
$stmt->execute([$_SESSION['user_id']]);

echo "Payment completed successfully!";
echo "<br>Your total was: $" . number_format($total_price, 2);
echo "<br><a href='index.php'>Continue Shopping</a>";


<?php
session_start();

if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    $product = json_decode(file_get_contents('php://input'), true);

    if (!isset($product['id'])) {
        die(json_encode(['success' => false, 'message' => 'Product ID is required']));
    }

    // Check if product already exists in cart
    $found = false;
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['id'] == $product['id']) {
            $item['quantity']++;
            $found = true;
            break;
        }
    }

    if (!$found) {
        $_SESSION['cart'][] = array(
            'id' => $product['id'],
            'name' => $product['name'],
            'price' => $product['price'],
            'quantity' => 1
        );
    }

    echo json_encode(['success' => true]);
} else {
    die(json_encode(['success' => false, 'message' => 'Invalid request method']));
}
?>


<?php
session_start();

if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

$items = $_SESSION['cart'];
$total = 0;

foreach ($items as $item) {
    $total += $item['price'] * $item['quantity'];
}

echo json_encode([
    'success' => true,
    'items' => $items,
    'total' => $total
]);
?>


<?php
session_start();

if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

$cartItems = $_SESSION['cart'];
$totalAmount = 0;

foreach ($cartItems as $item) {
    $totalAmount += $item['price'] * $item['quantity'];
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Checkout</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>
    <div class="container mt-4">
        <h2>Your Cart</h2>
        <?php if (empty($cartItems)): ?>
            <p>Your cart is empty.</p>
        <?php else: ?>
            <table class="table">
                <thead>
                    <tr>
                        <th>Product</th>
                        <th>Quantity</th>
                        <th>Price</th>
                        <th>Total</th>
                    </tr>
                </thead>
                <tbody>
                    <?php foreach ($cartItems as $item): ?>
                        <tr>
                            <td><?= $item['name'] ?></td>
                            <td><?= $item['quantity'] ?></td>
                            <td>$<?= number_format($item['price'], 2) ?></td>
                            <td>$<?= number_format($item['price'] * $item['quantity'], 2) ?></td>
                        </tr>
                    <?php endforeach; ?>
                </tbody>
            </table>
            <h4>Total Amount: $<?php echo number_format($totalAmount, 2); ?></h4>
            <form action="process_payment.php" method="POST">
                <div class="mb-3">
                    <label for="name">Name:</label>
                    <input type="text" class="form-control" id="name" name="name" required>
                </div>
                <div class="mb-3">
                    <label for="email">Email:</label>
                    <input type="email" class="form-control" id="email" name="email" required>
                </div>
                <div class="mb-3">
                    <label for="address">Address:</label>
                    <input type="text" class="form-control" id="address" name="address" required>
                </div>
                <button type="submit" class="btn btn-primary">Place Order</button>
            </form>
        <?php endif; ?>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>


<?php
session_start();

if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Simple validation for required fields
if (!isset($_POST['name']) || !isset($_POST['email']) || !isset($_POST['address'])) {
    die(json_encode(['success' => false, 'message' => 'Please fill in all required fields']));
}

$cartItems = $_SESSION['cart'];
$totalAmount = 0;

foreach ($cartItems as $item) {
    $totalAmount += $item['price'] * $item['quantity'];
}

// Here you would typically integrate with a payment gateway
// For now, we'll just simulate a successful payment

// Clear the cart after purchase
$_SESSION['cart'] = array();

echo json_encode([
    'success' => true,
    'message' => 'Purchase completed successfully!',
    'total' => $totalAmount
]);
?>


<?php
session_start();

// Connect to database
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "myDB";

$conn = mysqli_connect($servername, $username, $password, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Get product details from the database
$sql = "SELECT * FROM products";
$result = mysqli_query($conn, $sql);

// Display products
echo "<div class='container'>";
while ($row = mysqli_fetch_assoc($result)) {
    echo "<div class='card'>";
    echo "<img src='" . $row['image'] . "' alt='" . $row['name'] . "'>";
    echo "<h3>" . $row['name'] . "</h3>";
    echo "<p>" . $row['description'] . "</p>";
    echo "<p>Price: $" . number_format($row['price'], 2) . "</p>";
    echo "<form action='add_to_cart.php' method='post'>";
    echo "<input type='hidden' name='product_id' value='" . $row['id'] . "'>";
    echo "<input type='number' name='quantity' min='1' value='1'>";
    echo "<button type='submit' class='btn btn-primary'>Add to Cart</button>";
    echo "</form>";
    echo "</div>";
}
echo "</div>";

// Add to cart functionality
if (isset($_POST['product_id'])) {
    $product_id = $_POST['product_id'];
    $quantity = $_POST['quantity'];

    // Get product details
    $sql = "SELECT * FROM products WHERE id=" . $product_id;
    $result = mysqli_query($conn, $sql);
    $product = mysqli_fetch_assoc($result);

    // Add to cart session
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }

    $item = array(
        'id' => $product['id'],
        'name' => $product['name'],
        'price' => $product['price'],
        'quantity' => $quantity
    );

    $_SESSION['cart'][] = $item;

    // Redirect back to the product page
    header("Location: index.php");
}

// Display cart contents
if (isset($_GET['action']) && $_GET['action'] == 'view_cart') {
    echo "<h2>Your Cart</h2>";
    echo "<table>";
    echo "<tr><th>Item</th><th>Quantity</th><th>Price</th><th>Total</th></tr>";

    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        echo "<tr>";
        echo "<td>" . $item['name'] . "</td>";
        echo "<td>" . $item['quantity'] . "</td>";
        echo "<td>$" . number_format($item['price'], 2) . "</td>";
        echo "<td>$" . number_format($item['price'] * $item['quantity'], 2) . "</td>";
        echo "</tr>";
        $total += $item['price'] * $item['quantity'];
    }

    echo "<tr><td colspan='3'>Total:</td><td>$" . number_format($total, 2) . "</td></tr>";
    echo "</table>";

    // Proceed to checkout button
    echo "<a href='checkout.php' class='btn btn-success'>Checkout</a>";
}

// Checkout functionality
if (isset($_GET['action']) && $_GET['action'] == 'checkout') {
    // Process payment here
    // This is a simplified example, in real application you would integrate with a payment gateway

    // Clear the cart after checkout
    unset($_SESSION['cart']);

    // Redirect to confirmation page
    header("Location: confirmation.php");
}

// Close database connection
mysqli_close($conn);
?>


<?php
session_start();
include('header.php');
?>

<!DOCTYPE html>
<html>
<head>
    <title>Product List</title>
    <style>
        body { font-family: Arial, sans-serif; }
        .product-item { margin-bottom: 20px; padding: 10px; border: 1px solid #ddd; }
        .cart-link { color: blue; text-decoration: none; }
    </style>
</head>
<body>
    <h1>Product List</h1>
    
    <?php
    // Dummy products for demonstration
    $products = array(
        array('id' => 1, 'name' => 'Laptop', 'price' => 999.99),
        array('id' => 2, 'name' => 'Smartphone', 'price' => 699.99),
        array('id' => 3, 'name' => 'Tablet', 'price' => 499.99)
    );
    
    foreach ($products as $product) {
        echo "<div class='product-item'>";
        echo "<h3>{$product['name']}</h3>";
        echo "<p>Price: \${$product['price']}</p>";
        echo "<a href='add_to_cart.php?id={$product['id']}&name={$product['name']}&price={$product['price']}'>Add to Cart</a>";
        echo "</div>";
    }
    ?>
    
    <p class="cart-link"><a href="cart.php">View Cart</a></p>
</body>
</html>


<?php
session_start();
if (isset($_GET['id']) && isset($_GET['name']) && isset($_GET['price'])) {
    $item = array(
        'id' => $_GET['id'],
        'name' => $_GET['name'],
        'price' => $_GET['price']
    );
    
    if (!isset($_SESSION['cart'][$item['id']])) {
        $_SESSION['cart'][$item['id']] = array('quantity' => 1, 'name' => $item['name'], 'price' => $item['price']);
    } else {
        $_SESSION['cart'][$item['id']]['quantity']++;
    }
}
header("Location: cart.php");
exit();
?>


<?php
session_start();
if (isset($_POST['action']) && isset($_POST['id'])) {
    switch ($_POST['action']) {
        case 'update':
            if (isset($_POST['quantity'])) {
                $quantity = max(1, intval($_POST['quantity']));
                $_SESSION['cart'][$_POST['id']]['quantity'] = $quantity;
            }
            break;
            
        case 'remove':
            unset($_SESSION['cart'][$_POST['id']]);
            break;
    }
}
header("Location: cart.php");
exit();
?>


<?php
session_start();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
    <style>
        body { font-family: Arial, sans-serif; }
        .cart-item { margin-bottom: 10px; padding: 5px; border: 1px solid #ddd; }
        input[type='number'] { width: 60px; }
    </style>
</head>
<body>
    <h1>Shopping Cart</h1>
    
    <?php
    if (isset($_SESSION['cart']) && count($_SESSION['cart']) > 0) {
        $total = 0;
        foreach ($_SESSION['cart'] as $id => $item) {
            echo "<div class='cart-item'>";
            echo "<strong>{$item['name']}</strong>";
            echo "<br>Price: \${$item['price']}";
            echo "<form action='update_cart.php' method='post'>";
            echo "<input type='hidden' name='id' value='$id'>";
            echo "<input type='number' name='quantity' min='1' value='{$item['quantity']}'>";
            echo "&nbsp;";
            echo "<input type='submit' name='action' value='update'>";
            echo "</form>";
            echo "<br>Subtotal: \${$item['price'] * $item['quantity']}";
            echo "</div>";
            
            $total += $item['price'] * $item['quantity'];
        }
        echo "<h3>Total Amount: \$$total</h3>";
    } else {
        echo "Your cart is empty.";
    }
    
    if (isset($_SESSION['cart'])) {
        echo "<form action='update_cart.php' method='post'>";
        echo "<input type='submit' name='action' value='remove all'>";
        echo "</form>";
    }
    
    echo "<p><a href='index.php'>Continue Shopping</a></p>";
    ?>
</body>
</html>


<?php
session_start();
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}
?>


<?php
session_start();
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Order Confirmation</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>

<div class="container mt-4">
    <h1>Thank You for Your Order!</h1>
    
    <?php if (isset($_SESSION['checkoutData'])): ?>
        <p>Your order has been received.</p>
        <div class="mt-3">
            <h3>Order Details:</h3>
            <p>Name: <?php echo $_SESSION['checkoutData']['name']; ?></p>
            <p>Email: <?php echo $_SESSION['checkoutData']['email']; ?></p>
            <p>Address: <?php echo $_SESSION['checkoutData']['address']; ?></p>
        </div>
    <?php endif; ?>

    <a href="<?php echo $_SERVER['PHP_SELF']; ?>?action=logout" class="btn btn-primary mt-3">Continue Shopping</a>
</div>

<?php
// Clear session data after viewing thank you page
if (isset($_GET['action']) && $_GET['action'] == 'logout') {
    unset($_SESSION['cart']);
    unset($_SESSION['checkoutData']);
}

?>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>


<?php
class User {
    private $db;

    public function __construct($db) {
        $this->db = $db;
    }

    public function loginUser($email, $password) {
        $stmt = $this->db->prepare("SELECT * FROM users WHERE email = ?");
        $stmt->execute([$email]);
        $user = $stmt->fetch(PDO::FETCH_ASSOC);

        if ($user && password_verify($password, $user['password_hash'])) {
            $_SESSION['user'] = $user;
            return true;
        }
        return false;
    }

    public function registerUser($username, $email, $password) {
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);
        $stmt = $this->db->prepare("INSERT INTO users (username, email, password_hash) VALUES (?, ?, ?)");
        $result = $stmt->execute([$username, $email, $hashed_password]);

        return $result;
    }
}
?>


<?php
class Product {
    private $db;

    public function __construct($db) {
        $this->db = $db;
    }

    public function getAllProducts() {
        $stmt = $this->db->query("SELECT * FROM products");
        return $stmt->fetchAll(PDO::FETCH_ASSOC);
    }

    public function findProductById($id) {
        $stmt = $this->db->prepare("SELECT * FROM products WHERE id = ?");
        $stmt->execute([$id]);
        return $stmt->fetch(PDO::FETCH_ASSOC);
    }
}

// In your frontend
$product = new Product($db);
$products = $product->getAllProducts();

foreach ($products as $prod) {
    echo "<div class='product'>";
    echo "<h3>{$prod['name']}</h3>";
    echo "<p>{$prod['description']}</p>";
    echo "<strong>Price: \${$prod['price']}</strong>";
    echo "<a href='add-to-cart.php?id={$prod['id']}'>Add to Cart</a>";
    echo "</div>";
}
?>


<?php
session_start();

if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add product to cart
if (isset($_GET['id'])) {
    $product_id = $_GET['id'];
    if (!isset($_SESSION['cart'][$product_id])) {
        $_SESSION['cart'][$product_id] = array(
            'quantity' => 1,
            'price' => $product->findProductById($product_id)['price']
        );
    }
}

// Display cart
echo "<h2>Shopping Cart</h2>";
$total = 0;
foreach ($_SESSION['cart'] as $id => $item) {
    echo "<div class='cart-item'>";
    echo "<p>{$id}</p>"; // You might want to fetch the product name here
    echo "<p>Quantity: {$item['quantity']}</p>";
    echo "<p>Price: \${$item['price']}</p>";
    echo "</div>";
    $total += $item['quantity'] * $item['price'];
}

echo "<h3>Total: \${$total}</h3>";
?>


<?php
session_start();
require 'database.php';

if (!isset($_SESSION['user'])) {
    header("Location: login.php");
    exit();
}

$user = $_SESSION['user'];

if (isset($_POST['submit'])) {
    // Process payment
    $order = new Order($db);
    $payment = new Payment($db);

    $order_id = $order->createOrder($user['id'], $_SESSION['cart']);
    $payment_id = $payment->processPayment(
        $order_id,
        $_POST['card_number'],
        $_POST['cvv'],
        $_POST['expiry']
    );

    // Clear cart
    unset($_SESSION['cart']);

    header("Location: thank-you.php?order={$order_id}");
}

// Display checkout form
?>
<form method="post">
    <h2>Checkout</h2>
    <div class="form-group">
        <label>Name on Card:</label>
        <input type="text" name="name_on_card" required>
    </div>
    <div class="form-group">
        <label>Card Number:</label>
        <input type="text" name="card_number" pattern="[0-9]{16}" required>
    </div>
    <div class="form-group">
        <label>CVV:</label>
        <input type="text" name="cvv" pattern="[0-9]{3}" required>
    </div>
    <div class="form-group">
        <label>Expiry Date:</label>
        <input type="month" name="expiry" required>
    </div>
    <button type="submit" name="submit">Complete Purchase</button>
</form>


<?php
class Order {
    private $db;

    public function __construct($db) {
        $this->db = $db;
    }

    public function createOrder($user_id, $cart) {
        $total = 0;
        foreach ($cart as $item) {
            $total += $item['quantity'] * $item['price'];
        }

        $stmt = $this->db->prepare("INSERT INTO orders (user_id, order_date, total_amount) VALUES (?, NOW(), ?)");
        $stmt->execute([$user_id, $total]);

        $order_id = $this->db->lastInsertId();

        foreach ($cart as $product_id => $item) {
            $this->addOrderItem($order_id, $product_id, $item['quantity'], $item['price']);
        }

        return $order_id;
    }

    private function addOrderItem($order_id, $product_id, $quantity, $price) {
        $stmt = $this->db->prepare("INSERT INTO order_items (order_id, product_id, quantity, price) VALUES (?, ?, ?, ?)");
        $stmt->execute([$order_id, $product_id, $quantity, $price]);
    }
}

class Payment {
    private $db;

    public function __construct($db) {
        $this->db = $db;
    }

    public function processPayment($order_id, $card_number, $cvv, $expiry) {
        // In a real application, you would integrate with a payment gateway here
        // This is a simplified example
        $status = "completed"; // Assume successful payment for this example

        $stmt = $this->db->prepare("INSERT INTO payments (order_id, payment_method, transaction_id, amount, status) VALUES (?, 'credit_card', ?, ?, ?)");
        $result = $stmt->execute([$order_id, $card_number . '-' . $expiry, $amount, $status]);

        return $this->db->lastInsertId();
    }
}
?>


<?php
session_start();
require 'database.php';

if (isset($_GET['order'])) {
    $order_id = $_GET['order'];
    $stmt = $this->db->prepare("SELECT * FROM orders WHERE id = ?");
    $stmt->execute([$order_id]);
    $order = $stmt->fetch(PDO::FETCH_ASSOC);
}

?>
<h2>Thank You for Your Order!</h2>
<p>Your order has been received and is being processed.</p>
<p>Order ID: #<?php echo $order['id']; ?></p>
<p>Total Amount: <?php echo $order['total_amount']; ?></p>


<?php
// products.php

$products = array(
    array(
        'id' => 1,
        'name' => 'Product 1',
        'price' => 29.99,
        'description' => 'Description for Product 1'
    ),
    array(
        'id' => 2,
        'name' => 'Product 2',
        'price' => 49.99,
        'description' => 'Description for Product 2'
    )
);
?>


<?php
// display_products.php

include('products.php');

echo "<h1>Product Catalog</h1>";
foreach ($products as $product) {
    echo "<div>";
    echo "<h3>{$product['name']}</h3>";
    echo "<p>Description: {$product['description']}</p>";
    echo "<p>Price: \${$product['price']}</p>";
    echo "<form action='add_to_cart.php' method='post'>";
    echo "<input type='hidden' name='id' value='{$product['id']}'>";
    echo "<input type='number' name='quantity' min='1' value='1'>";
    echo "<button type='submit'>Add to Cart</button>";
    echo "</form>";
    echo "</div><br/>";
}
?>


<?php
// add_to_cart.php

session_start();

if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

$product_id = $_POST['id'];
$quantity = $_POST['quantity'];

foreach ($_SESSION['cart'] as &$item) {
    if ($item['id'] == $product_id) {
        $item['quantity'] += $quantity;
        header("Location: view_cart.php");
        exit();
    }
}

$product = array(
    'id' => $product_id,
    'quantity' => $quantity
);

$_SESSION['cart'][] = $product;

header("Location: view_cart.php");
?>


<?php
// view_cart.php

include('products.php');
session_start();

$total = 0;

echo "<h1>Shopping Cart</h1>";
echo "<form action='checkout.php' method='post'>";
foreach ($_SESSION['cart'] as $item) {
    foreach ($products as $product) {
        if ($product['id'] == $item['id']) {
            echo "<div>";
            echo "<p>{$product['name']} - Quantity: {$item['quantity']}</p>";
            echo "<input type='hidden' name='id[]' value='{$product['id']}'>";
            echo "</div><br/>";
            $total += $product['price'] * $item['quantity'];
        }
    }
}
echo "<p>Total: \${$total}</p>";
echo "<button type='submit'>Checkout</button>";
echo "</form>";
?>


<?php
// checkout.php

session_start();

$total = 0;

foreach ($_POST['id'] as $product_id) {
    foreach ($products as $product) {
        if ($product['id'] == $product_id) {
            $total += $product['price'];
        }
    }
}

// Here you would typically integrate a payment gateway
// For this example, we'll just assume the payment was successful

$orderId = uniqid();
$purchaseDate = date('Y-m-d H:i:s');

// Store order in database or file
echo "<h1>Thank You for Your Purchase!</h1>";
echo "<p>Your order number is: {$orderId}</p>";
echo "<p>Total Amount: \${$total}</p>";
echo "<p>Purchase Date: {$purchaseDate}</p>";

session_unset();
session_destroy();
?>


<?php
// update_inventory.php

$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "myDB";

$conn = new mysqli($servername, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

foreach ($_POST['id'] as $product_id) {
    $sql = "UPDATE products SET stock = stock - 1 WHERE id = {$product_id}";
    if (!$conn->query($sql)) {
        echo "Error updating inventory: " . $conn->error;
    }
}

$conn->close();
?>


<?php
$host = "localhost";
$username = "root";
$password = "";
$dbname = "purchase_system";

$conn = mysqli_connect($host, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}
?>


<?php
session_start();

function get_products() {
    include 'db_connection.php';
    $query = "SELECT * FROM products";
    $result = mysqli_query($conn, $query);
    return $result;
}

function add_to_cart($product_id) {
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }
    
    if (isset($_SESSION['cart'][$product_id])) {
        $_SESSION['cart'][$product_id]['quantity']++;
    } else {
        $query = "SELECT name, price FROM products WHERE id = ?";
        $stmt = mysqli_prepare($conn, $query);
        mysqli_stmt_bind_param($stmt, 'i', $product_id);
        mysqli_stmt_execute($stmt);
        $result = mysqli_stmt_get_result($stmt);
        $product = mysqli_fetch_assoc($result);
        
        $_SESSION['cart'][$product_id] = array(
            'name' => $product['name'],
            'price' => $product['price'],
            'quantity' => 1
        );
    }
}

function update_cart($product_id, $quantity) {
    if ($quantity > 0) {
        $_SESSION['cart'][$product_id]['quantity'] = $quantity;
    } else {
        unset($_SESSION['cart'][$product_id]);
    }
}

function calculate_total() {
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += ($item['price'] * $item['quantity']);
    }
    return $total;
}
?>


<?php
include '../includes/db_connection.php';
include '../includes/functions.php';

$products = get_products();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Product List</title>
</head>
<body>
    <h1>Products</h1>
    <?php while ($product = mysqli_fetch_assoc($products)): ?>
        <div>
            <h2><?php echo $product['name']; ?></h2>
            <p><?php echo $product['description']; ?></p>
            <p>$<?php echo number_format($product['price'], 2); ?></p>
            <a href="../scripts/add_to_cart.php?id=<?php echo $product['id']; ?>">Buy Now</a>
        </div>
    <?php endwhile; ?>
    <a href="view_cart.php">View Cart</a>
</body>
</html>


<?php
include '../includes/functions.php';

if (isset($_GET['id'])) {
    add_to_cart($_GET['id']);
}

header("Location: ../pages/products.php");
exit();
?>


<?php
include '../includes/db_connection.php';
include '../includes/functions.php';

if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <h1>Your Shopping Cart</h1>
    <?php if (empty($_SESSION['cart'])): ?>
        <p>Your cart is empty. <a href="products.php">Continue shopping</a>.</p>
    <?php else: ?>
        <table border="1">
            <tr>
                <th>Product</th>
                <th>Price</th>
                <th>Quantity</th>
                <th>Total</th>
            </tr>
            <?php foreach ($_SESSION['cart'] as $id => $item): ?>
                <tr>
                    <td><?php echo $item['name']; ?></td>
                    <td>$<?php echo number_format($item['price'], 2); ?></td>
                    <td>
                        <form action="../scripts/update_cart.php" method="POST">
                            <input type="hidden" name="id" value="<?php echo $id; ?>">
                            <input type="number" name="quantity" min="1" value="<?php echo $item['quantity']; ?>">
                            <button type="submit">Update</button>
                        </form>
                    </td>
                    <td>$<?php echo number_format($item['price'] * $item['quantity'], 2); ?></td>
                </tr>
            <?php endforeach; ?>
        </table>
        <p>Total: $<?php echo number_format(calculate_total(), 2); ?></p>
        <a href="checkout.php">Proceed to Checkout</a> |
        <a href="products.php">Continue Shopping</a>
    <?php endif; ?>
</body>
</html>


<?php
session_start();
if (empty($_SESSION['cart'])) {
    header("Location: products.php");
    exit();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
</head>
<body>
    <h1>Checkout</h1>
    <form action="process_checkout.php" method="POST">
        <div>
            <label for="name">Name:</label>
            <input type="text" id="name" name="name" required>
        </div>
        <div>
            <label for="email">Email:</label>
            <input type="email" id="email" name="email" required>
        </div>
        <div>
            <label for="address">Address:</label>
            <textarea id="address" name="address" required></textarea>
        </div>
        <div>
            <label for="city">City:</label>
            <input type="text" id="city" name="city" required>
        </div>
        <div>
            <label for="state">State:</label>
            <input type="text" id="state" name="state" required>
        </div>
        <div>
            <label for="zip_code">ZIP Code:</label>
            <input type="text" id="zip_code" name="zip_code" pattern="[0-9]{5}" required>
        </div>
        <h2>Payment Information</h2>
        <div>
            <label for="card_number">Card Number:</label>
            <input type="text" id="card_number" name="card_number" pattern="[0-9]{16}" required>
        </div>
        <div>
            <label for="cvv">CVV:</label>
            <input type="text" id="cvv" name="cvv" pattern="[0-9]{3}" required>
        </div>
        <button type="submit">Place Order</button>
    </form>
</body>
</html>


<?php
include '../includes/db_connection.php';
session_start();

if (!empty($_SESSION['cart']) && isset($_POST)) {
    $name = htmlspecialchars(trim($_POST['name']));
    $email = filter_var($_POST['email'], FILTER_VALIDATE_EMAIL);
    $address = htmlspecialchars(trim($_POST['address']));
    $city = htmlspecialchars(trim($_POST['city']));
    $state = htmlspecialchars(trim($_POST['state']));
    $zip_code = htmlspecialchars(trim($_POST['zip_code']));
    
    // Simulate transaction ID
    $transaction_id = 'txn_' . time() . '_' . rand(1000, 9999);
    
    // Insert order into database
    $order_query = "INSERT INTO orders (user_name, email, address, transaction_id, total_amount) 
                    VALUES (?, ?, ?, ?, ?)";
    $stmt_order = mysqli_prepare($conn, $order_query);
    mysqli_stmt_bind_param($stmt_order, 'ssdss', $name, $email, $address, $transaction_id, calculate_total());
    
    if (mysqli_stmt_execute($stmt_order)) {
        $order_id = mysqli_insert_id($conn);
        
        foreach ($_SESSION['cart'] as $id => $item) {
            $detail_query = "INSERT INTO order_details (order_id, product_id, quantity, price)
                            VALUES (?, ?, ?, ?)";
            $stmt_detail = mysqli_prepare($conn, $detail_query);
            mysqli_stmt_bind_param($stmt_detail, 'iidi', $order_id, $id, $item['quantity'], $item['price']);
            
            if (!mysqli_stmt_execute($stmt_detail)) {
                echo "Error saving order details: " . mysqli_error($conn);
                exit();
            }
        }
        
        // Clear cart
        unset($_SESSION['cart']);
        header("Location: confirm_order.php?order_id=$order_id");
        exit();
    } else {
        die("Error processing order: " . mysqli_error($conn));
    }
} else {
    header("Location: view_cart.php");
    exit();
}
?>


<?php
include '../includes/db_connection.php';
session_start();

if (!isset($_GET['order_id'])) {
    header("Location: products.php");
    exit();
}

$order_id = $_GET['order_id'];
$query = "SELECT * FROM orders WHERE order_id = ?";
$stmt = mysqli_prepare($conn, $query);
mysqli_stmt_bind_param($stmt, 'i', $order_id);
mysqli_stmt_execute($stmt);
$result = mysqli_stmt_get_result($stmt);
$order = mysqli_fetch_assoc($result);

if (!$order) {
    header("Location: products.php");
    exit();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Order Confirmation</title>
</head>
<body>
    <h1>Thank You for Your Order!</h1>
    <p>Your order has been successfully processed.</p>
    <div>
        <h2>Order Details:</h2>
        <p><strong>Name:</strong> <?php echo $order['user_name']; ?></p>
        <p><strong>Email:</strong> <?php echo $order['email']; ?></p>
        <p><strong>Transaction ID:</strong> <?php echo $order['transaction_id']; ?></p>
        <p><strong>Total Amount:</strong> $<?php echo number_format($order['total_amount'], 2); ?></p>
    </div>
</body>
</html>


<?php
include '../includes/functions.php';

if (isset($_POST['id']) && isset($_POST['quantity'])) {
    update_cart($_POST['id'], $_POST['quantity']);
}

header("Location: ../pages/view_cart.php");
exit();
?>


<?php
include('db_connection.php');

// Fetch products from the database
$sql = "SELECT * FROM products";
$result = $conn->query($sql);

if ($result->num_rows > 0) {
    while ($row = $result->fetch_assoc()) {
        echo "<div class='product'>";
        echo "<h3>" . $row['name'] . "</h3>";
        echo "<p>Description: " . $row['description'] . "</p>";
        echo "<p>Price: $" . number_format($row['price'], 2) . "</p>";
        echo "<form action='add_to_cart.php' method='get'>";
        echo "<input type='hidden' name='product_id' value='" . $row['id'] . "'>";
        echo "<button type='submit'>Add to Cart</button>";
        echo "</form>";
        echo "</div>";
    }
} else {
    echo "No products available.";
}
$conn->close();
?>


<?php
session_start();
include('db_connection.php');

$product_id = isset($_GET['product_id']) ? $_GET['product_id'] : '';
$quantity = isset($_GET['quantity']) ? $_GET['quantity'] : 1;

if (!empty($product_id)) {
    // Fetch product details from database
    $sql = "SELECT * FROM products WHERE id = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("i", $product_id);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        $row = $result->fetch_assoc();
        $product = array(
            'id' => $row['id'],
            'name' => $row['name'],
            'price' => $row['price'],
            'quantity' => $quantity
        );

        // Add to cart in session
        if (isset($_SESSION['cart'])) {
            $_SESSION['cart'][$product_id] = $product;
        } else {
            $_SESSION['cart'] = array($product_id => $product);
        }
    }
}

// Redirect back to the product page
header("Location: products.php");
exit();
?>


<?php
session_start();

if (isset($_POST['update'])) {
    foreach ($_SESSION['cart'] as $id => $item) {
        if (isset($_POST["quantity_$id"]) && is_numeric($_POST["quantity_$id"])) {
            $quantity = $_POST["quantity_$id"];
            if ($quantity > 0) {
                $_SESSION['cart'][$id]['quantity'] = $quantity;
            }
        }
    }
}

if (isset($_POST['remove'])) {
    $id_to_remove = $_POST['id'];
    unset($_SESSION['cart'][$id_to_remove]);
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <?php if (!empty($_SESSION['cart'])): ?>
        <h2>Your Shopping Cart:</h2>
        <form action="" method="post">
            <table>
                <tr>
                    <th>Name</th>
                    <th>Price</th>
                    <th>Quantity</th>
                    <th>Total</th>
                    <th>Action</th>
                </tr>
                <?php foreach ($_SESSION['cart'] as $id => $item): ?>
                    <tr>
                        <td><?php echo $item['name']; ?></td>
                        <td>$<?php echo number_format($item['price'], 2); ?></td>
                        <td><input type="number" name="quantity_<?php echo $id; ?>" value="<?php echo $item['quantity']; ?>"></td>
                        <td>$<?php echo number_format($item['price'] * $item['quantity'], 2); ?></td>
                        <td>
                            <input type="hidden" name="id" value="<?php echo $id; ?>">
                            <button type="submit" name="remove">Remove</button>
                        </td>
                    </tr>
                <?php endforeach; ?>
            </table>
            <div class="total">
                <h3>Total: $<?php 
                    $total = 0;
                    foreach ($_SESSION['cart'] as $item) {
                        $total += $item['price'] * $item['quantity'];
                    }
                    echo number_format($total, 2);
                ?></h3>
            </div>
            <button type="submit" name="update">Update Cart</button>
        </form>
        <a href="checkout.php">Proceed to Checkout</a>
    <?php else: ?>
        <p>Your cart is empty.</p>
    <?php endif; ?>
</body>
</html>


<?php
session_start();

// Calculate total amount
$total = 0;
foreach ($_SESSION['cart'] as $item) {
    $total += $item['price'] * $item['quantity'];
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
</head>
<body>
    <h2>Order Review</h2>
    <table>
        <?php foreach ($_SESSION['cart'] as $item): ?>
            <tr>
                <td><?php echo $item['name']; ?></td>
                <td>$<?php echo number_format($item['price'], 2); ?></td>
                <td><?php echo $item['quantity']; ?></td>
                <td>$<?php echo number_format($item['price'] * $item['quantity'], 2); ?></td>
            </tr>
        <?php endforeach; ?>
    </table>
    <h3>Subtotal: $<?php echo number_format($total, 2); ?></h3>
    
    <!-- Add tax calculation -->
    <?php
    $tax = $total * 0.08; // Assuming 8% tax rate
    $grand_total = $total + $tax;
    ?>
    <h3>Tax: $<?php echo number_format($tax, 2); ?></h3>
    <h2>Grand Total: $<?php echo number_format($grand_total, 2); ?></h2>

    <!-- Payment form -->
    <form action="process_payment.php" method="post">
        <label for="name">Name on Card:</label>
        <input type="text" id="name" name="card_name" required>

        <label for="card_number">Card Number:</label>
        <input type="number" id="card_number" name="card_number" required>

        <label for="expiry">Expiry Date:</label>
        <input type="month" id="expiry" name="expiry_date" required>

        <label for="cvv">CVV:</label>
        <input type="number" id="cvv" name="cvv" maxlength="3" required>

        <button type="submit">Complete Purchase</button>
    </form>
</body>
</html>


<?php
session_start();

// Validate and process payment details here
// For this example, we'll just simulate successful payment

// After successful payment, you might want to:
1. Record the order in your database.
2. Clear the cart session.
3. Redirect to a thank you page or confirmation.

header("Location: thank_you.php");
exit();
?>


<?php
session_start();

// Clear the cart
unset($_SESSION['cart']);

?>

<!DOCTYPE html>
<html>
<head>
    <title>Thank You</title>
</head>
<body>
    <h1>Thank You for Your Purchase!</h1>
    <p>Your order has been successfully processed.</p>
    <a href="products.php">Continue Shopping</a>
</body>
</html>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'shop';

// Connect to database
$conn = new mysqli($host, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Create products table if not exists
$sql = "CREATE TABLE IF NOT EXISTS products (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255),
    description TEXT,
    price DECIMAL(10, 2),
    image VARCHAR(255)
)";

$conn->query($sql);

// Sample product data (you can replace this with your own product data)
$products = array(
    array(
        'name' => 'Product 1',
        'description' => 'Description for Product 1',
        'price' => 9.99,
        'image' => 'product1.jpg'
    ),
    array(
        'name' => 'Product 2',
        'description' => 'Description for Product 2',
        'price' => 14.99,
        'image' => 'product2.jpg'
    )
);

// Insert sample products into database
foreach ($products as $product) {
    $sql = "INSERT INTO products (name, description, price, image)
            VALUES ('{$product['name']}', '{$product['description']}', {$product['price']}, '{$product['image']}')";
    
    if (!$conn->query($sql)) {
        echo "Error: " . $conn->error;
    }
}

// Function to get products from database
function get_products() {
    global $conn;
    $sql = "SELECT * FROM products";
    $result = $conn->query($sql);
    
    if ($result->num_rows > 0) {
        return $result->fetch_all(MYSQLI_ASSOC);
    } else {
        return array();
    }
}

// Function to add product to cart
function add_to_cart($product_id, $quantity = 1) {
    global $conn;
    
    // Check if the product exists
    $sql = "SELECT * FROM products WHERE id = {$product_id}";
    $result = $conn->query($sql);
    
    if ($result->num_rows == 0) {
        return false;
    }
    
    $product = $result->fetch_assoc();
    
    // Add to cart session
    $_SESSION['cart'][$product_id] = array(
        'name' => $product['name'],
        'price' => $product['price'],
        'quantity' => $quantity,
        'image' => $product['image']
    );
    
    return true;
}

// Function to update cart quantity
function update_cart($product_id, $new_quantity) {
    global $_SESSION;
    
    if (isset($_SESSION['cart'][$product_id])) {
        $_SESSION['cart'][$product_id]['quantity'] = $new_quantity;
        return true;
    }
    
    return false;
}

// Function to remove item from cart
function remove_from_cart($product_id) {
    global $_SESSION;
    
    unset($_SESSION['cart'][$product_id]);
}

// Function to calculate cart total
function cart_total() {
    global $_SESSION;
    
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += ($item['price'] * $item['quantity']);
    }
    
    return $total;
}

// Checkout process
if (isset($_POST['checkout'])) {
    // Check if cart is not empty
    if (!empty($_SESSION['cart'])) {
        // Process payment here (you can integrate with a payment gateway)
        
        // For this example, we'll just display a success message
        $order_id = time(); // Generate unique order ID
        
        // Save order to database
        $sql = "INSERT INTO orders (order_id, customer_name, email, address, phone, total_amount)
                VALUES ('$order_id', '".$_POST['name']."', '".$_POST['email']."', '".$_POST['address']."', '".$_POST['phone']."', '".cart_total()."')";
        
        if ($conn->query($sql)) {
            // Save order items
            foreach ($_SESSION['cart'] as $item) {
                $sql = "INSERT INTO order_items (order_id, product_name, price, quantity)
                        VALUES ('$order_id', '{$item['name']}', {$item['price']}, {$item['quantity']})";
                
                $conn->query($sql);
            }
            
            // Clear cart
            unset($_SESSION['cart']);
            
            echo "<div class='success'>Thank you for your order! Your order ID is #{$order_id}</div>";
        } else {
            echo "<div class='error'>Error processing your order. Please try again.</div>";
        }
    } else {
        echo "<div class='error'>Your cart is empty!</div>";
    }
}
?>


<?php
// Database connection
$host = 'localhost';
$username = 'root';
$password = '';
$db_name = 'shopping_cart';

$conn = mysqli_connect($host, $username, $password, $db_name);

// Create products table if not exists
$sql = "CREATE TABLE IF NOT EXISTS products (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    description TEXT
)";

mysqli_query($conn, $sql);

// Create orders table if not exists
$sql = "CREATE TABLE IF NOT EXISTS orders (
    id INT AUTO_INCREMENT PRIMARY KEY,
    product_id INT NOT NULL,
    user_id INT NOT NULL,
    quantity INT NOT NULL,
    total DECIMAL(10, 2) NOT NULL,
    purchase_date DATETIME DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (product_id) REFERENCES products(id)
)";

mysqli_query($conn, $sql);

// Sample products
if(mysqli_num_rows(mysqli_query($conn, "SELECT * FROM products")) == 0) {
    mysqli_query($conn, "INSERT INTO products (name, price, description) VALUES 
        ('Product 1', 29.99, 'This is a sample product.'),
        ('Product 2', 49.99, 'Another sample product.'),
        ('Product 3', 19.99, 'Yet another sample product.')");
}

// Function to get all products
function getProducts() {
    global $conn;
    $sql = "SELECT * FROM products";
    return mysqli_query($conn, $sql);
}

// Function to handle purchase
function purchaseProduct($productId, $quantity) {
    global $conn;
    
    // Get product price
    $productSql = "SELECT price FROM products WHERE id = ?";
    $stmt = mysqli_prepare($conn, $productSql);
    mysqli_stmt_bind_param($stmt, "i", $productId);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);
    
    if(mysqli_num_rows($result) > 0) {
        $row = mysqli_fetch_assoc($result);
        $price = $row['price'];
        
        // Calculate total price
        $totalPrice = $quantity * $price;
        
        // Get user ID from session (you should implement proper user authentication)
        $userId = isset($_SESSION['user_id']) ? $_SESSION['user_id'] : 1; // Temporarily using 1
        
        // Insert order into database
        $orderSql = "INSERT INTO orders (product_id, user_id, quantity, total) 
                    VALUES (?, ?, ?, ?)";
        $stmt = mysqli_prepare($conn, $orderSql);
        mysqli_stmt_bind_param($stmt, "iiid", $productId, $userId, $quantity, $totalPrice);
        
        if(mysqli_stmt_execute($stmt)) {
            return true;
        } else {
            return false;
        }
    }
    
    return false;
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
    <style>
        body { font-family: Arial, sans-serif; }
        .product-list { margin: 20px; }
        .product-item { padding: 10px; border-bottom: 1px solid #ddd; }
        .buy-button { background-color: #4CAF50; color: white; padding: 8px 16px; border: none; border-radius: 4px; cursor: pointer; }
    </style>
</head>
<body>
    <?php
    // Display products
    $products = getProducts();
    
    if(mysqli_num_rows($products) > 0) {
        echo "<div class='product-list'>";
        while($row = mysqli_fetch_assoc($products)) {
            echo "<div class='product-item'>";
            echo "<h3>" . $row['name'] . "</h3>";
            echo "<p>Price: $" . number_format($row['price'], 2) . "</p>";
            echo "<p>Description: " . $row['description'] . "</p>";
            echo "<a href='purchase.php?id=" . $row['id'] . "' class='buy-button'>Buy Now</a>";
            echo "</div>";
        }
        echo "</div>";
    } else {
        echo "No products available.";
    }
    ?>
</body>
</html>

<?php
mysqli_close($conn);
?>


<?php
session_start();
require_once 'db_connection.php';

if(!isset($_GET['id'])) {
    header('Location: index.php');
    exit();
}

$product_id = $_GET['id'];

// Get product details
$sql = "SELECT * FROM products WHERE id = ?";
$stmt = mysqli_prepare($conn, $sql);
mysqli_stmt_bind_param($stmt, "i", $product_id);
mysqli_stmt_execute($stmt);
$result = mysqli_stmt_get_result($stmt);

if(mysqli_num_rows($result) == 0) {
    header('Location: index.php');
    exit();
}

$product = mysqli_fetch_assoc($result);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Purchase Product</title>
    <style>
        body { font-family: Arial, sans-serif; }
        .purchase-form { max-width: 500px; margin: 20px auto; padding: 20px; }
        .form-group { margin-bottom: 15px; }
        input { padding: 8px; width: 200px; }
        button { background-color: #4CAF50; color: white; padding: 10px 20px; border: none; border-radius: 4px; cursor: pointer; }
    </style>
</head>
<body>
    <div class="purchase-form">
        <h2>Purchase <?php echo $product['name']; ?></h2>
        
        <form action="" method="post">
            <div class="form-group">
                <label>Quantity:</label>
                <input type="number" name="quantity" min="1" value="1" required>
            </div>
            
            <button type="submit">Purchase Now</button>
        </form>
    </div>
    
    <?php
    if($_SERVER["REQUEST_METHOD"] == "POST") {
        $quantity = $_POST['quantity'];
        
        if(is_numeric($quantity) && (int)$quantity > 0) {
            $quantity = (int)$quantity;
            
            if(purchaseProduct($product_id, $quantity)) {
                echo "<script>alert('Purchase successful!');</script>";
                header("Location: index.php");
            } else {
                echo "Error processing your purchase.";
            }
        } else {
            echo "Please enter a valid quantity.";
        }
    }
    ?>
</body>
</html>

<?php
mysqli_close($conn);
?>


<?php
$host = 'localhost';
$dbname = 'shoppingcart';
$username = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}
?>


<?php
session_start();
include 'db.php';

// Fetch products
$stmt = $conn->query("SELECT * FROM products");
$products = $stmt->fetchAll(PDO::FETCH_ASSOC);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <h1>Products</h1>
    <?php foreach ($products as $product): ?>
        <div>
            <h2><?php echo htmlspecialchars($product['name']); ?></h2>
            <p><?php echo htmlspecialchars($product['description']); ?></p>
            <p>$<?php echo number_format($product['price'], 2); ?></p>
            <a href="add_to_cart.php?id=<?php echo $product['id']; ?>">Add to Cart</a>
        </div>
    <?php endforeach; ?>

    <h2>Your Shopping Cart</h2>
    <?php if (empty($_SESSION['cart'])): ?>
        <p>Your cart is empty.</p>
    <?php else: ?>
        <table border="1">
            <tr><th>Product</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>
            <?php foreach ($_SESSION['cart'] as $item): 
                $product_id = $item['id'];
                $stmt = $conn->prepare("SELECT name, price FROM products WHERE id = ?");
                $stmt->execute([$product_id]);
                $product = $stmt->fetch(PDO::FETCH_ASSOC);
            ?>
                <tr>
                    <td><?php echo htmlspecialchars($product['name']); ?></td>
                    <td>$<?php echo number_format($product['price'], 2); ?></td>
                    <td><input type="number" value="<?php echo $item['quantity']; ?>"></td>
                    <td>$<?php echo number_format($product['price'] * $item['quantity'], 2); ?></td>
                    <td><a href="remove_from_cart.php?id=<?php echo $item['id']; ?>">Remove</a></td>
                </tr>
            <?php endforeach; ?>
        </table>
        <p>Total: $<?php echo number_format(calculate_total(), 2); ?></p>
        <form action="checkout.php" method="post">
            <input type="submit" value="Checkout">
        </form>
    <?php endif; ?>

    <script>
        // Add JavaScript for dynamic cart updates (optional)
    </script>
</body>
</html>

<?php
function calculate_total() {
    $total = 0;
    if (!empty($_SESSION['cart'])) {
        foreach ($_SESSION['cart'] as $item) {
            $product_id = $item['id'];
            $stmt = $conn->prepare("SELECT price FROM products WHERE id = ?");
            $stmt->execute([$product_id]);
            $price = $stmt->fetchColumn();
            $total += $price * $item['quantity'];
        }
    }
    return $total;
}
?>


<?php
session_start();

if (isset($_GET['id']) && is_numeric($_GET['id'])) {
    $product_id = $_GET['id'];
    
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }
    
    if (!array_key_exists($product_id, $_SESSION['cart'])) {
        // Fetch product price
        include 'db.php';
        $stmt = $conn->prepare("SELECT price FROM products WHERE id = ?");
        $stmt->execute([$product_id]);
        $price = $stmt->fetchColumn();
        
        $_SESSION['cart'][$product_id] = array(
            'id' => $product_id,
            'quantity' => 1,
            'price' => $price
        );
    } else {
        $_SESSION['cart'][$product_id]['quantity']++;
    }
}

header('Location: index.php');
exit;
?>


<?php
session_start();

if (isset($_GET['id']) && is_numeric($_GET['id'])) {
    $product_id = $_GET['id'];
    
    if (isset($_SESSION['cart'][$product_id])) {
        unset($_SESSION['cart'][$product_id]);
    }
}

header('Location: index.php');
exit;
?>


<?php
session_start();
include 'db.php';

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Process checkout
    
    $user_id = isset($_SESSION['user_id']) ? $_SESSION['user_id'] : null;
    
    if (!$user_id) {
        // Redirect to login or handle guest checkout
        header('Location: login.php');
        exit;
    }
    
    // Calculate total
    $total = calculate_total();
    
    // Insert order into database
    try {
        $conn->beginTransaction();
        
        $stmt = $conn->prepare("INSERT INTO orders (user_id, total, order_date, status) VALUES (?, ?, NOW(), 'pending')");
        $stmt->execute([$user_id, $total]);
        
        $order_id = $conn->lastInsertId();
        
        // Insert order details
        foreach ($_SESSION['cart'] as $item) {
            $product_id = $item['id'];
            $price = $item['price'];
            $quantity = $item['quantity'];
            
            $stmt = $conn->prepare("INSERT INTO order_details (order_id, product_id, quantity, price) VALUES (?, ?, ?, ?)");
            $stmt->execute([$order_id, $product_id, $quantity, $price]);
        }
        
        // Clear cart
        unset($_SESSION['cart']);
        
        $conn->commit();
        
        // Redirect to thank you page
        header('Location: order_confirmation.php?order_id=' . $order_id);
        exit;
    } catch(PDOException $e) {
        $conn->rollBack();
        echo "Error processing your order: " . $e->getMessage();
    }
}

function calculate_total() {
    $total = 0;
    if (!empty($_SESSION['cart'])) {
        foreach ($_SESSION['cart'] as $item) {
            $product_id = $item['id'];
            $stmt = $conn->prepare("SELECT price FROM products WHERE id = ?");
            $stmt->execute([$product_id]);
            $price = $stmt->fetchColumn();
            $total += $price * $item['quantity'];
        }
    }
    return $total;
}
?>


<?php
session_start();

if (isset($_GET['order_id']) && is_numeric($_GET['order_id'])) {
    $order_id = $_GET['order_id'];
    
    include 'db.php';
    
    try {
        // Fetch order details
        $stmt = $conn->prepare("SELECT * FROM orders WHERE id = ?");
        $stmt->execute([$order_id]);
        $order = $stmt->fetch(PDO::FETCH_ASSOC);
        
        if ($order) {
            echo "<h2>Order Confirmation</h2>";
            echo "<p>Your order has been successfully processed!</p>";
            echo "<p>Order ID: " . htmlspecialchars($order['id']) . "</p>";
            echo "<p>Total: $" . number_format($order['total'], 2) . "</p>";
            echo "<p>Date: " . htmlspecialchars($order['order_date']) . "</p>";
        } else {
            echo "<p>Invalid order ID.</p>";
        }
    } catch(PDOException $e) {
        echo "Error fetching order details: " . $e->getMessage();
    }
} else {
    header('Location: index.php');
    exit;
}
?>


<?php
// Step 1: Create an array to store products
$products = array(
    array(
        'id' => 1,
        'name' => 'Laptop',
        'description' => 'High-performance laptop with 8GB RAM and 500GB HDD',
        'price' => 799.99,
        'quantity' => 10
    ),
    array(
        'id' => 2,
        'name' => 'Smartphone',
        'description' => 'Latest smartphone with 64GB storage and 5G capability',
        'price' => 699.99,
        'quantity' => 15
    ),
    array(
        'id' => 3,
        'name' => 'Tablet',
        'description' => '10-inch tablet with stylus support',
        'price' => 249.99,
        'quantity' => 20
    )
);

// Step 2: Check if purchase form was submitted
if (isset($_POST['purchase'])) {
    $productId = $_POST['product_id'];
    $quantity = $_POST['quantity'];
    
    // Validate input
    if (!isset($products[$productId])) {
        die("Invalid product ID.");
    }
    
    if ($quantity <= 0) {
        die("Please select a valid quantity.");
    }
    
    // Calculate total price
    $product = $products[$productId];
    $totalPrice = $product['price'] * $quantity;
    
    // Display purchase confirmation
    echo "<h2>Thank you for your purchase!</h2>";
    echo "<p>You have purchased " . $quantity . " " . $product['name'] . "(s)</p>";
    echo "<p>Total price: $" . number_format($totalPrice, 2) . "</p>";
    
    // Step 3: Here you would typically connect to a database
    // and store the purchase information
    
} else {
    // Display product catalog
    ?>
    <html>
        <head>
            <title>Product Catalog</title>
            <style>
                .product {
                    margin: 20px;
                    padding: 15px;
                    border: 1px solid #ddd;
                }
                .price {
                    font-weight: bold;
                    color: #333;
                }
            </style>
        </head>
        <body>
            <?php foreach ($products as $index => $product): ?>
                <div class="product">
                    <h3><?php echo $product['name']; ?></h3>
                    <p><?php echo $product['description']; ?></p>
                    <p class="price">$<?php echo number_format($product['price'], 2); ?></p>
                    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
                        <input type="hidden" name="product_id" value="<?php echo $index; ?>">
                        <select name="quantity">
                            <?php for ($i = 1; $i <= $product['quantity']; $i++): ?>
                                <option value="<?php echo $i; ?>"><?php echo $i; ?></option>
                            <?php endfor; ?>
                        </select>
                        <input type="submit" name="purchase" value="Buy Now">
                    </form>
                </div>
            <?php endforeach; ?>
        </body>
    </html>
    <?php
}
?>


<?php
session_start();
include('db_connection.php');

// Get all products from database
$products = $conn->query("SELECT * FROM products");

?>
<!DOCTYPE html>
<html>
<head>
    <title>Store</title>
</head>
<body>
    <h1>Welcome to Our Store</h1>
    
    <?php while ($product = $products->fetch_assoc()): ?>
        <div class="product">
            <img src="<?php echo $product['image']; ?>" alt="<?php echo $product['name']; ?>">
            <h2><?php echo $product['name']; ?></h2>
            <p><?php echo $product['description']; ?></p>
            <p>Price: <?php echo $product['price']; ?> USD</p>
            <form action="add_to_cart.php" method="post">
                <input type="hidden" name="id" value="<?php echo $product['id']; ?>">
                <input type="hidden" name="name" value="<?php echo $product['name']; ?>">
                <input type="hidden" name="price" value="<?php echo $product['price']; ?>">
                <input type="number" name="quantity" min="1" value="1">
                <button type="submit">Add to Cart</button>
            </form>
        </div>
    <?php endwhile; ?>

    <a href="view_cart.php">View Cart</a>
</body>
</html>


<?php
session_start();
include('db_connection.php');

if (isset($_POST['id']) && isset($_SESSION['cart'])) {
    $item_id = $_POST['id'];
    $is_item_exists = 0;

    foreach ($_SESSION['cart'] as $key => $value) {
        if ($value["id"] == $item_id) {
            $_SESSION['cart'][$key]["quantity"] += $_POST['quantity'];
            $is_item_exists = 1;
            break;
        }
    }

    if ($is_item_exists == 0) {
        $item_array = array(
            'id' => $item_id,
            'name' => $_POST['name'],
            'price' => $_POST['price'],
            'quantity' => $_POST['quantity']
        );
        $_SESSION['cart'][] = $item_array;
    }
} elseif (isset($_POST['id'])) {
    $item_array = array(
        'id' => $_POST['id'],
        'name' => $_POST['name'],
        'price' => $_POST['price'],
        'quantity' => $_POST['quantity']
    );
    $_SESSION['cart'] = array($item_array);
}

header("Location: view_cart.php");
?>


<?php
session_start();
include('db_connection.php');

$total = 0;
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <?php if (!empty($_SESSION['cart'])): ?>
        <h1>Your Shopping Cart</h1>
        
        <table border="1">
            <tr>
                <th>Name</th>
                <th>Price</th>
                <th>Quantity</th>
                <th>Total</th>
                <th>Action</th>
            </tr>
            
            <?php foreach ($_SESSION['cart'] as $key => $value): ?>
                <?php $subtotal = $value["price"] * $value["quantity"]; $total += $subtotal; ?>
                <tr>
                    <td><?php echo $value["name"]; ?></td>
                    <td><?php echo $value["price"]; ?> USD</td>
                    <td><input type="number" name="quantity" min="1" value="<?php echo $value["quantity"]; ?>"></td>
                    <td><?php echo $subtotal; ?> USD</td>
                    <td><a href="remove_from_cart.php?id=<?php echo $key; ?>">Remove</a></td>
                </tr>
            <?php endforeach; ?>
            
            <tr>
                <td colspan="4">Total:</td>
                <td><?php echo $total; ?> USD</td>
            </tr>
        </table>

        <form action="checkout.php" method="post">
            <button type="submit">Checkout</button>
        </form>

    <?php else: ?>
        <h1>Your cart is empty.</h1>
        <a href="index.php">Continue Shopping</a>
    <?php endif; ?>

    <br>
    <a href="index.php">Back to Store</a>
</body>
</html>


<?php
session_start();

if (isset($_GET['id'])) {
    foreach ($_SESSION['cart'] as $key => $value) {
        if ($value["id"] == $_GET['id']) {
            unset($_SESSION['cart'][$key]);
            header("Location: view_cart.php");
        }
    }
}
?>


<?php
session_start();
include('db_connection.php');

if (isset($_POST)) {
    $customer_name = $_POST['name'];
    $email = $_POST['email'];
    $address = $_POST['address'];
    
    // Insert order into database
    $conn->query("INSERT INTO orders (customer_name, email, address, total_amount) 
                 VALUES ('$customer_name', '$email', '$address', '" . $_SESSION['total'] . "')");

    header("Location: confirmation.php");
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
</head>
<body>
    <h1> Checkout </h1>
    
    <form action="checkout.php" method="post">
        <label for="name">Name:</label><br>
        <input type="text" id="name" name="name"><br>

        <label for="email">Email:</label><br>
        <input type="email" id="email" name="email"><br>

        <label for="address">Address:</label><br>
        <input type="text" id="address" name="address"><br>

        <button type="submit">Confirm Order</button>
    </form>
</body>
</html>


<?php
session_start();
include('db_connection.php');

// Get the last inserted order
$last_order = $conn->query("SELECT * FROM orders ORDER BY id DESC LIMIT 1");
$order = $last_order->fetch_assoc();

$_SESSION['cart'] = array(); // Clear cart after purchase
?>

<!DOCTYPE html>
<html>
<head>
    <title>Order Confirmation</title>
</head>
<body>
    <h1>Thank you for your order!</h1>
    
    <p>Your order details:</p>
    <ul>
        <li>Name: <?php echo $order['customer_name']; ?></li>
        <li>Email: <?php echo $order['email']; ?></li>
        <li>Address: <?php echo $order['address']; ?></li>
        <li>Total Amount: <?php echo $order['total_amount']; ?> USD</li>
    </ul>

    <p>Your order has been received and will be processed shortly.</p>
</body>
</html>


<?php
session_start();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Products</title>
</head>
<body>
    <h1>Available Products</h1>
    
    <?php
    // Sample product data
    $products = array(
        (object)array('id' => 1, 'name' => 'Product 1', 'price' => 10.99),
        (object)array('id' => 2, 'name' => 'Product 2', 'price' => 15.99),
        (object)array('id' => 3, 'name' => 'Product 3', 'price' => 7.99)
    );
    
    foreach ($products as $product) {
        echo "<div>";
        echo "<h3>{$product->name}</h3>";
        echo "<p>Price: \${$product->price}</p>";
        echo "<a href='add_to_cart.php?id={$product->id}'>Add to Cart</a>";
        echo "</div><br>";
    }
    ?>
    
    <a href="cart.php">View Cart</a>
</body>
</html>


<?php
session_start();

// Get product ID from query string
$product_id = intval($_GET['id']);

if (isset($_SESSION['cart'])) {
    // Check if item already exists in cart
    $item_index = -1;
    for ($i = 0; $i < count($_SESSION['cart']); $i++) {
        if ($_SESSION['cart'][$i]['id'] == $product_id) {
            $item_index = $i;
            break;
        }
    }

    if ($item_index != -1) {
        // Increment quantity
        $_SESSION['cart'][$item_index]['quantity']++;
    } else {
        // Add new item to cart
        array_push($_SESSION['cart'], array('id' => $product_id, 'quantity' => 1));
    }
} else {
    // Initialize cart with first item
    $_SESSION['cart'] = array(array('id' => $product_id, 'quantity' => 1));
}

header("Location: products.php");
exit();
?>


<?php
session_start();

require_once 'products.php';

if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <h1>Your Shopping Cart</h1>
    
    <?php
    // Display cart contents
    if (count($_SESSION['cart']) == 0) {
        echo "<p>Your cart is empty.</p>";
    } else {
        $total = 0;
        
        echo "<form action='update_cart.php' method='post'>";
        foreach ($_SESSION['cart'] as $index => $item) {
            // Get product details from products array
            $product = null;
            foreach ($products as $prod) {
                if ($prod->id == $item['id']) {
                    $product = $prod;
                    break;
                }
            }
            
            if ($product != null) {
                echo "<div>";
                echo "<h3>{$product->name}</h3>";
                echo "<p>Price: \${$product->price}</p>";
                echo "<input type='number' name='quantity[$index]' value='{$item['quantity']}' min='1'>";
                echo "</div><br>";
            }
        }
        
        echo "<button type='submit'>Update Cart</button>";
        echo "</form>";
    }
    
    if (count($_SESSION['cart']) > 0) {
        echo "<a href='remove_from_cart.php'>Remove Selected Items</a> | ";
        echo "<a href='products.php'>Continue Shopping</a>";
    }
    
    // Calculate total price
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        foreach ($products as $product) {
            if ($product->id == $item['id']) {
                $total += $product->price * $item['quantity'];
                break;
            }
        }
    }
    
    echo "<h2>Total: \${$total}</h2>";
    ?>
</body>
</html>


<?php
session_start();

// Update quantities in cart
foreach ($_POST['quantity'] as $index => $qty) {
    $_SESSION['cart'][$index]['quantity'] = intval($qty);
}

header("Location: cart.php");
exit();
?>


<?php
session_start();

// Remove items from cart (we'll use GET for simplicity, but POST could be used instead)
foreach ($_GET['remove'] as $index) {
    unset($_SESSION['cart'][$index]);
}

$_SESSION['cart'] = array_values($_SESSION['cart']); // Re-index the array

header("Location: cart.php");
exit();
?>


<?php
// Database connection
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "myshop";

$conn = mysqli_connect($servername, $username, $password, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Start session
session_start();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Online Store</title>
    <style>
        /* Add your CSS styles here */
        body { font-family: Arial, sans-serif; }
        .product-list { list-style: none; padding: 0; margin: 0; }
        .product-item { border: 1px solid #ddd; padding: 10px; margin-bottom: 10px; }
    </style>
</head>
<body>

<?php
if (isset($_GET['action'])) {
    switch ($_GET['action']) {
        case 'add_to_cart':
            if (!empty($_POST)) {
                $productId = $_POST['product_id'];
                
                // Check if product exists in database
                $sql = "SELECT * FROM products WHERE id=" . mysqli_real_escape_string($conn, $productId);
                $result = mysqli_query($conn, $sql);
                if (mysqli_num_rows($result) > 0) {
                    $product = mysqli_fetch_assoc($result);
                    
                    // Add product to cart
                    if (!isset($_SESSION['cart'])) {
                        $_SESSION['cart'] = array();
                    }
                    if (!array_key_exists($productId, $_SESSION['cart'])) {
                        $_SESSION['cart'][$productId] = array(
                            'id' => $product['id'],
                            'name' => $product['name'],
                            'price' => $product['price'],
                            'quantity' => 1
                        );
                    } else {
                        $_SESSION['cart'][$productId]['quantity']++;
                    }
                }
            }
            break;
            
        case 'view_cart':
            // Display cart items
            if (!isset($_SESSION['cart'])) {
                echo "<p>Your cart is empty.</p>";
            } else {
                $total = 0;
                foreach ($_SESSION['cart'] as $item) {
                    $total += ($item['price'] * $item['quantity']);
                ?>
                <div class="product-item">
                    <h3><?php echo $item['name']; ?></h3>
                    <p>Price: <?php echo $item['price']; ?> x <?php echo $item['quantity']; ?></p>
                    <a href="?action=remove_from_cart&product_id=<?php echo $item['id']; ?>">Remove</a>
                </div>
                <?php
                }
                echo "<h3>Total: " . $total . "</h3>";
            }
            break;
            
        case 'remove_from_cart':
            $productId = $_GET['product_id'];
            if (isset($_SESSION['cart'][$productId])) {
                unset($_SESSION['cart'][$productId]);
            }
            header("Location: ?action=view_cart");
            break;
            
        case 'checkout':
            // Process checkout
            if (!empty($_POST)) {
                $name = mysqli_real_escape_string($conn, $_POST['name']);
                $email = mysqli_real_escape_string($conn, $_POST['email']);
                $address = mysqli_real_escape_string($conn, $_POST['address']);
                $card_number = mysqli_real_escape_string($conn, $_POST['card_number']);
                
                // Insert order into database
                $sql = "INSERT INTO orders (name, email, address, card_number) VALUES ('$name', '$email', '$address', '$card_number')";
                if (mysqli_query($conn, $sql)) {
                    $orderId = mysqli_insert_id($conn);
                    
                    // Insert order items
                    foreach ($_SESSION['cart'] as $item) {
                        $sql = "INSERT INTO order_items (order_id, product_id, quantity, price) VALUES ('$orderId', '{$item['id']}', '{$item['quantity']}', '{$item['price']}')";
                        mysqli_query($conn, $sql);
                    }
                    
                    // Clear cart
                    unset($_SESSION['cart']);
                    
                    echo "<h2>Thank you for your order!</h2>";
                } else {
                    echo "Error: " . mysqli_error($conn);
                }
            }
            break;
    }
} else {
    // Display products
    $sql = "SELECT * FROM products";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) > 0) {
        while ($row = mysqli_fetch_assoc($result)) { ?>
            <div class="product-item">
                <h3><?php echo $row['name']; ?></h3>
                <p><?php echo $row['description']; ?></p>
                <p>Price: <?php echo $row['price']; ?></p>
                <form action="?action=add_to_cart" method="post">
                    <input type="hidden" name="product_id" value="<?php echo $row['id']; ?>">
                    <button type="submit">Add to Cart</button>
                </form>
            </div><?php
        }
    } else {
        echo "<p>No products available.</p>";
    }
}
?>

<a href="?action=view_cart">View Cart</a>

<?php if (isset($_SESSION['cart'])) { ?>
<form action="?action=checkout" method="post">
    <h2>Checkout</h2>
    <label for="name">Name:</label><br>
    <input type="text" id="name" name="name"><br><br>
    
    <label for="email">Email:</label><br>
    <input type="email" id="email" name="email"><br><br>
    
    <label for="address">Address:</label><br>
    <input type="text" id="address" name="address"><br><br>
    
    <label for="card_number">Card Number:</label><br>
    <input type="text" id="card_number" name="card_number"><br><br>
    
    <button type="submit">Place Order</button>
</form>
<?php } ?>

</body>
</html>



<?php
session_start();

// Sample products array (you would typically retrieve this from a database)
$products = array(
    1 => array('name' => 'Product A', 'price' => 29.99, 'quantity' => 5),
    2 => array('name' => 'Product B', 'price' => 49.99, 'quantity' => 3),
    3 => array('name' => 'Product C', 'price' => 19.99, 'quantity' => 10)
);

// Initialize cart if not already set
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add item to cart
if (isset($_GET['action']) && $_GET['action'] == 'add') {
    $productId = intval($_GET['id']);
    $quantity = intval($_GET['quantity']);

    if ($quantity > 0) {
        if (isset($_SESSION['cart'][$productId])) {
            // Update existing item
            $_SESSION['cart'][$productId]['quantity'] += $quantity;
            $_SESSION['cart'][$productId]['total_price'] = $_SESSION['cart'][$productId]['price'] * $_SESSION['cart'][$productId]['quantity'];
        } else {
            // Add new item
            $_SESSION['cart'][$productId] = array(
                'name' => $products[$productId]['name'],
                'price' => $products[$productId]['price'],
                'quantity' => $quantity,
                'total_price' => $products[$productId]['price'] * $quantity
            );
        }
    }
}

// Remove item from cart
if (isset($_GET['action']) && $_GET['action'] == 'remove') {
    $productId = intval($_GET['id']);
    unset($_SESSION['cart'][$productId]);
}

// Clear cart
if (isset($_GET['action']) && $_GET['action'] == 'clear') {
    $_SESSION['cart'] = array();
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Online Store</title>
    <style>
        body { font-family: Arial, sans-serif; }
        .container { max-width: 1200px; margin: 0 auto; padding: 20px; }
        .product-card { border: 1px solid #ddd; padding: 10px; margin-bottom: 20px; }
        .cart-item { margin-bottom: 15px; }
        .price { font-weight: bold; color: green; }
        .total-price { font-size: 24px; font-weight: bold; }
    </style>
</head>
<body>
    <div class="container">
        <?php if (isset($_GET['page'])) { ?>
            <?php if ($_GET['page'] == 'cart') { ?>
                <!-- Shopping Cart Page -->
                <h1>Shopping Cart</h1>
                <?php if (!empty($_SESSION['cart'])) { ?>
                    <div class="cart">
                        <?php foreach ($_SESSION['cart'] as $id => $item) { ?>
                            <div class="cart-item">
                                <strong><?php echo $item['name']; ?></strong><br>
                                Price: <?php echo "$" . number_format($item['price'], 2); ?><br>
                                Quantity: <?php echo $item['quantity']; ?><br>
                                Total: <?php echo "$" . number_format($item['total_price'], 2); ?>
                                <a href="?action=remove&id=<?php echo $id; ?>">Remove</a>
                            </div>
                        <?php } ?>
                    </div>
                    <p class="total-price">
                        Subtotal: <?php 
                            $subtotal = array_sum(array_column($_SESSION['cart'], 'total_price'));
                            echo "$" . number_format($subtotal, 2); 
                        ?>
                    </p>
                    <a href="?page=checkout">Proceed to Checkout</a> |
                    <a href="?action=clear">Clear Cart</a>
                <?php } else { ?>
                    <p>Your cart is empty.</p>
                    <a href="?page=products">Continue Shopping</a>
                <?php } ?>
            <?php } elseif ($_GET['page'] == 'checkout') { ?>
                <!-- Checkout Page -->
                <h1>Checkout</h1>
                <?php if (!empty($_SESSION['cart'])) { ?>
                    <form action="process_payment.php" method="post">
                        <div class="payment-info">
                            <h2>Payment Information</h2>
                            <label for="card_number">Card Number:</label>
                            <input type="text" id="card_number" name="card_number" required><br>
                            <label for="card_cvv">CVV:</label>
                            <input type="text" id="card_cvv" name="card_cvv" required><br>
                            <label for="card_exp_month">Expiration Month:</label>
                            <input type="text" id="card_exp_month" name="card_exp_month" required><br>
                            <label for="card_exp_year">Expiration Year:</label>
                            <input type="text" id="card_exp_year" name="card_exp_year" required><br>
                        </div>
                        <button type="submit">Place Order</button>
                    </form>
                <?php } else { ?>
                    <p>Your cart is empty.</p>
                    <a href="?page=products">Continue Shopping</a>
                <?php } ?>
            <?php } elseif ($_GET['page'] == 'confirmation') { ?>
                <!-- Order Confirmation Page -->
                <h1>Order Confirmation</h1>
                <p>Thank you for your order!</p>
                <p>Your order has been processed successfully.</p>
                <p>Subtotal: <?php echo "$" . number_format($subtotal, 2); ?></p>
                <p>Tax: <?php echo "$" . number_format(0.0, 2); ?> (to be implemented)</p>
                <p>Total Amount Paid: <?php echo "$" . number_format($amount_paid, 2); ?></p>
                <a href="?page=products">Continue Shopping</a>
            <?php } ?>
        <?php } else { ?>
            <!-- Products Page -->
            <h1>Our Products</h1>
            <div class="product-catalog">
                <?php foreach ($products as $id => $product) { ?>
                    <div class="product-card">
                        <?php if ($product['quantity'] > 0) { ?>
                            <img src="product_<?php echo $id; ?>.jpg" alt="<?php echo $product['name']; ?>" style="max-width: 200px;">
                            <h3><?php echo $product['name']; ?></h3>
                            <p><?php echo $product['description']; ?></p>
                            <p class="price"><?php echo "$" . number_format($product['price'], 2); ?></p>
                            <form action="?action=add&id=<?php echo $id; ?>" method="get">
                                <input type="number" name="quantity" min="1" max="<?php echo $product['quantity']; ?>" value="1" required>
                                <button type="submit">Add to Cart</button>
                            </form>
                        <?php } else { ?>
                            <p>Sold Out!</p>
                        <?php } ?>
                    </div>
                <?php } ?>
            </div>
        <?php } ?>

        <!-- Navigation -->
        <nav style="margin-top: 20px;">
            <a href="?page=products">Products</a> |
            <a href="?page=cart">Shopping Cart</a> |
            <a href="?page=checkout">Checkout</a>
        </nav>
    </div>
</body>
</html>


<?php
// config.php
$host = 'localhost';
$dbname = 'purchase_system';
$username = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
} catch(PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}
?>

<?php
// classes/Product.php
class Product {
    private $conn;

    public function __construct($db_connection) {
        $this->conn = $db_connection;
    }

    // Add new product
    public function addProduct($name, $description, $price, $quantity, $image) {
        try {
            $stmt = $this->conn->prepare("INSERT INTO products (name, description, price, quantity, image) 
                                      VALUES (:name, :description, :price, :quantity, :image)");
            $stmt->execute(array(
                ':name' => $name,
                ':description' => $description,
                ':price' => $price,
                ':quantity' => $quantity,
                ':image' => $image
            ));
            return true;
        } catch(PDOException $e) {
            echo "Error adding product: " . $e->getMessage();
            return false;
        }
    }

    // Get all products
    public function getProducts() {
        try {
            $stmt = $this->conn->query("SELECT * FROM products");
            $products = $stmt->fetchAll(PDO::FETCH_ASSOC);
            return $products;
        } catch(PDOException $e) {
            echo "Error fetching products: " . $e->getMessage();
            return false;
        }
    }
}

// classes/Cart.php
class Cart {
    private $conn;

    public function __construct($db_connection) {
        $this->conn = $db_connection;
    }

    // Add item to cart
    public function addToCart($product_id, $quantity) {
        try {
            session_start();
            if (!isset($_SESSION['cart'])) {
                $_SESSION['cart'] = array();
            }
            
            if (array_key_exists($product_id, $_SESSION['cart'])) {
                $_SESSION['cart'][$product_id]['quantity'] += $quantity;
            } else {
                $stmt = $this->conn->prepare("SELECT price FROM products WHERE id = :id");
                $stmt->execute(array(':id' => $product_id));
                $result = $stmt->fetch(PDO::FETCH_ASSOC);
                
                $_SESSION['cart'][$product_id] = array(
                    'product_id' => $product_id,
                    'quantity' => $quantity,
                    'price' => $result['price']
                );
            }
            
            return true;
        } catch(PDOException $e) {
            echo "Error adding to cart: " . $e->getMessage();
            return false;
        }
    }

    // Get total price of cart
    public function getCartTotal() {
        try {
            session_start();
            $total = 0;
            foreach ($_SESSION['cart'] as $item) {
                $total += ($item['quantity'] * $item['price']);
            }
            return $total;
        } catch(PDOException $e) {
            echo "Error calculating cart total: " . $e->getMessage();
            return false;
        }
    }

    // Update cart item quantity
    public function updateCartItem($product_id, $new_quantity) {
        try {
            session_start();
            if (isset($_SESSION['cart'][$product_id])) {
                $_SESSION['cart'][$product_id]['quantity'] = $new_quantity;
                return true;
            }
            return false;
        } catch(PDOException $e) {
            echo "Error updating cart: " . $e->getMessage();
            return false;
        }
    }

    // Remove item from cart
    public function removeFromCart($product_id) {
        try {
            session_start();
            if (isset($_SESSION['cart'][$product_id])) {
                unset($_SESSION['cart'][$product_id]);
                return true;
            }
            return false;
        } catch(PDOException $e) {
            echo "Error removing from cart: " . $e->getMessage();
            return false;
        }
    }

    // Get all items in cart
    public function getCartItems() {
        try {
            session_start();
            if (!isset($_SESSION['cart'])) {
                $_SESSION['cart'] = array();
            }
            $cart_items = $_SESSION['cart'];
            return $cart_items;
        } catch(PDOException $e) {
            echo "Error fetching cart items: " . $e->getMessage();
            return false;
        }
    }
}

// classes/Checkout.php
class Checkout {
    private $conn;

    public function __construct($db_connection) {
        $this->conn = $db_connection;
    }

    // Place order
    public function placeOrder($user_name, $email) {
        try {
            session_start();
            if (empty($_SESSION['cart'])) {
                return "Cart is empty";
            }
            
            // Insert into orders table
            $stmt = $this->conn->prepare("INSERT INTO orders (user_name, email, total_amount, status) 
                                      VALUES (:user_name, :email, :total_amount, 'pending')");
            $stmt->execute(array(
                ':user_name' => $user_name,
                ':email' => $email,
                ':total_amount' => $this->getCartTotal()
            ));
            
            $order_id = $this->conn->lastInsertId();
            
            // Insert into order_items table
            foreach ($_SESSION['cart'] as $item) {
                $stmt = $this->conn->prepare("INSERT INTO order_items (order_id, product_id, quantity, price)
                                          VALUES (:order_id, :product_id, :quantity, :price)");
                $stmt->execute(array(
                    ':order_id' => $order_id,
                    ':product_id' => $item['product_id'],
                    ':quantity' => $item['quantity'],
                    ':price' => $item['price']
                ));
            }
            
            // Clear cart
            $_SESSION['cart'] = array();
            
            return "Order placed successfully! Order ID: #" . $order_id;
        } catch(PDOException $e) {
            echo "Error placing order: " . $e->getMessage();
            return false;
        }
    }

    // Get cart total for checkout
    private function getCartTotal() {
        session_start();
        $total = 0;
        foreach ($_SESSION['cart'] as $item) {
            $total += ($item['quantity'] * $item['price']);
        }
        return $total;
    }
}
?>


<?php
include_once('config.php');
$product = new Product($conn);
$products = $product->getProducts();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Product List</title>
</head>
<body>
    <h1>Available Products</h1>
    <?php foreach ($products as $prod): ?>
        <div style="border: 1px solid #ddd; padding: 10px; margin-bottom: 10px;">
            <h3><?php echo $prod['name']; ?></h3>
            <p><?php echo $prod['description']; ?></p>
            <p>Price: <?php echo $prod['price']; ?> USD</p>
            <p>Quantity Available: <?php echo $prod['quantity']; ?></p>
            <?php if ($prod['image']): ?>
                <img src="<?php echo $prod['image']; ?>" alt="<?php echo $prod['name']; ?>" width="200">
            <?php endif; ?>
            <form action="add_to_cart.php" method="POST">
                <input type="hidden" name="product_id" value="<?php echo $prod['id']; ?>">
                <input type="number" name="quantity" min="1" max="<?php echo $prod['quantity']; ?>" value="1">
                <button type="submit">Add to Cart</button>
            </form>
        </div>
    <?php endforeach; ?>
    <a href="cart.php">View Cart</a>
</body>
</html>


<?php
session_start();
include_once('config.php');
$cart = new Cart($conn);

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $product_id = $_POST['product_id'];
    $quantity = $_POST['quantity'];
    
    if ($cart->addToCart($product_id, $quantity)) {
        header("Location: products.php");
        exit();
    } else {
        echo "Error adding to cart";
    }
}
?>


<?php
session_start();
include_once('config.php');
$cart = new Cart($conn);
$cart_items = $cart->getCartItems();

$total = 0;
foreach ($cart_items as $item) {
    $total += ($item['quantity'] * $item['price']);
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <h1>Your Shopping Cart</h1>
    <?php if (!empty($cart_items)): ?>
        <table border="1">
            <tr>
                <th>Product ID</th>
                <th>Quantity</th>
                <th>Price</th>
                <th>Total</th>
                <th>Action</th>
            </tr>
            <?php foreach ($cart_items as $item): ?>
                <tr>
                    <td><?php echo $item['product_id']; ?></td>
                    <td><input type="number" name="quantity-<?php echo $item['product_id']; ?>" min="1" value="<?php echo $item['quantity']; ?>"></td>
                    <td><?php echo $item['price']; ?> USD</td>
                    <td><?php echo ($item['quantity'] * $item['price']); ?> USD</td>
                    <td>
                        <form action="update_cart.php" method="POST">
                            <input type="hidden" name="product_id" value="<?php echo $item['product_id']; ?>">
                            <button type="submit">Update</button>
                        </form>
                        <a href="remove_from_cart.php?product_id=<?php echo $item['product_id']; ?>">Remove</a>
                    </td>
                </tr>
            <?php endforeach; ?>
        </table>
        <h3>Total: <?php echo $total; ?> USD</h3>
        <a href="checkout.php">Proceed to Checkout</a>
    <?php else: ?>
        <p>Your cart is empty!</p>
        <a href="products.php">Continue Shopping</a>
    <?php endif; ?>
</body>
</html>


<?php
session_start();
include_once('config.php');
$cart = new Cart($conn);

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $product_id = $_POST['product_id'];
    $new_quantity = $_POST["quantity-$product_id"];
    
    if ($cart->updateCartItem($product_id, $new_quantity)) {
        header("Location: cart.php");
        exit();
    } else {
        echo "Error updating cart";
    }
}
?>


<?php
session_start();
include_once('config.php');
$cart = new Cart($conn);

if (isset($_GET['product_id'])) {
    $product_id = $_GET['product_id'];
    
    if ($cart->removeFromCart($product_id)) {
        header("Location: cart.php");
        exit();
    } else {
        echo "Error removing from cart";
    }
}
?>


<?php
session_start();
include_once('config.php');
$cart = new Cart($conn);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
</head>
<body>
    <?php if (!empty($_SESSION['cart'])): ?>
        <h1>Checkout</h1>
        <form action="process_checkout.php" method="POST">
            <div>
                <label for="user_name">Name:</label>
                <input type="text" id="user_name" name="user_name" required>
            </div>
            <div>
                <label for="email">Email:</label>
                <input type="email" id="email" name="email" required>
            </div>
            <h3>Total: <?php echo $cart->getCartTotal(); ?> USD</h3>
            <button type="submit">Confirm Order</button>
        </form>
    <?php else: ?>
        <p>Your cart is empty!</p>
        <a href="products.php">Continue Shopping</a>
    <?php endif; ?>
</body>
</html>


<?php
session_start();
include_once('config.php');
$checkout = new Checkout($conn);

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $user_name = $_POST['user_name'];
    $email = $_POST['email'];
    
    $result = $checkout->placeOrder($user_name, $email);
    echo $result;
} else {
    echo "Invalid request";
}
?>


<?php
// Initialize session
session_start();

// Include database configuration
include 'db_config.php';

// Get product details from the database
$sql = "SELECT * FROM products";
$result = $conn->query($sql);
$products = $result->fetchAll(PDO::FETCH_ASSOC);

if (isset($_POST['add_to_cart'])) {
    // Add item to cart
    $product_id = $_POST['product_id'];
    $quantity = 1;

    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }

    if (isset($_SESSION['cart'][$product_id])) {
        $_SESSION['cart'][$product_id]['quantity']++;
    } else {
        // Get product details
        $sql_product = "SELECT * FROM products WHERE id=?";
        $stmt = $conn->prepare($sql_product);
        $stmt->execute([$product_id]);
        $product = $stmt->fetch(PDO::FETCH_ASSOC);

        $_SESSION['cart'][$product_id] = array(
            'id' => $product['id'],
            'name' => $product['name'],
            'price' => $product['price'],
            'quantity' => 1
        );
    }
}

// Calculate subtotal
function calculate_subtotal($cart) {
    $subtotal = 0;
    foreach ($cart as $item) {
        $subtotal += $item['price'] * $item['quantity'];
    }
    return number_format($subtotal, 2);
}

if (isset($_POST['checkout'])) {
    // Process checkout
    if (!empty($_SESSION['cart']) && isset($_POST['email'], $_POST['address'])) {
        $email = $_POST['email'];
        $address = $_POST['address'];

        // Insert order into database
        $sql_order = "INSERT INTO orders (email, address, total_amount) VALUES (?, ?, ?)";
        $stmt = $conn->prepare($sql_order);
        $total_amount = calculate_subtotal($_SESSION['cart']);
        $stmt->execute([$email, $address, $total_amount]);

        // Get order ID
        $order_id = $conn->lastInsertId();

        // Insert order details
        foreach ($_SESSION['cart'] as $item) {
            $sql_order_details = "INSERT INTO order_details (order_id, product_id, quantity, price) VALUES (?, ?, ?, ?)";
            $stmt = $conn->prepare($sql_order_details);
            $stmt->execute([$order_id, $item['id'], $item['quantity'], $item['price']]);
        }

        // Clear cart
        unset($_SESSION['cart']);
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>
    <div class="container mt-4">
        <h2>Products</h2>
        
        <?php if (!empty($products)) : ?>
            <div class="row">
                <?php foreach ($products as $product) : ?>
                    <div class="col-md-3 mb-4">
                        <div class="card">
                            <img src="<?php echo $product['image']; ?>" alt="<?php echo $product['name']; ?>" class="card-img-top">
                            <div class="card-body">
                                <h5 class="card-title"><?php echo $product['name']; ?></h5>
                                <p class="card-text">Price: <?php echo number_format($product['price'], 2); ?></p>
                                <form action="" method="POST">
                                    <input type="hidden" name="product_id" value="<?php echo $product['id']; ?>">
                                    <button type="submit" name="add_to_cart" class="btn btn-primary">Add to Cart</button>
                                </form>
                            </div>
                        </div>
                    </div>
                <?php endforeach; ?>
            </div>
        <?php else : ?>
            <p>No products available.</p>
        <?php endif; ?>

        <!-- Shopping Cart -->
        <?php if (!empty($_SESSION['cart'])) : ?>
            <h2 class="mt-4">Shopping Cart</h2>
            <table class="table">
                <thead>
                    <tr>
                        <th>Product Name</th>
                        <th>Price</th>
                        <th>Quantity</th>
                        <th>Total</th>
                    </tr>
                </thead>
                <tbody>
                    <?php foreach ($_SESSION['cart'] as $item) : ?>
                        <tr>
                            <td><?php echo $item['name']; ?></td>
                            <td><?php echo number_format($item['price'], 2); ?></td>
                            <td><?php echo $item['quantity']; ?></td>
                            <td><?php echo number_format($item['price'] * $item['quantity'], 2); ?></td>
                        </tr>
                    <?php endforeach; ?>
                </tbody>
            </table>
            <p>Total: <?php echo calculate_subtotal($_SESSION['cart']); ?></p>

            <!-- Checkout Form -->
            <form action="" method="POST">
                <div class="mb-3">
                    <label for="email">Email:</label>
                    <input type="email" name="email" id="email" required class="form-control">
                </div>
                <div class="mb-3">
                    <label for="address">Address:</label>
                    <input type="text" name="address" id="address" required class="form-control">
                </div>
                <button type="submit" name="checkout" class="btn btn-success">Checkout</button>
            </form>
        <?php else : ?>
            <p>Your cart is empty.</p>
        <?php endif; ?>

    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>


<?php
// Start session
session_start();

// Database connection (replace with your own credentials)
$host = "localhost";
$user = "root";
$password = "";
$dbname = "shop";

$conn = mysqli_connect($host, $user, $password, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Products.php - Display products
?>
<!DOCTYPE html>
<html>
<head>
    <title>Product List</title>
</head>
<body>
    <?php
        // Sample products (you can replace with database query)
        $products = array(
            array('id' => 1, 'name' => 'Laptop', 'price' => 999.99),
            array('id' => 2, 'name' => 'Phone', 'price' => 699.99),
            array('id' => 3, 'name' => 'Tablet', 'price' => 299.99)
        );

        foreach ($products as $product) {
    ?>
        <div style="border:1px solid #ddd; padding:10px; margin:5px;">
            <h3><?php echo $product['name']; ?></h3>
            <p>Price: <?php echo $product['price']; ?></p>
            <a href="add_to_cart.php?id=<?php echo $product['id']; ?>">Add to Cart</a>
        </div>
    <?php
        }
    ?>
</body>
</html>

<?php
// add_to_cart.php - Add product to cart
if (isset($_GET['id'])) {
    $productId = $_GET['id'];

    // Initialize cart if not exists
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }

    // Check if product already in cart
    if (array_key_exists($productId, $_SESSION['cart'])) {
        $_SESSION['cart'][$productId]['quantity']++;
    } else {
        $_SESSION['cart'][$productId] = array(
            'id' => $productId,
            'name' => getProductName($productId),
            'price' => getProductPrice($productId),
            'quantity' => 1
        );
    }

    header("Location: view_cart.php");
}

function getProductPrice($productId) {
    // Replace with your database query
    return 99.99; // Example price
}

function getProductName($productId) {
    // Replace with your database query
    return "Product $productId"; // Example name
}
?>

<?php
// view_cart.php - Display cart contents
?>
<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <h1>Your Shopping Cart</h1>
    <?php
        if (!isset($_SESSION['cart']) || empty($_SESSION['cart'])) {
            echo "<p>Your cart is empty.</p>";
        } else {
            $total = 0;
            foreach ($_SESSION['cart'] as $item) {
                $subtotal = $item['price'] * $item['quantity'];
                $total += $subtotal;
    ?>
                <div style="border:1px solid #ddd; padding:10px; margin:5px;">
                    <h3><?php echo $item['name']; ?></h3>
                    <p>Price: <?php echo $item['price']; ?></p>
                    <p>Quantity: <?php echo $item['quantity']; ?></p>
                    <a href="update_cart.php?action=remove&id=<?php echo $item['id']; ?>">Remove</a>
                </div>
    <?php
            }
            echo "<h2>Total: $" . number_format($total, 2) . "</h2>";
            echo "<a href='checkout.php'>Checkout</a>";
        }
    ?>
</body>
</html>

<?php
// update_cart.php - Update cart quantities or remove items
if (isset($_GET['action']) && isset($_GET['id'])) {
    $productId = $_GET['id'];
    
    if ($_GET['action'] == 'remove') {
        unset($_SESSION['cart'][$productId]);
    } else if ($_GET['action'] == 'update' && isset($_POST['quantity'])) {
        $newQuantity = $_POST['quantity'];
        if ($newQuantity > 0) {
            $_SESSION['cart'][$productId]['quantity'] = $newQuantity;
        }
    }

    header("Location: view_cart.php");
}
?>

<?php
// checkout.php - Checkout process
?>
<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
</head>
<body>
    <?php
        if (!isset($_SESSION['cart']) || empty($_SESSION['cart'])) {
            echo "<p>Your cart is empty. Please add items to your cart first.</p>";
            exit();
        }
    ?>
    
    <h1>Checkout</h1>
    <form action="process_order.php" method="post">
        <div style="border:1px solid #ddd; padding:20px;">
            <h3>Billing Information</h3>
            <label for="name">Name:</label><br>
            <input type="text" id="name" name="name" required><br><br>

            <label for="email">Email:</label><br>
            <input type="email" id="email" name="email" required><br><br>

            <label for="phone">Phone:</label><br>
            <input type="tel" id="phone" name="phone" required><br><br>

            <label for="address">Address:</label><br>
            <textarea id="address" name="address" rows="3" required></textarea><br><br>

            <input type="submit" value="Place Order">
        </div>
    </form>
</body>
</html>

<?php
// process_order.php - Process the order
if (isset($_POST)) {
    // Check if cart is empty
    if (!isset($_SESSION['cart']) || empty($_SESSION['cart'])) {
        header("Location: checkout.php");
        exit();
    }

    // Sanitize input data
    $name = htmlspecialchars(trim($_POST['name']));
    $email = htmlspecialchars(trim($_POST['email']));
    $phone = htmlspecialchars(trim($_POST['phone']));
    $address = htmlspecialchars(trim($_POST['address']));

    // Generate order ID
    $orderId = time();

    // Insert order into database (replace with your actual query)
    $sql = "INSERT INTO orders (order_id, name, email, phone, address) VALUES ('$orderId', '$name', '$email', '$phone', '$address')";
    if (!mysqli_query($conn, $sql)) {
        die("Error: " . mysqli_error($conn));
    }

    // Insert order details into database
    foreach ($_SESSION['cart'] as $item) {
        $sqlDetails = "INSERT INTO order_details (order_id, product_id, quantity, price) VALUES ('$orderId', '$item[id]', '$item[quantity]', '$item[price]')";
        if (!mysqli_query($conn, $sqlDetails)) {
            die("Error: " . mysqli_error($conn));
        }
    }

    // Clear cart
    unset($_SESSION['cart']);

    // Display success message
    echo "<h1>Thank you for your order!</h1>";
    echo "<p>Your order has been received. Order ID: $orderId</p>";
}
?>

<?php
// logout.php - Logout functionality
session_unset();
session_destroy();
header("Location: products.php");
?>


<?php
// Database connection
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "myDB";

$conn = new mysqli($servername, $username, $password, $dbname);
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to get products
function getProducts() {
    global $conn;
    $sql = "SELECT * FROM products";
    $result = $conn->query($sql);
    
    if ($result->num_rows > 0) {
        while($row = $result->fetch_assoc()) {
            echo "<div class='product'>";
            echo "<h3>".$row["name"]."</h3>";
            echo "<p>Price: $".$row["price"]."</p>";
            echo "<button onclick='addToCart(".$row["id"].")'>Add to Cart</button>";
            echo "</div>";
        }
    } else {
        echo "No products found";
    }
}

// Function to add item to cart
function addToCart($productId) {
    global $conn;
    
    // Start session if not started
    if(!isset($_SESSION)) {
        session_start();
    }
    
    // Check if product exists in database
    $sql = "SELECT * FROM products WHERE id=?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("i", $productId);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows > 0) {
        // Add to cart
        $product = $result->fetch_assoc();
        
        if (isset($_SESSION['cart'][$productId])) {
            $_SESSION['cart'][$productId]['quantity']++;
        } else {
            $_SESSION['cart'][$productId] = array(
                "name" => $product["name"],
                "price" => $product["price"],
                "quantity" => 1
            );
        }
        
        echo "Item added to cart";
    } else {
        echo "Product not found";
    }
}

// Function to calculate cart total
function getCartTotal() {
    global $conn;
    
    if (!isset($_SESSION)) {
        session_start();
    }
    
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += ($item['price'] * $item['quantity']);
    }
    
    return $total;
}

// Function to place order
function placeOrder() {
    global $conn;
    
    if (!isset($_SESSION)) {
        session_start();
    }
    
    // Get user ID (assuming you have a logged-in user)
    $userId = 1; // Replace with actual user ID
    
    $cart = $_SESSION['cart'];
    $totalAmount = getCartTotal();
    
    // Insert order into orders table
    $sql = "INSERT INTO orders (user_id, total_amount, created_at, updated_at) 
            VALUES (?, ?, NOW(), NOW())";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("id", $userId, $totalAmount);
    
    if ($stmt->execute()) {
        // Get order ID
        $orderId = $conn->insert_id;
        
        // Insert order items into order_items table
        foreach ($cart as $productId => $item) {
            $sql = "INSERT INTO order_items (order_id, product_id, quantity, price)
                    VALUES (?, ?, ?, ?)";
            $stmt = $conn->prepare($sql);
            $stmt->bind_param("iiid", $orderId, $productId, $item['quantity'], $item['price']);
            $stmt->execute();
        }
        
        // Clear cart
        unset($_SESSION['cart']);
        
        return true;
    } else {
        return false;
    }
}

// Function to generate payment receipt
function generatePaymentReceipt($order_id) {
    global $conn;
    
    $sql = "SELECT * FROM orders WHERE id=? AND user_id=?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("ii", $order_id, $_SESSION['user_id']);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows > 0) {
        $order = $result->fetch_assoc();
        
        // Get order items
        $sql = "SELECT * FROM order_items WHERE order_id=?";
        $stmt = $conn->prepare($sql);
        $stmt->bind_param("i", $order_id);
        $stmt->execute();
        $itemsResult = $stmt->get_result();
        
        echo "<div class='receipt'>";
        echo "<h2>Payment Receipt</h2>";
        echo "<p>Order ID: ".$order['id']."</p>";
        echo "<p>Total Amount: $".$order['total_amount']."</p>";
        echo "<h3>Items:</h3>";
        
        while($item = $itemsResult->fetch_assoc()) {
            echo "<div class='item'>";
            echo "<p>".$item['name']." x ".$item['quantity']."</p>";
            echo "</div>";
        }
        
        echo "</div>";
    } else {
        echo "Order not found";
    }
}

// Example usage:
if (isset($_POST['purchase'])) {
    if (placeOrder()) {
        // Redirect to payment page or show success message
        header("Location: payment.php?order_id=".$conn->insert_id);
        exit();
    } else {
        echo "Error placing order";
    }
}
?>


<?php
session_start();
include("db_connection.php");

// Product class
class Product {
    private $conn;

    public function __construct($db) {
        $this->conn = $db;
    }

    // Add product to database
    public function addProduct($name, $description, $price, $stock) {
        try {
            $stmt = $this->conn->prepare("INSERT INTO products (name, description, price, stock) VALUES (?, ?, ?, ?)");
            $stmt->execute([$name, $description, $price, $stock]);
            return true;
        } catch(PDOException $e) {
            echo "Error: " . $e->getMessage();
            return false;
        }
    }

    // Get all products
    public function getAllProducts() {
        try {
            $stmt = $this->conn->query("SELECT * FROM products");
            return $stmt->fetchAll(PDO::FETCH_ASSOC);
        } catch(PDOException $e) {
            echo "Error: " . $e->getMessage();
            return false;
        }
    }

    // Check product stock
    public function checkStock($productId, $quantity) {
        try {
            $stmt = $this->conn->prepare("SELECT stock FROM products WHERE id = ?");
            $stmt->execute([$productId]);
            $result = $stmt->fetch(PDO::FETCH_ASSOC);
            return $result['stock'] >= $quantity;
        } catch(PDOException $e) {
            echo "Error: " . $e->getMessage();
            return false;
        }
    }
}

// Cart class
class Cart {
    public function __construct() {
        if (!isset($_SESSION['cart'])) {
            $_SESSION['cart'] = array();
        }
    }

    // Add item to cart
    public function addItem($productId, $quantity) {
        if (isset($_SESSION['cart'][$productId])) {
            $_SESSION['cart'][$productId] += $quantity;
        } else {
            $_SESSION['cart'][$productId] = $quantity;
        }
    }

    // Get total price of items in cart
    public function getTotal($products) {
        $total = 0;
        foreach ($_SESSION['cart'] as $productId => $quantity) {
            $productPrice = $products[$productId]['price'];
            $total += ($productPrice * $quantity);
        }
        return $total;
    }

    // Update item quantity
    public function updateItem($productId, $quantity) {
        if (isset($_SESSION['cart'][$productId])) {
            $_SESSION['cart'][$productId] = $quantity;
        }
    }

    // Remove item from cart
    public function removeItem($productId) {
        unset($_SESSION['cart'][$productId]);
    }
}

// Checkout class
class Checkout {
    private $conn;

    public function __construct($db) {
        $this->conn = $db;
    }

    // Process order
    public function processOrder($userId, $totalAmount) {
        try {
            // Insert into orders table
            $stmt = $this->conn->prepare("INSERT INTO orders (user_id, total_amount, order_date, payment_status) VALUES (?, ?, NOW(), 'pending')");
            $stmt->execute([$userId, $totalAmount]);
            $orderId = $this->conn->lastInsertId();

            // Insert into order_items table
            foreach ($_SESSION['cart'] as $productId => $quantity) {
                $stmt = $this->conn->prepare("INSERT INTO order_items (order_id, product_id, quantity, price) VALUES (?, ?, ?, (SELECT price FROM products WHERE id = ?))");
                $stmt->execute([$orderId, $productId, $quantity, $productId]);
            }

            // Clear cart
            unset($_SESSION['cart']);

            return true;
        } catch(PDOException $e) {
            echo "Error: " . $e->getMessage();
            return false;
        }
    }

    // Simulate payment approval
    public function approvePayment() {
        // In real application, this would integrate with a payment gateway
        $approval = rand(0, 1);
        if ($approval >= 0.5) {
            return true; // Payment approved
        } else {
            return false; // Payment declined
        }
    }

    // Check order status
    public function getOrderStatus($orderId) {
        try {
            $stmt = $this->conn->prepare("SELECT payment_status FROM orders WHERE id = ?");
            $stmt->execute([$orderId]);
            $result = $stmt->fetch(PDO::FETCH_ASSOC);
            return $result['payment_status'];
        } catch(PDOException $e) {
            echo "Error: " . $e->getMessage();
            return false;
        }
    }
}

// Order history class
class OrderHistory {
    private $conn;

    public function __construct($db) {
        $this->conn = $db;
    }

    // Get user orders
    public function getUserOrders($userId) {
        try {
            $stmt = $this->conn->prepare("SELECT * FROM orders WHERE user_id = ?");
            $stmt->execute([$userId]);
            return $stmt->fetchAll(PDO::FETCH_ASSOC);
        } catch(PDOException $e) {
            echo "Error: " . $e->getMessage();
            return false;
        }
    }

    // Get order details
    public function getOrderDetails($orderId) {
        try {
            $stmt = $this->conn->prepare("SELECT oi.*, p.name AS product_name FROM order_items oi JOIN products p ON oi.product_id = p.id WHERE oi.order_id = ?");
            $stmt->execute([$orderId]);
            return $stmt->fetchAll(PDO::FETCH_ASSOC);
        } catch(PDOException $e) {
            echo "Error: " . $e->getMessage();
            return false;
        }
    }
}

// Database tables creation
try {
    $conn = new PDO("mysql:host=localhost;dbname=shopping_cart", "root", "");
    // Create products table
    $conn->exec("CREATE TABLE IF NOT EXISTS products (
        id INT AUTO_INCREMENT PRIMARY KEY,
        name VARCHAR(255),
        description TEXT,
        price DECIMAL(10, 2),
        stock INT
    )");

    // Create orders table
    $conn->exec("CREATE TABLE IF NOT EXISTS orders (
        id INT AUTO_INCREMENT PRIMARY KEY,
        user_id INT,
        total_amount DECIMAL(10, 2),
        order_date DATETIME,
        payment_status VARCHAR(50)
    )");

    // Create order_items table
    $conn->exec("CREATE TABLE IF NOT EXISTS order_items (
        id INT AUTO_INCREMENT PRIMARY KEY,
        order_id INT,
        product_id INT,
        quantity INT,
        price DECIMAL(10, 2)
    )");
} catch(PDOException $e) {
    echo "Error: " . $e->getMessage();
}

// Sample usage
$product = new Product($conn);
$cart = new Cart();
$checkout = new Checkout($conn);
$orderHistory = new OrderHistory($conn);

// Add sample products
if ($product->addProduct('Laptop', 'High performance laptop', 999.99, 10)) {
    echo "Product added successfully!";
}

// Display all products
$products = $product->getAllProducts();
foreach ($products as $prod) {
    echo "<div>";
    echo "<h3>" . $prod['name'] . "</h3>";
    echo "<p>Description: " . $prod['description'] . "</p>";
    echo "<p>Price: $" . number_format($prod['price'], 2) . "</p>";
    echo "<form action='add_to_cart.php' method='post'>";
    echo "<input type='hidden' name='product_id' value='" . $prod['id'] . "'>";
    echo "<input type='number' name='quantity' min='1' max='" . $prod['stock'] . "' value='1'>";
    echo "<button type='submit'>Add to Cart</button>";
    echo "</form>";
    echo "</div>";
}

// Add to cart page (add_to_cart.php)
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    if (!isset($_SESSION)) session_start();
    $cart = new Cart();
    $cart->addItem($_POST['product_id'], $_POST['quantity']);
    header("Location: view_cart.php");
}

// View cart page (view_cart.php)
echo "<h2>Your Cart</h2>";
$total = 0;
foreach ($_SESSION['cart'] as $productId => $quantity) {
    $stmt = $conn->prepare("SELECT * FROM products WHERE id = ?");
    $stmt->execute([$productId]);
    $product = $stmt->fetch(PDO::FETCH_ASSOC);
    echo "<div>";
    echo "<h3>" . $product['name'] . "</h3>";
    echo "<p>Price: $" . number_format($product['price'], 2) . " x " . $quantity . "</p>";
    echo "<form action='update_cart.php' method='post'>";
    echo "<input type='hidden' name='product_id' value='" . $productId . "'>";
    echo "<input type='number' name='quantity' min='1' max='" . $product['stock'] . "' value='" . $quantity . "'>";
    echo "<button type='submit'>Update</button>";
    echo "</form>";
    echo "<a href='remove_from_cart.php?product_id=" . $productId . "'>Remove</a>";
    echo "</div>";
    $total += ($product['price'] * $quantity);
}
echo "<h3>Total: $" . number_format($total, 2) . "</h3>";
echo "<a href='checkout.php'>Proceed to Checkout</a>";

// Update cart page (update_cart.php)
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    if (!isset($_SESSION)) session_start();
    $cart = new Cart();
    $cart->updateItem($_POST['product_id'], $_POST['quantity']);
    header("Location: view_cart.php");
}

// Remove from cart page (remove_from_cart.php)
if (isset($_GET['product_id'])) {
    if (!isset($_SESSION)) session_start();
    $cart = new Cart();
    $cart->removeItem($_GET['product_id']);
    header("Location: view_cart.php");
}

// Checkout process (checkout.php)
if (!isset($_SESSION)) session_start();
$user_id = 1; // Replace with actual user authentication
$totalAmount = $cart->getTotal($products);

if ($checkout->approvePayment()) {
    if ($checkout->processOrder($user_id, $totalAmount)) {
        echo "Thank you for your purchase!";
        header("Location: thank_you.php");
    } else {
        echo "Error processing order.";
    }
} else {
    echo "Payment declined. Please try again.";
}

// Thank you page (thank_you.php)
echo "<h2>Thank You for Your Purchase!</h2>";
echo "<p>Your order has been successfully processed.</p>";

// Order history page
$user_orders = $orderHistory->getUserOrders($user_id);
foreach ($user_orders as $order) {
    echo "<div>";
    echo "<h3>Order #" . $order['id'] . "</h3>";
    echo "<p>Total: $" . number_format($order['total_amount'], 2) . "</p>";
    echo "<p>Status: " . $order['payment_status'] . "</p>";
    echo "<a href='view_order.php?order_id=" . $order['id'] . "'>View Details</a>";
    echo "</div>";
}

// View order details page (view_order.php)
if (isset($_GET['order_id'])) {
    $order_details = $orderHistory->getOrderDetails($_GET['order_id']);
    foreach ($order_details as $detail) {
        echo "<div>";
        echo "<h3>" . $detail['product_name'] . "</h3>";
        echo "<p>Quantity: " . $detail['quantity'] . "</p>";
        echo "<p>Price: $" . number_format($detail['price'], 2) . "</p>";
        echo "</div>";
    }
}
?>


<?php
// db_connection.php

$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}
?>


<?php
// login.php

session_start();
include 'db_connection.php';

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $username = $_POST['username'];
    $password = $_POST['password'];

    $stmt = $conn->prepare("SELECT * FROM users WHERE username = ?");
    $stmt->execute([$username]);
    $user = $stmt->fetch(PDO::FETCH_ASSOC);

    if ($user && password_verify($password, $user['password_hash'])) {
        $_SESSION['user_id'] = $user['id'];
        $_SESSION['username'] = $user['username'];
        header("Location: products.php");
        exit();
    } else {
        $error = "Invalid username or password";
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login</title>
</head>
<body>
    <?php if (isset($error)): ?>
        <p><?php echo $error; ?></p>
    <?php endif; ?>

    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        Username: <input type="text" name="username"><br>
        Password: <input type="password" name="password"><br>
        <input type="submit" value="Login">
    </form>
</body>
</html>


<?php
// products.php

session_start();
include 'db_connection.php';

$stmt = $conn->query("SELECT * FROM products");
$products = $stmt->fetchAll(PDO::FETCH_ASSOC);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Products</title>
</head>
<body>
    <?php if (isset($_SESSION['username'])): ?>
        Welcome, <?php echo $_SESSION['username']; ?>!<br>
        <a href="logout.php">Logout</a><br>
    <?php endif; ?>

    <h1>Available Products</h1>
    <?php foreach ($products as $product): ?>
        <div>
            <h2><?php echo $product['name']; ?></h2>
            <p><?php echo $product['description']; ?></p>
            <p>Price: <?php echo $product['price']; ?> $</p>
            <form action="add_to_cart.php" method="post">
                <input type="hidden" name="product_id" value="<?php echo $product['id']; ?>">
                <input type="number" name="quantity" min="1" max="<?php echo $product['quantity']; ?>" required>
                <input type="submit" value="Add to Cart">
            </form>
        </div>
    <?php endforeach; ?>
</body>
</html>


<?php
// add_to_cart.php

session_start();
include 'db_connection.php';

if (isset($_POST['product_id']) && isset($_POST['quantity'])) {
    $product_id = $_POST['product_id'];
    $quantity = $_POST['quantity'];

    // Check if product exists and has enough quantity
    $stmt = $conn->prepare("SELECT * FROM products WHERE id = ?");
    $stmt->execute([$product_id]);
    $product = $stmt->fetch(PDO::FETCH_ASSOC);

    if ($product && $quantity <= $product['quantity']) {
        // Add to cart or update quantity
        if (!isset($_SESSION['cart'])) {
            $_SESSION['cart'] = array();
        }

        if (array_key_exists($product_id, $_SESSION['cart'])) {
            $_SESSION['cart'][$product_id]['quantity'] += $quantity;
        } else {
            $_SESSION['cart'][$product_id] = array(
                'name' => $product['name'],
                'price' => $product['price'],
                'quantity' => $quantity
            );
        }

        header("Location: cart.php");
        exit();
    }
}
?>


<?php
// cart.php

session_start();
include 'db_connection.php';

$total = 0;
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <?php if (isset($_SESSION['cart'])): ?>
        <h1>Your Shopping Cart</h1>
        <table border="1">
            <tr>
                <th>Product Name</th>
                <th>Quantity</th>
                <th>Price</th>
                <th>Total</th>
                <th>Action</th>
            </tr>
            <?php foreach ($_SESSION['cart'] as $product_id => $item): ?>
                <tr>
                    <td><?php echo $item['name']; ?></td>
                    <td><input type="number" name="quantity_<?php echo $product_id; ?>" value="<?php echo $item['quantity']; ?>"></td>
                    <td><?php echo $item['price']; ?> $</td>
                    <td><?php echo $item['quantity'] * $item['price']; ?> $</td>
                    <td><a href="remove_from_cart.php?product_id=<?php echo $product_id; ?>">Remove</a></td>
                </tr>
                <?php $total += $item['quantity'] * $item['price']; ?>
            <?php endforeach; ?>
        </table>
        <h2>Total: <?php echo $total; ?> $</h2>
        <form action="checkout.php" method="post">
            <input type="hidden" name="total" value="<?php echo $total; ?>">
            <input type="submit" value="Checkout">
        </form>
    <?php else: ?>
        <p>Your cart is empty!</p>
    <?php endif; ?>

    <a href="products.php">Continue Shopping</a>
</body>
</html>


<?php
// remove_from_cart.php

session_start();
include 'db_connection.php';

if (isset($_GET['product_id'])) {
    $product_id = $_GET['product_id'];
    
    if (isset($_SESSION['cart'][$product_id])) {
        unset($_SESSION['cart'][$product_id]);
    }
}

header("Location: cart.php");
exit();
?>


<?php
// checkout.php

session_start();
include 'db_connection.php';

if (!isset($_SESSION['user_id'])) {
    header("Location: login.php");
    exit();
}

if (isset($_POST['total'])) {
    $total = $_POST['total'];
    
    // Insert order into database
    $stmt = $conn->prepare("INSERT INTO orders (user_id, product_id, quantity, total_price) VALUES (:user_id, :product_id, :quantity, :total)");
    
    foreach ($_SESSION['cart'] as $product_id => $item) {
        $stmt->bindParam(':user_id', $_SESSION['user_id']);
        $stmt->bindParam(':product_id', $product_id);
        $stmt->bindParam(':quantity', $item['quantity']);
        $stmt->bindParam(':total', $item['quantity'] * $item['price']);
        
        if (!$stmt->execute()) {
            die("Error inserting order");
        }
    }

    // Clear cart
    unset($_SESSION['cart']);

    header("Location: confirmation.php?total=" . urlencode($total));
    exit();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
</head>
<body>
    <?php if (isset($_POST['total'])): ?>
        <h1>Order Confirmation</h1>
        <p>Your order has been placed successfully!</p>
        <p>Total amount: <?php echo $_POST['total']; ?> $</p>
    <?php else: ?>
        <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
            <?php foreach ($_SESSION['cart'] as $product_id => $item): ?>
                <input type="hidden" name="product_id[]" value="<?php echo $product_id; ?>">
                <input type="hidden" name="quantity[]" value="<?php echo $item['quantity']; ?>">
            <?php endforeach; ?>
            <input type="hidden" name="total" value="<?php echo $total; ?>">
            <h2>Payment Information</h2>
            <p>Please enter your payment details:</p>
            <label>Credit Card Number: <input type="text" name="card_number" required></label><br>
            <label>CVV: <input type="password" name="cvv" required></label><br>
            <input type="submit" value="Place Order">
        </form>
    <?php endif; ?>
</body>
</html>


<?php
// confirmation.php

session_start();
include 'db_connection.php';

$total = $_GET['total'];
?>

<!DOCTYPE html>
<html>
<head>
    <title>Order Confirmation</title>
</head>
<body>
    <h1>Thank you for your purchase!</h1>
    <p>Your order has been successfully processed.</p>
    <p>Total amount: <?php echo $total; ?> $</p>
    <a href="products.php">Continue Shopping</a>
</body>
</html>


<?php
// logout.php

session_start();
unset($_SESSION['user_id']);
unset($_SESSION['username']);
session_unset();
session_destroy();

header("Location: login.php");
exit();
?>


<?php
// Connect to database
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'test';

$conn = mysqli_connect($host, $username, $password, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Fetch products from database
$sql = "SELECT * FROM products";
$result = mysqli_query($conn, $sql);

// Display products
echo "<h2>Available Products</h2>";
while ($row = mysqli_fetch_assoc($result)) {
    echo "<div class='product'>";
    echo "<h3>{$row['name']}</h3>";
    echo "<p>Price: \${$row['price']}</p>";
    echo "<p>Description: {$row['description']}</p>";
    echo "<p>Stock: {$row['stock']}</p>";
    echo "<a href='add_to_cart.php?id={$row['id']}'>Add to Cart</a>";
    echo "</div>";
}

mysqli_close($conn);
?>


<?php
session_start();

// Connect to database
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'test';

$conn = mysqli_connect($host, $username, $password, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Get product details
$product_id = $_GET['id'];
$sql = "SELECT * FROM products WHERE id = {$product_id}";
$result = mysqli_query($conn, $sql);
$product = mysqli_fetch_assoc($result);

// Add to cart
if (isset($_SESSION['cart'])) {
    if (array_key_exists($product_id, $_SESSION['cart'])) {
        // Increment quantity
        $_SESSION['cart'][$product_id]['quantity']++;
    } else {
        // Add new item
        $_SESSION['cart'][$product_id] = array(
            'name' => $product['name'],
            'price' => $product['price'],
            'quantity' => 1
        );
    }
} else {
    $_SESSION['cart'] = array(
        $product_id => array(
            'name' => $product['name'],
            'price' => $product['price'],
            'quantity' => 1
        )
    );
}

mysqli_close($conn);
header("Location: view_cart.php");
exit();
?>


<?php
session_start();

echo "<h2>Your Shopping Cart</h2>";
if (!empty($_SESSION['cart'])) {
    echo "<table border='1'>";
    echo "<tr><th>Product Name</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>";
    
    $total = 0;
    foreach ($_SESSION['cart'] as $item_id => $item) {
        $subtotal = $item['price'] * $item['quantity'];
        $total += $subtotal;
        
        echo "<tr>";
        echo "<td>{$item['name']}</td>";
        echo "<td>\${$item['price']}</td>";
        echo "<td><input type='number' name='quantity[$item_id]' value='{$item['quantity']}' min='1'></td>";
        echo "<td>\${$subtotal}</td>";
        echo "<td><a href='update_cart.php?id=$item_id&action=remove'>Remove</a></td>";
        echo "</tr>";
    }
    
    echo "</table>";
    echo "<h3>Total: \${$total}</h3>";
    echo "<a href='checkout.php'>Checkout</a> | <a href='clear_cart.php'>Clear Cart</a>";
} else {
    echo "Your cart is empty!";
}
?>



<?php
session_start();

// Check if quantity was updated
if (!empty($_POST['quantity'])) {
    foreach ($_POST['quantity'] as $item_id => $qty) {
        if ($qty > 0) {
            $_SESSION['cart'][$item_id]['quantity'] = $qty;
        } else {
            unset($_SESSION['cart'][$item_id]);
        }
    }
}

header("Location: view_cart.php");
exit();
?>


<?php
session_start();

if (!empty($_SESSION['cart'])) {
    // Connect to database
    $host = 'localhost';
    $username = 'root';
    $password = '';
    $dbname = 'test';

    $conn = mysqli_connect($host, $username, $password, $dbname);
    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
    }

    // Calculate total price
    $total_price = 0;
    foreach ($_SESSION['cart'] as $item_id => $item) {
        $total_price += $item['price'] * $item['quantity'];
    }

    // Deduct stock from database
    foreach ($_SESSION['cart'] as $item_id => $item) {
        $sql = "UPDATE products SET stock = stock - {$item['quantity']} WHERE id = {$item_id}";
        mysqli_query($conn, $sql);
    }

    // Clear cart
    unset($_SESSION['cart']);

    mysqli_close($conn);

    echo "<h2>Thank you for your purchase!</h2>";
    echo "<p>Your total was: \${$total_price}</p>";
} else {
    echo "Your cart is empty!";
}
?>


<?php
session_start();
unset($_SESSION['cart']);
header("Location: view_cart.php");
exit();
?>


<?php
// Configuration
$host = 'localhost';
$username = 'root';
$password = '';
$db_name = 'purchase_system';

try {
    // Create database connection
    $conn = new PDO("mysql:host=$host;dbname=$db_name", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

// Check if user is logged in
session_start();
if (!isset($_SESSION['user_id'])) {
    header('Location: login.php');
    exit;
}

// Get products from database or define sample products
$products = [
    ['id' => 1, 'name' => 'Product A', 'price' => 20.00, 'quantity_available' => 5],
    ['id' => 2, 'name' => 'Product B', 'price' => 30.00, 'quantity_available' => 10]
];

// Handle purchase submission
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $order = [];
    $total_price = 0;

    foreach ($products as $product) {
        $quantity = isset($_POST["qty_{$product['id']}"]) ? (int)$_POST["qty_{$product['id']}"] : 0;
        
        if ($quantity > 0) {
            // Check if quantity is available
            if ($quantity > $product['quantity_available']) {
                die("Not enough stock for {$product['name']}");
            }
            
            $order[] = [
                'product_id' => $product['id'],
                'quantity' => $quantity,
                'price' => $product['price']
            ];
            
            // Calculate total price
            $total_price += $product['price'] * $quantity;
        }
    }

    if (!empty($order)) {
        try {
            // Start transaction
            $conn->beginTransaction();
            
            // Insert order into orders table
            $stmt = $conn->prepare("INSERT INTO orders (user_id, total_price) VALUES (:user_id, :total_price)");
            $stmt->execute([
                'user_id' => $_SESSION['user_id'],
                'total_price' => $total_price
            ]);
            
            $order_id = $conn->lastInsertId();
            
            // Insert order details into order_details table
            foreach ($order as $item) {
                $stmt = $conn->prepare("INSERT INTO order_details (order_id, product_id, quantity, price) VALUES (:order_id, :product_id, :quantity, :price)");
                $stmt->execute([
                    'order_id' => $order_id,
                    'product_id' => $item['product_id'],
                    'quantity' => $item['quantity'],
                    'price' => $item['price']
                ]);
                
                // Update product quantity
                $conn->prepare("UPDATE products SET quantity_available = quantity_available - :quantity WHERE id = :product_id")
                     ->execute([
                         'quantity' => $item['quantity'],
                         'product_id' => $item['product_id']
                     ]);
            }
            
            // Commit transaction
            $conn->commit();
            
            // Show confirmation message
            echo "Purchase successful! Order ID: {$order_id}<br>";
            echo "Total Price: \$" . number_format($total_price, 2);
            
            // Redirect to avoid form resubmission
            header("Refresh: 3; url=products.php");
        } catch(PDOException $e) {
            // Rollback transaction in case of error
            $conn->rollback();
            die("Error processing order: " . $e->getMessage());
        }
    } else {
        echo "Please select at least one product to purchase.";
    }
} else {
    // Display products for selection
?>
<!DOCTYPE html>
<html>
<head>
    <title>Purchase Products</title>
</head>
<body>
    <h2>Select Products to Purchase:</h2>
    <form method="POST" action="<?php echo $_SERVER['PHP_SELF']; ?>">
        <?php foreach ($products as $product): ?>
            <div>
                <strong><?php echo $product['name']; ?></strong><br>
                Price: \$<?php echo number_format($product['price'], 2); ?><br>
                Quantity Available: <?php echo $product['quantity_available']; ?><br>
                <input type="number" name="qty_<?php echo $product['id']; ?>" min="0">
            </div><br>
        <?php endforeach; ?>
        <button type="submit">Purchase Selected Items</button>
    </form>
</body>
</html>
<?php
}
?>


<?php
session_start();
?>
<!DOCTYPE html>
<html>
<head>
    <title>Product List</title>
</head>
<body>
    <h1>Product List</h1>
    <?php
        $products = array(
            array('id' => 1, 'name' => 'Product 1', 'price' => 20.00),
            array('id' => 2, 'name' => 'Product 2', 'price' => 30.00),
            array('id' => 3, 'name' => 'Product 3', 'price' => 40.00)
        );

        foreach ($products as $product) {
            echo "<div>";
            echo "<h3>".$product['name']."</h3>";
            echo "<p>Price: \$".$product['price']."</p>";
            echo "<a href='add_to_cart.php?id=".$product['id']."&name=".$product['name']."&price=".$product['price']."'>Add to Cart</a>";
            echo "</div><br/>";
        }
    ?>
    <a href="cart.php">View Cart</a>
</body>
</html>


<?php
session_start();
 
if(isset($_GET['id']) && isset($_GET['name']) && isset($_GET['price'])){
    $item = array(
        'id' => $_GET['id'],
        'name' => $_GET['name'],
        'price' => $_GET['price']
    );
     
    if(empty($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }
     
    // Check if item already exists in cart
    $item_exists = false;
    foreach ($_SESSION['cart'] as &$item_session) {
        if($item_session['id'] == $item['id']) {
            $item_exists = true;
            break;
        }
    }
     
    if(!$item_exists) {
        array_push($_SESSION['cart'], $item);
    } else {
        // If item exists, increment quantity
        foreach ($_SESSION['cart'] as &$item_session) {
            if($item_session['id'] == $item['id']) {
                $item_session['quantity'] = isset($item_session['quantity']) ? $item_session['quantity'] + 1 : 2;
                break;
            }
        }
    }
}
 
header("Location: cart.php");
?>


<?php
session_start();
?>
<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <?php
        if(empty($_SESSION['cart'])) {
            echo "<h2>Your cart is empty!</h2>";
        } else {
            $total = 0;
            echo "<h2>Your Cart:</h2>";
            foreach ($_SESSION['cart'] as $item) {
                echo "<div>";
                echo "<p>".$item['name']."</p>";
                echo "<p>Price: \$".$item['price']."</p>";
                echo "<p>Quantity: <input type='number' min='1' value='".(isset($item['quantity']) ? $item['quantity'] : 1)."' style='width:50px'></p>";
                echo "<a href='remove_from_cart.php?id=".$item['id']."'>Remove</a>";
                echo "</div><br/>";
                // Calculate total
                $total += isset($item['quantity']) ? $item['quantity'] * $item['price'] : $item['price'];
            }
            echo "<h3>Total: \$".$total."</h3>";
        }
    ?>
    <a href="products.php">Continue Shopping</a> | 
    <?php if(!empty($_SESSION['cart'])) { echo "<a href='checkout.php'>Checkout</a>"; } ?>
</body>
</html>


<?php
session_start();
 
if(isset($_GET['id'])){
    foreach ($_SESSION['cart'] as $key => &$item) {
        if($item['id'] == $_GET['id']) {
            unset($_SESSION['cart'][$key]);
            break;
        }
    }
}
 
header("Location: cart.php");
?>


<?php
session_start();
?>
<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
</head>
<body>
    <?php if(!empty($_SESSION['cart'])) { ?>
        <h2>Checkout</h2>
        <form action="process_order.php" method="post">
            <div>
                <label for="name">Name:</label><br/>
                <input type="text" name="name" id="name" required /><br/>
                
                <label for="email">Email:</label><br/>
                <input type="email" name="email" id="email" required /><br/>
                
                <label for="address">Address:</label><br/>
                <textarea name="address" id="address" required ></textarea><br/>
                
                <input type="submit" value="Place Order"/>
            </div>
        </form>
    <?php } else { ?>
        <h2>Your cart is empty!</h2>
    <?php } ?>
</body>
</html>


<?php
session_start();
 
if(!empty($_SESSION['cart']) && isset($_POST['name']) && isset($_POST['email']) && isset($_POST['address'])){
    // Process the order here
    // You would typically connect to a database and store the order details
    // For this example, we'll just print out the order details
    
    echo "<h2>Order Summary</h2>";
    foreach ($_SESSION['cart'] as $item) {
        echo "<p>".$item['name']." x ".(isset($item['quantity']) ? $item['quantity'] : 1)."</p>";
    }
     
    // Clear the cart
    unset($_SESSION['cart']);
}
 
header("Location: products.php");
?>


<?php
// Database connection
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'cart_db';

$conn = mysqli_connect($host, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Create products table if not exists
$sql = "CREATE TABLE IF NOT EXISTS products (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255),
    price DECIMAL(10, 2),
    description TEXT,
    image VARCHAR(255)
)";

mysqli_query($conn, $sql);

// Create cart table if not exists
$sql = "CREATE TABLE IF NOT EXISTS cart (
    id INT AUTO_INCREMENT PRIMARY KEY,
    session_id VARCHAR(255),
    item_id INT,
    quantity INT,
    timestamp DATETIME DEFAULT CURRENT_TIMESTAMP,
    is_ordered BOOLEAN DEFAULT FALSE
)";

mysqli_query($conn, $sql);

// Function to add item to cart
function addToCart($item_id) {
    global $conn;
    
    // Check if the product exists
    $product_sql = "SELECT id FROM products WHERE id = ?";
    $stmt = mysqli_prepare($conn, $product_sql);
    mysqli_stmt_bind_param($stmt, "i", $item_id);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);
    
    if (mysqli_num_rows($result) == 0) {
        return false;
    }
    
    // Get current session id
    $session_id = session_id();
    
    // Check if item is already in cart
    $check_sql = "SELECT id FROM cart WHERE session_id = ? AND item_id = ? AND is_ordered = FALSE";
    $stmt = mysqli_prepare($conn, $check_sql);
    mysqli_stmt_bind_param($stmt, "si", $session_id, $item_id);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);
    
    if (mysqli_num_rows($result) > 0) {
        // Increment quantity
        $update_sql = "UPDATE cart SET quantity = quantity + 1 WHERE session_id = ? AND item_id = ?";
        $stmt = mysqli_prepare($conn, $update_sql);
        mysqli_stmt_bind_param($stmt, "si", $session_id, $item_id);
        mysqli_stmt_execute($stmt);
    } else {
        // Add new item
        $insert_sql = "INSERT INTO cart (session_id, item_id, quantity) VALUES (?, ?, 1)";
        $stmt = mysqli_prepare($conn, $insert_sql);
        mysqli_stmt_bind_param($stmt, "si", $session_id, $item_id);
        mysqli_stmt_execute($stmt);
    }
    
    return true;
}

// Function to get cart items
function getCartItems() {
    global $conn;
    
    // Get current session id
    $session_id = session_id();
    
    $sql = "SELECT c.id AS cart_id, p.*, c.quantity 
            FROM products p 
            JOIN cart c ON p.id = c.item_id 
            WHERE c.session_id = ? AND c.is_ordered = FALSE";
            
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, "s", $session_id);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);
    
    return $result;
}

// Function to update cart quantity
function updateCartQuantity($cart_id, $quantity) {
    global $conn;
    
    // Update quantity in cart
    $sql = "UPDATE cart SET quantity = ? WHERE id = ?";
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, "ii", $quantity, $cart_id);
    mysqli_stmt_execute($stmt);
    
    return true;
}

// Function to delete item from cart
function deleteCartItem($cart_id) {
    global $conn;
    
    // Delete item from cart
    $sql = "DELETE FROM cart WHERE id = ?";
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, "i", $cart_id);
    mysqli_stmt_execute($stmt);
    
    return true;
}

// Function to calculate total price
function calculateTotal() {
    global $conn;
    
    // Get current session id
    $session_id = session_id();
    
    $sql = "SELECT SUM(p.price * c.quantity) AS total 
            FROM products p 
            JOIN cart c ON p.id = c.item_id 
            WHERE c.session_id = ? AND c.is_ordered = FALSE";
            
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, "s", $session_id);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);
    $row = mysqli_fetch_assoc($result);
    
    return $row['total'];
}

// Initialize session
if (!isset($_SESSION)) {
    session_start();
}

// Check if cart table has items for this session, 
// if not, insert a new session into the cart table
$session_id = session_id();

$sql = "SELECT id FROM cart WHERE session_id = ?";
$stmt = mysqli_prepare($conn, $sql);
mysqli_stmt_bind_param($stmt, "s", $session_id);
mysqli_stmt_execute($stmt);
$result = mysqli_stmt_get_result($stmt);

if (mysqli_num_rows($result) == 0) {
    // Insert new session
    $insert_sql = "INSERT INTO cart (session_id) VALUES (?)";
    $stmt = mysqli_prepare($conn, $insert_sql);
    mysqli_stmt_bind_param($stmt, "s", $session_id);
    mysqli_stmt_execute($stmt);
}
?>


<?php
require_once 'cart_functions.php';

// Add item to cart
if (isset($_POST['add_to_cart'])) {
    addToCart($_POST['product_id']);
}

// Update quantity
if (isset($_POST['update_quantity'])) {
    updateCartQuantity($_POST['cart_id'], $_POST['quantity']);
}

// Delete item from cart
if (isset($_GET['delete_item'])) {
    deleteCartItem($_GET['cart_id']);
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <?php if ($result = getCartItems()): ?>
        <h2>Your Cart</h2>
        <table border="1">
            <tr>
                <th>Product Name</th>
                <th>Price</th>
                <th>Quantity</th>
                <th>Total</th>
                <th>Action</th>
            </tr>
            <?php while ($row = mysqli_fetch_assoc($result)): ?>
                <tr>
                    <td><?php echo $row['name']; ?></td>
                    <td>$<?php echo number_format($row['price'], 2); ?></td>
                    <td>
                        <form action="" method="post">
                            <input type="hidden" name="cart_id" value="<?php echo $row['cart_id']; ?>">
                            <input type="number" name="quantity" value="<?php echo $row['quantity']; ?>" min="1">
                            <button type="submit" name="update_quantity">Update</button>
                        </form>
                    </td>
                    <td>$<?php echo number_format($row['price'] * $row['quantity'], 2); ?></td>
                    <td>
                        <a href="?delete_item=<?php echo $row['cart_id']; ?>">Delete</a>
                    </td>
                </tr>
            <?php endwhile; ?>
        </table>
        <h3>Total: $<?php echo number_format(calculateTotal(), 2); ?></h3>
    <?php else: ?>
        <p>Your cart is empty.</p>
    <?php endif; ?>

    <!-- Add items to cart -->
    <?php
    // Fetch products from database
    $sql = "SELECT * FROM products";
    $result = mysqli_query($conn, $sql);
    
    if ($result && mysqli_num_rows($result) > 0):
    ?>
        <h2>Products</h2>
        <div class="products">
            <?php while ($row = mysqli_fetch_assoc($result)): ?>
                <div class="product-item">
                    <img src="<?php echo $row['image']; ?>" alt="<?php echo $row['name']; ?>">
                    <h3><?php echo $row['name']; ?></h3>
                    <p>$<?php echo number_format($row['price'], 2); ?></p>
                    <form action="" method="post">
                        <input type="hidden" name="product_id" value="<?php echo $row['id']; ?>">
                        <button type="submit" name="add_to_cart">Add to Cart</button>
                    </form>
                </div>
            <?php endwhile; ?>
        </div>
    <?php endif; ?>
</body>
</html>


<?php
session_start();

// Initialize cart if not exists
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

$product_id = isset($_POST['product_id']) ? intval($_POST['product_id']) : 0;

// Check if product already in cart
if (array_key_exists($product_id, $_SESSION['cart'])) {
    // Increment quantity
    $_SESSION['cart'][$product_id]['quantity']++;
} else {
    // Add new product to cart
    $conn = new mysqli('localhost', 'root', '', 'purchase_db');
    
    if ($stmt = $conn->prepare("SELECT name, price FROM products WHERE id = ?")) {
        $stmt->bind_param("i", $product_id);
        $stmt->execute();
        $result = $stmt->get_result();
        
        if ($row = $result->fetch_assoc()) {
            $_SESSION['cart'][$product_id] = array(
                'name' => $row['name'],
                'price' => $row['price'],
                'quantity' => 1
            );
        }
    }

    $conn->close();
}

// Redirect back to the products page
header('Location: index.php');
exit();
?>


<?php
session_start();

if (isset($_GET['remove'])) {
    unset($_SESSION['cart'][$_GET['remove']]);
    header('Location: view_cart.php');
    exit();
}

$total = 0;
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Shopping Cart</title>
    <!-- Include Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>
    <div class="container mt-4">
        <?php if (!empty($_SESSION['cart'])): ?>
            <h2>Your Cart</h2>
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>Product Name</th>
                        <th>Price</th>
                        <th>Quantity</th>
                        <th>Total</th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tbody>
                    <?php foreach ($_SESSION['cart'] as $id => $item): ?>
                        <tr>
                            <td><?php echo $item['name']; ?></td>
                            <td>$<?php echo number_format($item['price'], 2); ?></td>
                            <td>
                                <form action="update_cart.php" method="post">
                                    <input type="hidden" name="product_id" value="<?php echo $id; ?>">
                                    <input type="number" name="quantity" min="1" value="<?php echo $item['quantity']; ?>" style="width: 60px;">
                                    <button type="submit" class="btn btn-sm btn-primary">Update</button>
                                </form>
                            </td>
                            <td>$<?php echo number_format($item['price'] * $item['quantity'], 2); ?></td>
                            <td><a href="view_cart.php?remove=<?php echo $id; ?>" class="btn btn-sm btn-danger">Remove</a></td>
                        </tr>
                        <?php $total += $item['price'] * $item['quantity']; ?>
                    <?php endforeach; ?>
                </tbody>
            </table>
            <h4>Total: $<?php echo number_format($total, 2); ?></h4>
            <a href="checkout.php" class="btn btn-primary">Checkout</a>
        <?php else: ?>
            <p>Your cart is empty.</p>
            <a href="index.php" class="btn btn-secondary">Continue Shopping</a>
        <?php endif; ?>
    </div>

    <!-- Include Bootstrap JS and dependencies -->
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.10.2/dist/umd/popper.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.min.js"></script>
</body>
</html>


<?php
session_start();

if (isset($_SESSION['cart']) && count($_SESSION['cart']) > 0) {
    // Process payment here
    // For this example, we'll just display a success message
    
    foreach ($_SESSION['cart'] as $item) {
        echo "Purchased: " . $item['name'] . "<br>";
    }
    
    unset($_SESSION['cart']); // Clear cart after purchase
    
    echo '<h2>Thank you for your purchase!</h2>';
} else {
    header('Location: index.php');
}
?>


<?php
session_start();

if (isset($_POST['product_id']) && isset($_POST['quantity'])) {
    $product_id = intval($_POST['product_id']);
    $quantity = max(1, intval($_POST['quantity']));
    
    if (isset($_SESSION['cart'][$product_id])) {
        $_SESSION['cart'][$product_id]['quantity'] = $quantity;
    }
}

header('Location: view_cart.php');
exit();
?>


<?php
// Connect to database
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "myDB";

$conn = mysqli_connect($servername, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

$sql = "SELECT * FROM products";
$result = mysqli_query($conn, $sql);

echo "<table border='1'>
<tr>
<th>Product ID</th>
<th>Name</th>
<th>Description</th>
<th>Price</th>
<th>Action</th>
</tr>";

while ($row = mysqli_fetch_assoc($result)) {
    echo "<tr>";
    echo "<td>" . $row["id"] . "</td>";
    echo "<td>" . $row["name"] . "</td>";
    echo "<td>" . $row["description"] . "</td>";
    echo "<td>" . $row["price"] . "</td>";
    echo "<td><a href='add_to_cart.php?id=" . $row["id"] . "'>Add to Cart</a></td>";
    echo "</tr>";
}

echo "</table>";

mysqli_close($conn);
?>


<?php
session_start();

if (isset($_GET['id'])) {
    $product_id = $_GET['id'];
    
    // Connect to database
    $servername = "localhost";
    $username = "username";
    $password = "password";
    $dbname = "myDB";

    $conn = mysqli_connect($servername, $username, $password, $dbname);

    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
    }

    // Check if product exists
    $sql = "SELECT * FROM products WHERE id=$product_id";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) > 0) {
        $row = mysqli_fetch_assoc($result);
        
        $cart_item = array(
            'id' => $row['id'],
            'name' => $row['name'],
            'price' => $row['price'],
            'quantity' => 1
        );
        
        if (isset($_SESSION['cart'])) {
            $_SESSION['cart'][] = $cart_item;
        } else {
            $_SESSION['cart'] = array($cart_item);
        }
    }

    mysqli_close($conn);
}

header("Location: cart.php");
exit();
?>


<?php
session_start();

if (isset($_SESSION['cart'])) {
    $cart = $_SESSION['cart'];
    
    echo "<table border='1'>
    <tr>
    <th>Product Name</th>
    <th>Price</th>
    <th>Quantity</th>
    <th>Total</th>
    <th>Action</th>
    </tr>";
    
    $total = 0;
    foreach ($cart as $item) {
        echo "<tr>";
        echo "<td>" . $item['name'] . "</td>";
        echo "<td>" . $item['price'] . "</td>";
        echo "<td>" . $item['quantity'] . "</td>";
        echo "<td>" . ($item['price'] * $item['quantity']) . "</td>";
        echo "<td><a href='remove_from_cart.php?id=" . $item['id'] . "'>Remove</a></td>";
        echo "</tr>";
        
        $total += $item['price'] * $item['quantity'];
    }
    
    echo "<tr>";
    echo "<td colspan='4'>Total:</td>";
    echo "<td>" . $total . "</td>";
    echo "</tr>";
    
    echo "</table>";
} else {
    echo "Your cart is empty.";
}
?>


<?php
session_start();

if (isset($_GET['id'])) {
    $product_id = $_GET['id'];
    
    if (isset($_SESSION['cart'])) {
        foreach ($_SESSION['cart'] as $key => $item) {
            if ($item['id'] == $product_id) {
                unset($_SESSION['cart'][$key]);
                break;
            }
        }
    }
}

header("Location: cart.php");
exit();
?>


<?php
session_start();

if (isset($_SESSION['cart'])) {
    $cart = $_SESSION['cart'];
    
    echo "<form action='process_payment.php' method='post'>";
    foreach ($cart as $item) {
        echo "<input type='hidden' name='items[]' value='" . $item['id'] . "'>";
    }
    
    echo "<h2>Customer Information</h2>";
    echo "<p>Name: <input type='text' name='name' required></p>";
    echo "<p>Email: <input type='email' name='email' required></p>";
    echo "<p>Phone: <input type='tel' name='phone' required></p>";
    echo "<p>Address: <textarea name='address' rows='3' cols='20' required></textarea></p>";
    
    echo "<button type='submit'>Complete Purchase</button>";
    echo "</form>";
} else {
    echo "Your cart is empty.";
}
?>


<?php
session_start();

if (isset($_POST['items'])) {
    $items = $_POST['items'];
    
    // Save customer information
    $name = mysqli_real_escape_string($conn, $_POST['name']);
    $email = mysqli_real_escape_string($conn, $_POST['email']);
    $phone = mysqli_real_escape_string($conn, $_POST['phone']);
    $address = mysqli_real_escape_string($conn, $_POST['address']);
    
    // Calculate total amount
    $total_amount = 0;
    foreach ($items as $item_id) {
        $sql = "SELECT price FROM products WHERE id=$item_id";
        $result = mysqli_query($conn, $sql);
        $row = mysqli_fetch_assoc($result);
        $total_amount += $row['price'];
    }
    
    // Insert order into orders table
    $sql = "INSERT INTO orders (customer_name, email, phone, address, total_amount) VALUES ('$name', '$email', '$phone', '$address', '$total_amount')";
    mysqli_query($conn, $sql);
    
    $order_id = mysqli_insert_id($conn);
    
    // Insert order items into order_items table
    foreach ($items as $item_id) {
        $sql = "INSERT INTO order_items (order_id, product_id) VALUES ('$order_id', '$item_id')";
        mysqli_query($conn, $sql);
    }
    
    // Clear cart
    unset($_SESSION['cart']);
    
    header("Location: confirmation.php");
    exit();
}
?>


<?php
session_start();

echo "<h2>Thank you for your purchase!</h2>";
echo "<p>Your order has been received and will be processed shortly.</p>";
echo "<p>We'll send you an email confirmation with all the details of your order.</p>";
?>


<?php
// config.php - Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$database = 'shopping_cart';

// Create database connection
$conn = mysqli_connect($host, $username, $password, $database);
if (!$conn) {
    die('Connection failed: ' . mysqli_connect_error());
}
?>

<?php
// product.class.php - Product class

require_once 'config.php';

class Product {
    private $conn;

    public function __construct() {
        global $conn;
        $this->conn = $conn;
    }

    // Get all products
    public function getAllProducts() {
        $query = "SELECT * FROM products";
        $result = mysqli_query($this->conn, $query);
        return $result;
    }
}
?>

<?php
// order.class.php - Order class

require_once 'config.php';

class Order {
    private $conn;

    public function __construct() {
        global $conn;
        $this->conn = $conn;
    }

    // Create new order
    public function createOrder($orderData, $items) {
        $query = "INSERT INTO orders SET 
            customer_name = '" . mysqli_real_escape_string($this->conn, $orderData['customer_name']) . "', 
            email = '" . mysqli_real_escape_string($this->conn, $orderData['email']) . "', 
            phone = '" . mysqli_real_escape_string($this->conn, $orderData['phone']) . "', 
            address = '" . mysqli_real_escape_string($this->conn, $orderData['address']) . "', 
            total_amount = '" . $this->calculateTotalAmount($items) . "'
        ";
        $result = mysqli_query($this->conn, $query);
        
        if ($result) {
            $orderId = mysqli_insert_id($this->conn);
            foreach ($items as $item) {
                $this->addOrderItem($orderId, $item);
            }
            return $orderId;
        } else {
            return false;
        }
    }

    // Add order items
    private function addOrderItem($order_id, $item) {
        $query = "INSERT INTO order_items SET 
            order_id = '" . $order_id . "', 
            product_id = '" . mysqli_real_escape_string($this->conn, $item['id']) . "', 
            quantity = '" . mysqli_real_escape_string($this->conn, $item['quantity']) . "', 
            price = '" . mysqli_real_escape_string($this->conn, $item['price']) . "'
        ";
        mysqli_query($this->conn, $query);
    }

    // Calculate total amount
    private function calculateTotalAmount($items) {
        $total = 0;
        foreach ($items as $item) {
            $subtotal = $item['quantity'] * $item['price'];
            $tax = $subtotal * 0.1; // Assuming 10% tax
            $total += $subtotal + $tax;
        }
        return $total;
    }

    // Get order details
    public function getOrderDetails($order_id) {
        $query = "SELECT * FROM orders WHERE id = '" . mysqli_real_escape_string($this->conn, $order_id) . "'";
        $result = mysqli_query($this->conn, $query);
        return $result;
    }
}
?>

<?php
// process-purchase.php - Purchase processing script

session_start();
require_once 'product.class.php';
require_once 'order.class.php';

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Get form data
    $customer_name = $_POST['name'];
    $email = $_POST['email'];
    $phone = $_POST['phone'];
    $address = $_POST['address'];
    
    // Get cart items from session
    if (isset($_SESSION['cart'])) {
        $items = $_SESSION['cart'];
        
        // Validate and process purchase
        $orderData = array(
            'customer_name' => $customer_name,
            'email' => $email,
            'phone' => $phone,
            'address' => $address
        );
        
        $order = new Order();
        $orderId = $order->createOrder($orderData, $items);
        
        if ($orderId) {
            // Clear cart
            unset($_SESSION['cart']);
            
            // Redirect to thank you page
            header("Location: thank-you.php?order_id=" . $orderId);
            exit;
        } else {
            echo "Error processing your order. Please try again.";
        }
    } else {
        echo "Your cart is empty.";
    }
}
?>

<?php
// thank-you.php - Thank you page

session_start();
require_once 'order.class.php';

if (isset($_GET['order_id'])) {
    $orderId = $_GET['order_id'];
    
    $order = new Order();
    $result = $order->getOrderDetails($orderId);
    
    if ($result && mysqli_num_rows($result) > 0) {
        $orderDetails = mysqli_fetch_assoc($result);
        
        echo "<h2>Thank you for your purchase!</h2>";
        echo "<p>Your order ID is: " . $orderDetails['id'] . "</p>";
        echo "<p>Total amount paid: $" . number_format($orderDetails['total_amount'], 2) . "</p>";
    } else {
        echo "Invalid order ID.";
    }
} else {
    echo "No order ID provided.";
}
?>


<?php
session_start();
require_once 'db.php';

// Product class
class Product {
    private $id;
    private $name;
    private $price;
    private $description;

    public function __construct($id, $name, $price, $description) {
        $this->id = $id;
        $this->name = $name;
        $this->price = $price;
        $this->description = $description;
    }

    public function getId() {
        return $this->id;
    }

    public function getName() {
        return $this->name;
    }

    public function getPrice() {
        return $this->price;
    }

    public function getDescription() {
        return $this->description;
    }
}

// Shopping cart functionality
class ShoppingCart {
    private $cartItems;

    public function __construct() {
        if (isset($_SESSION['shoppingCart'])) {
            $this->cartItems = $_SESSION['shoppingCart'];
        } else {
            $this->cartItems = array();
        }
    }

    public function addProduct($productId, $quantity) {
        if (!isset($this->cartItems[$productId])) {
            $this->cartItems[$productId] = 0;
        }
        $this->cartItems[$productId] += $quantity;
        $_SESSION['shoppingCart'] = $this->cartItems;
    }

    public function removeProduct($productId) {
        if (isset($this->cartItems[$productId])) {
            unset($this->cartItems[$productId]);
            $_SESSION['shoppingCart'] = $this->cartItems;
        }
    }

    public function getCartItems() {
        return $this->cartItems;
    }

    public function calculateTotalPrice($products) {
        $total = 0;
        foreach ($this->cartItems as $productId => $quantity) {
            $product = $products[$productId];
            $total += $product->getPrice() * $quantity;
        }
        return $total;
    }
}

// Database connection
class DB {
    private static $instance = null;

    public static function getInstance() {
        if (self::$instance == null) {
            try {
                self::$instance = new PDO('mysql:host=localhost;dbname=shopping_cart', 'root', '');
                self::$instance->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
            } catch (PDOException $e) {
                die("Could not connect to the database: " . $e->getMessage());
            }
        }
        return self::$instance;
    }

    private function __construct() {}
}

// Get products from database
function getProducts() {
    try {
        $db = DB::getInstance();
        $stmt = $db->query("SELECT id, name, price, description FROM products");
        $products = array();

        while ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {
            $products[$row['id']] = new Product($row['id'], $row['name'], $row['price'], $row['description']);
        }

        return $products;
    } catch (PDOException $e) {
        die("Error fetching products: " . $e->getMessage());
    }
}

// Sanitize input
function sanitizeInput($data) {
    return htmlspecialchars(strip_tags(trim($data)));
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Shopping Cart</title>
    <style>
        body { font-family: Arial, sans-serif; }
        table { width: 100%; border-collapse: collapse; margin-top: 20px; }
        th, td { padding: 12px; text-align: left; border-bottom: 1px solid #ddd; }
        tr:hover { background-color: #f5f5f5; }
    </style>
</head>
<body>
    <h2>Available Products</h2>
    <?php
    $products = getProducts();
    if (!empty($products)) {
        echo "<table>";
        echo "<tr><th>ID</th><th>Name</th><th>Price</th><th>Description</th><th>Action</th></tr>";
        foreach ($products as $product) {
            echo "<tr>";
            echo "<td>" . $product->getId() . "</td>";
            echo "<td>" . $product->getName() . "</td>";
            echo "<td>$" . number_format($product->getPrice(), 2) . "</td>";
            echo "<td>" . $product->getDescription() . "</td>";
            echo "<td><form action='add_to_cart.php' method='POST'>";
            echo "<input type='hidden' name='productId' value='" . $product->getId() . "'>";
            echo "<input type='number' name='quantity' min='1' value='1'>";
            echo "<button type='submit'>Add to Cart</button>";
            echo "</form></td>";
            echo "</tr>";
        }
        echo "</table>";
    } else {
        echo "No products available.";
    }
    ?>

    <h2>Your Shopping Cart</h2>
    <?php
    $cart = new ShoppingCart();
    if (!empty($cart->getCartItems())) {
        echo "<table>";
        echo "<tr><th>Product ID</th><th>Quantity</th><th>Action</th></tr>";
        foreach ($cart->getCartItems() as $productId => $quantity) {
            $product = $products[$productId];
            echo "<tr>";
            echo "<td>" . $product->getId() . "</td>";
            echo "<td>" . $quantity . "</td>";
            echo "<td><form action='remove_from_cart.php' method='POST'>";
            echo "<input type='hidden' name='productId' value='" . $product->getId() . "'>";
            echo "<button type='submit'>Remove</button>";
            echo "</form></td>";
            echo "</tr>";
        }
        echo "</table>";
        
        // Calculate and display total price
        $totalPrice = $cart->calculateTotalPrice($products);
        echo "<h3>Total Price: $" . number_format($totalPrice, 2) . "</h3>";
        
        // Proceed to checkout button
        echo "<a href='checkout.php'><button>Proceed to Checkout</button></a>";
    } else {
        echo "Your cart is empty.";
    }
    ?>
</body>
</html>



<?php
session_start();
require_once 'db.php';

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    if (isset($_POST['productId']) && isset($_POST['quantity'])) {
        $productId = intval($_POST['productId']);
        $quantity = intval($_POST['quantity']);

        // Validate input
        if ($quantity < 1) {
            die("Quantity must be at least 1.");
        }

        // Get products from database
        try {
            $db = DB::getInstance();
            $stmt = $db->query("SELECT id, name, price, description FROM products WHERE id = ?", array($productId));
            if ($stmt->rowCount() > 0) {
                $productData = $stmt->fetch(PDO::FETCH_ASSOC);
                $cart = new ShoppingCart();
                $cart->addProduct($productId, $quantity);
                header("Location: index.php");
                exit;
            } else {
                die("Product not found.");
            }
        } catch (PDOException $e) {
            die("Error adding product to cart: " . $e->getMessage());
        }
    } else {
        die("Invalid request.");
    }
}
?>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'shopping_cart';
$username = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}

// Start session
session_start();

// Product list page
if ($_SERVER['PHP_SELF'] == '/product_list.php') {
    // Display products from database
    try {
        $stmt = $conn->query("SELECT * FROM products");
        while ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {
            echo "<div class='product'>";
            echo "<h3>{$row['name']}</h3>";
            echo "<p>Price: \${$row['price']}</p>";
            echo "<form action='add_to_cart.php' method='post'>";
            echo "<input type='hidden' name='id' value='{$row['id']}'>";
            echo "<input type='number' name='quantity' min='1' max='{$row['stock']}' placeholder='Quantity'>";
            echo "<button type='submit'>Add to Cart</button>";
            echo "</form>";
            echo "</div>";
        }
    } catch(PDOException $e) {
        die("Error fetching products: " . $e->getMessage());
    }
}

// Add to cart functionality
elseif ($_SERVER['PHP_SELF'] == '/add_to_cart.php') {
    if (!isset($_SESSION['user_id'])) {
        header('Location: login.php');
        exit();
    }

    $id = $_POST['id'];
    $quantity = $_POST['quantity'];

    try {
        // Check product exists and has stock
        $stmt = $conn->prepare("SELECT * FROM products WHERE id = ?");
        $stmt->execute([$id]);
        $product = $stmt->fetch(PDO::FETCH_ASSOC);

        if (!$product || $product['stock'] < $quantity) {
            die("Product not available or insufficient stock.");
        }

        // Add to cart
        $cart = $_SESSION['cart'] ?? [];
        if (isset($cart[$id])) {
            $cart[$id]['quantity'] += $quantity;
        } else {
            $cart[$id] = [
                'name' => $product['name'],
                'price' => $product['price'],
                'quantity' => $quantity,
                'total_price' => $product['price'] * $quantity
            ];
        }
        $_SESSION['cart'] = $cart;

    } catch(PDOException $e) {
        die("Error adding to cart: " . $e->getMessage());
    }

    header('Location: cart.php');
}

// Cart page
elseif ($_SERVER['PHP_SELF'] == '/cart.php') {
    if (!isset($_SESSION['user_id'])) {
        header('Location: login.php');
        exit();
    }

    $cart = $_SESSION['cart'] ?? [];
    $total = 0;

    echo "<h2>Your Cart</h2>";
    if (empty($cart)) {
        echo "<p>Your cart is empty.</p>";
    } else {
        foreach ($cart as $id => $item) {
            echo "<div class='cart-item'>";
            echo "<h3>{$item['name']}</h3>";
            echo "<p>Quantity: {$item['quantity']}</p>";
            echo "<p>Price: \${$item['price']}</p>";
            echo "<p>Total: \${$item['total_price']}</p>";
            echo "</div>";
            $total += $item['total_price'];
        }
        echo "<h3>Total Amount: \${$total}</h3>";
    }

    echo "<form action='checkout.php' method='post'>";
    echo "<button type='submit'>Checkout</button>";
    echo "</form>";
}

// Checkout functionality
elseif ($_SERVER['PHP_SELF'] == '/checkout.php') {
    if (!isset($_SESSION['user_id'])) {
        header('Location: login.php');
        exit();
    }

    $cart = $_SESSION['cart'];
    $total = array_sum(array_column($cart, 'total_price'));

    try {
        // Insert order into database
        $stmt = $conn->prepare("INSERT INTO orders (user_id, total_amount) VALUES (?, ?)");
        $stmt->execute([$_SESSION['user_id'], $total]);
        $order_id = $conn->lastInsertId();

        // Update product stock
        foreach ($cart as $id => $item) {
            $stmt = $conn->prepare("UPDATE products SET stock = stock - ? WHERE id = ?");
            $stmt->execute([$item['quantity'], $id]);
        }

        // Clear cart
        unset($_SESSION['cart']);

    } catch(PDOException $e) {
        die("Error processing order: " . $e->getMessage());
    }

    header('Location: order_confirmation.php?order_id=' . $order_id);
}
?>


<?php
session_start();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Store Items</title>
</head>
<body>
    <h1>Available Items</h1>
    
    <?php
    $items = array(
        1 => array('name' => 'Laptop', 'price' => 999.99, 'description' => 'High performance laptop'),
        2 => array('name' => 'Smartphone', 'price' => 699.99, 'description' => 'Latest smartphone model'),
        3 => array('name' => 'Tablet', 'price' => 299.99, 'description' => 'Portable tablet device')
    );

    foreach ($items as $item_id => $item) {
        echo "<div style='border: 1px solid #ddd; padding: 10px; margin: 5px;'>";
        echo "<h3>{$item['name']}</h3>";
        echo "<p>Price: \${$item['price']}</p>";
        echo "<p>Description: {$item['description']}</p>";
        echo "<form action='add_to_cart.php' method='post'>";
        echo "<input type='hidden' name='item_id' value='{$item_id}'>";
        echo "Quantity: <input type='number' name='quantity' min='1' max='99' value='1'><br>";
        echo "<button type='submit'>Add to Cart</button>";
        echo "</form>";
        echo "</div>";
    }
    ?>

    <p><a href="cart.php">View Cart</a></p>
</body>
</html>


<?php
session_start();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <h1>Your Shopping Cart</h1>

    <?php
    if (empty($_SESSION['cart'])) {
        echo "<p>Your cart is empty.</p>";
    } else {
        $total = 0;
        foreach ($_SESSION['cart'] as $item) {
            echo "<div style='border: 1px solid #ddd; padding: 10px; margin: 5px;'>";
            echo "<h3>{$item['name']}</h3>";
            echo "<p>Quantity: {$item['quantity']}</p>";
            echo "<p>Price: \${$item['price']}</p>";
            $total += $item['price'] * $item['quantity'];
            
            // Update quantity
            echo "<form action='update_cart.php' method='post'>";
            echo "<input type='hidden' name='item_id' value='{$item['id']}'>";
            echo "New Quantity: <input type='number' name='new_quantity' min='1' max='99' value='{$item['quantity']}'><br>";
            echo "<button type='submit'>Update</button>";
            echo "</form>";
            
            // Remove item
            echo "<form action='remove_from_cart.php' method='post'>";
            echo "<input type='hidden' name='item_id' value='{$item['id']}'>";
            echo "<button type='submit'>Remove Item</button>";
            echo "</form>";
            echo "</div>";
        }
        
        echo "<h2>Total: \${$total}</h2>";
    }
    ?>

    <?php if (!empty($_SESSION['cart'])) { ?>
        <p><a href="checkout.php">Proceed to Checkout</a></p>
    <?php } else { ?>
        <p><a href="item_list.php">Continue Shopping</a></p>
    <?php } ?>
</body>
</html>


<?php
session_start();

$item_id = $_POST['item_id'];
$quantity = $_POST['quantity'];

// Get item details (in a real application, this would come from a database)
$items = array(
    1 => array('name' => 'Laptop', 'price' => 999.99),
    2 => array('name' => 'Smartphone', 'price' => 699.99),
    3 => array('name' => 'Tablet', 'price' => 299.99)
);

if (isset($items[$item_id])) {
    $item = $items[$item_id];
    
    if (!isset($_SESSION['cart'][$item_id])) {
        $_SESSION['cart'][$item_id] = array(
            'id' => $item_id,
            'name' => $item['name'],
            'price' => $item['price'],
            'quantity' => $quantity
        );
    } else {
        // If item already exists, increment quantity
        $_SESSION['cart'][$item_id]['quantity'] += $quantity;
    }
}

header('Location: cart.php');
exit();
?>


<?php
session_start();

$item_id = $_POST['item_id'];

if (isset($_SESSION['cart'][$item_id])) {
    unset($_SESSION['cart'][$item_id]);
}

header('Location: cart.php');
exit();
?>


<?php
session_start();

$item_id = $_POST['item_id'];
$new_quantity = $_POST['new_quantity'];

if (isset($_SESSION['cart'][$item_id]) && $new_quantity > 0) {
    $_SESSION['cart'][$item_id]['quantity'] = $new_quantity;
} elseif ($new_quantity == 0) {
    unset($_SESSION['cart'][$item_id]);
}

header('Location: cart.php');
exit();
?>


<?php
session_start();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
</head>
<body>
    <?php if (!empty($_SESSION['cart'])) { ?>
        <h1>Checkout</h1>
        
        <form action="process_order.php" method="post">
            <label for="name">Name:</label><br>
            <input type="text" id="name" name="name" required><br><br>

            <label for="email">Email:</label><br>
            <input type="email" id="email" name="email" required><br><br>

            <label for="address">Address:</label><br>
            <textarea id="address" name="address" rows="5" required></textarea><br><br>

            <label for="phone">Phone:</label><br>
            <input type="tel" id="phone" name="phone" required><br><br>

            <button type="submit">Place Order</button>
        </form>
    <?php } else { ?>
        <p>Your cart is empty. Please add items to continue checkout.</p>
        <a href="item_list.php">Continue Shopping</a>
    <?php } ?>
</body>
</html>


<?php
session_start();

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $name = $_POST['name'];
    $email = $_POST['email'];
    $address = $_POST['address'];
    $phone = $_POST['phone'];
    
    // Here you would typically:
    // 1. Validate input data
    // 2. Save order to database
    // 3. Process payment
    // 4. Send confirmation email
    
    // For this example, we'll just display a thank you message
    echo "<h1>Thank You!</h1>";
    echo "<p>Your order has been received.</p>";
    
    // Clear the cart
    unset($_SESSION['cart']);
} else {
    header('Location: checkout.php');
}
?>


<?php
session_start();

// Sample products array
$products = [
    ['id' => 1, 'name' => 'Product 1', 'price' => 19.99],
    ['id' => 2, 'name' => 'Product 2', 'price' => 29.99],
    ['id' => 3, 'name' => 'Product 3', 'price' => 39.99],
];

// Initialize cart if not exists
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = [];
}

// Add product to cart
if (isset($_GET['action']) && $_GET['action'] == 'add_to_cart') {
    $productId = $_GET['id'];
    $quantity = 1;

    foreach ($_SESSION['cart'] as &$product) {
        if ($product['id'] == $productId) {
            $product['quantity'] += $quantity;
            break;
        }
    }

    if (!isset($found)) {
        $productData = array_filter($products, function($item) use ($productId) {
            return $item['id'] == $productId;
        })[0];

        $_SESSION['cart'][] = [
            'id' => $productId,
            'name' => $productData['name'],
            'price' => $productData['price'],
            'quantity' => $quantity
        ];
    }
}

// Remove product from cart
if (isset($_GET['action']) && $_GET['action'] == 'remove_from_cart') {
    $productId = $_GET['id'];
    $_SESSION['cart'] = array_filter($_SESSION['cart'], function($item) use ($productId) {
        return $item['id'] != $productId;
    });
}

// Calculate total price
function calculateTotal() {
    $total = 0;
    foreach ($_SESSION['cart'] as $product) {
        $total += $product['price'] * $product['quantity'];
    }
    return $total;
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <h1>Products</h1>
    <?php foreach ($products as $product): ?>
        <div style="border: 1px solid #ccc; padding: 10px; margin: 5px;">
            <h3><?php echo $product['name']; ?></h3>
            <p>$<?php echo number_format($product['price'], 2); ?></p>
            <a href="?action=add_to_cart&id=<?php echo $product['id']; ?>">Add to Cart</a>
        </div>
    <?php endforeach; ?>

    <h1>Your Cart</h1>
    <?php if (empty($_SESSION['cart'])): ?>
        <p>Your cart is empty.</p>
    <?php else: ?>
        <table border="1">
            <tr>
                <th>Product Name</th>
                <th>Price</th>
                <th>Quantity</th>
                <th>Total</th>
                <th>Action</th>
            </tr>
            <?php foreach ($_SESSION['cart'] as $product): ?>
                <tr>
                    <td><?php echo $product['name']; ?></td>
                    <td>$<?php echo number_format($product['price'], 2); ?></td>
                    <td><?php echo $product['quantity']; ?></td>
                    <td>$<?php echo number_format($product['price'] * $product['quantity'], 2); ?></td>
                    <td><a href="?action=remove_from_cart&id=<?php echo $product['id']; ?>">Remove</a></td>
                </tr>
            <?php endforeach; ?>
            <tr>
                <td colspan="3">Total:</td>
                <td>$<?php echo number_format(calculateTotal(), 2); ?></td>
                <td><a href="?action=purchase">Purchase</a></td>
            </tr>
        </table>
    <?php endif; ?>

    <?php if (isset($_GET['action']) && $_GET['action'] == 'purchase'): ?>
        <h1>Purchase Confirmation</h1>
        <?php
        $total = calculateTotal();
        // Here you would typically connect to a database and store the order details
        // For this example, we'll just display the order confirmation
        ?>

        <p>Thank you for your purchase!</p>
        <p>Total Amount: $<?php echo number_format($total, 2); ?></p>

        <?php
        // Clear cart after purchase
        $_SESSION['cart'] = [];
        ?>
    <?php endif; ?>

</body>
</html>


<?php
// database configuration
$host = 'localhost';
$dbname = 'shopping_cart';
$username = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}

// Get products from database
function getProducts() {
    global $conn;
    $stmt = $conn->prepare("SELECT * FROM products");
    $stmt->execute();
    return $stmt->fetchAll(PDO::FETCH_ASSOC);
}

// Add product to cart
function addToCart($productId, $quantity) {
    if (!isset($_SESSION)) {
        session_start();
    }
    
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }

    if (!array_key_exists($productId, $_SESSION['cart'])) {
        $_SESSION['cart'][$productId] = 0;
    }

    $_SESSION['cart'][$productId] += $quantity;
}

// Update cart quantity
function updateCart($productId, $quantity) {
    if (isset($_SESSION['cart'][$productId])) {
        $_SESSION['cart'][$productId] = $quantity;
    }
}

// Remove product from cart
function removeProduct($productId) {
    if (isset($_SESSION['cart'][$productId])) {
        unset($_SESSION['cart'][$productId']);
    }
}

// Calculate total price
function calculateTotal() {
    $total = 0;
    foreach ($_SESSION['cart'] as $productId => $quantity) {
        $stmt = $conn->prepare("SELECT price FROM products WHERE id = ?");
        $stmt->execute([$productId]);
        $price = $stmt->fetchColumn();
        $total += ($price * $quantity);
    }
    return $total;
}

// Process order
function processOrder($email, $address) {
    if (!isset($_SESSION['cart'])) {
        return false;
    }

    // Insert order into database
    $stmt = $conn->prepare("INSERT INTO orders (email, address, total_amount, created_at) VALUES (?, ?, ?, NOW())");
    $totalAmount = calculateTotal();
    $stmt->execute([$email, $address, $totalAmount]);
    $orderId = $conn->lastInsertId();

    // Insert order items
    foreach ($_SESSION['cart'] as $productId => $quantity) {
        $stmt = $conn->prepare("INSERT INTO order_items (order_id, product_id, quantity, price) VALUES (?, ?, ?, ?)");
        $price = getProductPrice($productId);
        $stmt->execute([$orderId, $productId, $quantity, $price]);
    }

    // Clear cart
    unset($_SESSION['cart']);
    
    return true;
}

// Get product price from database
function getProductPrice($productId) {
    global $conn;
    $stmt = $conn->prepare("SELECT price FROM products WHERE id = ?");
    $stmt->execute([$productId]);
    return $stmt->fetchColumn();
}
?>


<?php
session_start();
require_once 'db_config.php';
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <?php if (isset($_SESSION['cart'])): ?>
        <h1>Your Cart</h1>
        <table border="1">
            <tr>
                <th>Product</th>
                <th>Quantity</th>
                <th>Price</th>
                <th>Action</th>
            </tr>
            <?php foreach ($_SESSION['cart'] as $productId => $quantity): ?>
                <?php
                $stmt = $conn->prepare("SELECT name, price FROM products WHERE id = ?");
                $stmt->execute([$productId]);
                $product = $stmt->fetch(PDO::FETCH_ASSOC);
                ?>
                <tr>
                    <td><?php echo $product['name']; ?></td>
                    <td><input type="number" value="<?php echo $quantity; ?>"></td>
                    <td>$<?php echo number_format($product['price'], 2); ?></td>
                    <td><a href="update_cart.php?productId=<?php echo $productId; ?>">Update</a> | 
                        <a href="remove_product.php?productId=<?php echo $productId; ?>">Remove</a></td>
                </tr>
            <?php endforeach; ?>
        </table>
        
        <?php if (!empty($_SESSION['cart'])): ?>
            <h2>Total: $<?php echo number_format(calculateTotal(), 2); ?></h2>
            <form action="checkout.php" method="post">
                <input type="email" name="email" placeholder="Enter your email" required><br>
                <textarea name="address" placeholder="Enter your address" required></textarea><br>
                <button type="submit">Checkout</button>
            </form>
        <?php endif; ?>
    <?php else: ?>
        <h1>Shopping Cart is empty</h1>
    <?php endif; ?>

    <!-- Display products -->
    <h2>Products</h2>
    <div class="products">
        <?php
        $products = getProducts();
        foreach ($products as $product):
            echo "<div class='product'>";
            echo "<h3>" . $product['name'] . "</h3>";
            echo "<p>Price: $" . number_format($product['price'], 2) . "</p>";
            echo "<form action='add_to_cart.php' method='post'>";
            echo "<input type='hidden' name='productId' value='" . $product['id'] . "'>";
            echo "<input type='number' name='quantity' min='1' max='" . $product['stock'] . "' required>";
            echo "<button type='submit'>Add to Cart</button>";
            echo "</form>";
            echo "</div>";
        endforeach;
        ?>
    </div>
</body>
</html>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$database = 'shopping_cart';

$conn = mysqli_connect($host, $username, $password, $database);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Start session
session_start();
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Shopping Cart</title>
    <style>
        body { font-family: Arial, sans-serif; }
        .product-list { margin: 20px; }
        .product-item { border: 1px solid #ddd; padding: 10px; margin-bottom: 10px; }
        .cart { margin: 20px; }
        .cart-item { border: 1px solid #ddd; padding: 10px; margin-bottom: 5px; }
    </style>
</head>
<body>

<?php
// Product listing page
if (isset($_GET['action']) && $_GET['action'] == 'list') {
    $sql = "SELECT * FROM products";
    $result = mysqli_query($conn, $sql);

    echo "<div class='product-list'>";
    while ($row = mysqli_fetch_assoc($result)) {
        echo "<div class='product-item'>";
        echo "<img src='images/" . $row['image'] . "' alt='" . $row['name'] . "' width='100'>";
        echo "<h3>" . $row['name'] . "</h3>";
        echo "<p>Price: $" . $row['price'] . "</p>";
        echo "<a href='addtocart.php?id=" . $row['id'] . "'>Add to Cart</a>";
        echo "</div>";
    }
    echo "</div>";
} 

// Add to cart functionality
else if (isset($_GET['action']) && $_GET['action'] == 'addtocart') {
    $product_id = $_GET['id'];
    
    // Check if product exists
    $sql = "SELECT * FROM products WHERE id=" . $product_id;
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) > 0) {
        $product = mysqli_fetch_assoc($result);
        
        if (!isset($_SESSION['cart'])) {
            $_SESSION['cart'] = array();
        }
        
        // Add product to cart
        if (array_key_exists($product_id, $_SESSION['cart'])) {
            $_SESSION['cart'][$product_id]['quantity'] += 1;
        } else {
            $_SESSION['cart'][$product_id] = array(
                'name' => $product['name'],
                'price' => $product['price'],
                'quantity' => 1
            );
        }
        
        header("Location: index.php?action=list");
    } else {
        echo "Product not found!";
    }
}

// Checkout page
else if (isset($_GET['action']) && $_GET['action'] == 'checkout') {
    $cart = isset($_SESSION['cart']) ? $_SESSION['cart'] : array();
    
    echo "<div class='cart'>";
    echo "<h2>Your Cart</h2>";
    echo "<form action='process_order.php' method='POST'>";
    
    foreach ($cart as $product_id => $item) {
        echo "<div class='cart-item'>";
        echo "<p>" . $item['name'] . "</p>";
        echo "<p>Price: $" . $item['price'] . "</p>";
        echo "<input type='number' name='quantity[" . $product_id . "]' value='" . $item['quantity'] . "' min='1'>";
        echo "<a href='remove_from_cart.php?id=" . $product_id . "'>Remove</a>";
        echo "</div>";
    }
    
    // Calculate total
    $total = 0;
    foreach ($cart as $item) {
        $total += $item['price'] * $item['quantity'];
    }
    echo "<p>Total: $" . number_format($total, 2) . "</p>";
    
    // Checkout form
    echo "<h3>Enter your details</h3>";
    echo "<input type='text' name='name' placeholder='Name' required><br>";
    echo "<input type='email' name='email' placeholder='Email' required><br>";
    echo "<input type='text' name='address' placeholder='Address' required><br>";
    echo "<button type='submit'>Place Order</button>";
    echo "</form>";
    echo "</div>";
}

// Process order
else if (isset($_GET['action']) && $_GET['action'] == 'process_order') {
    // Get form data
    $name = mysqli_real_escape_string($conn, $_POST['name']);
    $email = mysqli_real_escape_string($conn, $_POST['email']);
    $address = mysqli_real_escape_string($conn, $_POST['address']);
    
    // Calculate total
    $total = 0;
    foreach ($_SESSION['cart'] as $product_id => $item) {
        $quantity = $_POST['quantity'][$product_id];
        $total += $item['price'] * $quantity;
    }
    
    // Insert order into database
    $sql = "INSERT INTO orders (name, email, address, total_amount, order_date) 
            VALUES ('$name', '$email', '$address', '$total', NOW())";
    mysqli_query($conn, $sql);
    
    $order_id = mysqli_insert_id($conn);
    
    // Insert order items
    foreach ($_SESSION['cart'] as $product_id => $item) {
        $quantity = $_POST['quantity'][$product_id];
        
        $sql = "INSERT INTO order_items (order_id, product_id, quantity, price) 
                VALUES ('$order_id', '$product_id', '$quantity', '" . $item['price'] . "')";
        mysqli_query($conn, $sql);
    }
    
    // Send confirmation email
    require 'PHPMailer/PHPMailer.php';
    require 'PHPMailer/SMTP.php';
    require 'PHPMailer/Exception.php';
    
    try {
        $mail = new PHPMailer\PHPMailer();
        
        $mail->isSMTP();
        $mail->Host = 'smtp.example.com';
        $mail->SMTPAuth = true;
        $mail->Username = 'your_email@example.com';
        $mail->Password = 'your_password';
        $mail->SMTPSecure = 'tls';
        $mail->Port = 587;
        
        $mail->setFrom('from@example.com', 'Shopping Cart');
        $mail->addAddress($email, $name);
        $mail->Subject = 'Order Confirmation';
        $mail->Body = "Thank you for your order! Your order ID is #$order_id.";
        
        $mail->send();
    } catch (Exception $e) {
        echo "Message could not be sent.Mailer Error: {$mail->ErrorInfo}";
    }
    
    // Clear cart
    unset($_SESSION['cart']);
    
    header("Location: thank_you.php");
}

// Order history
else if (isset($_GET['action']) && $_GET['action'] == 'order_history') {
    $sql = "SELECT * FROM orders WHERE email='" . mysqli_real_escape_string($conn, $_SESSION['email']) . "'";
    $result = mysqli_query($conn, $sql);
    
    echo "<h2>Order History</h2>";
    while ($row = mysqli_fetch_assoc($result)) {
        echo "<div class='order'>";
        echo "<p>Order ID: " . $row['id'] . "</p>";
        echo "<p>Date: " . $row['order_date'] . "</p>";
        echo "<p>Total: $" . number_format($row['total_amount'], 2) . "</p>";
        echo "</div>";
    }
}
?>
</body>
</html>

<?php
// Close database connection
mysqli_close($conn);
?>



<?php
// Start session
session_start();

// Database connection
$host = 'localhost';
$dbname = 'shopping_cart';
$user = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $user, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    die('Could not connect to the database: ' . $e->getMessage());
}

// Check if order is confirmed
if (isset($_POST['order_confirmed'])) {
    // Process payment here
    // For this example, we'll simulate a successful transaction
    $transaction_id = mt_rand(1000, 9999);
    $order_date = date('Y-m-d H:i:s');

    // Save order to database
    try {
        // Insert into orders table
        $stmt = $conn->prepare("INSERT INTO orders (user_id, total_amount, transaction_id, order_date) 
                              VALUES (:user_id, :total_amount, :transaction_id, :order_date)");
        
        $stmt->execute([
            'user_id' => $_SESSION['user_id'],
            'total_amount' => $_SESSION['cart']['total'],
            'transaction_id' => $transaction_id,
            'order_date' => $order_date
        ]);

        // Get order ID
        $order_id = $conn->lastInsertId();

        // Insert each item into order_items table
        foreach ($_SESSION['cart']['items'] as $item) {
            $stmt = $conn->prepare("INSERT INTO order_items (order_id, product_id, quantity, price)
                                  VALUES (:order_id, :product_id, :quantity, :price)");
            
            $stmt->execute([
                'order_id' => $order_id,
                'product_id' => $item['id'],
                'quantity' => $item['quantity'],
                'price' => $item['price']
            ]);
        }

        // Clear cart after successful order
        unset($_SESSION['cart']);

        echo "<h2>Thank you for your purchase!</h2>";
        echo "<p>Your transaction ID is: #$transaction_id</p>";
        echo "<p><a href='shop.php'>Continue shopping</a></p>";
        exit;
    } catch(PDOException $e) {
        die("Error processing order: " . $e->getMessage());
    }
}

// Display cart contents
echo "<h2>Shopping Cart</h2>";

if (!isset($_SESSION['cart']) || empty($_SESSION['cart']['items'])) {
    echo "<p>Your cart is empty.</p>";
    echo "<p><a href='shop.php'>Go back to shop</a></p>";
} else {
    $total = $_SESSION['cart']['total'];
    
    echo "<table border='1'>";
    echo "<tr><th>Product</th><th>Quantity</th><th>Price</th><th>Total</th></tr>";
    
    foreach ($_SESSION['cart']['items'] as $item) {
        echo "<tr>";
        echo "<td>{$item['name']}</td>";
        echo "<td>{$item['quantity']}</td>";
        echo "<td>\${$item['price']}</td>";
        echo "<td>\${$item['total']}</td>";
        echo "</tr>";
    }
    
    echo "<tr><td colspan='3'>Total:</td><td>\$$total</td></tr>";
    echo "</table>";

    // Display order confirmation form
    echo "<form method='post'>";
    echo "<input type='hidden' name='order_confirmed' value='1'>";
    echo "<button type='submit'>Confirm Purchase</button>";
    echo "</form>";
    
    echo "<p><a href='shop.php'>Continue shopping</a></p>";
}
?>



<?php
$host = "localhost";
$username = "root";
$password = "";
$dbname = "shopping_cart";

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    // Set the PDO error mode to exception
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}
?>


<?php
require_once 'config.php';

// Add product to cart
function add_to_cart($product_id, $quantity = 1) {
    global $conn;
    
    session_start();
    $session_id = session_id();

    try {
        // Check if the item already exists in the cart
        $stmt = $conn->prepare("SELECT * FROM cart WHERE product_id = ? AND session_id = ?");
        $stmt->execute([$product_id, $session_id]);
        
        if ($stmt->rowCount() > 0) {
            // Update quantity
            $currentQuantity = $stmt->fetch()['quantity'];
            $newQuantity = $currentQuantity + $quantity;
            update_cart_item($product_id, $session_id, $newQuantity);
        } else {
            // Insert new item
            $stmt = $conn->prepare("INSERT INTO cart (session_id, product_id, quantity) VALUES (?, ?, ?)");
            $stmt->execute([$session_id, $product_id, $quantity]);
        }
    } catch(PDOException $e) {
        die("Error: " . $e->getMessage());
    }
}

// Update quantity of a product in the cart
function update_cart_item($product_id, $session_id, $new_quantity) {
    global $conn;
    
    try {
        $stmt = $conn->prepare("UPDATE cart SET quantity = ? WHERE product_id = ? AND session_id = ?");
        $stmt->execute([$new_quantity, $product_id, $session_id]);
    } catch(PDOException $e) {
        die("Error: " . $e->getMessage());
    }
}

// Get all items from the cart
function get_cart_items() {
    global $conn;
    
    session_start();
    $session_id = session_id();

    try {
        $stmt = $conn->prepare("SELECT c.*, p.name, p.price, p.image FROM cart c JOIN products p ON c.product_id = p.id WHERE c.session_id = ?");
        $stmt->execute([$session_id]);
        
        return $stmt->fetchAll(PDO::FETCH_ASSOC);
    } catch(PDOException $e) {
        die("Error: " . $e->getMessage());
    }
}

// Delete an item from the cart
function delete_cart_item($item_id) {
    global $conn;
    
    try {
        $stmt = $conn->prepare("DELETE FROM cart WHERE id = ?");
        $stmt->execute([$item_id]);
    } catch(PDOException $e) {
        die("Error: " . $e->getMessage());
    }
}
?>


<?php
session_start();
require_once 'functions.php';
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
</head>
<body>

<div class="container">
    <h1>Products</h1>
    
    <?php
    $stmt = $conn->prepare("SELECT * FROM products");
    $stmt->execute();
    $products = $stmt->fetchAll(PDO::FETCH_ASSOC);
    
    foreach ($products as $product) {
        echo "
            <div class='col-md-4'>
                <div class='thumbnail'>
                    <img src='{$product['image']}' alt='{$product['name']}'>
                    <div class='caption'>
                        <h3>{$product['name']}</h3>
                        <p>{$product['description']}</p>
                        <p>\${$product['price']}</p>
                        <a href='?action=add&id={$product['id']}' class='btn btn-primary'>Add to Cart</a>
                    </div>
                </div>
            </div>";
    }
    ?>

    <br><br>
    <a href="cart.php" class="btn btn-success">View Cart</a>
</div>

<?php
if (isset($_GET['action']) && $_GET['action'] == 'add' && isset($_GET['id'])) {
    add_to_cart($_GET['id'], 1);
}
?>

</body>
</html>


<?php
session_start();
require_once 'functions.php';
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
</head>
<body>

<div class="container">
    <h1>Your Shopping Cart</h1>
    
    <?php
    $cart_items = get_cart_items();
    
    if (count($cart_items) > 0) {
        echo "
            <table class='table table-bordered'>
                <thead>
                    <tr>
                        <th>Product Name</th>
                        <th>Price</th>
                        <th>Quantity</th>
                        <th>Total</th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tbody>";
        
        $total = 0;
        foreach ($cart_items as $item) {
            $product_price = $item['price'];
            $total += $product_price * $item['quantity'];
            
            echo "
                <tr>
                    <td>{$item['name']}</td>
                    <td>\${$item['price']}</td>
                    <td>
                        <form method='post' action='update_cart.php'>
                            <input type='hidden' name='id' value='{$item['id']}'>
                            <input type='number' name='quantity' min='1' value='{$item['quantity']}' style='width: 50px;'>
                            <button type='submit' class='btn btn-default'>Update</button>
                        </form>
                    </td>
                    <td>\${$product_price * $item['quantity']}</td>
                    <td>
                        <a href='delete_cart.php?id={$item['id']}' class='btn btn-danger'>Delete</a>
                    </td>
                </tr>";
        }
        
        echo "
                </tbody>
                <tfoot>
                    <tr>
                        <td colspan='4' style='text-align: right;'>Total:</td>
                        <td>\${$total}</td>
                    </tr>
                </tfoot>
            </table>";
    } else {
        echo "<p>Your cart is empty!</p>";
    }
    ?>
    
    <?php
    if (count($cart_items) > 0) {
        echo "<a href='checkout.php' class='btn btn-success'>Checkout</a>";
    }
    ?>
    
    <br><br>
    <a href="index.php" class="btn btn-primary">Continue Shopping</a>
</div>

</body>
</html>


<?php
session_start();
require_once 'functions.php';

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    if (isset($_POST['id']) && isset($_POST['quantity'])) {
        $item_id = $_POST['id'];
        $new_quantity = $_POST['quantity'];
        
        update_cart_item($item_id, session_id(), $new_quantity);
    }
    
    header("Location: cart.php");
    exit();
}
?>


<?php
session_start();
require_once 'functions.php';

if (isset($_GET['id'])) {
    delete_cart_item($_GET['id']);
}

header("Location: cart.php");
exit();
?>


<?php
session_start();
require_once 'functions.php';
?>

<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
</head>
<body>

<div class="container">
    <h1>Checkout</h1>
    
    <?php
    $cart_items = get_cart_items();
    if (count($cart_items) == 0) {
        header("Location: index.php");
        exit();
    }
    
    echo "
        <div class='col-md-6'>
            <h3>Shipping Information</h3>
            <form action='process_checkout.php' method='post'>
                <div class='form-group'>
                    <label>Name:</label>
                    <input type='text' name='name' class='form-control' required>
                </div>
                <div class='form-group'>
                    <label>Address:</label>
                    <input type='text' name='address' class='form-control' required>
                </div>
                <div class='form-group'>
                    <label>City:</label>
                    <input type='text' name='city' class='form-control' required>
                </div>
                <div class='form-group'>
                    <label>State:</label>
                    <input type='text' name='state' class='form-control' required>
                </div>
                <div class='form-group'>
                    <label>Zip Code:</label>
                    <input type='number' name='zip_code' class='form-control' required>
                </div>
                <button type='submit' class='btn btn-success'>Complete Checkout</button>
            </form>
        </div>
    ";
    ?>
    
    <div class='col-md-6'>
        <h3>Order Summary</h3>
        <?php
        $total = 0;
        foreach ($cart_items as $item) {
            $product_price = $item['price'];
            $total += $product_price * $item['quantity'];
            
            echo "
                <div class='row'>
                    <div class='col-md-8'>{$item['name']}</div>
                    <div class='col-md-4'>\${$product_price * $item['quantity']}</div>
                </div>";
        }
        ?>
        
        <div class='row total'>
            <div class='col-md-8' style='text-align: right;'><strong>Total:</strong></div>
            <div class='col-md-4'><strong>\${$total}</strong></div>
        </div>
    </div>

</div>

</body>
</html>


<?php
session_start();
require_once 'functions.php';

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $name = $_POST['name'];
    $address = $_POST['address'];
    $city = $_POST['city'];
    $state = $_POST['state'];
    $zip_code = $_POST['zip_code'];
    
    // Here you would typically process the payment and save the order
    // For this example, we'll just empty the cart and display a success message
    
    // Empty the cart
    $session_id = session_id();
    try {
        $stmt = $conn->prepare("DELETE FROM cart WHERE session_id = ?");
        $stmt->execute([$session_id]);
        
        echo "<h1>Thank you for your order!</h1>";
        echo "<p>Your order has been processed successfully.</p>";
        echo "<a href='index.php' class='btn btn-primary'>Continue Shopping</a>";
    } catch(PDOException $e) {
        die("Error processing your order: " . $e->getMessage());
    }
}
?>


<?php
class Product {
    private $db;

    public function __construct($db) {
        $this->db = $db;
    }

    // Get all products
    public function fetchAll() {
        $query = "SELECT * FROM products";
        $stmt = $this->db->prepare($query);
        $stmt->execute();
        return $stmt->fetchAll(PDO::FETCH_ASSOC);
    }

    // Get product by ID
    public function fetchById($id) {
        $query = "SELECT * FROM products WHERE id = ?";
        $stmt = $this->db->prepare($query);
        $stmt->bindparam(1, $id);
        $stmt->execute();
        return $stmt->fetch(PDO::FETCH_ASSOC);
    }
}
?>


<?php
session_start();

// Add item to cart
function addToCart($productId, $quantity) {
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }
    
    if (isset($_SESSION['cart'][$productId])) {
        $_SESSION['cart'][$productId]['quantity'] += $quantity;
    } else {
        $_SESSION['cart'][$productId] = array(
            'id' => $productId,
            'quantity' => $quantity
        );
    }
}

// Remove item from cart
function removeFromCart($productId) {
    if (isset($_SESSION['cart'][$productId])) {
        unset($_SESSION['cart'][$productId]);
    }
}

// Calculate cart total
function getCartTotal() {
    global $pdo;
    
    $total = 0;
    if (isset($_SESSION['cart'])) {
        foreach ($_SESSION['cart'] as $item) {
            $product = new Product($pdo);
            $productData = $product->fetchById($item['id']);
            $total += ($productData['price'] * $item['quantity']);
        }
    }
    
    return $total;
}

// Clear cart
function clearCart() {
    unset($_SESSION['cart']);
}
?>


<?php
session_start();

class Checkout {
    private $db;

    public function __construct($db) {
        $this->db = $db;
    }

    // Store customer details
    public function storeCustomerDetails($data) {
        $_SESSION['customer'] = array(
            'first_name' => $data['first_name'],
            'last_name' => $data['last_name'],
            'email' => $data['email'],
            'phone' => $data['phone'],
            'address' => $data['address']
        );
    }

    // Process order
    public function processOrder() {
        global $pdo;
        
        if (!isset($_SESSION['customer']) || !isset($_SESSION['cart'])) {
            return false;
        }
        
        // Insert into orders table
        $query = "INSERT INTO orders (customer_id, total, payment_method) VALUES (?, ?, ?)";
        $stmt = $pdo->prepare($query);
        $stmt->bindparam(1, $_SESSION['customer']['id']);
        $stmt->bindparam(2, getCartTotal());
        $stmt->bindparam(3, 'credit_card'); // You can modify this based on payment method
        $stmt->execute();
        
        $orderId = $pdo->lastInsertId();
        
        // Insert order items
        foreach ($_SESSION['cart'] as $item) {
            $query = "INSERT INTO order_items (order_id, product_id, quantity, price) VALUES (?, ?, ?, ?)";
            $stmt = $pdo->prepare($query);
            $stmt->bindparam(1, $orderId);
            $stmt->bindparam(2, $item['id']);
            $stmt->bindparam(3, $item['quantity']);
            $stmt->bindparam(4, getProductPriceById($item['id'])); // Function to get product price
            $stmt->execute();
        }
        
        clearCart();
        return true;
    }
}
?>


<?php
require 'vendor/autoload.php';

use PayPal\rest\ApiContext;
use PayPal\Auth\OAuthTokenCredential;

$apiContext = new ApiContext(
    new OAuthTokenCredential(
        'your_client_id', // Replace with your client ID
        'your_secret_key' // Replace with your secret key
    )
);

// Create payment
$payment = Payment::create($apiContext, [
    'intent' => 'sale',
    'payer' => [
        'payment_method' => 'paypal'
    ],
    'redirect_urls' => [
        'return_url' => 'http://localhost/checkout/success.php',
        'cancel_url' => 'http://localhost/checkout/cancel.php'
    ],
    'transactions' => [
        [
            'amount' => [
                'total' => getCartTotal(),
                'currency' => 'USD'
            ],
            'description' => 'Order from your store'
        ]
    ]
]);

// Redirect to PayPal
header("Location: {$payment->getApprovalLink()}");
exit;
?>


<?php
function sanitizeInput($data) {
    return htmlspecialchars(trim($data), ENT_QUOTES, 'UTF-8');
}

// Log errors
function logError($error) {
    $logFile = 'errors.log';
    $timestamp = date('Y-m-d H:i:s');
    
    error_log("[$timestamp] - $error
", 3, $logFile);
}
?>


<?php
require 'config.php'; // Database configuration
require 'classes/Product.php';
require 'classes/Checkout.php';

// Add product to cart
addToCart(1, 2);

// Remove item from cart
removeFromCart(1);

// Get cart total
echo getCartTotal();

// Checkout process
$checkout = new Checkout($pdo);
$data = [
    'first_name' => sanitizeInput($_POST['first_name']),
    'last_name' => sanitizeInput($_POST['last_name']),
    'email' => sanitizeInput($_POST['email']),
    'phone' => sanitizeInput($_POST['phone']),
    'address' => sanitizeInput($_POST['address'])
];
$checkout->storeCustomerDetails($data);

// Process order
if ($checkout->processOrder()) {
    // Redirect to success page
    header("Location: success.php");
} else {
    // Show error message
    echo "Error processing your order.";
}
?>


<?php
session_start();
require_once 'database_connection.php';

// Get all products from the database
$sql = "SELECT * FROM products";
$result = $conn->query($sql);

if ($result->num_rows > 0) {
    while ($row = $result->fetch_assoc()) {
        echo "<div class='product'>";
        echo "<h2>" . $row['name'] . "</h2>";
        echo "<p>Price: $" . $row['price'] . "</p>";
        echo "<p>Description: " . $row['description'] . "</p>";
        echo "<p>Quantity: " . $row['quantity'] . "</p>";
        echo "<form action='add_to_cart.php' method='post'>";
        echo "<input type='hidden' name='product_id' value='" . $row['id'] . "'>";
        echo "<input type='number' name='quantity' min='1' max='" . $row['quantity'] . "' value='1'>";
        echo "<button type='submit'>Add to Cart</button>";
        echo "</form>";
        echo "</div>";
    }
} else {
    echo "No products available.";
}

$conn->close();
?>


<?php
session_start();
require_once 'database_connection.php';

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $product_id = $_POST['product_id'];
    $quantity = $_POST['quantity'];

    // Get product details from the database
    $sql = "SELECT * FROM products WHERE id = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("i", $product_id);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        $product = $result->fetch_assoc();

        // Add to cart
        $cart_item = array(
            'id' => $product['id'],
            'name' => $product['name'],
            'price' => $product['price'],
            'quantity' => $quantity,
            'total' => $product['price'] * $quantity
        );

        if (isset($_SESSION['cart'])) {
            $found = false;
            foreach ($_SESSION['cart'] as &$item) {
                if ($item['id'] == $cart_item['id']) {
                    $item['quantity'] += $cart_item['quantity'];
                    $item['total'] += $cart_item['total'];
                    $found = true;
                }
            }
            if (!$found) {
                array_push($_SESSION['cart'], $cart_item);
            }
        } else {
            $_SESSION['cart'] = array($cart_item);
        }

        echo "Product added to cart.";
    } else {
        echo "Product not found.";
    }
}

$conn->close();
?>


<?php
session_start();

if (isset($_SESSION['cart'])) {
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        echo "<div class='cart-item'>";
        echo "<h3>" . $item['name'] . "</h3>";
        echo "<p>Price: $" . $item['price'] . "</p>";
        echo "<p>Quantity: " . $item['quantity'] . "</p>";
        echo "<p>Total: $" . $item['total'] . "</p>";
        echo "<form action='remove_from_cart.php' method='post'>";
        echo "<input type='hidden' name='product_id' value='" . $item['id'] . "'>";
        echo "<button type='submit'>Remove</button>";
        echo "</form>";
        echo "</div>";
        $total += $item['total'];
    }
    echo "<h2>Subtotal: $" . number_format($total, 2) . "</h2>";
} else {
    echo "Your cart is empty.";
}

// Add a checkout button
echo "<a href='checkout.php'><button>Checkout</button></a>";
?>


<?php
session_start();

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $product_id = $_POST['product_id'];

    if (isset($_SESSION['cart'])) {
        foreach ($_SESSION['cart'] as $key => $item) {
            if ($item['id'] == $product_id) {
                unset($_SESSION['cart'][$key]);
                break;
            }
        }
    }

    header("Location: view_cart.php");
}
?>


<?php
session_start();

if (isset($_SESSION['cart']) && count($_SESSION['cart']) > 0) {
    // Display order review
    echo "<h2>Order Review</h2>";
    foreach ($_SESSION['cart'] as $item) {
        echo "<div class='order-item'>";
        echo "<p>" . $item['name'] . "</p>";
        echo "<p>Quantity: " . $item['quantity'] . "</p>";
        echo "<p>Total: $" . $item['total'] . "</p>";
        echo "</div>";
    }

    // Calculate totals
    $subtotal = array_sum(array_column($_SESSION['cart'], 'total'));
    $tax = 0.08 * $subtotal;
    $total = $subtotal + $tax;

    echo "<h3>Subtotal: $" . number_format($subtotal, 2) . "</h3>";
    echo "<h3>Tax: $" . number_format($tax, 2) . "</h3>";
    echo "<h3>Total: $" . number_format($total, 2) . "</h3>";

    // Display payment form
    echo "<form action='process_payment.php' method='post'>";
    echo "<input type='hidden' name='total' value='" . $total . "'>";
    echo "<div class='payment-info'>";
    echo "<label>Name on Card:</label>";
    echo "<input type='text' name='card_name' required>";
    echo "<label>Card Number:</label>";
    echo "<input type='text' name='card_number' required pattern='\d{16}' maxlength='16'>";
    echo "<label>CVV:</label>";
    echo "<input type='password' name='cvv' required pattern='\d{3}' maxlength='3'>";
    echo "<button type='submit'>Complete Purchase</button>";
    echo "</div>";
    echo "</form>";
} else {
    echo "Your cart is empty.";
}
?>


<?php
session_start();

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Process payment (this is just a placeholder for demonstration)
    $total = $_POST['total'];
    
    // Here you would typically integrate with a payment gateway like Stripe or PayPal

    // For this example, we'll assume the payment was successful
    if ($total > 0) {
        // Clear the cart
        unset($_SESSION['cart']);
        
        // Redirect to confirmation page
        header("Location: confirm_order.php");
    } else {
        echo "Payment failed. Please try again.";
    }
}
?>


<?php
session_start();

echo "<h2>Thank you for your purchase!</h2>";
echo "<p>Your order has been processed successfully.</p>";
// You can add additional details here if needed

// Clear the cart (already done in process_payment.php)
unset($_SESSION['cart']);
?>


<?php
$servername = "localhost";
$username = "root";
$password = "";
$dbname = "your_database_name";

// Create connection
$conn = new mysqli($servername, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}
?>


<?php
session_start();
include('db_connection.php');

if (!isset($_SESSION['cart']) || empty($_SESSION['cart'])) {
    header("Location: cart.php");
    exit;
}
?>
<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
</head>
<body>
    <h1>Proceed to Checkout</h1>
    <?php
    if (isset($_GET['error'])) {
        echo "<p style='color:red;'>".$_GET['error']."</p>";
    }
    ?>
    <form action="process_purchase.php" method="post">
        <input type="text" name="name" placeholder="Your Name" required><br>
        <input type="email" name="email" placeholder="Your Email" required><br>
        <textarea name="address" placeholder="Shipping Address" rows="3" required></textarea><br>
        <button type="submit">Place Order</button>
    </form>
</body>
</html>


<?php
session_start();
include('db_connection.php');

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $name = $_POST['name'];
    $email = $_POST['email'];
    $address = $_POST['address'];

    // Validate inputs
    if (empty($name) || empty($email) || empty($address)) {
        header("Location: checkout.php?error=All fields are required");
        exit;
    }

    if (!isset($_SESSION['cart']) || empty($_SESSION['cart'])) {
        header("Location: cart.php?error=Cart is empty");
        exit;
    }

    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += $item['price'] * $item['quantity'];
    }

    try {
        $conn->begin_transaction();

        // Insert into orders table
        $stmt = $conn->prepare("INSERT INTO orders (name, email, address, total_amount, created_at) VALUES (?, ?, ?, ?, NOW())");
        $stmt->bind_param("sssd", $name, $email, $address, $total);
        $stmt->execute();
        $order_id = $conn->insert_id;

        // Insert into order_items
        foreach ($_SESSION['cart'] as $item) {
            $product_id = $item['id'];
            $price = $item['price'];
            $quantity = $item['quantity'];

            $stmt_item = $conn->prepare("INSERT INTO order_items (order_id, product_id, price, quantity) VALUES (?, ?, ?, ?)");
            $stmt_item->bind_param("iiid", $order_id, $product_id, $price, $quantity);
            $stmt_item->execute();
        }

        // Clear the cart
        unset($_SESSION['cart']);

        $conn->commit();

        header("Location: confirmation.php?order_id=$order_id");
        exit;

    } catch (Exception $e) {
        $conn->rollback();
        header("Location: checkout.php?error=Error processing order. Please try again.");
        exit;
    }
} else {
    header("Location: checkout.php");
}
?>


<?php
session_start();
include('db_connection.php');

$order_id = isset($_GET['order_id']) ? $_GET['order_id'] : null;

if (!$order_id) {
    header("Location: index.php");
    exit;
}
?>
<!DOCTYPE html>
<html>
<head>
    <title>Order Confirmation</title>
</head>
<body>
    <h1>Thank you for your order!</h1>
    <p>Your order ID is: <?php echo $order_id; ?></p>
    <a href="index.php">Continue shopping</a>
</body>
</html>


echo "<td><a href='checkout.php'>Proceed to Checkout</a></td>";


<?php
session_start();

// Connect to database
$host = 'localhost';
$dbname = 'your_database';
$username = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}

if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add product to cart
if (isset($_GET['action']) && $_GET['action'] == 'add') {
    $product_id = intval($_GET['id']);
    
    if (isset($_SESSION['cart'][$product_id])) {
        $_SESSION['cart'][$product_id]['quantity']++;
    } else {
        $sql = "SELECT * FROM products WHERE id = ?";
        $stmt = $conn->prepare($sql);
        $stmt->execute([$product_id]);
        
        $product = $stmt->fetch(PDO::FETCH_ASSOC);
        
        if ($product) {
            $_SESSION['cart'][$product_id] = array(
                'name' => $product['name'],
                'price' => $product['price'],
                'quantity' => 1,
                'subtotal' => $product['price']
            );
        }
    }
}

// Display cart contents
if (isset($_GET['action']) && $_GET['action'] == 'view') {
    if (!empty($_SESSION['cart'])) {
        echo "<table>";
        echo "<tr><th>Product</th><th>Price</th><th>Quantity</th><th>Subtotal</th></tr>";
        
        $total_price = 0;
        foreach ($_SESSION['cart'] as $id => $item) {
            echo "<tr>";
            echo "<td>{$item['name']}</td>";
            echo "<td>£{$item['price']}</td>";
            echo "<td><input type='number' min='1' value='{$item['quantity']}'></td>";
            echo "<td>£{$item['subtotal']}</td>";
            echo "</tr>";
            
            $total_price += $item['subtotal'];
        }
        
        echo "<tr><th colspan='3'>Total:</th><th>£$total_price</th></tr>";
        echo "</table>";
    } else {
        echo "Your cart is empty!";
    }
}
?>


<?php
session_start();

if (isset($_POST['process_payment'])) {
    // Simulate payment processing
    $payment_status = 'success'; // In real application, this would be determined by the payment gateway
    
    if ($payment_status == 'success') {
        // Insert order into database
        $user_id = 1; // Replace with actual user ID
        
        $sql = "INSERT INTO orders (user_id, total_amount, payment_status, created_at) 
                VALUES (?, ?, ?, NOW())";
        
        try {
            $stmt = $conn->prepare($sql);
            $stmt->execute([$user_id, $_SESSION['total_price'], 'completed']);
            
            // Get the order ID
            $order_id = $conn->lastInsertId();
            
            // Insert order details
            foreach ($_SESSION['cart'] as $id => $item) {
                $sql_details = "INSERT INTO order_details (order_id, product_id, quantity, subtotal)
                               VALUES (?, ?, ?, ?)";
                
                $stmt_details = $conn->prepare($sql_details);
                $stmt_details->execute([$order_id, $id, $item['quantity'], $item['subtotal']]);
            }
            
            // Clear cart
            unset($_SESSION['cart']);
            
            echo "Payment successful! Your order has been processed.";
        } catch (PDOException $e) {
            echo "Error: " . $e->getMessage();
        }
    } else {
        echo "Payment failed. Please try again.";
    }
}
?>


<?php
session_start();

if (isset($_GET['order_id'])) {
    // Retrieve order details from database
    $sql = "SELECT * FROM orders WHERE order_id = ?";
    
    $stmt = $conn->prepare($sql);
    $stmt->execute([$_GET['order_id']]);
    
    $order = $stmt->fetch(PDO::FETCH_ASSOC);
    
    if ($order) {
        echo "<h2>Order Confirmation</h2>";
        echo "<p>Your order has been processed successfully!</p>";
        echo "<p>Order ID: {$order['order_id']}</p>";
        echo "<p>Total Amount: £{$order['total_amount']}</p>";
        echo "<p>Payment Status: {$order['payment_status']}</p>";
    } else {
        echo "Invalid order ID!";
    }
}
?>


<?php
// Database connection
$host = 'localhost';
$user = 'username';
$password = 'password';
$dbname = 'database';

$conn = new mysqli($host, $user, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Session start
session_start();

// CSRF protection token
if (!isset($_SESSION['csrf_token'])) {
    $_SESSION['csrf_token'] = bin2hex(random_bytes(32));
}

// Form submission handling
if ($_SERVER["REQUEST_METHOD"] == "POST") {

    // Check CSRF token
    if (!isset($_POST['csrf_token']) || $_SESSION['csrf_token'] !== $_POST['csrf_token']) {
        die("Invalid request");
    }

    // Sanitize input data
    $name = mysqli_real_escape_string($conn, trim($_POST['name']));
    $email = mysqli_real_escape_string($conn, trim($_POST['email']));
    $quantity = (int)$_POST['quantity'];
    $payment_method = mysqli_real_escape_string($conn, $_POST['payment']);

    // Basic validation
    if ($name == '' || $email == '' || $quantity <= 0) {
        die("Please fill in all required fields");
    }

    // Check email format
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        die("Invalid email format");
    }

    // Check payment method
    if ($payment_method !== 'credit_card' && $payment_method !== 'paypal') {
        die("Invalid payment method");
    }

    // Product price (example)
    $product_id = 1;
    $price = 49.99; // Replace with your product's price

    // Total amount
    $total_amount = $price * $quantity;

    try {
        // Start transaction
        $conn->begin_transaction();

        // Insert order into database
        $sql = "INSERT INTO purchases (product_id, customer_name, email, quantity, payment_method, total_price)
                VALUES (?, ?, ?, ?, ?, ?)";
        
        $stmt = $conn->prepare($sql);
        $stmt->bind_param("isidis", $product_id, $name, $email, $quantity, $payment_method, $total_amount);

        if (!$stmt->execute()) {
            throw new Exception("Error inserting order");
        }

        // Get order ID
        $order_id = $conn->insert_id;

        // Commit transaction
        $conn->commit();

        // Redirect to thank you page
        header("Location: thankyou.php?order_id=" . $order_id);
        exit();
    } catch (Exception $e) {
        // Rollback transaction on error
        $conn->rollback();
        die("Error processing your order: " . $e->getMessage());
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Purchase Form</title>
    <style>
        body { font-family: Arial, sans-serif; margin: 20px; }
        .container { max-width: 600px; margin: 0 auto; }
        .form-group { margin-bottom: 15px; }
        .form-group label { display: block; margin-bottom: 5px; }
        .form-group input, .form-group select {
            width: 100%;
            padding: 8px;
            border: 1px solid #ddd;
            border-radius: 4px;
        }
        button { background-color: #4CAF50; color: white; padding: 10px 20px; border: none; border-radius: 4px; cursor: pointer; }
        button:hover { background-color: #45a049; }
        .error { color: red; margin-top: 5px; }
    </style>
</head>
<body>
    <div class="container">
        <h2>Purchase Form</h2>
        <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
            <input type="hidden" name="csrf_token" value="<?php echo $_SESSION['csrf_token']; ?>">
            
            <div class="form-group">
                <label for="name">Name:</label>
                <input type="text" id="name" name="name" required>
            </div>

            <div class="form-group">
                <label for="email">Email:</label>
                <input type="email" id="email" name="email" required>
            </div>

            <div class="form-group">
                <label for="quantity">Quantity:</label>
                <input type="number" id="quantity" name="quantity" value="1" min="1" required>
            </div>

            <div class="form-group">
                <label for="payment">Payment Method:</label>
                <select id="payment" name="payment" required>
                    <option value="">Select payment method</option>
                    <option value="credit_card">Credit Card</option>
                    <option value="paypal">PayPal</option>
                </select>
            </div>

            <button type="submit">Purchase Now</button>
        </form>
    </div>
</body>
</html>


<?php
// Start session
session_start();

// Initialize cart if not set
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Database connection
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}

// Get products from database
try {
    $stmt = $conn->query("SELECT * FROM products");
    $products = $stmt->fetchAll(PDO::FETCH_ASSOC);
} catch (PDOException $e) {
    die("Error fetching products: " . $e->getMessage());
}

// Add to cart functionality
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    if (isset($_POST['add_to_cart'])) {
        $productId = $_POST['product_id'];
        $quantity = isset($_POST['quantity']) ? intval($_POST['quantity']) : 1;

        // Check if product exists in cart
        if (array_key_exists($productId, $_SESSION['cart'])) {
            $_SESSION['cart'][$productId]['quantity'] += $quantity;
        } else {
            // Get product details from database
            $stmt = $conn->prepare("SELECT * FROM products WHERE id = ?");
            $stmt->execute([$productId]);
            $product = $stmt->fetch(PDO::FETCH_ASSOC);

            if ($product) {
                $_SESSION['cart'][$productId] = array(
                    'name' => $product['name'],
                    'price' => $product['price'],
                    'quantity' => $quantity
                );
            }
        }
    } elseif (isset($_POST['remove_from_cart'])) {
        $productId = $_POST['product_id'];
        if (array_key_exists($productId, $_SESSION['cart'])) {
            unset($_SESSION['cart'][$productId]);
        }
    }
}

// Calculate total price
function calculateTotal() {
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += ($item['price'] * $item['quantity']);
    }
    return number_format($total, 2);
}

// Apply discount if applicable
function applyDiscount($total, $discountCode) {
    $config = array(
        'DISCOUNT_CODE' => 'SUMMER15',
        'DISCOUNT_RATE' => 0.15 // 15% discount
    );

    if ($discountCode == $config['DISCOUNT_CODE']) {
        return number_format($total * (1 - $config['DISCOUNT_RATE']), 2);
    } else {
        return $total;
    }
}

// Process payment
if (isset($_POST['purchase'])) {
    require_once('vendor/autoload.php');
    \Stripe\Stripe::setApiKey("your_stripe_api_key");

    try {
        // Create a charge with Stripe
        $charge = \Stripe\Charge::create(array(
            'amount' => calculateTotal() * 100, // Convert to cents
            'currency' => 'usd',
            'card' => $_POST['stripeToken'],
        ));

        // Redirect to success page or show confirmation message
        header("Location: purchase_success.php");
        exit();
    } catch (\Stripe\Exception\CardException $e) {
        // Show error message
        echo "Error processing payment: " . $e->getMessage();
    }
}
?>


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Product List</title>
</head>
<body>
    <?php
        // Sample products array
        $products = [
            ['id' => 1, 'name' => 'Laptop', 'price' => 999.99, 'description' => 'High-performance laptop'],
            ['id' => 2, 'name' => 'Phone', 'price' => 699.99, 'description' => 'Smartphone with latest features'],
            ['id' => 3, 'name' => 'Tablet', 'price' => 499.99, 'description' => 'Portable tablet device']
        ];
    ?>

    <h1>Product List</h1>
    <?php foreach ($products as $product): ?>
        <div style="border: 1px solid #ddd; padding: 10px; margin-bottom: 10px;">
            <h2><?php echo $product['name']; ?></h2>
            <p><?php echo $product['description']; ?></p>
            <p>Price: <?php echo '$' . number_format($product['price'], 2); ?></p>
            <form id="addToCartForm<?php echo $product['id']; ?>" method="post">
                <input type="hidden" name="productId" value="<?php echo $product['id']; ?>">
                <input type="hidden" name="productName" value="<?php echo $product['name']; ?>">
                <input type="hidden" name="productPrice" value="<?php echo $product['price']; ?>">
                <button type="submit">Add to Cart</button>
            </form>
        </div>
    <?php endforeach; ?>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        $(document).ready(function() {
            $('form[id^="addToCartForm"]').on('submit', function(e) {
                e.preventDefault();
                var formData = $(this).serialize();
                $.ajax({
                    url: 'add_to_cart.php',
                    type: 'POST',
                    data: formData,
                    success: function(response) {
                        alert('Item added to cart!');
                        // Optionally refresh the cart
                        loadCart();
                    }
                });
            });

            // Function to load the current cart
            function loadCart() {
                $.ajax({
                    url: 'view_cart.php',
                    type: 'GET',
                    success: function(response) {
                        $('#cartContent').html(response);
                    }
                });
            }

            // Load the cart content when the page loads
            loadCart();
        });
    </script>

    <div id="cartContent" style="margin-top: 20px;">
        <!-- Cart content will be loaded here -->
    </div>
</body>
</html>


<?php
session_start();

// Initialize cart if not exists
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = [];
}

// Get product data from POST
$productId = isset($_POST['productId']) ? intval($_POST['productId']) : 0;
$productName = isset($_POST['productName']) ? $_POST['productName'] : '';
$productPrice = isset($_POST['productPrice']) ? floatval($_POST['productPrice']) : 0;

// Add item to cart or increment quantity
if ($productId > 0) {
    if (isset($_SESSION['cart'][$productId])) {
        // Increment quantity
        $_SESSION['cart'][$productId]['quantity']++;
    } else {
        // Add new product
        $_SESSION['cart'][$productId] = [
            'id' => $productId,
            'name' => $productName,
            'price' => $productPrice,
            'quantity' => 1
        ];
    }
}

// Return success response
echo json_encode(['success' => true]);
?>


<?php
session_start();
?>

<h2>Shopping Cart</h2>
<table border="1">
    <tr>
        <th>Product Name</th>
        <th>Price</th>
        <th>Quantity</th>
        <th>Total</th>
        <th>Action</th>
    </tr>
    <?php
    if (!empty($_SESSION['cart'])) {
        foreach ($_SESSION['cart'] as $item) {
            $total = $item['price'] * $item['quantity'];
            ?>
            <tr>
                <td><?php echo $item['name']; ?></td>
                <td><?php echo '$' . number_format($item['price'], 2); ?></td>
                <td><?php echo $item['quantity']; ?></td>
                <td><?php echo '$' . number_format($total, 2); ?></td>
                <td><a href="remove_from_cart.php?id=<?php echo $item['id']; ?>">Remove</a></td>
            </tr>
            <?php
        }
    } else {
        ?>
        <tr>
            <td colspan="5">Your cart is empty!</td>
        </tr>
        <?php
    }
    ?>

    <?php if (!empty($_SESSION['cart'])): ?>
    <tr>
        <td colspan="4" style="text-align: right;">Subtotal:</td>
        <td><?php echo '$' . number_format(calculate_subtotal(), 2); ?></td>
    </tr>
    <tr>
        <td colspan="4" style="text-align: right;">Tax (10%):</td>
        <td><?php echo '$' . number_format(calculate_tax(), 2); ?></td>
    </tr>
    <tr>
        <td colspan="4" style="text-align: right;">Grand Total:</td>
        <td><?php echo '$' . number_format(calculate_grand_total(), 2); ?></td>
    </tr>
    <?php endif; ?>
</table>

<?php
function calculate_subtotal() {
    $subtotal = 0;
    foreach ($_SESSION['cart'] as $item) {
        $subtotal += $item['price'] * $item['quantity'];
    }
    return $subtotal;
}

function calculate_tax() {
    return calculate_subtotal() * 0.10; // Assuming 10% tax
}

function calculate_grand_total() {
    return calculate_subtotal() + calculate_tax();
}
?>


<?php
session_start();

// Get product ID from query string
$productId = isset($_GET['id']) ? intval($_GET['id']) : 0;

if ($productId > 0 && isset($_SESSION['cart'][$productId])) {
    unset($_SESSION['cart'][$productId]);
}

// Redirect back to cart or products page
header('Location: products.php');
exit();
?>


<?php
session_start();

if (empty($_SESSION['cart'])) {
    die("Your cart is empty!");
}

// Simple checkout logic
$subtotal = calculate_subtotal();
$tax = calculate_tax();
$grand_total = calculate_grand_total();

// Here you would typically connect to a payment gateway and process the transaction
// For this example, we'll just simulate a successful payment

// After successful payment, clear the cart
$_SESSION['cart'] = [];

echo "Thank you for your purchase!<br>";
echo "Total amount paid: $" . number_format($grand_total, 2);

function calculate_subtotal() {
    $subtotal = 0;
    foreach ($_SESSION['cart'] as $item) {
        $subtotal += $item['price'] * $item['quantity'];
    }
    return $subtotal;
}

function calculate_tax() {
    return calculate_subtotal() * 0.10; // Assuming 10% tax
}

function calculate_grand_total() {
    return calculate_subtotal() + calculate_tax();
}
?>


<?php
session_start();
include('db_connection.php');

$query = "SELECT * FROM products";
$result = mysqli_query($conn, $query);
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Product List</title>
</head>
<body>
    <?php while ($row = mysqli_fetch_assoc($result)) { ?>
        <div class="product-card">
            <h2><?php echo $row['name']; ?></h2>
            <p><?php echo $row['description']; ?></p>
            <p>Price: <?php echo $row['price']; ?> $</p>
            <form action="add_to_cart.php" method="post">
                <input type="hidden" name="product_id" value="<?php echo $row['id']; ?>">
                <button type="submit">Add to Cart</button>
            </form>
        </div>
    <?php } ?>
</body>
</html>


<?php
session_start();
include('db_connection.php');

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $product_id = mysqli_real_escape_string($conn, $_POST['product_id']);

    // Get product details from the database
    $query = "SELECT * FROM products WHERE id = $product_id";
    $result = mysqli_query($conn, $query);
    $product = mysqli_fetch_assoc($result);

    if ($product) {
        // Add or update cart session
        if (isset($_SESSION['cart'][$product_id])) {
            $_SESSION['cart'][$product_id]['quantity'] += 1;
        } else {
            $_SESSION['cart'][$product_id] = array(
                'name' => $product['name'],
                'price' => $product['price'],
                'quantity' => 1
            );
        }
    }
}

header('Location: cart.php');
exit();
?>


<?php
session_start();
include('db_connection.php');

?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Shopping Cart</title>
</head>
<body>
    <?php if (!empty($_SESSION['cart'])) { ?>
        <table>
            <tr>
                <th>Product Name</th>
                <th>Price</th>
                <th>Quantity</th>
                <th>Total</th>
                <th>Action</th>
            </tr>
            <?php foreach ($_SESSION['cart'] as $product_id => $item) { ?>
                <tr>
                    <td><?php echo $item['name']; ?></td>
                    <td><?php echo $item['price']; ?> $</td>
                    <td><input type="number" min="1" value="<?php echo $item['quantity']; ?>"></td>
                    <td><?php echo $item['price'] * $item['quantity']; ?> $</td>
                    <td><a href="remove_from_cart.php?product_id=<?php echo $product_id; ?>">Remove</a></td>
                </tr>
            <?php } ?>
        </table>
        <form action="update_cart.php" method="post">
            <button type="submit">Update Cart</button>
        </form>
        <a href="checkout.php">Proceed to Checkout</a>
    <?php } else { ?>
        <p>Your cart is empty.</p>
    <?php } ?>

</body>
</html>


<?php
session_start();

if ($_SERVER['REQUEST_METHOD'] == 'GET') {
    $product_id = $_GET['product_id'];
    if (isset($_SESSION['cart'][$product_id])) {
        unset($_SESSION['cart'][$product_id]);
    }
}

header('Location: cart.php');
exit();
?>


<?php
session_start();

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    foreach ($_SESSION['cart'] as $product_id => $item) {
        if (isset($_POST[$product_id])) {
            $_SESSION['cart'][$product_id]['quantity'] = $_POST[$product_id];
        }
    }
}

header('Location: cart.php');
exit();
?>


<?php
session_start();

?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Checkout</title>
</head>
<body>
    <?php if (!empty($_SESSION['cart'])) { ?>
        <h2>Enter your details:</h2>
        <form action="checkout.php" method="post">
            <input type="text" name="name" placeholder="Name" required><br>
            <input type="email" name="email" placeholder="Email" required><br>
            <textarea name="address" placeholder="Address" required></textarea><br>
            <input type="tel" name="phone" placeholder="Phone" required><br>
            <button type="submit">Place Order</button>
        </form>
    <?php } else { ?>
        <p>Your cart is empty.</p>
    <?php } ?>

<?php
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $name = mysqli_real_escape_string($conn, $_POST['name']);
    $email = mysqli_real_escape_string($conn, $_POST['email']);
    $address = mysqli_real_escape_string($conn, $_POST['address']);
    $phone = mysqli_real_escape_string($conn, $_POST['phone']);

    if (!empty($_SESSION['cart'])) {
        // Calculate total price
        $total_price = 0;
        foreach ($_SESSION['cart'] as $product) {
            $total_price += $product['price'] * $product['quantity'];
        }

        // Insert order into orders table
        $order_query = "INSERT INTO orders (user_name, email, address, phone, total_price) 
                        VALUES ('$name', '$email', '$address', '$phone', '$total_price')";
        mysqli_query($conn, $order_query);

        $order_id = mysqli_insert_id($conn);

        // Insert order items into order_items table
        foreach ($_SESSION['cart'] as $product_id => $item) {
            $insert_query = "INSERT INTO order_items (order_id, product_id, quantity)
                            VALUES ('$order_id', '$product_id', '".$item['quantity']."')";
            mysqli_query($conn, $insert_query);
        }

        // Clear cart session
        unset($_SESSION['cart']);

        echo "<h2>Order placed successfully!</h2>";
        echo "<p>Your order ID is: " . $order_id . "</p>";
    }
}
?>
</body>
</html>


<?php
// Database connection
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'shop';

$conn = new mysqli($host, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Create products table if not exists
$sql = "CREATE TABLE IF NOT EXISTS products (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255),
    price DECIMAL(10, 2),
    description TEXT,
    image VARCHAR(255)
)";

$conn->query($sql);

// Create orders table if not exists
$sql = "CREATE TABLE IF NOT EXISTS orders (
    id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT,
    product_ids TEXT,
    quantities TEXT,
    total DECIMAL(10, 2),
    status VARCHAR(255),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
)";

$conn->query($sql);

// Add sample products
$products = [
    ['name' => 'Laptop', 'price' => 999.99, 'description' => 'High performance laptop', 'image' => 'laptop.jpg'],
    ['name' => 'Phone', 'price' => 699.99, 'description' => 'Latest smartphone', 'image' => 'phone.jpg'],
    ['name' => 'Tablet', 'price' => 299.99, 'description' => 'Portable tablet computer', 'image' => 'tablet.jpg']
];

foreach ($products as $product) {
    $sql = "INSERT INTO products (name, price, description, image) VALUES (?, ?, ?, ?)";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("ssss", $product['name'], $product['price'], $product['description'], $product['image']);
    $stmt->execute();
}

// Function to get products
function getProducts() {
    global $conn;
    $sql = "SELECT * FROM products";
    $result = $conn->query($sql);
    return $result->fetch_all(MYSQLI_ASSOC);
}

// Function to add product to cart
function addToCart($productId) {
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }

    if (array_key_exists($productId, $_SESSION['cart'])) {
        $_SESSION['cart'][$productId]++;
    } else {
        $_SESSION['cart'][$productId] = 1;
    }
}

// Function to calculate total price
function calculateTotal() {
    $total = 0;
    foreach ($_SESSION['cart'] as $productId => $quantity) {
        $sql = "SELECT price FROM products WHERE id = ?";
        $stmt = $conn->prepare($sql);
        $stmt->bind_param("i", $productId);
        $stmt->execute();
        $result = $stmt->get_result();
        $price = $result->fetch_assoc()['price'];
        $total += $price * $quantity;
    }
    return $total;
}

// Function to get product details
function getProduct($id) {
    global $conn;
    $sql = "SELECT * FROM products WHERE id = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("i", $id);
    $stmt->execute();
    return $stmt->get_result()->fetch_assoc();
}

// Function to remove item from cart
function removeFromCart($productId) {
    if (isset($_SESSION['cart'][$productId])) {
        unset($_SESSION['cart'][$productId]);
    }
}

// Checkout process
if ($_SERVER["REQUEST_METHOD"] == "POST" && isset($_POST['checkout'])) {
    // Get user ID or guest checkout logic here
    $userId = 1; // Replace with actual user authentication logic
    
    // Prepare order data
    $productIds = array_keys($_SESSION['cart']);
    $quantities = array_values($_SESSION['cart']);
    $total = calculateTotal();
    
    $sql = "INSERT INTO orders (user_id, product_ids, quantities, total, status) VALUES (?, ?, ?, ?, 'pending')";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("isssd", $userId, implode(',', $productIds), implode(',', $quantities), $total);
    
    if ($stmt->execute()) {
        // Clear cart
        $_SESSION['cart'] = array();
        
        echo "Order placed successfully!";
    } else {
        echo "Error placing order: " . $conn->error;
    }
}
?>


<?php
// Initialize session
session_start();

// Sample products (you can replace this with a database connection)
$products = array(
    1 => array(
        'name' => 'Product 1',
        'price' => 29.99,
        'description' => 'This is product 1'
    ),
    2 => array(
        'name' => 'Product 2',
        'price' => 49.99,
        'description' => 'This is product 2'
    )
);

// Add to cart functionality
if (isset($_GET['action']) && $_GET['action'] == 'add_to_cart') {
    $productId = intval($_GET['product_id']);
    $quantity = intval($_GET['quantity']);

    if ($productId && isset($products[$productId])) {
        // Check if product already exists in cart
        if (isset($_SESSION['cart'][$productId])) {
            $_SESSION['cart'][$productId]['quantity'] += $quantity;
        } else {
            $_SESSION['cart'][$productId] = array(
                'name' => $products[$productId]['name'],
                'price' => $products[$productId]['price'],
                'quantity' => $quantity
            );
        }
    }

    // Redirect back to products page
    header('Location: index.php');
    exit;
}

// Checkout functionality
if (isset($_POST['checkout'])) {
    // Get cart items
    $cartItems = $_SESSION['cart'];

    // Calculate total price
    $totalPrice = 0;
    foreach ($cartItems as $item) {
        $totalPrice += $item['price'] * $item['quantity'];
    }

    // Store order details in session (you can replace this with database storage)
    $_SESSION['order'] = array(
        'items' => $cartItems,
        'total_price' => $totalPrice
    );

    // Redirect to thank you page
    header('Location: thank_you.php');
    exit;
}

// Logout functionality
if (isset($_GET['action']) && $_GET['action'] == 'logout') {
    // Destroy session
    session_unset();
    session_destroy();

    // Redirect to home page
    header('Location: index.php');
    exit;
}
?>


<?php
$host = "localhost";
$username = "root";
$password = "";
$db_name = "shopping_cart";

// Connect to database
$conn = mysqli_connect($host, $username, $password, $db_name);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}
?>


<?php
session_start();
require_once 'db_connect.php';

// Sample product data (you can fetch this from your database)
$products = array(
    array('id' => 1, 'name' => 'Product 1', 'description' => 'Description for Product 1', 'price' => 29.99),
    array('id' => 2, 'name' => 'Product 2', 'description' => 'Description for Product 2', 'price' => 49.99),
    array('id' => 3, 'name' => 'Product 3', 'description' => 'Description for Product 3', 'price' => 19.99)
);

if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}
?>
<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
    <style>
        .product {
            border: 1px solid #ccc;
            padding: 10px;
            margin-bottom: 10px;
        }
    </style>
</head>
<body>
    <h1>Welcome to Our Store</h1>
    <?php foreach ($products as $product): ?>
        <div class="product">
            <h2><?php echo $product['name']; ?></h2>
            <p><?php echo $product['description']; ?></p>
            <p>Price: $<?php echo number_format($product['price'], 2); ?></p>
            <form action="view_cart.php" method="post">
                <input type="hidden" name="product_id" value="<?php echo $product['id']; ?>">
                <input type="text" name="quantity" placeholder="Enter quantity" value="1">
                <button type="submit">Add to Cart</button>
            </form>
        </div>
    <?php endforeach; ?>
</body>
</html>


<?php
session_start();
require_once 'db_connect.php';

if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add product to cart
if (isset($_POST['product_id']) && isset($_POST['quantity'])) {
    $product_id = intval($_POST['product_id']);
    $quantity = intval($_POST['quantity']);

    if ($quantity > 0) {
        if (!isset($_SESSION['cart'][$product_id])) {
            $_SESSION['cart'][$product_id] = array(
                'id' => $product_id,
                'quantity' => $quantity
            );
        } else {
            $_SESSION['cart'][$product_id]['quantity'] += $quantity;
        }
    }
}

// Remove product from cart
if (isset($_GET['remove'])) {
    $product_id = intval($_GET['remove']);
    unset($_SESSION['cart'][$product_id]);
}

// Empty cart
if (isset($_POST['empty_cart'])) {
    $_SESSION['cart'] = array();
}
?>
<!DOCTYPE html>
<html>
<head>
    <title>View Cart</title>
    <style>
        .cart-item {
            border: 1px solid #ccc;
            padding: 10px;
            margin-bottom: 10px;
        }
    </style>
</head>
<body>
    <h1>Your Shopping Cart</h1>
    
    <?php if (empty($_SESSION['cart'])): ?>
        <p>Your cart is empty.</p>
    <?php else: ?>
        <?php foreach ($_SESSION['cart'] as $product): ?>
            <div class="cart-item">
                <p>Product ID: <?php echo $product['id']; ?></p>
                <p>Quantity: <?php echo $product['quantity']; ?></p>
                <a href="view_cart.php?remove=<?php echo $product['id']; ?>">Remove</a>
            </div>
        <?php endforeach; ?>
        
        <form action="checkout.php" method="post">
            <button type="submit">Checkout</button>
        </form>
    <?php endif; ?>

    <p><a href="index.php">Continue Shopping</a></p>
</body>
</html>


<?php
session_start();
require_once 'db_connect.php';

if (isset($_SESSION['cart']) && !empty($_SESSION['cart'])) {
    // Process order here (e.g., save to database, send emails, etc.)
    // For this example, we'll just display a thank you message
    
    $total_amount = 0;
    
    foreach ($_SESSION['cart'] as $product) {
        // Get product details from database
        $sql = "SELECT * FROM products WHERE id = ?";
        $stmt = mysqli_prepare($conn, $sql);
        mysqli_stmt_bind_param($stmt, 'i', $product['id']);
        mysqli_stmt_execute($stmt);
        $result = mysqli_stmt_get_result($stmt);
        $product_details = mysqli_fetch_assoc($result);
        
        $total_amount += $product_details['price'] * $product['quantity'];
    }
    
    // Reset cart
    $_SESSION['cart'] = array();
}
?>
<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
</head>
<body>
    <?php if (isset($_SESSION['cart']) && empty($_SESSION['cart'])): ?>
        <p>Thank you for your order! Your total was $<?php echo number_format($total_amount, 2); ?>.</p>
    <?php else: ?>
        <p>Your cart is empty. Please add some products first.</p>
    <?php endif; ?>
    
    <p><a href="index.php">Back to Shopping</a></p>
</body>
</html>


<?php
$servername = "localhost";
$username = "root";
$password = "";
$dbname = "ecommerce";

// Create connection
$conn = mysqli_connect($servername, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

$sql = "SELECT * FROM products";
$result = mysqli_query($conn, $sql);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Product List</title>
</head>
<body>
    <h1>Available Products</h1>
    <?php while ($row = mysqli_fetch_assoc($result)) { ?>
        <div style="border: 1px solid #ddd; padding: 10px; margin-bottom: 10px;">
            <h3><?php echo $row['name']; ?></h3>
            <p><?php echo $row['description']; ?></p>
            <p>Price: <?php echo "$" . number_format($row['price'], 2); ?></p>
            <form action="add_to_cart.php" method="post">
                <input type="hidden" name="id" value="<?php echo $row['id']; ?>">
                <input type="number" name="quantity" min="1" placeholder="Quantity" required>
                <button type="submit">Add to Cart</button>
            </form>
        </div>
    <?php } ?>
</body>
</html>

<?php
mysqli_close($conn);
?>


session_start();

if (isset($_POST['id']) && isset($_POST['quantity'])) {
    $productId = $_POST['id'];
    $quantity = $_POST['quantity'];

    if ($quantity < 1) {
        die("Quantity must be at least 1.");
    }

    // Add or update cart item
    if (isset($_SESSION['cart'][$productId])) {
        $_SESSION['cart'][$productId] += $quantity;
    } else {
        $_SESSION['cart'][$productId] = $quantity;
    }

    header("Location: index.php");
    exit();
}

header("Location: index.php");


session_start();

if (empty($_SESSION['cart'])) {
    die("Your cart is empty.");
}

$servername = "localhost";
$username = "root";
$password = "";
$dbname = "ecommerce";

$conn = mysqli_connect($servername, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

$total = 0;

foreach ($_SESSION['cart'] as $productId => $quantity) {
    $sql = "SELECT * FROM products WHERE id = ?";
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, "i", $productId);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);
    
    if ($row = mysqli_fetch_assoc($result)) {
        $price = $row['price'];
        $itemTotal = $price * $quantity;
        $total += $itemTotal;

        // Display each item
        echo "<div>";
        echo "<h3>" . $row['name'] . "</h3>";
        echo "<p>Quantity: " . $quantity . "</p>";
        echo "<p>Price: $" . number_format($price, 2) . "</p>";
        echo "</div><br>";
    }
}

?>

<form action="process_payment.php" method="post">
    <h2>Payment Information</h2>
    <input type="text" name="name" placeholder="Name on Card" required>
    <input type="email" name="email" placeholder="Email Address" required>
    <input type="text" name="card_number" placeholder="Card Number" pattern="[0-9]{16}" required>
    <input type="text" name="cvv" placeholder="CVV" pattern="[0-9]{3}" required>
    <input type="hidden" name="total" value="<?php echo $total; ?>">
    <button type="submit">Complete Purchase</button>
</form>

<?php
mysqli_close($conn);
?>


session_start();

if (!isset($_POST['total'])) {
    die("Invalid request.");
}

// Simulate payment processing
$success = true; // In real application, this would check with a payment gateway

if ($success) {
    $servername = "localhost";
    $username = "root";
    $password = "";
    $dbname = "ecommerce";

    $conn = mysqli_connect($servername, $username, $password, $dbname);

    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
    }

    // Insert order
    $sql = "INSERT INTO orders (customer_name, email, payment_method, total) VALUES (?, ?, ?, ?)";
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, "sssd", $_POST['name'], $_POST['email'], 'Credit Card', $_POST['total']);
    
    if (!mysqli_stmt_execute($stmt)) {
        die("Error: " . mysqli_error($conn));
    }

    $orderId = mysqli_insert_id($conn);

    // Insert order details
    foreach ($_SESSION['cart'] as $productId => $quantity) {
        $sql = "SELECT price FROM products WHERE id = ?";
        $stmt = mysqli_prepare($conn, $sql);
        mysqli_stmt_bind_param($stmt, "i", $productId);
        
        if (mysqli_stmt_execute($stmt)) {
            $result = mysqli_stmt_get_result($stmt);
            $row = mysqli_fetch_assoc($result);
            
            $price = $row['price'];
            $itemTotal = $price * $quantity;

            $sql_details = "INSERT INTO order_details (order_id, product_id, quantity, price) VALUES (?, ?, ?, ?)";
            $stmt_details = mysqli_prepare($conn, $sql_details);
            mysqli_stmt_bind_param($stmt_details, "iidi", $orderId, $productId, $quantity, $price);

            if (!mysqli_stmt_execute($stmt_details)) {
                die("Error saving order details: " . mysqli_error($conn));
            }
        }
    }

    // Clear cart
    unset($_SESSION['cart']);
    
    header("Location: confirmation.php?order_id=$orderId");
} else {
    echo "Payment failed. Please try again.";
}

mysqli_close($conn);


<?php
session_start();

if (!isset($_GET['order_id'])) {
    die("Invalid request.");
}

$orderId = $_GET['order_id'];

$servername = "localhost";
$username = "root";
$password = "";
$dbname = "ecommerce";

$conn = mysqli_connect($servername, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

$sql_order = "SELECT * FROM orders WHERE id = ?";
$stmt_order = mysqli_prepare($conn, $sql_order);
mysqli_stmt_bind_param($stmt_order, "i", $orderId);
mysqli_stmt_execute($stmt_order);
$result_order = mysqli_stmt_get_result($stmt_order);

if ($orderRow = mysqli_fetch_assoc($result_order)) {
    echo "<h2>Order Confirmation</h2>";
    echo "<p>Thank you for your purchase!</p>";
    echo "<p>Order ID: #" . $orderRow['id'] . "</p>";
    echo "<p>Name: " . $orderRow['customer_name'] . "</p>";
    echo "<p>Email: " . $orderRow['email'] . "</p>";
    echo "<p>Total: $" . number_format($orderRow['total'], 2) . "</p>";
} else {
    die("Order not found.");
}

mysqli_close($conn);
?>


<?php
// config.php - Database connection configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'shopping_cart';

$conn = mysqli_connect($host, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Product List</title>
    <style>
        .product-card {
            border: 1px solid #ddd;
            padding: 20px;
            margin: 10px;
            width: 300px;
            float: left;
        }
        .product-image {
            max-width: 200px;
        }
    </style>
</head>
<body>
    <h1>Product List</h1>
    
    <?php
    // Fetch products from database
    $sql = "SELECT * FROM products";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) > 0) {
        while ($row = mysqli_fetch_assoc($result)) {
            echo "<div class='product-card'>";
                echo "<img src='" . $row['image_url'] . "' alt='" . $row['name'] . "' class='product-image'>";
                echo "<h3>" . $row['name'] . "</h3>";
                echo "<p>Description: " . $row['description'] . "</p>";
                echo "<p>Price: $" . number_format($row['price'], 2) . "</p>";
                echo "<form action='add_to_cart.php' method='post'>";
                    echo "<input type='hidden' name='product_id' value='" . $row['id'] . "'>";
                    echo "<input type='number' name='quantity' min='1' max='" . $row['stock'] . "' value='1'>";
                    echo "<button type='submit'>Add to Cart</button>";
                echo "</form>";
            echo "</div>";
        }
    } else {
        echo "No products available.";
    }
    
    mysqli_close($conn);
    ?>
</body>
</html>


<?php
session_start();

// Get product details from database
$product_id = $_POST['product_id'];
$quantity = $_POST['quantity'];

$conn = mysqli_connect('localhost', 'root', '', 'shopping_cart');

$sql = "SELECT * FROM products WHERE id = $product_id";
$result = mysqli_query($conn, $sql);
$product = mysqli_fetch_assoc($result);

if ($quantity > $product['stock']) {
    echo "<script>alert('Not enough stock!');</script>";
} else {
    // Add to cart
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }
    
    $item = array(
        'id' => $product_id,
        'name' => $product['name'],
        'price' => $product['price'],
        'quantity' => $quantity
    );
    
    $_SESSION['cart'][$product_id] = $item;
}

// Redirect back to product list
header("Location: products.php");
exit();
?>


<?php
session_start();

if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
    <style>
        .cart-item {
            border-bottom: 1px solid #ddd;
            padding: 10px;
        }
    </style>
</head>
<body>
    <h1>Your Shopping Cart</h1>
    
    <?php
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        echo "<div class='cart-item'>";
            echo "<p>" . $item['name'] . "</p>";
            echo "<p>Quantity: " . $item['quantity'] . "</p>";
            echo "<p>Price: $" . number_format($item['price'], 2) . "</p>";
            $total += $item['price'] * $item['quantity'];
        echo "</div>";
    }
    
    if ($total == 0) {
        echo "Your cart is empty.";
    } else {
        echo "<h3>Total: $" . number_format($total, 2) . "</h3>";
        echo "<a href='checkout.php'>Proceed to Checkout</a>";
    }
    ?>
    
    <p><a href="products.php">Continue Shopping</a></p>
</body>
</html>


<?php
session_start();

if (empty($_SESSION['cart'])) {
    header("Location: products.php");
    exit();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
    <style>
        .checkout-form {
            max-width: 600px;
            margin: 0 auto;
            padding: 20px;
        }
        .form-group {
            margin-bottom: 15px;
        }
    </style>
</head>
<body>
    <h1>Checkout</h1>
    
    <?php
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += $item['price'] * $item['quantity'];
    }
    ?>
    
    <div class="checkout-form">
        <form action="process_order.php" method="post">
            <h3>Order Details</h3>
            <p>Total: $" . number_format($total, 2) . "</p>
            
            <h3>Billing Information</h3>
            <div class="form-group">
                <label for="first_name">First Name:</label>
                <input type="text" id="first_name" name="first_name" required>
            </div>
            <div class="form-group">
                <label for="last_name">Last Name:</label>
                <input type="text" id="last_name" name="last_name" required>
            </div>
            <div class="form-group">
                <label for="email">Email:</label>
                <input type="email" id="email" name="email" required>
            </div>
            <div class="form-group">
                <label for="address">Address:</label>
                <input type="text" id="address" name="address" required>
            </div>
            <div class="form-group">
                <label for="city">City:</label>
                <input type="text" id="city" name="city" required>
            </div>
            <div class="form-group">
                <label for="state">State:</label>
                <input type="text" id="state" name="state" required>
            </div>
            <div class="form-group">
                <label for="zip_code">Zip Code:</label>
                <input type="text" id="zip_code" name="zip_code" required>
            </div>
            <div class="form-group">
                <label for="phone">Phone:</label>
                <input type="tel" id="phone" name="phone" required>
            </div>
            
            <h3>Payment Information</h3>
            <div class="form-group">
                <label for="card_number">Card Number:</label>
                <input type="text" id="card_number" name="card_number" required>
            </div>
            <div class="form-group">
                <label for="expiry_month">Expiry Month:</label>
                <select id="expiry_month" name="expiry_month" required>
                    <?php
                    for ($i = 1; $i <= 12; $i++) {
                        echo "<option value='$i'>" . sprintf("%02d", $i) . "</option>";
                    }
                    ?>
                </select>
            </div>
            <div class="form-group">
                <label for="expiry_year">Expiry Year:</label>
                <select id="expiry_year" name="expiry_year" required>
                    <?php
                    $current_year = date("Y");
                    for ($i = $current_year; $i <= $current_year + 5; $i++) {
                        echo "<option value='$i'>$i</option>";
                    }
                    ?>
                </select>
            </div>
            
            <button type="submit">Place Order</button>
        </form>
    </div>
</body>
</html>


<?php
session_start();

if (empty($_SESSION['cart'])) {
    header("Location: products.php");
    exit();
}

// Validate form inputs
foreach ($_POST as $key => $value) {
    if ($value == "") {
        die("Please fill in all required fields.");
    }
}

$conn = mysqli_connect('localhost', 'root', '', 'shopping_cart');

$total_price = 0;
foreach ($_SESSION['cart'] as $item) {
    $total_price += $item['price'] * $item['quantity'];
}

// Insert order
$sql_order = "INSERT INTO orders (total_price, order_date, status)
              VALUES ('$total_price', NOW(), 'pending')";
mysqli_query($conn, $sql_order);
$order_id = mysqli_insert_id($conn);

// Insert order items
foreach ($_SESSION['cart'] as $item) {
    $sql_item = "INSERT INTO order_items (order_id, product_id, quantity, price)
                 VALUES ('$order_id', '$item[id]', '$item[quantity]', '$item[price]')";
    mysqli_query($conn, $sql_item);
}

// Clear cart
unset($_SESSION['cart']);

header("Location: thankyou.php");
exit();
?>


<?php session_start(); ?>

<!DOCTYPE html>
<html>
<head>
    <title>Thank You</title>
    <style>
        .thank-you {
            text-align: center;
            padding: 40px;
            font-size: 24px;
        }
    </style>
</head>
<body>
    <div class="thank-you">
        <h1>Thank You for Your Order!</h1>
        <p>Your order has been successfully processed.</p>
        <a href="products.php">Continue Shopping</a>
    </div>
</body>
</html>


<?php
// Configuration file (config.php)
define('DB_HOST', 'localhost');
define('DB_USER', 'root');
define('DB_PASS', '');
define('DB_NAME', 'purchase_db');

// Product class (product.php)
class Product {
    private $id;
    private $name;
    private $price;
    private $description;

    public function __construct($id, $name, $price, $description) {
        $this->id = $id;
        $this->name = $name;
        $this->price = $price;
        $this->description = $description;
    }

    // Getters
    public function getId() { return $this->id; }
    public function getName() { return $this->name; }
    public function getPrice() { return $this->price; }
    public function getDescription() { return $this->description; }
}

// Order class (order.php)
class Order {
    private $orderId;
    private $products = array();
    private $totalPrice;
    private $taxRate = 0.08;

    public function __construct($orderId) {
        $this->orderId = $ orderId;
    }

    // Add product to order
    public function addProduct(Product $product, $quantity = 1) {
        if ($quantity <= 0) {
            throw new Exception("Quantity must be greater than zero.");
        }

        $this->products[] = array(
            'product' => $product,
            'quantity' => $quantity
        );
    }

    // Calculate total price
    public function calculateTotalPrice() {
        $total = 0;
        foreach ($this->products as $item) {
            $total += $item['product']->getPrice() * $item['quantity'];
        }
        $this->totalPrice = $total + ($total * $this->taxRate);
    }

    // Get total price
    public function getTotalPrice() { 
        return $this->totalPrice; 
    }

    // Place order and save to database
    public function placeOrder($customerId, $orderDate) {
        $this->calculateTotalPrice();

        try {
            // Connect to database
            $conn = new PDO("mysql:host=" . DB_HOST . ";dbname=" . DB_NAME, DB_USER, DB_PASS);
            $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

            // Insert order into orders table
            $orderSql = "INSERT INTO orders (order_id, customer_id, order_date, total_amount) 
                        VALUES (:orderId, :customerId, :orderDate, :totalAmount)";
            $orderStmt = $conn->prepare($orderSql);
            $orderStmt->execute(array(
                ':orderId' => $this->orderId,
                ':customerId' => $customerId,
                ':orderDate' => $orderDate,
                ':totalAmount' => $this->totalPrice
            ));

            // Insert order items into order_items table
            foreach ($this->products as $item) {
                $productSql = "INSERT INTO order_items (order_id, product_id, quantity, price)
                              VALUES (:orderId, :productId, :quantity, :price)";
                $productStmt = $conn->prepare($productSql);
                $productStmt->execute(array(
                    ':orderId' => $this->orderId,
                    ':productId' => $item['product']->getId(),
                    ':quantity' => $item['quantity'],
                    ':price' => $item['product']->getPrice()
                ));
            }

            return true;
        } catch (PDOException $e) {
            echo "Error: " . $e->getMessage();
            return false;
        }
    }
}

// Usage example:

// Include configuration file
include 'config.php';

// Create a new product
$product1 = new Product(1, 'Laptop', 999.99, 'High performance laptop');
$product2 = new Product(2, 'Phone', 699.99, 'Latest smartphone');

// Create a new order
$order = new Order('ORDER_001');

// Add products to the order
try {
    $order->addProduct($product1, 1);
    $order->addProduct($product2, 2);
} catch (Exception $e) {
    echo "Error: " . $e->getMessage();
}

// Place the order
if ($order->placeOrder(1, date('Y-m-d'))) {
    echo "Order placed successfully!";
} else {
    echo "Failed to place order.";
}


<?php
class Database {
    private $host = 'localhost';
    private $db_name = 'purchase_db';
    private $username = 'root';
    private $password = '';
    public $conn;

    public function __construct() {
        try {
            $this->conn = new PDO("mysql:host=$this->host;dbname=$this->db_name", $this->username, $this->password);
            $this->conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
        } catch (PDOException $e) {
            echo "Connection failed: " . $e->getMessage();
        }
    }

    public function execute($query, $values = array()) {
        try {
            $stmt = $this->conn->prepare($query);
            $stmt->execute($values);
            return $stmt;
        } catch (PDOException $e) {
            echo "Error: " . $e->getMessage();
            die();
        }
    }
}
?>


<?php
session_start();

require_once 'Database.php';

function registerUser($username, $email, $password, $address) {
    $db = new Database();
    $hashedPassword = password_hash($password, PASSWORD_DEFAULT);
    $query = "INSERT INTO users (username, email, password_hash, address) VALUES (?, ?, ?, ?)";
    return $db->execute($query, array($username, $email, $hashedPassword, $address));
}

function loginUser($email, $password) {
    $db = new Database();
    $query = "SELECT * FROM users WHERE email = ?";
    $result = $db->execute($query, array($email))->fetch(PDO::FETCH_ASSOC);
    
    if ($result && password_verify($password, $result['password_hash'])) {
        $_SESSION['user'] = $result;
        return true;
    }
    return false;
}

function isLoggedIn() {
    return isset($_SESSION['user']);
}

function logoutUser() {
    session_unset();
    session_destroy();
}
?>


<?php
require_once 'Database.php';

function getAllProducts() {
    $db = new Database();
    $query = "SELECT * FROM products";
    return $db->execute($query)->fetchAll(PDO::FETCH_ASSOC);
}

function getProductById($id) {
    $db = new Database();
    $query = "SELECT * FROM products WHERE id = ?";
    return $db->execute($query, array($id))->fetch(PDO::FETCH_ASSOC);
}
?>


<?php
session_start();

function addToCart($productId, $quantity) {
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }
    
    if (array_key_exists($productId, $_SESSION['cart'])) {
        $_SESSION['cart'][$productId]['quantity'] += $quantity;
    } else {
        $product = getProductById($productId);
        $_SESSION['cart'][$productId] = array(
            'id' => $product['id'],
            'name' => $product['name'],
            'price' => $product['price'],
            'quantity' => $quantity
        );
    }
}

function getCartItems() {
    if (isset($_SESSION['cart'])) {
        return $_SESSION['cart'];
    } else {
        return array();
    }
}

function updateCartItem($productId, $quantity) {
    if (isset($_SESSION['cart'][$productId])) {
        $_SESSION['cart'][$productId]['quantity'] = $quantity;
    }
}

function removeCartItem($productId) {
    unset($_SESSION['cart'][$productId]);
}
?>


<?php
require_once 'Database.php';
require_once 'auth.php';
require_once 'cart.php';

if (!isLoggedIn()) {
    header('Location: login.php');
    exit();
}

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $db = new Database();
    
    // Insert order
    $totalAmount = 0;
    foreach (getCartItems() as $item) {
        $totalAmount += ($item['price'] * $item['quantity']);
    }
    
    $query = "INSERT INTO orders (total_amount, customer_id) VALUES (?, ?)";
    $orderStmt = $db->execute($query, array($totalAmount, $_SESSION['user']['id']));
    $orderId = $db->conn->lastInsertId();
    
    // Insert order items
    foreach (getCartItems() as $item) {
        $query = "INSERT INTO order_items (product_id, order_id, quantity, price) VALUES (?, ?, ?, ?)";
        $db->execute($query, array(
            $item['id'],
            $orderId,
            $item['quantity'],
            $item['price']
        ));
    }
    
    // Clear cart
    $_SESSION['cart'] = array();
    
    header('Location: thank_you.php');
    exit();
}
?>


<?php
require_once 'Database.php';
require_once 'auth.php';

if (!isLoggedIn()) {
    header('Location: login.php');
    exit();
}

function getMyOrders() {
    $db = new Database();
    $query = "SELECT * FROM orders WHERE customer_id = ?";
    return $db->execute($query, array($_SESSION['user']['id']))->fetchAll(PDO::FETCH_ASSOC);
}
?>


<?php
session_start();
require_once 'auth.php';

if (!isLoggedIn()) {
    header('Location: login.php');
    exit();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Thank You for Your Purchase!</title>
</head>
<body>
    <h1>Thank You for Your Purchase!</h1>
    <p>Your order has been successfully placed. We will contact you soon to confirm your purchase.</p>
    <a href="products.php">Continue Shopping</a>
</body>
</html>


<?php
session_start();
require_once 'auth.php';

if (isLoggedIn()) {
    header('Location: products.php');
    exit();
}

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $email = $_POST['email'];
    $password = $_POST['password'];
    
    if (loginUser($email, $password)) {
        header('Location: products.php');
        exit();
    } else {
        $error = "Invalid email or password";
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login</title>
</head>
<body>
    <?php if (isset($error)): ?>
        <p><?php echo $error; ?></p>
    <?php endif; ?>

    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        Email: <input type="email" name="email" required><br>
        Password: <input type="password" name="password" required><br>
        <input type="submit" value="Login">
    </form>
    <a href="register.php">Register</a>
</body>
</html>


<?php
session_start();
require_once 'auth.php';

if (isLoggedIn()) {
    header('Location: products.php');
    exit();
}

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $username = $_POST['username'];
    $email = $_POST['email'];
    $password = $_POST['password'];
    $address = $_POST['address'];
    
    if (registerUser($username, $email, $password, $address)) {
        header('Location: login.php');
        exit();
    } else {
        $error = "Registration failed. Please try again.";
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Register</title>
</head>
<body>
    <?php if (isset($error)): ?>
        <p><?php echo $error; ?></p>
    <?php endif; ?>

    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        Username: <input type="text" name="username" required><br>
        Email: <input type="email" name="email" required><br>
        Password: <input type="password" name="password" required><br>
        Address: <input type="text" name="address" required><br>
        <input type="submit" value="Register">
    </form>
    <a href="login.php">Login</a>
</body>
</html>


<?php
session_start();
require_once 'auth.php';
require_once 'Database.php';

if (!isLoggedIn()) {
    header('Location: login.php');
    exit();
}

$products = getAllProducts();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Product List</title>
</head>
<body>
    <h1>Welcome, <?php echo $_SESSION['user']['username']; ?></h1>
    <a href="orders.php">My Orders</a> | <a href="logout.php">Logout</a><br><br>

    <?php if (!empty($products)): ?>
        <table border="1">
            <tr>
                <th>Name</th>
                <th>Description</th>
                <th>Price</th>
                <th>Action</th>
            </tr>
            <?php foreach ($products as $product): ?>
                <tr>
                    <td><?php echo $product['name']; ?></td>
                    <td><?php echo $product['description']; ?></td>
                    <td>$<?php echo number_format($product['price'], 2); ?></td>
                    <td><a href="cart.php?action=add&id=<?php echo $product['id']; ?>">Add to Cart</a></td>
                </tr>
            <?php endforeach; ?>
        </table>
    <?php else: ?>
        <p>No products available.</p>
    <?php endif; ?>

    <a href="checkout.php">Checkout</a> | <a href="cart.php">View Cart</a>
</body>
</html>


<?php
session_start();
require_once 'auth.php';
require_once 'Database.php';

if (!isLoggedIn()) {
    header('Location: login.php');
    exit();
}

$cartItems = getCartItems();

if ($_GET['action'] == 'add') {
    $productId = $_GET['id'];
    addToCart($productId, 1);
    header("Location: products.php");
} elseif ($_GET['action'] == 'update' && isset($_POST['quantity'])) {
    foreach ($_POST['quantity'] as $productId => $qty) {
        updateCartItem($productId, $qty);
    }
    header("Location: cart.php");
} elseif ($_GET['action'] == 'remove') {
    removeCartItem($_GET['id']);
    header("Location: cart.php");
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <h1>Your Shopping Cart</h1>
    <?php if (!empty($cartItems)): ?>
        <form action="cart.php?action=update" method="post">
            <table border="1">
                <tr>
                    <th>Product Name</th>
                    <th>Price</th>
                    <th>Quantity</th>
                    <th>Total</th>
                    <th>Action</th>
                </tr>
                <?php foreach ($cartItems as $item): ?>
                    <tr>
                        <td><?php echo $item['name']; ?></td>
                        <td>$<?php echo number_format($item['price'], 2); ?></td>
                        <td><input type="number" name="quantity[<?php echo $item['id']; ?>]" value="<?php echo $item['quantity']; ?>" min="1"></td>
                        <td>$<?php echo number_format(($item['price'] * $item['quantity']), 2); ?></td>
                        <td><a href="cart.php?action=remove&id=<?php echo $item['id']; ?>">Remove</a></td>
                    </tr>
                <?php endforeach; ?>
            </table>
            <input type="submit" value="Update Cart">
        </form>
    <?php else: ?>
        <p>Your cart is empty.</p>
    <?php endif; ?>

    <?php if (!empty($cartItems)): ?>
        <a href="checkout.php">Proceed to Checkout</a> | <a href="products.php">Continue Shopping</a>
    <?php else: ?>
        <a href="products.php">Continue Shopping</a>
    <?php endif; ?>
</body>
</html>


<?php
session_start();
require_once 'auth.php';
require_once 'Database.php';

if (!isLoggedIn()) {
    header('Location: login.php');
    exit();
}

$orders = getMyOrders();
?>

<!DOCTYPE html>
<html>
<head>
    <title>My Orders</title>
</head>
<body>
    <h1>My Orders</h1>
    
    <?php if (!empty($orders)): ?>
        <table border="1">
            <tr>
                <th>Order ID</th>
                <th>Total Amount</th>
                <th>Date Placed</th>
            </tr>
            <?php foreach ($orders as $order): ?>
                <tr>
                    <td><?php echo $order['id']; ?></td>
                    <td>$<?php echo number_format($order['total_amount'], 2); ?></td>
                    <td><?php echo date('Y-m-d H:i:s', strtotime($order['created_at'])); ?></td>
                </tr>
            <?php endforeach; ?>
        </table>
    <?php else: ?>
        <p>No orders found.</p>
    <?php endif; ?>

    <a href="products.php">Continue Shopping</a> | <a href="logout.php">Logout</a>
</body>
</html>


<?php
session_start();
require_once 'auth.php';

unset($_SESSION['user']);
session_unset();
session_destroy();

header('Location: login.php');
exit();
?>


<?php
session_start();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Store</title>
</head>
<body>
    <?php include('header.php'); ?>

    <h2>Our Products</h2>
    <?php
    $products = array(
        array("id" => 1, "name" => "Product 1", "price" => 19.99, "description" => "Description for product 1"),
        array("id" => 2, "name" => "Product 2", "price" => 29.99, "description" => "Description for product 2"),
        array("id" => 3, "name" => "Product 3", "price" => 9.99, "description" => "Description for product 3")
    );

    foreach ($products as $product) {
        echo "<div class='product'>";
        echo "<h3>" . $product['name'] . "</h3>";
        echo "<p>Price: $" . number_format($product['price'], 2) . "</p>";
        echo "<p>Description: " . $product['description'] . "</p>";
        echo "<form action='add_to_cart.php' method='post'>";
        echo "<input type='hidden' name='product_id' value='" . $product['id'] . "'>";
        echo "<input type='number' name='quantity' min='1' max='99' value='1'>";
        echo "<button type='submit'>Add to Cart</button>";
        echo "</form>";
        echo "</div>";
    }
    ?>

    <?php include('footer.php'); ?>
</body>
</html>


<?php
session_start();

if (isset($_POST['product_id']) && isset($_POST['quantity'])) {
    $product_id = $_POST['product_id'];
    $quantity = $_POST['quantity'];

    if (!isset($_SESSION['cart'][$product_id])) {
        $_SESSION['cart'][$product_id] = 0;
    }

    $_SESSION['cart'][$product_id] += $quantity;
}

header("Location: index.php");
exit();
?>


<?php
session_start();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <?php include('header.php'); ?>

    <h2>Your Shopping Cart</h2>

    <?php if (!empty($_SESSION['cart'])): ?>
        <table>
            <tr>
                <th>Product ID</th>
                <th>Quantity</th>
                <th>Price</th>
                <th>Action</th>
            </tr>
            <?php
            $total = 0;
            foreach ($_SESSION['cart'] as $product_id => $quantity) {
                echo "<tr>";
                echo "<td>" . $product_id . "</td>";
                echo "<td>" . $quantity . "</td>";
                // Here you would typically fetch the price from your database
                // For this example, we'll use a predefined array
                $products = array(
                    1 => 19.99,
                    2 => 29.99,
                    3 => 9.99
                );
                $price = $products[$product_id];
                echo "<td>($" . number_format($price, 2) . ")</td>";
                echo "<td><a href='remove_from_cart.php?product_id=" . $product_id . "'>Remove</a></td>";
                echo "</tr>";
                $total += $price * $quantity;
            }
            ?>
        </table>
        <h3>Total: $"<?php echo number_format($total, 2); ?></h3>
        <form action="checkout.php" method="post">
            <button type="submit">Proceed to Checkout</button>
        </form>
    <?php else: ?>
        <p>Your cart is empty.</p>
    <?php endif; ?>

    <br>
    <a href="index.php">Continue Shopping</a>

    <?php include('footer.php'); ?>
</body>
</html>


<?php
session_start();

if (isset($_GET['product_id'])) {
    $product_id = $_GET['product_id'];
    
    if (isset($_SESSION['cart'][$product_id])) {
        unset($_SESSION['cart'][$product_id]);
    }
}

header("Location: cart.php");
exit();
?>


<?php
session_start();

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Process the order here
    $order = array(
        'customer_name' => $_POST['name'],
        'email' => $_POST['email'],
        'phone' => $_POST['phone'],
        'address' => $_POST['address'],
        'cart' => $_SESSION['cart']
    );
    
    // Here you would typically save the order to your database
    // For this example, we'll just redirect to a confirmation page
    header("Location: confirm.php");
    exit();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
</head>
<body>
    <?php include('header.php'); ?>

    <h2>Checkout</h2>

    <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
        <label for="name">Name:</label><br>
        <input type="text" id="name" name="name" required><br>

        <label for="email">Email:</label><br>
        <input type="email" id="email" name="email" required><br>

        <label for="phone">Phone:</label><br>
        <input type="tel" id="phone" name="phone" required><br>

        <label for="address">Address:</label><br>
        <input type="text" id="address" name="address" required><br>

        <button type="submit">Place Order</button>
    </form>

    <?php include('footer.php'); ?>
</body>
</html>


<?php
session_start();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Order Confirmation</title>
</head>
<body>
    <?php include('header.php'); ?>

    <h2>Thank You for Your Order!</h2>
    <p>Your order has been received and will be processed shortly.</p>

    <br>
    <a href="index.php">Continue Shopping</a>
    <br>
    <a href="cart.php">View Cart</a>

    <?php include('footer.php'); ?>
</body>
</html>


<h1>My Store</h1>
<nav>
    <a href="index.php">Home</a> |
    <a href="cart.php">Cart</a> |
    <a href="checkout.php">Checkout</a>
</nav>


<hr>
<p>&copy; 2023 My Store. All rights reserved.</p>


<?php
// Start session
session_start();

// Define products array (you could pull this from a database in a real application)
$products = [
    ['id' => 1, 'name' => 'Product 1', 'description' => 'Description of product 1', 'price' => 29.99],
    ['id' => 2, 'name' => 'Product 2', 'description' => 'Description of product 2', 'price' => 49.99],
    ['id' => 3, 'name' => 'Product 3', 'description' => 'Description of product 3', 'price' => 19.99]
];

// Function to add item to cart
function addToCart($productId) {
    global $products;
    
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }
    
    // Check if product exists and quantity is valid
    foreach ($products as $product) {
        if ($product['id'] == $productId) {
            $item = [
                'id' => $product['id'],
                'name' => $product['name'],
                'price' => $product['price'],
                'quantity' => 1,
                'total_price' => $product['price']
            ];
            
            array_push($_SESSION['cart'], $item);
            return true;
        }
    }
    
    return false;
}

// Function to update cart quantity
function updateCartQuantity($productId, $quantity) {
    if (isset($_SESSION['cart'])) {
        foreach ($_SESSION['cart'] as &$item) {
            if ($item['id'] == $productId) {
                $item['quantity'] = $quantity;
                $item['total_price'] = $item['price'] * $quantity;
                return true;
            }
        }
    }
    
    return false;
}

// Function to remove item from cart
function removeFromCart($productId) {
    if (isset($_SESSION['cart'])) {
        foreach ($_SESSION['cart'] as $key => $item) {
            if ($item['id'] == $productId) {
                unset($_SESSION['cart'][$key]);
                return true;
            }
        }
    }
    
    return false;
}

// Function to calculate cart subtotal
function getCartSubtotal() {
    if (isset($_SESSION['cart'])) {
        $subtotal = 0;
        foreach ($_SESSION['cart'] as $item) {
            $subtotal += $item['total_price'];
        }
        return $subtotal;
    }
    
    return 0;
}

// Function to process payment
function processPayment($amount, $cardNumber, $cardExpiry, $cardCVC) {
    // In a real application, you would use a payment gateway like Stripe or PayPal here
    // For this example, we'll just simulate the payment processing
    
    // Validate input (you should add more validation in a real application)
    if ($amount <= 0 || empty($cardNumber) || empty($cardExpiry) || empty($cardCVC)) {
        return ['success' => false, 'message' => 'Invalid payment details'];
    }
    
    // Simulate successful payment
    sleep(2); // Simulate processing time
    
    if (mt_rand(0, 1) > 0.5) { // Random success/failure for testing
        return [
            'success' => true,
            'message' => 'Payment processed successfully',
            'order_id' => uniqid()
        ];
    } else {
        return ['success' => false, 'message' => 'Payment failed'];
    }
}

// Function to generate order confirmation email (simplified)
function sendOrderConfirmation($email, $orderId, $amount) {
    // In a real application, you would send an actual email here
    // For this example, we'll just return a success message
    
    return [
        'success' => true,
        'message' => "Order confirmation sent to {$email} with order ID: {$orderId}"
    ];
}
?>


<!DOCTYPE html>
<html>
<head>
    <title>Product Catalog</title>
</head>
<body>
    <?php require_once('product_functions.php'); ?>

    <?php foreach ($products as $product): ?>
        <div class="product">
            <h2><?php echo $product['name']; ?></h2>
            <p><?php echo $product['description']; ?></p>
            <p>Price: $<?php echo number_format($product['price'], 2); ?></p>
            <?php if (isset($_SESSION['user_id'])): ?>
                <form action="add_to_cart.php" method="post">
                    <input type="hidden" name="product_id" value="<?php echo $product['id']; ?>">
                    <button type="submit">Add to Cart</button>
                </form>
            <?php else: ?>
                <p>Please login to add items to your cart.</p>
            <?php endif; ?>
        </div>
    <?php endforeach; ?>

    <?php if (!isset($_SESSION['user_id'])): ?>
        <div class="login-form">
            <!-- Login form here -->
        </div>
    <?php endif; ?>
</body>
</html>


<?php
session_start();
require_once('product_functions.php');

if (isset($_POST['product_id'])) {
    addToCart($_POST['product_id']);
    header("Location: cart.php");
} else {
    header("Location: index.php");
}
?>


<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <?php require_once('product_functions.php'); ?>

    <?php if (isset($_SESSION['cart'])): ?>
        <h1>Your Shopping Cart</h1>
        <table>
            <thead>
                <tr>
                    <th>Product Name</th>
                    <th>Price</th>
                    <th>Quantity</th>
                    <th>Total Price</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
                <?php foreach ($_SESSION['cart'] as $item): ?>
                    <tr>
                        <td><?php echo $item['name']; ?></td>
                        <td>$<?php echo number_format($item['price'], 2); ?></td>
                        <td>
                            <form action="update_cart.php" method="post">
                                <input type="hidden" name="product_id" value="<?php echo $item['id']; ?>">
                                <input type="number" name="quantity" min="1" max="99" value="<?php echo $item['quantity']; ?>" style="width: 50px;">
                                <button type="submit">Update</button>
                            </form>
                        </td>
                        <td>$<?php echo number_format($item['total_price'], 2); ?></td>
                        <td><a href="remove_from_cart.php?product_id=<?php echo $item['id']; ?>">Remove</a></td>
                    </tr>
                <?php endforeach; ?>
            </tbody>
        </table>

        <p>Subtotal: $<?php echo number_format(getCartSubtotal(), 2); ?></p>
        <p><a href="checkout.php">Proceed to Checkout</a></p>
    <?php else: ?>
        <p>Your cart is empty.</p>
        <p><a href="index.php">Continue Shopping</a></p>
    <?php endif; ?>

    <?php if (!isset($_SESSION['user_id'])): ?>
        <div class="login-form">
            <!-- Login form here -->
        </div>
    <?php endif; ?>
</body>
</html>


<?php
session_start();
require_once('product_functions.php');

if (isset($_POST['product_id']) && isset($_POST['quantity'])) {
    updateCartQuantity($_POST['product_id'], $_POST['quantity']);
    header("Location: cart.php");
} else {
    header("Location: cart.php");
}
?>


<?php
session_start();
require_once('product_functions.php');

if (isset($_GET['product_id'])) {
    removeFromCart($_GET['product_id']);
    header("Location: cart.php");
} else {
    header("Location: cart.php");
}
?>


<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
    <!-- Include Stripe.js -->
    <script src="https://js.stripe.com/v3/"></script>
</head>
<body>
    <?php require_once('product_functions.php'); ?>

    <?php if (isset($_SESSION['cart']) && count($_SESSION['cart']) > 0): ?>
        <h1>Checkout</h1>
        <p>Total Amount: $<?php echo number_format(getCartSubtotal(), 2); ?></p>

        <form action="process_payment.php" method="post">
            <div id="card-element"></div>
            
            <script>
                var stripe = Stripe('your_stripe_key_here', {
                    stripes: {
                        locale: 'auto'
                    }
                });

                // Create an element to hold the card details
                var elements = stripe.elements();
                var cardElement = elements.create('card');
                cardElement.mount('#card-element');

                cardElement.addEventListener('change', function(event) {
                    if (event.error) {
                        document.getElementById('error').textContent = event.error.message;
                    } else {
                        document.getElementById('error').textContent = '';
                    }
                });

                // Handle form submission
                document.querySelector('form').addEventListener('submit', function(e) {
                    e.preventDefault();
                    
                    stripe.createPaymentMethod({ type: 'card', card: cardElement })
                        .then(function(response) {
                            if (response.error) {
                                document.getElementById('error').textContent = response.error.message;
                            } else {
                                var paymentMethodId = response.paymentMethod.id;
                                document.querySelector('#payment_method_id').value = paymentMethodId;
                                this.submit();
                            }
                        });
                });

                // Optional: handle errors
                function handleError(error) {
                    console.log(error);
                    document.getElementById('error').textContent = error.message || 'An unknown error occurred';
                }
            </script>

            <input type="hidden" name="amount" value="<?php echo getCartSubtotal() * 100; ?>">
            <input type="hidden" id="payment_method_id" name="payment_method_id">
            
            <button type="submit">Complete Purchase</button>
            <p id="error"></p>
        </form>
    <?php else: ?>
        <p>Your cart is empty.</p>
        <p><a href="index.php">Continue Shopping</a></p>
    <?php endif; ?>

    <?php if (!isset($_SESSION['user_id'])): ?>
        <div class="login-form">
            <!-- Login form here -->
        </div>
    <?php endif; ?>
</body>
</html>


<?php
session_start();
require_once('product_functions.php');

if (isset($_POST['amount']) && isset($_POST['payment_method_id'])) {
    // Process payment using Stripe or your preferred payment gateway
    $result = processPayment(
        $_POST['amount'] / 100,
        $_POST['card_number'],
        $_POST['card_expiry'],
        $_POST['card_cvc']
    );

    if ($result['success']) {
        // Generate order confirmation email
        $orderConfirmation = sendOrderConfirmation('user@example.com', $result['order_id'], $result['amount']);

        // Clear cart
        unset($_SESSION['cart']);

        header("Location: order_confirmation.php?order_id={$result['order_id']}");
    } else {
        echo "Payment failed: {$result['message']}";
    }
} else {
    echo "Invalid request";
}
?>


<!DOCTYPE html>
<html>
<head>
    <title>Order Confirmation</title>
</head>
<body>
    <?php require_once('product_functions.php'); ?>

    <?php if (isset($_GET['order_id'])): ?>
        <h1>Thank you for your purchase!</h1>
        <p>Your order ID is: <?php echo $_GET['order_id']; ?></p>
        <p>We'll send a confirmation email to the address you provided.</p>
    <?php else: ?>
        <p>Invalid order ID.</p>
    <?php endif; ?>

    <?php if (!isset($_SESSION['user_id'])): ?>
        <div class="login-form">
            <!-- Login form here -->
        </div>
    <?php endif; ?>
</body>
</html>


<?php
// Database configuration
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "myDB";

// Create connection
$conn = new mysqli($servername, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Start session
session_start();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
    <style>
        /* Add your CSS styles here */
        body { font-family: Arial, sans-serif; }
        .product-grid { display: grid; grid-template-columns: repeat(auto-fit, minmax(250px, 1fr)); gap: 20px; padding: 20px; }
        .product-card { border: 1px solid #ddd; padding: 10px; text-align: center; }
        .product-card img { max-width: 200px; height: auto; }
        .cart-container { width: 80%; margin: 0 auto; padding: 20px; }
        .checkout-form { width: 60%; margin: 0 auto; padding: 20px; }
    </style>
</head>
<body>

<?php
// Function to display products
function displayProducts() {
    global $conn;
    
    // SQL query to get all products
    $sql = "SELECT * FROM products";
    $result = $conn->query($sql);
    
    if ($result->num_rows > 0) {
        echo "<div class='product-grid'>";
        while($row = $result->fetch_assoc()) {
            echo "<div class='product-card'>";
                echo "<img src='".$row['image']."' alt='".$row['name']."'>";
                echo "<h3>".$row['name']."</h3>";
                echo "<p>Price: \$".$row['price']."</p>";
                echo "<form action='add_to_cart.php' method='post'>";
                    echo "<input type='hidden' name='product_id' value='".$row['id']."'>";
                    echo "<button type='submit'>Add to Cart</button>";
                echo "</form>";
            echo "</div>";
        }
        echo "</div>";
    } else {
        echo "No products found.";
    }
}

// Function to add product to cart
function addToCart($product_id) {
    global $conn;
    
    // Get product details
    $sql = "SELECT * FROM products WHERE id=" . $product_id;
    $result = $conn->query($sql);
    $row = $result->fetch_assoc();
    
    // Add to cart array
    if (isset($_SESSION['cart'])) {
        $_SESSION['cart'][$product_id] = array(
            'name' => $row['name'],
            'price' => $row['price'],
            'quantity' => 1
        );
    } else {
        $_SESSION['cart'] = array();
        $_SESSION['cart'][$product_id] = array(
            'name' => $row['name'],
            'price' => $row['price'],
            'quantity' => 1
        );
    }
    
    echo "<script>alert('Product added to cart');</script>";
}

// Function to view cart
function viewCart() {
    if (isset($_SESSION['cart'])) {
        $total = 0;
        foreach ($_SESSION['cart'] as $product) {
            $total += $product['price'] * $product['quantity'];
        }
        
        echo "<div class='cart-container'>";
            echo "<h2>Your Cart</h2>";
            echo "<table border='1'>";
                echo "<tr><th>Product Name</th><th>Price</th><th>Quantity</th><th>Total</th></tr>";
                
                foreach ($_SESSION['cart'] as $id => $product) {
                    echo "<tr>";
                        echo "<td>".$product['name']."</td>";
                        echo "<td>\$".$product['price']."</td>";
                        echo "<td>".$product['quantity']."</td>";
                        echo "<td>\$".($product['price'] * $product['quantity'])."</td>";
                        echo "<td><a href='remove_from_cart.php?id=$id'>Remove</a></td>";
                    echo "</tr>";
                }
                
            echo "</table>";
            echo "<h3>Total: \$".$total."</h3>";
            echo "<a href='checkout.php'>Proceed to Checkout</a>";
        echo "</div>";
    } else {
        echo "Your cart is empty.";
    }
}

// Function to handle checkout
function checkout() {
    if (!isset($_SESSION['cart'])) {
        die("No items in cart.");
    }
    
    // Display checkout form
    echo "<div class='checkout-form'>";
        echo "<h2>Checkout</h2>";
        echo "<form method='post' action='process_payment.php'>";
            echo "<label for='name'>Name:</label><br>";
            echo "<input type='text' id='name' name='name' required><br>";
            
            echo "<label for='email'>Email:</label><br>";
            echo "<input type='email' id='email' name='email' required><br>";
            
            echo "<label for='address'>Address:</label><br>";
            echo "<textarea id='address' name='address' required></textarea><br>";
            
            echo "<h3>Total Amount: \$".calculateTotal()."</h3>";
            
            echo "<input type='hidden' name='total_amount' value='".calculateTotal()."'>";
            
            echo "<h4>Payment Method:</h4>";
            echo "<input type='radio' id='credit' name='payment_method' value='credit' required>";
            echo "<label for='credit'>Credit Card</label><br>";
            echo "<input type='radio' id='paypal' name='payment_method' value='paypal'>";
            echo "<label for='paypal'>PayPal</label><br>";
            
            echo "<button type='submit'>Place Order</button>";
        echo "</form>";
    echo "</div>";
}

// Function to calculate total
function calculateTotal() {
    $total = 0;
    
    if (isset($_SESSION['cart'])) {
        foreach ($_SESSION['cart'] as $product) {
            $total += $product['price'] * $product['quantity'];
        }
    }
    
    return number_format($total, 2);
}

// Function to process payment
function processPayment() {
    // In a real application, you would integrate with a payment gateway here
    // For this example, we'll just simulate the payment processing
    
    if (isset($_POST['payment_method']) && $_POST['payment_method'] != '') {
        // Payment successful
        recordOrder();
        echo "<script>alert('Payment successful! Your order has been placed.');</script>";
        unset($_SESSION['cart']);
        header("Location: index.php");
        exit;
    } else {
        echo "<script>alert('Please select a payment method.');</script>";
        header("Location: checkout.php");
        exit;
    }
}

// Function to record order
function recordOrder() {
    global $conn;
    
    // Get user details from POST
    $name = $_POST['name'];
    $email = $_POST['email'];
    $address = $_POST['address'];
    $total_amount = $_POST['total_amount'];
    
    // Insert into orders table
    $sql = "INSERT INTO orders (name, email, address, total_amount) VALUES ('$name', '$email', '$address', '$total_amount')";
    if ($conn->query($sql)) {
        // Get the order ID
        $order_id = $conn->insert_id;
        
        // Insert order details
        foreach ($_SESSION['cart'] as $product) {
            $product_name = $product['name'];
            $price = $product['price'];
            $quantity = $product['quantity'];
            
            $sql_details = "INSERT INTO order_details (order_id, product_name, price, quantity) VALUES ('$order_id', '$product_name', '$price', '$quantity')";
            $conn->query($sql_details);
        }
    } else {
        echo "<script>alert('Error processing your order. Please try again.');</script>";
    }
}
?>


<?php
// Connect to database
$host = "localhost";
$username = "root";
$password = "";
$dbname = "shopping_cart";

$conn = mysqli_connect($host, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Get products from the database
$sql = "SELECT * FROM products";
$result = mysqli_query($conn, $sql);
$products = array();

while ($row = mysqli_fetch_assoc($result)) {
    $products[] = $row;
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Product List</title>
</head>
<body>
    <h1>Products</h1>
    <?php foreach ($products as $product): ?>
        <div style="border: 1px solid #ddd; padding: 10px; margin: 5px;">
            <h3><?php echo $product['name']; ?></h3>
            <p><?php echo $product['description']; ?></p>
            <p>Price: <?php echo "$" . number_format($product['price'], 2); ?></p>
            <form action="add_to_cart.php" method="post">
                <input type="hidden" name="id" value="<?php echo $product['id']; ?>">
                <input type="text" name="quantity" placeholder="Quantity">
                <button type="submit">Add to Cart</button>
            </form>
        </div>
    <?php endforeach; ?>
</body>
</html>

<?php
mysqli_close($conn);
?>


<?php
session_start();

// Connect to database
$host = "localhost";
$username = "root";
$password = "";
$dbname = "shopping_cart";

$conn = mysqli_connect($host, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

$product_id = $_POST['id'];
$quantity = $_POST['quantity'];

// Get product details
$sql = "SELECT * FROM products WHERE id = '$product_id'";
$result = mysqli_query($conn, $sql);
$product = mysqli_fetch_assoc($result);

if (isset($_SESSION['cart'])) {
    if (!array_key_exists($product_id, $_SESSION['cart'])) {
        $_SESSION['cart'][$product_id] = array(
            'name' => $product['name'],
            'price' => $product['price'],
            'quantity' => $quantity
        );
    } else {
        $_SESSION['cart'][$product_id]['quantity'] += $quantity;
    }
} else {
    $_SESSION['cart'] = array();
    $_SESSION['cart'][$product_id] = array(
        'name' => $product['name'],
        'price' => $product['price'],
        'quantity' => $quantity
    );
}

mysqli_close($conn);
header("Location: cart.php");
?>


<?php
session_start();

// Connect to database
$host = "localhost";
$username = "root";
$password = "";
$dbname = "shopping_cart";

$conn = mysqli_connect($host, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

$total_price = 0;

echo "<h1>Shopping Cart</h1>";
echo "<form action='checkout.php' method='post'>";

foreach ($_SESSION['cart'] as $id => $item) {
    echo "<div style='border: 1px solid #ddd; padding: 10px; margin: 5px;'>";
    echo "<h3>" . $item['name'] . "</h3>";
    echo "<p>Price: $" . number_format($item['price'], 2) . "</p>";
    echo "<input type='number' name='quantity[$id]' value='" . $item['quantity'] . "'>";
    echo "<button type='submit' formaction='update_cart.php?id=$id'>Update</button>";
    echo "</div>";
    
    $total_price += $item['price'] * $item['quantity'];
}

echo "<p>Total Price: $" . number_format($total_price, 2) . "</p>";
echo "<button type='submit'>Checkout</button>";
echo "</form>";

mysqli_close($conn);
?>


<?php
session_start();

$product_id = $_GET['id'];
$new_quantity = $_POST['quantity'][$product_id];

if ($new_quantity <= 0) {
    unset($_SESSION['cart'][$product_id]);
} else {
    $_SESSION['cart'][$product_id]['quantity'] = $new_quantity;
}

header("Location: cart.php");
?>


<?php
session_start();

// Connect to database
$host = "localhost";
$username = "root";
$password = "";
$dbname = "shopping_cart";

$conn = mysqli_connect($host, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Get cart items from session
cartItems = $_SESSION['cart'];

// Insert order into orders table
$sql = "INSERT INTO orders (user_id, total_price) VALUES (?, ?)";
$stmt = mysqli_prepare($conn, $sql);
mysqli_stmt_bind_param($stmt, "is", $user_id, $total_price);

$user_id = 1; // Replace with actual user ID

$total_price = 0;
foreach ($cartItems as $item) {
    $total_price += $item['price'] * $item['quantity'];
}

mysqli_stmt_execute($stmt);
$order_id = mysqli_insert_id($conn);

// Insert order items into order_items table
$sql = "INSERT INTO order_items (order_id, product_id, quantity, price) VALUES (?, ?, ?, ?)";
$stmt = mysqli_prepare($conn, $sql);
mysqli_stmt_bind_param($stmt, "iiid", $order_id, $product_id, $quantity, $price);

foreach ($cartItems as $id => $item) {
    $product_id = $id;
    $quantity = $item['quantity'];
    $price = $item['price'];
    
    mysqli_stmt_execute($stmt);
}

// Clear cart
unset($_SESSION['cart']);

mysqli_close($conn);
header("Location: confirmation.php");
?>


<?php
session_start();

echo "<h1>Thank you for your purchase!</h1>";
echo "<p>Your order has been received.</p>";
?>

<a href="index.php">Continue shopping</a>


class Product {
    private $db;

    public function __construct($databaseConnection) {
        $this->db = $databaseConnection;
    }

    // Method to get all products
    public function getAllProducts() {
        $query = "SELECT * FROM products";
        $stmt = $this->db->prepare($query);
        $stmt->execute();
        return $stmt->fetchAll(PDO::FETCH_ASSOC);
    }

    // Method to get product by ID
    public function getProductById($id) {
        $query = "SELECT * FROM products WHERE id = ?";
        $stmt = $this->db->prepare($query);
        $stmt->execute([$id]);
        return $stmt->fetch(PDO::FETCH_ASSOC);
    }
}


class Order {
    private $db;

    public function __construct($databaseConnection) {
        $this->db = $databaseConnection;
    }

    // Method to create a new order
    public function createOrder($userId, $totalAmount, $paymentMethod) {
        $query = "INSERT INTO orders (user_id, total_amount, payment_method) VALUES (?, ?, ?)";
        $stmt = $this->db->prepare($query);
        return $stmt->execute([$userId, $totalAmount, $paymentMethod]);
    }

    // Method to get order by ID
    public function getOrderById($orderId) {
        $query = "SELECT * FROM orders WHERE id = ?";
        $stmt = $this->db->prepare($query);
        $stmt->execute([$orderId]);
        return $stmt->fetch(PDO::FETCH_ASSOC);
    }

    // Method to add order items
    public function addOrderItems($orderId, $orderItems) {
        $query = "INSERT INTO order_items (order_id, product_id, quantity, price) VALUES (?, ?, ?, ?)";
        $stmt = $this->db->prepare($query);

        foreach ($orderItems as $item) {
            $stmt->execute([$orderId, $item['product_id'], $item['quantity'], $item['price']]);
        }
    }

    // Method to update order status
    public function updateOrderStatus($orderId, $status) {
        $query = "UPDATE orders SET status = ? WHERE id = ?";
        $stmt = $this->db->prepare($query);
        return $stmt->execute([$status, $orderId]);
    }
}


class Cart {
    private $session;

    public function __construct() {
        session_start();
        $this->session = $_SESSION;
    }

    // Method to add item to cart
    public function addItem($productId, $quantity) {
        if (!isset($this->session['cart'])) {
            $this->session['cart'] = array();
        }
        
        if (isset($this->session['cart'][$productId])) {
            $this->session['cart'][$productId]['quantity'] += $quantity;
        } else {
            $this->session['cart'][$productId] = array(
                'product_id' => $productId,
                'quantity' => $quantity
            );
        }
    }

    // Method to remove item from cart
    public function removeItem($productId) {
        if (isset($this->session['cart'][$productId])) {
            unset($this->session['cart'][$productId]);
        }
    }

    // Method to get all items in cart
    public function getAllItems() {
        return $this->session['cart'] ?? array();
    }

    // Method to calculate total amount
    public function getTotalAmount($products) {
        $total = 0;
        foreach ($this->getAllItems() as $item) {
            $product = $products[$item['product_id']];
            $total += $product['price'] * $item['quantity'];
        }
        return $total;
    }

    // Method to clear cart
    public function clearCart() {
        unset($this->session['cart']);
    }
}


require_once('vendor/autoload.php');

\Stripe\Stripe::setApiKey('your_stripe_secret_key');

function processPayment($totalAmount, $paymentMethod) {
    try {
        $charge = \Stripe\Charge::create([
            'amount' => $totalAmount * 100, // Convert to cents
            'currency' => 'usd',
            'source' => $paymentMethod,
            'description' => 'Purchase from your store'
        ]);

        return $charge->status === 'succeeded';
    } catch (\Stripe\Error\Base $e) {
        return false;
    }
}


// Database connection
$db = new PDO('mysql:host=localhost;dbname=your_database', 'username', 'password');

$product = new Product($db);
$products = $product->getAllProducts();

if (isset($_POST['add_to_cart'])) {
    $productId = $_POST['product_id'];
    $quantity = $_POST['quantity'];
    
    $cart = new Cart();
    $cart->addItem($productId, $quantity);
}

// Checkout process
if (isset($_POST['checkout'])) {
    $cart = new Cart();
    $orderItems = $cart->getAllItems();

    // Get user ID from session or authentication
    $userId = 1; // Replace with actual user ID

    $totalAmount = $cart->getTotalAmount($products);

    $order = new Order($db);
    $orderId = $order->createOrder($userId, $totalAmount, 'Stripe');

    if ($orderId) {
        $order->addOrderItems($orderId, $orderItems);
        
        // Process payment
        $paymentSuccess = processPayment($totalAmount, $_POST['payment_method']);

        if ($paymentSuccess) {
            $order->updateOrderStatus($orderId, 'completed');
            $cart->clearCart();
            echo "Purchase completed successfully!";
        } else {
            $order->updateOrderStatus($orderId, 'failed');
            echo "Payment failed. Please try again.";
        }
    }
}


<?php
$host = "localhost";
$username = "root";
$password = "";
$dbname = "purchase_db";

// Create connection
$conn = new mysqli($host, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}
?>


<?php
include 'config.php';
?>

<!DOCTYPE html>
<html>
<head>
    <title>Purchase System</title>
</head>
<body>
    <?php
        $sql = "SELECT * FROM products";
        $result = $conn->query($sql);

        if ($result->num_rows > 0) {
            while($row = $result->fetch_assoc()) {
                echo "<div>";
                    echo "<h2>".$row['name']."</h2>";
                    echo "<p>".$row['description']."</p>";
                    echo "<p>Price: \$".$row['price']."</p>";
                    echo '<form action="add_to_cart.php" method="post">';
                        echo '<input type="hidden" name="id" value="'.$row['id'].'">';
                        echo '<button type="submit">Add to Cart</button>';
                    echo '</form>';
                echo "</div><br/>";
            }
        } else {
            echo "No products found.";
        }
    ?>
</body>
</html>


<?php
session_start();

if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

$product_id = mysqli_real_escape_string($conn, $_POST['id']);

array_push($_SESSION['cart'], $product_id);

header("Location: index.php");
?>


<?php
include 'config.php';
session_start();

$cart = $_SESSION['cart'];
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <?php if (!empty($cart)): ?>
        <h2>Your Cart:</h2>
        <?php foreach ($cart as $product_id): 
            $sql = "SELECT * FROM products WHERE id=".$product_id;
            $result = $conn->query($sql);
            $row = $result->fetch_assoc();
        ?>
            <div>
                <h3><?php echo $row['name']; ?></h3>
                <p><?php echo $row['description']; ?></p>
                <p>Price: <?php echo '$'.$row['price']; ?></p>
            </div><br/>
        <?php endforeach; ?>
    <?php else: ?>
        <p>Your cart is empty.</p>
    <?php endif; ?>

    <?php if (!empty($cart)): ?>
        <form action="process_purchase.php" method="post">
            <button type="submit">Proceed to Checkout</button>
        </form>
    <?php endif; ?>

    <a href="index.php">Continue Shopping</a><br/>
    <?php if (isset($_SESSION['user'])): ?>
        <a href="logout.php">Logout</a>
    <?php else: ?>
        <a href="login.php">Login</a>
    <?php endif; ?>
</body>
</html>


<?php
include 'config.php';
session_start();

if (!isset($_SESSION['user'])) {
    header("Location: login.php");
    exit();
}

$cart = $_SESSION['cart'];
$user_id = $_SESSION['user']['id'];

foreach ($cart as $product_id) {
    // Insert order details into database here
    // For simplicity, we'll just print the product IDs
    echo "Processing purchase for product ID: " . $product_id . "<br/>";
}

unset($_SESSION['cart']);
?>

<p>Purchase completed successfully!</p>


<?php
session_start();
if (isset($_SESSION['user'])) {
    header("Location: index.php");
}

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = mysqli_real_escape_string($conn, $_POST['username']);
    $password = mysqli_real_escape_string($conn, $_POST['password']);

    $sql = "SELECT * FROM users WHERE username='".$username."'";
    $result = $conn->query($sql);

    if ($result->num_rows > 0) {
        $row = $result->fetch_assoc();
        if (md5($password) == $row['password']) {
            $_SESSION['user'] = array(
                'id' => $row['id'],
                'username' => $row['username']
            );
            header("Location: index.php");
        }
    }
    echo "Invalid username or password!";
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login</title>
</head>
<body>
    <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
        Username: <input type="text" name="username"><br/>
        Password: <input type="password" name="password"><br/>
        <button type="submit">Login</button>
    </form>
    <a href="register.php">Register here</a>
</body>
</html>


<?php
session_start();
if (isset($_SESSION['user'])) {
    header("Location: index.php");
}

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = mysqli_real_escape_string($conn, $_POST['username']);
    $password = md5(mysqli_real_escape_string($conn, $_POST['password']));

    $sql = "INSERT INTO users (username, password) VALUES ('$username', '$password')";
    if ($conn->query($sql)) {
        echo "Registration successful! Please login.";
        header("Location: login.php");
    } else {
        echo "Error registering user!";
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Register</title>
</head>
<body>
    <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
        Username: <input type="text" name="username"><br/>
        Password: <input type="password" name="password"><br/>
        <button type="submit">Register</button>
    </form>
    <a href="login.php">Already have an account? Login here</a>
</body>
</html>


<?php
session_start();
unset($_SESSION['user']);
session_destroy();
header("Location: index.php");
?>


<?php
// Start the session
session_start();

// Initialize cart if not exists
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Product data (you can replace this with database data)
$products = array(
    1 => array('name' => 'Product 1', 'price' => 10.99),
    2 => array('name' => 'Product 2', 'price' => 15.99),
    3 => array('name' => 'Product 3', 'price' => 20.99)
);

// Function to add item to cart
function addToCart($id) {
    global $products;
    
    if (isset($products[$id])) {
        if (!isset($_SESSION['cart'][$id])) {
            $_SESSION['cart'][$id] = array(
                'name' => $products[$id]['name'],
                'price' => $products[$id]['price'],
                'quantity' => 1
            );
        } else {
            $_SESSION['cart'][$id]['quantity']++;
        }
    }
}

// Function to update cart quantity
function updateCart($id, $quantity) {
    if (isset($_SESSION['cart'][$id])) {
        $_SESSION['cart'][$id]['quantity'] = $quantity;
    }
}

// Function to delete item from cart
function deleteItem($id) {
    if (isset($_SESSION['cart'][$id])) {
        unset($_SESSION['cart'][$id]);
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
    <style>
        body { font-family: Arial, sans-serif; margin: 20px; }
        .product-list { width: 80%; margin: auto; }
        table { width: 100%; border-collapse: collapse; margin-top: 20px; }
        th, td { padding: 10px; text-align: left; border-bottom: 1px solid #ddd; }
        .cart-total { font-weight: bold; margin-top: 20px; }
        .button { padding: 8px 16px; background-color: #4CAF50; color: white; text-decoration: none; }
        .button:hover { background-color: #45a049; }
    </style>
</head>
<body>
    <h2>Product List</h2>
    <div class="product-list">
        <?php foreach ($products as $id => $product): ?>
            <div style="margin-bottom: 10px;">
                <strong><?php echo $product['name']; ?></strong><br>
                Price: $<?php echo number_format($product['price'], 2); ?><br>
                <a href="#" onclick="addToCart(<?php echo $id; ?>)" class="button">Add to Cart</a>
            </div>
        <?php endforeach; ?>
    </div>

    <h2>Your Cart</h2>
    <?php if (empty($_SESSION['cart'])): ?>
        <p>Your cart is empty.</p>
    <?php else: ?>
        <table>
            <tr>
                <th>Product Name</th>
                <th>Price</th>
                <th>Quantity</th>
                <th>Total</th>
                <th>Action</th>
            </tr>
            <?php foreach ($_SESSION['cart'] as $id => $item): ?>
                <tr>
                    <td><?php echo $item['name']; ?></td>
                    <td>$<?php echo number_format($item['price'], 2); ?></td>
                    <td><input type="number" name="quantity[<?php echo $id; ?>]" value="<?php echo $item['quantity']; ?>"></td>
                    <td>$<?php echo number_format($item['price'] * $item['quantity'], 2); ?></td>
                    <td><a href="#" onclick="deleteItem(<?php echo $id; ?>)" class="button">Delete</a></td>
                </tr>
            <?php endforeach; ?>
        </table>
        <div class="cart-total">
            Total: $<?php 
                $total = 0;
                foreach ($_SESSION['cart'] as $item) {
                    $total += $item['price'] * $item['quantity'];
                }
                echo number_format($total, 2);
            ?>
        </div>
    <?php endif; ?>

    <script>
        function addToCart(id) {
            if (confirm("Add this item to cart?")) {
                window.location.href = "add.php?id=" + id;
            }
        }

        function deleteItem(id) {
            if (confirm("Delete this item from cart?")) {
                window.location.href = "delete.php?id=" + id;
            }
        }
    </script>
</body>
</html>


<?php
session_start();

if (isset($_GET['id'])) {
    addToCart($_GET['id']);
}

header("Location: index.php");
exit();
?>


<?php
session_start();

foreach ($_POST as $key => $value) {
    if (strpos($key, 'quantity') !== false) {
        list(, $id) = explode('[', $key);
        $id = str_replace(']', '', $id);
        updateCart($id, $value);
    }
}

header("Location: index.php");
exit();
?>


<?php
session_start();

if (isset($_GET['id'])) {
    deleteItem($_GET['id']);
}

header("Location: index.php");
exit();
?>


<?php
session_start();
// Database connection
$host = 'localhost';
$dbname = 'my_store';
$username = 'root';
$password = '';

try {
    $pdo = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
} catch(PDOException $e) {
    die('Connection failed: ' . $e->getMessage());
}

// Get all products
$stmt = $pdo->query("SELECT * FROM products");
$products = $stmt->fetchAll(PDO::FETCH_ASSOC);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Store - Products</title>
    <style>
        /* Add your CSS styles here */
    </style>
</head>
<body>
    <h1>Welcome to Our Store</h1>
    <?php if (!empty($products)): ?>
        <div class="products">
            <?php foreach ($products as $product): ?>
                <div class="product">
                    <img src="<?php echo $product['image']; ?>" alt="<?php echo $product['name']; ?>">
                    <h2><?php echo $product['name']; ?></h2>
                    <p><?php echo $product['description']; ?></p>
                    <p>Price: $<?php echo number_format($product['price'], 2); ?></p>
                    <form action="add_to_cart.php" method="post">
                        <input type="hidden" name="product_id" value="<?php echo $product['id']; ?>">
                        <input type="number" name="quantity" min="1" value="1">
                        <button type="submit">Add to Cart</button>
                    </form>
                </div>
            <?php endforeach; ?>
        </div>
    <?php else: ?>
        <p>No products available.</p>
    <?php endif; ?>
</body>
</html>


<?php
session_start();

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $product_id = $_POST['product_id'];
    $quantity = $_POST['quantity'];

    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }

    // Check if product is already in cart
    if (array_key_exists($product_id, $_SESSION['cart'])) {
        $_SESSION['cart'][$product_id] += $quantity;
    } else {
        $_SESSION['cart'][$product_id] = $quantity;
    }
}

header('Location: products.php');
exit();


<?php
session_start();

// Database connection (same as above)
try {
    $pdo = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
} catch(PDOException $e) {
    die('Connection failed: ' . $e->getMessage());
}

$total = 0;
?>

<!DOCTYPE html>
<html>
<head>
    <title>Store - Shopping Cart</title>
</head>
<body>
    <h1>Your Shopping Cart</h1>
    
    <?php if (!empty($_SESSION['cart'])): ?>
        <table>
            <tr><th>Product</th><th>Quantity</th><th>Price</th><th>Total</th><th>Action</th></tr>
            <?php foreach ($_SESSION['cart'] as $product_id => $quantity): 
                $stmt = $pdo->prepare("SELECT * FROM products WHERE id = ?");
                $stmt->execute([$product_id]);
                $product = $stmt->fetch(PDO::FETCH_ASSOC); 
                if ($product) {
                    $price = $product['price'];
                    $total += $price * $quantity;
            ?>
                <tr>
                    <td><?php echo $product['name']; ?></td>
                    <td><?php echo $quantity; ?></td>
                    <td>$<?php echo number_format($price, 2); ?></td>
                    <td>$<?php echo number_format($price * $quantity, 2); ?></td>
                    <td><a href="remove_from_cart.php?product_id=<?php echo $product_id; ?>">Remove</a></td>
                </tr>
            <?php }} ?>
        </table>
        <h3>Total: $<?php echo number_format($total, 2); ?></h3>
        <a href="checkout.php">Proceed to Checkout</a> | <a href="products.php">Continue Shopping</a>
    <?php else: ?>
        <p>Your cart is empty.</p>
        <a href="products.php">Go shopping</a>
    <?php endif; ?>
</body>
</html>


<?php
session_start();

if (isset($_GET['product_id'])) {
    $product_id = $_GET['product_id'];
    
    if (!empty($_SESSION['cart']) && array_key_exists($product_id, $_SESSION['cart'])) {
        unset($_SESSION['cart'][$product_id]);
    }
}

header('Location: view_cart.php');
exit();


<?php
session_start();

// Initialize variables
$payment_name = $card_number = $cvv = $expiry_date = "";
$errors = array();

if (isset($_POST['submit'])) {
    // Validate input
    if (empty($_POST["name"]) || empty($_POST["card_number"]) || 
        empty($_POST["cvv"]) || empty($_POST["expiry"])) {
        $errors[] = "All fields are required";
    } else {
        $payment_name = $_POST['name'];
        $card_number = $_POST['card_number'];
        $cvv = $_POST['cvv'];
        $expiry_date = $_POST['expiry'];
        
        // In a real application, you would process the payment here
        // For now, just display success message
        
        echo "<h2>Thank you for your order!</h2>";
        echo "<p>Your order has been processed successfully.</p>";
        echo "<a href='products.php'>Continue shopping</a>";
        
        // Optional: Clear the cart after purchase
        unset($_SESSION['cart']);
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Store - Checkout</title>
</head>
<body>
    <?php if (empty($errors)): ?>
        <h1>Payment Information</h1>
        <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
            <div class="form-group">
                <label>Name on Card:</label><br>
                <input type="text" name="name" value="<?php echo $payment_name; ?>">
            </div>

            <div class="form-group">
                <label>Card Number:</label><br>
                <input type="text" name="card_number" value="<?php echo $card_number; ?>">
            </div>

            <div class="form-group">
                <label>CVV:</label><br>
                <input type="text" name="cvv" value="<?php echo $cvv; ?>">
            </div>

            <div class="form-group">
                <label>Expiry Date:</label><br>
                <input type="text" name="expiry" placeholder="MM/YYYY" value="<?php echo $expiry_date; ?>">
            </div>

            <button type="submit" name="submit">Complete Purchase</button>
        </form>
    <?php else: ?>
        <?php foreach ($errors as $error) { 
            echo "<p style='color:red'>$error</p>";
        } ?>
    <?php endif; ?>
    
    <a href="view_cart.php">Back to Cart</a>
</body>
</html>


<?php
// Database connection
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'shopping_cart';

$conn = mysqli_connect($host, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Start session
session_start();
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Shopping Cart</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 20px;
            padding: 0;
        }
        .product {
            border: 1px solid #ddd;
            padding: 10px;
            margin-bottom: 10px;
        }
        .cart {
            width: 50%;
            margin: 0 auto;
            padding: 20px;
            border: 1px solid #ddd;
        }
        .checkout {
            width: 50%;
            margin: 0 auto;
            padding: 20px;
            border: 1px solid #ddd;
        }
    </style>
</head>
<body>

<?php
// Display products
$query = "SELECT * FROM products";
$result = mysqli_query($conn, $query);

if (mysqli_num_rows($result) > 0) {
    while ($row = mysqli_fetch_assoc($result)) {
        echo "<div class='product'>";
        echo "<h3>{$row['name']}</h3>";
        echo "<img src='{$row['image']}' alt='{$row['name']}' width='100'>";
        echo "<p>Description: {$row['description']}</p>";
        echo "<p>Price: \${$row['price']}</p>";
        echo "<form action='add_to_cart.php' method='post'>";
        echo "<input type='hidden' name='id' value='{$row['id']}'>";
        echo "<input type='text' name='quantity' placeholder='Quantity'>";
        echo "<button type='submit'>Add to Cart</button>";
        echo "</form>";
        echo "</div>";
    }
} else {
    echo "No products found.";
}
?>

<?php
// Display shopping cart
if (!empty($_SESSION['cart'])) {
    $total = 0;
    echo "<h2>Your Shopping Cart</h2>";
    echo "<div class='cart'>";
    foreach ($_SESSION['cart'] as $item) {
        $product_id = $item['id'];
        $query = "SELECT * FROM products WHERE id=$product_id";
        $result = mysqli_query($conn, $query);
        $product = mysqli_fetch_assoc($result);
        
        echo "<div class='cart-item'>";
        echo "<h3>{$product['name']}</h3>";
        echo "<p>Quantity: {$item['quantity']}</p>";
        echo "<p>Price: \${$product['price']}</p>";
        echo "<form action='update_cart.php' method='post'>";
        echo "<input type='hidden' name='id' value='{$item['id']}'>";
        echo "<input type='text' name='new_quantity' placeholder='Update Quantity'>";
        echo "<button type='submit'>Update</button>";
        echo "</form>";
        echo "</div>";
        
        $total += $product['price'] * $item['quantity'];
    }
    echo "<h3>Total: \${$total}</h3>";
    echo "<a href='checkout.php'>Proceed to Checkout</a>";
    echo "</div>";
} else {
    echo "Your cart is empty.";
}
?>

<?php
// Checkout form
if (!empty($_SESSION['cart'])) {
    echo "<h2>Checkout</h2>";
    echo "<form action='process_order.php' method='post'>";
    echo "<div class='checkout'>";
    echo "<label for='name'>Name:</label>";
    echo "<input type='text' id='name' name='name' required><br>";
    
    echo "<label for='email'>Email:</label>";
    echo "<input type='email' id='email' name='email' required><br>";
    
    echo "<label for='address'>Address:</label>";
    echo "<textarea id='address' name='address' required></textarea><br>";
    
    echo "<label for='city'>City:</label>";
    echo "<input type='text' id='city' name='city' required><br>";
    
    echo "<label for='card_number'>Card Number:</label>";
    echo "<input type='text' id='card_number' name='card_number' pattern='\d{16}' required><br>";
    
    echo "<button type='submit'>Place Order</button>";
    echo "</div>";
    echo "</form>";
} else {
    echo "Please add items to your cart first.";
}
?>

<?php
// Process order
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $name = $_POST['name'];
    $email = $_POST['email'];
    $address = $_POST['address'];
    $city = $_POST['city'];
    $card_number = $_POST['card_number'];
    
    // Insert order into database
    $order_query = "INSERT INTO orders (name, email, address, city) VALUES ('$name', '$email', '$address', '$city')";
    mysqli_query($conn, $order_query);
    $order_id = mysqli_insert_id($conn);
    
    // Insert order items
    foreach ($_SESSION['cart'] as $item) {
        $product_id = $item['id'];
        $quantity = $item['quantity'];
        
        $item_query = "INSERT INTO order_items (order_id, product_id, quantity) VALUES ('$order_id', '$product_id', '$quantity')";
        mysqli_query($conn, $item_query);
    }
    
    // Clear cart
    unset($_SESSION['cart']);
    
    // Send confirmation email
    $to = $email;
    $subject = "Order Confirmation";
    $message = "Thank you for your order! Your order ID is #{$order_id}. We will ship your items soon.";
    mail($to, $subject, $message);
    
    header("Location: order_confirmation.php");
}
?>

<?php
// Order confirmation page
if (isset($_GET['id'])) {
    $order_id = $_GET['id'];
    echo "<h2>Order Confirmation</h2>";
    echo "<p>Your order has been processed successfully!</p>";
    echo "<p>Order ID: #{$order_id}</p>";
    echo "<p>Thank you for shopping with us!</p>";
} else {
    echo "Invalid request.";
}
?>

<?php
// Update cart quantity
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $id = $_POST['id'];
    $new_quantity = $_POST['new_quantity'];
    
    if (!empty($new_quantity)) {
        foreach ($_SESSION['cart'] as &$item) {
            if ($item['id'] == $id) {
                $item['quantity'] = $new_quantity;
            }
        }
    }
    
    header("Location: cart.php");
}
?>

<?php
// Add to cart functionality
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $id = $_POST['id'];
    $quantity = isset($_POST['quantity']) ? intval($_POST['quantity']) : 1;
    
    if (!empty($quantity)) {
        if (isset($_SESSION['cart'][$id])) {
            $_SESSION['cart'][$id]['quantity'] += $quantity;
        } else {
            $query = "SELECT name, price FROM products WHERE id=$id";
            $result = mysqli_query($conn, $query);
            $product = mysqli_fetch_assoc($result);
            
            $_SESSION['cart'][$id] = array(
                'id' => $id,
                'name' => $product['name'],
                'price' => $product['price'],
                'quantity' => $quantity
            );
        }
    }
    
    header("Location: cart.php");
}
?>


<?php

class Product {
    private $db;

    public function __construct($database) {
        $this->db = $database;
    }

    // Get all products
    public function getProducts() {
        $query = "SELECT * FROM products";
        return $this->db->select($query);
    }

    // Add a product to the cart
    public function addToCart($productId, $quantity) {
        if (isset($_SESSION['cart'])) {
            foreach ($_SESSION['cart'] as &$item) {
                if ($item['id'] == $productId) {
                    $item['quantity'] += $quantity;
                    return true;
                }
            }
        }

        $query = "SELECT id, name, price FROM products WHERE id = ?";
        $product = $this->db->select($query, [$productId], true);

        if ($product) {
            $_SESSION['cart'][$productId] = [
                'id' => $product['id'],
                'name' => $product['name'],
                'price' => $product['price'],
                'quantity' => $quantity
            ];
            return true;
        }
        return false;
    }

    // Calculate total amount of items in cart
    public function calculateTotal() {
        if (!isset($_SESSION['cart'])) {
            return 0;
        }
        
        $total = 0;
        foreach ($_SESSION['cart'] as $item) {
            $total += ($item['price'] * $item['quantity']);
        }

        return $total;
    }
}


<?php

class Database {
    private $host = 'localhost';
    private $db_name = 'your_database_name';
    private $username = 'root';
    private $password = '';
    public $conn;

    // Connect to the database
    public function connect() {
        try {
            $this->conn = new PDO(
                "mysql:host=" . $this->host . ";dbname=" . $this->db_name,
                $this->username,
                $this->password
            );
            return $this->conn;
        } catch (PDOException $e) {
            echo "Connection failed: " . $e->getMessage();
        }
    }

    // Select data from database
    public function select($query, $params = [], $single = false) {
        try {
            $stmt = $this->conn->prepare($query);
            if (!empty($params)) {
                foreach ($params as $key => $value) {
                    $stmt->bindValue(':' . $key, $value);
                }
            }
            $stmt->execute();
            if ($single) {
                return $stmt->fetch(PDO::FETCH_ASSOC);
            } else {
                return $stmt->fetchAll(PDO::FETCH_ASSOC);
            }
        } catch (PDOException $e) {
            echo "Error: " . $e->getMessage();
        }
    }

    // Insert data into database
    public function insert($query, $params = []) {
        try {
            $stmt = $this->conn->prepare($query);
            if (!empty($params)) {
                foreach ($params as $key => $value) {
                    $stmt->bindValue(':' . $key, $value);
                }
            }
            return $stmt->execute();
        } catch (PDOException $e) {
            echo "Error: " . $e->getMessage();
        }
    }
}


<?php
session_start();

require_once 'Database.php';
require_once 'Product.php';

$db = new Database();
$conn = $db->connect();

$product = new Product($conn);

// Get all products from database
$products = $product->getProducts();

if (isset($_POST['add_to_cart'])) {
    // Add product to cart
    if ($product->addToCart($_POST['id'], $_POST['quantity'])) {
        header("Location: cart.php");
    } else {
        echo "Product not found!";
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Products</title>
</head>
<body>
    <h1>Available Products</h1>
    
    <?php if (!empty($products)): ?>
        <?php foreach ($products as $product): ?>
            <div class="product">
                <h2><?php echo $product['name']; ?></h2>
                <p><?php echo $product['description']; ?></p>
                <p>Price: $<?php echo number_format($product['price'], 2); ?></p>
                
                <form action="" method="post">
                    <input type="hidden" name="id" value="<?php echo $product['id']; ?>">
                    <input type="number" name="quantity" min="1" max="99" value="1">
                    <button type="submit" name="add_to_cart">Add to Cart</button>
                </form>
            </div>
        <?php endforeach; ?>
    <?php else: ?>
        <p>No products available!</p>
    <?php endif; ?>

    <a href="cart.php">View Cart</a>
</body>
</html>


<?php
session_start();

require_once 'Database.php';
require_once 'Product.php';

$db = new Database();
$conn = $db->connect();

$product = new Product($conn);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <h1>Your Shopping Cart</h1>
    
    <?php if (isset($_SESSION['cart'])): ?>
        <table>
            <thead>
                <tr>
                    <th>Product Name</th>
                    <th>Price</th>
                    <th>Quantity</th>
                    <th>Total</th>
                </tr>
            </thead>
            <tbody>
                <?php foreach ($_SESSION['cart'] as $item): ?>
                    <tr>
                        <td><?php echo $item['name']; ?></td>
                        <td>$<?php echo number_format($item['price'], 2); ?></td>
                        <td><?php echo $item['quantity']; ?></td>
                        <td>$<?php echo number_format($item['price'] * $item['quantity'], 2); ?></td>
                    </tr>
                <?php endforeach; ?>
            </tbody>
        </table>

        <h3>Total Amount: $<?php echo number_format($product->calculateTotal(), 2); ?></h3>
        
        <form action="checkout.php" method="post">
            <button type="submit">Checkout</button>
        </form>
    <?php else: ?>
        <p>Your cart is empty!</p>
        <a href="index.php">Back to Products</a>
    <?php endif; ?>
</body>
</html>


<?php
session_start();

require_once 'Database.php';
require_once 'Product.php';

$db = new Database();
$conn = $db->connect();

$product = new Product($conn);
$totalAmount = $product->calculateTotal();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
</head>
<body>
    <h1> Checkout </h1>

    <?php if ($totalAmount > 0): ?>
        <form action="process_payment.php" method="post">
            <!-- Payment form fields -->
            <input type="hidden" name="amount" value="<?php echo $totalAmount; ?>">
            
            <label for="card_number">Card Number:</label>
            <input type="text" id="card_number" name="card_number" required>

            <label for="cvv">CVV:</label>
            <input type="text" id="cvv" name="cvv" required>

            <button type="submit">Pay Now</button>
        </form>
    <?php else: ?>
        <p>Your cart is empty!</p>
        <a href="index.php">Back to Products</a>
    <?php endif; ?>
</body>
</html>


<?php
session_start();

require_once 'Database.php';
require_once 'Product.php';

$db = new Database();
$conn = $db->connect();

$product = new Product($conn);

if (isset($_POST['amount'])) {
    // Process the payment here (you would need to integrate with a payment gateway)
    
    // For this example, we'll just simulate a successful payment
    $totalAmount = $_POST['amount'];
    
    if (!empty($_SESSION['cart'])) {
        foreach ($_SESSION['cart'] as $item) {
            // Insert order into database
            $query = "INSERT INTO orders (user_id, product_id, quantity, total_amount)
                      VALUES (?, ?, ?, ?)";
            
            $params = [
                1, // Assuming user is logged in and has id=1
                $item['id'],
                $item['quantity'],
                $totalAmount
            ];
            
            $db->insert($query, $params);
        }
        
        // Clear the cart
        unset($_SESSION['cart']);
    }
    
    echo "Payment successful!";
} else {
    echo "No amount specified!";
}
?>


<?php
// Configuration file (config.php)
$host = 'localhost';
$username = 'root';
$password = '';
$database = 'purchase_system';

try {
    $conn = new PDO("mysql:host=$host;dbname=$database", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}
?>

// Display products (products.php)
<?php
session_start();

include 'config.php';

$sql = "SELECT * FROM products";
$stmt = $conn->prepare($sql);
$stmt->execute();

$result = $stmt->fetchAll(PDO::FETCH_ASSOC);

if ($result) {
    foreach ($result as $row) {
        echo "<div class='product'>";
        echo "<h3>" . $row['name'] . "</h3>";
        echo "<p>Price: $" . $row['price'] . "</p>";
        echo "<input type='number' min='1' max='" . $row['stock'] . "' value='1' />";
        echo "<a href='addtocart.php?id=" . $row['id'] . "'>Add to Cart</a>";
        echo "</div>";
    }
} else {
    echo "No products available.";
}
?>

// Add to cart functionality (addtocart.php)
<?php
session_start();

include 'config.php';

$product_id = $_GET['id'];
$quantity = 1;

if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

$sql = "SELECT * FROM products WHERE id = ?";
$stmt = $conn->prepare($sql);
$stmt->execute(array($product_id));
$product = $stmt->fetch(PDO::FETCH_ASSOC);

if ($product) {
    if (isset($_SESSION['cart'][$product_id])) {
        // Update quantity
        $_SESSION['cart'][$product_id]['quantity'] += $quantity;
    } else {
        // Add new item
        $_SESSION['cart'][$product_id] = array(
            'name' => $product['name'],
            'price' => $product['price'],
            'quantity' => $quantity,
            'image' => $product['image']
        );
    }
}

header("Location: viewcart.php");
exit();
?>

// View cart (viewcart.php)
<?php
session_start();

include 'config.php';

$total = 0;

if (!empty($_SESSION['cart'])) {
    foreach ($_SESSION['cart'] as $item) {
        $total_item = $item['price'] * $item['quantity'];
        $total += $total_item;
        ?>
        <div class="cart-item">
            <?php echo "<img src='" . $item['image'] . "' alt='" . $item['name'] . "'>"; ?>
            <h3><?php echo $item['name']; ?></h3>
            <p>Price: <?php echo "$" . number_format($item['price'], 2); ?></p>
            <p>Quantity: <?php echo $item['quantity']; ?></p>
            <a href="removefromcart.php?id=<?php echo $item['id']; ?>">Remove</a>
        </div>
        <?php
    }
} else {
    echo "Your cart is empty.";
}

echo "<h2>Total: $" . number_format($total, 2) . "</h2>";
?>

// Remove from cart (removefromcart.php)
<?php
session_start();

include 'config.php';

$product_id = $_GET['id'];

if (!empty($_SESSION['cart'][$product_id])) {
    unset($_SESSION['cart'][$product_id]);
}

header("Location: viewcart.php");
exit();
?>

// Checkout page (checkout.php)
<?php
session_start();

include 'config.php';

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Process payment
    $email = $_POST['email'];
    $card_number = $_POST['card_number'];
    $card_cvv = $_POST['card_cvv'];
    $total = number_format($_SESSION['cart_total'], 2);

    // Insert order into database
    $sql = "INSERT INTO orders (email, total) VALUES (?, ?)";
    $stmt = $conn->prepare($sql);
    $stmt->execute(array($email, $total));

    $order_id = $conn->lastInsertId();

    foreach ($_SESSION['cart'] as $item) {
        $sql = "INSERT INTO order_items (order_id, product_id, quantity, price) VALUES (?, ?, ?, ?)";
        $stmt = $conn->prepare($sql);
        $stmt->execute(array($order_id, $item['id'], $item['quantity'], $item['price']));
    }

    // Clear cart
    unset($_SESSION['cart']);

    echo "Thank you for your purchase!";
} else {
    // Display checkout form
    ?>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <input type="email" name="email" placeholder="Enter your email" required>
        <input type="text" name="card_number" placeholder="Card number" required>
        <input type="text" name="card_cvv" placeholder="CVV" required>
        <button type="submit">Complete Purchase</button>
    </form>
    <?php
}
?>


<?php
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    // Set the PDO error mode to exception
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    die('Connection failed: ' . $e->getMessage());
}
?>


<?php
require_once 'db_connection.php';

function processPurchase($product_id, $user_id, $quantity) {
    global $conn;

    try {
        // Start transaction
        $conn->beginTransaction();

        // Check if the product exists and has sufficient stock
        $stmt = $conn->prepare("SELECT price, stock_quantity FROM products WHERE product_id = ?");
        $stmt->execute([$product_id]);
        $product = $stmt->fetch(PDO::FETCH_ASSOC);

        if (!$product) {
            throw new Exception('Product not found.');
        }

        if ($product['stock_quantity'] < $quantity) {
            throw new Exception('Not enough stock available.');
        }

        // Calculate total price
        $total_price = $product['price'] * $quantity;

        // Check user balance
        $stmt = $conn->prepare("SELECT balance FROM users WHERE user_id = ?");
        $stmt->execute([$user_id]);
        $user = $stmt->fetch(PDO::FETCH_ASSOC);

        if ($user['balance'] < $total_price) {
            throw new Exception('Insufficient funds.');
        }

        // Deduct the price from user's balance
        $conn->prepare("UPDATE users SET balance = balance - ? WHERE user_id = ?")
            ->execute([$total_price, $user_id]);

        // Decrease product stock
        $conn->prepare("UPDATE products SET stock_quantity = stock_quantity - ? WHERE product_id = ?")
            ->execute([$quantity, $product_id]);

        // Record the order
        $stmt = $conn->prepare("INSERT INTO orders (user_id, product_id, purchase_date, quantity) VALUES (?, ?, NOW(), ?)");
        $order_id = $stmt->execute([$user_id, $product_id, $quantity]);

        // Commit transaction
        $conn->commit();

        return ['status' => 'success', 'message' => 'Purchase completed successfully.', 'order_id' => $order_id];

    } catch (Exception $e) {
        // Rollback on error
        if ($conn->inTransaction()) {
            $conn->rollBack();
        }
        return ['status' => 'error', 'message' => $e->getMessage()];
    }
}
?>


<?php
require_once 'purchase_functionality.php';

// Example usage:
$product_id = 1; // Replace with actual product ID from user input
$user_id = 5;    // Replace with the authenticated user's ID
$quantity = 2;

$result = processPurchase($product_id, $user_id, $quantity);

if ($result['status'] == 'success') {
    echo "Order placed successfully! Order ID: " . $result['order_id'];
} else {
    echo "Error: " . $result['message'];
}
?>


<?php
// index.php - Product Display Page
session_start();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Product Store</title>
    <style>
        .product {
            border: 1px solid #ccc;
            padding: 10px;
            margin: 5px;
            width: 200px;
            display: inline-block;
        }
        .cart-item {
            border: 1px solid #ccc;
            padding: 10px;
            margin: 5px;
        }
    </style>
</head>
<body>
    <h1>Product Store</h1>
    <?php
    // Sample products array (you can replace this with database queries)
    $products = array(
        array('id' => 1, 'name' => 'Laptop', 'price' => 999.99, 'description' => 'High performance laptop', 'quantity' => 5),
        array('id' => 2, 'name' => 'Smartphone', 'price' => 699.99, 'description' => 'Latest smartphone model', 'quantity' => 10),
        array('id' => 3, 'name' => 'Tablet', 'price' => 499.99, 'description' => 'Portable tablet device', 'quantity' => 8)
    );

    foreach ($products as $product) {
        echo '<div class="product">';
        echo "<h2>{$product['name']}</h2>";
        echo "<p>Price: \${$product['price']}</p>";
        echo "<p>Description: {$product['description']}</p>";
        echo "<form action='add_to_cart.php' method='post'>";
        echo "<input type='hidden' name='id' value='{$product['id']}'>";
        echo "<input type='number' name='quantity' min='1' max='{$product['quantity']}' value='1'>";
        echo "<input type='submit' value='Add to Cart'>";
        echo "</form>";
        echo '</div>';
    }
    ?>

    <a href="view_cart.php">View Cart</a>
</body>
</html>

<?php
// add_to_cart.php - Add item to cart
session_start();

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $id = $_POST['id'];
    $quantity = $_POST['quantity'];

    // Check if cart exists in session, initialize if not
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }

    // Add item to cart or update quantity
    if (array_key_exists($id, $_SESSION['cart'])) {
        $_SESSION['cart'][$id]['quantity'] += $quantity;
    } else {
        $_SESSION['cart'][$id] = array(
            'id' => $id,
            'quantity' => $quantity
        );
    }

    // Redirect back to products page
    header("Location: index.php");
    exit();
}
?>

<?php
// view_cart.php - Cart Display Page
session_start();

$total = 0;
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
    <link rel="stylesheet" type="text/css" href="style.css">
</head>
<body>
    <h1>Your Shopping Cart</h1>
    
    <?php if (!empty($_SESSION['cart'])) { ?>
        <?php foreach ($_SESSION['cart'] as $item) { 
            // Here you would typically fetch the product details from your database
            $product = get_product_details($item['id']); ?>
            <div class="cart-item">
                <h2><?php echo $product['name']; ?></h2>
                <p>Price: <?php echo "$" . number_format($product['price'], 2); ?></p>
                <p>Quantity: <?php echo $item['quantity']; ?></p>
                <p>Total for this item: <?php 
                    $total += $product['price'] * $item['quantity'];
                    echo "$" . number_format($product['price'] * $item['quantity'], 2);
                ?></p>
                <a href="remove_from_cart.php?id=<?php echo $item['id']; ?>">Remove</a>
            </div>
        <?php } ?>
        
        <h2>Total: <?php echo "$" . number_format($total, 2); ?></h2>
        <form action="checkout.php" method="post">
            <input type="submit" value="Checkout">
        </form>
    <?php } else { ?>
        <p>Your cart is empty.</p>
    <?php } ?>

    <a href="index.php">Continue Shopping</a>
</body>
</html>

<?php
// remove_from_cart.php - Remove item from cart
session_start();

if (isset($_GET['id'])) {
    $id = $_GET['id'];
    
    if (!empty($_SESSION['cart'][$id])) {
        unset($_SESSION['cart'][$id]);
    }
}

header("Location: view_cart.php");
exit();
?>

<?php
// checkout.php - Checkout Page
session_start();

// In a real application, you would connect to a payment gateway here
// This is just a simulation
sleep(2); // Simulate processing time

header("Location: thank_you.php");
exit();
?>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'store';
$username = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}

// Product management functions
function addProduct($name, $price, $description, $stock) {
    global $conn;
    $sql = "INSERT INTO products (name, price, description, stock) VALUES (?, ?, ?, ?)";
    $stmt = $conn->prepare($sql);
    return $stmt->execute([$name, $price, $description, $stock]);
}

function viewProducts() {
    global $conn;
    $sql = "SELECT * FROM products";
    $stmt = $conn->query($sql);
    return $stmt->fetchAll();
}

// Shopping cart functions
session_start();

function addToCart($product_id, $quantity) {
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }
    
    if (isset($_SESSION['cart'][$product_id])) {
        $_SESSION['cart'][$product_id] += $quantity;
    } else {
        $_SESSION['cart'][$product_id] = $quantity;
    }
}

function viewCart() {
    return isset($_SESSION['cart']) ? $_SESSION['cart'] : array();
}

function deleteFromCart($product_id) {
    if (isset($_SESSION['cart'][$product_id])) {
        unset($_SESSION['cart'][$product_id]);
    }
}

// Order processing function
function processOrder($order_data) {
    global $conn;
    
    // Insert order into orders table
    $sql = "INSERT INTO orders (user_id, total_amount, payment_method, order_date) 
            VALUES (?, ?, ?, NOW())";
    $stmt = $conn->prepare($sql);
    $stmt->execute([$order_data['user_id'], $order_data['total_amount'], $order_data['payment_method']]);
    
    // Get last inserted order ID
    $order_id = $conn->lastInsertId();
    
    // Insert order items into order_items table
    foreach ($order_data['items'] as $item) {
        $sql = "INSERT INTO order_items (order_id, product_id, quantity, price)
                VALUES (?, ?, ?, ?)";
        $stmt = $conn->prepare($sql);
        $stmt->execute([$order_id, $item['product_id'], $item['quantity'], $item['price']]);
    }
    
    // Update product stock
    foreach ($order_data['items'] as $item) {
        $sql = "UPDATE products SET stock = stock - ? WHERE id = ?";
        $stmt = $conn->prepare($sql);
        $stmt->execute([$item['quantity'], $item['product_id']]);
    }
    
    return $order_id;
}

// Invoice generation function
function generateInvoice($order_id) {
    global $conn;
    
    // Get order details
    $sql = "SELECT * FROM orders WHERE id = ?";
    $stmt = $conn->prepare($sql);
    $stmt->execute([$order_id]);
    $order = $stmt->fetch();
    
    // Get order items
    $sql = "SELECT * FROM order_items WHERE order_id = ?";
    $stmt = $conn->prepare($sql);
    $stmt->execute([$order_id]);
    $items = $stmt->fetchAll();
    
    // Generate invoice HTML
    $invoice_html = "<html>
                        <head>
                            <title>Invoice</title>
                        </head>
                        <body>
                            <h1>Invoice #{$order['id']}</h1>
                            <p>Date: {$order['order_date']}</p>
                            <p>Total Amount: $" . number_format($order['total_amount'], 2) . "</p>
                            <table border='1'>
                                <tr><th>Product</th><th>Quantity</th><th>Price</th></tr>";
    
    foreach ($items as $item) {
        $invoice_html .= "<tr>
                            <td>" . getProductDetails($item['product_id'])['name'] . "</td>
                            <td>{$item['quantity']}</td>
                            <td>$" . number_format($item['price'], 2) . "</td>
                         </tr>";
    }
    
    $invoice_html .= "</table>
                        </body>
                    </html>";
    
    return $invoice_html;
}

// Helper function to get product details
function getProductDetails($product_id) {
    global $conn;
    
    $sql = "SELECT * FROM products WHERE id = ?";
    $stmt = $conn->prepare($sql);
    $stmt->execute([$product_id]);
    return $stmt->fetch();
}
?>


addProduct('Laptop', 999.99, 'High performance laptop', 50);


$products = viewProducts();
foreach ($products as $product) {
    echo "<div>";
    echo "<h2>{$product['name']}</h2>";
    echo "<p>Price: $" . number_format($product['price'], 2) . "</p>";
    echo "<button onclick=\"addToCart({$product['id']}, 1)\">Add to Cart</button>";
    echo "</div>";
}


function checkout() {
    $cart = viewCart();
    if (empty($cart)) {
        echo "Your cart is empty.";
        return;
    }
    
    // Display cart contents and order form here
}


$order_data = array(
    'user_id' => 1,
    'total_amount' => calculateTotal(),
    'payment_method' => 'credit_card',
    'items' => getCartItems()
);

$order_id = processOrder($order_data);


$invoice_html = generateInvoice($order_id);
echo $invoice_html;


<?php
session_start();

// Sample product data (you can replace this with a database connection)
$products = array(
    1 => array('name' => 'Product 1', 'price' => 29.99, 'description' => 'Description for Product 1'),
    2 => array('name' => 'Product 2', 'price' => 49.99, 'description' => 'Description for Product 2'),
    3 => array('name' => 'Product 3', 'price' => 59.99, 'description' => 'Description for Product 3')
);

// Function to add item to cart
function addToCart($productId) {
    global $products;
    
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }
    
    if (isset($_SESSION['cart'][$productId])) {
        // Increment quantity
        $_SESSION['cart'][$productId]['quantity']++;
    } else {
        // Add new product to cart
        $productData = $products[$productId];
        $productData['quantity'] = 1;
        $_SESSION['cart'][$productId] = $productData;
    }
}

// Function to update item quantity in cart
function updateCart($productId, $newQuantity) {
    global $products;
    
    if (isset($_SESSION['cart'][$productId])) {
        $_SESSION['cart'][$productId]['quantity'] = $newQuantity;
    }
}

// Function to remove item from cart
function removeFromCart($productId) {
    if (isset($_SESSION['cart'][$productId])) {
        unset($_SESSION['cart'][$productId]);
    }
}

// Function to calculate total price
function calculateTotal() {
    $total = 0;
    
    if (isset($_SESSION['cart'])) {
        foreach ($_SESSION['cart'] as $item) {
            $total += ($item['price'] * $item['quantity']);
        }
    }
    
    return $total;
}

// Function to handle checkout
function processCheckout() {
    // In a real application, you would connect to a payment gateway here
    // For this example, we'll just clear the cart and show a thank you message
    unset($_SESSION['cart']);
    header('Location: thank_you.php');
}
?>


<?php
session_start();

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $productId = $_POST['product_id'];
    addToCart($productId);
}

header('Location: products.php');
?>


<?php
session_start();

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $productId = $_POST['product_id'];
    $newQuantity = $_POST['quantity'];
    
    updateCart($productId, $newQuantity);
}

header('Location: view_cart.php');
?>


<?php
session_start();

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $productId = $_POST['product_id'];
    removeFromCart($productId);
}

header('Location: view_cart.php');
?>


<?php
session_start();

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    processCheckout();
}
?>


<?php
session_start();

// Database connection (you need to modify this according to your database)
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "myDB";

$conn = mysqli_connect($servername, $username, $password, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to add item to cart
function addToCart($item_id, $quantity) {
    global $_SESSION;
    
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }
    
    if (isset($_SESSION['cart'][$item_id])) {
        // If item already exists in cart, update quantity
        $_SESSION['cart'][$item_id]['quantity'] += $quantity;
    } else {
        // Get product details from database
        global $conn;
        $sql = "SELECT * FROM products WHERE id = ?";
        $stmt = mysqli_prepare($conn, $sql);
        mysqli_stmt_bind_param($stmt, "i", $item_id);
        mysqli_execute($stmt);
        $result = mysqli_stmt_get_result($stmt);
        
        if ($row = mysqli_fetch_assoc($result)) {
            $_SESSION['cart'][$item_id] = array(
                'id' => $row['id'],
                'name' => $row['name'],
                'price' => $row['price'],
                'quantity' => $quantity
            );
        }
    }
}

// Function to calculate total price of cart items
function getCartTotal() {
    global $_SESSION;
    
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += ($item['price'] * $item['quantity']);
    }
    
    return $total;
}

// Function to process checkout
function processCheckout($card_number, $cvv, $exp_month, $exp_year) {
    // For this example, we'll just validate the format
    // In a real application, you should integrate with a payment gateway
    
    if (strlen($card_number) != 16 || !is_numeric($card_number)) {
        return false;
    }
    
    if (strlen($cvv) < 3 || strlen($cvv) > 4 || !is_numeric($cvv)) {
        return false;
    }
    
    if (!checkdate($exp_month, 1, $exp_year)) {
        return false;
    }
    
    // If all validations pass
    return true;
}
?>


<?php
session_start();

// Check if cart is not empty
if (isset($_SESSION['cart']) && count($_SESSION['cart']) > 0) {
    echo "<h2>Your Cart</h2>";
    echo "<table border='1'>";
    echo "<tr><th>Product</th><th>Quantity</th><th>Price</th><th>Total</th><th>Action</th></tr>";
    
    $total = getCartTotal();
    
    foreach ($_SESSION['cart'] as $item) {
        echo "<tr>";
        echo "<td>" . $item['name'] . "</td>";
        echo "<td><input type='number' value='" . $item['quantity'] . "' min='1' max='99'></td>";
        echo "<td>\$ " . number_format($item['price'], 2) . "</td>";
        echo "<td>\$ " . number_format(($item['price'] * $item['quantity']), 2) . "</td>";
        echo "<td><a href='remove_from_cart.php?id=" . $item['id'] . "'>Remove</a></td>";
        echo "</tr>";
    }
    
    echo "<tr><td colspan='4'><strong>Total: \$ " . number_format($total, 2) . "</strong></td><td><a href='checkout.php'>Checkout</a></td></tr>";
    echo "</table>";
} else {
    echo "<h3>Your cart is empty.</h3>";
}
?>


<?php
session_start();

if (isset($_SESSION['cart']) && count($_SESSION['cart']) > 0) {
    $total = getCartTotal();
    
    // Display checkout form
    if ($_SERVER["REQUEST_METHOD"] == "GET") {
        echo "<h2>Checkout</h2>";
        echo "<form method='post'>";
        echo "<div>";
        echo "<label for='card_number'>Card Number:</label><br />";
        echo "<input type='text' id='card_number' name='card_number' required pattern='\d{16}' placeholder='XXXX XXXX XXXX XXXX'>";
        echo "</div>";
        
        echo "<div>";
        echo "<label for='cvv'>CVV:</label><br />";
        echo "<input type='text' id='cvv' name='cvv' required pattern='\d{3,4}' placeholder='XXX or XXXX'>";
        echo "</div>";
        
        echo "<div>";
        echo "<label for='exp_month'>Expiration Month:</label><br />";
        echo "<select id='exp_month' name='exp_month' required>";
        for ($i = 1; $i <= 12; $i++) {
            echo "<option value='" . $i . "'>" . $i . "</option>";
        }
        echo "</select>";
        
        echo "<label for='exp_year'>Expiration Year:</label><br />";
        echo "<select id='exp_year' name='exp_year' required>";
        for ($year = date('Y'); $year <= date('Y') + 5; $year++) {
            echo "<option value='" . $year . "'>" . $year . "</option>";
        }
        echo "</select>";
        echo "</div>";
        
        echo "<input type='submit' value='Complete Purchase'>";
        echo "</form>";
    } else {
        // Process checkout
        if (processCheckout($_POST['card_number'], $_POST['cvv'], $_POST['exp_month'], $_POST['exp_year'])) {
            // Clear cart
            unset($_SESSION['cart']);
            
            // Redirect to confirmation page
            header("Location: confirmation.php");
            exit();
        } else {
            echo "<h3>Payment failed. Please try again.</h3>";
        }
    }
} else {
    echo "<h3>Your cart is empty.</h3>";
}
?>


<?php
session_start();

if (isset($_SESSION['cart'])) {
    unset($_SESSION['cart']);
}

echo "<h2>Thank you for your purchase!</h2>";
echo "<p>Your order has been processed successfully.</p>";
?>


<?php
session_start();

// Include database connection
include 'db_connection.php';

// Include helper functions
include 'helper_functions.php';

// Initialize cart if not exists
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function add_to_cart($product_id, $quantity) {
    global $conn;
    
    // Check if product exists
    $sql = "SELECT * FROM products WHERE id = $product_id";
    $result = mysqli_query($conn, $sql);
    if (mysqli_num_rows($result) > 0) {
        // Add to cart
        $_SESSION['cart'][$product_id] = $quantity;
        return true;
    }
    return false;
}

// Function to remove item from cart
function remove_from_cart($product_id) {
    unset($_SESSION['cart'][$product_id]);
}

// Function to get cart items
function get_cart_items() {
    global $conn;
    
    $items = array();
    foreach ($_SESSION['cart'] as $id => $quantity) {
        $sql = "SELECT * FROM products WHERE id = $id";
        $result = mysqli_query($conn, $sql);
        if (mysqli_num_rows($result) > 0) {
            $item = mysqli_fetch_assoc($result);
            $items[] = array(
                'product' => $item,
                'quantity' => $quantity
            );
        }
    }
    return $items;
}

// Function to calculate total price
function get_cart_total() {
    global $conn;
    
    $total = 0;
    foreach ($_SESSION['cart'] as $id => $quantity) {
        $sql = "SELECT * FROM products WHERE id = $id";
        $result = mysqli_query($conn, $sql);
        if (mysqli_num_rows($result) > 0) {
            $item = mysqli_fetch_assoc($result);
            $total += ($item['price'] * $quantity);
        }
    }
    return $total;
}

// Process order
if (isset($_POST['checkout'])) {
    // Check if cart is not empty
    if (!empty($_SESSION['cart'])) {
        // Insert order into database
        $order_total = get_cart_total();
        
        $sql = "INSERT INTO orders (user_id, total) VALUES ('".$_SESSION['user_id']."', '".$order_total."')";
        mysqli_query($conn, $sql);
        
        $order_id = mysqli_insert_id($conn);
        
        // Insert order items
        foreach ($_SESSION['cart'] as $id => $quantity) {
            $sql = "INSERT INTO order_items (order_id, product_id, quantity) VALUES ('".$order_id."', '".$id."', '".$quantity."')";
            mysqli_query($conn, $sql);
        }
        
        // Clear cart
        unset($_SESSION['cart']);
        
        // Show success message
        echo "<div class='alert alert-success'>Thank you for your order! Your order ID is #$order_id</div>";
    } else {
        // Empty cart
        echo "<div class='alert alert-warning'>Your cart is empty!</div>";
    }
}
?>


<?php
session_start();
include('db_connection.php');

// Get all products from the database
$sql = "SELECT * FROM products";
$result = $conn->query($sql);

if ($result->num_rows > 0) {
    while ($row = $result->fetch_assoc()) {
        echo '<div class="product">';
        echo '<h3>' . $row['name'] . '</h3>';
        echo '<p>Price: $' . number_format($row['price'], 2) . '</p>';
        echo '<img src="' . $row['image_path'] . '" alt="' . $row['name'] . '">';
        echo '<form action="cart.php" method="post">';
        echo '<input type="hidden" name="product_id" value="' . $row['id'] . '">';
        echo '<input type="number" name="quantity" min="1" max="99" value="1">';
        echo '<button type="submit">Add to Cart</button>';
        echo '</form>';
        echo '</div>';
    }
} else {
    echo "No products found.";
}

$conn->close();
?>


<?php
session_start();

if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

include('db_connection.php');

// Add item to cart
if (isset($_POST['product_id']) && isset($_POST['quantity'])) {
    $product_id = intval($_POST['product_id']);
    $quantity = intval($_POST['quantity']);

    if ($quantity > 0) {
        if (array_key_exists($product_id, $_SESSION['cart'])) {
            // Update quantity
            $_SESSION['cart'][$product_id]['quantity'] += $quantity;
        } else {
            // Add new product
            $sql = "SELECT name, price FROM products WHERE id = ?";
            $stmt = $conn->prepare($sql);
            $stmt->bind_param("i", $product_id);
            $stmt->execute();
            $result = $stmt->get_result();

            if ($row = $result->fetch_assoc()) {
                $_SESSION['cart'][$product_id] = array(
                    'name' => $row['name'],
                    'price' => $row['price'],
                    'quantity' => $quantity
                );
            }
        }
    }
}

// Remove item from cart
if (isset($_GET['remove'])) {
    $product_id = intval($_GET['remove']);
    unset($_SESSION['cart'][$product_id]);
}

// Display cart contents
echo '<h2>Shopping Cart</h2>';
echo '<a href="index.php">Continue Shopping</a>';

if (!empty($_SESSION['cart'])) {
    echo '<table>';
    echo '<tr><th>Product Name</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>';
    
    $total = 0;
    foreach ($_SESSION['cart'] as $product_id => $item) {
        $subtotal = $item['price'] * $item['quantity'];
        $total += $subtotal;

        echo '<tr>';
        echo '<td>' . $item['name'] . '</td>';
        echo '<td>$' . number_format($item['price'], 2) . '</td>';
        echo '<td><form method="post" action="cart.php"><input type="hidden" name="product_id" value="' . $product_id . '"><input type="number" name="quantity" min="1" max="99" value="' . $item['quantity'] . '"><button type="submit">Update</button></form></td>';
        echo '<td>$' . number_format($subtotal, 2) . '</td>';
        echo '<td><a href="cart.php?remove=' . $product_id . '">Remove</a></td>';
        echo '</tr>';
    }
    
    echo '<tr><th colspan="3">Total:</th><td>$' . number_format($total, 2) . '</td><td><a href="checkout.php">Checkout</a></td></tr>';
    echo '</table>';
} else {
    echo "Your cart is empty.";
}

$conn->close();
?>


<?php
session_start();

if (empty($_SESSION['cart'])) {
    header("Location: index.php");
    exit();
}

include('db_connection.php');

// Display checkout form
echo '<h2>Checkout</h2>';
echo '<form method="post" action="process_order.php">';
echo '<label for="name">Name:</label><br>';
echo '<input type="text" id="name" name="name" required><br>';
echo '<label for="email">Email:</label><br>';
echo '<input type="email" id="email" name="email" required><br>';
echo '<label for="address">Address:</label><br>';
echo '<input type="text" id="address" name="address" required><br>';
echo '<button type="submit">Place Order</button>';
echo '</form>';

$conn->close();
?>


<?php
session_start();

include('db_connection.php');

// Check if cart is empty
if (empty($_SESSION['cart'])) {
    header("Location: index.php");
    exit();
}

// Get user input
$name = $_POST['name'];
$email = $_POST['email'];
$address = $_POST['address'];

// Insert order into database
$sql = "INSERT INTO orders (user_id, product_id, quantity) VALUES (?, ?, ?)";

$stmt = $conn->prepare($sql);
foreach ($_SESSION['cart'] as $product_id => $item) {
    $stmt->bind_param("isi", 1, $product_id, $item['quantity']);
    $stmt->execute();
}

// Clear cart
unset($_SESSION['cart']);

echo "Order placed successfully!";
header("Location: index.php");
exit();

$conn->close();
?>


<?php
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "your_database";

// Create connection
$conn = new mysqli($servername, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}
?>


<?php
// database connection
$host = 'localhost';
$user = 'root';
$password = '';
$dbname = 'ecommerce';

$conn = mysqli_connect($host, $user, $password, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Start session
session_start();
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>E-commerce</title>
    <style>
        .product {
            border: 1px solid #ddd;
            padding: 20px;
            margin: 20px;
            text-align: center;
        }
        .cart-item {
            border: 1px solid #ddd;
            padding: 20px;
            margin: 20px;
            text-align: left;
        }
    </style>
</head>
<body>

<?php
// Display products from database
$sql = "SELECT * FROM products";
$result = mysqli_query($conn, $sql);

if (mysqli_num_rows($result) > 0) {
    while ($row = mysqli_fetch_assoc($result)) {
        echo "<div class='product'>";
        echo "<img src='" . $row['image'] . "' alt='" . $row['name'] . "' width='100'><br>";
        echo "<h3>" . $row['name'] . "</h3>";
        echo "<p>Price: $" . number_format($row['price'], 2) . "</p>";
        echo "<p>Description: " . $row['description'] . "</p>";
        echo "<form action='index.php' method='post'>";
        echo "<input type='number' name='quantity' min='1' max='" . $row['stock'] . "' value='1'>";
        echo "<input type='hidden' name='product_id' value='" . $row['id'] . "'>";
        echo "<button type='submit'>Add to Cart</button>";
        echo "</form>";
        echo "</div>";
    }
}

// Add product to cart
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    if (isset($_POST['product_id']) && isset($_POST['quantity'])) {
        $product_id = $_POST['product_id'];
        $quantity = $_POST['quantity'];

        // Get product details from database
        $sql = "SELECT * FROM products WHERE id=" . $product_id;
        $result = mysqli_query($conn, $sql);
        $product = mysqli_fetch_assoc($result);

        if ($quantity <= $product['stock']) {
            // Add to cart or update quantity
            if (isset($_SESSION['cart'][$product_id])) {
                $_SESSION['cart'][$product_id]['quantity'] += $quantity;
            } else {
                $_SESSION['cart'][$product_id] = array(
                    'id' => $product_id,
                    'name' => $product['name'],
                    'price' => $product['price'],
                    'quantity' => $quantity
                );
            }
        } else {
            echo "<script>alert('Not enough stock!');</script>";
        }
    }
}

// View cart
if (isset($_GET['view_cart'])) {
    echo "<h2>Your Cart</h2>";
    if (!empty($_SESSION['cart'])) {
        $total = 0;
        foreach ($_SESSION['cart'] as $product) {
            echo "<div class='cart-item'>";
            echo "<p>" . $product['name'] . "</p>";
            echo "<p>Quantity: " . $product['quantity'] . "</p>";
            echo "<p>Price: $" . number_format($product['price'], 2) . "</p>";
            echo "<p>Total: $" . number_format($product['price'] * $product['quantity'], 2) . "</p>";
            $total += $product['price'] * $product['quantity'];
            echo "<a href='index.php?remove=" . $product['id'] . "'>Remove</a>";
            echo "</div>";
        }
        echo "<h3>Total: $" . number_format($total, 2) . "</h3>";
        echo "<a href='checkout.php'>Checkout</a>";
    } else {
        echo "<p>Your cart is empty!</p>";
    }
}

// Remove item from cart
if (isset($_GET['remove'])) {
    $product_id = $_GET['remove'];
    unset($_SESSION['cart'][$product_id]);
    header("Location: index.php?view_cart");
}
?>

</body>
</html>

<?php
// Checkout page
if (isset($_GET['checkout'])) {
    header("Location: checkout.php");
}

// Create products table if not exists
$sql = "CREATE TABLE IF NOT EXISTS products (
id INT(11) UNSIGNED AUTO_INCREMENT PRIMARY KEY,
name VARCHAR(255),
price DECIMAL(10, 2),
description TEXT,
stock INT(11)
)";

mysqli_query($conn, $sql);

// Sample data (run once if table is empty)
$sql = "SELECT COUNT(*) as count FROM products";
$result = mysqli_query($conn, $sql);
$row = mysqli_fetch_assoc($result);
if ($row['count'] == 0) {
    $sample_products = array(
        array("Product A", 29.99, "This is product A.", 10),
        array("Product B", 49.99, "This is product B.", 5),
        array("Product C", 19.99, "This is product C.", 8)
    );
    
    foreach ($sample_products as $product) {
        $sql = "INSERT INTO products (name, price, description, stock)
        VALUES ('" . $product[0] . "', '" . $product[1] . "', '" . $product[2] . "', '" . $product[3] . "')";
        mysqli_query($conn, $sql);
    }
}
?>

<?php
// Close database connection
mysqli_close($conn);
?>


<?php
session_start();
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Checkout</title>
</head>
<body>
    <?php if (empty($_SESSION['cart'])) { ?>
        <h2>Your cart is empty!</h2>
        <a href="index.php">Back to shop</a>
    <?php } else { ?>
        <h2>Enter Payment Details</h2>
        <form action="checkout.php" method="post">
            <label for="name">Name:</label>
            <input type="text" id="name" name="name" required><br>

            <label for="email">Email:</label>
            <input type="email" id="email" name="email" required><br>

            <label for="card_number">Card Number:</label>
            <input type="number" id="card_number" name="card_number" required><br>

            <label for="expiry_date">Expiry Date:</label>
            <input type="month" id="expiry_date" name="expiry_date" required><br>

            <button type="submit">Complete Purchase</button>
        </form>

        <?php
        if ($_SERVER["REQUEST_METHOD"] == "POST") {
            // Process payment (simulated)
            echo "<h2>Payment Received!</h2>";
            print_r($_SESSION['cart']);
            
            // Clear cart
            unset($_SESSION['cart']);
            
            // Redirect to thank you page or home page
            header("Location: index.php");
        }
        ?>
    <?php } ?>

</body>
</html>


<?php
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'your_database_name';

$conn = new mysqli($host, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}
?>


<?php
include('db_connection.php');

function fetch_products() {
    global $conn;
    $sql = "SELECT * FROM products";
    $result = $conn->query($sql);
    return $result;
}

$products = fetch_products();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Product List</title>
    <style>
        /* Add your CSS styles here */
        .product-container {
            padding: 20px;
            margin: 10px;
            border: 1px solid #ddd;
            border-radius: 5px;
        }
    </style>
</head>
<body>
    <?php while ($row = $products->fetch_assoc()) { ?>
        <div class="product-container">
            <h2><?php echo $row['name']; ?></h2>
            <p><?php echo $row['description']; ?></p>
            <p>Price: $<?php echo number_format($row['price'], 2); ?></p>
            <form action="add_to_cart.php" method="post">
                <input type="hidden" name="product_id" value="<?php echo $row['id']; ?>">
                <input type="number" name="quantity" min="1" max="<?php echo $row['stock']; ?>" value="1">
                <button type="submit">Add to Cart</button>
            </form>
        </div>
    <?php } ?>
</body>
</html>


<?php
session_start();
include('db_connection.php');

if (isset($_POST['product_id']) && isset($_SESSION['user_id'])) {
    $product_id = $_POST['product_id'];
    $quantity = $_POST['quantity'];
    
    // Check if the product is already in the cart
    $check_sql = "SELECT * FROM orders WHERE product_id = ? AND user_id = ?";
    $stmt = $conn->prepare($check_sql);
    $stmt->bind_param("ii", $product_id, $_SESSION['user_id']);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        // Update quantity
        $update_sql = "UPDATE orders SET quantity = ? WHERE product_id = ? AND user_id = ?";
        $stmt = $conn->prepare($update_sql);
        $stmt->bind_param("iii", $quantity, $product_id, $_SESSION['user_id']);
        $stmt->execute();
    } else {
        // Insert new order
        $insert_sql = "INSERT INTO orders (product_id, user_id, quantity, total_price) 
                      VALUES (?, ?, ?, ?)";
        $price_sql = "SELECT price FROM products WHERE id = ?";
        $stmt_price = $conn->prepare($price_sql);
        $stmt_price->bind_param("i", $product_id);
        $stmt_price->execute();
        $price_result = $stmt_price->get_result();
        $price_row = $price_result->fetch_assoc();
        
        $total_price = $quantity * $price_row['price'];
        
        $stmt = $conn->prepare($insert_sql);
        $stmt->bind_param("iid", $product_id, $_SESSION['user_id'], $quantity, $total_price);
        $stmt->execute();
    }
    
    header("Location: cart.php");
    exit();
}
?>


<?php
session_start();
include('db_connection.php');

function fetch_cart() {
    global $conn;
    if (isset($_SESSION['user_id'])) {
        $sql = "SELECT o.*, p.name, p.price 
                FROM orders o 
                JOIN products p ON o.product_id = p.id 
                WHERE o.user_id = ?";
        $stmt = $conn->prepare($sql);
        $stmt->bind_param("i", $_SESSION['user_id']);
        $stmt->execute();
        return $stmt->get_result();
    }
    return false;
}

$cart_items = fetch_cart();
$total = 0;
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
    <style>
        /* Add your CSS styles here */
        .cart-container {
            padding: 20px;
            margin: 10px;
            border: 1px solid #ddd;
            border-radius: 5px;
        }
    </style>
</head>
<body>
    <?php if ($cart_items && $cart_items->num_rows > 0) { ?>
        <table>
            <tr>
                <th>Product</th>
                <th>Price</th>
                <th>Quantity</th>
                <th>Total</th>
                <th>Action</th>
            </tr>
            <?php while ($row = $cart_items->fetch_assoc()) { 
                $total += $row['quantity'] * $row['price'];
            ?>
            <tr>
                <td><?php echo $row['name']; ?></td>
                <td>$<?php echo number_format($row['price'], 2); ?></td>
                <td>
                    <form action="update_quantity.php" method="post">
                        <input type="hidden" name="order_id" value="<?php echo $row['order_id']; ?>">
                        <input type="number" name="quantity" min="1" max="10" value="<?php echo $row['quantity']; ?>">
                        <button type="submit">Update</button>
                    </form>
                </td>
                <td>$<?php echo number_format($row['total_price'], 2); ?></td>
                <td><a href="remove_from_cart.php?order_id=<?php echo $row['order_id']; ?>">Remove</a></td>
            </tr>
            <?php } ?>
        </table>
        <h3>Total: $<?php echo number_format($total, 2); ?></h3>
        <a href="checkout.php">Checkout</a>
    <?php } else { ?>
        <p>Your cart is empty.</p>
    <?php } ?>
</body>
</html>


<?php
session_start();
include('db_connection.php');

if (!isset($_SESSION['user_id'])) {
    header("Location: login.php");
    exit();
}

function get_cart_total() {
    global $conn;
    if (isset($_SESSION['user_id'])) {
        $sql = "SELECT SUM(total_price) as total 
                FROM orders 
                WHERE user_id = ?";
        $stmt = $conn->prepare($sql);
        $stmt->bind_param("i", $_SESSION['user_id']);
        $stmt->execute();
        $result = $stmt->get_result();
        return $result->fetch_assoc()['total'];
    }
    return 0;
}

$total = get_cart_total();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
</head>
<body>
    <h1>Checkout</h1>
    <form action="process_payment.php" method="post">
        <div>
            <label for="card_number">Card Number:</label>
            <input type="text" id="card_number" name="card_number" required>
        </div>
        <div>
            <label for="expiry_date">Expiry Date:</label>
            <input type="text" id="expiry_date" name="expiry_date" placeholder="MM/YY" required>
        </div>
        <div>
            <label for="cvv">CVV:</label>
            <input type="text" id="cvv" name="cvv" required>
        </div>
        <div>
            <label for="email">Email:</label>
            <input type="email" id="email" name="email" required>
        </div>
        <input type="hidden" name="total_amount" value="<?php echo $total; ?>">
        <button type="submit">Pay Now</button>
    </form>
</body>
</html>


<?php
session_start();
include('db_connection.php');

if (isset($_POST['total_amount']) && isset($_SESSION['user_id'])) {
    $total_amount = $_POST['total_amount'];
    
    // Here you would typically integrate with a payment gateway
    
    // For this example, we'll assume the payment was successful
    // You should add your own payment processing logic here
    
    // Update order status in database
    $update_sql = "UPDATE orders SET purchase_date = CURRENT_TIMESTAMP WHERE user_id = ?";
    $stmt = $conn->prepare($update_sql);
    $stmt->bind_param("i", $_SESSION['user_id']);
    $stmt->execute();
    
    header("Location: payment_success.php");
    exit();
} else {
    header("Location: checkout.php");
}
?>


<?php
session_start();
include('db_connection.php');

if (!isset($_SESSION['user_id'])) {
    header("Location: login.php");
    exit();
}

// Clear the cart
$delete_sql = "DELETE FROM orders WHERE user_id = ?";
$stmt = $conn->prepare($delete_sql);
$stmt->bind_param("i", $_SESSION['user_id']);
$stmt->execute();

?>

<!DOCTYPE html>
<html>
<head>
    <title>Payment Successful</title>
</head>
<body>
    <h1>Thank you for your purchase!</h1>
    <p>Your order has been processed successfully.</p>
    <a href="products.php">Continue Shopping</a>
</body>
</html>


<?php
session_start();
include('db_connection.php');

if (isset($_POST['order_id']) && isset($_SESSION['user_id'])) {
    $order_id = $_POST['order_id'];
    $quantity = $_POST['quantity'];
    
    $sql = "UPDATE orders SET quantity = ? WHERE order_id = ? AND user_id = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("iii", $quantity, $order_id, $_SESSION['user_id']);
    $stmt->execute();
    
    header("Location: cart.php");
    exit();
}
?>


<?php
session_start();
include('db_connection.php');

if (isset($_GET['order_id']) && isset($_SESSION['user_id'])) {
    $order_id = $_GET['order_id'];
    
    $sql = "DELETE FROM orders WHERE order_id = ? AND user_id = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("ii", $order_id, $_SESSION['user_id']);
    $stmt->execute();
    
    header("Location: cart.php");
    exit();
}
?>


<?php
// Database connection
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'shopping_cart';

$conn = new mysqli($host, $username, $password, $dbname);
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Get products from database
function get_products() {
    global $conn;
    $sql = "SELECT * FROM products";
    $result = $conn->query($sql);
    return $result;
}

// Add item to cart
if (isset($_POST['add_to_cart'])) {
    $product_id = $_POST['product_id'];
    $quantity = $_POST['quantity'];

    // Get product details
    $sql = "SELECT * FROM products WHERE id=$product_id";
    $result = $conn->query($sql);
    $row = $result->fetch_assoc();

    // Add to cart (using session)
    session_start();
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }
    
    $item = array(
        'id' => $product_id,
        'name' => $row['name'],
        'price' => $row['price'],
        'quantity' => $quantity
    );

    array_push($_SESSION['cart'], $item);
}

// View cart contents
function view_cart() {
    session_start();
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }
    return $_SESSION['cart'];
}

// Remove item from cart
if (isset($_GET['remove'])) {
    session_start();
    $id = $_GET['remove'];
    foreach ($_SESSION['cart'] as $key => $item) {
        if ($item['id'] == $id) {
            unset($_SESSION['cart'][$key]);
        }
    }
}

// Checkout process
if (isset($_POST['checkout'])) {
    session_start();
    $cart = $_SESSION['cart'];
    $total_price = 0;

    foreach ($cart as $item) {
        $total_price += ($item['price'] * $item['quantity']);
    }

    // Process payment here (you can integrate a payment gateway)
    echo "Total amount to pay: $" . number_format($total_price, 2);
}

// Display products
$products = get_products();
foreach ($products as $product) {
    echo "<div class='product'>";
    echo "<h3>" . $product['name'] . "</h3>";
    echo "<p>Price: $" . $product['price'] . "</p>";
    echo "<form method='post' action=''>
            <input type='hidden' name='product_id' value='" . $product['id'] . "'>
            <input type='number' name='quantity' min='1' value='1'>
            <button type='submit' name='add_to_cart'>Add to Cart</button>
          </form>";
    echo "</div>";
}

// Display cart
$cart = view_cart();
echo "<h2>Shopping Cart</h2>";
foreach ($cart as $item) {
    echo "<div class='cart-item'>";
    echo "<p>" . $item['name'] . "</p>";
    echo "<p>Quantity: " . $item['quantity'] . "</p>";
    echo "<p>Price: $" . $item['price'] . "</p>";
    echo "<a href='?remove=" . $item['id'] . "'>Remove</a>";
    echo "</div>";
}

// Checkout form
echo "<form method='post' action=''>";
echo "<h3>Shipping Information</h3>";
echo "<input type='text' name='name' placeholder='Name'>";
echo "<input type='email' name='email' placeholder='Email'>";
echo "<input type='text' name='address' placeholder='Address'>";
echo "<button type='submit' name='checkout'>Checkout</button>";
echo "</form>";
?>


<?php
// Database connection
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'purchase_db';

$conn = new mysqli($host, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Product class
class Product {
    public $id;
    public $name;
    public $description;
    public $price;
    public $stock;

    function __construct($id, $name, $description, $price, $stock) {
        $this->id = $id;
        $this->name = $name;
        $this->description = $description;
        $this->price = $price;
        $this->stock = $stock;
    }
}

// Order class
class Order {
    public $order_id;
    public $user_id;
    public $total_amount;
    public $payment_status;
    public $created_at;

    function __construct($order_id, $user_id, $total_amount, $payment_status, $created_at) {
        $this->order_id = $order_id;
        $this->user_id = $user_id;
        $this->total_amount = $total_amount;
        $this->payment_status = $payment_status;
        $this->created_at = $created_at;
    }
}

// Order item class
class OrderItem {
    public $id;
    public $order_id;
    public $product_id;
    public $quantity;
    public $subtotal;

    function __construct($id, $order_id, $product_id, $quantity, $subtotal) {
        $this->id = $id;
        $this->order_id = $order_id;
        $this->product_id = $product_id;
        $this->quantity = $quantity;
        $this->subtotal = $subtotal;
    }
}

// Database functions
function addProduct($name, $description, $price, $stock) {
    global $conn;
    $sql = "INSERT INTO products (name, description, price, stock) VALUES (?, ?, ?, ?)";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("ssds", $name, $description, $price, $stock);
    return $stmt->execute();
}

function updateProduct($id, $name, $description, $price, $stock) {
    global $conn;
    $sql = "UPDATE products SET name=?, description=?, price=?, stock=? WHERE id=?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("ssdsi", $name, $description, $price, $stock, $id);
    return $stmt->execute();
}

function deleteProduct($id) {
    global $conn;
    $sql = "DELETE FROM products WHERE id=?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("i", $id);
    return $stmt->execute();
}

function getProduct($id) {
    global $conn;
    $sql = "SELECT * FROM products WHERE id=?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("i", $id);
    $stmt->execute();
    $result = $stmt->get_result();
    return $result->fetch_assoc();
}

function getAllProducts() {
    global $conn;
    $sql = "SELECT * FROM products";
    $result = $conn->query($sql);
    return $result->fetch_all(MYSQLI_ASSOC);
}

// Order functions
function addOrder($user_id, $total_amount) {
    global $conn;
    $status = 'pending';
    $current_date = date('Y-m-d H:i:s');
    
    $sql = "INSERT INTO orders (user_id, total_amount, payment_status, created_at) VALUES (?, ?, ?, ?)";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("idsi", $user_id, $total_amount, $status, $current_date);
    return $stmt->execute();
}

function updateOrderStatus($order_id, $status) {
    global $conn;
    $sql = "UPDATE orders SET payment_status=? WHERE order_id=?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("si", $status, $order_id);
    return $stmt->execute();
}

function getOrderById($order_id) {
    global $conn;
    $sql = "SELECT * FROM orders WHERE order_id=?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("i", $order_id);
    $stmt->execute();
    $result = $stmt->get_result();
    return $result->fetch_assoc();
}

function getAllOrders() {
    global $conn;
    $sql = "SELECT * FROM orders";
    $result = $conn->query($sql);
    return $result->fetch_all(MYSQLI_ASSOC);
}

// Example usage
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Add a new product
    if (isset($_POST['add_product'])) {
        $name = $_POST['name'];
        $description = $_POST['description'];
        $price = $_POST['price'];
        $stock = $_POST['stock'];
        
        addProduct($name, $description, $price, $stock);
    }
    
    // Update an existing product
    if (isset($_POST['update_product'])) {
        $id = $_POST['id'];
        $name = $_POST['name'];
        $description = $_POST['description'];
        $price = $_POST['price'];
        $stock = $_POST['stock'];
        
        updateProduct($id, $name, $description, $price, $stock);
    }
    
    // Delete a product
    if (isset($_POST['delete_product'])) {
        $id = $_POST['id'];
        deleteProduct($id);
    }
}

// Get all products
$products = getAllProducts();

?>

<!DOCTYPE html>
<html>
<head>
    <title>Purchase System</title>
</head>
<body>
    <!-- Add product form -->
    <h2>Add Product</h2>
    <form method="post">
        Name: <input type="text" name="name"><br>
        Description: <textarea name="description"></textarea><br>
        Price: <input type="number" step="0.01" name="price"><br>
        Stock: <input type="number" name="stock"><br>
        <input type="submit" name="add_product" value="Add Product">
    </form>

    <!-- Update product form -->
    <h2>Update Product</h2>
    <form method="post">
        ID: <input type="number" name="id"><br>
        Name: <input type="text" name="name"><br>
        Description: <textarea name="description"></textarea><br>
        Price: <input type="number" step="0.01" name="price"><br>
        Stock: <input type="number" name="stock"><br>
        <input type="submit" name="update_product" value="Update Product">
    </form>

    <!-- Delete product form -->
    <h2>Delete Product</h2>
    <form method="post">
        ID: <input type="number" name="id"><br>
        <input type="submit" name="delete_product" value="Delete Product">
    </form>

    <!-- Display products -->
    <h2>Products List</h2>
    <?php if (!empty($products)): ?>
        <table border="1">
            <tr>
                <th>ID</th>
                <th>Name</th>
                <th>Description</th>
                <th>Price</th>
                <th>Stock</th>
            </tr>
            <?php foreach ($products as $product): ?>
                <tr>
                    <td><?php echo $product['id']; ?></td>
                    <td><?php echo $product['name']; ?></td>
                    <td><?php echo $product['description']; ?></td>
                    <td><?php echo $product['price']; ?></td>
                    <td><?php echo $product['stock']; ?></td>
                </tr>
            <?php endforeach; ?>
        </table>
    <?php endif; ?>

    <!-- Add to cart functionality -->
    <?php foreach ($products as $product): ?>
        <form method="post" action="add_to_cart.php">
            <input type="hidden" name="id" value="<?php echo $product['id']; ?>">
            Quantity: <input type="number" name="quantity" min="1" max="<?php echo $product['stock']; ?>" value="1"><br>
            <input type="submit" value="Add to Cart">
        </form>
    <?php endforeach; ?>

    <!-- Display cart -->
    <?php if (isset($_SESSION['cart'])): ?>
        <h2>Your Cart</h2>
        <table border="1">
            <tr>
                <th>Product ID</th>
                <th>Name</th>
                <th>Quantity</th>
                <th>Price</th>
                <th>Total</th>
            </tr>
            <?php foreach ($_SESSION['cart'] as $item): ?>
                <tr>
                    <td><?php echo $item['id']; ?></td>
                    <td><?php echo getProduct($item['id'])['name']; ?></td>
                    <td><?php echo $item['quantity']; ?></td>
                    <td><?php echo getProduct($item['id'])['price']; ?></td>
                    <td><?php echo $item['subtotal']; ?></td>
                </tr>
            <?php endforeach; ?>
        </table>
    <?php endif; ?>

    <!-- Checkout button -->
    <?php if (isset($_SESSION['cart'])): ?>
        <form method="post" action="checkout.php">
            <input type="submit" value="Checkout">
        </form>
    <?php endif; ?>
</body>
</html>


<?php
// Start the session
session_start();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
    <link rel="stylesheet" type="text/css" href="style.css">
</head>
<body>
    <?php include_once('functions.php'); ?>

    <!-- Display products -->
    <?php
        $products = array(
            1 => array(
                'name' => 'Product 1',
                'price' => 29.99,
                'description' => 'This is product 1.',
                'image' => 'product1.jpg'
            ),
            2 => array(
                'name' => 'Product 2',
                'price' => 49.99,
                'description' => 'This is product 2.',
                'image' => 'product2.jpg'
            ),
            // Add more products as needed
        );

        foreach ($products as $id => $product) {
            echo '<div class="product">';
            echo '<h3>' . $product['name'] . '</h3>';
            echo '<img src="' . $product['image'] . '" alt="' . $product['name'] . '">';
            echo '<p>Price: $' . number_format($product['price'], 2) . '</p>';
            echo '<p>' . $product['description'] . '</p>';
            echo '<a href="add_to_cart.php?id=' . $id . '">Add to Cart</a>';
            echo '</div>';
        }
    ?>

    <!-- Add to cart functionality -->
    <?php
        if (isset($_GET['id'])) {
            $id = $_GET['id'];
            if (!isset($_SESSION['cart'])) {
                $_SESSION['cart'] = array();
            }

            if (isset($_SESSION['cart'][$id])) {
                $_SESSION['cart'][$id]['quantity']++;
            } else {
                $_SESSION['cart'][$id] = array(
                    'product_id' => $id,
                    'quantity' => 1
                );
            }
        }
    ?>

    <!-- View cart -->
    <?php
        if (isset($_SESSION['cart'])) {
            echo '<h2>Your Cart</h2>';
            echo '<ul>';
            foreach ($_SESSION['cart'] as $item) {
                echo '<li>' . $products[$item['product_id']]['name'] . ' x' . $item['quantity'] . '</li>';
            }
            echo '</ul>';
        } else {
            echo '<p>Your cart is empty.</p>';
        }
    ?>

    <!-- Checkout -->
    <?php
        if (isset($_POST['checkout'])) {
            // Process checkout
            $order_total = 0;
            foreach ($_SESSION['cart'] as $item) {
                $order_total += $products[$item['product_id']]['price'] * $item['quantity'];
            }

            // Save order to database or process payment here
            echo '<h2>Order Confirmation</h2>';
            echo '<p>Your order has been placed successfully. Total amount: $' . number_format($order_total, 2) . '</p>';
        }
    ?>

    <!-- Payment processing -->
    <?php
        if (isset($_POST['payment'])) {
            // Process payment details here
            // This is a basic example and should be secured properly in production
            echo '<h2>Payment Received</h2>';
            echo '<p>Thank you for your payment. Your order will be processed shortly.</p>';
        }
    ?>

    <?php include_once('footer.php'); ?>
</body>
</html>



<?php
session_start();

if (isset($_GET['id'])) {
    $product_id = $_GET['id'];
    
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }
    
    if (isset($_SESSION['cart'][$product_id])) {
        $_SESSION['cart'][$product_id]['quantity']++;
    } else {
        $_SESSION['cart'][$product_id] = array(
            'product_id' => $product_id,
            'quantity' => 1
        );
    }
}

// Redirect back to the previous page
header('Location: index.php');
exit();
?>


<?php
session_start();

echo '<h2>Your Cart</h2>';
echo '<ul>';
foreach ($_SESSION['cart'] as $item) {
    echo '<li>' . $products[$item['product_id']]['name'] . ' x' . $item['quantity'] . '</li>';
}
echo '</ul>';

if (!empty($_SESSION['cart'])) {
    echo '<a href="checkout.php">Checkout</a>';
} else {
    echo '<p>Your cart is empty.</p>';
}
?>


<?php
session_start();

if (isset($_POST['submit'])) {
    // Process order here
    $order_total = 0;
    
    foreach ($_SESSION['cart'] as $item) {
        $order_total += $products[$item['product_id']]['price'] * $item['quantity'];
    }
    
    // Save order to database or process payment
    
    // Clear cart after purchase
    unset($_SESSION['cart']);
    
    header('Location: order_confirmation.php');
    exit();
}
?>

<h2>Checkout</h2>
<form method="post">
    <div class="checkout-form">
        <label for="name">Name:</label>
        <input type="text" id="name" name="name" required>
        
        <label for="email">Email:</label>
        <input type="email" id="email" name="email" required>
        
        <label for="phone">Phone:</label>
        <input type="tel" id="phone" name="phone">
        
        <label for="address">Address:</label>
        <textarea id="address" name="address" required></textarea>
        
        <button type="submit" name="submit">Place Order</button>
    </div>
</form>


<?php
session_start();

echo '<h2>Order Confirmation</h2>';
echo '<p>Thank you for your purchase!</p>';
// Display order details here
?>


<?php 
session_start();

if(isset($_POST['id']) && isset($_POST['quantity'])) {
    $product_id = $_POST['id'];
    $quantity = $_POST['quantity'];

    if(!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }

    // Check if product is already in cart
    if(array_key_exists($product_id, $_SESSION['cart'])) {
        $_SESSION['cart'][$product_id]['quantity'] += $quantity;
    } else {
        // Get product details from database
        include('db_connection.php');
        $result = mysqli_query($conn, "SELECT * FROM products WHERE id = '$product_id'");
        $row = mysqli_fetch_assoc($result);
        $_SESSION['cart'][$product_id] = array(
            'name' => $row['name'],
            'price' => $row['price'],
            'quantity' => $quantity
        );
    }
}

header("Location: index.php");
exit();
?>


<?php 
session_start();
include('db_connection.php');

if(empty($_SESSION['cart'])) {
    echo "Your cart is empty!";
} else {
    echo "<h2>Your Cart</h2>";
    echo "<table>";
    foreach ($_SESSION['cart'] as $id => $item) {
        echo "<tr>";
        echo "<td>".$item['name']."</td>";
        echo "<td>\$".$item['price']."</td>";
        echo "<td><input type='number' name='quantity_".$id."' min='0' value='".$item['quantity']."'></td>";
        echo "<td><button onclick=\"updateQuantity('".$_SESSION['cart'][$id]['name']."','".$id."')\">Update</button></td>";
        echo "<td><a href='remove_item.php?id=".$id."'>Remove</a></td>";
        echo "</tr>";
    }
    echo "</table>";
}
?>

<script>
function updateQuantity(name, id) {
    var quantity = prompt("Enter new quantity for " + name + ":");
    if(quantity > 0) {
        window.location.href = 'update_quantity.php?id=' + id + '&quantity=' + quantity;
    }
}
</script>

<a href="checkout.php">Proceed to Checkout</a>


<?php 
session_start();

if(isset($_GET['id'])) {
    $product_id = $_GET['id'];
    
    if(array_key_exists($product_id, $_SESSION['cart'])) {
        unset($_SESSION['cart'][$product_id]);
    }
}

header("Location: view_cart.php");
exit();
?>


<?php 
session_start();

if(isset($_GET['id']) && isset($_GET['quantity'])) {
    $product_id = $_GET['id'];
    $quantity = $_GET['quantity'];

    if(array_key_exists($product_id, $_SESSION['cart'])) {
        $_SESSION['cart'][$product_id]['quantity'] = max(0, $quantity);
    }
}

header("Location: view_cart.php");
exit();
?>


<?php 
session_start();

if(empty($_SESSION['cart'])) {
    echo "Your cart is empty!";
} else {
    // Display checkout form
    echo "<h2>Checkout</h2>";
    echo "<form action='process_checkout.php' method='post'>";
    echo "<label>Customer Name:</label><br>";
    echo "<input type='text' name='customer_name' required><br>";
    echo "<label>Email:</label><br>";
    echo "<input type='email' name='email' required><br>";
    echo "<label>Address:</label><br>";
    echo "<textarea name='address' required></textarea><br>";
    echo "<button type='submit'>Place Order</button>";
    echo "</form>";
}
?>


<?php 
session_start();
include('db_connection.php');

if(!empty($_SESSION['cart'])) {
    // Get customer information
    $customer_name = mysqli_real_escape_string($conn, $_POST['customer_name']);
    $email = mysqli_real_escape_string($conn, $_POST['email']);
    $address = mysqli_real_escape_string($conn, $_POST['address']);

    // Insert order into orders table
    $order_query = "INSERT INTO orders (customer_name, email, address, total_amount) VALUES ('$customer_name', '$email', '$address', '".calculate_total()."')";
    mysqli_query($conn, $order_query);
    
    $order_id = mysqli_insert_id($conn);

    // Insert order items into order_items table
    foreach ($_SESSION['cart'] as $item) {
        $product_id = $item['id'];
        $quantity = $item['quantity'];
        $price = $item['price'];

        $item_query = "INSERT INTO order_items (order_id, product_id, quantity, price) VALUES ('$order_id', '$product_id', '$quantity', '$price')";
        mysqli_query($conn, $item_query);
    }

    // Clear cart
    unset($_SESSION['cart']);
}

header("Location: thank_you.php");
exit();

function calculate_total() {
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += ($item['price'] * $item['quantity']);
    }
    return $total;
}
?>


<?php 
session_start();
?>

<h2>Thank You for Your Order!</h2>
<p>Your order has been received and will be processed shortly.</p>
<a href="index.php">Continue Shopping</a>


<?php
session_start();
// Database connection
$host = "localhost";
$user = "root";
$password = "";
$db_name = "purchase_system";

$conn = mysqli_connect($host, $user, $password, $db_name);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to get products
function getProducts() {
    global $conn;
    $query = "SELECT * FROM products";
    $result = mysqli_query($conn, $query);
    return $result;
}

// Function to add to cart
function addToCart($product_id) {
    global $conn;

    if (isset($_SESSION['cart'])) {
        $cart = $_SESSION['cart'];
        $quantity = isset($cart[$product_id]) ? $cart[$product_id] + 1 : 1;
        $_SESSION['cart'][$product_id] = $quantity;
    } else {
        $_SESSION['cart'] = array();
        $_SESSION['cart'][$product_id] = 1;
    }
}

// Function to update cart quantity
function updateCart($product_id, $quantity) {
    global $conn;
    $_SESSION['cart'][$product_id] = $quantity;
}

// Function to remove from cart
function removeFromCart($product_id) {
    global $conn;
    unset($_SESSION['cart'][$product_id]);
}

// Function to process checkout
function processCheckout() {
    global $conn;

    // Validate form inputs
    if (!isset($_POST['billing_name']) || !isset($_POST['email']) || !isset($_POST['address'])) {
        return false;
    }

    $billing_name = mysqli_real_escape_string($conn, $_POST['billing_name']);
    $email = mysqli_real_escape_string($conn, $_POST['email']);
    $address = mysqli_real_escape_string($conn, $_POST['address']);

    // Insert order into database
    $order_query = "INSERT INTO orders (billing_name, email, address, total_amount) VALUES ('$billing_name', '$email', '$address', '" . calculateTotal() . "')";
    $result = mysqli_query($conn, $order_query);

    if ($result) {
        // Get order ID
        $order_id = mysqli_insert_id($conn);
        
        // Insert order items into database
        foreach ($_SESSION['cart'] as $product_id => $quantity) {
            $item_query = "INSERT INTO order_items (order_id, product_id, quantity) VALUES ('$order_id', '$product_id', '$quantity')";
            mysqli_query($conn, $item_query);
        }

        // Clear cart
        $_SESSION['cart'] = array();
        
        return true;
    } else {
        return false;
    }
}

// Function to calculate total amount
function calculateTotal() {
    global $conn;

    $total = 0;
    foreach ($_SESSION['cart'] as $product_id => $quantity) {
        $query = "SELECT price FROM products WHERE id = '$product_id'";
        $result = mysqli_query($conn, $query);
        $row = mysqli_fetch_assoc($result);
        $total += $row['price'] * $quantity;
    }
    return $total;
}

// Function to display invoice
function displayInvoice() {
    global $conn;

    if (isset($_GET['order_id'])) {
        $order_id = $_GET['order_id'];
        
        // Get order details
        $query = "SELECT * FROM orders WHERE id = '$order_id'";
        $result = mysqli_query($conn, $query);
        $order = mysqli_fetch_assoc($result);

        // Get order items
        $item_query = "SELECT oi.quantity, p.name, p.price 
                      FROM order_items oi 
                      JOIN products p ON oi.product_id = p.id 
                      WHERE oi.order_id = '$order_id'";
        $items_result = mysqli_query($conn, $item_query);
        
        // Display invoice
        echo "<h2>Invoice</h2>";
        echo "<p>Billing Name: " . $order['billing_name'] . "</p>";
        echo "<p>Email: " . $order['email'] . "</p>";
        echo "<p>Address: " . $order['address'] . "</p>";
        echo "<p>Total Amount: $" . number_format($order['total_amount'], 2) . "</p>";

        echo "<h3>Order Items:</h3>";
        while ($item = mysqli_fetch_assoc($items_result)) {
            echo "<div>";
            echo "<p>" . $item['name'] . " x" . $item['quantity'] . " - $" . number_format($item['price'], 2) . "</p>";
            echo "</div>";
        }
    } else {
        echo "No order found.";
    }
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Purchase System</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 20px;
        }
        .product-container {
            border: 1px solid #ddd;
            padding: 10px;
            margin-bottom: 10px;
        }
        .cart-item {
            margin-bottom: 10px;
            padding: 5px;
            border: 1px solid #ddd;
        }
    </style>
</head>
<body>

<?php
// Check if action is set
if (isset($_GET['action'])) {
    switch ($_GET['action']) {
        case 'add_to_cart':
            addToCart($_POST['product_id']);
            header("Location: index.php");
            exit();
        case 'update_cart':
            updateCart($_POST['product_id'], $_POST['quantity']);
            header("Location: cart.php");
            exit();
        case 'remove_from_cart':
            removeFromCart($_POST['product_id']);
            header("Location: cart.php");
            exit();
        case 'checkout':
            if (processCheckout()) {
                header("Location: invoice.php?order_id=" . mysqli_insert_id($conn));
            } else {
                echo "Error processing checkout.";
            }
            exit();
    }
}

// Display products
echo "<h1>Products</h1>";
$products = getProducts();
while ($product = mysqli_fetch_assoc($products)) {
    echo "<div class='product-container'>";
    echo "<h3>" . $product['name'] . "</h3>";
    echo "<p>Price: $" . number_format($product['price'], 2) . "</p>";
    echo "<form action='index.php?action=add_to_cart' method='post'>";
    echo "<input type='hidden' name='product_id' value='" . $product['id'] . "'>";
    echo "<button type='submit'>Add to Cart</button>";
    echo "</form>";
    echo "</div>";
}
?>

<a href="cart.php">View Cart</a>

<?php
// Display cart items if any
if (isset($_SESSION['cart'])) {
    foreach ($_SESSION['cart'] as $product_id => $quantity) {
        // Get product details from database
        $query = "SELECT * FROM products WHERE id = '$product_id'";
        $result = mysqli_query($conn, $query);
        $product = mysqli_fetch_assoc($result);

        echo "<div class='cart-item'>";
        echo "<p>" . $product['name'] . "</p>";
        echo "<p>Quantity: " . $quantity . "</p>";
        echo "<form action='index.php?action=remove_from_cart' method='post'>";
        echo "<input type='hidden' name='product_id' value='" . $product_id . "'>";
        echo "<button type='submit'>Remove</button>";
        echo "</form>";
        echo "</div>";
    }
}
?>

<?php
// Display checkout form if cart is not empty
if (!empty($_SESSION['cart'])) {
    echo "<h2>Checkout</h2>";
    echo "<form action='index.php?action=checkout' method='post'>";
    echo "<label for='billing_name'>Billing Name:</label>";
    echo "<input type='text' id='billing_name' name='billing_name'><br><br>";
    
    echo "<label for='email'>Email:</label>";
    echo "<input type='email' id='email' name='email'><br><br>";
    
    echo "<label for='address'>Address:</label>";
    echo "<input type='text' id='address' name='address'><br><br>";
    
    echo "<button type='submit'>Place Order</button>";
    echo "</form>";
}
?>
</body>
</html>

<?php
// Close database connection
mysqli_close($conn);
?>


class Product {
    private $db;

    public function __construct($db) {
        $this->db = $db;
    }

    public function getAllProducts() {
        try {
            $stmt = $this->db->prepare("SELECT * FROM products");
            $stmt->execute();
            return $stmt->fetchAll(PDO::FETCH_ASSOC);
        } catch (PDOException $e) {
            die("Error: " . $e->getMessage());
        }
    }

    public function getProductById($id) {
        try {
            $stmt = $this->db->prepare("SELECT * FROM products WHERE id = ?");
            $stmt->execute([$id]);
            return $stmt->fetch(PDO::FETCH_ASSOC);
        } catch (PDOException $e) {
            die("Error: " . $e->getMessage());
        }
    }
}


class User {
    private $db;

    public function __construct($db) {
        $this->db = $db;
    }

    public function register($username, $password) {
        try {
            $hash = password_hash($password, PASSWORD_BCRYPT);
            $stmt = $this->db->prepare("INSERT INTO users (username, password_hash) VALUES (?, ?)");
            return $stmt->execute([$username, $hash]);
        } catch (PDOException $e) {
            die("Error: " . $e->getMessage());
        }
    }

    public function login($username, $password) {
        try {
            $stmt = $this->db->prepare("SELECT * FROM users WHERE username = ?");
            $stmt->execute([$username]);
            $user = $stmt->fetch(PDO::FETCH_ASSOC);
            
            if ($user && password_verify($password, $user['password_hash'])) {
                $_SESSION['user'] = [
                    'id' => $user['id'],
                    'username' => $user['username']
                ];
                return true;
            }
            return false;
        } catch (PDOException $e) {
            die("Error: " . $e->getMessage());
        }
    }

    public function logout() {
        session_unset();
        session_destroy();
    }

    public function getCurrentUser() {
        if (isset($_SESSION['user'])) {
            return $_SESSION['user'];
        }
        return null;
    }
}


class Cart {
    private $db;

    public function __construct($db) {
        $this->db = $db;
    }

    public function addToCart($productId, $quantity) {
        if (!isset($_SESSION['cart'])) {
            $_SESSION['cart'] = [];
        }
        
        $_SESSION['cart'][$productId] += $quantity;
        return true;
    }

    public function getCartItems() {
        if (isset($_SESSION['cart'])) {
            return $_SESSION['cart'];
        }
        return [];
    }

    public function updateCartItem($productId, $quantity) {
        if (!empty($quantity)) {
            $_SESSION['cart'][$productId] = $quantity;
        } else {
            unset($_SESSION['cart'][$productId]);
        }
        return true;
    }

    public function removeItemFromCart($productId) {
        if (isset($_SESSION['cart'][$productId])) {
            unset($_SESSION['cart'][$productId]);
            return true;
        }
        return false;
    }

    public function getCartTotal() {
        $total = 0.00;
        foreach ($this->getCartItems() as $product_id => $quantity) {
            $product = new Product($this->db);
            $item = $product->getProductById($product_id);
            if ($item) {
                $total += $item['price'] * $quantity;
            }
        }
        return number_format($total, 2, '.', '');
    }
}


function processPayment($amount) {
    // In a real application, this would interact with a payment gateway
    $transactionId = time() . rand(1000, 9999);
    return [
        'status' => 'success',
        'transaction_id' => $transactionId,
        'message' => 'Payment processed successfully'
    ];
}


class Order {
    private $db;

    public function __construct($db) {
        $this->db = $db;
    }

    public function createNewOrder($userId, $cartItems) {
        try {
            $transactionResult = processPayment($this->getCartTotal());
            
            if ($transactionResult['status'] === 'success') {
                // Insert order
                $stmt = $this->db->prepare("INSERT INTO orders (user_id, product_id, quantity, price, transaction_id) VALUES (?, ?, ?, ?, ?)");
                
                foreach ($cartItems as $productId => $quantity) {
                    $product = new Product($this->db);
                    $item = $product->getProductById($productId);
                    
                    if ($item) {
                        $stmt->execute([$userId, $item['id'], $quantity, $item['price'], $transactionResult['transaction_id']]);
                    }
                }

                // Insert order details
                $orderDetailsStmt = $this->db->prepare("INSERT INTO order_details (order_id, shipping_address) VALUES (?, ?)");
                $orderDetailsStmt->execute([$this->db->lastInsertId(), 'Default Address']);

                return true;
            }
            return false;
        } catch (PDOException $e) {
            die("Error: " . $e->getMessage());
        }
    }

    private function getCartTotal() {
        // Implement logic to calculate total from cart items
        return 100.00; // Example value
    }
}


session_start();
require_once 'db_connection.php';
require_once 'classes/Product.class.php';
require_once 'classes/User.class.php';
require_once 'classes/Cart.class.php';
require_once 'classes/Order.class.php';

$db = new PDO('mysql:host=localhost;dbname=your_database', 'username', 'password');


// Check if user is logged in
$user = new User($db);
if (!$user->getCurrentUser()) {
    header("Location: login.php");
    exit();
}

// Display cart contents
$cart = new Cart($db);
$cartItems = $cart->getCartItems();

if (empty($cartItems)) {
    echo "Your cart is empty!";
} else {
    // Process purchase
    $order = new Order($db);
    if ($order->createNewOrder($_SESSION['user']['id'], $cartItems)) {
        // Clear the cart
        unset($_SESSION['cart']);
        
        echo "Purchase completed successfully!";
    } else {
        echo "Error processing your order.";
    }
}


<?php
// Sample products array
$products = [
    ['id' => 1, 'name' => 'Laptop', 'price' => 999.99],
    ['id' => 2, 'name' => 'Smartphone', 'price' => 699.99],
    ['id' => 3, 'name' => 'Tablet', 'price' => 299.99],
];
?>


<?php
session_start();
include('products.php');
?>

<!DOCTYPE html>
<html>
<head>
    <title>Online Store</title>
</head>
<body>
    <h1>Products</h1>
    <?php foreach ($products as $product): ?>
        <div style="border: 1px solid #ccc; padding: 10px; margin: 5px;">
            <h3><?php echo $product['name']; ?></h3>
            <p>Price: $<?php echo number_format($product['price'], 2); ?></p>
            <form action="add_to_cart.php" method="post">
                <input type="hidden" name="product_id" value="<?php echo $product['id']; ?>">
                <input type="number" name="quantity" min="1" value="1">
                <button type="submit">Add to Cart</button>
            </form>
        </div>
    <?php endforeach; ?>

    <a href="view_cart.php">View Cart</a>
</body>
</html>


<?php
session_start();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <h1>Your Shopping Cart</h1>
    
    <?php if (!empty($_SESSION['cart'])): ?>
        <table border="1">
            <tr>
                <th>Product</th>
                <th>Price</th>
                <th>Quantity</th>
                <th>Total</th>
                <th>Action</th>
            </tr>
            
            <?php foreach ($_SESSION['cart'] as $item): ?>
                <tr>
                    <td><?php echo $item['name']; ?></td>
                    <td>$<?php echo number_format($item['price'], 2); ?></td>
                    <td><?php echo $item['quantity']; ?></td>
                    <td>$<?php echo number_format($item['total_price'], 2); ?></td>
                    <td>
                        <form action="add_to_cart.php" method="post">
                            <input type="hidden" name="product_id" value="<?php echo $item['id']; ?>">
                            <input type="hidden" name="remove" value="true">
                            <button type="submit">Remove</button>
                        </form>
                    </td>
                </tr>
            <?php endforeach; ?>
            
            <tr>
                <th colspan="3">Total:</th>
                <td>$<?php echo number_format($_SESSION['cart_total'], 2); ?></td>
                <td></td>
            </tr>
        </table>
        
        <a href="index.php">Continue Shopping</a> |
        <a href="process_purchase.php">Proceed to Checkout</a>
    <?php else: ?>
        <p>Your cart is empty.</p>
        <a href="index.php">Go back shopping</a>
    <?php endif; ?>
</body>
</html>


<?php
session_start();
include('products.php');

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $product_id = $_POST['product_id'];
    
    // Find the product in the products array
    foreach ($products as $index => $product) {
        if ($product['id'] == $product_id) {
            $product_index = $index;
            break;
        }
    }

    if (isset($_POST['remove'])) {
        // Remove item from cart
        unset($_SESSION['cart'][$product_id]);
        $_SESSION['cart_total'] -= $products[$product_index]['price'] * $_SESSION['cart'][$product_id]['quantity'];
        
        // Re-calculate total and remove empty entries
        $_SESSION['cart_total'] = number_format($_SESSION['cart_total'], 2);
        unset($_SESSION['cart'][$product_id]);
    } else {
        $quantity = $_POST['quantity'];
        
        if (!isset($_SESSION['cart'][$product_id])) {
            // Add new item to cart
            $_SESSION['cart'][$product_id] = [
                'id' => $products[$product_index]['id'],
                'name' => $products[$product_index]['name'],
                'price' => $products[$product_index]['price'],
                'quantity' => $quantity,
                'total_price' => $products[$product_index]['price'] * $quantity
            ];
        } else {
            // Update quantity of existing item
            $_SESSION['cart'][$product_id]['quantity'] += $quantity;
            $_SESSION['cart'][$product_id]['total_price'] = $_SESSION['cart'][$product_id]['price'] * $_SESSION['cart'][$product_id]['quantity'];
        }
        
        // Calculate total price
        $_SESSION['cart_total'] += $products[$product_index]['price'] * $quantity;
    }
    
    header('Location: view_cart.php');
}
?>


<?php
session_start();

if (!empty($_SESSION['cart'])) {
    // In a real application, you would connect to a database here
    $order_details = [
        'items' => $_SESSION['cart'],
        'total_amount' => $_SESSION['cart_total'],
        'order_date' => date('Y-m-d H:i:s')
    ];
    
    // Here you would typically insert this into your database
    
    // For this example, we'll just display the order confirmation
    echo "<h1>Order Confirmation</h1>";
    echo "<p>Your order has been processed!</p>";
    echo "<pre>" . print_r($order_details, true) . "</pre>";
    
    // Clear the cart
    unset($_SESSION['cart']);
    unset($_SESSION['cart_total']);
} else {
    echo "Your cart is empty.";
}
?>


<?php
// config.php - Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$database = 'shopping_cart';

$conn = mysqli_connect($host, $username, $password, $database);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// products.php - Product display page
?>
<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <?php
    // Display all products from database
    $result = mysqli_query($conn, "SELECT * FROM products");
    while ($row = mysqli_fetch_assoc($result)) {
        echo "<div>";
        echo "<h3>" . $row['product_name'] . "</h3>";
        echo "<p>Price: $" . number_format($row['price'], 2) . "</p>";
        echo "<form action='add_to_cart.php' method='post'>";
        echo "<input type='hidden' name='id' value='" . $row['id'] . "'>";
        echo "<input type='text' name='quantity' placeholder='Quantity'>";
        echo "<button type='submit'>Add to Cart</button>";
        echo "</form>";
        echo "</div>";
    }
    ?>
</body>
</html>

// add_to_cart.php - Add product to cart
session_start();

if (isset($_POST['id']) && isset($_POST['quantity'])) {
    $product_id = $_POST['id'];
    $quantity = $_POST['quantity'];

    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }

    $_SESSION['cart'][$product_id] = $quantity;

    header("Location: products.php");
}

// checkout.php - Checkout page
session_start();

if (empty($_SESSION['cart'])) {
    die("Your cart is empty!");
}

?>
<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
</head>
<body>
    <?php
    // Display cart contents and payment form
    echo "<h2>Your Cart</h2>";
    foreach ($_SESSION['cart'] as $product_id => $quantity) {
        $result = mysqli_query($conn, "SELECT * FROM products WHERE id = '$product_id'");
        $row = mysqli_fetch_assoc($result);
        echo "<div>";
        echo "<p>" . $row['product_name'] . "</p>";
        echo "<p>Quantity: " . $quantity . "</p>";
        echo "</div>";
    }
    ?>

    <h2>Payment Information</h2>
    <form action='process_payment.php' method='post'>
        <input type='text' name='card_name' placeholder='Name on Card' required><br>
        <input type='text' name='card_number' placeholder='Card Number' required><br>
        <input type='text' name='cvv' placeholder='CVV' required><br>
        <input type='text' name='expiry_date' placeholder='Expiry Date (MM/YY)' required><br>
        <button type='submit'>Complete Purchase</button>
    </form>
</body>
</html>

// process_payment.php - Process payment and finalize purchase
session_start();

if (!empty($_SESSION['cart'])) {
    // Simulate payment processing
    $success = true; // In real application, this would depend on payment gateway response

    if ($success) {
        foreach ($_SESSION['cart'] as $product_id => $quantity) {
            // Record purchase in orders table
            mysqli_query($conn, "INSERT INTO orders (product_id, user_id, purchase_date, status)
                                VALUES ('$product_id', '1', NOW(), 'paid')");

            // Deduct quantity from products table
            mysqli_query($conn, "UPDATE products SET quantity = quantity - $quantity WHERE id = '$product_id'");
        }

        unset($_SESSION['cart']);
        echo "Thank you for your purchase!";
    } else {
        echo "Payment failed. Please try again.";
    }
} else {
    echo "Your cart is empty!";
}

// Close database connection
mysqli_close($conn);
?>


<?php
session_start();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <h1>Welcome to Our Store</h1>
    
    <?php
    // Sample product data
    $products = array(
        array('id' => 1, 'name' => 'Product 1', 'description' => 'Description for Product 1', 'price' => 29.99),
        array('id' => 2, 'name' => 'Product 2', 'description' => 'Description for Product 2', 'price' => 49.99),
        array('id' => 3, 'name' => 'Product 3', 'description' => 'Description for Product 3', 'price' => 19.99)
    );
    
    foreach ($products as $product) {
        echo "<div class='product'>";
        echo "<h2>{$product['name']}</h2>";
        echo "<p>{$product['description']}</p>";
        echo "<p>Price: \${$product['price']}</p>";
        echo "<form action='add_to_cart.php' method='post'>";
        echo "<input type='hidden' name='id' value='{$product['id']}'>";
        echo "<input type='hidden' name='name' value='{$product['name']}'>";
        echo "<input type='hidden' name='description' value='{$product['description']}'>";
        echo "<input type='hidden' name='price' value='{$product['price']}'>";
        echo "<button type='submit'>Add to Cart</button>";
        echo "</form>";
        echo "</div>";
    }
    ?>
    
    <a href="view_cart.php">View Cart</a>
</body>
</html>


<?php
session_start();

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $id = $_POST['id'];
    $name = $_POST['name'];
    $description = $_POST['description'];
    $price = $_POST['price'];
    
    // Initialize the cart if it doesn't exist
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }
    
    // Add item to cart or update quantity
    if (isset($_SESSION['cart'][$id])) {
        $_SESSION['cart'][$id]['quantity']++;
    } else {
        $_SESSION['cart'][$id] = array(
            'id' => $id,
            'name' => $name,
            'description' => $description,
            'price' => $price,
            'quantity' => 1
        );
    }
    
    header('Location: view_cart.php');
    exit();
}
?>


<?php
session_start();

if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

$total_price = 0;
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <h1>Your Shopping Cart</h1>
    
    <?php if (empty($_SESSION['cart'])): ?>
        <p>Your cart is empty.</p>
    <?php else: ?>
        <table border="1">
            <tr>
                <th>Product Name</th>
                <th>Description</th>
                <th>Price</th>
                <th>Quantity</th>
                <th>Total</th>
                <th>Action</th>
            </tr>
            
            <?php foreach ($_SESSION['cart'] as $item): ?>
                <?php
                    $total = $item['price'] * $item['quantity'];
                    $total_price += $total;
                ?>
                
                <tr>
                    <td><?php echo $item['name']; ?></td>
                    <td><?php echo $item['description']; ?></td>
                    <td>$<?php echo number_format($item['price'], 2); ?></td>
                    <td><?php echo $item['quantity']; ?></td>
                    <td>$<?php echo number_format($total, 2); ?></td>
                    <td>
                        <form action="remove_from_cart.php" method="post">
                            <input type="hidden" name="id" value="<?php echo $item['id']; ?>">
                            <button type="submit">Remove</button>
                        </form>
                    </td>
                </tr>
            <?php endforeach; ?>
            
            <tr>
                <td colspan="4" align="right"><strong>Total:</strong></td>
                <td colspan="2">$<?php echo number_format($total_price, 2); ?></td>
            </tr>
        </table>
        
        <a href="checkout.php">Proceed to Checkout</a> |
        <a href="index.php">Continue Shopping</a>
    <?php endif; ?>
</body>
</html>


<?php
session_start();

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $id = $_POST['id'];
    
    if (isset($_SESSION['cart'][$id])) {
        unset($_SESSION['cart'][$id]);
    }
    
    header('Location: view_cart.php');
    exit();
}
?>


<?php
session_start();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
</head>
<body>
    <?php if (!empty($_SESSION['cart'])): ?>
        <h1>Checkout</h1>
        
        <form action="process_checkout.php" method="post">
            <table border="1">
                <tr>
                    <th>Product Name</th>
                    <th>Description</th>
                    <th>Price</th>
                    <th>Quantity</th>
                    <th>Total</th>
                </tr>
                
                <?php
                $total_price = 0;
                foreach ($_SESSION['cart'] as $item) {
                    $total = $item['price'] * $item['quantity'];
                    $total_price += $total;
                    
                    echo "<tr>";
                    echo "<td>{$item['name']}</td>";
                    echo "<td>{$item['description']}</td>";
                    echo "<td>\${$item['price']}</td>";
                    echo "<td>{$item['quantity']}</td>";
                    echo "<td>\${$total}</td>";
                    echo "</tr>";
                }
                ?>
                
                <tr>
                    <td colspan="4" align="right"><strong>Total:</strong></td>
                    <td>\$<?php echo number_format($total_price, 2); ?></td>
                </tr>
            </table>
            
            <h2>Shipping Information</h2>
            <input type="text" name="name" placeholder="Name">
            <br><br>
            <input type="email" name="email" placeholder="Email">
            <br><br>
            <input type="text" name="address" placeholder="Address">
            <br><br>
            <button type="submit">Place Order</button>
        </form>
    <?php else: ?>
        <p>Your cart is empty. Please add items to your cart first.</p>
        <a href="index.php">Back to Shopping</a>
    <?php endif; ?>
</body>
</html>


<?php
session_start();

if (!isset($_SESSION['user_id'])) {
    header("Location: login.php");
    exit();
}

$product_id = $_POST['product_id'];

// Add to cart logic here
?>


<?php
session_start();

if (!isset($_SESSION['user_id'])) {
    header("Location: login.php");
    exit();
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Checkout</title>
</head>
<body>
    <h2>Checkout</h2>
    <form action="process_checkout.php" method="post">
        <div>
            <label for="name">Name:</label>
            <input type="text" id="name" name="name" required>
        </div>
        <div>
            <label for="email">Email:</label>
            <input type="email" id="email" name="email" required>
        </div>
        <div>
            <label for="address">Address:</label>
            <input type="text" id="address" name="address" required>
        </div>
        <div>
            <label for="card_number">Card Number:</label>
            <input type="text" id="card_number" name="card_number" required>
        </div>
        <button type="submit">Purchase</button>
    </form>
</body>
</html>



<?php
session_start();

if (!isset($_SESSION['user_id'])) {
    header("Location: login.php");
    exit();
}

$user_id = $_SESSION['user_id'];
$name = $_POST['name'];
$email = $_POST['email'];
$address = $_POST['address'];
$card_number = $_POST['card_number'];

// Process payment and save order here

header("Location: thank_you.php");
exit();
?>



<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Thank You</title>
</head>
<body>
    <h2>Thank You for Your Purchase!</h2>
    <p>Your order has been successfully processed.</p>
    <a href="index.php">Back to Home Page</a>
</body>
</html>



<?php
$servername = "localhost";
$username = "root";
$password = "";
$dbname = "your_database_name";

// Create connection
$conn = mysqli_connect($servername, $username, $password, $dbname);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}
?>


<?php
include('include.php');
?>

<!DOCTYPE html>
<html>
<head>
    <title>Product Catalog</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
        }
        .product {
            border: 1px solid #ddd;
            padding: 10px;
            margin-bottom: 20px;
        }
        .add-to-cart {
            background-color: #4CAF50;
            color: white;
            padding: 10px 20px;
            text-decoration: none;
            border-radius: 4px;
        }
    </style>
</head>
<body>
    <h1>Product Catalog</h1>

    <?php
    // Get all products from the database
    $result = mysqli_query($conn, "SELECT * FROM products");
    
    while ($row = mysqli_fetch_assoc($result)) {
        echo "<div class='product'>";
        echo "<h2>" . $row['name'] . "</h2>";
        echo "<p>Price: $" . number_format($row['price'], 2) . "</p>";
        echo "<p>Description: " . $row['description'] . "</p>";
        echo "<a href='add_to_cart.php?id=" . $row['id'] . "' class='add-to-cart'>Add to Cart</a>";
        echo "</div>";
    }
    
    mysqli_close($conn);
    ?>

    <a href="view_cart.php">View Cart</a>
</body>
</html>


<?php
session_start();
include('include.php');

// Get product details
$product_id = $_GET['id'];
$result = mysqli_query($conn, "SELECT * FROM products WHERE id=$product_id");
$product = mysqli_fetch_assoc($result);

// Add to cart
if (isset($_SESSION['cart'])) {
    $found = false;
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['id'] == $product_id) {
            $item['quantity']++;
            $found = true;
            break;
        }
    }
    if (!$found) {
        array_push($_SESSION['cart'], array(
            'id' => $product_id,
            'name' => $product['name'],
            'price' => $product['price'],
            'quantity' => 1
        ));
    }
} else {
    $_SESSION['cart'] = array();
    array_push($_SESSION['cart'], array(
        'id' => $product_id,
        'name' => $product['name'],
        'price' => $product['price'],
        'quantity' => 1
    ));
}

header("Location: view_cart.php");
exit();
?>


<?php
session_start();
include('include.php');
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
        }
        .cart-item {
            border: 1px solid #ddd;
            padding: 10px;
            margin-bottom: 20px;
        }
        .total-price {
            font-weight: bold;
            color: #333;
            margin-top: 20px;
        }
        .checkout-btn {
            background-color: #4CAF50;
            color: white;
            padding: 10px 20px;
            text-decoration: none;
            border-radius: 4px;
            display: block;
            width: 150px;
            margin-top: 20px;
        }
    </style>
</head>
<body>
    <h1>Shopping Cart</h1>

    <?php
    if (isset($_SESSION['cart']) && count($_SESSION['cart']) > 0) {
        $total = 0;
        foreach ($_SESSION['cart'] as $item) {
            echo "<div class='cart-item'>";
            echo "<p>Name: " . $item['name'] . "</p>";
            echo "<p>Price: $" . number_format($item['price'], 2) . "</p>";
            echo "<p>Quantity: <input type='number' value='" . $item['quantity'] . "' min='1'></p>";
            echo "<a href='remove_from_cart.php?id=" . $item['id'] . "'>Remove</a>";
            echo "</div>";
            
            $total += ($item['price'] * $item['quantity']);
        }
        
        // Calculate tax (10%)
        $tax = 0.10 * $total;
        $grand_total = $total + $tax;
        
        echo "<div class='total-price'>";
        echo "Subtotal: $" . number_format($total, 2) . "<br>";
        echo "Tax: $" . number_format($tax, 2) . "<br>";
        echo "Grand Total: $" . number_format($grand_total, 2);
        echo "</div>";
        
        echo "<a href='checkout.php' class='checkout-btn'>Checkout</a>";
    } else {
        echo "Your cart is empty.";
        echo "<a href='catalog.php'>Continue shopping</a>";
    }
    ?>

</body>
</html>


<?php
session_start();
include('include.php');

// Get product ID to remove
$product_id = $_GET['id'];

// Update the cart session
foreach ($_SESSION['cart'] as $key => $item) {
    if ($item['id'] == $product_id) {
        unset($_SESSION['cart'][$key]);
        break;
    }
}

header("Location: view_cart.php");
exit();
?>


<?php
session_start();
include('include.php');

if (isset($_SESSION['cart']) && count($_SESSION['cart']) > 0) {
    $total = 0;
    
    foreach ($_SESSION['cart'] as $item) {
        $total += ($item['price'] * $item['quantity']);
    }
    
    // Calculate tax and grand total
    $tax = 0.10 * $total;
    $grand_total = $total + $tax;

    // Insert order into database
    foreach ($_SESSION['cart'] as $item) {
        $sql = "INSERT INTO orders (product_id, quantity, subtotal, tax, total) 
                VALUES (?, ?, ?, ?, ?)";
        
        $stmt = mysqli_prepare($conn, $sql);
        mysqli_stmt_bind_param($stmt, "iiddd", $item['id'], $item['quantity'],
                                ($item['price'] * $item['quantity']), $tax, $grand_total);
        
        mysqli_stmt_execute($stmt);
    }
    
    // Clear the cart
    unset($_SESSION['cart']);
} else {
    header("Location: catalog.php");
    exit();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Thank You!</title>
</head>
<body>
    <h1>Thank you for your purchase!</h1>
    
    <?php
    foreach ($_SESSION['cart'] as $item) {
        echo "<p>Product: " . $item['name'] . "</p>";
        echo "<p>Quantity: " . $item['quantity'] . "</p>";
        echo "<p>Price: $" . number_format($item['price'], 2) . "</p>";
    }
    
    echo "<p>Tax: $" . number_format($tax, 2) . "</p>";
    echo "<p>Total: $" . number_format($grand_total, 2) . "</p>";
    
    // Clear the cart
    unset($_SESSION['cart']);
    ?>
</body>
</html>


<!DOCTYPE html>
<html>
<head>
    <title>Product List</title>
</head>
<body>
    <h2>Products</h2>
    <?php
        // Sample product list
        $products = array(
            array('id' => 1, 'name' => 'Laptop', 'price' => 999.99),
            array('id' => 2, 'name' => 'Phone', 'price' => 499.99),
            array('id' => 3, 'name' => 'Tablet', 'price' => 299.99)
        );

        foreach ($products as $product) {
            echo "<div>";
            echo "<h3>{$product['name']}</h3>";
            echo "<p>Price: \${$product['price']}</p>";
            echo "<form action='add_to_cart.php' method='post'>";
            echo "<input type='hidden' name='id' value='{$product['id']}'>";
            echo "<input type='hidden' name='name' value='{$product['name']}'>";
            echo "<input type='hidden' name='price' value='{$product['price']}'>";
            echo "Quantity: <input type='text' name='quantity' value='1'><br>";
            echo "<input type='submit' name='add_to_cart' value='Add to Cart'>";
            echo "</form>";
            echo "</div>";
        }
    ?>
</body>
</html>


<?php
session_start();
if (isset($_POST['add_to_cart'])) {
    $id = $_POST['id'];
    $name = $_POST['name'];
    $price = $_POST['price'];
    $quantity = $_POST['quantity'];

    // Create a new cart item array
    $item = array(
        'id' => $id,
        'name' => $name,
        'price' => $price,
        'quantity' => $quantity
    );

    // Add the item to the cart session
    $_SESSION['cart'][$id] = $item;

    // Redirect back to products page
    header("Location: products.php");
    exit();
}
?>


<?php
session_start();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <h2>Your Shopping Cart</h2>
    
    <?php if (!empty($_SESSION['cart'])): ?>
        <table border='1'>
            <tr>
                <th>Product Name</th>
                <th>Price</th>
                <th>Quantity</th>
                <th>Total</th>
                <th>Action</th>
            </tr>
            
            <?php
            $total = 0;
            foreach ($_SESSION['cart'] as $item):
                $subtotal = $item['price'] * $item['quantity'];
                $total += $subtotal;
            ?>
                <tr>
                    <td><?php echo $item['name']; ?></td>
                    <td>$<?php echo number_format($item['price'], 2); ?></td>
                    <td><?php echo $item['quantity']; ?></td>
                    <td>$<?php echo number_format($subtotal, 2); ?></td>
                    <td>
                        <form action="remove_from_cart.php" method="post">
                            <input type="hidden" name="id" value="<?php echo $item['id']; ?>">
                            <input type="submit" name="remove_from_cart" value="Remove">
                        </form>
                    </td>
                </tr>
            <?php endforeach; ?>
            
        </table>
        
        <h3>Total: $<?php echo number_format($total, 2); ?></h3>
        
        <a href="checkout.php">Proceed to Checkout</a> |
        <a href="empty_cart.php">Empty Cart</a>
    <?php else: ?>
        <p>Your cart is empty.</p>
        <a href="products.php">Shop for more items</a>
    <?php endif; ?>

</body>
</html>


<?php
session_start();

if (isset($_POST['id'])) {
    $id = $_POST['id'];
    
    if (!empty($_SESSION['cart'][$id])) {
        unset($_SESSION['cart'][$id]);
    }
}

header("Location: view_cart.php");
exit();
?>


<?php
session_start();

unset($_SESSION['cart']);
// or session_unset();

header("Location: view_cart.php");
exit();
?>


<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
</head>
<body>
    <h2>Proceed to Checkout</h2>

    <?php if (!empty($_SESSION['cart'])): ?>
        <form action="process_checkout.php" method="post">
            <p>Please enter your details:</p>
            
            <label>Name:</label>
            <input type="text" name="name" required><br>
            
            <label>Email:</label>
            <input type="email" name="email" required><br>
            
            <label>Address:</label>
            <textarea name="address" required></textarea><br>
            
            <input type="submit" value="Place Order">
        </form>
    <?php else: ?>
        <p>Your cart is empty. Please add items to your cart before checking out.</p>
        <a href="products.php">Continue Shopping</a>
    <?php endif; ?>

</body>
</html>


<?php
session_start();
if (!empty($_SESSION['cart'])):
?>

<!DOCTYPE html>
<html>
<head>
    <title>Order Confirmation</title>
</head>
<body>
    <?php if ($_SERVER["REQUEST_METHOD"] == "POST"): ?>
        <h2>Thank you for your order!</h2>
        <p>Your order details:</p>
        
        <p>Name: <?php echo htmlspecialchars($_POST['name']); ?></p>
        <p>Email: <?php echo htmlspecialchars($_POST['email']); ?></p>
        <p>Address: <?php echo htmlspecialchars($_POST['address']); ?></p>
        
        <?php
            // Here you would typically connect to a database and save the order details
            // For this example, we'll just display the cart contents
        ?>
        
        <h3>Order Items:</h3>
        <table border='1'>
            <tr>
                <th>Product Name</th>
                <th>Price</th>
                <th>Quantity</th>
                <th>Total</th>
            </tr>
            
            <?php
            $total = 0;
            foreach ($_SESSION['cart'] as $item):
                $subtotal = $item['price'] * $item['quantity'];
                $total += $subtotal;
            ?>
                <tr>
                    <td><?php echo $item['name']; ?></td>
                    <td>$<?php echo number_format($item['price'], 2); ?></td>
                    <td><?php echo $item['quantity']; ?></td>
                    <td>$<?php echo number_format($subtotal, 2); ?></td>
                </tr>
            <?php endforeach; ?>
            
        </table>
        
        <h3>Grand Total: $<?php echo number_format($total, 2); ?></h3>
        
        <p>Your order has been received. We will contact you shortly to confirm your payment.</p>
        
        <?php
            // Empty the cart after checkout
            unset($_SESSION['cart']);
        ?>
    <?php endif; ?>

</body>
</html>

<?php else: ?>
    <script>alert("Your cart is empty!"); window.location.href = "products.php";</script>
<?php endif; ?>


<?php
// Start session
session_start();

// Check if cart is set in session
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Product database (you can replace this with a database connection later)
$products = array(
    1 => array('name' => 'Product 1', 'price' => 29.99, 'description' => 'Description for product 1'),
    2 => array('name' => 'Product 2', 'price' => 49.99, 'description' => 'Description for product 2'),
    3 => array('name' => 'Product 3', 'price' => 19.99, 'description' => 'Description for product 3')
);
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Shopping Cart</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
        }
        .product-list {
            display: flex;
            justify-content: space-between;
            flex-wrap: wrap;
        }
        .product-item {
            border: 1px solid #ddd;
            padding: 10px;
            margin: 10px;
            width: 250px;
        }
        .cart-item {
            display: flex;
            justify-content: space-between;
            margin-bottom: 10px;
            padding: 10px;
            border: 1px solid #ddd;
        }
    </style>
</head>
<body>
    <h1>Products</h1>
    
    <!-- Product list -->
    <div class="product-list">
        <?php foreach ($products as $id => $product): ?>
        <div class="product-item">
            <h3><?php echo $product['name']; ?></h3>
            <p><?php echo $product['description']; ?></p>
            <p>Price: $<?php echo number_format($product['price'], 2); ?></p>
            <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="get">
                <input type="hidden" name="action" value="add_to_cart">
                <input type="hidden" name="id" value="<?php echo $id; ?>">
                <button type="submit">Add to Cart</button>
            </form>
        </div>
        <?php endforeach; ?>
    </div>

    <!-- Checkout section -->
    <h2>Your Cart</h2>
    <?php if (!empty($_SESSION['cart'])): ?>
    <div class="cart">
        <?php foreach ($_SESSION['cart'] as $item): ?>
            <div class="cart-item">
                <div><?php echo $item['name']; ?></div>
                <div>Quantity: <?php echo $item['quantity']; ?></div>
                <div>Price: $<?php echo number_format($item['price'], 2); ?></div>
            </div>
        <?php endforeach; ?>
    </div>
    
    <h3>Total: $<?php echo number_format(array_sum(array_column($_SESSION['cart'], 'price')), 2); ?></h3>

    <form action="checkout.php" method="post">
        <input type="hidden" name="csrf_token" value="<?php echo isset($_SESSION['csrf_token']) ? $_SESSION['csrf_token'] : ''; ?>">
        <button type="submit">Checkout</button>
    </form>
    
<?php else: ?>
    <p>Your cart is empty.</p>
<?php endif; ?>

<?php
// Handle adding to cart
if (isset($_GET['action']) && $_GET['action'] == 'add_to_cart') {
    $id = intval($_GET['id']);
    if (isset($products[$id])) {
        $item = array(
            'id' => $id,
            'name' => $products[$id]['name'],
            'price' => $products[$id]['price'],
            'quantity' => 1
        );
        
        $_SESSION['cart'][] = $item;
    }
}
?>
</body>
</html>

<?php
// Generate CSRF token
if (!isset($_SESSION['csrf_token'])) {
    $_SESSION['csrf_token'] = bin2hex(random_bytes(32));
}
?>

Now create a checkout.php file with the following content:



<?php
// Initialize session
session_start();

// Database connection
$host = 'localhost';
$dbname = 'testdb';
$user = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $user, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}

// Add to cart functionality
if (isset($_GET['action']) && $_GET['action'] == 'add') {
    $item_id = $_GET['id'];
    
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }

    if (array_key_exists($item_id, $_SESSION['cart'])) {
        $_SESSION['cart'][$item_id]['quantity'] += 1;
    } else {
        $query = $conn->prepare("SELECT * FROM products WHERE id = ?");
        $query->execute(array($item_id));
        $product = $query->fetch(PDO::FETCH_ASSOC);
        
        if ($product) {
            $_SESSION['cart'][$item_id] = array(
                'name' => $product['name'],
                'price' => $product['price'],
                'quantity' => 1
            );
        }
    }
}

// Remove from cart functionality
if (isset($_GET['action']) && $_GET['action'] == 'remove') {
    $item_id = $_GET['id'];
    
    if (isset($_SESSION['cart'][$item_id])) {
        unset($_SESSION['cart'][$item_id]);
    }
}

// Display cart items
function displayCart() {
    global $conn;
    $total_price = 0;

    if (!empty($_SESSION['cart'])) {
        echo "<table border='1'>";
        echo "<tr><th>Item</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>";
        
        foreach ($_SESSION['cart'] as $item_id => $item) {
            $total = $item['price'] * $item['quantity'];
            $total_price += $total;
            
            echo "<tr>";
            echo "<td>" . $item['name'] . "</td>";
            echo "<td> $" . number_format($item['price'], 2) . "</td>";
            echo "<td><input type='number' value='" . $item['quantity'] . "' min='1'></td>";
            echo "<td> $" . number_format($total, 2) . "</td>";
            echo "<td><a href='cart.php?action=remove&id=" . $item_id . "'>Remove</a></td>";
            echo "</tr>";
        }
        
        echo "</table>";
        echo "<p>Total: $" . number_format($total_price, 2) . "</p>";
    } else {
        echo "Your cart is empty!";
    }
}

// Checkout process
if (isset($_POST['checkout'])) {
    $name = $_POST['name'];
    $email = $_POST['email'];
    $address = $_POST['address'];
    
    if (!empty($name) && !empty($email) && !empty($address)) {
        // Process payment here
        // For this example, we'll just simulate payment processing
        $payment_processed = true;
        
        if ($payment_processed) {
            // Save order to database
            try {
                $orderQuery = $conn->prepare("INSERT INTO orders (name, email, address, total_amount) VALUES (?, ?, ?, ?)");
                $orderQuery->execute(array($name, $email, $address, $total_price));
                
                $lastOrderId = $conn->lastInsertId();
                
                foreach ($_SESSION['cart'] as $item_id => $item) {
                    $orderItemQuery = $conn->prepare("INSERT INTO order_items (order_id, product_id, quantity, price) VALUES (?, ?, ?, ?)");
                    $orderItemQuery->execute(array($lastOrderId, $item_id, $item['quantity'], $item['price']));
                }
                
                // Clear cart
                unset($_SESSION['cart']);
                
                echo "Thank you for your order!";
            } catch(PDOException $e) {
                echo "Error: " . $e->getMessage();
            }
        }
    } else {
        echo "Please fill in all required fields.";
    }
}
?>


<?php
session_start();
require_once 'db_config.php';

// Fetch products from database
$sql = "SELECT * FROM products";
$stmt = $pdo->query($sql);
$products = $stmt->fetchAll(PDO::FETCH_ASSOC);

?>

<!DOCTYPE html>
<html>
<head>
    <title>Online Store</title>
    <style>
        /* Add your CSS styles here */
        .product-grid {
            display: grid;
            grid-template-columns: repeat(3, 1fr);
            gap: 20px;
            padding: 20px;
        }
        .product-item {
            border: 1px solid #ddd;
            padding: 15px;
            text-align: center;
        }
    </style>
</head>
<body>
    <h1>Welcome to Our Store</h1>
    <div class="product-grid">
        <?php foreach ($products as $product): ?>
            <div class="product-item">
                <h3><?php echo $product['name']; ?></h3>
                <p><?php echo $product['description']; ?></p>
                <p>Price: $<?php echo number_format($product['price'], 2); ?></p>
                <p>Available Quantity: <?php echo $product['quantity']; ?></p>
                <form action="add_to_cart.php" method="post">
                    <input type="hidden" name="product_id" value="<?php echo $product['id']; ?>">
                    <input type="number" name="quantity" min="1" max="<?php echo $product['quantity']; ?>" required>
                    <button type="submit">Add to Cart</button>
                </form>
            </div>
        <?php endforeach; ?>
    </div>
    <a href="cart.php">View Cart</a>
</body>
</html>


<?php
session_start();
require_once 'db_config.php';

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $product_id = $_POST['product_id'];
    $quantity = $_POST['quantity'];

    // Check if product exists in database
    $sql = "SELECT * FROM products WHERE id = ?";
    $stmt = $pdo->prepare($sql);
    $stmt->execute([$product_id]);
    $product = $stmt->fetch(PDO::FETCH_ASSOC);

    if ($product) {
        // Add or update cart session
        if (isset($_SESSION['cart'][$product_id])) {
            $_SESSION['cart'][$product_id]['quantity'] += $quantity;
        } else {
            $_SESSION['cart'][$product_id] = [
                'id' => $product_id,
                'name' => $product['name'],
                'price' => $product['price'],
                'quantity' => $quantity,
                'total' => 0
            ];
        }
    }
}

header("Location: index.php");
exit();


<?php
session_start();
require_once 'db_config.php';

function getCartTotal() {
    $total = 0;
    if (isset($_SESSION['cart'])) {
        foreach ($_SESSION['cart'] as $item) {
            $total += ($item['price'] * $item['quantity']);
        }
    }
    return number_format($total, 2);
}

?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <h1>Your Shopping Cart</h1>
    <?php if (isset($_SESSION['cart']) && count($_SESSION['cart']) > 0): ?>
        <table border="1">
            <tr>
                <th>Product Name</th>
                <th>Price</th>
                <th>Quantity</th>
                <th>Total</th>
                <th>Action</th>
            </tr>
            <?php foreach ($_SESSION['cart'] as $item): ?>
                <tr>
                    <td><?php echo $item['name']; ?></td>
                    <td>$<?php echo number_format($item['price'], 2); ?></td>
                    <td>
                        <form action="update_cart.php" method="post">
                            <input type="hidden" name="product_id" value="<?php echo $item['id']; ?>">
                            <input type="number" name="quantity" min="1" max="10" required value="<?php echo $item['quantity']; ?>">
                            <button type="submit">Update</button>
                        </form>
                    </td>
                    <td>$<?php echo number_format($item['price'] * $item['quantity'], 2); ?></td>
                    <td><a href="remove_from_cart.php?product_id=<?php echo $item['id']; ?>">Remove</a></td>
                </tr>
            <?php endforeach; ?>
        </table>
        <p>Subtotal: $<?php echo getCartTotal(); ?></p>
        <p>Tax (10%): $<?php echo number_format(getCartTotal() * 0.1, 2); ?></p>
        <p>Total: $<?php echo number_format(getCartTotal() * 1.1, 2); ?></p>
        <a href="checkout.php">Checkout</a> | <a href="index.php">Continue Shopping</a>
    <?php else: ?>
        <p>Your cart is empty.</p>
        <a href="index.php">Go back to shopping</a>
    <?php endif; ?>
</body>
</html>


<?php
session_start();
require_once 'db_config.php';

if (isset($_SESSION['cart']) && count($_SESSION['cart']) > 0):
?>

<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
</head>
<body>
    <h1>Checkout Form</h1>
    <form action="process_order.php" method="post">
        <div>
            <label for="name">Name:</label><br>
            <input type="text" id="name" name="name" required>
        </div>
        <div>
            <label for="email">Email:</label><br>
            <input type="email" id="email" name="email" required>
        </div>
        <div>
            <label for="phone">Phone:</label><br>
            <input type="tel" id="phone" name="phone" required>
        </div>
        <div>
            <label for="address">Address:</label><br>
            <textarea id="address" name="address" rows="5" cols="30" required></textarea>
        </div>
        <input type="hidden" name="cart" value="<?php echo serialize($_SESSION['cart']); ?>">
        <button type="submit">Place Order</button>
    </form>
</body>
</html>

<?php else: ?>
    <p>Your cart is empty. Please add products before checking out.</p>
    <a href="index.php">Go back to shopping</a>
<?php endif; ?>


<?php
session_start();
require_once 'db_config.php';

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $cart = unserialize($_POST['cart']);
    $name = $_POST['name'];
    $email = $_POST['email'];
    $phone = $_POST['phone'];
    $address = $_POST['address'];

    // Insert order into orders table
    $sql = "INSERT INTO orders (user_name, email, phone, address, total_amount) 
            VALUES (?, ?, ?, ?, ?)";
    $stmt = $pdo->prepare($sql);
    $totalAmount = 0;
    
    foreach ($cart as $item) {
        $totalAmount += ($item['price'] * $item['quantity']);
    }
    
    $stmt->execute([$name, $email, $phone, $address, $totalAmount]);
    $order_id = $pdo->lastInsertId();

    // Insert order details into order_details table
    foreach ($cart as $item) {
        $sql = "INSERT INTO order_details (order_id, product_id, quantity, price)
                VALUES (?, ?, ?, ?)";
        $stmt = $pdo->prepare($sql);
        $stmt->execute([$order_id, $item['id'], $item['quantity'], $item['price']]);
        
        // Update product quantities
        $updateSql = "UPDATE products SET quantity = quantity - ? WHERE id = ?";
        $updateStmt = $pdo->prepare($updateSql);
        $updateStmt->execute([$item['quantity'], $item['id']]);
    }

    // Clear cart session
    unset($_SESSION['cart']);

    header("Location: thank_you.php");
    exit();
}


<?php
session_start();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Thank You</title>
</head>
<body>
    <h1>Thank You for Your Order!</h1>
    <p>Your order has been successfully processed.</p>
    <a href="index.php">Continue Shopping</a>
</body>
</html>


<?php
session_start();
require_once 'db_config.php';

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $product_id = $_POST['product_id'];
    $quantity = $_POST['quantity'];

    if (isset($_SESSION['cart'][$product_id])) {
        $_SESSION['cart'][$product_id]['quantity'] = $quantity;
    }
}

header("Location: cart.php");
exit();


<?php
session_start();

if (isset($_GET['product_id'])) {
    $product_id = $_GET['product_id'];
    
    if (isset($_SESSION['cart'][$product_id])) {
        unset($_SESSION['cart'][$product_id]);
    }
}

header("Location: cart.php");
exit();


<?php
// Initialize session
session_start();

// Product list (you can replace this with database queries)
$products = array(
    array(
        'id' => 1,
        'name' => 'Product 1',
        'description' => 'Description for product 1',
        'price' => 29.99
    ),
    array(
        'id' => 2,
        'name' => 'Product 2',
        'description' => 'Description for product 2',
        'price' => 49.99
    ),
    // Add more products as needed
);

// Check if product is added to cart
if (isset($_GET['action']) && $_GET['action'] == 'add') {
    $productId = intval($_GET['id']);
    
    foreach ($products as $product) {
        if ($product['id'] == $productId) {
            // Add to cart
            if (!isset($_SESSION['cart'])) {
                $_SESSION['cart'] = array();
            }
            
            if (array_key_exists($productId, $_SESSION['cart'])) {
                $_SESSION['cart'][$productId]['quantity']++;
            } else {
                $_SESSION['cart'][$productId] = array(
                    'name' => $product['name'],
                    'price' => $product['price'],
                    'quantity' => 1
                );
            }
            
            break;
        }
    }
}

// Check if product is removed from cart
if (isset($_GET['action']) && $_GET['action'] == 'remove') {
    $productId = intval($_GET['id']);
    
    if (isset($_SESSION['cart'][$productId])) {
        unset($_SESSION['cart'][$productId]);
    }
}

// Process payment
if (isset($_POST['process_payment'])) {
    // Check if cart is not empty
    if (!empty($_SESSION['cart'])) {
        // Validate required fields
        $errors = array();
        
        if (empty($_POST['name'])) {
            $errors[] = 'Name is required';
        }
        if (empty($_POST['email'])) {
            $errors[] = 'Email is required';
        }
        if (empty($_POST['address'])) {
            $errors[] = 'Address is required';
        }
        
        if (empty($errors)) {
            // Simulate payment processing
            $transaction_id = time();
            $total_amount = number_format(calculate_total(), 2, '.', '');
            
            // Here you would typically integrate with a payment gateway
            // For this example, we'll assume the payment was successful
            
            // Store purchase information in session
            $_SESSION['purchase_info'] = array(
                'transaction_id' => $transaction_id,
                'total_amount' => $total_amount,
                'name' => $_POST['name'],
                'email' => $_POST['email'],
                'address' => $_POST['address']
            );
            
            // Clear cart
            unset($_SESSION['cart']);
            
            // Redirect to thank you page
            header('Location: thank_you.php');
            exit();
        }
    } else {
        $errors[] = 'Your cart is empty';
    }
}

// Calculate total amount in cart
function calculate_total() {
    $total = 0;
    
    foreach ($_SESSION['cart'] as $item) {
        $total += ($item['price'] * $item['quantity']);
    }
    
    return $total;
}
?>


<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
</head>
<body>
    <?php if (!empty($_SESSION['cart'])) { ?>
        <h1>Shopping Cart</h1>
        
        <table>
            <tr>
                <th>Product</th>
                <th>Price</th>
                <th>Quantity</th>
                <th>Total</th>
                <th>Action</th>
            </tr>
            
            <?php foreach ($_SESSION['cart'] as $id => $item) { ?>
                <tr>
                    <td><?php echo $item['name']; ?></td>
                    <td>$<?php echo number_format($item['price'], 2, '.', ''); ?></td>
                    <td><?php echo $item['quantity']; ?></td>
                    <td>$<?php echo number_format($item['price'] * $item['quantity'], 2, '.', ''); ?></td>
                    <td><a href="?action=remove&id=<?php echo $id; ?>">Remove</a></td>
                </tr>
            <?php } ?>
        </table>
        
        <p>Total: $<?php echo number_format(calculate_total(), 2, '.', ''); ?></p>
        
        <form action="" method="post">
            <h2>Payment Information</h2>
            <div>
                <label for="name">Name:</label><br>
                <input type="text" id="name" name="name" required>
            </div>
            
            <div>
                <label for="email">Email:</label><br>
                <input type="email" id="email" name="email" required>
            </div>
            
            <div>
                <label for="address">Address:</label><br>
                <input type="text" id="address" name="address" required>
            </div>
            
            <button type="submit" name="process_payment">Complete Purchase</button>
        </form>
    <?php } else { ?>
        <p>Your cart is empty.</p>
    <?php } ?>

    <?php if (!empty($errors)) { ?>
        <div class="error-messages">
            <?php foreach ($errors as $error) { ?>
                <p><?php echo htmlspecialchars($error, ENT_QUOTES, 'UTF-8'); ?></p>
            <?php } ?>
        </div>
    <?php } ?>
</body>
</html>


<?php
session_start();

// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'purchase';

// Create database connection
$conn = new mysqli($host, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Products table creation
$sql = "CREATE TABLE IF NOT EXISTS products (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255),
    price DECIMAL(10, 2),
    description TEXT,
    stock INT
)";

$conn->query($sql);

// Orders table creation
$sql = "CREATE TABLE IF NOT EXISTS orders (
    order_id INT AUTO_INCREMENT PRIMARY KEY,
    product_id INT,
    user_id INT,
    quantity INT,
    total_price DECIMAL(10, 2),
    order_date DATETIME
)";

$conn->query($sql);

// Add to cart functionality
if (isset($_GET['action']) && $_GET['action'] == 'add_to_cart') {
    $product_id = $_GET['id'];
    $product_quantity = 1;

    if (!empty($_SESSION['cart'])) {
        $is_product_added = false;
        foreach ($_SESSION['cart'] as $key => $value) {
            if ($value['id'] == $product_id) {
                $is_product_added = true;
                $_SESSION['cart'][$key]['quantity'] += $product_quantity;
                break;
            }
        }

        if (!$is_product_added) {
            $sql = "SELECT name, price FROM products WHERE id = $product_id";
            $result = $conn->query($sql);
            $row = $result->fetch_assoc();
            
            $_SESSION['cart'][] = array(
                'id' => $product_id,
                'name' => $row['name'],
                'price' => $row['price'],
                'quantity' => $product_quantity
            );
        }
    } else {
        $sql = "SELECT name, price FROM products WHERE id = $product_id";
        $result = $conn->query($sql);
        $row = $result->fetch_assoc();
        
        $_SESSION['cart'][] = array(
            'id' => $product_id,
            'name' => $row['name'],
            'price' => $row['price'],
            'quantity' => $product_quantity
        );
    }
}

// Checkout functionality
if (isset($_POST['checkout'])) {
    $total_price = 0;
    
    foreach ($_SESSION['cart'] as $item) {
        $total_price += ($item['price'] * $item['quantity']);
    }

    // Insert order into database
    $sql = "INSERT INTO orders (product_id, user_id, quantity, total_price, order_date)
            VALUES (?, ?, ?, ?, ?)";
    
    if ($stmt = $conn->prepare($sql)) {
        $current_user_id = 1; // Replace with actual user ID
        $order_date = date('Y-m-d H:i:s');
        
        foreach ($_SESSION['cart'] as $item) {
            $product_id = $item['id'];
            $quantity = $item['quantity'];
            
            $stmt->bind_param("iidi", $product_id, $current_user_id, $quantity, $total_price);
            $stmt->execute();
        }
        
        // Clear cart after purchase
        unset($_SESSION['cart']);
    }

    echo "Order processed successfully!";
}

// Display products
$sql = "SELECT * FROM products";
$result = $conn->query($sql);

echo "<h2>Products</h2>";
if ($result->num_rows > 0) {
    while ($row = $result->fetch_assoc()) {
        echo "<div class='product'>";
        echo "<h3>" . $row['name'] . "</h3>";
        echo "<p>Price: $" . number_format($row['price'], 2) . "</p>";
        echo "<p>Description: " . $row['description'] . "</p>";
        echo "<a href='?action=add_to_cart&id=" . $row['id'] . "'>Add to Cart</a>";
        echo "</div>";
    }
}

// Display cart
echo "<h2>Your Cart</h2>";
if (!empty($_SESSION['cart'])) {
    foreach ($_SESSION['cart'] as $item) {
        echo "<div class='cart-item'>";
        echo "<p>Item: " . $item['name'] . "</p>";
        echo "<p>Quantity: " . $item['quantity'] . "</p>";
        echo "<p>Price: $" . number_format($item['price'], 2) . "</p>";
        echo "</div>";
    }
    
    // Checkout form
    echo "<form method='post'>";
    echo "<input type='submit' name='checkout' value='Checkout'>";
    echo "</form>";
} else {
    echo "Your cart is empty!";
}

$conn->close();
?>


<?php
session_start();

// Products array (you can connect this to your database)
$products = [
    1 => ['name' => 'Product 1', 'price' => 29.99, 'description' => 'Description for Product 1'],
    2 => ['name' => 'Product 2', 'price' => 49.99, 'description' => 'Description for Product 2'],
    3 => ['name' => 'Product 3', 'price' => 19.99, 'description' => 'Description for Product 3']
];

// Initialize cart if not exists
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = [];
}

function addToCart($productId) {
    global $products;
    
    if (isset($products[$productId])) {
        if (!isset($_SESSION['cart'][$productId])) {
            $_SESSION['cart'][$productId] = ['quantity' => 1];
        } else {
            $_SESSION['cart'][$productId]['quantity']++;
        }
        return true;
    }
    return false;
}

function updateQuantity($productId, $quantity) {
    global $products;
    
    if (isset($products[$productId]) && is_numeric($quantity) && $quantity >= 1) {
        $_SESSION['cart'][$productId]['quantity'] = $quantity;
        return true;
    }
    return false;
}

function removeFromCart($productId) {
    if (isset($_SESSION['cart'][$productId])) {
        unset($_SESSION['cart'][$productId]);
        return true;
    }
    return false;
}

function calculateTotal() {
    global $products;
    
    $total = 0;
    foreach ($_SESSION['cart'] as $productId => $item) {
        if (isset($products[$productId])) {
            $total += $products[$productId]['price'] * $item['quantity'];
        }
    }
    return number_format($total, 2);
}

function processPayment() {
    // Here you would typically integrate with a payment gateway
    // For this example, we'll just display a confirmation message
    return "Payment processed successfully!";
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
    <style>
        body { font-family: Arial, sans-serif; }
        .product-list { margin-bottom: 20px; }
        .cart-item { margin: 10px 0; padding: 10px; border: 1px solid #ddd; }
    </style>
</head>
<body>

<?php if (!empty($_GET['action'])) : ?>
    <?php switch ($_GET['action']) :
        case 'add':
            $productId = intval($_GET['id']);
            addToCart($productId);
            break;
            
        case 'update':
            $productId = intval($_GET['id']);
            $quantity = intval($_GET['quantity']);
            updateQuantity($productId, $quantity);
            break;
            
        case 'remove':
            $productId = intval($_GET['id']);
            removeFromCart($productId);
            break;

        case 'checkout':
            echo processPayment();
            break;
    endswitch; ?>
<?php endif; ?>

<h2>Products</h2>
<div class="product-list">
    <?php foreach ($products as $id => $product) : ?>
        <div style="margin: 10px 0;">
            <h3><?php echo $product['name']; ?></h3>
            <p><?php echo $product['description']; ?></p>
            <p>Price: $<?php echo number_format($product['price'], 2); ?></p>
            <a href="?action=add&id=<?php echo $id; ?>">Add to Cart</a>
        </div>
    <?php endforeach; ?>
</div>

<h2>Your Cart</h2>
<div class="cart">
    <?php if (empty($_SESSION['cart'])) : ?>
        <p>Your cart is empty!</p>
    <?php else: ?>
        <?php foreach ($_SESSION['cart'] as $productId => $item) : ?>
            <?php $product = $products[$productId]; ?>
            <div class="cart-item">
                <h3><?php echo $product['name']; ?></h3>
                <p>Price: $<?php echo number_format($product['price'], 2); ?></p>
                <form method="get" action="?action=update&id=<?php echo $productId; ?>">
                    <input type="number" name="quantity" min="1" value="<?php echo $item['quantity']; ?>" style="width: 50px;">
                    <button type="submit">Update</button>
                </form>
                <a href="?action=remove&id=<?php echo $productId; ?>">Remove</a>
            </div>
        <?php endforeach; ?>
        
        <p>Subtotal: $<?php echo calculateTotal(); ?></p>
        <p>Taxes (10%): $<?php echo number_format(calculateTotal() * 0.1, 2); ?></p>
        <p>Total: $<?php echo number_format(calculateTotal() * 1.1, 2); ?></p>
        
        <form method="get" action="?action=checkout">
            <button type="submit">Checkout</button>
        </form>
    <?php endif; ?>
</div>

<p><a href="index.php">Back to Products</a></p>

</body>
</html>


<?php
// Connect to database
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}

// Get products from database
$stmt = $conn->query("SELECT * FROM products");
$products = $stmt->fetchAll(PDO::FETCH_ASSOC);

// Display products
echo "<table>";
foreach ($products as $product) {
    echo "<tr>";
    echo "<td>" . $product['id'] . "</td>";
    echo "<td>" . $product['name'] . "</td>";
    echo "<td>" . $product['description'] . "</td>";
    echo "<td>₹" . number_format($product['price'], 2) . "</td>";
    echo "<td>" . $product['quantity'] . " available</td>";
    echo "<td><form action='checkout.php' method='post'>";
    echo "<input type='hidden' name='product_id' value='" . $product['id'] . "'>";
    echo "<input type='number' name='quantity' min='1' max='" . $product['quantity'] . "' required>";
    echo "<button type='submit'>Buy Now</button></form></td>";
    echo "</tr>";
}
echo "</table>";
?>


<?php
session_start();
if (!isset($_SESSION['user_id'])) {
    header("Location: login.php");
    exit();
}

// Connect to database
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}

// Get product details
$product_id = $_POST['product_id'];
$quantity = $_POST['quantity'];

$stmt = $conn->prepare("SELECT * FROM products WHERE id = ?");
$stmt->execute([$product_id]);
$product = $stmt->fetch(PDO::FETCH_ASSOC);

if (!$product) {
    die("Product not found.");
}

// Calculate total price
$total_price = $product['price'] * $quantity;

// Process payment
try {
    // Start transaction
    $conn->beginTransaction();

    // Check if there is enough stock
    if ($product['quantity'] < $quantity) {
        throw new Exception("Insufficient stock.");
    }

    // Update product quantity
    $stmt = $conn->prepare("UPDATE products SET quantity = quantity - ? WHERE id = ?");
    $stmt->execute([$quantity, $product_id]);

    // Insert order
    $order_date = date('Y-m-d H:i:s');
    $stmt = $conn->prepare("INSERT INTO orders (user_id, order_date, total_amount) VALUES (?, ?, ?)");
    $stmt->execute([$_SESSION['user_id'], $order_date, $total_price]);
    $order_id = $conn->lastInsertId();

    // Insert order item
    $stmt = $conn->prepare("INSERT INTO order_items (order_id, product_id, quantity, price) VALUES (?, ?, ?, ?)");
    $stmt->execute([$order_id, $product_id, $quantity, $product['price']]);

    // Commit transaction
    $conn->commit();

    // Redirect to confirmation page
    header("Location: confirmation.php?order_id=" . $order_id);
    exit();
} catch(PDOException $e) {
    // Rollback transaction on error
    $conn->rollback();
    die("Error processing order: " . $e->getMessage());
}
?>


<?php
session_start();
if (!isset($_GET['order_id'])) {
    header("Location: index.php");
    exit();
}

// Connect to database
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}

// Get order details
$order_id = $_GET['order_id'];
$stmt = $conn->prepare("SELECT * FROM orders WHERE id = ?");
$stmt->execute([$order_id]);
$order = $stmt->fetch(PDO::FETCH_ASSOC);

if (!$order) {
    die("Order not found.");
}

echo "<h1>Thank you for your purchase!</h1>";
echo "<p>Your order has been processed successfully.</p>";
echo "<p>Order ID: " . $order['id'] . "</p>";
echo "<p>Total Amount: ₹" . number_format($order['total_amount'], 2) . "</p>";
?>


// login.php

session_start();

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Validate input
    $username = $_POST['username'];
    $password = $_POST['password'];

    // Connect to database
    try {
        $conn = new PDO("mysql:host=localhost;dbname=your_database_name", "your_username", "your_password");
        $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
    } catch(PDOException $e) {
        die("Connection failed: " . $e->getMessage());
    }

    // Check if user exists
    $stmt = $conn->prepare("SELECT * FROM users WHERE username = ?");
    $stmt->execute([$username]);
    $user = $stmt->fetch(PDO::FETCH_ASSOC);

    if ($user) {
        // Verify password
        if (password_verify($password, $user['password'])) {
            $_SESSION['user_id'] = $user['id'];
            header("Location: index.php");
            exit();
        } else {
            echo "Invalid username or password.";
        }
    } else {
        echo "Invalid username or password.";
    }
}

// Display login form
echo "<form method='post'>";
echo "<input type='text' name='username' placeholder='Username' required>";
echo "<input type='password' name='password' placeholder='Password' required>";
echo "<button type='submit'>Login</button>";
echo "</form>";


// register.php

session_start();

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Validate input
    $username = $_POST['username'];
    $email = $_POST['email'];
    $password = password_hash($_POST['password'], PASSWORD_DEFAULT);

    // Connect to database
    try {
        $conn = new PDO("mysql:host=localhost;dbname=your_database_name", "your_username", "your_password");
        $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
    } catch(PDOException $e) {
        die("Connection failed: " . $e->getMessage());
    }

    // Check if username already exists
    $stmt = $conn->prepare("SELECT * FROM users WHERE username = ?");
    $stmt->execute([$username]);
    if ($stmt->rowCount() > 0) {
        die("Username already exists.");
    }

    // Insert new user
    $stmt = $conn->prepare("INSERT INTO users (username, email, password) VALUES (?, ?, ?)");
    $stmt->execute([$username, $email, $password]);

    echo "Registration successful! Please login.";
}

// Display registration form
echo "<form method='post'>";
echo "<input type='text' name='username' placeholder='Username' required>";
echo "<input type='email' name='email' placeholder='Email' required>";
echo "<input type='password' name='password' placeholder='Password' required>";
echo "<button type='submit'>Register</button>";
echo "</form>";


<?php
// Initialize session
session_start();

// Function to add item to cart
function addToCart($item_id, $item_name, $price) {
    global $cart;

    // If cart doesn't exist, create it
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }

    // Check if item is already in cart
    $found = false;
    foreach ($_SESSION['cart'] as $key => $item) {
        if ($item['id'] == $item_id) {
            // Update quantity
            $_SESSION['cart'][$key]['quantity'] += 1;
            $found = true;
            break;
        }
    }

    // If item not found, add to cart
    if (!$found) {
        $_SESSION['cart'][] = array(
            'id' => $item_id,
            'name' => $item_name,
            'price' => $price,
            'quantity' => 1
        );
    }
}

// Function to update item quantity in cart
function updateQuantity($item_id, $new_quantity) {
    foreach ($_SESSION['cart'] as $key => $item) {
        if ($item['id'] == $item_id && $new_quantity > 0) {
            $_SESSION['cart'][$key]['quantity'] = $new_quantity;
        }
    }
}

// Function to delete item from cart
function deleteItem($item_id) {
    foreach ($_SESSION['cart'] as $key => $item) {
        if ($item['id'] == $item_id) {
            unset($_SESSION['cart'][$key]);
            // Re-index array
            $_SESSION['cart'] = array_values($_SESSION['cart']);
        }
    }
}

// Function to calculate total items in cart
function get_total_items() {
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += $item['quantity'];
    }
    return $total;
}

// Function to calculate total price of items in cart
function get_total_price() {
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += ($item['price'] * $item['quantity']);
    }
    return $total;
}

// Sample usage:
// Add item to cart
addToCart(1, 'Product 1', 19.99);
addToCart(2, 'Product 2', 29.99);

// Update quantity of item with id 1 to 3
updateQuantity(1, 3);

// Delete item from cart
deleteItem(2);

// Get total items and price
echo "Total Items: " . get_total_items(); // Output: Total Items: 3
echo "Total Price: $" . number_format(get_total_price(), 2); // Output: Total Price: $59.97

?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <!-- Display cart contents -->
    <?php if (isset($_SESSION['cart']) && count($_SESSION['cart']) > 0): ?>
        <h2>Your Shopping Cart</h2>
        <table border="1">
            <tr>
                <th>Item Name</th>
                <th>Price</th>
                <th>Quantity</th>
                <th>Total</th>
                <th>Action</th>
            </tr>
            <?php foreach ($_SESSION['cart'] as $item): ?>
                <tr>
                    <td><?php echo $item['name']; ?></td>
                    <td>$<?php echo number_format($item['price'], 2); ?></td>
                    <td><input type="number" value="<?php echo $item['quantity']; ?>" onchange="updateQuantity(<?php echo $item['id']; ?>, this.value)"></td>
                    <td>$<?php echo number_format($item['price'] * $item['quantity'], 2); ?></td>
                    <td><button onclick="deleteItem(<?php echo $item['id']; ?>)">Delete</button></td>
                </tr>
            <?php endforeach; ?>
        </table>
        <h3>Total: $<?php echo number_format(get_total_price(), 2); ?></h3>
    <?php else: ?>
        <p>Your cart is empty.</p>
    <?php endif; ?>

    <!-- Add items to cart -->
    <h2>Available Products</h2>
    <a href="#" onclick="addToCart(1, 'Product 1', 19.99)">Add Product 1 ($19.99)</a><br>
    <a href="#" onclick="addToCart(2, 'Product 2', 29.99)">Add Product 2 ($29.99)</a>

    <!-- Include JavaScript for dynamic updates -->
    <script>
        function addToCart(id, name, price) {
            fetch('cart.php?action=add&id=' + id + '&name=' + name + '&price=' + price)
                .then(response => response.text())
                .then(data => {
                    document.location.reload();
                });
        }

        function updateQuantity(id, quantity) {
            if (quantity > 0) {
                fetch('cart.php?action=update&id=' + id + '&quantity=' + quantity)
                    .then(response => response.text())
                    .then(data => {
                        document.location.reload();
                    });
            }
        }

        function deleteItem(id) {
            fetch('cart.php?action=delete&id=' + id)
                .then(response => response.text())
                .then(data => {
                    document.location.reload();
                });
        }
    </script>
</body>
</html>


<?php
// Connect to the database
$mysqli = new mysqli('localhost', 'username', 'password', 'database_name');

if ($mysqli->connect_errno) {
    echo "Failed to connect to MySQL: " . $mysqli->connect_error;
    exit();
}

// Query for all products
$result = $mysqli->query("SELECT * FROM products");

?>

<!DOCTYPE html>
<html>
<head>
    <title>Store</title>
    <style>
        /* Add your CSS styles here */
        body {
            font-family: Arial, sans-serif;
        }
        .product {
            border: 1px solid #ddd;
            padding: 10px;
            margin: 5px;
        }
    </style>
</head>
<body>
    <h1>Our Store</h1>

<?php
if ($result->num_rows > 0) {
    while($row = $result->fetch_assoc()) {
?>
    <div class="product">
        <h2><?php echo $row['name']; ?></h2>
        <p><?php echo $row['description']; ?></p>
        <p>Price: <?php echo $row['price']; ?> USD</p>
        <p>Available Quantity: <?php echo $row['quantity']; ?></p>
        <form action="add_to_cart.php" method="post">
            <input type="hidden" name="product_id" value="<?php echo $row['id']; ?>">
            <input type="number" name="quantity" min="1" max="<?php echo $row['quantity']; ?>" value="1">
            <button type="submit">Add to Cart</button>
        </form>
    </div>
<?php
    }
} else {
    echo "No products found.";
}
?>

</body>
</html>

<?php
$mysqli->close();
?>


<?php
session_start();

// Connect to the database
$mysqli = new mysqli('localhost', 'username', 'password', 'database_name');

if ($mysqli->connect_errno) {
    echo "Failed to connect to MySQL: " . $mysqli->connect_error;
    exit();
}

// Get product details
$product_id = $_POST['product_id'];
$quantity = $_POST['quantity'];

$result = $mysqli->query("SELECT * FROM products WHERE id=$product_id");
if ($result->num_rows > 0) {
    $product = $result->fetch_assoc();

    // Add to cart
    if (isset($_SESSION['cart'])) {
        if (array_key_exists($product_id, $_SESSION['cart'])) {
            $_SESSION['cart'][$product_id]['quantity'] += $quantity;
        } else {
            $_SESSION['cart'][$product_id] = array(
                'name' => $product['name'],
                'price' => $product['price'],
                'quantity' => $quantity
            );
        }
    } else {
        $_SESSION['cart'] = array(
            $product_id => array(
                'name' => $product['name'],
                'price' => $product['price'],
                'quantity' => $quantity
            )
        );
    }
}

header("Location: index.php");
exit();
?>


<?php
session_start();

// Connect to the database
$mysqli = new mysqli('localhost', 'username', 'password', 'database_name');

if ($mysqli->connect_errno) {
    echo "Failed to connect to MySQL: " . $mysqli->connect_error;
    exit();
}

?>

<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
    <style>
        /* Add your CSS styles here */
        body {
            font-family: Arial, sans-serif;
        }
        .cart-item {
            border: 1px solid #ddd;
            padding: 10px;
            margin: 5px;
        }
    </style>
</head>
<body>
    <h1>Shopping Cart</h1>

<?php
if (isset($_SESSION['cart']) && count($_SESSION['cart']) > 0) {
    $total = 0;

    foreach ($_SESSION['cart'] as $product_id => $item) {
        $total += $item['price'] * $item['quantity'];
?>

    <div class="cart-item">
        <h3><?php echo $item['name']; ?></h3>
        <p>Quantity: <?php echo $item['quantity']; ?></p>
        <p>Price: <?php echo $item['price']; ?> USD</p>
        <p>Total: <?php echo $item['price'] * $item['quantity']; ?> USD</p>
    </div>

<?php
    }

    // Display total price
    echo "<h2>Total Price: " . $total . " USD</h2>";
?>

    <form action="process_order.php" method="post">
        <label for="name">Name:</label><br>
        <input type="text" id="name" name="name" required><br>

        <label for="email">Email:</label><br>
        <input type="email" id="email" name="email" required><br>

        <label for="address">Address:</label><br>
        <input type="text" id="address" name="address" required><br>

        <button type="submit">Place Order</button>
    </form>

<?php
} else {
    echo "Your cart is empty.";
}
?>

</body>
</html>

<?php
$mysqli->close();
?>


<?php
session_start();

// Connect to the database
$mysqli = new mysqli('localhost', 'username', 'password', 'database_name');

if ($mysqli->connect_errno) {
    echo "Failed to connect to MySQL: " . $mysqli->connect_error;
    exit();
}

// Validate input data
if (empty($_POST['name']) || empty($_POST['email']) || empty($_POST['address'])) {
    header("Location: checkout.php");
    exit();
}

$name = mysqli_real_escape_string($mysqli, $_POST['name']);
$email = mysqli_real_escape_string($mysqli, $_POST['email']);
$address = mysqli_real_escape_string($mysqli, $_POST['address']);

if (isset($_SESSION['cart']) && count($_SESSION['cart']) > 0) {

    // Calculate total price
    $total_price = 0;
    foreach ($_SESSION['cart'] as $product_id => $item) {
        $total_price += $item['price'] * $item['quantity'];
    }

    // Insert order into database
    $result = $mysqli->query("INSERT INTO orders (name, email, address, total_price) VALUES ('$name', '$email', '$address', $total_price)");
    $order_id = $mysqli->insert_id;

    if ($result) {

        // Insert order details
        foreach ($_SESSION['cart'] as $product_id => $item) {
            $product_name = mysqli_real_escape_string($mysqli, $item['name']);
            $price = $item['price'];
            $quantity = $item['quantity'];
            $mysqli->query("INSERT INTO order_details (order_id, product_id, product_name, price, quantity) VALUES ($order_id, $product_id, '$product_name', $price, $quantity)");
        }

        // Clear the cart
        unset($_SESSION['cart']);

        // Redirect to thank you page
        header("Location: thankyou.php");
        exit();
    } else {
        echo "Error processing order: " . $mysqli->error;
    }
} else {
    header("Location: index.php");
}

$mysqli->close();
?>


<?php
session_start();

// Connect to the database
$mysqli = new mysqli('localhost', 'username', 'password', 'database_name');

if ($mysqli->connect_errno) {
    echo "Failed to connect to MySQL: " . $mysqli->connect_error;
    exit();
}

?>

<!DOCTYPE html>
<html>
<head>
    <title>Thank You</title>
    <style>
        /* Add your CSS styles here */
        body {
            font-family: Arial, sans-serif;
            text-align: center;
            padding: 50px;
        }
    </style>
</head>
<body>
    <h1>Thank You for Your Order!</h1>
    <p>Your order has been successfully processed.</p>
    <a href="index.php">Continue Shopping</a>

<?php
$mysqli->close();
?>


<?php
// database connection
include_once('db.php');

// session handling
session_start();

function addToCart($productId) {
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }
    
    if (isset($_SESSION['cart'][$productId])) {
        // increment quantity
        $_SESSION['cart'][$productId]['quantity']++;
    } else {
        // add new product to cart
        $query = "SELECT * FROM products WHERE id = '$productId'";
        $result = mysqli_query($GLOBALS['conn'], $query);
        if (mysqli_num_rows($result) > 0) {
            $row = mysqli_fetch_assoc($result);
            $_SESSION['cart'][$productId] = array(
                'id' => $row['id'],
                'name' => $row['name'],
                'price' => $row['price'],
                'quantity' => 1
            );
        }
    }
}

function removeFromCart($productId) {
    if (isset($_SESSION['cart'][$productId])) {
        unset($_SESSION['cart'][$productId]);
        $_SESSION['cart'] = array_values($_SESSION['cart']);
    }
}

function processPayment() {
    $orderNumber = time();
    $orderDate = date('Y-m-d H:i:s');
    
    // Check if cart is not empty
    if (!empty($_SESSION['cart'])) {
        foreach ($_SESSION['cart'] as $item) {
            // Process each item (e.g., deduct from inventory, etc.)
            // For this example, we'll just simulate successful payment
            
            $sql = "INSERT INTO orders 
                    VALUES('', '$orderNumber', '$orderDate', '$item[id]', '$_SESSION[user_id]', 1)";
            mysqli_query($GLOBALS['conn'], $sql);
        }
        
        unset($_SESSION['cart']);
        return true;
    } else {
        return false;
    }
}

function displayCart() {
    if (!empty($_SESSION['cart'])) {
        echo '<table>';
        foreach ($_SESSION['cart'] as $item) {
            echo "<tr>";
                echo "<td>{$item['name']}</td>";
                echo "<td>Quantity: {$item['quantity']}</td>";
                echo "<td>Price: \$" . number_format($item['price'], 2, '.', '') . "</td>";
                echo "<td><a href='cart.php?action=remove&id={$item['id']}'>Remove</a></td>";
            echo "</tr>";
        }
        echo '</table>';
    } else {
        echo "Your cart is empty!";
    }
}

function confirmOrder() {
    if (isset($_SESSION['last_order'])) {
        $order = $_SESSION['last_order'];
        echo "<h2>Thank you for your purchase!</h2>";
        echo "<p>Order Number: #{$order['order_number']}</p>";
        echo "<p>Date: {$order['order_date']}</p>";
        echo "<p>Total Items: " . count($order['items']) . "</p>";
        echo "<p>Total Price: \$" . number_format($order['total'], 2, '.', '') . "</p>";
    } else {
        echo "No order to confirm.";
    }
}

function displayOrders() {
    $sql = "SELECT * FROM orders WHERE user_id = '$_SESSION[user_id]'";
    $result = mysqli_query($GLOBALS['conn'], $sql);
    
    if (mysqli_num_rows($result) > 0) {
        echo '<h2>Your Past Orders</h2>';
        echo '<table>';
        while ($row = mysqli_fetch_assoc($result)) {
            echo "<tr>";
                echo "<td>Order #{$row['order_number']}</td>";
                echo "<td>Date: {$row['order_date']}</td>";
                echo "<td><a href='order.php?id={$row['id']}'>View Details</a></td>";
            echo "</tr>";
        }
        echo '</table>';
    } else {
        echo "No past orders found.";
    }
}
?>


<?php
session_start();
// Database connection
require_once 'db_connection.php';

// Get products from database
$query = "SELECT * FROM products";
$result = $conn->query($query);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Product List</title>
</head>
<body>
    <?php while ($row = $result->fetch_assoc()) { ?>
        <div class="product">
            <h2><?php echo $row['name']; ?></h2>
            <img src="<?php echo $row['image']; ?>" alt="<?php echo $row['name']; ?>">
            <p>Price: <?php echo '$'.$row['price']; ?></p>
            <form action="add_to_cart.php" method="post">
                <input type="hidden" name="product_id" value="<?php echo $row['id']; ?>">
                <input type="number" name="quantity" min="1" value="1">
                <button type="submit">Add to Cart</button>
            </form>
        </div>
    <?php } ?>

    <a href="cart.php">View Cart</a>
</body>
</html>


<?php
session_start();
$product_id = $_POST['product_id'];
$quantity = $_POST['quantity'];

// Initialize cart if not exists
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add product to cart
$_SESSION['cart'][$product_id] = $quantity;

header("Location: products.php");
exit();


<?php
session_start();
require_once 'db_connection.php';

$total = 0;
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <h1>Your Shopping Cart</h1>
    
    <?php if (!empty($_SESSION['cart'])) { ?>
        <table>
            <tr>
                <th>Product</th>
                <th>Quantity</th>
                <th>Total</th>
            </tr>
            <?php foreach ($_SESSION['cart'] as $product_id => $quantity) {
                $query = "SELECT * FROM products WHERE id=$product_id";
                $result = $conn->query($query);
                $row = $result->fetch_assoc();
                
                $total += $row['price'] * $quantity;
            ?>
            <tr>
                <td><?php echo $row['name']; ?></td>
                <td><?php echo $quantity; ?></td>
                <td><?php echo '$' . ($row['price'] * $quantity); ?></td>
            </tr>
            <?php } ?>
        </table>
        
        <h3>Total: <?php echo '$'.$total; ?></h3>
        <a href="checkout.php">Checkout</a>
    <?php } else { ?>
        <p>Your cart is empty</p>
        <a href="products.php">Back to Products</a>
    <?php } ?>

    <br>
    <a href="products.php">Continue Shopping</a>
</body>
</html>


<?php
session_start();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
</head>
<body>
    <?php if (!empty($_SESSION['cart'])) { ?>
        <h1> Checkout </h1>
        
        <form action="process_order.php" method="post">
            <div>
                <label for="name">Name:</label>
                <input type="text" id="name" name="name" required>
            </div>
            
            <div>
                <label for="email">Email:</label>
                <input type="email" id="email" name="email" required>
            </div>
            
            <div>
                <label for="address">Address:</label>
                <input type="text" id="address" name="address" required>
            </div>
            
            <div>
                <label for="card_number">Card Number:</label>
                <input type="number" id="card_number" name="card_number" required>
            </div>
            
            <button type="submit">Place Order</button>
        </form>
    <?php } else { ?>
        <p>Your cart is empty</p>
        <a href="products.php">Back to Products</a>
    <?php } ?>
</body>
</html>


<?php
session_start();
require_once 'db_connection.php';

// Get user input
$name = $_POST['name'];
$email = $_POST['email'];
$address = $_POST['address'];
$card_number = $_POST['card_number'];

// Calculate total amount
$total = 0;
foreach ($_SESSION['cart'] as $product_id => $quantity) {
    $query = "SELECT price FROM products WHERE id=$product_id";
    $result = $conn->query($query);
    $row = $result->fetch_assoc();
    
    $total += $row['price'] * $quantity;
}

// Insert order into database
$query = "INSERT INTO orders (name, email, address, total) VALUES (?, ?, ?, ?)";
$stmt = $conn->prepare($query);
$stmt->bind_param("sssd", $name, $email, $address, $total);
$stmt->execute();
$order_id = $stmt->insert_id;

// Insert order items
foreach ($_SESSION['cart'] as $product_id => $quantity) {
    $query = "SELECT price FROM products WHERE id=$product_id";
    $result = $conn->query($query);
    $row = $result->fetch_assoc();
    
    $item_total = $row['price'] * $quantity;
    
    $query = "INSERT INTO order_items (order_id, product_id, quantity, total) VALUES (?, ?, ?, ?)";
    $stmt = $conn->prepare($query);
    $stmt->bind_param("iiid", $order_id, $product_id, $quantity, $item_total);
    $stmt->execute();
}

// Clear cart
unset($_SESSION['cart']);

// Redirect to confirmation page
header("Location: order_confirmation.php?order_id=$order_id");
exit();


<?php
session_start();
$order_id = $_GET['order_id'];
?>

<!DOCTYPE html>
<html>
<head>
    <title>Order Confirmation</title>
</head>
<body>
    <h1>Thank you for your order!</h1>
    <p>Your order ID is: <?php echo $order_id; ?></p>
    <p>We will ship your items soon.</p>
    <a href="products.php">Continue Shopping</a>
</body>
</html>


<?php
// Replace with your database credentials
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}
?>


<?php
session_start();
?>


<?php
$products = array(
    array(
        'id' => 1,
        'name' => 'Product 1',
        'price' => 19.99,
        'description' => 'Description for Product 1'
    ),
    array(
        'id' => 2,
        'name' => 'Product 2',
        'price' => 29.99,
        'description' => 'Description for Product 2'
    ),
    // Add more products as needed
);
?>


<?php
include('products.php');

// Initialize cart if not set
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <h1>Welcome to the Store</h1>
    
    <!-- Display Products -->
    <?php foreach ($products as $product): ?>
        <div>
            <h2><?php echo $product['name']; ?></h2>
            <p><?php echo $product['description']; ?></p>
            <p>Price: <?php echo '$' . number_format($product['price'], 2); ?></p>
            <a href="add_to_cart.php?id=<?php echo $product['id']; ?>">Add to Cart</a>
        </div>
    <?php endforeach; ?>

    <!-- Display Cart -->
    <h2>Your Cart</h2>
    <?php if (empty($_SESSION['cart'])): ?>
        <p>Your cart is empty.</p>
    <?php else: ?>
        <ul>
            <?php foreach ($_SESSION['cart'] as $item): 
                $product = array_search($item['id'], array_column($products, 'id'));
                if ($product !== false) {
                    $product_details = $products[$product];
                }
            ?>
                <li><?php echo $product_details['name']; ?> - Quantity: <?php echo $item['quantity']; ?>
                    <a href="remove_from_cart.php?id=<?php echo $item['id']; ?>">Remove</a>
                </li>
            <?php endforeach; ?>
        </ul>
        <p>Total: <?php echo calculate_total(); ?></p>
        <a href="checkout.php">Proceed to Checkout</a>
    <?php endif; ?>

    <!-- Include Total Function -->
    <?php 
    function calculate_total() {
        $total = 0;
        foreach ($_SESSION['cart'] as $item) {
            global $products;
            $product_index = array_search($item['id'], array_column($products, 'id'));
            if ($product_index !== false) {
                $total += $products[$product_index]['price'] * $item['quantity'];
            }
        }
        return '$' . number_format($total, 2);
    }
    ?>
</body>
</html>


<?php
session_start();
include('products.php');

if (isset($_GET['id'])) {
    $product_id = $_GET['id'];
    
    // Check if the product exists
    $found_product = false;
    foreach ($products as $index => $product) {
        if ($product['id'] == $product_id) {
            $found_product = true;
            break;
        }
    }
    if (!$found_product) {
        die("Product not found.");
    }
    
    // Add to cart
    if (isset($_SESSION['cart'][$product_id])) {
        $_SESSION['cart'][$product_id]['quantity']++;
    } else {
        $_SESSION['cart'][$product_id] = array(
            'id' => $product_id,
            'quantity' => 1
        );
    }
}

header("Location: index.php");
exit();
?>


<?php
session_start();

if (isset($_GET['id'])) {
    $product_id = $_GET['id'];
    
    if (isset($_SESSION['cart'][$product_id])) {
        unset($_SESSION['cart'][$product_id]);
    }
}

header("Location: index.php");
exit();
?>


<?php
session_start();
include('products.php');

// Check if cart is empty
if (empty($_SESSION['cart'])) {
    header("Location: index.php");
    exit();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
</head>
<body>
    <h1>Checkout</h1>
    
    <!-- Display Cart Contents -->
    <?php foreach ($_SESSION['cart'] as $item): 
        $product_index = array_search($item['id'], array_column($products, 'id'));
        if ($product_index !== false) {
            $product_details = $products[$product_index];
        }
    ?>
        <div>
            <p><?php echo $product_details['name']; ?> - <?php echo $item['quantity']; ?></p>
        </div>
    <?php endforeach; ?>

    <!-- Checkout Form -->
    <h2>Shipping Information</h2>
    <form action="process_order.php" method="post">
        <input type="text" name="first_name" placeholder="First Name" required><br>
        <input type="text" name="last_name" placeholder="Last Name" required><br>
        <input type="email" name="email" placeholder="Email" required><br>
        <input type="text" name="address" placeholder="Address" required><br>
        <input type="text" name="city" placeholder="City" required><br>
        <input type="text" name="state" placeholder="State" required><br>
        <input type="text" name="zip_code" placeholder="ZIP Code" required><br>
        
        <button type="submit">Place Order</button>
    </form>
</body>
</html>


<?php
session_start();
include('products.php');

// Check if cart is empty
if (empty($_SESSION['cart'])) {
    header("Location: index.php");
    exit();
}

// Get form data
$first_name = $_POST['first_name'];
$last_name = $_POST['last_name'];
$email = $_POST['email'];
$address = $_POST['address'];
$city = $_POST['city'];
$state = $_POST['state'];
$zip_code = $_POST['zip_code'];

// Generate order ID
$order_id = uniqid();

// Calculate total
$total = 0;
foreach ($_SESSION['cart'] as $item) {
    $product_index = array_search($item['id'], array_column($products, 'id'));
    if ($product_index !== false) {
        $total += $products[$product_index]['price'] * $item['quantity'];
    }
}

// Store order in database
try {
    include('config.php'); // Include your database connection

    $stmt = $conn->prepare("
        INSERT INTO orders 
        (order_id, first_name, last_name, email, address, city, state, zip_code, total)
        VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)
    ");
    $stmt->execute(array(
        $order_id,
        $first_name,
        $last_name,
        $email,
        $address,
        $city,
        $state,
        $zip_code,
        $total
    ));

    // Store order details
    foreach ($_SESSION['cart'] as $item) {
        $product_index = array_search($item['id'], array_column($products, 'id'));
        if ($product_index !== false) {
            $price = $products[$product_index]['price'];
            $product_name = $products[$product_index]['name'];

            $stmt_details = $conn->prepare("
                INSERT INTO order_details 
                (order_id, product_id, product_name, quantity, price)
                VALUES (?, ?, ?, ?, ?)
            ");
            $stmt_details->execute(array(
                $order_id,
                $item['id'],
                $product_name,
                $item['quantity'],
                $price
            ));
        }
    }

    // Clear cart
    $_SESSION['cart'] = array();

    // Redirect to thank you page
    header("Location: index.php?order_id=$order_id");
    exit();
} catch (Exception $e) {
    echo "Error processing order: " . $e->getMessage();
}
?>


<?php
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'your_database';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    die("Could not connect to the database: " . $e->getMessage());
}
?>


<?php
// database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$db_name = 'purchase_system';

// connect to database
$conn = new mysqli($host, $username, $password, $db_name);

// check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// create products table
$sql = "CREATE TABLE IF NOT EXISTS products (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255),
    description TEXT,
    price DECIMAL(10, 2),
    quantity INT
)";

$conn->query($sql);

// create orders table
$sql = "CREATE TABLE IF NOT EXISTS orders (
    id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL(10, 2),
    purchase_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP
)";

$conn->query($sql);

// function to add item to cart
function addToCart($product_id, $quantity) {
    global $conn;
    
    // check if user is logged in
    if (!isset($_SESSION['user'])) {
        return "Please login to continue.";
    }
    
    $user_id = $_SESSION['user']['id'];
    
    // check product availability
    $sql = "SELECT quantity FROM products WHERE id = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("i", $product_id);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows > 0) {
        $row = $result->fetch_assoc();
        
        if ($quantity > $row['quantity']) {
            return "Not enough stock available.";
        }
        
        // add to cart
        $sql = "INSERT INTO orders (user_id, product_id, quantity, total_price) VALUES (?, ?, ?, ?)";
        $stmt = $conn->prepare($sql);
        $price_sql = "SELECT price FROM products WHERE id = ?";
        $price_stmt = $conn->prepare($price_sql);
        $price_stmt->bind_param("i", $product_id);
        $price_stmt->execute();
        $price_result = $price_stmt->get_result();
        $price_row = $price_result->fetch_assoc();
        $total_price = $quantity * $price_row['price'];
        
        $stmt->bind_param("iiid", $user_id, $product_id, $quantity, $total_price);
        if ($stmt->execute()) {
            return "Item added to cart successfully.";
        } else {
            return "Error adding item to cart.";
        }
    } else {
        return "Product not found.";
    }
}

// function to update quantity in cart
function updateCart($order_id, $quantity) {
    global $conn;
    
    // check if user is logged in
    if (!isset($_SESSION['user'])) {
        return "Please login to continue.";
    }
    
    // update quantity
    $sql = "UPDATE orders SET quantity = ? WHERE id = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("ii", $quantity, $order_id);
    
    if ($stmt->execute()) {
        return "Quantity updated successfully.";
    } else {
        return "Error updating quantity.";
    }
}

// function to remove item from cart
function removeFromCart($order_id) {
    global $conn;
    
    // check if user is logged in
    if (!isset($_SESSION['user'])) {
        return "Please login to continue.";
    }
    
    // delete order
    $sql = "DELETE FROM orders WHERE id = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("i", $order_id);
    
    if ($stmt->execute()) {
        return "Item removed from cart successfully.";
    } else {
        return "Error removing item from cart.";
    }
}

// function to purchase items
function purchaseItems() {
    global $conn;
    
    // check if user is logged in
    if (!isset($_SESSION['user'])) {
        return "Please login to continue.";
    }
    
    $user_id = $_SESSION['user']['id'];
    
    // get all orders for this user
    $sql = "SELECT * FROM orders WHERE user_id = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("i", $user_id);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows > 0) {
        // update product quantities
        while ($row = $result->fetch_assoc()) {
            $product_id = $row['product_id'];
            $quantity = $row['quantity'];
            
            $sql = "UPDATE products SET quantity = quantity - ? WHERE id = ?";
            $update_stmt = $conn->prepare($sql);
            $update_stmt->bind_param("ii", $quantity, $product_id);
            $update_stmt->execute();
        }
        
        // clear cart
        $sql = "DELETE FROM orders WHERE user_id = ?";
        $delete_stmt = $conn->prepare($sql);
        $delete_stmt->bind_param("i", $user_id);
        $delete_stmt->execute();
        
        return "Purchase completed successfully.";
    } else {
        return "Your cart is empty.";
    }
}

// function to display cart
function displayCart() {
    global $conn;
    
    // check if user is logged in
    if (!isset($_SESSION['user'])) {
        return "Please login to continue.";
    }
    
    $user_id = $_SESSION['user']['id'];
    
    // get all orders for this user
    $sql = "SELECT * FROM orders WHERE user_id = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("i", $user_id);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows > 0) {
        $cart_items = array();
        
        while ($row = $result->fetch_assoc()) {
            // get product details
            $sql = "SELECT name, price FROM products WHERE id = ?";
            $product_stmt = $conn->prepare($sql);
            $product_stmt->bind_param("i", $row['product_id']);
            $product_stmt->execute();
            $product_result = $product_stmt->get_result();
            $product_row = $product_result->fetch_assoc();
            
            $cart_item = array(
                'id' => $row['id'],
                'name' => $product_row['name'],
                'price' => $product_row['price'],
                'quantity' => $row['quantity'],
                'total_price' => $row['total_price']
            );
            
            array_push($cart_items, $cart_item);
        }
        
        return $cart_items;
    } else {
        return "Your cart is empty.";
    }
}

// function to calculate total price
function calculateTotal() {
    global $conn;
    
    // check if user is logged in
    if (!isset($_SESSION['user'])) {
        return 0;
    }
    
    $user_id = $_SESSION['user']['id'];
    
    // get sum of all total prices for this user
    $sql = "SELECT SUM(total_price) AS total FROM orders WHERE user_id = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("i", $user_id);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($row = $result->fetch_assoc()) {
        return $row['total'];
    } else {
        return 0;
    }
}

// function to login user
function loginUser($username, $password) {
    global $conn;
    
    // hash password
    $hashed_password = md5($password);
    
    // check if user exists
    $sql = "SELECT * FROM users WHERE username = ? AND password = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("ss", $username, $hashed_password);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows > 0) {
        $row = $result->fetch_assoc();
        
        // start session and store user details
        session_start();
        $_SESSION['user'] = array(
            'id' => $row['id'],
            'username' => $row['username']
        );
        
        return "Login successful.";
    } else {
        return "Invalid username or password.";
    }
}

// function to register user
function registerUser($username, $password) {
    global $conn;
    
    // check if user already exists
    $sql = "SELECT * FROM users WHERE username = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("s", $username);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows > 0) {
        return "Username already exists.";
    } else {
        // hash password
        $hashed_password = md5($password);
        
        // insert new user
        $sql = "INSERT INTO users (username, password) VALUES (?, ?)";
        $stmt = $conn->prepare($sql);
        $stmt->bind_param("ss", $username, $hashed_password);
        
        if ($stmt->execute()) {
            session_start();
            $_SESSION['user'] = array(
                'id' => $stmt->insert_id,
                'username' => $username
            );
            
            return "Registration successful.";
        } else {
            return "Error registering user.";
        }
    }
}

// main script
if (isset($_POST['action'])) {
    switch ($_POST['action']) {
        case 'login':
            $result = loginUser($_POST['username'], $_POST['password']);
            echo $result;
            break;
            
        case 'register':
            $result = registerUser($_POST['username'], $_POST['password']);
            echo $result;
            break;
            
        case 'add_to_cart':
            $result = addToCart($_POST['product_id'], $_POST['quantity']);
            echo $result;
            break;
            
        case 'update_cart':
            $result = updateCart($_POST['order_id'], $_POST['quantity']);
            echo $result;
            break;
            
        case 'remove_from_cart':
            $result = removeFromCart($_POST['order_id']);
            echo $result;
            break;
            
        case 'purchase':
            $result = purchaseItems();
            echo $result;
            break;
    }
}

// close database connection
$conn->close();
?>


<?php
// config.php - configuration file
$merchant_id = 'your_merchant_id';
$secret_key = 'your_secret_key';

// database.php - database connection
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'purchase_db';

$conn = new mysqli($host, $username, $password, $dbname);
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// functions.php - helper functions
function validate_input($data) {
    $data = trim($data);
    $data = stripslashes($data);
    $data = htmlspecialchars($data);
    return $data;
}

function sanitize_amount($amount) {
    return preg_replace('/[^0-9.]/', '', $amount);
}

// purchase_form.php - payment form
<?php include 'config.php'; ?>

<!DOCTYPE html>
<html>
<head>
    <title>Purchase Form</title>
</head>
<body>
    <h2>Purchase Form</h2>
    <?php
        if (isset($_SESSION['message'])) {
            echo "<p>{$_SESSION['message']}</p>";
            unset($_SESSION['message']);
        }
    ?>
    
    <form method="post" action="process_payment.php">
        <label>Card Number:</label><br>
        <input type="text" name="card_number" required pattern="[0-9]{13,19}"><br><br>

        <label>CVV:</label><br>
        <input type="password" name="cvv" required pattern="[0-9]{3}"><br><br>

        <label>Name on Card:</label><br>
        <input type="text" name="name_on_card" required><br><br>

        <label>Amount:</label><br>
        <input type="number" name="amount" step="0.01" required><br><br>

        <button type="submit">Purchase</button>
    </form>
</body>
</html>

// process_payment.php - payment processing
<?php include 'config.php'; ?>
<?php include 'database.php'; ?>
<?php include 'functions.php'; ?>

<?php
session_start();

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $card_number = validate_input($_POST['card_number']);
    $cvv = validate_input($_POST['cvv']);
    $name_on_card = validate_input($_POST['name_on_card']);
    $amount = sanitize_amount($_POST['amount']);

    // Basic validation
    if (empty($card_number) || empty($cvv) || empty($name_on_card) || empty($amount)) {
        $_SESSION['message'] = "All fields are required!";
        header("Location: purchase_form.php");
        exit();
    }

    // You would typically integrate with a payment gateway here
    // For demonstration purposes, we'll simulate a successful transaction
    $transaction_successful = true;

    if ($transaction_successful) {
        // Log the transaction in the database
        $sql = "INSERT INTO purchases (card_number, cvv, name_on_card, amount, transaction_date)
                VALUES (?, ?, ?, ?, NOW())";

        $stmt = $conn->prepare($sql);
        $stmt->bind_param("sssd", $card_number, $cvv, $name_on_card, $amount);

        if ($stmt->execute()) {
            $_SESSION['message'] = "Purchase successful!";
        } else {
            $_SESSION['message'] = "Error processing your transaction.";
        }
    } else {
        $_SESSION['message'] = "Transaction failed. Please try again.";
    }

    header("Location: purchase_form.php");
    exit();
}
?>

// view_transactions.php - view all transactions
<?php include 'database.php'; ?>

<!DOCTYPE html>
<html>
<head>
    <title>View Transactions</title>
</head>
<body>
    <h2>Transaction History</h2>
    
    <?php
        $sql = "SELECT * FROM purchases";
        $result = $conn->query($sql);

        if ($result->num_rows > 0) {
            while ($row = $result->fetch_assoc()) {
                echo "<p>Card Number: {$row['card_number']}</p>";
                echo "<p>Name on Card: {$row['name_on_card']}</p>";
                echo "<p>Amount: \${$row['amount']}</p>";
                echo "<p>Date: {$row['transaction_date']}</p><br>";
            }
        } else {
            echo "No transactions found.";
        }
    ?>
</body>
</html>

// .htaccess - secure configuration
Options All -Indexes

RewriteEngine On
RewriteBase /
RewriteRule ^(.*)\.php$ - [F]

php_flag display_errors Off
php_value error_reporting 0

<FilesMatch "\.php$">
    Header set X-Frame-Options DENY
</FilesMatch>

// Use HTTPS and enable CSRF protection in production


<?php
// Database configuration
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "myDB";

// Create connection
$conn = new mysqli($servername, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Product table creation
$sql = "CREATE TABLE IF NOT EXISTS products (
id INT AUTO_INCREMENT PRIMARY KEY,
name VARCHAR(255),
description TEXT,
price DECIMAL(10, 2),
stock INT
)";

if ($conn->query($sql) !== TRUE) {
    echo "Error creating table: " . $conn->error;
}

// Order table creation
$sql = "CREATE TABLE IF NOT EXISTS orders (
order_id INT AUTO_INCREMENT PRIMARY KEY,
product_id INT,
quantity INT,
price DECIMAL(10, 2),
user_id INT,
payment_status ENUM('pending', 'completed'),
order_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
payment_date TIMESTAMP NULL
)";

if ($conn->query($sql) !== TRUE) {
    echo "Error creating table: " . $conn->error;
}

// Function to get products from database
function getProducts() {
    global $conn;
    $products = array();
    
    $result = $conn->query("SELECT * FROM products");
    
    while ($row = $result->fetch_assoc()) {
        $products[] = $row;
    }
    
    return $products;
}

// Function to add product to cart
function addToCart($product_id, $quantity) {
    if (isset($_SESSION['cart'])) {
        $_SESSION['cart'][$product_id] += $quantity;
    } else {
        $_SESSION['cart'] = array($product_id => $quantity);
    }
    
    return true;
}

// Function to calculate cart total
function getCartTotal() {
    $total = 0;
    
    if (isset($_SESSION['cart'])) {
        foreach ($_SESSION['cart'] as $product_id => $quantity) {
            $result = $conn->query("SELECT price FROM products WHERE id = $product_id");
            $row = $result->fetch_assoc();
            
            $total += ($row['price'] * $quantity);
        }
    }
    
    return $total;
}

// Checkout process
if (isset($_POST['checkout'])) {
    // Get cart items
    $cartItems = $_SESSION['cart'];
    
    // Insert order into database
    foreach ($cartItems as $product_id => $quantity) {
        $result = $conn->query("SELECT price FROM products WHERE id = $product_id");
        $row = $result->fetch_assoc();
        
        $price = $row['price'];
        $total = $price * $quantity;
        
        // Insert order
        $sql = "INSERT INTO orders (product_id, quantity, price, user_id)
        VALUES ($product_id, $quantity, $total, 1)"; // Assuming user ID is 1
        
        if ($conn->query($sql)) {
            // Order inserted successfully
            echo "Order placed successfully!";
        } else {
            echo "Error placing order: " . $conn->error;
        }
    }
    
    // Clear cart after checkout
    unset($_SESSION['cart']);
}

// Close database connection
$conn->close();
?>


<?php
session_start();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Online Store</title>
</head>
<body>

<?php 
// Database configuration
$servername = "localhost";
$username = "root";
$password = "";
$dbname = "store";

// Create connection
$conn = new mysqli($servername, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Create products table if not exists
$sql = "CREATE TABLE IF NOT EXISTS products (
id INT AUTO_INCREMENT PRIMARY KEY,
name VARCHAR(255),
price DECIMAL(10, 2)
)";
$conn->query($sql);

// Create shopping cart table if not exists
$sql = "CREATE TABLE IF NOT EXISTS shopping_cart (
id INT AUTO_INCREMENT PRIMARY KEY,
product_id INT,
quantity INT,
user_id INT
)";
$conn->query($sql);

// Create orders table if not exists
$sql = "CREATE TABLE IF NOT EXISTS orders (
id INT AUTO_INCREMENT PRIMARY KEY,
order_date DATETIME,
total DECIMAL(10, 2),
status VARCHAR(50)
)";
$conn->query($sql);

// Create order items table if not exists
$sql = "CREATE TABLE IF NOT EXISTS order_items (
id INT AUTO_INCREMENT PRIMARY KEY,
order_id INT,
product_id INT,
quantity INT,
price DECIMAL(10, 2)
)";
$conn->query($sql);

// Product class
class Product {
    private $conn;

    public function __construct($db_connection) {
        $this->conn = $db_connection;
    }

    // Get all products
    public function getProducts() {
        $stmt = $this->conn->prepare("SELECT * FROM products");
        $stmt->execute();
        return $stmt->get_result()->fetch_all(MYSQLI_ASSOC);
    }

    // Add product to database
    public function addProduct($name, $price) {
        $stmt = $this->conn->prepare("INSERT INTO products (name, price) VALUES (?, ?)");
        $stmt->bind_param("ss", $name, $price);
        return $stmt->execute();
    }

    // Update product quantity
    public function updateProduct($id, $quantity) {
        $stmt = $this->conn->prepare("UPDATE products SET quantity = ? WHERE id = ?");
        $stmt->bind_param("is", $quantity, $id);
        return $stmt->execute();
    }
}

// Shopping cart class
class ShoppingCart {
    private $db;

    public function __construct($db_connection) {
        $this->db = $db_connection;
    }

    // Add item to cart
    public function addToCart($product_id, $quantity) {
        if (isset($_SESSION['cart'])) {
            $cart = $_SESSION['cart'];
        } else {
            $cart = array();
        }
        
        if (!array_key_exists($product_id, $cart)) {
            $cart[$product_id] = $quantity;
        } else {
            $cart[$product_id] += $quantity;
        }
        
        $_SESSION['cart'] = $cart;
    }

    // Update cart quantity
    public function updateCart($product_id, $quantity) {
        if (isset($_SESSION['cart'][$product_id])) {
            $_SESSION['cart'][$product_id] = $quantity;
        }
    }

    // Remove item from cart
    public function removeItem($product_id) {
        unset($_SESSION['cart'][$product_id]);
    }

    // Get total price of items in cart
    public function getTotal() {
        $total = 0;
        
        if (isset($_SESSION['cart'])) {
            foreach ($_SESSION['cart'] as $product_id => $quantity) {
                $sql = "SELECT price FROM products WHERE id = ?";
                $stmt = $this->db->prepare($sql);
                $stmt->bind_param("i", $product_id);
                $stmt->execute();
                $result = $stmt->get_result();
                $price = $result->fetch_assoc()['price'];
                
                $total += ($price * $quantity);
            }
        }
        
        return $total;
    }

    // Get items in cart
    public function getCartItems() {
        if (isset($_SESSION['cart'])) {
            foreach ($_SESSION['cart'] as $product_id => $quantity) {
                $sql = "SELECT * FROM products WHERE id = ?";
                $stmt = $this->db->prepare($sql);
                $stmt->bind_param("i", $product_id);
                $stmt->execute();
                $result = $stmt->get_result()->fetch_assoc();
                
                $items[] = array(
                    'id' => $result['id'],
                    'name' => $result['name'],
                    'price' => $result['price'],
                    'quantity' => $quantity
                );
            }
            
            return $items;
        } else {
            return array();
        }
    }
}

// Initialize classes
$product = new Product($conn);
$cart = new ShoppingCart($conn);

// Add some sample products to database
if ($product->addProduct("Laptop", 999.99)) { echo "Product added"; }

// Display products
$products = $product->getProducts();
foreach ($products as $p) {
    echo "<div>";
    echo "<h3>".$p['name']."</h3>";
    echo "<p>Price: $".$p['price']."</p>";
    echo "<a href='add_to_cart.php?id=".$p['id']."'>Add to Cart</a>";
    echo "</div>";
}

// Display cart
$cartItems = $cart->getCartItems();
foreach ($cartItems as $item) {
    echo "<div>";
    echo "<h3>".$item['name']."</h3>";
    echo "<p>Price: $".$item['price']."</p>";
    echo "<p>Quantity: ".$item['quantity']."</p>";
    echo "</div>";
}

// Checkout process
if (isset($_POST['checkout'])) {
    // Process payment
    if ($cart->getTotal() > 0) {
        // Insert order into orders table
        $sql = "INSERT INTO orders (order_date, total, status) VALUES (NOW(), ?, 'pending')";
        $stmt = $conn->prepare($sql);
        $stmt->bind_param("d", $cart->getTotal());
        $stmt->execute();
        
        // Get order id
        $order_id = $conn->insert_id;
        
        // Insert order items into order_items table
        foreach ($cartItems as $item) {
            $sql = "INSERT INTO order_items (order_id, product_id, quantity, price) VALUES (?, ?, ?, ?)";
            $stmt = $conn->prepare($sql);
            $stmt->bind_param("iiid", $order_id, $item['id'], $item['quantity'], $item['price']);
            $stmt->execute();
        }
        
        // Clear cart
        unset($_SESSION['cart']);
        
        echo "Thank you for your order!";
    } else {
        echo "Your cart is empty!";
    }
}
?>


<?php
$host = 'localhost';
$user = 'root';
$password = '';
$dbname = 'purchase_db';

$conn = mysqli_connect($host, $user, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}
?>


<?php include 'includes/database.php'; ?>
<!DOCTYPE html>
<html>
<head>
    <title>Product Store</title>
    <?php include 'templates/header.php'; ?>
</head>
<body>
    <div class="container">
        <?php 
            // Fetch products from database
            $sql = "SELECT * FROM products";
            $result = mysqli_query($conn, $sql);
            
            if (mysqli_num_rows($result) > 0) {
                while ($row = mysqli_fetch_assoc($result)) {
                    echo "<div class='product'>";
                    echo "<h2>" . $row['name'] . "</h2>";
                    echo "<p>Price: $" . number_format($row['price'], 2) . "</p>";
                    echo "<form action='addtocart.php' method='post'>";
                    echo "<input type='hidden' name='id' value='" . $row['id'] . "'>";
                    echo "<input type='text' name='quantity' placeholder='Quantity'>";
                    echo "<button type='submit'>Add to Cart</button>";
                    echo "</form>";
                    echo "</div>";
                }
            } else {
                echo "No products available.";
            }
        ?>
    </div>
    <?php include 'templates/footer.php'; ?>
</body>
</html>


<?php session_start();
include 'includes/database.php';

if (isset($_POST['id']) && isset($_POST['quantity'])) {
    $product_id = $_POST['id'];
    $quantity = $_POST['quantity'];

    // Fetch product details
    $sql = "SELECT * FROM products WHERE id = ?";
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, 'i', $product_id);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);

    if ($row = mysqli_fetch_assoc($result)) {
        // Check if product exists in cart
        if (isset($_SESSION['cart'][$product_id])) {
            $_SESSION['cart'][$product_id]['quantity'] += $quantity;
        } else {
            $_SESSION['cart'][$product_id] = array(
                'id' => $product_id,
                'name' => $row['name'],
                'price' => $row['price'],
                'quantity' => $quantity
            );
        }
    }

    header("Location: cart.php");
    exit();
}
?>


<?php session_start(); ?>
<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
    <?php include 'templates/header.php'; ?>
</head>
<body>
    <div class="container">
        <?php if (!empty($_SESSION['cart'])): ?>
            <table>
                <tr>
                    <th>Product</th>
                    <th>Price</th>
                    <th>Quantity</th>
                    <th>Total</th>
                    <th>Action</th>
                </tr>
                <?php foreach ($_SESSION['cart'] as $item): 
                    $total_price += $item['price'] * $item['quantity'];
                ?>
                <tr>
                    <td><?php echo $item['name']; ?></td>
                    <td>$<?php echo number_format($item['price'], 2); ?></td>
                    <td><?php echo $item['quantity']; ?></td>
                    <td>$<?php echo number_format(($item['price'] * $item['quantity']), 2); ?></td>
                    <td><form action="removefromcart.php" method="post">
                        <input type="hidden" name="id" value="<?php echo $item['id']; ?>">
                        <button type="submit">Remove</button>
                    </form></td>
                </tr>
                <?php endforeach; ?>
            </table>
            <h3>Total: $<?php echo number_format($total_price, 2); ?></h3>
            <a href="checkout.php" class="btn">Checkout</a>
        <?php else: ?>
            <p>Your cart is empty.</p>
        <?php endif; ?>
    </div>
    <?php include 'templates/footer.php'; ?>
</body>
</html>


<?php session_start();

if (isset($_POST['id'])) {
    $product_id = $_POST['id'];
    
    if (!empty($_SESSION['cart'][$product_id])) {
        unset($_SESSION['cart'][$product_id]);
    }
    
    header("Location: cart.php");
    exit();
}
?>


<?php session_start(); 
include 'includes/database.php'; 

if (isset($_POST['payment'])) {
    // Payment processing logic here
    header("Location: confirmation.php");
    exit();
}
?>
<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
    <?php include 'templates/header.php'; ?>
</head>
<body>
    <div class="container">
        <h2>Payment Information</h2>
        <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
            <label>Card Number:</label>
            <input type="text" name="card_number" required>

            <label>Card Holder Name:</label>
            <input type="text" name="card_holder" required>

            <label>Expiry Date:</label>
            <input type="text" name="expiry_date" placeholder="MM/YY" required>

            <label>CVC:</label>
            <input type="text" name="cvc" required>

            <button type="submit" name="payment">Pay Now</button>
        </form>
    </div>
    <?php include 'templates/footer.php'; ?>
</body>
</html>


<?php session_start();

// Clear the cart after purchase
unset($_SESSION['cart']);
?>
<!DOCTYPE html>
<html>
<head>
    <title>Purchase Confirmed</title>
    <?php include 'templates/header.php'; ?>
</head>
<body>
    <div class="container">
        <h2>Thank You for Your Purchase!</h2>
        <p>Your order has been successfully processed.</p>
        <a href="index.php" class="btn">Continue Shopping</a>
    </div>
    <?php include 'templates/footer.php'; ?>
</body>
</html>


// In checkout.php after form submission:
require 'vendor/autoload.php';
\Stripe\Stripe::setApiKey('your_stripe_secret_key');

try {
    $charge = \Stripe\Charge::create([
        'amount' => total_price_in_cents,
        'currency' => 'usd',
        'source' => $_POST['stripeToken'],
        'description' => 'Purchase from Your Store'
    ]);
    
    // Payment successful, redirect to confirmation
} catch (\Stripe\Exception\CardException $e) {
    // Handle payment error
}


<?php session_start(); ?>

<!-- index.php - Product List Page -->
<!DOCTYPE html>
<html>
<head>
    <title>Product List</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
</head>
<body>
    <div class="container mt-5">
        <?php
            function getProducts() {
                return array(
                    1 => array('name' => 'Product 1', 'description' => 'Description for Product 1', 'price' => 29.99),
                    2 => array('name' => 'Product 2', 'description' => 'Description for Product 2', 'price' => 49.99),
                    3 => array('name' => 'Product 3', 'description' => 'Description for Product 3', 'price' => 19.99)
                );
            }

            $products = getProducts();
        ?>

        <h2 class="mb-4">Our Products</h2>
        <div class="row">
            <?php foreach ($products as $id => $product): ?>
                <div class="col-md-3 mb-4">
                    <div class="card">
                        <img src="placeholder.jpg" alt="<?php echo $product['name']; ?>" class="card-img-top">
                        <div class="card-body">
                            <h5 class="card-title"><?php echo $product['name']; ?></h5>
                            <p class="card-text"><?php echo $product['description']; ?></p>
                            <p class="card-text">Price: $<?php echo number_format($product['price'], 2); ?></p>
                            <a href="addtocart.php?id=<?php echo $id; ?>" class="btn btn-primary">Add to Cart</a>
                        </div>
                    </div>
                </div>
            <?php endforeach; ?>
        </div>
    </div>
</body>
</html>

<!-- addtocart.php -->
<?php session_start();

$product_id = isset($_GET['id']) ? (int)$_GET['id'] : 0;

function getProduct($id) {
    $products = array(
        1 => array('name' => 'Product 1', 'description' => 'Description for Product 1', 'price' => 29.99),
        2 => array('name' => 'Product 2', 'description' => 'Description for Product 2', 'price' => 49.99),
        3 => array('name' => 'Product 3', 'description' => 'Description for Product 3', 'price' => 19.99)
    );
    
    return isset($products[$id]) ? $products[$id] : null;
}

$product = getProduct($product_id);

if ($product) {
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }
    
    if (isset($_SESSION['cart'][$product_id])) {
        $_SESSION['cart'][$product_id]['quantity']++;
    } else {
        $_SESSION['cart'][$product_id] = array(
            'name' => $product['name'],
            'description' => $product['description'],
            'price' => $product['price'],
            'quantity' => 1
        );
    }
}

header('Location: index.php');
exit();
?>

<!-- cart.php - Shopping Cart Page -->
<?php session_start(); ?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
</head>
<body>
    <div class="container mt-5">
        <?php
            function calculateTotal($cart) {
                $total = 0;
                foreach ($cart as $item) {
                    $total += $item['price'] * $item['quantity'];
                }
                return $total;
            }

            $cart = isset($_SESSION['cart']) ? $_SESSION['cart'] : array();
            $subtotal = calculateTotal($cart);
        ?>

        <h2 class="mb-4">Your Shopping Cart</h2>
        
        <?php if (empty($cart)): ?>
            <div class="alert alert-info">
                Your cart is empty. <a href="index.php" class="alert-link">Continue shopping</a>.
            </div>
        <?php else: ?>
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>Product</th>
                        <th>Description</th>
                        <th>Quantity</th>
                        <th>Price</th>
                        <th>Total</th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tbody>
                    <?php foreach ($cart as $id => $item): ?>
                        <tr>
                            <td><?php echo $item['name']; ?></td>
                            <td><?php echo $item['description']; ?></td>
                            <td><?php echo $item['quantity']; ?></td>
                            <td>$<?php echo number_format($item['price'], 2); ?></td>
                            <td>$<?php echo number_format($item['price'] * $item['quantity'], 2); ?></td>
                            <td><a href="removefromcart.php?id=<?php echo $id; ?>" class="btn btn-danger">Remove</a></td>
                        </tr>
                    <?php endforeach; ?>
                </tbody>
            </table>

            <div class="row mt-4">
                <div class="col-md-6 offset-md-6">
                    <h3>Subtotal: $<?php echo number_format($subtotal, 2); ?></h3>
                    <p>Shipping Cost: $10.00</p>
                    <h3>Total Amount: $<?php echo number_format($subtotal + 10.00, 2); ?></h3>
                </div>
            </div>

            <a href="checkout.php" class="btn btn-primary">Proceed to Checkout</a> |
            <a href="index.php" class="btn btn-secondary">Continue Shopping</a>
        <?php endif; ?>
    </div>
</body>
</html>

<!-- removefromcart.php -->
<?php session_start();

$product_id = isset($_GET['id']) ? (int)$_GET['id'] : 0;

if (isset($_SESSION['cart'][$product_id])) {
    unset($_SESSION['cart'][$product_id]);
}

header('Location: cart.php');
exit();
?>

<!-- checkout.php -->
<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
</head>
<body>
    <div class="container mt-5">
        <?php
            $cart = isset($_SESSION['cart']) ? $_SESSION['cart'] : array();
            
            if (empty($cart)) {
                header('Location: cart.php');
                exit();
            }
        ?>

        <h2>Checkout</h2>

        <form action="processcheckout.php" method="post">
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        <label for="name">Full Name:</label>
                        <input type="text" id="name" name="name" class="form-control" required>
                    </div>

                    <div class="form-group">
                        <label for="email">Email:</label>
                        <input type="email" id="email" name="email" class="form-control" required>
                    </div>

                    <div class="form-group">
                        <label for="address">Shipping Address:</label>
                        <textarea id="address" name="address" class="form-control" rows="3" required></textarea>
                    </div>
                </div>
            </div>

            <button type="submit" class="btn btn-primary">Place Order</button>
        </form>
    </div>
</body>
</html>

<!-- processcheckout.php -->
<?php session_start();

if (isset($_POST['name'], $_POST['email'], $_POST['address'])) {
    $cart = isset($_SESSION['cart']) ? $_SESSION['cart'] : array();
    
    if (!empty($cart)) {
        // Process the order
        // In a real application, you would connect to a database and store the order details
        
        echo "<h2>Order Summary</h2>";
        echo "<p>Your order has been processed!</p>";
        
        // Clear the cart
        unset($_SESSION['cart']);
    } else {
        header('Location: index.php');
    }
} else {
    header('Location: checkout.php');
}

?>

To use this code:

1. Create a new directory for your project
2. Save these files with their respective names (index.php, addtocart.php, etc.)
3. Make sure to have an image named "placeholder.jpg" in the same directory for product images
4. Open index.php in your browser

Features:
- View products and prices
- Add items to cart
- Remove items from cart
- View subtotal and total with shipping costs
- Checkout process with customer information
- Order confirmation

To enhance this basic version, you could:

1. Add a database for storing products and orders
2. Implement secure payment processing (e.g., Stripe, PayPal)
3. Add user authentication
4. Improve error handling
5. Add more product features (sizes, colors, etc.)
6. Implement coupon codes or discounts
7. Add order tracking functionality

Remember to:
- Secure your code against SQL injection and other attacks
- Handle errors properly
- Add proper validation for all inputs
- Use HTTPS in production
- Store sensitive data securely


<?php
// Database connection
$host = "localhost";
$username = "root";
$password = "";
$dbname = "cart_db";

$conn = mysqli_connect($host, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Create products table if not exists
$sql = "CREATE TABLE IF NOT EXISTS products (
    id INT(11) AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255),
    description TEXT,
    price DECIMAL(10, 2),
    stock INT(11)
)";

mysqli_query($conn, $sql);

// Create orders table if not exists
$sql = "CREATE TABLE IF NOT EXISTS orders (
    id INT(11) AUTO_INCREMENT PRIMARY KEY,
    user_id VARCHAR(255),
    product_id INT(11),
    quantity INT(11),
    purchase_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP
)";

mysqli_query($conn, $sql);

// Add sample products to database
$sql = "INSERT INTO products (name, description, price, stock) 
        VALUES ('Product 1', 'Description of Product 1', 29.99, 10),
               ('Product 2', 'Description of Product 2', 49.99, 5),
               ('Product 3', 'Description of Product 3', 19.99, 20)";

mysqli_query($conn, $sql);

// Start session
session_start();

// Add to cart functionality
if (isset($_GET['action']) && $_GET['action'] == 'add_to_cart') {
    $product_id = intval($_GET['product_id']);
    $quantity = intval($_GET['quantity']);

    if ($quantity > 0) {
        // Check if the product is already in the cart
        if (isset($_SESSION['cart'][$product_id])) {
            $_SESSION['cart'][$product_id]['quantity'] += $quantity;
        } else {
            $sql = "SELECT name, price FROM products WHERE id = ?";
            $stmt = mysqli_prepare($conn, $sql);
            mysqli_stmt_bind_param($stmt, "i", $product_id);
            mysqli_stmt_execute($stmt);
            $result = mysqli_stmt_get_result($stmt);

            if ($row = mysqli_fetch_assoc($result)) {
                $_SESSION['cart'][$product_id] = array(
                    'name' => $row['name'],
                    'price' => $row['price'],
                    'quantity' => $quantity
                );
            }
        }
    }
}

// View cart functionality
if (isset($_GET['action']) && $_GET['action'] == 'view_cart') {
    if (!empty($_SESSION['cart'])) {
        echo "<h2>Your Cart</h2>";
        echo "<table border='1'>";
        echo "<tr><th>Product Name</th><th>Price</th><th>Quantity</th><th>Total</th></tr>";

        foreach ($_SESSION['cart'] as $product_id => $item) {
            $total = $item['price'] * $item['quantity'];
            echo "<tr>";
            echo "<td>" . $item['name'] . "</td>";
            echo "<td>$$item[price]</td>";
            echo "<td>$item[quantity]</td>";
            echo "<td>$$total</td>";
            echo "</tr>";
        }

        // Calculate cart total
        $cart_total = 0;
        foreach ($_SESSION['cart'] as $product_id => $item) {
            $cart_total += $item['price'] * $item['quantity'];
        }
        echo "<tr><td colspan='3'>Cart Total:</td><td>$$cart_total</td></tr>";
        echo "</table>";
    } else {
        echo "Your cart is empty!";
    }
}

// Checkout functionality
if (isset($_GET['action']) && $_GET['action'] == 'checkout') {
    if (!empty($_SESSION['cart'])) {
        $user_id = session_id();

        foreach ($_SESSION['cart'] as $product_id => $item) {
            $sql = "INSERT INTO orders (user_id, product_id, quantity)
                    VALUES (?, ?, ?)";
            $stmt = mysqli_prepare($conn, $sql);
            mysqli_stmt_bind_param($stmt, "isi", $user_id, $product_id, $item['quantity']);
            mysqli_stmt_execute($stmt);
        }

        // Clear cart after checkout
        unset($_SESSION['cart']);
        echo "Thank you for your purchase!";
    } else {
        echo "Your cart is empty!";
    }
}

// Remove item from cart
if (isset($_GET['action']) && $_GET['action'] == 'remove_item') {
    $product_id = intval($_GET['product_id']);
    if (!empty($_SESSION['cart'][$product_id])) {
        unset($_SESSION['cart'][$product_id]);
        echo "Item removed from cart!";
    }
}

// Display products
$sql = "SELECT * FROM products";
$result = mysqli_query($conn, $sql);

echo "<h1>Products</h1>";
echo "<table border='1'>";
echo "<tr><th>ID</th><th>Name</th><th>Description</th><th>Price</th><th>Stock</th><th>Add to Cart</th></tr>";

while ($row = mysqli_fetch_assoc($result)) {
    echo "<tr>";
    echo "<td>" . $row['id'] . "</td>";
    echo "<td>" . $row['name'] . "</td>";
    echo "<td>" . $row['description'] . "</td>";
    echo "<td>$$row[price]</td>";
    echo "<td>" . $row['stock'] . "</td>";
    echo "<td><a href='?action=add_to_cart&product_id=" . $row['id'] . "&quantity=1'>Add to Cart</a></td>";
    echo "</tr>";
}

echo "</table>";

// Display cart link
echo "<br />";
echo "<a href='?action=view_cart'>View Cart</a> | ";
echo "<a href='?action=checkout'>Checkout</a>";
?>


<?php
// Connect to the database
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'purchase_system';

$conn = mysqli_connect($host, $username, $password, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Fetch products from the database
$sql = "SELECT * FROM products";
$result = mysqli_query($conn, $sql);

?>

<!DOCTYPE html>
<html>
<head>
    <title>Product List</title>
</head>
<body>
    <?php while ($row = mysqli_fetch_assoc($result)) { ?>
        <div style="border: 1px solid #ddd; padding: 10px; margin: 5px;">
            <h3><?php echo $row['name']; ?></h3>
            <p>Price: <?php echo $row['price']; ?>$</p>
            <p>Description: <?php echo $row['description']; ?></p>
            <p>Stock: <?php echo $row['stock']; ?></p>
            <form action="add_to_cart.php" method="post">
                <input type="hidden" name="product_id" value="<?php echo $row['id']; ?>">
                <input type="number" name="quantity" min="1" max="<?php echo $row['stock']; ?>" placeholder="Enter quantity">
                <button type="submit">Add to Cart</button>
            </form>
        </div>
    <?php } ?>

    <a href="cart.php">View Cart</a>
</body>
</html>

<?php
mysqli_close($conn);
?>


<?php
session_start();

// Connect to the database
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'purchase_system';

$conn = mysqli_connect($host, $username, $password, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

$product_id = $_POST['product_id'];
$quantity = $_POST['quantity'];

// Get product details
$sql = "SELECT * FROM products WHERE id = '$product_id'";
$result = mysqli_query($conn, $sql);
$product = mysqli_fetch_assoc($result);

if ($product) {
    // Add to cart
    if (!isset($_SESSION['cart'][$product_id])) {
        $_SESSION['cart'][$product_id] = array(
            'name' => $product['name'],
            'price' => $product['price'],
            'quantity' => 0
        );
    }

    // Update quantity
    $_SESSION['cart'][$product_id]['quantity'] += $quantity;
}

mysqli_close($conn);

// Redirect back to products page
header('Location: products.php');
exit();
?>


<?php
session_start();

?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <?php if (!empty($_SESSION['cart'])) { ?>
        <h2>Your Cart:</h2>
        <ul>
            <?php foreach ($_SESSION['cart'] as $id => $item) { ?>
                <li><?php echo $item['name']; ?> - <?php echo $item['quantity']; ?> x <?php echo $item['price']; ?>$</li>
            <?php } ?>
        </ul>
        
        <h3>Total: <?php echo number_format(calculate_total(), 2); ?>$</h3>
        
        <form action="checkout.php" method="post">
            <input type="text" name="user_name" placeholder="Enter your name" required><br>
            <input type="email" name="email" placeholder="Enter your email" required><br>
            <input type="tel" name="phone" placeholder="Enter your phone number"><br>
            <textarea name="address" placeholder="Enter your shipping address"></textarea><br>
            <button type="submit">Checkout</button>
        </form>
    <?php } else { ?>
        <p>Your cart is empty.</p>
        <a href="products.php">Continue Shopping</a>
    <?php } ?>

    <?php
    function calculate_total() {
        $total = 0;
        foreach ($_SESSION['cart'] as $item) {
            $total += ($item['price'] * $item['quantity']);
        }
        return $total;
    }
    ?>
</body>
</html>


<?php
session_start();

// Connect to the database
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'purchase_system';

$conn = mysqli_connect($host, $username, $password, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

$user_name = $_POST['user_name'];
$email = $_POST['email'];
$phone = $_POST['phone'];
$address = $_POST['address'];
$total_amount = number_format(calculate_total(), 2);

// Insert order into database
$sql = "INSERT INTO orders (user_name, email, phone, address, total_amount) 
        VALUES ('$user_name', '$email', '$phone', '$address', '$total_amount')";
if (!mysqli_query($conn, $sql)) {
    die("Error: " . mysqli_error($conn));
}

// Get the order ID
$order_id = mysqli_insert_id($conn);

// Insert order details into order_details table (if needed)
foreach ($_SESSION['cart'] as $id => $item) {
    // You can insert each item into an order_details table here
}

// Clear cart
unset($_SESSION['cart']);
$_SESSION['cart'] = array();

mysqli_close($conn);

header('Location: confirmation.php?order_id=' . $order_id);
exit();

function calculate_total() {
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += ($item['price'] * $item['quantity']);
    }
    return $total;
}
?>


<?php
session_start();

?>

<!DOCTYPE html>
<html>
<head>
    <title>Order Confirmation</title>
</head>
<body>
    <?php if (isset($_GET['order_id'])) { ?>
        <h2>Thank you for your purchase!</h2>
        <p>Your order ID is: <?php echo $_GET['order_id']; ?></p>
        <p>We will contact you soon regarding your shipment.</p>
    <?php } else { ?>
        <p>There was an error processing your order. Please try again.</p>
    <?php } ?>

</body>
</html>


<?php
session_start();

class ShoppingCart {
    private $items = array();
    
    public function __construct() {
        if (isset($_SESSION['shopping_cart'])) {
            $this->items = $_SESSION['shopping_cart'];
        }
    }

    public function add_item($product_id, $quantity) {
        if (!isset($this->items[$product_id])) {
            $this->items[$product_id] = 0;
        }
        $this->items[$product_id] += $quantity;
        
        $_SESSION['shopping_cart'] = $this->items;
    }

    public function remove_item($product_id) {
        unset($this->items[$product_id]);
        $_SESSION['shopping_cart'] = $this->items;
    }

    public function get_total() {
        $total = 0;
        foreach ($this->items as $product_id => $quantity) {
            // Get product price from database or array
            // For this example, we'll assume a simple array
            $price = $this->get_product_price($product_id);
            $total += ($price * $quantity);
        }
        return $total;
    }

    public function get_items() {
        return $this->items;
    }

    private function get_product_price($product_id) {
        // This is a simplified example - in real application, you would query the database
        $products = array(
            1 => 19.99,
            2 => 29.99,
            3 => 39.99
        );
        return $products[$product_id];
    }
}
?>


<?php
$products = array(
    array('id' => 1, 'name' => 'Product A', 'price' => 19.99),
    array('id' => 2, 'name' => 'Product B', 'price' => 29.99),
    array('id' => 3, 'name' => 'Product C', 'price' => 39.99)
);
?>


<?php
if (isset($_GET['action']) && $_GET['action'] == 'add') {
    $product_id = intval($_GET['id']);
    $quantity = intval($_GET['quantity']);
    
    $cart = new ShoppingCart();
    $cart->add_item($product_id, $quantity);
}
?>


<?php
$cart = new ShoppingCart();
$items = $cart->get_items();
$total = $cart->get_total();

if (empty($items)) {
    echo "Your cart is empty.";
} else {
    echo "<h2>Your Order</h2>";
    echo "<table>";
    foreach ($items as $product_id => $quantity) {
        // Get product details
        $price = $cart->get_product_price($product_id);
        
        echo "<tr>";
        echo "<td>Product ID: $product_id</td>";
        echo "<td>Quantity: $quantity</td>";
        echo "<td>Price: $" . number_format($price, 2) . "</td>";
        echo "</tr>";
    }
    echo "<tr><td colspan='2'><strong>Total:</strong></td><td><strong>$" . number_format($total, 2) . "</strong></td></tr>";
    echo "</table>";
    
    // Display checkout form
    if (isset($_SESSION['user_id'])) {
        // User is logged in - display payment options
        echo "<h3>Payment Information</h3>";
        echo "<form action='process_payment.php' method='post'>";
        echo "<input type='text' name='card_number' placeholder='Card Number' required>";
        echo "<input type='text' name='card_name' placeholder='Name on Card' required>";
        echo "<input type='text' name='expiry_date' placeholder='Expiry Date' required>";
        echo "<input type='text' name='cvv' placeholder='CVV' required>";
        echo "<input type='hidden' name='total' value='$total'>";
        echo "<button type='submit'>Complete Purchase</button>";
        echo "</form>";
    } else {
        // User is not logged in - redirect to login page
        header("Location: login.php");
    }
}
?>


<?php
session_start();

if (isset($_POST['card_number'], $_POST['card_name'], $_POST['expiry_date'], $_POST['cvv'])) {
    // Validate and process payment here
    // For this example, we'll just simulate a successful payment
    
    $total = floatval($_POST['total']);
    
    // Check if total is valid
    if ($total <= 0) {
        die("Invalid total amount.");
    }
    
    // Process the payment (in real application, you would integrate with a payment gateway)
    // For this example, we'll assume the payment was successful
    
    $cart = new ShoppingCart();
    $cart->remove_all_items(); // Clear the cart
    
    // Redirect to thank you page
    header("Location: thank_you.php");
} else {
    die("Invalid request.");
}
?>


<?php
echo "<h2>Thank You for Your Purchase!</h2>";
echo "Your order has been processed successfully.";
?>


<?php
// Connect to database
$host = 'localhost';
$dbname = 'shopping_cart';
$username = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
} catch(PDOException $e) {
    die('Connection failed: ' . $e->getMessage());
}

// Fetch products from database
$stmt = $conn->query('SELECT * FROM products');
$products = $stmt->fetchAll(PDO::FETCH_ASSOC);

session_start();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Product Listing</title>
</head>
<body>
    <?php if (!empty($_SESSION['cart'])): ?>
        <div>Total Items in Cart: <?php echo count($_SESSION['cart']); ?></div>
    <?php endif; ?>

    <h1>Available Products</h1>
    <?php foreach ($products as $product): ?>
        <div class="product">
            <h2><?php echo $product['name']; ?></h2>
            <p>Price: $<?php echo $product['price']; ?></p>
            <form action="add_to_cart.php" method="post">
                <input type="hidden" name="id" value="<?php echo $product['id']; ?>">
                <input type="number" name="quantity" min="1" placeholder="Enter quantity">
                <button type="submit">Add to Cart</button>
            </form>
        </div>
    <?php endforeach; ?>

    <a href="cart.php">View Cart</a>
</body>
</html>


<?php
session_start();

if (isset($_POST['id']) && isset($_POST['quantity'])) {
    $product_id = $_POST['id'];
    $quantity = $_POST['quantity'];

    // Check if product is already in cart
    if (!empty($_SESSION['cart'][$product_id])) {
        $_SESSION['cart'][$product_id]['quantity'] += $quantity;
    } else {
        // Get product details from database
        try {
            $conn = new PDO("mysql:host=localhost;dbname=shopping_cart", 'root', '');
        } catch(PDOException $e) {
            die('Connection failed: ' . $e->getMessage());
        }

        $stmt = $conn->prepare('SELECT * FROM products WHERE id = ?');
        $stmt->execute([$product_id]);
        $product = $stmt->fetch(PDO::FETCH_ASSOC);

        $_SESSION['cart'][$product_id] = [
            'id' => $product['id'],
            'name' => $product['name'],
            'price' => $product['price'],
            'quantity' => $quantity
        ];
    }

    header('Location: cart.php');
}
?>


<?php
session_start();

if (empty($_SESSION['cart'])) {
    header('Location: index.php');
}

try {
    $conn = new PDO("mysql:host=localhost;dbname=shopping_cart", 'root', '');
} catch(PDOException $e) {
    die('Connection failed: ' . $e->getMessage());
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <h1>Your Shopping Cart</h1>
    <?php if (!empty($_SESSION['cart'])): ?>
        <table>
            <tr>
                <th>Product Name</th>
                <th>Price</th>
                <th>Quantity</th>
                <th>Total</th>
                <th>Action</th>
            </tr>
            <?php $total = 0; foreach ($_SESSION['cart'] as $product): ?>
                <tr>
                    <td><?php echo $product['name']; ?></td>
                    <td>$<?php echo $product['price']; ?></td>
                    <td><input type="number" name="quantity" value="<?php echo $product['quantity']; ?>"></td>
                    <td>$<?php echo number_format($product['price'] * $product['quantity'], 2); ?></td>
                    <td><a href="remove_from_cart.php?id=<?php echo $product['id']; ?>">Remove</a></td>
                </tr>
                <?php $total += $product['price'] * $product['quantity']; ?>
            <?php endforeach; ?>
        </table>
        <h2>Total: $<?php echo number_format($total, 2); ?></h2>
        <form action="checkout.php" method="post">
            <button type="submit">Proceed to Checkout</button>
        </form>
    <?php else: ?>
        <p>Your cart is empty.</p>
    <?php endif; ?>

    <a href="index.php">Continue Shopping</a>
</body>
</html>


<?php
session_start();

if (isset($_GET['id'])) {
    $product_id = $_GET['id'];
    
    if (!empty($_SESSION['cart'][$product_id])) {
        unset($_SESSION['cart'][$product_id]);
    }
}

header('Location: cart.php');
?>


<?php
session_start();

if (empty($_SESSION['cart'])) {
    header('Location: index.php');
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
</head>
<body>
    <h1>Checkout Form</h1>
    <?php if (!empty($_SESSION['errors'])): ?>
        <div class="error">
            <?php foreach ($_SESSION['errors'] as $error): ?>
                <p><?php echo $error; ?></p>
            <?php endforeach; ?>
        </div>
        <?php unset($_SESSION['errors']); ?>
    <?php endif; ?>

    <form action="process_payment.php" method="post">
        <h2>Billing Information</h2>
        <input type="text" name="name" placeholder="Full Name" required><br>
        <input type="email" name="email" placeholder="Email Address" required><br>
        <input type="tel" name="phone" placeholder="Phone Number"><br>
        <textarea name="address" placeholder="Shipping Address" required></textarea><br>

        <h2>Payment Information</h2>
        <div id="payment-form">
            <!-- Stripe Elements will be added here -->
            <script src="https://js.stripe.com/v3/"></script>
            <script>
                var stripe = Stripe('your_stripe_key');
                var elements = stripe.elements();
                var cardElement = elements.create('card');
                cardElement.mount('#card-element');

                cardElement.addEventListener('change', function(event) {
                    document.getElementById('stripe-error').textContent = '';
                });

                document.getElementById('payment-form').addEventListener('submit', function(e) {
                    e.preventDefault();
                    stripe.createPaymentMethod({
                        type: 'card',
                        card: cardElement
                    }).then(function(response) {
                        if (response.error) {
                            document.getElementById('stripe-error').textContent = response.error.message;
                        } else {
                            var paymentMethodId = response.paymentMethod.id;
                            document.getElementById('payment_method_id').value = paymentMethodId;
                            this.submit();
                        }
                    });
                });
            </script>
        </div>

        <input type="hidden" id="payment_method_id" name="payment_method_id">
        <p id="stripe-error"></p>
        <button type="submit">Complete Purchase</button>
    </form>
</body>
</html>


<?php
session_start();

require 'vendor/autoload.php';
\Stripe\Stripe::setApiKey('your_stripe_secret_key');

if (!empty($_SESSION['cart']) && isset($_POST['payment_method_id'])) {
    $paymentMethodId = $_POST['payment_method_id'];
    $amount = (float)$_SESSION['total'] * 100; // Convert to cents

    try {
        $charge = \Stripe\Charge::create([
            'amount' => $amount,
            'currency' => 'usd',
            'description' => 'Shopping Cart Purchase',
            'payment_method' => $paymentMethodId,
        ]);

        if ($charge->status === 'succeeded') {
            // Store order in database
            try {
                $conn = new PDO("mysql:host=localhost;dbname=shopping_cart", 'root', '');
            } catch(PDOException $e) {
                die('Connection failed: ' . $e->getMessage());
            }

            $stmt = $conn->prepare('INSERT INTO orders (user_id, total_amount, payment_status) VALUES (?, ?, ?)');
            $stmt->execute([$_SESSION['user_id'], $_SESSION['total'], 'paid']);

            // Insert order items
            foreach ($_SESSION['cart'] as $product) {
                $stmt = $conn->prepare('INSERT INTO order_items (order_id, product_id, quantity, price) VALUES (?, ?, ?, ?)');
                $stmt->execute([$charge->id, $product['id'], $product['quantity'], $product['price']]);
            }

            // Clear cart
            unset($_SESSION['cart']);

            header('Location: thank_you.php');
        } else {
            die('Payment failed. Please try again.');
        }
    } catch (\Stripe\Exception\CardException $e) {
        $_SESSION['errors'] = [$e->getMessage()];
        header('Location: checkout.php');
    }
} else {
    die('Invalid request.');
}
?>


<?php
session_start();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Thank You</title>
</head>
<body>
    <h1>Thank You for Your Purchase!</h1>
    <p>Your order has been successfully processed.</p>
    <a href="index.php">Continue Shopping</a>
</body>
</html>


<?php
include('db.php');

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $username = $_POST['username'];
    $email = $_POST['email'];
    $password = password_hash($_POST['password'], PASSWORD_DEFAULT);

    // Insert into database
    $sql = "INSERT INTO users (username, email, password_hash) VALUES (?, ?, ?)";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("sss", $username, $email, $password);
    if ($stmt->execute()) {
        echo "Registration successful!";
        header('Location: login.php');
    } else {
        echo "Error registering: " . $stmt->error;
    }
}
?>

<form action="" method="POST">
    <input type="text" name="username" placeholder="Username" required>
    <input type="email" name="email" placeholder="Email" required>
    <input type="password" name="password" placeholder="Password" required>
    <button type="submit">Register</button>
</form>


<?php
session_start();
include('db.php');

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $email = $_POST['email'];
    $password = $_POST['password'];

    // Check if user exists
    $sql = "SELECT * FROM users WHERE email = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("s", $email);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        $user = $result->fetch_assoc();
        if (password_verify($password, $user['password_hash'])) {
            $_SESSION['logged_in'] = true;
            $_SESSION['user_id'] = $user['id'];
            header('Location: dashboard.php');
        } else {
            echo "Incorrect password!";
        }
    } else {
        echo "User not found!";
    }
}
?>

<form action="" method="POST">
    <input type="email" name="email" placeholder="Email" required>
    <input type="password" name="password" placeholder="Password" required>
    <button type="submit">Login</button>
</form>


<?php
include('db.php');

$sql = "SELECT * FROM products WHERE available = TRUE";
$result = $conn->query($sql);

if ($result->num_rows > 0) {
    while ($row = $result->fetch_assoc()) {
        echo "<div class='product'>";
        echo "<h3>" . $row['name'] . "</h3>";
        echo "<p>" . $row['description'] . "</p>";
        echo "<p>Price: $" . number_format($row['price'], 2) . "</p>";
        if ($row['stock'] > 0) {
            echo "<form action='add_to_cart.php' method='POST'>";
            echo "<input type='hidden' name='product_id' value='" . $row['id'] . "'>";
            echo "<input type='number' name='quantity' min='1' max='" . $row['stock'] . "' required>";
            echo "<button type='submit'>Add to Cart</button>";
            echo "</form>";
        } else {
            echo "<p>Out of Stock</p>";
        }
        echo "</div>";
    }
} else {
    echo "No products available.";
}
?>


<?php
session_start();
include('db.php');

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $product_id = $_POST['product_id'];
    $quantity = $_POST['quantity'];

    // Check if product exists and has stock
    $sql = "SELECT * FROM products WHERE id = ? AND available = TRUE";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("i", $product_id);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        $product = $result->fetch_assoc();
        if ($quantity <= $product['stock']) {
            // Add to cart
            $cart_item = array(
                'id' => $product_id,
                'name' => $product['name'],
                'price' => $product['price'],
                'quantity' => $quantity
            );

            if (isset($_SESSION['cart'])) {
                $found = false;
                foreach ($_SESSION['cart'] as &$item) {
                    if ($item['id'] == $product_id) {
                        $item['quantity'] += $quantity;
                        $found = true;
                        break;
                    }
                }
                if (!$found) {
                    $_SESSION['cart'][] = $cart_item;
                }
            } else {
                $_SESSION['cart'] = array($cart_item);
            }

            echo "Product added to cart!";
        } else {
            echo "Not enough stock!";
        }
    } else {
        echo "Product not found!";
    }
}
?>


<?php
session_start();
include('db.php');

if (isset($_SESSION['cart'])) {
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        echo "<div class='cart-item'>";
        echo "<h3>" . $item['name'] . "</h3>";
        echo "<p>Quantity: " . $item['quantity'] . "</p>";
        echo "<p>Price: $" . number_format($item['price'], 2) . "</p>";
        echo "<p>Total: $" . number_format($item['price'] * $item['quantity'], 2) . "</p>";
        echo "</div>";
        $total += $item['price'] * $item['quantity'];
    }
    echo "<h3>Total: $" . number_format($total, 2) . "</h3>";

    if (isset($_SESSION['user_id'])) {
        // Process order
        foreach ($_SESSION['cart'] as $item) {
            $sql = "INSERT INTO orders (user_id, product_id, quantity, total_amount, payment_status)
                    VALUES (?, ?, ?, ?, 'unpaid')";
            $stmt = $conn->prepare($sql);
            $stmt->bind_param("iidi", $_SESSION['user_id'], $item['id'], $item['quantity'], $item['price'] * $item['quantity']);
            if (!$stmt->execute()) {
                die("Error processing order: " . $stmt->error);
            }
        }

        // Clear cart
        unset($_SESSION['cart']);

        echo "<p>Order placed successfully!</p>";
    } else {
        echo "<p>Please login to checkout.</p>";
    }
} else {
    echo "Your cart is empty!";
}
?>


<?php
session_start();
include('db.php');

if (!isset($_SESSION['user_id'])) {
    header('Location: login.php');
}

$sql = "SELECT o.*, p.name as product_name FROM orders o
        JOIN products p ON o.product_id = p.id
        WHERE o.user_id = ?";
$stmt = $conn->prepare($sql);
$stmt->bind_param("i", $_SESSION['user_id']);
$stmt->execute();
$result = $stmt->get_result();

if ($result->num_rows > 0) {
    while ($row = $result->fetch_assoc()) {
        echo "<div class='order'>";
        echo "<h3>Order #" . $row['id'] . "</h3>";
        echo "<p>Product: " . $row['product_name'] . "</p>";
        echo "<p>Quantity: " . $row['quantity'] . "</p>";
        echo "<p>Total Amount: $" . number_format($row['total_amount'], 2) . "</p>";
        echo "<p>Purchase Date: " . $row['purchase_date'] . "</p>";
        echo "<p>Payment Status: " . $row['payment_status'] . "</p>";
        echo "</div>";
    }
} else {
    echo "No orders found!";
}
?>


<?php
session_start();
unset($_SESSION['logged_in']);
unset($_SESSION['user_id']);
header('Location: login.php');
?>


<?php
session_start();
if (isset($_POST['login'])) {
    $username = $_POST['username'];
    $password = $_POST['password'];

    // Connect to the database
    $conn = mysqli_connect("localhost", "root", "", "my_store");
    
    // SQL query to fetch user data
    $sql = "SELECT * FROM users WHERE username = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("s", $username);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($row = $result->fetch_assoc()) {
        // Check password
        if (password_verify($password, $row['password'])) {
            $_SESSION['user'] = $row;
            header("Location: products.php");
            exit();
        }
    }

    // If login fails
    echo "Invalid username or password";
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login</title>
</head>
<body>
    <form method="post" action="">
        Username: <input type="text" name="username"><br>
        Password: <input type="password" name="password"><br>
        <input type="submit" name="login" value="Login">
    </form>
</body>
</html>


<?php
session_start();
if (!isset($_SESSION['user'])) {
    header("Location: login.php");
    exit();
}

// Connect to database
$conn = mysqli_connect("localhost", "root", "", "my_store");

// Fetch all products
$sql = "SELECT * FROM products";
$result = $conn->query($sql);

?>

<!DOCTYPE html>
<html>
<head>
    <title>Products</title>
</head>
<body>
    <?php while ($row = $result->fetch_assoc()) { ?>
        <div>
            <h2><?php echo $row['name']; ?></h2>
            <p><?php echo $row['description']; ?></p>
            <p>Price: <?php echo $row['price']; ?> USD</p>
            <img src="<?php echo $row['image']; ?>" alt="<?php echo $row['name']; ?>">
            <form action="add_to_cart.php" method="post">
                <input type="hidden" name="product_id" value="<?php echo $row['id']; ?>">
                <input type="number" name="quantity" min="1" value="1">
                <button type="submit">Add to Cart</button>
            </form>
        </div><br>
    <?php } ?>

    <a href="view_cart.php">View Cart</a> | 
    <a href="logout.php">Logout</a>
</body>
</html>


<?php
session_start();
if (!isset($_SESSION['user'])) {
    header("Location: login.php");
    exit();
}

// Get product details
$conn = mysqli_connect("localhost", "root", "", "my_store");
$product_id = $_POST['product_id'];
$quantity = $_POST['quantity'];

$sql = "SELECT * FROM products WHERE id = ?";
$stmt = $conn->prepare($sql);
$stmt->bind_param("i", $product_id);
$stmt->execute();
$result = $stmt->get_result();

if ($row = $result->fetch_assoc()) {
    // Add to cart
    if (isset($_SESSION['cart'][$product_id])) {
        $_SESSION['cart'][$product_id]['quantity'] += $quantity;
    } else {
        $_SESSION['cart'][$product_id] = array(
            'name' => $row['name'],
            'price' => $row['price'],
            'quantity' => $quantity
        );
    }
}

header("Location: products.php");
?>


<?php
session_start();
if (!isset($_SESSION['user'])) {
    header("Location: login.php");
    exit();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <?php if (empty($_SESSION['cart'])) { ?>
        <p>Your cart is empty.</p>
    <?php } else { ?>
        <table border="1">
            <tr>
                <th>Product Name</th>
                <th>Price</th>
                <th>Quantity</th>
                <th>Total</th>
                <th>Action</th>
            </tr>
            <?php foreach ($_SESSION['cart'] as $id => $item) { ?>
                <tr>
                    <td><?php echo $item['name']; ?></td>
                    <td><?php echo $item['price']; ?> USD</td>
                    <td><?php echo $item['quantity']; ?></td>
                    <td><?php echo $item['price'] * $item['quantity']; ?> USD</td>
                    <td><a href="remove_from_cart.php?id=<?php echo $id; ?>">Remove</a></td>
                </tr>
            <?php } ?>
        </table>
    <?php } ?>

    <?php if (!empty($_SESSION['cart'])) { ?>
        <form action="checkout.php" method="post">
            <input type="submit" name="checkout" value="Proceed to Checkout">
        </form>
    <?php } ?>

    <br><a href="products.php">Continue Shopping</a> | 
    <a href="logout.php">Logout</a>
</body>
</html>


<?php
session_start();
if (!isset($_SESSION['user'])) {
    header("Location: login.php");
    exit();
}

$product_id = $_GET['id'];
unset($_SESSION['cart'][$product_id]);

header("Location: view_cart.php");
?>


<?php
session_start();
if (!isset($_SESSION['user'])) {
    header("Location: login.php");
    exit();
}

// Connect to database
$conn = mysqli_connect("localhost", "root", "", "my_store");

// Get user details
$user_id = $_SESSION['user']['id'];
$first_name = $_SESSION['user']['first_name'];
$last_name = $_SESSION['user']['last_name'];

// Calculate total amount
$total_amount = 0;
foreach ($_SESSION['cart'] as $item) {
    $total_amount += $item['price'] * $item['quantity'];
}

// Insert order into orders table
$sql_order = "INSERT INTO orders (user_id, first_name, last_name, total_amount, order_date) 
              VALUES (?, ?, ?, ?, NOW())";
$stmt_order = $conn->prepare($sql_order);
$stmt_order->bind_param("isss", $user_id, $first_name, $last_name, $total_amount);
$stmt_order->execute();
$order_id = $stmt_order->insert_id;

// Insert order items into order_items table
foreach ($_SESSION['cart'] as $product_id => $item) {
    $sql_item = "INSERT INTO order_items (order_id, product_id, quantity, price)
                 VALUES (?, ?, ?, ?)";
    $stmt_item = $conn->prepare($sql_item);
    $stmt_item->bind_param("iiid", $order_id, $product_id, $item['quantity'], $item['price']);
    $stmt_item->execute();
}

// Clear cart
unset($_SESSION['cart']);

header("Location: thank_you.php");
?>


<?php
session_start();
if (!isset($_SESSION['user'])) {
    header("Location: login.php");
    exit();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Thank You</title>
</head>
<body>
    <h1>Thank you for your purchase!</h1>
    <p>Your order has been successfully placed.</p>
    <a href="products.php">Continue Shopping</a> | 
    <a href="logout.php">Logout</a>
</body>
</html>


<?php
// Connect to database
$conn = mysqli_connect("localhost", "root", "", "your_database");

// Get all products from database
$sql = "SELECT * FROM products";
$result = mysqli_query($conn, $sql);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Store</title>
</head>
<body>
    <?php while ($row = mysqli_fetch_assoc($result)) { ?>
        <div class="product">
            <h2><?php echo $row['name']; ?></h2>
            <p><?php echo $row['description']; ?></p>
            <p>Price: <?php echo "$" . number_format($row['price'], 2); ?></p>
            <p>Stock: <?php echo $row['stock']; ?></p>
            <form action="add_to_cart.php" method="post">
                <input type="hidden" name="product_id" value="<?php echo $row['id']; ?>">
                <input type="number" name="quantity" min="1" max="<?php echo $row['stock']; ?>" required>
                <button type="submit">Add to Cart</button>
            </form>
        </div>
    <?php } ?>
</body>
</html>


<?php
session_start();

// Connect to database
$conn = mysqli_connect("localhost", "root", "", "your_database");

if (isset($_POST['product_id']) && isset($_POST['quantity'])) {
    $product_id = $_POST['product_id'];
    $quantity = $_POST['quantity'];

    // Check if product exists
    $sql = "SELECT * FROM products WHERE id = ?";
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, "i", $product_id);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);

    if (mysqli_num_rows($result) > 0) {
        $product = mysqli_fetch_assoc($result);

        // Add product to cart
        $itemArray = array(
            'product_id' => $product['id'],
            'name' => $product['name'],
            'price' => $product['price'],
            'quantity' => $quantity,
            'description' => $product['description']
        );

        if (isset($_SESSION['cart'])) {
            $itemFound = false;
            foreach ($_SESSION['cart'] as &$value) {
                if ($value['product_id'] == $product_id) {
                    $value['quantity'] += $quantity;
                    $itemFound = true;
                }
            }
            if (!$itemFound) {
                $_SESSION['cart'][] = $itemArray;
            }
        } else {
            $_SESSION['cart'] = array($itemArray);
        }

        header("Location: cart.php");
    }
}
?>


<?php
session_start();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <?php if (isset($_SESSION['cart'])) { ?>
        <h1>Your Shopping Cart</h1>
        <table>
            <tr>
                <th>Name</th>
                <th>Price</th>
                <th>Quantity</th>
                <th>Total</th>
                <th>Action</th>
            </tr>
            <?php $total = 0; ?>
            <?php foreach ($_SESSION['cart'] as $key => $product) { ?>
                <tr>
                    <td><?php echo $product['name']; ?></td>
                    <td><?php echo "$" . number_format($product['price'], 2); ?></td>
                    <td>
                        <form action="update_cart.php" method="post">
                            <input type="hidden" name="cart_index" value="<?php echo $key; ?>">
                            <input type="number" name="quantity" min="1" max="5" required value="<?php echo $product['quantity']; ?>">
                            <button type="submit">Update</button>
                        </form>
                    </td>
                    <td><?php echo "$" . number_format($product['price'] * $product['quantity'], 2); ?></td>
                    <td><a href="remove_from_cart.php?index=<?php echo $key; ?>">Remove</a></td>
                </tr>
                <?php $total += $product['price'] * $product['quantity']; ?>
            <?php } ?>
        </table>
        <h2>Total: <?php echo "$" . number_format($total, 2); ?></h2>
        <a href="checkout.php">Checkout</a>
    <?php } else { ?>
        <p>Your cart is empty.</p>
    <?php } ?>
</body>
</html>


<?php
session_start();

if (isset($_POST['cart_index']) && isset($_POST['quantity'])) {
    $cartIndex = $_POST['cart_index'];
    $quantity = $_POST['quantity'];

    if ($quantity >= 1) {
        $_SESSION['cart'][$cartIndex]['quantity'] = $quantity;
    }
}

header("Location: cart.php");
?>


<?php
session_start();

if (isset($_GET['index'])) {
    $cartIndex = $_GET['index'];
    
    if (!empty($_SESSION['cart'][$cartIndex])) {
        unset($_SESSION['cart'][$cartIndex]);
        $_SESSION['cart'] = array_values($_SESSION['cart']);
    }
}

header("Location: cart.php");
?>


<?php
session_start();

if (!isset($_SESSION['cart']) || count($_SESSION['cart']) == 0) {
    header("Location: index.php");
}

// Calculate total price
$total = 0;
foreach ($_SESSION['cart'] as $product) {
    $total += $product['price'] * $product['quantity'];
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
</head>
<body>
    <h1>Checkout</h1>
    <form action="process_order.php" method="post">
        <p>Total: <?php echo "$" . number_format($total, 2); ?></p>
        <h3>Payment Information:</h3>
        <input type="text" name="card_number" placeholder="Card Number" required>
        <input type="text" name="cvv" placeholder="CVV" required>
        <input type="text" name="name_on_card" placeholder="Name on Card" required>
        <button type="submit">Complete Purchase</button>
    </form>
</body>
</html>


<?php
session_start();

// Validate form inputs
if (empty($_POST)) {
    header("Location: checkout.php");
}

$card_number = htmlspecialchars(trim($_POST['card_number']));
$cvv = htmlspecialchars(trim($_POST['cvv']));
$name_on_card = htmlspecialchars(trim($_POST['name_on_card']));

if (!isset($_SESSION['cart']) || count($_SESSION['cart']) == 0) {
    header("Location: index.php");
}

// For this example, we'll assume payment is successful
$payment_success = true;

if ($payment_success) {
    // Process order and save to database
    
    // Connect to database
    $conn = mysqli_connect("localhost", "root", "", "your_database");

    // Calculate total price
    $total = 0;
    foreach ($_SESSION['cart'] as $product) {
        $total += $product['price'] * $product['quantity'];
    }

    // Insert order into database
    $sql = "INSERT INTO orders (total, name_on_card, card_number, cvv) VALUES (?, ?, ?, ?)";
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, "dsii", $total, $name_on_card, $card_number, $cvv);
    mysqli_stmt_execute($stmt);

    $order_id = mysqli_insert_id($conn);

    // Insert order details
    foreach ($_SESSION['cart'] as $product) {
        $sql_details = "INSERT INTO order_details (order_id, product_id, quantity, price) VALUES (?, ?, ?, ?)";
        $stmt_details = mysqli_prepare($conn, $sql_details);
        mysqli_stmt_bind_param($stmt_details, "iiid", $order_id, $product['product_id'], $product['quantity'], $product['price']);
        mysqli_stmt_execute($stmt_details);

        // Update product stock
        $sql_stock = "UPDATE products SET stock = stock - ? WHERE id = ?";
        $stmt_stock = mysqli_prepare($conn, $sql_stock);
        mysqli_stmt_bind_param($stmt_stock, "ii", $product['quantity'], $product['product_id']);
        mysqli_stmt_execute($stmt_stock);
    }

    // Clear cart
    unset($_SESSION['cart']);

    // Redirect to thank you page
    header("Location: thank_you.php");
} else {
    echo "Payment failed. Please try again.";
}
?>


<!DOCTYPE html>
<html>
<head>
    <title>Thank You</title>
</head>
<body>
    <h1>Thank you for your purchase!</h1>
    <p>Your order has been successfully processed.</p>
</body>
</html>


<?php
// index.php - Product Display Page
session_start();

$products = array(
    array('id' => 1, 'name' => 'Product 1', 'price' => 29.99, 'description' => 'This is product 1'),
    array('id' => 2, 'name' => 'Product 2', 'price' => 49.99, 'description' => 'This is product 2'),
    array('id' => 3, 'name' => 'Product 3', 'price' => 19.99, 'description' => 'This is product 3')
);

if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

?>

<!DOCTYPE html>
<html>
<head>
    <title>Store</title>
    <style>
        .product {
            border: 1px solid #ddd;
            padding: 10px;
            margin: 5px;
        }
    </style>
</head>
<body>
    <h1>Welcome to Our Store</h1>

    <?php foreach ($products as $product): ?>
        <div class="product">
            <h3><?php echo $product['name']; ?></h3>
            <p>Price: $<?php echo number_format($product['price'], 2); ?></p>
            <p><?php echo $product['description']; ?></p>
            <form action="add_to_cart.php" method="get">
                <input type="hidden" name="id" value="<?php echo $product['id']; ?>">
                <button type="submit">Add to Cart</button>
            </form>
        </div>
    <?php endforeach; ?>

    <a href="cart.php">View Cart</a>
</body>
</html>


<?php
// add_to_cart.php

session_start();

if (isset($_GET['id'])) {
    $product_id = $_GET['id'];

    if (!isset($_SESSION['cart'][$product_id])) {
        $_SESSION['cart'][$product_id] = array(
            'id' => $product_id,
            'quantity' => 1
        );
    } else {
        $_SESSION['cart'][$product_id]['quantity']++;
    }
}

header('Location: index.php');
exit();


<?php
// cart.php - Cart View Page
session_start();

if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
    <style>
        .cart-item {
            border: 1px solid #ddd;
            padding: 10px;
            margin: 5px;
        }
    </style>
</head>
<body>
    <h1>Your Shopping Cart</h1>

    <?php if (empty($_SESSION['cart'])): ?>
        <p>Your cart is empty.</p>
    <?php else: ?>

        <?php foreach ($_SESSION['cart'] as $item): 
            // Retrieve product details from your database or array here
            $product = get_product_details($item['id']);
        ?>

            <div class="cart-item">
                <h3><?php echo $product['name']; ?></h3>
                <p>Price: $<?php echo number_format($product['price'], 2); ?></p>
                <p>Quantity: <?php echo $item['quantity']; ?></p>
                
                <form action="update_cart.php" method="post">
                    <input type="hidden" name="id" value="<?php echo $item['id']; ?>">
                    <input type="number" name="quantity" min="1" value="<?php echo $item['quantity']; ?>">
                    <button type="submit">Update</button>
                </form>

                <form action="remove_from_cart.php" method="post">
                    <input type="hidden" name="id" value="<?php echo $item['id']; ?>">
                    <button type="submit">Remove</button>
                </form>
            </div>

        <?php endforeach; ?>

        <p>Total: $<?php echo number_format(calculate_cart_total(), 2); ?></p>
        <a href="checkout.php">Checkout</a>
    <?php endif; ?>

    <a href="index.php">Continue Shopping</a>
</body>
</html>

<?php
function get_product_details($id) {
    // In a real application, you would query your database here
    $products = array(
        1 => array('name' => 'Product 1', 'price' => 29.99),
        2 => array('name' => 'Product 2', 'price' => 49.99),
        3 => array('name' => 'Product 3', 'price' => 19.99)
    );
    
    return $products[$id];
}

function calculate_cart_total() {
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $product = get_product_details($item['id']);
        $total += ($product['price'] * $item['quantity']);
    }
    return $total;
}
?>


<?php
// update_cart.php

session_start();

if (isset($_POST['id']) && isset($_POST['quantity'])) {
    $product_id = $_POST['id'];
    $new_quantity = $_POST['quantity'];

    if (isset($_SESSION['cart'][$product_id])) {
        $_SESSION['cart'][$product_id]['quantity'] = $new_quantity;
    }
}

header('Location: cart.php');
exit();


<?php
// remove_from_cart.php

session_start();

if (isset($_POST['id'])) {
    $product_id = $_POST['id'];
    
    if (isset($_SESSION['cart'][$product_id])) {
        unset($_SESSION['cart'][$product_id]);
    }
}

header('Location: cart.php');
exit();


<?php
// checkout.php - Checkout Page
session_start();

if (!empty($_SESSION['cart'])) {

?>

<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
</head>
<body>
    <h1>Checkout</h1>

    <form action="process_order.php" method="post">
        <div>
            <label for="name">Name:</label>
            <input type="text" id="name" name="name" required>
        </div>

        <div>
            <label for="email">Email:</label>
            <input type="email" id="email" name="email" required>
        </div>

        <div>
            <label for="address">Address:</label>
            <textarea id="address" name="address" required></textarea>
        </div>

        <div>
            <label for="payment_method">Payment Method:</label>
            <select id="payment_method" name="payment_method">
                <option value="credit_card">Credit Card</option>
                <option value="paypal">PayPal</option>
            </select>
        </div>

        <button type="submit">Place Order</button>
    </form>

<?php
} else {
    echo "Your cart is empty. Please add items to your cart first.";
}
?>

<a href="cart.php">Back to Cart</a>
</body>
</html>


<?php
// process_order.php - Order Processing Page
session_start();

if (!empty($_SESSION['cart']) && isset($_POST)) {

    // Here you would typically:
    // 1. Validate and sanitize form inputs
    // 2. Connect to a database
    // 3. Insert order details into the database
    // 4. Process payment (e.g., through PayPal or Stripe)
    // 5. Send confirmation emails

    // For this example, we'll just display a thank you message
    echo "Thank you for your order!";
    
    // Clear the cart
    $_SESSION['cart'] = array();
} else {
    echo "Your cart is empty.";
}
?>


<?php
session_start();
include 'config/db.php';

$sql = "SELECT * FROM products";
$result = $conn->query($sql);
?>
<!DOCTYPE html>
<html>
<head>
    <title>Product List</title>
</head>
<body>
    <h1>Product List</h1>
    <?php while ($row = $result->fetch_assoc()) { ?>
        <div style="border: 1px solid #ddd; padding: 10px;">
            <img src="<?php echo $row['image']; ?>" alt="<?php echo $row['name']; ?>" style="width: 200px;">
            <h3><?php echo $row['name']; ?></h3>
            <p><?php echo $row['description']; ?></p>
            <p>Price: <?php echo $row['price']; ?>$</p>
            <p>Quantity Available: <?php echo $row['quantity']; ?></p>
            <form action="add_to_cart.php" method="post">
                <input type="hidden" name="id" value="<?php echo $row['id']; ?>">
                <input type="number" name="quantity" min="1" max="<?php echo $row['quantity']; ?>" required>
                <button type="submit">Add to Cart</button>
            </form>
        </div>
    <?php } ?>
</body>
</html>


<?php
session_start();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <h1>Your Shopping Cart</h1>
    <?php if (!empty($_SESSION['cart'])) { ?>
        <table border="1">
            <tr>
                <th>Name</th>
                <th>Price</th>
                <th>Quantity</th>
                <th>Total</th>
                <th>Action</th>
            </tr>
            <?php foreach ($_SESSION['cart'] as $product) { ?>
                <tr>
                    <td><?php echo $product['name']; ?></td>
                    <td><?php echo $product['price']; ?>$</td>
                    <td><input type="number" name="quantity" min="1" max="<?php echo $product['stock']; ?>" value="<?php echo $product['quantity']; ?>"></td>
                    <td><?php echo number_format($product['price'] * $product['quantity'], 2); ?>$</td>
                    <td><a href="remove_from_cart.php?id=<?php echo $product['id']; ?>">Remove</a></td>
                </tr>
            <?php } ?>
        </table>
        <p>Total Price: <?php echo number_format(get_total(), 2); ?>$</p>
        <a href="checkout.php">Proceed to Checkout</a>
    <?php } else { ?>
        <p>Your cart is empty. Please add some products.</p>
    <?php } ?>
</body>
</html>


<?php
session_start();
if (empty($_SESSION['cart'])) {
    header("Location: index.php");
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
</head>
<body>
    <h1>Checkout</h1>
    <form action="process_order.php" method="post">
        <div style="border: 1px solid #ddd; padding: 20px;">
            <h3>Billing Information</h3>
            <p><strong>Name:</strong> <?php echo $_SESSION['user']['name']; ?></p>
            <p><strong>Email:</strong> <?php echo $_SESSION['user']['email']; ?></p>
        </div>

        <div style="border: 1px solid #ddd; padding: 20px;">
            <h3>Payment Information</h3>
            <label>Card Number:</label><br>
            <input type="text" name="card_number" required><br>
            <label>Name on Card:</label><br>
            <input type="text" name="name_on_card" required><br>
            <label>Expiration Date (MM/YY):</label><br>
            <input type="text" name="expiration_date" required><br>
        </div>

        <button type="submit">Complete Purchase</button>
    </form>
</body>
</html>


<?php
session_start();
include 'config/db.php';

// Simulate payment processing
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Insert order into database
    $sql = "INSERT INTO orders (user_id, total_price) VALUES (?, ?)";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("id", $_SESSION['user']['id'], get_total());
    $stmt->execute();
    $order_id = $stmt->insert_id;

    // Insert order details
    foreach ($_SESSION['cart'] as $product) {
        $sql_details = "INSERT INTO order_details (order_id, product_id, quantity, price) VALUES (?, ?, ?, ?)";
        $stmt_details = $conn->prepare($sql_details);
        $stmt_details->bind_param("iiid", $order_id, $product['id'], $product['quantity'], $product['price']);
        $stmt_details->execute();
    }

    // Send email receipt
    $to = $_SESSION['user']['email'];
    $subject = "Order Confirmation";
    $body = "Thank you for your order! Your order details are as follows:

";
    foreach ($_SESSION['cart'] as $product) {
        $body .= "- " . $product['name'] . " x" . $product['quantity'] . " - $" . ($product['price'] * $product['quantity']) . "
";
    }
    $body .= "
Total: $" . get_total() . "

Thank you for shopping with us!";
    mail($to, $subject, $body);

    // Clear cart
    unset($_SESSION['cart']);

    header("Location: confirmation.php");
}
?>


<?php
session_start();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Order Confirmation</title>
</head>
<body>
    <h1>Thank You for Your Order!</h1>
    <p>Your order has been successfully processed.</p>
    <a href="index.php">Continue Shopping</a>
</body>
</html>


<?php
$host = "localhost";
$username = "root";
$password = "";
$dbname = "shoppingcart";

$conn = new mysqli($host, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

function get_total() {
    global $conn;
    $total = 0;
    if (!empty($_SESSION['cart'])) {
        foreach ($_SESSION['cart'] as $product) {
            $total += ($product['price'] * $product['quantity']);
        }
    }
    return $total;
}
?>


<?php
session_start();
include 'config/db.php';

$product_id = $_POST['id'];
$quantity = $_POST['quantity'];

$sql = "SELECT * FROM products WHERE id = ?";
$stmt = $conn->prepare($sql);
$stmt->bind_param("i", $product_id);
$stmt->execute();
$result = $stmt->get_result();

if ($result->num_rows > 0) {
    $product = $result->fetch_assoc();
    if ($quantity <= $product['quantity']) {
        if (!isset($_SESSION['cart'][$product_id])) {
            $_SESSION['cart'][$product_id] = array(
                'id' => $product_id,
                'name' => $product['name'],
                'price' => $product['price'],
                'stock' => $product['quantity'],
                'quantity' => $quantity
            );
        } else {
            $_SESSION['cart'][$product_id]['quantity'] += $quantity;
        }
    }
}

header("Location: cart.php");
?>


<?php
session_start();

$product_id = $_GET['id'];
unset($_SESSION['cart'][$product_id]);

header("Location: cart.php");
?>


<?php
$servername = "localhost";
$username = "root";
$password = "";
$dbname = "purchase_system";

// Create connection
$conn = new mysqli($servername, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}
?>


<?php
include 'db_connection.php';

$sql = "SELECT * FROM products";
$result = $conn->query($sql);

if ($result->num_rows > 0) {
    while($row = $result->fetch_assoc()) {
        echo "<div class='product'>";
        echo "<h2>" . $row["name"] . "</h2>";
        echo "<p>Price: $" . number_format($row["price"], 2) . "</p>";
        echo "<p>Description: " . $row["description"] . "</p>";
        echo "<p>Stock: " . $row["stock"] . "</p>";
        echo "<a href='checkout.php?id=" . $row["id"] . "' class='btn'>Add to Cart</a>";
        echo "</div>";
    }
} else {
    echo "No products found.";
}
$conn->close();
?>


<?php
include 'db_connection.php';

if (isset($_GET['id'])) {
    $product_id = $_GET['id'];
    
    $sql = "SELECT * FROM products WHERE id=" . $product_id;
    $result = $conn->query($sql);
    
    if ($result->num_rows == 1) {
        $row = $result->fetch_assoc();
        $product_name = $row["name"];
        $price = $row["price"];
        $description = $row["description"];
    } else {
        echo "Product not found.";
        exit();
    }
} else {
    header("Location: index.php");
    exit();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
</head>
<body>
    <h2>Checkout - <?php echo $product_name ?></h2>
    
    <form action="process_order.php" method="post">
        <input type="hidden" name="product_id" value="<?php echo $product_id ?>">
        
        <div>
            <label>Name:</label><br>
            <input type="text" name="user_name" required>
        </div>
        
        <div>
            <label>Email:</label><br>
            <input type="email" name="user_email" required>
        </div>
        
        <div>
            <label>Address:</label><br>
            <textarea name="user_address" required></textarea>
        </div>
        
        <input type="submit" value="Place Order">
    </form>
</body>
</html>

<?php
$conn->close();
?>


<?php
include 'db_connection.php';

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $user_name = $_POST['user_name'];
    $user_email = $_POST['user_email'];
    $user_address = $_POST['user_address'];
    $product_id = $_POST['product_id'];
    
    // Get product details
    $sql = "SELECT price, stock FROM products WHERE id=" . $product_id;
    $result = $conn->query($sql);
    $row = $result->fetch_assoc();
    $price = $row["price"];
    $stock = $row["stock"];
    
    // Check if product is in stock
    if ($stock > 0) {
        // Insert order into orders table
        $total_price = $price * 1; // For simplicity, assuming quantity is 1
        $sql = "INSERT INTO orders (user_name, user_email, user_address, product_id, quantity, total_price)
                VALUES ('$user_name', '$user_email', '$user_address', '$product_id', '1', '$total_price')";
        
        if ($conn->query($sql) === TRUE) {
            // Update stock
            $new_stock = $stock - 1;
            $sql = "UPDATE products SET stock=$new_stock WHERE id=" . $product_id;
            $conn->query($sql);
            
            // Redirect to confirmation page
            header("Location: order_confirmation.php?order_id=" . $conn->insert_id);
            exit();
        } else {
            echo "Error: " . $sql . "<br>" . $conn->error;
        }
    } else {
        echo "Sorry, this product is out of stock.";
    }
}

$conn->close();
?>


<?php
include 'db_connection.php';

if (isset($_GET['order_id'])) {
    $order_id = $_GET['order_id'];
    
    $sql = "SELECT * FROM orders WHERE id=" . $order_id;
    $result = $conn->query($sql);
    
    if ($result->num_rows == 1) {
        $row = $result->fetch_assoc();
        $product_id = $row["product_id"];
        
        // Get product name
        $sql_product = "SELECT name FROM products WHERE id=" . $product_id;
        $result_product = $conn->query($sql_product);
        $product_row = $result_product->fetch_assoc();
        $product_name = $product_row["name"];
    } else {
        echo "Order not found.";
        exit();
    }
} else {
    header("Location: index.php");
    exit();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Order Confirmation</title>
</head>
<body>
    <h2>Order Confirmed!</h2>
    
    <p>Your order has been received successfully.</p>
    <p>Product: <?php echo $product_name ?></p>
    <p>Order ID: <?php echo $order_id ?></p>
    <p>Total Price: <?php echo "$" . number_format($row["total_price"], 2) ?></p>
    
    <a href="index.php">Continue Shopping</a>
</body>
</html>

<?php
$conn->close();
?>


<?php
// Initialize variables for error messages
$errors = array();

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Validate input fields
    $card_number = isset($_POST['card_number']) ? $_POST['card_number'] : '';
    $name_on_card = isset($_POST['name_on_card']) ? $_POST['name_on_card'] : '';
    $expiry_date = isset($_POST['expiry_date']) ? $_POST['expiry_date'] : '';
    $cvv = isset($_POST['cvv']) ? $_POST['cvv'] : '';

    // Basic validation
    if (empty($card_number)) {
        $errors[] = "Card number is required";
    }
    if (empty($name_on_card)) {
        $errors[] = "Name on card is required";
    }
    if (empty($expiry_date)) {
        $errors[] = "Expiry date is required";
    }
    if (empty($cvv)) {
        $errors[] = "CVV is required";
    }

    // Check card number format
    if (!preg_match('/^[0-9]{16}$/', $card_number)) {
        $errors[] = "Invalid card number format";
    }

    // Check expiry date format (MM/YY)
    if (!preg_match('/^(0[1-9]|1[0-2])\/\d{2}$/', $expiry_date)) {
        $errors[] = "Invalid expiry date format";
    }

    // Check CVV
    if (!preg_match('/^\d{3}$/', $cvv)) {
        $errors[] = "Invalid CVV format";
    }

    // If no errors, process payment
    if (empty($errors)) {
        // Here you would typically integrate with a payment gateway
        // For this example, we'll simulate successful payment processing

        // Simulate payment processing
        $payment_processed = true;

        if ($payment_processed) {
            // Store order details in database or session
            $_SESSION['order'] = array(
                'card_number' => $card_number,
                'name_on_card' => $name_on_card,
                'expiry_date' => $expiry_date,
                'cvv' => $cvv
            );

            // Redirect to thank you page or show success message
            header("Location: thank_you.php");
            exit();
        } else {
            $errors[] = "Payment processing failed";
        }
    }
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Purchase</title>
</head>
<body>
    <?php if (!empty($errors)): ?>
        <div style="color: red;">
            <?php foreach ($errors as $error): ?>
                <p><?php echo htmlspecialchars($error); ?></p>
            <?php endforeach; ?>
        </div>
    <?php endif; ?>

    <h1>Purchase</h1>

    <form action="<?php echo htmlspecialchars($_SERVER['PHP_SELF']); ?>" method="post">
        <div>
            <label for="card_number">Card Number:</label><br>
            <input type="text" id="card_number" name="card_number" required>
        </div>

        <div>
            <label for="name_on_card">Name on Card:</label><br>
            <input type="text" id="name_on_card" name="name_on_card" required>
        </div>

        <div>
            <label for="expiry_date">Expiry Date (MM/YY):</label><br>
            <input type="text" id="expiry_date" name="expiry_date" pattern="(0[1-9]|1[0-2])/\d{2}" required>
        </div>

        <div>
            <label for="cvv">CVV:</label><br>
            <input type="password" id="cvv" name="cvv" pattern="\d{3}" required>
        </div>

        <button type="submit">Purchase</button>
    </form>
</body>
</html>


<?php
$host = "localhost";
$username = "root";
$password = "";
$dbname = "shopping_cart";

$conn = mysqli_connect($host, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}
?>


<?php
require_once 'db.php';

$products = array(
    array(
        'name' => 'Product 1',
        'price' => 29.99,
        'description' => 'Description for Product 1',
        'image' => 'product1.jpg'
    ),
    array(
        'name' => 'Product 2',
        'price' => 49.99,
        'description' => 'Description for Product 2',
        'image' => 'product2.jpg'
    )
);

foreach ($products as $product) {
    $sql = "INSERT INTO products (name, price, description, image) 
            VALUES ('{$product['name']}', {$product['price']}, '{$product['description']}', '{$product['image']}')";
    
    if (mysqli_query($conn, $sql)) {
        echo "Product added successfully<br>";
    } else {
        echo "Error: " . mysqli_error($conn) . "<br>";
    }
}

mysqli_close($conn);
?>


<?php
session_start();
require_once 'db.php';

// Check if user is logged in, otherwise use session ID as temporary identifier
if (!isset($_SESSION['user_id'])) {
    $_SESSION['cart_identifier'] = session_id();
} else {
    $_SESSION['cart_identifier'] = $_SESSION['user_id'];
}

$cartIdentifier = $_SESSION['cart_identifier'];
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
    <style>
        .product {
            border: 1px solid #ddd;
            padding: 10px;
            margin: 5px;
        }
        img {
            max-width: 200px;
        }
        .cart-container {
            margin-top: 20px;
            padding: 20px;
            border: 1px solid #ddd;
        }
    </style>
</head>
<body>

<h1>Products</h1>
<?php
$sql = "SELECT * FROM products";
$result = mysqli_query($conn, $sql);

if (mysqli_num_rows($result) > 0) {
    while ($row = mysqli_fetch_assoc($result)) {
        echo "<div class='product'>";
        echo "<img src='{$row['image']}' alt='{$row['name']}'>";
        echo "<h3>{$row['name']}</h3>";
        echo "<p>Price: \${$row['price']}</p>";
        echo "<a href='add_to_cart.php?product_id={$row['id']}'>Add to Cart</a>";
        echo "</div>";
    }
} else {
    echo "No products found.";
}

mysqli_close($conn);
?>

<h2>Your Cart</h2>
<div class="cart-container">
    <?php
    $sql = "SELECT c.id AS cart_id, p.*, c.quantity 
            FROM products p 
            JOIN cart c ON p.id = c.product_id 
            WHERE c.user_id = {$cartIdentifier}";
    
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) > 0) {
        while ($row = mysqli_fetch_assoc($result)) {
            echo "<div class='product'>";
            echo "<img src='{$row['image']}' alt='{$row['name']}'>";
            echo "<h3>{$row['name']}</h3>";
            echo "<p>Quantity: {$row['quantity']}</p>";
            echo "<p>Total: \${$row['price'] * $row['quantity']}</p>";
            echo "<a href='remove_from_cart.php?cart_id={$row['cart_id']}'>Remove</a>";
            echo "</div>";
        }
    } else {
        echo "Your cart is empty.";
    }

    mysqli_close($conn);
    ?>
</div>

</body>
</html>


<?php
session_start();
require_once 'db.php';

if (!isset($_GET['product_id'])) {
    header("Location: index.php");
    exit();
}

$productId = $_GET['product_id'];
$userIdentifier = isset($_SESSION['user_id']) ? $_SESSION['user_id'] : session_id();

$sql = "INSERT INTO cart (user_id, product_id, quantity) 
        VALUES ($userIdentifier, $productId, 1)
        ON DUPLICATE KEY UPDATE quantity = quantity + 1";

if (mysqli_query($conn, $sql)) {
    echo "<script>alert('Product added to cart');</script>";
} else {
    echo "Error: " . mysqli_error($conn);
}

mysqli_close($conn);
header("Location: index.php");
?>


<?php
session_start();
require_once 'db.php';

if (!isset($_GET['cart_id'])) {
    header("Location: index.php");
    exit();
}

$cartId = $_GET['cart_id'];
$sql = "DELETE FROM cart WHERE id = $cartId";

if (mysqli_query($conn, $sql)) {
    echo "<script>alert('Product removed from cart');</script>";
} else {
    echo "Error: " . mysqli_error($conn);
}

mysqli_close($conn);
header("Location: index.php");
?>


<?php session_start(); ?>

<!DOCTYPE html>
<html>
<head>
    <title>Products</title>
</head>
<body>
    <?php
    // Sample products array
    $products = array(
        array('id' => 1, 'name' => 'Product 1', 'price' => 10.00),
        array('id' => 2, 'name' => 'Product 2', 'price' => 20.00),
        array('id' => 3, 'name' => 'Product 3', 'price' => 30.00)
    );
    ?>

    <h1>Available Products</h1>
    <?php foreach ($products as $product): ?>
        <div>
            <h2><?php echo $product['name']; ?></h2>
            <p>Price: $<?php echo number_format($product['price'], 2); ?></p>
            <form action="add_to_cart.php" method="post">
                <input type="hidden" name="id" value="<?php echo $product['id']; ?>">
                <input type="number" name="quantity" min="1" value="1">
                <button type="submit">Add to Cart</button>
            </form>
        </div>
    <?php endforeach; ?>
</body>
</html>


<?php session_start(); ?>

<!DOCTYPE html>
<html>
<head>
    <title>Add to Cart</title>
</head>
<body>
    <?php
    // Check if product ID and quantity are set
    if (!isset($_POST['id']) || !isset($_POST['quantity'])) {
        die("Invalid request");
    }

    $productId = $_POST['id'];
    $quantity = $_POST['quantity'];

    // Initialize cart in session if it doesn't exist
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }

    // Add product to cart or increase quantity if already exists
    if (array_key_exists($productId, $_SESSION['cart'])) {
        $_SESSION['cart'][$productId]['quantity'] += $quantity;
    } else {
        $_SESSION['cart'][$productId] = array(
            'id' => $productId,
            'quantity' => $quantity,
            'price' => get_product_price($productId)
        );
    }

    // Redirect back to products page
    header("Location: products.php");
    exit();
    ?>

    <?php
    function get_product_price($productId) {
        // In a real application, this would query your database
        $prices = array(
            1 => 10.00,
            2 => 20.00,
            3 => 30.00
        );
        
        return isset($prices[$productId]) ? $prices[$productId] : 0;
    }
    ?>
</body>
</html>


<?php session_start(); ?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <?php
    // Initialize cart if it doesn't exist
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }

    $totalPrice = 0;
    ?>

    <h1>Your Shopping Cart</h1>
    
    <?php if (empty($_SESSION['cart'])): ?>
        <p>Your cart is empty.</p>
    <?php else: ?>
        <table border="1">
            <tr>
                <th>Product ID</th>
                <th>Quantity</th>
                <th>Price</th>
                <th>Total</th>
                <th>Action</th>
            </tr>
            
            <?php foreach ($_SESSION['cart'] as $item): ?>
                <tr>
                    <td><?php echo $item['id']; ?></td>
                    <td><?php echo $item['quantity']; ?></td>
                    <td>$<?php echo number_format($item['price'], 2); ?></td>
                    <td>$<?php 
                        $total = $item['quantity'] * $item['price'];
                        echo number_format($total, 2);
                        $totalPrice += $total;
                    ?></td>
                    <td><a href="remove_from_cart.php?id=<?php echo $item['id']; ?>">Remove</a></td>
                </tr>
            <?php endforeach; ?>
            
            <tr>
                <td colspan="3">Total:</td>
                <td>$<?php echo number_format($totalPrice, 2); ?></td>
                <td><form action="process_purchase.php" method="post">
                    <button type="submit">Purchase</button>
                </form></td>
            </tr>
        </table>
    <?php endif; ?>

    <p><a href="products.php">Continue Shopping</a></p>
</body>
</html>


<?php session_start(); ?>

<!DOCTYPE html>
<html>
<head>
    <title>Remove From Cart</title>
</head>
<body>
    <?php
    // Check if product ID is set
    if (!isset($_GET['id'])) {
        die("Invalid request");
    }

    $productId = $_GET['id'];

    // Remove item from cart
    if (isset($_SESSION['cart'][$productId])) {
        unset($_SESSION['cart'][$productId]);
    }

    // Redirect back to cart page
    header("Location: cart.php");
    exit();
    ?>
</body>
</html>


<?php session_start(); ?>

<!DOCTYPE html>
<html>
<head>
    <title>Purchase Confirmation</title>
</head>
<body>
    <?php
    // Check if cart is empty
    if (empty($_SESSION['cart'])) {
        die("Your cart is empty.");
    }

    // Process purchase logic here
    // In a real application, this would connect to your payment processor

    // For now, we'll just display the confirmation
    ?>

    <h1>Thank you for your purchase!</h1>
    
    <?php
    // Empty the cart after purchase
    unset($_SESSION['cart']);
    ?>

    <p>Your order has been processed.</p>
</body>
</html>


<?php
// Database connection
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "shop";

$conn = mysqli_connect($servername, $username, $password, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Create products table if not exists
$sql = "CREATE TABLE IF NOT EXISTS products (
id INT AUTO_INCREMENT PRIMARY KEY,
product_name VARCHAR(255),
price DECIMAL(10,2)
)";
mysqli_query($conn, $sql);

// Create shopping cart table if not exists
$sql = "CREATE TABLE IF NOT EXISTS shopping_cart (
id INT AUTO_INCREMENT PRIMARY KEY,
user_id INT,
product_id INT,
quantity INT
)";
mysqli_query($conn, $sql);

// Create purchases table if not exists
$sql = "CREATE TABLE IF NOT EXISTS purchases (
id INT AUTO_INCREMENT PRIMARY KEY,
user_id INT,
product_id INT,
quantity INT,
total DECIMAL(10,2),
purchase_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP
)";
mysqli_query($conn, $sql);

// Function to add products
function addProduct($name, $price) {
    global $conn;
    $sql = "INSERT INTO products (product_name, price) VALUES ('$name', '$price')";
    mysqli_query($conn, $sql);
}

// Function to display products
function displayProducts() {
    global $conn;
    $sql = "SELECT * FROM products";
    $result = mysqli_query($conn, $sql);
    
    while ($row = mysqli_fetch_assoc($result)) {
        echo "<div>";
        echo "<h3>".$row['product_name']."</h3>";
        echo "<p>Price: $".$row['price']."</p>";
        echo "<a href='add_to_cart.php?id=".$row['id']."'>Add to Cart</a>";
        echo "</div>";
    }
}

// Function to add item to cart
function addToCart($user_id, $product_id) {
    global $conn;
    $sql = "SELECT * FROM shopping_cart WHERE user_id='$user_id' AND product_id='$product_id'";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) > 0) {
        // Increment quantity
        $sql = "UPDATE shopping_cart SET quantity=quantity+1 WHERE user_id='$user_id' AND product_id='$product_id'";
        mysqli_query($conn, $sql);
    } else {
        // Add new item
        $sql = "INSERT INTO shopping_cart (user_id, product_id, quantity) VALUES ('$user_id', '$product_id', '1')";
        mysqli_query($conn, $sql);
    }
}

// Function to get cart contents
function getCartContents($user_id) {
    global $conn;
    $sql = "SELECT * FROM shopping_cart WHERE user_id='$user_id'";
    $result = mysqli_query($conn, $sql);
    
    $cart_items = array();
    while ($row = mysqli_fetch_assoc($result)) {
        $product_sql = "SELECT * FROM products WHERE id=".$row['product_id'];
        $product_result = mysqli_query($conn, $product_sql);
        $product_row = mysqli_fetch_assoc($product_result);
        
        $item = array(
            'id' => $row['id'],
            'product_name' => $product_row['product_name'],
            'price' => $product_row['price'],
            'quantity' => $row['quantity']
        );
        $cart_items[] = $item;
    }
    return $cart_items;
}

// Function to process checkout
function checkout($user_id) {
    global $conn;
    $cart_items = getCartContents($user_id);
    
    foreach ($cart_items as $item) {
        $total = $item['price'] * $item['quantity'];
        
        // Insert into purchases table
        $sql = "INSERT INTO purchases (user_id, product_id, quantity, total) 
                VALUES ('$user_id', '".$item['id']."', '".$item['quantity']."', '$total')";
        mysqli_query($conn, $sql);
    }
    
    // Clear shopping cart
    $sql = "DELETE FROM shopping_cart WHERE user_id='$user_id'";
    mysqli_query($conn, $sql);
}

// Function to display purchase history
function displayPurchaseHistory($user_id) {
    global $conn;
    $sql = "SELECT * FROM purchases WHERE user_id='$user_id' ORDER BY purchase_date DESC";
    $result = mysqli_query($conn, $sql);
    
    while ($row = mysqli_fetch_assoc($result)) {
        // Get product details
        $product_sql = "SELECT * FROM products WHERE id=".$row['product_id'];
        $product_result = mysqli_query($conn, $product_sql);
        $product_row = mysqli_fetch_assoc($product_result);
        
        echo "<div>";
        echo "<h4>".$product_row['product_name']."</h4>";
        echo "<p>Quantity: ".$row['quantity']."</p>";
        echo "<p>Price: $".$row['total']."</p>";
        echo "<p>Date: ".date('Y-m-d H:i:s', strtotime($row['purchase_date']))."</p>";
        echo "</div>";
    }
}
?>


<?php
// Add some products
addProduct("Laptop", 999);
addProduct("Smartphone", 499);
addProduct("Tablet", 299);

// Display all products
displayProducts();

// Example user ID (you should use actual user authentication)
$user_id = 1;

// Add item to cart
if (isset($_GET['id'])) {
    addToCart($user_id, $_GET['id']);
}

// Checkout process
if (isset($_POST['checkout'])) {
    checkout($user_id);
}

// Display purchase history
echo "<h2>Purchase History</h2>";
displayPurchaseHistory($user_id);
?>


<?php
// Connect to the database
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "myDB";

$conn = new mysqli($servername, $username, $password, $dbname);
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Query to get all products
$sql = "SELECT * FROM products";
$result = $conn->query($sql);

echo "<table border='1'>
<tr>
<th>Product ID</th>
<th>Name</th>
<th>Price</th>
<th>Description</th>
<th>Action</th>
</tr>";

if ($result->num_rows > 0) {
    // Output data of each row
    while($row = $result->fetch_assoc()) {
        echo "<tr>";
        echo "<td>" . $row["id"] . "</td>";
        echo "<td>" . $row["name"] . "</td>";
        echo "<td>£" . number_format($row["price"], 2) . "</td>";
        echo "<td>" . $row["description"] . "</td>";
        echo "<td><a href='add_to_cart.php?id=" . $row["id"] . "'>Add to Cart</a></td>";
        echo "</tr>";
    }
} else {
    echo "0 results";
}

echo "</table>";
$conn->close();
?>


<?php
session_start();

// Connect to database
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "myDB";

$conn = new mysqli($servername, $username, $password, $dbname);
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Get product details
$product_id = $_GET['id'];
$sql = "SELECT * FROM products WHERE id=" . $product_id;
$result = $conn->query($sql);

if ($result->num_rows > 0) {
    $row = $result->fetch_assoc();
    $product_name = $row["name"];
    $product_price = $row["price"];
    $product_description = $row["description"];

    // Add to cart array
    if (isset($_SESSION['cart'])) {
        $_SESSION['cart'][$product_id] += 1;
    } else {
        $_SESSION['cart'] = array($product_id => 1);
    }

    echo "<script>alert('Product added to cart');</script>";
} else {
    echo "Error adding product to cart";
}

$conn->close();
header("Location: index.php");
exit();
?>


<?php
session_start();

// Connect to database
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "myDB";

$conn = new mysqli($servername, $username, $password, $dbname);
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

echo "<h1>Shopping Cart</h1>";
echo "<table border='1'>
<tr>
<th>Product ID</th>
<th>Name</th>
<th>Quantity</th>
<th>Price</th>
<th>Total</th>
<th>Action</th>
</tr>";

$total = 0;

if (isset($_SESSION['cart'])) {
    foreach ($_SESSION['cart'] as $product_id => $quantity) {
        $sql = "SELECT * FROM products WHERE id=" . $product_id;
        $result = $conn->query($sql);
        
        if ($result->num_rows > 0) {
            $row = $result->fetch_assoc();
            $product_name = $row["name"];
            $product_price = $row["price"];
            $total_price = $quantity * $product_price;
            
            echo "<tr>";
            echo "<td>" . $product_id . "</td>";
            echo "<td>" . $product_name . "</td>";
            echo "<td><input type='number' name='quantity[" . $product_id . "]' value='" . $quantity . "' min='1'></td>";
            echo "<td>£" . number_format($product_price, 2) . "</td>";
            echo "<td>£" . number_format($total_price, 2) . "</td>";
            echo "<td><a href='remove_from_cart.php?id=" . $product_id . "'>Remove</a></td>";
            echo "</tr>";
            
            $total += $total_price;
        }
    }
}

echo "<tr>
<td colspan='4' align='right'><strong>Total:</strong></td>
<td>£" . number_format($total, 2) . "</td>
<td><a href='checkout.php'>Checkout</a></td>
</tr>";

echo "</table>";
$conn->close();
?>


<?php
session_start();

$product_id = $_GET['id'];
unset($_SESSION['cart'][$product_id]);
header("Location: cart.php");
exit();
?>


<?php
session_start();

echo "<h1>Checkout</h1>";
echo "<form action='process_order.php' method='post'>";
echo "<table border='0'>";
echo "<tr><td>Name:</td><td><input type='text' name='name' required></td></tr>";
echo "<tr><td>Email:</td><td><input type='email' name='email' required></td></tr>";
echo "<tr><td>Phone:</td><td><input type='tel' name='phone' required></td></tr>";
echo "<tr><td>Address:</td><td><textarea name='address' required></textarea></td></tr>";
echo "<tr><td>City:</td><td><input type='text' name='city' required></td></tr>";
echo "<tr><td>State:</td><td><input type='text' name='state' required></td></tr>";
echo "<tr><td>ZIP Code:</td><td><input type='text' name='zip_code' required></td></tr>";
echo "<tr><td>Delivery Date:</td><td><input type='date' name='delivery_date'></td></tr>";
echo "</table>";
echo "<br>";
echo "<h3>Payment Details</h3>";
echo "<div id='payment-form'>";
// You can integrate your payment gateway here
echo "</div>";
echo "<br>";
echo "<input type='submit' value='Place Order'>";
echo "</form>";
?>


<?php
session_start();

// Connect to database
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "myDB";

$conn = new mysqli($servername, $username, $password, $dbname);
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Get user details
$name = $_POST['name'];
$email = $_POST['email'];
$phone = $_POST['phone'];
$address = $_POST['address'];
$city = $_POST['city'];
$state = $_POST['state'];
$zip_code = $_POST['zip_code'];
$delivery_date = $_POST['delivery_date'];

// Insert order into orders table
$sql = "INSERT INTO orders (name, email, phone, address, city, state, zip_code, delivery_date)
VALUES ('$name', '$email', '$phone', '$address', '$city', '$state', '$zip_code', '$delivery_date')";
if ($conn->query($sql) === TRUE) {
    $order_id = $conn->insert_id;

    // Insert order items into order_items table
    foreach ($_SESSION['cart'] as $product_id => $quantity) {
        $sql_item = "INSERT INTO order_items (order_id, product_id, quantity)
        VALUES ('$order_id', '$product_id', '$quantity')";
        if (!$conn->query($sql_item)) {
            echo "Error: " . $sql_item . "<br>" . $conn->error;
            exit();
        }
    }

    // Clear cart
    unset($_SESSION['cart']);
    
    // Redirect to thank you page
    header("Location: thankyou.php");
    exit();
} else {
    echo "Error: " . $sql . "<br>" . $conn->error;
}

$conn->close();
?>


<?php
echo "<h1>Thank You for Your Order!</h1>";
echo "<p>Your order has been received and will be processed shortly.</p>";
echo "<p>We will send you an email confirmation with your order details.</p>";
?>


<?php
$host = 'localhost';
$username = 'root';
$password = '';
$database = 'your_database_name';

function connect() {
    global $host, $username, $password, $database;
    
    $conn = new mysqli($host, $username, $password, $database);
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }
    return $conn;
}
?>


<?php include 'db.php'; ?>

<!DOCTYPE html>
<html>
<head>
    <title>Product Store</title>
    <style>
        .product-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 20px;
            padding: 20px;
        }
        .product-item {
            border: 1px solid #ddd;
            padding: 10px;
            text-align: center;
        }
    </style>
</head>
<body>
    <h1>Product Store</h1>
    <?php
        $conn = connect();
        
        // Fetch products from database
        $sql = "SELECT * FROM products";
        $result = $conn->query($sql);
        
        if ($result->num_rows > 0) {
            echo "<div class='product-grid'>";
            while($row = $result->fetch_assoc()) {
                echo "
                    <div class='product-item'>
                        <img src='".$row['image']."' alt='".$row['name']."' width='200'>
                        <h3>".$row['name']."</h3>
                        <p>".$row['description']."</p>
                        <p>Price: \$$".number_format($row['price'], 2)."</p>
                        <a href='product.php?id=".$row['id']."'>View Details</a>
                    </div>";
            }
            echo "</div>";
        } else {
            echo "No products found.";
        }
        
        $conn->close();
    ?>
</body>
</html>


<?php include 'db.php'; ?>

<!DOCTYPE html>
<html>
<head>
    <title>Product Details</title>
</head>
<body>
    <?php
        $conn = connect();
        $id = isset($_GET['id']) ? $_GET['id'] : 0;
        
        // Fetch product details
        $sql = "SELECT * FROM products WHERE id = $id";
        $result = $conn->query($sql);
        
        if ($result->num_rows == 1) {
            $row = $result->fetch_assoc();
            echo "
                <h1>".$row['name']."</h1>
                <img src='".$row['image']."' alt='".$row['name']."' width='300'>
                <p>".$row['description']."</p>
                <p>Price: \$$".number_format($row['price'], 2)."</p>
                
                <form action='cart.php' method='post'>
                    <input type='hidden' name='product_id' value='".$row['id']."'>
                    <input type='number' name='quantity' min='1' value='1'>
                    <button type='submit'>Add to Cart</button>
                </form>";
        } else {
            echo "Product not found.";
        }
        
        $conn->close();
    ?>
    
    <a href='index.php'>Back to Products</a>
</body>
</html>


<?php
session_start();

if (isset($_POST['product_id']) && isset($_POST['quantity'])) {
    $product_id = $_POST['product_id'];
    $quantity = $_POST['quantity'];
    
    // Connect to database
    include 'db.php';
    $conn = connect();
    
    // Get product details
    $sql = "SELECT * FROM products WHERE id = $product_id";
    $result = $conn->query($sql);
    if ($result->num_rows == 1) {
        $row = $result->fetch_assoc();
        
        $item = array(
            'id' => $row['id'],
            'name' => $row['name'],
            'price' => $row['price'],
            'quantity' => $quantity
        );
        
        // Add item to cart
        if (isset($_SESSION['cart'])) {
            $_SESSION['cart'][] = $item;
        } else {
            $_SESSION['cart'] = array($item);
        }
    }
    
    $conn->close();
}

header('Location: view_cart.php');
exit();
?>


<?php
session_start();

if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <?php if (count($_SESSION['cart']) > 0) { ?>
        <h1>Your Shopping Cart</h1>
        <table border='1'>
            <tr>
                <th>Product Name</th>
                <th>Price</th>
                <th>Quantity</th>
                <th>Total</th>
            </tr>
            <?php
                $total = 0;
                foreach ($_SESSION['cart'] as $item) {
                    $subtotal = $item['price'] * $item['quantity'];
                    $total += $subtotal;
                    
                    echo "
                        <tr>
                            <td>".$item['name']."</td>
                            <td>\$$".number_format($item['price'], 2)."</td>
                            <td><input type='number' name='quantity_".$item['id']."' min='1' value='".$item['quantity']."'></td>
                            <td>\$$".number_format($subtotal, 2)."</td>
                        </tr>";
                }
            ?>
        </table>
        <h3>Total: \$$".number_format($total, 2)."</h3>
        
        <?php if (isset($_SESSION['user_id'])) { ?>
            <form action='checkout.php' method='post'>
                <button type='submit'>Checkout</button>
            </form>
        <?php } else { ?>
            <a href='login.php'>Login to Checkout</a>
        <?php } ?>
    <?php } else { ?>
        <p>Your cart is empty.</p>
    <?php } ?>

    <a href='index.php'>Continue Shopping</a>
</body>
</html>


<?php
session_start();

if (isset($_SESSION['user_id']) && isset($_SESSION['cart'])) {
    $total = array_sum(array_map(function($item) {
        return $item['price'] * $item['quantity'];
    }, $_SESSION['cart']));
    
    include 'db.php';
    $conn = connect();
    
    // Insert order
    $sql = "INSERT INTO orders (user_id, total_amount, order_date) VALUES ($_SESSION[user_id], $total, NOW())";
    if ($conn->query($sql)) {
        $order_id = $conn->insert_id;
        
        // Insert order items
        foreach ($_SESSION['cart'] as $item) {
            $sql_item = "INSERT INTO order_items (order_id, product_id, quantity, price) VALUES ($order_id, {$item['id']}, {$item['quantity']}, {$item['price']})";
            $conn->query($sql_item);
        }
        
        // Clear cart
        unset($_SESSION['cart']);
        
        header('Location: order_confirmation.php?order_id='.$order_id);
        exit();
    } else {
        echo "Error placing order.";
    }
    
    $conn->close();
} else {
    header('Location: view_cart.php');
    exit();
}
?>


<?php include 'db.php'; ?>

<!DOCTYPE html>
<html>
<head>
    <title>Order Confirmation</title>
</head>
<body>
    <?php
        $conn = connect();
        $order_id = isset($_GET['order_id']) ? $_GET['order_id'] : 0;
        
        // Fetch order details
        $sql = "SELECT * FROM orders WHERE id = $order_id";
        $result = $conn->query($sql);
        
        if ($result->num_rows == 1) {
            $row = $result->fetch_assoc();
            
            echo "
                <h1>Order Confirmation</h1>
                <p>Your order has been placed successfully!</p>
                <p>Order ID: ".$row['id']."</p>
                <p>Order Date: ".date('Y-m-d H:i:s', strtotime($row['order_date']))."</p>
                <p>Total Amount: \$$".number_format($row['total_amount'], 2)."</p>";
        } else {
            echo "Order not found.";
        }
        
        $conn->close();
    ?>
    
    <a href='index.php'>Continue Shopping</a>
</body>
</html>


<?php
// Function to validate input data
function validateInput($data) {
    $data = trim($data);
    $data = stripslashes($data);
    $data = htmlspecialchars($data);
    return $data;
}

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get form values
    $productName = validateInput($_POST['product_name']);
    $price = validateInput($_POST['price']);
    $quantity = validateInput($_POST['quantity']);

    // Validate input
    if (empty($productName) || empty($price) || empty($quantity)) {
        echo "All fields are required!";
    } else {
        // Calculate total amount
        $totalAmount = $price * $quantity;

        // Display confirmation message
        echo "<h2>Purchase Confirmation</h2>";
        echo "<p>Product: " . $productName . "</p>";
        echo "<p>Quantity: " . $quantity . "</p>";
        echo "<p>Total Amount: $" . number_format($totalAmount, 2) . "</p>";
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Purchase Form</title>
</head>
<body>
    <h1>Purchase Item</h1>
    <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
        <label for="product_name">Product Name:</label><br>
        <input type="text" id="product_name" name="product_name"><br>

        <label for="price">Price per Unit ($):</label><br>
        <input type="number" id="price" name="price" min="0.01" step="0.01"><br>

        <label for="quantity">Quantity:</label><br>
        <input type="number" id="quantity" name="quantity" min="1"><br>

        <input type="submit" value="Purchase">
    </form>
</body>
</html>


<?php
// Database connection
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'purchase_system';

$conn = mysqli_connect($host, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to validate input data
function validateInput($data) {
    $data = trim($data);
    $data = stripslashes($data);
    $data = htmlspecialchars($data);
    return $data;
}

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get form values
    $productName = validateInput($_POST['product_name']);
    $price = validateInput($_POST['price']);
    $quantity = validateInput($_POST['quantity']);

    // Validate input
    if (empty($productName) || empty($price) || empty($quantity)) {
        echo "All fields are required!";
    } else {
        // Calculate total amount
        $totalAmount = $price * $quantity;

        // Insert order into database
        $sql = "INSERT INTO orders (product_name, price, quantity, total_amount)
                VALUES ('$productName', '$price', '$quantity', '$totalAmount')";

        if (mysqli_query($conn, $sql)) {
            echo "<h2>Order Placed Successfully!</h2>";
            echo "<p>Your order has been placed successfully.</p>";
        } else {
            echo "Error: " . $sql . "<br>" . mysqli_error($conn);
        }
    }
}

// Close database connection
mysqli_close($conn);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Purchase Form</title>
</head>
<body>
    <h1>Purchase Item</h1>
    <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
        <label for="product_name">Product Name:</label><br>
        <input type="text" id="product_name" name="product_name"><br>

        <label for="price">Price per Unit ($):</label><br>
        <input type="number" id="price" name="price" min="0.01" step="0.01"><br>

        <label for="quantity">Quantity:</label><br>
        <input type="number" id="quantity" name="quantity" min="1"><br>

        <input type="submit" value="Purchase">
    </form>
</body>
</html>


<?php
include 'db_connection.php';

// Fetch all products from the database
$sql = "SELECT * FROM products";
$result = $conn->query($sql);

if ($result->num_rows > 0) {
    while ($row = $result->fetch_assoc()) {
        echo "<div class='product'>";
        echo "<h2>" . $row['name'] . "</h2>";
        echo "<p>Description: " . $row['description'] . "</p>";
        echo "<p>Price: $" . number_format($row['price'], 2) . "</p>";
        echo "<p>Stock: " . $row['stock'] . "</p>";
        echo "<form action='add_to_cart.php' method='post'>";
        echo "<input type='hidden' name='product_id' value='" . $row['id'] . "'>";
        echo "<input type='number' name='quantity' min='1' max='" . $row['stock'] . "' required>";
        echo "<button type='submit'>Add to Cart</button>";
        echo "</form>";
        echo "</div>";
    }
} else {
    echo "No products available.";
}

$conn->close();
?>


<?php
session_start();

// Get product details from the form submission
$product_id = $_POST['product_id'];
$quantity = $_POST['quantity'];

// Connect to the database
include 'db_connection.php';

// Fetch product information
$sql = "SELECT * FROM products WHERE id = $product_id";
$result = $conn->query($sql);
$product = $result->fetch_assoc();

if ($product) {
    // Check if the cart exists in the session, create it if not
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }

    // Add the product to the cart or update its quantity
    $cart_item = array(
        'id' => $product_id,
        'name' => $product['name'],
        'price' => $product['price'],
        'quantity' => $quantity
    );

    if (isset($_SESSION['cart'][$product_id])) {
        // If the product is already in the cart, update its quantity
        $_SESSION['cart'][$product_id]['quantity'] += $quantity;
    } else {
        // Add the product to the cart
        $_SESSION['cart'][$product_id] = $cart_item;
    }

    // Redirect back to the product list page
    header("Location: display_products.php");
} else {
    // Product not found in the database
    echo "Product not found.";
}

$conn->close();
?>


<?php
session_start();

include 'db_connection.php';

// Check if the cart is empty
if (empty($_SESSION['cart'])) {
    header("Location: display_products.php");
    exit();
}

// Get customer information from the form submission
$first_name = $_POST['first_name'];
$last_name = $_POST['last_name'];
$email = $_POST['email'];
$phone_number = $_POST['phone_number'];
$address = $_POST['address'];

// Calculate total amount
$total_amount = 0;
foreach ($_SESSION['cart'] as $product) {
    $total_amount += ($product['price'] * $product['quantity']);
}

// Insert the order into the orders table
$sql = "INSERT INTO orders (customer_name, email, total_amount, payment_status)
        VALUES ('$first_name $last_name', '$email', '$total_amount', 'pending')";

if ($conn->query($sql)) {
    // Get the last inserted order ID
    $order_id = $conn->insert_id;

    // Insert each item into the order_items table
    foreach ($_SESSION['cart'] as $product) {
        $subtotal = $product['price'] * $product['quantity'];
        $sql_item = "INSERT INTO order_items (order_id, product_id, quantity, subtotal)
                    VALUES ('$order_id', '$product[id]', '$product[quantity]', '$subtotal')";

        if (!$conn->query($sql_item)) {
            // Error inserting order item
            echo "Error: " . $sql_item . "<br>" . $conn->error;
            exit();
        }
    }

    // Clear the cart
    unset($_SESSION['cart']);

    // Display a success message
    echo "Order processed successfully!";
} else {
    // Error inserting order
    echo "Error: " . $sql . "<br>" . $conn->error;
}

$conn->close();
?>


<?php
session_start();

include 'db_connection.php';

// Get the order ID from the session
if (isset($_SESSION['order_id'])) {
    $order_id = $_SESSION['order_id'];
} else {
    // No order found
    echo "No order found.";
    exit();
}

// Process payment here (this is a simplified example)
$card_number = $_POST['card_number'];
$expiration_date = $_POST['expiration_date'];
$cvv = $_POST['cvv'];

// Validate the card information (simplified validation)
if (
    strlen($card_number) == 16 &&
    ctype_digit($card_number) &&
    strlen($cvv) == 3 &&
    ctype_digit($cvv)
) {
    // Payment is successful
    $sql = "UPDATE orders SET payment_status = 'completed' WHERE order_id = $order_id";
    if ($conn->query($sql)) {
        // Redirect to a thank you page or display a success message
        header("Location: order_confirmation.php");
        exit();
    } else {
        echo "Error updating payment status.";
    }
} else {
    // Payment failed due to invalid card information
    echo "Invalid card details. Please try again.";
}

$conn->close();
?>


<?php
session_start();

include 'db_connection.php';

// Check if the user is logged in (you should implement your own authentication system)
if (!isset($_SESSION['user_id'])) {
    header("Location: login.php");
    exit();
}

// Get the customer's orders from the database
$sql = "SELECT * FROM orders WHERE email = '".$_SESSION['email']."' ORDER BY created_at DESC";
$result = $conn->query($sql);

if ($result->num_rows > 0) {
    while ($row = $result->fetch_assoc()) {
        echo "<div class='order'>";
        echo "<h2>Order #" . $row['order_id'] . "</h2>";
        echo "<p>Total Amount: $" . number_format($row['total_amount'], 2) . "</p>";
        echo "<p>Status: " . strtoupper($row['payment_status']) . "</p>";
        echo "<p>Date: " . date('Y-m-d H:i:s', strtotime($row['created_at'])) . "</p>";
        echo "</div>";
    }
} else {
    echo "No purchase history available.";
}

$conn->close();
?>


<?php
session_start();

include 'db_connection.php';

// Check if the cart is empty
if (empty($_SESSION['cart'])) {
    echo "Your cart is empty.";
} else {
    $total = 0;
    foreach ($_SESSION['cart'] as $product) {
        $subtotal = $product['price'] * $product['quantity'];
        $total += $subtotal;

        echo "<div class='cart-item'>";
        echo "<h3>" . $product['name'] . "</h3>";
        echo "<p>Quantity: " . $product['quantity'] . "</p>";
        echo "<p>Price: $" . number_format($product['price'], 2) . "</p>";
        echo "<p>Subtotal: $" . number_format($subtotal, 2) . "</p>";
        echo "</div>";
    }

    echo "<h3>Total: $" . number_format($total, 2) . "</h3>";

    // Display a checkout button
    echo "<form action='checkout.php' method='post'>";
    echo "<button type='submit'>Checkout</button>";
    echo "</form>";
}

$conn->close();
?>


<?php
session_start();

include 'db_connection.php';

// Check if the cart is empty
if (empty($_SESSION['cart'])) {
    header("Location: display_products.php");
    exit();
}

// Display the checkout form
?>

<form action="process_order.php" method="post">
    <h2>Checkout</h2>
    <div class="checkout-info">
        <label for="first_name">First Name:</label>
        <input type="text" id="first_name" name="first_name" required>

        <label for="last_name">Last Name:</label>
        <input type="text" id="last_name" name="last_name" required>

        <label for="email">Email:</label>
        <input type="email" id="email" name="email" required>

        <label for="phone_number">Phone Number:</label>
        <input type="tel" id="phone_number" name="phone_number" required>

        <label for="address">Address:</label>
        <textarea id="address" name="address" required></textarea>

        <h3>Payment Information</h3>
        <label for="card_number">Card Number:</label>
        <input type="text" id="card_number" name="card_number" pattern="[0-9]{16}" required>

        <label for="expiration_date">Expiration Date:</label>
        <input type="month" id="expiration_date" name="expiration_date" required>

        <label for="cvv">CVV:</label>
        <input type="text" id="cvv" name="cvv" pattern="[0-9]{3}" required>

        <button type="submit">Place Order</button>
    </div>
</form>

<?php
$conn->close();
?>


<?php
session_start();

include 'db_connection.php';

// Get the order details from the database
$sql = "SELECT * FROM orders WHERE order_id = $_SESSION['order_id']";
$result = $conn->query($sql);
$order = $result->fetch_assoc();

// Compose the email
$to = $order['email'];
$subject = "Order Confirmation - Order #" . $order['order_id'];
$body = "
<html>
<head>
    <title>Order Confirmation</title>
</head>
<body>
    <h2>Order Confirmation</h2>
    <p>Your order has been processed successfully.</p>
    <p><strong>Order ID:</strong> " . $order['order_id'] . "</p>
    <p><strong>Total Amount:</strong> $" . number_format($order['total_amount'], 2) . "</p>
    <p>Thank you for shopping with us!</p>
</body>
</html"
";

// Set the headers
$headers = "From: noreply@yourdomain.com\r
";
$headers .= "MIME-Version: 1.0\r
";
$headers .= "Content-Type: text/html; charset=UTF-8\r
";

if (mail($to, $subject, $body, $headers)) {
    echo "Confirmation email sent successfully.";
} else {
    echo "Error sending confirmation email.";
}

$conn->close();
?>


<?php
session_start();

// Product database (simplified)
$products = array(
    1 => array('name' => 'Product 1', 'price' => 25.00),
    2 => array('name' => 'Product 2', 'price' => 45.00),
    3 => array('name' => 'Product 3', 'price' => 65.00)
);

// Cart handling
if (isset($_POST['add_to_cart'])) {
    $productId = $_POST['product_id'];
    $quantity = $_POST['quantity'];
    
    if (!isset($_SESSION['cart'][$productId])) {
        $_SESSION['cart'][$productId] = array(
            'name' => $products[$productId]['name'],
            'price' => $products[$productId]['price'],
            'quantity' => 0
        );
    }
    
    $_SESSION['cart'][$productId]['quantity'] += $quantity;
}

// Checkout handling
if (isset($_POST['checkout'])) {
    // Process payment here
    print_r($_SESSION['cart']);
    print_r($_POST);
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
    <style>
        body { font-family: Arial, sans-serif; }
        .container { width: 80%; margin: 0 auto; padding: 20px; }
        .product {
            border: 1px solid #ddd;
            padding: 10px;
            margin-bottom: 10px;
        }
    </style>
</head>
<body>
    <div class="container">
        <?php if (!isset($_GET['page']) || $_GET['page'] == 'shop'): ?>
            <!-- Product List -->
            <h2>Products</h2>
            <?php foreach ($products as $id => $product): ?>
                <div class="product">
                    <h3><?php echo $product['name']; ?></h3>
                    <p>$<?php echo number_format($product['price'], 2); ?></p>
                    <form method="post" action="">
                        <input type="hidden" name="product_id" value="<?php echo $id; ?>">
                        <input type="number" name="quantity" min="1" value="1">
                        <button type="submit" name="add_to_cart">Add to Cart</button>
                    </form>
                </div>
            <?php endforeach; ?>
            <p><a href="?page=cart">View Cart</a></p>
        <?php elseif ($_GET['page'] == 'cart'): ?>
            <!-- Cart View -->
            <h2>Your Cart</h2>
            <?php if (empty($_SESSION['cart'])): ?>
                <p>Your cart is empty.</p>
            <?php else: ?>
                <table border="1">
                    <tr><th>Product</th><th>Price</th><th>Quantity</th><th>Total</th></tr>
                    <?php foreach ($_SESSION['cart'] as $id => $item): ?>
                        <tr>
                            <td><?php echo $item['name']; ?></td>
                            <td>$<?php echo number_format($item['price'], 2); ?></td>
                            <td><?php echo $item['quantity']; ?></td>
                            <td>$<?php echo number_format($item['price'] * $item['quantity'], 2); ?></td>
                        </tr>
                    <?php endforeach; ?>
                    <tr>
                        <th colspan="3">Grand Total</th>
                        <th>$<?php 
                            $total = array_sum(array_map(function($item) { return $item['price'] * $item['quantity']; }, $_SESSION['cart']); 
                            echo number_format($total, 2); 
                        ?></th>
                    </tr>
                </table>
                <p><a href="?page=checkout">Checkout</a> | <a href="?page=shop">Continue Shopping</a></p>
            <?php endif; ?>
        <?php elseif ($_GET['page'] == 'checkout'): ?>
            <!-- Checkout Page -->
            <h2>Checkout</h2>
            <form method="post" action="">
                <div>
                    <label>Name:</label><br>
                    <input type="text" name="name" required>
                </div>
                <div>
                    <label>Email:</label><br>
                    <input type="email" name="email" required>
                </div>
                <div>
                    <label>Phone:</label><br>
                    <input type="tel" name="phone" required>
                </div>
                <div>
                    <label>Address:</label><br>
                    <input type="text" name="address" required>
                </div>
                <div>
                    <label>City:</label><br>
                    <input type="text" name="city" required>
                </div>
                <div>
                    <label>State:</label><br>
                    <input type="text" name="state" required>
                </div>
                <div>
                    <label>ZIP Code:</label><br>
                    <input type="text" name="zip_code" required>
                </div>
                <div>
                    <label>Payment Method:</label><br>
                    <select name="payment_method">
                        <option value="credit">Credit Card</option>
                        <option value="paypal">PayPal</option>
                    </select>
                </div>
                <button type="submit" name="checkout">Place Order</button>
            </form>
        <?php endif; ?>

        <?php if (isset($_GET['page']) && $_GET['page'] == 'confirmation'): ?>
            <!-- Order Confirmation -->
            <h2>Order Confirmed!</h2>
            <p>Your order has been successfully processed.</p>
            <p><a href="?page=shop">Continue Shopping</a></p>
        <?php endif; ?>
    </div>
</body>
</html>


<?php
// process_purchase.php

// Database configuration
$host = 'localhost';
$username = 'root'; // Change to your database username
$password = '';      // Change to your database password
$database = 'my_store';

try {
    $conn = new mysqli($host, $username, $password, $database);
} catch (Exception $e) {
    die("Could not connect to the database: " . $e->getMessage());
}

// Get form data
$product_name = isset($_POST['product_name']) ? $_POST['product_name'] : '';
$price = isset($_POST['price']) ? $_POST['price'] : 0;
$quantity = isset($_POST['quantity']) ? $_POST['quantity'] : 1;
$category = isset($_POST['category']) ? $_POST['category'] : '';

// Validate input
if (empty($product_name) || empty($price) || empty($quantity) || empty($category)) {
    header("Location: purchase_form.php?error=Please fill in all required fields.");
    exit();
}

// Sanitize inputs to prevent SQL injection
$product_name = mysqli_real_escape_string($conn, $product_name);
$category = mysqli_real_escape_string($conn, $category);

// Prepare the SQL statement
$sql = "INSERT INTO products (name, price, quantity, category) 
        VALUES (?, ?, ?, ?)";

if ($stmt = $conn->prepare($sql)) {
    // Bind parameters to the statement
    $stmt->bind_param("sdds", $product_name, $price, $quantity, $category);
    
    if ($stmt->execute()) {
        // Redirect back with success message
        header("Location: purchase_form.php?success=1");
    } else {
        // Error occurred
        echo "Error: " . $sql . "<br>" . mysqli_error($conn);
        header("Location: purchase_form.php?error=An error occurred while adding the product.");
    }
    
    // Close the statement
    $stmt->close();
}

// Close database connection
$conn->close();
?>


<?php
session_start();

// Database connection
$host = 'localhost';
$dbname = 'shopping_cart';
$user = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $user, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}

// Get products from database
function get_products() {
    global $conn;
    $query = $conn->query("SELECT * FROM products");
    return $query->fetchAll(PDO::FETCH_ASSOC);
}

// Add item to cart
function add_to_cart($item_id, $quantity) {
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }

    if (isset($_SESSION['cart'][$item_id])) {
        $_SESSION['cart'][$item_id] += $quantity;
    } else {
        $_SESSION['cart'][$item_id] = $quantity;
    }
}

// Remove item from cart
function remove_from_cart($item_id) {
    unset($_SESSION['cart'][$item_id]);
}

// Update cart quantity
function update_cart($item_id, $quantity) {
    if ($quantity > 0) {
        $_SESSION['cart'][$item_id] = $quantity;
    } else {
        remove_from_cart($item_id);
    }
}

// Calculate total price
function calculate_total() {
    global $conn;
    $total = 0;

    foreach ($_SESSION['cart'] as $item_id => $quantity) {
        $query = $conn->prepare("SELECT price FROM products WHERE id = ?");
        $query->execute([$item_id]);
        $price = $query->fetch(PDO::FETCH_ASSOC)['price'];
        $total += ($price * $quantity);
    }

    return $total;
}

// Display cart items
function display_cart() {
    global $conn;

    if (isset($_SESSION['cart'])) {
        foreach ($_SESSION['cart'] as $item_id => $quantity) {
            $query = $conn->prepare("SELECT name, price FROM products WHERE id = ?");
            $query->execute([$item_id]);
            $product = $query->fetch(PDO::FETCH_ASSOC);

            echo "<tr>";
            echo "<td>" . $product['name'] . "</td>";
            echo "<td>" . $product['price'] . "</td>";
            echo "<td>" . $quantity . "</td>";
            echo "<td>" . ($product['price'] * $quantity) . "</td>";
            echo "<td><a href='remove_item.php?id=" . $item_id . "'>Remove</a></td>";
            echo "</tr>";
        }
    }
}

// Checkout functionality
function process_checkout() {
    if (isset($_POST['checkout'])) {
        // Validate input
        $name = $_POST['name'];
        $email = $_POST['email'];
        $address = $_POST['address'];
        $phone = $_POST['phone'];

        if (empty($name) || empty($email) || empty($address) || empty($phone)) {
            echo "Please fill in all required fields!";
            return;
        }

        // Display order confirmation
        echo "<h2>Order Confirmation</h2>";
        echo "<p>Name: " . $name . "</p>";
        echo "<p>Email: " . $email . "</p>";
        echo "<p>Address: " . $address . "</p>";
        echo "<p>Phone: " . $phone . "</p>";
        echo "<p>Total Amount: $" . calculate_total() . "</p>";

        // Here you would typically process payment, save order to database, etc.
    }
}
?>


<?php
session_start();
include('functions.php');

$products = fetchAllProducts();

if (isset($_GET['buy'])) {
    $productId = $_GET['buy'];
    addProductToCart($productId);
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Product Store</title>
    <!-- Include Bootstrap CSS for styling -->
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
</head>
<body>
    <div class="container mt-5">
        <h1>Welcome to Product Store</h1>
        
        <?php if (!empty($products)) : ?>
            <div class="row">
                <?php foreach ($products as $product) : ?>
                    <div class="col-md-3 mb-4">
                        <div class="card">
                            <img src="<?php echo $product['image']; ?>" class="card-img-top" alt="<?php echo $product['name']; ?>">
                            <div class="card-body">
                                <h5 class="card-title"><?php echo $product['name']; ?></h5>
                                <p class="card-text">$<?php echo number_format($product['price'], 2); ?></p>
                                <a href="?buy=<?php echo $product['id']; ?>" class="btn btn-primary">Buy Now</a>
                            </div>
                        </div>
                    </div>
                <?php endforeach; ?>
            </div>
        <?php else : ?>
            <p>No products available.</p>
        <?php endif; ?>
    </div>

    <!-- Include Bootstrap JS and dependencies -->
    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.4/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
</body>
</html>


<?php
session_start();
include('functions.php');

if (!empty($_SESSION['cart'])) :
    $cartItems = $_SESSION['cart'];
else :
    $cartItems = array();
endif;
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
</head>
<body>
    <div class="container mt-5">
        <?php if (!empty($cartItems)) : ?>
            <h1>Your Shopping Cart</h1>
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>Product Name</th>
                        <th>Price</th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tbody>
                    <?php foreach ($cartItems as $productId => $quantity) :
                        $product = getProductById($productId);
                    ?>
                        <tr>
                            <td><?php echo $product['name']; ?></td>
                            <td>$<?php echo number_format($product['price'], 2); ?></td>
                            <td><a href="remove_from_cart.php?id=<?php echo $productId; ?>">Remove</a></td>
                        </tr>
                    <?php endforeach; ?>
                </tbody>
            </table>
            <form action="checkout.php" method="post">
                <div class="form-group">
                    <label for="email">Email Address:</label>
                    <input type="email" class="form-control" id="email" name="email" required>
                </div>
                <button type="submit" class="btn btn-primary">Proceed to Checkout</button>
            </form>
        <?php else : ?>
            <p>Your cart is empty.</p>
            <a href="index.php" class="btn btn-secondary">Continue Shopping</a>
        <?php endif; ?>
    </div>

    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.4/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
</body>
</html>


<?php
session_start();
include('functions.php');

if (!empty($_SESSION['cart']) && isset($_POST['email'])) :
    $totalPrice = calculateTotalPrice();
    $email = $_POST['email'];
    
    // Process payment (simulated)
    if (processPayment($totalPrice)) :
        $orderId = createOrder($email, $totalPrice);
        
        // Clear cart
        unset($_SESSION['cart']);
        
        // Redirect to confirmation page
        header("Location: order_confirmation.php?id=$orderId");
        exit();
    else :
        echo "Payment failed. Please try again.";
    endif;
endif;
?>

<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
</head>
<body>
    <?php if (empty($_SESSION['cart'])) : ?>
        <div class="container mt-5">
            <p>Your cart is empty.</p>
            <a href="index.php" class="btn btn-secondary">Continue Shopping</a>
        </div>
    <?php else : ?>
        <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
            <div class="container mt-5">
                <h1>Checkout</h1>
                
                <div class="form-group">
                    <label for="name">Name:</label>
                    <input type="text" class="form-control" id="name" name="name" required>
                </div>

                <div class="form-group">
                    <label for="email">Email:</label>
                    <input type="email" class="form-control" id="email" name="email" required>
                </div>

                <div class="form-group">
                    <label for="address">Address:</label>
                    <input type="text" class="form-control" id="address" name="address" required>
                </div>

                <?php
                $cartItems = $_SESSION['cart'];
                $totalPrice = calculateTotalPrice();
                ?>

                <div class="row mt-4">
                    <div class="col-md-6">
                        <h3>Total Price: $<?php echo number_format($totalPrice, 2); ?></h3>
                    </div>
                </div>

                <button type="submit" class="btn btn-primary">Place Order</button>
            </div>
        </form>
    <?php endif; ?>

    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.4/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
</body>
</html>


<?php
function connectDB() {
    $host = "localhost";
    $user = "root";
    $password = "";
    $db_name = "purchase_system";
    
    $conn = mysqli_connect($host, $user, $password, $db_name);
    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
    }
    return $conn;
}

function fetchAllProducts() {
    $conn = connectDB();
    $sql = "SELECT * FROM products";
    $result = mysqli_query($conn, $sql);
    
    $products = array();
    if (mysqli_num_rows($result) > 0) {
        while ($row = mysqli_fetch_assoc($result)) {
            $products[] = $row;
        }
    }
    
    mysqli_close($conn);
    return $products;
}

function addProductToCart($productId) {
    session_start();
    $_SESSION['cart'][$productId] = isset($_SESSION['cart'][$productId]) ? 
                                   $_SESSION['cart'][$productId] + 1 : 1;
}

function getProductById($productId) {
    $conn = connectDB();
    $sql = "SELECT * FROM products WHERE id = ?";
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, "i", $productId);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);
    
    $product = array();
    if ($row = mysqli_fetch_assoc($result)) {
        $product = $row;
    }
    
    mysqli_close($conn);
    return $product;
}

function calculateTotalPrice() {
    session_start();
    $cartItems = $_SESSION['cart'];
    $totalPrice = 0;
    
    foreach ($cartItems as $productId => $quantity) {
        $product = getProductById($productId);
        $totalPrice += $product['price'] * $quantity;
    }
    
    return $totalPrice;
}

function processPayment($amount) {
    // Simulate payment processing
    return true; // Assume payment is successful
}

function createOrder($email, $totalAmount) {
    $conn = connectDB();
    $orderDate = date('Y-m-d H:i:s');
    
    $sql = "INSERT INTO orders (email, total_amount, order_date) 
            VALUES (?, ?, ?)";
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, "sds", $email, $totalAmount, $orderDate);
    
    if (mysqli_stmt_execute($stmt)) {
        $orderId = mysqli_insert_id($conn);
        
        // Insert order details
        foreach ($_SESSION['cart'] as $productId => $quantity) {
            $productPrice = getProductById($productId)['price'];
            $sqlDetails = "INSERT INTO order_details 
                          (order_id, product_id, quantity, price) 
                          VALUES (?, ?, ?, ?)";
            $stmtDetails = mysqli_prepare($conn, $sqlDetails);
            mysqli_stmt_bind_param($stmtDetails, "iidi", $orderId, $productId, $quantity, $productPrice);
            mysqli_stmt_execute($stmtDetails);
        }
        
        return $orderId;
    } else {
        return false;
    }
}

function createOrderTable() {
    $conn = connectDB();
    $sql = "CREATE TABLE orders (
                id INT AUTO_INCREMENT PRIMARY KEY,
                email VARCHAR(255) NOT NULL,
                total_amount DECIMAL(10, 2) NOT NULL,
                order_date DATETIME
            )";
    
    if (mysqli_query($conn, $sql)) {
        $sqlDetails = "CREATE TABLE order_details (
                        id INT AUTO_INCREMENT PRIMARY KEY,
                        order_id INT NOT NULL,
                        product_id INT NOT NULL,
                        quantity INT NOT NULL,
                        price DECIMAL(10, 2) NOT NULL
                      )";
        mysqli_query($conn, $sqlDetails);
    }
    
    mysqli_close($conn);
}

// Create the necessary tables if they don't exist
createOrderTable();
?>


<?php
session_start();
include('functions.php');

$orderId = isset($_GET['id']) ? $_GET['id'] : '';
?>

<!DOCTYPE html>
<html>
<head>
    <title>Order Confirmation</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
</head>
<body>
    <div class="container mt-5">
        <?php if ($orderId) : ?>
            <h1>Thank you for your order!</h1>
            <p>Your order has been successfully processed.</p>
            <p>Order ID: <?php echo $orderId; ?></p>
            <a href="index.php" class="btn btn-primary">Continue Shopping</a>
        <?php else : ?>
            <p>There was an error processing your order. Please try again.</p>
        <?php endif; ?>
    </div>

    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.4/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
</body>
</html>


<?php session_start(); ?>
<!DOCTYPE html>
<html>
<head>
    <title>Products</title>
</head>
<body>
    <?php
        // Sample products array
        $products = [
            ['id' => 1, 'name' => 'Product A', 'price' => 29.99],
            ['id' => 2, 'name' => 'Product B', 'price' => 49.99],
            // Add more products as needed
        ];
    ?>
    
    <?php foreach ($products as $product): ?>
        <div>
            <h3><?php echo $product['name']; ?></h3>
            <p>Price: $<?php echo number_format($product['price'], 2); ?></p>
            <a href="add_to_cart.php?id=<?php echo $product['id']; ?>">Add to Cart</a>
        </div>
    <?php endforeach; ?>
    
    <a href="cart.php">View Cart</a>
</body>
</html>


<?php session_start(); ?>

<?php
    // Retrieve product ID from GET request
    $productId = isset($_GET['id']) ? (int)$_GET['id'] : 0;
    
    // Sample products array (in a real application, fetch from database)
    $products = [
        ['id' => 1, 'name' => 'Product A', 'price' => 29.99],
        ['id' => 2, 'name' => 'Product B', 'price' => 49.99],
        // Add more products as needed
    ];
    
    // Check if product exists
    $product = array_search($productId, array_column($products, 'id'));
    if ($product !== false) {
        $productData = $products[$product];
        
        // Initialize cart if not set
        $_SESSION['cart'] = isset($_SESSION['cart']) ? $_SESSION['cart'] : [];
        
        // Check if item is already in cart
        if (isset($_SESSION['cart'][$productId])) {
            $_SESSION['cart'][$productId]['quantity']++;
        } else {
            $_SESSION['cart'][$productId] = [
                'id' => $productData['id'],
                'name' => $productData['name'],
                'price' => $productData['price'],
                'quantity' => 1
            ];
        }
    }
    
    // Redirect back to products page
    header('Location: index.php');
    exit();
?>


<?php session_start(); ?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <?php if (!empty($_SESSION['cart'])): ?>
        <h2>Your Shopping Cart</h2>
        <form action="update_cart.php" method="post">
            <table border="1">
                <tr>
                    <th>Name</th>
                    <th>Price</th>
                    <th>Quantity</th>
                    <th>Total</th>
                    <th>Action</th>
                </tr>
                
                <?php foreach ($_SESSION['cart'] as $item): ?>
                    <tr>
                        <td><?php echo $item['name']; ?></td>
                        <td>$<?php echo number_format($item['price'], 2); ?></td>
                        <td><input type="number" name="quantity[<?php echo $item['id']; ?>]" value="<?php echo $item['quantity']; ?>" min="1"></td>
                        <td>$<?php echo number_format($item['price'] * $item['quantity'], 2); ?></td>
                        <td><a href="remove_from_cart.php?id=<?php echo $item['id']; ?>">Remove</a></td>
                    </tr>
                <?php endforeach; ?>
                
            </table>
            
            <?php
                // Calculate cart total
                $cartTotal = array_sum(array_map(function($item) {
                    return $item['price'] * $item['quantity'];
                }, $_SESSION['cart']));
            ?>
            
            <h3>Cart Total: $<?php echo number_format($cartTotal, 2); ?></h3>
            <button type="submit">Update Cart</button>
        </form>
    <?php else: ?>
        <p>Your cart is empty.</p>
    <?php endif; ?>
    
    <a href="index.php">Continue Shopping</a>
</body>
</html>


<?php session_start(); ?>

<?php
    if (!empty($_POST['quantity'])) {
        foreach ($_POST['quantity'] as $productId => $qty) {
            // Ensure quantity is an integer and at least 1
            $qty = max(1, (int)$qty);
            
            $_SESSION['cart'][$productId]['quantity'] = $qty;
        }
    }
    
    // Redirect back to cart page
    header('Location: cart.php');
    exit();
?>


<?php session_start(); ?>

<?php
    if (isset($_GET['id'])) {
        $productId = (int)$_GET['id'];
        
        // Remove item from cart
        unset($_SESSION['cart'][$productId]);
        
        // Re-index the array to maintain consistency
        $_SESSION['cart'] = array_values($_SESSION['cart']);
    }
    
    // Redirect back to cart page
    header('Location: cart.php');
    exit();
?>


<?php
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'your_database';

$conn = mysqli_connect($host, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}
?>


<?php
include('db.php');

$sql = "SELECT * FROM products";
$result = mysqli_query($conn, $sql);

if (!$result) {
    die("Error in fetching products: " . mysqli_error($conn));
}
?>
<!DOCTYPE html>
<html>
<head>
    <title>Product Store</title>
</head>
<body>
    <?php while ($row = mysqli_fetch_assoc($result)) { ?>
        <div style="border: 1px solid #ddd; padding: 10px; margin: 5px;">
            <h3><?php echo $row['name']; ?></h3>
            <p><?php echo $row['description']; ?></p>
            <p>Price: <?php echo "$" . number_format($row['price'], 2); ?></p>
            <p>Available Quantity: <?php echo $row['quantity']; ?></p>
            <form action="add_to_cart.php" method="post">
                <input type="hidden" name="product_id" value="<?php echo $row['id']; ?>">
                <input type="number" name="quantity" min="1" max="<?php echo $row['quantity']; ?>" placeholder="Enter quantity">
                <button type="submit">Add to Cart</button>
            </form>
        </div>
    <?php } ?>
</body>
</html>


<?php
session_start();
include('db.php');

if (isset($_POST['product_id']) && isset($_POST['quantity'])) {
    $product_id = $_POST['product_id'];
    $quantity = $_POST['quantity'];

    // Check if product exists in database
    $sql = "SELECT * FROM products WHERE id = $product_id";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) > 0) {
        $product = mysqli_fetch_assoc($result);

        // Check if the requested quantity is available
        if ($quantity <= $product['quantity']) {
            // Check if product already exists in cart
            if (isset($_SESSION['cart'][$product_id])) {
                $_SESSION['cart'][$product_id]['quantity'] += $quantity;
            } else {
                $_SESSION['cart'][$product_id] = array(
                    'name' => $product['name'],
                    'price' => $product['price'],
                    'quantity' => $quantity
                );
            }
            echo "<script>alert('Product added to cart');</script>";
        } else {
            echo "<script>alert('Insufficient quantity available');</script>";
        }
    } else {
        echo "<script>alert('Product not found');</script>";
    }
}

header("Location: index.php");
?>


<?php
session_start();
include('db.php');
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <?php if (!empty($_SESSION['cart'])) { ?>
        <h2>Your Cart:</h2>
        <table border="1">
            <tr>
                <th>Product Name</th>
                <th>Quantity</th>
                <th>Price</th>
                <th>Total</th>
                <th>Action</th>
            </tr>
            <?php $total = 0; ?>
            <?php foreach ($_SESSION['cart'] as $product_id => $item) { ?>
                <tr>
                    <td><?php echo $item['name']; ?></td>
                    <td><input type="number" name="quantity" value="<?php echo $item['quantity']; ?>" min="1"></td>
                    <td><?php echo "$" . number_format($item['price'], 2); ?></td>
                    <td><?php echo "$" . number_format($item['price'] * $item['quantity'], 2); ?></td>
                    <td><a href="remove_from_cart.php?product_id=<?php echo $product_id; ?>">Remove</a></td>
                </tr>
                <?php $total += $item['price'] * $item['quantity']; ?>
            <?php } ?>
            <tr>
                <td colspan="3">Total:</td>
                <td><?php echo "$" . number_format($total, 2); ?></td>
                <td><a href="checkout.php">Checkout</a></td>
            </tr>
        </table>
    <?php } else { ?>
        <h2>Your cart is empty.</h2>
    <?php } ?>
</body>
</html>


<?php
session_start();

if (isset($_GET['product_id'])) {
    $product_id = $_GET['product_id'];
    
    if (!empty($_SESSION['cart'][$product_id])) {
        unset($_SESSION['cart'][$product_id]);
        echo "<script>alert('Product removed from cart');</script>";
    }
}

header("Location: view_cart.php");
?>


<?php
session_start();
include('db.php');

if (!empty($_SESSION['cart'])) {
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        $user_name = mysqli_real_escape_string($conn, $_POST['name']);
        $email = mysqli_real_escape_string($conn, $_POST['email']);
        $address = mysqli_real_escape_string($conn, $_POST['address']);
        $total = 0;

        foreach ($_SESSION['cart'] as $product_id => $item) {
            $quantity = $item['quantity'];
            $price = $item['price'];
            $total += $price * $quantity;

            // Update product quantity
            $sql = "UPDATE products SET quantity = quantity - $quantity WHERE id = $product_id";
            mysqli_query($conn, $sql);

            // Insert order into orders table
            $sql_order = "INSERT INTO orders (product_id, user_name, email, address, quantity, total) 
                         VALUES ('$product_id', '$user_name', '$email', '$address', '$quantity', '$total')";
            mysqli_query($conn, $sql_order);
        }

        // Clear cart after purchase
        unset($_SESSION['cart']);
        
        echo "<script>alert('Purchase completed successfully!');</script>";
        header("Location: index.php");
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
</head>
<body>
    <h2>Proceed to Checkout:</h2>
    <form action="<?php $_SERVER['PHP_SELF']; ?>" method="post">
        <label>Name:</label><br>
        <input type="text" name="name" required><br><br>

        <label>Email:</label><br>
        <input type="email" name="email" required><br><br>

        <label>Address:</label><br>
        <textarea name="address" rows="3" cols="30" required></textarea><br><br>

        <button type="submit">Purchase</button>
    </form>
</body>
</html>


<?php
// products.php

$host = 'localhost';
$user = 'root';
$password = '';
$dbname = 'my_store';

$conn = mysqli_connect($host, $user, $password, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

$sql = "SELECT * FROM products";
$result = mysqli_query($conn, $sql);

?>

<!DOCTYPE html>
<html>
<head>
    <title>Product List</title>
</head>
<body>
    <?php
    while ($row = mysqli_fetch_assoc($result)) {
        echo "<div style='border: 1px solid #ddd; padding: 10px; margin: 5px;'>";
        echo "<h2>" . $row['name'] . "</h2>";
        echo "<p>Price: $" . number_format($row['price'], 2) . "</p>";
        echo "<img src='" . $row['image_url'] . "' alt='" . $row['name'] . "' style='max-width: 200px;'>";
        echo "<form action='add_to_cart.php' method='post'>";
        echo "<input type='hidden' name='product_id' value='" . $row['id'] . "'>";
        echo "<button type='submit'>Add to Cart</button>";
        echo "</form>";
        echo "</div>";
    }
    ?>

    <a href="view_cart.php">View Cart</a>
</body>
</html>

<?php
mysqli_close($conn);
?>


<?php
// add_to_cart.php

session_start();

$host = 'localhost';
$user = 'root';
$password = '';
$dbname = 'my_store';

$conn = mysqli_connect($host, $user, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

$product_id = $_POST['product_id'];

$sql = "SELECT * FROM products WHERE id = $product_id";
$result = mysqli_query($conn, $sql);
$product = mysqli_fetch_assoc($result);

if (isset($_SESSION['cart'])) {
    $item_exists = false;
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['id'] == $product_id) {
            $item['quantity']++;
            $item_exists = true;
            break;
        }
    }
    if (!$item_exists) {
        array_push($_SESSION['cart'], array(
            'id' => $product['id'],
            'name' => $product['name'],
            'price' => $product['price'],
            'quantity' => 1
        ));
    }
} else {
    $_SESSION['cart'] = array();
    array_push($_SESSION['cart'], array(
        'id' => $product['id'],
        'name' => $product['name'],
        'price' => $product['price'],
        'quantity' => 1
    ));
}

header("Location: products.php");
?>


<?php
// view_cart.php

session_start();

?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <?php if (isset($_SESSION['cart'])): ?>
        <h2>Your Shopping Cart:</h2>
        <table border='1'>
            <tr>
                <th>Product Name</th>
                <th>Price</th>
                <th>Quantity</th>
                <th>Total</th>
                <th>Action</th>
            </tr>
            <?php
            $total = 0;
            foreach ($_SESSION['cart'] as $item):
                $subtotal = $item['price'] * $item['quantity'];
                $total += $subtotal;
            ?>
                <tr>
                    <td><?php echo $item['name']; ?></td>
                    <td>$<?php echo number_format($item['price'], 2); ?></td>
                    <td><?php echo $item['quantity']; ?></td>
                    <td>$<?php echo number_format($subtotal, 2); ?></td>
                    <td><a href="remove_from_cart.php?id=<?php echo $item['id']; ?>">Remove</a></td>
                </tr>
            <?php endforeach; ?>
        </table>
        <h3>Total: $<?php echo number_format($total, 2); ?></h3>
        <form action="checkout.php" method="post">
            <button type="submit">Checkout</button>
        </form>
    <?php else: ?>
        <p>Your cart is empty!</p>
    <?php endif; ?>

    <a href="products.php">Continue Shopping</a>
</body>
</html>


<?php
// remove_from_cart.php

session_start();

$product_id = $_GET['id'];

foreach ($_SESSION['cart'] as $key => $item) {
    if ($item['id'] == $product_id) {
        unset($_SESSION['cart'][$key]);
        break;
    }
}

$_SESSION['cart'] = array_values($_SESSION['cart']);

header("Location: view_cart.php");
?>


<?php
// checkout.php

session_start();

?>

<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
</head>
<body>
    <?php if (isset($_SESSION['cart'])): ?>
        <h2>Confirm Order:</h2>
        <form action="process_payment.php" method="post">
            <input type="hidden" name="total_amount" value="<?php echo $_SESSION['total']; ?>">
            <div>
                <label for="name">Name:</label>
                <input type="text" id="name" name="customer_name" required>
            </div>
            <div>
                <label for="email">Email:</label>
                <input type="email" id="email" name="customer_email" required>
            </div>
            <div>
                <label for="address">Address:</label>
                <textarea id="address" name="shipping_address" required></textarea>
            </div>
            <button type="submit">Place Order</button>
        </form>
    <?php else: ?>
        <p>Your cart is empty!</p>
    <?php endif; ?>

    <a href="view_cart.php">Back to Cart</a>
</body>
</html>


<?php
// process_payment.php

session_start();

$customer_name = $_POST['customer_name'];
$customer_email = $_POST['customer_email'];
$shipping_address = $_POST['shipping_address'];
$total_amount = $_POST['total_amount'];

// Here you would typically integrate with a payment gateway
// For this example, we'll just simulate the payment processing

function process_payment($amount) {
    // Simulate payment processing
    sleep(1);
    return true; // Return true if payment is successful
}

if (process_payment($total_amount)) {
    // Clear the cart
    unset($_SESSION['cart']);
    
    // Here you would typically save the order to your database
    
    header("Location: thank_you.php");
} else {
    die("Payment failed. Please try again.");
}
?>


<?php
// thank_you.php

?>

<!DOCTYPE html>
<html>
<head>
    <title>Thank You</title>
</head>
<body>
    <h2>Thank you for your purchase!</h2>
    <p>Your order has been received successfully.</p>
    <a href="products.php">Continue Shopping</a>
</body>
</html>


<?php
// config.php - Database configuration
$host = 'localhost';
$user = 'root';
$password = '';
$dbname = 'eshop';

$conn = mysqli_connect($host, $user, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}
?>

<?php
// register.php
include('config.php');

session_start();

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $username = mysqli_real_escape_string($conn, $_POST['username']);
    $email = mysqli_real_escape_string($conn, $_POST['email']);
    $password = password_hash($_POST['password'], PASSWORD_DEFAULT);

    $sql = "INSERT INTO users (username, email, password_hash) VALUES ('$username', '$email', '$password')";
    
    if (mysqli_query($conn, $sql)) {
        echo "Registration successful!";
        header("Location: login.php");
    } else {
        echo "Error: " . mysqli_error($conn);
    }
}
?>


<?php
// login.php
session_start();
include('config.php');

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $username = mysqli_real_escape_string($conn, $_POST['username']);
    $password = $_POST['password'];

    $sql = "SELECT * FROM users WHERE username = '$username'";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) == 1) {
        $user = mysqli_fetch_assoc($result);
        if (password_verify($password, $user['password_hash'])) {
            $_SESSION['user_id'] = $user['id'];
            header("Location: catalog.php");
            exit();
        } else {
            echo "Incorrect password!";
        }
    } else {
        echo "User not found!";
    }
}
?>


<?php
// catalog.php
session_start();
include('config.php');

$sql = "SELECT * FROM products WHERE status = 'active'";
$result = mysqli_query($conn, $sql);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Product Catalog</title>
</head>
<body>
<h1>Product Catalog</h1>
<?php while ($product = mysqli_fetch_assoc($result)): ?>
<table border="1">
<tr>
    <td><?php echo $product['name']; ?></td>
    <td><?php echo $product['description']; ?></td>
    <td><?php echo "$" . number_format($product['price'], 2); ?></td>
    <td><a href="add_to_cart.php?id=<?php echo $product['id']; ?>">Add to Cart</a></td>
</tr>
<?php endwhile; ?>
</table>
<a href="cart.php">View Cart</a> | <a href="logout.php">Logout</a>
</body>
</html>


<?php
// add_to_cart.php
session_start();
include('config.php');

$product_id = $_GET['id'];
$sql = "SELECT * FROM products WHERE id = $product_id";
$result = mysqli_query($conn, $sql);
$product = mysqli_fetch_assoc($result);

if (isset($_SESSION['cart'])) {
    if ($existing_item = array_search($product_id, array_column($_SESSION['cart'], 'id'))) {
        // Update quantity
    } else {
        $_SESSION['cart'][] = array(
            'id' => $product['id'],
            'name' => $product['name'],
            'price' => $product['price'],
            'quantity' => 1
        );
    }
} else {
    $_SESSION['cart'] = array();
    $_SESSION['cart'][] = array(
        'id' => $product['id'],
        'name' => $product['name'],
        'price' => $product['price'],
        'quantity' => 1
    );
}

header("Location: catalog.php");
exit();
?>


<?php
// checkout.php
session_start();
include('config.php');

if (!isset($_SESSION['user_id'])) {
    header("Location: login.php");
    exit();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
</head>
<body>
<h1>Checkout</h1>
<form action="process_order.php" method="post">
    <label for="address">Shipping Address:</label><br>
    <textarea id="address" name="address"></textarea><br>
    
    <label for="payment_method">Payment Method:</label><br>
    <select id="payment_method" name="payment_method">
        <option value="credit_card">Credit Card</option>
        <option value="paypal">PayPal</option>
    </select><br>
    
    <input type="submit" value="Place Order">
</form>
<a href="cart.php">Back to Cart</a> | <a href="logout.php">Logout</a>
</body>
</html>


<?php
// process_order.php
session_start();
include('config.php');

if (!isset($_SESSION['user_id'])) {
    header("Location: login.php");
    exit();
}

$total = 0;
foreach ($_SESSION['cart'] as $item) {
    $total += $item['price'] * $item['quantity'];
}

// Insert order
$sql = "INSERT INTO orders (user_id, total_amount, payment_method, shipping_address)
VALUES ('$_SESSION[user_id]', '$total', '".$_POST['payment_method']."', '".$_POST['address']."')";
mysqli_query($conn, $sql);

$order_id = mysqli_insert_id($conn);

foreach ($_SESSION['cart'] as $item) {
    $sql_details = "INSERT INTO order_details (order_id, product_id, quantity, subtotal)
    VALUES ('$order_id', '{$item['id']}', '{$item['quantity']}', '".($item['price'] * $item['quantity'])."')";
    mysqli_query($conn, $sql_details);
}

// Deduct stock
foreach ($_SESSION['cart'] as $item) {
    $sql_stock = "UPDATE products SET stock = stock - {$item['quantity']} WHERE id = '{$item['id']}'";
    mysqli_query($conn, $sql_stock);
}

unset($_SESSION['cart']);
header("Location: order_confirmation.php?order_id=$order_id");
exit();
?>


<?php
// order_confirmation.php
session_start();
include('config.php');

if (!isset($_GET['order_id'])) {
    header("Location: catalog.php");
    exit();
}

$order_id = $_GET['order_id'];
$sql_order = "SELECT * FROM orders WHERE id = $order_id";
$result_order = mysqli_query($conn, $sql_order);
$order = mysqli_fetch_assoc($result_order);

$sql_details = "SELECT * FROM order_details WHERE order_id = $order_id";
$result_details = mysqli_query($conn, $sql_details);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Order Confirmation</title>
</head>
<body>
<h1>Thank you for your order!</h1>
<p>Your order ID is: <?php echo $order['id']; ?></p>
<table border="1">
<tr>
    <th>Product Name</th>
    <th>Quantity</th>
    <th>Price</th>
    <th>Total</th>
</tr>
<?php while ($detail = mysqli_fetch_assoc($result_details)): 
    $sql_product = "SELECT name FROM products WHERE id = {$detail['product_id']}";
    $result_product = mysqli_query($conn, $sql_product);
    $product = mysqli_fetch_assoc($result_product); ?>
<tr>
    <td><?php echo $product['name']; ?></td>
    <td><?php echo $detail['quantity']; ?></td>
    <td><?php echo "$" . number_format($detail['subtotal'] / $detail['quantity'], 2); ?></td>
    <td><?php echo "$" . number_format($detail['subtotal'], 2); ?></td>
</tr>
<?php endwhile; ?>
<tr>
    <td colspan="3">Total:</td>
    <td><?php echo "$" . number_format($order['total_amount'], 2); ?></td>
</tr>
</table>
<p>Estimated delivery: <?php echo date('Y-m-d', strtotime('+7 days')); ?></p>
<a href="catalog.php">Continue Shopping</a> | <a href="logout.php">Logout</a>
</body>
</html>


<?php
// logout.php
session_start();
session_unset();
session_destroy();
header("Location: login.php");
exit();
?>


<?php
// Database connection
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "purchase_system";

// Create connection
$conn = new mysqli($servername, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to sanitize input data
function sanitizeInput($data) {
    $data = trim($data);
    $data = stripslashes($data);
    $data = htmlspecialchars($data);
    return $data;
}

// Register customer
if ($_SERVER["REQUEST_METHOD"] == "POST" && isset($_POST['register'])) {
    // Sanitize input data
    $name = sanitizeInput($_POST['name']);
    $email = sanitizeInput($_POST['email']);
    $phone = sanitizeInput($_POST['phone']);
    $address = sanitizeInput($_POST['address']);

    // Validate input data
    if (empty($name) || empty($email) || empty($phone) || empty($address)) {
        die("Please fill in all required fields");
    }

    // Check if email already exists
    $checkEmailQuery = "SELECT id FROM customers WHERE email = ?";
    $stmt = $conn->prepare($checkEmailQuery);
    $stmt->bind_param("s", $email);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        die("Email already exists");
    }

    // Insert customer into database
    $insertCustomerQuery = "INSERT INTO customers (name, email, phone, address) VALUES (?, ?, ?, ?)";
    $stmt = $conn->prepare($insertCustomerQuery);
    $stmt->bind_param("ssss", $name, $email, $phone, $address);

    if ($stmt->execute()) {
        $customer_id = $stmt->insert_id;
        echo "Registration successful! Your customer ID is: $customer_id";
    } else {
        die("Error registering customer");
    }
}

// Process payment
if ($_SERVER["REQUEST_METHOD"] == "POST" && isset($_POST['process_payment'])) {
    // Sanitize input data
    $card_number = sanitizeInput($_POST['card_number']);
    $card_cvv = sanitizeInput($_POST['card_cvv']);
    $card_expiry = sanitizeInput($_POST['card_expiry']);
    $amount = $_POST['amount'];

    // Validate payment details
    if (empty($card_number) || empty($card_cvv) || empty($card_expiry) || empty($amount)) {
        die("Please fill in all required fields");
    }

    // Payment processing logic here (you would integrate with a payment gateway)
    // For this example, we'll assume the payment was successful
    $transaction_id = uniqid();
    $status = "completed";
    $date = date('Y-m-d H:i:s');

    // Insert transaction into database
    $insertTransactionQuery = "INSERT INTO transactions (customer_id, amount, status, transaction_id, date) VALUES (?, ?, ?, ?, ?)";
    $stmt = $conn->prepare($insertTransactionQuery);
    $stmt->bind_param("isiss", $_POST['customer_id'], $amount, $status, $transaction_id, $date);

    if ($stmt->execute()) {
        echo "Payment processed successfully! Transaction ID: $transaction_id";
    } else {
        die("Error processing payment");
    }
}

// Order management
if ($_SERVER["REQUEST_METHOD"] == "POST" && isset($_POST['manage_order'])) {
    // Sanitize input data
    $order_id = sanitizeInput($_POST['order_id']);

    // Get order details from database
    $getOrderQuery = "SELECT * FROM orders WHERE id = ?";
    $stmt = $conn->prepare($getOrderQuery);
    $stmt->bind_param("i", $order_id);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        // Update order status
        $updateOrderStatusQuery = "UPDATE orders SET status = ? WHERE id = ?";
        $stmt = $conn->prepare($updateOrderStatusQuery);
        $stmt->bind_param("si", $_POST['status'], $order_id);

        if ($stmt->execute()) {
            echo "Order status updated successfully";
        } else {
            die("Error updating order status");
        }
    } else {
        die("Order not found");
    }
}

$conn->close();
?>


function connect_db() {
    $host = 'localhost';
    $user = 'root';
    $pass = '';
    $db = 'test';

    return new mysqli($host, $user, $pass, $db);
}


function check_stock(mysqli $conn, int $item_id, int $quantity): bool {
    $stmt = $conn->prepare("SELECT quantity FROM inventory WHERE id = ?");
    $stmt->bind_param('i', $item_id);
    $stmt->execute();
    $result = $stmt->get_result();
    $row = $result->fetch_assoc();

    return ($row['quantity'] >= $quantity) ? true : false;
}


function deduct_quantity(mysqli $conn, int $item_id, int $quantity): bool {
    $stmt = $conn->prepare("UPDATE inventory SET quantity = quantity - ? WHERE id = ?");
    $stmt->bind_param('ii', $quantity, $item_id);
    if (!$stmt->execute()) {
        throw new Exception("Error deducting stock: " . $conn->error);
    }
    return true;
}


function process_payment(float $amount): bool {
    // Simulate payment processing
    if ($amount <= 0) {
        throw new Exception("Invalid amount for payment.");
    }
    // In a real scenario, integrate with a payment gateway here.
    return true;
}


function record_purchase(mysqli $conn, int $user_id, array $cart_items): bool {
    try {
        // Start transaction
        $conn->begin_transaction();

        $order_status = 'pending'; // Default status can be updated later

        // Insert into orders table
        $stmt_order = $conn->prepare("INSERT INTO orders (user_id, total_amount, order_status) VALUES (?, ?, ?)");
        $total = array_sum(array_column($cart_items, 'price'));
        $stmt_order->bind_param('ids', $user_id, $total, $order_status);
        if (!$stmt_order->execute()) {
            throw new Exception("Error recording order: " . $conn->error);
        }
        $order_id = $conn->insert_id;

        // Insert into order_items
        foreach ($cart_items as $item) {
            $stmt_item = $conn->prepare("INSERT INTO order_items (order_id, item_id, quantity, price) VALUES (?, ?, ?, ?)");
            $stmt_item->bind_param('iiid', $order_id, $item['id'], $item['quantity'], $item['price']);
            if (!$stmt_item->execute()) {
                throw new Exception("Error recording order items: " . $conn->error);
            }
        }

        // Commit transaction
        $conn->commit();
        return true;

    } catch (Exception $e) {
        // Rollback on error
        $conn->rollback();
        error_log("Order recording failed: " . $e->getMessage());
        throw $e;
    }
}


function process_purchase(int $user_id, array $cart_items): bool {
    try {
        $conn = connect_db();
        if ($conn->connect_error) {
            throw new Exception("Database connection failed: " . $conn->connect_error);
        }

        // Check stock for all items
        foreach ($cart_items as $item) {
            if (!check_stock($conn, $item['id'], $item['quantity'])) {
                throw new Exception("Item {$item['name']} is out of stock.");
            }
        }

        // Deduct quantities
        foreach ($cart_items as $item) {
            deduct_quantity($conn, $item['id'], $item['quantity']);
        }

        // Process payment
        $total = array_sum(array_column($cart_items, 'price'));
        process_payment($total);

        // Record the purchase
        record_purchase($conn, $user_id, $cart_items);

        return true;

    } catch (Exception $e) {
        error_log("Purchase failed: " . $e->getMessage());
        throw $e;
    }
}


try {
    // Assume $cart_items is the array of items in the cart, each with 'id', 'quantity', 'price'
    if (process_purchase($user_id, $cart_items)) {
        echo "Purchase successful!";
    }
} catch (Exception $e) {
    echo "Error: " . htmlspecialchars($e->getMessage());
}


<?php
session_start();
include('db_connection.php');

// Fetch all products from database
$products = $conn->query("SELECT * FROM products");
?>

<!DOCTYPE html>
<html>
<head>
    <title>Product Catalog</title>
</head>
<body>
    <?php if (!isset($_SESSION['user_id'])): ?>
        <a href="login.php">Login</a> | <a href="register.php">Register</a>
    <?php else: ?>
        <a href="cart.php">View Cart</a> | <a href="logout.php">Logout</a>
    <?php endif; ?>

    <h1>Products</h1>
    <?php while ($product = $products->fetch_assoc()): ?>
        <div>
            <h2><?php echo $product['name']; ?></h2>
            <p><?php echo $product['description']; ?></p>
            <p>Price: <?php echo "$" . number_format($product['price'], 2); ?></p>
            <form action="add_to_cart.php" method="post">
                <input type="hidden" name="product_id" value="<?php echo $product['id']; ?>">
                <input type="number" name="quantity" min="1" max="<?php echo $product['stock']; ?>" value="1">
                <button type="submit">Add to Cart</button>
            </form>
        </div>
    <?php endwhile; ?>
</body>
</html>


<?php
session_start();
include('db_connection.php');

if (isset($_POST['product_id']) && isset($_POST['quantity'])) {
    $product_id = $_POST['product_id'];
    $quantity = intval($_POST['quantity']);

    // Fetch product details from database
    $result = $conn->query("SELECT * FROM products WHERE id=$product_id");
    if ($result->num_rows > 0) {
        $product = $result->fetch_assoc();
        
        // Initialize cart if not exists
        if (!isset($_SESSION['cart'])) {
            $_SESSION['cart'] = array();
        }
        
        // Check if product is already in the cart
        if (array_key_exists($product_id, $_SESSION['cart'])) {
            // Increment quantity
            $_SESSION['cart'][$product_id]['quantity'] += $quantity;
        } else {
            // Add new product to cart
            $_SESSION['cart'][$product_id] = array(
                'name' => $product['name'],
                'price' => $product['price'],
                'quantity' => $quantity,
                'total_price' => $product['price'] * $quantity
            );
        }
        
        // Redirect back to products page
        header("Location: index.php");
    } else {
        echo "Product not found!";
    }
}
?>


<?php
session_start();
include('db_connection.php');

if (!isset($_SESSION['user_id'])) {
    header("Location: login.php");
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <h1>Your Shopping Cart</h1>
    
    <?php if (empty($_SESSION['cart'])): ?>
        <p>Your cart is empty.</p>
    <?php else: ?>
        <table border="1">
            <tr>
                <th>Product Name</th>
                <th>Price</th>
                <th>Quantity</th>
                <th>Total Price</th>
                <th>Action</th>
            </tr>
            
            <?php $grand_total = 0; ?>
            <?php foreach ($_SESSION['cart'] as $product_id => $item): ?>
                <tr>
                    <td><?php echo $item['name']; ?></td>
                    <td><?php echo "$" . number_format($item['price'], 2); ?></td>
                    <td>
                        <form action="update_cart.php" method="post">
                            <input type="hidden" name="product_id" value="<?php echo $product_id; ?>">
                            <input type="number" name="quantity" min="1" value="<?php echo $item['quantity']; ?>">
                            <button type="submit">Update</button>
                        </form>
                    </td>
                    <td><?php echo "$" . number_format($item['total_price'], 2); ?></td>
                    <td><a href="remove_from_cart.php?product_id=<?php echo $product_id; ?>">Remove</a></td>
                </tr>
                <?php $grand_total += $item['total_price']; ?>
            <?php endforeach; ?>
            
            <tr>
                <td colspan="4">Grand Total:</td>
                <td><?php echo "$" . number_format($grand_total, 2); ?></td>
            </tr>
        </table>
        
        <a href="checkout.php">Proceed to Checkout</a> | 
        <a href="index.php">Continue Shopping</a>
    <?php endif; ?>
</body>
</html>


<?php
session_start();

if (isset($_POST['product_id']) && isset($_POST['quantity'])) {
    $product_id = $_POST['product_id'];
    $quantity = intval($_POST['quantity']);
    
    if (isset($_SESSION['cart'][$product_id])) {
        // Update quantity and recalculate total price
        $_SESSION['cart'][$product_id]['quantity'] = $quantity;
        $_SESSION['cart'][$product_id]['total_price'] = 
            $_SESSION['cart'][$product_id]['price'] * $quantity;
    }
    
    header("Location: cart.php");
}
?>


<?php
session_start();

if (isset($_GET['product_id'])) {
    $product_id = $_GET['product_id'];
    
    if (isset($_SESSION['cart'][$product_id])) {
        unset($_SESSION['cart'][$product_id]);
    }
    
    header("Location: cart.php");
}
?>


<?php
session_start();
include('db_connection.php');

if (!isset($_SESSION['user_id'])) {
    header("Location: login.php");
}

// Get user details for pre-filled form
$user = $conn->query("SELECT * FROM users WHERE id=$_SESSION[user_id]");
$user_data = $user->fetch_assoc();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
</head>
<body>
    <h1>Checkout</h1>
    
    <?php if (!empty($_SESSION['cart'])): ?>
        <form action="process_payment.php" method="post">
            <!-- Shipping Information -->
            <div>
                <h2>Shipping Address</h2>
                <p><?php echo $user_data['address']; ?></p>
            </div>
            
            <!-- Payment Information -->
            <div>
                <h2>Payment Details</h2>
                <input type="text" name="card_number" placeholder="Card Number" required>
                <input type="text" name="cvv" placeholder="CVV" required>
                <input type="month" name="expiry_date" required>
            </div>
            
            <!-- Submit Button -->
            <button type="submit">Place Order</button>
        </form>
    <?php else: ?>
        <p>Your cart is empty. Please add items to your cart first.</p>
    <?php endif; ?>
    
    <a href="cart.php">Back to Cart</a>
</body>
</html>


<?php
session_start();
include('db_connection.php');

if (!isset($_SESSION['user_id']) || empty($_SESSION['cart'])) {
    header("Location: index.php");
}

// Simulated payment processing
$isValidPayment = true; // In a real application, this would be integrated with a payment gateway

if ($isValidPayment) {
    $grand_total = 0;
    
    foreach ($_SESSION['cart'] as $product_id => $item) {
        $grand_total += $item['total_price'];
        
        // Insert order into the orders table
        $conn->query("INSERT INTO orders (user_id, product_id, quantity, total_amount, payment_status)
                     VALUES ($_SESSION[user_id], $product_id, {$item['quantity']}, {$item['total_price']}, 'Completed')");
    }
    
    // Clear the cart
    unset($_SESSION['cart']);
    
    header("Location: order_confirmation.php?amount=$grand_total");
} else {
    echo "Payment failed. Please try again.";
}
?>


<?php
session_start();

if (!isset($_GET['amount'])) {
    header("Location: index.php");
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Order Confirmation</title>
</head>
<body>
    <h1>Thank You for Your Order!</h1>
    
    <p>Your order has been successfully placed.</p>
    <p>Total Amount Paid: <?php echo "$" . number_format($_GET['amount'], 2); ?></p>
    
    <a href="index.php">Continue Shopping</a>
</body>
</html>


<?php
$servername = "localhost";
$username = "root";
$password = "";
$dbname = "shopping_cart";

// Create connection
$conn = new mysqli($servername, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}
?>


<?php
session_start();
include('db_connection.php');

if (isset($_POST['username']) && isset($_POST['password'])) {
    $username = $_POST['username'];
    $password = $_POST['password'];
    
    // Query the database for the user
    $result = $conn->query("SELECT * FROM users WHERE username='$username'");
    if ($result->num_rows > 0) {
        $user = $result->fetch_assoc();
        
        // Verify password
        if (password_verify($password, $user['password_hash'])) {
            $_SESSION['user_id'] = $user['id'];
            header("Location: index.php");
        } else {
            echo "Invalid username or password.";
        }
    } else {
        echo "Invalid username or password.";
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login</title>
</head>
<body>
    <h1>Login</h1>
    <form action="login.php" method="post">
        Username: <input type="text" name="username" required><br>
        Password: <input type="password" name="password" required><br>
        <button type="submit">Login</button>
    </form>
    <p>Don't have an account? <a href="register.php">Register here</a>.</p>
</body>
</html>


<?php
session_start();
include('db_connection.php');

if (isset($_POST['username']) && isset($_POST['password'])) {
    $username = $_POST['username'];
    $email = $_POST['email'];
    $password = password_hash($_POST['password'], PASSWORD_DEFAULT);
    $first_name = $_POST['first_name'];
    $last_name = $_POST['last_name'];
    $address = $_POST['address'];
    
    // Check if username or email already exists
    $check_user = $conn->query("SELECT * FROM users WHERE username='$username' OR email='$email'");
    if ($check_user->num_rows > 0) {
        echo "Username or email already exists.";
    } else {
        // Insert new user into the database
        $sql = "INSERT INTO users (username, email, password_hash, first_name, last_name, address)
                VALUES ('$username', '$email', '$password', '$first_name', '$last_name', '$address')";
        
        if ($conn->query($sql)) {
            echo "Registration successful! Please login.";
            header("Location: login.php");
        } else {
            echo "Error registering user.";
        }
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Register</title>
</head>
<body>
    <h1>Register</h1>
    <form action="register.php" method="post">
        Username: <input type="text" name="username" required><br>
        Email: <input type="email" name="email" required><br>
        Password: <input type="password" name="password" required><br>
        First Name: <input type="text" name="first_name" required><br>
        Last Name: <input type="text" name="last_name" required><br>
        Address: <textarea name="address" rows="3" required></textarea><br>
        <button type="submit">Register</button>
    </form>
    <p>Already have an account? <a href="login.php">Login here</a>.</p>
</body>
</html>


<?php
session_start();
unset($_SESSION['user_id']);
session_unset();
session_destroy();
header("Location: index.php");
?>


<?php
session_start();

// Database configuration
$host = 'localhost';
$dbname = 'my_store';
$username = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

// Products array
$products = [
    [
        'id' => 1,
        'name' => 'Laptop',
        'price' => 999.99,
        'description' => 'High-performance laptop'
    ],
    [
        'id' => 2,
        'name' => 'Phone',
        'price' => 699.99,
        'description' => 'Smartphone with latest features'
    ],
    [
        'id' => 3,
        'name' => 'Tablet',
        'price' => 499.99,
        'description' => 'Portable tablet computer'
    ]
];

// Function to add product to cart
function addToCart($productId, $products) {
    global $_SESSION;
    
    foreach ($products as $product) {
        if ($product['id'] == $productId) {
            if (!isset($_SESSION['cart'][$productId])) {
                $_SESSION['cart'][$productId] = [
                    'id' => $product['id'],
                    'name' => $product['name'],
                    'price' => $product['price'],
                    'quantity' => 1
                ];
            } else {
                $_SESSION['cart'][$productId]['quantity']++;
            }
        }
    }
}

// Function to display cart contents
function displayCart() {
    global $_SESSION;
    
    if (!empty($_SESSION['cart'])) {
        $total = 0;
        echo "<table border='1'>";
        echo "<tr><th>Product</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>";
        
        foreach ($_SESSION['cart'] as $item) {
            $subtotal = $item['price'] * $item['quantity'];
            $total += $subtotal;
            
            echo "<tr>";
            echo "<td>" . $item['name'] . "</td>";
            echo "<td>$$item[price]</td>";
            echo "<td><input type='number' min='1' value='$item[quantity]' onchange='updateQuantity($item[id], this.value)'></td>";
            echo "<td>$$subtotal</td>";
            echo "<td><button onclick='removeFromCart(" . $item['id'] . ")'>Remove</button></td>";
            echo "</tr>";
        }
        
        echo "<tr><td colspan='3'><strong>Total:</strong></td><td>$$total</td><td><button onclick='checkout()'>Checkout</button></td></tr>";
        echo "</table>";
    } else {
        echo "Your cart is empty!";
    }
}

// Function to remove item from cart
function removeFromCart($productId) {
    global $_SESSION;
    
    unset($_SESSION['cart'][$productId]);
}

// Function to calculate totals
function calculateTotals() {
    global $_SESSION;
    
    $subtotal = 0;
    foreach ($_SESSION['cart'] as $item) {
        $subtotal += $item['price'] * $item['quantity'];
    }
    
    $tax = $subtotal * 0.10; // 10% tax
    $total = $subtotal + $tax;
    
    return [
        'subtotal' => $subtotal,
        'tax' => $tax,
        'total' => $total
    ];
}

// Function to process checkout
function processCheckout() {
    global $_SESSION;
    
    if (!empty($_SESSION['cart'])) {
        // Here you would typically connect to a database and save the order details
        // For this example, we'll just display the order summary
        
        $totals = calculateTotals();
        
        echo "<h2>Order Summary</h2>";
        echo "<p>Subtotal: $" . number_format($totals['subtotal'], 2) . "</p>";
        echo "<p>Tax: $" . number_format($totals['tax'], 2) . "</p>";
        echo "<p>Total: $" . number_format($totals['total'], 2) . "</p>";
        
        // Clear the cart
        $_SESSION['cart'] = [];
    } else {
        echo "Your cart is empty!";
    }
}

// Main logic
if (isset($_GET['action'])) {
    switch ($_GET['action']) {
        case 'add':
            $productId = intval($_GET['id']);
            addToCart($productId, $products);
            break;
            
        case 'remove':
            $productId = intval($_GET['id']);
            removeFromCart($productId);
            break;
            
        case 'checkout':
            processCheckout();
            break;
    }
}

// Display product catalog
echo "<h2>Product Catalog</h2>";
foreach ($products as $product) {
    echo "<div class='product'>";
    echo "<h3>" . $product['name'] . "</h3>";
    echo "<p>Price: $" . number_format($product['price'], 2) . "</p>";
    echo "<p>" . $product['description'] . "</p>";
    echo "<a href='?action=add&id=" . $product['id'] . "'>Add to Cart</a>";
    echo "</div>";
}

// Display cart
echo "<h2>Your Shopping Cart</h2>";
displayCart();
?>

<script>
function removeFromCart(productId) {
    if (confirm('Are you sure you want to remove this item?')) {
        window.location.href = '?action=remove&id=' + productId;
    }
}

function checkout() {
    window.location.href = '?action=checkout';
}
</script>

<style>
.product {
    border: 1px solid #ccc;
    padding: 10px;
    margin-bottom: 10px;
}
</style>


<?php
session_start();

// Products array (replace this with your database query)
$products = array(
    array('id' => 1, 'name' => 'Product 1', 'description' => 'Description for product 1', 'price' => 29.99),
    array('id' => 2, 'name' => 'Product 2', 'description' => 'Description for product 2', 'price' => 49.99),
    array('id' => 3, 'name' => 'Product 3', 'description' => 'Description for product 3', 'price' => 19.99)
);

// Initialize cart if not exists
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add to cart functionality
if (isset($_GET['action']) && $_GET['action'] == 'add') {
    $productId = $_GET['id'];
    $quantity = 1;

    foreach ($products as $product) {
        if ($product['id'] == $productId) {
            if (!isset($_SESSION['cart'][$productId])) {
                $_SESSION['cart'][$productId] = array(
                    'name' => $product['name'],
                    'price' => $product['price'],
                    'quantity' => 0
                );
            }
            $_SESSION['cart'][$productId]['quantity'] += $quantity;
        }
    }
}

// Remove from cart functionality
if (isset($_GET['action']) && $_GET['action'] == 'remove') {
    $productId = $_GET['id'];
    unset($_SESSION['cart'][$productId]);
}

// Update quantity functionality
if (isset($_POST['update'])) {
    foreach ($_POST as $key => $value) {
        if ($key != 'update' && is_numeric($value)) {
            $productId = str_replace('quantity_', '', $key);
            $_SESSION['cart'][$productId]['quantity'] = $value;
        }
    }
}

// Checkout functionality
if (isset($_POST['checkout'])) {
    // Process the order here
    header("Location: receipt.php");
}
?>


<!DOCTYPE html>
<html>
<head>
    <title>Product Store</title>
</head>
<body>
    <h1>Welcome to Our Store</h1>
    
    <?php foreach ($products as $product) { ?>
        <div style="border: 1px solid #ddd; padding: 10px; margin: 5px;">
            <h2><?php echo $product['name']; ?></h2>
            <p><?php echo $product['description']; ?></p>
            <p>Price: <?php echo '$'.$product['price']; ?></p>
            <a href="index.php?action=add&id=<?php echo $product['id']; ?>">Add to Cart</a>
        </div>
    <?php } ?>

    <h3>Your Cart</h3>
    <a href="cart.php">View Cart</a>
</body>
</html>


<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <h1>Your Shopping Cart</h1>

    <?php if (empty($_SESSION['cart'])) { ?>
        <p>Your cart is empty.</p>
        <a href="index.php">Continue Shopping</a>
    <?php } else { ?>

    <form action="cart.php" method="post">
        <table border="1">
            <tr>
                <th>Product Name</th>
                <th>Price</th>
                <th>Quantity</th>
                <th>Total</th>
                <th>Action</th>
            </tr>

            <?php foreach ($_SESSION['cart'] as $productId => $item) { ?>
                <tr>
                    <td><?php echo $item['name']; ?></td>
                    <td><?php echo '$'.$item['price']; ?></td>
                    <td><input type="text" name="quantity_<?php echo $productId; ?>" value="<?php echo $item['quantity']; ?>"></td>
                    <td><?php echo '$'.number_format($item['price'] * $item['quantity'], 2); ?></td>
                    <td><a href="cart.php?action=remove&id=<?php echo $productId; ?>">Remove</a></td>
                </tr>
            <?php } ?>

        </table>

        <input type="submit" name="update" value="Update Cart">
        <input type="submit" name="checkout" formaction="checkout.php" value="Checkout">
    </form>

    <?php } ?>

    <a href="index.php">Continue Shopping</a>
</body>
</html>


<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
</head>
<body>
    <h1>Checkout</h1>

    <?php if (!empty($_SESSION['cart'])) { ?>

        <form action="receipt.php" method="post">
            <h2>Shipping Information</h2>
            <label>Name:</label><br>
            <input type="text" name="name"><br>
            
            <label>Email:</label><br>
            <input type="email" name="email"><br>

            <label>Address:</label><br>
            <textarea name="address"></textarea><br>

            <label>City:</label><br>
            <input type="text" name="city"><br>

            <label>State:</label><br>
            <input type="text" name="state"><br>

            <label>ZIP Code:</label><br>
            <input type="text" name="zip_code"><br>

            <label>Phone:</label><br>
            <input type="tel" name="phone"><br>

            <h2>Your Order</h2>
            <?php foreach ($_SESSION['cart'] as $item) { ?>
                <p><?php echo $item['name']; ?> - <?php echo '$'.$item['price']; ?> x <?php echo $item['quantity']; ?></p>
            <?php } ?>

            <input type="submit" value="Place Order">
        </form>

    <?php } else { ?>
        <p>Your cart is empty.</p>
        <a href="index.php">Continue Shopping</a>
    <?php } ?>

</body>
</html>


<!DOCTYPE html>
<html>
<head>
    <title>Order Confirmation</title>
</head>
<body>
    <h1>Thank you for your order!</h1>

    <?php if (!empty($_SESSION['cart'])) { ?>

        <p>Your order has been received. Here are the details:</p>

        <h2>Order Summary</h2>
        <?php foreach ($_SESSION['cart'] as $item) { ?>
            <p><?php echo $item['name']; ?> - <?php echo '$'.$item['price']; ?> x <?php echo $item['quantity']; ?></p>
        <?php } ?>

        <h2>Order Total:</h2>
        <?php 
        $total = 0;
        foreach ($_SESSION['cart'] as $item) {
            $total += $item['price'] * $item['quantity'];
        }
        echo '$'.number_format($total, 2);
        ?>

    <?php } else { ?>
        <p>Your cart is empty.</p>
    <?php } ?>

    <a href="index.php">Continue Shopping</a>

    <!-- Clear the cart after purchase -->
    <?php unset($_SESSION['cart']); ?>
</body>
</html>


<?php
// Database configuration
$host = "localhost";
$username = "root";
$password = "";
$dbname = "purchase_system";

// Connect to database
$conn = mysqli_connect($host, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Display products
function displayProducts() {
    global $conn;
    $sql = "SELECT * FROM products";
    $result = mysqli_query($conn, $sql);
    
    while ($row = mysqli_fetch_assoc($result)) {
        echo "<div class='product'>";
        echo "<h3>" . $row['name'] . "</h3>";
        echo "<p>Description: " . $row['description'] . "</p>";
        echo "<p>Price: $" . number_format($row['price'], 2) . "</p>";
        echo "<form action='add_to_cart.php' method='post'>";
        echo "<input type='hidden' name='product_id' value='" . $row['id'] . "'>";
        echo "<input type='number' name='quantity' min='1' max='" . $row['quantity'] . "' placeholder='Quantity'>";
        echo "<button type='submit'>Add to Cart</button>";
        echo "</form>";
        echo "</div>";
    }
}

// Add to cart functionality
if (isset($_POST['add_to_cart'])) {
    if (!isset($_SESSION)) {
        session_start();
    }
    
    $product_id = $_POST['product_id'];
    $quantity = $_POST['quantity'];
    
    // Check if product exists in database
    $sql = "SELECT * FROM products WHERE id = '$product_id'";
    $result = mysqli_query($conn, $sql);
    $product = mysqli_fetch_assoc($result);
    
    if ($product) {
        // Add to cart or update quantity
        if (isset($_SESSION['cart'][$product_id])) {
            $_SESSION['cart'][$product_id]['quantity'] += $quantity;
        } else {
            $_SESSION['cart'][$product_id] = array(
                'name' => $product['name'],
                'price' => $product['price'],
                'quantity' => $quantity
            );
        }
        
        echo "<script>alert('Product added to cart');</script>";
    }
}

// Cart management
if (isset($_GET['action'])) {
    switch ($_GET['action']) {
        case 'update':
            foreach ($_SESSION['cart'] as &$item) {
                if ($item['id'] == $_POST['product_id']) {
                    $item['quantity'] = $_POST['quantity'];
                }
            }
            break;
            
        case 'remove':
            unset($_SESSION['cart'][$_GET['product_id']]);
            break;
    }
}

// Checkout process
if (isset($_POST['checkout'])) {
    // Process payment and place order
    $total_price = 0;
    
    foreach ($_SESSION['cart'] as $item) {
        $total_price += ($item['price'] * $item['quantity']);
    }
    
    // Insert order into database
    $sql = "INSERT INTO orders (product_id, product_name, quantity, price, total_price, user_name, email, address, city, zip_code, payment_method, purchase_date) 
            VALUES ('$item[id]', '$item[name]', '$item[quantity]', '$item[price]', '$total_price', '".$_POST['name']."','".$_POST['email']."','".$_POST['address']."','".$_POST['city']."','".$_POST['zip_code']."','".$_POST['payment_method']."', NOW())";
    
    if (mysqli_query($conn, $sql)) {
        echo "<script>alert('Order placed successfully');</script>";
        unset($_SESSION['cart']);
    } else {
        echo "Error: " . mysqli_error($conn);
    }
}

// Order confirmation
function showOrderConfirmation() {
    global $conn;
    $email = $_SESSION['user_email'];
    
    $sql = "SELECT * FROM orders WHERE email = '$email'";
    $result = mysqli_query($conn, $sql);
    
    while ($row = mysqli_fetch_assoc($result)) {
        echo "<div class='order'>";
        echo "<h3>Order #".$row['id']."</h3>";
        echo "<p>Date: " . $row['purchase_date'] . "</p>";
        echo "<p>Total Price: $" . number_format($row['total_price'], 2) . "</p>";
        echo "</div>";
    }
}

// Close database connection
mysqli_close($conn);
?>


<?php
// product_display.php
session_start();

$products = array(
    array('id' => 1, 'name' => 'Product 1', 'price' => 29.99),
    array('id' => 2, 'name' => 'Product 2', 'price' => 49.99),
    array('id' => 3, 'name' => 'Product 3', 'price' => 19.99)
);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Products</title>
</head>
<body>
    <?php foreach ($products as $product): ?>
        <div>
            <h2><?php echo $product['name']; ?></h2>
            <p>$<?php echo number_format($product['price'], 2); ?></p>
            <form action="add_to_cart.php" method="post">
                <input type="hidden" name="id" value="<?php echo $product['id']; ?>">
                <input type="number" name="quantity" min="1" max="5" placeholder="Quantity">
                <button type="submit">Add to Cart</button>
            </form>
        </div>
    <?php endforeach; ?>
</body>
</html>


<?php
// add_to_cart.php
session_start();

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $id = $_POST['id'];
    $quantity = isset($_POST['quantity']) ? (int)$_POST['quantity'] : 1;

    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }

    // Check if product already exists in cart
    if (array_key_exists($id, $_SESSION['cart'])) {
        $_SESSION['cart'][$id]['quantity'] += $quantity;
    } else {
        $_SESSION['cart'][$id] = array(
            'id' => $id,
            'quantity' => $quantity
        );
    }

    header("Location: view_cart.php");
    exit();
}
?>


<?php
// view_cart.php
session_start();

$products = array(
    array('id' => 1, 'name' => 'Product 1', 'price' => 29.99),
    array('id' => 2, 'name' => 'Product 2', 'price' => 49.99),
    array('id' => 3, 'name' => 'Product 3', 'price' => 19.99)
);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <?php if (!empty($_SESSION['cart'])): ?>
        <h2>Your Shopping Cart</h2>
        <form action="checkout.php" method="post">
            <?php foreach ($_SESSION['cart'] as $item): 
                $product = array_search($item['id'], array_column($products, 'id'), true);
                $productName = $products[$product]['name'];
                $price = $products[$product]['price'];
            ?>
            <div>
                <h3><?php echo $productName; ?></h3>
                <p>$<?php echo number_format($price, 2); ?></p>
                <input type="number" name="<?php echo $item['id']; ?>_quantity" value="<?php echo $item['quantity']; ?>" min="1">
                <a href="remove_from_cart.php?id=<?php echo $item['id']; ?>">Remove</a>
            </div>
            <?php endforeach; ?>
            <button type="submit">Checkout</button>
        </form>
    <?php else: ?>
        <p>Your cart is empty.</p>
    <?php endif; ?>
</body>
</html>


<?php
// remove_from_cart.php
session_start();

if (isset($_GET['id'])) {
    $id = $_GET['id'];
    
    if (!empty($_SESSION['cart']) && array_key_exists($id, $_SESSION['cart'])) {
        unset($_SESSION['cart'][$id]);
    }
}

header("Location: view_cart.php");
exit();
?>


<?php
// checkout.php
session_start();

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Validate and process the form data
    $errors = array();

    foreach ($_SESSION['cart'] as $item) {
        if (!isset($_POST[$item['id'] . '_quantity']) || (int)$_POST[$item['id'] . '_quantity'] < 1) {
            $errors[] = 'Please enter a valid quantity for all products.';
            break;
        }
    }

    if (empty($errors)) {
        // Update quantities in the cart
        foreach ($_SESSION['cart'] as &$item) {
            $item['quantity'] = (int)$_POST[$item['id'] . '_quantity'];
        }

        header("Location: order_confirmation.php");
        exit();
    } else {
        foreach ($errors as $error) {
            echo "<p>$error</p>";
        }
    }
}
?>


<?php
// order_confirmation.php
session_start();

$products = array(
    array('id' => 1, 'name' => 'Product 1', 'price' => 29.99),
    array('id' => 2, 'name' => 'Product 2', 'price' => 49.99),
    array('id' => 3, 'name' => 'Product 3', 'price' => 19.99)
);

$total = 0;
?>

<!DOCTYPE html>
<html>
<head>
    <title>Order Confirmation</title>
</head>
<body>
    <?php if (!empty($_SESSION['cart'])): ?>
        <h2>Your Order Summary</h2>
        <div>
            <?php foreach ($_SESSION['cart'] as $item):
                $product = array_search($item['id'], array_column($products, 'id'), true);
                $price = $products[$product]['price'];
                $total += ($price * $item['quantity']);
            ?>
            <p><?php echo $products[$product]['name']; ?> x <?php echo $item['quantity']; ?></p>
            <?php endforeach; ?>
            <h3>Total: $<?php echo number_format($total, 2); ?></h3>
        </div>
    <?php else: ?>
        <p>Your cart is empty.</p>
    <?php endif; ?>

    <a href="product_display.php">Continue Shopping</a> |
    <a href="view_cart.php">Edit Cart</a>
</body>
</html>


<?php
// Start the session
session_start();

// Initialize product array
$products = array(
    array('id' => 1, 'name' => 'Product 1', 'description' => 'Description for Product 1', 'price' => 29.99),
    array('id' => 2, 'name' => 'Product 2', 'description' => 'Description for Product 2', 'price' => 49.99),
    array('id' => 3, 'name' => 'Product 3', 'description' => 'Description for Product 3', 'price' => 19.99),
    array('id' => 4, 'name' => 'Product 4', 'description' => 'Description for Product 4', 'price' => 39.99)
);

// Function to add item to cart
function addToCart($product_id) {
    global $products;
    
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }
    
    // Check if product exists in cart
    $found = false;
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['id'] == $product_id) {
            $item['quantity']++;
            $found = true;
            break;
        }
    }
    
    if (!$found) {
        // Add new product to cart
        foreach ($products as $product) {
            if ($product['id'] == $product_id) {
                $_SESSION['cart'][] = array(
                    'id' => $product['id'],
                    'name' => $product['name'],
                    'description' => $product['description'],
                    'price' => $product['price'],
                    'quantity' => 1
                );
            }
        }
    }
}

// Function to update cart item quantity
function updateQuantity($item_index, $new_quantity) {
    if (isset($_SESSION['cart'][$item_index])) {
        $_SESSION['cart'][$item_index]['quantity'] = max(1, $new_quantity);
    }
}

// Function to delete item from cart
function deleteItem($item_index) {
    if (isset($_SESSION['cart'][$item_index])) {
        unset($_SESSION['cart'][$item_index]);
        // Re-index the array
        $_SESSION['cart'] = array_values($_SESSION['cart']);
    }
}

// Handle actions
if (isset($_GET['action'])) {
    switch ($_GET['action']) {
        case 'add':
            if (isset($_GET['id'])) {
                addToCart($_GET['id']);
            }
            break;
        case 'update':
            if (isset($_GET['index']) && isset($_GET['quantity'])) {
                updateQuantity($_GET['index'], $_GET['quantity']);
            }
            break;
        case 'delete':
            if (isset($_GET['index'])) {
                deleteItem($_GET['index']);
            }
            break;
    }
}

// Function to display cart items
function displayCart() {
    $total = 0;
    if (!empty($_SESSION['cart'])) {
        echo '<h2>Your Cart</h2>';
        echo '<table border="1">';
        echo '<tr><th>Product Name</th><th>Description</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>';
        
        foreach ($_SESSION['cart'] as $index => $item) {
            $subtotal = $item['price'] * $item['quantity'];
            $total += $subtotal;
            
            echo '<tr>';
            echo '<td>' . $item['name'] . '</td>';
            echo '<td>' . $item['description'] . '</td>';
            echo '<td>$' . number_format($item['price'], 2) . '</td>';
            echo '<td><input type="number" value="' . $item['quantity'] . '" min="1"></td>';
            echo '<td>$' . number_format($subtotal, 2) . '</td>';
            echo '<td><a href="?action=delete&index=' . $index . '">Delete</a></td>';
            echo '</tr>';
        }
        
        echo '</table>';
        echo '<h3>Total: $' . number_format($total, 2) . '</h3>';
    } else {
        echo '<p>Your cart is empty!</p>';
    }
}

// Function to display products
function displayProducts() {
    global $products;
    
    echo '<h2>Available Products</h2>';
    echo '<div class="product-grid">';
    foreach ($products as $product) {
        echo '<div class="product-item">';
        echo '<img src="placeholder-image.jpg" alt="' . $product['name'] . '">';
        echo '<h3>' . $product['name'] . '</h3>';
        echo '<p>' . $product['description'] . '</p>';
        echo '<p>$' . number_format($product['price'], 2) . '</p>';
        echo '<a href="?action=add&id=' . $product['id'] . '" class="add-to-cart">Add to Cart</a>';
        echo '</div>';
    }
    echo '</div>';
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 20px;
        }
        .product-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 20px;
            padding: 20px;
        }
        .product-item {
            border: 1px solid #ddd;
            padding: 15px;
            text-align: center;
        }
        .add-to-cart {
            background-color: #4CAF50;
            color: white;
            padding: 10px 20px;
            text-decoration: none;
            border-radius: 4px;
        }
        table {
            width: 100%;
            margin-top: 20px;
        }
    </style>
</head>
<body>
    <?php displayProducts(); ?>
    
    <?php if (isset($_SESSION['cart'])) { ?>
        <h2>Shopping Cart</h2>
        <?php displayCart(); ?>
    <?php } ?>
</body>
</html>


<?php
// Initialize the session
session_start();

// Products array (you can connect this to your database later)
$products = [
    1 => [
        'name' => 'Product 1',
        'price' => 29.99,
        'description' => 'This is product 1'
    ],
    2 => [
        'name' => 'Product 2',
        'price' => 49.99,
        'description' => 'This is product 2'
    ],
    3 => [
        'name' => 'Product 3',
        'price' => 19.99,
        'description' => 'This is product 3'
    ]
];

// Function to add item to cart
function addToCart($productId, $quantity = 1) {
    if (isset($_COOKIE['cart'])) {
        $cart = unserialize($_COOKIE['cart']);
    } else {
        $cart = [];
    }

    if (!isset($cart[$productId])) {
        $cart[$productId] = ['quantity' => $quantity];
    } else {
        $cart[$productId]['quantity'] += $quantity;
    }

    setcookie('cart', serialize($cart), time() + 3600 * 24 * 7);
}

// Function to view cart
function viewCart() {
    if (isset($_COOKIE['cart'])) {
        $cart = unserialize($_COOKIE['cart']);
        return $cart;
    } else {
        return [];
    }
}

// Function to update quantity
function updateQuantity($productId, $quantity) {
    $cart = unserialize($_COOKIE['cart']);
    $cart[$productId]['quantity'] = $quantity;
    setcookie('cart', serialize($cart), time() + 3600 * 24 * 7);
}

// Function to remove item from cart
function removeFromCart($productId) {
    $cart = unserialize($_COOKIE['cart']);
    unset($cart[$productId]);
    setcookie('cart', serialize($cart), time() + 3600 * 24 * 7);
}

// Function to calculate total price
function calculateTotal($cart, $products) {
    $total = 0;
    foreach ($cart as $productId => $item) {
        $total += $products[$productId]['price'] * $item['quantity'];
    }
    return $total;
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
    <style>
        body { font-family: Arial, sans-serif; }
        .product-grid { display: grid; grid-template-columns: repeat(3, 1fr); gap: 20px; }
        .product-card { border: 1px solid #ddd; padding: 10px; text-align: center; }
    </style>
</head>
<body>
    <h1>Products</h1>
    
    <div class="product-grid">
        <?php foreach ($products as $id => $product): ?>
            <div class="product-card">
                <h3><?php echo $product['name']; ?></h3>
                <p><?php echo $product['description']; ?></p>
                <p>Price: $<?php echo number_format($product['price'], 2); ?></p>
                <form method="post" action="add_to_cart.php">
                    <input type="hidden" name="product_id" value="<?php echo $id; ?>">
                    <button type="submit">Add to Cart</button>
                </form>
            </div>
        <?php endforeach; ?>
    </div>

    <h2>Your Cart</h2>
    
    <?php 
    $cart = viewCart();
    if (empty($cart)): 
    ?>
        <p>Your cart is empty.</p>
    <?php else: ?>
        <table border="1">
            <tr>
                <th>Product Name</th>
                <th>Quantity</th>
                <th>Price</th>
                <th>Total</th>
                <th>Action</th>
            </tr>
            <?php foreach ($cart as $productId => $item): ?>
                <tr>
                    <td><?php echo $products[$productId]['name']; ?></td>
                    <td>
                        <form method="post" action="update_cart.php">
                            <input type="hidden" name="product_id" value="<?php echo $productId; ?>">
                            <input type="number" name="quantity" value="<?php echo $item['quantity']; ?>" min="1">
                            <button type="submit">Update</button>
                        </form>
                    </td>
                    <td>$<?php echo number_format($products[$productId]['price'], 2); ?></td>
                    <td>$<?php echo number_format($products[$productId]['price'] * $item['quantity'], 2); ?></td>
                    <td><a href="remove_from_cart.php?product_id=<?php echo $productId; ?>">Remove</a></td>
                </tr>
            <?php endforeach; ?>
        </table>
        
        <p>Total: $<?php echo number_format(calculateTotal($cart, $products), 2); ?></p>
        <br>
        <form method="post" action="checkout.php">
            <button type="submit">Checkout</button>
        </form>
    <?php endif; ?>
</body>
</html>



<?php
session_start();
include 'cart_functions.php';

if (isset($_POST['product_id'])) {
    addToCart($_POST['product_id']);
}

header('Location: index.php');
exit();
?>


<?php
session_start();
include 'cart_functions.php';

if (isset($_POST['product_id']) && isset($_POST['quantity'])) {
    updateQuantity($_POST['product_id'], $_POST['quantity']);
}

header('Location: index.php');
exit();
?>


<?php
session_start();
include 'cart_functions.php';

if (isset($_GET['product_id'])) {
    removeFromCart($_GET['product_id']);
}

header('Location: index.php');
exit();
?>


<?php
session_start();
include 'cart_functions.php';

$cart = viewCart();

// Here you would typically process the payment and save the order to a database

// For this example, we'll just show a thank you message
echo "<h1>Thank You for Your Order!</h1>";
echo "<p>Your order number is: " . mt_rand(10000000, 99999999) . "</p>";
?>


<?php
session_start();
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}
?>


<?php
session_start();

// Get product details from POST request
$product_id = isset($_POST['product_id']) ? intval($_POST['product_id']) : 0;
$quantity = isset($_POST['quantity']) ? intval($_POST['quantity']) : 1;

if ($product_id > 0 && $quantity > 0) {
    // Product details (you would typically fetch this from your database)
    $product_price = 9.99; // Replace with actual product price
    $product_name = "Sample Product"; // Replace with actual product name

    if (!isset($_SESSION['cart'][$product_id])) {
        $_SESSION['cart'][$product_id] = array(
            'id' => $product_id,
            'name' => $product_name,
            'quantity' => $quantity,
            'price' => $product_price
        );
    } else {
        // Increment quantity if product already exists in cart
        $_SESSION['cart'][$product_id]['quantity'] += $quantity;
    }

    // Update session cart
    $_SESSION['cart'] = $_SESSION['cart'];
} else {
    echo "Invalid product or quantity.";
}
?>


<?php
session_start();
$total_amount = 0;
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <h2>Your Shopping Cart</h2>
    <?php if (!empty($_SESSION['cart'])): ?>
        <table border="1">
            <tr>
                <th>Product Name</th>
                <th>Quantity</th>
                <th>Price</th>
                <th>Total</th>
                <th>Action</th>
            </tr>
            <?php foreach ($_SESSION['cart'] as $item): ?>
                <?php 
                    $total = $item['price'] * $item['quantity'];
                    $total_amount += $total;
                ?>
                <tr>
                    <td><?php echo $item['name']; ?></td>
                    <td><?php echo $item['quantity']; ?></td>
                    <td>$<?php echo number_format($item['price'], 2); ?></td>
                    <td>$<?php echo number_format($total, 2); ?></td>
                    <td><a href="remove_from_cart.php?id=<?php echo $item['id']; ?>">Remove</a></td>
                </tr>
            <?php endforeach; ?>
        </table>
        
        <h3>Total Amount: $<?php echo number_format($total_amount, 2); ?></h3>
        
        <form action="checkout.php" method="post">
            <input type="hidden" name="amount" value="<?php echo $total_amount; ?>">
            <button type="submit">Checkout</button>
        </form>
    <?php else: ?>
        <p>Your cart is empty.</p>
    <?php endif; ?>
    
    <a href="index.php">Continue Shopping</a>
</body>
</html>


<?php
session_start();
if (isset($_GET['id'])) {
    $product_id = intval($_GET['id']);
    
    if (isset($_SESSION['cart'][$product_id])) {
        unset($_SESSION['cart'][$product_id]);
        $_SESSION['cart'] = $_SESSION['cart'];
    }
}

header("Location: view_cart.php");
exit();
?>


<?php
session_start();

if (!isset($_POST['amount'])) {
    header("Location: view_cart.php");
    exit();
}

// Get payment details from Stripe
$stripe_token = $_POST['stripeToken'];
$total_amount = $_POST['amount'];

// Connect to Stripe (replace with your actual API keys)
\Stripe\Stripe::setApiKey('your_stripe_secret_key');

try {
    $charge = \Stripe\Charge::create([
        'amount' => $total_amount * 100, // Convert dollars to cents
        'currency' => 'usd',
        'source' => $stripe_token,
        'description' => "Order from your-site.com"
    ]);
    
    // Payment was successful, process the order
    // Here you would typically insert the order into your database
    
    header("Location: thankyou.php");
} catch (\Stripe\Error\Base $e) {
    // Handle error
    echo "Payment failed. Please try again.";
}
?>


<?php
session_start();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Thank You!</title>
</head>
<body>
    <h2>Thank you for your purchase!</h2>
    <?php 
        // Here you would typically display the order confirmation details
        echo "Your payment has been processed successfully.";
    ?>
    
    <p>We'll ship your order shortly.</p>
</body>
</html>


<?php
session_start();
require 'db_connection.php';

// Fetch all products from the database
$sql = "SELECT * FROM products";
$result = $conn->query($sql);

if ($result->num_rows > 0) {
    while ($row = $result->fetch_assoc()) {
        echo "<div class='product'>";
        echo "<h3>" . $row['name'] . "</h3>";
        echo "<p>" . $row['description'] . "</p>";
        echo "<p>Price: $" . number_format($row['price'], 2) . "</p>";
        echo "<form action='add_to_cart.php' method='post'>";
        echo "<input type='hidden' name='product_id' value='" . $row['id'] . "'>";
        echo "<button type='submit'>Add to Cart</button>";
        echo "</form>";
        echo "</div>";
    }
} else {
    echo "No products available.";
}
$conn->close();
?>


<?php
session_start();
require 'db_connection.php';

if (isset($_POST['product_id'])) {
    $productId = $_POST['product_id'];
    
    // Check if the product exists
    $sql = "SELECT * FROM products WHERE id = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("i", $productId);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows > 0) {
        $product = $result->fetch_assoc();
        
        // Initialize cart if not exists
        if (!isset($_SESSION['cart'])) {
            $_SESSION['cart'] = array();
        }
        
        // Check if product is already in cart
        if (array_key_exists($productId, $_SESSION['cart'])) {
            $_SESSION['cart'][$productId]['quantity']++;
        } else {
            $_SESSION['cart'][$productId] = array(
                'id' => $product['id'],
                'name' => $product['name'],
                'price' => $product['price'],
                'quantity' => 1
            );
        }
        
        echo "Product added to cart!";
    } else {
        echo "Product not found.";
    }
}
$conn->close();
?>


<?php
session_start();

if (!isset($_SESSION['cart']) || count($_SESSION['cart']) == 0) {
    echo "Your cart is empty.";
} else {
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += $item['price'] * $item['quantity'];
        echo "<div class='cart-item'>";
        echo "<h3>" . $item['name'] . "</h3>";
        echo "<p>Quantity: " . $item['quantity'] . "</p>";
        echo "<p>Price: $" . number_format($item['price'], 2) . "</p>";
        echo "<form action='update_cart.php' method='post'>";
        echo "<input type='hidden' name='product_id' value='" . $item['id'] . "'>";
        echo "<input type='number' name='quantity' min='1' value='" . $item['quantity'] . "'>";
        echo "<button type='submit'>Update Quantity</button>";
        echo "</form>";
        echo "</div>";
    }
    echo "<h3>Total: $" . number_format($total, 2) . "</h3>";
}
?>


<?php
session_start();
require 'db_connection.php';

if (!isset($_SESSION['user_id'])) {
    header("Location: login.php");
    exit();
}

// Get user details
$sql = "SELECT * FROM users WHERE id = ?";
$stmt = $conn->prepare($sql);
$stmt->bind_param("i", $_SESSION['user_id']);
$stmt->execute();
$result = $stmt->get_result();

if ($result->num_rows > 0) {
    $user = $result->fetch_assoc();
}

// Process order
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Validate and process the form data
    // For this example, we'll assume all validations are done
    
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += $item['price'] * $item['quantity'];
    }
    
    // Insert order into orders table
    $sql_order = "INSERT INTO orders (user_id, total_amount) VALUES (?, ?)";
    $stmt_order = $conn->prepare($sql_order);
    $stmt_order->bind_param("id", $_SESSION['user_id'], $total);
    $stmt_order->execute();
    
    $order_id = $stmt_order->insert_id;
    
    // Insert order items into order_items table
    foreach ($_SESSION['cart'] as $item) {
        $sql_item = "INSERT INTO order_items (order_id, product_id, quantity, price) VALUES (?, ?, ?, ?)";
        $stmt_item = $conn->prepare($sql_item);
        $stmt_item->bind_param("iidi", $order_id, $item['id'], $item['quantity'], $item['price']);
        $stmt_item->execute();
    }
    
    // Clear the cart
    unset($_SESSION['cart']);
    
    header("Location: order_confirmation.php?order_id=" . $order_id);
    exit();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
</head>
<body>
    <h1>Checkout</h1>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <!-- Display user details -->
        <div>
            <h3>Shipping Information</h3>
            <p><?php echo $user['first_name'] . " " . $user['last_name']; ?></p>
            <p>Email: <?php echo $user['email']; ?></p>
        </div>
        
        <!-- Payment information -->
        <div>
            <h3>Payment Information</h3>
            <input type="text" name="card_number" placeholder="Card Number" required>
            <input type="text" name="cvv" placeholder="CVV" required>
            <input type="text" name="expiry_date" placeholder="Expiry Date (MM/YY)" required>
        </div>
        
        <!-- Submit -->
        <button type="submit">Place Order</button>
    </form>
</body>
</html>


<?php
session_start();
require 'db_connection.php';

if (!isset($_GET['order_id'])) {
    header("Location: index.php");
    exit();
}

$order_id = $_GET['order_id'];

// Fetch order details
$sql_order = "SELECT * FROM orders WHERE id = ?";
$stmt_order = $conn->prepare($sql_order);
$stmt_order->bind_param("i", $order_id);
$stmt_order->execute();
$result_order = $stmt_order->get_result();

if ($result_order->num_rows > 0) {
    $order = $result_order->fetch_assoc();
    
    // Fetch order items
    $sql_items = "SELECT * FROM order_items WHERE order_id = ?";
    $stmt_items = $conn->prepare($sql_items);
    $stmt_items->bind_param("i", $order_id);
    $stmt_items->execute();
    $result_items = $stmt_items->get_result();
    
    echo "<h1>Order Confirmation</h1>";
    echo "<p>Your order has been placed successfully!</p>";
    echo "<p>Order ID: " . $order['id'] . "</p>";
    echo "<p>Total Amount: $" . number_format($order['total_amount'], 2) . "</p>";
    
    if ($result_items->num_rows > 0) {
        echo "<h3>Order Details:</h3>";
        while ($item = $result_items->fetch_assoc()) {
            // You might want to fetch product names here
            echo "<div class='order-item'>";
            echo "<p>Product ID: " . $item['product_id'] . "</p>";
            echo "<p>Quantity: " . $item['quantity'] . "</p>";
            echo "<p>Price: $" . number_format($item['price'], 2) . "</p>";
            echo "</div>";
        }
    }
} else {
    echo "Order not found.";
}

$conn->close();
?>


<?php
// Database connection
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'purchase_db';

$conn = new mysqli($host, $username, $password, $dbname);
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to display products
function displayProducts() {
    global $conn;
    $sql = "SELECT * FROM products";
    $result = $conn->query($sql);
    
    if ($result->num_rows > 0) {
        while ($row = $result->fetch_assoc()) {
            echo "<div class='product'>";
            echo "<h3>" . $row['name'] . "</h3>";
            echo "<p>Description: " . $row['description'] . "</p>";
            echo "<p>Price: $" . number_format($row['price'], 2) . "</p>";
            echo "<p>Quantity Available: " . $row['quantity'] . "</p>";
            echo "<form action='purchase.php' method='post'>";
            echo "<input type='hidden' name='product_id' value='" . $row['id'] . "'>";
            echo "<input type='number' name='quantity' min='1' max='" . $row['quantity'] . "' placeholder='Enter quantity'>";
            echo "<button type='submit'>Buy Now</button>";
            echo "</form>";
            echo "</div>";
        }
    } else {
        echo "No products available.";
    }
}

// Function to process purchase
function processPurchase($product_id, $quantity) {
    global $conn;
    
    // Validate input
    if (!is_numeric($quantity) || $quantity <= 0) {
        return false;
    }
    
    // Check product availability
    $sql = "SELECT * FROM products WHERE id = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("i", $product_id);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows == 0) {
        return false;
    }
    
    $product = $result->fetch_assoc();
    
    // Check quantity
    if ($quantity > $product['quantity']) {
        return false;
    }
    
    // Update inventory
    $sql = "UPDATE products SET quantity = quantity - ? WHERE id = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("ii", $quantity, $product_id);
    $stmt->execute();
    
    // Insert order into orders table
    date_default_timezone_set('UTC');
    $order_date = date('Y-m-d H:i:s');
    
    $sql = "INSERT INTO orders (user_id, product_id, quantity, order_date) VALUES (?, ?, ?, ?)";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("iisi", $_SESSION['user_id'], $product_id, $quantity, $order_date);
    $stmt->execute();
    
    return true;
}

// Function to handle payment
function processPayment($card_number, $cvv, $expiry_month, $expiry_year) {
    // Here you would typically integrate with a payment gateway
    // For this example, we'll just simulate the payment processing
    
    if (strlen($card_number) != 16 || strlen($cvv) < 3 || strlen($cvv) > 4 ||
        strlen($expiry_month) != 2 || strlen($expiry_year) != 4) {
        return false;
    }
    
    // Simulate payment processing
    sleep(2); // Pretend to process the payment
    
    return true;
}

// Main logic
if (isset($_POST['product_id']) && isset($_POST['quantity'])) {
    $product_id = $_POST['product_id'];
    $quantity = $_POST['quantity'];
    
    if (processPurchase($product_id, $quantity)) {
        // Payment processing form
        echo "<form action='purchase.php' method='post'>";
        echo "<h2>Payment Information</h2>";
        echo "<input type='text' name='card_number' placeholder='Card Number' required><br>";
        echo "<input type='text' name='cvv' placeholder='CVV' required><br>";
        echo "<input type='text' name='expiry_month' placeholder='MM' required><br>";
        echo "<input type='text' name='expiry_year' placeholder='YYYY' required><br>";
        echo "<button type='submit'>Confirm Payment</button>";
        echo "</form>";
        
        if (isset($_POST['card_number']) && isset($_POST['cvv']) &&
            isset($_POST['expiry_month']) && isset($_POST['expiry_year'])) {
            
            $card_number = $_POST['card_number'];
            $cvv = $_POST['cvv'];
            $expiry_month = $_POST['expiry_month'];
            $expiry_year = $_POST['expiry_year'];
            
            if (processPayment($card_number, $cvv, $expiry_month, $expiry_year)) {
                echo "<h2>Thank you for your purchase!</h2>";
                // Redirect to thank you page or order confirmation
            } else {
                echo "<h2>Payment failed. Please try again.</h2>";
            }
        }
    } else {
        echo "<h2>Invalid product selection or quantity.</h2>";
    }
} else {
    displayProducts();
}
?>



<?php
// config/db_config.php
$host = 'localhost';
$username = 'root';
$password = '';
$db_name = 'shopping_cart';

$conn = new mysqli($host, $username, $password, $db_name);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Product List</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
</head>
<body>

<?php
// index.php - Display products

session_start();

require_once 'config/db_config.php';

$sql = "SELECT * FROM products";
$result = $conn->query($sql);

if ($result->num_rows > 0) {
    while ($row = $result->fetch_assoc()) {
        echo "<div class='card'>";
        echo "<img src='".$row['image']."' alt='".$row['name']."'>";
        echo "<h3>".$row['name']."</h3>";
        echo "<p>Price: $$row[price]</p>";
        echo "<form action='add_to_cart.php' method='post'>";
        echo "<input type='hidden' name='product_id' value='".$row['id']."'>";
        echo "<button type='submit' class='btn btn-primary'>Add to Cart</button>";
        echo "</form>";
        echo "</div>";
    }
} else {
    echo "No products found.";
}

$conn->close();
?>


<?php
// add_to_cart.php

session_start();

require_once 'config/db_config.php';

$product_id = $_POST['product_id'];
$quantity = isset($_POST['quantity']) ? $_POST['quantity'] : 1;

if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

array_push($_SESSION['cart'], array(
    'product_id' => $product_id,
    'quantity' => $quantity
));

header('Location: cart.php');
exit;
?>


<?php
// cart.php - Show cart items

session_start();

require_once 'config/db_config.php';

$total = 0;

if (isset($_SESSION['cart'])) {
    foreach ($_SESSION['cart'] as $item) {
        $sql = "SELECT * FROM products WHERE id = ?";
        $stmt = $conn->prepare($sql);
        $stmt->bind_param("i", $item['product_id']);
        $stmt->execute();
        $result = $stmt->get_result();
        
        if ($row = $result->fetch_assoc()) {
            $total += $row['price'] * $item['quantity'];
            
            echo "<div class='card'>";
            echo "<img src='".$row['image']."' alt='".$row['name']."'>";
            echo "<h3>".$row['name']."</h3>";
            echo "<p>Quantity: ".$item['quantity']."</p>";
            echo "<p>Price: $$row[price]</p>";
            echo "</div>";
        }
    }
}

echo "<h2>Total: $$total</h2>";

$conn->close();
?>


<?php
// checkout.php - Process order

session_start();

require_once 'config/db_config.php';

if (isset($_POST['submit'])) {
    $user_name = $_POST['name'];
    $email = $_POST['email'];
    $address = $_POST['address'];
    $total = $_POST['total'];

    // Insert order
    $sql_order = "INSERT INTO orders (user_name, email, address, total_amount) VALUES (?, ?, ?, ?)";
    $stmt_order = $conn->prepare($sql_order);
    $stmt_order->bind_param("sssd", $user_name, $email, $address, $total);
    $stmt_order->execute();
    
    $order_id = $conn->insert_id;

    // Insert order items
    foreach ($_SESSION['cart'] as $item) {
        $sql_item = "INSERT INTO order_items (order_id, product_id, quantity) VALUES (?, ?, ?)";
        $stmt_item = $conn->prepare($sql_item);
        $stmt_item->bind_param("iii", $order_id, $item['product_id'], $item['quantity']);
        $stmt_item->execute();
    }

    // Clear cart
    unset($_SESSION['cart']);

    header('Location: thank_you.php');
    exit;
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
</head>
<body>
    <form method="post">
        <div class="form-group">
            <label for="name">Name:</label>
            <input type="text" id="name" name="name" required>
        </div>
        <div class="form-group">
            <label for="email">Email:</label>
            <input type="email" id="email" name="email" required>
        </div>
        <div class="form-group">
            <label for="address">Address:</label>
            <input type="text" id="address" name="address" required>
        </div>
        <input type="hidden" name="total" value="<?php echo $total; ?>">
        <button type="submit" name="submit" class="btn btn-primary">Place Order</button>
    </form>
</body>
</html>


<?php
// send_confirmation.php - Send email confirmation

session_start();

require_once 'config/db_config.php';

if (isset($_POST['order_id'])) {
    $order_id = $_POST['order_id'];
    
    // Get order details
    $sql = "SELECT * FROM orders WHERE id = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("i", $order_id);
    $stmt->execute();
    $result = $stmt->get_result();
    $order = $result->fetch_assoc();

    // Get order items
    $items_sql = "SELECT oi.*, p.name AS product_name FROM order_items oi 
                 JOIN products p ON oi.product_id = p.id 
                 WHERE oi.order_id = ?";
    $items_stmt = $conn->prepare($items_sql);
    $items_stmt->bind_param("i", $order_id);
    $items_stmt->execute();
    $items_result = $items_stmt->get_result();

    // Send email to customer
    $to = $order['email'];
    $subject = "Order Confirmation";
    $message = "Dear " . $order['user_name'] . ",

Your order has been received.

Order ID: " . $order_id . "
Total Amount: $" . number_format($order['total_amount'], 2);
    
    mail($to, $subject, $message);

    // Send email to admin
    $admin_to = "admin@example.com";
    $admin_subject = "New Order Received";
    $admin_message = "A new order has been received.

Order ID: " . $order_id . "
Total Amount: $" . number_format($order['total_amount'], 2) . "

Items:
" . $items_result->fetch_all();

    mail($admin_to, $admin_subject, $admin_message);
}
?>


<?php
// Start session
session_start();

// Database connection (replace with your database credentials)
$host = 'localhost';
$user = 'root';
$password = '';
$dbname = 'purchase_system';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $user, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

// Product data
$products = [
    ['id' => 1, 'name' => 'Product 1', 'description' => 'Description for product 1', 'price' => 29.99],
    ['id' => 2, 'name' => 'Product 2', 'description' => 'Description for product 2', 'price' => 49.99],
    ['id' => 3, 'name' => 'Product 3', 'description' => 'Description for product 3', 'price' => 19.99],
];

// Add to cart functionality
if (isset($_POST['add_to_cart'])) {
    $productId = $_POST['product_id'];
    
    // Initialize cart if not set
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = [];
    }
    
    // Check if product already in cart
    if (array_key_exists($productId, $_SESSION['cart'])) {
        $_SESSION['cart'][$productId]['quantity']++;
    } else {
        $product = $products[$productId - 1];
        $_SESSION['cart'][$productId] = [
            'name' => $product['name'],
            'price' => $product['price'],
            'quantity' => 1
        ];
    }
    
    header("Location: cart.php");
    exit();
}

// Remove from cart functionality
if (isset($_GET['remove'])) {
    $productId = $_GET['remove'];
    
    if (isset($_SESSION['cart'][$productId])) {
        unset($_SESSION['cart'][$productId]);
    }
    
    header("Location: cart.php");
    exit();
}

// Process order functionality
if (isset($_POST['process_order'])) {
    // Validate form data
    $firstName = $_POST['first_name'];
    $lastName = $_POST['last_name'];
    $email = $_POST['email'];
    $address = $_POST['address'];
    
    if (empty($firstName) || empty($lastName) || empty($email) || empty($address)) {
        die("Please fill in all required fields.");
    }
    
    // Check if cart is not empty
    if (!isset($_SESSION['cart']) || empty($_SESSION['cart'])) {
        die("Your cart is empty. Please add some items first.");
    }
    
    // Insert order into database
    $orderSql = "INSERT INTO orders (first_name, last_name, email, address) VALUES (?, ?, ?, ?)";
    $stmt = $conn->prepare($orderSql);
    $stmt->execute([$firstName, $lastName, $email, $address]);
    
    $orderId = $conn->lastInsertId();
    
    // Insert order items
    foreach ($_SESSION['cart'] as $productId => $item) {
        $orderItemSql = "INSERT INTO order_items (order_id, product_id, quantity, price) 
                        VALUES (?, ?, ?, ?)";
        $stmt = $conn->prepare($orderItemSql);
        $stmt->execute([$orderId, $productId, $item['quantity'], $item['price']]);
    }
    
    // Clear cart
    unset($_SESSION['cart']);
    
    // Redirect to thank you page
    header("Location: thank_you.php");
    exit();
}
?>


<?php
$host = 'localhost';
$dbusername = 'root';
$dbpassword = '';
$dbname = 'your_database_name';

// Create connection
$conn = new mysqli($host, $dbusername, $dbpassword, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}
?>


<?php
include 'db_connect.php';

$sql = "SELECT * FROM products";
$result = $conn->query($sql);

if ($result->num_rows > 0) {
    while ($row = $result->fetch_assoc()) {
        echo "<div class='product'>";
        echo "<h2>" . $row['name'] . "</h2>";
        echo "<p>" . $row['description'] . "</p>";
        echo "<p>Price: $" . number_format($row['price'], 2) . "</p>";
        if ($row['stock'] > 0) {
            echo "<form action='add_to_cart.php' method='post'>";
            echo "<input type='hidden' name='product_id' value='" . $row['id'] . "'>";
            echo "<button type='submit'>Add to Cart</button>";
            echo "</form>";
        } else {
            echo "<p>Out of Stock</p>";
        }
        echo "</div>";
    }
} else {
    echo "No products found.";
}
$conn->close();
?>


<?php
session_start();

if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

$product_id = isset($_POST['product_id']) ? intval($_POST['product_id']) : 0;

// Check if product exists in database
include 'db_connect.php';
$sql = "SELECT * FROM products WHERE id = $product_id";
$result = $conn->query($sql);

if ($result->num_rows > 0) {
    array_push($_SESSION['cart'], $product_id);
}

header('Location: view_cart.php');
?>


<?php
session_start();
include 'db_connect.php';

$total = 0;
echo "<h2>Your Shopping Cart</h2>";
echo "<ul>";

if (isset($_SESSION['cart'])) {
    foreach ($_SESSION['cart'] as $product_id) {
        $sql = "SELECT * FROM products WHERE id = $product_id";
        $result = $conn->query($sql);
        
        if ($result->num_rows > 0) {
            $row = $result->fetch_assoc();
            echo "<li>";
            echo $row['name'] . " - $" . number_format($row['price'], 2);
            echo "</li>";
            $total += $row['price'];
        }
    }
}

echo "</ul>";
echo "<p>Total: $" . number_format($total, 2) . "</p>";

// Proceed to checkout
echo "<form action='checkout.php' method='post'>";
echo "<button type='submit'>Checkout</button>";
echo "</form>";
$conn->close();
?>


<?php
session_start();

if (isset($_SESSION['cart'])) {
    // Get user details for order
    $username = isset($_POST['username']) ? $_POST['username'] : '';
    $email = isset($_POST['email']) ? $_POST['email'] : '';
    
    include 'db_connect.php';

    // Insert order into database
    foreach ($_SESSION['cart'] as $product_id) {
        $sql = "INSERT INTO orders (user_id, product_id, quantity, total_price)
                VALUES (?, ?, 1, ?)";
        
        if ($stmt = $conn->prepare($sql)) {
            $stmt->bind_param("iid", $user_id, $product_id, $price);
            
            // Get user details
            $get_user_sql = "SELECT id FROM users WHERE username = ?";
            if ($getUserStmt = $conn->prepare($get_user_sql)) {
                $getUserStmt->bind_param("s", $username);
                $getUserStmt->execute();
                $getUserStmt->store_result();
                
                if ($getUserStmt->num_rows > 0) {
                    $getUserStmt->bind_result($user_id);
                    $getUserStmt->fetch();
                } else {
                    // Create new user
                    $insert_user_sql = "INSERT INTO users (username, email)
                                      VALUES (?, ?)";
                    $insertUserStmt = $conn->prepare($insert_user_sql);
                    $insertUserStmt->bind_param("ss", $username, $email);
                    $insertUserStmt->execute();
                    $user_id = $conn->insert_id;
                }
            }
            
            // Get product price
            $get_price_sql = "SELECT price FROM products WHERE id = ?";
            if ($ getPriceStmt = $conn->prepare($get_price_sql)) {
                $getPriceStmt->bind_param("i", $product_id);
                $getPriceStmt->execute();
                $getPriceStmt->store_result();
                
                if ($getPriceStmt->num_rows > 0) {
                    $getPriceStmt->bind_result($price);
                    $getPriceStmt->fetch();
                    
                    // Insert order
                    $stmt->execute();
                }
            }
        }
    }

    // Clear cart
    unset($_SESSION['cart']);
    
    header('Location: purchase_complete.php');
}
$conn->close();
?>


<?php
echo "<h2>Thank you for your purchase!</h2>";
echo "<p>Your order has been successfully processed.</p>";
header('Refresh: 3; url=products.php');
?>


<?php
session_start();

// Sample product data
$products = array(
    array('id' => 1, 'name' => 'Product 1', 'price' => 29.99),
    array('id' => 2, 'name' => 'Product 2', 'price' => 49.99),
    array('id' => 3, 'name' => 'Product 3', 'price' => 19.99)
);

// Add to cart functionality
if (isset($_GET['action']) && $_GET['action'] == 'add') {
    $productId = intval($_GET['product_id']);
    
    // Find the product in the products array
    foreach ($products as $product) {
        if ($product['id'] == $productId) {
            $item = array('id' => $product['id'], 'name' => $product['name'], 'price' => $product['price']);
            
            // Check if item already exists in cart
            if (isset($_SESSION['cart'][$productId])) {
                $_SESSION['cart'][$productId]['quantity']++;
            } else {
                $_SESSION['cart'][$productId] = array('item' => $item, 'quantity' => 1);
            }
            break;
        }
    }
}

// View cart functionality
if (isset($_GET['action']) && $_GET['action'] == 'view') {
    header("Location: view_cart.php");
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <h1>Products</h1>
    <?php foreach ($products as $product): ?>
        <div>
            <h3><?php echo $product['name']; ?></h3>
            <p>Price: $<?php echo number_format($product['price'], 2); ?></p>
            <a href="index.php?action=add&product_id=<?php echo $product['id']; ?>">Add to Cart</a>
        </div>
    <?php endforeach; ?>

    <br><br>
    <a href="view_cart.php">View Cart</a>
</body>
</html>


<?php
session_start();

// Calculate total price
$total = 0;
foreach ($_SESSION['cart'] as $item) {
    $total += ($item['price'] * $item['quantity']);
}

// Process order functionality
if (isset($_POST['process_order'])) {
    // Simulate payment processing
    header("Location: checkout.php");
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>View Cart</title>
</head>
<body>
    <?php if (!empty($_SESSION['cart'])): ?>
        <h1>Your Cart</h1>
        <table border="1">
            <tr>
                <th>Product Name</th>
                <th>Price</th>
                <th>Quantity</th>
                <th>Total</th>
                <th>Action</th>
            </tr>
            <?php foreach ($_SESSION['cart'] as $productId => $item): ?>
                <tr>
                    <td><?php echo htmlspecialchars($item['name']); ?></td>
                    <td>$<?php echo number_format($item['price'], 2); ?></td>
                    <td><?php echo $item['quantity']; ?></td>
                    <td>$<?php echo number_format(($item['price'] * $item['quantity']), 2); ?></td>
                    <td><a href="remove_from_cart.php?product_id=<?php echo $productId; ?>">Remove</a></td>
                </tr>
            <?php endforeach; ?>
        </table>
        
        <h3>Grand Total: $<?php echo number_format($total, 2); ?></h3>
        
        <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
            <input type="submit" name="process_order" value="Proceed to Checkout">
        </form>
    <?php else: ?>
        <h1>Your Cart is Empty</h1>
        <a href="index.php">Go Back to Shopping</a>
    <?php endif; ?>

    <br><br>
    <a href="index.php">Continue Shopping</a>
</body>
</html>


<?php
session_start();

if (isset($_GET['product_id'])) {
    $productId = intval($_GET['product_id']);
    
    if (!empty($_SESSION['cart'][$productId])) {
        unset($_SESSION['cart'][$productId]);
    }
}

header("Location: view_cart.php");
?>


<?php
session_start();

if (isset($_POST['submit'])) {
    // Process payment details
    $name = $_POST['name'];
    $email = $_POST['email'];
    $card_number = $_POST['card_number'];
    $expiry_month = $_POST['expiry_month'];
    $expiry_year = $_POST['expiry_year'];
    
    // Simulate payment processing
    if (substr($card_number, 0, 4) == '4242' && strlen($card_number) == 16) {
        // Payment successful
        echo "<h1>Thank you for your purchase!</h1>";
        session_unset();
        session_destroy();
    } else {
        // Payment failed
        header("Location: view_cart.php");
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
</head>
<body>
    <h1>Payment Details</h1>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <label for="name">Name:</label><br>
        <input type="text" id="name" name="name"><br><br>

        <label for="email">Email:</label><br>
        <input type="email" id="email" name="email"><br><br>

        <label for="card_number">Card Number:</label><br>
        <input type="text" id="card_number" name="card_number" placeholder="16 digits"><br><br>

        <label for="expiry_month">Expiry Month:</label><br>
        <select id="expiry_month" name="expiry_month">
            <?php for ($i = 1; $i <= 12; $i++) { ?>
                <option value="<?php echo str_pad($i, 2, '0', STR_PAD_LEFT); ?>"><?php echo str_pad($i, 2, '0', STR_PAD_LEFT); ?></option>
            <?php } ?>
        </select><br><br>

        <label for="expiry_year">Expiry Year:</label><br>
        <select id="expiry_year" name="expiry_year">
            <?php for ($year = date('Y'); $year <= date('Y') + 5; $year++) { ?>
                <option value="<?php echo $year; ?>"><?php echo $year; ?></option>
            <?php } ?>
        </select><br><br>

        <input type="submit" name="submit" value="Place Order">
    </form>
</body>
</html>


<?php
// Include database connection
include('db_connection.php');

// Query to get all products
$sql = "SELECT * FROM products";
$result = $conn->query($sql);

// Start the session to use shopping cart
session_start();

?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Product Listing</title>
    <!-- Include Bootstrap CSS for styling -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>
    <div class="container mt-4">
        <?php
        if ($result->num_rows > 0) {
            while($row = $result->fetch_assoc()) {
                ?>
                <div class="card mb-4">
                    <div class="card-body">
                        <h5 class="card-title"><?php echo $row['name']; ?></h5>
                        <p class="card-text"><?php echo $row['description']; ?></p>
                        <p class="card-text">Price: $<?php echo number_format($row['price'], 2); ?></p>
                        <?php if ($row['image']) { ?>
                            <img src="<?php echo $row['image']; ?>" alt="<?php echo $row['name']; ?>" class="img-fluid w-50 h-auto">
                        <?php } ?>
                        <form action="add_to_cart.php" method="post">
                            <input type="hidden" name="product_id" value="<?php echo $row['id']; ?>">
                            <button type="submit" class="btn btn-primary">Add to Cart</button>
                        </form>
                    </div>
                </div>
                <?php
            }
        } else {
            echo "No products available.";
        }
        ?>
    </div>

    <!-- Include Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>

<?php
// Close database connection
$conn->close();
?>


<?php
session_start();

if (isset($_POST['product_id'])) {
    $productId = $_POST['product_id'];
    
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }
    
    // Check if product is already in cart
    if (array_key_exists($productId, $_SESSION['cart'])) {
        $_SESSION['cart'][$productId]['quantity']++;
    } else {
        $sql = "SELECT name, price FROM products WHERE id = ?";
        $stmt = $conn->prepare($sql);
        $stmt->bind_param("i", $productId);
        $stmt->execute();
        $result = $stmt->get_result();
        
        if ($result->num_rows > 0) {
            $product = $result->fetch_assoc();
            $_SESSION['cart'][$productId] = array(
                'name' => $product['name'],
                'price' => $product['price'],
                'quantity' => 1
            );
        }
    }
}

// Redirect back to product listing page
header("Location: product_listing.php");
exit();

// Include database connection
include('db_connection.php');
$conn->close();
?>


<?php
session_start();

if (empty($_SESSION['cart'])) {
    header("Location: product_listing.php");
    exit();
}

// Initialize variables for form fields
$firstName = $lastName = $email = $address = $city = $state = $zipCode = "";
$errors = array();

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Validate and sanitize input
    $firstName = htmlspecialchars(trim($_POST['first_name']));
    $lastName = htmlspecialchars(trim($_POST['last_name']));
    $email = htmlspecialchars(trim($_POST['email']));
    $address = htmlspecialchars(trim($_POST['address']));
    $city = htmlspecialchars(trim($_POST['city']));
    $state = htmlspecialchars(trim($_POST['state']));
    $zipCode = htmlspecialchars(trim($_POST['zip_code']));

    // Basic validation
    if (empty($firstName)) {
        $errors[] = "First name is required.";
    }
    if (empty($lastName)) {
        $errors[] = "Last name is required.";
    }
    if (empty($email) || !filter_var($email, FILTER_VALIDATE_EMAIL)) {
        $errors[] = "Valid email is required.";
    }
    if (empty($address)) {
        $errors[] = "Address is required.";
    }
    if (empty($city)) {
        $errors[] = "City is required.";
    }
    if (empty($state)) {
        $errors[] = "State is required.";
    }
    if (empty($zipCode) || !preg_match('/^[0-9]{5}(-[0-9]{4})?$/', $zipCode)) {
        $errors[] = "Valid ZIP code is required.";
    }

    // If no errors, process the payment
    if (empty($errors)) {
        // Here you would typically integrate with a payment gateway like Stripe or PayPal
        // For this example, we'll assume the payment was successful

        // Calculate total amount
        $totalAmount = 0;
        foreach ($_SESSION['cart'] as $item) {
            $totalAmount += $item['price'] * $item['quantity'];
        }

        // Insert customer into database if not exists
        $sqlCheckCustomer = "SELECT id FROM customers WHERE email = ?";
        $stmt = $conn->prepare($sqlCheckCustomer);
        $stmt->bind_param("s", $email);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows == 0) {
            $sqlInsertCustomer = "INSERT INTO customers (first_name, last_name, email, address, city, state, zip_code) VALUES (?, ?, ?, ?, ?, ?, ?)";
            $stmt = $conn->prepare($sqlInsertCustomer);
            $stmt->bind_param("sssssss", $firstName, $lastName, $email, $address, $city, $state, $zipCode);
            if (!$stmt->execute()) {
                die("Error inserting customer: " . $stmt->error);
            }
            $customerId = $conn->insert_id;
        } else {
            $row = $result->fetch_assoc();
            $customerId = $row['id'];
        }

        // Insert order
        $sqlInsertOrder = "INSERT INTO orders (customer_id, total_amount) VALUES (?, ?)";
        $stmt = $conn->prepare($sqlInsertOrder);
        $stmt->bind_param("id", $customerId, $totalAmount);
        if (!$stmt->execute()) {
            die("Error inserting order: " . $stmt->error);
        }
        $orderId = $conn->insert_id;

        // Insert order items
        foreach ($_SESSION['cart'] as $productId => $item) {
            $sqlInsertOrderItem = "INSERT INTO order_items (order_id, product_id, quantity, price) VALUES (?, ?, ?, ?)";
            $stmt = $conn->prepare($sqlInsertOrderItem);
            $stmt->bind_param("iidi", $orderId, $productId, $item['quantity'], $item['price']);
            if (!$stmt->execute()) {
                die("Error inserting order item: " . $stmt->error);
            }
        }

        // Clear cart
        unset($_SESSION['cart']);

        // Redirect to thank you page
        header("Location: thankyou.php?order_id=" . $orderId);
        exit();
    }
}

// Include database connection
include('db_connection.php');
$conn->close();
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Checkout</title>
    <!-- Include Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
</head>
<body class="bg-light">
    <div class="container mt-4">
        <?php if (!empty($errors)) { ?>
            <div class="alert alert-danger">
                <?php foreach ($errors as $error) { ?>
                    <li><?php echo $error; ?></li>
                <?php } ?>
            </div>
        <?php } ?>

        <h2>Checkout</h2>
        <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
            <div class="row g-4">
                <div class="col-md-6">
                    <label for="first_name" class="form-label">First Name</label>
                    <input type="text" class="form-control" id="first_name" name="first_name" value="<?php echo $firstName; ?>">
                </div>
                <div class="col-md-6">
                    <label for="last_name" class="form-label">Last Name</label>
                    <input type="text" class="form-control" id="last_name" name="last_name" value="<?php echo $lastName; ?>">
                </div>
                <div class="col-md-12">
                    <label for="email" class="form-label">Email Address</label>
                    <input type="email" class="form-control" id="email" name="email" value="<?php echo $email; ?>">
                </div>
                <div class="col-md-12">
                    <label for="address" class="form-label">Address</label>
                    <input type="text" class="form-control" id="address" name="address" value="<?php echo $address; ?>">
                </div>
                <div class="col-md-6">
                    <label for="city" class="form-label">City</label>
                    <input type="text" class="form-control" id="city" name="city" value="<?php echo $city; ?>">
                </div>
                <div class="col-md-4">
                    <label for="state" class="form-label">State</label>
                    <select class="form-select" id="state" name="state">
                        <option <?php if ($state == 'California') {echo 'selected';} ?>>California</option>
                        <!-- Add more states as needed -->
                    </select>
                </div>
                <div class="col-md-2">
                    <label for="zip_code" class="form-label">ZIP Code</label>
                    <input type="text" class="form-control" id="zip_code" name="zip_code" value="<?php echo $zipCode; ?>">
                </div>
            </div>

            <button type="submit" class="btn btn-primary mt-3">Place Order</button>
        </form>
    </div>

    <!-- Include Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>


<?php
session_start();

// Get order ID from query string
if (isset($_GET['order_id'])) {
    $orderId = $_GET['order_id'];
} else {
    header("Location: product_listing.php");
    exit();
}

// Include database connection
include('db_connection.php');

// Query to get order details
$sql = "SELECT o.id AS order_id, c.first_name, c.last_name, o.total_amount 
        FROM orders o 
        JOIN customers c ON o.customer_id = c.id 
        WHERE o.id = ?";
$stmt = $conn->prepare($sql);
$stmt->bind_param("i", $orderId);
$stmt->execute();
$result = $stmt->get_result();

if ($result->num_rows == 0) {
    die("Invalid order ID.");
}

$orderDetails = $result->fetch_assoc();

// Get order items
$sqlItems = "SELECT oi.quantity, p.name AS product_name 
            FROM order_items oi 
            JOIN products p ON oi.product_id = p.id 
            WHERE oi.order_id = ?";
$stmt = $conn->prepare($sqlItems);
$stmt->bind_param("i", $orderId);
$stmt->execute();
$resultItems = $stmt->get_result();

?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Thank You</title>
    <!-- Include Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
</head>
<body class="bg-light">
    <div class="container mt-4">
        <h2>Thank you for your order!</h2>
        <p>Your order has been received and will be processed shortly.</p>
        
        <div class="card mt-4">
            <div class="card-body">
                <h5 class="card-title">Order Summary</h5>
                <p><strong>Order ID:</strong> <?php echo $orderDetails['order_id']; ?></p>
                <p><strong>Name:</strong> <?php echo $orderDetails['first_name'] . ' ' . $orderDetails['last_name']; ?></p>
                <p><strong>Total Amount:</strong> $<?php echo number_format($orderDetails['total_amount'], 2); ?></p>

                <h6>Ordered Items:</h6>
                <?php if ($resultItems->num_rows > 0) { ?>
                    <ul class="list-group">
                        <?php while ($item = $resultItems->fetch_assoc()) { ?>
                            <li class="list-group-item"><?php echo $item['product_name']; ?> (Quantity: <?php echo $item['quantity']; ?>)</li>
                        <?php } ?>
                    </ul>
                <?php } else { ?>
                    <p>No items in your order.</p>
                <?php } ?>

                <div class="mt-3">
                    <a href="product_listing.php" class="btn btn-primary">Continue Shopping</a>
                </div>
            </div>
        </div>
    </div>

    <!-- Include Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>

<?php
// Close database connection
$conn->close();
?>



<?php
session_start();
// Sample products data
$products = [
    ['id' => 1, 'name' => 'Laptop', 'price' => 999.99, 'description' => 'High-performance laptop'],
    ['id' => 2, 'name' => 'Phone', 'price' => 699.99, 'description' => 'Smartphone with advanced features'],
    ['id' => 3, 'name' => 'Tablet', 'price' => 499.99, 'description' => 'Portable tablet device']
];
?>

<!DOCTYPE html>
<html>
<head>
    <title>Product Store</title>
</head>
<body>
    <?php include('header.php'); ?>

    <h2>Available Products</h2>
    <div class="products">
        <?php foreach ($products as $product) { ?>
            <div class="product-item">
                <h3><?php echo $product['name']; ?></h3>
                <p><?php echo $product['description']; ?></p>
                <p>Price: $<?php echo number_format($product['price'], 2); ?></p>
                <form action="add_to_cart.php" method="post">
                    <input type="hidden" name="product_id" value="<?php echo $product['id']; ?>">
                    <input type="number" name="quantity" min="1" max="99" value="1">
                    <button type="submit">Add to Cart</button>
                </form>
            </div>
        <?php } ?>
    </div>

    <?php include('footer.php'); ?>
</body>
</html>


<?php
session_start();

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $product_id = $_POST['product_id'];
    $quantity = $_POST['quantity'];

    // Get product details (you would typically fetch this from a database)
    $products = [
        ['id' => 1, 'name' => 'Laptop', 'price' => 999.99],
        ['id' => 2, 'name' => 'Phone', 'price' => 699.99],
        ['id' => 3, 'name' => 'Tablet', 'price' => 499.99]
    ];
    
    foreach ($products as $product) {
        if ($product['id'] == $product_id) {
            $cart_item = [
                'id' => $product['id'],
                'name' => $product['name'],
                'price' => $product['price'],
                'quantity' => $quantity
            ];
            break;
        }
    }

    // Add item to cart (stored in session)
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = [];
    }
    array_push($_SESSION['cart'], $cart_item);

    // Redirect back to products page
    header("Location: index.php");
    exit();
}
?>


<?php
session_start();

// Calculate total price
$total = 0;
foreach ($_SESSION['cart'] as $item) {
    $total += ($item['price'] * $item['quantity']);
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <?php include('header.php'); ?>

    <h2>Your Shopping Cart</h2>
    <div class="cart">
        <?php if (!empty($_SESSION['cart'])) { ?>
            <table>
                <thead>
                    <tr>
                        <th>Item Name</th>
                        <th>Quantity</th>
                        <th>Price</th>
                        <th>Total</th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tbody>
                    <?php foreach ($_SESSION['cart'] as $item) { ?>
                        <tr>
                            <td><?php echo $item['name']; ?></td>
                            <td><input type="number" name="quantity" min="1" max="99" value="<?php echo $item['quantity']; ?>"></td>
                            <td>$<?php echo number_format($item['price'], 2); ?></td>
                            <td>$<?php echo number_format(($item['price'] * $item['quantity']), 2); ?></td>
                            <td><a href="remove_from_cart.php?id=<?php echo $item['id']; ?>">Remove</a></td>
                        </tr>
                    <?php } ?>
                </tbody>
            </table>
            <p>Total: $<?php echo number_format($total, 2); ?></p>
            <form action="checkout.php">
                <button type="submit">Checkout</button>
            </form>
        <?php } else { ?>
            <p>Your cart is empty.</p>
        <?php } ?>
    </div>

    <?php include('footer.php'); ?>
</body>
</html>


<?php
session_start();

// Get user details (you would typically get these from a form)
$user_name = $_POST['name'];
$user_email = $_POST['email'];
$address = $_POST['address'];
$payment_method = $_POST['payment_method'];

// Process payment (simplified example)
if ($payment_method == 'credit_card') {
    // Simulate payment processing
    $payment_success = true;
} else {
    $payment_success = false;
}

// Store order details in the database (example only, you would need to implement this)
$cart_total = 0;
foreach ($_SESSION['cart'] as $item) {
    $cart_total += ($item['price'] * $item['quantity']);
}

if ($payment_success) {
    // Order successful
    unset($_SESSION['cart']);
    header("Location: order_confirmation.php");
} else {
    // Payment failed
    header("Location: checkout.php?error=payment_failed");
}
?>


<?php
session_start();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Order Confirmation</title>
</head>
<body>
    <?php include('header.php'); ?>

    <h2>Thank You for Your Order!</h2>
    <p>Your order has been successfully processed.</p>
    <p>We will ship your items shortly. An order confirmation email has been sent to the provided address.</p>

    <?php include('footer.php'); ?>
</body>
</html>


<?php
session_start();

// Destroy session and clear all data
session_unset();
session_destroy();

// Redirect to home page
header("Location: index.php");
exit();
?>


<?php
// This is a simplified example of a shopping cart functionality

session_start();

// Database connection
require_once 'db.php';

// Function to add item to cart
function addToCart($productId, $quantity = 1) {
    global $pdo;

    // Check if product exists
    $stmt = $pdo->prepare("SELECT * FROM products WHERE id = ?");
    $stmt->execute([$productId]);
    $product = $stmt->fetch();

    if (!$product) {
        return false;
    }

    if (isset($_SESSION['cart'][$productId])) {
        // If item already in cart, increment quantity
        $_SESSION['cart'][$productId]['quantity'] += $quantity;
    } else {
        // Add new item to cart
        $_SESSION['cart'][$productId] = [
            'id' => $product['id'],
            'name' => $product['name'],
            'price' => $product['price'],
            'quantity' => $quantity,
            'description' => $product['description']
        ];
    }

    return true;
}

// Function to update cart item quantity
function updateCartItem($productId, $quantity) {
    if (isset($_SESSION['cart'][$productId])) {
        $_SESSION['cart'][$productId]['quantity'] = $quantity;
        return true;
    }
    return false;
}

// Function to remove item from cart
function removeFromCart($productId) {
    if (isset($_SESSION['cart'][$productId])) {
        unset($_SESSION['cart'][$productId]);
        return true;
    }
    return false;
}

// Function to get cart items
function getCartItems() {
    return isset($_SESSION['cart']) ? $_SESSION['cart'] : [];
}

// Function to calculate total price of cart
function getCartTotal() {
    $total = 0;
    foreach (getCartItems() as $item) {
        $total += $item['price'] * $item['quantity'];
    }
    return $total;
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
</head>
<body>

<?php
// Display products and cart functionality

require_once 'db.php';
require_once 'functions.php';

// Get all products from database
$products = getAllProducts();

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    if (isset($_POST['add_to_cart'])) {
        $productId = $_POST['product_id'];
        $quantity = isset($_POST['quantity']) ? intval($_POST['quantity']) : 1;
        addToCart($productId, $quantity);
    }

    if (isset($_POST['update_cart'])) {
        foreach ($_POST as $key => $value) {
            if (strpos($key, 'quantity_') === 0) {
                $productId = str_replace('quantity_', '', $key);
                updateCartItem($productId, intval($value));
            }
        }
    }

    if (isset($_POST['remove_item'])) {
        $productId = $_POST['product_id'];
        removeFromCart($productId);
    }

    if (isset($_POST['checkout'])) {
        // Process checkout
        foreach (getCartItems() as $item) {
            $stmt = $pdo->prepare("INSERT INTO orders (product_id, user_id, quantity, order_date)
                                  VALUES (?, ?, ?, NOW())");
            $stmt->execute([$item['id'], isset($_SESSION['user_id']) ? $_SESSION['user_id'] : null, $item['quantity']]);
        }
        // Clear cart after checkout
        unset($_SESSION['cart']);
    }
}
?>

<h2 class="text-center">Shopping Cart</h2>

<div class="container">
    <div class="row">
        <?php foreach ($products as $product): ?>
            <div class="col-md-3 mb-4">
                <div class="card">
                    <img src="<?php echo $product['image']; ?>" alt="<?php echo $product['name']; ?>" class="card-img-top">
                    <div class="card-body">
                        <h5 class="card-title"><?php echo $product['name']; ?></h5>
                        <p class="card-text"><?php echo $product['description']; ?></p>
                        <p class="card-text">Price: $<?php echo number_format($product['price'], 2); ?></p>
                        <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
                            <input type="hidden" name="product_id" value="<?php echo $product['id']; ?>">
                            <div class="input-group mb-3">
                                <input type="number" class="form-control" name="quantity" min="1" value="1">
                                <button type="submit" name="add_to_cart" class="btn btn-primary">Add to Cart</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        <?php endforeach; ?>
    </div>

    <h3>Shopping Cart Items</h3>
    <?php if (empty(getCartItems())): ?>
        <p>Your cart is empty.</p>
    <?php else: ?>
        <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>Product</th>
                        <th>Quantity</th>
                        <th>Price</th>
                        <th>Total</th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tbody>
                    <?php foreach (getCartItems() as $item): ?>
                        <tr>
                            <td><?php echo $item['name']; ?></td>
                            <td>
                                <input type="number" class="form-control" name="quantity_<?php echo $item['id']; ?>" min="1" value="<?php echo $item['quantity']; ?>">
                            </td>
                            <td>$<?php echo number_format($item['price'], 2); ?></td>
                            <td>$<?php echo number_format($item['price'] * $item['quantity'], 2); ?></td>
                            <td>
                                <button type="submit" name="remove_item" class="btn btn-danger">
                                    Remove
                                </button>
                                <input type="hidden" name="product_id" value="<?php echo $item['id']; ?>">
                            </td>
                        </tr>
                    <?php endforeach; ?>
                </tbody>
            </table>
            <div class="text-right mb-3">
                <strong>Total: $<?php echo number_format(getCartTotal(), 2); ?></strong>
            </div>
            <button type="submit" name="update_cart" class="btn btn-success">Update Cart</button>
        </form>

        <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
            <button type="submit" name="checkout" class="btn btn-primary">Checkout</button>
        </form>
    <?php endif; ?>
</div>

</body>
</html>


<?php
// Database connection
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'shopping_cart';

$conn = new mysqli($host, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Get products from database
function getProducts() {
    global $conn;
    $sql = "SELECT * FROM products";
    $result = $conn->query($sql);
    
    if ($result->num_rows > 0) {
        return $result;
    } else {
        return false;
    }
}

// Add item to cart
function addToCart($productId, $quantity) {
    global $conn;
    $product = getProductById($productId);
    
    if ($product && isset($_SESSION['cart'])) {
        $_SESSION['cart'][$productId] += $quantity;
    } else {
        $_SESSION['cart'] = array();
        $_SESSION['cart'][$productId] = $quantity;
    }
}

// Get product by ID
function getProductById($id) {
    global $conn;
    $sql = "SELECT * FROM products WHERE id = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("i", $id);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows > 0) {
        return $result->fetch_assoc();
    } else {
        return false;
    }
}

// Remove item from cart
function removeFromCart($productId) {
    global $conn;
    if (isset($_SESSION['cart'][$productId])) {
        unset($_SESSION['cart'][$productId]);
    }
}

// Update cart item quantity
function updateCartItem($productId, $quantity) {
    if ($quantity > 0) {
        $_SESSION['cart'][$productId] = $quantity;
    } else {
        removeFromCart($productId);
    }
}

// Calculate total price
function calculateTotal() {
    global $conn;
    $total = 0;
    
    foreach ($_SESSION['cart'] as $productId => $quantity) {
        $product = getProductById($productId);
        $total += ($product['price'] * $quantity);
    }
    
    return $total;
}

// Process payment
function processPayment($cardNumber, $cardHolder, $expiryDate, $cvv) {
    // Simulate payment processing
    sleep(2); // Wait for 2 seconds
    
    if (strlen($cardNumber) == 16 && strlen($cvv) == 3) {
        return true;
    } else {
        return false;
    }
}

// Save order to database
function saveOrder($products, $totalAmount) {
    global $conn;
    date_default_timezone_set('UTC');
    
    $orderDate = date("Y-m-d H:i:s");
    
    // Insert into orders table
    $sql = "INSERT INTO orders (order_date, total_amount) VALUES (?, ?)";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("ss", $orderDate, $totalAmount);
    $stmt->execute();
    
    $orderId = $stmt->insert_id;
    
    // Insert into order_items table
    foreach ($products as $productId => $quantity) {
        $product = getProductById($productId);
        
        $sql = "INSERT INTO order_items (order_id, product_id, quantity) VALUES (?, ?, ?)";
        $stmt = $conn->prepare($sql);
        $stmt->bind_param("iii", $orderId, $productId, $quantity);
        $stmt->execute();
    }
    
    return $orderId;
}
?>


<?php
session_start();
require_once 'database.php';

if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

$products = getProducts();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Product List</title>
</head>
<body>
    <?php while ($row = $products->fetch_assoc()) { ?>
        <div class="product">
            <h2><?php echo $row['name']; ?></h2>
            <p><?php echo $row['description']; ?></p>
            <p>Price: <?php echo $row['price']; ?></p>
            <form action="" method="post">
                <input type="hidden" name="product_id" value="<?php echo $row['id']; ?>">
                <input type="number" name="quantity" min="1" max="5" value="1">
                <button type="submit">Add to Cart</button>
            </form>
        </div>
    <?php } ?>

    <a href="cart.php">View Cart</a>
</body>
</html>

<?php
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $productId = $_POST['product_id'];
    $quantity = $_POST['quantity'];
    
    addToCart($productId, $quantity);
    
    header("Location: index.php");
}
?>


<?php
session_start();
require_once 'database.php';

if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <?php if (empty($_SESSION['cart'])) { ?>
        <p>Your cart is empty.</p>
    <?php } else { ?>
        <table>
            <tr>
                <th>Product Name</th>
                <th>Quantity</th>
                <th>Price</th>
                <th>Total</th>
                <th>Action</th>
            </tr>
            
            <?php foreach ($_SESSION['cart'] as $productId => $quantity) { 
                $product = getProductById($productId); ?>
                
                <tr>
                    <td><?php echo $product['name']; ?></td>
                    <td><input type="number" name="quantity" min="1" value="<?php echo $quantity; ?>"></td>
                    <td><?php echo $product['price']; ?></td>
                    <td><?php echo ($product['price'] * $quantity); ?></td>
                    <td>
                        <form action="" method="post">
                            <input type="hidden" name="update_id" value="<?php echo $productId; ?>">
                            <button type="submit">Update</button>
                        </form>
                        <form action="" method="post">
                            <input type="hidden" name="remove_id" value="<?php echo $productId; ?>">
                            <button type="submit">Remove</button>
                        </form>
                    </td>
                </tr>
            <?php } ?>
            
            <tr>
                <td colspan="4"><strong>Total:</strong></td>
                <td><?php echo calculateTotal(); ?></td>
            </tr>
        </table>

        <a href="checkout.php">Proceed to Checkout</a>
    <?php } ?>

    <a href="index.php">Continue Shopping</a>
</body>
</html>

<?php
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    if (isset($_POST['update_id'])) {
        $productId = $_POST['update_id'];
        $quantity = $_POST['quantity'];
        updateCartItem($productId, $quantity);
    }
    
    if (isset($_POST['remove_id'])) {
        $productId = $_POST['remove_id'];
        removeFromCart($productId);
    }
    
    header("Location: cart.php");
}
?>


<?php
session_start();
require_once 'database.php';

if (!isset($_SESSION['cart']) || empty($_SESSION['cart'])) {
    header("Location: index.php");
}

$totalAmount = calculateTotal();

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $cardNumber = $_POST['card_number'];
    $cardHolder = $_POST['card_holder'];
    $expiryDate = $_POST['expiry_date'];
    $cvv = $_POST['cvv'];
    
    if (processPayment($cardNumber, $cardHolder, $expiryDate, $cvv)) {
        $orderId = saveOrder($_SESSION['cart'], $totalAmount);
        
        // Clear cart
        unset($_SESSION['cart']);
        
        header("Location: order_confirmation.php?order_id=$orderId");
    } else {
        echo "Payment failed. Please try again.";
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
</head>
<body>
    <h2>Payment Information</h2>
    
    <form action="" method="post">
        <label>Card Number:</label>
        <input type="text" name="card_number" required><br><br>
        
        <label>Card Holder Name:</label>
        <input type="text" name="card_holder" required><br><br>
        
        <label>Expiry Date (MM/YY):</label>
        <input type="text" name="expiry_date" placeholder="MM/YY" required><br><br>
        
        <label>CVV:</label>
        <input type="text" name="cvv" maxlength="3" required><br><br>
        
        <button type="submit">Place Order</button>
    </form>

    <a href="cart.php">Back to Cart</a>
</body>
</html>


<?php
// Include configuration file
include('config.php');

// Products page
if ($_SERVER['PHP_SELF'] == '/products.php') {
    // Retrieve all products from database
    $sql = "SELECT * FROM products";
    $result = mysqli_query($conn, $sql);
    
    echo "<h2>Our Products</h2>";
    while ($row = mysqli_fetch_assoc($result)) {
        echo "<div class='product'>";
        echo "<h3>{$row['name']}</h3>";
        echo "<p>Price: \${$row['price']}</p>";
        echo "<form action='cart.php' method='post'>";
        echo "<input type='hidden' name='id' value='{$row['id']}'>";
        echo "<input type='hidden' name='name' value='{$row['name']}'>";
        echo "<input type='hidden' name='price' value='{$row['price']}'>";
        echo "<button type='submit'>Add to Cart</button>";
        echo "</form>";
        echo "</div>";
    }
}

// Cart page
elseif ($_SERVER['PHP_SELF'] == '/cart.php') {
    session_start();
    
    // Add item to cart
    if ($_SERVER['REQUEST_METHOD'] == 'POST') {
        $item = array(
            'id' => $_POST['id'],
            'name' => $_POST['name'],
            'price' => $_POST['price'],
            'quantity' => 1
        );
        
        if (isset($_SESSION['cart'])) {
            $found = false;
            foreach ($_SESSION['cart'] as &$item) {
                if ($item['id'] == $_POST['id']) {
                    $item['quantity']++;
                    $found = true;
                }
            }
            if (!$found) {
                array_push($_SESSION['cart'], $item);
            }
        } else {
            $_SESSION['cart'] = array($item);
        }
    }
    
    // Update cart
    elseif (isset($_GET['action']) && $_GET['action'] == 'update') {
        foreach ($_SESSION['cart'] as &$item) {
            if ($item['id'] == $_POST['id']) {
                $item['quantity'] = $_POST['quantity'];
            }
        }
    }
    
    // Remove item from cart
    elseif (isset($_GET['action']) && $_GET['action'] == 'remove') {
        foreach ($_SESSION['cart'] as &$item) {
            if ($item['id'] == $_GET['id']) {
                unset($_SESSION['cart'][$key]);
            }
        }
    }
    
    // Display cart
    echo "<h2>Your Cart</h2>";
    if (isset($_SESSION['cart'])) {
        $total = 0;
        foreach ($_SESSION['cart'] as $item) {
            echo "<div class='cart-item'>";
            echo "<p>{$item['name']}</p>";
            echo "<p>Quantity: {$item['quantity']}</p>";
            echo "<p>Price: \${$item['price']} each</p>";
            echo "<form action='cart.php?action=update' method='post'>";
            echo "<input type='hidden' name='id' value='{$item['id']}'>";
            echo "<input type='number' name='quantity' min='1' max='10' value='{$item['quantity']}'>";
            echo "<button type='submit'>Update</button>";
            echo "</form>";
            echo "<a href='cart.php?action=remove&id={$item['id']}'>Remove</a>";
            echo "</div>";
            $total += $item['price'] * $item['quantity'];
        }
        echo "<h3>Total: \${$total}</h3>";
        echo "<a href='checkout.php'>Proceed to Checkout</a>";
    } else {
        echo "Your cart is empty.";
    }
}

// Checkout page
elseif ($_SERVER['PHP_SELF'] == '/checkout.php') {
    session_start();
    
    if (isset($_SESSION['cart'])) {
        // Display checkout form
        echo "<h2>Checkout</h2>";
        echo "<form action='purchase.php' method='post'>";
        echo "<label for='name'>Name:</label>";
        echo "<input type='text' id='name' name='name' required><br>";
        echo "<label for='email'>Email:</label>";
        echo "<input type='email' id='email' name='email' required><br>";
        echo "<label for='address'>Address:</label>";
        echo "<input type='text' id='address' name='address' required><br>";
        
        // Hide cart details
        foreach ($_SESSION['cart'] as $item) {
            echo "<input type='hidden' name='items[]' value='{$item['id']}'>";
            echo "<input type='hidden' name='quantities[]' value='{$item['quantity']}'>";
        }
        
        echo "<button type='submit'>Place Order</button>";
        echo "</form>";
    } else {
        echo "Your cart is empty.";
    }
}

// Purchase confirmation
elseif ($_SERVER['PHP_SELF'] == '/purchase.php') {
    session_start();
    
    if (isset($_POST)) {
        // Calculate total price
        $total = 0;
        foreach ($_SESSION['cart'] as $item) {
            $total += $item['price'] * $item['quantity'];
        }
        
        // Insert order into database
        $sql = "INSERT INTO orders (name, email, address, total_price) VALUES (?, ?, ?, ?)";
        $stmt = mysqli_prepare($conn, $sql);
        mysqli_stmt_bind_param($stmt, "sssd", $_POST['name'], $_POST['email'], $_POST['address'], $total);
        mysqli_stmt_execute($stmt);
        
        // Get order ID
        $order_id = mysqli_insert_id($conn);
        
        // Insert order items into database
        foreach ($_SESSION['cart'] as $item) {
            $sql = "INSERT INTO order_items (order_id, product_id, quantity) VALUES (?, ?, ?)";
            $stmt = mysqli_prepare($conn, $sql);
            mysqli_stmt_bind_param($stmt, "iii", $order_id, $item['id'], $item['quantity']);
            mysqli_stmt_execute($stmt);
        }
        
        // Clear cart
        unset($_SESSION['cart']);
        
        // Display confirmation message
        echo "<h2>Thank you for your purchase!</h2>";
        echo "<p>Your order number is #{$order_id}</p>";
    }
}
?>


<?php
// Connect to the database
include('db_connection.php');

session_start();

?>
<!DOCTYPE html>
<html>
<head>
    <title>Product List</title>
</head>
<body>
    <h2>Products</h2>
    
    <?php
    $sql = "SELECT * FROM products";
    $result = $conn->query($sql);
    
    if ($result->num_rows > 0) {
        while($row = $result->fetch_assoc()) {
            echo "<div style='border:1px solid #ddd; padding:10px; margin:5px;'>";
            echo "<h3>".$row["name"]."</h3>";
            echo "<img src='".$row["image"]."' width='200' height='200'><br>";
            echo "<p>".$row["description"]."</p>";
            echo "<p>Price: $".$row["price"]."</p>";
            echo "<a href='add_to_cart.php?id=".$row["id"]."'>Add to Cart</a>";
            echo "</div>";
        }
    } else {
        echo "No products found.";
    }
    ?>

    <br>
    <a href="cart.php">View Cart</a> |
    <?php if(isset($_SESSION['user_id'])) { ?>
        <a href="checkout.php">Checkout</a>
    <?php } else { ?>
        <a href="login.php">Login to Checkout</a>
    <?php } ?>

</body>
</html>


<?php
session_start();
include('db_connection.php');

if(isset($_GET['id'])) {
    $product_id = $_GET['id'];
    
    // Check if product exists in database
    $sql = "SELECT * FROM products WHERE id=".$product_id;
    $result = $conn->query($sql);
    
    if ($result->num_rows > 0) {
        $row = $result->fetch_assoc();
        
        // Add to cart session
        $cart_item = array(
            'id' => $row['id'],
            'name' => $row['name'],
            'price' => $row['price'],
            'quantity' => 1
        );
        
        if(!isset($_SESSION['cart'])) {
            $_SESSION['cart'] = array();
        }
        
        // Check if item already in cart
        $found = false;
        foreach ($_SESSION['cart'] as &$item) {
            if($item['id'] == $cart_item['id']) {
                $found = true;
                $item['quantity'] += 1;
                break;
            }
        }
        
        if(!$found) {
            $_SESSION['cart'][] = $cart_item;
        }
        
        echo "<script>alert('Product added to cart');</script>";
    } else {
        echo "<script>alert('Product not found');</script>";
    }
}

header("Location: products.php");
exit();
?>


<?php
session_start();

?>
<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <?php if(!empty($_SESSION['cart'])) { ?>
        <h2>Your Shopping Cart</h2>
        
        <table border='1'>
            <tr>
                <th>Product Name</th>
                <th>Price</th>
                <th>Quantity</th>
                <th>Total</th>
                <th>Action</th>
            </tr>
            
            <?php
            $total = 0;
            foreach($_SESSION['cart'] as $item) {
                $product_total = $item['price'] * $item['quantity'];
                $total += $product_total;
                
                echo "<tr>";
                echo "<td>".$item['name']."</td>";
                echo "<td>$".$item['price']."</td>";
                echo "<td><input type='number' min='1' value='".$item['quantity']."' onchange='updateQuantity(".$item['id'].", this.value)'></td>";
                echo "<td>$".number_format($product_total, 2)."</td>";
                echo "<td><a href='remove_from_cart.php?id=".$item['id']."'>Remove</a></td>";
                echo "</tr>";
            }
            ?>
        </table>
        
        <h3>Total: $<?php echo number_format($total, 2); ?></h3>
        
        <?php if(isset($_SESSION['user_id'])) { ?>
            <a href="checkout.php">Checkout</a>
        <?php } else { ?>
            <a href="login.php">Login to Checkout</a>
        <?php } ?>
    <?php } else { ?>
        <h2>Your cart is empty.</h2>
        <a href="products.php">Go shopping</a>
    <?php } ?>

    <br>
    <a href="products.php">Continue Shopping</a>

    <script>
        function updateQuantity(product_id, quantity) {
            // Implement quantity update logic here
            window.location.href = 'update_quantity.php?id=' + product_id + '&quantity=' + quantity;
        }
    </script>
</body>
</html>


<?php
session_start();

if(isset($_GET['id'])) {
    $product_id = $_GET['id'];
    
    foreach ($_SESSION['cart'] as $key => &$item) {
        if($item['id'] == $product_id) {
            unset($_SESSION['cart'][$key]);
            break;
        }
    }
}

header("Location: cart.php");
exit();
?>


<?php
session_start();

include('db_connection.php');

if(!isset($_SESSION['user_id'])) {
    header("Location: login.php");
    exit();
}

// Get user details
$sql = "SELECT * FROM users WHERE id=".$_SESSION['user_id'];
$result = $conn->query($sql);
$user = $result->fetch_assoc();

?>
<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
</head>
<body>
    <?php if(!empty($_SESSION['cart'])) { ?>
        <h2>Checkout</h2>
        
        <form action="process_order.php" method="post">
            <div style='border:1px solid #ddd; padding:10px; margin:5px;'>
                <h3>Shipping Information:</h3>
                <p><strong>Name:</strong> <?php echo $user['name']; ?></p>
                <p><strong>Email:</strong> <?php echo $user['email']; ?></p>
                <p><strong>Address:</strong> 
                    <input type="text" name="address" required placeholder="Enter your address">
                </p>
                <p><strong>Phone Number:</strong> 
                    <input type="tel" name="phone" required placeholder="Enter your phone number">
                </p>
                
                <h3>Payment Method:</h3>
                <!-- Add payment method options here -->
                <p>
                    <select name="payment_method">
                        <option value="credit_card">Credit Card</option>
                        <option value="debit_card">Debit Card</option>
                        <option value="paypal">PayPal</option>
                    </select>
                </p>
                
                <input type="submit" value="Place Order">
            </div>
        </form>
    <?php } else { ?>
        <h2>Your cart is empty.</h2>
        <a href="products.php">Go shopping</a>
    <?php } ?>

    <br>
    <a href="cart.php">Back to Cart</a>
</body>
</html>


<?php
session_start();

include('db_connection.php');

if(!empty($_SESSION['cart']) && isset($_POST)) {
    // Get user details
    $sql = "SELECT * FROM users WHERE id=".$_SESSION['user_id'];
    $result = $conn->query($sql);
    $user = $result->fetch_assoc();
    
    // Insert into orders table
    $order_sql = "INSERT INTO orders (user_id, total_amount, address, phone_number) 
                 VALUES ('".$user['id']."', '".$_POST['total_amount']."','".$_POST['address']."','".$_POST['phone']."')";
    $conn->query($order_sql);
    
    // Get last inserted order ID
    $order_id = $conn->insert_id;
    
    // Insert into order_details table
    foreach($_SESSION['cart'] as $item) {
        $detail_sql = "INSERT INTO order_details (order_id, product_id, quantity, price) 
                      VALUES ('".$order_id."','".$item['id']."','".$item['quantity']."','".$item['price']."')";
        $conn->query($detail_sql);
    }
    
    // Insert into payments table
    $payment_sql = "INSERT INTO payments (order_id, payment_method, amount)
                   VALUES ('".$order_id."','".$_POST['payment_method']."','".$_POST['total_amount']."')";
    $conn->query($payment_sql);
    
    // Clear cart
    unset($_SESSION['cart']);
    
    header("Location: thank_you.php");
    exit();
} else {
    header("Location: cart.php");
    exit();
}
?>


<?php
session_start();

?>
<!DOCTYPE html>
<html>
<head>
    <title>Thank You</title>
</head>
<body>
    <h2>Thank you for your purchase!</h2>
    
    <?php if(isset($_SESSION['cart'])) { ?>
        <p>Your order has been received.</p>
        <a href="products.php">Continue Shopping</a>
    <?php } else { ?>
        <p>There was an error processing your order. Please try again.</p>
        <a href="cart.php">Back to Cart</a>
    <?php } ?>

</body>
</html>


<?php
$servername = "localhost";
$username = "root";
$password = "";
$dbname = "ecommerce";

// Create connection
$conn = new mysqli($servername, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}
?>


<?php
// Simple purchase functionality example

// Product information
$products = array(
    1 => array(
        'id' => 1,
        'name' => 'Product A',
        'price' => 29.99,
        'quantity' => 0
    ),
    2 => array(
        'id' => 2,
        'name' => 'Product B',
        'price' => 49.99,
        'quantity' => 0
    )
);

// Initialize variables for error handling and purchase confirmation
$errors = array();
$purchaseConfirmed = false;
$totalAmount = 0;

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Validate and process form data
    if (empty($_POST['name'])) {
        $errors[] = "Please enter your name";
    }
    
    if (empty($_POST['email'])) {
        $errors[] = "Please enter your email address";
    }
    
    if (empty($_POST['product_id'])) {
        $errors[] = "Please select a product";
    }
    
    if (empty($_POST['quantity'])) {
        $errors[] = "Please enter quantity";
    } else {
        // Validate quantity
        if (!ctype_digit($_POST['quantity'])) {
            $errors[] = "Quantity must be a number";
        }
    }

    // If no errors, process the purchase
    if (empty($errors)) {
        $productId = intval($_POST['product_id']);
        $quantity = intval($_POST['quantity']);
        
        // Get product details
        $selectedProduct = $products[$productId];
        
        // Calculate total amount
        $totalAmount = $selectedProduct['price'] * $quantity;
        
        // Here you would typically connect to a database or payment gateway
        // For this example, we'll just simulate the purchase confirmation
        
        // Simulate order processing delay
        sleep(1);
        
        // Set purchase confirmed flag
        $purchaseConfirmed = true;
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Purchase System</title>
    <style>
        .error { color: red; margin-bottom: 10px; }
        .success { color: green; margin-bottom: 10px; }
    </style>
</head>
<body>
    <?php if (!empty($errors)) { ?>
        <div class="error">
            <?php foreach ($errors as $error) { ?>
                <?php echo htmlspecialchars($error); ?><br>
            <?php } ?>
        </div>
    <?php } ?>

    <?php if ($purchaseConfirmed) { ?>
        <div class="success">
            Purchase completed successfully!<br>
            Total amount: <?php echo "$" . number_format($totalAmount, 2); ?>
        </div>
    <?php } else { ?>
        <!-- Purchase form -->
        <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
            <table>
                <tr>
                    <td>Name:</td>
                    <td><input type="text" name="name"></td>
                </tr>
                <tr>
                    <td>Email:</td>
                    <td><input type="email" name="email"></td>
                </tr>
                <tr>
                    <td>Product:</td>
                    <td>
                        <select name="product_id">
                            <?php foreach ($products as $product) { ?>
                                <option value="<?php echo $product['id']; ?>"><?php echo $product['name'] . ' - $' . number_format($product['price'], 2); ?></option>
                            <?php } ?>
                        </select>
                    </td>
                </tr>
                <tr>
                    <td>Quantity:</td>
                    <td><input type="number" name="quantity" min="1"></td>
                </tr>
                <tr>
                    <td colspan="2"><button type="submit">Purchase</button></td>
                </tr>
            </table>
        </form>
    <?php } ?>

    <!-- Optional: Display product catalog -->
    <h3>Available Products:</h3>
    <ul>
        <?php foreach ($products as $product) { ?>
            <li><?php echo $product['name'] . ' - $' . number_format($product['price'], 2); ?></li>
        <?php } ?>
    </ul>
</body>
</html>


<?php
// Include required files
include('purchase_functions.php');

// Initialize session
session_start();

// Get all products
$products = get_products();

// Handle add to cart action
if (isset($_POST['add_to_cart'])) {
    $product_id = $_POST['product_id'];
    $quantity = $_POST['quantity'];
    add_to_cart($product_id, $quantity);
}

// Handle checkout process
if (isset($_POST['checkout'])) {
    $user_info = [
        'name' => $_POST['name'],
        'email' => $_POST['email'],
        'address' => $_POST['address'],
        'payment_method' => $_POST['payment_method']
    ];
    process_order($user_info);
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Online Store</title>
    <style>
        .product {
            border: 1px solid #ddd;
            padding: 10px;
            margin: 10px;
        }
        .cart-item {
            border: 1px solid #ddd;
            padding: 10px;
            margin: 5px;
        }
    </style>
</head>
<body>
    <h1>Our Products</h1>
    
    <!-- Display products -->
    <?php foreach ($products as $product): ?>
        <div class="product">
            <h3><?php echo $product['name']; ?></h3>
            <p>Price: $<?php echo number_format($product['price'], 2); ?></p>
            <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
                <input type="hidden" name="product_id" value="<?php echo $product['id']; ?>">
                <input type="number" name="quantity" min="1" value="1">
                <button type="submit" name="add_to_cart">Add to Cart</button>
            </form>
        </div>
    <?php endforeach; ?>

    <!-- Show cart contents -->
    <?php if (!empty($_SESSION['cart'])): ?>
        <h2>Your Cart</h2>
        <?php display_cart(); ?>
    <?php else: ?>
        <p>Your cart is empty.</p>
    <?php endif; ?>

    <!-- Checkout form -->
    <?php if (!empty($_SESSION['cart'])): ?>
        <h2>Checkout</h2>
        <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
            <div class="checkout-form">
                <input type="text" name="name" placeholder="Name" required><br>
                <input type="email" name="email" placeholder="Email" required><br>
                <textarea name="address" placeholder="Shipping Address" rows="3"></textarea><br>
                <select name="payment_method">
                    <option value="credit_card">Credit Card</option>
                    <option value="paypal">PayPal</option>
                </select><br>
                <button type="submit" name="checkout">Complete Purchase</button>
            </div>
        </form>
    <?php endif; ?>
</body>
</html>

<?php
// purchase_functions.php

function get_products() {
    // Simulated product data
    return [
        ['id' => 1, 'name' => 'Laptop', 'price' => 999.99],
        ['id' => 2, 'name' => 'Smartphone', 'price' => 699.99],
        ['id' => 3, 'name' => 'Tablet', 'price' => 199.99]
    ];
}

function add_to_cart($product_id, $quantity) {
    global $products;
    
    foreach ($products as $product) {
        if ($product['id'] == $product_id) {
            $_SESSION['cart'][$product_id] = [
                'name' => $product['name'],
                'price' => $product['price'],
                'quantity' => $quantity
            ];
            break;
        }
    }
}

function display_cart() {
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        echo "<div class='cart-item'>";
        echo "<p>{$item['name']}</p>";
        echo "<p>Quantity: {$item['quantity']}</p>";
        echo "<p>Price: $" . number_format($item['price'], 2) . "</p>";
        $total += $item['price'] * $item['quantity'];
        echo "</div>";
    }
    echo "<h3>Total: $" . number_format($total, 2) . "</h3>";
}

function process_order($user_info) {
    // In a real application, you would connect to a database
    // and save the order details along with user information
    
    // For this example, we'll just display the confirmation message
    echo "<h2>Thank you for your purchase!</h2>";
    echo "<p>Your order has been received.</p>";
    
    // Clear the cart after purchase
    $_SESSION['cart'] = [];
}
?>


<?php
// Database connection
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "myDB";

// Create connection
$conn = new mysqli($servername, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Get product details from database
$sql = "SELECT * FROM products";
$result = $conn->query($sql);

// Initialize cart session
session_start();
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Store</title>
    <style>
        .product {
            border: 1px solid #ddd;
            padding: 10px;
            margin: 5px;
            text-align: center;
        }
        .cart-item {
            border: 1px solid #ddd;
            padding: 10px;
            margin: 5px;
        }
    </style>
</head>
<body>
    <h2>Product Catalog</h2>
    
    <?php
    if ($result->num_rows > 0) {
        while($row = $result->fetch_assoc()) {
            echo "<div class='product'>";
            echo "<img src='".$row['image']."' alt='".$row['name']."' width='100'><br>";
            echo "<strong>".$row['name']."</strong><br>";
            echo $row['description']."<br>";
            echo "Price: \$".$row['price']."<br>";
            echo "<a href='cart.php?action=add&id=".$row['id']."'>Add to Cart</a>";
            echo "</div>";
        }
    } else {
        echo "No products found";
    }
    ?>

    <h2>Your Cart</h2>
    
    <?php
    if (isset($_GET['action'])) {
        switch ($_GET['action']) {
            case 'add':
                $id = $_GET['id'];
                $sql = "SELECT * FROM products WHERE id=".$id;
                $result = $conn->query($sql);
                if ($row = $result->fetch_assoc()) {
                    $itemArray = array('product_id' => $row['id'], 'name' => $row['name'], 'price' => $row['price'], 'quantity' => 1);
                    
                    if (!isset($_SESSION['cart'][$row['id']])) {
                        $_SESSION['cart'][$row['id']] = $itemArray;
                    } else {
                        $_SESSION['cart'][$row['id']]['quantity']++;
                    }
                }
                break;

            case 'update':
                foreach ($_POST['quantity'] as $key => $value) {
                    if ($value == 0) {
                        unset($_SESSION['cart'][$key]);
                    } else {
                        $_SESSION['cart'][$key]['quantity'] = $value;
                    }
                }
                break;

            case 'remove':
                $id = $_GET['id'];
                unset($_SESSION['cart'][$id]);
                break;
        }
    }

    if (empty($_SESSION['cart'])) {
        echo "Your cart is empty";
    } else {
        echo "<form action='cart.php?action=update' method='post'>";
        echo "<table border='1'>";
        echo "<tr><th>Product</th><th>Quantity</th><th>Price</th><th>Action</th></tr>";
        
        foreach ($_SESSION['cart'] as $key => $value) {
            echo "<tr>";
            echo "<td>".$value['name']."</td>";
            echo "<td><input type='number' name='quantity[".$key."]'' value='".$value['quantity']."' min='1'></td>";
            echo "<td>\$".$value['price']."</td>";
            echo "<td><a href='cart.php?action=remove&id=".$key."'>Remove</a></td>";
            echo "</tr>";
        }
        
        echo "</table>";
        echo "<input type='submit' value='Update Cart'>";
        echo "</form>";
    }
    
    if (!empty($_SESSION['cart'])) {
        echo "<h2>Checkout</h2>";
        echo "<form action='purchase.php' method='post'>";
        echo "Name: <input type='text' name='name'><br>";
        echo "Email: <input type='email' name='email'><br>";
        echo "<input type='submit' value='Purchase'>";
        echo "</form>";
    }
    ?>

    <?php
    // Purchase functionality
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        $name = $_POST['name'];
        $email = $_POST['email'];
        
        // Insert order into database
        $orderSql = "INSERT INTO orders (name, email, date) VALUES ('$name', '$email', NOW())";
        if ($conn->query($orderSql)) {
            $orderId = $conn->insert_id;
            
            foreach ($_SESSION['cart'] as $item) {
                $orderItemSql = "INSERT INTO order_items (order_id, product_id, name, price, quantity) 
                               VALUES ('$orderId', '".$item['product_id']."','".$item['name']."','".$item['price']."','".$item['quantity']."')";
                $conn->query($orderItemSql);
            }
            
            // Clear cart
            unset($_SESSION['cart']);
            echo "Thank you for your purchase!";
        } else {
            echo "Error: " . $sql . "<br>" . $conn->error;
        }
    }
    ?>

</body>
</html>

<?php
// Close database connection
$conn->close();
?>


<?php
// config.php - Database connection configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'purchase';

$conn = new mysqli($host, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Product List</title>
    <style>
        /* Add your CSS styles here */
        body { font-family: Arial, sans-serif; }
        .product-list { margin: 20px; }
        .product-item { border: 1px solid #ddd; padding: 15px; margin-bottom: 15px; }
    </style>
</head>
<body>
    <h1>Available Products</h1>
    <?php
    include 'config.php';
    
    $sql = "SELECT * FROM products";
    $result = $conn->query($sql);
    
    if ($result->num_rows > 0) {
        while ($row = $result->fetch_assoc()) {
            echo "<div class='product-item'>";
                echo "<h2>" . $row['name'] . "</h2>";
                echo "<p>Price: $" . number_format($row['price'], 2) . "</p>";
                echo "<p>Description: " . $row['description'] . "</p>";
                echo "<form action='order.php' method='post'>";
                    echo "<input type='hidden' name='product_id' value='" . $row['id'] . "'>";
                    echo "<input type='submit' value='Purchase Now'>";
                echo "</form>";
            echo "</div>";
        }
    } else {
        echo "No products available.";
    }
    
    $conn->close();
    ?>
</body>
</html>


<!DOCTYPE html>
<html>
<head>
    <title>Order Confirmation</title>
</head>
<body>
    <?php
    session_start();
    
    if (!isset($_POST['product_id'])) {
        header("Location: index.php");
        exit();
    }
    
    $product_id = $_POST['product_id'];
    
    // Retrieve product details from database
    include 'config.php';
    $sql = "SELECT * FROM products WHERE id = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("i", $product_id);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($row = $result->fetch_assoc()) {
        $_SESSION['order'] = array(
            'product_id' => $row['id'],
            'name' => $row['name'],
            'price' => $row['price']
        );
        
        echo "<h2>Confirm Your Order</h2>";
        echo "<p>Product: " . $row['name'] . "</p>";
        echo "<p>Price: $" . number_format($row['price'], 2) . "</p>";
        echo "<form action='process_payment.php' method='post'>";
            echo "<input type='text' name='customer_name' placeholder='Your Name' required><br>";
            echo "<input type='email' name='email' placeholder='Email Address' required><br>";
            echo "<input type='tel' name='phone' placeholder='Phone Number' required><br>";
            echo "<input type='hidden' name='amount' value='" . $row['price'] . "'>";
            echo "<input type='submit' value='Confirm Order'>";
        echo "</form>";
    } else {
        echo "Product not found.";
    }
    
    $conn->close();
    ?>
</body>
</html>


<?php
session_start();

if (!isset($_SESSION['order'])) {
    header("Location: index.php");
    exit();
}

include 'config.php';

// Get order details from session
$order = $_SESSION['order'];
unset($_SESSION['order']);

// Insert order into database
$sql = "INSERT INTO orders (product_id, customer_name, email, phone, amount) 
        VALUES (?, ?, ?, ?, ?)";
$stmt = $conn->prepare($sql);
$stmt->bind_param("isssd", 
    $order['product_id'],
    $_POST['customer_name'],
    $_POST['email'],
    $_POST['phone'],
    $_POST['amount']
);

if ($stmt->execute()) {
    $order_id = $stmt->insert_id;
    header("Location: thank_you.php?order_id=" . $order_id);
} else {
    die("Error processing your order: " . $conn->error);
}

$conn->close();
?>


<!DOCTYPE html>
<html>
<head>
    <title>Thank You</title>
</head>
<body>
    <?php
    if (!isset($_GET['order_id'])) {
        header("Location: index.php");
        exit();
    }
    
    $order_id = $_GET['order_id'];
    
    echo "<h2>Thank you for your purchase!</h2>";
    echo "<p>Your order ID is: " . $order_id . "</p>";
    echo "<p>We will contact you shortly to confirm your order.</p>";
    ?>
</body>
</html>


<?php
// Include database connection and product class
require_once 'Product.php';

$product = new Product();
$products = $product->getProducts();

?>

<!DOCTYPE html>
<html>
<head>
    <title>Product List</title>
</head>
<body>
    <h1>Available Products</h1>
    <?php foreach ($products as $prod): ?>
        <div class="product">
            <img src="<?php echo $prod['image']; ?>" alt="<?php echo $prod['name']; ?>">
            <h2><?php echo $prod['name']; ?></h2>
            <p><?php echo $prod['description']; ?></p>
            <p>Price: <?php echo $prod['price']; ?> USD</p>
            <form action="add_to_cart.php" method="post">
                <input type="hidden" name="product_id" value="<?php echo $prod['id']; ?>">
                <button type="submit">Add to Cart</button>
            </form>
        </div>
    <?php endforeach; ?>
</body>
</html>


<?php
session_start();
require_once 'Product.php';

if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <h1>Your Shopping Cart</h1>
    <?php if (empty($_SESSION['cart'])): ?>
        <p>Your cart is empty.</p>
    <?php else: ?>
        <table>
            <tr>
                <th>Product Name</th>
                <th>Quantity</th>
                <th>Price</th>
                <th>Total</th>
                <th>Action</th>
            </tr>
            <?php foreach ($_SESSION['cart'] as $item): 
                $product = $product->getProductById($item['id']);
            ?>
                <tr>
                    <td><?php echo $product['name']; ?></td>
                    <td><?php echo $item['quantity']; ?></td>
                    <td><?php echo $product['price']; ?> USD</td>
                    <td><?php echo $item['total_price']; ?> USD</td>
                    <td>
                        <form action="remove_from_cart.php" method="post">
                            <input type="hidden" name="product_id" value="<?php echo $item['id']; ?>">
                            <button type="submit">Remove</button>
                        </form>
                    </td>
                </tr>
            <?php endforeach; ?>
        </table>
        <p>Total: <?php echo $_SESSION['total_price']; ?> USD</p>
        <a href="checkout.php">Proceed to Checkout</a>
    <?php endif; ?>
    <a href="products.php">Continue Shopping</a>
</body>
</html>


<?php
session_start();
require_once 'Product.php';

if (isset($_POST['product_id'])) {
    $product_id = $_POST['product_id'];
    
    if (!isset($_SESSION['cart'][$product_id])) {
        $product = new Product();
        $prod = $product->getProductById($product_id);
        $_SESSION['cart'][$product_id] = array(
            'id' => $product_id,
            'quantity' => 1,
            'total_price' => $prod['price']
        );
    } else {
        $_SESSION['cart'][$product_id]['quantity']++;
        $_SESSION['cart'][$product_id]['total_price'] += $prod['price'];
    }
    
    $_SESSION['total_price'] = array_sum(array_column($_SESSION['cart'], 'total_price'));
}

header("Location: cart.php");
exit();
?>


<?php
session_start();

if (empty($_SESSION['cart'])) {
    header("Location: products.php");
    exit();
}

?>

<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
</head>
<body>
    <h1>Checkout</h1>
    <form action="process_purchase.php" method="post">
        <label for="first_name">First Name:</label>
        <input type="text" id="first_name" name="first_name" required><br>
        
        <label for="last_name">Last Name:</label>
        <input type="text" id="last_name" name="last_name" required><br>
        
        <label for="email">Email:</label>
        <input type="email" id="email" name="email" required><br>
        
        <label for="address">Address:</label>
        <textarea id="address" name="address" required></textarea><br>
        
        <input type="submit" value="Place Order">
    </form>
</body>
</html>


<?php
session_start();
require_once 'Product.php';

if (empty($_SESSION['cart'])) {
    header("Location: products.php");
    exit();
}

$first_name = $_POST['first_name'];
$last_name = $_POST['last_name'];
$email = $_POST['email'];
(address omitted for brevity)

$order = new Order();
$order->createOrder($user_data, $order_items);

unset($_SESSION['cart']);
unset($_SESSION['total_price']);

header("Location: purchase_confirmation.php");
exit();
?>


<?php
session_start();

?>

<!DOCTYPE html>
<html>
<head>
    <title>Purchase Confirmation</title>
</head>
<body>
    <h1>Thank you for your order!</h1>
    <p>Your order has been successfully processed.</p>
    <p>Order ID: <?php echo $order_id; ?></p>
    <p>Total Amount: <?php echo $total_amount; ?> USD</p>
    <!-- Display other details as needed -->
</body>
</html>


// Product.php
class Product {
    private $db;

    public function __construct() {
        // Connect to database
    }

    public function getProducts() {
        // Query to fetch all products
    }

    public function getProductById($id) {
        // Query to fetch product by ID
    }
}

// Order.php
class Order {
    private $db;

    public function __construct() {
        // Connect to database
    }

    public function createOrder($user_data, $order_items) {
        // Insert into orders table and order items
    }
}


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$database = 'eshop';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $database);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to display products
function displayProducts() {
    global $conn;
    $sql = "SELECT * FROM products";
    $result = mysqli_query($conn, $sql);
    
    while ($row = mysqli_fetch_assoc($result)) {
        echo "<div class='product'>";
        echo "<h3>" . $row['name'] . "</h3>";
        echo "<p>Price: $" . number_format($row['price'], 2) . "</p>";
        echo "<form action='add_to_cart.php' method='post'>";
        echo "<input type='hidden' name='product_id' value='" . $row['id'] . "'>";
        echo "<input type='number' name='quantity' min='1' value='1'>";
        echo "<button type='submit'>Add to Cart</button>";
        echo "</form>";
        echo "</div>";
    }
}

// Function to add products to cart
function addToCart($product_id, $quantity) {
    global $conn;
    
    // Check if product exists in database
    $sql = "SELECT * FROM products WHERE id = ?";
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, "i", $product_id);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);
    
    if ($row = mysqli_fetch_assoc($result)) {
        // Check if cart exists in session
        if (!isset($_SESSION['cart'])) {
            $_SESSION['cart'] = array();
        }
        
        // Add product to cart or update quantity
        $product = array(
            'id' => $row['id'],
            'name' => $row['name'],
            'price' => $row['price'],
            'quantity' => $quantity
        );
        
        if (isset($_SESSION['cart'][$product_id])) {
            $_SESSION['cart'][$product_id]['quantity'] += $quantity;
        } else {
            $_SESSION['cart'][$product_id] = $product;
        }
    }
}

// Function to display cart items
function displayCart() {
    echo "<table>";
    echo "<tr><th>Product</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>";
    
    if (!isset($_SESSION['cart'])) {
        return;
    }
    
    foreach ($_SESSION['cart'] as $product) {
        $total = $product['price'] * $product['quantity'];
        echo "<tr>";
        echo "<td>" . $product['name'] . "</td>";
        echo "<td>$" . number_format($product['price'], 2) . "</td>";
        echo "<td><input type='number' name='quantity[" . $product['id'] . "]' min='1' value='" . $product['quantity'] . "'></td>";
        echo "<td>$" . number_format($total, 2) . "</td>";
        echo "<td><a href='remove_from_cart.php?id=" . $product['id'] . "'>Remove</a></td>";
        echo "</tr>";
    }
    
    echo "</table>";
}

// Function to calculate cart total
function cartTotal() {
    if (!isset($_SESSION['cart'])) {
        return 0;
    }
    
    $total = 0;
    foreach ($_SESSION['cart'] as $product) {
        $total += $product['price'] * $product['quantity'];
    }
    
    return number_format($total, 2);
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
    <style>
        .product {
            border: 1px solid #ddd;
            padding: 10px;
            margin: 5px;
        }
        table {
            width: 100%;
            border-collapse: collapse;
        }
        th, td {
            padding: 8px;
            text-align: left;
            border-bottom: 1px solid #ddd;
        }
    </style>
</head>
<body>
    <?php
    session_start();
    
    // Display products
    displayProducts();
    
    // If cart is not empty, display it
    if (!empty($_SESSION['cart'])) {
        echo "<h2>Your Cart:</h2>";
        displayCart();
        echo "<p>Total: $" . cartTotal() . "</p>";
        echo "<form action='update_cart.php' method='post'>";
        echo "<button type='submit'>Update Cart</button>";
        echo "</form>";
        echo "<a href='checkout.php'>Checkout</a>";
    }
    ?>
    
    <?php
    // Close database connection
    mysqli_close($conn);
    ?>
</body>
</html>


<?php
session_start();

if (isset($_POST['product_id']) && isset($_POST['quantity'])) {
    $product_id = $_POST['product_id'];
    $quantity = $_POST['quantity'];
    
    addToCart($product_id, $quantity);
}

header("Location: index.php");
exit();
?>


<?php
session_start();

if (isset($_GET['id'])) {
    $product_id = $_GET['id'];
    
    if (isset($_SESSION['cart'][$product_id])) {
        unset($_SESSION['cart'][$product_id]);
    }
}

header("Location: index.php");
exit();
?>


<?php
session_start();

if (!empty($_POST)) {
    foreach ($_POST['quantity'] as $product_id => $quantity) {
        if (isset($_SESSION['cart'][$product_id])) {
            $_SESSION['cart'][$product_id]['quantity'] = $quantity;
        }
    }
}

header("Location: index.php");
exit();
?>


<?php
session_start();

if (!empty($_SESSION['cart'])) {
    // Display checkout form
    ?>
    <form action="confirm_purchase.php" method="post">
        <h2>Checkout</h2>
        <div>
            <label for="name">Name:</label>
            <input type="text" id="name" name="name" required>
        </div>
        <div>
            <label for="email">Email:</label>
            <input type="email" id="email" name="email" required>
        </div>
        <div>
            <label for="address">Address:</label>
            <input type="text" id="address" name="address" required>
        </div>
        <button type="submit">Confirm Order</button>
    </form>
    <?php
} else {
    echo "<p>Your cart is empty.</p>";
}
?>


<?php
session_start();

if (!empty($_SESSION['cart'])) {
    // Process payment and place order here
    
    // For now, just display confirmation message
    ?>
    <h2>Order Confirmation</h2>
    <p>Your order has been received!</p>
    <p>Total: $<?php echo cartTotal(); ?></p>
    <?php
    // Clear the cart
    $_SESSION['cart'] = array();
} else {
    echo "<p>Your cart is empty.</p>";
}
?>


<?php
// products.php - Product catalog management
class Product {
    public $id;
    public $name;
    public $price;
    public $description;
    public $stock;

    public function __construct($id, $name, $price, $description, $stock) {
        $this->id = $id;
        $this->name = $name;
        $this->price = $price;
        $this->description = $description;
        $this->stock = $stock;
    }
}

class ProductCatalog {
    private $products;

    public function __construct() {
        $this->products = array();
    }

    public function addProduct(Product $product) {
        $this->products[$product->id] = $product;
    }

    public function getProduct($productId) {
        if (isset($this->products[$productId])) {
            return $this->products[$productId];
        }
        return null;
    }
}

// session_management.php - User session handling
session_start();

if (!isset($_SESSION['user_id'])) {
    $_SESSION['user_id'] = uniqid();
}

function startSession() {
    if (session_status() === PHP_SESSION_NONE) {
        session_start();
    }
}

function getSessionId() {
    return session_id();
}

function destroySession() {
    session_unset();
    session_destroy();
}

// shopping_cart.php - Shopping cart functionality
class ShoppingCart {
    private $cart;

    public function __construct() {
        $this->cart = array();
    }

    public function addProduct($productId, $quantity) {
        if (!isset($this->cart[$productId])) {
            $this->cart[$productId] = 0;
        }
        $this->cart[$productId] += $quantity;
    }

    public function updateQuantity($productId, $newQuantity) {
        if ($newQuantity <= 0) {
            unset($this->cart[$productId]);
        } else {
            $this->cart[$productId] = $newQuantity;
        }
    }

    public function removeProduct($productId) {
        unset($this->cart[$productId]);
    }

    public function getCartContents() {
        return $this->cart;
    }

    public function calculateTotal($catalog) {
        $total = 0;
        foreach ($this->cart as $productId => $quantity) {
            $product = $catalog->getProduct($productId);
            if ($product && $product->stock >= $quantity) {
                $total += $product->price * $quantity;
            }
        }
        return $total;
    }
}

// payment_processing.php - Payment processing
class PaymentProcessor {
    public function processPayment($cart, $catalog, $paymentDetails) {
        // Simulate payment processing
        if ($this->validatePaymentDetails($paymentDetails)) {
            $order = new Order();
            $order->userId = $_SESSION['user_id'];
            $order->products = $cart->getCartContents();
            $order->totalAmount = $cart->calculateTotal($catalog);
            $order->status = 'paid';
            $order->invoiceId = uniqid('INV_');
            
            // Store order in session
            $_SESSION['orders'][] = $order;
            
            return array(
                'success' => true,
                'message' => 'Payment successful!',
                'order_id' => $order->invoiceId
            );
        } else {
            return array(
                'success' => false,
                'message' => 'Invalid payment details.'
            );
        }
    }

    private function validatePaymentDetails($paymentDetails) {
        // Simple validation for demonstration purposes
        if (isset($paymentDetails['card_number']) && strlen($paymentDetails['card_number']) == 16) {
            return true;
        }
        return false;
    }
}

// order_management.php - Order management
class Order {
    public $userId;
    public $products;
    public $totalAmount;
    public $status;
    public $invoiceId;
    public $date;

    public function __construct() {
        $this->date = date('Y-m-d H:i:s');
    }
}

// Initialize catalog and add products
$catalog = new ProductCatalog();
$catalog->addProduct(new Product(1, 'Laptop', 999.99, 'High-performance laptop', 10));
$catalog->addProduct(new Product(2, 'Smartphone', 699.99, 'Latest smartphone model', 20));
$catalog->addProduct(new Product(3, 'Tablet', 299.99, 'Lightweight tablet', 15));

// Initialize shopping cart
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = new ShoppingCart();
}
$cart = $_SESSION['cart'];

// Display products with buy button
function displayProducts($catalog) {
    foreach ($catalog->products as $product) {
        echo "<div class='product'>";
        echo "<h3>{$product->name}</h3>";
        echo "<p>Price: \${$product->price}</p>";
        echo "<p>Stock: {$product->stock}</p>";
        echo "<form action='add_to_cart.php' method='post'>";
        echo "<input type='hidden' name='product_id' value='{$product->id}'>";
        echo "<input type='number' name='quantity' min='1' max='{$product->stock}' value='1'>";
        echo "<button type='submit'>Add to Cart</button>";
        echo "</form>";
        echo "</div>";
    }
}

// Add product to cart
if (isset($_POST['product_id']) && isset($_POST['quantity'])) {
    $productId = $_POST['product_id'];
    $quantity = $_POST['quantity'];

    if ($catalog->getProduct($productId)) {
        $cart->addProduct($productId, $quantity);
        $_SESSION['cart'] = $cart;
        header("Location: cart.php");
        exit();
    } else {
        echo "Invalid product ID.";
    }
}

// Display shopping cart
function displayCart($cart, $catalog) {
    echo "<h2>Shopping Cart</h2>";
    if (empty($cart->getCartContents())) {
        echo "<p>Your cart is empty.</p>";
    } else {
        foreach ($cart->getCartContents() as $productId => $quantity) {
            $product = $catalog->getProduct($productId);
            if ($product) {
                echo "<div class='cart-item'>";
                echo "<h3>{$product->name}</h3>";
                echo "<p>Quantity: {$quantity}</p>";
                echo "<p>Price: \${$product->price}</p>";
                echo "</div>";
            }
        }
        echo "<p>Total: \${$cart->calculateTotal($catalog)}</p>";
    }
}

// Checkout functionality
if (isset($_POST['checkout'])) {
    $paymentDetails = array(
        'card_number' => $_POST['card_number'],
        'cardholder_name' => $_POST['cardholder_name'],
        'expiry_date' => $_POST['expiry_date'],
        'cvv' => $_POST['cvv']
    );

    $processor = new PaymentProcessor();
    $result = $processor->processPayment($cart, $catalog, $paymentDetails);

    if ($result['success']) {
        header("Location: order_confirmation.php?order_id=" . $result['order_id']);
        exit();
    } else {
        echo "Error processing payment: " . $result['message'];
    }
}

// Order confirmation page
if (isset($_GET['order_id'])) {
    foreach ($_SESSION['orders'] as $order) {
        if ($order->invoiceId == $_GET['order_id']) {
            echo "<h2>Order Confirmation</h2>";
            echo "<p>Invoice ID: {$order->invoiceId}</p>";
            echo "<p>Total Amount: \${$order->totalAmount}</p>";
            echo "<p>Status: {$order->status}</p>";
            break;
        }
    }
}

// Order history
function viewOrderHistory() {
    if (isset($_SESSION['orders'])) {
        foreach ($_SESSION['orders'] as $order) {
            echo "<div class='order'>";
            echo "<h3>Invoice ID: {$order->invoiceId}</h3>";
            echo "<p>Status: {$order->status}</p>";
            echo "</div>";
        }
    } else {
        echo "<p>No previous orders found.</p>";
    }
}
?>


require_once 'products.php';
require_once 'session_management.php';

startSession();
displayProducts($catalog);


require_once 'shopping_cart.php';

if (isset($_POST['add_to_cart'])) {
    $productId = $_POST['product_id'];
    $quantity = $_POST['quantity'];
    
    if ($catalog->getProduct($productId)) {
        $cart->addProduct($productId, $quantity);
        $_SESSION['cart'] = serialize($cart);
        header("Location: cart.php");
        exit();
    }
}


require_once 'shopping_cart.php';
require_once 'products.php';

displayCart(unserialize($_SESSION['cart']), $catalog);


require_once 'payment_processing.php';
require_once 'shopping_cart.php';

$cart = unserialize($_SESSION['cart']);
$result = $processor->processPayment($cart, $catalog, $_POST);

if ($result['success']) {
    header("Location: order_confirmation.php?order_id=" . $result['order_id']);
    exit();
}


require_once 'order_management.php';

if (isset($_GET['order_id'])) {
    viewOrderConfirmation($_GET['order_id']);
}


<?php
// Initialize session
session_start();

// Check if cart exists in session, if not create it
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
        }
        .cart-item {
            border: 1px solid #ccc;
            padding: 10px;
            margin-bottom: 10px;
        }
    </style>
</head>
<body>
    <?php
    // Adding item to cart logic
    if (isset($_POST['add_to_cart'])) {
        $productId = $_POST['product_id'];
        $quantity = $_POST['quantity'];

        // Check if product is already in cart
        if (array_key_exists($productId, $_SESSION['cart'])) {
            // Update quantity
            $_SESSION['cart'][$productId] += $quantity;
        } else {
            // Add new product to cart
            $_SESSION['cart'][$productId] = $quantity;
        }
    }

    // Updating item quantity logic
    if (isset($_POST['update_cart'])) {
        foreach ($_POST as $key => $value) {
            if ($key != 'update_cart' && is_numeric($value)) {
                $_SESSION['cart'][$key] = $value;
            }
        }
    }

    // Removing item from cart logic
    if (isset($_GET['remove'])) {
        $productId = $_GET['remove'];
        unset($_SESSION['cart'][$productId]);
    }

    // Display products to add to cart
    echo "<h2>Our Products</h2>";
    echo "<form method='post'>";
    echo "<input type='hidden' name='product_id' value='1'>";
    echo "<input type='number' name='quantity' min='1' value='1'>";
    echo "<input type='submit' name='add_to_cart' value='Add Product 1'>";
    echo "</form>";

    echo "<br>";
    
    echo "<form method='post'>";
    echo "<input type='hidden' name='product_id' value='2'>";
    echo "<input type='number' name='quantity' min='1' value='1'>";
    echo "<input type='submit' name='add_to_cart' value='Add Product 2'>";
    echo "</form>";

    // Display cart contents
    if (!empty($_SESSION['cart'])) {
        echo "<h2>Your Cart</h2>";
        echo "<form method='post'>";
        foreach ($_SESSION['cart'] as $productId => $quantity) {
            echo "<div class='cart-item'>";
            echo "Product ID: $productId <br>";
            echo "Quantity: <input type='number' name='$productId' min='1' value='$quantity'><br>";
            echo "<a href='?remove=$productId'>Remove</a>";
            echo "</div>";
        }
        echo "<input type='submit' name='update_cart' value='Update Cart'>";
        echo "</form>";
    } else {
        echo "<h2>Your cart is empty</h2>";
    }

    // Links to navigate between pages
    echo "<br><a href='products.php'>View More Products</a> | <a href='cart.php'>View Cart</a>";
?>
</body>
</html>


<?php
session_start();

// Database connection
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "myDB";

$conn = mysqli_connect($servername, $username, $password, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Product data (example)
$products = array(
    1 => array('name' => 'Product 1', 'price' => 25.00, 'description' => 'This is product 1'),
    2 => array('name' => 'Product 2', 'price' => 35.00, 'description' => 'This is product 2'),
    3 => array('name' => 'Product 3', 'price' => 45.00, 'description' => 'This is product 3')
);

// Cart initialization
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add to cart functionality
if (isset($_GET['action']) && $_GET['action'] == 'add') {
    $product_id = intval($_GET['id']);
    
    if ($product_id > 0) {
        if (!isset($_SESSION['cart'][$product_id])) {
            $_SESSION['cart'][$product_id] = array(
                'quantity' => 1,
                'price' => $products[$product_id]['price'],
                'name' => $products[$product_id]['name']
            );
        } else {
            $_SESSION['cart'][$product_id]['quantity']++;
        }
    }
}

// Update cart functionality
if (isset($_POST['update'])) {
    foreach ($_POST['quantity'] as $id => $qty) {
        if ($qty > 0) {
            $_SESSION['cart'][$id]['quantity'] = $qty;
        } else {
            unset($_SESSION['cart'][$id]);
        }
    }
}

// Remove item from cart
if (isset($_GET['action']) && $_GET['action'] == 'remove') {
    $product_id = intval($_GET['id']);
    unset($_SESSION['cart'][$product_id]);
}
?>


<?php
// process_order.php
session_start();

// Get form data
$name = $_POST['name'];
$email = $_POST['email'];
$address = $_POST['address'];
$payment_method = $_POST['payment_method'];

// Validate input
if (empty($name) || empty($email) || empty($address)) {
    die("Please fill in all required fields.");
}

// Calculate total
$total = 0;
foreach ($_SESSION['cart'] as $item) {
    $total += $item['price'] * $item['quantity'];
}

// Insert order into database
$sql = "INSERT INTO orders (name, email, address, payment_method, cart, total)
        VALUES (?, ?, ?, ?, ?, ?)";

$stmt = mysqli_prepare($conn, $sql);
mysqli_stmt_bind_param($stmt, "sssdss", $name, $email, $address, $payment_method, serialize($_SESSION['cart']), $total);

if (mysqli_stmt_execute($stmt)) {
    // Clear cart
    unset($_SESSION['cart']);
    
    // Send email confirmation
    require 'PHPMailer/PHPMailer.php';
    require 'PHPMailer/Exception.php';
    require 'PHPMailer/SMTP.php';

    try {
        $mail = new PHPMailer(true);
        
        $mail->isSMTP();
        $mail->Host = 'smtp.example.com';
        $mail->SMTPAuth = true;
        $mail->Username = 'your@example.com';
        $mail->Password = 'password';
        $mail->Port = 587;

        $mail->setFrom('from@example.com', 'Purchase System');
        $mail->addAddress($email, $name);
        $mail->Subject = 'Order Confirmation';

        $mail->Body = "Dear $name,

Thank you for your purchase. Your order has been received.
Total: $$total";

        $mail->send();
    } catch (Exception $e) {
        echo "Message could not be sent.Mailer Error: {$mail->ErrorInfo}";
    }
    
    header("Location: thank_you.php");
} else {
    die("Error processing your order.");
}
?>


<?php
// Database connection
$host = 'localhost';
$dbname = 'shopping_cart';
$user = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $user, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}

// Function to get products
function getProducts() {
    global $conn;
    
    try {
        $stmt = $conn->prepare("SELECT * FROM products");
        $stmt->execute();
        return $stmt->fetchAll(PDO::FETCH_ASSOC);
    } catch(PDOException $e) {
        echo "Error: " . $e->getMessage();
        return false;
    }
}

// Function to add product to cart
function addToCart($product_id, $quantity = 1) {
    session_start();
    
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }

    if (isset($_SESSION['cart'][$product_id])) {
        $_SESSION['cart'][$product_id]['quantity'] += $quantity;
    } else {
        $stmt = $conn->prepare("SELECT name, price FROM products WHERE id = ?");
        $stmt->execute(array($product_id));
        $row = $stmt->fetch(PDO::FETCH_ASSOC);
        
        if ($row) {
            $_SESSION['cart'][$product_id] = array(
                'id' => $product_id,
                'name' => $row['name'],
                'price' => $row['price'],
                'quantity' => $quantity
            );
        }
    }
}

// Function to update cart quantity
function updateCart($product_id, $new_quantity) {
    session_start();
    
    if (isset($_SESSION['cart'][$product_id])) {
        $_SESSION['cart'][$product_id]['quantity'] = $new_quantity;
    }
}

// Function to remove item from cart
function removeFromCart($product_id) {
    session_start();
    
    unset($_SESSION['cart'][$product_id]);
}

// Function to process order
function processOrder() {
    session_start();

    if (!empty($_SESSION['cart'])) {
        try {
            // Start transaction
            $conn->beginTransaction();

            // Insert order into orders table
            $orderStmt = $conn->prepare("INSERT INTO orders (user_id, total_amount) VALUES (?, ?)");
            $totalAmount = calculateTotal();
            $orderStmt->execute(array($_SESSION['user_id'], $totalAmount));
            $orderId = $conn->lastInsertId();

            // Insert order items into order_items table
            foreach ($_SESSION['cart'] as $item) {
                $orderItemStmt = $conn->prepare("INSERT INTO order_items (order_id, product_id, quantity, price) VALUES (?, ?, ?, ?)");
                $orderItemStmt->execute(array($orderId, $item['id'], $item['quantity'], $item['price']));
            }

            // Decrease stock quantity
            foreach ($_SESSION['cart'] as $item) {
                $stockUpdateStmt = $conn->prepare("UPDATE products SET stock_quantity = stock_quantity - ? WHERE id = ?");
                $stockUpdateStmt->execute(array($item['quantity'], $item['id']));
            }

            // Commit transaction
            $conn->commit();

            // Clear cart
            unset($_SESSION['cart']);
            return true;
        } catch(PDOException $e) {
            // Rollback transaction on error
            $conn->rollback();
            echo "Error: " . $e->getMessage();
            return false;
        }
    }

    return false;
}

// Function to calculate total amount of items in cart
function calculateTotal() {
    session_start();

    $total = 0;

    foreach ($_SESSION['cart'] as $item) {
        $total += ($item['price'] * $item['quantity']);
    }

    return $total;
}

// Function to generate invoice
function generateInvoice($orderId) {
    global $conn;

    try {
        // Get order details
        $orderStmt = $conn->prepare("SELECT * FROM orders WHERE id = ?");
        $orderStmt->execute(array($orderId));
        $order = $orderStmt->fetch(PDO::FETCH_ASSOC);

        if (!$order) {
            echo "Order not found!";
            return;
        }

        // Get order items
        $itemsStmt = $conn->prepare("SELECT * FROM order_items WHERE order_id = ?");
        $itemsStmt->execute(array($orderId));
        $items = $itemsStmt->fetchAll(PDO::FETCH_ASSOC);

        // Display invoice
        echo "<h2>Invoice</h2>";
        echo "<p>Order ID: " . $order['id'] . "</p>";
        echo "<p>Date: " . $order['created_at'] . "</p>";
        echo "<p>Total Amount: $" . number_format($order['total_amount'], 2) . "</p>";
        echo "<table border='1'>";
        echo "<tr><th>Product</th><th>Quantity</th><th>Price</th></tr>";
        
        foreach ($items as $item) {
            echo "<tr>";
            echo "<td>" . $item['product_id'] . "</td>";
            echo "<td>" . $item['quantity'] . "</td>";
            echo "<td>$" . number_format($item['price'], 2) . "</td>";
            echo "</tr>";
        }

        echo "</table>";
    } catch(PDOException $e) {
        echo "Error: " . $e->getMessage();
    }
}

// Function to display all orders
function displayOrders() {
    global $conn;

    try {
        $stmt = $conn->prepare("SELECT * FROM orders ORDER BY created_at DESC");
        $stmt->execute();
        $orders = $stmt->fetchAll(PDO::FETCH_ASSOC);

        if (!empty($orders)) {
            echo "<table border='1'>";
            echo "<tr><th>Order ID</th><th>User ID</th><th>Total Amount</th><th>Date</th></tr>";
            
            foreach ($orders as $order) {
                echo "<tr>";
                echo "<td>" . $order['id'] . "</td>";
                echo "<td>" . $order['user_id'] . "</td>";
                echo "<td>$" . number_format($order['total_amount'], 2) . "</td>";
                echo "<td>" . $order['created_at'] . "</td>";
                echo "</tr>";
            }

            echo "</table>";
        } else {
            echo "No orders found!";
        }
    } catch(PDOException $e) {
        echo "Error: " . $e->getMessage();
    }
}

// Sample usage:
session_start();

if (isset($_POST['add_to_cart'])) {
    addToCart($_POST['product_id'], $_POST['quantity']);
}

if (isset($_POST['update_cart'])) {
    foreach ($_POST as $key => $value) {
        if (strpos($key, 'quantity_') === 0) {
            $productId = substr($key, 9);
            updateCart($productId, $value);
        }
    }
}

if (isset($_GET['remove'])) {
    removeFromCart($_GET['remove']);
}

if (isset($_POST['checkout'])) {
    if (processOrder()) {
        echo "Thank you for your purchase!";
    }
}

// Display products
$products = getProducts();
foreach ($products as $product) {
    echo "<div>";
    echo "<h3>" . $product['name'] . "</h3>";
    echo "<p>Price: $" . number_format($product['price'], 2) . "</p>";
    echo "<p>Description: " . $product['description'] . "</p>";
    echo "<form method='post'>";
    echo "<input type='hidden' name='product_id' value='" . $product['id'] . "'>";
    echo "<input type='number' name='quantity' min='1' value='1'>";
    echo "<button type='submit' name='add_to_cart'>Add to Cart</button>";
    echo "</form>";
    echo "</div>";
}

// Display cart
echo "<h2>Your Cart:</h2>";
if (!empty($_SESSION['cart'])) {
    echo "<form method='post'>";
    echo "<table border='1'>";
    echo "<tr><th>Product</th><th>Quantity</th><th>Price</th></tr>";
    
    foreach ($_SESSION['cart'] as $item) {
        echo "<tr>";
        echo "<td>" . $item['name'] . "</td>";
        echo "<td><input type='number' name='quantity_" . $item['id'] . "' value='" . $item['quantity'] . "' min='1'></td>";
        echo "<td>$" . number_format($item['price'], 2) . "</td>";
        echo "<td><a href='?remove=" . $item['id'] . "'>Remove</a></td>";
        echo "</tr>";
    }

    echo "</table>";
    echo "<button type='submit' name='update_cart'>Update Cart</button>";
    echo "</form>";

    if (isset($_SESSION['user_id'])) {
        echo "<form method='post'>";
        echo "<h3>Proceed to Checkout</h3>";
        echo "<button type='submit' name='checkout'>Checkout</button>";
        echo "</form>";
    } else {
        echo "<p>Please <a href='login.php'>login</a> to checkout.</p>";
    }

    echo "<p>Total: $" . number_format(calculateTotal(), 2) . "</p>";
} else {
    echo "Your cart is empty!";
}

// Display orders
displayOrders();

$conn = null;
?>


<?php
// Database connection configuration
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    // Set the PDO error mode to exception
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Purchase Form</title>
</head>
<body>
    <h2>Make a Purchase</h2>
    
    <?php
    // Show success message if purchase is successful
    if (isset($_GET['success'])) {
        echo "<p style='color:green;'>Purchase completed successfully!</p>";
    }
    ?>

    <form method="post" action="process_purchase.php">
        <table>
            <tr>
                <td>Product Name:</td>
                <td><input type="text" name="product_name" required></td>
            </tr>
            <tr>
                <td>Price:</td>
                <td><input type="number" step="0.01" name="price" required></td>
            </tr>
            <tr>
                <td>Quantity:</td>
                <td><input type="number" min="1" name="quantity" required></td>
            </tr>
            <tr>
                <td colspan="2"><button type="submit">Purchase</button></td>
            </tr>
        </table>
    </form>
</body>
</html>


<?php
// process_purchase.php

require_once 'database_connection.php'; // Include your database connection file

session_start();

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    try {
        // Sanitize input data
        $product_name = htmlspecialchars(trim($_POST['product_name']));
        $price = floatval(trim($_POST['price']));
        $quantity = intval(trim($_POST['quantity']));

        if (empty($product_name) || empty($price) || empty($quantity)) {
            throw new Exception("All fields are required.");
        }

        // Calculate total price
        $total_price = $price * $quantity;

        // Insert order into database
        $stmt = $conn->prepare("
            INSERT INTO orders (product_name, price, quantity, total_price, purchase_date)
            VALUES (:product_name, :price, :quantity, :total_price, NOW())
        ");
        
        $stmt->bindParam(':product_name', $product_name);
        $stmt->bindParam(':price', $price);
        $stmt->bindParam(':quantity', $quantity);
        $stmt->bindParam(':total_price', $total_price);

        if ($stmt->execute()) {
            // Redirect to success page
            header("Location: index.php?success=1");
            exit();
        } else {
            throw new Exception("Error processing your purchase. Please try again.");
        }

    } catch(PDOException $e) {
        echo "Database error: " . $e->getMessage();
    } catch(Exception $e) {
        echo $e->getMessage();
    }
}

?>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$db_name = 'shopping_cart';

// Create database connection
$conn = new mysqli($host, $username, $password, $db_name);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to get products from database
function get_products() {
    global $conn;
    $sql = "SELECT * FROM products";
    $result = $conn->query($sql);
    
    if ($result->num_rows > 0) {
        return $result;
    } else {
        return false;
    }
}

// Function to add item to cart
function add_to_cart($product_id, $quantity) {
    global $conn;
    session_start();
    
    // Check if product exists in database
    $sql = "SELECT * FROM products WHERE id = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("i", $product_id);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows > 0) {
        $product = $result->fetch_assoc();
        
        // Check if product already in cart
        if (isset($_SESSION['cart'][$product_id])) {
            $_SESSION['cart'][$product_id]['quantity'] += $quantity;
        } else {
            $_SESSION['cart'][$product_id] = array(
                'id' => $product_id,
                'name' => $product['name'],
                'price' => $product['price'],
                'quantity' => $quantity
            );
        }
        
        return true;
    } else {
        return false;
    }
}

// Function to display cart contents
function display_cart() {
    session_start();
    
    if (!empty($_SESSION['cart'])) {
        $total_price = 0;
        foreach ($_SESSION['cart'] as $item) {
            echo "<div class='cart-item'>";
            echo "<h3>" . $item['name'] . "</h3>";
            echo "<p>Price: $" . number_format($item['price'], 2) . "</p>";
            echo "<p>Quantity: " . $item['quantity'] . "</p>";
            echo "<p>Total: $" . number_format($item['price'] * $item['quantity'], 2) . "</p>";
            echo "</div>";
            
            $total_price += $item['price'] * $item['quantity'];
        }
        
        echo "<h3>Grand Total: $" . number_format($total_price, 2) . "</h3>";
    } else {
        echo "Your cart is empty!";
    }
}

// Function to process order
function process_order() {
    session_start();
    
    if (!empty($_SESSION['cart'])) {
        // Validate user input
        $name = trim($_POST['name']);
        $email = trim($_POST['email']);
        $address = trim($_POST['address']);
        $phone = trim($_POST['phone']);
        
        if (empty($name) || empty($email) || empty($address) || empty($phone)) {
            return false;
        }
        
        // Insert order into database
        global $conn;
        $order_id = microtime(true);
        $total_price = 0;
        
        foreach ($_SESSION['cart'] as $item) {
            $total_price += $item['price'] * $item['quantity'];
        }
        
        $sql = "INSERT INTO orders (order_id, name, email, address, phone, total_price, order_date)
                VALUES (?, ?, ?, ?, ?, ?, NOW())";
        $stmt = $conn->prepare($sql);
        $stmt->bind_param("sddssd", $order_id, $name, $email, $address, $phone, $total_price);
        $stmt->execute();
        
        // Insert order details
        foreach ($_SESSION['cart'] as $item) {
            $sql = "INSERT INTO order_details (order_id, product_id, name, price, quantity)
                    VALUES (?, ?, ?, ?, ?)";
            $stmt = $conn->prepare($sql);
            $stmt->bind_param("isdss", $order_id, $item['id'], $item['name'], $item['price'], $item['quantity']);
            $stmt->execute();
        }
        
        // Clear cart
        unset($_SESSION['cart']);
        
        return true;
    } else {
        return false;
    }
}

// Function to display orders
function get_orders() {
    global $conn;
    $sql = "SELECT * FROM orders";
    $result = $conn->query($sql);
    
    if ($result->num_rows > 0) {
        return $result;
    } else {
        return false;
    }
}

// Close database connection
$conn->close();
?>


<?php
// Include configuration file
include('config.php');

// Check if form is submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Get form data
    $productName = $_POST['product_name'];
    $price = $_POST['price'];
    $quantity = $_POST['quantity'];
    
    // Validate input
    if (empty($productName) || empty($price) || empty($quantity)) {
        die("Please fill in all required fields");
    }
    
    if (!is_numeric($price) || !is_numeric($quantity)) {
        die("Price and quantity must be numeric values");
    }
    
    // Calculate total amount
    $totalAmount = $price * $quantity;
    
    // Connect to database
    try {
        $db = new PDO('mysql:host=' . DB_HOST . ';dbname=' . DB_NAME, DB_USER, DB_PASS);
        $db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
        
        // Check if product exists
        $productCheckQuery = "SELECT * FROM products WHERE name = :productName";
        $stmt = $db->prepare($productCheckQuery);
        $stmt->bindParam(':productName', $productName);
        $stmt->execute();
        
        $productExists = $stmt->rowCount() > 0;
        
        if (!$productExists) {
            die("Product does not exist");
        }
        
        // Insert purchase into database
        $purchaseQuery = "INSERT INTO purchases (product_name, price, quantity, total_amount) 
                         VALUES (:productName, :price, :quantity, :totalAmount)";
        $stmt = $db->prepare($purchaseQuery);
        $stmt->bindParam(':productName', $productName);
        $stmt->bindParam(':price', $price);
        $stmt->bindParam(':quantity', $quantity);
        $stmt->bindParam(':totalAmount', $totalAmount);
        
        if ($stmt->execute()) {
            echo "Purchase successful!";
            // You can redirect to a thank you page here
        } else {
            die("Error processing purchase");
        }
    } catch (PDOException $e) {
        die("Database error: " . $e->getMessage());
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Purchase Form</title>
</head>
<body>
    <h1>Make a Purchase</h1>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <label for="product_name">Product Name:</label>
        <input type="text" name="product_name" id="product_name" required><br><br>
        
        <label for="price">Price:</label>
        <input type="number" step="0.01" name="price" id="price" required><br><br>
        
        <label for="quantity">Quantity:</label>
        <input type="number" min="1" name="quantity" id="quantity" required><br><br>
        
        <input type="submit" value="Purchase">
    </form>
</body>
</html>


<?php
define('DB_HOST', 'localhost');
define('DB_USER', 'your_username');
define('DB_PASS', 'your_password');
define('DB_NAME', 'your_database_name');
?>


<?php
// Connect to database
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "myDB";

$conn = mysqli_connect($servername, $username, $password, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Fetch products from database
$sql = "SELECT * FROM products";
$result = mysqli_query($conn, $sql);

?>

<!DOCTYPE html>
<html>
<head>
    <title>Product List</title>
    <!-- Include Bootstrap for styling -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>
    <div class="container mt-4">
        <?php
        while ($row = mysqli_fetch_assoc($result)) {
            echo "
                <div class='card mb-4' style='max-width: 500px;'>
                    <img src='{$row['image']}' class='card-img-top' alt='$row[name]'>
                    <div class='card-body'>
                        <h5 class='card-title'>$row[name]</h5>
                        <p class='card-text'><strong>Price:</strong> $row[price] $</p>
                        <p class='card-text'>$row[description]</p>
                        <form action='add_to_cart.php' method='post'>
                            <input type='hidden' name='product_id' value='{$row['id']}'>
                            <button type='submit' class='btn btn-primary'>Add to Cart</button>
                        </form>
                    </div>
                </div>
            ";
        }
        ?>
    </div>

    <!-- Include Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>

<?php
// Close database connection
mysqli_close($conn);
?>


<?php
session_start();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>
    <div class="container mt-4">
        <?php
        if (!empty($_SESSION['cart'])) {
            $total = 0;
            echo "<table class='table table-striped'>";
            foreach ($_SESSION['cart'] as $product) {
                echo "
                    <tr>
                        <td>{$product['name']}</td>
                        <td>Quantity: {$product['quantity']}</td>
                        <td>Price: \${$product['price']}</td>
                        <td>Total: \${$product['quantity'] * $product['price']}</td>
                        <td><a href='remove_from_cart.php?id={$product['id']}' class='btn btn-danger'>Remove</a></td>
                    </tr>
                ";
                $total += $product['quantity'] * $product['price'];
            }
            echo "
                <tr>
                    <td colspan='4'><strong>Total:</strong> \$$total</td>
                    <td><a href='checkout.php' class='btn btn-success'>Checkout</a></td>
                </tr>
            ";
            echo "</table>";
        } else {
            echo "<p>Your cart is empty.</p>";
        }
        ?>
    </div>

    <!-- Include Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>


<?php
session_start();

// Get product details from database
$conn = mysqli_connect("localhost", "username", "password", "myDB");
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

$product_id = $_POST['product_id'];

$sql = "SELECT * FROM products WHERE id = $product_id";
$result = mysqli_query($conn, $sql);
$product = mysqli_fetch_assoc($result);

mysqli_close($conn);

// Add to cart
if (isset($_SESSION['cart'])) {
    // Check if product already exists in cart
    $found = false;
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['id'] == $product_id) {
            $item['quantity']++;
            $found = true;
            break;
        }
    }
    if (!$found) {
        $_SESSION['cart'][] = array(
            'id' => $product['id'],
            'name' => $product['name'],
            'price' => $product['price'],
            'quantity' => 1
        );
    }
} else {
    $_SESSION['cart'] = array();
    $_SESSION['cart'][] = array(
        'id' => $product['id'],
        'name' => $product['name'],
        'price' => $product['price'],
        'quantity' => 1
    );
}

header("Location: cart.php");
?>


<?php
session_start();

$product_id = $_GET['id'];

// Loop through the session cart and remove the product with matching id
foreach ($_SESSION['cart'] as $key => $product) {
    if ($product['id'] == $product_id) {
        unset($_SESSION['cart'][$key]);
    }
}

$_SESSION['cart'] = array_values($_SESSION['cart']); // Re-index the array

header("Location: cart.php");
?>


<?php
session_start();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>
    <div class="container mt-4">
        <?php if (!empty($_SESSION['cart'])): ?>
            <h2>Enter your details to complete the purchase:</h2>
            <form action="process_order.php" method="post">
                <div class="mb-3">
                    <label for="name">Name</label>
                    <input type="text" name="name" id="name" required class="form-control">
                </div>
                <div class="mb-3">
                    <label for="email">Email</label>
                    <input type="email" name="email" id="email" required class="form-control">
                </div>
                <div class="mb-3">
                    <label for="address">Address</label>
                    <input type="text" name="address" id="address" required class="form-control">
                </div>
                <div class="mb-3">
                    <label for="phone">Phone</label>
                    <input type="tel" name="phone" id="phone" required class="form-control">
                </div>
                <div class="mb-3">
                    <label for="payment_method">Payment Method</label>
                    <select name="payment_method" id="payment_method" required class="form-control">
                        <option value="">Select Payment Method</option>
                        <option value="credit_card">Credit Card</option>
                        <option value="paypal">PayPal</option>
                        <option value="cash">Cash on Delivery</option>
                    </select>
                </div>
                <button type="submit" class="btn btn-primary">Place Order</button>
            </form>
        <?php else: ?>
            <p>Your cart is empty. Please add products first.</p>
        <?php endif; ?>
    </div>

    <!-- Include Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>


<?php
session_start();

// Check if cart is not empty and form data is submitted
if (!empty($_SESSION['cart']) && !empty($_POST)) {
    // Sanitize input
    $name = htmlspecialchars(trim($_POST['name']));
    $email = htmlspecialchars(trim($_POST['email']));
    $address = htmlspecialchars(trim($_POST['address']));
    $phone = htmlspecialchars(trim($_POST['phone']));
    $payment_method = htmlspecialchars(trim($_POST['payment_method']));

    // Calculate total amount
    $total = 0;
    foreach ($_SESSION['cart'] as $product) {
        $total += $product['quantity'] * $product['price'];
    }

    // Connect to database
    $conn = mysqli_connect("localhost", "username", "password", "myDB");
    if (!$conn) {
        die("Connection failed: " . mysqli_connect_error());
    }

    // Start transaction
    mysqli_autocommit($conn, FALSE);

    try {
        // Insert order into orders table
        $order_sql = "
            INSERT INTO orders (user_name, email, address, phone, total, payment_method)
            VALUES ('$name', '$email', '$address', '$phone', '$total', '$payment_method')
        ";
        if (!mysqli_query($conn, $order_sql)) {
            throw new Exception("Error inserting order");
        }

        // Get last inserted order id
        $order_id = mysqli_insert_id($conn);

        // Insert order details into order_details table
        foreach ($_SESSION['cart'] as $product) {
            $detail_sql = "
                INSERT INTO order_details (order_id, product_id, quantity, price)
                VALUES ('$order_id', '{$product['id']}', '{$product['quantity']}', '{$product['price']}')
            ";
            if (!mysqli_query($conn, $detail_sql)) {
                throw new Exception("Error inserting order details");
            }
        }

        // Commit transaction
        mysqli_commit($conn);

        // Clear cart
        unset($_SESSION['cart']);

        // Redirect to confirmation page
        header("Location: confirmation.php?order_id=$order_id");

    } catch (Exception $e) {
        // Rollback transaction on error
        mysqli_rollback($conn);
        echo "Error: " . $e->getMessage();
    }

    // Close connection
    mysqli_close($conn);

} else {
    header("Location: cart.php");
}
?>


<?php
session_start();

// Get order details from session or database
if (isset($_GET['order_id'])) {
    $order_id = $_GET['order_id'];
    // Here you can fetch order details from the database if needed
}

?>

<!DOCTYPE html>
<html>
<head>
    <title>Order Confirmation</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>
    <div class="container mt-4">
        <?php if (isset($_GET['order_id'])): ?>
            <h2>Thank you for your order!</h2>
            <p>Your order ID is: #<?php echo $order_id; ?></p>
            <p>We will contact you soon to confirm your payment.</p>
            <a href="index.php" class="btn btn-primary">Continue Shopping</a>
        <?php else: ?>
            <p>Something went wrong. Please try again.</p>
        <?php endif; ?>
    </div>

    <!-- Include Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>


<?php
// Connect to database
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "myDB";

$conn = mysqli_connect($servername, $username, $password, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

$sql = "SELECT * FROM orders";
$result = mysqli_query($conn, $sql);

?>

<!DOCTYPE html>
<html>
<head>
    <title>Order Management</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>
    <div class="container mt-4">
        <?php
        if (mysqli_num_rows($result) > 0) {
            echo "<table class='table table-striped'>";
            while ($row = mysqli_fetch_assoc($result)) {
                $order_id = $row['order_id'];
                $user_name = $row['user_name'];
                $total = $row['total'];
                $status = $row['status'];

                // Get order details
                $details_sql = "SELECT * FROM order_details WHERE order_id = $order_id";
                $details_result = mysqli_query($conn, $details_sql);
                $details_count = mysqli_num_rows($details_result);

                echo "
                    <tr>
                        <td><strong>Order ID:</strong> $order_id</td>
                        <td><strong>Name:</strong> $user_name</td>
                        <td><strong>Total:</strong> \${$total}</td>
                        <td><a href='view_order.php?id=$order_id' class='btn btn-info'>View Details ($details_count items)</a></td>
                    </tr>
                ";
            }
            echo "</table>";
        } else {
            echo "<p>No orders found.</p>";
        }
        ?>
    </div>

    <!-- Include Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>

<?php
// Close database connection
mysqli_close($conn);
?>


<?php
session_start();
require 'db_connection.php';

function get_products() {
    $query = "SELECT * FROM products";
    $stmt = $conn->prepare($query);
    $stmt->execute();
    return $stmt->fetchAll(PDO::FETCH_ASSOC);
}

$products = get_products();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Product List</title>
</head>
<body>
    <h1>Products</h1>
    <?php foreach ($products as $product): ?>
        <div>
            <h3><?php echo $product['name']; ?></h3>
            <p><?php echo $product['description']; ?></p>
            <p>$<?php echo number_format($product['price'], 2); ?></p>
            <?php if ($product['stock'] > 0): ?>
                <form action="add_to_cart.php" method="post">
                    <input type="hidden" name="product_id" value="<?php echo $product['id']; ?>">
                    <input type="number" name="quantity" min="1" max="<?php echo $product['stock']; ?>" value="1">
                    <button type="submit">Add to Cart</button>
                </form>
            <?php else: ?>
                <p>Out of Stock</p>
            <?php endif; ?>
        </div>
    <?php endforeach; ?>
</body>
</html>


<?php
session_start();
require 'db_connection.php';

$product_id = $_POST['product_id'];
$quantity = (int)$_POST['quantity'];

if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Check if product is already in cart
if (array_key_exists($product_id, $_SESSION['cart'])) {
    $_SESSION['cart'][$product_id]['quantity'] += $quantity;
} else {
    // Fetch product details to add to cart
    $query = "SELECT name, price FROM products WHERE id = ?";
    $stmt = $conn->prepare($query);
    $stmt->execute([$product_id]);
    $product = $stmt->fetch(PDO::FETCH_ASSOC);

    if ($product) {
        $_SESSION['cart'][$product_id] = array(
            'name' => $product['name'],
            'price' => $product['price'],
            'quantity' => $quantity
        );
    }
}

header("Location: index.php");
exit();
?>


<?php
session_start();
require 'db_connection.php';

function calculate_total($cart) {
    $total = 0;
    foreach ($cart as $item) {
        $total += $item['price'] * $item['quantity'];
    }
    return $total;
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <h1>Your Shopping Cart</h1>
    <?php if (!empty($_SESSION['cart'])): ?>
        <table>
            <thead>
                <tr>
                    <th>Product</th>
                    <th>Quantity</th>
                    <th>Price</th>
                    <th>Total</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
                <?php foreach ($_SESSION['cart'] as $id => $item): ?>
                    <tr>
                        <td><?php echo $item['name']; ?></td>
                        <td><input type="number" name="quantity-<?php echo $id; ?>" value="<?php echo $item['quantity']; ?>"></td>
                        <td>$<?php echo number_format($item['price'], 2); ?></td>
                        <td>$<?php echo number_format($item['price'] * $item['quantity'], 2); ?></td>
                        <td><a href="remove_from_cart.php?id=<?php echo $id; ?>">Remove</a></td>
                    </tr>
                <?php endforeach; ?>
            </tbody>
        </table>
        <p>Total: $<?php echo number_format(calculate_total($_SESSION['cart']), 2); ?></p>
        <form action="update_cart.php" method="post">
            <button type="submit">Update Cart</button>
        </form>
        <a href="checkout.php">Proceed to Checkout</a>
    <?php else: ?>
        <p>Your cart is empty.</p>
    <?php endif; ?>
</body>
</html>


<?php
session_start();

foreach ($_POST as $key => $value) {
    if (strpos($key, 'quantity-') === 0) {
        $id = substr($key, 9);
        $_SESSION['cart'][$id]['quantity'] = (int)$value;
    }
}

header("Location: cart.php");
exit();
?>


<?php
session_start();

$id = $_GET['id'];
if (!empty($_SESSION['cart'][$id])) {
    unset($_SESSION['cart'][$id]);
}

header("Location: cart.php");
exit();
?>


<?php
session_start();

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $name = $_POST['name'];
    $email = $_POST['email'];
    $address = $_POST['address'];
    // Add more validation as needed

    if (empty($name) || empty($email) || empty($address)) {
        die("All fields are required.");
    }

    // Simulate payment processing
    $payment_processed = true; // In real application, integrate with payment gateway

    if ($payment_processed) {
        // Create order and save to database
        require 'db_connection.php';

        try {
            $conn->beginTransaction();

            $order_query = "INSERT INTO orders (user_id, total_price, order_date, payment_status) VALUES (?, ?, NOW(), ?)";
            $stmt = $conn->prepare($order_query);
            $total_price = calculate_total($_SESSION['cart']);
            $stmt->execute([1, $total_price, 'paid']);

            $order_id = $conn->lastInsertId();

            foreach ($_SESSION['cart'] as $product_id => $item) {
                $order_item_query = "INSERT INTO order_items (order_id, product_id, quantity, price) VALUES (?, ?, ?, ?)";
                $stmt = $conn->prepare($order_item_query);
                $stmt->execute([$order_id, $product_id, $item['quantity'], $item['price']]);

                // Update product stock
                $update_stock = "UPDATE products SET stock = stock - ? WHERE id = ?";
                $stmt = $conn->prepare($update_stock);
                $stmt->execute([$item['quantity'], $product_id]);
            }

            $_SESSION['cart'] = array();
            header("Location: thank_you.php?order_id=$order_id");
        } catch (PDOException $e) {
            $conn->rollBack();
            die("Error processing order: " . $e->getMessage());
        }
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
</head>
<body>
    <?php if ($_SERVER["REQUEST_METHOD"] == "POST" && !$payment_processed): ?>
        <p>Payment failed. Please try again.</p>
    <?php endif; ?>

    <h1>Checkout</h1>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <label>Name:</label><br>
        <input type="text" name="name" required><br>

        <label>Email:</label><br>
        <input type="email" name="email" required><br>

        <label>Address:</label><br>
        <input type="text" name="address" required><br>

        <button type="submit">Place Order</button>
    </form>
</body>
</html>


<?php
session_start();
require 'db_connection.php';

$order_id = $_GET['order_id'];

$query = "SELECT o.id, o.total_price, oi.product_id, p.name AS product_name, oi.quantity 
          FROM orders o 
          JOIN order_items oi ON o.id = oi.order_id 
          JOIN products p ON oi.product_id = p.id 
          WHERE o.id = ?";
$stmt = $conn->prepare($query);
$stmt->execute([$order_id]);
$order_details = $stmt->fetchAll(PDO::FETCH_ASSOC);

if (!$order_details) {
    die("Invalid order ID.");
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Thank You</title>
</head>
<body>
    <h1>Thank you for your purchase!</h1>
    <p>Your order ID is: <?php echo $order_id; ?></p>
    <h2>Order Details:</h2>
    <table>
        <thead>
            <tr>
                <th>Product</th>
                <th>Quantity</th>
                <th>Price</th>
            </tr>
        </thead>
        <tbody>
            <?php foreach ($order_details as $detail): ?>
                <tr>
                    <td><?php echo $detail['product_name']; ?></td>
                    <td><?php echo $detail['quantity']; ?></td>
                    <td>$<?php echo number_format($detail['price'] * $detail['quantity'], 2); ?></td>
                </tr>
            <?php endforeach; ?>
        </tbody>
    </table>
    <p>Total: $<?php echo number_format(array_shift($order_details)['total_price'], 2); ?></p>
</body>
</html>


<?php
class Product {
    private $db;

    public function __construct($database_connection) {
        $this->db = $database_connection;
    }

    // Get all products from database
    public function getAllProducts() {
        $query = "SELECT * FROM products";
        $result = $this->db->query($query);
        return $result->fetchAll(PDO::FETCH_ASSOC);
    }

    // Add a new product to the database
    public function addProduct($name, $price, $description, $stock) {
        $query = "INSERT INTO products (name, price, description, stock) 
                  VALUES (:name, :price, :description, :stock)";
        
        $stmt = $this->db->prepare($query);
        $stmt->bindParam(':name', $name);
        $stmt->bindParam(':price', $price);
        $stmt->bindParam(':description', $description);
        $stmt->bindParam(':stock', $stock);
        
        return $stmt->execute();
    }

    // Update a product in the database
    public function updateProduct($id, $name, $price, $description, $stock) {
        $query = "UPDATE products SET 
                  name = :name,
                  price = :price,
                  description = :description,
                  stock = :stock
                  WHERE id = :id";
        
        $stmt = $this->db->prepare($query);
        $stmt->bindParam(':id', $id);
        $stmt->bindParam(':name', $name);
        $stmt->bindParam(':price', $price);
        $stmt->bindParam(':description', $description);
        $stmt->bindParam(':stock', $stock);
        
        return $stmt->execute();
    }

    // Delete a product from the database
    public function deleteProduct($id) {
        $query = "DELETE FROM products WHERE id = :id";
        
        $stmt = $this->db->prepare($query);
        $stmt->bindParam(':id', $id);
        
        return $stmt->execute();
    }
}
?>


<?php
class Order {
    private $db;

    public function __construct($database_connection) {
        $this->db = $database_connection;
    }

    // Get all orders from database
    public function getAllOrders() {
        $query = "SELECT * FROM orders";
        $result = $this->db->query($query);
        return $result->fetchAll(PDO::FETCH_ASSOC);
    }

    // Add a new order to the database
    public function addOrder($user_id, $product_id, $quantity, $total_price) {
        $query = "INSERT INTO orders (user_id, product_id, quantity, total_price) 
                  VALUES (:user_id, :product_id, :quantity, :total_price)";
        
        $stmt = $this->db->prepare($query);
        $stmt->bindParam(':user_id', $user_id);
        $stmt->bindParam(':product_id', $product_id);
        $stmt->bindParam(':quantity', $quantity);
        $stmt->bindParam(':total_price', $total_price);
        
        return $stmt->execute();
    }
}
?>


<?php
session_start();

include('config/database.php');
include('classes/Product.php');

$product = new Product($db);

if (isset($_GET['action']) && $_GET['action'] == 'add_to_cart') {
    $product_id = intval($_GET['id']);
    
    // Check if product exists
    $product_data = $product->getAllProducts();
    foreach ($product_data as $p) {
        if ($p['id'] == $product_id) {
            $item = array(
                'id' => $p['id'],
                'name' => $p['name'],
                'price' => $p['price'],
                'quantity' => 1
            );
            
            if (isset($_SESSION['cart'])) {
                $found = false;
                foreach ($_SESSION['cart'] as &$item_in_cart) {
                    if ($item_in_cart['id'] == $product_id) {
                        $item_in_cart['quantity']++;
                        $found = true;
                    }
                }
                if (!$found) {
                    $_SESSION['cart'][] = $item;
                }
            } else {
                $_SESSION['cart'] = array($item);
            }
        }
    }
}

// Fetch all products
$products = $product->getAllProducts();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Store</title>
</head>
<body>
    <h1>Welcome to our store</h1>
    
    <?php foreach ($products as $p): ?>
        <div>
            <h2><?php echo $p['name']; ?></h2>
            <p><?php echo $p['description']; ?></p>
            <p>Price: <?php echo $p['price']; ?> $</p>
            <a href="index.php?action=add_to_cart&id=<?php echo $p['id']; ?>">Add to cart</a>
        </div>
    <?php endforeach; ?>

    <h2>Your Cart:</h2>
    <?php if (!empty($_SESSION['cart'])): ?>
        <?php foreach ($_SESSION['cart'] as $item): ?>
            <div>
                <p><?php echo $item['name']; ?></p>
                <p>Quantity: <?php echo $item['quantity']; ?></p>
                <p>Price: <?php echo $item['price'] * $item['quantity']; ?> $</p>
            </div>
        <?php endforeach; ?>
    <?php else: ?>
        <p>Your cart is empty.</p>
    <?php endif; ?>

    <?php if (!empty($_SESSION['cart'])): ?>
        <a href="checkout.php">Checkout</a>
    <?php endif; ?>
</body>
</html>


<?php
session_start();

include('config/database.php');
include('classes/Product.php');
include('classes/Order.php');

$product = new Product($db);
$order = new Order($db);

if (isset($_SESSION['cart'])) {
    $cart_total = 0;
    
    foreach ($_SESSION['cart'] as $item) {
        $cart_total += ($item['price'] * $item['quantity']);
    }
}

if (isset($_POST['submit_order'])) {
    // Process the order
    if (!empty($_SESSION['cart'])) {
        foreach ($_SESSION['cart'] as $item) {
            $order->addOrder(1, $item['id'], $item['quantity'], $item['price'] * $item['quantity']);
        }
        
        unset($_SESSION['cart']);
        echo "Order placed successfully!";
    } else {
        echo "Your cart is empty.";
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
</head>
<body>
    <h1>Review your order</h1>
    
    <?php if (!empty($_SESSION['cart'])): ?>
        <?php foreach ($_SESSION['cart'] as $item): ?>
            <div>
                <p><?php echo $item['name']; ?></p>
                <p>Quantity: <?php echo $item['quantity']; ?></p>
                <p>Price: <?php echo $item['price'] * $item['quantity']; ?> $</p>
            </div>
        <?php endforeach; ?>
        
        <p>Total price: <?php echo $cart_total; ?> $</p>
        
        <form method="POST" action="">
            <input type="hidden" name="submit_order" value="1">
            <input type="submit" value="Place Order">
        </form>
    <?php else: ?>
        <p>Your cart is empty.</p>
    <?php endif; ?>

    <a href="index.php">Back to store</a>
</body>
</html>


<?php
$host = 'localhost';
$dbname = 'your_database_name';
$user = 'your_username';
$password = 'your_password';

try {
    $db = new PDO("mysql:host=$host;dbname=$dbname", $user, $password);
    $db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}
?>


<?php
require_once 'db_connect.php';

// Fetch all products from the database
$sql = "SELECT * FROM products";
$result = $conn->query($sql);

if (!$result) {
    die("Error fetching products: " . $conn->error);
}
?>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Product List</title>
    <style>
        body { font-family: Arial, sans-serif; }
        .product-grid { display: grid; grid-template-columns: repeat(3, 1fr); gap: 20px; padding: 20px; }
        .product-card { border: 1px solid #ddd; padding: 15px; text-align: center; }
    </style>
</head>
<body>
    <h1>Available Products</h1>
    <div class="product-grid">
        <?php while ($row = $result->fetch_assoc()) { ?>
            <div class="product-card">
                <img src="<?php echo $row['image']; ?>" alt="<?php echo $row['name']; ?>" width="200" height="200">
                <h3><?php echo $row['name']; ?></h3>
                <p>Price: <?php echo '$' . number_format($row['price'], 2); ?></p>
                <form action="cart.php" method="post">
                    <input type="hidden" name="product_id" value="<?php echo $row['id']; ?>">
                    <input type="number" name="quantity" min="1" max="<?php echo $row['stock']; ?>" value="1">
                    <button type="submit">Add to Cart</button>
                </form>
            </div>
        <?php } ?>
    </div>
</body>
</html>


<?php
session_start();
require_once 'db_connect.php';

// Initialize cart if not exists
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add product to cart
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $product_id = intval($_POST['product_id']);
    $quantity = intval($_POST['quantity']);

    // Check if product is already in cart
    if (isset($_SESSION['cart'][$product_id])) {
        $_SESSION['cart'][$product_id]['quantity'] += $quantity;
    } else {
        $sql = "SELECT name, price FROM products WHERE id = ?";
        $stmt = $conn->prepare($sql);
        $stmt->bind_param('i', $product_id);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($row = $result->fetch_assoc()) {
            $_SESSION['cart'][$product_id] = array(
                'name' => $row['name'],
                'price' => $row['price'],
                'quantity' => $quantity
            );
        }
    }
}

// Calculate total amount in cart
$total = 0;
foreach ($_SESSION['cart'] as $item) {
    $total += ($item['price'] * $item['quantity']);
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Shopping Cart</title>
    <style>
        body { font-family: Arial, sans-serif; }
        .cart-table { width: 100%; border-collapse: collapse; margin: 20px 0; }
        .cart-table th, .cart-table td { padding: 12px; text-align: left; border-bottom: 1px solid #ddd; }
    </style>
</head>
<body>
    <h2>Your Shopping Cart</h2>
    <table class="cart-table">
        <thead>
            <tr>
                <th>Product Name</th>
                <th>Quantity</th>
                <th>Price</th>
                <th>Total</th>
            </tr>
        </thead>
        <tbody>
            <?php foreach ($_SESSION['cart'] as $id => $item): ?>
                <tr>
                    <td><?php echo $item['name']; ?></td>
                    <td><?php echo $item['quantity']; ?></td>
                    <td><?php echo '$' . number_format($item['price'], 2); ?></td>
                    <td><?php echo '$' . number_format(($item['price'] * $item['quantity']), 2); ?></td>
                </tr>
            <?php endforeach; ?>
        </tbody>
    </table>
    <h3>Total: <?php echo '$' . number_format($total, 2); ?></h3>
    <a href="checkout.php">Proceed to Checkout</a>
    <br><br>
    <a href="index.php">Continue Shopping</a>
</body>
</html>


<?php
session_start();
require_once 'db_connect.php';

// Check if user is logged in
if (!isset($_SESSION['user_id'])) {
    header("Location: login.php");
    exit();
}

$total = 0;
foreach ($_SESSION['cart'] as $item) {
    $total += ($item['price'] * $item['quantity']);
}
?>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Checkout</title>
    <style>
        body { font-family: Arial, sans-serif; }
        .checkout-form { max-width: 600px; margin: 20px auto; padding: 20px; }
        .form-group { margin-bottom: 15px; }
        .form-group label { display: block; margin-bottom: 5px; }
        input[type="text"], input[type="number"] { width: 100%; padding: 8px; border: 1px solid #ddd; }
    </style>
</head>
<body>
    <div class="checkout-form">
        <h2>Checkout - Total: <?php echo '$' . number_format($total, 2); ?></h2>
        <form action="process_order.php" method="post">
            <div class="form-group">
                <label>Card Number:</label>
                <input type="text" name="card_number" required pattern="[0-9]{16}">
            </div>
            <div class="form-group">
                <label>CVV:</label>
                <input type="text" name="cvv" required pattern="[0-9]{3}">
            </div>
            <div class="form-group">
                <label>Expiration Date (MM/YY):</label>
                <input type="text" name="expiration_date" required pattern="(0[1-9]|1[0-2])\/\d{2}">
            </div>
            <button type="submit">Complete Purchase</button>
        </form>
    </div>
</body>
</html>


<?php
session_start();
require_once 'db_connect.php';

if (!isset($_SESSION['user_id'])) {
    header("Location: login.php");
    exit();
}

$user_id = $_SESSION['user_id'];
$total_amount = 0;

foreach ($_SESSION['cart'] as $item) {
    $total_amount += ($item['price'] * $item['quantity']);
}

// Insert order
$sql_order = "INSERT INTO orders (user_id, total_amount) VALUES (?, ?)";
$stmt_order = $conn->prepare($sql_order);
$stmt_order->bind_param("id", $user_id, $total_amount);

if (!$stmt_order->execute()) {
    die("Error inserting order: " . $stmt_order->error);
}

$order_id = $stmt_order->insert_id;

// Insert order details
foreach ($_SESSION['cart'] as $product_id => $item) {
    $sql_details = "INSERT INTO order_details (order_id, product_id, quantity, price) VALUES (?, ?, ?, ?)";
    $stmt_details = $conn->prepare($sql_details);
    $stmt_details->bind_param("iiid", $order_id, $product_id, $item['quantity'], $item['price']);

    if (!$stmt_details->execute()) {
        die("Error inserting order details: " . $stmt_details->error);
    }
}

// Insert payment info
$card_number = $_POST['card_number'];
$cvv = $_POST['cvv'];
$expiration_date = $_POST['expiration_date'];

$sql_payment = "INSERT INTO payment_info (order_id, card_number, cvv, expiration_date) VALUES (?, ?, ?, ?)";
$stmt_payment = $conn->prepare($sql_payment);
$stmt_payment->bind_param("isss", $order_id, $card_number, $cvv, $expiration_date);

if (!$stmt_payment->execute()) {
    die("Error inserting payment info: " . $stmt_payment->error);
}

// Clear cart
unset($_SESSION['cart']);

// Redirect to confirmation page
header("Location: order_confirmation.php?order_id=" . $order_id);
exit();


<?php
session_start();
require_once 'db_connect.php';

if (!isset($_GET['order_id'])) {
    header("Location: index.php");
    exit();
}

$order_id = intval($_GET['order_id']);
?>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Order Confirmation</title>
    <style>
        body { font-family: Arial, sans-serif; }
        .confirmation { max-width: 600px; margin: 20px auto; padding: 20px; text-align: center; }
    </style>
</head>
<body>
    <div class="confirmation">
        <h1>Thank You for Your Order!</h1>
        <p>Your order ID is <?php echo $order_id; ?>.</p>
        <p>We will send your order soon. Please check your email for confirmation and updates.</p>
        <a href="index.php">Back to Shopping</a>
    </div>
</body>
</html>


<?php
// Database connection
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "purchase_db";

// Create connection
$conn = mysqli_connect($servername, $username, $password, $dbname);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Handle form submission
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Sanitize input
    $productName = htmlspecialchars($_POST['product_name']);
    $price = (float)$_POST['price'];
    $quantity = (int)$_POST['quantity'];
    
    // Calculate total price
    $totalPrice = $price * $quantity;
    
    // Insert order into database
    $sql = "INSERT INTO orders (product_name, price, quantity, total_price, purchase_date)
    VALUES ('$productName', '$price', '$quantity', '$totalPrice', NOW())";
    
    if (mysqli_query($conn, $sql)) {
        // Order successful
        echo "<script>alert('Purchase successful! Your order has been recorded.'); window.location.href = 'purchase.php';</script>";
    } else {
        // Error occurred
        echo "Error: " . $sql . "<br>" . mysqli_error($conn);
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Purchase Page</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 20px;
            background-color: #f5f5f5;
        }
        .purchase-form {
            max-width: 600px;
            margin: 0 auto;
            padding: 20px;
            background-color: white;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }
        .form-group {
            margin-bottom: 15px;
        }
        label {
            display: block;
            margin-bottom: 5px;
        }
        input[type="text"], input[type="number"] {
            width: 100%;
            padding: 8px;
            border: 1px solid #ddd;
            border-radius: 4px;
        }
        button {
            background-color: #4CAF50;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
        button:hover {
            background-color: #45a049;
        }
        .success-message {
            color: green;
            margin-top: 10px;
        }
    </style>
</head>
<body>
    <div class="purchase-form">
        <h2>Purchase Product</h2>
        
        <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="POST" onsubmit="return validateForm()">
            <div class="form-group">
                <label for="product_name">Product Name:</label>
                <input type="text" id="product_name" name="product_name" required>
            </div>
            
            <div class="form-group">
                <label for="price">Price:</label>
                <input type="number" id="price" name="price" step="0.01" required>
            </div>
            
            <div class="form-group">
                <label for="quantity">Quantity:</label>
                <input type="number" id="quantity" name="quantity" min="1" required>
            </div>
            
            <button type="submit">Purchase</button>
        </form>
        
        <?php
        // Display purchase history
        $sql = "SELECT * FROM orders ORDER BY purchase_date DESC";
        $result = mysqli_query($conn, $sql);
        
        if (mysqli_num_rows($result) > 0) {
            echo "<h3>Purchase History</h3>";
            echo "<table border='1' style='width: 100%; margin-top: 20px;'>";
            echo "<tr><th>Order ID</th><th>Product Name</th><th>Price</th><th>Quantity</th><th>Total Price</th><th>Purchase Date</th></tr>";
            
            while($row = mysqli_fetch_assoc($result)) {
                echo "<tr>";
                echo "<td>".$row["order_id"]."</td>";
                echo "<td>".$row["product_name"]."</td>";
                echo "<td>".$row["price"]."</td>";
                echo "<td>".$row["quantity"]."</td>";
                echo "<td>".$row["total_price"]."</td>";
                echo "<td>".$row["purchase_date"]."</td>";
                echo "</tr>";
            }
            
            echo "</table>";
        } else {
            echo "<p class='success-message'>No purchases made yet.</p>";
        }
        ?>
    </div>

    <script>
        function validateForm() {
            // Simple form validation
            const productName = document.getElementById('product_name').value;
            const price = document.getElementById('price').value;
            const quantity = document.getElementById('quantity').value;

            if (productName.trim() === '' || price <= 0 || quantity < 1) {
                alert('Please fill in all fields with valid values!');
                return false;
            }
            
            return true;
        }
    </script>
</body>
</html>

<?php
// Close database connection
mysqli_close($conn);
?>


class Product {
    private $db;

    public function __construct($db) {
        $this->db = $db;
    }

    // Get all products
    public function getAllProducts() {
        $query = "SELECT * FROM products";
        $result = $this->db->query($query);
        return $result->fetchAll(PDO::FETCH_ASSOC);
    }

    // Add new product
    public function addProduct($name, $price, $description, $image_path) {
        $query = "INSERT INTO products (name, price, description, image_path) 
                VALUES (?, ?, ?, ?)";
        $stmt = $this->db->prepare($query);
        return $stmt->execute([$name, $price, $description, $image_path]);
    }

    // Search products
    public function searchProducts($keyword) {
        $query = "SELECT * FROM products 
                WHERE name LIKE ? OR description LIKE ?";
        $stmt = $this->db->prepare($query);
        return $stmt->execute(["%$keyword%", "%$keyword%"]);
    }
}


class Cart {
    private $db;
    private $user_id;

    public function __construct($db, $user_id) {
        $this->db = $db;
        $this->user_id = $user_id;
    }

    // Add item to cart
    public function addItem($product_id, $quantity = 1) {
        $query = "INSERT INTO cart (user_id, product_id, quantity)
                VALUES (?, ?, ?)
                ON DUPLICATE KEY UPDATE quantity = quantity + ?";
        $stmt = $this->db->prepare($query);
        return $stmt->execute([$this->user_id, $product_id, $quantity, $quantity]);
    }

    // Get cart items
    public function getCartItems() {
        $query = "SELECT c.*, p.* FROM cart c 
                JOIN products p ON c.product_id = p.id 
                WHERE c.user_id = ?";
        $stmt = $this->db->prepare($query);
        $stmt->execute([$this->user_id]);
        return $stmt->fetchAll(PDO::FETCH_ASSOC);
    }

    // Update quantity
    public function updateQuantity($cart_id, $quantity) {
        $query = "UPDATE cart SET quantity = ?, updated_at = CURRENT_TIMESTAMP 
                WHERE id = ?";
        $stmt = $this->db->prepare($query);
        return $stmt->execute([$quantity, $cart_id]);
    }

    // Remove item from cart
    public function removeItem($cart_id) {
        $query = "DELETE FROM cart WHERE id = ?";
        $stmt = $this->db->prepare($query);
        return $stmt->execute([$cart_id]);
    }

    // Calculate total price
    public function calculateTotal() {
        $query = "SELECT SUM(p.price * c.quantity) as total 
                FROM cart c JOIN products p ON c.product_id = p.id 
                WHERE c.user_id = ?";
        $stmt = $this->db->prepare($query);
        $stmt->execute([$this->user_id]);
        return $stmt->fetch(PDO::FETCH_ASSOC)['total'];
    }

    // Checkout
    public function checkout() {
        // Here you would typically insert into an orders table
        // and then empty the cart
        $this->emptyCart();
        return true;
    }

    // Empty cart
    private function emptyCart() {
        $query = "DELETE FROM cart WHERE user_id = ?";
        $stmt = $this->db->prepare($query);
        $stmt->execute([$this->user_id]);
    }
}


class UserAuth {
    private $db;

    public function __construct($db) {
        $this->db = $db;
    }

    // Register user
    public function register($username, $password) {
        $query = "INSERT INTO users (username, password)
                VALUES (?, ?)";
        $stmt = $this->db->prepare($query);
        return $stmt->execute([$username, md5($password)]);
    }

    // Login user
    public function login($username, $password) {
        $query = "SELECT * FROM users WHERE username = ? AND password = ?";
        $stmt = $this->db->prepare($query);
        $stmt->execute([$username, md5($password)]);
        return $stmt->fetch(PDO::FETCH_ASSOC);
    }

    // Check if user is logged in
    public function isLoggedIn() {
        return isset($_SESSION['user_id']);
    }

    // Logout user
    public function logout() {
        session_unset();
        session_destroy();
    }
}


<?php
require_once 'database.php';
require_once 'Product.php';

$product = new Product($db);

// Get all products
$products = $product->getAllProducts();

?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart - Products</title>
</head>
<body>
    <h1>Available Products</h1>
    
    <?php foreach ($products as $product): ?>
        <div class="product">
            <img src="<?php echo $product['image_path']; ?>" alt="<?php echo $product['name']; ?>">
            <h2><?php echo $product['name']; ?></h2>
            <p><?php echo $product['description']; ?></p>
            <p>Price: $<?php echo number_format($product['price'], 2); ?></p>
            <form action="cart.php" method="post">
                <input type="hidden" name="product_id" value="<?php echo $product['id']; ?>">
                <button type="submit">Add to Cart</button>
            </form>
        </div>
    <?php endforeach; ?>

    <!-- Add your own styling and layout -->
</body>
</html>


<?php
session_start();
require_once 'database.php';
require_once 'Cart.php';

if (!isset($_SESSION['user_id'])) {
    header('Location: login.php');
    exit;
}

$cart = new Cart($db, $_SESSION['user_id']);

// Handle form submissions
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    if (isset($_POST['add_to_cart'])) {
        $product_id = intval($_POST['product_id']);
        $quantity = isset($_POST['quantity']) ? intval($_POST['quantity']) : 1;
        $cart->addItem($product_id, $quantity);
    } elseif (isset($_POST['update_quantity'])) {
        foreach ($_POST['quantity'] as $cart_id => $qty) {
            $cart->updateQuantity($cart_id, intval($qty));
        }
    } elseif (isset($_POST['remove_item'])) {
        $cart->removeItem(intval($_POST['item_id']));
    } elseif (isset($_POST['checkout'])) {
        $cart->checkout();
        header('Location: products.php');
        exit;
    }
}

$items = $cart->getCartItems();
$total = $cart->calculateTotal();

?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <h1>Your Shopping Cart</h1>
    
    <?php if (!empty($items)): ?>
        <form action="cart.php" method="post">
            <table>
                <thead>
                    <tr>
                        <th>Product</th>
                        <th>Quantity</th>
                        <th>Price</th>
                        <th>Total</th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tbody>
                    <?php foreach ($items as $item): ?>
                        <tr>
                            <td><?php echo $item['name']; ?></td>
                            <td>
                                <input type="number" name="quantity[<?php echo $item['id']; ?>]" 
                                       value="<?php echo $item['quantity']; ?>" min="1">
                            </td>
                            <td>$<?php echo number_format($item['price'], 2); ?></td>
                            <td>$<?php echo number_format($item['price'] * $item['quantity'], 2); ?></td>
                            <td>
                                <input type="hidden" name="remove_item_id" value="<?php echo $item['id']; ?>">
                                <button type="submit" name="remove_item">Remove</button>
                            </td>
                        </tr>
                    <?php endforeach; ?>
                </tbody>
            </table>
            
            <div class="cart-total">
                <h3>Total: $<?php echo number_format($total, 2); ?></h3>
                <input type="submit" name="update_quantity" value="Update Cart">
                <input type="submit" name="checkout" value="Checkout">
            </div>
        </form>
    <?php else: ?>
        <p>Your cart is empty!</p>
    <?php endif; ?>

    <a href="products.php">Continue Shopping</a>
</body>
</html>


<?php
try {
    $db = new PDO('mysql:host=localhost;dbname=your_database', 'username', 'password');
    $db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    die("Database connection failed: " . $e->getMessage());
}
?>


// login.php
<?php
session_start();
require_once 'database.php';
require_once 'UserAuth.php';

$user_auth = new UserAuth($db);

if ($user_auth->isLoggedIn()) {
    header('Location: products.php');
    exit;
}

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    if (isset($_POST['login'])) {
        $user = $user_auth->login($_POST['username'], $_POST['password']);
        if ($user) {
            $_SESSION['user_id'] = $user['id'];
            header('Location: products.php');
            exit;
        } else {
            $error = "Invalid username or password";
        }
    } elseif (isset($_POST['register'])) {
        $user_auth->register($_POST['username'], $_POST['password']);
        header('Location: login.php');
        exit;
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login</title>
</head>
<body>
    <?php if (!empty($error)): ?>
        <div class="error"><?php echo $error; ?></div>
    <?php endif; ?>

    <h1>Login</h1>
    <form action="" method="post">
        <input type="text" name="username" placeholder="Username" required>
        <input type="password" name="password" placeholder="Password" required>
        <button type="submit" name="login">Login</button>
    </form>

    <p>Don't have an account? <a href="?action=register">Register here</a></p>

    <?php if (isset($_GET['action']) && $_GET['action'] == 'register'): ?>
        <h1>Register</h1>
        <form action="" method="post">
            <input type="text" name="username" placeholder="Username" required>
            <input type="password" name="password" placeholder="Password" required>
            <button type="submit" name="register">Register</button>
        </form>
    <?php endif; ?>
</body>
</html>


// logout.php
<?php
session_start();
require_once 'UserAuth.php';

$user_auth = new UserAuth($db);
$user_auth->logout();

header('Location: login.php');
exit;
?>


<?php
// Initialize products array
$products = [
    ['id' => 1, 'name' => 'Product 1', 'price' => 29.99],
    ['id' => 2, 'name' => 'Product 2', 'price' => 49.99],
    ['id' => 3, 'name' => 'Product 3', 'price' => 19.99]
];

// Start session
session_start();

// Add to cart functionality
if (isset($_GET['action']) && $_GET['action'] == 'add_to_cart') {
    $productId = $_GET['id'];
    
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }
    
    // Check if product already exists in cart
    if (array_key_exists($productId, $_SESSION['cart'])) {
        $_SESSION['cart'][$productId]['quantity']++;
    } else {
        foreach ($products as $product) {
            if ($product['id'] == $productId) {
                $_SESSION['cart'][$productId] = array(
                    'name' => $product['name'],
                    'price' => $product['price'],
                    'quantity' => 1
                );
                break;
            }
        }
    }
}

// Function to calculate total price
function calculateTotal() {
    global $products;
    
    if (!isset($_SESSION['cart'])) {
        return 0;
    }
    
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += ($item['price'] * $item['quantity']);
    }
    
    return $total;
}

// Function to display cart contents
function displayCart() {
    global $products;
    
    if (!isset($_SESSION['cart'])) {
        echo "Your cart is empty.";
        return;
    }
    
    foreach ($_SESSION['cart'] as $id => $item) {
        echo "<div class='cart-item'>";
        echo "<h3>{$item['name']}</h3>";
        echo "<p>Price: \${$item['price']}</p>";
        echo "<p>Quantity: {$item['quantity']}</p>";
        echo "<a href='?action=remove_from_cart&id=$id'>Remove</a>";
        echo "</div>";
    }
}

// Process purchase
if (isset($_POST['submit'])) {
    // Connect to database
    $db = new mysqli('localhost', 'username', 'password', 'database_name');
    
    if ($db->connect_error) {
        die("Connection failed: " . $db->connect_error);
    }
    
    // Sanitize inputs
    $name = $db->real_escape_string($_POST['name']);
    $email = $db->real_escape_string($_POST['email']);
    $address = $db->real_escape_string($_POST['address']);
    
    // Insert order into database
    $orderSql = "INSERT INTO orders (name, email, address) VALUES ('$name', '$email', '$address')";
    $db->query($orderSql);
    $orderId = $db->insert_id;
    
    // Insert order items
    if (isset($_SESSION['cart'])) {
        foreach ($_SESSION['cart'] as $id => $item) {
            $itemSql = "INSERT INTO order_items (order_id, product_id, quantity, price) 
                        VALUES ('$orderId', '$id', '{$item['quantity']}', '{$item['price']}')";
            $db->query($itemSql);
        }
    }
    
    // Clear cart
    unset($_SESSION['cart']);
    
    // Redirect to thank you page
    header('Location: receipt.php?order_id=' . $orderId);
    exit();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Purchase System</title>
    <style>
        /* Add your CSS styles here */
        .product {
            border: 1px solid #ddd;
            padding: 20px;
            margin-bottom: 20px;
        }
        
        .cart-item {
            border: 1px solid #ddd;
            padding: 20px;
            margin-bottom: 10px;
        }
    </style>
</head>
<body>
    <h1>Products</h1>
    
    <?php foreach ($products as $product): ?>
        <div class="product">
            <h3><?php echo $product['name']; ?></h3>
            <p>Price: $<?php echo $product['price']; ?></p>
            <a href="?action=add_to_cart&id=<?php echo $product['id']; ?>">Add to Cart</a>
        </div>
    <?php endforeach; ?>

    <h2>Your Cart</h2>
    <?php displayCart(); ?>
    
    <?php if (isset($_SESSION['cart'])): ?>
        <h3>Total: $<?php echo calculateTotal(); ?></h3>
        <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
            <input type="text" name="name" placeholder="Name" required><br>
            <input type="email" name="email" placeholder="Email" required><br>
            <textarea name="address" placeholder="Address" required></textarea><br>
            <button type="submit" name="submit">Purchase</button>
        </form>
    <?php endif; ?>
</body>
</html>


<?php
session_start();
$order_id = $_GET['order_id'];

// Connect to database
$db = new mysqli('localhost', 'username', 'password', 'database_name');

if ($db->connect_error) {
    die("Connection failed: " . $db->connect_error);
}

// Get order details
$orderSql = "SELECT * FROM orders WHERE id = '$order_id'";
$result = $db->query($orderSql);
$order = $result->fetch_assoc();

// Get order items
$itemSql = "SELECT * FROM order_items WHERE order_id = '$order_id'";
$itemResult = $db->query($itemSql);

?>

<!DOCTYPE html>
<html>
<head>
    <title>Receipt</title>
    <style>
        /* Add your CSS styles here */
    </style>
</head>
<body>
    <h1>Thank you for your purchase!</h1>
    
    <h2>Order Details:</h2>
    <p>Name: <?php echo $order['name']; ?></p>
    <p>Email: <?php echo $order['email']; ?></p>
    <p>Address: <?php echo $order['address']; ?></p>
    
    <h3>Items Purchased:</h3>
    <?php while ($item = $itemResult->fetch_assoc()): ?>
        <div class="cart-item">
            <h3><?php echo $products[$item['product_id']]['name']; ?></h3>
            <p>Price: $<?php echo $item['price']; ?></p>
            <p>Quantity: <?php echo $item['quantity']; ?></p>
        </div>
    <?php endwhile; ?>
    
    <p>Your order ID is: <?php echo $order_id; ?></p>
</body>
</html>


<?php
// Database connection
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "shop";

$conn = new mysqli($servername, $username, $password, $dbname);
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to display products
function displayProducts() {
    global $conn;
    $sql = "SELECT * FROM products";
    $result = $conn->query($sql);

    if ($result->num_rows > 0) {
        while($row = $result->fetch_assoc()) {
            echo "<div class='product'>";
            echo "<h3>".$row["name"]."</h3>";
            echo "<p>".$row["description"]."</p>";
            echo "<p>Price: $".$row["price"]."</p>";
            echo "<form action='add_to_cart.php' method='post'>";
            echo "<input type='hidden' name='id' value='".$row["id"]."'>";
            echo "<input type='number' name='quantity' min='1' max='".$row["stock"]."'>";
            echo "<button type='submit'>Add to Cart</button>";
            echo "</form>";
            echo "</div>";
        }
    } else {
        echo "No products found";
    }
}

// Function to add items to cart
function addToCart($productId, $quantity) {
    global $conn;
    
    // Check if product exists and has sufficient stock
    $sql = "SELECT * FROM products WHERE id = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("i", $productId);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        $row = $result->fetch_assoc();
        
        // Check if item already exists in cart
        if (isset($_SESSION['cart'][$productId])) {
            $existingQuantity = $_SESSION['cart'][$productId]['quantity'];
            $newQuantity = $existingQuantity + $quantity;
            
            // Update quantity only if within stock limit
            if ($newQuantity <= $row["stock"]) {
                $_SESSION['cart'][$productId]['quantity'] = $newQuantity;
            }
        } else {
            $_SESSION['cart'][$productId] = array(
                'id' => $productId,
                'name' => $row['name'],
                'price' => $row['price'],
                'quantity' => $quantity
            );
        }
    }

    header("Location: cart.php");
}

// Function to update cart quantity
function updateCart($productId, $newQuantity) {
    if (isset($_SESSION['cart'][$productId])) {
        $_SESSION['cart'][$productId]['quantity'] = $newQuantity;
    }
    header("Location: cart.php");
}

// Function to remove item from cart
function removeFromCart($productId) {
    unset($_SESSION['cart'][$productId]);
    header("Location: cart.php");
}

// Function to process checkout
function processCheckout() {
    global $conn;

    if (empty($_POST) || empty($_SESSION['cart'])) {
        return;
    }

    // Validate input data
    $name = sanitizeInput($_POST['name']);
    $email = sanitizeInput($_POST['email']);
    $address = sanitizeInput($_POST['address']);
    $totalAmount = calculateTotal();

    if (empty($name) || empty($email) || empty($address)) {
        return "Please fill in all required fields";
    }

    // Deduct items from stock
    foreach ($_SESSION['cart'] as $item) {
        $sql = "UPDATE products SET stock = stock - ? WHERE id = ?";
        $stmt = $conn->prepare($sql);
        $stmt->bind_param("ii", $item['quantity'], $item['id']);
        if (!$stmt->execute()) {
            return "Error updating stock";
        }
    }

    // Insert order into database
    $sql = "INSERT INTO orders (name, email, address, total_amount) VALUES (?, ?, ?, ?)";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("sssd", $name, $email, $address, $totalAmount);

    if (!$stmt->execute()) {
        return "Error processing order";
    }

    $orderId = $stmt->insert_id;

    // Insert order items
    foreach ($_SESSION['cart'] as $item) {
        $sql = "INSERT INTO order_items (order_id, product_id, quantity, price) VALUES (?, ?, ?, ?)";
        $stmt = $conn->prepare($sql);
        $stmt->bind_param("iiid", $orderId, $item['id'], $item['quantity'], $item['price']);
        if (!$stmt->execute()) {
            return "Error saving order items";
        }
    }

    // Clear cart
    unset($_SESSION['cart']);

    return "Order processed successfully";
}

// Function to calculate total amount
function calculateTotal() {
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += ($item['price'] * $item['quantity']);
    }
    return $total;
}

// Function to sanitize input data
function sanitizeInput($data) {
    $data = trim($data);
    $data = stripslashes($data);
    $data = htmlspecialchars($data);
    return $data;
}
?>


<!DOCTYPE html>
<html>
<head>
    <title>Product List</title>
</head>
<body>
    <?php
    // Connect to database (replace with your credentials)
    $conn = mysqli_connect("localhost", "root", "", "shopping_cart");
    
    // Fetch products from database
    $result = mysqli_query($conn, "SELECT * FROM products");
    ?>
    
    <h1>Products</h1>
    <?php while ($row = mysqli_fetch_assoc($result)) { ?>
        <div class="product">
            <h2><?php echo $row['name']; ?></h2>
            <p>$<?php echo number_format($row['price'], 2); ?></p>
            <form action="add_to_cart.php" method="POST">
                <input type="hidden" name="id" value="<?php echo $row['id']; ?>">
                <input type="hidden" name="name" value="<?php echo $row['name']; ?>">
                <input type="hidden" name="price" value="<?php echo $row['price']; ?>">
                <input type="number" name="quantity" min="1" max="99" value="1">
                <button type="submit">Add to Cart</button>
            </form>
        </div>
    <?php } ?>
    
    <p><a href="cart.php">View Cart</a></p>
</body>
</html>


<?php
session_start();

// Initialize cart if not exists
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Get product details from POST
$id = isset($_POST['id']) ? intval($_POST['id']) : 0;
$name = isset($_POST['name']) ? $_POST['name'] : '';
$price = isset($_POST['price']) ? floatval($_POST['price']) : 0.0;
$quantity = isset($_POST['quantity']) ? intval($_POST['quantity']) : 1;

// Add to cart
if ($id && $name && $price > 0) {
    if (isset($_SESSION['cart'][$id])) {
        $_SESSION['cart'][$id]['quantity'] += $quantity;
    } else {
        $_SESSION['cart'][$id] = array(
            'id' => $id,
            'name' => $name,
            'price' => $price,
            'quantity' => $quantity
        );
    }
}

// Redirect back to product list
header("Location: index.php");
exit();


<?php
session_start();

?>
<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <?php if (!empty($_SESSION['cart'])) { ?>
        <h1>Your Shopping Cart</h1>
        <table border="1">
            <tr>
                <th>Product Name</th>
                <th>Price</th>
                <th>Quantity</th>
                <th>Total</th>
                <th>Action</th>
            </tr>
            <?php 
            $total = 0;
            foreach ($_SESSION['cart'] as $item) {
                $total += ($item['price'] * $item['quantity']);
                ?>
                <tr>
                    <td><?php echo $item['name']; ?></td>
                    <td>$<?php echo number_format($item['price'], 2); ?></td>
                    <td><?php echo $item['quantity']; ?></td>
                    <td>$<?php echo number_format(($item['price'] * $item['quantity']), 2); ?></td>
                    <td><a href="remove_from_cart.php?id=<?php echo $item['id']; ?>">Remove</a></td>
                </tr>
            <?php } ?>
        </table>
        <h2>Total: $<?php echo number_format($total, 2); ?></h2>
        <p><a href="checkout.php">Checkout</a></p>
    <?php } else { ?>
        <p>Your cart is empty. <a href="index.php">Continue Shopping</a></p>
    <?php } ?>
</body>
</html>


<?php
session_start();

// Get product ID from query string
$id = isset($_GET['id']) ? intval($_GET['id']) : 0;

if ($id && isset($_SESSION['cart'][$id])) {
    unset($_SESSION['cart'][$id]);
}

// Redirect back to cart page
header("Location: cart.php");
exit();


<?php
session_start();

if (isset($_POST['submit'])) {
    // Sanitize inputs
    $name = mysqli_real_escape_string($conn, htmlspecialchars(trim($_POST['name'])));
    $email = mysqli_real_escape_string($conn, htmlspecialchars(trim($_POST['email'])));
    $address = mysqli_real_escape_string($conn, htmlspecialchars(trim($_POST['address'])));
    $city = mysqli_real_escape_string($conn, htmlspecialchars(trim($_POST['city'])));
    $state = mysqli_real_escape_string($conn, htmlspecialchars(trim($_POST['state'])));
    $zip_code = mysqli_real_escape_string($conn, htmlspecialchars(trim($_POST['zip'])));

    // Validate inputs (simplified)
    if ($name && $email && $address && $city && $state && $zip_code) {
        // Process payment using Stripe SDK
        require_once('stripe-php/init.php');
        \Stripe\Stripe::setApiKey("your_stripe_secret_key");
        
        try {
            $charge = \Stripe\Charge::create(array(
                "amount" => $_SESSION['total'] * 100, // Convert to cents
                "currency" => "usd",
                "source" => $_POST['stripeToken'],
                "description" => "Order from " . $email
            ));
            
            if ($charge->status == 'succeeded') {
                // Store order in database
                mysqli_query($conn, "INSERT INTO orders (name, email, address, city, state, zip_code) VALUES ('$name', '$email', '$address', '$city', '$state', '$zip_code')");
                
                $order_id = mysqli_insert_id($conn);
                
                foreach ($_SESSION['cart'] as $item) {
                    mysqli_query($conn, "INSERT INTO order_items (order_id, product_id, quantity, price) VALUES ('$order_id', '{$item['id']}', '{$item['quantity']}', '{$item['price']}')");
                }
                
                // Clear cart
                unset($_SESSION['cart']);
                
                // Show success message
                $_SESSION['success_message'] = "Thank you for your order!";
                header("Location: thank_you.php");
                exit();
            } else {
                die("Payment failed. Please try again.");
            }
        } catch (\Stripe\Exception\CardException $e) {
            die($e->getMessage());
        }
    } else {
        die("Please fill in all required fields.");
    }
}
?>
<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
    <!-- Include Stripe.js -->
    <script src="https://checkout.stripe.com/checkout.js"></script>
</head>
<body>
    <?php if (isset($_SESSION['error'])) { ?>
        <p style="color: red;"><?php echo $_SESSION['error']; ?></p>
        <?php unset($_SESSION['error']); ?>
    <?php } ?>
    
    <h1>Checkout</h1>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="POST">
        <div>
            <label for="name">Name:</label>
            <input type="text" id="name" name="name" required>
        </div>
        
        <div>
            <label for="email">Email:</label>
            <input type="email" id="email" name="email" required>
        </div>
        
        <div>
            <label for="address">Address:</label>
            <input type="text" id="address" name="address" required>
        </div>
        
        <div>
            <label for="city">City:</label>
            <input type="text" id="city" name="city" required>
        </div>
        
        <div>
            <label for="state">State:</label>
            <input type="text" id="state" name="state" required>
        </div>
        
        <div>
            <label for="zip">Zip Code:</label>
            <input type="text" id="zip" name="zip" pattern="[0-9]{5}" required>
        </div>

        <div id="stripe_checkout"></div>

        <button type="submit" name="submit">Place Order</button>
    </form>

    <script>
        var checkout = StripeCheckout.configure({
            key: 'your_stripe_publishable_key',
            image: 'https://stripe.com/img/documentation/checkout/marketplace.png',
            locale: 'auto'
        });

        document.getElementById('stripe_checkout').addEventListener('click', function(e) {
            e.preventDefault();
            checkout.open({
                amount: <?php echo $_SESSION['total'] * 100; ?>, // Amount in cents
                currency: 'usd',
                description: 'Order Payment'
            });
        });

        checkout.on('success', function(result) {
            document.getElementById('stripeToken').value = result.id;
            document.querySelector('form').submit();
        });

        checkout.on('error', function(error) {
            console.error('Error:', error);
        });
    </script>
</body>
</html>


<?php
session_start();

// Display any success message if present
if (isset($_SESSION['success_message'])) {
    echo "<h1>Thank You!</h1>";
    echo "<p>" . $_SESSION['success_message'] . "</p>";
    unset($_SESSION['success_message']);
} else {
    echo "<h1>Order Confirmation</h1>";
    echo "<p>Your order has been received. Thank you for shopping with us!</p>";
}
?>


<?php
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    die("Could not connect to the database: " . $e->getMessage());
}
?>


<?php
session_start();
include 'db_connection.php';

// Fetch all products from the database
try {
    $stmt = $conn->query('SELECT * FROM products');
    $products = $stmt->fetchAll(PDO::FETCH_ASSOC);
} catch(PDOException $e) {
    die("Error fetching products: " . $e->getMessage());
}

?>

<!DOCTYPE html>
<html>
<head>
    <title>Product List</title>
</head>
<body>
    <h1>Products for Sale</h1>
    <?php foreach ($products as $product): ?>
        <div>
            <h2><?php echo $product['name']; ?></h2>
            <p><?php echo $product['description']; ?></p>
            <p>Price: <?php echo $product['price']; ?> USD</p>
            <form action="add_to_cart.php" method="post">
                <input type="hidden" name="product_id" value="<?php echo $product['id']; ?>">
                <input type="number" name="quantity" min="1" max="5" placeholder="Enter quantity">
                <button type="submit">Add to Cart</button>
            </form>
        </div>
    <?php endforeach; ?>
</body>
</html>


<?php
session_start();
include 'db_connection.php';

if (isset($_POST['product_id']) && isset($_POST['quantity'])) {
    $product_id = $_POST['product_id'];
    $quantity = $_POST['quantity'];

    try {
        $stmt = $conn->prepare('SELECT * FROM products WHERE id = :id');
        $stmt->bindParam(':id', $product_id);
        $stmt->execute();
        $product = $stmt->fetch(PDO::FETCH_ASSOC);

        if ($product) {
            // Add or update the cart session
            $cart_item = array(
                'id' => $product['id'],
                'name' => $product['name'],
                'price' => $product['price'],
                'quantity' => $quantity
            );

            if (isset($_SESSION['cart'][$product_id])) {
                // Update quantity
                $_SESSION['cart'][$product_id]['quantity'] += $quantity;
            } else {
                // Add new item
                $_SESSION['cart'][$product_id] = $cart_item;
            }

            echo "<script>alert('Product added to cart');</script>";
        }
    } catch(PDOException $e) {
        die("Error adding product: " . $e->getMessage());
    }
}

header('Location: view_cart.php');
?>


<?php
session_start();
include 'db_connection.php';

?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <h1>Your Shopping Cart</h1>
    <?php if (!empty($_SESSION['cart'])): ?>
        <table border="1">
            <tr>
                <th>Product Name</th>
                <th>Quantity</th>
                <th>Price</th>
                <th>Total</th>
            </tr>
            <?php foreach ($_SESSION['cart'] as $product): ?>
                <tr>
                    <td><?php echo $product['name']; ?></td>
                    <td><?php echo $product['quantity']; ?></td>
                    <td>$<?php echo number_format($product['price'], 2); ?></td>
                    <td>$<?php echo number_format($product['price'] * $product['quantity'], 2); ?></td>
                </tr>
            <?php endforeach; ?>
        </table>
        <p><a href="checkout.php">Proceed to Checkout</a></p>
    <?php else: ?>
        <p>Your cart is empty.</p>
        <p><a href="view_products.php">Continue Shopping</a></p>
    <?php endif; ?>

    <p><a href="view_products.php">Back to Products</a></p>
</body>
</html>


<?php
session_start();
include 'db_connection.php';

if (!isset($_SESSION['cart'])) {
    header('Location: view_cart.php');
    exit;
}

?>

<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
</head>
<body>
    <h1>Checkout</h1>
    <form action="process_order.php" method="post">
        <div>
            <label for="name">Name:</label>
            <input type="text" id="name" name="name" required>
        </div>
        <div>
            <label for="email">Email:</label>
            <input type="email" id="email" name="email" required>
        </div>
        <div>
            <label for="address">Address:</label>
            <textarea id="address" name="address" required></textarea>
        </div>
        <button type="submit">Place Order</button>
    </form>
</body>
</html>


<?php
session_start();
include 'db_connection.php';

if (!isset($_SESSION['cart'])) {
    header('Location: view_cart.php');
    exit;
}

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $name = $_POST['name'];
    $email = $_POST['email'];
    $address = $_POST['address'];

    // Calculate total
    $total = 0;
    foreach ($_SESSION['cart'] as $product) {
        $total += $product['price'] * $product['quantity'];
    }

    try {
        // Start transaction
        $conn->beginTransaction();

        // Insert order into orders table
        $stmt_order = $conn->prepare('INSERT INTO orders (total, order_date) VALUES (:total, NOW())');
        $stmt_order->bindParam(':total', $total);
        $stmt_order->execute();
        $order_id = $conn->lastInsertId();

        // Insert each item into order_details table
        foreach ($_SESSION['cart'] as $product) {
            $stmt_detail = $conn->prepare('INSERT INTO order_details (order_id, product_id, quantity, price) 
                VALUES (:order_id, :product_id, :quantity, :price)');
            $stmt_detail->bindParam(':order_id', $order_id);
            $stmt_detail->bindParam(':product_id', $product['id']);
            $stmt_detail->bindParam(':quantity', $product['quantity']);
            $stmt_detail->bindParam(':price', $product['price']);
            $stmt_detail->execute();
        }

        // Commit transaction
        $conn->commit();

        // Clear cart
        unset($_SESSION['cart']);

        // Redirect to thank you page
        header('Location: thank_you.php');
        exit;
    } catch(PDOException $e) {
        // Rollback transaction on error
        $conn->rollBack();
        die("Error processing order: " . $e->getMessage());
    }
}
?>


<!DOCTYPE html>
<html>
<head>
    <title>Thank You</title>
</head>
<body>
    <h1>Thank You for Your Order!</h1>
    <p>Your order has been successfully processed.</p>
    <p><a href="view_products.php">Continue Shopping</a></p>
</body>
</html>


// After order is processed and before redirecting
require 'PHPMailer/PHPMailerAutoload.php';

$mail = new PHPMailer;
$mail->isSMTP();
$mail->Host = 'smtp.example.com';
$mail->Port = 587;
$mail->SMTPSecure = 'tls';
$mail->SMTPAuth = true;
$mail->Username = 'your_email@example.com';
$mail->Password = 'your_password';

$mail->setFrom('your_email@example.com', 'Your Name');
$mail->addAddress($email);

$mail->Subject = 'Order Confirmation';
$mail->Body    = "Thank you for your order! Your order ID is: $order_id";

if (!$mail->send()) {
    echo 'Mailer Error: ' . $mail->ErrorInfo;
} else {
    // Proceed to thank you page
}


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'my_store';

// Connect to database
$conn = new mysqli($host, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Get form data
$product_id = $_POST['product_id'];
$quantity = $_POST['quantity'];

// Validate input
if (empty($product_id) || empty($quantity)) {
    echo "Please fill in all fields.";
    exit();
}

if (!ctype_digit((string)$quantity) || $quantity <= 0) {
    echo "Please enter a valid quantity.";
    exit();
}

// Check if product exists and has sufficient stock
$sql = "SELECT * FROM products WHERE id = ?";
$stmt = $conn->prepare($sql);
$stmt->bind_param("i", $product_id);
$stmt->execute();
$result = $stmt->get_result();

if ($result->num_rows == 0) {
    echo "Product does not exist.";
    exit();
}

$product = $result->fetch_assoc();

if ($quantity > $product['stock']) {
    echo "Not enough stock available.";
    exit();
}

// Update product stock
$new_stock = $product['stock'] - $quantity;
$sql = "UPDATE products SET stock = ? WHERE id = ?";
$stmt = $conn->prepare($sql);
$stmt->bind_param("ii", $new_stock, $product_id);
$stmt->execute();

// Create order record
$user_id = 1; // Replace with actual user ID or authentication
$total_price = $product['price'] * $quantity;

$sql = "INSERT INTO orders (user_id, product_id, quantity, total_price, purchase_date) 
VALUES (?, ?, ?, ?, CURRENT_TIMESTAMP)";
$stmt = $conn->prepare($sql);
$stmt->bind_param("iidi", $user_id, $product_id, $quantity, $total_price);

if ($stmt->execute()) {
    // Order created successfully
    header("Location: confirmation.php?order_id=" . $conn->insert_id);
} else {
    echo "Error making purchase: " . $sql . "<br>" . $conn->error;
}

$stmt->close();
$conn->close();

?>


<?php
$order_id = $_GET['order_id'];
?>

<!DOCTYPE html>
<html>
<head>
    <title>Purchase Confirmation</title>
</head>
<body>
    <h2>Thank you for your purchase!</h2>
    <p>Your order ID is: <?php echo $order_id; ?></p>
    <p>We have sent a confirmation email to your registered address.</p>
</body>
</html>


<?php
// config.php - Database configuration
$host = 'localhost';
$dbname = 'e-commerce';
$username = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>E-commerce</title>
    <link rel="stylesheet" href="style.css">
</head>
<body>

<?php
// product.php - Display products
require_once 'config.php';

class Product {
    private $conn;

    public function __construct($db) {
        $this->conn = $db;
    }

    public function getProduct() {
        try {
            $stmt = $this->conn->query("SELECT * FROM products");
            return $stmt->fetchAll(PDO::FETCH_ASSOC);
        } catch(PDOException $e) {
            echo "Error: " . $e->getMessage();
        }
    }

    public function getProductId($id) {
        try {
            $stmt = $this->conn->prepare("SELECT * FROM products WHERE id=?");
            $stmt->execute([$id]);
            return $stmt->fetch(PDO::FETCH_ASSOC);
        } catch(PDOException $e) {
            echo "Error: " . $e->getMessage();
        }
    }
}

$product = new Product($conn);
$products = $product->getProduct();

if ($_SERVER["REQUEST_METHOD"] == "GET") {
    if (isset($_GET['id'])) {
        $productDetails = $product->getProductId($_GET['id']);
    }
}
?>

<div class="container">
    <h1>Products</h1>
    <?php foreach ($products as $prod): ?>
        <div class="product-grid">
            <img src="<?php echo $prod['image']; ?>" alt="<?php echo $prod['name']; ?>">
            <h3><?php echo $prod['name']; ?></h3>
            <p>$<?php echo number_format($prod['price'], 2); ?></p>
            <a href="product.php?id=<?php echo $prod['id']; ?>">View Details</a>
        </div>
    <?php endforeach; ?>
</div>

<div class="cart">
    <h2>Your Cart</h2>
    <?php if (isset($_SESSION['cart'])): ?>
        <table>
            <thead>
                <tr>
                    <th>Product Name</th>
                    <th>Quantity</th>
                    <th>Price</th>
                    <th>Total</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
                <?php foreach ($_SESSION['cart'] as $item): 
                    $product = $product->getProductId($item['id']);
                ?>
                <tr>
                    <td><?php echo $product['name']; ?></td>
                    <td><input type="number" name="quantity" value="<?php echo $item['quantity']; ?>"></td>
                    <td>$<?php echo number_format($product['price'], 2); ?></td>
                    <td>$<?php echo number_format($product['price'] * $item['quantity'], 2); ?></td>
                    <td><a href="remove.php?id=<?php echo $product['id']; ?>">Remove</a></td>
                </tr>
                <?php endforeach; ?>
            </tbody>
        </table>
        <a href="checkout.php" class="button">Proceed to Checkout</a>
    <?php else: ?>
        <p>Your cart is empty.</p>
    <?php endif; ?>
</div>

<?php
// checkout.php - Checkout process
session_start();
require_once 'config.php';

if (!isset($_SESSION['user'])) {
    header("Location: login.php");
    exit();
}

class Cart {
    private $conn;

    public function __construct($db) {
        $this->conn = $db;
    }

    public function placeOrder($userId, $cartItems) {
        try {
            $stmt = $this->conn->prepare("INSERT INTO orders (user_id, total_amount, order_date) VALUES (?, ?, NOW())");
            $total = 0;
            foreach ($cartItems as $item) {
                $product = $product->getProductId($item['id']);
                $total += $product['price'] * $item['quantity'];
            }
            $stmt->execute([$userId, $total]);

            $orderId = $this->conn->lastInsertId();

            foreach ($cartItems as $item) {
                $product = $product->getProductId($item['id']);
                $this->conn->prepare("INSERT INTO order_items (order_id, product_id, quantity, price) VALUES (?, ?, ?, ?)")
                    ->execute([$orderId, $item['id'], $item['quantity'], $product['price']]);
            }

            unset($_SESSION['cart']);
            return true;
        } catch(PDOException $e) {
            echo "Error: " . $e->getMessage();
            return false;
        }
    }
}

$cart = new Cart($conn);
$user = $_SESSION['user'];
if ($cart->placeOrder($user['id'], $_SESSION['cart'])) {
    // Send confirmation email
    mail($user['email'], 'Order Confirmation', 'Thank you for your order!');
    echo "Order placed successfully!";
} else {
    echo "Error placing the order.";
}
?>

</body>
</html>

<?php
// security.php - Security measures
session_start();

if (!isset($_SESSION['csrf_token'])) {
    $_SESSION['csrf_token'] = bin2hex(random_bytes(32));
}

function sanitizeInput($data) {
    return htmlspecialchars(strip_tags(trim($data)));
}
?>

<!-- Add this to your HTML -->
<form action="checkout.php" method="POST">
    <input type="hidden" name="csrf_token" value="<?php echo $_SESSION['csrf_token']; ?>">
    <!-- Other form fields -->
</form>


<?php
session_start();
include("db_connection.php"); // Include your database connection file

// Product class
class Product {
    public function getAllProducts() {
        $query = "SELECT * FROM products";
        return mysqli_query($GLOBALS['conn'], $query);
    }

    public function getProductById($id) {
        $query = "SELECT * FROM products WHERE product_id = $id";
        return mysqli_query($GLOBALS['conn'], $query);
    }
}

// User class
class User {
    public function loginUser($username, $password) {
        $query = "SELECT * FROM users WHERE username = '$username'";
        $result = mysqli_query($GLOBALS['conn'], $query);
        
        if (mysqli_num_rows($result) > 0) {
            $user = mysqli_fetch_assoc($result);
            if (password_verify($password, $user['password'])) {
                $_SESSION['user'] = $user;
                return true;
            }
        }
        return false;
    }

    public function registerUser($username, $email, $password) {
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);
        $query = "INSERT INTO users (username, email, password) 
                  VALUES ('$username', '$email', '$hashed_password')";
        return mysqli_query($GLOBALS['conn'], $query);
    }
}

// Cart functionality
function addToCart($productId, $quantity) {
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }
    
    if (isset($_SESSION['cart'][$productId])) {
        $_SESSION['cart'][$productId] += $quantity;
    } else {
        $_SESSION['cart'][$productId] = $quantity;
    }
}

function updateQuantity($productId, $newQuantity) {
    if (isset($_SESSION['cart'][$productId])) {
        $_SESSION['cart'][$productId] = $newQuantity;
    }
}

function removeFromCart($productId) {
    unset($_SESSION['cart'][$productId]);
}

// Checkout functionality
function processCheckout() {
    global $conn;
    
    // Get total amount from cart
    $totalAmount = calculateTotal();
    
    // Create order
    $orderQuery = "INSERT INTO orders (user_id, status) 
                   VALUES ('".$_SESSION['user']['user_id']."', 'pending')";
    mysqli_query($conn, $orderQuery);
    
    $orderId = mysqli_insert_id($conn);
    
    // Add items to order_items table
    foreach ($_SESSION['cart'] as $productId => $quantity) {
        $productPrice = getProductPriceById($productId);
        
        $itemQuery = "INSERT INTO order_items (order_id, product_id, quantity, price)
                      VALUES ('$orderId', '$productId', '$quantity', '$productPrice')";
        mysqli_query($conn, $itemQuery);
    }
    
    // Process payment
    processPayment($totalAmount);
}

function calculateTotal() {
    $total = 0;
    foreach ($_SESSION['cart'] as $productId => $quantity) {
        $result = getProductById($productId);
        $product = mysqli_fetch_assoc($result);
        $total += ($product['price'] * $quantity);
    }
    return $total;
}

// Payment functionality
function processPayment($amount) {
    global $conn;
    
    // Here you would typically integrate a payment gateway
    // For this example, we'll simulate the payment processing
    $paymentMethod = isset($_POST['payment_method']) ? $_POST['payment_method'] : '';
    
    if ($paymentMethod === 'credit_card') {
        $transactionId = time(); // Simulated transaction ID
        
        $paymentQuery = "INSERT INTO payments (order_id, amount, payment_method, transaction_id, status)
                         VALUES ('".$_SESSION['order_id']."', '$amount', '$paymentMethod', '$transactionId', 'completed')";
        mysqli_query($conn, $paymentQuery);
        
        // Update order status
        updateOrderStatus($_SESSION['order_id'], 'completed');
        
        // Clear cart
        unset($_SESSION['cart']);
    } else {
        echo "Invalid payment method";
    }
}

function updateOrderStatus($orderId, $status) {
    global $conn;
    $query = "UPDATE orders SET status = '$status' WHERE order_id = $orderId";
    mysqli_query($conn, $query);
}

// Order management
function getOrders() {
    $query = "SELECT * FROM orders WHERE user_id = '".$_SESSION['user']['user_id']."'";
    return mysqli_query($GLOBALS['conn'], $query);
}

function getOrderItems($orderId) {
    $query = "SELECT * FROM order_items WHERE order_id = $orderId";
    return mysqli_query($GLOBALS['conn'], $query);
}

// Payment management
function getPayments() {
    $query = "SELECT * FROM payments WHERE user_id = '".$_SESSION['user']['user_id']."'";
    return mysqli_query($GLOBALS['conn'], $query);
}
?>


<?php
$servername = "localhost";
$username = "root";
$password = "";
$dbname = "ecommerce";

// Create connection
$conn = mysqli_connect($servername, $username, $password, $dbname);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}
?>


<?php
include('config.php');

$sql = "SELECT * FROM products";
$result = mysqli_query($conn, $sql);

echo "<table border='1'>";
while ($row = mysqli_fetch_assoc($result)) {
    echo "<tr>";
    echo "<td>Product ID: " . $row['product_id'] . "</td>";
    echo "<td>Name: " . $row['name'] . "</td>";
    echo "<td>Description: " . $row['description'] . "</td>";
    echo "<td>Price: $" . number_format($row['price'], 2) . "</td>";
    echo "<td><a href='add_to_cart.php?id=" . $row['product_id'] . "'>Add to Cart</a></td>";
    echo "</tr>";
}
echo "</table>";

mysqli_close($conn);
?>


<?php
session_start();

if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

if (isset($_GET['id']) && isset($_GET['action'])) {
    $product_id = $_GET['id'];
    switch ($_GET['action']) {
        case 'add':
            if (!array_key_exists($product_id, $_SESSION['cart'])) {
                $_SESSION['cart'][$product_id] = 1;
            } else {
                $_SESSION['cart'][$product_id]++;
            }
            break;
        case 'remove':
            unset($_SESSION['cart'][$product_id]);
            break;
    }
}

echo "<h2>Your Cart</h2>";
if (empty($_SESSION['cart'])) {
    echo "Your cart is empty.";
} else {
    echo "<table border='1'>";
    foreach ($_SESSION['cart'] as $product_id => $quantity) {
        // Fetch product details
        $sql = "SELECT * FROM products WHERE product_id = $product_id";
        $result = mysqli_query($conn, $sql);
        $row = mysqli_fetch_assoc($result);

        echo "<tr>";
        echo "<td>Product ID: $product_id</td>";
        echo "<td>Name: {$row['name']}</td>";
        echo "<td>Quantity: $quantity</td>";
        echo "<td><a href='cart.php?id=$product_id&action=remove'>Remove</a></td>";
        echo "</tr>";
    }
    echo "</table>";
}
?>


<?php
session_start();
include('config.php');

if (!isset($_SESSION['user_id'])) {
    header("Location: login.php");
    exit();
}

// Calculate total amount
$total_amount = 0;
foreach ($_SESSION['cart'] as $product_id => $quantity) {
    $sql = "SELECT price FROM products WHERE product_id = $product_id";
    $result = mysqli_query($conn, $sql);
    $row = mysqli_fetch_assoc($result);
    $total_amount += $row['price'] * $quantity;
}

// Insert order
$order_date = date('Y-m-d H:i:s');
$sql = "INSERT INTO orders (user_id, total_amount, order_date) VALUES (?, ?, ?)";
$stmt = mysqli_prepare($conn, $sql);
mysqli_stmt_bind_param($stmt, "ids", $_SESSION['user_id'], $total_amount, $order_date);
mysqli_execute($stmt);
$order_id = mysqli_insert_id($conn);

// Insert order items
foreach ($_SESSION['cart'] as $product_id => $quantity) {
    $sql = "SELECT price FROM products WHERE product_id = ?";
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, "i", $product_id);
    mysqli_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);
    $row = mysqli_fetch_assoc($result);
    
    $price = $row['price'];
    $total_item_price = $price * $quantity;
    
    $sql = "INSERT INTO order_items (order_id, product_id, quantity, price) VALUES (?, ?, ?, ?)";
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, "iiid", $order_id, $product_id, $quantity, $total_item_price);
    mysqli_execute($stmt);
}

// Clear cart
unset($_SESSION['cart']);
echo "<h2>Thank you for your purchase!</h2>";
?>


<?php
session_start();
include('config.php');

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = mysqli_real_escape_string($conn, $_POST['username']);
    $password = mysqli_real_escape_string($conn, $_POST['password']);

    $sql = "SELECT * FROM users WHERE username='$username'";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) == 1) {
        $row = mysqli_fetch_assoc($result);
        if (md5($password) === $row['password']) {
            $_SESSION['user_id'] = $row['user_id'];
            header("Location: products.php");
            exit();
        } else {
            echo "Invalid password";
        }
    } else {
        echo "Username not found";
    }
}

echo "<form method='post' action='login.php'>";
echo "Username: <input type='text' name='username'><br>";
echo "Password: <input type='password' name='password'><br>";
echo "<input type='submit' value='Login'>";
echo "</form>";
?>


<?php
session_start();
include('config.php');

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = mysqli_real_escape_string($conn, $_POST['username']);
    $email = mysqli_real_escape_string($conn, $_POST['email']);
    $password = md5($_POST['password']);

    $sql = "SELECT * FROM users WHERE username='$username'";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) == 0) {
        $sql = "INSERT INTO users (username, email, password) VALUES ('$username', '$email', '$password')";
        if (mysqli_query($conn, $sql)) {
            echo "Registration successful!";
        } else {
            echo "Error: " . mysqli_error($conn);
        }
    } else {
        echo "Username already exists";
    }
}

echo "<form method='post' action='register.php'>";
echo "Username: <input type='text' name='username'><br>";
echo "Email: <input type='email' name='email'><br>";
echo "Password: <input type='password' name='password'><br>";
echo "<input type='submit' value='Register'>";
echo "</form>";
?>


<?php
session_start();
include('config.php');

if (isset($_SESSION['user_id'])) {
    echo "Welcome, " . $_SESSION['username'] . "<br>";
    echo "<a href='products.php'>View Products</a><br>";
    echo "<a href='cart.php'>View Cart</a><br>";
    echo "<a href='logout.php'>Logout</a>";
} else {
    echo "<h2>Welcome to Our Store!</h2>";
    echo "<p>Please <a href='login.php'>log in</a> or <a href='register.php'>register</a> to continue.</p>";
}
?>


<?php
session_start();
unset($_SESSION['user_id']);
session_destroy();
header("Location: index.php");
exit();
?>


<?php
// config.php - Database configuration file
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'shop';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Product Store</title>
    <style>
        /* Add some basic styling */
        body { font-family: Arial, sans-serif; }
        .product { border: 1px solid #ddd; padding: 10px; margin: 10px 0; }
        .price { color: red; font-weight: bold; }
    </style>
</head>
<body>
    <h2>Our Products</h2>
    
    <?php
    // products.php - Display all products
    include 'config.php';

    try {
        $stmt = $conn->query("SELECT * FROM products");
        while ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {
            echo "<div class='product'>";
            echo "<h3>" . $row['name'] . "</h3>";
            echo "<p class='price'>\$" . number_format($row['price'], 2) . "</p>";
            echo "<p>" . $row['description'] . "</p>";
            if ($row['stock'] > 0) {
                echo "<a href='add_to_cart.php?id=" . $row['id'] . "' class='button'>Add to Cart</a>";
            } else {
                echo "<p>Out of Stock</p>";
            }
            echo "</div>";
        }
    } catch (PDOException $e) {
        echo "Error: " . $e->getMessage();
    }

    $conn = null;
    ?>
</body>
</html>


<?php
// add_to_cart.php
session_start();

if (isset($_GET['id'])) {
    $product_id = $_GET['id'];
    
    if (!empty($_SESSION['cart'])) {
        // Check if product already exists in cart
        foreach ($_SESSION['cart'] as &$item) {
            if ($item['id'] == $product_id) {
                $item['quantity']++;
                break;
            }
        }
        if (!isset($found)) {
            // Product not found, add to cart
            try {
                include 'config.php';
                $stmt = $conn->prepare("SELECT * FROM products WHERE id = ?");
                $stmt->execute([$product_id]);
                $row = $stmt->fetch(PDO::FETCH_ASSOC);
                
                if ($row['stock'] > 0) {
                    $_SESSION['cart'][] = array(
                        'id' => $row['id'],
                        'name' => $row['name'],
                        'price' => $row['price'],
                        'quantity' => 1
                    );
                } else {
                    header("Location: products.php?error=stock");
                    exit();
                }
            } catch (PDOException $e) {
                echo "Error: " . $e->getMessage();
            }
        }
    } else {
        // Cart is empty, add first product
        try {
            include 'config.php';
            $stmt = $conn->prepare("SELECT * FROM products WHERE id = ?");
            $stmt->execute([$product_id]);
            $row = $stmt->fetch(PDO::FETCH_ASSOC);
            
            if ($row['stock'] > 0) {
                $_SESSION['cart'][] = array(
                    'id' => $row['id'],
                    'name' => $row['name'],
                    'price' => $row['price'],
                    'quantity' => 1
                );
            } else {
                header("Location: products.php?error=stock");
                exit();
            }
        } catch (PDOException $e) {
            echo "Error: " . $e->getMessage();
        }
    }
}

header("Location: products.php");
exit();
?>


<?php
// checkout.php
session_start();

if (empty($_SESSION['cart'])) {
    header("Location: products.php?error=empty_cart");
    exit();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
    <style>
        .cart-item { border: 1px solid #ddd; padding: 10px; margin: 5px 0; }
        .total { font-weight: bold; }
    </style>
</head>
<body>
    <h2>Your Shopping Cart</h2>
    
    <?php
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        echo "<div class='cart-item'>";
        echo "<p>" . $item['name'] . "</p>";
        echo "<p>Quantity: " . $item['quantity'] . "</p>";
        echo "<p>Price: \$" . number_format($item['price'], 2) . "</p>";
        $subtotal = $item['price'] * $item['quantity'];
        echo "<p>Subtotal: \$" . number_format($subtotal, 2) . "</p>";
        $total += $subtotal;
        echo "</div>";
    }
    
    echo "<h3 class='total'>Total: \$" . number_format($total, 2) . "</h3>";
    
    if (isset($_POST['checkout'])) {
        // Process payment here
        // For this example, we'll just create an order in the database
        try {
            include 'config.php';
            
            foreach ($_SESSION['cart'] as $item) {
                $stmt = $conn->prepare("INSERT INTO orders (product_id, quantity, amount) VALUES (?, ?, ?)");
                $stmt->execute([$item['id'], $item['quantity'], $item['price'] * $item['quantity']]);
            }
            
            // Clear cart
            unset($_SESSION['cart']);
            
            header("Location: confirmation.php?amount=" . number_format($total, 2));
            exit();
        } catch (PDOException $e) {
            echo "Error: " . $e->getMessage();
        }
    }
    ?>
    
    <form method="post">
        <input type="text" name="payment_method" placeholder="Payment Method" required>
        <select name="status">
            <option value="pending">Pending</option>
            <option value="completed">Completed</option>
        </select>
        <button type="submit" name="checkout">Place Order</button>
    </form>
</body>
</html>


<?php
// confirmation.php
session_start();

$amount = isset($_GET['amount']) ? $_GET['amount'] : 0;
?>

<!DOCTYPE html>
<html>
<head>
    <title>Order Confirmation</title>
</head>
<body>
    <h2>Thank you for your order!</h2>
    <p>Your total is: \$<?php echo number_format($amount, 2); ?></p>
    <a href="products.php">Continue Shopping</a>
    
    <?php
    // You can add email notification here
    $to = "your.email@example.com";
    $subject = "New Order Confirmation";
    $message = "Thank you for your order! Your total is: \$" . number_format($amount, 2);
    
    mail($to, $subject, $message);
    ?>
</body>
</html>


<?php
// Database connection configuration
$host = 'localhost';
$dbname = 'purchase_system';
$username = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}

// Start session
session_start();

// Function to display products
function displayProducts() {
    global $conn;
    $stmt = $conn->query("SELECT * FROM products");
    while ($row = $stmt->fetch()) {
        echo "<div class='product'>";
        echo "<h3>" . $row['name'] . "</h3>";
        echo "<p>Price: $" . number_format($row['price'], 2) . "</p>";
        echo "<p>Description: " . $row['description'] . "</p>";
        echo "<form method='post' action='add_to_cart.php'>";
        echo "<input type='hidden' name='product_id' value='" . $row['id'] . "'>";
        echo "<input type='number' min='1' max='" . $row['stock'] . "' name='quantity' placeholder='Quantity'>";
        echo "<button type='submit'>Add to Cart</button>";
        echo "</form>";
        echo "</div>";
    }
}

// Function to add product to cart
function addToCart($product_id, $quantity) {
    global $conn;
    
    if (isset($_SESSION['cart'])) {
        $cart = $_SESSION['cart'];
    } else {
        $cart = array();
    }
    
    // Check if product already exists in cart
    if (array_key_exists($product_id, $cart)) {
        $cart[$product_id] += $quantity;
    } else {
        $cart[$product_id] = $quantity;
    }
    
    $_SESSION['cart'] = $cart;
}

// Function to display cart contents
function displayCart() {
    global $conn;
    if (isset($_SESSION['cart'])) {
        $cart = $_SESSION['cart'];
        echo "<div class='cart'>";
        echo "<h2>Your Cart</h2>";
        echo "<table>";
        echo "<tr><th>Product</th><th>Quantity</th><th>Price</th><th>Total</th></tr>";
        
        $total_amount = 0;
        foreach ($cart as $product_id => $quantity) {
            $stmt = $conn->prepare("SELECT * FROM products WHERE id = ?");
            $stmt->execute([$product_id]);
            $row = $stmt->fetch();
            
            if (!$row) continue;
            
            $price = $row['price'];
            $total = $price * $quantity;
            $total_amount += $total;
            
            echo "<tr>";
            echo "<td>" . $row['name'] . "</td>";
            echo "<td>" . $quantity . "</td>";
            echo "<td>$" . number_format($price, 2) . "</td>";
            echo "<td>$" . number_format($total, 2) . "</td>";
            echo "</tr>";
        }
        
        echo "<tr><th colspan='3'>Total:</th><th>$" . number_format($total_amount, 2) . "</th></tr>";
        echo "</table>";
        echo "</div>";
    } else {
        echo "<p>Your cart is empty.</p>";
    }
}

// Function to place order
function placeOrder() {
    global $conn;
    
    if (!isset($_SESSION['cart']) || count($_SESSION['cart']) == 0) {
        return false;
    }
    
    // Get user details from POST
    $user_name = $_POST['name'];
    $user_email = $_POST['email'];
    
    // Insert order into orders table
    try {
        $conn->beginTransaction();
        
        $stmt = $conn->prepare("INSERT INTO orders (user_name, user_email, total_amount, purchase_date) VALUES (?, ?, ?, NOW())");
        $stmt->execute([$user_name, $user_email, $_POST['total_amount']]);
        $order_id = $conn->lastInsertId();
        
        // Insert order details
        foreach ($_SESSION['cart'] as $product_id => $quantity) {
            $stmt_details = $conn->prepare("INSERT INTO order_details (order_id, product_id, quantity, price) VALUES (?, ?, ?, ?)");
            $price = getProductPrice($product_id);
            $stmt_details->execute([$order_id, $product_id, $quantity, $price]);
        }
        
        $conn->commit();
        $_SESSION['cart'] = array(); // Clear cart
        return true;
    } catch(PDOException $e) {
        $conn->rollBack();
        echo "Error: " . $e->getMessage();
        return false;
    }
}

// Helper function to get product price
function getProductPrice($product_id) {
    global $conn;
    $stmt = $conn->prepare("SELECT price FROM products WHERE id = ?");
    $stmt->execute([$product_id]);
    $row = $stmt->fetch();
    return $row['price'];
}
?>


<?php
$host = 'localhost';
$dbname = 'shopping_cart';
$user = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $user, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}
?>


<?php
include 'config.php';

// Get all products from the database
$stmt = $conn->query('SELECT * FROM products');
$products = $stmt->fetchAll(PDO::FETCH_ASSOC);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
    <style>
        .product {
            border: 1px solid #ddd;
            padding: 10px;
            margin: 5px;
        }
    </style>
</head>
<body>
    <h1>Products</h1>
    <?php foreach ($products as $product): ?>
        <div class="product">
            <h3><?php echo $product['name']; ?></h3>
            <p><?php echo $product['description']; ?></p>
            <p>Price: <?php echo $product['price']; ?> €</p>
            <form action="add_to_cart.php" method="post">
                <input type="hidden" name="product_id" value="<?php echo $product['id']; ?>">
                <input type="number" name="quantity" min="1" max="<?php echo $product['stock']; ?>" required>
                <button type="submit">Add to Cart</button>
            </form>
        </div>
    <?php endforeach; ?>
</body>
</html>


<?php
session_start();
include 'config.php';

$product_id = isset($_POST['product_id']) ? intval($_POST['product_id']) : 0;
$quantity = isset($_POST['quantity']) ? intval($_POST['quantity']) : 1;

// Check if the product exists and has stock
$stmt = $conn->prepare('SELECT * FROM products WHERE id = ?');
$stmt->execute([$product_id]);
$product = $stmt->fetch(PDO::FETCH_ASSOC);

if ($product && $product['stock'] >= $quantity) {
    // Add to cart (session)
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }
    
    if (!isset($_SESSION['cart'][$product_id])) {
        $_SESSION['cart'][$product_id] = array(
            'name' => $product['name'],
            'price' => $product['price'],
            'quantity' => 0
        );
    }
    
    // Update quantity
    $_SESSION['cart'][$product_id]['quantity'] += $quantity;
    
    // Reduce stock (you might want to do this when placing the order instead)
    // $stmt = $conn->prepare('UPDATE products SET stock = stock - ? WHERE id = ?');
    // $stmt->execute([$quantity, $product_id]);
    
    header('Location: cart.php');
} else {
    header('Location: products.php');
}
?>


<?php
session_start();
include 'config.php';

// Calculate total price
$total = 0;
foreach ($_SESSION['cart'] as $item) {
    $total += $item['price'] * $item['quantity'];
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
    <style>
        .cart-item {
            border: 1px solid #ddd;
            padding: 10px;
            margin: 5px;
        }
    </style>
</head>
<body>
    <h1>Your Shopping Cart</h1>
    
    <?php if (!empty($_SESSION['cart'])): ?>
        <?php foreach ($_SESSION['cart'] as $id => $item): ?>
            <div class="cart-item">
                <p><?php echo $item['name']; ?></p>
                <p>Price: <?php echo $item['price']; ?> €</p>
                <p>Quantity: <?php echo $item['quantity']; ?></p>
                <form action="remove_from_cart.php" method="post">
                    <input type="hidden" name="product_id" value="<?php echo $id; ?>">
                    <button type="submit">Remove</button>
                </form>
            </div>
        <?php endforeach; ?>
        
        <h3>Total: <?php echo $total; ?> €</h3>
        <a href="checkout.php">Checkout</a>
    <?php else: ?>
        <p>Your cart is empty.</p>
        <a href="products.php">Continue Shopping</a>
    <?php endif; ?>
    
    <br>
    <a href="products.php">Back to Products</a>
</body>
</html>


<?php
session_start();

$product_id = isset($_POST['product_id']) ? intval($_POST['product_id']) : 0;

if (isset($_SESSION['cart'][$product_id])) {
    unset($_SESSION['cart'][$product_id]);
}

header('Location: cart.php');
?>


<?php
session_start();
include 'config.php';

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Process the order
    $user_id = 1; // Replace with actual user ID or authentication system
    
    foreach ($_SESSION['cart'] as $id => $item) {
        // Update stock
        $stmt = $conn->prepare('UPDATE products SET stock = stock - ? WHERE id = ?');
        $stmt->execute([$item['quantity'], $id]);
        
        // Insert order
        $stmt = $conn->prepare('INSERT INTO orders (user_id, product_id, quantity, total_price) VALUES (?, ?, ?, ?)');
        $stmt->execute([$user_id, $id, $item['quantity'], $item['price'] * $item['quantity']]);
    }
    
    // Clear cart
    unset($_SESSION['cart']);
    
    header('Location: thank_you.php');
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
</head>
<body>
    <h1>Checkout</h1>
    <form action="checkout.php" method="post">
        <div>
            <label for="name">Name:</label><br>
            <input type="text" id="name" name="name" required><br>
            
            <label for="email">Email:</label><br>
            <input type="email" id="email" name="email" required><br>
            
            <label for="address">Address:</label><br>
            <textarea id="address" name="address" required></textarea><br>
            
            <label for="phone">Phone:</label><br>
            <input type="tel" id="phone" name="phone" required><br>
        </div>
        
        <h3>Payment Method</h3>
        <div>
            <input type="radio" name="payment_method" value="credit_card" required>Credit Card<br>
            <input type="radio" name="payment_method" value="paypal">PayPal
        </div>
        
        <button type="submit">Place Order</button>
    </form>
</body>
</html>


<?php
session_start();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Thank You</title>
</head>
<body>
    <h1>Thank You for Your Order!</h1>
    <p>Your order has been successfully placed.</p>
    <a href="products.php">Continue Shopping</a>
</body>
</html>


<?php
// File: purchase.php

session_start();

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get form data
    $productName = $_POST['product_name'];
    $price = $_POST['price'];
    $quantity = $_POST['quantity'];
    
    // Calculate total price
    $totalPrice = $price * $quantity;

    // Display purchase confirmation
    echo "<h2>Purchase Confirmation</h2>";
    echo "<p>Product: " . $productName . "</p>";
    echo "<p>Quantity: " . $quantity . "</p>";
    echo "<p>Price per unit: $" . number_format($price, 2) . "</p>";
    echo "<p>Total Price: $" . number_format($totalPrice, 2) . "</p>";

    // Here you would typically connect to a database
    // and store the purchase information
} else {
    // Display product selection form
    ?>
    <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
        <h2>Select Product</h2>
        <label for="product_name">Product Name:</label><br>
        <input type="text" id="product_name" name="product_name" required><br>

        <label for="price">Price:</label><br>
        <input type="number" id="price" name="price" step="0.01" required><br>

        <label for="quantity">Quantity:</label><br>
        <input type="number" id="quantity" name="quantity" min="1" required><br>

        <input type="submit" value="Purchase">
    </form>
    <?php
}

// Function to sanitize input data
function sanitizeInput($data) {
    $data = trim($data);
    $data = htmlspecialchars($data);
    $data = stripslashes($data);
    return $data;
}

// Sanitize inputs if needed for database storage or processing
$productName = sanitizeInput($_POST['product_name']);
$price = floatval(sanitizeInput($_POST['price']));
$quantity = intval(sanitizeInput($_POST['quantity']));

?>


<?php
session_start();
require_once('db_connection.php'); // Include your database connection file

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    try {
        $productName = sanitizeInput($_POST['product_name']);
        $price = floatval(sanitizeInput($_POST['price']));
        $quantity = intval(sanitizeInput($_POST['quantity']));

        // Calculate total price
        $totalPrice = $price * $quantity;

        // Insert purchase into database
        $stmt = $conn->prepare("INSERT INTO purchases (product_name, price, quantity, total_price) VALUES (?, ?, ?, ?)");
        $stmt->bind_param("sdd", $productName, $price, $quantity, $totalPrice);

        if ($stmt->execute()) {
            echo "<h2>Purchase Successful!</h2>";
            echo "<p>Your purchase has been recorded.</p>";
            // Optionally redirect to another page
            header("Refresh: 3; url=products.php");
        } else {
            echo "Error: " . $stmt->error;
        }

    } catch (Exception $e) {
        die('Error: ' . $e->getMessage());
    }
}

// Display product selection form if not submitted
if ($_SERVER["REQUEST_METHOD"] != "POST") {
    // Retrieve products from database for selection
    $result = $conn->query("SELECT * FROM products");
    
    ?>
    <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
        <h2>Select Product</h2>
        <?php while ($row = $result->fetch_assoc()) { ?>
            <div class="product-option">
                <input type="radio" name="product_name" value="<?php echo $row['name']; ?>" required>
                <label><?php echo $row['name']; ?></label> - $<?php echo number_format($row['price'], 2); ?>
            </div><br>
        <?php } ?>

        <label for="quantity">Quantity:</label><br>
        <input type="number" id="quantity" name="quantity" min="1" required><br>

        <input type="submit" value="Purchase">
    </form>
    <?php
}

// Close database connection
$conn->close();
?>

<?php
function sanitizeInput($data) {
    $data = trim($data);
    $data = htmlspecialchars($data);
    $data = stripslashes($data);
    return $data;
}
?>


<?php
session_start();
include 'db_connection.php';

$result = mysqli_query($conn, "SELECT * FROM products");
?>

<!DOCTYPE html>
<html>
<head>
    <title>Product Store</title>
</head>
<body>
    <?php while ($row = mysqli_fetch_assoc($result)) { ?>
        <div class="product">
            <img src="<?php echo $row['image_path']; ?>" alt="<?php echo $row['name']; ?>">
            <h3><?php echo $row['name']; ?></h3>
            <p>Price: <?php echo $row['price']; ?>$</p>
            <p>Description: <?php echo $row['description']; ?></p>
            <form action="add_to_cart.php" method="post">
                <input type="hidden" name="product_id" value="<?php echo $row['id']; ?>">
                <button type="submit">Add to Cart</button>
            </form>
        </div>
    <?php } ?>
</body>
</html>


<?php
session_start();
include 'db_connection.php';

$product_id = $_POST['product_id'];
$result = mysqli_query($conn, "SELECT * FROM products WHERE id=$product_id");
$product = mysqli_fetch_assoc($result);

if (isset($_SESSION['cart'])) {
    $found = false;
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['id'] == $product_id) {
            $item['quantity'] += 1;
            $found = true;
            break;
        }
    }
    if (!$found) {
        $_SESSION['cart'][] = array('id' => $product_id, 'name' => $product['name'], 'price' => $product['price'], 'quantity' => 1);
    }
} else {
    $_SESSION['cart'] = array(
        array('id' => $product_id, 'name' => $product['name'], 'price' => $product['price'], 'quantity' => 1)
    );
}

header("Location: cart.php");
exit();
?>


<?php
session_start();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <?php if (!empty($_SESSION['cart'])) { ?>
        <h2>Your Cart</h2>
        <table>
            <tr><th>Name</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>
            <?php $total = 0; foreach ($_SESSION['cart'] as $item) { ?>
                <tr>
                    <td><?php echo $item['name']; ?></td>
                    <td><?php echo $item['price']; ?>$</td>
                    <td><?php echo $item['quantity']; ?></td>
                    <td><?php echo $item['price'] * $item['quantity']; ?>$</td>
                    <td><a href="remove_from_cart.php?id=<?php echo $item['id']; ?>">Remove</a></td>
                </tr>
                <?php $total += $item['price'] * $item['quantity']; ?>
            <?php } ?>
        </table>
        <h3>Total: <?php echo $total; ?>$</h3>
        <form action="checkout.php" method="post">
            <button type="submit">Checkout</button>
        </form>
    <?php } else { ?>
        <p>Your cart is empty.</p>
    <?php } ?>
</body>
</html>


<?php
session_start();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
</head>
<body>
    <?php if (!empty($_SESSION['cart'])) { ?>
        <h2>Enter Payment Information</h2>
        <form action="process_order.php" method="post">
            <label for="name">Name:</label><br>
            <input type="text" id="name" name="name" required><br><br>

            <label for="email">Email:</label><br>
            <input type="email" id="email" name="email" required><br><br>

            <label for="address">Address:</label><br>
            <textarea id="address" name="address" rows="5" cols="30" required></textarea><br><br>

            <label for="phone">Phone Number:</label><br>
            <input type="tel" id="phone" name="phone" required><br><br>

            <button type="submit">Complete Purchase</button>
        </form>
    <?php } else { ?>
        <p>Your cart is empty.</p>
    <?php } ?>
</body>
</html>


<?php
session_start();
include 'db_connection.php';

if (!empty($_SESSION['cart']) && isset($_POST)) {
    $name = mysqli_real_escape_string($conn, $_POST['name']);
    $email = mysqli_real_escape_string($conn, $_POST['email']);
    $address = mysqli_real_escape_string($conn, $_POST['address']);
    $phone = mysqli_real_escape_string($conn, $_POST['phone']);

    // Insert order into orders table
    $sql = "INSERT INTO orders (user_name, email, address, phone_number) VALUES ('$name', '$email', '$address', '$phone')";
    if (mysqli_query($conn, $sql)) {
        $order_id = mysqli_insert_id($conn);

        // Insert each item into order_items table
        foreach ($_SESSION['cart'] as $item) {
            $product_id = $item['id'];
            $quantity = $item['quantity'];
            $sql_item = "INSERT INTO order_items (order_id, product_id, quantity) VALUES ('$order_id', '$product_id', '$quantity')";
            mysqli_query($conn, $sql_item);
        }

        // Clear the cart
        unset($_SESSION['cart']);
        header("Location: confirmation.php");
        exit();
    } else {
        echo "Error processing order: " . mysqli_error($conn);
    }
} else {
    header("Location: cart.php");
}
?>


<?php
session_start();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Order Confirmed</title>
</head>
<body>
    <h2>Thank you for your purchase!</h2>
    <?php if (isset($_SESSION['cart'])) { ?>
        <p>Your order has been successfully processed.</p>
        <p>We will ship your items soon. Thank you for shopping with us!</p>
    <?php } else { ?>
        <p>Your cart is empty. Please continue shopping.</p>
    <?php } ?>
</body>
</html>


<?php
session_start();
$product_id = $_GET['id'];
if (!empty($_SESSION['cart'])) {
    foreach ($_SESSION['cart'] as $key => $item) {
        if ($item['id'] == $product_id) {
            unset($_SESSION['cart'][$key]);
            break;
        }
    }
    // Re-index the array
    $_SESSION['cart'] = array_values($_SESSION['cart']);
}
header("Location: cart.php");
exit();
?>


<?php
// Connect to database
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}

// Fetch products from database
$stmt = $conn->query("SELECT * FROM products");
$products = $stmt->fetchAll(PDO::FETCH_ASSOC);

?>

<!DOCTYPE html>
<html>
<head>
    <title>Store</title>
    <!-- Include your CSS here -->
    <style>
        .product-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 20px;
            padding: 20px;
        }
        .product-card {
            border: 1px solid #ddd;
            padding: 10px;
            text-align: center;
        }
    </style>
</head>
<body>
    <h1>Welcome to Our Store</h1>
    <div class="product-grid">
        <?php foreach ($products as $product): ?>
            <div class="product-card">
                <?php if ($product['image']): ?>
                    <img src="<?php echo $product['image']; ?>" alt="<?php echo $product['name']; ?>" style="max-width: 200px;">
                <?php endif; ?>
                <h3><?php echo $product['name']; ?></h3>
                <p><?php echo $product['description']; ?></p>
                <p>Price: $<?php echo number_format($product['price'], 2); ?></p>
                <form action="add_to_cart.php" method="post">
                    <input type="hidden" name="product_id" value="<?php echo $product['id']; ?>">
                    <button type="submit">Add to Cart</button>
                </form>
            </div>
        <?php endforeach; ?>
    </div>
</body>
</html>


<?php
session_start();

if (!isset($_POST['product_id'])) {
    die("Invalid request");
}

$product_id = $_POST['product_id'];

// Connect to database
try {
    $conn = new PDO("mysql:host=localhost;dbname=your_database_name", 'username', 'password');
} catch (PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}

$stmt = $conn->prepare("SELECT * FROM products WHERE id = ?");
$stmt->execute([$product_id]);
$product = $stmt->fetch(PDO::FETCH_ASSOC);

if (!$product) {
    die("Product not found");
}

// Add to cart
$cart = $_SESSION['cart'] ?? [];
$cart[$product_id] = [
    'name' => $product['name'],
    'price' => $product['price'],
    'quantity' => 1,
];
$_SESSION['cart'] = $cart;

header("Location: cart.php");
exit();


<?php
session_start();

// Connect to database
try {
    $conn = new PDO("mysql:host=localhost;dbname=your_database_name", 'username', 'password');
} catch (PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}

$cart = $_SESSION['cart'] ?? [];
$total = 0;

?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
    <!-- Include your CSS here -->
    <style>
        .cart-table {
            width: 100%;
            border-collapse: collapse;
            margin: 20px;
        }
        th, td {
            padding: 12px;
            text-align: left;
            border-bottom: 1px solid #ddd;
        }
    </style>
</head>
<body>
    <h1>Your Shopping Cart</h1>
    <?php if (empty($cart)): ?>
        <p>Your cart is empty.</p>
        <a href="index.php">Continue Shopping</a>
    <?php else: ?>
        <table class="cart-table">
            <thead>
                <tr>
                    <th>Product</th>
                    <th>Price</th>
                    <th>Quantity</th>
                    <th>Total</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
                <?php foreach ($cart as $product_id => $item): 
                    $total += $item['price'] * $item['quantity'];
                ?>
                    <tr>
                        <td><?php echo $item['name']; ?></td>
                        <td>$<?php echo number_format($item['price'], 2); ?></td>
                        <td>
                            <form action="update_cart.php" method="post">
                                <input type="hidden" name="product_id" value="<?php echo $product_id; ?>">
                                <input type="number" name="quantity" min="1" value="<?php echo $item['quantity']; ?>" style="width: 50px;">
                                <button type="submit">Update</button>
                            </form>
                        </td>
                        <td>$<?php echo number_format($item['price'] * $item['quantity'], 2); ?></td>
                        <td><a href="remove_from_cart.php?product_id=<?php echo $product_id; ?>">Remove</a></td>
                    </tr>
                <?php endforeach; ?>
            </tbody>
        </table>
        <p>Subtotal: $<?php echo number_format($total, 2); ?></p>
        <p>Tax (10%): $<?php echo number_format($total * 0.10, 2); ?></p>
        <p>Grand Total: $<?php echo number_format($total * 1.10, 2); ?></p>
        <a href="checkout.php">Proceed to Checkout</a>
    <?php endif; ?>
</body>
</html>


<?php
session_start();

if (!isset($_POST['product_id']) || !isset($_POST['quantity'])) {
    die("Invalid request");
}

$product_id = $_POST['product_id'];
$quantity = (int)$_POST['quantity'];

if ($quantity < 1) {
    die("Quantity must be at least 1");
}

$cart = $_SESSION['cart'] ?? [];
if (!isset($cart[$product_id])) {
    die("Product not found in cart");
}

$cart[$product_id]['quantity'] = $quantity;
$_SESSION['cart'] = $cart;

header("Location: cart.php");
exit();


<?php
session_start();

if (!isset($_GET['product_id'])) {
    die("Invalid request");
}

$product_id = $_GET['product_id'];

$cart = $_SESSION['cart'] ?? [];
unset($cart[$product_id]);
$_SESSION['cart'] = $cart;

header("Location: cart.php");
exit();


<?php
session_start();

if (empty($_SESSION['cart'])) {
    header("Location: cart.php");
    exit();
}

// Connect to database
try {
    $conn = new PDO("mysql:host=localhost;dbname=your_database_name", 'username', 'password');
} catch (PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}

?>

<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
    <!-- Include your CSS here -->
    <style>
        .checkout-form {
            max-width: 600px;
            margin: 20px auto;
            padding: 20px;
            border: 1px solid #ddd;
        }
        .form-group {
            margin-bottom: 15px;
        }
        label {
            display: block;
            margin-bottom: 5px;
        }
        input, select {
            width: 100%;
            padding: 8px;
            margin-bottom: 10px;
        }
    </style>
</head>
<body>
    <h2>Checkout</h2>
    <div class="checkout-form">
        <form action="process_order.php" method="post">
            <div class="form-group">
                <label for="first_name">First Name:</label>
                <input type="text" id="first_name" name="first_name" required>
            </div>
            <div class="form-group">
                <label for="last_name">Last Name:</label>
                <input type="text" id="last_name" name="last_name" required>
            </div>
            <div class="form-group">
                <label for="email">Email:</label>
                <input type="email" id="email" name="email" required>
            </div>
            <div class="form-group">
                <label for="address">Address:</label>
                <input type="text" id="address" name="address" required>
            </div>
            <div class="form-group">
                <label for="city">City:</label>
                <input type="text" id="city" name="city" required>
            </div>
            <div class="form-group">
                <label for="state">State:</label>
                <select id="state" name="state" required>
                    <option value="">Select State</option>
                    <!-- Add states here -->
                </select>
            </div>
            <div class="form-group">
                <label for="zip_code">Zip Code:</label>
                <input type="text" id="zip_code" name="zip_code" required>
            </div>
            <div class="form-group">
                <label for="payment_method">Payment Method:</label>
                <select id="payment_method" name="payment_method" required>
                    <option value="credit_card">Credit Card</option>
                    <option value="paypal">PayPal</option>
                </select>
            </div>
            <?php if (isset($_SESSION['user_id'])): ?>
                <input type="hidden" name="user_id" value="<?php echo $_SESSION['user_id']; ?>">
            <?php endif; ?>
            <button type="submit">Place Order</button>
        </form>
    </div>
</body>
</html>


<?php
session_start();

if (empty($_POST)) {
    die("Invalid request");
}

// Connect to database
try {
    $conn = new PDO("mysql:host=localhost;dbname=your_database_name", 'username', 'password');
} catch (PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}

// Get user ID if logged in
$user_id = $_POST['user_id'] ?? null;

// Insert order into orders table
$stmt = $conn->prepare("INSERT INTO orders (user_id, total_amount) VALUES (?, ?)");
$total = 0;
foreach ($_SESSION['cart'] as $item) {
    $total += $item['price'] * $item['quantity'];
}
$amount_with_tax = $total * 1.10; // Assuming 10% tax

$stmt->execute([$user_id, $amount_with_tax]);
$order_id = $conn->lastInsertId();

// Insert order items
foreach ($_SESSION['cart'] as $product_id => $item) {
    $stmt = $conn->prepare("INSERT INTO order_items (order_id, product_id, quantity, price) VALUES (?, ?, ?, ?)");
    $stmt->execute([$order_id, $product_id, $item['quantity'], $item['price']]);
}

// Insert payment
$payment_method = $_POST['payment_method'];
$stmt = $conn->prepare("INSERT INTO payments (order_id, payment_method, amount) VALUES (?, ?, ?)");
$stmt->execute([$order_id, $payment_method, $amount_with_tax]);

// Clear cart
unset($_SESSION['cart']);

header("Location: thank_you.php");
exit();


<?php
session_start();

if (!isset($_SESSION['last_order_id'])) {
    header("Location: index.php");
    exit();
}

?>

<!DOCTYPE html>
<html>
<head>
    <title>Thank You</title>
    <!-- Include your CSS here -->
    <style>
        .thank-you {
            text-align: center;
            padding: 40px;
            font-family: Arial, sans-serif;
        }
    </style>
</head>
<body>
    <div class="thank-you">
        <h1>Thank You for Your Order!</h1>
        <p>Your order has been received and is being processed.</p>
        <a href="index.php">Continue Shopping</a>
    </div>
</body>
</html>


<?php
// Include database configuration file
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "myDB";

// Create connection
$conn = new mysqli($servername, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Get purchase details from POST request
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Validate and sanitize input data
    $name = htmlspecialchars(trim($_POST['name']));
    $email = htmlspecialchars(trim($_POST['email']));
    $product = htmlspecialchars(trim($_POST['product']));
    $quantity = intval($_POST['quantity']);
    $price = floatval($_POST['price']);

    if (empty($name) || empty($email) || empty($product) || $quantity <= 0 || $price <= 0) {
        die("Please fill in all required fields");
    }

    // Calculate total amount
    $total_amount = $quantity * $price;

    try {
        // Start transaction
        $conn->begin_transaction();

        // Insert order into database
        $sql = "INSERT INTO orders (name, email, product, quantity, price, total_amount) 
                VALUES (?, ?, ?, ?, ?, ?)";
        
        $stmt = $conn->prepare($sql);
        $stmt->bind_param("ssd", $name, $email, $product, $quantity, $price, $total_amount);

        if ($stmt->execute()) {
            // Commit transaction
            $conn->commit();
            echo "Purchase successful! Order ID: " . $stmt->insert_id;
            echo "<br>Name: $name";
            echo "<br>Email: $email";
            echo "<br>Product: $product";
            echo "<br>Quantity: $quantity";
            echo "<br>Total Amount: $" . number_format($total_amount, 2);
        } else {
            // Rollback transaction in case of error
            $conn->rollback();
            die("Error processing your purchase. Please try again.");
        }
    } catch (Exception $e) {
        // Rollback transaction in case of exception
        $conn->rollback();
        die("Error: " . $e->getMessage());
    }
}

// Close database connection
$conn->close();

?>

<!DOCTYPE html>
<html>
<head>
    <title>Purchase Form</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            max-width: 600px;
            margin: 0 auto;
            padding: 20px;
        }
        .form-group {
            margin-bottom: 15px;
        }
        input[type="text"], input[type="email"], input[type="number"] {
            width: 100%;
            padding: 8px;
            margin-top: 5px;
            border: 1px solid #ddd;
            border-radius: 4px;
        }
        button {
            background-color: #4CAF50;
            color: white;
            padding: 14px 20px;
            margin: 8px 0;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
        button:hover {
            background-color: #45a049;
        }
    </style>
</head>
<body>
    <h2>Purchase Form</h2>
    <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
        <div class="form-group">
            <label for="name">Name:</label><br>
            <input type="text" id="name" name="name" required>
        </div>

        <div class="form-group">
            <label for="email">Email:</label><br>
            <input type="email" id="email" name="email" required>
        </div>

        <div class="form-group">
            <label for="product">Product:</label><br>
            <input type="text" id="product" name="product" required>
        </div>

        <div class="form-group">
            <label for="quantity">Quantity:</label><br>
            <input type="number" id="quantity" name="quantity" min="1" required>
        </div>

        <div class="form-group">
            <label for="price">Price per unit ($):</label><br>
            <input type="number" id="price" name="price" min="0.01" step="0.01" required>
        </div>

        <button type="submit">Purchase</button>
    </form>
</body>
</html>


<?php
// Connect to database
$conn = mysqli_connect("localhost", "username", "password", "my_store");

// Query products
$sql = "SELECT * FROM products";
$result = mysqli_query($conn, $sql);

// Display products
while ($row = mysqli_fetch_assoc($result)) {
    echo "<div class='product'>";
    echo "<h3>" . $row['name'] . "</h3>";
    echo "<p>" . $row['description'] . "</p>";
    echo "<p>Price: $" . number_format($row['price'], 2) . "</p>";
    echo "<form action='add_to_cart.php' method='post'>";
    echo "<input type='hidden' name='id' value='" . $row['id'] . "'>";
    echo "<input type='number' name='quantity' min='1' max='" . $row['stock'] . "' value='1'>";
    echo "<button type='submit'>Add to Cart</button>";
    echo "</form>";
    echo "</div>";
}
?>


<?php
session_start();

// Get product details
$product_id = $_POST['id'];
$quantity = $_POST['quantity'];

$conn = mysqli_connect("localhost", "username", "password", "my_store");
$sql = "SELECT * FROM products WHERE id = $product_id";
$result = mysqli_query($conn, $sql);
$product = mysqli_fetch_assoc($result);

// Add to cart
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

$item = array(
    'id' => $product['id'],
    'name' => $product['name'],
    'price' => $product['price'],
    'quantity' => $quantity
);

$_SESSION['cart'][$product['id']] = $item;

// Redirect back to products page
header("Location: cart.php");
exit();
?>


<?php
session_start();

// Display cart items
echo "<h2>Your Cart</h2>";
if (!empty($_SESSION['cart'])) {
    echo "<form action='update_cart.php' method='post'>";
    foreach ($_SESSION['cart'] as $item) {
        echo "<div class='cart-item'>";
        echo "<p>" . $item['name'] . "</p>";
        echo "<p>Price: $" . number_format($item['price'], 2) . "</p>";
        echo "<input type='number' name='quantity[" . $item['id'] . "]' value='" . $item['quantity'] . "' min='1'>";
        echo "<button type='submit'>Update</button>";
        echo "<a href='remove_item.php?id=" . $item['id'] . "'>Remove</a>";
        echo "</div>";
    }
    echo "</form>";
} else {
    echo "<p>Your cart is empty.</p>";
}
?>


<?php
session_start();

// Update quantities
foreach ($_POST['quantity'] as $id => $qty) {
    if ($qty > 0 && is_numeric($qty)) {
        $_SESSION['cart'][$id]['quantity'] = $qty;
    }
}

// Redirect back to cart page
header("Location: cart.php");
exit();
?>


<?php
session_start();

// Remove item from cart
$id = $_GET['id'];
unset($_SESSION['cart'][$id]);

// Redirect back to cart page
header("Location: cart.php");
exit();
?>


<?php
session_start();

if (!empty($_POST)) {
    // Validate and process checkout
    $errors = array();
    
    if (empty($_POST['name'])) {
        $errors[] = "Please enter your name";
    }
    if (empty($_POST['email'])) {
        $errors[] = "Please enter your email";
    }
    if (empty($_POST['address'])) {
        $errors[] = "Please enter your address";
    }

    if (empty($errors)) {
        // Calculate total
        $total = 0;
        foreach ($_SESSION['cart'] as $item) {
            $total += $item['price'] * $item['quantity'];
        }

        // Process payment here (you would need to integrate with a payment gateway)

        // Clear cart
        unset($_SESSION['cart']);

        // Show thank you message
        echo "<h2>Thank You for Your Order!</h2>";
        echo "<p>Your order has been received. Total amount: $" . number_format($total, 2) . "</p>";
    } else {
        foreach ($errors as $error) {
            echo "<div class='error'>" . $error . "</div>";
        }
    }
}
?>

<h2>Checkout</h2>
<form action="checkout.php" method="post">
    <input type="text" name="name" placeholder="Your Name" required><br>
    <input type="email" name="email" placeholder="Your Email" required><br>
    <textarea name="address" placeholder="Shipping Address" required></textarea><br>
    <button type="submit">Complete Purchase</button>
</form>


<?php
session_start();
require_once 'db_connection.php';

// Fetch products from the database
$sql = "SELECT * FROM products";
$result = $conn->query($sql);

if ($result->num_rows > 0) {
    while ($row = $result->fetch_assoc()) {
        echo "<div class='product'>";
        echo "<h3>{$row['name']}</h3>";
        echo "<p>Price: \${$row['price']}</p>";
        echo "<p>Description: {$row['description']}</p>";
        echo "<form action='add_to_cart.php' method='POST'>";
        echo "<input type='hidden' name='product_id' value='{$row['id']}'>";
        echo "<input type='number' name='quantity' min='1' max='{$row['stock']}' value='1'>";
        echo "<button type='submit'>Add to Cart</button>";
        echo "</form>";
        echo "</div>";
    }
} else {
    echo "No products available.";
}

$conn->close();
?>


<?php
session_start();
require_once 'db_connection.php';

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $product_id = $_POST['product_id'];
    $quantity = $_POST['quantity'];

    // Check if the product exists and has sufficient stock
    $sql = "SELECT * FROM products WHERE id = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("i", $product_id);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        $product = $result->fetch_assoc();

        // Add to cart or update quantity
        if (isset($_SESSION['cart'][$product_id])) {
            $_SESSION['cart'][$product_id]['quantity'] += $quantity;
        } else {
            $_SESSION['cart'][$product_id] = array(
                'name' => $product['name'],
                'price' => $product['price'],
                'quantity' => $quantity
            );
        }

        header("Location: cart.php");
        exit();
    }
}

$conn->close();
?>


<?php
session_start();
require_once 'db_connection.php';

if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <h1>Your Shopping Cart</h1>
    <?php if (empty($_SESSION['cart'])): ?>
        <p>Your cart is empty.</p>
    <?php else: ?>
        <form action="checkout.php" method="POST">
            <table>
                <tr>
                    <th>Product Name</th>
                    <th>Price</th>
                    <th>Quantity</th>
                    <th>Total</th>
                    <th>Action</th>
                </tr>
                <?php foreach ($_SESSION['cart'] as $id => $item): ?>
                    <tr>
                        <td><?php echo $item['name']; ?></td>
                        <td>$<?php echo number_format($item['price'], 2); ?></td>
                        <td><input type="number" name="quantity[<?php echo $id; ?>]" min="1" value="<?php echo $item['quantity']; ?>"></td>
                        <td>$<?php echo number_format($item['price'] * $item['quantity'], 2); ?></td>
                        <td><button type="submit" name="remove_item" value="<?php echo $id; ?>">Remove</button></td>
                    </tr>
                <?php endforeach; ?>
            </table>
            <br>
            <button type="submit" name="update_cart">Update Cart</button>
            <button type="submit" name="checkout">Checkout</button>
        </form>
    <?php endif; ?>
    <a href="index.php">Continue Shopping</a>
</body>
</html>

<?php
// Update cart or remove items
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    if (isset($_POST['update_cart'])) {
        foreach ($_POST['quantity'] as $id => $qty) {
            $_SESSION['cart'][$id]['quantity'] = $qty;
        }
        header("Location: cart.php");
        exit();
    } elseif (isset($_POST['remove_item'])) {
        unset($_SESSION['cart'][$_POST['remove_item']]);
        header("Location: cart.php");
        exit();
    }
}

$conn->close();
?>


<?php
session_start();

if (!isset($_SESSION['cart']) || empty($_SESSION['cart'])) {
    header("Location: index.php");
    exit();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
</head>
<body>
    <h1>Checkout</h1>
    <form action="confirmation.php" method="POST">
        <div class="payment-info">
            <label for="name">Name:</label>
            <input type="text" id="name" name="name" required>

            <label for="card_number">Card Number:</label>
            <input type="text" id="card_number" name="card_number" required>

            <label for="expiration_date">Expiration Date:</label>
            <input type="text" id="expiration_date" name="expiration_date" required>

            <label for="cvv">CVV:</label>
            <input type="text" id="cvv" name="cvv" required>
        </div>

        <button type="submit">Complete Purchase</button>
    </form>
</body>
</html>


<?php
session_start();

if (!isset($_SESSION['cart']) || empty($_SESSION['cart'])) {
    header("Location: index.php");
    exit();
}

require_once 'db_connection.php';

// Calculate total price
$total_price = 0;
foreach ($_SESSION['cart'] as $item) {
    $total_price += $item['price'] * $item['quantity'];
}

// Insert order into database
$sql = "INSERT INTO orders (user_id, product_id, quantity, total_price) VALUES (?, ?, ?, ?)";
$stmt = $conn->prepare($sql);
$stmt->bind_param("iidi", $_SESSION['user_id'], $product_id, $quantity, $total_price);

if ($stmt->execute()) {
    // Clear cart
    unset($_SESSION['cart']);
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Order Confirmation</title>
</head>
<body>
    <h1>Thank you for your purchase!</h1>
    <p>Your order has been successfully placed.</p>
    <a href="index.php">Continue Shopping</a>
</body>
</html>

<?php
$conn->close();
?>


<?php
$servername = "localhost";
$username = "root";
$password = "";
$dbname = "your_database";

// Create connection
$conn = new mysqli($servername, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}
?>


<!DOCTYPE html>
<html>
<head>
    <title>Product Page</title>
</head>
<body>
    <?php
    // Connect to database
    $conn = mysqli_connect("localhost", "username", "password", "database");
    
    // Retrieve product information
    $productId = $_GET['id'];
    $query = "SELECT * FROM products WHERE id = ?";
    $stmt = mysqli_prepare($conn, $query);
    mysqli_stmt_bind_param($stmt, "i", $productId);
    mysqli_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);
    
    if ($row = mysqli_fetch_assoc($result)) {
        echo "<h1>" . $row['name'] . "</h1>";
        echo "<p>Price: $" . number_format($row['price'], 2) . "</p>";
        echo "<form action='add_to_cart.php' method='post'>";
        echo "<input type='hidden' name='product_id' value='" . $row['id'] . "'>";
        echo "<label>Quantity:</label>";
        echo "<input type='number' name='quantity' min='1' max='" . $row['stock'] . "' required>";
        echo "<br><br>";
        if (isset($_SESSION['user_id'])) {
            echo "<button type='submit'>Add to Cart</button>";
        } else {
            echo "<a href='login.php'>Login to Add to Cart</a>";
        }
        echo "</form>";
    } else {
        echo "Product not found.";
    }
    
    mysqli_close($conn);
    ?>
</body>
</html>


<?php
session_start();

// Connect to database
$conn = mysqli_connect("localhost", "username", "password", "database");

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Check if user is logged in
if (!isset($_SESSION['user_id'])) {
    header("Location: login.php");
    exit();
}

// Get form data
$product_id = $_POST['product_id'];
$quantity = $_POST['quantity'];

// Validate input
if (!is_numeric($product_id) || $product_id <= 0) {
    die("Invalid product ID.");
}
if (!is_numeric($quantity) || $quantity < 1) {
    die("Invalid quantity.");
}

// Check if product exists and has sufficient stock
$query = "SELECT * FROM products WHERE id = ? AND stock >= ?";
$stmt = mysqli_prepare($conn, $query);
mysqli_stmt_bind_param($stmt, "ii", $product_id, $quantity);
mysqli_execute($stmt);
$result = mysqli_stmt_get_result($stmt);

if (mysqli_num_rows($result) == 0) {
    die("Product not available or insufficient stock.");
}

// Insert into orders table
$query = "INSERT INTO orders (user_id, product_id, quantity, total_price) VALUES (?, ?, ?, ?)";
$stmt = mysqli_prepare($conn, $query);
$current_date = date('Y-m-d H:i:s');
mysqli_stmt_bind_param($stmt, "iisi", $_SESSION['user_id'], $product_id, $quantity, $quantity * $row['price']);

if (mysqli_execute($stmt)) {
    // Update product stock
    $update_query = "UPDATE products SET stock = stock - ? WHERE id = ?";
    $update_stmt = mysqli_prepare($conn, $update_query);
    mysqli_stmt_bind_param($update_stmt, "ii", $quantity, $product_id);
    mysqli_execute($update_stmt);
    
    echo "Order placed successfully!";
} else {
    die("Error placing order: " . mysqli_error($conn));
}

mysqli_close($conn);

// Redirect back to product page
header("Location: product_page.php?id=$product_id");
exit();


<?php
session_start();

// Destroy session and clear cookies
unset($_SESSION['user_id']);
session_unset();
session_destroy();

// Clear cookies
setcookie('PHPSESSID', '', time() - 3600);
setcookie('username', '', time() - 3600);

// Redirect to homepage
header("Location: index.php");
exit();


<?php
// Database connection
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'shopping_cart';

$conn = mysqli_connect($host, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Create necessary tables if they don't exist
$sql = "CREATE TABLE IF NOT EXISTS products (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255),
    price DECIMAL(10, 2)
)";

mysqli_query($conn, $sql);

$sql = "CREATE TABLE IF NOT EXISTS users (
    id INT AUTO_INCREMENT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    password VARCHAR(255)
)";

mysqli_query($conn, $sql);

$sql = "CREATE TABLE IF NOT EXISTS orders (
    id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT,
    total DECIMAL(10, 2),
    order_date DATETIME
)";

mysqli_query($conn, $sql);

$sql = "CREATE TABLE IF NOT EXISTS order_items (
    id INT AUTO_INCREMENT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    price DECIMAL(10, 2)
)";

mysqli_query($conn, $sql);

$sql = "CREATE TABLE IF NOT EXISTS payments (
    id INT AUTO_INCREMENT PRIMARY KEY,
    order_id INT,
    payment_method VARCHAR(255),
    transaction_id VARCHAR(255),
    amount DECIMAL(10, 2)
)";

mysqli_query($conn, $sql);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <?php
    // Display products
    function displayProducts() {
        global $conn;
        $sql = "SELECT * FROM products";
        $result = mysqli_query($conn, $sql);
        
        if (mysqli_num_rows($result) > 0) {
            while ($row = mysqli_fetch_assoc($result)) {
                echo "<div>";
                echo "<h3>" . $row['name'] . "</h3>";
                echo "<p>Price: $" . number_format($row['price'], 2) . "</p>";
                echo "<form action='add_to_cart.php' method='post'>";
                echo "<input type='hidden' name='product_id' value='" . $row['id'] . "'>";
                echo "<input type='number' name='quantity' min='1' max='99' value='1'>";
                echo "<input type='submit' name='add_to_cart' value='Add to Cart'>";
                echo "</form>";
                echo "</div><br>";
            }
        } else {
            echo "No products available.";
        }
    }

    // Add product to cart
    function addToCart($product_id, $quantity) {
        session_start();
        
        if (!isset($_SESSION['cart'])) {
            $_SESSION['cart'] = array();
        }
        
        if (isset($_SESSION['cart'][$product_id])) {
            $_SESSION['cart'][$product_id] += $quantity;
        } else {
            $_SESSION['cart'][$product_id] = $quantity;
        }
    }

    // View cart
    function viewCart() {
        session_start();
        echo "<h2>Your Cart</h2>";
        
        if (empty($_SESSION['cart'])) {
            echo "Your cart is empty.";
            return;
        }
        
        echo "<table border='1'>";
        echo "<tr><th>Product</th><th>Quantity</th><th>Price</th><th>Total</th><th>Action</th></tr>";
        
        foreach ($_SESSION['cart'] as $product_id => $quantity) {
            global $conn;
            $sql = "SELECT * FROM products WHERE id = ?";
            $stmt = mysqli_prepare($conn, $sql);
            mysqli_stmt_bind_param($stmt, "i", $product_id);
            mysqli_stmt_execute($stmt);
            $result = mysqli_stmt_get_result($stmt);
            
            if ($row = mysqli_fetch_assoc($result)) {
                echo "<tr>";
                echo "<td>" . $row['name'] . "</td>";
                echo "<td>" . $quantity . "</td>";
                echo "<td>$" . number_format($row['price'], 2) . "</td>";
                echo "<td>$" . number_format($row['price'] * $quantity, 2) . "</td>";
                echo "<td><a href='remove_from_cart.php?product_id=" . $product_id . "'>Remove</a></td>";
                echo "</tr>";
            }
        }
        
        echo "</table>";
    }

    // Checkout process
    function checkout() {
        session_start();
        global $conn;
        
        if (empty($_SESSION['cart'])) {
            header("Location: index.php");
            return;
        }
        
        if (!isset($_SESSION['user_id'])) {
            header("Location: login.php");
            return;
        }
        
        echo "<h2>Checkout</h2>";
        echo "<form action='process_payment.php' method='post'>";
        echo "<div><label>Shipping Address:</label><br>";
        echo "<textarea name='shipping_address' rows='5' cols='40'></textarea></div><br>";
        echo "<div><label>Payment Method:</label><br>";
        echo "<select name='payment_method'>";
        echo "<option value='credit_card'>Credit Card</option>";
        echo "<option value='paypal'>PayPal</option>";
        echo "</select></div><br>";
        echo "<input type='submit' value='Place Order'>";
        echo "</form>";
    }

    // Process payment
    function processPayment() {
        session_start();
        global $conn;
        
        if (empty($_SESSION['cart'])) {
            header("Location: index.php");
            return;
        }
        
        if (!isset($_SESSION['user_id'])) {
            header("Location: login.php");
            return;
        }
        
        // Calculate total
        $total = 0;
        foreach ($_SESSION['cart'] as $product_id => $quantity) {
            $sql = "SELECT * FROM products WHERE id = ?";
            $stmt = mysqli_prepare($conn, $sql);
            mysqli_stmt_bind_param($stmt, "i", $product_id);
            mysqli_stmt_execute($stmt);
            $result = mysqli_stmt_get_result($stmt);
            
            if ($row = mysqli_fetch_assoc($result)) {
                $total += $row['price'] * $quantity;
            }
        }
        
        // Insert order
        $sql = "INSERT INTO orders (user_id, total, order_date) VALUES (?, ?, NOW())";
        $stmt = mysqli_prepare($conn, $sql);
        mysqli_stmt_bind_param($stmt, "id", $_SESSION['user_id'], $total);
        mysqli_stmt_execute($stmt);
        $order_id = mysqli_insert_id($conn);
        
        // Insert order items
        foreach ($_SESSION['cart'] as $product_id => $quantity) {
            $sql = "INSERT INTO order_items (order_id, product_id, quantity, price) VALUES (?, ?, ?, ?)";
            $stmt = mysqli_prepare($conn, $sql);
            $price = 0;
            $sql_product = "SELECT * FROM products WHERE id = ?";
            $stmt_product = mysqli_prepare($conn, $sql_product);
            mysqli_stmt_bind_param($stmt_product, "i", $product_id);
            mysqli_stmt_execute($stmt_product);
            $result_product = mysqli_stmt_get_result($stmt_product);
            
            if ($row = mysqli_fetch_assoc($result_product)) {
                $price = $row['price'];
            }
            
            mysqli_stmt_bind_param($stmt, "iiid", $order_id, $product_id, $quantity, $price);
            mysqli_stmt_execute($stmt);
        }
        
        // Insert payment
        $sql_payment = "INSERT INTO payments (order_id, payment_method, transaction_id, amount) VALUES (?, ?, 'transaction_" . rand(1000, 9999) . "', ?)";
        $stmt_payment = mysqli_prepare($conn, $sql_payment);
        mysqli_stmt_bind_param($stmt_payment, "isd", $order_id, $_POST['payment_method'], $total);
        mysqli_stmt_execute($stmt_payment);
        
        // Clear cart
        unset($_SESSION['cart']);
        
        header("Location: purchase_confirmation.php?order_id=" . $order_id);
    }

    // Purchase confirmation
    function purchaseConfirmation() {
        session_start();
        global $conn;
        
        if (!isset($_GET['order_id'])) {
            header("Location: index.php");
            return;
        }
        
        $order_id = $_GET['order_id'];
        $sql = "SELECT * FROM orders WHERE id = ?";
        $stmt = mysqli_prepare($conn, $sql);
        mysqli_stmt_bind_param($stmt, "i", $order_id);
        mysqli_stmt_execute($stmt);
        $result = mysqli_stmt_get_result($stmt);
        
        if ($row = mysqli_fetch_assoc($result)) {
            echo "<h2>Purchase Confirmation</h2>";
            echo "<p>Order ID: " . $row['id'] . "</p>";
            echo "<p>Total Amount: $" . number_format($row['total'], 2) . "</p>";
            echo "<p>Order Date: " . $row['order_date'] . "</p>";
        } else {
            header("Location: index.php");
        }
    }

    // Error handling
    function handleError($message) {
        echo "<div style='color: red;'>" . $message . "</div><br>";
    }
?>


<?php
// Connect to the database
$host = 'localhost';
$dbname = 'my_store';
$username = 'root';
$password = '';

try {
    $pdo = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    die('Connection failed: ' . $e->getMessage());
}

// Get all products
$stmt = $pdo->query("SELECT * FROM products");
$products = $stmt->fetchAll(PDO::FETCH_ASSOC);

// Display products
foreach ($products as $product) {
    echo "<div class='product'>";
    echo "<h2>{$product['name']}</h2>";
    echo "<p>Price: \${$product['price']}</p>";
    echo "<form action='add_to_cart.php' method='post'>";
    echo "<input type='hidden' name='id' value='{$product['id']}'>";
    echo "<input type='number' name='quantity' min='1' max='{$product['stock']}' placeholder='Quantity'>";
    echo "<button type='submit'>Add to Cart</button>";
    echo "</form>";
    echo "</div>";
}
?>


<?php
session_start();

// Connect to database
require_once 'products.php';

// Get product details
$product_id = $_POST['id'];
$quantity = $_POST['quantity'];

$stmt = $pdo->prepare("SELECT * FROM products WHERE id = ?");
$stmt->execute([$product_id]);
$product = $stmt->fetch(PDO::FETCH_ASSOC);

if ($quantity > 0 && $quantity <= $product['stock']) {
    // Add to cart
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }
    
    $_SESSION['cart'][$product_id] = array(
        'name' => $product['name'],
        'price' => $product['price'],
        'quantity' => $quantity,
        'total_price' => $product['price'] * $quantity
    );
}

header('Location: cart.php');
exit();
?>


<?php
session_start();

// Connect to database
require_once 'products.php';

$total = 0;
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
</head>
<body>
    <div class="container mt-5">
        <h2>Your Shopping Cart</h2>
        
        <?php if (!empty($_SESSION['cart'])): ?>
            <table class="table table-bordered">
                <thead>
                    <tr>
                        <th>Product Name</th>
                        <th>Quantity</th>
                        <th>Price</th>
                        <th>Total</th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tbody>
                    <?php foreach ($_SESSION['cart'] as $id => $item): ?>
                        <tr>
                            <td><?= $item['name'] ?></td>
                            <td><?= $item['quantity'] ?></td>
                            <td>$<?= number_format($item['price'], 2) ?></td>
                            <td>$<?= number_format($item['total_price'], 2) ?></td>
                            <td><a href="remove_from_cart.php?id=<?= $id ?>">Remove</a></td>
                        </tr>
                        <?php $total += $item['total_price'] ?>
                    <?php endforeach; ?>
                </tbody>
            </table>
            
            <h3>Total: $<?= number_format($total, 2) ?></h3>
            
            <form action="checkout.php" method="post">
                <button type="submit" class="btn btn-primary">Proceed to Checkout</button>
            </form>
        <?php else: ?>
            <p>Your cart is empty.</p>
        <?php endif; ?>
    </div>
</body>
</html>


<?php
session_start();

// Get product id
$product_id = $_GET['id'];

if (isset($_SESSION['cart'][$product_id])) {
    unset($_SESSION['cart'][$product_id]);
}

header('Location: cart.php');
exit();
?>


<?php
session_start();

// If cart is empty, redirect to cart
if (empty($_SESSION['cart'])) {
    header('Location: cart.php');
    exit();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
</head>
<body>
    <div class="container mt-5">
        <h2> Checkout </h2>
        
        <form action="process_order.php" method="post">
            <div class="form-group">
                <label for="name">Name:</label>
                <input type="text" class="form-control" id="name" name="name" required>
            </div>

            <div class="form-group">
                <label for="email">Email:</label>
                <input type="email" class="form-control" id="email" name="email" required>
            </div>

            <div class="form-group">
                <label for="phone">Phone:</label>
                <input type="tel" class="form-control" id="phone" name="phone" required>
            </div>

            <div class="form-group">
                <label for="address">Address:</label>
                <textarea class="form-control" id="address" name="address" required></textarea>
            </div>

            <div class="form-group">
                <label for="city">City:</label>
                <input type="text" class="form-control" id="city" name="city" required>
            </div>

            <div class="form-group">
                <label for="state">State:</label>
                <select class="form-control" id="state" name="state" required>
                    <!-- Add state options -->
                </select>
            </div>

            <div class="form-group">
                <label for="zip_code">ZIP Code:</label>
                <input type="text" class="form-control" id="zip_code" name="zip_code" required>
            </div>

            <div class="form-group">
                <label for="payment_method">Payment Method:</label>
                <select class="form-control" id="payment_method" name="payment_method" required>
                    <option value="">Select Payment Method</option>
                    <option value="credit_card">Credit Card</option>
                    <option value="debit_card">Debit Card</option>
                    <option value="paypal">PayPal</option>
                </select>
            </div>

            <button type="submit" class="btn btn-primary">Place Order</button>
        </form>
    </div>
</body>
</html>


<?php
session_start();

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get cart contents
    $cart = $_SESSION['cart'];
    
    // Validate required fields
    if (empty($_POST['name']) || empty($_POST['email']) || empty($_POST['phone'])) {
        header('Location: checkout.php');
        exit();
    }

    // Connect to database
    require_once 'products.php';

    try {
        // Start transaction
        $pdo->beginTransaction();

        // Insert order into orders table
        $orderStmt = $pdo->prepare("INSERT INTO orders (name, email, phone, address, city, state, zip_code) VALUES (?, ?, ?, ?, ?, ?, ?)");
        $orderStmt->execute([
            $_POST['name'],
            $_POST['email'],
            $_POST['phone'],
            $_POST['address'],
            $_POST['city'],
            $_POST['state'],
            $_POST['zip_code']
        ]);
        
        $orderId = $pdo->lastInsertId();

        // Insert order items into order_items table
        foreach ($cart as $item) {
            $itemStmt = $pdo->prepare("INSERT INTO order_items (order_id, product_name, price, quantity) VALUES (?, ?, ?, ?)");
            $itemStmt->execute([
                $orderId,
                $item['name'],
                $item['price'],
                $item['quantity']
            ]);
        }

        // Update stock levels
        foreach ($cart as $id => $item) {
            $updateStock = $pdo->prepare("UPDATE products SET stock = stock - ? WHERE id = ?");
            $updateStock->execute([$item['quantity'], $id]);
        }

        // Commit transaction
        $pdo->commit();

        // Clear cart
        unset($_SESSION['cart']);

        // Redirect to thank you page
        header('Location: thankyou.php');
        exit();
    } catch (PDOException $e) {
        // Rollback if error occurs
        $pdo->rollBack();
        die("Error occurred during checkout: " . $e->getMessage());
    }
}
?>


<?php
session_start();

// Clear cart if necessary
unset($_SESSION['cart']);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Thank You</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
</head>
<body>
    <div class="container mt-5">
        <h1>Thank you for your purchase!</h1>
        <p>We'll be in touch with you soon to confirm your order.</p>
    </div>
</body>
</html>


require_once 'stripe-php/autoload.php';

\Stripe\Stripe::setApiKey('your_stripe_secret_key');

try {
    // ... previous code ...

    $total = 0;
    foreach ($cart as $item) {
        $total += $item['total_price'];
    }

    $charge = \Stripe\Charge::create([
        'amount' => $total * 100, // Convert to cents
        'currency' => 'usd',
        'source' => $_POST['stripeToken'],
        'description' => 'Order #' . $orderId,
    ]);

    if ($charge->status == 'succeeded') {
        // Mark order as paid
        $pdo->prepare("UPDATE orders SET payment_status = ? WHERE id = ?")
            ->execute(['paid', $orderId]);
        
        header('Location: thankyou.php');
        exit();
    } else {
        throw new Exception("Payment failed");
    }
} catch (Exception $e) {
    // Handle error
    die($e->getMessage());
}


<?php
// Database connection
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "cart_db";

// Create connection
$conn = new mysqli($servername, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Initialize session
session_start();

// Start creating the cart if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Shopping Cart</title>
    <style>
        body {
            font-family: Arial, sans-serif;
        }
        .product-list {
            margin: 20px;
        }
        .cart-item {
            margin: 10px;
            padding: 10px;
            border: 1px solid #ddd;
        }
    </style>
</head>
<body>
    <h1>Shopping Cart</h1>
    
    <!-- Display product categories -->
    <div class="product-list">
        <?php
        // Get all products from database
        $sql = "SELECT * FROM products";
        $result = $conn->query($sql);
        
        if ($result->num_rows > 0) {
            while ($row = $result->fetch_assoc()) {
                echo "<div class='cart-item'>";
                echo "<h3>" . $row['name'] . "</h3>";
                echo "<p>Price: $" . number_format($row['price'], 2) . "</p>";
                echo "<p>Category: " . $row['category'] . "</p>";
                echo "<a href='index.php?action=add&id=" . $row['id'] . "'>Add to Cart</a>";
                echo "</div>";
            }
        } else {
            echo "No products found.";
        }
        ?>
    </div>

    <!-- Display cart contents -->
    <h2>Your Cart:</h2>
    <?php
    if (!empty($_SESSION['cart'])) {
        $total = 0;
        echo "<form action='index.php?action=update' method='post'>";
        foreach ($_SESSION['cart'] as $product_id => $quantity) {
            $sql = "SELECT * FROM products WHERE id=" . $product_id;
            $result = $conn->query($sql);
            $row = $result->fetch_assoc();
            
            echo "<div class='cart-item'>";
            echo "<h3>" . $row['name'] . "</h3>";
            echo "<p>Price: $" . number_format($row['price'], 2) . "</p>";
            echo "<input type='number' name='" . $product_id . "' value='" . $quantity . "'>";
            echo "<a href='index.php?action=remove&id=" . $product_id . "'>Remove</a>";
            echo "</div>";
            
            $total += $row['price'] * $quantity;
        }
        echo "<h3>Total: $" . number_format($total, 2) . "</h3>";
        echo "<input type='submit' value='Update Cart'>";
        echo "</form>";
    } else {
        echo "Your cart is empty.";
    }
    ?>

    <!-- Checkout button -->
    <?php if (!empty($_SESSION['cart'])) { ?>
        <a href="checkout.php">Proceed to Checkout</a>
    <?php } ?>

<?php
// Handle actions
if (isset($_GET['action'])) {
    $action = $_GET['action'];
    
    switch ($action) {
        case 'add':
            $product_id = $_GET['id'];
            if (!empty($product_id)) {
                if (isset($_SESSION['cart'][$product_id])) {
                    $_SESSION['cart'][$product_id]++;
                } else {
                    $_SESSION['cart'][$product_id] = 1;
                }
            }
            break;
            
        case 'remove':
            $product_id = $_GET['id'];
            unset($_SESSION['cart'][$product_id]);
            break;
    }
}

// Update quantities
if (isset($_POST)) {
    foreach ($_POST as $key => $value) {
        if ($value < 1) {
            unset($_SESSION['cart'][$key]);
        } else {
            $_SESSION['cart'][$key] = $value;
        }
    }
}
?>

</body>
</html>

<?php
// Close database connection
$conn->close();
?>


<?php
session_start();
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Checkout</title>
</head>
<body>
    <?php if (!empty($_SESSION['cart'])) { ?>
        <h1>Checkout Page</h1>
        <p>Your order total is: $<?php echo number_format($total, 2); ?></p>
        
        <!-- Add checkout form -->
        <form action="process_order.php" method="post">
            <label for="name">Name:</label><br>
            <input type="text" id="name" name="name"><br>
            
            <label for="email">Email:</label><br>
            <input type="email" id="email" name="email"><br>
            
            <label for="address">Address:</label><br>
            <textarea id="address" name="address"></textarea><br>
            
            <input type="submit" value="Place Order">
        </form>
    <?php } else { ?>
        <p>Your cart is empty. Please add items to your cart first.</p>
    <?php } ?>

    <!-- Go back link -->
    <a href="index.php">Go Back</a>
</body>
</html>


<?php
// Initialize session
session_start();

// Define products array
$products = array(
    array(
        'id' => 1,
        'name' => 'Product 1',
        'description' => 'Description for Product 1',
        'price' => 29.99
    ),
    array(
        'id' => 2,
        'name' => 'Product 2',
        'description' => 'Description for Product 2',
        'price' => 49.99
    ),
    // Add more products as needed
);
?>


<!DOCTYPE html>
<html>
<head>
    <title>Store - Products</title>
    <style>
        .product-card {
            border: 1px solid #ddd;
            padding: 10px;
            margin: 10px;
        }
    </style>
</head>
<body>
    <h1>Welcome to Our Store</h1>
    
    <a href="cart.php">View Cart</a>

    <?php
    // Include products array
    include 'products_array.php';

    foreach ($products as $product) {
        echo "<div class='product-card'>";
        echo "<h2>{$product['name']}</h2>";
        echo "<p>{$product['description']}</p>";
        echo "<p>Price: \${$product['price']}</p>";
        echo "<a href='add_to_cart.php?id={$product['id']}'>Add to Cart</a>";
        echo "</div>";
    }
    ?>
</body>
</html>


<?php
session_start();

// Get product ID from query string
$product_id = isset($_GET['id']) ? intval($_GET['id']) : 0;

// Include products array
include 'products_array.php';

// Find the product in the array
foreach ($products as $product) {
    if ($product['id'] == $product_id) {
        // Add to cart or update quantity
        if (isset($_SESSION['cart'][$product_id])) {
            $_SESSION['cart'][$product_id]['quantity']++;
        } else {
            $_SESSION['cart'][$product_id] = array(
                'name' => $product['name'],
                'price' => $product['price'],
                'quantity' => 1
            );
        }
        break;
    }
}

// Redirect back to products page
header('Location: products.php');
exit();
?>


<!DOCTYPE html>
<html>
<head>
    <title>Store - Cart</title>
    <style>
        .product-item {
            border: 1px solid #ddd;
            padding: 10px;
            margin: 10px;
        }
    </style>
</head>
<body>
    <h1>Your Shopping Cart</h1>
    
    <?php
    session_start();

    if (empty($_SESSION['cart'])) {
        echo "<p>Your cart is empty.</p>";
        echo "<a href='products.php'>Continue Shopping</a>";
        exit();
    }

    $total = 0;
    foreach ($_SESSION['cart'] as $id => $item) {
        echo "<div class='product-item'>";
        echo "<h2>{$item['name']}</h2>";
        echo "<p>Quantity: {$item['quantity']}</p>";
        echo "<p>Price: \${$item['price']}</p>";
        echo "<a href='remove_from_cart.php?id=$id'>Remove</a>";
        echo "</div>";
        
        $total += ($item['price'] * $item['quantity']);
    }

    echo "<h2>Total: \$$total</h2>";
    ?>

    <a href="checkout.php">Proceed to Checkout</a> |
    <a href="products.php">Continue Shopping</a>
</body>
</html>


<?php
session_start();

// Get product ID from query string
$product_id = isset($_GET['id']) ? intval($_GET['id']) : 0;

if (!empty($product_id)) {
    unset($_SESSION['cart'][$product_id]);
}

// Redirect back to cart page
header('Location: cart.php');
exit();
?>


<!DOCTYPE html>
<html>
<head>
    <title>Store - Checkout</title>
</head>
<body>
    <h1>Checkout</h1>

    <?php
    session_start();

    if (empty($_SESSION['cart'])) {
        echo "<p>Your cart is empty.</p>";
        echo "<a href='products.php'>Continue Shopping</a>";
        exit();
    }

    $total = 0;
    foreach ($_SESSION['cart'] as $id => $item) {
        echo "<h2>{$item['name']}</h2>";
        echo "<p>Quantity: {$item['quantity']}</p>";
        echo "<p>Price: \${$item['price']}</p><br/>";
        
        $total += ($item['price'] * $item['quantity']);
    }

    echo "<h2>Total Amount: \$$total</h2>";

    if (isset($_POST['confirm'])) {
        // Here you would typically connect to a database and store the order
        // For now, we'll just display a confirmation message
        echo "<h2>Thank you for your purchase!</h2>";
        echo "<p>Your order has been processed.</p>";
        
        // Clear the cart
        unset($_SESSION['cart']);
    } else {
        ?>
        <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
            <input type="submit" name="confirm" value="Confirm Purchase">
            <a href="cart.php">Edit Cart</a>
        </form>
        <?php
    }
    ?>

</body>
</html>


<?php
session_start();

// Database configuration
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

// Check if user is logged in
if (!isset($_SESSION['user_id'])) {
    header('Location: login.php');
    exit();
}

$user_id = $_SESSION['user_id'];

// Get product ID from query parameter
$product_id = isset($_GET['id']) ? intval($_GET['id']) : 0;

// Retrieve product details
try {
    $stmt = $conn->prepare("SELECT id, name, price FROM products WHERE id = ?");
    $stmt->execute([$product_id]);
    $product = $stmt->fetch(PDO::FETCH_ASSOC);
    
    if (!$product) {
        die('Product not found');
    }
} catch(PDOException $e) {
    die('Error fetching product: ' . $e->getMessage());
}

// Handle purchase
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    try {
        // Calculate total price
        $quantity = isset($_POST['quantity']) ? intval($_POST['quantity']) : 1;
        $total_price = $product['price'] * $quantity;

        // Insert order into database
        $stmt = $conn->prepare("INSERT INTO orders (user_id, product_id, quantity, total_price) VALUES (?, ?, ?, ?)");
        $stmt->execute([$user_id, $product_id, $quantity, $total_price]);

        if ($stmt->rowCount() > 0) {
            echo '<div class="success">Purchase successful!</div>';
            // You can add more success handling here like redirecting to a thank you page
        } else {
            echo '<div class="error">Error processing your purchase.</div>';
        }
    } catch(PDOException $e) {
        die('Database error: ' . $e->getMessage());
    }
}

?>

<!DOCTYPE html>
<html>
<head>
    <title>Purchase Product</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
        }
        .product-info {
            margin-bottom: 20px;
        }
        .success {
            color: green;
        }
        .error {
            color: red;
        }
    </style>
</head>
<body>
    <h1>Purchase Product</h1>
    
    <?php if (isset($_POST['purchase'])) { 
        // Show purchase confirmation
    } else { ?>
    <div class="product-info">
        <h2><?php echo $product['name']; ?></h2>
        <p>Price: $<?php echo number_format($product['price'], 2); ?></p>
        
        <!-- Product image -->
        <?php 
        // Assuming you have a products_images table or folder
        // Add your code here to display the product image
        ?>

        <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
            <input type="hidden" name="id" value="<?php echo $product_id; ?>">
            <label>Quantity: </label>
            <input type="number" name="quantity" min="1" value="1">
            <br>
            <button type="submit" name="purchase">Purchase</button>
        </form>
    </div>
    <?php } ?>

    <!-- Optional: Display cart or other purchase options -->
    
</body>
</html>

<?php
// Close database connection
$conn = null;
?>


<?php
class Database {
    private $host = 'localhost';
    private $dbname = 'your_database_name';
    private $username = 'root';
    private $password = '';
    public $conn;

    function __construct() {
        try {
            $this->conn = new mysqli($this->host, $this->username, $this->password, $this->dbname);
            if ($this->conn->connect_error) {
                die("Connection failed: " . $this->conn->connect_error);
            }
        } catch (Exception $e) {
            echo "Error: " . $e->getMessage();
        }
    }
}
?>


<?php
require_once 'database.php';

$db = new Database();

$sql = "SELECT * FROM products";
$result = $db->conn->query($sql);

if ($result->num_rows > 0) {
    while ($row = $result->fetch_assoc()) {
        echo "<div class='product'>";
        echo "<h2>" . $row['name'] . "</h2>";
        echo "<p>" . $row['description'] . "</p>";
        echo "<p>Price: $" . number_format($row['price'], 2) . "</p>";
        echo "<p>Stock: " . $row['stock'] . "</p>";
        echo "<form action='purchase.php' method='post'>";
        echo "<input type='hidden' name='product_id' value='" . $row['id'] . "'>";
        echo "<input type='number' name='quantity' min='1' max='" . $row['stock'] . "' required>";
        echo "<button type='submit'>Buy Now</button>";
        echo "</form>";
        echo "</div>";
    }
} else {
    echo "No products available.";
}
?>


<?php
session_start();
require_once 'database.php';

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $db = new Database();

    // Get product details
    $product_id = $_POST['product_id'];
    $quantity = $_POST['quantity'];

    $sql = "SELECT * FROM products WHERE id = ?";
    $stmt = $db->conn->prepare($sql);
    $stmt->bind_param("i", $product_id);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        $row = $result->fetch_assoc();
        $price = $row['price'];
        $stock = $row['stock'];

        // Check if quantity is valid
        if ($quantity < 1 || $quantity > $stock) {
            die("Invalid quantity. Please try again.");
        }

        // Calculate total amount
        $total_amount = $price * $quantity;

        // Deduct stock
        $sql = "UPDATE products SET stock = stock - ? WHERE id = ?";
        $stmt = $db->conn->prepare($sql);
        $stmt->bind_param("ii", $quantity, $product_id);
        $stmt->execute();

        // Insert order
        $user_id = 1; // Replace with actual user ID

        $sql = "INSERT INTO orders (product_id, user_id, quantity, total_amount) VALUES (?, ?, ?, ?)";
        $stmt = $db->conn->prepare($sql);
        $stmt->bind_param("iiid", $product_id, $user_id, $quantity, $total_amount);
        $stmt->execute();

        // Show confirmation message
        echo "Purchase successful!<br>";
        echo "Product: " . $row['name'] . "<br>";
        echo "Quantity: " . $quantity . "<br>";
        echo "Total Amount: $" . number_format($total_amount, 2) . "<br>";
    } else {
        die("Product not found.");
    }
}
?>


<?php
// Initialize session
session_start();

// Product list (simplified)
$products = array(
    1 => array('name' => 'Product 1', 'description' => 'Description for product 1', 'price' => 49.99),
    2 => array('name' => 'Product 2', 'description' => 'Description for product 2', 'price' => 29.99),
    3 => array('name' => 'Product 3', 'description' => 'Description for product 3', 'price' => 19.99),
);

// Initialize cart if not exists
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Handle add to cart action
if (isset($_GET['action']) && $_GET['action'] == 'add') {
    $productId = intval($_GET['id']);
    $selectedProduct = $products[$productId];
    
    // Add product to cart or increase quantity
    if (!isset($_SESSION['cart'][$productId])) {
        $_SESSION['cart'][$productId] = array(
            'name' => $selectedProduct['name'],
            'price' => $selectedProduct['price'],
            'quantity' => 1
        );
    } else {
        $_SESSION['cart'][$productId]['quantity']++;
    }
}

// Handle remove from cart action
if (isset($_GET['action']) && $_GET['action'] == 'remove') {
    $productId = intval($_GET['id']);
    unset($_SESSION['cart'][$productId]);
}

// Handle update cart quantities
if (isset($_POST['update_cart'])) {
    foreach ($_POST['quantity'] as $productId => $qty) {
        if ($qty < 1) {
            unset($_SESSION['cart'][$productId]);
        } else {
            $_SESSION['cart'][$productId]['quantity'] = $qty;
        }
    }
}

// Handle purchase
if (isset($_POST['purchase'])) {
    // Process payment and order here
    echo "<h2>Purchase Confirmation</h2>";
    echo "Thank you for your order!<br><br>";
    
    // Display order details
    display_cart();
    
    // You would typically connect to a payment gateway here
    // and then save the order to a database
    
    // For this example, we'll just clear the cart after purchase
    $_SESSION['cart'] = array();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Simple Store</title>
    <style>
        body { font-family: Arial, sans-serif; }
        .product-list { margin: 20px; }
        .cart { margin: 20px; border: 1px solid #ddd; padding: 15px; }
        .price { color: green; font-weight: bold; }
    </style>
</head>
<body>
    <h1>Welcome to Our Store</h1>

    <?php if (!empty($products)): ?>
        <div class="product-list">
            <h2>Available Products</h2>
            <?php foreach ($products as $id => $product): ?>
                <div style="border-bottom: 1px solid #ddd; padding: 10px;">
                    <h3><?php echo $product['name']; ?></h3>
                    <p><?php echo $product['description']; ?></p>
                    <p class="price">$<?php echo number_format($product['price'], 2); ?></p>
                    <a href="?action=add&id=<?php echo $id; ?>">Add to Cart</a> |
                    <a href="?action=view&">View Cart</a>
                </div>
            <?php endforeach; ?>
        </div>
    <?php endif; ?>

    <?php if (!empty($_SESSION['cart'])): ?>
        <div class="cart">
            <h2>Your Shopping Cart</h2>
            <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
                <table>
                    <tr>
                        <th>Product</th>
                        <th>Price</th>
                        <th>Quantity</th>
                        <th>Total</th>
                    </tr>
                    <?php foreach ($_SESSION['cart'] as $id => $item): ?>
                        <tr>
                            <td><?php echo $item['name']; ?></td>
                            <td class="price">$<?php echo number_format($item['price'], 2); ?></td>
                            <td><input type="number" name="quantity[<?php echo $id; ?>]" value="<?php echo $item['quantity']; ?>" min="1"></td>
                            <td class="price">$<?php echo number_format($item['price'] * $item['quantity'], 2); ?></td>
                        </tr>
                    <?php endforeach; ?>
                </table>
                <br>
                <input type="submit" name="update_cart" value="Update Cart">
                <input type="submit" name="purchase" value="Purchase">
            </form>
            <a href="?action=view&">Continue Shopping</a>
        </div>
    <?php else: ?>
        <p>Your cart is empty.</p>
    <?php endif; ?>

    <h3><a href="<?php echo $_SERVER['PHP_SELF']; ?>">Back to Products</a></h3>

</body>
</html>


<?php
session_start();
include('db_connection.php'); // Include your database connection file

// Add product to cart
if (isset($_POST['add_to_cart'])) {
    $product_id = $_POST['product_id'];
    $quantity = $_POST['quantity'];
    
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }
    
    if (!array_key_exists($product_id, $_SESSION['cart'])) {
        $_SESSION['cart'][$product_id] = 0;
    }
    
    $_SESSION['cart'][$product_id] += $quantity;
    
    echo "Product added to cart successfully!";
}

// View cart
function display_cart() {
    if (isset($_SESSION['cart']) && !empty($_SESSION['cart'])) {
        $total_price = 0;
        echo "<table>";
        echo "<tr><th>Product ID</th><th>Quantity</th><th>Total Price</th></tr>";
        
        foreach ($_SESSION['cart'] as $product_id => $quantity) {
            // Fetch product details from database
            $stmt = mysqli_prepare($conn, "SELECT name, price FROM products WHERE id = ?");
            mysqli_stmt_bind_param($stmt, "i", $product_id);
            mysqli_stmt_execute($stmt);
            $result = mysqli_stmt_get_result($stmt);
            
            if ($row = mysqli_fetch_assoc($result)) {
                $total_price += $row['price'] * $quantity;
                echo "<tr>";
                echo "<td>" . $row['name'] . "</td>";
                echo "<td>" . $quantity . "</td>";
                echo "<td>" . number_format($row['price'] * $quantity, 2) . "</td>";
                echo "</tr>";
            }
        }
        echo "</table>";
        echo "Total Price: $" . number_format($total_price, 2);
    } else {
        echo "Your cart is empty!";
    }
}

// Process purchase
if (isset($_POST['purchase'])) {
    if (!empty($_SESSION['cart'])) {
        // Insert order into database
        $order_date = date('Y-m-d H:i:s');
        $total_amount = 0;
        
        foreach ($_SESSION['cart'] as $product_id => $quantity) {
            // Get product price
            $stmt = mysqli_prepare($conn, "SELECT price FROM products WHERE id = ?");
            mysqli_stmt_bind_param($stmt, "i", $product_id);
            mysqli_stmt_execute($stmt);
            $result = mysqli_stmt_get_result($stmt);
            
            if ($row = mysqli_fetch_assoc($result)) {
                $total_amount += $row['price'] * $quantity;
            }
        }
        
        // Insert order
        $stmt = mysqli_prepare($conn, "INSERT INTO orders (order_date, total_amount) VALUES (?, ?)");
        mysqli_stmt_bind_param($stmt, "si", $order_date, $total_amount);
        mysqli_stmt_execute($stmt);
        $order_id = mysqli_insert_id($conn);
        
        // Insert order details
        foreach ($_SESSION['cart'] as $product_id => $quantity) {
            $stmt = mysqli_prepare($conn, "INSERT INTO order_details (order_id, product_id, quantity) VALUES (?, ?, ?)");
            mysqli_stmt_bind_param($stmt, "iii", $order_id, $product_id, $quantity);
            mysqli_stmt_execute($stmt);
            
            // Update product stock
            $stmt = mysqli_prepare($conn, "UPDATE products SET stock_quantity = stock_quantity - ? WHERE id = ?");
            mysqli_stmt_bind_param($stmt, "ii", $quantity, $product_id);
            mysqli_stmt_execute($stmt);
        }
        
        // Clear cart
        unset($_SESSION['cart']);
        
        echo "Purchase completed successfully!";
    } else {
        echo "Your cart is empty. Please add products first.";
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Purchase System</title>
</head>
<body>
    <!-- Add Product Form -->
    <h2>Add Product to Cart</h2>
    <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
        <input type="text" name="product_id" placeholder="Enter product ID">
        <input type="number" name="quantity" placeholder="Enter quantity">
        <button type="submit" name="add_to_cart">Add to Cart</button>
    </form>

    <!-- Display Cart -->
    <h2>Your Cart</h2>
    <?php display_cart(); ?>

    <!-- Purchase Button -->
    <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
        <button type="submit" name="purchase">Purchase</button>
    </form>
</body>
</html>


<?php
// Database connection
$host = 'localhost';
$user = 'root';
$password = '';
$dbname = 'purchase_system';

$conn = new mysqli($host, $user, $password, $dbname);
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Create tables if they don't exist
$sql = "CREATE TABLE IF NOT EXISTS products (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255),
    price DECIMAL(10, 2),
    description TEXT,
    stock INT
)";

$conn->query($sql);

$sql = "CREATE TABLE IF NOT EXISTS orders (
    id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT,
    total_amount DECIMAL(10, 2),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    payment_status ENUM('pending', 'completed') DEFAULT 'pending'
)";

$conn->query($sql);

$sql = "CREATE TABLE IF NOT EXISTS order_items (
    id INT AUTO_INCREMENT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT
)";

$conn->query($sql);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Purchase System</title>
    <style>
        .container { max-width: 800px; margin: 0 auto; padding: 20px; }
        .product { border: 1px solid #ddd; padding: 10px; margin-bottom: 10px; }
        .cart { margin-top: 20px; }
    </style>
</head>
<body>
    <div class="container">
        <?php
            // Display products
            $sql = "SELECT * FROM products";
            $result = $conn->query($sql);

            if ($result->num_rows > 0) {
                while ($row = $result->fetch_assoc()) {
                    echo "<div class='product'>";
                    echo "<h3>" . $row['name'] . "</h3>";
                    echo "<p>Price: $" . number_format($row['price'], 2) . "</p>";
                    echo "<p>Description: " . $row['description'] . "</p>";
                    echo "<form action='add_to_cart.php' method='post'>";
                    echo "<input type='hidden' name='product_id' value='" . $row['id'] . "'>";
                    echo "<input type='number' name='quantity' min='1' max='" . $row['stock'] . "' placeholder='Quantity'>";
                    echo "<button type='submit'>Add to Cart</button>";
                    echo "</form>";
                    echo "</div>";
                }
            } else {
                echo "No products available.";
            }

            // Display cart
            if (isset($_SESSION['cart'])) {
                $total = 0;
                echo "<h2>Your Cart:</h2>";
                echo "<div class='cart'>";
                foreach ($_SESSION['cart'] as $item) {
                    $sql = "SELECT * FROM products WHERE id=" . $item['product_id'];
                    $result = $conn->query($sql);
                    $product = $result->fetch_assoc();
                    
                    echo "<div>";
                    echo "<h3>" . $product['name'] . "</h3>";
                    echo "<p>Quantity: " . $item['quantity'] . "</p>";
                    echo "<p>Price: $" . number_format($product['price'], 2) . "</p>";
                    $total += $product['price'] * $item['quantity'];
                    echo "</div>";
                }
                echo "<h3>Total: $" . number_format($total, 2) . "</h3>";
                echo "<a href='checkout.php'>Checkout</a>";
                echo "</div>";
            }
        ?>
    </div>
</body>
</html>

<?php
// Add to cart functionality
if ($_SERVER['PHP_SELF'] == '/add_to_cart.php') {
    session_start();
    
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }

    $product_id = $_POST['product_id'];
    $quantity = $_POST['quantity'];

    // Check if product exists
    $sql = "SELECT * FROM products WHERE id=" . $product_id;
    $result = $conn->query($sql);
    
    if ($result->num_rows > 0) {
        $item = array(
            'product_id' => $product_id,
            'quantity' => $quantity
        );
        
        $_SESSION['cart'][] = $item;
    }

    header('Location: index.php');
}

// Checkout functionality
if ($_SERVER['PHP_SELF'] == '/checkout.php') {
    session_start();
    
    if (!empty($_SESSION['cart'])) {
        // Process order
        $sql = "INSERT INTO orders (user_id, total_amount) VALUES (?, ?)";
        
        $stmt = $conn->prepare($sql);
        $stmt->bind_param("is", 1, number_format($total, 2)); // Assuming user_id is 1 for demonstration
        
        if ($stmt->execute()) {
            $order_id = $stmt->insert_id;
            
            foreach ($_SESSION['cart'] as $item) {
                $sql = "INSERT INTO order_items (order_id, product_id, quantity) VALUES (?, ?, ?)";
                $stmt = $conn->prepare($sql);
                $stmt->bind_param("iii", $order_id, $item['product_id'], $item['quantity']);
                $stmt->execute();
            }
            
            // Clear cart
            unset($_SESSION['cart']);
            
            echo "Order placed successfully!";
        } else {
            echo "Error placing order.";
        }
    }
}
?>


<?php
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "myDB";

// Create connection
$conn = new mysqli($servername, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}
?>


<?php
include 'config.php';

$sql = "SELECT * FROM products";
$result = $conn->query($sql);

if ($result->num_rows > 0) {
    while ($row = $result->fetch_assoc()) {
        echo "<div class='product'>";
        echo "<h2>" . $row["name"] . "</h2>";
        echo "<p>Description: " . $row["description"] . "</p>";
        echo "<p>Price: $" . number_format($row["price"], 2) . "</p>";
        echo "<p>Stock: " . $row["stock"] . "</p>";
        echo "<a href='add_to_cart.php?id=" . $row["id"] . "' class='btn'>Add to Cart</a>";
        echo "</div>";
    }
} else {
    echo "No products found.";
}
$conn->close();
?>


<?php
session_start();

if (isset($_GET['id']) && is_numeric($_GET['id'])) {
    $product_id = $_GET['id'];
    
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }

    if (array_key_exists($product_id, $_SESSION['cart'])) {
        $_SESSION['cart'][$product_id]++;
    } else {
        $_SESSION['cart'][$product_id] = 1;
    }
}

header('Location: products.php');
exit();
?>


<?php
session_start();

if (empty($_SESSION['cart'])) {
    header('Location: products.php');
    exit();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
</head>
<body>
    <h1>Checkout</h1>
    
    <form action="process_checkout.php" method="post">
        <div class="order-info">
            <h2>Your Information</h2>
            <input type="text" name="name" placeholder="Full Name" required><br>
            <input type="email" name="email" placeholder="Email Address" required><br>
            <input type="tel" name="phone" placeholder="Phone Number" required><br>
            <textarea name="address" placeholder="Shipping Address" rows="4" cols="30" required></textarea><br>
            <input type="text" name="city" placeholder="City" required><br>
        </div>

        <div class="payment-info">
            <h2>Payment Information</h2>
            <select name="payment_method" required>
                <option value="">Select Payment Method</option>
                <option value="credit_card">Credit Card</option>
                <option value="debit_card">Debit Card</option>
                <option value="paypal">PayPal</option>
            </select><br>
        </div>

        <input type="submit" value="Complete Purchase">
    </form>
</body>
</html>


<?php
session_start();

include 'config.php';

if (empty($_SESSION['cart']) || empty($_POST)) {
    header('Location: checkout.php');
    exit();
}

// Validate input
foreach ($_POST as $key => $value) {
    $_POST[$key] = htmlspecialchars(strip_tags(trim($value)));
}

if (empty($_POST['name']) || empty($_POST['email']) || empty($_POST['phone']) || empty($_POST['address']) || empty($_POST['city'])) {
    die("Please fill in all required fields.");
}

// Calculate total amount
$total_amount = 0;
foreach ($_SESSION['cart'] as $product_id => $quantity) {
    $sql = "SELECT price FROM products WHERE id = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("i", $product_id);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        $row = $result->fetch_assoc();
        $total_amount += $quantity * $row['price'];
    }
}

// Insert order
$sql = "INSERT INTO orders (user_name, email, phone, address, city, total_amount, payment_method) 
        VALUES (?, ?, ?, ?, ?, ?, ?)";
$stmt = $conn->prepare($sql);
$stmt->bind_param("sssssd", $_POST['name'], $_POST['email'], $_POST['phone'], $_POST['address'], $_POST['city'], $total_amount, $_POST['payment_method']);

if ($stmt->execute()) {
    $order_id = $conn->insert_id;

    // Insert order details
    foreach ($_SESSION['cart'] as $product_id => $quantity) {
        $sql_details = "SELECT price FROM products WHERE id = ?";
        $stmt_details = $conn->prepare($sql_details);
        $stmt_details->bind_param("i", $product_id);
        $stmt_details->execute();
        $result_details = $stmt_details->get_result();

        if ($result_details->num_rows > 0) {
            $row_details = $result_details->fetch_assoc();
            $price = $row_details['price'];

            $sql_order_details = "INSERT INTO order_details (order_id, product_id, quantity, price)
                                 VALUES (?, ?, ?, ?)";
            $stmt_order_details = $conn->prepare($sql_order_details);
            $stmt_order_details->bind_param("iidi", $order_id, $product_id, $quantity, $price);

            if (!$stmt_order_details->execute()) {
                die("Error inserting order details.");
            }
        }
    }

    // Clear cart
    unset($_SESSION['cart']);

    // Send confirmation email (you would need to implement this)
    echo "Order placed successfully! Your order ID is: " . $order_id;
} else {
    die("Error placing your order. Please try again.");
}

$conn->close();
?>


<?php

class Product {
    private $db;

    public function __construct($database) {
        $this->db = $database;
    }

    // Get all products
    public function getAllProducts() {
        try {
            $query = "SELECT * FROM products";
            $stmt = $this->db->prepare($query);
            $stmt->execute();
            return $stmt->fetchAll(PDO::FETCH_ASSOC);
        } catch (PDOException $e) {
            echo "Error: " . $e->getMessage();
        }
    }

    // Get product by ID
    public function getProductById($id) {
        try {
            $query = "SELECT * FROM products WHERE id = ?";
            $stmt = $this->db->prepare($query);
            $stmt->execute([$id]);
            return $stmt->fetch(PDO::FETCH_ASSOC);
        } catch (PDOException $e) {
            echo "Error: " . $e->getMessage();
        }
    }

    // Add product to database
    public function addProduct($name, $description, $price, $stock) {
        try {
            $query = "INSERT INTO products SET name=?, description=?, price=?, stock=?";
            $stmt = $this->db->prepare($query);
            $stmt->execute([$name, $description, $price, $stock]);
            return true;
        } catch (PDOException $e) {
            echo "Error: " . $e->getMessage();
            return false;
        }
    }

    // Update product
    public function updateProduct($id, $name, $description, $price, $stock) {
        try {
            $query = "UPDATE products SET name=?, description=?, price=?, stock=? WHERE id=?";
            $stmt = $this->db->prepare($query);
            $stmt->execute([$name, $description, $price, $stock, $id]);
            return true;
        } catch (PDOException $e) {
            echo "Error: " . $e->getMessage();
            return false;
        }
    }

    // Delete product
    public function deleteProduct($id) {
        try {
            $query = "DELETE FROM products WHERE id=?";
            $stmt = $this->db->prepare($query);
            $stmt->execute([$id]);
            return true;
        } catch (PDOException $e) {
            echo "Error: " . $e->getMessage();
            return false;
        }
    }
}


<?php

class Order {
    private $db;

    public function __construct($database) {
        $this->db = $database;
    }

    // Create new order
    public function createOrder($userId, $total) {
        try {
            $query = "INSERT INTO orders SET user_id=?, total=?";
            $stmt = $this->db->prepare($query);
            $stmt->execute([$userId, $total]);
            
            return $this->db->lastInsertId();
        } catch (PDOException $e) {
            echo "Error: " . $e->getMessage();
            return false;
        }
    }

    // Add items to order
    public function addOrderItems($orderId, $productId, $quantity, $subtotal) {
        try {
            $query = "INSERT INTO order_items SET order_id=?, product_id=?, quantity=?, subtotal=?";
            $stmt = $this->db->prepare($query);
            $stmt->execute([$orderId, $productId, $quantity, $subtotal]);
            return true;
        } catch (PDOException $e) {
            echo "Error: " . $e->getMessage();
            return false;
        }
    }

    // Get order details
    public function getOrderDetails($orderId) {
        try {
            $query = "
                SELECT o.*, 
                       oi.*,
                       p.name AS product_name,
                       p.price AS product_price
                FROM orders o
                LEFT JOIN order_items oi ON o.id = oi.order_id
                LEFT JOIN products p ON oi.product_id = p.id
                WHERE o.id = ?
            ";
            $stmt = $this->db->prepare($query);
            $stmt->execute([$orderId]);
            return $stmt->fetchAll(PDO::FETCH_ASSOC);
        } catch (PDOException $e) {
            echo "Error: " . $e->getMessage();
            return false;
        }
    }

    // Update order status
    public function updateOrderStatus($orderId, $status) {
        try {
            $query = "UPDATE orders SET payment_status=? WHERE id=?";
            $stmt = $this->db->prepare($query);
            $stmt->execute([$status, $orderId]);
            return true;
        } catch (PDOException $e) {
            echo "Error: " . $e->getMessage();
            return false;
        }
    }
}


<?php
// config.php - your database configuration
require 'config.php';

// Include classes
require 'Product.php';
require 'Order.php';

$pdo = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
$product = new Product($pdo);
$order = new Order($pdo);

if (isset($_GET['action'])) {
    switch ($_GET['action']) {
        case 'add_to_cart':
            // Add product to cart logic
            if (isset($_POST['quantity'])) {
                $productId = $_GET['id'];
                $quantity = $_POST['quantity'];
                
                // Check if product exists and has enough stock
                $productData = $product->getProductById($productId);
                if ($productData && $productData['stock'] >= $quantity) {
                    // Create order
                    $orderId = $order->createOrder(1, $productData['price'] * $quantity);
                    
                    // Add to order items
                    $subtotal = $productData['price'] * $quantity;
                    $order->addOrderItems($orderId, $productId, $quantity, $subtotal);
                    
                    // Update product stock
                    $newStock = $productData['stock'] - $quantity;
                    $product->updateProduct($productId, $productData['name'], $productData['description'], $productData['price'], $newStock);
                    
                    echo "Order created successfully!";
                } else {
                    echo "Error: Product not found or insufficient stock.";
                }
            }
            break;
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>E-commerce System</title>
</head>
<body>
    <?php
    // Display all products
    $products = $product->getAllProducts();
    
    if (!empty($products)) {
        foreach ($products as $item) {
            echo "<div>";
                echo "<h2>" . $item['name'] . "</h2>";
                echo "<p>" . $item['description'] . "</p>";
                echo "<p>Price: $" . number_format($item['price'], 2) . "</p>";
                echo "<p>Available Stock: " . $item['stock'] . "</p>";
                
                // Buy form
                echo "<form method='post' action='index.php?action=add_to_cart&id=" . $item['id'] . "'>";
                    echo "<input type='number' name='quantity' min='1' max='" . $item['stock'] . "' placeholder='Enter quantity'>";
                    echo "<button type='submit'>Buy Now</button>";
                echo "</form>";
            echo "</div>";
        }
    } else {
        echo "No products available.";
    }
    ?>
</body>
</html>


<?php
// config.php - Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'shopping_cart';

$conn = new mysqli($host, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Shopping Cart</title>
    <style>
        /* Add your CSS styles here */
    </style>
</head>
<body>

<?php
session_start();

if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to display products
function displayProducts() {
    global $conn;
    
    $sql = "SELECT * FROM products";
    $result = $conn->query($sql);
    
    if ($result->num_rows > 0) {
        while ($row = $result->fetch_assoc()) {
            echo "<div class='product'>";
            echo "<img src='" . $row['image'] . "' alt='" . $row['name'] . "'>";
            echo "<h3>" . $row['name'] . "</h3>";
            echo "<p>" . $row['description'] . "</p>";
            echo "<strong>Price: $" . number_format($row['price'], 2) . "</strong><br>";
            echo "<form action='add_to_cart.php' method='post'>";
            echo "<input type='hidden' name='id' value='" . $row['id'] . "'>";
            echo "<input type='number' name='quantity' min='1' value='1'>";
            echo "<button type='submit'>Add to Cart</button>";
            echo "</form>";
            echo "</div>";
        }
    } else {
        echo "No products available.";
    }
}

// Function to display cart
function displayCart() {
    $cart = $_SESSION['cart'];
    
    if (empty($cart)) {
        echo "<p>Your cart is empty.</p>";
    } else {
        echo "<table>";
        foreach ($cart as $item) {
            echo "<tr>";
            echo "<td><img src='" . $item['image'] . "' alt='" . $item['name'] . "'></td>";
            echo "<td>" . $item['name'] . "</td>";
            echo "<td>Quantity: " . $item['quantity'] . "</td>";
            echo "<td>$" . number_format($item['price'], 2) . "</td>";
            echo "<td><a href='remove_from_cart.php?id=" . $item['id'] . "'>Remove</a></td>";
            echo "</tr>";
        }
        echo "</table>";
    }
}

// Function to calculate total
function calculateTotal() {
    $total = 0;
    
    foreach ($_SESSION['cart'] as $item) {
        $total += ($item['price'] * $item['quantity']);
    }
    
    return number_format($total, 2);
}
?>

<!-- Your HTML content -->
<h1>Welcome to our Store</h1>

<?php
if (isset($_GET['page'])) {
    if ($_GET['page'] == 'cart') {
        displayCart();
        echo "<a href='checkout.php'>Proceed to Checkout</a>";
    } else {
        // Default page: show products
        displayProducts();
    }
} else {
    displayProducts();
}
?>

</body>
</html>

<?php
// add_to_cart.php

session_start();

if (isset($_POST['id']) && isset($_POST['quantity'])) {
    $product_id = $_POST['id'];
    $quantity = $_POST['quantity'];

    // Check if product already exists in cart
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['id'] == $product_id) {
            $item['quantity'] += $quantity;
            header("Location: index.php?page=cart");
            exit();
        }
    }

    // If not, add to cart
    $sql = "SELECT * FROM products WHERE id=" . $product_id;
    $result = $conn->query($sql);

    if ($row = $result->fetch_assoc()) {
        $item = array(
            'id' => $row['id'],
            'name' => $row['name'],
            'price' => $row['price'],
            'image' => $row['image'],
            'quantity' => $quantity
        );
        
        $_SESSION['cart'][] = $item;
    }
    
    header("Location: index.php?page=cart");
}
?>

<?php
// remove_from_cart.php

session_start();

if (isset($_GET['id'])) {
    $product_id = $_GET['id'];
    
    foreach ($_SESSION['cart'] as $key => &$item) {
        if ($item['id'] == $product_id) {
            unset($_SESSION['cart'][$key]);
        }
    }
    
    header("Location: index.php?page=cart");
}
?>

<?php
// checkout.php

session_start();

if (isset($_POST['checkout'])) {
    // Process payment here
    // For this example, we'll just save the order to database
    
    $total = calculateTotal();
    
    $sql = "INSERT INTO orders (total_amount, name, email, phone, address) VALUES (?, ?, ?, ?, ?)";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("dsddd", 
        $total,
        $_POST['name'],
        $_POST['email'],
        $_POST['phone'],
        $_POST['address']
    );
    
    if ($stmt->execute()) {
        // Clear cart
        unset($_SESSION['cart']);
        
        echo "Order placed successfully!";
    } else {
        echo "Error placing order.";
    }
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Checkout</title>
</head>
<body>
<h1>Checkout</h1>

<?php
if (isset($_SESSION['cart']) && !empty($_SESSION['cart'])) {
    echo "<form action='checkout.php' method='post'>";
    echo "<h2>Order Details:</h2>";
    
    foreach ($_SESSION['cart'] as $item) {
        echo "<p>" . $item['name'] . " x" . $item['quantity'] . ": $" . number_format($item['price'], 2) . "</p>";
    }
    
    echo "<p>Total: $" . calculateTotal() . "</p>";
    
    echo "<h2>Customer Information:</h2>";
    echo "<input type='text' name='name' placeholder='Name' required><br>";
    echo "<input type='email' name='email' placeholder='Email' required><br>";
    echo "<input type='tel' name='phone' placeholder='Phone Number' required><br>";
    echo "<textarea name='address' placeholder='Shipping Address' required></textarea><br>";
    
    echo "<button type='submit' name='checkout'>Place Order</button>";
    echo "</form>";
} else {
    echo "Your cart is empty.";
}
?>

</body>
</html>

<?php
// Create tables in database

$sql = "CREATE TABLE products (
    id INT(11) UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    description TEXT,
    price DECIMAL(10,2) NOT NULL,
    image VARCHAR(255)
)";

$sql .= "CREATE TABLE orders (
    id INT(11) UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    total_amount DECIMAL(10,2) NOT NULL,
    name VARCHAR(255),
    email VARCHAR(255),
    phone VARCHAR(20),
    address TEXT
)";

$conn->multi_query($sql);
?>


<?php
// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$db_name = 'purchase_db';

try {
    // Create connection
    $conn = new mysqli($host, $username, $password, $db_name);
    
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    // Check if form is submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        // Sanitize input data
        $name = $conn->real_escape_string(trim($_POST['name']));
        $email = $conn->real_escape_string(trim($_POST['email']));
        $address = $conn->real_escape_string(trim($_POST['address']));
        $phone = $conn->real_escape_string(trim($_POST['phone']));
        $payment_method = $conn->real_escape_string(trim($_POST['payment_method']));
        
        // Validate input
        if (empty($name) || empty($email) || empty($address) || empty($phone)) {
            die("Please fill in all required fields.");
        }
        
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            die("Invalid email format.");
        }
        
        if (!preg_match("/^[0-9]{10}$/", $phone)) {
            die("Invalid phone number. Please enter a 10-digit phone number.");
        }

        // Prepare and bind
        $stmt = $conn->prepare("INSERT INTO orders (name, email, address, phone, payment_method) VALUES (?, ?, ?, ?, ?)");
        $stmt->bind_param("sssss", $name, $email, $address, $phone, $payment_method);

        if ($stmt->execute()) {
            echo "Thank you for your purchase! Your order has been received.";
            // You can redirect to a thank you page here
            header("Location: thank_you.php");
            exit();
        } else {
            die("Error processing your payment. Please try again.");
        }

        $stmt->close();
    }
} catch (Exception $e) {
    die("An error occurred while processing your request. Please try again later.");
}

$conn->close();
?>


<?php
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'shopping_cart';

$conn = new mysqli($host, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}


<?php
require_once('config.php');

// Start session
session_start();

// Get or create session ID
$sessionId = session_id();
if (!$sessionId) {
    session_regenerate(true);
    $sessionId = session_id();
}

// Function to add product to cart
function addToCart($productId, $quantity = 1) {
    global $conn, $sessionId;

    // Check if the product is already in the cart
    $stmt = $conn->prepare("SELECT id FROM cart WHERE session_id = ? AND product_id = ?");
    $stmt->bind_param('si', $sessionId, $productId);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        // Update quantity
        $row = $result->fetch_assoc();
        $cartId = $row['id'];
        $newQuantity = $quantity + getCartQuantity($productId);
        updateCartQuantity($cartId, $newQuantity);
    } else {
        // Insert new item
        $stmt = $conn->prepare("INSERT INTO cart (session_id, product_id, quantity) VALUES (?, ?, ?)");
        $stmt->bind_param('sii', $sessionId, $productId, $quantity);
        $stmt->execute();
    }
}

// Function to get cart items
function getCartItems() {
    global $conn, $sessionId;

    $cartItems = [];
    
    $stmt = $conn->prepare("SELECT c.id AS cart_id, p.*, c.quantity FROM cart c JOIN products p ON c.product_id = p.id WHERE c.session_id = ?");
    $stmt->bind_param('s', $sessionId);
    $stmt->execute();
    $result = $stmt->get_result();

    while ($row = $result->fetch_assoc()) {
        $cartItems[] = $row;
    }

    return $cartItems;
}

// Function to update quantity
function updateCartQuantity($cartId, $quantity) {
    global $conn;

    $stmt = $conn->prepare("UPDATE cart SET quantity = ? WHERE id = ?");
    $stmt->bind_param('ii', $quantity, $cartId);
    $stmt->execute();
}

// Function to delete item from cart
function deleteCartItem($cartId) {
    global $conn;

    $stmt = $conn->prepare("DELETE FROM cart WHERE id = ?");
    $stmt->bind_param('i', $cartId);
    $stmt->execute();
}

// Helper function to get current quantity of an item in the cart
function getCartQuantity($productId) {
    global $conn, $sessionId;

    $quantity = 0;
    
    $stmt = $conn->prepare("SELECT quantity FROM cart WHERE session_id = ? AND product_id = ?");
    $stmt->bind_param('si', $sessionId, $productId);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        $row = $result->fetch_assoc();
        $quantity = $row['quantity'];
    }

    return $quantity;
}


<?php
require_once('cart_functions.php');

// Sample products array - replace this with actual database query in production
$products = [
    ['id' => 1, 'name' => 'Product 1', 'price' => 29.99, 'description' => 'Description for Product 1', 'image' => 'product1.jpg'],
    ['id' => 2, 'name' => 'Product 2', 'price' => 49.99, 'description' => 'Description for Product 2', 'image' => 'product2.jpg'],
    // Add more products as needed
];
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Products</title>
    <style>
        /* Add your CSS styles here */
        .product {
            border: 1px solid #ddd;
            padding: 10px;
            margin: 10px;
        }
        .cart-link {
            display: inline-block;
            margin-top: 10px;
        }
    </style>
</head>
<body>
    <h1>Products</h1>
    
    <?php foreach ($products as $product) { ?>
        <div class="product">
            <?php if (!empty($product['image'])) { ?>
                <img src="<?php echo $product['image']; ?>" alt="<?php echo $product['name']; ?>" style="max-width: 200px;">
            <?php } ?>
            <h3><?php echo $product['name']; ?></h3>
            <p>Price: <?php echo number_format($product['price'], 2); ?></p>
            <p><?php echo $product['description']; ?></p>
            <div class="cart-link">
                <a href="#" onclick="addToCart(<?php echo $product['id']; ?>, 1); return false;">Add to Cart</a>
            </div>
        </div>
    <?php } ?>

    <script>
        // Add JavaScript for handling AJAX requests if needed
        function addToCart(productId, quantity) {
            alert('Product added to cart!');
            window.location.href = 'cart.php';
        }
    </script>
    
    <p><a href="cart.php">View Cart</a></p>
</body>
</html>


<?php
require_once('cart_functions.php');

// Get cart items
$cartItems = getCartItems();
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Shopping Cart</title>
    <style>
        /* Add your CSS styles here */
        .cart-item {
            border: 1px solid #ddd;
            padding: 10px;
            margin: 10px;
        }
        .total-price {
            font-size: 24px;
            font-weight: bold;
            color: green;
        }
    </style>
</head>
<body>
    <h1>Shopping Cart</h1>

    <?php if (empty($cartItems)) { ?>
        <p>Your cart is empty.</p>
    <?php } else { ?>
        <table>
            <thead>
                <tr>
                    <th>Product Name</th>
                    <th>Price</th>
                    <th>Quantity</th>
                    <th>Total Price</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
                <?php foreach ($cartItems as $item) { ?>
                    <tr class="cart-item">
                        <td><?php echo $item['name']; ?></td>
                        <td><?php echo number_format($item['price'], 2); ?></td>
                        <td>
                            <input type="number" value="<?php echo $item['quantity']; ?>" min="1" 
                                   onchange="updateQuantity(<?php echo $item['cart_id']; ?>, this.value);">
                        </td>
                        <td><?php echo number_format($item['price'] * $item['quantity'], 2); ?></td>
                        <td><a href="#" onclick="deleteItem(<?php echo $item['cart_id']; ?>); return false;">Delete</a></td>
                    </tr>
                <?php } ?>
            </tbody>
        </table>

        <p class="total-price">Total: <?php echo number_format(getCartTotal(), 2); ?></p>
        <button onclick="checkout()">Checkout</button>
    <?php } ?>

    <script>
        function updateQuantity(cartId, quantity) {
            alert('Quantity updated!');
            window.location.href = 'cart.php';
        }

        function deleteItem(cartId) {
            if (confirm('Are you sure you want to delete this item?')) {
                <?php deleteCartItem(1); ?> // Replace with actual AJAX call in production
                window.location.href = 'cart.php';
            }
        }

        function checkout() {
            alert('Proceeding to checkout!');
            window.location.href = 'checkout.php';
        }
    </script>

    <p><a href="products.php">Back to Products</a></p>
</body>
</html>


<?php
require_once('cart_functions.php');

// Get cart items
$cartItems = getCartItems();
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Checkout</title>
</head>
<body>
    <?php if (empty($cartItems)) { ?>
        <p>Your cart is empty.</p>
        <p><a href="products.php">Back to Products</a></p>
    <?php } else { ?>
        <h1>Checkout</h1>
        
        <form action="#" method="POST">
            <!-- Add your checkout form fields here -->
            <div style="margin-bottom: 20px;">
                <label for="name">Name:</label><br>
                <input type="text" id="name" name="name" required>
            </div>

            <div style="margin-bottom: 20px;">
                <label for="email">Email:</label><br>
                <input type="email" id="email" name="email" required>
            </div>

            <div style="margin-bottom: 20px;">
                <label for="address">Address:</label><br>
                <textarea id="address" name="address" rows="4" required></textarea>
            </div>

            <button type="submit" style="background-color: green; color: white;">Place Order</button>
        </form>

        <p><a href="cart.php">Back to Cart</a></p>
    <?php } ?>
</body>
</html>


<?php
// Connect to database
$host = 'localhost';
$dbname = 'test_db';
$user = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $user, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}

// Fetch products from database
$stmt = $conn->query("SELECT * FROM products");
$products = $stmt->fetchAll(PDO::FETCH_ASSOC);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Product List</title>
</head>
<body>
    <h1>Available Products</h1>
    <?php foreach ($products as $product): ?>
        <div>
            <h2><?php echo $product['name']; ?></h2>
            <p>Price: <?php echo $product['price']; ?> USD</p>
            <a href="add-to-cart.php?id=<?php echo $product['id']; ?>">Add to Cart</a>
        </div>
    <?php endforeach; ?>
</body>
</html>


<?php
session_start();

if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add product to cart
if (isset($_GET['id']) && isset($_GET['action']) && $_GET['action'] == 'add') {
    $product_id = $_GET['id'];
    if (!isset($_SESSION['cart'][$product_id])) {
        $_SESSION['cart'][$product_id] = array(
            'quantity' => 1,
            'price' => // get price from database
        );
    } else {
        $_SESSION['cart'][$product_id]['quantity']++;
    }
}

// Remove product from cart
if (isset($_GET['id']) && isset($_GET['action']) && $_GET['action'] == 'remove') {
    $product_id = $_GET['id'];
    unset($_SESSION['cart'][$product_id]);
}

// Update quantity
if (isset($_POST['update'])) {
    foreach ($_POST['quantity'] as $product_id => $qty) {
        $_SESSION['cart'][$product_id]['quantity'] = $qty;
    }
}

?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <h1>Your Shopping Cart</h1>
    <?php if (empty($_SESSION['cart'])): ?>
        <p>Your cart is empty.</p>
    <?php else: ?>
        <form action="" method="post">
            <table>
                <tr>
                    <th>Product</th>
                    <th>Quantity</th>
                    <th>Price</th>
                    <th>Action</th>
                </tr>
                <?php foreach ($_SESSION['cart'] as $product_id => $item): ?>
                    <tr>
                        <td><?php // Product name from database ?></td>
                        <td><input type="number" name="quantity[<?php echo $product_id; ?>]" value="<?php echo $item['quantity']; ?>"></td>
                        <td><?php echo $item['price']; ?> USD</td>
                        <td><a href="cart.php?id=<?php echo $product_id; ?>&action=remove">Remove</a></td>
                    </tr>
                <?php endforeach; ?>
            </table>
            <input type="submit" name="update" value="Update Cart">
        </form>
        <a href="checkout.php">Checkout</a>
    <?php endif; ?>
</body>
</html>


<?php
session_start();

// Get cart contents
$cart = $_SESSION['cart'];
$total = 0;

foreach ($cart as $product_id => $item) {
    // Calculate total from database prices
}

?>

<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
</head>
<body>
    <h1>Review Your Order</h1>
    <?php if (!empty($cart)): ?>
        <table>
            <tr>
                <th>Product</th>
                <th>Quantity</th>
                <th>Price</th>
                <th>Total</th>
            </tr>
            <?php foreach ($cart as $product_id => $item): ?>
                <tr>
                    <td><?php // Product name ?></td>
                    <td><?php echo $item['quantity']; ?></td>
                    <td><?php echo $item['price']; ?> USD</td>
                    <td><?php echo $item['quantity'] * $item['price']; ?> USD</td>
                </tr>
            <?php endforeach; ?>
        </table>
        <h2>Grand Total: <?php echo $total; ?> USD</h2>
        
        <!-- Payment Form -->
        <form id="payment-form" action="process-payment.php" method="POST">
            <div class="form-row">
                <label for="name">Name:</label>
                <input type="text" id="name" name="name" required>
            </div>
            <div class="form-row">
                <label for="email">Email:</label>
                <input type="email" id="email" name="email" required>
            </div>
            <div class="form-row">
                <label for="card-number">Card Number:</label>
                <input type="text" id="card-number" name="card_number" required>
            </div>
            <div class="form-row">
                <label for="exp-date">Expiration Date:</label>
                <input type="text" id="exp-date" name="exp_date" placeholder="MM/YY" required>
            </div>
            <div class="form-row">
                <label for="cvv">CVV:</label>
                <input type="text" id="cvv" name="cvv" required>
            </div>
            <button type="submit">Complete Purchase</button>
        </form>
    <?php else: ?>
        <p>Your cart is empty. Please add products to your cart first.</p>
        <a href="products.php">Continue Shopping</a>
    <?php endif; ?>
</body>
</html>


<?php
session_start();

if (isset($_POST['name'], $_POST['email'], $_POST['card_number'], $_POST['exp_date'], $_POST['cvv'])) {
    $name = $_POST['name'];
    $email = $_POST['email'];
    $card_number = $_POST['card_number'];
    $exp_date = $_POST['exp_date'];
    $cvv = $_POST['cvv'];
    
    // Process payment using a payment gateway (e.g., Stripe, PayPal)
    
    // For demonstration purposes, we'll assume the payment was successful
    // In reality, you would integrate with an actual payment service
    
    try {
        // Simulate payment processing
        $success = true;
        
        if ($success) {
            // Record the order in the database
            
            // Clear cart
            unset($_SESSION['cart']);
            
            header("Location: thank-you.php");
            exit();
        }
    } catch (Exception $e) {
        echo "Error processing payment: " . $e->getMessage();
    }
}
?>


<?php session_start(); ?>

<!DOCTYPE html>
<html>
<head>
    <title>Thank You</title>
</head>
<body>
    <h1>Thank You for Your Purchase!</h1>
    <p>Your order has been received and is being processed.</p>
    <a href="products.php">Continue Shopping</a>
</body>
</html>


<?php
include 'db_connection.php';

// Get all products
$query = "SELECT * FROM products";
$result = $conn->query($query);

?>
<!DOCTYPE html>
<html>
<head>
    <title>Store</title>
</head>
<body>
    <?php if (!isset($_SESSION['user_id'])): ?>
        <a href="login.php">Login</a> | <a href="register.php">Register</a>
    <?php else: ?>
        <a href="cart.php">View Cart</a> | <a href="logout.php">Logout</a>
    <?php endif; ?>

    <h1>Welcome to Our Store</h1>
    
    <?php while ($row = $result->fetch(PDO::FETCH_ASSOC)): ?>
        <div style="border: 1px solid #ddd; padding: 10px; margin-bottom: 10px;">
            <h2><?php echo $row['name']; ?></h2>
            <p><?php echo $row['description']; ?></p>
            <p>Price: $<?php echo number_format($row['price'], 2); ?></p>
            <?php if ($row['stock'] > 0): ?>
                <form action="add_to_cart.php" method="POST">
                    <input type="hidden" name="product_id" value="<?php echo $row['id']; ?>">
                    <input type="number" name="quantity" min="1" max="<?php echo $row['stock']; ?>" value="1">
                    <button type="submit">Add to Cart</button>
                </form>
            <?php else: ?>
                <p>Out of stock</p>
            <?php endif; ?>
        </div>
    <?php endwhile; ?>

</body>
</html>


<?php
session_start();
include 'db_connection.php';

if (!isset($_SESSION['user_id'])) {
    header("Location: login.php");
    exit();
}

// Get cart items
$cart_items = [];
if (isset($_SESSION['cart'])) {
    $product_ids = implode(',', array_keys($_SESSION['cart']));
    
    $query = "SELECT * FROM products WHERE id IN ($product_ids)";
    $result = $conn->query($query);
    
    while ($row = $result->fetch(PDO::FETCH_ASSOC)) {
        $cart_items[] = [
            'id' => $row['id'],
            'name' => $row['name'],
            'price' => $row['price'],
            'quantity' => $_SESSION['cart'][$row['id']]
        ];
    }
}

$total_price = array_reduce($cart_items, function ($carry, $item) {
    return $carry + ($item['price'] * $item['quantity']);
}, 0);

?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <a href="index.php">Back to Store</a> | <a href="logout.php">Logout</a>

    <?php if (empty($cart_items)): ?>
        <p>Your cart is empty.</p>
        <a href="index.php">Continue shopping</a>
    <?php else: ?>

        <h1>Your Shopping Cart</h1>
        
        <table border="1">
            <tr>
                <th>Product Name</th>
                <th>Quantity</th>
                <th>Price</th>
                <th>Total</th>
                <th>Action</th>
            </tr>
            
            <?php foreach ($cart_items as $item): ?>
                <tr>
                    <td><?php echo $item['name']; ?></td>
                    <td><input type="number" name="quantity" min="1" value="<?php echo $item['quantity']; ?>"></td>
                    <td>$<?php echo number_format($item['price'], 2); ?></td>
                    <td>$<?php echo number_format($item['price'] * $item['quantity'], 2); ?></td>
                    <td>
                        <a href="remove_from_cart.php?id=<?php echo $item['id']; ?>">Remove</a>
                        <form style="display: inline;" action="update_cart.php" method="POST">
                            <input type="hidden" name="product_id" value="<?php echo $item['id']; ?>">
                            <button type="submit">Update</button>
                        </form>
                    </td>
                </tr>
            <?php endforeach; ?>
        </table>

        <p>Total: $<?php echo number_format($total_price, 2); ?></p>
        
        <a href="checkout.php">Checkout</a> | 
        <a href="index.php">Continue shopping</a>

    <?php endif; ?>

</body>
</html>


<?php
session_start();
include 'db_connection.php';

if (!isset($_SESSION['user_id'])) {
    header("Location: login.php");
    exit();
}

if (isset($_POST['product_id']) && isset($_POST['quantity'])) {
    $product_id = $_POST['product_id'];
    $quantity = max(1, min((int)$_POST['quantity'], 10)); // Limit quantity to 1-10
    
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }
    
    if (array_key_exists($product_id, $_SESSION['cart'])) {
        $_SESSION['cart'][$product_id] += $quantity;
    } else {
        $_SESSION['cart'][$product_id] = $quantity;
    }
}

header("Location: index.php");
exit();


<?php
session_start();
include 'db_connection.php';

if (!isset($_SESSION['user_id'])) {
    header("Location: login.php");
    exit();
}

if (isset($_POST['product_id']) && isset($_POST['quantity'])) {
    $product_id = $_POST['product_id'];
    $quantity = max(1, (int)$_POST['quantity']);
    
    if (isset($_SESSION['cart'][$product_id])) {
        $_SESSION['cart'][$product_id] = $quantity;
    }
}

header("Location: cart.php");
exit();


<?php
session_start();
include 'db_connection.php';

if (!isset($_GET['id'])) {
    header("Location: cart.php");
    exit();
}

$id = $_GET['id'];

if (isset($_SESSION['cart'][$id])) {
    unset($_SESSION['cart'][$id]);
}

header("Location: cart.php");
exit();


<?php
session_start();
include 'db_connection.php';

if (!isset($_SESSION['user_id'])) {
    header("Location: login.php");
    exit();
}

// Get cart items
$cart_items = [];
if (isset($_SESSION['cart'])) {
    $product_ids = implode(',', array_keys($_SESSION['cart']));
    
    $query = "SELECT * FROM products WHERE id IN ($product_ids)";
    $result = $conn->query($query);
    
    while ($row = $result->fetch(PDO::FETCH_ASSOC)) {
        $cart_items[] = [
            'id' => $row['id'],
            'name' => $row['name'],
            'price' => $row['price'],
            'quantity' => $_SESSION['cart'][$row['id']]
        ];
    }
}

$total_price = array_reduce($cart_items, function ($carry, $item) {
    return $carry + ($item['price'] * $item['quantity']);
}, 0);

?>

<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
</head>
<body>
    <?php if (empty($cart_items)): ?>
        <p>Your cart is empty.</p>
        <a href="index.php">Continue shopping</a>
    <?php else: ?>

        <h1>Review Your Order</h1>

        <table border="1">
            <tr>
                <th>Product Name</th>
                <th>Quantity</th>
                <th>Price</th>
                <th>Total</th>
            </tr>
            
            <?php foreach ($cart_items as $item): ?>
                <tr>
                    <td><?php echo $item['name']; ?></td>
                    <td><?php echo $item['quantity']; ?></td>
                    <td>$<?php echo number_format($item['price'], 2); ?></td>
                    <td>$<?php echo number_format($item['price'] * $item['quantity'], 2); ?></td>
                </tr>
            <?php endforeach; ?>
        </table>

        <p>Total: $<?php echo number_format($total_price, 2); ?></p>

        <form action="process_order.php" method="POST">
            <button type="submit">Confirm Purchase</button>
        </form>

    <?php endif; ?>

</body>
</html>


<?php
session_start();
include 'db_connection.php';

if (!isset($_SESSION['user_id'])) {
    header("Location: login.php");
    exit();
}

// Get cart items
$cart_items = [];
if (isset($_SESSION['cart'])) {
    $product_ids = implode(',', array_keys($_SESSION['cart']));
    
    $query = "SELECT * FROM products WHERE id IN ($product_ids)";
    $result = $conn->query($query);
    
    while ($row = $result->fetch(PDO::FETCH_ASSOC)) {
        $cart_items[] = [
            'id' => $row['id'],
            'name' => $row['name'],
            'price' => $row['price'],
            'quantity' => $_SESSION['cart'][$row['id']]
        ];
    }
}

if (!empty($cart_items)) {
    // Insert order into database
    try {
        $conn->beginTransaction();
        
        $order_query = "INSERT INTO orders (user_id, total_amount) VALUES (:user_id, :total)";
        $stmt = $conn->prepare($order_query);
        $stmt->execute([
            'user_id' => $_SESSION['user_id'],
            'total' => array_reduce($cart_items, function ($carry, $item) {
                return $carry + ($item['price'] * $item['quantity']);
            }, 0)
        ]);
        
        $order_id = $conn->lastInsertId();
        
        foreach ($cart_items as $item) {
            $order_details_query = "INSERT INTO order_details (order_id, product_id, quantity, price) 
                                  VALUES (:order_id, :product_id, :quantity, :price)";
            
            $stmt = $conn->prepare($order_details_query);
            $stmt->execute([
                'order_id' => $order_id,
                'product_id' => $item['id'],
                'quantity' => $item['quantity'],
                'price' => $item['price']
            ]);
        }
        
        // Clear the cart
        unset($_SESSION['cart']);
        $conn->commit();
        
        header("Location: thank_you.php");
        exit();
    } catch (PDOException $e) {
        $conn->rollBack();
        die("Error processing your order: " . $e->getMessage());
    }
} else {
    header("Location: index.php");
    exit();
}


<!DOCTYPE html>
<html>
<head>
    <title>Thank You</title>
</head>
<body>
    <h1>Thank you for your purchase!</h1>
    <p>Your order has been processed successfully.</p>
    <a href="index.php">Continue shopping</a>
</body>
</html>


<?php
session_start();
include 'db_connection.php';

if (isset($_SESSION['user_id'])) {
    header("Location: index.php");
    exit();
}

$error = '';
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST['username'];
    $password = $_POST['password'];

    $stmt = $conn->prepare("SELECT * FROM users WHERE username = :username");
    $stmt->execute(['username' => $username]);
    
    $user = $stmt->fetch(PDO::FETCH_ASSOC);
    
    if ($user && password_verify($password, $user['password_hash'])) {
        $_SESSION['user_id'] = $user['id'];
        header("Location: index.php");
        exit();
    } else {
        $error = "Invalid username or password";
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login</title>
</head>
<body>
    <?php if (!isset($_SESSION['user_id'])): ?>
        <h1>Login</h1>
        <form method="POST" action="<?php echo $_SERVER["PHP_SELF"]; ?>">
            <p>
                <label>Username:</label><br>
                <input type="text" name="username" required>
            </p>
            <p>
                <label>Password:</label><br>
                <input type="password" name="password" required>
            </p>
            <button type="submit">Login</button>
        </form>
        <?php if (!empty($error)): ?>
            <p style="color: red;"><?php echo $error; ?></p>
        <?php endif; ?>

        <p>Don't have an account? <a href="register.php">Register here</a>.</p>
    <?php else: ?>
        <p>You are already logged in!</p>
        <a href="index.php">Go to store</a>
    <?php endif; ?>

</body>
</html>


<?php
session_start();
include 'db_connection.php';

if (isset($_SESSION['user_id'])) {
    header("Location: index.php");
    exit();
}

$error = '';
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST['username'];
    $email = $_POST['email'];
    $password = $_POST['password'];
    
    // Check if username or email already exists
    $stmt = $conn->prepare("SELECT * FROM users WHERE username = :username OR email = :email");
    $stmt->execute(['username' => $username, 'email' => $email]);
    
    if ($stmt->fetch(PDO::FETCH_ASSOC)) {
        $error = "Username or email already exists";
    } else {
        // Hash the password
        $password_hash = password_hash($password, PASSWORD_BCRYPT);
        
        try {
            $conn->beginTransaction();
            
            $query = "INSERT INTO users (username, email, password_hash) VALUES (:username, :email, :password_hash)";
            $stmt = $conn->prepare($query);
            $stmt->execute([
                'username' => $username,
                'email' => $email,
                'password_hash' => $password_hash
            ]);
            
            // Login the user automatically after registration
            $_SESSION['user_id'] = $conn->lastInsertId();
            $conn->commit();
            
            header("Location: index.php");
            exit();
        } catch (PDOException $e) {
            $conn->rollBack();
            die("Error registering your account: " . $e->getMessage());
        }
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Register</title>
</head>
<body>
    <?php if (!isset($_SESSION['user_id'])): ?>
        <h1>Register</h1>
        <form method="POST" action="<?php echo $_SERVER["PHP_SELF"]; ?>">
            <p>
                <label>Username:</label><br>
                <input type="text" name="username" required>
            </p>
            <p>
                <label>Email:</label><br>
                <input type="email" name="email" required>
            </p>
            <p>
                <label>Password:</label><br>
                <input type="password" name="password" required>
            </p>
            <button type="submit">Register</button>
        </form>
        <?php if (!empty($error)): ?>
            <p style="color: red;"><?php echo $error; ?></p>
        <?php endif; ?>

        <p>Already have an account? <a href="login.php">Login here</a>.</p>
    <?php else: ?>
        <p>You are already logged in!</p>
        <a href="index.php">Go to store</a>
    <?php endif; ?>

</body>
</html>


<?php
session_start();
unset($_SESSION['user_id']);
session_destroy();
header("Location: login.php");
exit();
?>


<?php
// Configuration file (config.php)
$host = 'localhost';
$username = 'root';
$password = '';
$database = 'purchase_system';

$conn = new mysqli($host, $username, $password, $database);
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Purchase System</title>
    <style>
        body { font-family: Arial, sans-serif; margin: 20px; }
        table { width: 100%; border-collapse: collapse; margin-top: 20px; }
        th, td { padding: 10px; text-align: left; border-bottom: 1px solid #ddd; }
        .cart { background-color: #f5f5f5; margin-top: 20px; padding: 20px; }
    </style>
</head>
<body>
    <?php
    session_start();

    // Display available products
    $sql = "SELECT * FROM products";
    $result = $conn->query($sql);
    
    if ($result->num_rows > 0) {
        echo "<table><tr><th>Product ID</th><th>Name</th><th>Price</th><th>Action</th></tr>";
        while ($row = $result->fetch_assoc()) {
            echo "<tr><td>" . $row['id'] . "</td><td>" . $row['name'] . "</td><td>$" . $row['price'] . "</td><td><a href='add_to_cart.php?id=" . $row['id'] . "'>Add to Cart</a></td></tr>";
        }
        echo "</table>";
    } else {
        echo "No products available.";
    }

    // Display shopping cart
    if (!empty($_SESSION['cart'])) {
        echo "<div class='cart'>";
        echo "<h2>Your Shopping Cart</h2>";
        echo "<table><tr><th>Product ID</th><th>Name</th><th>Quantity</th><th>Price</th><th>Action</th></tr>";
        
        $total = 0;
        foreach ($_SESSION['cart'] as $item) {
            echo "<tr><td>" . $item['id'] . "</td><td>" . $item['name'] . "</td><td><input type='number' value='" . $item['quantity'] . "' onchange='updateQuantity(" . $item['id'] . ")'></td><td>$" . $item['price'] . "</td><td><a href='remove_from_cart.php?id=" . $item['id'] . "'>Remove</a></td></tr>";
            $total += $item['quantity'] * $item['price'];
        }
        
        echo "<tr><td colspan='4'>Total:</td><td>$" . number_format($total, 2) . "</td></tr>";
        echo "</table>";
        echo "<a href='checkout.php'>Checkout</a>";
        echo "</div>";
    }

    $conn->close();
    ?>
</body>
</html>

<?php
// Add to Cart functionality (add_to_cart.php)
session_start();

$product_id = $_GET['id'];
$sql = "SELECT * FROM products WHERE id = $product_id";
$result = $conn->query($sql);
$row = $result->fetch_assoc();

if (!$row) {
    die("Product not found.");
}

$item = array(
    'id' => $row['id'],
    'name' => $row['name'],
    'price' => $row['price'],
    'quantity' => 1
);

if (isset($_SESSION['cart'])) {
    $_SESSION['cart'][$product_id] = $item;
} else {
    $_SESSION['cart'] = array($product_id => $item);
}

header("Location: index.php");
$conn->close();
exit();
?>

<?php
// Remove from Cart functionality (remove_from_cart.php)
session_start();

$product_id = $_GET['id'];
unset($_SESSION['cart'][$product_id]);
header("Location: index.php");
?>

<?php
// Checkout functionality (checkout.php)
session_start();

if (empty($_SESSION['cart'])) {
    die("Your cart is empty.");
}

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $name = $_POST['name'];
    $email = $_POST['email'];
    $address = $_POST['address'];

    // Process order
    foreach ($_SESSION['cart'] as $item) {
        $sql = "INSERT INTO orders (product_id, name, email, address, price, quantity) VALUES (" . $item['id'] . ", '$name', '$email', '$address', '" . $item['price'] . "', '" . $item['quantity'] . "')";
        $conn->query($sql);
    }

    // Clear cart
    session_unset();
    session_destroy();

    header("Location: order_confirmation.php");
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Checkout</title>
</head>
<body>
    <h2>Checkout Form</h2>
    <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
        <label>Name:</label><br>
        <input type="text" name="name" required><br><br>

        <label>Email:</label><br>
        <input type="email" name="email" required><br><br>

        <label>Address:</label><br>
        <textarea name="address" rows="4" cols="30" required></textarea><br><br>

        <input type="submit" value="Place Order">
    </form>
</body>
</html>

<?php
// Order Confirmation (order_confirmation.php)
session_start();

if (!isset($_SESSION['cart'])) {
    die("No order to confirm.");
}

$total = 0;
foreach ($_SESSION['cart'] as $item) {
    $total += $item['quantity'] * $item['price'];
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Order Confirmation</title>
</head>
<body>
    <h2>Thank you for your purchase!</h2>
    <p>Your order has been successfully placed.</p>
    <p>Total amount: $<?php echo number_format($total, 2); ?></p>
    
    <!-- Optional: Generate PDF invoice -->
    <?php
    // Add code here to generate and download a PDF invoice
    ?>
</body>
</html>

<!-- Create a MySQL database with the following tables -->

-- Table structure for `products`
CREATE TABLE products (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL
);

-- Table structure for `orders`
CREATE TABLE orders (
    id INT AUTO_INCREMENT PRIMARY KEY,
    product_id INT NOT NULL,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) NOT NULL,
    address TEXT NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    quantity INT NOT NULL
);

-- Sample data for products table
INSERT INTO products (name, price)
VALUES
('Product 1', 9.99),
('Product 2', 19.99),
('Product 3', 29.99);


<?php
session_start();
// Database connection
$host = "localhost";
$user = "root";
$password = "";
$db_name = "shop";

$conn = mysqli_connect($host, $user, $password, $db_name);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Products array (example data)
$products = [
    1 => ['name' => 'Laptop', 'price' => 999.99, 'description' => 'Premium laptop with high performance'],
    2 => ['name' => 'Phone', 'price' => 499.99, 'description' => 'Smartphone with latest features'],
    3 => ['name' => 'Tablet', 'price' => 199.99, 'description' => 'Portable tablet for daily use']
];
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Online Store</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>

<div class="container mt-4">
    <?php
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = [];
    }
    
    // Display products
    echo '<h2>Our Products</h2>';
    echo '<div class="row">';
    foreach ($products as $id => $product) {
        echo '<div class="col-md-4 mb-4">';
        echo '<div class="card">';
        echo '<img src="placeholder-image.jpg" alt="' . $product['name'] . '" class="card-img-top">';
        echo '<div class="card-body">';
        echo '<h5 class="card-title">' . $product['name'] . '</h5>';
        echo '<p class="card-text">' . $product['description'] . '</p>';
        echo '<p class="card-text"><strong>$' . number_format($product['price'], 2) . '</strong></p>';
        echo '<form action="add_to_cart.php" method="post">';
        echo '<input type="hidden" name="id" value="' . $id . '">';
        echo '<input type="number" name="quantity" min="1" max="5" value="1" class="form-control mb-2">';
        echo '<button type="submit" class="btn btn-primary">Add to Cart</button>';
        echo '</form>';
        echo '</div>';
        echo '</div>';
        echo '</div>';
    }
    echo '</div>';
    
    // Display cart
    if (!empty($_SESSION['cart'])) {
        echo '<h2>Your Cart</h2>';
        echo '<table class="table">';
        echo '<thead><tr><th>Product</th><th>Quantity</th><th>Price</th><th>Total</th><th>Action</th></tr></thead>';
        $subtotal = 0;
        foreach ($_SESSION['cart'] as $id => $item) {
            $product = $products[$id];
            $total = $item['quantity'] * $product['price'];
            $subtotal += $total;
            echo '<tr>';
            echo '<td>' . $product['name'] . '</td>';
            echo '<td><input type="number" min="1" value="' . $item['quantity'] . '" class="form-control"></td>';
            echo '<td>$' . number_format($product['price'], 2) . '</td>';
            echo '<td>$' . number_format($total, 2) . '</td>';
            echo '<td><a href="remove_from_cart.php?id=' . $id . '" class="btn btn-danger">Remove</a></td>';
            echo '</tr>';
        }
        echo '</table>';
        echo '<h3>Subtotal: $' . number_format($subtotal, 2) . '</h3>';
        echo '<a href="checkout.php" class="btn btn-success">Checkout</a>';
    }
    
    // Checkout form
    if (isset($_GET['checkout'])) {
        echo '<h2>Checkout</h2>';
        echo '<form action="process_payment.php" method="post">';
        echo '<div class="mb-3">
                <label for="name">Name:</label>
                <input type="text" id="name" name="name" class="form-control" required>
              </div>';
        echo '<div class="mb-3">
                <label for="email">Email:</label>
                <input type="email" id="email" name="email" class="form-control" required>
              </div>';
        echo '<div class="mb-3">
                <label for="phone">Phone:</label>
                <input type="tel" id="phone" name="phone" class="form-control" required>
              </div>';
        echo '<div class="mb-3">
                <label for="address">Address:</label>
                <input type="text" id="address" name="address" class="form-control" required>
              </div>';
        echo '<button type="submit" class="btn btn-primary">Place Order</button>';
        echo '</form>';
    }
    
    // Payment processing
    if (isset($_GET['process_payment'])) {
        // Here you would integrate with a payment gateway
        // For this example, we'll just simulate successful payment
        $payment_success = true;
        
        if ($payment_success) {
            // Send receipt email
            mail($_POST['email'], 'Order Confirmation', 'Thank you for your order! Your order details are as follows:');
            
            // Clear cart
            $_SESSION['cart'] = [];
            
            echo '<h2>Thank you for your order!</h2>';
            echo '<p>Your order has been processed successfully.</p>';
        } else {
            echo '<h2>Payment Failed</h2>';
            echo '<p>There was an error processing your payment. Please try again.</p>';
        }
    }
    ?>
</div>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>


<?php
session_start();
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $name = $_POST['name'];
    $email = $_POST['email'];
    $password = password_hash($_POST['password'], PASSWORD_DEFAULT);

    // Database connection
    include 'db_connection.php';

    $sql = "INSERT INTO users (name, email, password_hash) VALUES (?, ?, ?)";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("sss", $name, $email, $password);
    if ($stmt->execute()) {
        $_SESSION['user_id'] = $conn->insert_id;
        header("Location: home.php");
        exit();
    } else {
        echo "Error registering user.";
    }
}
?>


<?php
session_start();
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = $_POST['email'];
    $password = $_POST['password'];

    // Database connection
    include 'db_connection.php';

    $sql = "SELECT * FROM users WHERE email=?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("s", $email);
    $stmt->execute();
    $result = $stmt->get_result();
    if ($row = $result->fetch_assoc()) {
        if (password_verify($password, $row['password_hash'])) {
            $_SESSION['user_id'] = $row['id'];
            header("Location: home.php");
            exit();
        } else {
            echo "Invalid credentials.";
        }
    } else {
        echo "User not found.";
    }
}
?>


<?php
session_start();
// Database connection
include 'db_connection.php';

$sql = "SELECT * FROM products";
$result = $conn->query($sql);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Products</title>
</head>
<body>
    <?php while ($row = $result->fetch_assoc()) : ?>
        <div class="product">
            <h2><?php echo $row['product_name']; ?></h2>
            <p><?php echo $row['description']; ?></p>
            <p>Price: $<?php echo number_format($row['price'], 2); ?></p>
            <?php if ($row['quantity'] > 0) : ?>
                <a href="add_to_cart.php?product_id=<?php echo $row['id']; ?>">Add to Cart</a>
            <?php else : ?>
                <p>Out of Stock</p>
            <?php endif; ?>
        </div>
    <?php endwhile; ?>
</body>
</html>


<?php
session_start();
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

$product_id = isset($_GET['product_id']) ? (int)$_GET['product_id'] : 0;

// Database connection
include 'db_connection.php';

$sql = "SELECT * FROM products WHERE id=?";
$stmt = $conn->prepare($sql);
$stmt->bind_param("i", $product_id);
$stmt->execute();
$result = $stmt->get_result();

if ($row = $result->fetch_assoc()) {
    if ($row['quantity'] > 0) {
        if (isset($_SESSION['cart'][$product_id])) {
            $_SESSION['cart'][$product_id]['quantity']++;
        } else {
            $_SESSION['cart'][$product_id] = array(
                'name' => $row['product_name'],
                'price' => $row['price'],
                'quantity' => 1
            );
        }
    }
}

header("Location: cart.php");
exit();
?>


<?php
session_start();

// Calculate total price
$total = 0;
if (isset($_SESSION['cart'])) {
    foreach ($_SESSION['cart'] as $item) {
        $total += $item['price'] * $item['quantity'];
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <?php if (isset($_SESSION['cart'])) : ?>
        <h2>Your Cart:</h2>
        <?php foreach ($_SESSION['cart'] as $product_id => $item) : ?>
            <div class="cart-item">
                <p><?php echo $item['name']; ?></p>
                <p>Price: $<?php echo number_format($item['price'], 2); ?></p>
                <p>Quantity: <?php echo $item['quantity']; ?></p>
            </div>
        <?php endforeach; ?>
        <h3>Total: $<?php echo number_format($total, 2); ?></h3>
        <a href="checkout.php">Proceed to Checkout</a>
    <?php else : ?>
        <p>Your cart is empty.</p>
    <?php endif; ?>
</body>
</html>


<?php
session_start();
if (!isset($_SESSION['user_id'])) {
    header("Location: login.php");
    exit();
}

// Calculate total price
$total = 0;
if (isset($_SESSION['cart'])) {
    foreach ($_SESSION['cart'] as $item) {
        $total += $item['price'] * $item['quantity'];
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
</head>
<body>
    <h2>Payment Details</h2>
    <form action="process_payment.php" method="POST">
        <input type="hidden" name="total" value="<?php echo $total; ?>">
        <label>Credit Card Number:</label><br>
        <input type="text" name="card_number" required><br>
        <label>Card Holder Name:</label><br>
        <input type="text" name="card_holder_name" required><br>
        <label>Expiry Date (MM/YY):</label><br>
        <input type="text" name="expiry_date" required><br>
        <label>CVC:</label><br>
        <input type="password" name="cvc" required><br>
        <button type="submit">Complete Purchase</button>
    </form>
</body>
</html>


<?php
session_start();
if (!isset($_SESSION['user_id']) || !isset($_SESSION['cart'])) {
    header("Location: login.php");
    exit();
}

// Simulate payment processing (replace with actual payment API)
$paid = true; // Set to false for testing failed payments

if ($paid) {
    $order_status = 'completed';
} else {
    $order_status = 'failed';
}

// Database connection
include 'db_connection.php';

foreach ($_SESSION['cart'] as $product_id => $item) {
    $sql = "INSERT INTO orders (user_id, product_id, quantity, total_price, payment_method, status) 
            VALUES (?, ?, ?, ?, ?, ?)";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("iissss", $_SESSION['user_id'], $product_id, $item['quantity'], $item['price'] * $item['quantity'], 'credit_card', $order_status);
    if (!$stmt->execute()) {
        echo "Error processing order.";
        exit();
    }
}

unset($_SESSION['cart']);

header("Location: order_confirmation.php");
exit();
?>


<?php
session_start();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Order Confirmation</title>
</head>
<body>
    <h2>Thank you for your purchase!</h2>
    <?php if (isset($_SESSION['user_id'])) : ?>
        <p>Your order has been processed successfully.</p>
        <a href="products.php">Continue Shopping</a>
    <?php else : ?>
        <p>Please login to continue.</p>
        <a href="login.php">Login</a>
    <?php endif; ?>
</body>
</html>


class Product {
    private $db;

    public function __construct($db) {
        $this->db = $db;
    }

    // Get all products
    public function getProducts() {
        $query = "SELECT * FROM products";
        $result = $this->db->query($query);
        return $result->fetchAll(PDO::FETCH_ASSOC);
    }

    // Add product to database
    public function addProduct($name, $description, $price, $quantity) {
        $query = "INSERT INTO products (name, description, price, quantity)
                  VALUES (?, ?, ?, ?)";
        $stmt = $this->db->prepare($query);
        return $stmt->execute([$name, $description, $price, $quantity]);
    }

    // Update product
    public function updateProduct($id, $name, $description, $price, $quantity) {
        $query = "UPDATE products SET name=?, description=?, price=?, quantity=? WHERE id=?";
        $stmt = $this->db->prepare($query);
        return $stmt->execute([$name, $description, $price, $quantity, $id]);
    }

    // Delete product
    public function deleteProduct($id) {
        $query = "DELETE FROM products WHERE id=?";
        $stmt = $this->db->prepare($query);
        return $stmt->execute([$id]);
    }

    // Get product by ID
    public function getProductById($id) {
        $query = "SELECT * FROM products WHERE id=?";
        $stmt = $this->db->prepare($query);
        $stmt->execute([$id]);
        return $stmt->fetch(PDO::FETCH_ASSOC);
    }
}


class ShoppingCart {
    private $db;

    public function __construct($db) {
        $this->db = $db;
    }

    // Add item to shopping cart
    public function addItem($product_id, $user_id, $quantity) {
        $query = "INSERT INTO shopping_cart (product_id, user_id, quantity)
                  VALUES (?, ?, ?)";
        $stmt = $this->db->prepare($query);
        return $stmt->execute([$product_id, $user_id, $quantity]);
    }

    // Update item quantity
    public function updateItemQuantity($id, $quantity) {
        $query = "UPDATE shopping_cart SET quantity=? WHERE id=?";
        $stmt = $this->db->prepare($query);
        return $stmt->execute([$quantity, $id]);
    }

    // Remove item from shopping cart
    public function removeItem($id) {
        $query = "DELETE FROM shopping_cart WHERE id=?";
        $stmt = $this->db->prepare($query);
        return $stmt->execute([$id]);
    }

    // Get items in the shopping cart
    public function getCartItems($user_id) {
        $query = "SELECT * FROM shopping_cart WHERE user_id=?";
        $stmt = $this->db->prepare($query);
        $stmt->execute([$user_id]);
        return $stmt->fetchAll(PDO::FETCH_ASSOC);
    }

    // Calculate total price
    public function calculateTotal() {
        $total = 0;
        foreach ($_SESSION['cart'] as $item) {
            $product = new Product($this->db);
            $product_data = $product->getProductById($item['product_id']);
            $total += ($product_data['price'] * $item['quantity']);
        }
        return $total;
    }

    // Checkout
    public function checkout($user_id, $total_amount) {
        $query = "INSERT INTO orders (user_id, total_amount)
                  VALUES (?, ?)";
        $stmt = $this->db->prepare($query);
        if ($stmt->execute([$user_id, $total_amount])) {
            // Clear shopping cart
            $this->clearCart($user_id);
            return true;
        }
        return false;
    }

    // Clear shopping cart
    private function clearCart($user_id) {
        $query = "DELETE FROM shopping_cart WHERE user_id=?";
        $stmt = $this->db->prepare($query);
        $stmt->execute([$user_id]);
    }
}


session_start();

if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add item to session cart
function addToCart($product_id, $quantity) {
    global $db;
    if (!isset($_SESSION['cart'][$product_id])) {
        $_SESSION['cart'][$product_id] = array(
            'product_id' => $product_id,
            'quantity' => $quantity
        );
    } else {
        $_SESSION['cart'][$product_id]['quantity'] += $quantity;
    }
}

// Update item quantity in session cart
function updateCartItem($product_id, $quantity) {
    global $db;
    if (isset($_SESSION['cart'][$product_id])) {
        $_SESSION['cart'][$product_id]['quantity'] = $quantity;
    }
}

// Remove item from session cart
function removeCartItem($product_id) {
    global $db;
    if (isset($_SESSION['cart'][$product_id])) {
        unset($_SESSION['cart'][$product_id]);
    }
}


$product = new Product($db);
$products = $product->getProducts();

foreach ($products as $item) {
    echo "<div class='product'>";
    echo "<h2>".$item['name']."</h2>";
    echo "<p>".$item['description']."</p>";
    echo "<p>Price: \$".$item['price']."</p>";
    echo "<p>Available Quantity: ".$item['quantity']."</p>";
    echo "<form action='add_to_cart.php' method='post'>";
    echo "<input type='hidden' name='product_id' value='".$item['id']."'>";
    echo "<input type='number' name='quantity' min='1' max='".$item['quantity']."' value='1'>";
    echo "<button type='submit'>Add to Cart</button>";
    echo "</form>";
    echo "</div>";
}


session_start();

if (isset($_POST['product_id']) && isset($_POST['quantity'])) {
    $product_id = $_POST['product_id'];
    $quantity = $_POST['quantity'];

    addToCart($product_id, $quantity);

    // Redirect back to products page
    header("Location: products.php");
}


session_start();

$cart = new ShoppingCart($db);
$cart_items = $cart->getCartItems($_SESSION['user_id']);

foreach ($cart_items as $item) {
    echo "<div class='cart-item'>";
    echo "<h3>".$item['name']."</h3>";
    echo "<p>Quantity: ".$item['quantity']."</p>";
    echo "<form action='update_cart.php' method='post'>";
    echo "<input type='hidden' name='id' value='".$item['id']."'>";
    echo "<input type='number' name='quantity' min='1' max='100' value='".$item['quantity']."'>";
    echo "<button type='submit'>Update Quantity</button>";
    echo "</form>";
    echo "<a href='remove_from_cart.php?id=".$item['id']."'>Remove Item</a>";
    echo "</div>";
}

echo "<h2>Total: \$".number_format($cart->calculateTotal(), 2)."</h2>";


session_start();

if (isset($_SESSION['user_id'])) {
    // Display order summary and payment options
    $order_total = number_format($cart->calculateTotal(), 2);
    
    echo "<h1>Checkout</h1>";
    echo "<p>Your total is: \$".$order_total."</p>";
    
    // Payment form
    echo "<form action='process_payment.php' method='post'>";
    echo "<input type='hidden' name='total_amount' value='".$order_total."'>";
    echo "<h2>Billing Information</h2>";
    echo "<input type='text' name='name' placeholder='Full Name' required><br>";
    echo "<input type='email' name='email' placeholder='Email Address' required><br>";
    echo "<input type='text' name='address' placeholder='Shipping Address' required><br>";
    echo "<input type='tel' name='phone' placeholder='Phone Number'><br>";
    echo "<h2>Payment Information</h2>";
    echo "<input type='card_number' name='card_number' placeholder='Card Number' required><br>";
    echo "<input type='expiry_date' name='expiry_date' placeholder='MM/YY' required><br>";
    echo "<input type='cvv' name='cvv' placeholder='CVV' required><br>";
    echo "<button type='submit'>Complete Purchase</button>";
    echo "</form>";
} else {
    // Redirect to login page
    header("Location: login.php");
}


session_start();

if (isset($_POST['total_amount']) && isset($_SESSION['user_id'])) {
    $order_total = $_POST['total_amount'];
    $cart = new ShoppingCart($db);
    
    if ($cart->checkout($_SESSION['user_id'], $order_total)) {
        // Clear cart session
        unset($_SESSION['cart']);
        
        // Display confirmation message
        echo "<h1>Thank You for Your Order!</h1>";
        echo "<p>Your order has been successfully processed.</p>";
    } else {
        // Error message
        echo "<h1>Error Processing Order</h1>";
        echo "<p>There was an error processing your order. Please try again.</p>";
    }
} else {
    // Redirect to cart page
    header("Location: shopping_cart.php");
}


<?php
$host = 'localhost';
$dbname = 'your_database_name';
$user = 'root'; // or your database user
$password = ''; // or your database password

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $user, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    die('Connection failed: ' . $e->getMessage());
}
?>


<?php
include_once 'config.php';

// Sample product data for demonstration; replace with database query in production.
$products = [
    ['id' => 1, 'name' => 'Product 1', 'price' => 29.99],
    // Add more products as needed
];

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    if (isset($_POST['product_id'])) {
        $productId = $_POST['product_id'];
        // Here, you would typically add the product to a shopping cart session or database.
        // For simplicity, this example assumes direct addition to an order.
    }
}

?>
<!DOCTYPE html>
<html>
<head>
    <title>Product List</title>
</head>
<body>
    <?php foreach ($products as $product): ?>
        <div>
            <h2><?php echo $product['name']; ?></h2>
            <p>$<?php echo number_format($product['price'], 2); ?></p>
            <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
                <input type="hidden" name="product_id" value="<?php echo $product['id']; ?>">
                <button type="submit">Add to Cart</button>
            </form>
        </div>
    <?php endforeach; ?>
</body>
</html>


<?php
include_once 'config.php';

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $username = $_POST['username'];
    $password = password_hash($_POST['password'], PASSWORD_DEFAULT);
    $email = $_POST['email'];
    $phone = $_POST['phone'];

    try {
        $stmt = $conn->prepare("INSERT INTO users (username, password_hash, email, phone) VALUES (?, ?, ?, ?)");
        $stmt->execute([$username, $password, $email, $phone]);
        echo "Registration successful!";
    } catch(PDOException $e) {
        die('Error: ' . $e->getMessage());
    }
}
?>
<!DOCTYPE html>
<html>
<head>
    <title>Register</title>
</head>
<body>
    <h2>Register</h2>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        Username:<br>
        <input type="text" name="username" required><br>
        Password:<br>
        <input type="password" name="password" required><br>
        Email:<br>
        <input type="email" name="email" required><br>
        Phone:<br>
        <input type="tel" name="phone"><br><br>
        <button type="submit">Register</button>
    </form>
</body>
</html>


<?php
session_start();
include_once 'config.php';

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $username = $_POST['username'];
    $password = $_POST['password'];

    try {
        $stmt = $conn->prepare("SELECT * FROM users WHERE username = ?");
        $stmt->execute([$username]);
        $user = $stmt->fetch(PDO::FETCH_ASSOC);

        if ($user && password_verify($password, $user['password_hash'])) {
            $_SESSION['user_id'] = $user['id'];
            header('Location: checkout.php');
            exit();
        } else {
            echo "Invalid username or password!";
        }
    } catch(PDOException $e) {
        die('Error: ' . $e->getMessage());
    }
}
?>
<!DOCTYPE html>
<html>
<head>
    <title>Login</title>
</head>
<body>
    <h2>Login</h2>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        Username:<br>
        <input type="text" name="username" required><br>
        Password:<br>
        <input type="password" name="password" required><br><br>
        <button type="submit">Login</button>
    </form>
</body>
</html>


<?php
session_start();
include_once 'config.php';

if (!isset($_SESSION['user_id'])) {
    header('Location: login.php');
    exit();
}

$user_id = $_SESSION['user_id'];

// For this example, assume cart data is handled via POST.
// In a real application, you would retrieve cart items from sessions or database.

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $cartItems = [
        // Sample cart data; replace with actual cart contents
        ['product_id' => 1, 'quantity' => 2],
        // Add more items as needed
    ];

    // Calculate subtotal for each item and total amount
    $totalAmount = 0.0;
    foreach ($cartItems as &$item) {
        try {
            $stmt = $conn->prepare("SELECT price FROM products WHERE id = ?");
            $stmt->execute([$item['product_id']]);
            $product = $stmt->fetch(PDO::FETCH_ASSOC);
            if (!$product) {
                continue; // Skip invalid product IDs
            }
            $price = $product['price'];
            $subtotal = $price * $item['quantity'];
            $totalAmount += $subtotal;
            $item['subtotal'] = $subtotal;
        } catch(PDOException $e) {
            die('Error: ' . $e->getMessage());
        }
    }

    try {
        // Insert order
        $stmtOrder = $conn->prepare("INSERT INTO orders (user_id, total_amount) VALUES (?, ?)");
        $stmtOrder->execute([$user_id, $totalAmount]);
        $order_id = $conn->lastInsertId();

        foreach ($cartItems as $item) {
            // Insert each order item
            $stmtItem = $conn->prepare("INSERT INTO order_items (order_id, product_id, quantity, subtotal) VALUES (?, ?, ?, ?)");
            $stmtItem->execute([$order_id, $item['product_id'], $item['quantity'], $item['subtotal']]);
        }

        // Clear cart or session as needed
        unset($_SESSION['cart']);

        echo "Order placed successfully!";
    } catch(PDOException $e) {
        die('Error placing order: ' . $e->getMessage());
    }
}
?>
<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
</head>
<body>
    <?php
    // Display cart contents and payment form here.
    // For this example, assume the form is already present with necessary fields.
    ?>
    <h2>Payment Information</h2>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <!-- Add payment fields -->
        <input type="text" name="card_number" placeholder="Card Number" required><br>
        <input type="text" name="expiry_date" placeholder="Expiry Date" required><br>
        <input type="text" name="cvv" placeholder="CVV" required><br><br>
        <button type="submit">Place Order</button>
    </form>
</body>
</html>


<?php
session_start();
unset($_SESSION['user_id']);
session_unset();
session_destroy();
header('Location: login.php');
exit();
?>


<?php
// Start session
session_start();

// Product data (simplified for demonstration)
$products = array(
    1 => array(
        'id' => 1,
        'name' => 'Laptop',
        'price' => 999.99,
        'stock' => 5
    ),
    2 => array(
        'id' => 2,
        'name' => 'Smartphone',
        'price' => 699.99,
        'stock' => 10
    ),
    3 => array(
        'id' => 3,
        'name' => 'Tablet',
        'price' => 299.99,
        'stock' => 8
    )
);

// Function to add item to cart
function addToCart($product_id, $quantity) {
    global $products;
    
    if (isset($_SESSION['cart'])) {
        $cart = $_SESSION['cart'];
    } else {
        $cart = array();
    }
    
    // Check if product exists and has stock
    if (array_key_exists($product_id, $products)) {
        if ($products[$product_id]['stock'] >= $quantity && $quantity > 0) {
            if (!isset($cart[$product_id])) {
                $cart[$product_id] = array(
                    'id' => $product_id,
                    'name' => $products[$product_id]['name'],
                    'price' => $products[$product_id]['price'],
                    'quantity' => $quantity
                );
            } else {
                // Update quantity if item already exists in cart
                $cart[$product_id]['quantity'] += $quantity;
            }
            
            $_SESSION['cart'] = $cart;
            return true;
        } else {
            echo "Error: Not enough stock available.";
            return false;
        }
    } else {
        echo "Error: Product not found.";
        return false;
    }
}

// Function to update cart item quantity
function updateCartItem($product_id, $new_quantity) {
    if (isset($_SESSION['cart'][$product_id])) {
        $_SESSION['cart'][$product_id]['quantity'] = $new_quantity;
        return true;
    } else {
        echo "Error: Item not found in cart.";
        return false;
    }
}

// Function to remove item from cart
function removeCartItem($product_id) {
    if (isset($_SESSION['cart'][$product_id])) {
        unset($_SESSION['cart'][$product_id]);
        return true;
    } else {
        echo "Error: Item not found in cart.";
        return false;
    }
}

// Function to calculate total price of items in cart
function calculateTotalPrice() {
    $total = 0;
    
    if (isset($_SESSION['cart'])) {
        foreach ($_SESSION['cart'] as $item) {
            $total += ($item['price'] * $item['quantity']);
        }
    }
    
    return number_format($total, 2);
}

// Function to process payment
function processPayment($cart) {
    // In a real application, this would integrate with a payment gateway
    // For demonstration purposes, we'll assume the payment is successful
    
    // Check if cart is not empty
    if (empty($cart)) {
        echo "Error: Cart is empty.";
        return false;
    }
    
    // Process each item in cart
    foreach ($cart as $item) {
        // Update stock levels (simplified)
        global $products;
        $products[$item['id']]['stock'] -= $item['quantity'];
        
        if ($products[$item['id']]['stock'] < 0) {
            echo "Error: Not enough stock for item #" . $item['id'];
            return false;
        }
    }
    
    // Clear cart after successful purchase
    $_SESSION['cart'] = array();
    
    return true;
}

// Sample usage:

// Add items to cart
addToCart(1, 2);  // Add 2 laptops
addToCart(2, 1);  // Add 1 smartphone

// Update quantity of an item
updateCartItem(1, 3);  // Update laptop quantity to 3

// Remove an item from cart
removeCartItem(2);

// Calculate total price
echo "Total Price: $" . calculateTotalPrice(); 

// Process payment
if (processPayment($_SESSION['cart'])) {
    echo "Payment processed successfully!";
} else {
    echo "Payment failed.";
}
?>


<?php
// Start session
session_start();

// Product data (you would typically fetch this from a database)
$products = array(
    1 => array('name' => 'Product 1', 'price' => 29.99),
    2 => array('name' => 'Product 2', 'price' => 49.99),
    3 => array('name' => 'Product 3', 'price' => 19.99)
);

// Function to display products
function display_products($products) {
    foreach ($products as $id => $product) {
        echo "<div class='product'>";
        echo "<h2>{$product['name']}</h2>";
        echo "<p>Price: \${$product['price']}</p>";
        echo "<a href='add_to_cart.php?id=$id'>Add to Cart</a>";
        echo "</div>";
    }
}

// Function to display cart
function display_cart() {
    global $products;
    
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }

    if (empty($_SESSION['cart'])) {
        echo "Your cart is empty!";
        return;
    }

    foreach ($_SESSION['cart'] as $id => $quantity) {
        $product = $products[$id];
        $total = $product['price'] * $quantity;
        echo "<div class='cart-item'>";
        echo "<h3>{$product['name']}</h3>";
        echo "<p>Quantity: $quantity</p>";
        echo "<p>Price: \${$total}</p>";
        echo "</div>";
    }
}

// Function to calculate total price
function calculate_total() {
    global $products;
    
    if (!isset($_SESSION['cart'])) {
        return 0;
    }

    $total = 0;
    foreach ($_SESSION['cart'] as $id => $quantity) {
        $total += $products[$id]['price'] * $quantity;
    }
    return $total;
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
    <style>
        .product { margin: 20px; padding: 10px; border: 1px solid #ddd; }
        .cart-item { margin: 20px; padding: 10px; background-color: #f9f9f9; }
    </style>
</head>
<body>
    <h1>Our Products</h1>
    <?php display_products($products); ?>

    <h2>Your Cart</h2>
    <?php display_cart(); ?>

    <p>Total: $<?php echo calculate_total(); ?></p>
</body>
</html>

<!-- Separate file: add_to_cart.php -->
<?php
session_start();

if (isset($_GET['id'])) {
    $product_id = $_GET['id'];
    
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }

    if (isset($_SESSION['cart'][$product_id])) {
        $_SESSION['cart'][$product_id]++;
    } else {
        $_SESSION['cart'][$product_id] = 1;
    }
}

header("Location: index.php");
exit();
?>


<?php
session_start();
include('db_connection.php');

function getProducts() {
    $query = "SELECT * FROM products";
    $result = mysqli_query($conn, $query);
    return $result;
}

$products = getProducts();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Product Catalog</title>
    <style>
        .product {
            border: 1px solid #ddd;
            padding: 10px;
            margin: 5px;
        }
    </style>
</head>
<body>
    <?php foreach ($products as $product): ?>
        <div class="product">
            <h3><?php echo $product['name']; ?></h3>
            <p>Price: $<?php echo number_format($product['price'], 2); ?></p>
            <img src="<?php echo $product['image']; ?>" alt="<?php echo $product['name']; ?>" width="100">
            <a href="add_to_cart.php?id=<?php echo $product['id']; ?>">Add to Cart</a>
        </div>
    <?php endforeach; ?>
</body>
</html>


<?php
session_start();
include('db_connection.php');

$product_id = $_GET['id'];
$cart = isset($_SESSION['cart']) ? $_SESSION['cart'] : array();

if (isset($cart[$product_id])) {
    $cart[$product_id]['quantity']++;
} else {
    $query = "SELECT * FROM products WHERE id = ?";
    $stmt = mysqli_prepare($conn, $query);
    mysqli_stmt_bind_param($stmt, 'i', $product_id);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);
    $product = mysqli_fetch_assoc($result);
    
    if ($product) {
        $cart[$product_id] = array(
            'id' => $product['id'],
            'name' => $product['name'],
            'price' => $product['price'],
            'quantity' => 1,
            'image' => $product['image']
        );
    }
}

$_SESSION['cart'] = $cart;
header("Location: shopping_cart.php");
exit();


<?php
session_start();

function calculateTotal($cart) {
    $total = 0;
    foreach ($cart as $item) {
        $total += $item['price'] * $item['quantity'];
    }
    return number_format($total, 2);
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
    <style>
        .cart-item {
            border: 1px solid #ddd;
            padding: 10px;
            margin: 5px;
        }
    </style>
</head>
<body>
    <?php if (!empty($_SESSION['cart'])): ?>
        <?php foreach ($_SESSION['cart'] as $item): ?>
            <div class="cart-item">
                <img src="<?php echo $item['image']; ?>" alt="<?php echo $item['name']; ?>" width="50">
                <h3><?php echo $item['name']; ?></h3>
                <p>Quantity: <?php echo $item['quantity']; ?></p>
                <p>Price: $<?php echo number_format($item['price'], 2); ?></p>
                <a href="remove_from_cart.php?id=<?php echo $item['id']; ?>">Remove</a>
            </div>
        <?php endforeach; ?>
        
        <h3>Total: $<?php echo calculateTotal($_SESSION['cart']); ?></h3>
        <form action="process_payment.php" method="post">
            <input type="text" name="card_number" placeholder="Card Number" required>
            <input type="text" name="cvv" placeholder="CVV" required>
            <button type="submit">Checkout</button>
        </form>
    <?php else: ?>
        <h3>Your cart is empty!</h3>
    <?php endif; ?>
    
    <a href="display_products.php">Continue Shopping</a>
</body>
</html>


<?php
session_start();

$product_id = $_GET['id'];
$cart = isset($_SESSION['cart']) ? $_SESSION['cart'] : array();

if (isset($cart[$product_id])) {
    unset($cart[$product_id]);
    $_SESSION['cart'] = $cart;
}

header("Location: shopping_cart.php");
exit();


<?php
session_start();

// Simulate payment processing
$transaction_id = rand(1000, 9999);

// Store order details in the database
include('db_connection.php');

$total_amount = calculateTotal($_SESSION['cart']);

$query = "INSERT INTO orders (transaction_id, total_amount, user_id) VALUES (?, ?, ?)";
$stmt = mysqli_prepare($conn, $query);
mysqli_stmt_bind_param($stmt, 'isi', $transaction_id, $total_amount, 1); // Assuming logged-in user
mysqli_stmt_execute($stmt);

// Clear cart after successful payment
unset($_SESSION['cart']);

header("Location: order_confirmation.php?transaction_id=$transaction_id");
exit();

function calculateTotal($cart) {
    $total = 0;
    foreach ($cart as $item) {
        $total += $item['price'] * $item['quantity'];
    }
    return number_format($total, 2);
}


<?php
session_start();

$transaction_id = $_GET['transaction_id'];

// Get order details from database
include('db_connection.php');

$query = "SELECT * FROM orders WHERE transaction_id = ?";
$stmt = mysqli_prepare($conn, $query);
mysqli_stmt_bind_param($stmt, 'i', $transaction_id);
mysqli_stmt_execute($stmt);
$result = mysqli_stmt_get_result($stmt);
$order = mysqli_fetch_assoc($result);

// Get order items
$query_items = "SELECT * FROM order_items WHERE transaction_id = ?";
$stmt_items = mysqli_prepare($conn, $query_items);
mysqli_stmt_bind_param($stmt_items, 'i', $transaction_id);
mysqli_stmt_execute($stmt_items);
$items_result = mysqli_stmt_get_result($stmt_items);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Order Confirmation</title>
    <style>
        .order-item {
            border: 1px solid #ddd;
            padding: 10px;
            margin: 5px;
        }
    </style>
</head>
<body>
    <h2>Thank you for your order!</h2>
    
    <?php if ($order): ?>
        <p>Your transaction ID is: <?php echo $transaction_id; ?></p>
        <div class="order-item">
            <?php while ($item = mysqli_fetch_assoc($items_result)): ?>
                <h3><?php echo $item['product_name']; ?></h3>
                <p>Quantity: <?php echo $item['quantity']; ?></p>
                <p>Price: $<?php echo number_format($item['price'], 2); ?></p>
            <?php endwhile; ?>
        </div>
        
        <p>Total Amount: $<?php echo number_format($order['total_amount'], 2); ?></p>
        <p>Date of Purchase: <?php echo $order['purchase_date']; ?></p>
    <?php else: ?>
        <p>There was an error processing your order. Please try again.</p>
    <?php endif; ?>
    
    <a href="display_products.php">Back to Shopping</a>
</body>
</html>


<?php
session_start();

// Sample product data
$products = array(
    array('id' => 1, 'name' => 'Product 1', 'price' => 25.00),
    array('id' => 2, 'name' => 'Product 2', 'price' => 45.00),
    array('id' => 3, 'name' => 'Product 3', 'price' => 65.00)
);

if (isset($_GET['action']) && $_GET['action'] == 'add_to_cart') {
    $productId = $_GET['id'];
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }
    
    if (array_key_exists($productId, $_SESSION['cart'])) {
        $_SESSION['cart'][$productId]['quantity']++;
    } else {
        $_SESSION['cart'][$productId] = array(
            'id' => $productId,
            'name' => $products[$productId - 1]['name'],
            'price' => $products[$productId - 1]['price'],
            'quantity' => 1
        );
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Product List</title>
</head>
<body>
    <h2>Product List</h2>
    
    <?php foreach ($products as $product): ?>
        <div style="margin: 10px 0;">
            <h3><?php echo $product['name']; ?></h3>
            <p>Price: $<?php echo number_format($product['price'], 2); ?></p>
            <a href="add_to_cart.php?id=<?php echo $product['id']; ?>">Add to Cart</a>
        </div>
    <?php endforeach; ?>
    
    <a href="cart.php">View Cart</a>
</body>
</html>


<?php
session_start();

$total = 0;
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <h2>Your Shopping Cart</h2>
    
    <?php if (empty($_SESSION['cart'])): ?>
        <p>Your cart is empty.</p>
    <?php else: ?>
        <table border="1">
            <tr>
                <th>Product Name</th>
                <th>Price</th>
                <th>Quantity</th>
                <th>Total</th>
                <th>Action</th>
            </tr>
            
            <?php foreach ($_SESSION['cart'] as $item): ?>
                <?php
                $total += ($item['price'] * $item['quantity']);
                ?>
                <tr>
                    <td><?php echo $item['name']; ?></td>
                    <td>$<?php echo number_format($item['price'], 2); ?></td>
                    <td><input type="text" name="quantity-<?php echo $item['id']; ?>" value="<?php echo $item['quantity']; ?>"></td>
                    <td>$<?php echo number_format(($item['price'] * $item['quantity']), 2); ?></td>
                    <td><a href="delete_from_cart.php?id=<?php echo $item['id']; ?>">Delete</a></td>
                </tr>
            <?php endforeach; ?>
        </table>
        
        <h3>Total: $<?php echo number_format($total, 2); ?></h3>
        <br>
        <form action="update_cart.php" method="post">
            <input type="submit" value="Update Cart">
        </form>
    <?php endif; ?>
    
    <a href="index.php">Continue Shopping</a>
</body>
</html>


<?php
session_start();

if (isset($_GET['id'])) {
    $productId = $_GET['id'];
    header("Location: index.php?action=add_to_cart&id=$productId");
}
?>


<?php
session_start();

foreach ($_POST as $key => $value) {
    if (strpos($key, 'quantity-') === 0) {
        $id = substr($key, 9);
        $quantity = intval($value);
        
        if ($quantity > 0) {
            $_SESSION['cart'][$id]['quantity'] = $quantity;
        } else {
            unset($_SESSION['cart'][$id]);
        }
    }
}

header("Location: cart.php");
?>


<?php
session_start();

if (isset($_GET['id'])) {
    $productId = $_GET['id'];
    unset($_SESSION['cart'][$productId]);
}

header("Location: cart.php");
?>


<?php
session_start();

// Product data - this could come from a database
$products = [
    ['id' => 1, 'name' => 'Product 1', 'price' => 29.99],
    ['id' => 2, 'name' => 'Product 2', 'price' => 49.99],
    ['id' => 3, 'name' => 'Product 3', 'price' => 19.99]
];

if (isset($_GET['product_id'])) {
    $productId = $_GET['product_id'];
    
    // Initialize cart if it doesn't exist
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }
    
    // Check if product already exists in cart
    $found = false;
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['id'] == $productId) {
            $item['quantity']++;
            $found = true;
            break;
        }
    }
    
    if (!$found) {
        // Add new product to cart
        $product = array_search($productId, array_column($products, 'id'));
        if ($product !== false) {
            $_SESSION['cart'][] = [
                'id' => $products[$product]['id'],
                'name' => $products[$product]['name'],
                'price' => $products[$product]['price'],
                'quantity' => 1
            ];
        }
    }
}

// Redirect back to the product list or cart page
header('Location: cart.php');
exit();
?>


<?php
session_start();

function calculateSubtotal($item) {
    return $item['price'] * $item['quantity'];
}

function calculateGrandTotal() {
    $grandTotal = 0;
    foreach ($_SESSION['cart'] as $item) {
        $grandTotal += calculateSubtotal($item);
    }
    return $grandTotal;
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <?php if (isset($_SESSION['cart']) && count($_SESSION['cart']) > 0): ?>
        <h1>Your Shopping Cart</h1>
        <table border="1">
            <tr>
                <th>Name</th>
                <th>Price</th>
                <th>Quantity</th>
                <th>Total</th>
            </tr>
            <?php foreach ($_SESSION['cart'] as $item): ?>
                <tr>
                    <td><?php echo $item['name']; ?></td>
                    <td>$<?php echo number_format($item['price'], 2); ?></td>
                    <td><?php echo $item['quantity']; ?></td>
                    <td>$<?php echo number_format(calculateSubtotal($item), 2); ?></td>
                </tr>
            <?php endforeach; ?>
        </table>
        <h3>Grand Total: $<?php echo number_format(calculateGrandTotal(), 2); ?></h3>
        <a href="checkout.php">Checkout</a>
    <?php else: ?>
        <p>Your cart is empty.</p>
        <a href="product_list.php">Continue Shopping</a>
    <?php endif; ?>
</body>
</html>


<?php
session_start();

function calculateGrandTotal() {
    $grandTotal = 0;
    foreach ($_SESSION['cart'] as $item) {
        $grandTotal += $item['price'] * $item['quantity'];
    }
    return $grandTotal;
}

if (isset($_POST['submit'])) {
    // Process payment
    header('Location: purchase_confirmation.php');
    exit();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
</head>
<body>
    <?php if (isset($_SESSION['cart']) && count($_SESSION['cart']) > 0): ?>
        <h1>Checkout</h1>
        <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
            <p>Grand Total: $<?php echo number_format(calculateGrandTotal(), 2); ?></p>
            
            <h2>Billing Information</h2>
            <input type="text" name="name" placeholder="Full Name" required><br>
            <input type="email" name="email" placeholder="Email Address" required><br>
            <input type="tel" name="phone" placeholder="Phone Number"><br>
            <textarea name="address" placeholder="Shipping Address" required></textarea><br>
            
            <h2>Payment Method</h2>
            <select name="payment_method">
                <option value="credit_card">Credit Card</option>
                <option value="paypal">PayPal</option>
            </select><br>
            
            <input type="submit" name="submit" value="Place Order">
        </form>
    <?php else: ?>
        <p>Your cart is empty.</p>
        <a href="product_list.php">Continue Shopping</a>
    <?php endif; ?>
</body>
</html>


<?php
session_start();

if (isset($_POST['submit'])) {
    // Simulate payment processing
    if ($_POST['payment_method'] == 'credit_card') {
        // Process credit card payment
        $success = true;
    } else if ($_POST['payment_method'] == 'paypal') {
        // Process PayPal payment
        $success = true;
    }
    
    if ($success) {
        // Empty the cart
        unset($_SESSION['cart']);
        
        // Redirect to confirmation page
        header('Location: purchase_confirmation.php');
        exit();
    } else {
        echo "Payment failed. Please try again.";
    }
}
?>


<?php
session_start();

// Get order details from previous steps
$grandTotal = isset($_SESSION['grand_total']) ? $_SESSION['grand_total'] : 0;
?>

<!DOCTYPE html>
<html>
<head>
    <title>Purchase Confirmation</title>
</head>
<body>
    <?php if (isset($_SESSION['cart'])): ?>
        <h1>Thank you for your purchase!</h1>
        <p>Your order has been received and is being processed.</p>
        <p>Order ID: <?php echo uniqid(); ?></p>
        <p>Total Amount: $<?php echo number_format(calculateGrandTotal(), 2); ?></p>
        <p>Name: <?php echo $_POST['name']; ?></p>
        <p>Email: <?php echo $_POST['email']; ?></p>
        <a href="product_list.php">Continue Shopping</a>
    <?php else: ?>
        <p>There was an error processing your order. Please try again.</p>
    <?php endif; ?>
</body>
</html>


<?php
session_start();
$products = array(
    array('id' => 1, 'name' => 'Product 1', 'price' => 29.99, 'description' => 'Description for product 1'),
    array('id' => 2, 'name' => 'Product 2', 'price' => 49.99, 'description' => 'Description for product 2'),
    array('id' => 3, 'name' => 'Product 3', 'price' => 19.99, 'description' => 'Description for product 3')
);
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Store</title>
</head>
<body>
    <h1>Welcome to the Store</h1>
    
    <?php foreach ($products as $product): ?>
        <div style="border: 1px solid #ddd; padding: 10px; margin-bottom: 10px;">
            <h3><?php echo $product['name']; ?></h3>
            <p><?php echo $product['description']; ?></p>
            <p>Price: <?php echo $product['price']; ?> USD</p>
            <form action="cart.php" method="post">
                <input type="hidden" name="product_id" value="<?php echo $product['id']; ?>">
                <input type="text" name="quantity" placeholder="Quantity" required>
                <button type="submit">Add to Cart</button>
            </form>
        </div>
    <?php endforeach; ?>
    
    <a href="cart.php">View Cart</a>
</body>
</html>


<?php
session_start();

// Function to add item to cart
function addToCart($productId, $quantity) {
    global $_SESSION;
    
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }
    
    if (isset($_SESSION['cart'][$productId])) {
        // Update quantity
        $_SESSION['cart'][$productId]['quantity'] += $quantity;
    } else {
        // Add new item
        $_SESSION['cart'][$productId] = array(
            'product_id' => $productId,
            'quantity' => $quantity
        );
    }
    
    return true;
}

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    if (isset($_POST['product_id']) && isset($_POST['quantity'])) {
        addToCart($_POST['product_id'], $_POST['quantity']);
    }
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Shopping Cart</title>
</head>
<body>
    <h1>Your Shopping Cart</h1>
    
    <?php if (isset($_SESSION['cart']) && count($_SESSION['cart']) > 0): ?>
        <table border="1">
            <tr>
                <th>Product ID</th>
                <th>Quantity</th>
                <th>Action</th>
            </tr>
            
            <?php foreach ($_SESSION['cart'] as $item): ?>
                <tr>
                    <td><?php echo $item['product_id']; ?></td>
                    <td><?php echo $item['quantity']; ?></td>
                    <td>
                        <form action="update_cart.php" method="post">
                            <input type="hidden" name="product_id" value="<?php echo $item['product_id']; ?>">
                            <input type="text" name="new_quantity" placeholder="New quantity">
                            <button type="submit">Update</button>
                        </form>
                        <br>
                        <a href="remove_from_cart.php?product_id=<?php echo $item['product_id']; ?>">Remove</a>
                    </td>
                </tr>
            <?php endforeach; ?>
        </table>
        
        <h3>Total Items: <?php echo count($_SESSION['cart']); ?></h3>
        <a href="checkout.php">Checkout</a>
    <?php else: ?>
        <p>Your cart is empty.</p>
        <a href="index.php">Back to Store</a>
    <?php endif; ?>
</body>
</html>


<?php
session_start();

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    if (isset($_POST['product_id']) && isset($_POST['new_quantity'])) {
        $productId = $_POST['product_id'];
        $quantity = $_POST['new_quantity'];
        
        if (isset($_SESSION['cart'][$productId])) {
            $_SESSION['cart'][$productId]['quantity'] = $quantity;
        }
    }
}

header("Location: cart.php");
exit();
?>


<?php
session_start();

if (isset($_GET['product_id'])) {
    $productId = $_GET['product_id'];
    
    if (isset($_SESSION['cart'][$productId])) {
        unset($_SESSION['cart'][$productId]);
    }
}

header("Location: cart.php");
exit();
?>


<?php
session_start();
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Checkout</title>
</head>
<body>
    <h1>Checkout</h1>
    
    <?php if (isset($_SESSION['cart']) && count($_SESSION['cart']) > 0): ?>
        <form action="process_payment.php" method="post">
            <div>
                <label for="name">Name:</label><br>
                <input type="text" id="name" name="name" required><br>
                
                <label for="email">Email:</label><br>
                <input type="email" id="email" name="email" required><br>
                
                <label for="address">Address:</label><br>
                <textarea id="address" name="address" required></textarea><br>
                
                <button type="submit">Place Order</button>
            </div>
        </form>
    <?php else: ?>
        <p>Your cart is empty.</p>
        <a href="index.php">Back to Store</a>
    <?php endif; ?>
</body>
</html>


<?php
session_start();

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get order data
    $orderData = array(
        'name' => $_POST['name'],
        'email' => $_POST['email'],
        'address' => $_POST['address'],
        'cart' => serialize($_SESSION['cart']),
        'total_amount' => 0.00, // Calculate total amount here
    );
    
    // Here you would typically connect to a database and store the order
    
    // For this example, we'll just generate an order ID
    $order_id = mt_rand(1000, 9999);
    
    // Redirect to confirmation page
    header("Location: confirmation.php?order_id=$order_id");
    exit();
}
?>


<?php
session_start();

// Reset cart after purchase
$_SESSION['cart'] = array();
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Order Confirmation</title>
</head>
<body>
    <?php if (isset($_GET['order_id'])): ?>
        <h1>Thank you for your purchase!</h1>
        <p>Your order ID is <?php echo $_GET['order_id']; ?></p>
        <a href="index.php">Back to Store</a>
    <?php else: ?>
        <p>There was an error processing your order.</p>
    <?php endif; ?>
</body>
</html>


<?php
session_start();

// Database configuration
$host = 'localhost';
$db_name = 'shopping_cart';
$user = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$db_name", $user, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

// Product class
class Product {
    private $conn;

    public function __construct($connection) {
        $this->conn = $connection;
    }

    // Get all products
    public function getProducts() {
        try {
            $stmt = $this->conn->query("SELECT * FROM products");
            return $stmt->fetchAll(PDO::FETCH_ASSOC);
        } catch(PDOException $e) {
            die("Error fetching products: " . $e->getMessage());
        }
    }

    // Add product to cart
    public function addToCart($id, $quantity) {
        if (isset($_SESSION['cart'])) {
            $_SESSION['cart'][$id] = $quantity;
        } else {
            $_SESSION['cart'] = array($id => $quantity);
        }
    }

    // Get product details
    public function getProductDetails($id) {
        try {
            $stmt = $this->conn->prepare("SELECT * FROM products WHERE id = ?");
            $stmt->execute([$id]);
            return $stmt->fetch(PDO::FETCH_ASSOC);
        } catch(PDOException $e) {
            die("Error fetching product details: " . $e->getMessage());
        }
    }

    // Update stock after purchase
    public function updateStock($id, $quantity) {
        try {
            $currentStock = $this->getProductDetails($id)['quantity'];
            if ($currentStock >= $quantity) {
                $stmt = $this->conn->prepare("UPDATE products SET quantity = ? WHERE id = ?");
                $stmt->execute([$currentStock - $quantity, $id]);
                return true;
            } else {
                return false; // Not enough stock
            }
        } catch(PDOException $e) {
            die("Error updating stock: " . $e->getMessage());
        }
    }
}

// Order class
class Order {
    private $conn;

    public function __construct($connection) {
        $this->conn = $connection;
    }

    // Create new order
    public function createOrder($user_id, $total_amount, $payment_method) {
        try {
            $stmt = $this->conn->prepare("INSERT INTO orders (user_id, total_amount, payment_method, order_status, created_at) 
                                      VALUES (?, ?, ?, 'pending', NOW())");
            $stmt->execute([$user_id, $total_amount, $payment_method]);
            return $this->conn->lastInsertId();
        } catch(PDOException $e) {
            die("Error creating order: " . $e->getMessage());
        }
    }

    // Add order items
    public function addOrderItems($order_id, $product_id, $quantity, $subtotal) {
        try {
            $stmt = $this->conn->prepare("INSERT INTO order_items (order_id, product_id, quantity, subtotal) 
                                      VALUES (?, ?, ?, ?)");
            $stmt->execute([$order_id, $product_id, $quantity, $subtotal]);
        } catch(PDOException $e) {
            die("Error adding order items: " . $e->getMessage());
        }
    }

    // Update order status
    public function updateOrderStatus($order_id, $status) {
        try {
            $stmt = $this->conn->prepare("UPDATE orders SET order_status = ? WHERE id = ?");
            $stmt->execute([$status, $order_id]);
        } catch(PDOException $e) {
            die("Error updating order status: " . $e->getMessage());
        }
    }

    // Calculate total amount
    public function calculateTotal($cart_items) {
        $total = 0;
        foreach ($cart_items as $id => $quantity) {
            $product = new Product($this->conn);
            $details = $product->getProductDetails($id);
            if ($details) {
                $total += $details['price'] * $quantity;
            }
        }
        return $total;
    }
}

// Checkout class
class Checkout {
    private $conn;

    public function __construct($connection) {
        $this->conn = $connection;
    }

    // Process checkout
    public function processCheckout($order_data, $cart_items) {
        try {
            if (!isset($_SESSION['user_id'])) {
                throw new Exception("User not logged in");
            }

            $product = new Product($this->conn);
            $order = new Order($this->conn);

            // Validate cart items
            foreach ($cart_items as $id => $quantity) {
                if (!$product->updateStock($id, $quantity)) {
                    throw new Exception("Not enough stock for product " . $id);
                }
            }

            // Create order
            $order_id = $order->createOrder($_SESSION['user_id'], $order_data['total_amount'], $order_data['payment_method']);

            // Add order items
            foreach ($cart_items as $id => $quantity) {
                $product_price = $product->getProductDetails($id)['price'];
                $subtotal = $product_price * $quantity;
                $order->addOrderItems($order_id, $id, $quantity, $subtotal);
            }

            // Update order status
            if ($this->processPayment($order_data)) {
                $order->updateOrderStatus($order_id, 'completed');
                unset($_SESSION['cart']);
                return true;
            } else {
                $order->updateOrderStatus($order_id, 'failed');
                throw new Exception("Payment failed");
            }

        } catch(PDOException $e) {
            die("Checkout error: " . $e->getMessage());
        }
    }

    // Process payment
    private function processPayment($payment_data) {
        // Simulate payment processing
        if ($payment_data['card_number'] == '4242424242424242' && 
            $payment_data['cvv'] == '123') {
            return true;
        }
        return false;
    }

    // Validate checkout form
    public function validateCheckoutData($data) {
        $errors = array();

        if (empty($data['first_name'])) {
            $errors[] = "First name is required";
        }

        if (empty($data['last_name'])) {
            $errors[] = "Last name is required";
        }

        if (!filter_var($data['email'], FILTER_VALIDATE_EMAIL)) {
            $errors[] = "Email is invalid";
        }

        if (strlen($data['address']) < 5) {
            $errors[] = "Address must be at least 5 characters";
        }

        return $errors;
    }
}

// Example usage:

$product = new Product($conn);
$products = $product->getProducts();
print_r($products);

// Add product to cart
$product_id = 1;
$quantity = 2;
$product->addToCart($product_id, $quantity);

// Checkout process
$checkout_data = array(
    'first_name' => 'John',
    'last_name' => 'Doe',
    'email' => 'john@example.com',
    'address' => '123 Main St',
    'total_amount' => 100.00,
    'payment_method' => 'credit_card',
    'card_number' => '4242424242424242',
    'cvv' => '123'
);

$checkout = new Checkout($conn);
$errors = $checkout->validateCheckoutData($checkout_data);

if (empty($errors)) {
    $cart_items = $_SESSION['cart'];
    $success = $checkout->processCheckout($checkout_data, $cart_items);

    if ($success) {
        echo "Order completed successfully!";
    } else {
        echo "Payment failed. Please try again.";
    }
} else {
    foreach ($errors as $error) {
        echo $error . "
";
    }
}
?>


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Purchase Functionality</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            max-width: 600px;
            margin: 0 auto;
            padding: 20px;
        }
        .form-group {
            margin-bottom: 15px;
        }
        input, select {
            width: 100%;
            padding: 8px;
            margin-top: 5px;
            border: 1px solid #ccc;
            border-radius: 4px;
        }
        button {
            background-color: #4CAF50;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
        button:hover {
            background-color: #45a049;
        }
        .success {
            color: green;
            font-weight: bold;
            margin-top: 10px;
        }
        .error {
            color: red;
            font-weight: bold;
            margin-top: 10px;
        }
    </style>
</head>
<body>
<?php
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get form data
    $name = $_POST['name'];
    $email = $_POST['email'];
    $product = $_POST['product'];
    $quantity = $_POST['quantity'];
    $price = $_POST['price'];
    $payment_method = $_POST['payment_method'];

    // Validate input
    $error = false;
    $error_message = "";

    if (empty($name) || empty($email) || empty($product) || empty($quantity) || empty($price) || empty($payment_method)) {
        $error = true;
        $error_message .= "All fields are required<br>";
    }

    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        $error = true;
        $error_message .= "Invalid email format<br>";
    }

    if (!ctype_digit($quantity) || $quantity <= 0) {
        $error = true;
        $error_message .= "Quantity must be a positive integer<br>";
    }

    if (!preg_match('/^\d+(\.\d{1,2})?$/', $price)) {
        $error = true;
        $error_message .= "Invalid price format<br>";
    }

    try {
        // Process payment
        if (!$error) {
            $total_price = $quantity * $price;

            // Here you would typically integrate with a payment gateway
            // For this example, we'll just simulate successful payment processing

            echo "<div class='success'>";
            echo "Purchase completed successfully!<br>";
            echo "Name: $name<br>";
            echo "Email: $email<br>";
            echo "Product: $product<br>";
            echo "Quantity: $quantity<br>";
            echo "Price per unit: $" . number_format($price, 2) . "<br>";
            echo "Total Price: $" . number_format($total_price, 2) . "<br>";
            echo "Payment Method: $payment_method";
            echo "</div>";

        } else {
            throw new Exception($error_message);
        }
    } catch (Exception $e) {
        echo "<div class='error'>";
        echo "Error occurred during purchase:<br>" . $e->getMessage();
        echo "</div>";
    }
}
?>

<h2>Purchase Form</h2>
<form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
    <div class="form-group">
        <label for="name">Name:</label><br>
        <input type="text" id="name" name="name" required>
    </div>

    <div class="form-group">
        <label for="email">Email:</label><br>
        <input type="email" id="email" name="email" required>
    </div>

    <div class="form-group">
        <label for="product">Product:</label><br>
        <select id="product" name="product" required>
            <option value="">Select a product</option>
            <option value="product1">Product 1</option>
            <option value="product2">Product 2</option>
            <option value="product3">Product 3</option>
        </select>
    </div>

    <div class="form-group">
        <label for="quantity">Quantity:</label><br>
        <input type="number" id="quantity" name="quantity" min="1" required>
    </div>

    <div class="form-group">
        <label for="price">Price ($):</label><br>
        <input type="text" id="price" name="price" pattern="[0-9]+(\.[0-9]{1,2})?" required>
    </div>

    <div class="form-group">
        <label>Payment Method:</label><br>
        <input type="radio" name="payment_method" value="credit_card" checked> Credit Card<br>
        <input type="radio" name="payment_method" value="paypal"> PayPal<br>
        <input type="radio" name="payment_method" value="bank_transfer"> Bank Transfer
    </div>

    <button type="submit">Purchase</button>
</form>

</body>
</html>


<?php
session_start();
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Product Store</title>
</head>
<body>
    <?php include('header.php'); ?>

    <div class="container">
        <h2>Available Products</h2>
        <table border="1">
            <tr>
                <th>Product ID</th>
                <th>Name</th>
                <th>Description</th>
                <th>Price</th>
                <th>Action</th>
            </tr>
            <?php
            // Sample products array
            $products = [
                ['id' => 1, 'name' => 'Laptop', 'description' => 'Dell XPS 15', 'price' => 999.99],
                ['id' => 2, 'name' => 'Phone', 'description' => 'Apple iPhone 13', 'price' => 799.99],
                ['id' => 3, 'name' => 'Tablet', 'description' => 'Samsung Galaxy Tab S7', 'price' => 599.99]
            ];

            foreach ($products as $product) {
                echo '<tr>';
                echo '<td>' . $product['id'] . '</td>';
                echo '<td>' . $product['name'] . '</td>';
                echo '<td>' . $product['description'] . '</td>';
                echo '<td>$' . number_format($product['price'], 2) . '</td>';
                echo '<td><a href="add_to_cart.php?id=' . $product['id'] . '">Add to Cart</a></td>';
                echo '</tr>';
            }
            ?>
        </table>
    </div>

    <?php include('footer.php'); ?>
</body>
</html>


<?php
session_start();

if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

$product_id = isset($_GET['id']) ? intval($_GET['id']) : 0;

// Sample products array
$products = [
    ['id' => 1, 'name' => 'Laptop', 'description' => 'Dell XPS 15', 'price' => 999.99],
    ['id' => 2, 'name' => 'Phone', 'description' => 'Apple iPhone 13', 'price' => 799.99],
    ['id' => 3, 'name' => 'Tablet', 'description' => 'Samsung Galaxy Tab S7', 'price' => 599.99]
];

// Find the product
$product = array();
foreach ($products as $item) {
    if ($item['id'] == $product_id) {
        $product = $item;
        break;
    }
}

if (!empty($product)) {
    // Check if product is already in cart
    $found = false;
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['id'] == $product['id']) {
            $item['quantity']++;
            $found = true;
            break;
        }
    }

    if (!$found) {
        $product['quantity'] = 1;
        array_push($_SESSION['cart'], $product);
    }
}

// Redirect back to products page
header("Location: products.php");
exit();
?>


<?php
session_start();

?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Shopping Cart</title>
</head>
<body>
    <?php include('header.php'); ?>

    <div class="container">
        <h2>Your Shopping Cart</h2>
        <?php if (empty($_SESSION['cart'])): ?>
            <p>Your cart is empty.</p>
        <?php else: ?>
            <table border="1">
                <tr>
                    <th>Product ID</th>
                    <th>Name</th>
                    <th>Description</th>
                    <th>Price</th>
                    <th>Quantity</th>
                    <th>Action</th>
                </tr>
                <?php foreach ($_SESSION['cart'] as $item): ?>
                    <tr>
                        <td><?php echo $item['id']; ?></td>
                        <td><?php echo $item['name']; ?></td>
                        <td><?php echo $item['description']; ?></td>
                        <td>$<?php echo number_format($item['price'], 2); ?></td>
                        <td><form action="update_cart.php" method="post">
                            <input type="hidden" name="id" value="<?php echo $item['id']; ?>">
                            <input type="number" name="quantity" value="<?php echo $item['quantity']; ?>" min="1">
                            <button type="submit">Update</button>
                        </form></td>
                        <td><a href="remove_from_cart.php?id=<?php echo $item['id']; ?>">Remove</a></td>
                    </tr>
                <?php endforeach; ?>
            </table>
            <p><a href="checkout.php">Proceed to Checkout</a></p>
        <?php endif; ?>
    </div>

    <?php include('footer.php'); ?>
</body>
</html>


<?php
session_start();

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $product_id = isset($_POST['id']) ? intval($_POST['id']) : 0;
    $new_quantity = isset($_POST['quantity']) ? max(1, intval($_POST['quantity'])) : 1;

    foreach ($_SESSION['cart'] as &$item) {
        if ($item['id'] == $product_id) {
            $item['quantity'] = $new_quantity;
            break;
        }
    }

    // Redirect back to view cart page
    header("Location: view_cart.php");
    exit();
}
?>


<?php
session_start();

if (!empty($_GET['id'])) {
    $product_id = intval($_GET['id']);

    foreach ($_SESSION['cart'] as $key => $item) {
        if ($item['id'] == $product_id) {
            unset($_SESSION['cart'][$key]);
            // Re-index the array
            $_SESSION['cart'] = array_values($_SESSION['cart']);
            break;
        }
    }
}

// Redirect back to view cart page
header("Location: view_cart.php");
exit();
?>


<?php
session_start();

if (!empty($_POST)) {
    // Process the checkout here
    $name = isset($_POST['name']) ? trim($_POST['name']) : '';
    $email = isset($_POST['email']) ? trim($_POST['email']) : '';
    $address = isset($_POST['address']) ? trim($_POST['address']) : '';
    $city = isset($_POST['city']) ? trim($_POST['city']) : '';
    $state = isset($_POST['state']) ? trim($_POST['state']) : '';
    $zip_code = isset($_POST['zip_code']) ? trim($_POST['zip_code']) : '';
    $card_number = isset($_POST['card_number']) ? trim($_POST['card_number']) : '';

    // Validate input
    $errors = array();
    if (empty($name)) {
        $errors[] = "Name is required.";
    }
    if (empty($email) || !filter_var($email, FILTER_VALIDATE_EMAIL)) {
        $errors[] = "Valid email address is required.";
    }
    if (empty($address)) {
        $errors[] = "Address is required.";
    }
    if (empty($city)) {
        $errors[] = "City is required.";
    }
    if (empty($state)) {
        $errors[] = "State is required.";
    }
    if (empty($zip_code) || !preg_match("/^[0-9]{5}$/", $zip_code)) {
        $errors[] = "Valid ZIP code is required.";
    }
    if (empty($card_number) || !preg_match("/^[0-9]{16}$/", $card_number)) {
        $errors[] = "Valid card number is required.";
    }

    if (empty($errors)) {
        // Process payment and place order
        echo "<h2>Thank you for your purchase!</h2>";
        print_r($_SESSION['cart']);
        
        // Clear the cart
        $_SESSION['cart'] = array();
    } else {
        foreach ($errors as $error) {
            echo "<p style='color: red;'>$error</p>";
        }
    }
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Checkout</title>
</head>
<body>
    <?php include('header.php'); ?>

    <div class="container">
        <h2>Checkout</h2>
        <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
            <table>
                <tr>
                    <td>Name:</td>
                    <td><input type="text" name="name" value="<?php echo isset($_POST['name']) ? $_POST['name'] : ''; ?>"></td>
                </tr>
                <tr>
                    <td>Email:</td>
                    <td><input type="email" name="email" value="<?php echo isset($_POST['email']) ? $_POST['email'] : ''; ?>"></td>
                </tr>
                <tr>
                    <td>Address:</td>
                    <td><input type="text" name="address" value="<?php echo isset($_POST['address']) ? $_POST['address'] : ''; ?>"></td>
                </tr>
                <tr>
                    <td>City:</td>
                    <td><input type="text" name="city" value="<?php echo isset($_POST['city']) ? $_POST['city'] : ''; ?>"></td>
                </tr>
                <tr>
                    <td>State:</td>
                    <td><input type="text" name="state" value="<?php echo isset($_POST['state']) ? $_POST['state'] : ''; ?>"></td>
                </tr>
                <tr>
                    <td>ZIP Code:</td>
                    <td><input type="text" name="zip_code" value="<?php echo isset($_POST['zip_code']) ? $_POST['zip_code'] : ''; ?>"></td>
                </tr>
                <tr>
                    <td>Card Number:</td>
                    <td><input type="text" name="card_number" value="<?php echo isset($_POST['card_number']) ? $_POST['card_number'] : ''; ?>"></td>
                </tr>
            </table>
            <button type="submit">Place Order</button>
        </form>
    </div>

    <?php include('footer.php'); ?>
</body>
</html>


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
<body>
    <nav>
        <ul>
            <li><a href="products.php">Products</a></li>
            <li><a href="view_cart.php">View Cart</a></li>
            <?php if (isset($_SESSION['cart']) && !empty($_SESSION['cart'])): ?>
                <li><a href="checkout.php">Checkout</a></li>
            <?php endif; ?>
        </ul>
    </nav>


<footer>
    <p>&copy; 2023 My Store. All rights reserved.</p>
</footer>
</body>
</html>


<?php
// products.php
session_start();

$products = array(
    array('id' => 1, 'name' => 'Product 1', 'price' => 19.99),
    array('id' => 2, 'name' => 'Product 2', 'price' => 29.99),
    array('id' => 3, 'name' => 'Product 3', 'price' => 39.99)
);

// Initialize cart if not exists
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Online Store</title>
    <style>
        .product { margin: 10px; padding: 10px; border: 1px solid #ddd; }
        .cart { margin-top: 20px; }
    </style>
</head>
<body>
    <?php foreach ($products as $product): ?>
        <div class="product">
            <h3><?php echo $product['name']; ?></h3>
            <p>Price: $<?php echo number_format($product['price'], 2); ?></p>
            <form action="add_to_cart.php" method="post">
                <input type="hidden" name="id" value="<?php echo $product['id']; ?>">
                <input type="number" name="quantity" min="1" max="5" step="1" value="1">
                <button type="submit">Add to Cart</button>
            </form>
        </div>
    <?php endforeach; ?>

    <div class="cart">
        <h2>Your Cart</h2>
        <?php if (empty($_SESSION['cart'])): ?>
            <p>Your cart is empty.</p>
        <?php else: ?>
            <table>
                <tr><th>Product</th><th>Quantity</th><th>Price</th></tr>
                <?php foreach ($_SESSION['cart'] as $item): 
                    $product = array_search($item['id'], array_column($products, 'id'));
                ?>
                <tr>
                    <td><?php echo $products[$product]['name']; ?></td>
                    <td><input type="number" name="quantity" value="<?php echo $item['quantity']; ?>"></td>
                    <td>$<?php echo number_format($products[$product]['price'], 2); ?></td>
                </tr>
                <?php endforeach; ?>
            </table>
            <button onclick="window.location.href='checkout.php'">Checkout</button>
        <?php endif; ?>
    </div>

    <script>
        // Add to cart functionality
        document.querySelectorAll('form').forEach(form => {
            form.addEventListener('submit', function(e) {
                e.preventDefault();
                const formData = new FormData(this);
                fetch('add_to_cart.php', {
                    method: 'POST',
                    body: formData
                }).then(response => location.reload());
            });
        });
    </script>
</body>
</html>

<?php
// add_to_cart.php
session_start();

if (isset($_POST['id']) && isset($_POST['quantity'])) {
    $productId = $_POST['id'];
    $quantity = $_POST['quantity'];

    if (!isset($_SESSION['cart'][$productId])) {
        $_SESSION['cart'][$productId] = array(
            'id' => $productId,
            'quantity' => 0
        );
    }

    $_SESSION['cart'][$productId]['quantity'] += $quantity;
}

header('Location: products.php');
exit();
?>

<?php
// checkout.php
session_start();

if (empty($_SESSION['cart'])) {
    header('Location: products.php');
    exit();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
</head>
<body>
    <h2>Enter Payment Details</h2>
    <form action="process_payment.php" method="post">
        <input type="text" name="name" placeholder="Name" required><br>
        <input type="email" name="email" placeholder="Email" required><br>
        <input type="text" name="address" placeholder="Address" required><br>
        <input type="number" name="card_number" placeholder="Card Number" required><br>
        <button type="submit">Purchase</button>
    </form>

    <script>
        document.querySelector('form').addEventListener('submit', function(e) {
            e.preventDefault();
            const formData = new FormData(this);
            
            fetch('process_payment.php', {
                method: 'POST',
                body: formData
            }).then(response => {
                if (response.ok) {
                    alert('Purchase successful!');
                    window.location.href = 'products.php';
                } else {
                    alert('Payment failed. Please try again.');
                }
            });
        });
    </script>
</body>
</html>

<?php
// process_payment.php
session_start();

if (isset($_POST['name'], $_POST['email'], $_POST['address'], $_POST['card_number'])) {
    // Simulate payment processing
    $success = substr($_POST['card_number'], 0, 4) === '4242'; // Test card number

    if ($success) {
        // Update database with order details
        // (You would connect to your database here)
        
        // Clear cart
        unset($_SESSION['cart']);
        
        echo json_encode(['success' => true]);
    } else {
        echo json_encode(['success' => false, 'message' => 'Invalid card number. Please try again.']);
    }
} else {
    http_response_code(400);
}
?>


<?php
// Connect to database
$mysqli = new mysqli('localhost', 'username', 'password', 'database');

// Fetch products from database
$result = $mysqli->query("SELECT * FROM products LIMIT 6");
?>

<!DOCTYPE html>
<html>
<head>
    <title>Product Store</title>
    <style>
        .product-card {
            border: 1px solid #ddd;
            padding: 10px;
            margin: 10px;
            width: 250px;
            display: inline-block;
        }
    </style>
</head>
<body>
    <?php while ($row = $result->fetch_assoc()) { ?>
        <div class="product-card">
            <h3><?php echo $row['name']; ?></h3>
            <p><?php echo $row['description']; ?></p>
            <p>Price: $<?php echo number_format($row['price'], 2); ?></p>
            <form action="add_to_cart.php" method="post">
                <input type="hidden" name="product_id" value="<?php echo $row['id']; ?>">
                <button type="submit">Add to Cart</button>
            </form>
        </div>
    <?php } ?>

    <a href="cart.php">Go to Cart</a>
</body>
</html>


<?php
session_start();

$product_id = $_POST['product_id'];
$mysqli = new mysqli('localhost', 'username', 'password', 'database');

// Get product details
$result = $mysqli->query("SELECT * FROM products WHERE id = '$product_id'");
$product = $result->fetch_assoc();

// Add to cart
if (isset($_SESSION['cart'])) {
    if (array_key_exists($product_id, $_SESSION['cart'])) {
        $_SESSION['cart'][$product_id]['quantity']++;
    } else {
        $_SESSION['cart'][$product_id] = array(
            'name' => $product['name'],
            'price' => $product['price'],
            'quantity' => 1
        );
    }
} else {
    $_SESSION['cart'] = array(
        $product_id => array(
            'name' => $product['name'],
            'price' => $product['price'],
            'quantity' => 1
        )
    );
}

header('Location: cart.php');
?>


<?php
session_start();

$mysqli = new mysqli('localhost', 'username', 'password', 'database');

if (isset($_GET['action']) && $_GET['action'] == 'remove') {
    $product_id = $_GET['product_id'];
    unset($_SESSION['cart'][$product_id]);
}

?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
    <style>
        .cart-item {
            border: 1px solid #ddd;
            padding: 10px;
            margin: 10px;
        }
    </style>
</head>
<body>
    <?php if (!empty($_SESSION['cart'])) { ?>
        <?php foreach ($_SESSION['cart'] as $product_id => $item) { ?>
            <div class="cart-item">
                <h3><?php echo $item['name']; ?></h3>
                <p>Price: $<?php echo number_format($item['price'], 2); ?></p>
                <p>Quantity: <?php echo $item['quantity']; ?></p>
                <a href="cart.php?action=remove&product_id=<?php echo $product_id; ?>">Remove</a>
            </div>
        <?php } ?>
        
        <h3>Total: $<?php echo number_format(array_sum(array_column($_SESSION['cart'], 'price')), 2); ?></h3>
        
        <form action="process_order.php" method="post">
            <input type="text" name="name" placeholder="Name" required><br>
            <input type="email" name="email" placeholder="Email" required><br>
            <input type="tel" name="phone" placeholder="Phone" required><br>
            <textarea name="address" placeholder="Address" required></textarea><br>
            <button type="submit">Checkout</button>
        </form>
    <?php } else { ?>
        <h3>Your cart is empty!</h3>
        <a href="products.php">Continue Shopping</a>
    <?php } ?>

    <a href="products.php">Back to Store</a>
</body>
</html>


<?php
session_start();

$mysqli = new mysqli('localhost', 'username', 'password', 'database');

// Get form data
$name = $_POST['name'];
$email = $_POST['email'];
$phone = $_POST['phone'];
$address = $_POST['address'];

// Calculate total price
$total_price = array_sum(array_column($_SESSION['cart'], 'price'));

// Insert order into database
$stmt = $mysqli->prepare("INSERT INTO orders (name, email, phone, address, total_price, status) VALUES (?, ?, ?, ?, ?, 'pending')");
$stmt->bind_param("ssssd", $name, $email, $phone, $address, $total_price);
$stmt->execute();

// Clear cart
$_SESSION['cart'] = array();

header('Location: thankyou.php');
?>


<?php
session_start();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Thank You!</title>
</head>
<body>
    <h1>Thank you for your purchase!</h1>
    <p>Your order has been received and will be processed shortly.</p>
    <a href="products.php">Continue Shopping</a>
</body>
</html>


<?php
// Database connection details
$host = "localhost";
$username = "username";
$password = "password";
$dbname = "myDB";

// Create connection
$conn = new mysqli($host, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to create the purchase form
function create_purchase_form() {
    ?>
    <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
        <div class="container">
            <h2>Purchase Form</h2>
            <?php if (isset($_GET['error'])) { 
                $error = $_GET['error'];
                echo "<p style='color: red;'>$error</p>";
            } ?>
            
            <label for="name">Product Name:</label><br>
            <input type="text" id="name" name="name"><br>

            <label for="description">Description:</label><br>
            <input type="text" id="description" name="description"><br>

            <label for="price">Price per unit ($):</label><br>
            <input type="number" id="price" name="price" step="0.01"><br>

            <label for="quantity">Quantity:</label><br>
            <input type="number" id="quantity" name="quantity" min="1" value="1"><br>

            <button type="submit" name="purchase">Purchase</button>
        </div>
    </form>
    <?php
}

// Function to display purchase confirmation
function display_purchase_confirmation($name, $description, $price, $quantity, $total_price) {
    ?>
    <div class="container">
        <h2>Purchase Confirmation</h2>
        <p>Thank you for your purchase!</p>
        <table>
            <tr><td>Name:</td><td><?php echo $name; ?></td></tr>
            <tr><td>Description:</td><td><?php echo $description; ?></td></tr>
            <tr><td>Price per unit:</td><td>$<?php echo number_format($price, 2); ?></td></tr>
            <tr><td>Quantity:</td><td><?php echo $quantity; ?></td></tr>
            <tr><td>Total Price:</td><td>$<?php echo number_format($total_price, 2); ?></td></tr>
        </table>
    </div>
    <?php
}

// Main function to handle purchase logic
function process_purchase() {
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        $name = $_POST['name'];
        $description = $_POST['description'];
        $price = $_POST['price'];
        $quantity = $_POST['quantity'];

        // Validate input fields
        if (empty($name) || empty($description) || empty($price) || empty($quantity)) {
            header("Location: purchase.php?error=All%20fields%20are%20required");
            exit();
        }

        $total_price = $price * $quantity;

        // Insert into database
        global $conn;
        $sql = "INSERT INTO purchases (name, description, price, quantity, total_price) VALUES ('$name', '$description', '$price', '$quantity', '$total_price')";

        if ($conn->query($sql) === TRUE) {
            display_purchase_confirmation($name, $description, $price, $quantity, $total_price);
        } else {
            echo "Error: " . $sql . "<br>" . $conn->error;
        }
    } else {
        create_purchase_form();
    }
}

// Execute the main function
process_purchase();

$conn->close();
?>


<!DOCTYPE html>
<html>
<head>
    <title>Product List</title>
</head>
<body>
    <?php
    // Connect to the database
    $conn = mysqli_connect("localhost", "username", "password", "database_name");
    
    // Fetch products from the database
    $sql = "SELECT * FROM products";
    $result = mysqli_query($conn, $sql);
    ?>
    
    <h2>Products</h2>
    <?php while ($row = mysqli_fetch_assoc($result)): ?>
        <div>
            <h3><?php echo $row['name']; ?></h3>
            <p><?php echo $row['description']; ?></p>
            <p>Price: $<?php echo number_format($row['price'], 2); ?></p>
            <form action="add_to_cart.php" method="post">
                <input type="hidden" name="product_id" value="<?php echo $row['id']; ?>">
                <input type="number" name="quantity" min="1" max="99" step="1" value="1">
                <button type="submit">Add to Cart</button>
            </form>
        </div>
    <?php endwhile; ?>
    
    <a href="view_cart.php">View Cart</a>
</body>
</html>


<?php
session_start();
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

$product_id = isset($_POST['product_id']) ? (int)$_POST['product_id'] : 0;
$quantity = isset($_POST['quantity']) ? (int)$_POST['quantity'] : 1;

// Connect to the database
$conn = mysqli_connect("localhost", "username", "password", "database_name");
$sql = "SELECT * FROM products WHERE id = $product_id";
$result = mysqli_query($conn, $sql);
$product = mysqli_fetch_assoc($result);

if ($product) {
    if (!isset($_SESSION['cart'][$product_id])) {
        $_SESSION['cart'][$product_id] = array(
            'name' => $product['name'],
            'price' => $product['price'],
            'quantity' => 0
        );
    }
    
    $_SESSION['cart'][$product_id]['quantity'] += $quantity;
}

header("Location: view_cart.php");
exit();
?>


<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <?php
    session_start();
    
    if (!isset($_SESSION['cart']) || empty($_SESSION['cart'])) {
        echo "Your cart is empty!";
        exit();
    }
    ?>
    
    <h2>Your Shopping Cart</h2>
    <table border="1">
        <tr>
            <th>Product Name</th>
            <th>Price</th>
            <th>Quantity</th>
            <th>Total</th>
            <th>Action</th>
        </tr>
        <?php foreach ($_SESSION['cart'] as $product_id => $item): ?>
            <tr>
                <td><?php echo $item['name']; ?></td>
                <td>$<?php echo number_format($item['price'], 2); ?></td>
                <td>
                    <form action="update_cart.php" method="post">
                        <input type="hidden" name="product_id" value="<?php echo $product_id; ?>">
                        <input type="number" name="quantity" min="1" max="99" step="1" value="<?php echo $item['quantity']; ?>">
                        <button type="submit">Update</button>
                    </form>
                </td>
                <td>$<?php echo number_format($item['price'] * $item['quantity'], 2); ?></td>
                <td><a href="remove_from_cart.php?product_id=<?php echo $product_id; ?>">Remove</a></td>
            </tr>
        <?php endforeach; ?>
    </table>
    
    <h3>Subtotal: $<?php 
    $subtotal = 0;
    foreach ($_SESSION['cart'] as $item) {
        $subtotal += $item['price'] * $item['quantity'];
    }
    echo number_format($subtotal, 2);
    ?></h3>
    
    <form action="checkout.php" method="post">
        <button type="submit">Proceed to Checkout</button>
    </form>
    
    <a href="product_list.php">Continue Shopping</a>
</body>
</html>


<?php
session_start();

$product_id = isset($_POST['product_id']) ? (int)$_POST['product_id'] : 0;
$quantity = isset($_POST['quantity']) ? (int)$_POST['quantity'] : 1;

if ($quantity < 1) {
    $quantity = 1;
}

if (isset($_SESSION['cart'][$product_id])) {
    $_SESSION['cart'][$product_id]['quantity'] = $quantity;
}

header("Location: view_cart.php");
exit();
?>


<?php
session_start();

$product_id = isset($_GET['product_id']) ? (int)$_GET['product_id'] : 0;

if (isset($_SESSION['cart'][$product_id])) {
    unset($_SESSION['cart'][$product_id]);
}

header("Location: view_cart.php");
exit();
?>


<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
</head>
<body>
    <?php
    session_start();
    
    if (!isset($_SESSION['cart']) || empty($_SESSION['cart'])) {
        echo "Your cart is empty!";
        exit();
    }
    ?>
    
    <h2>Checkout</h2>
    
    <form action="process_purchase.php" method="post">
        <div>
            <label for="name">Name:</label>
            <input type="text" id="name" name="name" required>
        </div>
        
        <div>
            <label for="email">Email:</label>
            <input type="email" id="email" name="email" required>
        </div>
        
        <div>
            <label for="address">Address:</label>
            <textarea id="address" name="address" required></textarea>
        </div>
        
        <div>
            <h3>Payment Information</h3>
            <input type="hidden" name="card_number" placeholder="Card Number">
            <input type="password" name="cvv" placeholder="CVV" maxlength="4">
        </div>
        
        <button type="submit">Place Order</button>
    </form>
</body>
</html>


<?php
session_start();
require_once 'database_connection.php';

// Validate input data
$name = isset($_POST['name']) ? trim($_POST['name']) : '';
$email = isset($_POST['email']) ? trim($_POST['email']) : '';
$address = isset($_POST['address']) ? trim($_POST['address']) : '';

if (empty($name) || empty($email) || empty($address)) {
    die("Please fill in all required fields.");
}

// Process payment - this is a simplified example
$amount = 0;
foreach ($_SESSION['cart'] as $item) {
    $amount += $item['price'] * $item['quantity'];
}

// Store order in database
$order_sql = "INSERT INTO orders (name, email, address, amount) VALUES (?, ?, ?, ?)";
$order_stmt = $conn->prepare($order_sql);
$order_stmt->bind_param("sssd", $name, $email, $address, $amount);
if (!$order_stmt->execute()) {
    die("Error processing your order.");
}
$order_id = $order_stmt->insert_id;

// Store order items in database
foreach ($_SESSION['cart'] as $product_id => $item) {
    $item_sql = "INSERT INTO order_items (order_id, product_id, quantity, price) 
                VALUES (?, ?, ?, ?)";
    $item_stmt = $conn->prepare($item_sql);
    $item_stmt->bind_param("iidi", $order_id, $product_id, $item['quantity'], $item['price']);
    if (!$item_stmt->execute()) {
        die("Error processing your order.");
    }
}

// Clear the cart
unset($_SESSION['cart']);

// Redirect to confirmation page
header("Location: purchase_confirmation.php?order_id=$order_id");
exit();
?>


<?php
session_start();

$order_id = isset($_GET['order_id']) ? (int)$_GET['order_id'] : 0;

// Connect to the database
$conn = mysqli_connect("localhost", "username", "password", "database_name");
$sql = "SELECT * FROM orders WHERE id = $order_id";
$result = mysqli_query($conn, $sql);
$order = mysqli_fetch_assoc($result);

if (!$order) {
    die("Invalid order ID.");
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Purchase Confirmation</title>
</head>
<body>
    <h2>Thank You for Your Purchase!</h2>
    <p>Your order has been received and is being processed.</p>
    <div>
        <h3>Order Details:</h3>
        <p>Name: <?php echo $order['name']; ?></p>
        <p>Email: <?php echo $order['email']; ?></p>
        <p>Address: <?php echo $order['address']; ?></p>
        <p>Order ID: <?php echo $order_id; ?></p>
        <p>Total Amount: $<?php echo number_format($order['amount'], 2); ?></p>
    </div>
    
    <a href="product_list.php">Continue Shopping</a>
</body>
</html>


<?php
// Database connection details
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "myDB";

// Create database connection
$conn = new mysqli($servername, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to sanitize input data
function sanitizeInput($data) {
    $data = trim($data);
    $data = stripslashes($data);
    $data = htmlspecialchars($data);
    return $data;
}

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get form values
    $cardNumber = sanitizeInput($_POST['card_number']);
    $cvv = sanitizeInput($_POST['cvv']);
    $amount = sanitizeInput($_POST['amount']);

    // Validate input
    if (empty($cardNumber) || empty($cvv) || empty($amount)) {
        die("Please fill in all required fields");
    }

    if (!preg_match("/^[0-9]{16}$/", $cardNumber)) {
        die("Invalid card number format");
    }

    if (!preg_match("/^[0-9]{3}$/", $cvv)) {
        die("Invalid CVV format");
    }

    // Process payment
    try {
        // Here you would typically integrate with a payment gateway
        // For this example, we'll just simulate the payment processing

        // Insert purchase details into database
        $sql = "INSERT INTO purchases (card_number, cvv, amount, purchase_date)
                VALUES (?, ?, ?, NOW())";

        $stmt = $conn->prepare($sql);
        $stmt->bind_param("sds", $cardNumber, $cvv, $amount);

        if ($stmt->execute()) {
            echo "Purchase successful!";
        } else {
            die("Error processing payment: " . $conn->error);
        }

    } catch (Exception $e) {
        die("An error occurred: " . $e->getMessage());
    }
}

// Display purchase form
?>
<!DOCTYPE html>
<html>
<head>
    <title>Purchase Page</title>
</head>
<body>
    <h1>Make a Purchase</h1>
    <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
        <label for="card_number">Card Number:</label><br>
        <input type="text" id="card_number" name="card_number"><br>

        <label for="cvv">CVV:</label><br>
        <input type="text" id="cvv" name="cvv"><br>

        <label for="amount">Amount:</label><br>
        <input type="number" id="amount" name="amount"><br>

        <input type="submit" value="Purchase">
    </form>
</body>
</html>


// Display purchase history
$result = $conn->query("SELECT * FROM purchases ORDER BY purchase_date DESC");

if ($result->num_rows > 0) {
    echo "<h2>Purchase History</h2>";
    while($row = $result->fetch_assoc()) {
        echo "Amount: $" . $row["amount"] . " - Date: " . $row["purchase_date"] . "<br>";
    }
}


<?php
session_start();

// Initialize cart if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Sample products (you would typically get this from a database in a real application)
$products = array(
    1 => array(
        'name' => 'Product 1',
        'price' => 29.99,
        'description' => 'Description for Product 1'
    ),
    2 => array(
        'name' => 'Product 2',
        'price' => 49.99,
        'description' => 'Description for Product 2'
    ),
    3 => array(
        'name' => 'Product 3',
        'price' => 19.99,
        'description' => 'Description for Product 3'
    )
);

// Handle adding items to the cart
if (isset($_POST['add_to_cart'])) {
    $productId = intval($_POST['product_id']);
    $quantity = intval($_POST['quantity']);

    if ($quantity > 0) {
        // Check if product already exists in cart
        if (isset($_SESSION['cart'][$productId])) {
            $_SESSION['cart'][$productId]['quantity'] += $quantity;
        } else {
            $_SESSION['cart'][$productId] = array(
                'name' => $products[$productId]['name'],
                'price' => $products[$productId]['price'],
                'quantity' => $quantity
            );
        }
    }
}

// Handle removing items from the cart
if (isset($_GET['remove'])) {
    $productId = intval($_GET['remove']);
    unset($_SESSION['cart'][$productId]);
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
        }
        .product-listing {
            margin-bottom: 30px;
        }
        .cart-item {
            border-bottom: 1px solid #ccc;
            padding: 10px;
            margin-bottom: 5px;
        }
        .total-cost {
            font-weight: bold;
            margin-top: 20px;
        }
    </style>
</head>
<body>
    <h1>Shopping Cart</h1>

    <!-- Product Listing -->
    <div class="product-listing">
        <?php foreach ($products as $id => $product): ?>
            <form method="post" action="">
                <div style="float: left; margin-right: 20px;">
                    <img src="placeholder-image.jpg" alt="<?php echo $product['name']; ?>" width="100">
                </div>
                <div style="float: left;">
                    <h3><?php echo $product['name']; ?></h3>
                    <p><?php echo $product['description']; ?></p>
                    <p>Price: $<?php echo number_format($product['price'], 2); ?></p>
                    <input type="hidden" name="product_id" value="<?php echo $id; ?>">
                    <input type="number" name="quantity" min="1" max="99" value="1">
                    <button type="submit" name="add_to_cart">Add to Cart</button>
                </div>
                <div style="clear: both;"></div>
            </form>
        <?php endforeach; ?>
    </div>

    <!-- Cart Contents -->
    <h2>Cart Items:</h2>
    <?php if (!empty($_SESSION['cart'])): ?>
        <?php foreach ($_SESSION['cart'] as $id => $item): ?>
            <div class="cart-item">
                <p><?php echo $item['name']; ?></p>
                <p>Quantity: <?php echo $item['quantity']; ?></p>
                <p>Price: $<?php echo number_format($item['price'], 2); ?></p>
                <a href="?remove=<?php echo $id; ?>">Remove</a>
            </div>
        <?php endforeach; ?>

        <!-- Total Cost Calculation -->
        <?php 
        $total = 0;
        foreach ($_SESSION['cart'] as $item) {
            $total += ($item['price'] * $item['quantity']);
        }
        ?>
        <div class="total-cost">
            Subtotal: $<?php echo number_format($total, 2); ?>
        </div>
    <?php else: ?>
        <p>Your cart is empty.</p>
    <?php endif; ?>

    <!-- Checkout Button -->
    <?php if (!empty($_SESSION['cart'])): ?>
        <form method="post" action="checkout.php">
            <button type="submit">Checkout</button>
        </form>
    <?php endif; ?>
</body>
</html>


<?php
// Database connection
$host = 'localhost';
$dbname = 'shopping_cart';
$username = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}

// Function to get products
function getProducts() {
    global $conn;
    $stmt = $conn->query("SELECT * FROM products");
    return $stmt->fetchAll(PDO::FETCH_ASSOC);
}

// Initialize session
session_start();

// Check if cart is set in session, else initialize it
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add to cart functionality
if (isset($_GET['action']) && $_GET['action'] == 'add') {
    $productId = intval($_GET['id']);
    $quantity = isset($_GET['quantity']) ? intval($_GET['quantity']) : 1;

    // Check if product exists in database
    $stmt = $conn->prepare("SELECT * FROM products WHERE id = ?");
    $stmt->execute([$productId]);
    $product = $stmt->fetch(PDO::FETCH_ASSOC);

    if ($product) {
        // Add to cart or update quantity
        if (isset($_SESSION['cart'][$productId])) {
            $_SESSION['cart'][$productId]['quantity'] += $quantity;
        } else {
            $_SESSION['cart'][$productId] = array(
                'id' => $productId,
                'name' => $product['name'],
                'price' => $product['price'],
                'quantity' => $quantity
            );
        }
    }
}

// Update cart functionality
if (isset($_POST['action']) && $_POST['action'] == 'update') {
    foreach ($_POST['quantity'] as $productId => $qty) {
        if ($qty > 0) {
            $_SESSION['cart'][$productId]['quantity'] = $qty;
        } else {
            unset($_SESSION['cart'][$productId]);
        }
    }
}

// Remove from cart functionality
if (isset($_GET['action']) && $_GET['action'] == 'remove') {
    $productId = intval($_GET['id']);
    if (isset($_SESSION['cart'][$productId])) {
        unset($_SESSION['cart'][$ productId]);
    }
}

// Checkout functionality
if (isset($_POST['action']) && $_POST['action'] == 'checkout') {
    // Get user details
    $buyerName = $_POST['buyer_name'];
    $buyerEmail = $_POST['buyer_email'];
    $buyerPhone = $_POST['buyer_phone'];

    // Calculate total price
    $totalPrice = 0;
    foreach ($_SESSION['cart'] as $item) {
        $totalPrice += ($item['price'] * $item['quantity']);
    }

    // Insert order into database
    try {
        $conn->beginTransaction();
        
        // Insert main order
        $stmt = $conn->prepare("INSERT INTO orders (buyer_name, buyer_email, buyer_phone, total_price) VALUES (?, ?, ?, ?)");
        $stmt->execute([$buyerName, $buyerEmail, $buyerPhone, $totalPrice]);
        $orderId = $conn->lastInsertId();

        // Insert order items
        foreach ($_SESSION['cart'] as $item) {
            $stmt = $conn->prepare("INSERT INTO order_items (order_id, product_id, quantity, price) VALUES (?, ?, ?, ?)");
            $stmt->execute([$orderId, $item['id'], $item['quantity'], $item['price']]);
        }

        $conn->commit();
        
        // Clear cart
        $_SESSION['cart'] = array();

        // Redirect to thank you page or show success message
        echo "<script>alert('Purchase successful! Thank you for your order.'); window.location.href='products.php';</script>";
    } catch (PDOException $e) {
        $conn->rollBack();
        echo "Error: " . $e->getMessage();
    }
}
?>


<?php
// Start session
session_start();

// Database connection
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "myDB";

$conn = mysqli_connect($servername, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Product data (you can fetch this from your database)
$products = array(
    1 => array('id' => 1, 'name' => 'Product 1', 'price' => 25.00),
    2 => array('id' => 2, 'name' => 'Product 2', 'price' => 45.00),
    3 => array('id' => 3, 'name' => 'Product 3', 'price' => 15.00)
);

// Add to cart functionality
if (isset($_GET['action']) && $_GET['action'] == 'add_to_cart') {
    $productId = intval($_GET['product_id']);
    if (isset($products[$productId])) {
        if (!isset($_SESSION['cart'])) {
            $_SESSION['cart'] = array();
        }
        if (!isset($_SESSION['cart'][$productId])) {
            $_SESSION['cart'][$productId] = array(
                'id' => $products[$productId]['id'],
                'name' => $products[$productId]['name'],
                'price' => $products[$productId]['price'],
                'quantity' => 1
            );
        } else {
            $_SESSION['cart'][$productId]['quantity']++;
        }
    }
}

// Remove from cart functionality
if (isset($_GET['action']) && $_GET['action'] == 'remove_from_cart') {
    $productId = intval($_GET['product_id']);
    if (isset($products[$productId])) {
        unset($_SESSION['cart'][$productId]);
    }
}

// Update cart quantity
if (isset($_POST['update_cart'])) {
    foreach ($_POST['quantity'] as $productId => $qty) {
        $_SESSION['cart'][$productId]['quantity'] = intval($qty);
    }
}

// Checkout functionality
if (isset($_POST['checkout'])) {
    // Process payment and place order
    if (!empty($_SESSION['cart'])) {
        // Get user details
        $name = mysqli_real_escape_string($conn, $_POST['name']);
        $email = mysqli_real_escape_string($conn, $_POST['email']);
        $address = mysqli_real_escape_string($conn, $_POST['address']);
        $payment_method = mysqli_real_escape_string($conn, $_POST['payment_method']);

        // Calculate total price
        $total_price = 0;
        foreach ($_SESSION['cart'] as $item) {
            $total_price += ($item['price'] * $item['quantity']);
        }

        // Insert order into database
        $sql = "INSERT INTO orders (name, email, address, payment_method, total_price)
                VALUES ('$name', '$email', '$address', '$payment_method', $total_price)";

        if (mysqli_query($conn, $sql)) {
            $order_id = mysqli_insert_id($conn);

            // Insert order details
            foreach ($_SESSION['cart'] as $item) {
                $sql_details = "INSERT INTO order_details (order_id, product_id, quantity, price)
                               VALUES ($order_id, {$item['id']}, {$item['quantity']}, {$item['price']})";
                mysqli_query($conn, $sql_details);
            }

            // Clear cart
            unset($_SESSION['cart']);

            // Redirect to confirmation page
            header("Location: thank_you.php?order_id=$order_id");
            exit();
        } else {
            echo "Error: " . mysqli_error($conn);
        }
    }
}

// Close database connection
mysqli_close($conn);
?>


<?php
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "myDB";

// Create connection
$conn = new mysqli($servername, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}
?>


<?php
include 'db_connect.php';

$sql = "SELECT * FROM products";
$result = $conn->query($sql);

if ($result->num_rows > 0) {
    while($row = $result->fetch_assoc()) {
        echo "<div class='product'>";
        echo "<h2>".$row["name"]."</h2>";
        echo "<p>Price: ".$row["price"]." USD</p>";
        echo "<p>Description: ".$row["description"]."</p>";
        echo "<a href='add_to_cart.php?id=".$row["id"]."'>Add to Cart</a>";
        echo "</div>";
    }
} else {
    echo "No products available.";
}
$conn->close();
?>


<?php
session_start();

// Include database connection
include 'db_connect.php';

if(isset($_GET['id'])){
    $product_id = $_GET['id'];
    
    // Check if product exists in database
    $sql = "SELECT * FROM products WHERE id = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("i", $product_id);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows > 0) {
        $product = $result->fetch_assoc();
        
        // Add product to cart
        if (isset($_SESSION['cart'])) {
            $found = false;
            foreach ($_SESSION['cart'] as &$item) {
                if ($item['id'] == $product_id) {
                    $item['quantity']++;
                    $found = true;
                    break;
                }
            }
            if (!$found) {
                $_SESSION['cart'][] = array('id' => $product_id, 'name' => $product['name'], 'price' => $product['price'], 'quantity' => 1);
            }
        } else {
            $_SESSION['cart'] = array(array('id' => $product_id, 'name' => $product['name'], 'price' => $product['price'], 'quantity' => 1));
        }
        
        echo "Product added to cart.";
    } else {
        echo "Product not found.";
    }
} else {
    echo "No product selected.";
}
$conn->close();
?>


<?php
session_start();

include 'db_connect.php';

if (isset($_SESSION['cart'])) {
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        echo "<div class='cart-item'>";
        echo "<h3>".$item['name']."</h3>";
        echo "<p>Price: ".$item['price']."</p>";
        echo "<p>Quantity: <input type='number' name='".$item['id']."' value='".$item['quantity']."'></p>";
        echo "</div>";
    }
    
    // Update quantities
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        foreach ($_SESSION['cart'] as &$item) {
            if (isset($_POST[$item['id']])) {
                $new_quantity = intval($_POST[$item['id']]);
                if ($new_quantity > 0) {
                    $item['quantity'] = $new_quantity;
                }
            }
        }
    }
    
    // Calculate total
    foreach ($_SESSION['cart'] as $item) {
        $total += $item['price'] * $item['quantity'];
    }
    echo "<h3>Total: ".$total." USD</h3>";
    
    // Checkout button
    echo "<a href='checkout.php'>Proceed to Checkout</a>";
} else {
    echo "Your cart is empty.";
}
$conn->close();
?>


<?php
session_start();

include 'db_connect.php';

if (isset($_SESSION['cart']) && count($_SESSION['cart']) > 0) {
    // Display checkout form
    echo "<form method='post' action='process_order.php'>";
    echo "<h2>Checkout</h2>";
    echo "<p>Please enter your payment details.</p>";
    echo "<input type='text' name='card_number' placeholder='Card Number'>";
    echo "<input type='text' name='name_on_card' placeholder='Name on Card'>";
    echo "<input type='text' name='expiry_date' placeholder='Expiry Date'>";
    echo "<input type='text' name='cvv' placeholder='CVV'>";
    echo "<button type='submit'>Complete Purchase</button>";
    echo "</form>";
} else {
    echo "Your cart is empty.";
}
$conn->close();
?>


<?php
session_start();

include 'db_connect.php';

if (isset($_SESSION['cart']) && count($_SESSION['cart']) > 0) {
    // Calculate total price
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += $item['price'] * $item['quantity'];
    }
    
    // Insert order into database
    $sql = "INSERT INTO orders (user_id, product_id, quantity, total_price, order_date) VALUES (?, ?, ?, ?, NOW())";
    
    foreach ($_SESSION['cart'] as $item) {
        $stmt = $conn->prepare($sql);
        $stmt->bind_param("iiid", 1, $item['id'], $item['quantity'], $item['price'] * $item['quantity']);
        if ($stmt->execute()) {
            // Clear cart
            $_SESSION['cart'] = array();
            echo "Order processed successfully.";
        } else {
            echo "Error: " . $sql . "<br>" . $conn->error;
        }
    }
} else {
    echo "Your cart is empty.";
}
$conn->close();
?>


try {
    // Database operations here
} catch (mysqli_sql_exception $e) {
    die("Database error occurred." . $e->getMessage());
}


<?php
// Database connection
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}

// Function to display products
function displayProducts() {
    global $conn;
    
    $stmt = $conn->query("SELECT * FROM products");
    while ($row = $stmt->fetch()) {
        ?>
        <div class="product">
            <h3><?php echo $row['name']; ?></h3>
            <p><?php echo $row['description']; ?></p>
            <p>Price: <?php echo $row['price']; ?></p>
            <img src="<?php echo $row['image']; ?>" alt="<?php echo $row['name']; ?>">
            <form action="add_to_cart.php" method="POST">
                <input type="hidden" name="product_id" value="<?php echo $row['id']; ?>">
                <input type="hidden" name="price" value="<?php echo $row['price']; ?>">
                <button type="submit">Add to Cart</button>
            </form>
        </div>
        <?php
    }
}

// Function to add products to cart
function addToCart() {
    session_start();
    
    if (isset($_POST['product_id']) && isset($_POST['price'])) {
        $product_id = $_POST['product_id'];
        $price = $_POST['price'];
        
        if (!isset($_SESSION['cart'])) {
            $_SESSION['cart'] = array();
        }
        
        if (array_key_exists($product_id, $_SESSION['cart'])) {
            // Product already in cart
        } else {
            $_SESSION['cart'][$product_id] = array(
                'price' => $price,
                'quantity' => 1
            );
        }
    }
}

// Function to display cart items
function displayCart() {
    session_start();
    
    if (isset($_SESSION['cart'])) {
        foreach ($_SESSION['cart'] as $product_id => $item) {
            ?>
            <div class="cart-item">
                <h3>Product ID: <?php echo $product_id; ?></h3>
                <p>Price: <?php echo $item['price']; ?></p>
                <p>Quantity: <?php echo $item['quantity']; ?></p>
                <form action="update_cart.php" method="POST">
                    <input type="hidden" name="product_id" value="<?php echo $product_id; ?>">
                    <input type="number" name="quantity" min="1" max="10" step="1" value="<?php echo $item['quantity']; ?>">
                    <button type="submit">Update</button>
                </form>
                <form action="remove_from_cart.php" method="POST">
                    <input type="hidden" name="product_id" value="<?php echo $product_id; ?>">
                    <button type="submit">Remove</button>
                </form>
            </div>
            <?php
        }
        
        // Calculate total price
        $total = 0;
        foreach ($_SESSION['cart'] as $item) {
            $total += ($item['price'] * $item['quantity']);
        }
        echo "<h3>Total Price: " . $total . "</h3>";
    } else {
        echo "<p>Your cart is empty</p>";
    }
}

// Function to update cart
function updateCart() {
    session_start();
    
    if (isset($_POST['product_id']) && isset($_POST['quantity'])) {
        $product_id = $_POST['product_id'];
        $quantity = $_POST['quantity'];
        
        if (isset($_SESSION['cart'][$product_id])) {
            $_SESSION['cart'][$product_id]['quantity'] = $quantity;
        }
    }
}

// Function to remove items from cart
function removeFromCart() {
    session_start();
    
    if (isset($_POST['product_id'])) {
        $product_id = $_POST['product_id'];
        
        if (isset($_SESSION['cart'][$product_id])) {
            unset($_SESSION['cart'][$product_id]);
        }
    }
}

// Function to handle checkout
function checkout() {
    session_start();
    
    if (isset($_SESSION['cart'])) {
        // Process payment and save order details
        // You can use a payment gateway here
        echo "Processing your order...";
        
        // Clear cart after purchase
        unset($_SESSION['cart']);
    } else {
        echo "<p>Your cart is empty</p>";
    }
}
?>



<?php
// Connect to database
$mysqli = new mysqli('localhost', 'username', 'password', 'database');

if ($mysqli->connect_error) {
    die("Connection failed: " . $mysqli->connect_error);
}

$result = $mysqli->query("SELECT * FROM products");
?>

<!DOCTYPE html>
<html>
<head>
    <title>Product List</title>
</head>
<body>
    <?php while($row = $result->fetch_assoc()) { ?>
        <div class="product">
            <h2><?php echo $row['name']; ?></h2>
            <p><?php echo $row['description']; ?></p>
            <p>Price: <?php echo $row['price']; ?> USD</p>
            <form action="add_to_cart.php" method="post">
                <input type="hidden" name="product_id" value="<?php echo $row['id']; ?>">
                <button type="submit">Add to Cart</button>
            </form>
        </div>
    <?php } ?>
</body>
</html>


<?php
session_start();

// Connect to database
$mysqli = new mysqli('localhost', 'username', 'password', 'database');

if ($mysqli->connect_error) {
    die("Connection failed: " . $mysqli->connect_error);
}

$product_id = $_POST['product_id'];

$result = $mysqli->query("SELECT * FROM products WHERE id=$product_id");
$product = $result->fetch_assoc();

// Add to cart
if (isset($_SESSION['cart'])) {
    if (!array_key_exists($product_id, $_SESSION['cart'])) {
        $_SESSION['cart'][$product_id] = array(
            'name' => $product['name'],
            'price' => $product['price'],
            'quantity' => 1
        );
    } else {
        $_SESSION['cart'][$product_id]['quantity']++;
    }
} else {
    $_SESSION['cart'] = array($product_id => array(
        'name' => $product['name'],
        'price' => $product['price'],
        'quantity' => 1
    ));
}

header("Location: view_cart.php");
?>


<?php
session_start();

if (!isset($_SESSION['cart']) || count($_SESSION['cart']) == 0) {
    die("Your cart is empty. <a href='index.php'>Go back to shopping</a>");
}

$total = 0;
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <h1>Your Shopping Cart</h1>
    <form action="process_order.php" method="post">
        <?php foreach ($_SESSION['cart'] as $product_id => $item) { ?>
            <div class="CartItem">
                <p><?php echo $item['name']; ?></p>
                <p>Price: <?php echo $item['price']; ?> USD</p>
                <p>Quantity: <?php echo $item['quantity']; ?></p>
                <br>
                <?php $total += ($item['price'] * $item['quantity']); ?>
            </div>
        <?php } ?>
        <h2>Total: <?php echo $total; ?> USD</h2>
        <input type="hidden" name="total_amount" value="<?php echo $total; ?>">
        
        <!-- User Information -->
        <label for="name">Name:</label><br>
        <input type="text" id="name" name="user_name" required><br>
        
        <label for="email">Email:</label><br>
        <input type="email" id="email" name="email" required><br>
        
        <label for="address">Shipping Address:</label><br>
        <textarea id="address" name="shipping_address" required></textarea><br>
        
        <button type="submit">Place Order</button>
    </form>
</body>
</html>


<?php
session_start();

// Connect to database
$mysqli = new mysqli('localhost', 'username', 'password', 'database');

if ($mysqli->connect_error) {
    die("Connection failed: " . $mysqli->connect_error);
}

// Retrieve form data
$user_name = $_POST['user_name'];
$email = $_POST['email'];
$shipping_address = $_POST['shipping_address'];
$total_amount = $_POST['total_amount'];

// Insert order into orders table
$sql = "INSERT INTO orders (user_name, email, shipping_address, total_amount)
        VALUES (?, ?, ?, ?)";
$stmt = $mysqli->prepare($sql);
$stmt->bind_param("sssd", $user_name, $email, $shipping_address, $total_amount);

if ($stmt->execute()) {
    $order_id = $mysqli->insert_id;
    
    // Insert order items into order_items table
    foreach ($_SESSION['cart'] as $product_id => $item) {
        $price = $item['price'];
        $quantity = $item['quantity'];
        
        $sql_item = "INSERT INTO order_items (order_id, product_id, quantity, price)
                    VALUES (?, ?, ?, ?)";
        $stmt_item = $mysqli->prepare($sql_item);
        $stmt_item->bind_param("iidd", $order_id, $product_id, $quantity, $price);
        $stmt_item->execute();
    }
    
    // Clear cart
    unset($_SESSION['cart']);
    
    echo "Order placed successfully!";
} else {
    echo "Error: " . $sql . "<br>" . $mysqli->error;
}

$ mysqli->close();
?>


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Product Store</title>
</head>
<body>
    <?php require_once 'db_connection.php'; ?>

    <h1>Available Products</h1>
    
    <?php
        $sql = "SELECT * FROM products";
        $result = $conn->query($sql);

        if ($result->num_rows > 0) {
            while($row = $result->fetch_assoc()) {
                echo "<div>";
                echo "<h2>" . $row['name'] . "</h2>";
                echo "<p>Price: $" . number_format($row['price'], 2) . "</p>";
                echo "<form action='add_to_cart.php' method='post'>";
                echo "<input type='hidden' name='id' value='" . $row['id'] . "'>";
                echo "<input type='number' name='quantity' min='1' value='1'>";
                echo "<button type='submit'>Add to Cart</button>";
                echo "</form>";
                echo "</div>";
            }
        } else {
            echo "No products available.";
        }

        $conn->close();
    ?>
    
    <a href="cart.php">View Cart</a>
</body>
</html>


<?php session_start(); ?>

<?php require_once 'db_connection.php'; ?>

<?php
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        $product_id = $_POST['id'];
        $quantity = $_POST['quantity'];

        // Fetch product details
        $sql = "SELECT * FROM products WHERE id = ?";
        $stmt = $conn->prepare($sql);
        $stmt->bind_param("i", $product_id);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($row = $result->fetch_assoc()) {
            $item = array(
                'id' => $row['id'],
                'name' => $row['name'],
                'price' => $row['price'],
                'quantity' => $quantity
            );

            // Check if item already exists in cart
            if (isset($_SESSION['cart'][$product_id])) {
                $_SESSION['cart'][$product_id]['quantity'] += $quantity;
            } else {
                $_SESSION['cart'][$product_id] = $item;
            }

            echo "<script>alert('Product added to cart');</script>";
        }
    }

    header("Location: index.php");
    exit();
?>



<?php session_start(); ?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Shopping Cart</title>
</head>
<body>
    <h1>Your Shopping Cart</h1>

    <?php if (empty($_SESSION['cart'])): ?>
        <p>Your cart is empty.</p>
        <a href="index.php">Continue Shopping</a>
    <?php else: ?>
        <table border='1'>
            <tr>
                <th>Product Name</th>
                <th>Price</th>
                <th>Quantity</th>
                <th>Total</th>
                <th>Action</th>
            </tr>

            <?php
                $total = 0;
                foreach ($_SESSION['cart'] as $item):
                    $product_total = $item['price'] * $item['quantity'];
                    $total += $product_total;
            ?>

            <tr>
                <td><?php echo $item['name']; ?></td>
                <td>$<?php echo number_format($item['price'], 2); ?></td>
                <td>
                    <form action="update_cart.php" method="post">
                        <input type='hidden' name='id' value="<?php echo $item['id']; ?>">
                        <input type='number' name='quantity' min='1' value="<?php echo $item['quantity']; ?>">
                        <button type='submit'>Update</button>
                    </form>
                </td>
                <td>$<?php echo number_format($product_total, 2); ?></td>
                <td><a href="remove_from_cart.php?id=<?php echo $item['id']; ?>">Remove</a></td>
            </tr>

            <?php endforeach; ?>

        </table>
        
        <h2>Total: $<?php echo number_format($total, 2); ?></h2>
        <a href="checkout.php">Checkout</a> | 
        <a href="index.php">Continue Shopping</a>
    <?php endif; ?>
    
</body>
</html>


<?php session_start(); ?>

<?php require_once 'db_connection.php'; ?>

<?php
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        $product_id = $_POST['id'];
        $quantity = $_POST['quantity'];

        // Update quantity in cart
        if (isset($_SESSION['cart'][$product_id])) {
            $_SESSION['cart'][$product_id]['quantity'] = $quantity;
        }
    }

    header("Location: cart.php");
    exit();
?>



<?php session_start(); ?>

<?php
    if (isset($_GET['id'])) {
        $product_id = $_GET['id'];
        
        // Remove item from cart
        unset($_SESSION['cart'][$product_id]);
    }

    header("Location: cart.php");
    exit();
?>



<?php session_start(); ?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Checkout</title>
</head>
<body>
    <?php require_once 'db_connection.php'; ?>

    <?php if (empty($_SESSION['cart'])): ?>
        <p>Your cart is empty.</p>
        <a href="index.php">Continue Shopping</a>
    <?php else: ?>

    <h1>Checkout</h1>

    <form action="process_order.php" method="post">
        <div>
            <label for="name">Name:</label><br>
            <input type="text" id="name" name="name" required>
        </div>

        <div>
            <label for="email">Email:</label><br>
            <input type="email" id="email" name="email" required>
        </div>

        <div>
            <label for="address">Address:</label><br>
            <textarea id="address" name="address" rows="3" required></textarea>
        </div>

        <div>
            <label for="city">City:</label><br>
            <input type="text" id="city" name="city" required>
        </div>

        <div>
            <label for="card_number">Card Number:</label><br>
            <input type="text" id="card_number" name="card_number" pattern="[0-9]{16}" required>
        </div>

        <button type="submit">Place Order</button>
    </form>

    <?php endif; ?>

</body>
</html>


<?php session_start(); ?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Order Confirmation</title>
</head>
<body>
    <?php require_once 'db_connection.php'; ?>

    <?php
        if ($_SERVER["REQUEST_METHOD"] == "POST") {
            // Simulate payment processing here
            $order_processed = true;

            if ($order_processed) {
                session_unset();
                session_destroy();

                echo "<h1>Thank You for Your Order!</h1>";
                echo "<p>Your order has been successfully processed.</p>";
                echo "<a href='index.php'>Continue Shopping</a>";
            } else {
                echo "<p>There was an error processing your order. Please try again.</p>";
                echo "<a href='checkout.php'>Try Again</a>";
            }
        } else {
            header("Location: index.php");
            exit();
        }
    ?>

</body>
</html>


<?php
$servername = "localhost";
$username = "root";
$password = "";
$dbname = "my_store";

// Create connection
$conn = new mysqli($servername, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}
?>


<?php
// Product class
class Product {
    private $id;
    private $name;
    private $price;
    private $stock;

    public function __construct($id, $name, $price, $stock) {
        $this->id = $id;
        $this->name = $name;
        $this->price = $price;
        $this->stock = $stock;
    }

    public function getId() { return $this->id; }
    public function getName() { return $this->name; }
    public function getPrice() { return $this->price; }
    public function getStock() { return $this->stock; }
}

// Customer class
class Customer {
    private $id;
    private $name;
    private $email;
    private $address;

    public function __construct($id, $name, $email, $address) {
        $this->id = $id;
        $this->name = $name;
        $this->email = $email;
        $this->address = $address;
    }

    public function getId() { return $this->id; }
    public function getName() { return $->name; }
    public function getEmail() { return $this->email; }
    public function getAddress() { return $this->address; }
}

// Order class
class Order {
    private $id;
    private $customer;
    private $orderItems = array();
    private $totalAmount;
    private $paymentStatus;
    private $createdAt;

    public function __construct($id, Customer $customer) {
        $this->id = $id;
        $this->customer = $customer;
        $this->createdAt = date('Y-m-d H:i:s');
        $this->paymentStatus = 'pending';
    }

    public function getId() { return $this->id; }
    public function getCustomer() { return $this->customer; }
    public function getOrderItems() { return $this->orderItems; }
    public function getTotalAmount() { return $this->totalAmount; }
    public function getPaymentStatus() { return $this->paymentStatus; }

    // Add product to order
    public function addProduct(Product $product, $quantity = 1) {
        foreach ($this->orderItems as $item) {
            if ($item->getProduct()->getId() == $product->getId()) {
                $item->setQuantity($item->getQuantity() + $quantity);
                return;
            }
        }

        $this->orderItems[] = new OrderItem($product, $quantity);
    }

    // Calculate total amount
    public function calculateTotalAmount() {
        $total = 0;
        foreach ($this->orderItems as $item) {
            $total += $item->getSubTotal();
        }
        $this->totalAmount = $total;
        return $total;
    }

    // Process payment
    public function processPayment($cardNumber, $cvv, $expiryDate) {
        // Simulate payment processing
        $paymentApproved = true;

        if ($paymentApproved) {
            $this->paymentStatus = 'paid';
            $this->createdAt = date('Y-m-d H:i:s');

            // Update product stock
            foreach ($this->orderItems as $item) {
                $product = $item->getProduct();
                $newStock = $product->getStock() - $item->getQuantity();
                $product->setStock($newStock);
            }

            return true;
        } else {
            // Payment failed
            return false;
        }
    }

    public function getCreatedAt() { return $this->createdAt; }
}

// Order Item class
class OrderItem {
    private $product;
    private $quantity;
    private $subTotal;

    public function __construct(Product $product, $quantity) {
        $this->product = $product;
        $this->quantity = $quantity;
        $this->subTotal = $product->getPrice() * $quantity;
    }

    public function getProduct() { return $this->product; }
    public function getQuantity() { return $this->quantity; }
    public function getSubTotal() { return $this->subTotal; }

    // Setters
    public function setQuantity($quantity) {
        $this->quantity = $quantity;
        $this->subTotal = $this->product->getPrice() * $quantity;
    }
}

// Usage example

// Create products
$product1 = new Product(1, 'Laptop', 999.99, 10);
$product2 = new Product(2, 'Smartphone', 699.99, 5);

// Create customer
$customer = new Customer(1, 'John Doe', 'john@example.com', '123 Street');

// Create order
$order = new Order(1, $customer);

// Add products to order
$order->addProduct($product1, 1);
$order->addProduct($product2, 2);

// Calculate total amount
$totalAmount = $order->calculateTotalAmount();

// Process payment (simulated)
if ($order->processPayment('4111-1111-1111-1111', '123', '12/25')) {
    echo "Payment successful! Order ID: " . $order->getId();
} else {
    echo "Payment failed!";
}
?>


<?php
// Start session
session_start();

// Database connection (replace with your own credentials)
$host = "localhost";
$user = "root";
$password = "";
$dbname = "store";

$conn = mysqli_connect($host, $user, $password, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Sample products (you can replace with database query)
$products = [
    ['id' => 1, 'name' => 'Laptop', 'price' => 999.99, 'description' => 'High-performance laptop'],
    ['id' => 2, 'name' => 'Phone', 'price' => 699.99, 'description' => 'Smartphone with latest features'],
    ['id' => 3, 'name' => 'Tablet', 'price' => 299.99, 'description' => 'Lightweight tablet for daily use']
];

// Add product to cart
if (isset($_GET['action']) && $_GET['action'] == 'add') {
    $productId = intval($_GET['id']);
    
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }
    
    if (!isset($_SESSION['cart'][$productId])) {
        // Get product details
        $product = array_search_product($products, $productId);
        
        if ($product) {
            $_SESSION['cart'][$productId] = [
                'id' => $product['id'],
                'name' => $product['name'],
                'price' => $product['price'],
                'quantity' => 1
            ];
        }
    } else {
        // Increment quantity if product already exists in cart
        $_SESSION['cart'][$productId]['quantity']++;
    }
}

// Remove item from cart
if (isset($_GET['action']) && $_GET['action'] == 'remove') {
    $productId = intval($_GET['id']);
    
    if (isset($_SESSION['cart'][$productId])) {
        unset($_SESSION['cart'][$productId]);
    }
}

// Update quantity in cart
if (isset($_POST['update'])) {
    foreach ($_POST['quantity'] as $productId => $qty) {
        if ($qty > 0 && isset($_SESSION['cart'][$productId])) {
            $_SESSION['cart'][$productId]['quantity'] = intval($qty);
        }
    }
}

// Function to search for product by ID
function array_search_product($array, $id) {
    foreach ($array as $key => $value) {
        if ($value['id'] == $id) {
            return $value;
        }
    }
    return false;
}
?>


<!DOCTYPE html>
<html>
<head>
    <title>Store</title>
    <style>
        /* Add your CSS styles here */
        body { font-family: Arial, sans-serif; margin: 20px; padding: 0; }
        .product-grid { display: grid; grid-template-columns: repeat(3, 1fr); gap: 20px; }
        .product-card { border: 1px solid #ddd; padding: 15px; text-align: center; }
    </style>
</head>
<body>
    <h1>Store Products</h1>
    <?php
    if (!empty($products)) {
        echo '<div class="product-grid">';
        foreach ($products as $product) {
            echo '
                <div class="product-card">
                    <h3>' . $product['name'] . '</h3>
                    <p>' . $product['description'] . '</p>
                    <p>Price: $' . number_format($product['price'], 2) . '</p>
                    <a href="?action=add&id=' . $product['id'] . '">Add to Cart</a>
                </div>';
        }
        echo '</div>';
    } else {
        echo '<p>No products available.</p>';
    }
    ?>
</body>
</html>


<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <?php
    if (empty($_SESSION['cart'])) {
        echo '<h1>Your Cart is Empty!</h1>';
        echo '<p>Please add products to your cart first.</p>';
    } else {
        echo '<h1>Your Shopping Cart</h1>';
        echo '<form method="post">';
        echo '<table border="1">';
        echo '<tr><th>Product Name</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>';
        
        $total = 0;
        foreach ($_SESSION['cart'] as $productId => $item) {
            $subtotal = $item['price'] * $item['quantity'];
            $total += $subtotal;
            
            echo '<tr>';
            echo '<td>' . $item['name'] . '</td>';
            echo '<td>$' . number_format($item['price'], 2) . '</td>';
            echo '<td><input type="number" name="quantity[' . $productId . ']" value="' . $item['quantity'] . '" min="1"></td>';
            echo '<td>$' . number_format($subtotal, 2) . '</td>';
            echo '<td><a href="?action=remove&id=' . $productId . '">Remove</a></td>';
            echo '</tr>';
        }
        
        echo '</table>';
        echo '<p>Total: $' . number_format($total, 2) . '</p>';
        echo '<input type="submit" name="update" value="Update Cart">';
        echo '<br><br>';
        echo '<a href="checkout.php">Proceed to Checkout</a>';
        echo '</form>';
    }
    ?>
</body>
</html>


<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
</head>
<body>
    <?php
    if (empty($_SESSION['cart'])) {
        header("Location: products.php");
        exit();
    } else {
        echo '<h1>Checkout</h1>';
        
        // Display cart contents
        echo '<h2>Your Order</h2>';
        echo '<table border="1">';
        echo '<tr><th>Product Name</th><th>Price</th><th>Quantity</th><th>Total</th></tr>';
        
        $total = 0;
        foreach ($_SESSION['cart'] as $item) {
            $subtotal = $item['price'] * $item['quantity'];
            $total += $subtotal;
            
            echo '<tr>';
            echo '<td>' . $item['name'] . '</td>';
            echo '<td>$' . number_format($item['price'], 2) . '</td>';
            echo '<td>' . $item['quantity'] . '</td>';
            echo '<td>$' . number_format($subtotal, 2) . '</td>';
            echo '</tr>';
        }
        
        echo '</table>';
        echo '<p>Total: $' . number_format($total, 2) . '</p>';
        
        // Payment form
        echo '<h2>Payment Information</h2>';
        echo '<form method="post" action="thankyou.php">';
        echo '<label>Card Number:</label><br>';
        echo '<input type="text" name="card_number" required><br><br>';
        echo '<label>Name on Card:</label><br>';
        echo '<input type="text" name="name_on_card" required><br><br>';
        echo '<label>CVV:</label><br>';
        echo '<input type="text" name="cvv" pattern="[0-9]{3}" required><br><br>';
        echo '<label>Expiry Date:</label><br>';
        echo '<input type="month" name="expiry_date" required><br><br>';
        echo '<input type="submit" value="Complete Purchase">';
        echo '</form>';
    }
    ?>
</body>
</html>


<!DOCTYPE html>
<html>
<head>
    <title>Thank You</title>
</head>
<body>
    <?php
    // Clear cart after purchase
    if (isset($_SESSION['cart'])) {
        unset($_SESSION['cart']);
    }
    
    $total = isset($_GET['total']) ? $_GET['total'] : 0;
    ?>
    <h1>Thank You for Your Purchase!</h1>
    <p>Your order has been received successfully.</p>
    <p>Total Amount: $<?php echo number_format($total, 2); ?></p>
    <p>We will process your order and ship it shortly.</p>
    <a href="products.php">Continue Shopping</a> |
    <a href="login.php">Login</a>
</body>
</html>


<?php
session_start();
require_once 'db_connect.php';

// Add product to cart
if (isset($_POST['add_to_cart'])) {
    $product_id = $_POST['product_id'];
    $quantity = isset($_POST['quantity']) ? $_POST['quantity'] : 1;

    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }

    if (array_key_exists($product_id, $_SESSION['cart'])) {
        $_SESSION['cart'][$product_id] += $quantity;
    } else {
        $_SESSION['cart'][$product_id] = $quantity;
    }
}

// Place order
if (isset($_POST['place_order'])) {
    // Get customer information
    $first_name = mysqli_real_escape_string($conn, $_POST['first_name']);
    $last_name = mysqli_real_escape_string($conn, $_POST['last_name']);
    $email = mysqli_real_escape_string($conn, $_POST['email']);
    $phone = mysqli_real_escape_string($conn, $_POST['phone']);

    // Insert customer into database
    $customer_query = "INSERT INTO customers (first_name, last_name, email, phone) VALUES (?, ?, ?, ?)";
    $stmt = mysqli_prepare($conn, $customer_query);
    mysqli_stmt_bind_param($stmt, "ssss", $first_name, $last_name, $email, $phone);
    mysqli_stmt_execute($stmt);
    $customer_id = mysqli_insert_id($conn);

    // Process cart items
    if (!empty($_SESSION['cart'])) {
        foreach ($_SESSION['cart'] as $product_id => $quantity) {
            $get_product_query = "SELECT price FROM products WHERE id = ?";
            $stmt = mysqli_prepare($conn, $get_product_query);
            mysqli_stmt_bind_param($stmt, "i", $product_id);
            mysqli_stmt_execute($stmt);
            $result = mysqli_stmt_get_result($stmt);
            $row = mysqli_fetch_assoc($result);
            
            $total_price = $row['price'] * $quantity;

            // Insert order into database
            $order_query = "INSERT INTO orders (customer_id, product_id, quantity, total) VALUES (?, ?, ?, ?)";
            $stmt = mysqli_prepare($conn, $order_query);
            mysqli_stmt_bind_param($stmt, "iiid", $customer_id, $product_id, $quantity, $total_price);
            mysqli_stmt_execute($stmt);
        }

        // Clear cart
        unset($_SESSION['cart']);
    }
}
?>


<?php
$servername = "localhost";
$username = "root";
$password = "";
$dbname = "your_database_name";

$conn = mysqli_connect($servername, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}
?>


<?php
// Connect to database
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'my_store';

$conn = mysqli_connect($host, $username, $password, $dbname);

// Fetch all products from database
$sql = "SELECT * FROM products";
$result = mysqli_query($conn, $sql);
$products = mysqli_fetch_all($result, MYSQLI_ASSOC);

?>

<!DOCTYPE html>
<html>
<head>
    <title>Store</title>
    <style>
        .product {
            border: 1px solid #ddd;
            padding: 20px;
            margin: 10px;
            text-align: center;
        }
    </style>
</head>
<body>
    <?php foreach ($products as $product): ?>
        <div class="product">
            <h3><?php echo $product['name']; ?></h3>
            <img src="<?php echo $product['image_path']; ?>" alt="<?php echo $product['name']; ?>" width="200">
            <p><?php echo $product['description']; ?></p>
            <p>Price: <?php echo $product['price']; ?> USD</p>
            <form action="add_to_cart.php" method="get">
                <input type="hidden" name="id" value="<?php echo $product['id']; ?>">
                <label for="quantity">Quantity:</label>
                <input type="number" id="quantity" name="quantity" min="1" max="<?php echo $product['quantity']; ?>" value="1">
                <button type="submit">Add to Cart</button>
            </form>
        </div>
    <?php endforeach; ?>
</body>
</html>


<?php
session_start();

// Connect to database
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'my_store';

$conn = mysqli_connect($host, $username, $password, $dbname);

$product_id = $_GET['id'];
$quantity = $_GET['quantity'];

// Check if product exists and quantity is available
$sql = "SELECT * FROM products WHERE id = $product_id";
$result = mysqli_query($conn, $sql);
$product = mysqli_fetch_assoc($result);

if ($product && $quantity <= $product['quantity']) {
    // Add to cart
    $_SESSION['cart'][] = [
        'id' => $product_id,
        'name' => $product['name'],
        'price' => $product['price'],
        'quantity' => $quantity
    ];
}

header("Location: display_products.php");
exit();


<?php
session_start();

// Validate form submission
if ($_SERVER['REQUEST_METHOD'] != 'POST') {
    die('Invalid request method');
}

$cart = $_SESSION['cart'];
$total_price = 0;

foreach ($cart as $item) {
    $total_price += $item['price'] * $item['quantity'];
}

// Get payment details from POST
$card_number = $_POST['card_number'];
$expiry_date = $_POST['expiry_date'];
$cvc = $_POST['cvc'];

// Process payment (simplified for example)
if ($card_number && $expiry_date && $cvc) {
    // Here you would typically integrate with a payment gateway like Stripe or PayPal
    // For this example, we'll assume the payment was successful
    
    // Deduct products from inventory
    foreach ($cart as $item) {
        $sql = "UPDATE products SET quantity = quantity - {$item['quantity']} WHERE id = {$item['id']}";
        mysqli_query($conn, $sql);
    }
    
    // Clear cart
    unset($_SESSION['cart']);
    
    header("Location: purchase_success.php");
    exit();
} else {
    die('Invalid payment details');
}


<?php
session_start();

$cart = $_SESSION['cart'];
$total_price = 0;

foreach ($cart as $item) {
    $total_price += $item['price'] * $item['quantity'];
}

?>

<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
</head>
<body>
    <h1>Review Your Order</h1>
    <?php foreach ($cart as $item): ?>
        <p><?php echo $item['name']; ?> x <?php echo $item['quantity']; ?></p>
    <?php endforeach; ?>
    <p>Total: <?php echo $total_price; ?> USD</p>

    <form action="process_payment.php" method="post">
        <label for="card_number">Card Number:</label>
        <input type="text" id="card_number" name="card_number" required><br><br>

        <label for="expiry_date">Expiry Date:</label>
        <input type="text" id="expiry_date" name="expiry_date" placeholder="MM/YY" required><br><br>

        <label for="cvc">CVC:</label>
        <input type="text" id="cvc" name="cvc" required><br><br>

        <button type="submit">Complete Purchase</button>
    </form>
</body>
</html>


<?php
session_start();

?>

<!DOCTYPE html>
<html>
<head>
    <title>Purchase Successful</title>
</head>
<body>
    <h1>Thank you for your purchase!</h1>
    <p>Your order has been successfully processed.</p>
    <a href="display_products.php">Continue Shopping</a>
</body>
</html>


<?php
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'cart';

$conn = new mysqli($host, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}
?>


<?php
class Product {
    private $conn;

    public function __construct($connection) {
        $this->conn = $connection;
    }

    public function getProducts() {
        $query = "SELECT * FROM products";
        $result = $this->conn->query($query);
        
        if ($result->num_rows > 0) {
            return $result;
        } else {
            return false;
        }
    }
}
?>


<?php
session_start();
class Cart {
    private $conn;

    public function __construct($connection) {
        $this->conn = $connection;
    }

    public function addToCart($productId, $userId) {
        try {
            $stmt = $this->conn->prepare("INSERT INTO cart (user_id, product_id, quantity) VALUES (?, ?, 1)");
            $stmt->bind_param("ii", $userId, $productId);
            $stmt->execute();
            
            return true;
        } catch (Exception $e) {
            echo "Error: " . $e->getMessage();
            return false;
        }
    }

    public function getCartItems($userId) {
        try {
            $stmt = $this->conn->prepare("SELECT c.id, p.name, p.price FROM cart c JOIN products p ON c.product_id = p.id WHERE c.user_id = ?");
            $stmt->bind_param("i", $userId);
            $stmt->execute();
            
            $result = $stmt->get_result();
            
            if ($result->num_rows > 0) {
                return $result;
            } else {
                return false;
            }
        } catch (Exception $e) {
            echo "Error: " . $e->getMessage();
            return false;
        }
    }

    public function updateCartItem($itemId, $quantity) {
        try {
            $stmt = $this->conn->prepare("UPDATE cart SET quantity = ? WHERE id = ?");
            $stmt->bind_param("ii", $quantity, $itemId);
            $stmt->execute();
            
            return true;
        } catch (Exception $e) {
            echo "Error: " . $e->getMessage();
            return false;
        }
    }

    public function removeCartItem($itemId) {
        try {
            $stmt = $this->conn->prepare("DELETE FROM cart WHERE id = ?");
            $stmt->bind_param("i", $itemId);
            $stmt->execute();
            
            return true;
        } catch (Exception $e) {
            echo "Error: " . $e->getMessage();
            return false;
        }
    }
}
?>


<?php
include_once 'config.php';
include_once 'Product.php';
include_once 'Cart.php';

$product = new Product($conn);
$cart = new Cart($conn);

$user_id = 1; // Assume user is logged in

if (isset($_GET['action'])) {
    switch ($_GET['action']) {
        case 'add':
            $cart->addToCart($_GET['id'], $user_id);
            break;
        case 'update':
            $cart->updateCartItem($_POST['item_id'], $_POST['quantity']);
            break;
        case 'remove':
            $cart->removeCartItem($_GET['id']);
            break;
    }
}

$products = $product->getProducts();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 20px;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
        }

        .product-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 20px;
        }

        .product-card {
            border: 1px solid #ddd;
            padding: 10px;
            text-align: center;
        }

        .cart-list {
            margin-top: 20px;
            background-color: #f8f9fa;
            padding: 20px;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>Products</h1>
        
        <div class="product-grid">
            <?php while ($row = $products->fetch_assoc()): ?>
                <div class="product-card">
                    <h3><?php echo $row['name']; ?></h3>
                    <p><?php echo $row['description']; ?></p>
                    <strong>Price: $<?php echo number_format($row['price'], 2); ?></strong><br>
                    <a href="?action=add&id=<?php echo $row['id']; ?>">Add to Cart</a>
                </div>
            <?php endwhile; ?>
        </div>

        <h2>Your Cart</h2>
        
        <?php 
        $cartItems = $cart->getCartItems($user_id);
        if ($cartItems): 
        ?>
        <table class="cart-list">
            <tr>
                <th>Product</th>
                <th>Price</th>
                <th>Quantity</th>
                <th>Total</th>
                <th>Action</th>
            </tr>
            <?php while ($item = $cartItems->fetch_assoc()): ?>
            <tr>
                <td><?php echo $item['name']; ?></td>
                <td>$<?php echo number_format($item['price'], 2); ?></td>
                <td>
                    <form action="?action=update" method="post">
                        <input type="hidden" name="item_id" value="<?php echo $item['id']; ?>">
                        <input type="number" name="quantity" value="<?php echo $item['quantity']; ?>" min="1" style="width: 50px;">
                        <button type="submit">Update</button>
                    </form>
                </td>
                <td>$<?php echo number_format($item['price'] * $item['quantity'], 2); ?></td>
                <td><a href="?action=remove&id=<?php echo $item['id']; ?>">Remove</a></td>
            </tr>
            <?php endwhile; ?>
        </table>

        <?php else: ?>
        <p>Your cart is empty.</p>
        <?php endif; ?>

    </div>
</body>
</html>


<?php
class Product {
    private $id;
    private $name;
    private $description;
    private $price;
    private $quantity;

    public function __construct($id, $name, $description, $price, $quantity) {
        $this->id = $id;
        $this->name = $name;
        $this->description = $description;
        $this->price = $price;
        $this->quantity = $quantity;
    }

    public function getId() {
        return $this->id;
    }

    public function getName() {
        return $this->name;
    }

    public function getDescription() {
        return $this->description;
    }

    public function getPrice() {
        return $this->price;
    }

    public function getQuantity() {
        return $this->quantity;
    }

    public function setQuantity($quantity) {
        $this->quantity = $quantity;
    }
}

class CartItem {
    private $product;
    private $quantity;
    private $notes;

    public function __construct(Product $product, $quantity, $notes = "") {
        $this->product = $product;
        $this->quantity = $quantity;
        $this->notes = $notes;
    }

    public function getProduct() {
        return $this->product;
    }

    public function getQuantity() {
        return $this->quantity;
    }

    public function getNotes() {
        return $this->notes;
    }

    public function setQuantity($quantity) {
        $this->quantity = $quantity;
    }

    public function setNotes($notes) {
        $this->notes = $notes;
    }

    public function getTotalPrice() {
        return $this->product->getPrice() * $this->quantity;
    }
}

class PurchaseHandler {
    private $cart;

    public function __construct() {
        $this->cart = array();
    }

    public function addToCart(Product $product, $quantity, $notes = "") {
        foreach ($this->cart as &$item) {
            if ($item->getProduct()->getId() == $product->getId()) {
                $item->setQuantity($item->getQuantity() + $quantity);
                $item->setNotes($notes);
                return;
            }
        }

        array_push($this->cart, new CartItem($product, $quantity, $notes));
    }

    public function removeFromCart(Product $product) {
        foreach ($this->cart as $key => $item) {
            if ($item->getProduct()->getId() == $product->getId()) {
                unset($this->cart[$key]);
                return;
            }
        }
    }

    public function updateCartItemQuantity(Product $product, $quantity) {
        foreach ($this->cart as &$item) {
            if ($item->getProduct()->getId() == $product->getId()) {
                $item->setQuantity($quantity);
                return;
            }
        }

        throw new Exception("Product not found in cart");
    }

    public function checkout() {
        // Process checkout
        foreach ($this->cart as $item) {
            $product = $item->getProduct();
            if ($product->getQuantity() >= $item->getQuantity()) {
                $product->setQuantity($product->getQuantity() - $item->getQuantity());
            } else {
                throw new Exception("Not enough stock for product: " . $product->getName());
            }
        }

        // Clear cart
        $this->cart = array();
    }

    public function getCartItems() {
        return $this->cart;
    }
}

// Usage example:

// Create some products
$product1 = new Product(1, "Laptop", "High performance laptop", 999.99, 5);
$product2 = new Product(2, "Phone", "Latest smartphone model", 699.99, 10);

// Initialize purchase handler
$purchaseHandler = new PurchaseHandler();

// Add products to cart
$purchaseHandler->addToCart($product1, 2, "Express shipping");
$purchaseHandler->addToCart($product2, 1);

try {
    // Checkout and process order
    $purchaseHandler->checkout();
    echo "Order processed successfully!";
} catch (Exception $e) {
    echo "Error processing order: " . $e->getMessage();
}

// Get cart items
foreach ($purchaseHandler->getCartItems() as $item) {
    $product = $item->getProduct();
    echo "Item: " . $product->getName() . ", Quantity: " . $item->getQuantity() . ", Notes: " . $item->getNotes() . "
";
}
?>


<?php
class Product {
    private $db;

    public function __construct($db) {
        $this->db = $db;
    }

    // Add a new product
    public function addProduct($data) {
        try {
            $query = "INSERT INTO products (name, price, description, stock) VALUES (?, ?, ?, ?)";
            $stmt = $this->db->prepare($query);
            return $stmt->execute([$data['name'], $data['price'], $data['description'], $data['stock']]);
        } catch (Exception $e) {
            die('Error: ' . $e->getMessage());
        }
    }

    // Get all products
    public function getAllProducts() {
        try {
            $query = "SELECT * FROM products";
            $stmt = $this->db->prepare($query);
            $stmt->execute();
            return $stmt->fetchAll(PDO::FETCH_ASSOC);
        } catch (Exception $e) {
            die('Error: ' . $e->getMessage());
        }
    }

    // Get a single product by ID
    public function getProductById($id) {
        try {
            $query = "SELECT * FROM products WHERE id = ?";
            $stmt = $this->db->prepare($query);
            $stmt->execute([$id]);
            return $stmt->fetch(PDO::FETCH_ASSOC);
        } catch (Exception $e) {
            die('Error: ' . $e->getMessage());
        }
    }
}
?>


<?php
class Order {
    private $db;

    public function __construct($db) {
        $this->db = $db;
    }

    // Add a new order
    public function addOrder($user_id, $total_amount) {
        try {
            $query = "INSERT INTO orders (user_id, total_amount) VALUES (?, ?)";
            $stmt = $this->db->prepare($query);
            $stmt->execute([$user_id, $total_amount]);
            return $this->db->lastInsertId();
        } catch (Exception $e) {
            die('Error: ' . $e->getMessage());
        }
    }

    // Add order items
    public function addOrderItems($order_id, $items) {
        try {
            $query = "INSERT INTO order_items (order_id, product_id, quantity, price) VALUES ";
            $values = [];
            foreach ($items as $item) {
                $values[] = "('" . $order_id . "', '" . $item['id'] . "', '" . $item['quantity'] . "', '" . $item['price'] . "')";
            }
            $query .= implode(', ', $values);
            $stmt = $this->db->prepare($query);
            return $stmt->execute();
        } catch (Exception $e) {
            die('Error: ' . $e->getMessage());
        }
    }

    // Get all orders for a user
    public function getOrdersByUser($user_id) {
        try {
            $query = "SELECT * FROM orders WHERE user_id = ?";
            $stmt = $this->db->prepare($query);
            $stmt->execute([$user_id]);
            return $stmt->fetchAll(PDO::FETCH_ASSOC);
        } catch (Exception $e) {
            die('Error: ' . $e->getMessage());
        }
    }
}
?>


<?php
session_start();

if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = [];
}

// Add product to cart
function addProductToCart($productId, $quantity) {
    global $db;
    
    $product = new Product($db);
    $item = $product->getProductById($productId);

    if ($item && $quantity > 0) {
        if ($item['stock'] >= $quantity) {
            $cartItem = [
                'id' => $item['id'],
                'name' => $item['name'],
                'price' => $item['price'],
                'quantity' => $quantity
            ];

            $_SESSION['cart'][] = $cartItem;
        } else {
            // Handle stock not available error
        }
    }
}

// Calculate cart total
function getCartTotal() {
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += ($item['price'] * $item['quantity']);
    }
    return number_format($total, 2);
}
?>


<?php
session_start();

if (!isset($_SESSION['user_id'])) {
    header('Location: login.php');
    exit();
}

require_once 'db_connection.php';
require_once 'Order.php';

$order = new Order($db);

// Process the checkout
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $cartTotal = getCartTotal();

    // Add order
    $order_id = $order->addOrder($_SESSION['user_id'], $cartTotal);

    if ($order_id) {
        // Add order items
        $items = [];
        foreach ($_SESSION['cart'] as $item) {
            $items[] = [
                'id' => $item['id'],
                'quantity' => $item['quantity'],
                'price' => $item['price']
            ];
        }
        $order->addOrderItems($order_id, $items);

        // Clear cart
        unset($_SESSION['cart']);

        header('Location: order_confirmation.php?order_id=' . $order_id);
        exit();
    } else {
        // Handle error
        die("Error processing your order.");
    }
}
?>


<?php
require_once 'stripe-php-autoload.php';

\Stripe\Stripe::setApiKey('your_stripe_secret_key');

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    try {
        $charge = \Stripe\Charge::create(array(
            "amount" => getCartTotal() * 100,
            "currency" => "usd",
            "source" => $_POST['stripeToken'],
            "description" => "Order #" . $order_id
        ));

        // Payment successful, process order
        header('Location: payment_success.php');
    } catch (\Stripe\Error\Card $e) {
        // The card has been declined
        echo 'Payment failed. Please check your card details.';
    }
}
?>


<?php
session_start();

require_once 'db_connection.php';
require_once 'Order.php';

$order = new Order($db);

if (isset($_GET['order_id'])) {
    $orderData = $order->getOrderByID((int)$_GET['order_id']);
    if ($orderData) {
        // Display order details
        print_r($orderData);
    } else {
        die('Invalid order ID.');
    }
}
?>


<?php
require_once 'db_connection.php';
require_once 'Product.php';

$product = new Product($db);

$products = $product->getAllProducts();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Product List</title>
</head>
<body>
    <?php foreach ($products as $product): ?>
        <div>
            <h2><?php echo $product['name']; ?></h2>
            <p><?php echo $product['description']; ?></p>
            <p>$<?php echo number_format($product['price'], 2); ?></p>
            <form action="add_to_cart.php" method="POST">
                <input type="hidden" name="product_id" value="<?php echo $product['id']; ?>">
                <input type="number" name="quantity" min="1" max="<?php echo $product['stock']; ?>" required>
                <button type="submit">Add to Cart</button>
            </form>
        </div>
    <?php endforeach; ?>
</body>
</html>


<?php
session_start();

require_once 'db_connection.php';
require_once 'Product.php';

$product = new Product($db);

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $productId = $_POST['product_id'];
    $quantity = intval($_POST['quantity']);

    addProductToCart($productId, $quantity);
}

header('Location: product_list.php');
exit();
?>


<?php
session_start();

if (!isset($_SESSION['cart'])) {
    header('Location: product_list.php');
    exit();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <?php if (count($_SESSION['cart']) > 0): ?>
        <table>
            <tr>
                <th>Product Name</th>
                <th>Price</th>
                <th>Quantity</th>
                <th>Total</th>
            </tr>
            <?php foreach ($_SESSION['cart'] as $item): ?>
                <tr>
                    <td><?php echo $item['name']; ?></td>
                    <td>$<?php echo number_format($item['price'], 2); ?></td>
                    <td><?php echo $item['quantity']; ?></td>
                    <td>$<?php echo number_format($item['price'] * $item['quantity'], 2); ?></td>
                </tr>
            <?php endforeach; ?>
        </table>
        <p>Total: $<?php echo getCartTotal(); ?></p>
        <form action="checkout.php" method="POST">
            <button type="submit">Checkout</button>
        </form>
    <?php else: ?>
        <p>Your cart is empty.</p>
    <?php endif; ?>
</body>
</html>


<?php
session_start();

if (!isset($_SESSION['user_id'])) {
    header('Location: login.php');
    exit();
}

require_once 'db_connection.php';
require_once 'Product.php';

$product = new Product($db);

$cartTotal = getCartTotal();

// Include Stripe.js and setup form
?>
<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
    <script src="https://checkout.stripe.com/checkout.js"></script>
</head>
<body>
    <?php if ($cartTotal > 0): ?>
        <h2>Review Your Order</h2>
        <p>Total: $<?php echo $cartTotal; ?></p>

        <form action="process_payment.php" method="POST">
            <div id="stripe_checkout"></div>
            <script>
                StripeCheckout.open({
                    key: 'your_stripe_publishable_key',
                    amount: <?php echo $cartTotal * 100; ?>,
                    name: 'Your Store Name',
                    description: 'Order #' . <?php echo time(); ?>,
                    currency: 'usd',
                    email: '<?php echo $_SESSION['user_email']; ?>'
                });
            </script>
        </form>
    <?php else: ?>
        <p>Your cart is empty.</p>
    <?php endif; ?>
</body>
</html>


<?php
session_start();

if (!isset($_GET['order_id'])) {
    header('Location: product_list.php');
    exit();
}

require_once 'db_connection.php';
require_once 'Order.php';

$order = new Order($db);

$orderId = intval($_GET['order_id']);
$orderData = $order->getOrderByID($orderId);

if ($orderData) {
    // Display success message
    echo '<h2>Payment Successful!</h2>';
    echo '<p>Your order has been processed successfully. Order ID: ' . $orderData['id'] . '</p>';
} else {
    die('Invalid order ID.');
}
?>


<?php
session_start();

if (isset($_SESSION['user_id'])) {
    header('Location: product_list.php');
    exit();
}

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $username = $_POST['username'];
    $password = $_POST['password'];

    // Connect to database and verify credentials
    // ...
    if ($verified) {
        $_SESSION['user_id'] = $userId;
        header('Location: product_list.php');
        exit();
    } else {
        echo 'Invalid username or password.';
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Login</title>
</head>
<body>
    <form action="login.php" method="POST">
        <input type="text" name="username" placeholder="Username" required><br>
        <input type="password" name="password" placeholder="Password" required><br>
        <button type="submit">Login</button>
    </form>
    <a href="register.php">Register here</a>
</body>
</html>


<?php
session_start();

if (isset($_SESSION['user_id'])) {
    header('Location: product_list.php');
    exit();
}

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $username = $_POST['username'];
    $email = $_POST['email'];
    $password = password_hash($_POST['password'], PASSWORD_DEFAULT);

    // Connect to database and insert user
    // ...
    if ($inserted) {
        echo 'Registration successful! Please login.';
        header('Location: login.php');
        exit();
    } else {
        echo 'Error registering. Please try again.';
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Register</title>
</head>
<body>
    <form action="register.php" method="POST">
        <input type="text" name="username" placeholder="Username" required><br>
        <input type="email" name="email" placeholder="Email" required><br>
        <input type="password" name="password" placeholder="Password" required><br>
        <button type="submit">Register</button>
    </form>
    <a href="login.php">Already have an account? Login here</a>
</body>
</html>


<?php
session_start();

unset($_SESSION['user_id']);
session_destroy();

header('Location: login.php');
exit();
?>


<?php
session_start();

if (!isset($_SESSION['csrf_token'])) {
    $_SESSION['csrf_token'] = bin2hex(random_bytes(32));
}

// In your form:
echo '<input type="hidden" name="csrf_token" value="' . $_SESSION['csrf_token'] . '">';
?>

<!-- In your processing script: -->
<?php
if (!isset($_POST['csrf_token']) || $_POST['csrf_token'] !== $_SESSION['csrf_token']) {
    die('Invalid CSRF token');
}
?>


<?php
// Connect to the database
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "myDB";

$conn = new mysqli($servername, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Query to get all products
$sql = "SELECT * FROM products";
$result = $conn->query($sql);

if ($result->num_rows > 0) {
    // Output data of each row
    while($row = $result->fetch_assoc()) {
        echo "<div class='product'>";
        echo "<h3>" . $row["name"] . "</h3>";
        echo "<p>" . $row["description"] . "</p>";
        echo "<p>Price: $" . $row["price"] . "</p>";
        echo "<input type='number' name='quantity' min='1' max='" . $row["quantity"] . "'>";
        echo "<button onclick='addToCart(" . $row["id"] . ")'>Add to Cart</button>";
        echo "</div>";
    }
} else {
    echo "No products found.";
}
$conn->close();
?>


<?php
session_start();

if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

if (isset($_GET['action']) && $_GET['action'] == 'add') {
    $productId = $_GET['id'];
    $quantity = $_GET['quantity'];
    
    if ($quantity > 0) {
        $_SESSION['cart'][$productId] += $quantity;
    }
}

if (isset($_GET['action']) && $_GET['action'] == 'remove') {
    $productId = $_GET['id'];
    unset($_SESSION['cart'][$productId]);
}
?>


<?php
session_start();
require_once('db_connection.php'); // Include your database connection file

if (isset($_POST['checkout'])) {
    if (!empty($_SESSION['cart'])) {
        // Insert order into the orders table
        $userId = $_SESSION['user_id']; // Assuming you have user authentication
        
        foreach ($_SESSION['cart'] as $productId => $quantity) {
            $sql = "INSERT INTO orders (user_id, product_id, quantity) VALUES (?, ?, ?)";
            if ($stmt = $conn->prepare($sql)) {
                $stmt->bind_param("iis", $userId, $productId, $quantity);
                $stmt->execute();
                // Redirect to a confirmation page
                header("Location: purchase_confirmation.php");
                exit();
            }
        }
    } else {
        echo "Your cart is empty!";
    }
}
?>


<?php
session_start();

if (isset($_POST['login'])) {
    $username = $_POST['username'];
    $password = $_POST['password'];
    
    // Hash the password before storing it in the database
    $hashedPassword = md5($password); // MD5 is not secure for production, consider using bcrypt instead
    
    $sql = "SELECT * FROM users WHERE username = ? AND password = ?";
    if ($stmt = $conn->prepare($sql)) {
        $stmt->bind_param("ss", $username, $hashedPassword);
        $stmt->execute();
        $result = $stmt->get_result();
        
        if ($result->num_rows == 1) {
            // Set session variables
            $_SESSION['loggedin'] = true;
            $_SESSION['username'] = $username;
            
            // Redirect to the product catalog page
            header("Location: products.php");
            exit();
        } else {
            echo "Invalid username or password!";
        }
    }
}
?>


<?php
session_start();

// Unset all session variables
$_SESSION = array();

// Destroy the session cookie
if (ini_get("session.use_cookies")) {
    $params = session_get_cookie_params();
    setcookie(session_name(), '', time() - 42000,
        $params["path"], $params["domain"],
        $params["secure"], $params["httponly"]);
}

// Finally, destroy the session
session_destroy();

// Redirect to the login page
header("Location: index.php");
exit();
?>


<?php
require_once('PayPal/autoload.php');

use PayPal\Api\Amount;
use PayPal\Api\Details;
use PayPal\Api\Item;
use PayPal\Api\ItemList;
use PayPal\Api\Payer;
use PayPal\Api\Payment;
use PayPal\Api\RedirectUrls;
use PayPal\Api\Transaction;

$apiContext = new ApiContext(
    new OAuthTokenCredential(
        'your_client_id',
        'your_client_secret'
    )
);

// Create a payment
$payer = new Payer();
$payer->setPaymentMethod("paypal");

$itemList = new ItemList();
foreach ($_SESSION['cart'] as $productId => $quantity) {
    $product = getProductById($productId); // Function to get product details from database
    $item = new Item();
    $item->setName($product['name'])
        ->setDescription($product['description'])
        ->setQuantity($quantity)
        ->setPrice($product['price']);
    $itemList->addItem($item);
}

$amount = new Amount();
$total = 0;
foreach ($_SESSION['cart'] as $productId => $quantity) {
    $total += getProductById($productId)['price'] * $quantity;
}
$amount->setTotal((string)$total)
      ->setCurrency("USD");

$transaction = new Transaction();
$transaction->setAmount($amount)
           ->setItemList($itemList);

$redirectUrls = new RedirectUrls();
$redirectUrls->setReturnUrl("http://your-site.com/return.php")
            ->setCancelUrl("http://your-site.com/cancel.php");

$payment = new Payment();
$payment->setIntent("sale")
       ->setPayer($payer)
       ->setRedirectUrls($redirectUrls)
       ->addTransaction($transaction);

try {
    $payment->create($apiContext);
    
    // Redirect the user to PayPal
    foreach ($payment->getLinks() as $link) {
        if ($link->getRel() == "approval_url") {
            $redirectUrl = $link->getUrl();
            break;
        }
    }
    header("Location: " . $redirectUrl);
} catch (Exception $e) {
    echo "Error creating payment: " . $e->getMessage();
}
?>


<?php
session_start();

require_once('PayPal/autoload.php');

use PayPal\Api\Payment;
use PayPal\Api\PaymentExecution;

$apiContext = new ApiContext(
    new OAuthTokenCredential(
        'your_client_id',
        'your_client_secret'
    )
);

$paymentId = $_GET['paymentId'];
$execution = new PaymentExecution();
$execution->setPayerId($_GET['PayerID']);

try {
    $payment = Payment::get($paymentId, $apiContext);
    $result = $payment->execute($execution, $apiContext);
    
    // Update the order status in your database
    updateOrderStatus($paymentId, 'completed'); // Function to update the order
    
    echo "Payment completed successfully!";
} catch (Exception $e) {
    echo "Error processing payment: " . $e->getMessage();
}
?>


<?php
session_start();

echo "Purchase cancelled.";
// You might want to redirect back to your product page or cart
header("Location: products.php");
exit();
?>


function updateOrderStatus($paymentId, $status) {
    global $conn;
    
    // Assuming you have a table named 'orders' with a column 'status'
    $sql = "UPDATE orders SET status = ? WHERE payment_id = ?";
    if ($stmt = $conn->prepare($sql)) {
        $stmt->bind_param("ss", $status, $paymentId);
        $stmt->execute();
        return true;
    }
    return false;
}


<?php
session_start();

if (isset($_POST['register'])) {
    $username = $_POST['username'];
    $password = $_POST['password'];
    
    // Hash the password
    $hashedPassword = md5($password); // Again, consider using bcrypt in production
    
    $sql = "INSERT INTO users (username, password) VALUES (?, ?)";
    if ($stmt = $conn->prepare($sql)) {
        $stmt->bind_param("ss", $username, $hashedPassword);
        $stmt->execute();
        
        // Set session variables and redirect
        $_SESSION['loggedin'] = true;
        $_SESSION['username'] = $username;
        header("Location: products.php");
        exit();
    }
}
?>


function addToCart($productId, $quantity) {
    session_start();
    
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }
    
    if ($quantity > 0) {
        if (isset($_SESSION['cart'][$productId])) {
            $_SESSION['cart'][$productId] += $quantity;
        } else {
            $_SESSION['cart'][$productId] = $quantity;
        }
    }
}

function removeFromCart($productId) {
    session_start();
    
    if (isset($_SESSION['cart'][$productId])) {
        unset($_SESSION['cart'][$productId]);
    }
}


<?php
session_start();

$total = 0;
echo "<table>";
foreach ($_SESSION['cart'] as $productId => $quantity) {
    $product = getProductById($productId); // Function to get product details from database
    
    echo "<tr>";
    echo "<td>" . $product['name'] . "</td>";
    echo "<td>" . $product['price'] . "</td>";
    echo "<td>" . $quantity . "</td>";
    echo "<td><a href='cart.php?action=remove&id=" . $productId . "'>Remove</a></td>";
    echo "</tr>";
    
    $total += $product['price'] * $quantity;
}
echo "<tr>";
echo "<td colspan='3'><strong>Total: $" . number_format($total, 2) . "</strong></td>";
echo "</tr>";
echo "</table>";
?>


<?php
session_start();
require_once('db_connection.php');

if (isset($_GET['search'])) {
    $searchTerm = $_GET['search'];
    
    $sql = "SELECT * FROM products WHERE name LIKE ? OR description LIKE ?";
    if ($stmt = $conn->prepare($sql)) {
        $searchTerm = "%" . $searchTerm . "%";
        $stmt->bind_param("ss", $searchTerm, $searchTerm);
        $stmt->execute();
        
        $result = $stmt->get_result();
        while ($row = $result->fetch_assoc()) {
            // Display product details
            echo "<div class='product'>";
            echo "<h3>" . $row["name"] . "</h3>";
            echo "<p>" . $row["description"] . "</p>";
            echo "<p>Price: $" . $row["price"] . "</p>";
            echo "<input type='number' name='quantity' min='1' max='" . $row["quantity"] . "'>";
            echo "<button onclick='addToCart(" . $row["id"] . ")'>Add to Cart</button>";
            echo "</div>";
        }
    }
}
?>


<?php
session_start();
require_once('db_connection.php');

$userId = $_SESSION['user_id'];

$sql = "SELECT * FROM orders WHERE user_id = ?";
if ($stmt = $conn->prepare($sql)) {
    $stmt->bind_param("i", $userId);
    $stmt->execute();
    
    $result = $stmt->get_result();
    while ($row = $result->fetch_assoc()) {
        // Display order details
        echo "<div class='order'>";
        echo "<p>Product ID: " . $row["product_id"] . "</p>";
        echo "<p>Quantity: " . $row["quantity"] . "</p>";
        echo "<p>Date: " . $row["order_date"] . "</p>";
        echo "</div>";
    }
}
?>


<?php
session_start();
require_once('db_connection.php');

if (isset($_POST['review'])) {
    $productId = $_POST['product_id'];
    $rating = $_POST['rating'];
    $comment = $_POST['comment'];
    
    $sql = "INSERT INTO reviews (user_id, product_id, rating, comment) VALUES (?, ?, ?, ?)";
    if ($stmt = $conn->prepare($sql)) {
        $stmt->bind_param("iisi", $userId, $productId, $rating, $comment);
        $stmt->execute();
        
        // Redirect back to the product page
        header("Location: product.php?id=" . $productId);
        exit();
    }
}

// Display reviews for a product
if (isset($_GET['id'])) {
    $productId = $_GET['id'];
    
    $sql = "SELECT * FROM reviews WHERE product_id = ?";
    if ($stmt = $conn->prepare($sql)) {
        $stmt->bind_param("i", $productId);
        $stmt->execute();
        
        $result = $stmt->get_result();
        while ($row = $result->fetch_assoc()) {
            // Display review details
            echo "<div class='review'>";
            echo "<p>Rating: " . $row["rating"] . "</p>";
            echo "<p>Comment: " . $row["comment"] . "</p>";
            echo "</div>";
        }
    }
}
?>


<?php
session_start();

if (isset($_GET['action']) && $_GET['action'] == 'add_to_wishlist') {
    $productId = $_GET['id'];
    
    if (!isset($_SESSION['wishlist'])) {
        $_SESSION['wishlist'] = array();
    }
    
    if (!in_array($productId, $_SESSION['wishlist'])) {
        $_SESSION['wishlist'][] = $productId;
    }
}

if (isset($_GET['action']) && $_GET['action'] == 'remove_from_wishlist') {
    $productId = $_GET['id'];
    $index = array_search($productId, $_SESSION['wishlist']);
    if ($index !== false) {
        unset($_SESSION['wishlist'][$index]);
        $_SESSION['wishlist'] = array_values($_SESSION['wishlist']);
    }
}
?>



<?php
session_start();
require_once('db_connection.php');

echo "<table>";
foreach ($_SESSION['wishlist'] as $productId) {
    $sql = "SELECT * FROM products WHERE id = ?";
    if ($stmt = $conn->prepare($sql)) {
        $stmt->bind_param("i", $productId);
        $stmt->execute();
        
        $result = $stmt->get_result();
        while ($row = $result->fetch_assoc()) {
            echo "<tr>";
            echo "<td>" . $row["name"] . "</td>";
            echo "<td>" . $row["price"] . "</td>";
            echo "<td><a href='wishlist.php?action=remove&id=" . $productId . "'>Remove</a></td>";
            echo "</tr>";
        }
    }
}
echo "</table>";
?>


<?php
session_start();

if (isset($_GET['action']) && $_GET['action'] == 'compare') {
    $productId = $_GET['id'];
    
    if (!isset($_SESSION['comparison'])) {
        $_SESSION['comparison'] = array();
    }
    
    if (!in_array($productId, $_SESSION['comparison'])) {
        $_SESSION['comparison'][] = $productId;
    }
}

if (isset($_GET['action']) && $_GET['action'] == 'remove_comparison') {
    $productId = $_GET['id'];
    $index = array_search($productId, $_SESSION['comparison']);
    if ($index !== false) {
        unset($_SESSION['comparison'][$index]);
        $_SESSION['comparison'] = array_values($_SESSION['comparison']);
    }
}
?>



<?php
session_start();
require_once('db_connection.php');

echo "<table>";
foreach ($_SESSION['comparison'] as $productId) {
    $sql = "SELECT * FROM products WHERE id = ?";
    if ($stmt = $conn->prepare($sql)) {
        $stmt->bind_param("i", $productId);
        $stmt->execute();
        
        $result = $stmt->get_result();
        while ($row = $result->fetch_assoc()) {
            echo "<tr>";
            echo "<td>" . $row["name"] . "</td>";
            echo "<td>" . $row["price"] . "</td>";
            echo "<td><a href='comparison.php?action=remove&id=" . $productId . "'>Remove</a></td>";
            echo "</tr>";
        }
    }
}
echo "</table>";
?>


<?php
session_start();

if (isset($_POST['apply_coupon'])) {
    $couponCode = $_POST['coupon'];
    
    // Check if the coupon is valid
    $sql = "SELECT * FROM coupons WHERE code = ? AND status = 'active'";
    if ($stmt = $conn->prepare($sql)) {
        $stmt->bind_param("s", $couponCode);
        $stmt->execute();
        
        $result = $stmt->get_result();
        if ($row = $result->fetch_assoc()) {
            $_SESSION['coupon'] = array(
                'id' => $row['id'],
                'code' => $row['code'],
                'discount' => $row['discount']
            );
            
            // Calculate the discounted total
            $total = calculateTotal();
            $discountedTotal = $total - ($total * $_SESSION['coupon']['discount'] / 100);
            echo "Coupon applied! New total: $" . number_format($discountedTotal, 2);
        } else {
            echo "Invalid coupon code!";
        }
    }
}
?>



<?php
session_start();
require_once('db_connection.php');

$total = 0;
foreach ($_SESSION['cart'] as $productId => $quantity) {
    $product = getProductById($productId);
    $total += $product['price'] * $quantity;
}

if (isset($_SESSION['coupon'])) {
    $discountedTotal = $total - ($total * $_SESSION['coupon']['discount'] / 100);
} else {
    $discountedTotal = $total;
}

echo "<div>Total: $" . number_format($total, 2) . "</div>";
if (isset($_SESSION['coupon'])) {
    echo "<div>Discount (" . $_SESSION['coupon']['code'] . "): $" . number_format($total - $discountedTotal, 2) . "</div>";
    echo "<div>Final Total: $" . number_format($discountedTotal, 2) . "</div>";
}
?>


<?php
session_start();
require_once('db_connection.php');

if (isset($_POST['add_address'])) {
    $addressLine1 = $_POST['address_line1'];
    $addressLine2 = $_POST['address_line2'];
    $city = $_POST['city'];
    $state = $_POST['state'];
    $zipCode = $_POST['zip_code'];
    
    $sql = "INSERT INTO addresses (user_id, address_line1, address_line2, city, state, zip_code) VALUES (?, ?, ?, ?, ?, ?)";
    if ($stmt = $conn->prepare($sql)) {
        $stmt->bind_param("isssss", $userId, $addressLine1, $addressLine2, $city, $state, $zipCode);
        $stmt->execute();
        
        // Redirect back to the address management page
        header("Location: addresses.php");
        exit();
    }
}

// Display all addresses for the user
$sql = "SELECT * FROM addresses WHERE user_id = ?";
if ($stmt = $conn->prepare($sql)) {
    $stmt->bind_param("i", $userId);
    $stmt->execute();
    
    $result = $stmt->get_result();
    while ($row = $result->fetch_assoc()) {
        echo "<div class='address'>";
        echo "<p>" . $row["address_line1"] . "</p>";
        if (!empty($row["address_line2"])) {
            echo "<p>" . $row["address_line2"] . "</p>";
        }
        echo "<p>" . $row["city"] . ", " . $row["state"] . " " . $row["zip_code"] . "</p>";
        echo "<a href='addresses.php?action=edit&id=" . $row['id'] . "'>Edit</a> | ";
        echo "<a href='addresses.php?action=delete&id=" . $row['id'] . "'>Delete</a>";
        echo "</div>";
    }
}
?>

// Handle edit and delete actions
if (isset($_GET['action']) && $_GET['action'] == 'edit') {
    // Implement edit functionality
} elseif (isset($_GET['action']) && $_GET['action'] == 'delete') {
    $addressId = $_GET['id'];
    $sql = "DELETE FROM addresses WHERE id = ?";
    if ($stmt = $conn->prepare($sql)) {
        $stmt->bind_param("i", $addressId);
        $stmt->execute();
        
        // Redirect back
        header("Location: addresses.php");
        exit();
    }
}
?>


<?php
session_start();

if (isset($_POST['checkout'])) {
    $paymentMethod = $_POST['payment_method'];
    // Handle different payment methods here
    if ($paymentMethod == 'credit_card') {
        // Validate credit card information
        $cardNumber = $_POST['card_number'];
        $expiryDate = $_POST['expiry_date'];
        $cvv = $_POST['cvv'];
        
        // Process the payment
        processPayment($cardNumber, $expiryDate, $cvv);
    } elseif ($paymentMethod == 'paypal') {
        // Redirect to PayPal
        header("Location: paypal_checkout.php");
        exit();
    }
}

function processPayment($cardNumber, $expiryDate, $cvv) {
    // Implement payment processing logic here
    // For example, using a payment gateway API
}
?>

// Display checkout form
echo "<form method='post' action='checkout.php'>";
echo "<input type='radio' name='payment_method' value='credit_card'> Credit Card";
echo "<input type='radio' name='payment_method' value='paypal'> PayPal";
echo "<div id='credit_card_form'>";
echo "<input type='text' name='card_number' placeholder='Card Number'>";
echo "<input type='text' name='expiry_date' placeholder='MM/YY'>";
echo "<input type='text' name='cvv' placeholder='CVV'>";
echo "</div>";
echo "<button type='submit'>Proceed to Checkout</button>";
echo "</form>";
?>


<?php
session_start();

// Assuming the payment was successful and we have the order details
echo "<div>Thank you for your purchase!</div>";
echo "<div>Your order has been confirmed.</div>";
echo "<div>Order Details:</div>";
// Display order items, total, etc.
?>


<?php
session_start();

if (isset($_SESSION['order_confirmation'])) {
    $to = $_SESSION['email'];
    $subject = "Order Confirmation";
    $body = "Thank you for your purchase. Your order details are as follows: ...";
    
    if (mail($to, $subject, $body)) {
        echo "Email sent successfully!";
    } else {
        echo "Failed to send email.";
    }
}
?>


<?php
session_start();
require_once('db_connection.php');

if (isset($_POST['submit_review'])) {
    $productId = $_GET['id'];
    $rating = $_POST['rating'];
    $reviewText = $_POST['review_text'];
    
    // Insert the review into the database
    $sql = "INSERT INTO reviews (product_id, user_id, rating, text) VALUES (?, ?, ?, ?)";
    if ($stmt = $conn->prepare($sql)) {
        $stmt->bind_param("iiis", $productId, $userId, $rating, $reviewText);
        $stmt->execute();
        
        // Redirect back to the product page
        header("Location: product.php?id=" . $productId);
        exit();
    }
}

// Display existing reviews
$sql = "SELECT * FROM reviews WHERE product_id = ?";
if ($stmt = $conn->prepare($sql)) {
    $stmt->bind_param("i", $productId);
    $stmt->execute();
    
    $result = $stmt->get_result();
    while ($row = $result->fetch_assoc()) {
        echo "<div class='review'>";
        echo "<div>Rating: " . str_repeat("★", $row['rating']) . "</div>";
        echo "<p>" . $row['text'] . "</p>";
        echo "</div>";
    }
}
?>


<?php
session_start();

if (isset($_GET['action']) && $_GET['action'] == 'add_to_wishlist') {
    $productId = $_GET['id'];
    
    if (!isset($_SESSION['wishlist'])) {
        $_SESSION['wishlist'] = array();
    }
    
    if (!in_array($productId, $_SESSION['wishlist'])) {
        $_SESSION['wishlist'][] = $productId;
        echo "Product added to wishlist!";
    } else {
        echo "Product already in wishlist!";
    }
}
?>

// Display wishlist
echo "<div>Your Wishlist:</div>";
if (isset($_SESSION['wishlist']) && count($_SESSION['wishlist']) > 0) {
    foreach ($_SESSION['wishlist'] as $productId) {
        // Retrieve product details and display them
    }
} else {
    echo "Your wishlist is empty.";
}
?>


<?php
session_start();
require_once('db_connection.php');

$filters = array();
if (isset($_GET['category'])) {
    $filters[] = "category = '" . $_GET['category'] . "'";
}
if (isset($_GET['price_min']) && isset($_GET['price_max'])) {
    $filters[] = "price BETWEEN " . $_GET['price_min'] . " AND " . $_GET['price_max'];
}

$sql = "SELECT * FROM products";
if (!empty($filters)) {
    $sql .= " WHERE " . implode(" AND ", $filters);
}

$result = $conn->query($sql);

// Display filtered products
while ($row = $result->fetch_assoc()) {
    echo "<div class='product'>";
    echo "<img src='" . $row['image'] . "'>";
    echo "<h3>" . $row['name'] . "</h3>";
    echo "<p>$" . $row['price'] . "</p>";
    echo "</div>";
}
?>


<?php
session_start();
require_once('db_connection.php');

if (isset($_GET['search'])) {
    $searchTerm = $_GET['search'];
    
    $sql = "SELECT * FROM products WHERE name LIKE '%" . $searchTerm . "%' OR description LIKE '%" . $searchTerm . "%'";
    $result = $conn->query($sql);
    
    // Display search results
    while ($row = $result->fetch_assoc()) {
        echo "<div class='product'>";
        echo "<img src='" . $row['image'] . "'>";
        echo "<h3>" . $row['name'] . "</h3>";
        echo "<p>$" . $row['price'] . "</p>";
        echo "</div>";
    }
} else {
    // Display all products
}
?>


<?php
session_start();

if (isset($_GET['action']) && $_GET['action'] == 'add_to_cart') {
    $productId = $_GET['id'];
    
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }
    
    if (isset($_SESSION['cart'][$productId])) {
        // If the product is already in the cart, increment quantity
        $_SESSION['cart'][$productId]['quantity']++;
    } else {
        // Get product details and add to cart
        $sql = "SELECT * FROM products WHERE id = ?";
        if ($stmt = $conn->prepare($sql)) {
            $stmt->bind_param("i", $productId);
            $stmt->execute();
            
            $result = $stmt->get_result();
            while ($row = $result->fetch_assoc()) {
                $_SESSION['cart'][$productId] = array(
                    'id' => $row['id'],
                    'name' => $row['name'],
                    'price' => $row['price'],
                    'quantity' => 1
                );
            }
        }
    }
}
?>

// Display cart contents
if (isset($_SESSION['cart']) && count($_SESSION['cart']) > 0) {
    foreach ($_SESSION['cart'] as $productId => $product) {
        echo "<div class='cart-item'>";
        echo "<img src='" . $product['image'] . "'>";
        echo "<h3>" . $product['name'] . "</h3>";
        echo "<p>Quantity: " . $product['quantity'] . "</p>";
        echo "<p>$" . $product['price'] . "</p>";
        echo "</div>";
    }
} else {
    echo "Your cart is empty.";
}
?>


<?php
session_start();

// Display cart contents for checkout
if (isset($_SESSION['cart']) && count($_SESSION['cart']) > 0) {
    foreach ($_SESSION['cart'] as $productId => $product) {
        echo "<div class='checkout-item'>";
        echo "<h3>" . $product['name'] . "</h3>";
        echo "<p>Quantity: " . $product['quantity'] . "</p>";
        echo "<p>$" . $product['price'] . "</p>";
        echo "</div>";
    }
    
    // Display total price
    $total = 0;
    foreach ($_SESSION['cart'] as $productId => $product) {
        $total += $product['price'] * $product['quantity'];
    }
    echo "<div>Total: $" . number_format($total, 2) . "</div>";
    
    // Checkout form
    echo "<form method='post' action='checkout.php'>";
    echo "<button type='submit'>Proceed to Checkout</button>";
    echo "</form>";
} else {
    echo "Your cart is empty. Please add items before checkout.";
}
?>


<?php
session_start();

require_once('stripe-php/init.php');

\Stripe\Stripe::setApiKey('your_stripe_secret_key');

if (isset($_POST['payment_method'])) {
    try {
        $charge = \Stripe\Charge::create(array(
            "amount" => calculateTotal() * 100, // Amount in cents
            "currency" => "usd",
            "source" => $_POST['stripeToken'],
            "description" => "Order from your store"
        ));
        
        if ($charge->status == 'succeeded') {
            // Process the order and redirect to confirmation page
            header("Location: order_confirmation.php");
            exit();
        }
    } catch (\Stripe\Error\Base $e) {
        // Handle payment errors
        echo "Payment failed. Please try again.";
    }
}

function calculateTotal() {
    $total = 0;
    foreach ($_SESSION['cart'] as $productId => $product) {
        $total += $product['price'] * $product['quantity'];
    }
    return $total;
}
?>


<?php
session_start();
require_once('db_connection.php');

if (isset($_POST['track_order'])) {
    $trackingNumber = $_POST['tracking_number'];
    
    $sql = "SELECT * FROM orders WHERE tracking_number = ?";
    if ($stmt = $conn->prepare($sql)) {
        $stmt->bind_param("s", $trackingNumber);
        $stmt->execute();
        
        $result = $stmt->get_result();
        if ($row = $result->fetch_assoc()) {
            echo "<div class='order-status'>";
            echo "<h3>Order Status: " . $row['status'] . "</h3>";
            echo "<p>Estimated delivery date: " . $row['estimated_delivery'] . "</p>";
            echo "</div>";
        } else {
            echo "Tracking number not found.";
        }
    }
}
?>


<?php
session_start();

// Handle incoming messages
if (isset($_POST['message'])) {
    // Store the message in the database or send to an agent
}

// Retrieve and display chat history
$sql = "SELECT * FROM chat_messages WHERE session_id = ?";
if ($stmt = $conn->prepare($sql)) {
    $stmt->bind_param("s", session_id());
    $stmt->execute();
    
    $result = $stmt->get_result();
    while ($row = $result->fetch_assoc()) {
        echo "<div class='chat-message'>";
        echo "<p>" . $row['text'] . "</p>";
        echo "<small>" . $row['timestamp'] . "</small>";
        echo "</div>";
    }
}
?>


<?php
session_start();
require_once('db_connection.php');

if (isset($_POST['subscribe'])) {
    $email = $_POST['email'];
    
    // Check if email already exists in the database
    $sql = "SELECT id FROM newsletter_subscribers WHERE email = ?";
    if ($stmt = $conn->prepare($sql)) {
        $stmt->bind_param("s", $email);
        $stmt->execute();
        
        if ($stmt->fetch()) {
            echo "You are already subscribed.";
        } else {
            // Insert the new subscriber
            $sql = "INSERT INTO newsletter_subscribers (email) VALUES (?)";
            if ($stmt = $conn->prepare($sql)) {
                $stmt->bind_param("s", $email);
                $stmt->execute();
                echo "Thank you for subscribing!";
            }
        }
    }
}
?>


<?php
session_start();

// Share buttons
echo "<div class='share-buttons'>";
echo "<a href='https://twitter.com/intent/tweet?url=" . urlencode(current_url()) . "' target='_blank'>Twitter</a>";
echo "<a href='https://facebook.com/sharer.php?u=" . urlencode(current_url()) . "' target='_blank'>Facebook</a>";
echo "<a href='https://pinterest.com/pin/create/button/?url=" . urlencode(current_url()) . "&media=" . urlencode(product_image_url()) . "&description=" . urlencode(product_name()) . "' target='_blank'>Pinterest</a>";
echo "</div>";
?>


<?php
session_start();

if (isset($_GET['action']) && $_GET['action'] == 'compare') {
    $productId = $_GET['id'];
    
    if (!isset($_SESSION['comparison'])) {
        $_SESSION['comparison'] = array();
    }
    
    if (!in_array($productId, $_SESSION['comparison'])) {
        $_SESSION['comparison'][] = $productId;
        echo "Product added to comparison.";
    } else {
        echo "Product already in comparison.";
    }
}
?>

// Display comparison table
if (isset($_SESSION['comparison']) && count($_SESSION['comparison']) > 0) {
    foreach ($_SESSION['comparison'] as $productId) {
        // Retrieve product details and display them side by side
    }
} else {
    echo "No products to compare.";
}
?>


<?php
session_start();
require_once('db_connection.php');

$sql = "SELECT * FROM orders WHERE user_id = ?";
if ($stmt = $conn->prepare($sql)) {
    $stmt->bind_param("i", $userId);
    $stmt->execute();
    
    $result = $stmt->get_result();
    while ($row = $result->fetch_assoc()) {
        echo "<div class='order'>";
        echo "<h3>Order #" . $row['id'] . "</h3>";
        echo "<p>Status: " . $row['status'] . "</p>";
        echo "<p>Date: " . $row['order_date'] . "</p>";
        echo "</div>";
    }
}
?>


<?php
session_start();
require_once('db_connection.php');

if (isset($_POST['add_address'])) {
    $address = $_POST['address'];
    
    // Insert the new address into the database
    $sql = "INSERT INTO addresses (user_id, address) VALUES (?, ?)";
    if ($stmt = $conn->prepare($sql)) {
        $stmt->bind_param("is", $userId, $address);
        $stmt->execute();
        echo "Address added successfully!";
    }
}

// Display all addresses
$sql = "SELECT * FROM addresses WHERE user_id = ?";
if ($stmt = $conn->prepare($sql)) {
    $stmt->bind_param("i", $userId);
    $stmt->execute();
    
    $result = $stmt->get_result();
    while ($row = $result->fetch_assoc()) {
        echo "<div class='address'>";
        echo "<p>" . $row['address'] . "</p>";
        echo "<a href='edit_address.php?id=" . $row['id'] . "'>Edit</a>";
        echo "<a href='delete_address.php?id=" . $row['id'] . "'>Delete</a>";
        echo "</div>";
    }
}
?>


<?php
session_start();
require_once('db_connection.php');

if (isset($_POST['apply_coupon'])) {
    $couponCode = $_POST['coupon_code'];
    
    // Check if the coupon exists and is valid
    $sql = "SELECT * FROM coupons WHERE code = ? AND expiry_date >= CURRENT_DATE()";
    if ($stmt = $conn->prepare($sql)) {
        $stmt->bind_param("s", $couponCode);
        $stmt->execute();
        
        if ($row = $stmt->get_result()->fetch_assoc()) {
            $_SESSION['coupon'] = array(
                'id' => $row['id'],
                'discount_type' => $row['discount_type'],
                'discount_value' => $row['discount_value']
            );
            echo "Coupon applied successfully!";
        } else {
            echo "Invalid or expired coupon.";
        }
    }
}
?>

// Calculate total with discount
if (isset($_SESSION['coupon'])) {
    $total = calculateTotal();
    
    if ($_SESSION['coupon']['discount_type'] == 'percentage') {
        $discount = ($total * $_SESSION['coupon']['discount_value']) / 100;
    } else {
        $discount = $_SESSION['coupon']['discount_value'];
    }
    
    $finalTotal = $total - $discount;
    echo "Subtotal: $" . number_format($total, 2) . "<br>";
    echo "Discount: -$" . number_format($discount, 2) . "<br>";
    echo "Total: $" . number_format($finalTotal, 2);
}
?>


<?php
session_start();
require_once('db_connection.php');

$sort = isset($_GET['sort']) ? $_GET['sort'] : 'price_asc';

$sql = "SELECT * FROM products";
if ($sort == 'price_desc') {
    $sql .= " ORDER BY price DESC";
} else if ($sort == 'price_asc') {
    $sql .= " ORDER BY price ASC";
} else if ($sort == 'popularity') {
    $sql .= " ORDER BY sales_count DESC";
}

$result = $conn->query($sql);

// Display sorted products
while ($row = $result->fetch_assoc()) {
    echo "<div class='product'>";
    echo "<img src='" . $row['image'] . "'>";
    echo "<h3>" . $row['name'] . "</h3>";
    echo "<p>$" . $row['price'] . "</p>";
    echo "</div>";
}
?>


<?php
session_start();
require_once('db_connection.php');

$sql = "SELECT * FROM products WHERE id = ?";
if ($stmt = $conn->prepare($sql)) {
    $stmt->bind_param("i", $productId);
    $stmt->execute();
    
    if ($row = $stmt->get_result()->fetch_assoc()) {
        echo "<div class='availability'>";
        if ($row['stock'] > 0) {
            echo "In Stock: " . $row['stock'];
        } else {
            echo "Out of Stock";
        }
        echo "</div>";
    }
}
?>


<?php
session_start();

// After processing the order, send an email
$to = $_SESSION['email'];
$subject = "Order Confirmation #" . $orderNumber;
$message = "Thank you for your order! Your order details are as follows...";

mail($to, $subject, $message);
?>


<?php
session_start();
require_once('db_connection.php');

if (isset($_POST['submit_review'])) {
    $rating = $_POST['rating'];
    $reviewText = $_POST['review_text'];
    
    // Insert the review into the database
    $sql = "INSERT INTO reviews (user_id, product_id, rating, text) VALUES (?, ?, ?, ?)";
    if ($stmt = $conn->prepare($sql)) {
        $stmt->bind_param("iisi", $userId, $productId, $rating, $reviewText);
        $stmt->execute();
        echo "Thank you for your review!";
    }
}

// Display reviews
$sql = "SELECT * FROM reviews WHERE product_id = ?";
if ($stmt = $conn->prepare($sql)) {
    $stmt->bind_param("i", $productId);
    $stmt->execute();
    
    $result = $stmt->get_result();
    while ($row = $result->fetch_assoc()) {
        echo "<div class='review'>";
        echo "<p>Rating: " . $row['rating'] . "/5</p>";
        echo "<p>" . $row['text'] . "</p>";
        echo "</div>";
    }
}
?>


<?php
session_start();
require_once('db_connection.php');

if (isset($_GET['action']) && $_GET['action'] == 'add_to_wishlist') {
    $productId = $_GET['id'];
    
    // Insert the product into the wishlist
    $sql = "INSERT INTO wishlists (user_id, product_id) VALUES (?, ?)";
    if ($stmt = $conn->prepare($sql)) {
        $stmt->bind_param("ii", $userId, $productId);
        $stmt->execute();
        echo "Product added to wishlist!";
    }
}

// Display wishlist
$sql = "SELECT * FROM wishlists WHERE user_id = ?";
if ($stmt = $conn->prepare($sql)) {
    $stmt->bind_param("i", $userId);
    $stmt->execute();
    
    $result = $stmt->get_result();
    while ($row = $result->fetch_assoc()) {
        // Retrieve product details and display them
    }
}
?>


<?php
session_start();
require_once('db_connection.php');

$priceMin = isset($_GET['min_price']) ? $_GET['min_price'] : 0;
$priceMax = isset($_GET['max_price']) ? $_GET['max_price'] : INF;

$sql = "SELECT * FROM products WHERE price >= ? AND price <= ?";
if ($stmt = $conn->prepare($sql)) {
    $stmt->bind_param("ii", $priceMin, $priceMax);
    $stmt->execute();
    
    $result = $stmt->get_result();
    while ($row = $result->fetch_assoc()) {
        echo "<div class='product'>";
        echo "<img src='" . $row['image'] . "'>";
        echo "<h3>" . $row['name'] . "</h3>";
        echo "<p>$" . $row['price'] . "</p>";
        echo "</div>";
    }
}
?>


<?php
session_start();
require_once('db_connection.php');

$searchTerm = $_GET['search'];

$sql = "SELECT * FROM products WHERE name LIKE ? OR description LIKE ?";
if ($stmt = $conn->prepare($sql)) {
    $searchPattern = "%" . $searchTerm . "%";
    $stmt->bind_param("ss", $searchPattern, $searchPattern);
    $stmt->execute();
    
    $result = $stmt->get_result();
    while ($row = $result->fetch_assoc()) {
        echo "<div class='product'>";
        echo "<img src='" . $row['image'] . "'>";
        echo "<h3>" . $row['name'] . "</h3>";
        echo "<p>$" . $row['price'] . "</p>";
        echo "</div>";
    }
}
?>


<?php
session_start();

if (isset($_GET['action']) && $_GET['action'] == 'add_to_cart') {
    $productId = $_GET['id'];
    
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }
    
    if (isset($_SESSION['cart'][$productId])) {
        $_SESSION['cart'][$productId]['quantity']++;
    } else {
        $_SESSION['cart'][$productId] = array(
            'id' => $productId,
            'quantity' => 1
        );
    }
}

// Display cart contents
if (isset($_SESSION['cart'])) {
    foreach ($_SESSION['cart'] as $item) {
        // Retrieve product details and display them with quantity
    }
}
?>


<?php
session_start();
require_once('db_connection.php');

// Step 1: Select shipping address
if (isset($_POST['select_address'])) {
    $addressId = $_POST['address'];
    $_SESSION['checkout']['shipping_address'] = $addressId;
}

// Step 2: Review order and proceed to payment
if (isset($_POST['review_order'])) {
    // Calculate total, apply discounts, etc.
}

// Step 3: Process payment
if (isset($_POST['process_payment'])) {
    // Handle payment processing with a payment gateway
    $paymentResult = processPayment();
    
    if ($paymentResult) {
        // Record the order in the database
        $sql = "INSERT INTO orders (user_id, total, status) VALUES (?, ?, 'pending')";
        if ($stmt = $conn->prepare($sql)) {
            $stmt->bind_param("id", $userId, $total);
            $stmt->execute();
            
            // Insert order items
            foreach ($_SESSION['cart'] as $item) {
                $sql = "INSERT INTO order_items (order_id, product_id, quantity) VALUES (?, ?, ?)";
                if ($stmt = $conn->prepare($sql)) {
                    $stmt->bind_param("iii", $orderId, $item['id'], $item['quantity']);
                    $stmt->execute();
                }
            }
            
            // Clear cart and show thank you message
            unset($_SESSION['cart']);
            echo "Thank you for your order!";
        }
    } else {
        echo "Payment failed. Please try again.";
    }
}
?>


<?php
session_start();
require_once('db_connection.php');

$sql = "SELECT * FROM order_tracking WHERE order_id = ?";
if ($stmt = $conn->prepare($sql)) {
    $stmt->bind_param("i", $orderId);
    $stmt->execute();
    
    $result = $stmt->get_result();
    while ($row = $result->fetch_assoc()) {
        echo "<div class='tracking'>";
        echo "<p>" . $row['status'] . " - " . $row['update_date'] . "</p>";
        echo "</div>";
    }
}
?>


<?php
session_start();
require_once('db_connection.php');

$sql = "SELECT * FROM recommendations WHERE user_id = ?";
if ($stmt = $conn->prepare($sql)) {
    $stmt->bind_param("i", $userId);
    $stmt->execute();
    
    $result = $stmt->get_result();
    while ($row = $result->fetch_assoc()) {
        // Retrieve product details and display them
    }
}
?>


<?php
session_start();
require_once('db_connection.php');

$sql = "SELECT * FROM product_variants WHERE product_id = ?";
if ($stmt = $conn->prepare($sql)) {
    $stmt->bind_param("i", $productId);
    $stmt->execute();
    
    $result = $stmt->get_result();
    while ($row = $result->fetch_assoc()) {
        echo "<div class='variant'>";
        echo "<p>" . $row['name'] . "</p>";
        if ($row['stock'] > 0) {
            echo "<button onclick=\"addToCart(" . $row['id'] . ")\">Add to Cart</button>";
        } else {
            echo "Out of Stock";
        }
        echo "</div>";
    }
}
?>


<?php
session_start();
require_once('db_connection.php');

$tag = $_GET['tag'];

$sql = "SELECT p.* FROM products p INNER JOIN product_tags pt ON p.id = pt.product_id WHERE pt.tag = ?";
if ($stmt = $conn->prepare($sql)) {
    $stmt->bind_param("s", $tag);
    $stmt->execute();
    
    $result = $stmt->get_result();
    while ($row = $result->fetch_assoc()) {
        echo "<div class='product'>";
        echo "<img src='" . $row['image'] . "'>";
        echo "<h3>" . $row['name'] . "</h3>";
        echo "<p>$" . $row['price'] . "</p>";
        echo "</div>";
    }
}
?>


<?php
session_start();
require_once('db_connection.php');

$sql = "SELECT * FROM product_collections WHERE collection_id = ?";
if ($stmt = $conn->prepare($sql)) {
    $stmt->bind_param("i", $collectionId);
    $stmt->execute();
    
    $result = $stmt->get_result();
    while ($row = $result->fetch_assoc()) {
        // Retrieve product details and display them
    }
}
?>


<?php
session_start();
require_once('db_connection.php');

// Display user's order history
$sql = "SELECT * FROM orders WHERE user_id = ?";
if ($stmt = $conn->prepare($sql)) {
    $stmt->bind_param("i", $userId);
    $stmt->execute();
    
    $result = $stmt->get_result();
    while ($row = $result->fetch_assoc()) {
        echo "<div class='order'>";
        echo "<p>Order #" . $row['id'] . " - " . $row['status'] . "</p>";
        echo "<p>Total: $" . $row['total'] . "</p>";
        echo "</div>";
    }
}
?>


<?php
session_start();

// Send an email notification when a user places an order
$to = $_SESSION['email'];
$subject = "Your Order Has Been Placed!";
$message = "Dear customer,

Thank you for your order. Your order has been received and is being processed...";

mail($to, $subject, $message);
?>


<?php
session_start();

// Generate share links
$facebookUrl = "https://www.facebook.com/sharer.php?u=" . urlencode($productUrl);
.twitterUrl = "https://twitter.com/share?url=" . urlencode($productUrl) . "&text=" . urlencode($productName);

echo "<a href='$facebookUrl' target='_blank'>Share on Facebook</a>";
echo "<a href='$twitterUrl' target='_blank'>Tweet this product</a>";
?>


<?php
session_start();
require_once('db_connection.php');

$sql = "SELECT video_url FROM product_videos WHERE product_id = ?";
if ($stmt = $conn->prepare($sql)) {
    $stmt->bind_param("i", $productId);
    $stmt->execute();
    
    $result = $stmt->get_result();
    if ($row = $result->fetch_assoc()) {
        echo "<video controls>";
        echo "<source src='" . $row['video_url'] . "' type='video/mp4'>";
        echo "Your browser does not support the video tag.";
        echo "</video>";
    }
}
?>


<?php
session_start();

if (isset($_GET['action']) && $_GET['action'] == 'compare') {
    $productId = $_GET['id'];
    
    if (!isset($_SESSION['comparison'])) {
        $_SESSION['comparison'] = array();
    }
    
    if (!in_array($productId, $_SESSION['comparison'])) {
        $_SESSION['comparison'][] = $productId;
    }
}

// Display comparison table
if (isset($_SESSION['comparison']) && count($_SESSION['comparison']) > 0) {
    foreach ($_SESSION['comparison'] as $productId) {
        // Retrieve product details and display them in a table for comparison
    }
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle customization options
if (isset($_POST['submit_customization'])) {
    $customOptions = serialize($_POST);
    
    // Insert into database or process further
}
?>


<?php
session_start();
require_once('db_connection.php');

// Set up alerts for products
if (isset($_POST['set_alert'])) {
    $productId = $_POST['product_id'];
    $priceThreshold = $_POST['price_threshold'];
    
    // Insert into product Alerts table
}
?>


<?php
session_start();
require_once('db_connection.php');

// Process return request
if (isset($_POST['request_return'])) {
    $orderId = $_POST['order_id'];
    $reason = $_POST['reason'];
    
    // Insert into Returns table
}
?>


<?php
session_start();
require_once('db_connection.php');

$sql = "SELECT * FROM orders WHERE user_id = ?";
if ($stmt = $conn->prepare($sql)) {
    $stmt->bind_param("i", $userId);
    $stmt->execute();
    
    $result = $stmt->get_result();
    while ($row = $result->fetch_assoc()) {
        echo "<div class='order'>";
        echo "<h3>Order #" . $row['id'] . "</h3>";
        echo "<p>Status: " . $row['status'] . "</p>";
        // Display order items and details
        }
    }
}
?>


<?php
session_start();
require_once('db_connection.php');

// Generate a sharable link for the wishlist
$wishlistId = $_SESSION['wishlist_id'];
$shareLink = "https://example.com/wishlist/" . $wishlistId;

echo "<a href='$shareLink' target='_blank'>Share your wishlist</a>";
?>


<?php
session_start();

// Handle guest checkout form submission
if (isset($_POST['guest_checkout'])) {
    $email = $_POST['email'];
    // Process the order without requiring a user account
}
?>


<?php
session_start();

// Handle different payment gateways
if (isset($_POST['payment_method'])) {
    $method = $_POST['payment_method'];
    
    if ($method == 'credit_card') {
        // Process credit card payment
    } elseif ($method == 'paypal') {
        // Redirect to PayPal for payment
    }
}
?>


<?php
session_start();
require_once('db_connection.php');

if (isset($_POST['track_order'])) {
    $orderNumber = $_POST['order_number'];
    
    $sql = "SELECT * FROM orders WHERE id = ?";
    if ($stmt = $conn->prepare($sql)) {
        $stmt->bind_param("i", $orderNumber);
        $stmt->execute();
        
        $result = $stmt->get_result();
        if ($row = $result->fetch_assoc()) {
            echo "<div class='tracking'>";
            echo "<p>Order Status: " . $row['status'] . "</p>";
            // Display tracking details
            }
        }
    }
}
?>


<?php
session_start();
require_once('db_connection.php');

// Process refund request
if (isset($_POST['request_refund'])) {
    $orderId = $_POST['order_id'];
    $reason = $_POST['reason'];
    
    // Update order status to 'refunded' and process the refund
}
?>


<?php
session_start();
require_once('db_connection.php');

$sql = "SELECT guide_url FROM product_guides WHERE product_id = ?";
if ($stmt = $conn->prepare($sql)) {
    $stmt->bind_param("i", $productId);
    $stmt->execute();
    
    $result = $stmt->get_result();
    if ($row = $result->fetch_assoc()) {
        echo "<a href='" . $row['guide_url'] . "' download>Download Installation Guide</a>";
    }
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle subscription setup
if (isset($_POST['subscribe'])) {
    $productId = $_POST['product_id'];
    $frequency = $_POST['frequency'];
    
    // Insert into subscriptions table
}
?>


<?php
session_start();
require_once('db_connection.php');

// Process trial registration
if (isset($_POST['start_trial'])) {
    $productId = $_POST['product_id'];
    $email = $_POST['email'];
    
    // Insert into trials table and send confirmation email
}
?>


<?php
session_start();

// Handle file uploads for customization
if ($_SERVER['REQUEST_METHOD'] == 'POST' && isset($_FILES['custom_file'])) {
    $uploadDir = "uploads/customizations/";
    $filePath = $uploadDir . basename($_FILES['custom_file']['name']);
    
    if (move_uploaded_file($_FILES['custom_file']['tmp_name'], $filePath)) {
        // Process the uploaded file for customization
    }
}
?>


<?php
session_start();
require_once('db_connection.php');

$sql = "SELECT chart_url FROM size_charts WHERE product_id = ?";
if ($stmt = $conn->prepare($sql)) {
    $stmt->bind_param("i", $productId);
    $stmt->execute();
    
    $result = $stmt->get_result();
    if ($row = $result->fetch_assoc()) {
        echo "<img src='" . $row['chart_url'] . "' alt='Size Chart'>";
    }
}
?>


<?php
session_start();
require_once('db_connection.php');

if (isset($_POST['check_availability'])) {
    $productId = $_POST['product_id'];
    
    $sql = "SELECT stock FROM products WHERE id = ?";
    if ($stmt = $conn->prepare($sql)) {
        $stmt->bind_param("i", $productId);
        $stmt->execute();
        
        $result = $stmt->get_result();
        if ($row = $result->fetch_assoc()) {
            echo "Stock available: " . $row['stock'];
        }
    }
}
?>


<?php
session_start();
require_once('db_connection.php');

$sql = "SELECT * FROM product_conditions";
$result = $conn->query($sql);
while ($row = $result->fetch_assoc()) {
    echo "<option value='" . $row['id'] . "'>" . $row['condition_name'] . "</option>";
}
?>


<?php
session_start();
require_once('db_connection.php');

$sql = "SELECT * FROM product_warranties WHERE product_id = ?";
if ($stmt = $conn->prepare($sql)) {
    $stmt->bind_param("i", $productId);
    $stmt->execute();
    
    $result = $stmt->get_result();
    while ($row = $result->fetch_assoc()) {
        echo "<div class='warranty'>";
        echo "<h3>" . $row['title'] . "</h3>";
        echo "<p>" . $row['description'] . "</p>";
        echo "</div>";
    }
}
?>


<?php
session_start();

// Generate a preview image based on user inputs
if (isset($_POST['preview_customization'])) {
    // Process customization data and generate a preview
}
?>


<?php
session_start();
require_once('db_connection.php');

$sql = "SELECT care_instructions FROM product_care WHERE product_id = ?";
if ($stmt = $conn->prepare($sql)) {
    $stmt->bind_param("i", $productId);
    $stmt->execute();
    
    $result = $stmt->get_result();
    if ($row = $result->fetch_assoc()) {
        echo "<div class='care-instructions'>";
        echo "<h3>Care Instructions</h3>";
        echo "<p>" . $row['care_instructions'] . "</p>";
        echo "</div>";
    }
}
?>


<?php
session_start();
require_once('db_connection.php');

$sql = "SELECT rating FROM energy_ratings WHERE product_id = ?";
if ($stmt = $conn->prepare($sql)) {
    $stmt->bind_param("i", $productId);
    $stmt->execute();
    
    $result = $stmt->get_result();
    if ($row = $result->fetch_assoc()) {
        echo "Energy Efficiency Rating: " . $row['rating'] . "/10";
    }
}
?>


<?php
session_start();
require_once('db_connection.php');

$sql = "SELECT date, price FROM price_history WHERE product_id = ?";
if ($stmt = $conn->prepare($sql)) {
    $stmt->bind_param("i", $productId);
    $stmt->execute();
    
    $result = $stmt->get_result();
    while ($row = $result->fetch_assoc()) {
        echo "<div class='price-history'>";
        echo "<p>" . $row['date'] . ": $" . $row['price'] . "</p>";
        echo "</div>";
    }
}
?>


<?php
session_start();
require_once('db_connection.php');

$sql = "SELECT feature, value FROM product_features WHERE product_id = ?";
if ($stmt = $conn->prepare($sql)) {
    $stmt->bind_param("i", $productId);
    $stmt->execute();
    
    $result = $stmt->get_result();
    while ($row = $result->fetch_assoc()) {
        echo "<div class='feature'>";
        echo "<h3>" . $row['feature'] . "</h3>";
        echo "<p>" . $row['value'] . "</p>";
        echo "</div>";
    }
}
?>


<?php
session_start();
require_once('db_connection.php');

// Display customer reviews
$sql = "SELECT * FROM product_reviews WHERE product_id = ?";
if ($stmt = $conn->prepare($sql)) {
    $stmt->bind_param("i", $productId);
    $stmt->execute();
    
    $result = $stmt->get_result();
    while ($row = $result->fetch_assoc()) {
        echo "<div class='review'>";
        echo "<h3>" . $row['author'] . "</h3>";
        echo "<p>Rating: " . str_repeat("★", $row['rating']) . "</p>";
        echo "<p>" . $row['comment'] . "</p>";
        echo "</div>";
    }
}

// Handle new review submission
if (isset($_POST['submit_review'])) {
    // Insert into product_reviews table
}
?>


<?php
session_start();
require_once('db_connection.php');

// Display Q&A threads
$sql = "SELECT * FROM product_qa WHERE product_id = ?";
if ($stmt = $conn->prepare($sql)) {
    $stmt->bind_param("i", $productId);
    $stmt->execute();
    
    $result = $stmt->get_result();
    while ($row = $result->fetch_assoc()) {
        echo "<div class='qa'>";
        echo "<h3>" . $row['question'] . "</h3>";
        echo "<p>Asked by: " . $row['author'] . "</p>";
        if (!empty($row['answer'])) {
            echo "<div class='answer'>";
            echo "<p>" . $row['answer'] . "</p>";
            echo "</div>";
        }
        echo "</div>";
    }
}

// Handle new question submission
if (isset($_POST['submit_question'])) {
    // Insert into product_qa table
}
?>


<?php
session_start();
require_once('db_connection.php');

$sql = "SELECT * FROM size_conversion";
$result = $conn->query($sql);
while ($row = $result->fetch_assoc()) {
    echo "<div class='size-conversion'>";
    echo "<h3>" . $row['country'] . "</h3>";
    echo "<p>" . $row['conversion_guide'] . "</p>";
    echo "</div>";
}
?>


<?php
session_start();
require_once('connnection.php');

$sql = "SELECT * FROM shipping_options";
$result = $conn->query($sql);
while ($row = $result->fetch_assoc()) {
    echo "<div class='shipping-option'>";
    echo "<h3>" . $row['option_name'] . "</h3>";
    echo "<p>Delivery Time: " . $row['delivery_time'] . "</p>";
    echo "<p>Cost: $" . $row['cost'] . "</p>";
    echo "</div>";
}
?>


<?php
session_start();
require_once('db_connection.php');

$sql = "SELECT * FROM return_policy";
$result = $conn->query($sql);
while ($row = $result->fetch_assoc()) {
    echo "<div class='return-info'>";
    echo "<h3>" . $row['policy_title'] . "</h3>";
    echo "<p>" . $row['description'] . "</p>";
    echo "</div>";
}
?>


<?php
session_start();
require_once('db_connection.php');

$sql = "SELECT * FROM special_offers WHERE product_id = ?";
if ($stmt = $conn->prepare($sql)) {
    $stmt->bind_param("i", $productId);
    $stmt->execute();
    
    $result = $stmt->get_result();
    while ($row = $result->fetch_assoc()) {
        echo "<div class='offer'>";
        echo "<h3>" . $row['offer_title'] . "</h3>";
        echo "<p>Discount: " . $row['discount_percent'] . "%</p>";
        echo "<p>Expiry Date: " . $row['expiry_date'] . "</p>";
        echo "</div>";
    }
}
?>


<?php
session_start();
require_once('db_connection.php');

if (isset($_POST['subscribe_newsletter'])) {
    $email = $_POST['email'];
    
    // Insert into newsletter_subscribers table
    // Then, offer a discount code
    echo "Thank you for subscribing! Use code NEWSLETTER10 for 10% off!";
}
?>


<?php
session_start();
require_once('db_connection.php');

$sql = "SELECT manual_url FROM product_manuals WHERE product_id = ?";
if ($stmt = $conn->prepare($sql)) {
    $stmt->bind_param("i", $productId);
    $stmt->execute();
    
    $result = $stmt->get_result();
    if ($row = $result->fetch_assoc()) {
        echo "<a href='" . $row['manual_url'] . "' download>Download User Manual</a>";
    }
}
?>


<?php
session_start();
require_once('db_connection.php');

$sql = "SELECT tutorial_url FROM product_videos WHERE product_id = ?";
if ($stmt = $conn->prepare($sql)) {
    $stmt->bind_param("i", $productId);
    $stmt->execute();
    
    $result = $stmt->get_result();
    if ($row = $result->fetch_assoc()) {
        echo "<iframe src='" . $row['tutorial_url'] . "' frameborder='0' allowfullscreen></iframe>";
    }
}
?>


<?php
session_start();

// Handle virtual try-on data and display the result
if (isset($_POST['try_on'])) {
    // Process the try-on request and generate a preview
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle warranty claim submission
if (isset($_POST['submit_claim'])) {
    // Insert into warranty_claims table
    echo "Your claim has been submitted successfully!";
}
?>


<?php
session_start();
require_once('db_connection.php');

$sql = "SELECT * FROM customization_options";
$result = $conn->query($sql);
while ($row = $result->fetch_assoc()) {
    echo "<div class='custom-option'>";
    echo "<h3>" . $row['option_name'] . "</h3>";
    echo "<p>Price: $" . $row['price'] . "</p>";
    echo "</div>";
}
?>


<?php
session_start();

// Process size recommendation form and display result
if (isset($_POST['recommend_size'])) {
    $height = $_POST['height'];
    $weight = $_POST['weight'];
    
    // Calculate recommended size based on inputs
    echo "Based on your height and weight, we recommend size " . $recommendedSize;
}
?>


<?php
session_start();
require_once('db_connection.php');

$sql = "SELECT tip FROM energy_tips";
$result = $conn->query($sql);
while ($row = $result->fetch_assoc()) {
    echo "<div class='energy-tip'>";
    echo "<p>" . $row['tip'] . "</p>";
    echo "</div>";
}
?>


<?php
session_start();

// Handle chat messages and display conversation
if (isset($_POST['send_message'])) {
    // Insert message into chat_messages table
    // Retrieve and display latest messages
}
?>


<?php
session_start();
require_once('db_connection.php');

$sql = "SELECT guide_url FROM installation_guides WHERE product_id = ?";
if ($stmt = $conn->prepare($sql)) {
    $stmt->bind_param("i", $productId);
    $stmt->execute();
    
    $result = $stmt->get_result();
    if ($row = $result->fetch_assoc()) {
        echo "<a href='" . $row['guide_url'] . "'>Download Installation Guide</a>";
    }
}
?>


<?php
session_start();
require_once('db_connection.php');

$sql = "SELECT * FROM maintenance_schedule WHERE product_id = ?";
if ($stmt = $conn->prepare($sql)) {
    $stmt->bind_param("i", $productId);
    $stmt->execute();
    
    $result = $stmt->get_result();
    while ($row = $result->fetch_assoc()) {
        echo "<div class='maintenance'>";
        echo "<h3>" . $row['task'] . "</h3>";
        echo "<p>Frequency: " . $row['frequency'] . "</p>";
        echo "<p>Last Completed: " . $row['last_date'] . "</p>";
        echo "</div>";
    }
}
?>


<?php
session_start();
require_once('db_connection.php');

$sql = "SELECT * FROM usage_stats WHERE product_id = ?";
if ($stmt = $conn->prepare($sql)) {
    $stmt->bind_param("i", $productId);
    $stmt->execute();
    
    $result = $stmt->get_result();
    while ($row = $result->fetch_assoc()) {
        echo "<div class='usage-stats'>";
        echo "<h3>" . $row['metric'] . "</h3>";
        echo "<p>Value: " . $row['value'] . "</p>";
        echo "</div>";
    }
}
?>


<?php
session_start();
require_once('db_connection.php');

$sql = "SELECT tip FROM usage_tips WHERE product_id = ?";
if ($stmt = $conn->prepare($sql)) {
    $stmt->bind_param("i", $productId);
    $stmt->execute();
    
    $result = $stmt->get_result();
    while ($row = $result->fetch_assoc()) {
        echo "<div class='usage-tip'>";
        echo "<p>" . $row['tip'] . "</p>";
        echo "</div>";
    }
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle compatibility check and display result
if (isset($_POST['check_compatibility'])) {
    $productId = $_POST['product_id'];
    $systemInfo = $_POST['system_info'];
    
    // Query database for compatibility data
    echo "Compatibility: " . $compatibilityResult;
}
?>


<?php
session_start();
require_once('db_connection.php');

$sql = "SELECT * FROM product_features";
$result = $conn->query($sql);
while ($row = $result->fetch_assoc()) {
    echo "<div class='feature-comparison'>";
    echo "<h3>" . $row['feature_name'] . "</h3>";
    echo "<p>Product 1: " . $row['product1_feature'] . "</p>";
    echo "<p>Product 2: " . $row['product2_feature'] . "</p>";
    echo "</div>";
}
?>


<?php
session_start();

// Handle interactive demo data and display interface
if (isset($_POST['start_demo'])) {
    // Load demo interface based on product ID
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle maintenance reminder setup and display calendar
if (isset($_POST['set_reminder'])) {
    $productId = $_POST['product_id'];
    $reminderDate = $_POST['date'];
    
    // Insert into maintenance_reminders table
    echo "Reminder set for " . $reminderDate;
}
?>


<?php
session_start();
require_once('db_connection.php');

$sql = "SELECT * FROM usage_analytics WHERE product_id = ?";
if ($stmt = $conn->prepare($sql)) {
    $stmt->bind_param("i", $productId);
    $stmt->execute();
    
    $result = $stmt->get_result();
    while ($row = $result->fetch_assoc()) {
        echo "<div class='usage-analytics'>";
        echo "<h3>" . $row['metric'] . "</h3>";
        echo "<p>Data: " . $row['data_value'] . "</p>";
        echo "</div>";
    }
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle feedback submission and display reviews
if (isset($_POST['submit_feedback'])) {
    $feedback = $_POST['feedback'];
    
    // Insert into user_feedback table
    echo "Thank you for your feedback!";
}
?>


<?php
session_start();
require_once('db_connection.php');

$sql = "SELECT * FROM forums";
$result = $conn->query($sql);
while ($row = $result->fetch_assoc()) {
    echo "<div class='forum-topic'>";
    echo "<h3>" . $row['topic_title'] . "</h3>";
    echo "<p>Posts: " . $row['post_count'] . "</p>";
    echo "</div>";
}
?>


<?php
session_start();
require_once('db_connection.php');

$sql = "SELECT * FROM user_groups";
$result = $conn->query($sql);
while ($row = $result->fetch_assoc()) {
    echo "<div class='user-group'>";
    echo "<h3>" . $row['group_name'] . "</h3>";
    echo "<p>Members: " . $row['member_count'] . "</p>";
    echo "</div>";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle profile creation and display user info
if (isset($_POST['update_profile'])) {
    $userId = $_SESSION['user_id'];
    $bio = $_POST['bio'];
    
    // Update user profile in database
    echo "Profile updated successfully!";
}
?>


<?php
session_start();
require_once('db_connection.php');

$sql = "SELECT * FROM user_achievements WHERE user_id = ?";
if ($stmt = $conn->prepare($sql)) {
    $stmt->bind_param("i", $_SESSION['user_id']);
    $stmt->execute();
    
    $result = $stmt->get_result();
    while ($row = $result->fetch_assoc()) {
        echo "<div class='achievement'>";
        echo "<h3>" . $row['achievement_name'] . "</h3>";
        echo "<p>Unlocked: " . $row['unlocked_date'] . "</p>";
        echo "</div>";
    }
}
?>


<?php
session_start();
require_once('db_connection.php');

$sql = "SELECT * FROM user_challenges";
$result = $conn->query($sql);
while ($row = $result->fetch_assoc()) {
    echo "<div class='challenge'>";
    echo "<h3>" . $row['challenge_title'] . "</h3>";
    echo "<p>Points: " . $row['points'] . "</p>";
    echo "<p>Status: " . $row['status'] . "</p>";
    echo "</div>";
}
?>


<?php
session_start();
require_once('db_connection.php');

$sql = "SELECT * FROM user_competitions";
$result = $conn->query($sql);
while ($row = $result->fetch_assoc()) {
    echo "<div class='competition'>";
    echo "<h3>" . $row['competition_title'] . "</h3>";
    echo "<p>Prize: " . $row['prize'] . "</p>";
    echo "<p>Entry Deadline: " . $row['deadline'] . "</p>";
    echo "</div>";
}
?>


<?php
session_start();
require_once('db_connection.php');

if (isset($_POST['subscribe_newsletter'])) {
    $email = $_POST['email'];
    $productId = $_POST['product_id'];
    
    // Insert into newsletter_subscribers table
    echo "Thank you for subscribing to our newsletter!";
}
?>


<?php
session_start();
require_once('db_connection.php');

$sql = "SELECT * FROM user_polls";
$result = $conn->query($sql);
while ($row = $result->fetch_assoc()) {
    echo "<div class='poll'>";
    echo "<h3>" . $row['poll_question'] . "</h3>";
    echo "<p>Options: " . implode(', ', explode(',', $row['options'])) . "</p>";
    echo "<p>Votes: " . $row['total_votes'] . "</p>";
    echo "</div>";
}
?>


<?php
session_start();
require_once('db_connection.php');

$sql = "SELECT * FROM user_quizzes";
$result = $conn->query($sql);
while ($row = $result->fetch_assoc()) {
    echo "<div class='quiz'>";
    echo "<h3>" . $row['quiz_title'] . "</h3>";
    echo "<p>Questions: " . $row['question_count'] . "</p>";
    echo "<p>Difficulty: " . $row['difficulty'] . "</p>";
    echo "</div>";
}
?>


<?php
session_start();
require_once('db_connection.php');

$sql = "SELECT * FROM user_surveys";
$result = $conn->query($sql);
while ($row = $result->fetch_assoc()) {
    echo "<div class='survey'>";
    echo "<h3>" . $row['survey_title'] . "</h3>";
    echo "<p>Questions: " . implode(', ', explode(',', $row['questions'])) . "</p>";
    echo "<p>Status: " . $row['status'] . "</p>";
    echo "</div>";
}
?>


<?php
session_start();
require_once('db_connection.php');

$sql = "SELECT * FROM user_tutorials";
$result = $conn->query($sql);
while ($row = $result->fetch_assoc()) {
    echo "<div class='tutorial'>";
    echo "<h3>" . $row['tutorial_title'] . "</h3>";
    echo "<p>Duration: " . $row['duration'] . "</p>";
    echo "<p>Level: " . $row['level'] . "</p>";
    echo "</div>";
}
?>


<?php
session_start();
require_once('db_connection.php');

$sql = "SELECT * FROM user_wiki";
$result = $conn->query($sql);
while ($row = $result->fetch_assoc()) {
    echo "<div class='wiki-entry'>";
    echo "<h3>" . $row['entry_title'] . "</h3>";
    echo "<p>Content: " . $row['content'] . "</p>";
    echo "<p>Last Updated: " . $row['last_updated'] . "</p>";
    echo "</div>";
}
?>


<?php
session_start();
require_once('db_connection.php');

$sql = "SELECT * FROM user_badges WHERE user_id = ?";
if ($stmt = $conn->prepare($sql)) {
    $stmt->bind_param("i", $_SESSION['user_id']);
    $stmt->execute();
    
    $result = $stmt->get_result();
    while ($row = $result->fetch_assoc()) {
        echo "<div class='badge'>";
        echo "<h3>" . $row['badge_name'] . "</h3>";
        echo "<p>Criteria: " . $row['criteria'] . "</p>";
        echo "<p>Awarded On: " . $row['awarded_date'] . "</p>";
        echo "</div>";
    }
}
?>


<?php
session_start();
require_once('db_connection.php');

$sql = "SELECT * FROM user_certifications WHERE user_id = ?";
if ($stmt = $conn->prepare($sql)) {
    $stmt->bind_param("i", $_SESSION['user_id']);
    $stmt->execute();
    
    $result = $stmt->get_result();
    while ($row = $result->fetch_assoc()) {
        echo "<div class='certification'>";
        echo "<h3>" . $row['cert_name'] . "</h3>";
        echo "<p>Level: " . $row['level'] . "</p>";
        echo "<p>Date: " . $row['date'] . "</p>";
        echo "</div>";
    }
}
?>


<?php
session_start();
require_once('db_connection.php');

$sql = "SELECT * FROM user_competencies WHERE user_id = ?";
if ($stmt = $conn->prepare($sql)) {
    $stmt->bind_param("i", $_SESSION['user_id']);
    $stmt->execute();
    
    $result = $stmt->get_result();
    while ($row = $result->fetch_assoc()) {
        echo "<div class='competency'>";
        echo "<h3>" . $row['competency_name'] . "</h3>";
        echo "<p>Level: " . $row['level'] . "</p>";
        echo "<p>Last Updated: " . $row['last_updated'] . "</p>";
        echo "</div>";
    }
}
?>


<?php
session_start();
require_once('db_connection.php');

$sql = "SELECT * FROM user_experience WHERE user_id = ?";
if ($stmt = $conn->prepare($sql)) {
    $stmt->bind_param("i", $_SESSION['user_id']);
    $stmt->execute();
    
    $result = $stmt->get_result();
    while ($row = $result->fetch_assoc()) {
        echo "<div class='experience'>";
        echo "<h3>" . $row['experience_points'] . " XP</h3>";
        echo "<p>Level: " . $row['level'] . "</p>";
        echo "<p>Last Updated: " . $row['last_updated'] . "</p>";
        echo "</div>";
    }
}
?>


<?php
session_start();
require_once('db_connection.php');

$sql = "SELECT * FROM user_friends WHERE user_id = ?";
if ($stmt = $conn->prepare($sql)) {
    $stmt->bind_param("i", $_SESSION['user_id']);
    $stmt->execute();
    
    $result = $stmt->get_result();
    while ($row = $result->fetch_assoc()) {
        echo "<div class='friend'>";
        echo "<h3>" . $row['friend_name'] . "</h3>";
        echo "<p>Status: " . $row['status'] . "</p>";
        echo "<p>Since: " . $row['since_date'] . "</p>";
        echo "</div>";
    }
}
?>


<?php
session_start();
require_once('db_connection.php');

$sql = "SELECT * FROM user_follows WHERE follower_id = ?";
if ($stmt = $conn->prepare($sql)) {
    $stmt->bind_param("i", $_SESSION['user_id']);
    $stmt->execute();
    
    $result = $stmt->get_result();
    while ($row = $result->fetch_assoc()) {
        echo "<div class='follow'>";
        echo "<h3>" . $row['following_name'] . "</h3>";
        echo "<p>Followed On: " . $row['followed_date'] . "</p>";
        echo "</div>";
    }
}
?>


<?php
session_start();
require_once('db_connection.php');

$sql = "SELECT * FROM user_notifications WHERE user_id = ?";
if ($stmt = $conn->prepare($sql)) {
    $stmt->bind_param("i", $_SESSION['user_id']);
    $stmt->execute();
    
    $result = $stmt->get_result();
    while ($row = $result->fetch_assoc()) {
        echo "<div class='notification'>";
        echo "<h3>" . $row['notification_title'] . "</h3>";
        echo "<p>Message: " . $row['message'] . "</p>";
        echo "<p>Date: " . $row['date'] . "</p>";
        echo "</div>";
    }
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle preference updates
if (isset($_POST['update_preferences'])) {
    $userId = $_SESSION['user_id'];
    $preferences = serialize($_POST);
    
    // Update user preferences in database
    echo "Preferences updated successfully!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle privacy setting updates
if (isset($_POST['update_privacy'])) {
    $userId = $_SESSION['user_id'];
    $privacySettings = serialize($_POST);
    
    // Update user privacy settings in database
    echo "Privacy settings updated successfully!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle security setting updates
if (isset($_POST['update_security'])) {
    $userId = $_SESSION['user_id'];
    $securitySettings = serialize($_POST);
    
    // Update user security settings in database
    echo "Security settings updated successfully!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle ticket submission
if (isset($_POST['submit_ticket'])) {
    $userId = $_SESSION['user_id'];
    $ticketContent = $_POST['content'];
    
    // Insert into support_tickets table
    echo "Thank you for submitting your ticket!";
}
?>


<?php
session_start();
require_once('db_connection.php');

$sql = "SELECT * FROM user_activity WHERE user_id = ?";
if ($stmt = $conn->prepare($sql)) {
    $stmt->bind_param("i", $_SESSION['user_id']);
    $stmt->execute();
    
    $result = $stmt->get_result();
    while ($row = $result->fetch_assoc()) {
        echo "<div class='activity'>";
        echo "<h3>" . $row['action'] . "</h3>";
        echo "<p>Date: " . $row['date'] . "</p>";
        echo "<p>Details: " . $row['details'] . "</p>";
        echo "</div>";
    }
}
?>


<?php
session_start();
require_once('db_connection.php');

$sql = "SELECT * FROM user_purchases WHERE user_id = ?";
if ($stmt = $conn->prepare($sql)) {
    $stmt->bind_param("i", $_SESSION['user_id']);
    $stmt->execute();
    
    $result = $stmt->get_result();
    while ($row = $result->fetch_assoc()) {
        echo "<div class='purchase'>";
        echo "<h3>" . $row['product_name'] . "</h3>";
        echo "<p>Date: " . $row['purchase_date'] . "</p>";
        echo "<p>Amount: $" . number_format($row['amount'], 2) . "</p>";
        echo "</div>";
    }
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle subscription updates
if (isset($_POST['manage_subscription'])) {
    $userId = $_SESSION['user_id'];
    $subscriptionStatus = $_POST['status'];
    
    // Update subscription status in database
    echo "Subscription updated successfully!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle feedback submission
if (isset($_POST['submit_feedback'])) {
    $userId = $_SESSION['user_id'];
    $feedbackContent = $_POST['content'];
    
    // Insert into user_feedback table
    echo "Thank you for your feedback!";
}
?>


<?php
session_start();
require_once('db_connection.php');

$sql = "SELECT * FROM user_polls";
$result = $conn->query($sql);
while ($row = $result->fetch_assoc()) {
    echo "<div class='poll'>";
    echo "<h3>" . $row['question'] . "</h3>";
    echo "<p>Options: " . implode(", ", unserialize($row['options'])) . "</p>";
    echo "<p>Ends On: " . $row['end_date'] . "</p>";
    echo "</div>";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle newsletter subscription updates
if (isset($_POST['manage_newsletter'])) {
    $userId = $_SESSION['user_id'];
    $subscriptionStatus = $_POST['status'];
    
    // Update newsletter subscription in database
    echo "Newsletter settings updated successfully!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle referral submissions
if (isset($_POST['refer_friend'])) {
    $userId = $_SESSION['user_id'];
    $friendEmail = $_POST['email'];
    
    // Insert into referrals table
    echo "Thank you for referring your friend!";
}
?>


<?php
session_start();
require_once('db_connection.php');

$sql = "SELECT * FROM user_loyalty WHERE user_id = ?";
if ($stmt = $conn->prepare($sql)) {
    $stmt->bind_param("i", $_SESSION['user_id']);
    $stmt->execute();
    
    $result = $stmt->get_result();
    while ($row = $result->fetch_assoc()) {
        echo "<div class='loyalty'>";
        echo "<h3>" . $row['loyalty_points'] . " Points</h3>";
        echo "<p>Rank: " . $row['rank'] . "</p>";
        echo "<p>Last Updated: " . $row['last_updated'] . "</p>";
        echo "</div>";
    }
}
?>


<?php
session_start();
require_once('db_connection.php');

$sql = "SELECT * FROM user_achievements WHERE user_id = ?";
if ($stmt = $conn->prepare($sql)) {
    $stmt->bind_param("i", $_SESSION['user_id']);
    $stmt->execute();
    
    $result = $stmt->get_result();
    while ($row = $result->fetch_assoc()) {
        echo "<div class='achievement'>";
        echo "<h3>" . $row['achievement_name'] . "</h3>";
        echo "<p>Description: " . $row['description'] . "</p>";
        echo "<p>Achieved On: " . $row['achieved_date'] . "</p>";
        echo "</div>";
    }
}
?>


<?php
session_start();
require_once('db_connection.php');

$sql = "SELECT * FROM user_wiki_contributions WHERE user_id = ?";
if ($stmt = $conn->prepare($sql)) {
    $stmt->bind_param("i", $_SESSION['user_id']);
    $stmt->execute();
    
    $result = $stmt->get_result();
    while ($row = $result->fetch_assoc()) {
        echo "<div class='wiki-contribution'>";
        echo "<h3>" . $row['entry_title'] . "</h3>";
        echo "<p>Contribution: " . $row['contribution'] . "</p>";
        echo "<p>Date: " . $row['date'] . "</p>";
        echo "</div>";
    }
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle post creation
if (isset($_POST['submit_post'])) {
    $userId = $_SESSION['user_id'];
    $forumId = $_POST['forum_id'];
    $postContent = $_POST['content'];
    
    // Insert into forum_posts table
    echo "Post submitted successfully!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle reply submission
if (isset($_POST['submit_reply'])) {
    $userId = $_SESSION['user_id'];
    $postId = $_POST['post_id'];
    $replyContent = $_POST['content'];
    
    // Insert into forum_replies table
    echo "Reply submitted successfully!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle moderation actions
if (isset($_POST['moderate'])) {
    $userId = $_SESSION['user_id'];
    $action = $_POST['action'];
    $targetId = $_POST['target_id'];
    
    // Execute moderation action in database
    echo "Moderation action completed successfully!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle poll voting
if (isset($_POST['vote_poll'])) {
    $userId = $_SESSION['user_id'];
    $pollId = $_POST['poll_id'];
    $optionIndex = $_POST['option'];
    
    // Insert vote into user_votes table
    echo "Thank you for voting!";
}
?>


<?php
session_start();
require_once('db_connection.php');

$sql = "SELECT * FROM user_surveys WHERE user_id = ?";
if ($stmt = $conn->prepare($sql)) {
    $stmt->bind_param("i", $_SESSION['user_id']);
    $stmt->execute();
    
    $result = $stmt->get_result();
    while ($row = $result->fetch_assoc()) {
        echo "<div class='survey'>";
        echo "<h3>" . $row['survey_title'] . "</h3>";
        echo "<p>Status: " . $row['status'] . "</p>";
        echo "<p>Completed On: " . $row['completed_date'] . "</p>";
        echo "</div>";
    }
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle competition entry submission
if (isset($_POST['submit_entry'])) {
    $userId = $_SESSION['user_id'];
    $competitionId = $_POST['competition_id'];
    $entryContent = $_POST['content'];
    
    // Insert into competition_entries table
    echo "Thank you for your entry!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle file uploads
if (isset($_FILES['file'])) {
    $userId = $_SESSION['user_id'];
    $filePath = 'uploads/' . basename($_FILES['file']['name']);
    
    // Move uploaded file to server
    if (move_uploaded_file($_FILES['file']['tmp_name'], $filePath)) {
        // Insert into user_content table
        echo "File uploaded successfully!";
    } else {
        echo "Error uploading file.";
    }
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle profile updates
if (isset($_POST['update_profile'])) {
    $userId = $_SESSION['user_id'];
    $profileData = $_POST;
    
    // Update user_profile table
    echo "Profile updated successfully!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle privacy setting updates
if (isset($_POST['update_privacy'])) {
    $userId = $_SESSION['user_id'];
    $privacySettings = $_POST;
    
    // Update user_privacy table
    echo "Privacy settings updated successfully!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle language和地区设置更新
if (isset($_POST['update_settings'])) {
    $userId = $_SESSION['user_id'];
    $language = $_POST['language'];
    $region = $_POST['region'];
    
    // Update user_settings table
    echo "Settings updated successfully!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle notification preference updates
if (isset($_POST['update_notifications'])) {
    $userId = $_SESSION['user_id'];
    $preferences = $_POST;
    
    // Update user_notifications table
    echo "Notification preferences updated successfully!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle email preference updates
if (isset($_POST['update_emails'])) {
    $userId = $_SESSION['user_id'];
    $emailPreferences = $_POST;
    
    // Update user_email_preferences table
    echo "Email preferences updated successfully!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle mobile notification settings updates
if (isset($_POST['update_mobile'])) {
    $userId = $_SESSION['user_id'];
    $mobileSettings = $_POST;
    
    // Update user_mobile_settings table
    echo "Mobile notification settings updated successfully!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle desktop notification settings updates
if (isset($_POST['update_desktop'])) {
    $userId = $_SESSION['user_id'];
    $desktopSettings = $_POST;
    
    // Update user_desktop_notifications table
    echo "Desktop notification settings updated successfully!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle social media integration updates
if (isset($_POST['update_social'])) {
    $userId = $_SESSION['user_id'];
    $socialSettings = $_POST;
    
    // Update user_social_settings table
    echo "Social media settings updated successfully!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle third-party app connections updates
if (isset($_POST['update_apps'])) {
    $userId = $_SESSION['user_id'];
    $appConnections = $_POST;
    
    // Update user_app_connections table
    echo "App connections updated successfully!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle API access updates
if (isset($_POST['update_api'])) {
    $userId = $_SESSION['user_id'];
    $apiSettings = $_POST;
    
    // Update user_api_settings table
    echo "API settings updated successfully!";
}
?>


<?php
session_start();
require_once('db_connection.php');

$sql = "SELECT * FROM user_analytics WHERE user_id = ?";
if ($stmt = $conn->prepare($sql)) {
    $stmt->bind_param("i", $_SESSION['user_id']);
    $stmt->execute();
    
    $result = $stmt->get_result();
    while ($row = $result->fetch_assoc()) {
        echo "<div class='analytics'>";
        echo "<h3>" . $row['metric'] . "</h3>";
        echo "<p>Value: " . $row['value'] . "</p>";
        echo "<p>Date: " . $row['date'] . "</p>";
        echo "</div>";
    }
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle ticket creation
if (isset($_POST['submit_ticket'])) {
    $userId = $_SESSION['user_id'];
    $ticketContent = $_POST['content'];
    
    // Insert into support_tickets table
    echo "Ticket submitted successfully!";
}
?>


<?php
session_start();
require_once('db_connection.php');

$sql = "SELECT * FROM knowledge_base";
$result = $conn->query($sql);
while ($row = $result->fetch_assoc()) {
    echo "<div class='article'>";
    echo "<h3>" . $row['title'] . "</h3>";
    echo "<p>Content: " . $row['content'] . "</p>";
    echo "<p>Date Published: " . $row['published_date'] . "</p>";
    echo "</div>";
}
?>


<?php
session_start();
require_once('db_connection.php');

$sql = "SELECT * FROM video_tutorials";
$result = $conn->query($sql);
while ($row = $result->fetch_assoc()) {
    echo "<div class='tutorial'>";
    echo "<h3>" . $row['title'] . "</h3>";
    echo "<p>Video ID: " . $row['video_id'] . "</p>";
    echo "<p>Description: " . $row['description'] . "</p>";
    echo "</div>";
}
?>


<?php
session_start();
require_once('db_connection.php');

$sql = "SELECT * FROM product_documentation";
$result = $conn->query($sql);
while ($row = $result->fetch_assoc()) {
    echo "<div class='document'>";
    echo "<h3>" . $row['title'] . "</h3>";
    echo "<p>Content: " . $row['content'] . "</p>";
    echo "<p>Date Published: " . $row['published_date'] . "</p>";
    echo "</div>";
}
?>


<?php
session_start();
require_once('db_connection.php');

$sql = "SELECT * FROM faq";
$result = $conn->query($sql);
while ($row = $result->fetch_assoc()) {
    echo "<div class='faq'>";
    echo "<h3>" . $row['question'] . "</h3>";
    echo "<p>Answer: " . $row['answer'] . "</p>";
    echo "</div>";
}
?>


<?php
session_start();
require_once('db_connection.php');

$sql = "SELECT * FROM community_guidelines";
$result = $conn->query($sql);
while ($row = $result->fetch_assoc()) {
    echo "<div class='guideline'>";
    echo "<h3>" . $row['title'] . "</h3>";
    echo "<p>Content: " . $row['content'] . "</p>";
    echo "</div>";
}
?>


<?php
session_start();
require_once('db_connection.php');

$sql = "SELECT * FROM terms_of_service";
$result = $conn->query($sql);
while ($row = $result->fetch_assoc()) {
    echo "<div class='terms'>";
    echo "<h3>" . $row['title'] . "</h3>";
    echo "<p>Content: " . $row['content'] . "</p>";
    echo "<p>Last Updated: " . $row['updated_date'] . "</p>";
    echo "</div>";
}
?>


<?php
session_start();
require_once('db_connection.php');

$sql = "SELECT * FROM privacy_policy";
$result = $conn->query($sql);
while ($row = $result->fetch_assoc()) {
    echo "<div class='policy'>";
    echo "<h3>" . $row['title'] . "</h3>";
    echo "<p>Content: " . $row['content'] . "</p>";
    echo "<p>Last Updated: " . $row['updated_date'] . "</p>";
    echo "</div>";
}
?>


<?php
session_start();
require_once('db_connection.php');

$sql = "SELECT * FROM legal_notices";
$result = $conn->query($sql);
while ($row = $result->fetch_assoc()) {
    echo "<div class='notice'>";
    echo "<h3>" . $row['title'] . "</h3>";
    echo "<p>Content: " . $row['content'] . "</p>";
    echo "<p>Date Issued: " . $row['issued_date'] . "</p>";
    echo "</div>";
}
?>


<?php
session_start();
require_once('db_connection.php');

$sql = "SELECT * FROM contact_info";
$result = $conn->query($sql);
while ($row = $result->fetch_assoc()) {
    echo "<div class='contact'>";
    echo "<h3>" . $row['type'] . "</h3>";
    echo "<p>Contact: " . $row['info'] . "</p>";
    echo "</div>";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle feedback submission
if (isset($_POST['submit_feedback'])) {
    $userId = $_SESSION['user_id'];
    $feedbackContent = $_POST['content'];
    
    // Insert into user_feedback table
    echo "Feedback submitted successfully!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle bug report submission
if (isset($_POST['submit_bug'])) {
    $userId = $_SESSION['user_id'];
    $bugDescription = $_POST['description'];
    
    // Insert into bug_reports table
    echo "Bug reported successfully!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle feature request submission
if (isset($_POST['submit_feature'])) {
    $userId = $_SESSION['user_id'];
    $featureDescription = $_POST['description'];
    
    // Insert into feature_requests table
    echo "Feature request submitted successfully!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle beta testing sign-up
if (isset($_POST['signup_beta'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into beta_testers table
    echo "Thank you for signing up for the beta program!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle referral submission
if (isset($_POST['submit_referral'])) {
    $userId = $_SESSION['user_id'];
    $referredEmail = $_POST['email'];
    
    // Insert into referrals table
    echo "Referral submitted successfully!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle loyalty points update
if (isset($_POST['update_loyalty'])) {
    $userId = $_SESSION['user_id'];
    $pointsEarned = $_POST['points'];
    
    // Update user_loyalty table
    echo "Points updated successfully!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle achievement unlocking
if (isset($_POST['unlock_achievement'])) {
    $userId = $_SESSION['user_id'];
    $achievementId = $_POST['id'];
    
    // Insert into user_achievements table
    echo "Achievement unlocked!";
}
?>


<?php
session_start();
require_once('db_connection.php');

$sql = "SELECT * FROM leaderboard ORDER BY score DESC LIMIT 10";
$result = $conn->query($sql);
while ($row = $result->fetch_assoc()) {
    echo "<div class='leader'>";
    echo "<h3>" . $row['username'] . "</h3>";
    echo "<p>Score: " . $row['score'] . "</p>";
    echo "</div>";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle competition entry
if (isset($_POST['enter_competition'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into competitions table
    echo "You have entered the competition!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle event creation
if (isset($_POST['create_event'])) {
    $userId = $_SESSION['user_id'];
    $eventDetails = $_POST;
    
    // Insert into user_events table
    echo "Event created successfully!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle poll voting
if (isset($_POST['vote_poll'])) {
    $userId = $_SESSION['user_id'];
    $pollId = $_POST['poll_id'];
    $option = $_POST['option'];
    
    // Insert into poll_votes table
    echo "Vote recorded successfully!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle quiz submission
if (isset($_POST['submit_quiz'])) {
    $userId = $_SESSION['user_id'];
    $quizResults = $_POST;
    
    // Insert into user_quizzes table
    echo "Quiz submitted successfully!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle trivia participation
if (isset($_POST['answer_trivia'])) {
    $userId = $_SESSION['user_id'];
    $triviaId = $_POST['id'];
    $answer = $_POST['answer'];
    
    // Insert into trivia_responses table
    echo "Answer submitted!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle game interaction
if (isset($_POST['play_game'])) {
    $userId = $_SESSION['user_id'];
    $gameId = $_POST['id'];
    
    // Insert into user_games table
    echo "Game started!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle currency transactions
if (isset($_POST['purchase_currency'])) {
    $userId = $_SESSION['user_id'];
    $amount = $_POST['amount'];
    
    // Update user_currency table
    echo "Transaction completed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle purchase request
if (isset($_POST['make_purchase'])) {
    $userId = $_SESSION['user_id'];
    $productId = $_POST['id'];
    
    // Insert into purchases table
    echo "Purchase successful!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle subscription sign-up
if (isset($_POST['subscribe'])) {
    $userId = $_SESSION['user_id'];
    $subscriptionType = $_POST['type'];
    
    // Insert into subscriptions table
    echo "Thank you for subscribing!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle payment submission
if (isset($_POST['process_payment'])) {
    $userId = $_SESSION['user_id'];
    $paymentDetails = $_POST;
    
    // Insert into payments table
    echo "Payment processed successfully!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle refund request
if (isset($_POST['request_refund'])) {
    $userId = $_SESSION['user_id'];
    $transactionId = $_POST['id'];
    
    // Insert into refund_requests table
    echo "Refund request submitted!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle dispute submission
if (isset($_POST['submit_dispute'])) {
    $userId = $_SESSION['user_id'];
    $disputeDetails = $_POST;
    
    // Insert into disputes table
    echo "Dispute submitted!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle escrow transaction
if (isset($_POST['escrow_transaction'])) {
    $userId = $_SESSION['user_id'];
    $transactionDetails = $_POST;
    
    // Insert into escrow_transactions table
    echo "Transaction placed in escrow!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle insurance application
if (isset($_POST['apply_insurance'])) {
    $userId = $_SESSION['user_id'];
    $insuranceType = $_POST['type'];
    
    // Insert into insurance_applications table
    echo "Insurance applied!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle risk assessment
if (isset($_POST['assess_risk'])) {
    $userId = $_SESSION['user_id'];
    $riskDetails = $_POST;
    
    // Insert into risk_assessment table
    echo "Risk assessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle security audit request
if (isset($_POST['request_audit'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into audit_requests table
    echo "Audit requested!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle compliance check
if (isset($_POST['check_compliance'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into compliance_checks table
    echo "Compliance check initiated!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle legal consultation request
if (isset($_POST['request_consultation'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into legal_requests table
    echo "Consultation requested!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle arbitration submission
if (isset($_POST['submit_arbitration'])) {
    $userId = $_SESSION['user_id'];
    $disputeDetails = $_POST;
    
    // Insert into arbitrations table
    echo "Arbitration submitted!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle mediation request
if (isset($_POST['request_mediator'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into mediator_requests table
    echo "Mediation requested!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle notary request
if (isset($_POST['request_notary'])) {
    $userId = $_SESSION['user_id'];
    $documentId = $_POST['id'];
    
    // Insert into notary_requests table
    echo "Notary service requested!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle document verification request
if (isset($_POST['verify_document'])) {
    $userId = $_SESSION['user_id'];
    $documentId = $_POST['id'];
    
    // Insert into document_verification table
    echo "Document verification requested!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle background check request
if (isset($_POST['request_background'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into background_checks table
    echo "Background check requested!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle credit score assessment request
if (isset($_POST['assess_credit'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into credit_assessment table
    echo "Credit assessment requested!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle financial plan creation
if (isset($_POST['create_plan'])) {
    $userId = $_SESSION['user_id'];
    $planDetails = $_POST;
    
    // Insert into financial_plans table
    echo "Financial plan created!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle investment portfolio request
if (isset($_POST['manage_investment'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into investment_management table
    echo "Investment management initiated!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle retirement plan submission
if (isset($_POST['submit_retirement'])) {
    $userId = $_SESSION['user_id'];
    $planDetails = $_POST;
    
    // Insert into retirement_plans table
    echo "Retirement plan submitted!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle insurance policy update
if (isset($_POST['update_policy'])) {
    $userId = $_SESSION['user_id'];
    $policyDetails = $_POST;
    
    // Insert into insurance_management table
    echo "Policy updated!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle tax filing request
if (isset($_POST['file_taxes'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into tax_filing_requests table
    echo "Tax filing requested!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle document drafting request
if (isset($_POST['draft_document'])) {
    $userId = $_SESSION['user_id'];
    $documentType = $_POST['type'];
    
    // Insert into legal_documents table
    echo "Document drafting requested!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle identity verification request
if (isset($_POST['verify_identity'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into identity_verification table
    echo "Identity verification requested!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle background screening request
if (isset($_POST['screen_background'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into background_screening table
    echo "Background screening requested!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle credit monitoring sign-up
if (isset($_POST['monitor_credit'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into credit_monitoring table
    echo "Credit monitoring initiated!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle debt management request
if (isset($_POST['manage_debt'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into debt_management table
    echo "Debt management requested!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle budget creation request
if (isset($_POST['create_budget'])) {
    $userId = $_SESSION['user_id'];
    $budgetDetails = $_POST;
    
    // Insert into budgets table
    echo "Budget created!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle expense tracking request
if (isset($_POST['track_expenses'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into expense_tracking table
    echo "Expense tracking initiated!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle report generation request
if (isset($_POST['generate_report'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into financial_reports table
    echo "Report generation requested!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle portfolio analysis request
if (isset($_POST['analyze_portfolio'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into portfolio_analysis table
    echo "Portfolio analysis requested!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle risk assessment request
if (isset($_POST['assess_financial_risk'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into financial_risk_assessment table
    echo "Financial risk assessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle loan application submission
if (isset($_POST['apply_loan'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into loan_applications table
    echo "Loan application submitted!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle mortgage calculator request
if (isset($_POST['calculate_mortgage'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into mortgage_calculations table
    echo "Mortgage calculation requested!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle advisor request
if (isset($_POST['request_advisor'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into investment_advisors table
    echo "Advisor requested!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle retirement calculator request
if (isset($_POST['calculate_retirement'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into retirement_calculations table
    echo "Retirement calculation requested!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle goal setting request
if (isset($_POST['set_goal'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into financial_goals table
    echo "Goal set!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle emergency fund calculation request
if (isset($_POST['calculate_emergency'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into emergency_fund_calculations table
    echo "Emergency fund calculation requested!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle debt payoff request
if (isset($_POST['plan_payoff'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into debt_payoff_plans table
    echo "Debt payoff plan created!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle credit card management request
if (isset($_POST['manage_credit'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into credit_card_management table
    echo "Credit card management initiated!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle refinancing request
if (isset($_POST['request_refinance'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into loan_refinancing table
    echo "Refinancing requested!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle savings goal request
if (isset($_POST['set_saving_goal'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into savings_goals table
    echo "Savings goal set!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle portfolio tracking request
if (isset($_POST['track_investments'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into investment_tracking table
    echo "Investment tracking initiated!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle news subscription request
if (isset($_POST['subscribe_news'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into financial_news_subscriptions table
    echo "News updates subscribed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle market analysis request
if (isset($_POST['analyze_market'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into market_analysis table
    echo "Market analysis requested!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle tax planning request
if (isset($_POST['plan_taxes'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into tax_planning_assistance table
    echo "Tax planning requested!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle estate planning request
if (isset($_POST['plan_estate'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into estate_planning table
    echo "Estate planning initiated!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle insurance assessment request
if (isset($_POST['assess_insurance'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into insurance_assessment table
    echo "Insurance needs assessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle resource request
if (isset($_POST['request_resource'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into financial_literacy_resources table
    echo "Resource requested!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle challenge participation request
if (isset($_POST['participate_challenge'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into budgeting_challenges table
    echo "Challenge participation requested!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle expense categorization request
if (isset($_POST['categorize_expenses'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into expense_categorization table
    echo "Expenses categorized!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle savings calculation request
if (isset($_POST['calculate_savings'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into savings_calculations table
    echo "Savings calculation requested!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle risk tolerance request
if (isset($_POST['take_quiz'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into risk_tolerance_quizzes table
    echo "Risk tolerance quiz taken!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle retirement strategy request
if (isset($_POST['plan_retirement'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into retirement_investment_strategies table
    echo "Retirement investment strategy planned!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle wellness program request
if (isset($_POST['join_program'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into financial_wellness_programs table
    echo "Financial wellness program joined!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle reminder setup request
if (isset($_POST['set_reminder'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into bill_payment_reminders table
    echo "Bill payment reminder set!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle emergency plan request
if (isset($_POST['plan_emergency'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into financial_emergency_plans table
    echo "Emergency plan created!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle dashboard access request
if (isset($_POST['access_dashboard'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into investment_dashboards table
    echo "Dashboard accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle snowball calculation request
if (isset($_POST['calculate_snowball'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into debt_snowball_calculations table
    echo "Debt snowball calculated!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle progress report request
if (isset($_POST['generate_report'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into financial_progress_reports table
    echo "Progress report generated!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle tax filing request
if (isset($_POST['file_taxes'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into tax_filing_assistance table
    echo "Tax filing assistance requested!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle webinar registration request
if (isset($_POST['register_webinar'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into investment_webinars table
    echo "Webinar registration completed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle software access request
if (isset($_POST['access_software'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into financial_planning_software table
    echo "Software accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle improvement plan request
if (isset($_POST['improve_credit'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into credit_improvement_plans table
    echo "Credit score improvement plan created!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle calculator suite access request
if (isset($_POST['access_calculators'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into financial_calculator_suites table
    echo "Calculator suite accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle report request
if (isset($_POST['request_report'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into investment_strategy_reports table
    echo "Strategy report requested!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle seminar registration request
if (isset($_POST['register_seminar'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into financial_planning_seminars table
    echo "Seminar registration completed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle tool access request
if (isset($_POST['access_tool'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into retirement_planning_tools table
    echo "Retirement planning tool accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle risk management request
if (isset($_POST['manage_risk'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into investment_risk_management table
    echo "Risk management implemented!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle planner access request
if (isset($_POST['access_planner'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into financial_freedom_planners table
    echo "Financial freedom planner accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle app access request
if (isset($_POST['access_app'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into bill_tracking_applications table
    echo "Bill tracking application accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle repayment plan request
if (isset($_POST['plan_repayment'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into debt_repayment_planners table
    echo "Debt repayment plan created!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle security audit request
if (isset($_POST['audit_security'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into financial_security_audits table
    echo "Security audit conducted!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle portfolio review request
if (isset($_POST['review_portfolio'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into investment_portfolio_reviews table
    echo "Portfolio review completed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle platform access request
if (isset($_POST['access_platform'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into financial_education_platforms table
    echo "Education platform accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle calculator access request
if (isset($_POST['access_calculator'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into emergency_fund_calculators table
    echo "Emergency fund calculator accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle analysis request
if (isset($_POST['analyze_horizon'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into investment_horizon_analyses table
    echo "Horizon analysis conducted!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle assistant access request
if (isset($_POST['access_assistant'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into financial_goal_setting_assistants table
    echo "Goal setting assistant accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle report request
if (isset($_POST['request_report'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into investment_market_trends_reports table
    echo "Market trends report requested!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle risk assessment request
if (isset($_POST['assess_risk'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into financial_risk_assessments table
    echo "Risk assessment completed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle strategy request
if (isset($_POST['request_strategy'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into investment_diversification_strategies table
    echo "Diversification strategy requested!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle app download request
if (isset($_POST['download_app'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into financial_planning_mobile_apps table
    echo "Mobile app downloaded!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle tracker access request
if (isset($_POST['access_tracker'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into investment_performance_trackers table
    echo "Performance tracker accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle certification request
if (isset($_POST['request_certification'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into financial_literacy_certifications table
    echo "Certification requested!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle automation setup request
if (isset($_POST['set_up_automation'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into bill_payment_automations table
    echo "Bill payment automation set up!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle analysis request
if (isset($_POST['analyze_sentiment'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into investment_sentiment_analyses table
    echo "Sentiment analysis conducted!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle prediction request
if (isset($_POST['predict_achievement'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into financial_goal_predictors table
    echo "Goal achievement predicted!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle tool access request
if (isset($_POST['access_tool'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into investment_risk_assessment_tools table
    echo "Risk assessment tool accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle chatbot access request
if (isset($_POST['access_chatbot'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into financial_planning_chatbots table
    echo "Chatbot accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle tool access request
if (isset($_POST['access_tool'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into emergency_fund_management_tools table
    echo "Emergency fund management accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle optimization request
if (isset($_POST['optimize_strategy'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into investment_strategy_optimizers table
    echo "Strategy optimized!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle planner access request
if (isset($_POST['access_planner'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into financial_security_planners table
    echo "Security planner accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle calculator access request
if (isset($_POST['access_calculator'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into investment_risk_tolerance_calculators table
    echo "Risk tolerance calculator accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle dashboard access request
if (isset($_POST['access_dashboard'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into financial_wellness_dashboards table
    echo "Wellness dashboard accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle calculator access request
if (isset($_POST['access_calculator'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into debt_snowball_method_calculators table
    echo "Debt snowball calculator accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle assistant access request
if (isset($_POST['access_assistant'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into investment_portfolio_diversification_assistants table
    echo "Diversification assistant accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle retreat registration request
if (isset($_POST['register_retreat'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into financial_planning_retreats table
    echo "Retreat registration completed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle model access request
if (isset($_POST['access_model'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into investment_market_prediction_models table
    echo "Market prediction model accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle seminar registration request
if (isset($_POST['register_seminar'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into financial_risk_management_seminars table
    echo "Seminar registration completed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle tracker access request
if (isset($_POST['access_tracker'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into investment_sentiment_trackers table
    echo "Sentiment tracker accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle report request
if (isset($_POST['request_report'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into financial_security_audit_reports table
    echo "Security audit report requested!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle plan access request
if (isset($_POST['access_plan'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into investment_risk_management_plans table
    echo "Risk management plan accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle strategy access request
if (isset($_POST['access_strategy'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into emergency_fund_investment_strategies table
    echo "Emergency fund strategy accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle monitor access request
if (isset($_POST['access_monitor'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into financial_goal_progress_monitors table
    echo "Goal progress monitor accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle accelerator access request
if (isset($_POST['access_accelerator'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into debt_repayment_accelerators table
    echo "Debt repayment accelerator accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle analyzer access request
if (isset($_POST['access_analyzer'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into investment_performance_analyzers table
    echo "Performance analyzer accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle checkup request
if (isset($_POST['request_checkup'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into financial_security_checkups table
    echo "Security checkup requested!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle plan access request
if (isset($_POST['access_plan'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into investment_risk_mitigation_plans table
    echo "Risk mitigation plan accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle calculator access request
if (isset($_POST['access_calculator'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into emergency_fund_growth_calculators table
    echo "Emergency fund growth calculator accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle retreat registration request
if (isset($_POST['register_retreat'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into financial_wellness_retreats table
    echo "Wellness retreat registration completed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle tool access request
if (isset($_POST['access_tool'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into investment_portfolio_rebalancing_tools table
    echo "Portfolio rebalancing tool accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle webinar registration request
if (isset($_POST['register_webinar'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into financial_planning_webinar_series table
    echo "Webinar series registration completed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle test access request
if (isset($_POST['access_test'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into investment_strategy_stress_tests table
    echo "Strategy stress test accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle chatbot access request
if (isset($_POST['access_chatbot'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into financial_risk_management_chatbots table
    echo "Risk management chatbot accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle calculator access request
if (isset($_POST['access_calculator'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into emergency_fund_accessibility_calculators table
    echo "Emergency fund accessibility calculator accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle calculator access request
if (isset($_POST['access_calculator'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into investment_risk_exposure_calculators table
    echo "Risk exposure calculator accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle calculator access request
if (isset($_POST['access_calculator'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into financial_security_score_calculators table
    echo "Security score calculator accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle guide access request
if (isset($_POST['access_guide'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into debt_repayment_strategy_guides table
    echo "Debt repayment strategy guide accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle tool access request
if (isset($_POST['access_tool'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into investment_portfolio_optimization_tools table
    echo "Portfolio optimization tool accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle app download request
if (isset($_POST['download_app'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into financial_planning_mobile_apps table
    echo "Mobile app downloaded!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle survey access request
if (isset($_POST['access_survey'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into investment_risk_tolerance_surveys table
    echo "Risk tolerance survey accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle calculator access request
if (isset($_POST['access_calculator'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into emergency_fund_investment_calculators table
    echo "Emergency fund investment calculator accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle checklist access request
if (isset($_POST['access_checklist'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into financial_security_checklists table
    echo "Security checklist accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle dashboard access request
if (isset($_POST['access_dashboard'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into investment_risk_management_dashboards table
    echo "Risk management dashboard accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle tracker access request
if (isset($_POST['access_tracker'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into debt_repayment_progress_trackers table
    echo "Debt repayment tracker accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle report request
if (isset($_POST['request_report'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into investment_portfolio_performance_reports table
    echo "Portfolio performance report requested!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle scorecard access request
if (isset($_POST['access_scorecard'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into financial_wellness_scorecards table
    echo "Wellness scorecard accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle strategy access request
if (isset($_POST['access_strategy'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into emergency_fund_diversification_strategies table
    echo "Emergency fund diversification strategy accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle seminar registration request
if (isset($_POST['register_seminar'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into investment_risk_management_seminars table
    echo "Risk management seminar registration completed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle podcast subscription request
if (isset($_POST['subscribe_podcast'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into financial_planning_podcast_series table
    echo "Podcast series subscribed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle calculator access request
if (isset($_POST['access_calculator'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into debt_repayment_calculators table
    echo "Debt repayment calculator accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle guide access request
if (isset($_POST['access_guide'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into investment_portfolio_rebalancing_guides table
    echo "Portfolio rebalancing guide accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle app download request
if (isset($_POST['download_app'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into financial_security_mobile_apps table
    echo "Financial security mobile app downloaded!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle strategy access request
if (isset($_POST['access_strategy'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into emergency_fund_withdrawal_strategies table
    echo "Emergency fund withdrawal strategy accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle webinar registration request
if (isset($_POST['register_webinar'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into investment_risk_management_webinars table
    echo "Risk management webinar registration completed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle quiz access request
if (isset($_POST['access_quiz'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into financial_wellness_quizzes table
    echo "Financial wellness quiz accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle guide access request
if (isset($_POST['access_guide'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into emergency_fund_investment_guides table
    echo "Emergency fund investment guide accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle calculator access request
if (isset($_POST['access_calculator'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into debt_repayment_strategy_calculators table
    echo "Debt repayment strategy calculator accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle tool access request
if (isset($_POST['access_tool'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into investment_portfolio_risk_assessment_tools table
    echo "Portfolio risk assessment tool accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle report request
if (isset($_POST['request_report'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into financial_security_score_reports table
    echo "Financial security score report requested!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle plan access request
if (isset($_POST['access_plan'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into emergency_fund_savings_plans table
    echo "Emergency fund savings plan accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle dashboard access request
if (isset($_POST['access_dashboard'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into investment_risk_management_dashboards table
    echo "Investment risk management dashboard accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle calculator access request
if (isset($_POST['access_calculator'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into financial_wellness_score_calculators table
    echo "Financial wellness score calculator accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle report request
if (isset($_POST['request_report'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into debt_repayment_progress_reports table
    echo "Debt repayment progress report requested!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle calculator access request
if (isset($_POST['access_calculator'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into investment_portfolio_rebalancing_calculators table
    echo "Portfolio rebalancing calculator accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle guide access request
if (isset($_POST['access_guide'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into emergency_fund_accessibility_guides table
    echo "Emergency fund accessibility guide accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle webinar registration request
if (isset($_POST['register_webinar'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into financial_risk_management_webinar_series table
    echo "Risk management webinar series registration completed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle tool access request
if (isset($_POST['access_tool'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into investment_portfolio_diversification_tools table
    echo "Portfolio diversification tool accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle quiz access request
if (isset($_POST['access_quiz'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into financial_security_quizzes table
    echo "Financial security quiz accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle calculator access request
if (isset($_POST['access_calculator'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into emergency_fund_withdrawal_calculators table
    echo "Emergency fund withdrawal calculator accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle webinar registration request
if (isset($_POST['register_webinar'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into debt_repayment_strategy_webinars table
    echo "Debt repayment strategy webinar registration completed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle guide access request
if (isset($_POST['access_guide'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into investment_portfolio_risk_management_guides table
    echo "Investment portfolio risk management guide accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle dashboard access request
if (isset($_POST['access_dashboard'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into financial_wellness_dashboards table
    echo "Financial wellness dashboard accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle calculator access request
if (isset($_POST['access_calculator'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into emergency_fund_growth_calculators table
    echo "Emergency fund growth calculator accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle podcast subscription request
if (isset($_POST['subscribe_podcast'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into investment_risk_management_podcasts table
    echo "Investment risk management podcast subscribed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle calculator access request
if (isset($_POST['access_calculator'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into financial_security_calculators table
    echo "Financial security calculator accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle dashboard access request
if (isset($_POST['access_dashboard'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into emergency_fund_savings_dashboards table
    echo "Emergency fund savings dashboard accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle guide access request
if (isset($_POST['access_guide'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into debt_repayment_calculator_guides table
    echo "Debt repayment calculator guide accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle quiz access request
if (isset($_POST['access_quiz'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into investment_portfolio_risk_assessment_quizzes table
    echo "Investment portfolio risk assessment quiz accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle webinar registration request
if (isset($_POST['register_webinar'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into financial_wellness_webinars table
    echo "Financial wellness webinar registration completed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle dashboard access request
if (isset($_POST['access_dashboard'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into emergency_fund_withdrawal_dashboards table
    echo "Emergency fund withdrawal dashboard accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle calculator access request
if (isset($_POST['access_calculator'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into investment_portfolio_diversification_calculators table
    echo "Portfolio diversification calculator accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle dashboard access request
if (isset($_POST['access_dashboard'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into financial_security_dashboards table
    echo "Financial security dashboard accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle dashboard access request
if (isset($_POST['access_dashboard'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into emergency_fund_growth_dashboards table
    echo "Emergency fund growth dashboard accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle guide access request
if (isset($_POST['access_guide'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into debt_repayment_strategy_calculator_guides table
    echo "Debt repayment strategy calculator guide accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle dashboard access request
if (isset($_POST['access_dashboard'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into investment_portfolio_risk_management_dashboards table
    echo "Investment portfolio risk management dashboard accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle calculator access request
if (isset($_POST['access_calculator'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into financial_wellness_calculators table
    echo "Financial wellness calculator accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle guide access request
if (isset($_POST['access_guide'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into emergency_fund_withdrawal_calculator_guides table
    echo "Emergency fund withdrawal calculator guide accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle dashboard access request
if (isset($_POST['access_dashboard'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into investment_risk_management_dashboards table
    echo "Investment risk management dashboard accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle guide access request
if (isset($_POST['access_guide'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into financial_security_calculator_guides table
    echo "Financial security calculator guide accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle calculator access request
if (isset($_POST['access_calculator'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into emergency_fund_savings_calculators table
    echo "Emergency fund savings calculator accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle dashboard access request
if (isset($_POST['access_dashboard'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into investment_portfolio_risk_assessment_dashboards table
    echo "Investment portfolio risk assessment dashboard accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle quiz access request
if (isset($_POST['access_quiz'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into financial_wellness_quizzes table
    echo "Financial wellness quiz accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle guide access request
if (isset($_POST['access_guide'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into emergency_fund_withdrawal_strategy_guides table
    echo "Emergency fund withdrawal strategy guide accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle calculator access request
if (isset($_POST['access_calculator'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into investment_risk_management_calculators table
    echo "Investment risk management calculator accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle guide access request
if (isset($_POST['access_guide'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into financial_security_dashboard_guides table
    echo "Financial security dashboard guide accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle guide access request
if (isset($_POST['access_guide'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into emergency_fund_growth_calculator_guides table
    echo "Emergency fund growth calculator guide accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle dashboard access request
if (isset($_POST['access_dashboard'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into debt_repayment_strategy_dashboards table
    echo "Debt repayment strategy dashboard accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle quiz access request
if (isset($_POST['access_quiz'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into investment_portfolio_risk_management_quizzes table
    echo "Investment portfolio risk management quiz accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle guide access request
if (isset($_POST['access_guide'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into financial_wellness_calculator_guides table
    echo "Financial wellness calculator guide accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle dashboard access request
if (isset($_POST['access_dashboard'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into emergency_fund_savings_strategy_dashboards table
    echo "Emergency fund savings strategy dashboard accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle guide access request
if (isset($_POST['access_guide'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into investment_risk_management_dashboard_guides table
    echo "Investment risk management dashboard guide accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle dashboard access request
if (isset($_POST['access_dashboard'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into financial_security_calculator_dashboards table
    echo "Financial security calculator dashboard accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle calculator access request
if (isset($_POST['access_calculator'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into emergency_fund_withdrawal_strategy_calculators table
    echo "Emergency fund withdrawal strategy calculator accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle quiz access request
if (isset($_POST['access_quiz'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into debt_repayment_strategy_quizzes table
    echo "Debt repayment strategy quiz accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle dashboard access request
if (isset($_POST['access_dashboard'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into investment_portfolio_risk_management_dashboards table
    echo "Investment portfolio risk management dashboard accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle dashboard access request
if (isset($_POST['access_dashboard'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into financial_wellness_calculator_dashboards table
    echo "Financial wellness calculator dashboard accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle guide access request
if (isset($_POST['access_guide'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into emergency_fund_savings_strategy_guides table
    echo "Emergency fund savings strategy guide accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle guide access request
if (isset($_POST['access_guide'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into investment_risk_management_calculator_guides table
    echo "Investment risk management calculator guide accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle calculator access request
if (isset($_POST['access_calculator'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into financial_security_dashboard_calculators table
    echo "Financial security dashboard calculator accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle dashboard access request
if (isset($_POST['access_dashboard'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into emergency_fund_withdrawal_strategy_dashboards table
    echo "Emergency fund withdrawal strategy dashboard accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle guide access request
if (isset($_POST['access_guide'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into debt_repayment_strategy_calculator_guides table
    echo "Debt repayment strategy calculator guide accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle quiz access request
if (isset($_POST['access_quiz'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into investment_portfolio_risk_management_quizzes table
    echo "Investment portfolio risk management quiz accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle calculator access request
if (isset($_POST['access_calculator'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into financial_wellness_dashboard_calculators table
    echo "Financial wellness dashboard calculator accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle guide access request
if (isset($_POST['access_guide'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into emergency_fund_savings_calculator_guides table
    echo "Emergency fund savings calculator guide accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle calculator access request
if (isset($_POST['access_calculator'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into investment_risk_management_dashboard_calculators table
    echo "Investment risk management dashboard calculator accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle guide access request
if (isset($_POST['access_guide'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into financial_security_calculator_dashboard_guides table
    echo "Financial security calculator dashboard guide accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle calculator access request
if (isset($_POST['access_calculator'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into emergency_fund_withdrawal_strategy_calculators table
    echo "Emergency fund withdrawal strategy calculator accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle guide access request
if (isset($_POST['access_guide'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into debt_repayment_strategy_dashboard_guides table
    echo "Debt repayment strategy dashboard guide accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle calculator access request
if (isset($_POST['access_calculator'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into investment_portfolio_risk_management_calculators table
    echo "Investment portfolio risk management calculator accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle guide access request
if (isset($_POST['access_guide'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into financial_wellness_calculator_dashboard_guides table
    echo "Financial wellness calculator dashboard guide accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle calculator access request
if (isset($_POST['access_calculator'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into emergency_fund_savings_strategy_calculators table
    echo "Emergency fund savings strategy calculator accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle guide access request
if (isset($_POST['access_guide'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into investment_risk_management_dashboard_guides table
    echo "Investment risk management dashboard guide accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle calculator access request
if (isset($_POST['access_calculator'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into financial_security_dashboard_calculators table
    echo "Financial security dashboard calculator accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle guide access request
if (isset($_POST['access_guide'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into emergency_fund_withdrawal_strategy_dashboard_guides table
    echo "Emergency fund withdrawal strategy dashboard guide accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle dashboard access request
if (isset($_POST['access_dashboard'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into debt_repayment_strategy_calculator_dashboards table
    echo "Debt repayment strategy calculator dashboard accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle guide access request
if (isset($_POST['access_guide'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into investment_portfolio_risk_management_calculator_guides table
    echo "Investment portfolio risk management calculator guide accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle dashboard access request
if (isset($_POST['access_dashboard'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into financial_wellness_calculator_dashboards table
    echo "Financial wellness calculator dashboard accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle dashboard access request
if (isset($_POST['access_dashboard'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into emergency_fund_savings_strategy_dashboards table
    echo "Emergency fund savings strategy dashboard accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle dashboard access request
if (isset($_POST['access_dashboard'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into investment_risk_management_calculator_dashboards table
    echo "Investment risk management calculator dashboard accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle guide access request
if (isset($_POST['access_guide'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into financial_security_dashboard_guides table
    echo "Financial security dashboard guide accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle dashboard access request
if (isset($_POST['access_dashboard'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into emergency_fund_withdrawal_strategy_calculator_dashboards table
    echo "Emergency fund withdrawal strategy calculator dashboard accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle calculator access request
if (isset($_POST['access_calculator'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into debt_repayment_strategy_dashboard_calculators table
    echo "Debt repayment strategy dashboard calculator accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle dashboard access request
if (isset($_POST['access_dashboard'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into investment_portfolio_risk_management_dashboards table
    echo "Investment portfolio risk management dashboard accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle guide access request
if (isset($_POST['access_guide'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into financial_wellness_dashboard_guides table
    echo "Financial wellness dashboard guide accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle dashboard access request
if (isset($_POST['access_dashboard'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into emergency_fund_savings_calculator_dashboards table
    echo "Emergency fund savings calculator dashboard accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle calculator access request
if (isset($_POST['access_calculator'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into investment_risk_management_dashboard_calculators table
    echo "Investment risk management dashboard calculator accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle guide access request
if (isset($_POST['access_guide'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into financial_security_calculator_dashboard_guides table
    echo "Financial security calculator dashboard guide accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle calculator access request
if (isset($_POST['access_calculator'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into emergency_fund_withdrawal_strategy_dashboard_calculators table
    echo "Emergency fund withdrawal strategy dashboard calculator accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle guide access request
if (isset($_POST['access_guide'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into debt_repayment_strategy_calculator_dashboard_guides table
    echo "Debt repayment strategy calculator dashboard guide accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle dashboard access request
if (isset($_POST['access_dashboard'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into investment_portfolio_risk_management_calculator_dashboards table
    echo "Investment portfolio risk management calculator dashboard accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle dashboard access request
if (isset($_POST['access_dashboard'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into financial_wellness_calculator_dashboards table
    echo "Financial wellness calculator dashboard accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle dashboard access request
if (isset($_POST['access_dashboard'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into emergency_fund_savings_strategy_calculator_dashboards table
    echo "Emergency fund savings strategy calculator dashboard accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle calculator access request
if (isset($_POST['access_calculator'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into investment_risk_management_dashboard_guide_calculators table
    echo "Investment risk management dashboard guide calculator accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle guide access request
if (isset($_POST['access_guide'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into financial_security_dashboard_calculator_guides table
    echo "Financial security dashboard calculator guide accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle guide access request
if (isset($_POST['access_guide'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into emergency_fund_withdrawal_strategy_calculator_dashboard_guides table
    echo "Emergency fund withdrawal strategy calculator dashboard guide accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle guide access request
if (isset($_POST['access_guide'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into debt_repayment_strategy_dashboard_calculator_guides table
    echo "Debt repayment strategy dashboard calculator guide accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle guide access request
if (isset($_POST['access_guide'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into investment_portfolio_risk_management_calculator_dashboard_guides table
    echo "Investment portfolio risk management calculator dashboard guide accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle guide access request
if (isset($_POST['access_guide'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into financial_wellness_calculator_dashboard_guides table
    echo "Financial wellness calculator dashboard guide accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle guide access request
if (isset($_POST['access_guide'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into emergency_fund_savings_calculator_dashboard_guides table
    echo "Emergency fund savings calculator dashboard guide accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle guide access request
if (isset($_POST['access_guide'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into investment_risk_management_dashboard_calculator_guides table
    echo "Investment risk management dashboard calculator guide accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle calculator access request
if (isset($_POST['access_calculator'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into financial_security_dashboard_guide_calculators table
    echo "Financial security dashboard guide calculator accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle guide access request
if (isset($_POST['access_guide'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into emergency_fund_withdrawal_strategy_dashboard_calculator_guides table
    echo "Emergency fund withdrawal strategy dashboard calculator guide accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle guide access request
if (isset($_POST['access_guide'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into debt_repayment_strategy_calculator_dashboard_guides table
    echo "Debt repayment strategy calculator dashboard guide accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle guide access request
if (isset($_POST['access_guide'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into investment_portfolio_risk_management_calculator_dashboard_guides table
    echo "Investment portfolio risk management calculator dashboard guide accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle guide access request
if (isset($_POST['access_guide'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into financial_wellness_calculator_dashboard_guides table
    echo "Financial wellness calculator dashboard guide accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle guide access request
if (isset($_POST['access_guide'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into emergency_fund_savings_strategy_calculator_dashboard_guides table
    echo "Emergency fund savings strategy calculator dashboard guide accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle calculator access request
if (isset($_POST['access_calculator'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into investment_risk_management_dashboard_guide_calculators table
    echo "Investment risk management dashboard guide calculator accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle guide access request
if (isset($_POST['access_guide'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into financial_security_dashboard_calculator_guides table
    echo "Financial security dashboard calculator guide accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle guide access request
if (isset($_POST['access_guide'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into emergency_fund_withdrawal_strategy_calculator_dashboard_guides table
    echo "Emergency fund withdrawal strategy calculator dashboard guide accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle guide access request
if (isset($_POST['access_guide'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into debt_repayment_strategy_dashboard_calculator_guides table
    echo "Debt repayment strategy dashboard calculator guide accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle guide access request
if (isset($_POST['access_guide'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into investment_portfolio_risk_management_calculator_dashboard_guides table
    echo "Investment portfolio risk management calculator dashboard guide accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle guide access request
if (isset($_POST['access_guide'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into financial_wellness_calculator_dashboard_guides table
    echo "Financial wellness calculator dashboard guide accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle guide access request
if (isset($_POST['access_guide'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into emergency_fund_savings_calculator_dashboard_guides table
    echo "Emergency fund savings calculator dashboard guide accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle guide access request
if (isset($_POST['access_guide'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into investment_risk_management_dashboard_calculator_guides table
    echo "Investment risk management dashboard calculator guide accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle calculator access request
if (isset($_POST['access_calculator'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into financial_security_dashboard_guide_calculators table
    echo "Financial security dashboard guide calculator accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle guide access request
if (isset($_POST['access_guide'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into emergency_fund_withdrawal_strategy_dashboard_calculator_guides table
    echo "Emergency fund withdrawal strategy dashboard calculator guide accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle guide access request
if (isset($_POST['access_guide'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into debt_repayment_strategy_calculator_dashboard_guides table
    echo "Debt repayment strategy calculator dashboard guide accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle guide access request
if (isset($_POST['access_guide'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into investment_portfolio_risk_management_calculator_dashboard_guides table
    echo "Investment portfolio risk management calculator dashboard guide accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle guide access request
if (isset($_POST['access_guide'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into financial_wellness_calculator_dashboard_guides table
    echo "Financial wellness calculator dashboard guide accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle guide access request
if (isset($_POST['access_guide'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into emergency_fund_savings_strategy_calculator_dashboard_guides table
    echo "Emergency fund savings strategy calculator dashboard guide accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle calculator access request
if (isset($_POST['access_calculator'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into investment_risk_management_dashboard_guide_calculators table
    echo "Investment risk management dashboard guide calculator accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle guide access request
if (isset($_POST['access_guide'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into financial_security_dashboard_calculator_guides table
    echo "Financial security dashboard calculator guide accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle guide access request
if (isset($_POST['access_guide'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into emergency_fund_withdrawal_strategy_calculator_dashboard_guides table
    echo "Emergency fund withdrawal strategy calculator dashboard guide accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle guide access request
if (isset($_POST['access_guide'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into debt_repayment_strategy_dashboard_calculator_guides table
    echo "Debt repayment strategy dashboard calculator guide accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle guide access request
if (isset($_POST['access_guide'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into investment_portfolio_risk_management_calculator_dashboard_guides table
    echo "Investment portfolio risk management calculator dashboard guide accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle guide access request
if (isset($_POST['access_guide'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into financial_wellness_calculator_dashboard_guides table
    echo "Financial wellness calculator dashboard guide accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle guide access request
if (isset($_POST['access_guide'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into emergency_fund_savings_calculator_dashboard_guides table
    echo "Emergency fund savings calculator dashboard guide accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle guide access request
if (isset($_POST['access_guide'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into investment_risk_management_dashboard_calculator_guides table
    echo "Investment risk management dashboard calculator guide accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle calculator access request
if (isset($_POST['access_calculator'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into financial_security_dashboard_guide_calculators table
    echo "Financial security dashboard guide calculator accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle guide access request
if (isset($_POST['access_guide'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into emergency_fund_withdrawal_strategy_dashboard_calculator_guides table
    echo "Emergency fund withdrawal strategy dashboard calculator guide accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle guide access request
if (isset($_POST['access_guide'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into debt_repayment_strategy_calculator_dashboard_guides table
    echo "Debt repayment strategy calculator dashboard guide accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle guide access request
if (isset($_POST['access_guide'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into investment_portfolio_risk_management_calculator_dashboard_guides table
    echo "Investment portfolio risk management calculator dashboard guide accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle guide access request
if (isset($_POST['access_guide'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into financial_wellness_calculator_dashboard_guides table
    echo "Financial wellness calculator dashboard guide accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle guide access request
if (isset($_POST['access_guide'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into emergency_fund_savings_strategy_calculator_dashboard_guides table
    echo "Emergency fund savings strategy calculator dashboard guide accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle calculator access request
if (isset($_POST['access_calculator'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into investment_risk_management_dashboard_guide_calculators table
    echo "Investment risk management dashboard guide calculator accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle guide access request
if (isset($_POST['access_guide'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into financial_security_dashboard_calculator_guides table
    echo "Financial security dashboard calculator guide accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle guide access request
if (isset($_POST['access_guide'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into emergency_fund_withdrawal_strategy_calculator_dashboard_guides table
    echo "Emergency fund withdrawal strategy calculator dashboard guide accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle guide access request
if (isset($_POST['access_guide'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into debt_repayment_strategy_dashboard_calculator_guides table
    echo "Debt repayment strategy dashboard calculator guide accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle guide access request
if (isset($_POST['access_guide'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into investment_portfolio_risk_management_calculator_dashboard_guides table
    echo "Investment portfolio risk management calculator dashboard guide accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle guide access request
if (isset($_POST['access_guide'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into financial_wellness_calculator_dashboard_guides table
    echo "Financial wellness calculator dashboard guide accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle guide access request
if (isset($_POST['access_guide'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into emergency_fund_savings_calculator_dashboard_guides table
    echo "Emergency fund savings calculator dashboard guide accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle guide access request
if (isset($_POST['access_guide'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into investment_risk_management_dashboard_calculator_guides table
    echo "Investment risk management dashboard calculator guide accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle calculator access request
if (isset($_POST['access_calculator'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into financial_security_dashboard_guide_calculators table
    echo "Financial security dashboard guide calculator accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle guide access request
if (isset($_POST['access_guide'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into emergency_fund_withdrawal_strategy_dashboard_calculator_guides table
    echo "Emergency fund withdrawal strategy dashboard calculator guide accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle guide access request
if (isset($_POST['access_guide'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into debt_repayment_strategy_calculator_dashboard_guides table
    echo "Debt repayment strategy calculator dashboard guide accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle guide access request
if (isset($_POST['access_guide'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into investment_portfolio_risk_management_calculator_dashboard_guides table
    echo "Investment portfolio risk management calculator dashboard guide accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle guide access request
if (isset($_POST['access_guide'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into financial_wellness_calculator_dashboard_guides table
    echo "Financial wellness calculator dashboard guide accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle guide access request
if (isset($_POST['access_guide'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into emergency_fund_savings_strategy_calculator_dashboard_guides table
    echo "Emergency fund savings strategy calculator dashboard guide accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle calculator access request
if (isset($_POST['access_calculator'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into investment_risk_management_dashboard_guide_calculators table
    echo "Investment risk management dashboard guide calculator accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle guide access request
if (isset($_POST['access_guide'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into financial_security_dashboard_calculator_guides table
    echo "Financial security dashboard calculator guide accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle guide access request
if (isset($_POST['access_guide'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into emergency_fund_withdrawal_strategy_calculator_dashboard_guides table
    echo "Emergency fund withdrawal strategy calculator dashboard guide accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle guide access request
if (isset($_POST['access_guide'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into debt_repayment_strategy_dashboard_calculator_guides table
    echo "Debt repayment strategy dashboard calculator guide accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle guide access request
if (isset($_POST['access_guide'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into investment_portfolio_risk_management_calculator_dashboard_guides table
    echo "Investment portfolio risk management calculator dashboard guide accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle guide access request
if (isset($_POST['access_guide'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into financial_wellness_calculator_dashboard_guides table
    echo "Financial wellness calculator dashboard guide accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle guide access request
if (isset($_POST['access_guide'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into emergency_fund_savings_calculator_dashboard_guides table
    echo "Emergency fund savings calculator dashboard guide accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle guide access request
if (isset($_POST['access_guide'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into investment_risk_management_dashboard_calculator_guides table
    echo "Investment risk management dashboard calculator guide accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle calculator access request
if (isset($_POST['access_calculator'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into financial_security_dashboard_guide_calculators table
    echo "Financial security dashboard guide calculator accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle guide access request
if (isset($_POST['access_guide'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into emergency_fund_withdrawal_strategy_dashboard_calculator_guides table
    echo "Emergency fund withdrawal strategy dashboard calculator guide accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle guide access request
if (isset($_POST['access_guide'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into debt_repayment_strategy_calculator_dashboard_guides table
    echo "Debt repayment strategy calculator dashboard guide accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle guide access request
if (isset($_POST['access_guide'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into investment_portfolio_risk_management_calculator_dashboard_guides table
    echo "Investment portfolio risk management calculator dashboard guide accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle guide access request
if (isset($_POST['access_guide'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into financial_wellness_calculator_dashboard_guides table
    echo "Financial wellness calculator dashboard guide accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle guide access request
if (isset($_POST['access_guide'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into emergency_fund_savings_strategy_calculator_dashboard_guides table
    echo "Emergency fund savings strategy calculator dashboard guide accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle calculator access request
if (isset($_POST['access_calculator'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into investment_risk_management_dashboard_guide_calculators table
    echo "Investment risk management dashboard guide calculator accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle guide access request
if (isset($_POST['access_guide'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into financial_security_dashboard_calculator_guides table
    echo "Financial security dashboard calculator guide accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle guide access request
if (isset($_POST['access_guide'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into emergency_fund_withdrawal_strategy_calculator_dashboard_guides table
    echo "Emergency fund withdrawal strategy calculator dashboard guide accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle guide access request
if (isset($_POST['access_guide'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into debt_repayment_strategy_dashboard_calculator_guides table
    echo "Debt repayment strategy dashboard calculator guide accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle guide access request
if (isset($_POST['access_guide'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into investment_portfolio_risk_management_calculator_dashboard_guides table
    echo "Investment portfolio risk management calculator dashboard guide accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle guide access request
if (isset($_POST['access_guide'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into financial_wellness_calculator_dashboard_guides table
    echo "Financial wellness calculator dashboard guide accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle guide access request
if (isset($_POST['access_guide'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into emergency_fund_savings_calculator_dashboard_guides table
    echo "Emergency fund savings calculator dashboard guide accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle guide access request
if (isset($_POST['access_guide'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into investment_risk_management_dashboard_calculator_guides table
    echo "Investment risk management dashboard calculator guide accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle calculator access request
if (isset($_POST['access_calculator'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into financial_security_dashboard_guide_calculators table
    echo "Financial security dashboard guide calculator accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle guide access request
if (isset($_POST['access_guide'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into emergency_fund_withdrawal_strategy_dashboard_calculator_guides table
    echo "Emergency fund withdrawal strategy dashboard calculator guide accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle guide access request
if (isset($_POST['access_guide'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into debt_repayment_strategy_calculator_dashboard_guides table
    echo "Debt repayment strategy calculator dashboard guide accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle guide access request
if (isset($_POST['access_guide'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into investment_portfolio_risk_management_calculator_dashboard_guides table
    echo "Investment portfolio risk management calculator dashboard guide accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle guide access request
if (isset($_POST['access_guide'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into financial_wellness_calculator_dashboard_guides table
    echo "Financial wellness calculator dashboard guide accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle guide access request
if (isset($_POST['access_guide'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into emergency_fund_savings_strategy_calculator_dashboard_guides table
    echo "Emergency fund savings strategy calculator dashboard guide accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle calculator access request
if (isset($_POST['access_calculator'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into investment_risk_management_dashboard_guide_calculators table
    echo "Investment risk management dashboard guide calculator accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle guide access request
if (isset($_POST['access_guide'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into financial_security_dashboard_calculator_guides table
    echo "Financial security dashboard calculator guide accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle guide access request
if (isset($_POST['access_guide'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into emergency_fund_withdrawal_strategy_calculator_dashboard_guides table
    echo "Emergency fund withdrawal strategy calculator dashboard guide accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle guide access request
if (isset($_POST['access_guide'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into debt_repayment_strategy_dashboard_calculator_guides table
    echo "Debt repayment strategy dashboard calculator guide accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle guide access request
if (isset($_POST['access_guide'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into investment_portfolio_risk_management_calculator_dashboard_guides table
    echo "Investment portfolio risk management calculator dashboard guide accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle guide access request
if (isset($_POST['access_guide'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into financial_wellness_calculator_dashboard_guides table
    echo "Financial wellness calculator dashboard guide accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle guide access request
if (isset($_POST['access_guide'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into emergency_fund_savings_calculator_dashboard_guides table
    echo "Emergency fund savings calculator dashboard guide accessed!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Handle guide access request
if (isset($_POST['access_guide'])) {
    $userId = $_SESSION['user_id'];
    
    // Insert into investment_risk_management_dashboard_calculator_guides table
    echo "Investment risk management dashboard calculator guide accessed!";
}
?>


class Product {
    private $id;
    private $name;
    private $price;
    private $description;
    private $stock;

    public function __construct($id, $name, $price, $description, $stock) {
        $this->id = $id;
        $this->name = $name;
        $this->price = $price;
        $this->description = $description;
        $this->stock = $stock;
    }

    // Getters and setters
}


class Order {
    private $id;
    private $user_id;
    private $total;
    private $payment_method;
    private $order_date;

    public function __construct($id, $user_id, $total, $payment_method, $order_date) {
        $this->id = $id;
        $this->user_id = $user_id;
        $this->total = $total;
        $this->payment_method = $payment_method;
        $this->order_date = $order_date;
    }

    // Getters and setters
}


class OrderItem {
    private $id;
    private $order_id;
    private $product_id;
    private $quantity;
    private $price;

    public function __construct($id, $order_id, $product_id, $quantity, $price) {
        $this->id = $id;
        $this->order_id = $order_id;
        $this->product_id = $product_id;
        $this->quantity = $quantity;
        $this->price = $price;
    }

    // Getters and setters
}


class ShoppingCart {
    private $cart;

    public function __construct() {
        if (!isset($_SESSION['cart'])) {
            $_SESSION['cart'] = array();
        }
        $this->cart = &$_SESSION['cart'];
    }

    public function addProduct($productId, $quantity) {
        if (isset($this->cart[$productId])) {
            $this->cart[$productId]['quantity'] += $quantity;
        } else {
            $product = new Product(...); // Fetch product from database
            $this->cart[$productId] = array(
                'id' => $productId,
                'name' => $product->getName(),
                'price' => $product->getPrice(),
                'quantity' => $quantity
            );
        }
    }

    public function removeProduct($productId) {
        if (isset($this->cart[$productId])) {
            unset($this->cart[$productId]);
        }
    }

    public function updateQuantity($productId, $quantity) {
        if (isset($this->cart[$productId])) {
            $this->cart[$productId]['quantity'] = $quantity;
        }
    }

    public function getCart() {
        return $this->cart;
    }
}


session_start();
require_once 'ShoppingCart.php';

$cart = new ShoppingCart();

if (empty($cart->getCart())) {
    header("Location: index.php");
    exit();
}

// Display checkout form
?>

<form action="process_order.php" method="post">
    <h2>Checkout</h2>
    <?php foreach ($cart->getCart() as $item): ?>
        <div class="cart-item">
            <p><?php echo $item['name']; ?></p>
            <p>Quantity: <?php echo $item['quantity']; ?></p>
            <p>Price: <?php echo $item['price']; ?></p>
        </div>
    <?php endforeach; ?>

    <h3>Payment Information</h3>
    <input type="text" name="card_number" placeholder="Card Number">
    <input type="text" name="card_name" placeholder="Name on Card">
    <input type="text" name="exp_month" placeholder="Expiration Month">
    <input type="text" name="exp_year" placeholder="Expiration Year">
    <input type="submit" value="Place Order">
</form>


session_start();
require_once 'Order.php';
require_once 'ShoppingCart.php';

$cart = new ShoppingCart();
$cartItems = $cart->getCart();

// Create new order
$order = new Order(
    null, // ID will be auto-incremented
    1, // Assuming user is logged in (replace with actual user ID)
    calculateTotal($cartItems),
    'credit_card' // Payment method
);

// Save order to database

// Clear cart
$cart->clearCart();

// Redirect to confirmation page
header("Location: confirmation.php");
exit();


session_start();

echo "Thank you for your purchase!";
// Display order details or redirect to homepage


function calculateTotal($cartItems) {
    $total = 0;
    foreach ($cartItems as $item) {
        $total += $item['price'] * $item['quantity'];
    }
    return $total;
}

// Function to save order to database
function saveOrder(Order $order, $cartItems) {
    // Connect to database and insert order and order items
}


<?php
class Product {
    private $db;

    public function __construct($db) {
        $this->db = $db;
    }

    // Get all products
    public function getProducts() {
        $query = "SELECT * FROM products";
        return $this->db->query($query)->fetchAll(PDO::FETCH_ASSOC);
    }

    // Get product by ID
    public function getProductById($id) {
        $query = "SELECT * FROM products WHERE id = ?";
        $stmt = $this->db->prepare($query);
        $stmt->execute([$id]);
        return $stmt->fetch(PDO::FETCH_ASSOC);
    }
}
?>


<?php
class Order {
    private $db;

    public function __construct($db) {
        $this->db = $db;
    }

    // Insert new order
    public function insertOrder($user_name, $email, $total_amount) {
        $query = "INSERT INTO orders (user_name, email, total_amount, purchase_date)
                  VALUES (?, ?, ?, NOW())";
        $stmt = $this->db->prepare($query);
        return $stmt->execute([$user_name, $email, $total_amount]);
    }

    // Insert order items
    public function insertOrderItems($order_id, $product_id, $quantity, $price) {
        $query = "INSERT INTO order_items (order_id, product_id, quantity, price)
                  VALUES (?, ?, ?, ?)";
        $stmt = $this->db->prepare($query);
        return $stmt->execute([$order_id, $product_id, $quantity, $price]);
    }
}
?>


<?php
class Cart {
    public function __construct() {
        if (!isset($_SESSION['cart'])) {
            $_SESSION['cart'] = array();
        }
    }

    // Add product to cart
    public function addProduct($productId, $quantity) {
        if (isset($_SESSION['cart'][$productId])) {
            $_SESSION['cart'][$productId]['quantity'] += $quantity;
        } else {
            $_SESSION['cart'][$productId] = array(
                'product_id' => $productId,
                'quantity' => $quantity
            );
        }
    }

    // Get cart items
    public function getCartItems() {
        return $_SESSION['cart'];
    }

    // Remove item from cart
    public function removeItem($productId) {
        if (isset($_SESSION['cart'][$productId])) {
            unset($_SESSION['cart'][$productId]);
        }
    }

    // Clear cart
    public function clearCart() {
        $_SESSION['cart'] = array();
    }
}
?>


<?php
session_start();
require_once 'db.php';
require_once 'Product.php';

$product = new Product($db);
$products = $product->getProducts();

?>

<!DOCTYPE html>
<html>
<head>
    <title>Shop</title>
</head>
<body>
    <h1>Available Products</h1>
    <?php foreach ($products as $product) { ?>
        <div>
            <h2><?php echo $product['name']; ?></h2>
            <p><?php echo $product['description']; ?></p>
            <p>Price: $<?php echo number_format($product['price'], 2); ?></p>
            <form action="add_to_cart.php" method="POST">
                <input type="hidden" name="product_id" value="<?php echo $product['id']; ?>">
                <input type="number" name="quantity" min="1" max="<?php echo $product['stock']; ?>" placeholder="Quantity">
                <button type="submit">Add to Cart</button>
            </form>
        </div>
    <?php } ?>
</body>
</html>


<?php
session_start();
require_once 'db.php';
require_once 'Product.php';
require_once 'Cart.php';

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $cart = new Cart();
    $productId = $_POST['product_id'];
    $quantity = isset($_POST['quantity']) ? intval($_POST['quantity']) : 1;

    // Check if product exists
    $product = new Product($db);
    $productData = $product->getProductById($productId);

    if ($productData && $quantity > 0) {
        $cart->addProduct($productId, $quantity);
        header("Location: cart.php");
        exit();
    } else {
        echo "Invalid product or quantity.";
    }
}
?>


<?php
session_start();
require_once 'db.php';
require_once 'Product.php';
require_once 'Cart.php';

$cart = new Cart();
$cartItems = $cart->getCartItems();

?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <h1>Your Shopping Cart</h1>
    <?php if (!empty($cartItems)) { ?>
        <table border="1">
            <tr>
                <th>Product ID</th>
                <th>Quantity</th>
                <th>Action</th>
            </tr>
            <?php foreach ($cartItems as $item) { ?>
                <tr>
                    <td><?php echo $item['product_id']; ?></td>
                    <td><?php echo $item['quantity']; ?></td>
                    <td><a href="remove_from_cart.php?product_id=<?php echo $item['product_id']; ?>">Remove</a></td>
                </tr>
            <?php } ?>
        </table>
    <?php } else { ?>
        <p>Your cart is empty.</p>
    <?php } ?>

    <a href="products.php">Continue Shopping</a> |
    <?php if (!empty($cartItems)) { ?>
        <a href="checkout.php">Checkout</a>
    <?php } ?>
</body>
</html>


<?php
session_start();
require_once 'Cart.php';

if ($_SERVER['REQUEST_METHOD'] == 'GET') {
    $cart = new Cart();
    $productId = $_GET['product_id'];
    $cart->removeItem($productId);
    header("Location: cart.php");
}
?>


<?php
session_start();
require_once 'db.php';
require_once 'Cart.php';

$cart = new Cart();
$cartItems = $cart->getCartItems();

if (empty($cartItems)) {
    header("Location: cart.php");
    exit();
}

?>

<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
</head>
<body>
    <h1>Checkout</h1>
    <form action="process_order.php" method="POST">
        <div>
            <label for="user_name">Name:</label><br>
            <input type="text" id="user_name" name="user_name" required><br>

            <label for="email">Email:</label><br>
            <input type="email" id="email" name="email" required><br>

            <input type="hidden" name="cart_items" value="<?php echo serialize($cartItems); ?>">

            <button type="submit">Place Order</button>
        </div>
    </form>
</body>
</html>


<?php
session_start();
require_once 'db.php';
require_once 'Order.php';

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $order = new Order($db);
    $cartItems = unserialize($_POST['cart_items']);

    // Insert order
    $user_name = $_POST['user_name'];
    $email = $_POST['email'];

    $total_amount = 0;
    foreach ($cartItems as $item) {
        $product_id = $item['product_id'];
        $quantity = $item['quantity'];

        $product = new Product($db);
        $productData = $product->getProductById($product_id);

        if ($productData) {
            $total_amount += $productData['price'] * $quantity;
        }
    }

    // Insert order into database
    $order_id = 0;
    $stmt = $db->prepare("INSERT INTO orders (user_name, email, total_amount) VALUES (?, ?, ?)");
    if ($stmt->execute([$user_name, $email, $total_amount])) {
        $order_id = $db->lastInsertId();

        foreach ($cartItems as $item) {
            $product_id = $item['product_id'];
            $quantity = $item['quantity'];

            // Insert order items
            $product = new Product($db);
            $productData = $product->getProductById($product_id);

            if ($productData) {
                $order->insertOrderItems($order_id, $product_id, $quantity, $productData['price']);
            }
        }

        // Clear cart
        $_SESSION['cart'] = array();

        header("Location: thank_you.php?order_id=$order_id");
    } else {
        echo "Error placing order.";
    }
}
?>


<?php
session_start();
require_once 'db.php';
require_once 'Order.php';

if ($_GET['order_id']) {
    $order_id = $_GET['order_id'];
    
    // Retrieve order details
    $query = "SELECT * FROM orders WHERE order_id = ?";
    $stmt = $db->prepare($query);
    $stmt->execute([$order_id]);
    $order = $stmt->fetch(PDO::FETCH_ASSOC);

    if ($order) {
        // Calculate order items
        $orderItemsQuery = "SELECT oi.*, p.name AS product_name 
                           FROM order_items oi 
                           JOIN products p ON oi.product_id = p.id 
                           WHERE oi.order_id = ?";
        $stmt = $db->prepare($orderItemsQuery);
        $stmt->execute([$order_id]);
        $orderItems = $stmt->fetchAll(PDO::FETCH_ASSOC);
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Thank You</title>
</head>
<body>
    <h1>Thank you for your order!</h1>
    <p>Your order ID is: <?php echo $order_id; ?></p>
    <h2>Order Details:</h2>
    <table border="1">
        <tr>
            <th>Product Name</th>
            <th>Quantity</th>
            <th>Price</th>
        </tr>
        <?php foreach ($orderItems as $item) { ?>
            <tr>
                <td><?php echo $item['product_name']; ?></td>
                <td><?php echo $item['quantity']; ?></td>
                <td>$<?php echo number_format($item['price'], 2); ?></td>
            </tr>
        <?php } ?>
    </table>
</body>
</html>


<?php
// Database connection
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'purchase_db';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}

// Purchase function
function makePurchase($productId, $quantity, $customerId, $price, $conn) {
    try {
        // Calculate total price
        $totalPrice = $price * $quantity;

        // Insert purchase into database
        $stmt = $conn->prepare("INSERT INTO purchases (product_id, quantity, customer_id, total_price) 
                              VALUES (:productId, :quantity, :customerId, :totalPrice)");
        
        $stmt->bindParam(':productId', $productId);
        $stmt->bindParam(':quantity', $quantity);
        $stmt->bindParam(':customerId', $customerId);
        $stmt->bindParam(':totalPrice', $totalPrice);

        $stmt->execute();

        return true;
    } catch(PDOException $e) {
        echo "Error: " . $e->getMessage();
        return false;
    }
}

// Handle form submission
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Sanitize input
    $productId = intval($_POST['product_id']);
    $quantity = intval($_POST['quantity']);
    $customerId = intval($_POST['customer_id']);
    $price = floatval($_POST['price']);

    if ($productId && $quantity && $customerId && $price) {
        if (makePurchase($productId, $quantity, $customerId, $price, $conn)) {
            header("Location: thank_you.php");
            exit();
        }
    } else {
        echo "Please fill in all required fields.";
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Purchase Form</title>
</head>
<body>
    <h1>Make a Purchase</h1>
    <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
        <label for="product_id">Product ID:</label><br>
        <input type="text" id="product_id" name="product_id"><br>

        <label for="quantity">Quantity:</label><br>
        <input type="text" id="quantity" name="quantity"><br>

        <label for="customer_id">Customer ID:</label><br>
        <input type="text" id="customer_id" name="customer_id"><br>

        <label for="price">Price:</label><br>
        <input type="text" id="price" name="price"><br>

        <input type="submit" value="Purchase">
    </form>
</body>
</html>


<?php
session_start();
include("db_connection.php");

$sql = "SELECT * FROM products";
$result = mysqli_query($conn, $sql);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Site</title>
</head>
<body>
    <?php include('cart.php'); ?>
    
    <h1>Products</h1>
    <?php while ($row = mysqli_fetch_assoc($result)) { ?>
        <div style="border: 1px solid #ddd; padding: 10px; margin-bottom: 10px;">
            <h3><?php echo $row['name']; ?></h3>
            <p>Price: <?php echo '$'.$row['price']; ?></p>
            <img src="<?php echo $row['image'];?>" width="200">
            <form action="add_to_cart.php" method="post">
                <input type="hidden" name="id" value="<?php echo $row['id'];?>">
                <input type="hidden" name="name" value="<?php echo $row['name'];?>">
                <input type="hidden" name="price" value="<?php echo $row['price'];?>">
                Quantity: <input type="number" name="quantity" min="1" value="1">
                <input type="submit" value="Add to Cart">
            </form>
        </div>
    <?php } ?>
</body>
</html>


<?php
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "shop";

$conn = mysqli_connect($servername, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}
?>


<?php
session_start();
?>

<div style="float:right; padding:10px;">
    <h4>Shopping Cart</h4>
    <?php if (!empty($_SESSION['cart'])) { ?>
        <?php foreach ($_SESSION['cart'] as $item) { ?>
            <p><?php echo $item['name']; ?> x <?php echo $item['quantity']; ?></p>
        <?php } ?>
        Total: <?php echo '$'.array_sum(array_column($_SESSION['cart'], 'price')); ?>
    <?php } else { ?>
        Your cart is empty.
    <?php } ?>
</div>


<?php
session_start();
include("db_connection.php");

if (isset($_POST)) {
    $id = mysqli_real_escape_string($conn, $_POST['id']);
    $name = mysqli_real_escape_string($conn, $_POST['name']);
    $price = mysqli_real_escape_string($conn, $_POST['price']);
    $quantity = mysqli_real_escape_string($conn, $_POST['quantity']);

    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }

    $itemExists = false;
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['id'] == $id) {
            $item['quantity'] += $quantity;
            $itemExists = true;
            break;
        }
    }

    if (!$itemExists) {
        $_SESSION['cart'][] = array(
            'id' => $id,
            'name' => $name,
            'price' => $price,
            'quantity' => $quantity
        );
    }
}

header("Location: index.php");
?>


<?php
session_start();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
</head>
<body>
    <?php include('cart.php'); ?>

    <h1>Payment Information</h1>
    <form action="process_order.php" method="post">
        Card Number: <input type="text" name="card_number" required><br>
        CVV: <input type="text" name="cvv" required><br>
        Name on Card: <input type="text" name="name_on_card" required><br>
        Billing Address: <input type="text" name="billing_address" required><br>
        <input type="submit" value="Complete Purchase">
    </form>
</body>
</html>


<?php
session_start();

if (!empty($_SESSION['cart'])) {
    // Here you would typically process the payment, save order details to database,
    // and send an email confirmation.

    // For this example, we'll just display a success message.
    echo "<h1>Thank You for Your Order!</h1>";
    echo "<p>Your order has been received. Order Summary:</p>";

    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += ($item['price'] * $item['quantity']);
        echo "<li>".$item['name']." x ".$item['quantity']."</li>";
    }
    echo "<p>Total: \$".$total."</p>";

    // Clear the cart
    unset($_SESSION['cart']);
} else {
    header("Location: index.php");
}
?>


class Product {
    private $db;

    public function __construct($connection) {
        $this->db = $connection;
    }

    public function getProducts() {
        try {
            $stmt = $this->db->query("SELECT * FROM products");
            return $stmt->fetchAll(PDO::FETCH_ASSOC);
        } catch (PDOException $e) {
            echo "Error: " . $e->getMessage();
        }
    }

    public function getProduct($id) {
        try {
            $stmt = $this->db->prepare("SELECT * FROM products WHERE id = ?");
            $stmt->execute([$id]);
            return $stmt->fetch(PDO::FETCH_ASSOC);
        } catch (PDOException $e) {
            echo "Error: " . $e->getMessage();
        }
    }

    public function addProduct($name, $description, $price, $stock) {
        try {
            $stmt = $this->db->prepare("INSERT INTO products(name, description, price, stock) VALUES(?, ?, ?, ?)");
            $stmt->execute([$name, $description, $price, $stock]);
            return true;
        } catch (PDOException $e) {
            echo "Error: " . $e->getMessage();
            return false;
        }
    }

    // Add more methods as needed
}


class ShoppingCart {
    private $db;

    public function __construct($connection) {
        $this->db = $connection;
    }

    public function addToCart($product_id, $quantity) {
        if (isset($_SESSION['cart'])) {
            $_SESSION['cart'][$product_id] += $quantity;
        } else {
            $_SESSION['cart'] = array($product_id => $quantity);
        }
        return true;
    }

    public function removeFromCart($product_id) {
        unset($_SESSION['cart'][$product_id]);
        return true;
    }

    public function getCart() {
        if (isset($_SESSION['cart'])) {
            $products = array();
            foreach ($_SESSION['cart'] as $id => $quantity) {
                $stmt = $this->db->prepare("SELECT * FROM products WHERE id = ?");
                $stmt->execute([$id]);
                $product = $stmt->fetch(PDO::FETCH_ASSOC);
                if ($product) {
                    $products[] = array(
                        'id' => $id,
                        'name' => $product['name'],
                        'price' => $product['price'],
                        'quantity' => $quantity
                    );
                }
            }
            return $products;
        } else {
            return array();
        }
    }

    public function clearCart() {
        unset($_SESSION['cart']);
        return true;
    }

    public function getCartTotal() {
        $total = 0;
        foreach ($_SESSION['cart'] as $id => $quantity) {
            $stmt = $this->db->prepare("SELECT price FROM products WHERE id = ?");
            $stmt->execute([$id]);
            $price = $stmt->fetch(PDO::FETCH_ASSOC)['price'];
            $total += $price * $quantity;
        }
        return $total;
    }

    // Add more methods as needed
}


class Order {
    private $db;

    public function __construct($connection) {
        $this->db = $connection;
    }

    public function placeOrder($customer_id, $products) {
        try {
            $total = 0;
            foreach ($products as $product) {
                $total += $product['price'] * $product['quantity'];
            }

            foreach ($products as $product) {
                $stmt = $this->db->prepare("INSERT INTO orders(product_id, customer_id, quantity, total_amount) VALUES(?, ?, ?, ?)");
                $stmt->execute([$product['id'], $customer_id, $product['quantity'], $product['price'] * $product['quantity']]);
            }

            return true;
        } catch (PDOException $e) {
            echo "Error: " . $e->getMessage();
            return false;
        }
    }

    public function getOrder($order_id) {
        try {
            $stmt = $this->db->prepare("SELECT * FROM orders WHERE order_id = ?");
            $stmt->execute([$order_id]);
            return $stmt->fetch(PDO::FETCH_ASSOC);
        } catch (PDOException $e) {
            echo "Error: " . $e->getMessage();
        }
    }

    // Add more methods as needed
}


class User {
    private $db;

    public function __construct($connection) {
        $this->db = $connection;
    }

    public function register($first_name, $last_name, $email, $password_hash, $address) {
        try {
            $stmt = $this->db->prepare("INSERT INTO users(first_name, last_name, email, password_hash, address) VALUES(?, ?, ?, ?, ?)");
            $stmt->execute([$first_name, $last_name, $email, $password_hash, $address]);
            return true;
        } catch (PDOException $e) {
            echo "Error: " . $e->getMessage();
            return false;
        }
    }

    public function login($email, $password) {
        try {
            $stmt = $this->db->prepare("SELECT * FROM users WHERE email = ?");
            $stmt->execute([$email]);
            $user = $stmt->fetch(PDO::FETCH_ASSOC);
            
            if ($user && password_verify($password, $user['password_hash'])) {
                $_SESSION['logged_in'] = true;
                $_SESSION['user_id'] = $user['id'];
                return true;
            } else {
                return false;
            }
        } catch (PDOException $e) {
            echo "Error: " . $e->getMessage();
            return false;
        }
    }

    public function logout() {
        session_unset();
        session_destroy();
        return true;
    }

    // Add more methods as needed
}


session_start();

if (!isset($_SESSION['logged_in'])) {
    header("Location: login.php");
    exit();
}

include 'connection.php';
$shoppingCart = new ShoppingCart($conn);
$product = new Product($conn);
$order = new Order($conn);

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $cartItems = $shoppingCart->getCart();

    if (!empty($cartItems)) {
        // Process payment here (simulated for this example)
        $orderStatus = $order->placeOrder($_SESSION['user_id'], $cartItems);

        if ($orderStatus) {
            // Clear the cart
            $shoppingCart->clearCart();

            // Send confirmation email
            $to = $_POST['email'];
            $subject = "Purchase Confirmation";
            $message = "Thank you for your purchase!";
            mail($to, $subject, $message);

            header("Location: thank_you.php");
            exit();
        } else {
            echo "Error processing your order.";
        }
    } else {
        echo "Your cart is empty.";
    }
}


session_start();

include 'connection.php';
$product = new Product($conn);

$products = $product->getProducts();

foreach ($products as $item) {
    echo "<div class='product'>";
    echo "<h2>" . $item['name'] . "</h2>";
    echo "<p>" . $item['description'] . "</p>";
    echo "<p>Price: $" . number_format($item['price'], 2) . "</p>";
    echo "<form method='post' action='add_to_cart.php'>";
    echo "<input type='hidden' name='product_id' value='" . $item['id'] . "'>";
    echo "<input type='number' name='quantity' min='1' value='1'>";
    echo "<button type='submit'>Add to Cart</button>";
    echo "</form>";
    echo "</div>";
}


session_start();

if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

include 'connection.php';
$shoppingCart = new ShoppingCart($conn);

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $product_id = intval($_POST['product_id']);
    $quantity = intval($_POST['quantity']);

    if ($quantity > 0) {
        $shoppingCart->addToCart($product_id, $quantity);
        header("Location: cart.php");
        exit();
    }
}


session_start();

include 'connection.php';
$shoppingCart = new ShoppingCart($conn);

$cartItems = $shoppingCart->getCart();
$total = $shoppingCart->getCartTotal();

echo "<h1>Your Shopping Cart</h1>";
if (!empty($cartItems)) {
    foreach ($cartItems as $item) {
        echo "<div class='cart-item'>";
        echo "<p>" . $item['name'] . "</p>";
        echo "<p>Quantity: " . $item['quantity'] . "</p>";
        echo "<p>Price: $" . number_format($item['price'], 2) . "</p>";
        echo "<a href='remove_from_cart.php?id=" . $item['id'] . "'>Remove</a>";
        echo "</div>";
    }
    echo "<h2>Total: $" . number_format($total, 2) . "</h2>";
    echo "<form method='post' action='checkout.php'>";
    echo "<button type='submit'>Checkout</button>";
    echo "</form>";
} else {
    echo "Your cart is empty.";
}


session_start();

if (isset($_GET['id'])) {
    include 'connection.php';
    $shoppingCart = new ShoppingCart($conn);
    $shoppingCart->removeFromCart(intval($_GET['id']));
}

header("Location: cart.php");
exit();


<?php
$products = [
    ['id' => 1, 'name' => 'Laptop', 'price' => 999.99, 'stock' => 5],
    ['id' => 2, 'name' => 'Smartphone', 'price' => 699.99, 'stock' => 10]
];
?>

<!DOCTYPE html>
<html>
<head>
    <title>Product Store</title>
</head>
<body>
    <h1>Available Products</h1>
    <?php foreach ($products as $product): ?>
        <div style="border: 1px solid #ddd; padding: 10px; margin: 5px;">
            <h3><?php echo $product['name']; ?></h3>
            <p>Price: $<?php echo number_format($product['price'], 2); ?></p>
            <p>Stock: <?php echo $product['stock']; ?></p>
            <form action="add_to_cart.php" method="post">
                <input type="hidden" name="product_id" value="<?php echo $product['id']; ?>">
                <input type="number" name="quantity" min="1" max="<?php echo $product['stock']; ?>" required>
                <button type="submit">Add to Cart</button>
            </form>
        </div>
    <?php endforeach; ?>
</body>
</html>


<?php
session_start();
require_once('db_connection.php'); // Assume you have a database connection script.

$product_id = $_POST['product_id'];
$quantity = $_POST['quantity'];

// Validate input
if (!isset($product_id, $quantity) || !is_numeric($quantity) || $quantity < 1) {
    header("Location: index.php?error=invalid_quantity");
    exit();
}

// Check stock (simplified)
$product = mysqli_fetch_assoc(mysqli_query($conn, "SELECT * FROM products WHERE id=$product_id"));
if ($product['stock'] >= $quantity) {
    // Add to cart
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = [];
    }
    array_push($_SESSION['cart'], [
        'id' => $product_id,
        'name' => $product['name'],
        'price' => $product['price'],
        'quantity' => $quantity
    ]);
} else {
    header("Location: index.php?error=stock_unavailable");
    exit();
}

header("Location: checkout.php");
exit();


<?php
session_start();

$total = 0;
?>

<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
</head>
<body>
    <?php if (!empty($_SESSION['cart'])): ?>
        <h2>Your Cart</h2>
        <table border="1">
            <tr><th>Item</th><th>Price</th><th>Quantity</th><th>Total</th></tr>
            <?php foreach ($_SESSION['cart'] as $item): ?>
                <?php 
                    $subtotal = $item['price'] * $item['quantity'];
                    $total += $subtotal;
                ?>
                <tr>
                    <td><?php echo $item['name']; ?></td>
                    <td>$<?php echo number_format($item['price'], 2); ?></td>
                    <td><?php echo $item['quantity']; ?></td>
                    <td>$<?php echo number_format($subtotal, 2); ?></td>
                </tr>
            <?php endforeach; ?>
        </table>
        <h3>Total: $<?php echo number_format($total, 2); ?></h3>
        
        <form action="process_payment.php" method="post">
            <label>Card Number:</label><br>
            <input type="text" name="card_number" required><br><br>
            
            <label>Name on Card:</label><br>
            <input type="text" name="name_on_card" required><br><br>
            
            <label>Expiration Date (MM/YY):</label><br>
            <input type="text" name="expiration_date" pattern="\d{2}/\d{2}" required><br><br>
            
            <button type="submit">Purchase</button>
        </form>
    <?php else: ?>
        <p>Your cart is empty. Please add items first.</p>
        <a href="index.php">Back to Store</a>
    <?php endif; ?>
</body>
</html>


<?php
session_start();
require_once('db_connection.php');

// Retrieve cart items
$cartItems = $_SESSION['cart'];
$totalAmount = ...; // Calculate total amount from cart items

// Save order to database
$orderQuery = "INSERT INTO orders (total_amount, user_email, purchase_date) VALUES (?, ?, NOW())";
$stmt = mysqli_prepare($conn, $orderQuery);
mysqli_stmt_bind_param($stmt, 'ds', $totalAmount, $_POST['email']);
mysqli_execute($stmt);
$order_id = mysqli_insert_id($conn);

// Save order items
foreach ($cartItems as $item) {
    $orderItemQuery = "INSERT INTO order_items (order_id, product_id, quantity, price) VALUES (?, ?, ?, ?)";
    $stmt = mysqli_prepare($conn, $orderItemQuery);
    mysqli_stmt_bind_param($stmt, 'iiid', $order_id, $item['id'], $item['quantity'], $item['price']);
    mysqli_execute($stmt);
}

// Update stock
foreach ($cartItems as $item) {
    $updateStock = "UPDATE products SET stock = stock - ? WHERE id=?";
    $stmt = mysqli_prepare($conn, $updateStock);
    mysqli_stmt_bind_param($stmt, 'ii', $item['quantity'], $item['id']);
    mysqli_execute($stmt);
}

// Clear cart
unset($_SESSION['cart']);

// Redirect to thank you page
header("Location: thank_you.php?order_id=$order_id");
exit();


<?php
$order_id = $_GET['order_id'];
$total_amount = ...; // Retrieve total from database based on order_id
?>

<!DOCTYPE html>
<html>
<head>
    <title>Thank You</title>
</head>
<body>
    <h1>Thank you for your purchase!</h1>
    <p>Your order ID is: <?php echo $order_id; ?></p>
    <p>Total amount: $<?php echo number_format($total_amount, 2); ?></p>
</body>
</html>


<?php
session_start();

// Initialize cart if not exists
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function add_to_cart($id, $name, $price) {
    global $db;
    $found = false;
    
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['id'] == $id) {
            $item['quantity']++;
            $found = true;
            break;
        }
    }
    
    if (!$found) {
        $_SESSION['cart'][] = array(
            'id' => $id,
            'name' => $name,
            'price' => $price,
            'quantity' => 1
        );
    }
}

// Function to show cart items
function show_cart() {
    $total_price = 0;
    echo "<table border='1'>";
    echo "<tr><th>Product Name</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>";
    
    foreach ($_SESSION['cart'] as $key => $item) {
        $total = $item['price'] * $item['quantity'];
        $total_price += $total;
        
        echo "<tr>";
        echo "<td>" . $item['name'] . "</td>";
        echo "<td>₹" . number_format($item['price'], 2) . "</td>";
        echo "<td><input type='text' name='quantity[".$key."]' value='".$item['quantity']."' size='3'></td>";
        echo "<td>₹" . number_format($total, 2) . "</td>";
        echo "<td><a href='cart.php?action=remove&id=".$item['id']."'>Remove</a></td>";
        echo "</tr>";
    }
    
    echo "<tr><td colspan='4'><strong>Total:</strong></td><td>₹" . number_format($total_price, 2) . "</td></tr>";
    echo "</table>";
}

// Function to remove item from cart
function remove_from_cart($id) {
    $new_cart = array();
    
    foreach ($_SESSION['cart'] as $item) {
        if ($item['id'] != $id) {
            $new_cart[] = $item;
        }
    }
    
    $_SESSION['cart'] = $new_cart;
}

// Function to update cart quantities
function update_cart() {
    if (isset($_POST['update'])) {
        foreach ($_POST['quantity'] as $key => $qty) {
            $_SESSION['cart'][$key]['quantity'] = $qty;
        }
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
    <style>
        body { font-family: Arial, sans-serif; }
        table { width: 100%; border-collapse: collapse; margin-top: 20px; }
        th, td { padding: 10px; text-align: left; }
        th { background-color: #f2f2f2; }
    </style>
</head>
<body>

<?php
// Sample product data (you can replace this with your database connection)
$products = array(
    array('id' => 1, 'name' => 'Laptop', 'price' => 50000),
    array('id' => 2, 'name' => 'Phone', 'price' => 10000),
    array('id' => 3, 'name' => 'Tablet', 'price' => 7000)
);

// Display products
echo "<h2>Products</h2>";
foreach ($products as $product) {
    echo "<div style='float: left; margin-right: 20px; padding: 10px; border: 1px solid #ddd;'>";
    echo "<h3>".$product['name']."</h3>";
    echo "₹".number_format($product['price'], 2)."<br />";
    echo "<a href='cart.php?action=add&id=".$product['id']."&name=".$product['name']."&price=".$product['price']."' style='color: #0066cc;'>Add to Cart</a>";
    echo "</div>";
}

// Handle actions
if (isset($_GET['action'])) {
    switch ($_GET['action']) {
        case 'add':
            if (isset($_GET['id'], $_GET['name'], $_GET['price'])) {
                add_to_cart($_GET['id'], $_GET['name'], $_GET['price']);
            }
            break;
            
        case 'remove':
            if (isset($_GET['id'])) {
                remove_from_cart($_GET['id']);
            }
            break;
    }
}

// Update cart quantities
if (isset($_POST['update'])) {
    update_cart();
}

echo "<h2>Your Cart</h2>";
show_cart();

// Checkout form
echo "<form method='post'>";
echo "<input type='submit' name='update' value='Update Quantities' style='margin-bottom: 10px;'/>";
echo "</form>";

if (!empty($_SESSION['cart'])) {
    echo "<a href='checkout.php' style='float: right; color: #0066cc;'>Checkout</a>";
}

?>
</body>
</html>


  <?php
  session_start();
  
  if (!isset($_GET['product_id']) || !is_numeric($_GET['product_id'])) {
      header("Location: products.php?error=Invalid product ID");
      exit();
  }
  
  $product_id = intval($_GET['product_id']);
  $quantity = isset($_GET['quantity']) && is_numeric($_GET['quantity']) ? intval($_GET['quantity']) : 1;
  
  if ($quantity < 1) {
      header("Location: products.php?error=Quantity must be at least 1");
      exit();
  }
  
  if (!isset($_SESSION['cart'])) {
      $_SESSION['cart'] = array();
  }
  
  $found = false;
  foreach ($_SESSION['cart'] as &$item) {
      if ($item['product_id'] == $product_id) {
          $item['quantity'] += $quantity;
          $found = true;
          break;
      }
  }
  
  if (!$found) {
      $_SESSION['cart'][] = array('product_id' => $product_id, 'quantity' => $quantity);
  }
  
  header("Location: show_cart.php");
  exit();
  ?>
  

- **show_cart.php:**
  
  <?php
  session_start();
  require_once('products.php');
  
  if (!isset($_SESSION['cart']) || count($_SESSION['cart']) == 0) {
      echo "<p>Your cart is empty.</p>";
      exit();
  }
  
  $total = 0;
  foreach ($_SESSION['cart'] as $index => $item) {
      $product_id = $item['product_id'];
      if (!isset($products[$product_id])) continue; // Skip invalid products
      
      $price = 1000; // Replace with actual product price from database
      $total += $price * $item['quantity'];
      
      echo "<div class='cart-item'>";
      echo "<img src='images/{$products[$product_id]['image']}' alt='{$products[$product_id]['name']}'>";
      echo "<h3>{$products[$product_id]['name']}</h3>";
      echo "<p>Quantity: {$item['quantity']}</p>";
      echo "<a href='remove_item.php?index=$index'>Remove</a>";
      echo "<form action='update_quantity.php' method='post'>";
      echo "<input type='hidden' name='index' value='$index'>";
      echo "<input type='number' name='quantity' min='1' value='{$item['quantity']}'>";
      echo "<button type='submit'>Update Quantity</button>";
      echo "</form>";
      echo "</div>";
  }
  
  echo "<h2>Total: $total</h2>";
  ?>
  

- **remove_item.php:**
  
  <?php
  session_start();
  
  if (isset($_GET['index']) && is_numeric($_GET['index'])) {
      $index = intval($_GET['index']);
      if (isset($_SESSION['cart'][$index])) {
          array_splice($_SESSION['cart'], $index, 1);
      }
  }
  
  header("Location: show_cart.php");
  exit();
  ?>
  

- **update_quantity.php:**
  
  <?php
  session_start();
  
  if (isset($_POST['index']) && is_numeric($_POST['index']) && isset($_POST['quantity']) && is_numeric($_POST['quantity'])) {
      $index = intval($_POST['index']);
      $quantity = intval($_POST['quantity']);
      
      if ($quantity < 1) {
          header("Location: show_cart.php?error=Quantity must be at least 1");
          exit();
      }
      
      if (isset($_SESSION['cart'][$index])) {
          $_SESSION['cart'][$index]['quantity'] = $quantity;
      }
  }
  
  header("Location: show_cart.php");
  exit();
  ?>
  

- **products.php:**
  
  <?php
  $products = array(
      1 => array('name' => 'Product 1', 'price' => 1000, 'image' => 'product1.jpg'),
      2 => array('name' => 'Product 2', 'price' => 1500, 'image' => 'product2.jpg'),
      // Add more products as needed
  );
  ?>
  

**HTML Example (products.php):**


<?php
// Database connection
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'purchase_system';

$conn = new mysqli($host, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Product class
class Product {
    private $conn;

    public function __construct($db_connection) {
        $this->conn = $db_connection;
    }

    // Sanitize input to prevent SQL injection
    private function sanitize($data) {
        return htmlspecialchars(strip_tags($this->conn->real_escape_string(trim($data))));
    }

    // Add product
    public function addProduct($name, $description, $price, $stock) {
        $name = $this->sanitize($name);
        $description = $this->sanitize($description);

        $sql = "INSERT INTO products (name, description, price, stock)
                VALUES ('$name', '$description', $price, $stock)";

        if ($this->conn->query($sql)) {
            return true;
        } else {
            echo "Error: " . $this->conn->error;
            return false;
        }
    }

    // Get all products
    public function getAllProducts() {
        $sql = "SELECT * FROM products";
        $result = $this->conn->query($sql);

        if ($result->num_rows > 0) {
            while ($row = $result->fetch_assoc()) {
                echo "<div class='product'>";
                echo "<h3>" . $row['name'] . "</h3>";
                echo "<p>" . $row['description'] . "</p>";
                echo "<p>Price: $" . number_format($row['price'], 2) . "</p>";
                echo "<p>Stock: " . $row['stock'] . "</p>";
                echo "<a href='add_to_cart.php?id=" . $row['id'] . "'>Add to Cart</a>";
                echo "</div>";
            }
        } else {
            echo "No products found.";
        }
    }

    // Update product
    public function updateProduct($id, $name, $description, $price, $stock) {
        $id = $this->sanitize($id);
        $name = $this->sanitize($name);
        $description = $this->sanitize($description);

        $sql = "UPDATE products SET name='$name', description='$description', price=$price, stock=$stock WHERE id=$id";

        if ($this->conn->query($sql)) {
            return true;
        } else {
            echo "Error: " . $this->conn->error;
            return false;
        }
    }

    // Delete product
    public function deleteProduct($id) {
        $id = $this->sanitize($id);

        $sql = "DELETE FROM products WHERE id=$id";

        if ($this->conn->query($sql)) {
            return true;
        } else {
            echo "Error: " . $this->conn->error;
            return false;
        }
    }
}

// User class
class User {
    private $conn;

    public function __construct($db_connection) {
        $this->conn = $db_connection;
    }

    // Sanitize input to prevent SQL injection
    private function sanitize($data) {
        return htmlspecialchars(strip_tags($this->conn->real_escape_string(trim($data))));
    }

    // Register user
    public function registerUser($name, $email, $password, $address) {
        $name = $this->sanitize($name);
        $email = $this->sanitize($email);
        $address = $this->sanitize($address);

        $sql = "SELECT * FROM users WHERE email='$email'";
        $result = $this->conn->query($sql);

        if ($result->num_rows > 0) {
            echo "User already exists!";
            return false;
        }

        // Hash password
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);

        $sql = "INSERT INTO users (name, email, password, address)
                VALUES ('$name', '$email', '$hashed_password', '$address')";

        if ($this->conn->query($sql)) {
            return true;
        } else {
            echo "Error: " . $this->conn->error;
            return false;
        }
    }

    // Login user
    public function loginUser($email, $password) {
        $email = $this->sanitize($email);

        $sql = "SELECT * FROM users WHERE email='$email'";
        $result = $this->conn->query($sql);

        if ($result->num_rows == 1) {
            $user = $result->fetch_assoc();
            if (password_verify($password, $user['password'])) {
                // Start session and store user data
                session_start();
                $_SESSION['user_id'] = $user['id'];
                $_SESSION['user_name'] = $user['name'];
                return true;
            } else {
                echo "Invalid password!";
                return false;
            }
        } else {
            echo "User not found!";
            return false;
        }
    }

    // Update user
    public function updateUser($id, $name, $email, $password, $address) {
        $id = $this->sanitize($id);
        $name = $this->sanitize($name);
        $email = $this->sanitize($email);
        $address = $this->sanitize($address);

        // Hash password if it's not empty
        if (!empty($password)) {
            $hashed_password = password_hash($password, PASSWORD_DEFAULT);
            $sql = "UPDATE users SET name='$name', email='$email', password='$hashed_password', address='$address' WHERE id=$id";
        } else {
            $sql = "UPDATE users SET name='$name', email='$email', address='$address' WHERE id=$id";
        }

        if ($this->conn->query($sql)) {
            return true;
        } else {
            echo "Error: " . $this->conn->error;
            return false;
        }
    }

    // Delete user
    public function deleteUser($id) {
        $id = $this->sanitize($id);

        $sql = "DELETE FROM users WHERE id=$id";

        if ($this->conn->query($sql)) {
            return true;
        } else {
            echo "Error: " . $this->conn->error;
            return false;
        }
    }

    // Get user by ID
    public function getUserById($id) {
        $id = $this->sanitize($id);

        $sql = "SELECT * FROM users WHERE id=$id";
        $result = $this->conn->query($sql);

        if ($result->num_rows == 1) {
            return $result->fetch_assoc();
        } else {
            return false;
        }
    }
}

// Order class
class Order {
    private $conn;

    public function __construct($db_connection) {
        $this->conn = $db_connection;
    }

    // Sanitize input to prevent SQL injection
    private function sanitize($data) {
        return htmlspecialchars(strip_tags($this->conn->real_escape_string(trim($data))));
    }

    // Add order
    public function addOrder($user_id, $product_id, $quantity) {
        $user_id = $this->sanitize($user_id);
        $product_id = $this->sanitize($product_id);
        $quantity = $this->sanitize($quantity);

        // Get product price
        $sql = "SELECT price FROM products WHERE id=$product_id";
        $result = $this->conn->query($sql);

        if ($result->num_rows == 1) {
            $product_price = $result->fetch_assoc()['price'];
            $total = $quantity * $product_price;

            $sql = "INSERT INTO orders (user_id, product_id, quantity, total)
                    VALUES ('$user_id', '$product_id', '$quantity', '$total')";

            if ($this->conn->query($sql)) {
                return true;
            } else {
                echo "Error: " . $this->conn->error;
                return false;
            }
        } else {
            echo "Product not found!";
            return false;
        }
    }

    // Get all orders for a user
    public function getAllOrders($user_id) {
        $user_id = $this->sanitize($user_id);

        $sql = "SELECT * FROM orders WHERE user_id=$user_id";
        $result = $this->conn->query($sql);

        if ($result->num_rows > 0) {
            while ($row = $result->fetch_assoc()) {
                echo "<div class='order'>";
                echo "<p>Order ID: " . $row['id'] . "</p>";
                echo "<p>Product ID: " . $row['product_id'] . "</p>";
                echo "<p>Quantity: " . $row['quantity'] . "</p>";
                echo "<p>Total: $" . number_format($row['total'], 2) . "</p>";
                echo "<p>Order Date: " . $row['order_date'] . "</p>";
                echo "</div>";
            }
        } else {
            echo "No orders found.";
        }
    }

    // Cancel order
    public function cancelOrder($id) {
        $id = $this->sanitize($id);

        $sql = "DELETE FROM orders WHERE id=$id";

        if ($this->conn->query($sql)) {
            return true;
        } else {
            echo "Error: " . $this->conn->error;
            return false;
        }
    }

    // Update order quantity
    public function updateOrderQuantity($id, $quantity) {
        $id = $this->sanitize($id);
        $quantity = $this->sanitize($quantity);

        $sql = "UPDATE orders SET quantity=$quantity WHERE id=$id";

        if ($this->conn->query($sql)) {
            return true;
        } else {
            echo "Error: " . $this->conn->error;
            return false;
        }
    }
}
?>


<?php
include 'classes.php';

// Initialize classes
$product = new Product($conn);
$user = new User($conn);
$order = new Order($conn);

// Example usage:
// Add a product
if ($product->addProduct('Laptop', 'High performance laptop with 16GB RAM and 500GB SSD', 999.99, 5)) {
    echo "Product added successfully!";
}

// Register user
if ($user->registerUser('John Doe', 'john@example.com', 'password123', '123 Street')) {
    echo "User registered successfully!";
}

// Login user
if ($user->loginUser('john@example.com', 'password123')) {
    echo "Login successful!";
}

// Add order
session_start();
$user_id = $_SESSION['user_id'];
$product_id = 1;
$quantity = 1;

if ($order->addOrder($user_id, $product_id, $quantity)) {
    echo "Order added successfully!";
}
?>


// Add to cart (add_to_cart.php)
session_start();

if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

$product_id = isset($_GET['id']) ? intval($_GET['id']) : 0;

if ($product_id > 0) {
    if (!isset($_SESSION['cart'][$product_id])) {
        $_SESSION['cart'][$product_id] = 1;
    } else {
        $_SESSION['cart'][$product_id]++;
    }
}

header("Location: index.php");
exit();


// Checkout (checkout.php)
session_start();

if (!isset($_SESSION['user_id'])) {
    header("Location: login.php");
    exit();
}

$user_id = $_SESSION['user_id'];

foreach ($_SESSION['cart'] as $product_id => $quantity) {
    if ($order->addOrder($user_id, $product_id, $quantity)) {
        // Remove from cart
        unset($_SESSION['cart'][$product_id]);
    }
}


// Process order (process_order.php)
session_start();

if (!isset($_SESSION['user_id'])) {
    header("Location: login.php");
    exit();
}

$user_id = $_SESSION['user_id'];
$total_amount = 0;

foreach ($_SESSION['cart'] as $product_id => $quantity) {
    // Get product price
    $sql = "SELECT price, stock FROM products WHERE id=$product_id";
    $result = $conn->query($sql);

    if ($result->num_rows == 1) {
        $row = $result->fetch_assoc();
        $price = $row['price'];
        $stock = $row['stock'];

        if ($quantity > $stock) {
            echo "Not enough stock for product: $product_id";
            continue;
        }

        // Calculate total
        $total_amount += $price * $quantity;

        // Deduct quantity from stock
        $sql = "UPDATE products SET stock=stock-$quantity WHERE id=$product_id";
        if (!$conn->query($sql)) {
            echo "Error updating stock: " . $conn->error;
        }

        // Add to orders
        $sql = "INSERT INTO orders (user_id, product_id, quantity, total)
                VALUES ($user_id, $product_id, $quantity, $price * $quantity)";
        if (!$conn->query($sql)) {
            echo "Error adding order: " . $conn->error;
        }
    } else {
        echo "Product not found: $product_id";
    }
}

// Clear cart
unset($_SESSION['cart']);

header("Location: thank_you.php");
exit();


<?php
// Include database connection
include('db_connection.php');

function getProducts() {
    $query = "SELECT * FROM products";
    $stmt = $conn->prepare($query);
    $stmt->execute();
    return $stmt->fetchAll(PDO::FETCH_ASSOC);
}

$products = getProducts();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Product List</title>
</head>
<body>
    <?php include('header.php'); ?>
    
    <h2>Available Products</h2>
    <?php foreach ($products as $product): ?>
        <div class="product">
            <h3><?php echo $product['name']; ?></h3>
            <p>Price: $<?php echo number_format($product['price'], 2); ?></p>
            <form action="add_to_cart.php" method="post">
                <input type="hidden" name="product_id" value="<?php echo $product['id']; ?>">
                <input type="number" name="quantity" min="1" value="1">
                <button type="submit">Add to Cart</button>
            </form>
        </div>
    <?php endforeach; ?>
    
    <?php include('footer.php'); ?>
</body>
</html>


<?php
session_start();

if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

$product_id = isset($_POST['product_id']) ? (int)$_POST['product_id'] : 0;
$quantity = isset($_POST['quantity']) ? (int)$_POST['quantity'] : 1;

// Validate product exists
include('db_connection.php');
$query = "SELECT * FROM products WHERE id = ?";
$stmt = $conn->prepare($query);
$stmt->bindParam(1, $product_id);
$stmt->execute();

$product = $stmt->fetch(PDO::FETCH_ASSOC);

if ($product) {
    // Add to cart
    if (!isset($_SESSION['cart'][$product_id])) {
        $_SESSION['cart'][$product_id] = array(
            'name' => $product['name'],
            'price' => $product['price'],
            'quantity' => 0
        );
    }
    
    // Update quantity
    $_SESSION['cart'][$product_id]['quantity'] += $quantity;
}

header('Location: view_cart.php');
exit();


<?php
session_start();

if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <?php include('header.php'); ?>
    
    <h2>Your Shopping Cart</h2>
    <?php if (empty($_SESSION['cart'])): ?>
        <p>Your cart is empty.</p>
    <?php else: ?>
        <table>
            <tr>
                <th>Product</th>
                <th>Price</th>
                <th>Quantity</th>
                <th>Total</th>
            </tr>
            <?php foreach ($_SESSION['cart'] as $product_id => $item): ?>
                <tr>
                    <td><?php echo $item['name']; ?></td>
                    <td>$<?php echo number_format($item['price'], 2); ?></td>
                    <td><?php echo $item['quantity']; ?></td>
                    <td>$<?php echo number_format($item['price'] * $item['quantity'], 2); ?></td>
                </tr>
            <?php endforeach; ?>
        </table>
    <?php endif; ?>

    <?php if (!empty($_SESSION['cart'])): ?>
        <a href="checkout.php">Proceed to Checkout</a>
    <?php endif; ?>

    <?php include('footer.php'); ?>
</body>
</html>


<?php
session_start();

if (empty($_SESSION['cart'])) {
    header('Location: products.php');
    exit();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
</head>
<body>
    <?php include('header.php'); ?>
    
    <h2>Checkout</h2>
    <?php if (empty($_SESSION['cart'])): ?>
        <p>Your cart is empty.</p>
    <?php else: ?>
        <table>
            <tr>
                <th>Product</th>
                <th>Price</th>
                <th>Quantity</th>
                <th>Total</th>
            </tr>
            <?php foreach ($_SESSION['cart'] as $product_id => $item): ?>
                <tr>
                    <td><?php echo $item['name']; ?></td>
                    <td>$<?php echo number_format($item['price'], 2); ?></td>
                    <td><?php echo $item['quantity']; ?></td>
                    <td>$<?php echo number_format($item['price'] * $item['quantity'], 2); ?></td>
                </tr>
            <?php endforeach; ?>
        </table>

        <h3>Payment Information</h3>
        <form action="process_payment.php" method="post">
            <label for="card_number">Card Number:</label>
            <input type="text" id="card_number" name="card_number" required><br>

            <label for="card_cvv">CVV:</label>
            <input type="text" id="card_cvv" name="card_cvv" required><br>

            <label for="card_expiry">Expiry Date:</label>
            <input type="text" id="card_expiry" name="card_expiry" placeholder="MM/YY" required><br>

            <button type="submit">Complete Purchase</button>
        </form>
    <?php endif; ?>

    <?php include('footer.php'); ?>
</body>
</html>


<?php
session_start();

if (empty($_SESSION['cart'])) {
    header('Location: products.php');
    exit();
}

// Simulate payment processing
$paymentProcessed = true;

if ($paymentProcessed) {
    // Save order to database
    include('db_connection.php');

    $order_query = "INSERT INTO orders SET 
        total_amount = ?,
        payment_method = 'credit_card',
        created_at = NOW()";

    $stmt = $conn->prepare($order_query);
    $totalAmount = calculateTotal();
    $stmt->bindParam(1, $totalAmount);
    $stmt->execute();

    $order_id = $conn->lastInsertId();

    // Save order items
    foreach ($_SESSION['cart'] as $product_id => $item) {
        $order_item_query = "INSERT INTO order_items SET 
            order_id = ?,
            product_id = ?,
            quantity = ?,
            price = ?";
        
        $stmt = $conn->prepare($order_item_query);
        $stmt->bindParam(1, $order_id);
        $stmt->bindParam(2, $product_id);
        $stmt->bindParam(3, $item['quantity']);
        $stmt->bindParam(4, $item['price']);
        $stmt->execute();
    }

    // Clear cart
    $_SESSION['cart'] = array();

    header('Location: purchase_confirmation.php?order_id=' . $order_id);
} else {
    die("Payment processing failed. Please try again.");
}

function calculateTotal() {
    session_start();
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += $item['price'] * $item['quantity'];
    }
    return $total;
}


<?php
session_start();

$order_id = isset($_GET['order_id']) ? (int)$_GET['order_id'] : 0;

include('db_connection.php');

$query = "SELECT * FROM orders WHERE id = ?";
$stmt = $conn->prepare($query);
$stmt->bindParam(1, $order_id);
$stmt->execute();
$order = $stmt->fetch(PDO::FETCH_ASSOC);

if (!$order) {
    die("Invalid order ID.");
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Purchase Confirmation</title>
</head>
<body>
    <?php include('header.php'); ?>
    
    <h2>Order #<?php echo $order_id; ?></h2>
    <p>Your order has been successfully processed!</p>
    <p>Total Amount: $<?php echo number_format($order['total_amount'], 2); ?></p>

    <a href="products.php">Continue Shopping</a>

    <?php include('footer.php'); ?>
</body>
</html>


<?php
$host = 'localhost';
$dbname = 'purchase_system';
$user = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $user, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}
?>


<?php
session_start();

// Include database connection
require_once 'config.php';

function register($username, $email, $password, $first_name, $last_name) {
    global $conn;
    
    // Hash password
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);
    
    try {
        $stmt = $conn->prepare("INSERT INTO users (username, email, password_hash, first_name, last_name) VALUES (?, ?, ?, ?, ?)");
        $stmt->execute([$username, $email, $hashed_password, $first_name, $last_name]);
        return true;
    } catch(PDOException $e) {
        echo "Registration failed: " . $e->getMessage();
        return false;
    }
}

function login($email, $password) {
    global $conn;
    
    try {
        $stmt = $conn->prepare("SELECT * FROM users WHERE email = ?");
        $stmt->execute([$email]);
        $user = $stmt->fetch(PDO::FETCH_ASSOC);
        
        if ($user && password_verify($password, $user['password_hash'])) {
            $_SESSION['user'] = [
                'id' => $user['id'],
                'username' => $user['username'],
                'email' => $user['email']
            ];
            return true;
        }
        return false;
    } catch(PDOException $e) {
        echo "Login failed: " . $e->getMessage();
        return false;
    }
}
?>


<?php
session_start();

// Initialize cart if not exists
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = [];
}

function add_to_cart($product_id, $quantity) {
    global $conn;
    
    try {
        // Check if product exists and has enough stock
        $stmt = $conn->prepare("SELECT * FROM products WHERE id = ?");
        $stmt->execute([$product_id]);
        $product = $stmt->fetch(PDO::FETCH_ASSOC);
        
        if (!$product) {
            return "Product not found!";
        }
        
        if ($quantity > $product['stock']) {
            return "Not enough stock!";
        }
        
        // Add to cart
        $_SESSION['cart'][$product_id] = [
            'name' => $product['name'],
            'price' => $product['price'],
            'quantity' => $quantity,
            'total_price' => $product['price'] * $quantity
        ];
        
        return "Product added to cart!";
    } catch(PDOException $e) {
        return "Error adding product: " . $e->getMessage();
    }
}

function update_cart_quantity($product_id, $quantity) {
    if (!isset($_SESSION['cart'][$product_id])) {
        return "Product not in cart!";
    }
    
    $_SESSION['cart'][$product_id]['quantity'] = $quantity;
    $_SESSION['cart'][$product_id]['total_price'] = $_SESSION['cart'][$product_id]['price'] * $quantity;
    
    return "Quantity updated!";
}

function delete_from_cart($product_id) {
    if (isset($_SESSION['cart'][$product_id])) {
        unset($_SESSION['cart'][$product_id]);
        return "Product removed from cart!";
    }
    return "Product not found in cart!";
}
?>


<?php
session_start();

// Include database connection and cart functions
require_once 'config.php';
require_once 'cart_functions.php';

function generate_order() {
    global $conn;
    
    if (empty($_SESSION['cart']) || !isset($_SESSION['user'])) {
        return "No items in cart or user not logged in!";
    }
    
    try {
        // Start transaction
        $conn->beginTransaction();
        
        // Insert order
        $stmt = $conn->prepare("INSERT INTO orders (user_id, total_amount) VALUES (?, ?)");
        $total_amount = array_sum(array_column($_SESSION['cart'], 'total_price'));
        $stmt->execute([$_SESSION['user']['id'], $total_amount]);
        $order_id = $conn->lastInsertId();
        
        // Insert order details
        foreach ($_SESSION['cart'] as $product) {
            $stmt_details = $conn->prepare("INSERT INTO order_details (order_id, product_id, quantity, price) VALUES (?, ?, ?, ?)");
            $stmt_details->execute([$order_id, $product['id'], $product['quantity'], $product['price']]);
        }
        
        // Clear cart
        unset($_SESSION['cart']);
        
        // Commit transaction
        $conn->commit();
        return "Order placed successfully!";
    } catch(PDOException $e) {
        // Rollback transaction on error
        $conn->rollBack();
        return "Error placing order: " . $e->getMessage();
    }
}
?>


<?php
session_start();

// Include database connection
require_once 'config.php';

function get_user_orders() {
    global $conn;
    
    if (!isset($_SESSION['user'])) {
        return "Please login!";
    }
    
    try {
        $stmt = $conn->prepare("SELECT * FROM orders WHERE user_id = ?");
        $stmt->execute([$_SESSION['user']['id']]);
        $orders = $stmt->fetchAll(PDO::FETCH_ASSOC);
        
        foreach ($orders as &$order) {
            $stmt_details = $conn->prepare("SELECT od.*, p.name AS product_name, p.price AS product_price FROM order_details od JOIN products p ON od.product_id = p.id WHERE order_id = ?");
            $stmt_details->execute([$order['id']]);
            $order['details'] = $stmt_details->fetchAll(PDO::FETCH_ASSOC);
        }
        
        return $orders;
    } catch(PDOException $e) {
        return "Error fetching orders: " . $e->getMessage();
    }
}
?>


<?php
require_once 'auth.php';

if (isset($_POST['register'])) {
    $username = $_POST['username'];
    $email = $_POST['email'];
    $password = $_POST['password'];
    $first_name = $_POST['first_name'];
    $last_name = $_POST['last_name'];
    
    if (register($username, $email, $password, $first_name, $last_name)) {
        echo "Registration successful!";
    }
}
?>


<?php
require_once 'auth.php';

if (isset($_POST['login'])) {
    $email = $_POST['email'];
    $password = $_POST['password'];
    
    if (login($email, $password)) {
        header("Location: dashboard.php");
        exit();
    } else {
        echo "Invalid email or password!";
    }
}
?>


<?php
require_once 'config.php';

// Fetch products from database
try {
    $stmt = $conn->query("SELECT * FROM products");
    $products = $stmt->fetchAll(PDO::FETCH_ASSOC);
} catch(PDOException $e) {
    echo "Error fetching products: " . $e->getMessage();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Product List</title>
</head>
<body>
    <?php foreach ($products as $product): ?>
        <div>
            <h2><?php echo $product['name']; ?></h2>
            <p><?php echo $product['description']; ?></p>
            <p>Price: <?php echo $product['price']; ?> $</p>
            <form action="add_to_cart.php" method="POST">
                <input type="hidden" name="product_id" value="<?php echo $product['id']; ?>">
                <input type="number" name="quantity" min="1" max="<?php echo $product['stock']; ?>" value="1">
                <button type="submit">Add to Cart</button>
            </form>
        </div>
    <?php endforeach; ?>
</body>
</html>


<?php
session_start();
require_once 'cart_functions.php';

if (isset($_POST['product_id']) && isset($_POST['quantity'])) {
    $result = add_to_cart($_POST['product_id'], $_POST['quantity']);
    echo $result;
}
?>


<?php
session_start();
require_once 'order_functions.php';

if (isset($_SESSION['user'])) {
    $message = generate_order();
    echo $message;
} else {
    echo "Please login to place an order!";
}
?>


<?php
session_start();
require_once 'order_functions.php';

$orders = get_user_orders();

if (is_array($orders)) {
    foreach ($orders as $order) {
        echo "<h2>Order #{$order['id']}</h2>";
        echo "<p>Total Amount: {$order['total_amount']} $</p>";
        echo "<p>Order Date: " . date('Y-m-d H:i:s', strtotime($order['order_date'])) . "</p>";
        
        foreach ($order['details'] as $detail) {
            echo "<div>";
                echo "<h3>{$detail['product_name']}</h3>";
                echo "<p>Quantity: {$detail['quantity']}</p>";
                echo "<p>Price: {$detail['price']} $</p>";
                echo "<p>Total: " . ($detail['quantity'] * $detail['price']) . " $</p>";
            echo "</div>";
        }
    }
} else {
    echo $orders;
}
?>


<?php
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'shopping_cart';

// Create connection
$conn = new mysqli($host, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}
?>


<?php
include 'db_connect.php';

$sql = "SELECT * FROM products";
$result = $conn->query($sql);

if ($result->num_rows > 0) {
    while ($row = $result->fetch_assoc()) {
        echo "<div class='product'>";
        echo "<h2>" . $row['name'] . "</h2>";
        echo "<p>Price: $" . number_format($row['price'], 2) . "</p>";
        echo "<p>Description: " . $row['description'] . "</p>";
        echo "<form action='add_to_cart.php' method='post'>";
        echo "<input type='hidden' name='product_id' value='" . $row['id'] . "'>";
        echo "<input type='number' name='quantity' min='1' max='" . $row['stock'] . "' value='1'>";
        echo "<button type='submit'>Add to Cart</button>";
        echo "</form>";
        echo "</div>";
    }
} else {
    echo "No products available.";
}
$conn->close();
?>


<?php
session_start();

if (isset($_POST['product_id']) && isset($_POST['quantity'])) {
    $product_id = $_POST['product_id'];
    $quantity = $_POST['quantity'];

    // Check if product exists
    include 'db_connect.php';
    $sql = "SELECT * FROM products WHERE id = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("i", $product_id);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        $product = $result->fetch_assoc();

        // Add to cart
        $cart_item = array(
            'id' => $product['id'],
            'name' => $product['name'],
            'price' => $product['price'],
            'quantity' => $quantity,
            'total_price' => $product['price'] * $quantity
        );

        if (isset($_SESSION['cart'])) {
            $_SESSION['cart'][] = $cart_item;
        } else {
            $_SESSION['cart'] = array($cart_item);
        }
    }

    header("Location: cart.php");
    exit();
}
?>


<?php
session_start();

include 'db_connect.php';

$total = 0;
if (isset($_SESSION['cart'])) {
    foreach ($_SESSION['cart'] as $item) {
        $total += $item['total_price'];
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <?php if (isset($_SESSION['cart'])) : ?>
        <h1>Your Cart</h1>
        <table border='1'>
            <tr>
                <th>Product Name</th>
                <th>Quantity</th>
                <th>Price</th>
                <th>Total</th>
                <th>Action</th>
            </tr>
            <?php foreach ($_SESSION['cart'] as $item) : ?>
                <tr>
                    <td><?php echo $item['name']; ?></td>
                    <td><?php echo $item['quantity']; ?></td>
                    <td>$<?php echo number_format($item['price'], 2); ?></td>
                    <td>$<?php echo number_format($item['total_price'], 2); ?></td>
                    <td><a href="remove_from_cart.php?id=<?php echo $item['id']; ?>">Remove</a></td>
                </tr>
            <?php endforeach; ?>
        </table>
        <h3>Grand Total: $<?php echo number_format($total, 2); ?></h3>
        <form action="checkout.php" method="post">
            <input type="submit" value="Proceed to Checkout">
        </form>
    <?php else : ?>
        <p>Your cart is empty.</p>
    <?php endif; ?>
</body>
</html>


<?php
session_start();

if (isset($_GET['id'])) {
    $product_id = $_GET['id'];
    
    foreach ($_SESSION['cart'] as $key => $item) {
        if ($item['id'] == $product_id) {
            unset($_SESSION['cart'][$key]);
            // Re-index the array
            $_SESSION['cart'] = array_values($_SESSION['cart']);
        }
    }
}

header("Location: cart.php");
exit();
?>


<?php
session_start();

if (!isset($_SESSION['cart'])) {
    header("Location: products.php");
    exit();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
</head>
<body>
    <h1>Checkout</h1>
    
    <form action="process_order.php" method="post">
        <div>
            <label for="name">Name:</label>
            <input type="text" id="name" name="name" required>
        </div>
        
        <div>
            <label for="email">Email:</label>
            <input type="email" id="email" name="email" required>
        </div>
        
        <div>
            <label for="address">Address:</label>
            <textarea id="address" name="address" required></textarea>
        </div>
        
        <button type="submit">Place Order</button>
    </form>
</body>
</html>


<?php
session_start();

if (!isset($_SESSION['cart']) || count($_SESSION['cart']) == 0) {
    header("Location: products.php");
    exit();
}

include 'db_connect.php';

$user_id = 1; // For demonstration purposes, assume user is logged in

// Calculate total price
$total_price = 0;
foreach ($_SESSION['cart'] as $item) {
    $total_price += $item['total_price'];
}

// Insert order into database
$sql = "INSERT INTO orders (user_id, product_id, quantity, total_price) VALUES (?, ?, ?, ?)";
$stmt = $conn->prepare($sql);

foreach ($_SESSION['cart'] as $item) {
    $stmt->bind_param("iidi", $user_id, $item['id'], $item['quantity'], $item['total_price']);
    if (!$stmt->execute()) {
        die("Error inserting order: " . $conn->error);
    }
}

// Clear cart
unset($_SESSION['cart']);

// Redirect to confirmation page
header("Location: order_confirmation.php");
exit();
?>


<?php
session_start();

if (!isset($_SESSION['last_order_id'])) {
    header("Location: products.php");
    exit();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Order Confirmation</title>
</head>
<body>
    <h1>Thank you for your order!</h1>
    <p>Your order ID is <?php echo $_SESSION['last_order_id']; ?></p>
    <a href="products.php">Continue Shopping</a>
</body>
</html>


<?php
// config.php - Database configuration
define('DB_HOST', 'localhost');
define('DB_USER', 'root');
define('DB_PASS', '');
define('DB_NAME', 'purchase_system');

// database_connection.php
<?php
include 'config.php';

try {
    $conn = new PDO("mysql:host=" . DB_HOST . ";dbname=" . DB_NAME, DB_USER, DB_PASS);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}
?>

// products.php
<?php
$products = array(
    array(
        'id' => 1,
        'name' => 'Product A',
        'description' => 'Description for Product A',
        'price' => 25.00
    ),
    array(
        'id' => 2,
        'name' => 'Product B',
        'description' => 'Description for Product B',
        'price' => 15.00
    ),
    array(
        'id' => 3,
        'name' => 'Product C',
        'description' => 'Description for Product C',
        'price' => 35.00
    )
);
?>

// purchase_form.php
<?php
include 'products.php';
session_start();
?>
<!DOCTYPE html>
<html>
<head>
    <title>Purchase System</title>
</head>
<body>
    <h1>Product Catalog</h1>
    <form action="process_purchase.php" method="post">
        <?php foreach ($products as $product): ?>
            <div style="border: 1px solid #ddd; padding: 10px; margin-bottom: 10px;">
                <h3><?php echo $product['name']; ?></h3>
                <p><?php echo $product['description']; ?></p>
                <p>Price: $<?php echo number_format($product['price'], 2); ?></p>
                <input type="number" name="quantity[<?php echo $product['id']; ?>]" min="0" value="0">
                <br>
            </div>
        <?php endforeach; ?>
        <button type="submit">Checkout</button>
    </form>

    <?php if (!empty($_SESSION['order_id'])): ?>
        <h2>Your Order ID: <?php echo $_SESSION['order_id']; ?></h2>
    <?php endif; ?>

    <h2>Order History</h2>
    <?php include 'show_orders.php'; ?>
</body>
</html>

// process_purchase.php
<?php
include 'database_connection.php';
include 'products.php';

session_start();

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    if (empty($_POST['quantity'])) {
        die("Please select at least one product to purchase.");
    }

    // Calculate total price
    $total_price = 0;
    foreach ($_POST['quantity'] as $product_id => $quantity) {
        foreach ($products as $product) {
            if ($product['id'] == $product_id && $quantity > 0) {
                $total_price += $product['price'] * $quantity;
            }
        }
    }

    // Process payment (simplified)
    $payment_status = 'paid'; // In real application, this would be handled by a payment gateway

    if ($payment_status == 'paid') {
        // Insert order into database
        try {
            $stmt = $conn->prepare("INSERT INTO orders (total_price) VALUES (:total)");
            $stmt->bindParam(':total', $total_price);
            $stmt->execute();
            $order_id = $conn->lastInsertId();

            $_SESSION['order_id'] = $order_id;

            // Insert order items
            foreach ($_POST['quantity'] as $product_id => $quantity) {
                if ($quantity > 0) {
                    $stmt = $conn->prepare("INSERT INTO order_items (order_id, product_id, quantity) 
                                          VALUES (:order_id, :product_id, :quantity)");
                    $stmt->bindParam(':order_id', $order_id);
                    $stmt->bindParam(':product_id', $product_id);
                    $stmt->bindParam(':quantity', $quantity);
                    $stmt->execute();
                }
            }

            echo "Purchase successful! Your order ID is: " . $order_id;
        } catch (PDOException $e) {
            die("Error processing your purchase: " . $e->getMessage());
        }
    } else {
        die("Payment failed. Please try again.");
    }
}
?>

// show_orders.php
<?php
include 'database_connection.php';

try {
    $stmt = $conn->query("SELECT * FROM orders");
    while ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {
        echo "<div style='border: 1px solid #ddd; padding: 10px; margin-bottom: 5px;'>";
        echo "Order ID: " . $row['id'] . "<br>";
        echo "Total Price: $" . number_format($row['total_price'], 2) . "<br>";
        echo "</div>";
    }
} catch (PDOException $e) {
    die("Error fetching orders: " . $e->getMessage());
}
?>

// Create these tables in your database:

CREATE TABLE `orders` (
  `id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `total_price` decimal(10,2) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8;

CREATE TABLE `order_items` (
  `id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `order_id` int(11) DEFAULT NULL,
  `product_id` int(11) DEFAULT NULL,
  `quantity` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8;


<?php
// Connect to database
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}

// Fetch products
$stmt = $conn->query('SELECT * FROM products');
$products = $stmt->fetchAll(PDO::FETCH_ASSOC);

// Display products
foreach ($products as $product) {
    echo "<div class='product'>";
    echo "<h2>" . $product['name'] . "</h2>";
    echo "<p>Description: " . $product['description'] . "</p>";
    echo "<p>Price: $" . number_format($product['price'], 2) . "</p>";
    echo "<p>Quantity Available: " . $product['quantity'] . "</p>";
    echo "<form action='add_to_cart.php' method='post'>";
    echo "<input type='hidden' name='product_id' value='" . $product['id'] . "'>";
    echo "<input type='number' name='quantity' min='1' max='" . $product['quantity'] . "' value='1'>";
    echo "<button type='submit'>Add to Cart</button>";
    echo "</form>";
    echo "</div>";
}
$conn = null;
?>


<?php
session_start();

// Connect to database
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}

// Get product details
$product_id = $_POST['product_id'];
$quantity = intval($_POST['quantity']);

$stmt = $conn->prepare('SELECT * FROM products WHERE id = :id');
$stmt->bindParam(':id', $product_id);
$stmt->execute();
$product = $stmt->fetch(PDO::FETCH_ASSOC);

if ($product) {
    // Add to cart
    if (isset($_SESSION['cart'])) {
        $_SESSION['cart'][$product_id] += $quantity;
    } else {
        $_SESSION['cart'] = array($product_id => $quantity);
    }
}

header('Location: product_catalog.php');
$conn = null;
?>


<?php
session_start();

// Connect to database
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}

$total_price = 0;

if (isset($_SESSION['cart'])) {
    foreach ($_SESSION['cart'] as $product_id => $quantity) {
        $stmt = $conn->prepare('SELECT * FROM products WHERE id = :id');
        $stmt->bindParam(':id', $product_id);
        $stmt->execute();
        $product = $stmt->fetch(PDO::FETCH_ASSOC);

        if ($product) {
            $price = $product['price'] * $quantity;
            $total_price += $price;
            echo "<div class='cart-item'>";
            echo "<h3>" . $product['name'] . "</h3>";
            echo "<p>Quantity: " . $quantity . "</p>";
            echo "<p>Price: $" . number_format($price, 2) . "</p>";
            echo "</div>";
        }
    }
}

echo "<div class='total'>";
echo "<h2>Total Price: $" . number_format($total_price, 2) . "</h2>";
echo "<a href='checkout.php'>Checkout</a>";
echo "</div>";

$conn = null;
?>


<?php
session_start();

// Connect to database
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'your_username';
$password = 'your_password';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}

if (isset($_POST['submit'])) {
    // Process the order
    if (empty($_SESSION['cart'])) {
        die("Your cart is empty.");
    }

    // Check if all products are available in requested quantity
    foreach ($_SESSION['cart'] as $product_id => $quantity) {
        $stmt = $conn->prepare('SELECT * FROM products WHERE id = :id');
        $stmt->bindParam(':id', $product_id);
        $stmt->execute();
        $product = $stmt->fetch(PDO::FETCH_ASSOC);

        if ($product['quantity'] < $quantity) {
            die("Insufficient quantity for product: " . $product['name']);
        }
    }

    // Insert order into database
    foreach ($_SESSION['cart'] as $product_id => $quantity) {
        $stmt = $conn->prepare('INSERT INTO orders (user_id, product_id, quantity, total_price) VALUES (:user_id, :product_id, :quantity, :total_price)');
        $stmt->bindParam(':user_id', $_SESSION['user_id']);
        $stmt->bindParam(':product_id', $product_id);
        $stmt->bindParam(':quantity', $quantity);
        
        $stmt = $conn->prepare('SELECT price FROM products WHERE id = :id');
        $stmt->bindParam(':id', $product_id);
        $stmt->execute();
        $price = $stmt->fetchColumn();
        $total_price = $price * $quantity;
        $stmt->bindParam(':total_price', $total_price);
        $stmt->execute();

        // Update product quantity
        $new_quantity = $product['quantity'] - $quantity;
        $update_stmt = $conn->prepare('UPDATE products SET quantity = :quantity WHERE id = :id');
        $update_stmt->bindParam(':quantity', $new_quantity);
        $update_stmt->bindParam(':id', $product_id);
        $update_stmt->execute();
    }

    // Clear the cart
    unset($_SESSION['cart']);

    // Redirect to confirmation page
    header('Location: order_confirmation.php');
}

// Display checkout form
?>

<form action="checkout.php" method="post">
    <h2>Checkout</h2>
    <div class="billing-info">
        <h3>Billing Information</h3>
        <input type="text" name="card_number" placeholder="Card Number" required>
        <input type="text" name="card_name" placeholder="Name on Card" required>
        <input type="text" name="exp_month" placeholder="Expiration Month" required>
        <input type="text" name="exp_year" placeholder="Expiration Year" required>
        <input type="text" name="cvv" placeholder="CVV" required>
    </div>
    <div class="shipping-info">
        <h3>Shipping Information</h3>
        <input type="text" name="address" placeholder="Address" required>
        <input type="text" name="city" placeholder="City" required>
        <input type="text" name="state" placeholder="State" required>
        <input type="text" name="zip_code" placeholder="Zip Code" required>
    </div>
    <button type="submit" name="submit">Complete Purchase</button>
</form>

<?php
$conn = null;
?>


<?php
session_start();

// Display confirmation message
echo "<h1>Thank You for Your Purchase!</h1>";
echo "<p>Your order has been successfully processed.</p>";
echo "<a href='product_catalog.php'>Continue Shopping</a>";

// Log the user out or redirect to homepage
// header('Location: logout.php');
?>


// Database connection
$host = 'localhost';
$dbname = 'my_database';
$username = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    // Set the PDO error mode to exception
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
    
    // Prepare SQL statement
    $stmt = $conn->prepare("INSERT INTO purchases (product_name, price, quantity, email, total_amount) 
                           VALUES (:productName, :price, :quantity, :email, :totalAmount)");
    
    // Bind parameters
    $stmt->bindParam(':productName', $productName);
    $stmt->bindParam(':price', $price);
    $stmt->bindParam(':quantity', $quantity);
    $stmt->bindParam(':email', $email);
    $stmt->bindParam(':totalAmount', $totalAmount);
    
    // Execute the statement
    $stmt->execute();
    
} catch(PDOException $e) {
    echo "Error: " . $e->getMessage();
}


<?php
// products.php
$products = array(
    array('id' => 1, 'name' => 'Product 1', 'price' => 29.99),
    array('id' => 2, 'name' => 'Product 2', 'price' => 49.99),
    array('id' => 3, 'name' => 'Product 3', 'price' => 19.99)
);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Products</title>
</head>
<body>
    <h1>Our Products</h1>
    <?php foreach ($products as $product): ?>
        <div class="product">
            <h2><?php echo $product['name']; ?></h2>
            <p>$<?php echo number_format($product['price'], 2); ?></p>
            <form action="add_to_cart.php" method="post">
                <input type="hidden" name="product_id" value="<?php echo $product['id']; ?>">
                <input type="number" name="quantity" min="1" max="5" placeholder="Quantity">
                <button type="submit">Add to Cart</button>
            </form>
        </div>
    <?php endforeach; ?>
</body>
</html>


<?php
// add_to_cart.php

session_start();

if (isset($_POST['product_id']) && isset($_POST['quantity'])) {
    $productId = $_POST['product_id'];
    $quantity = $_POST['quantity'];

    // Read products from session or database
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }

    if (!isset($_SESSION['cart'][$productId])) {
        // Get product details (you should fetch this from your database)
        $products = array(
            1 => array('name' => 'Product 1', 'price' => 29.99),
            2 => array('name' => 'Product 2', 'price' => 49.99),
            3 => array('name' => 'Product 3', 'price' => 19.99)
        );

        $_SESSION['cart'][$productId] = array(
            'name' => $products[$productId]['name'],
            'price' => $products[$productId]['price'],
            'quantity' => $quantity
        );
    } else {
        // Update quantity if product already exists in cart
        $_SESSION['cart'][$productId]['quantity'] += $quantity;
    }

    header("Location: cart.php");
    exit();
} else {
    header("Location: products.php");
}


<?php
// cart.php

session_start();

if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

$cart = $_SESSION['cart'];
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <h1>Your Shopping Cart</h1>
    <?php if (empty($cart)): ?>
        <p>Your cart is empty. Please add some products.</p>
    <?php else: ?>
        <table border="1">
            <tr>
                <th>Product Name</th>
                <th>Price</th>
                <th>Quantity</th>
                <th>Total</th>
                <th>Action</th>
            </tr>
            <?php $total = 0; foreach ($cart as $productId => $product): ?>
                <tr>
                    <td><?php echo $product['name']; ?></td>
                    <td>$<?php echo number_format($product['price'], 2); ?></td>
                    <td><?php echo $product['quantity']; ?></td>
                    <td>$<?php echo number_format($product['price'] * $product['quantity'], 2); ?></td>
                    <td>
                        <form action="remove_from_cart.php" method="post">
                            <input type="hidden" name="product_id" value="<?php echo $productId; ?>">
                            <button type="submit">Remove</button>
                        </form>
                    </td>
                </tr>
                <?php $total += $product['price'] * $product['quantity']; ?>
            <?php endforeach; ?>
            <tr>
                <th colspan="3">Grand Total:</th>
                <th>$<?php echo number_format($total, 2); ?></th>
                <td></td>
            </tr>
        </table>
        <br>
        <a href="checkout.php">Proceed to Checkout</a> |
        <a href="products.php">Continue Shopping</a>
    <?php endif; ?>
</body>
</html>


<?php
// remove_from_cart.php

session_start();

if (isset($_POST['product_id'])) {
    $productId = $_POST['product_id'];

    if (isset($_SESSION['cart'][$productId])) {
        unset($_SESSION['cart'][$productId]);
    }

    header("Location: cart.php");
    exit();
}

header("Location: products.php");


<?php
// checkout.php

session_start();

if (empty($_SESSION['cart'])) {
    header("Location: cart.php");
    exit();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
</head>
<body>
    <h1>Checkout</h1>

    <form action="process_payment.php" method="post">
        <div class="customer-info">
            <h2>Billing Information</h2>
            <p>Please enter your details:</p>
            <input type="text" name="name" placeholder="Full Name" required><br>
            <input type="email" name="email" placeholder="Email Address" required><br>
            <textarea name="address" placeholder="Shipping Address" rows="3" cols="40" required></textarea><br>
            <button type="submit">Place Order</button>
        </div>
    </form>

    <a href="cart.php">Back to Cart</a>
</body>
</html>


<?php
// process_payment.php

session_start();

if (empty($_SESSION['cart'])) {
    header("Location: cart.php");
    exit();
}

$success = false;

// Simulate payment processing
if (!empty($_POST)) {
    $name = $_POST['name'];
    $email = $_POST['email'];
    $address = $_POST['address'];

    // Here you would typically integrate with a payment gateway

    // For this example, we'll just mark the order as successful
    $success = true;

    // Clear cart after successful purchase
    unset($_SESSION['cart']);
}

if ($success) {
    header("Location: thankyou.php");
} else {
    header("Location: checkout.php");
}


<?php
// thankyou.php

session_start();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Thank You</title>
</head>
<body>
    <h1>Thank You for Your Order!</h1>
    <p>Your order has been received successfully.</p>
    <a href="products.php">Continue Shopping</a>
</body>
</html>


<?php
// config.php - Database configuration
$host = 'localhost';
$dbname = 'shopping_cart';
$username = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Shopping Cart</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>

<?php
session_start();

// Include database connection
include 'config.php';

// Get products from database
$products = $conn->query("SELECT * FROM products");
?>

<div class="container mt-4">
    <h2>Our Products</h2>
    <div class="row">
        <?php foreach ($products as $product): ?>
            <div class="col-md-3 mb-3">
                <div class="card">
                    <img src="<?php echo $product['image']; ?>" class="card-img-top" alt="<?php echo $product['name']; ?>">
                    <div class="card-body">
                        <h5 class="card-title"><?php echo $product['name']; ?></h5>
                        <p class="card-text"><?php echo $product['description']; ?></p>
                        <p class="price">$<?php echo number_format($product['price'], 2); ?></p>
                        <form action="add_to_cart.php" method="post">
                            <input type="hidden" name="product_id" value="<?php echo $product['id']; ?>">
                            <button type="submit" class="btn btn-primary">Add to Cart</button>
                        </form>
                    </div>
                </div>
            </div>
        <?php endforeach; ?>
    </div>

    <!-- Shopping Cart -->
    <h2>Your Cart</h2>
    <?php if (!empty($_SESSION['cart'])): ?>
        <table class="table">
            <thead>
                <tr>
                    <th>Product Name</th>
                    <th>Quantity</th>
                    <th>Price</th>
                    <th>Total</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
                <?php $total = 0; ?>
                <?php foreach ($_SESSION['cart'] as $item): 
                    $product = $conn->query("SELECT * FROM products WHERE id = " . $item['id'])->fetch(PDO::FETCH_ASSOC);
                ?>
                <tr>
                    <td><?php echo $product['name']; ?></td>
                    <td><input type="number" name="quantity" value="<?php echo $item['quantity']; ?>" min="1" class="form-control"></td>
                    <td>$<?php echo number_format($product['price'], 2); ?></td>
                    <td>$<?php echo number_format($product['price'] * $item['quantity'], 2); ?></td>
                    <td><button onclick="updateCart(<?php echo $item['id']; ?>)" class="btn btn-secondary">Update</button></td>
                </tr>
                <?php $total += $product['price'] * $item['quantity']; ?>
                <?php endforeach; ?>
            </tbody>
        </table>
        <h3>Total: $<?php echo number_format($total, 2); ?></h3>
        <a href="checkout.php" class="btn btn-success">Checkout</a>
    <?php else: ?>
        <p>Your cart is empty.</p>
    <?php endif; ?>

</div>

<script>
function updateCart(productId) {
    var quantity = prompt("Enter new quantity:", "1");
    if (quantity > 0) {
        window.location.href = 'update_cart.php?id=' + productId + '&quantity=' + quantity;
    }
}
</script>

</body>
</html>


<?php
session_start();
include 'config.php';

if (isset($_POST['product_id'])) {
    $productId = $_POST['product_id'];
    
    if (!empty($_SESSION['cart'])) {
        foreach ($_SESSION['cart'] as &$item) {
            if ($item['id'] == $productId) {
                $item['quantity']++;
                break;
            }
        }
    }

    if (empty($_SESSION['cart']) || !isset($_SESSION['cart'][$i]['id'])) {
        $_SESSION['cart'][] = array(
            'id' => $productId,
            'quantity' => 1
        );
    }
}

header("Location: index.php");
exit();
?>


<?php
session_start();
include 'config.php';

if (isset($_GET['id']) && isset($_GET['quantity'])) {
    $productId = $_GET['id'];
    $newQuantity = $_GET['quantity'];

    foreach ($_SESSION['cart'] as &$item) {
        if ($item['id'] == $productId) {
            $item['quantity'] = $newQuantity;
            break;
        }
    }

    header("Location: index.php");
    exit();
}
?>


<?php
session_start();
include 'config.php';

if (isset($_POST['submit'])) {
    // Get customer details
    $name = $_POST['name'];
    $email = $_POST['email'];
    $address = $_POST['address'];
    $phone = $_POST['phone'];

    // Insert order into database
    $orderSql = "INSERT INTO orders (customer_name, email, address, phone) VALUES (:name, :email, :address, :phone)";
    $stmt = $conn->prepare($orderSql);
    $stmt->execute([
        ':name' => $name,
        ':email' => $email,
        ':address' => $address,
        ':phone' => $phone
    ]);
    
    $orderId = $conn->lastInsertId();

    // Insert order items
    foreach ($_SESSION['cart'] as $item) {
        $product = $conn->query("SELECT * FROM products WHERE id = " . $item['id'])->fetch(PDO::FETCH_ASSOC);
        
        $orderItemSql = "INSERT INTO order_items (order_id, product_id, quantity, price) VALUES (:orderId, :productId, :quantity, :price)";
        $stmt = $conn->prepare($orderItemSql);
        $stmt->execute([
            ':orderId' => $orderId,
            ':productId' => $item['id'],
            ':quantity' => $item['quantity'],
            ':price' => $product['price']
        ]);
    }

    // Clear cart
    unset($_SESSION['cart']);
    
    header("Location: invoice.php?order_id=$orderId");
    exit();
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Checkout</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>

<div class="container mt-4">
    <h2>Checkout</h2>
    <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
        <div class="mb-3">
            <label for="name">Name:</label>
            <input type="text" name="name" class="form-control" required>
        </div>
        <div class="mb-3">
            <label for="email">Email:</label>
            <input type="email" name="email" class="form-control" required>
        </div>
        <div class="mb-3">
            <label for="address">Address:</label>
            <textarea name="address" class="form-control" rows="3" required></textarea>
        </div>
        <div class="mb-3">
            <label for="phone">Phone:</label>
            <input type="tel" name="phone" class="form-control" required>
        </div>
        <button type="submit" name="submit" class="btn btn-primary">Place Order</button>
    </form>
</div>

</body>
</html>


<?php
session_start();
include 'config.php';

if (isset($_GET['order_id'])) {
    $orderId = $_GET['order_id'];
    
    // Get order details
    $order = $conn->query("SELECT * FROM orders WHERE id = $orderId")->fetch(PDO::FETCH_ASSOC);
    
    // Get order items
    $items = $conn->query("SELECT oi.*, p.name AS product_name, p.price FROM order_items oi JOIN products p ON oi.product_id = p.id WHERE oi.order_id = $orderId");
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Invoice</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>

<div class="container mt-4">
    <h2>Order #<?php echo $orderId; ?></h2>
    <div class="mb-4">
        <p><strong>Name:</strong> <?php echo $order['customer_name']; ?></p>
        <p><strong>Email:</strong> <?php echo $order['email']; ?></p>
        <p><strong>Address:</strong> <?php echo $order['address']; ?></p>
        <p><strong>Phone:</strong> <?php echo $order['phone']; ?></p>
    </div>

    <table class="table">
        <thead>
            <tr>
                <th>Product Name</th>
                <th>Quantity</th>
                <th>Price</th>
                <th>Total</th>
            </tr>
        </thead>
        <tbody>
            <?php $total = 0; ?>
            <?php foreach ($items as $item): ?>
                <tr>
                    <td><?php echo $item['product_name']; ?></td>
                    <td><?php echo $item['quantity']; ?></td>
                    <td>$<?php echo number_format($item['price'], 2); ?></td>
                    <td>$<?php echo number_format($item['price'] * $item['quantity'], 2); ?></td>
                </tr>
                <?php $total += $item['price'] * $item['quantity']; ?>
            <?php endforeach; ?>
        </tbody>
    </table>
    <h3>Total Amount: $<?php echo number_format($total, 2); ?></h3>
</div>

</body>
</html>


<?php
session_start();
?>


<?php
session_start();

// Product data (you would typically get this from your database)
$product_id = $_POST['product_id'];
$product_name = $_POST['product_name'];
$product_price = $_POST['product_price'];

// Check if the product is already in the cart
if (isset($_SESSION['cart'][$product_id])) {
    // Update quantity
    $_SESSION['cart'][$product_id]['quantity'] += 1;
} else {
    // Add new item to cart
    $_SESSION['cart'][$product_id] = array(
        'name' => $product_name,
        'price' => $product_price,
        'quantity' => 1
    );
}

// Redirect back to the product page or cart page
header("Location: view_cart.php");
exit();
?>


<?php
session_start();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
    <style>
        .cart-item {
            border: 1px solid #ddd;
            padding: 10px;
            margin-bottom: 10px;
        }
    </style>
</head>
<body>
    <?php if (!empty($_SESSION['cart'])): ?>
        <h2>Your Shopping Cart</h2>
        <?php foreach ($_SESSION['cart'] as $item): ?>
            <div class="cart-item">
                <strong><?php echo $item['name']; ?></strong><br>
                Price: $<?php echo $item['price']; ?><br>
                Quantity: <?php echo $item['quantity']; ?>
                
                <form action="update_cart.php" method="post">
                    <input type="hidden" name="product_id" value="<?php echo $item['id']; ?>">
                    <input type="number" name="quantity" min="1" value="<?php echo $item['quantity']; ?>">
                    <button type="submit">Update</button>
                </form>
                
                <form action="delete_from_cart.php" method="post">
                    <input type="hidden" name="product_id" value="<?php echo $item['id']; ?>">
                    <button type="submit">Remove</button>
                </form>
            </div>
        <?php endforeach; ?>
        
        <h3>Total: $<?php echo array_sum(array_column($_SESSION['cart'], 'price')); ?></h3>
    <?php else: ?>
        <p>Your cart is empty.</p>
    <?php endif; ?>

    <a href="products.php">Continue Shopping</a>
</body>
</html>


<?php
session_start();

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $product_id = $_POST['product_id'];
    $quantity = (int)$_POST['quantity'];

    if ($quantity > 0) {
        $_SESSION['cart'][$product_id]['quantity'] = $quantity;
    } else {
        unset($_SESSION['cart'][$product_id]);
    }

    header("Location: view_cart.php");
    exit();
}
?>


<?php
session_start();

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $product_id = $_POST['product_id'];
    unset($_SESSION['cart'][$product_id]);
    header("Location: view_cart.php");
    exit();
}
?>


<?php
session_start();

// Sample product data (you would typically get this from your database)
$products = array(
    array(
        'id' => 1,
        'name' => 'Product 1',
        'price' => 19.99
    ),
    array(
        'id' => 2,
        'name' => 'Product 2',
        'price' => 29.99
    ),
    array(
        'id' => 3,
        'name' => 'Product 3',
        'price' => 39.99
    )
);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Products</title>
</head>
<body>
    <?php foreach ($products as $product): ?>
        <div class="product">
            <h3><?php echo $product['name']; ?></h3>
            <p>$<?php echo $product['price']; ?></p>
            <form action="add_to_cart.php" method="post">
                <input type="hidden" name="product_id" value="<?php echo $product['id']; ?>">
                <input type="hidden" name="product_name" value="<?php echo $product['name']; ?>">
                <input type="hidden" name="product_price" value="<?php echo $product['price']; ?>">
                <button type="submit">Add to Cart</button>
            </form>
        </div>
    <?php endforeach; ?>

    <a href="view_cart.php">View Cart</a>
</body>
</html>


<?php
session_start();
require_once 'db_connection.php';

$sql = "SELECT * FROM products";
$result = $conn->query($sql);

if ($result->num_rows > 0) {
    while ($row = $result->fetch_assoc()) {
        echo "<div class='product'>";
        echo "<h3>" . $row['name'] . "</h3>";
        echo "<p>Price: $" . number_format($row['price'], 2) . "</p>";
        echo "<form action='add_to_cart.php' method='post'>";
        echo "<input type='hidden' name='product_id' value='" . $row['id'] . "'>";
        echo "<button type='submit'>Add to Cart</button>";
        echo "</form>";
        echo "</div>";
    }
} else {
    echo "No products available.";
}
$conn->close();
?>


<?php
session_start();
require_once 'db_connection.php';

$product_id = $_POST['product_id'];

$sql = "SELECT * FROM products WHERE id=$product_id";
$result = $conn->query($sql);
$row = $result->fetch_assoc();

if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

if (array_key_exists($product_id, $_SESSION['cart'])) {
    $_SESSION['cart'][$product_id]['quantity']++;
} else {
    $_SESSION['cart'][$product_id] = array(
        'id' => $row['id'],
        'name' => $row['name'],
        'price' => $row['price'],
        'quantity' => 1
    );
}

header('Location: index.php');
?>


<?php
session_start();
?>

<h2>Your Cart</h2>
<table>
    <tr>
        <th>Product</th>
        <th>Price</th>
        <th>Quantity</th>
        <th>Total</th>
        <th>Action</th>
    </tr>
    <?php
    if (isset($_SESSION['cart'])) {
        $total = 0;
        foreach ($_SESSION['cart'] as $product) {
            $subtotal = $product['price'] * $product['quantity'];
            $total += $subtotal;
            ?>
            <tr>
                <td><?php echo $product['name']; ?></td>
                <td>$<?php echo number_format($product['price'], 2); ?></td>
                <td>
                    <form method="post" action="update_cart.php">
                        <input type="hidden" name="product_id" value="<?php echo $product['id']; ?>">
                        <input type="number" name="quantity" min="1" value="<?php echo $product['quantity']; ?>">
                        <button type="submit">Update</button>
                    </form>
                </td>
                <td>$<?php echo number_format($subtotal, 2); ?></td>
                <td><a href="remove_from_cart.php?product_id=<?php echo $product['id']; ?>">Remove</a></td>
            </tr>
            <?php
        }
        ?>
        <tr>
            <td colspan="4">Total:</td>
            <td>$<?php echo number_format($total, 2); ?></td>
        </tr>
        <?php
    } else {
        echo "<tr><td colspan='5'>Your cart is empty.</td></tr>";
    }
    ?>
</table>
<br>
<a href="index.php">Continue Shopping</a> |
<a href="checkout.php">Checkout</a>


<?php
session_start();
if (!isset($_SESSION['cart']) || count($_SESSION['cart']) == 0) {
    header('Location: cart.php');
}
?>

<h2>Checkout</h2>
<form action="process_order.php" method="post">
    <div class="form-group">
        <label for="name">Name:</label>
        <input type="text" id="name" name="name" required>
    </div>
    <!-- Include other fields: email, address, city, state, zip_code, payment_method -->
    <button type="submit">Place Order</button>
</form>


<?php
session_start();
require_once 'db_connection.php';

// Validate inputs (simplified)
foreach ($_POST as $key => $value) {
    $_POST[$key] = htmlspecialchars(trim($value));
}

if (empty($_POST['name']) || empty($_POST['email']) || empty($_POST['address'])) {
    die("Please fill in all required fields.");
}

// Insert order
$sql = "INSERT INTO orders (user_name, email, address, city, state, zip_code, total_amount, payment_method, order_date) 
        VALUES (?, ?, ?, ?, ?, ?, ?, ?, NOW())";
$stmt = $conn->prepare($sql);
$stmt->bind_param("ssssssdd", $_POST['name'], $_POST['email'], $_POST['address'], $_POST['city'], $_POST['state'], $_POST['zip_code'], $total, $_POST['payment_method']);
$stmt->execute();
$order_id = $stmt->insert_id;

// Insert order items
foreach ($_SESSION['cart'] as $product) {
    $sql_item = "INSERT INTO order_items (order_id, product_id, quantity, price) 
                VALUES (?, ?, ?, ?)";
    $stmt_item = $conn->prepare($sql_item);
    $stmt_item->bind_param("iidi", $order_id, $product['id'], $product['quantity'], $product['price']);
    $stmt_item->execute();
}

// Clear cart
unset($_SESSION['cart']);

// Redirect to thank you page
header('Location: thankyou.php?order_id=' . $order_id);
?>


<?php
session_start();

$order_id = $_GET['order_id'];
?>

<h2>Thank You for Your Order!</h2>
<p>Your order ID is: <?php echo $order_id; ?></p>
<p>We will email you a confirmation shortly.</p>

<?php
// Function to send confirmation email
function sendConfirmation($email, $order_id) {
    $to = $email;
    $subject = "Order Confirmation";
    $message = "Thank you for your order. Your order ID is: $order_id.";
    mail($to, $subject, $message);
}

if (isset($_GET['order_id'])) {
    // Retrieve order details from database and send email
}
?>


<?php
$host = 'localhost';
$user = 'root';
$pass = '';
$db = 'your_database';

$conn = new mysqli($host, $user, $pass, $db);
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}
?>


<?php
// Include necessary files
include('config.php');
include('products.php');

// Start session
session_start();

// Add product to cart function
function addToCart($productId) {
    global $products;
    
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }
    
    if (array_key_exists($productId, $products)) {
        if (!isset($_SESSION['cart'][$productId])) {
            $_SESSION['cart'][$productId] = array(
                'id' => $productId,
                'quantity' => 1
            );
        } else {
            $_SESSION['cart'][$productId]['quantity']++;
        }
    }
}

// Remove product from cart function
function removeFromCart($productId) {
    if (isset($_SESSION['cart'][$productId])) {
        unset($_SESSION['cart'][$productId]);
    }
}

// Update quantity in cart function
function updateQuantity($productId, $newQuantity) {
    if ($newQuantity > 0) {
        $_SESSION['cart'][$productId]['quantity'] = $newQuantity;
    } else {
        removeFromCart($productId);
    }
}

// Calculate total price function
function calculateTotal() {
    global $products;
    
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $productPrice = $products[$item['id']]['price'];
        $total += ($productPrice * $item['quantity']);
    }
    
    return $total;
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Purchase Page</title>
    <style>
        .cart {
            width: 100%;
            border-collapse: collapse;
            margin: 20px 0;
        }
        
        .cart th, .cart td {
            padding: 12px;
            text-align: left;
            border-bottom: 1px solid #ddd;
        }
    </style>
</head>
<body>
    <nav>
        <a href="index.php">Home</a> | 
        <a href="cart.php">Cart (<?php echo count($_SESSION['cart'] ?? array()); ?>)</a>
    </nav>

    <?php
    if (!empty($_GET['action'])) {
        switch ($_GET['action']) {
            case 'add':
                addToCart($_GET['id']);
                break;
                
            case 'remove':
                removeFromCart($_GET['id']);
                break;
                
            case 'update':
                updateQuantity($_GET['id'], $_GET['quantity']);
                break;
        }
    }
    
    // Display cart contents
    if (!empty($_SESSION['cart'])) {
        echo "<h2>Shopping Cart</h2>";
        echo "<table class='cart'>";
        echo "<tr><th>Product</th><th>Description</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>";
        
        foreach ($_SESSION['cart'] as $item) {
            $productId = $item['id'];
            $product = $products[$productId];
            
            echo "<tr>";
            echo "<td>{$product['name']}</td>";
            echo "<td>{$product['description']}</td>";
            echo "<td>\$".$product['price']."</td>";
            echo "<td><input type='number' value='{$item['quantity']}' onchange=\"updateQuantity('$productId', this.value)\"></td>";
            echo "<td>\$".($product['price'] * $item['quantity'])."</td>";
            echo "<td><a href='cart.php?action=remove&id=$productId'>Remove</a></td>";
            echo "</tr>";
        }
        
        echo "</table>";
        echo "<h3>Total: \$" . calculateTotal() . "</h3>";
        
        // Payment form
        echo "<form action='process_payment.php' method='post'>";
        echo "<h2>Payment Information</h2>";
        echo "<input type='text' name='card_number' placeholder='Card Number' required><br>";
        echo "<input type='text' name='name_on_card' placeholder='Name on Card' required><br>";
        echo "<input type='number' name='cvv' placeholder='CVV' min='100' max='999' required><br>";
        echo "<button type='submit'>Complete Purchase</button>";
        echo "</form>";
    } else {
        echo "<h2>Your cart is empty</h2>";
    }
    ?>
</body>
</html>


<?php
$products = array(
    1 => array(
        'id' => 1,
        'name' => 'Product 1',
        'description' => 'Description of Product 1',
        'price' => 29.99,
        'quantity' => 5
    ),
    2 => array(
        'id' => 2,
        'name' => 'Product 2',
        'description' => 'Description of Product 2',
        'price' => 19.99,
        'quantity' => 3
    )
);
?>


<?php
session_start();

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Validate payment details
    $cardNumber = $_POST['card_number'];
    $nameOnCard = $_POST['name_on_card'];
    $cvv = $_POST['cvv'];
    
    if (!empty($cardNumber) && !empty($nameOnCard) && !empty($cvv)) {
        // Here you would typically integrate with a payment gateway
        // For this example, we'll just display a confirmation message
        
        session_unset();
        header("Location: thank_you.php");
        exit();
    } else {
        echo "Please fill in all required fields.";
    }
}
?>


<?php
session_start();
include('db_connection.php');

// Fetch products from database
$sql = "SELECT * FROM products";
$result = $conn->query($sql);

if ($result->num_rows > 0) {
    while ($row = $result->fetch_assoc()) {
        echo "<div class='product'>";
        echo "<h3>" . $row['name'] . "</h3>";
        echo "<p>Description: " . $row['description'] . "</p>";
        echo "<p>Price: $" . number_format($row['price'], 2) . "</p>";
        echo "<form action='add_to_cart.php' method='post'>";
        echo "<input type='hidden' name='product_id' value='" . $row['id'] . "'>";
        echo "<button type='submit'>Add to Cart</button>";
        echo "</form>";
        echo "</div>";
    }
} else {
    echo "No products available.";
}
$conn->close();
?>


<?php
session_start();
include('db_connection.php');

$product_id = $_POST['product_id'];
$quantity = 1;

// Fetch product details
$sql = "SELECT * FROM products WHERE id = ?";
$stmt = $conn->prepare($sql);
$stmt->bind_param("i", $product_id);
$stmt->execute();
$result = $stmt->get_result();

if ($result->num_rows > 0) {
    $product = $result->fetch_assoc();
    
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }
    
    if (array_key_exists($product_id, $_SESSION['cart'])) {
        $_SESSION['cart'][$product_id]['quantity'] += $quantity;
    } else {
        $_SESSION['cart'][$product_id] = array(
            'id' => $product['id'],
            'name' => $product['name'],
            'price' => $product['price'],
            'quantity' => $quantity
        );
    }
}

header("Location: product_list.php");
exit();
$conn->close();
?>


<?php
session_start();
include('db_connection.php');

$total = 0;

if (isset($_SESSION['cart'])) {
    foreach ($_SESSION['cart'] as $item) {
        $total += ($item['price'] * $item['quantity']);
    }
}

echo "<h2>Your Cart</h2>";
echo "<div class='cart'>";
if (!empty($_SESSION['cart'])) {
    foreach ($_SESSION['cart'] as $product_id => $item) {
        echo "<div class='cart-item'>";
        echo "<p>" . $item['name'] . "</p>";
        echo "<p>Quantity: " . $item['quantity'] . "</p>";
        echo "<p>Price: $" . number_format($item['price'], 2) . "</p>";
        echo "<form action='remove_from_cart.php' method='post'>";
        echo "<input type='hidden' name='product_id' value='" . $product_id . "'>";
        echo "<button type='submit'>Remove</button>";
        echo "</form>";
        echo "</div>";
    }
    echo "<h3>Total: $" . number_format($total, 2) . "</h3>";
    echo "<a href='checkout.php'><button>Checkout</button></a>";
} else {
    echo "Your cart is empty.";
}
echo "</div>";
$conn->close();
?>


<?php
session_start();

if (isset($_POST['product_id'])) {
    $product_id = $_POST['product_id'];
    
    if (isset($_SESSION['cart'][$product_id])) {
        unset($_SESSION['cart'][$product_id]);
    }
}

header("Location: view_cart.php");
exit();
?>


<?php
session_start();
include('db_connection.php');

if (isset($_SESSION['cart']) && !empty($_SESSION['cart'])) {
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += ($item['price'] * $item['quantity']);
    }
}
?>

<h2>Checkout</h2>
<form action="process_payment.php" method="post">
    <div class="payment-info">
        <label for="card_number">Card Number:</label>
        <input type="text" id="card_number" name="card_number" required>
        
        <label for="name_on_card">Name on Card:</label>
        <input type="text" id="name_on_card" name="name_on_card" required>
        
        <label for="cvv">CVV:</label>
        <input type="text" id="cvv" name="cvv" required>
    </div>
    
    <h3>Total Amount: $" . number_format($total, 2) . "</h3>
    <button type="submit">Purchase</button>
</form>
<?php
$conn->close();
?>


<?php
session_start();

if (isset($_POST['card_number'], $_POST['name_on_card'], $_POST['cvv'])) {
    $card_number = $_POST['card_number'];
    $name_on_card = $_POST['name_on_card'];
    $cvv = $_POST['cvv'];
    
    // For demonstration, check CVV
    if ($cvv == '123') {  // In real application, use proper payment gateway
        echo "<h2>Payment Successful!</h2>";
        
        // Update product stock and process order
        include('db_connection.php');
        
        foreach ($_SESSION['cart'] as $item) {
            $sql = "UPDATE products SET stock = stock - ? WHERE id = ?";
            $stmt = $conn->prepare($sql);
            $stmt->bind_param("ii", $item['quantity'], $item['id']);
            $stmt->execute();
        }
        
        // Clear cart
        unset($_SESSION['cart']);
        
        echo "<p>Your order has been processed successfully!</p>";
        echo "<a href='index.php'><button>Continue Shopping</button></a>";
    } else {
        echo "<h2>Payment Failed!</h2>";
        echo "<p>Please check your card details and try again.</p>";
        echo "<a href='checkout.php'><button>Try Again</button></a>";
    }
}
?>


<?php
$servername = "localhost";
$username = "root"; // Change according to your DB username
$password = "";     // Change according to your DB password
$dbname = "your_database_name"; // Replace with your database name

$conn = new mysqli($servername, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}
?>


<?php
// Connect to the database
$host = 'localhost';
$user = 'root';
$password = '';
$dbname = 'shop';

$conn = new mysqli($host, $user, $password, $dbname);
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Retrieve products from the database
$sql = "SELECT * FROM products";
$result = $conn->query($sql);

if ($result->num_rows > 0) {
    while ($row = $result->fetch_assoc()) {
        echo "<div class='product'>";
        echo "<h3>" . $row['name'] . "</h3>";
        echo "<p>Description: " . $row['description'] . "</p>";
        echo "<p>Price: $" . number_format($row['price'], 2) . "</p>";
        echo "<p>Available Quantity: " . $row['quantity'] . "</p>";
        echo "<form action='add_to_cart.php' method='post'>";
        echo "<input type='hidden' name='product_id' value='" . $row['id'] . "'>";
        echo "<input type='number' name='quantity' min='1' max='" . $row['quantity'] . "' value='1'>";
        echo "<button type='submit'>Add to Cart</button>";
        echo "</form>";
        echo "</div>";
    }
} else {
    echo "No products available.";
}

$conn->close();
?>


<?php
session_start();

if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

$productId = $_POST['product_id'];
$quantity = isset($_POST['quantity']) ? $_POST['quantity'] : 1;

// Check if product is already in the cart
if (array_key_exists($productId, $_SESSION['cart'])) {
    $_SESSION['cart'][$productId] += $quantity;
} else {
    $_SESSION['cart'][$productId] = $quantity;
}

header("Location: cart.php");
exit();
?>


<?php
session_start();

if (!isset($_SESSION['cart']) || count($_SESSION['cart']) == 0) {
    echo "Your cart is empty.";
} else {
    $total = 0;
    foreach ($_SESSION['cart'] as $productId => $quantity) {
        // Retrieve product details from database
        $conn = new mysqli($host, $user, $password, $dbname);
        if ($conn->connect_error) {
            die("Connection failed: " . $conn->connect_error);
        }
        
        $sql = "SELECT * FROM products WHERE id=" . $productId;
        $result = $conn->query($sql);
        $row = $result->fetch_assoc();
        
        $price = $row['price'];
        $total += ($price * $quantity);
        
        echo "<div class='cart-item'>";
        echo "<h3>" . $row['name'] . "</h3>";
        echo "<p>Quantity: " . $quantity . "</p>";
        echo "<p>Price: $" . number_format($price, 2) . "</p>";
        echo "<form action='update_cart.php' method='post'>";
        echo "<input type='hidden' name='product_id' value='" . $productId . "'>";
        echo "<input type='number' name='quantity' min='1' max='" . $row['quantity'] . "' value='" . $quantity . "'>";
        echo "<button type='submit'>Update Quantity</button>";
        echo "</form>";
        echo "</div>";
        
        $conn->close();
    }
    echo "<p>Total: $" . number_format($total, 2) . "</p>";
    echo "<a href='checkout.php'>Proceed to Checkout</a>";
}
?>


<?php
session_start();

if (isset($_POST['product_id']) && isset($_POST['quantity'])) {
    $productId = $_POST['product_id'];
    $newQuantity = $_POST['quantity'];
    
    if ($newQuantity < 1) {
        unset($_SESSION['cart'][$productId]);
    } else {
        $_SESSION['cart'][$productId] = $newQuantity;
    }
}

header("Location: cart.php");
exit();
?>


<?php
session_start();

if (isset($_SESSION['cart']) && count($_SESSION['cart']) > 0) {
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        // Validate form inputs
        $paymentMethod = $_POST['payment_method'];
        $address = $_POST['address'];
        
        // Connect to the database
        $conn = new mysqli($host, $user, $password, $dbname);
        if ($conn->connect_error) {
            die("Connection failed: " . $conn->connect_error);
        }
        
        foreach ($_SESSION['cart'] as $productId => $quantity) {
            // Calculate total price
            $sql = "SELECT price FROM products WHERE id=" . $productId;
            $result = $conn->query($sql);
            $row = $result->fetch_assoc();
            $price = $row['price'];
            $totalPrice = $price * $quantity;
            
            // Insert order into the orders table
            $orderSql = "INSERT INTO orders (user_id, product_id, quantity, total_price, payment_method, address) 
                        VALUES (1, " . $productId . ", " . $quantity . ", " . $totalPrice . ", '" . $paymentMethod . "', '" . $address . "')";
            if (!$conn->query($orderSql)) {
                die("Error: " . $conn->error);
            }
        }
        
        // Clear the cart
        unset($_SESSION['cart']);
        
        echo "Order placed successfully!";
        header("Refresh: 2; url=products.php");
    } else {
        // Display checkout form
        ?>
        <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
            <label for="payment_method">Payment Method:</label>
            <input type="text" id="payment_method" name="payment_method" required><br>
            
            <label for="address">Shipping Address:</label>
            <textarea id="address" name="address" rows="5" cols="30" required></textarea><br>
            
            <button type="submit">Place Order</button>
        </form>
        <?php
    }
} else {
    echo "Your cart is empty.";
}
?>


<?php
// Connect to database
$conn = mysqli_connect("localhost", "username", "password", "your_database");

// Query products
$result = mysqli_query($conn, "SELECT * FROM products");
?>

<!DOCTYPE html>
<html>
<head>
    <title>Product Store</title>
</head>
<body>
    <h1>Products for Sale</h1>
    <?php while ($row = mysqli_fetch_assoc($result)) { ?>
        <div style="border: 1px solid #ddd; padding: 10px; margin: 5px;">
            <h3><?php echo $row['name']; ?></h3>
            <p><?php echo $row['description']; ?></p>
            <p>Price: <?php echo "$" . number_format($row['price'], 2); ?></p>
            <form action="add_to_cart.php" method="post">
                <input type="hidden" name="product_id" value="<?php echo $row['id']; ?>">
                <input type="number" name="quantity" min="1" max="<?php echo $row['quantity']; ?>" required>
                <button type="submit">Add to Cart</button>
            </form>
        </div>
    <?php } ?>
    <a href="view_cart.php">View Cart</a>
</body>
</html>

<?php
// Close database connection
mysqli_close($conn);
?>


<?php
session_start();

$product_id = $_POST['product_id'];
$quantity = $_POST['quantity'];

// Connect to database
$conn = mysqli_connect("localhost", "username", "password", "your_database");
$result = mysqli_query($conn, "SELECT * FROM products WHERE id = $product_id");
$product = mysqli_fetch_assoc($result);

if ($product) {
    // Add product to cart or update quantity if already exists
    if (isset($_SESSION['cart'][$product_id])) {
        $_SESSION['cart'][$product_id]['quantity'] += $quantity;
    } else {
        $_SESSION['cart'][$product_id] = array(
            'name' => $product['name'],
            'price' => $product['price'],
            'quantity' => $quantity
        );
    }
}

// Close database connection
mysqli_close($conn);

header("Location: view_cart.php");
exit();
?>


<?php
session_start();

if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <?php if (empty($_SESSION['cart'])) { ?>
        <p>Your cart is empty.</p>
    <?php } else { ?>
        <h1>Your Shopping Cart</h1>
        <table border="1">
            <tr>
                <th>Product Name</th>
                <th>Price</th>
                <th>Quantity</th>
                <th>Total</th>
            </tr>
            <?php foreach ($_SESSION['cart'] as $product_id => $item) { ?>
                <tr>
                    <td><?php echo $item['name']; ?></td>
                    <td><?php echo "$" . number_format($item['price'], 2); ?></td>
                    <td><?php echo $item['quantity']; ?></td>
                    <td><?php echo "$" . number_format($item['price'] * $item['quantity'], 2); ?></td>
                </tr>
            <?php } ?>
        </table>
        <p>Total: <?php echo "$" . number_format(array_sum(array_column($_SESSION['cart'], 'price') * array_column($_SESSION['cart'], 'quantity')), 2); ?></p>
    <?php } ?>
    <a href="index.php">Continue Shopping</a> |
    <?php if (!empty($_SESSION['cart'])) { ?>
        <a href="checkout.php">Checkout</a>
    <?php } ?>
</body>
</html>


<?php
session_start();

if (empty($_SESSION['cart'])) {
    header("Location: view_cart.php");
    exit();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
</head>
<body>
    <h1>Payment Information</h1>
    <form action="process_payment.php" method="post">
        <label for="card_number">Card Number:</label><br>
        <input type="text" id="card_number" name="card_number" required><br>

        <label for="name_on_card">Name on Card:</label><br>
        <input type="text" id="name_on_card" name="name_on_card" required><br>

        <label for="cvv">CVV:</label><br>
        <input type="number" id="cvv" name="cvv" min="100" max="999" required><br>

        <label for="expiry_date">Expiry Date (MM/YYYY):</label><br>
        <input type="text" id="expiry_date" name="expiry_date" pattern="\d{2}/\d{4}" required><br>

        <button type="submit">Complete Purchase</button>
    </form>
</body>
</html>


<?php
session_start();

// Simple payment validation (replace with actual payment processing)
$card_number = $_POST['card_number'];
if (substr($card_number, 0, 2) == "42") { // Example validation
    // Payment successful
    unset($_SESSION['cart']);
    header("Location: thank_you.php");
} else {
    // Payment failed
    header("Location: checkout.php?error=invalid_card");
}
?>


<!DOCTYPE html>
<html>
<head>
    <title>Thank You</title>
</head>
<body>
    <h1>Thank you for your purchase!</h1>
    <p>Your order has been processed successfully.</p>
    <a href="index.php">Continue Shopping</a>
</body>
</html>


<?php
session_start();
require_once "database.php";

// Simple database connection class
class Database {
    private $host = 'localhost';
    private $db_name = 'purchase_system';
    private $username = 'root';
    private $password = '';
    public $conn;

    function __construct() {
        $this->conn = null;
        try {
            $this->conn = new PDO("mysql:host=" . $this->host . ";dbname=" . $this->db_name, $this->username, $this->password);
            $this->conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
        } catch (PDOException $e) {
            echo "Connection failed: " . $e->getMessage();
        }
    }

    function getConnection() {
        return $this->conn;
    }
}

// User authentication class
class Auth {
    private $db;

    public function __construct($db) {
        $this->db = $db;
    }

    // Register user
    public function register($username, $email, $password) {
        try {
            $stmt = $this->db->prepare("INSERT INTO users (username, email, password) VALUES (:username, :email, :password)");
            $stmt->bindParam(':username', $username);
            $stmt->bindParam(':email', $email);
            $stmt->bindParam(':password', password_hash($password, PASSWORD_DEFAULT));
            return $stmt->execute();
        } catch (PDOException $e) {
            echo "Registration error: " . $e->getMessage();
            return false;
        }
    }

    // Login user
    public function login($email, $password) {
        try {
            $stmt = $this->db->prepare("SELECT * FROM users WHERE email = :email");
            $stmt->bindParam(':email', $email);
            $result = $stmt->execute();
            $user = $stmt->fetch(PDO::FETCH_ASSOC);

            if ($user && password_verify($password, $user['password'])) {
                $_SESSION['logged_in'] = true;
                $_SESSION['user_id'] = $user['id'];
                $_SESSION['username'] = $user['username'];
                return true;
            }
            return false;
        } catch (PDOException $e) {
            echo "Login error: " . $e->getMessage();
            return false;
        }
    }

    // Check if user is logged in
    public function isLoggedIn() {
        return isset($_SESSION['logged_in']);
    }

    // Logout user
    public function logout() {
        session_unset();
        session_destroy();
        header("Location: login.php");
        exit;
    }
}

// Product class
class Product {
    private $db;

    public function __construct($db) {
        $this->db = $db;
    }

    // Get all products
    public function getAllProducts() {
        try {
            $stmt = $this->db->prepare("SELECT * FROM products");
            $stmt->execute();
            return $stmt->fetchAll(PDO::FETCH_ASSOC);
        } catch (PDOException $e) {
            echo "Error fetching products: " . $e->getMessage();
            return [];
        }
    }

    // Get product by ID
    public function getProductById($id) {
        try {
            $stmt = $this->db->prepare("SELECT * FROM products WHERE id = :id");
            $stmt->bindParam(':id', $id);
            $stmt->execute();
            return $stmt->fetch(PDO::FETCH_ASSOC);
        } catch (PDOException $e) {
            echo "Error fetching product: " . $e->getMessage();
            return null;
        }
    }
}

// Cart class
class Cart {
    public function __construct() {
        if (!isset($_SESSION['cart'])) {
            $_SESSION['cart'] = array();
        }
    }

    // Add item to cart
    public function addItem($id, $quantity) {
        try {
            $db = new Database();
            $product = new Product($db->getConnection());
            $productData = $product->getProductById($id);

            if ($productData && $quantity > 0) {
                $_SESSION['cart'][$id] = array(
                    'name' => $productData['name'],
                    'price' => $productData['price'],
                    'quantity' => $quantity
                );
                return true;
            }
            return false;
        } catch (Exception $e) {
            echo "Error adding item: " . $e->getMessage();
            return false;
        }
    }

    // Remove item from cart
    public function removeItem($id) {
        try {
            unset($_SESSION['cart'][$id]);
            return true;
        } catch (Exception $e) {
            echo "Error removing item: " . $e->getMessage();
            return false;
        }
    }

    // Get total price of items in cart
    public function getTotal() {
        $total = 0;
        foreach ($_SESSION['cart'] as $item) {
            $total += ($item['price'] * $item['quantity']);
        }
        return $total;
    }

    // Get all items in cart
    public function getItems() {
        return $_SESSION['cart'];
    }
}

// Order class
class Order {
    private $db;

    public function __construct($db) {
        $this->db = $db;
    }

    // Place order
    public function placeOrder($userId, $products, $totalPrice) {
        try {
            $stmt = $this->db->prepare("INSERT INTO orders (user_id, products, total_price, created_at) VALUES (:user_id, :products, :total_price, NOW())");
            $stmt->bindParam(':user_id', $userId);
            $stmt->bindParam(':products', serialize($products));
            $stmt->bindParam(':total_price', $totalPrice);
            return $stmt->execute();
        } catch (PDOException $e) {
            echo "Error placing order: " . $e->getMessage();
            return false;
        }
    }
}

// CSRF protection
function generateCsrfToken() {
    if (empty($_SESSION['csrf_token'])) {
        $_SESSION['csrf_token'] = bin2hex(random_bytes(32));
    }
    return $_SESSION['csrf_token'];
}

function validateCsrfToken($token) {
    if (!isset($_SESSION['csrf_token']) || $token !== $_SESSION['csrf_token']) {
        die("Invalid CSRF token");
    }
}


<?php
// Database configuration
$host = 'localhost';
$dbname = 'shopping_cart';
$user = 'root';
$password = '';

try {
    $db = new PDO("mysql:host=$host;dbname=$dbname", $user, $password);
    $db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

// Product class
class Product {
    private $id;
    private $name;
    private $price;
    private $description;
    private $stock;

    public function __construct($id, $name, $price, $description, $stock) {
        $this->id = $id;
        $this->name = $name;
        $this->price = $price;
        $this->description = $description;
        $this->stock = $stock;
    }

    // Getters and setters
}

// Cart class
class Cart {
    private $cartId;
    private $userId;
    private $productId;
    private $quantity;

    public function __construct($cartId, $userId, $productId, $quantity) {
        $this->cartId = $cartId;
        $this->userId = $userId;
        $this->productId = $productId;
        $this->quantity = $quantity;
    }

    // Getters and setters
}

// Order class
class Order {
    private $orderId;
    private $orderNumber;
    private $totalAmount;
    private $paymentMethod;
    private $status;
    private $userId;

    public function __construct($orderId, $orderNumber, $totalAmount, $paymentMethod, $status, $userId) {
        $this->orderId = $orderId;
        $this->orderNumber = $orderNumber;
        $this->totalAmount = $totalAmount;
        $this->paymentMethod = $paymentMethod;
        $this->status = $status;
        $this->userId = $userId;
    }

    // Getters and setters
}

// User class
class User {
    private $userId;
    private $email;
    private $password;
    private $firstName;
    private $lastName;
    private $address;
    private $city;
    private $state;
    private $zipCode;

    public function __construct($userId, $email, $password, $firstName, $lastName, $address, $city, $state, $zipCode) {
        $this->userId = $userId;
        $this->email = $email;
        $this->password = $password;
        $this->firstName = $firstName;
        $this->lastName = $lastNam;
        $this->address = $address;
        $this->city = $city;
        $this->state = $state;
        $this->zipCode = $zipCode;
    }

    // Getters and setters
}

// Database functions

function addProductToCart($userId, $productId, $quantity) {
    global $db;

    try {
        // Check if product is already in cart
        $stmt = $db->prepare("SELECT * FROM cart WHERE user_id = ? AND product_id = ?");
        $stmt->execute([$userId, $productId]);
        $cartItem = $stmt->fetch();

        if ($cartItem) {
            // Update quantity
            $newQuantity = $cartItem['quantity'] + $quantity;
            $stmt = $db->prepare("UPDATE cart SET quantity = ? WHERE cart_id = ?");
            $stmt->execute([$newQuantity, $cartItem['cart_id']]);
        } else {
            // Add new item to cart
            $stmt = $db->prepare("INSERT INTO cart (user_id, product_id, quantity) VALUES (?, ?, ?)");
            $stmt->execute([$userId, $productId, $quantity]);
        }

        return true;
    } catch (PDOException $e) {
        echo "Error: " . $e->getMessage();
        return false;
    }
}

function getCartItems($userId) {
    global $db;

    try {
        $stmt = $db->prepare("SELECT * FROM cart WHERE user_id = ?");
        $stmt->execute([$userId]);
        $cartItems = $stmt->fetchAll();

        return $cartItems;
    } catch (PDOException $e) {
        echo "Error: " . $e->getMessage();
        return false;
    }
}

function updateCartItem($cartId, $quantity) {
    global $db;

    try {
        $stmt = $db->prepare("UPDATE cart SET quantity = ? WHERE cart_id = ?");
        $stmt->execute([$quantity, $cartId]);

        return true;
    } catch (PDOException $e) {
        echo "Error: " . $e->getMessage();
        return false;
    }
}

function removeCartItem($cartId) {
    global $db;

    try {
        $stmt = $db->prepare("DELETE FROM cart WHERE cart_id = ?");
        $stmt->execute([$cartId]);

        return true;
    } catch (PDOException $e) {
        echo "Error: " . $e->getMessage();
        return false;
    }
}

function placeOrder($userId, $paymentMethod) {
    global $db;

    try {
        // Get cart items
        $cartItems = getCartItems($userId);

        if (!$cartItems || count($cartItems) == 0) {
            return false; // No items in cart
        }

        // Calculate total amount
        $totalAmount = 0;
        foreach ($cartItems as $item) {
            $product = getProductById($item['product_id']);
            $totalAmount += $product->price * $item['quantity'];
        }

        // Generate order number
        $orderNumber = date('YMD') . rand(100, 999);

        // Create new order
        $stmt = $db->prepare("INSERT INTO orders (order_number, total_amount, payment_method, user_id) VALUES (?, ?, ?, ?)");
        $stmt->execute([$orderNumber, $totalAmount, $paymentMethod, $userId]);
        $orderId = $db->lastInsertId();

        // Insert order items
        foreach ($cartItems as $item) {
            $stmt = $db->prepare("INSERT INTO order_items (order_id, product_id, quantity, price) VALUES (?, ?, ?, ?)");
            $stmt->execute([$orderId, $item['product_id'], $item['quantity'], getProductById($item['product_id'])->price]);
        }

        // Clear cart
        $stmt = $db->prepare("DELETE FROM cart WHERE user_id = ?");
        $stmt->execute([$userId]);

        return new Order($orderId, $orderNumber, $totalAmount, $paymentMethod, 'pending', $userId);
    } catch (PDOException $e) {
        echo "Error: " . $e->getMessage();
        return false;
    }
}

function processPayment($orderId, $paymentStatus) {
    global $db;

    try {
        $stmt = $db->prepare("UPDATE orders SET status = ?, payment_date = NOW(), transaction_id = ? WHERE order_id = ?");
        $stmt->execute([$paymentStatus, uniqid(), $orderId]);

        return true;
    } catch (PDOException $e) {
        echo "Error: " . $e->getMessage();
        return false;
    }
}

// Example usage

session_start();

if (!isset($_SESSION['user_id'])) {
    header('Location: login.php');
    exit();
}

$user_id = $_SESSION['user_id'];

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    if (isset($_POST['add_to_cart'])) {
        $product_id = intval($_POST['product_id']);
        $quantity = intval($_POST['quantity']);

        addProductToCart($user_id, $product_id, $quantity);
    } elseif (isset($_POST['update_cart'])) {
        foreach ($_POST as $key => $value) {
            if (strpos($key, 'item_') === 0) {
                $cartId = intval(substr($key, 5));
                updateCartItem($cartId, $value);
            }
        }
    } elseif (isset($_POST['remove_from_cart'])) {
        $cartId = intval($_POST['cart_id']);
        removeCartItem($cartId);
    } elseif (isset($_POST['checkout'])) {
        // Process checkout
        $paymentMethod = $_POST['payment_method'];

        $order = placeOrder($user_id, $paymentMethod);

        if ($order) {
            // Simulate payment processing
            $paymentStatus = processPayment($order->orderId, 'completed');
            if ($paymentStatus) {
                header('Location: thank_you.php?order_number=' . $order->orderNumber);
                exit();
            } else {
                echo "Payment failed!";
            }
        } else {
            echo "Error placing order!";
        }
    }
}

// Display cart items
$cartItems = getCartItems($user_id);

?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <?php if ($cartItems): ?>
        <h1>Your Cart</h1>
        <form method="post">
            <?php foreach ($cartItems as $item): 
                $product = getProductById($item['product_id']);
            ?>
                <div>
                    <h3><?php echo $product->name; ?></h3>
                    <p>Price: $<?php echo number_format($product->price, 2); ?></p>
                    <input type="text" name="item_<?php echo $item['cart_id']; ?>" value="<?php echo $item['quantity']; ?>">
                </div>
            <?php endforeach; ?>
            <br>
            <select name="payment_method">
                <option value="credit_card">Credit Card</option>
                <option value="paypal">PayPal</option>
            </select>
            <input type="submit" name="checkout" value="Place Order">
        </form>
    <?php else: ?>
        <h2>Your cart is empty!</h2>
    <?php endif; ?>

    <a href="products.php">Continue Shopping</a>
</body>
</html>


<?php
session_start();
// Sample products (you can replace this with data from your database)
$products = array(
    array('id' => 1, 'name' => 'Product A', 'price' => 29.99),
    array('id' => 2, 'name' => 'Product B', 'price' => 49.99),
    array('id' => 3, 'name' => 'Product C', 'price' => 19.99)
);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Products</title>
    <style>
        .product {
            border: 1px solid #ddd;
            padding: 10px;
            margin: 10px;
        }
        button {
            background-color: green;
            color: white;
            padding: 5px 10px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
    </style>
</head>
<body>
    <h1>Products</h1>
    <?php foreach ($products as $product): ?>
        <div class="product">
            <h3><?php echo $product['name']; ?></h3>
            <p>$<?php echo number_format($product['price'], 2); ?></p>
            <form action="add_to_cart.php" method="post">
                <input type="hidden" name="id" value="<?php echo $product['id']; ?>">
                <input type="hidden" name="name" value="<?php echo $product['name']; ?>">
                <input type="hidden" name="price" value="<?php echo $product['price']; ?>">
                <button type="submit">Add to Cart</button>
            </form>
        </div>
    <?php endforeach; ?>
    
    <a href="cart.php">View Cart</a>
</body>
</html>


<?php
session_start();
// Get product details from form submission
$id = isset($_POST['id']) ? $_POST['id'] : '';
$name = isset($_POST['name']) ? $_POST['name'] : '';
$price = isset($_POST['price']) ? $_POST['price'] : 0;

if ($id && $name && $price) {
    // Initialize cart if it doesn't exist
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }
    
    // Check if product is already in the cart
    if (array_key_exists($id, $_SESSION['cart'])) {
        $_SESSION['cart'][$id]['quantity'] += 1;
    } else {
        $_SESSION['cart'][$id] = array(
            'id' => $id,
            'name' => $name,
            'price' => $price,
            'quantity' => 1
        );
    }
    
    echo "<script>alert('Product added to cart!');</script>";
}

// Redirect back to products page
header("Location: products.php");
exit();
?>


<?php
session_start();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
    <style>
        .cart-item {
            border: 1px solid #ddd;
            padding: 10px;
            margin: 10px;
        }
        button {
            background-color: red;
            color: white;
            padding: 5px 10px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
    </style>
</head>
<body>
    <h1>Shopping Cart</h1>
    
    <?php if (isset($_SESSION['cart']) && count($_SESSION['cart']) > 0): ?>
        <?php $total = 0; ?>
        
        <?php foreach ($_SESSION['cart'] as $item): ?>
            <div class="cart-item">
                <h3><?php echo $item['name']; ?></h3>
                <p>Quantity: <?php echo $item['quantity']; ?></p>
                <p>$<?php echo number_format($item['price'], 2); ?></p>
                
                <?php 
                    $subtotal = $item['price'] * $item['quantity'];
                    $total += $subtotal;
                ?>
                
                <form action="remove_from_cart.php" method="post">
                    <input type="hidden" name="id" value="<?php echo $item['id']; ?>">
                    <button type="submit">Remove</button>
                </form>
            </div>
        <?php endforeach; ?>
        
        <h3>Total: $<?php echo number_format($total, 2); ?></h3>
        <a href="checkout.php"><button>Checkout</button></a>
    <?php else: ?>
        <p>Your cart is empty.</p>
        <a href="products.php">Continue Shopping</a>
    <?php endif; ?>
</body>
</html>


<?php
session_start();
// Get product ID to remove
$id = isset($_POST['id']) ? $_POST['id'] : '';

if ($id) {
    if (isset($_SESSION['cart'][$id])) {
        unset($_SESSION['cart'][$id]);
        
        echo "<script>alert('Product removed from cart!');</script>";
    }
}

// Redirect back to cart page
header("Location: cart.php");
exit();
?>


<?php
session_start();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
    <style>
        .order-summary {
            border: 1px solid #ddd;
            padding: 20px;
            margin: 20px;
        }
        form {
            max-width: 500px;
            margin: 0 auto;
        }
        input, select {
            width: 100%;
            padding: 8px;
            margin: 10px 0;
            box-sizing: border-box;
        }
    </style>
</head>
<body>
    <h1>Checkout</h1>
    
    <?php if (!isset($_SESSION['cart']) || count($_SESSION['cart']) == 0): ?>
        <p>Your cart is empty.</p>
        <a href="products.php">Continue Shopping</a>
    <?php else: ?>
        <div class="order-summary">
            <h2>Order Summary</h2>
            
            <?php $total = 0; ?>
            <?php foreach ($_SESSION['cart'] as $item): ?>
                <?php 
                    $subtotal = $item['price'] * $item['quantity'];
                    $total += $subtotal;
                ?>
                
                <div class="cart-item">
                    <h3><?php echo $item['name']; ?></h3>
                    <p>Quantity: <?php echo $item['quantity']; ?></p>
                    <p>$<?php echo number_format($item['price'], 2); ?></p>
                </div>
            <?php endforeach; ?>
            
            <h3>Total Amount: $<?php echo number_format($total, 2); ?></h3>
        </div>

        <h2>Payment Information</h2>
        <form action="process_payment.php" method="post">
            <label for="name">Name:</label>
            <input type="text" id="name" name="name" required>

            <label for="card_number">Card Number:</label>
            <input type="text" id="card_number" name="card_number" required>

            <label for="expiry_date">Expiry Date:</label>
            <input type="text" id="expiry_date" name="expiry_date" placeholder="MM/YY" required>

            <label for="cvv">CVV:</label>
            <input type="text" id="cvv" name="cvv" required>

            <button type="submit">Place Order</button>
        </form>
    <?php endif; ?>
</body>
</html>


<?php
session_start();
// Get payment details
$name = isset($_POST['name']) ? $_POST['name'] : '';
$card_number = isset($_POST['card_number']) ? $_POST['card_number'] : '';
$expiry_date = isset($_POST['expiry_date']) ? $_POST['expiry_date'] : '';
$cvv = isset($_POST['cvv']) ? $_POST['cvv'] : '';

// Process payment (this is a simplified example)
if ($name && $card_number && $expiry_date && $cvv) {
    // Normally, you would integrate with a payment gateway here
    // For this example, we'll just simulate the payment processing
    
    // Calculate total amount from session cart
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += $item['price'] * $item['quantity'];
    }

    // Clear the cart after purchase
    unset($_SESSION['cart']);
    
    // You can store the order in a database here if needed
    
    header("Location: confirmation.php?amount=" . urlencode($total));
} else {
    echo "<script>alert('Payment details are required!');</script>";
    header("Location: checkout.php");
}
exit();
?>


<?php
session_start();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Order Confirmation</title>
    <style>
        .confirmation {
            text-align: center;
            padding: 20px;
        }
    </style>
</head>
<body>
    <div class="confirmation">
        <h1>Thank you for your purchase!</h1>
        <?php if (isset($_GET['amount'])): ?>
            <p>Your order has been processed successfully.</p>
            <p>Total Amount: $<?php echo number_format($_GET['amount'], 2); ?></p>
        <?php else: ?>
            <p>There was an error processing your order. Please try again.</p>
        <?php endif; ?>
        
        <a href="products.php">Continue Shopping</a>
    </div>
</body>
</html>


<?php
// Connect to your database
$connection = new mysqli("localhost", "username", "password", "database");

if ($connection->connect_error) {
    die("Connection failed: " . $connection->connect_error);
}

$sql = "SELECT * FROM products";
$result = $connection->query($sql);

echo "<div class='product-grid'>";
while ($row = $result->fetch_assoc()) {
    echo "
        <div class='product-item'>
            <img src='" . $row['image'] . "' alt='" . $row['name'] . "'>
            <h3>" . $row['name'] . "</h3>
            <p>Price: $" . number_format($row['price'], 2) . "</p>
            <form action='add_to_cart.php' method='post'>
                <input type='hidden' name='id' value='" . $row['id'] . "'>
                <button type='submit'>Add to Cart</button>
            </form>
        </div>
    ";
}
echo "</div>";

$connection->close();
?>


<?php
session_start();

$product_id = isset($_POST['id']) ? $_POST['id'] : null;

if ($product_id) {
    // Connect to database
    $connection = new mysqli("localhost", "username", "password", "database");
    
    if ($connection->connect_error) {
        die("Connection failed: " . $connection->connect_error);
    }

    $sql = "SELECT id, name, price FROM products WHERE id = ?";
    $stmt = $connection->prepare($sql);
    $stmt->bind_param('i', $product_id);
    $stmt->execute();
    
    $result = $stmt->get_result();
    $product = $result->fetch_assoc();

    if ($product) {
        if (isset($_SESSION['cart'][$product_id])) {
            $_SESSION['cart'][$product_id]['quantity']++;
        } else {
            $_SESSION['cart'][$product_id] = array(
                'name' => $product['name'],
                'price' => $product['price'],
                'quantity' => 1
            );
        }
    }

    header("Location: cart.php");
    die();
}
?>


<?php
session_start();

if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Connect to database (to fetch product details if needed)
$connection = new mysqli("localhost", "username", "password", "database");
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <h2>Your Shopping Cart</h2>
    <?php
    $total = 0;
    foreach ($_SESSION['cart'] as $id => $item) {
        echo "<div class='cart-item'>";
        echo "<h3>" . $item['name'] . "</h3>";
        echo "<p>Price: $" . number_format($item['price'], 2) . "</p>";
        echo "<p>Quantity: " . $item['quantity'] . "</p>";
        $total += $item['price'] * $item['quantity'];
        echo "</div>";
    }
    
    if (empty($_SESSION['cart'])) {
        echo "<p>Your cart is empty.</p>";
    } else {
        echo "<h3>Subtotal: $" . number_format($total, 2) . "</h3>";
        // Add tax calculation if needed
        // Example:
        $tax = $total * 0.08; // 8% tax
        $grand_total = $total + $tax;
        echo "<h3>Tax: $" . number_format($tax, 2) . "</h3>";
        echo "<h3>Grand Total: $" . number_format($grand_total, 2) . "</h3>";
        
        echo "<form action='checkout.php' method='post'>";
        echo "<button type='submit'>Proceed to Checkout</button>";
        echo "</form>";
    }
    ?>
</body>
</html>


<?php
session_start();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
</head>
<body>
    <?php
    if (isset($_SESSION['cart']) && !empty($_SESSION['cart'])) {
        // Display payment form
        ?>
        <h2>Payment Information</h2>
        <form action="process_payment.php" method="post">
            <label for="card_number">Card Number:</label><br>
            <input type="text" id="card_number" name="card_number" required><br>
            
            <label for="cvv">CVV:</label><br>
            <input type="text" id="cvv" name="cvv" required><br>
            
            <label for="expiry_date">Expiry Date (MM/YY):</label><br>
            <input type="text" id="expiry_date" name="expiry_date" required><br>
            
            <button type="submit">Complete Purchase</button>
        </form>
        <?php
    } else {
        echo "<p>Your cart is empty. Please add items to your cart first.</p>";
        header("refresh: 2; url=products.php");
    }
    ?>
</body>
</html>


<?php
session_start();

// Simulate payment processing
if (isset($_POST['card_number'], $_POST['cvv'], $_POST['expiry_date'])) {
    // In a real application, you would integrate with a payment gateway here.
    // For now, we'll just simulate the process.

    $payment_approved = true; // Assume payment is approved for testing

    if ($payment_approved) {
        // Clear the cart
        unset($_SESSION['cart']);
        
        header("Location: confirmation.php");
        die();
    } else {
        echo "<p>Payment failed. Please try again.</p>";
        header("refresh: 2; url=checkout.php");
    }
}
?>


<?php
session_start();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Purchase Confirmed</title>
</head>
<body>
    <?php
    if (isset($_SESSION['cart'])) {
        // Get order details from session or database
        $order_details = "Order confirmation details here..."; // You would retrieve this from your database in a real application
    } else {
        header("Location: products.php");
        die();
    }
    ?>
    
    <h2>Your purchase has been confirmed!</h2>
    <?php echo $order_details; ?>
</body>
</html>


<?php
// Connect to the database
$host = 'localhost';
$dbname = 'your_database_name';
$user = 'root'; // or your database user
$password = ''; // or your database password

try {
    $pdo = new PDO("mysql:host=$host;dbname=$dbname", $user, $password);
    $pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    die("Could not connect to the database " . $e->getMessage());
}

// Fetch products from the database
$stmt = $pdo->query('SELECT * FROM products');
$products = $stmt->fetchAll();

?>
<!DOCTYPE html>
<html>
<head>
    <title>Product List</title>
</head>
<body>
    <?php foreach ($products as $product): ?>
        <div>
            <h2><?php echo $product['name']; ?></h2>
            <p><?php echo $product['description']; ?></p>
            <p>Price: <?php echo $product['price']; ?> USD</p>
            <form action="add_to_cart.php" method="post">
                <input type="hidden" name="id" value="<?php echo $product['id']; ?>">
                <input type="number" name="quantity" min="1" value="1">
                <button type="submit">Add to Cart</button>
            </form>
        </div>
    <?php endforeach; ?>
</body>
</html>


<?php
session_start();

if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

$product_id = $_POST['id'];
$quantity = $_POST['quantity'];

// Add product to cart
$_SESSION['cart'][$product_id] = $quantity;

header("Location: view_cart.php");
exit();
?>


<?php
session_start();

require 'db_connection.php'; // Include your database connection file

if (empty($_SESSION['cart'])) {
    echo "Your cart is empty.";
} else {
    $total = 0;
    foreach ($_SESSION['cart'] as $product_id => $quantity) {
        $stmt = $pdo->prepare('SELECT * FROM products WHERE id = :id');
        $stmt->execute(['id' => $product_id]);
        $product = $stmt->fetch();
        
        if ($product) {
            $total += $product['price'] * $quantity;
            echo "<div>";
            echo "<h3>" . $product['name'] . "</h3>";
            echo "<p>Price: " . $product['price'] . "</p>";
            echo "<p>Quantity: " . $quantity . "</p>";
            echo "</div>";
        }
    }
    echo "<h2>Total: " . $total . "</h2>";
}
?>


<?php
session_start();

if (empty($_SESSION['cart'])) {
    header("Location: product_list.php");
    exit();
}

// Check if user is logged in
if (!isset($_SESSION['user_id'])) {
    header("Location: login.php");
    exit();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
</head>
<body>
    <h2>Proceed to Checkout</h2>
    <form action="process_payment.php" method="post">
        <input type="hidden" name="cart" value="<?php echo serialize($_SESSION['cart']); ?>">
        <div>
            <label for="name">Name:</label>
            <input type="text" id="name" name="name" required>
        </div>
        <div>
            <label for="email">Email:</label>
            <input type="email" id="email" name="email" required>
        </div>
        <div>
            <label for="address">Address:</label>
            <textarea id="address" name="address" required></textarea>
        </div>
        <div>
            <label for="card_number">Card Number:</label>
            <input type="text" id="card_number" name="card_number" pattern="[0-9]{16}" required>
        </div>
        <button type="submit">Place Order</button>
    </form>
</body>
</html>


<?php
session_start();

require 'db_connection.php';

if (!isset($_POST['cart'])) {
    die("No items in cart.");
}

$cart = unserialize($_POST['cart']);

// Calculate total
$total = 0;
foreach ($cart as $product_id => $quantity) {
    $stmt = $pdo->prepare('SELECT price FROM products WHERE id = :id');
    $stmt->execute(['id' => $product_id]);
    $price = $stmt->fetch()['price'];
    
    $total += $price * $quantity;
}

// Insert order into database
$stmt = $pdo->prepare('INSERT INTO orders (user_id, total_price, order_date) VALUES (:user_id, :total, NOW())');
$stmt->execute([
    'user_id' => $_SESSION['user_id'],
    'total' => $total
]);
$order_id = $pdo->lastInsertId();

// Insert order items
foreach ($cart as $product_id => $quantity) {
    $stmt = $pdo->prepare('INSERT INTO order_items (order_id, product_id, quantity) VALUES (:order_id, :product_id, :quantity)');
    $stmt->execute([
        'order_id' => $order_id,
        'product_id' => $product_id,
        'quantity' => $quantity
    ]);
}

// Clear the cart
unset($_SESSION['cart']);

header("Location: thank_you.php");
exit();
?>


<?php
session_start();

if (!isset($_SESSION['user_id'])) {
    header("Location: login.php");
    exit();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Thank You</title>
</head>
<body>
    <h2>Thank You for Your Order!</h2>
    <p>Your order has been received and is being processed.</p>
    <a href="product_list.php">Continue Shopping</a>
</body>
</html>


<?php
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'shopping_cart';

$conn = new mysqli($host, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}
?>


<?php session_start(); ?>
<!DOCTYPE html>
<html>
<head>
    <title>Product Page</title>
    <style>
        body { font-family: Arial, sans-serif; }
        .product { border: 1px solid #ddd; padding: 10px; margin: 5px; }
    </style>
</head>
<body>
    <?php
    include_once 'config.php';
    
    $sql = "SELECT * FROM products";
    $result = $conn->query($sql);
    
    if ($result->num_rows > 0) {
        while ($row = $result->fetch_assoc()) {
            echo "<div class='product'>";
            echo "<h3>" . $row['name'] . "</h3>";
            echo "<p>Price: $" . number_format($row['price'], 2) . "</p>";
            echo "<button onclick='addToCart(" . $row['id'] . ")'>Add to Cart</button>";
            echo "</div>";
        }
    } else {
        echo "No products found.";
    }
    
    $conn->close();
    ?>
    
    <script>
        function addToCart(productId) {
            var xhr = new XMLHttpRequest();
            xhr.open("POST", "add_to_cart.php", true);
            xhr.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
            xhr.onreadystatechange = function() {
                if (xhr.readyState == 4 && xhr.status == 200) {
                    alert(xhr.responseText);
                }
            };
            xhr.send("productId=" + productId);
        }
    </script>
</body>
</html>


<?php session_start(); ?>
<?php
include_once 'config.php';

if (isset($_POST['productId'])) {
    $productId = $_POST['productId'];
    
    // Check if product exists
    $sql_product = "SELECT id FROM products WHERE id = ?";
    $stmt = $conn->prepare($sql_product);
    $stmt->bind_param("i", $productId);
    $stmt->execute();
    
    $result = $stmt->get_result();
    if ($result->num_rows == 0) {
        die(json_encode(array('status' => 'error', 'message' => 'Product not found.')));
    }
    
    // Check if item already exists in cart
    $sql_cart = "SELECT id FROM shopping_cart WHERE product_id = ? AND user_session_id = ?";
    $stmt = $conn->prepare($sql_cart);
    $stmt->bind_param("is", $productId, session_id());
    $stmt->execute();
    
    $result = $stmt->get_result();
    if ($result->num_rows > 0) {
        // Update quantity
        $sql_update = "UPDATE shopping_cart SET quantity = quantity + 1 WHERE product_id = ? AND user_session_id = ?";
        $stmt = $conn->prepare($sql_update);
        $stmt->bind_param("is", $productId, session_id());
        $stmt->execute();
    } else {
        // Add new item
        $sql_insert = "INSERT INTO shopping_cart (product_id, user_session_id, quantity) VALUES (?, ?, 1)";
        $stmt = $conn->prepare($sql_insert);
        $stmt->bind_param("is", $productId, session_id());
        $stmt->execute();
    }
    
    echo json_encode(array('status' => 'success', 'message' => 'Item added to cart.'));
} else {
    die(json_encode(array('status' => 'error', 'message' => 'Invalid request.')));
}

$conn->close();
?>


<?php session_start(); ?>
<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
    <style>
        body { font-family: Arial, sans-serif; }
        .cart-item { border: 1px solid #ddd; padding: 10px; margin: 5px; }
    </style>
</head>
<body>
    <?php
    include_once 'config.php';
    
    $sql = "SELECT sc.id AS cart_id, p.*, sc.quantity 
            FROM shopping_cart sc 
            JOIN products p ON sc.product_id = p.id 
            WHERE sc.user_session_id = ?";
            
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("s", session_id());
    $stmt->execute();
    
    $result = $stmt->get_result();
    $total = 0;
    
    if ($result->num_rows > 0) {
        while ($row = $result->fetch_assoc()) {
            echo "<div class='cart-item'>";
            echo "<h3>" . $row['name'] . "</h3>";
            echo "<p>Price: $" . number_format($row['price'], 2) . "</p>";
            echo "<p>Quantity: " . $row['quantity'] . "</p>";
            echo "<button onclick='updateQuantity(" . $row['cart_id'] . ", \"increase\")'>Increase</button>";
            echo "<button onclick='updateQuantity(" . $row['cart_id'] . ", \"decrease\")'>Decrease</button>";
            echo "<button onclick='deleteItem(" . $row['cart_id'] . ")'>Delete</button>";
            echo "</div>";
            
            $total += $row['price'] * $row['quantity'];
        }
        echo "<h2>Total: $" . number_format($total, 2) . "</h2>";
    } else {
        echo "Your cart is empty.";
    }
    
    $conn->close();
    ?>
    
    <script>
        function updateQuantity(cartId, action) {
            var xhr = new XMLHttpRequest();
            xhr.open("POST", "update_quantity.php", true);
            xhr.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
            xhr.onreadystatechange = function() {
                if (xhr.readyState == 4 && xhr.status == 200) {
                    window.location.reload(); // Refresh to update cart
                }
            };
            xhr.send("cartId=" + cartId + "&action=" + action);
        }

        function deleteItem(cartId) {
            var xhr = new XMLHttpRequest();
            xhr.open("POST", "delete_item.php", true);
            xhr.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
            xhr.onreadystatechange = function() {
                if (xhr.readyState == 4 && xhr.status == 200) {
                    window.location.reload(); // Refresh to update cart
                }
            };
            xhr.send("cartId=" + cartId);
        }
    </script>
</body>
</html>


<?php session_start(); ?>
<?php
include_once 'config.php';

if (isset($_POST['cartId']) && isset($_POST['action'])) {
    $cartId = $_POST['cartId'];
    $action = $_POST['action'];
    
    if ($action == "increase") {
        $sql = "UPDATE shopping_cart SET quantity = quantity + 1 WHERE id = ?";
    } else if ($action == "decrease") {
        $sql = "UPDATE shopping_cart SET quantity = quantity - 1 WHERE id = ?";
    }
    
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("i", $cartId);
    $stmt->execute();
    
    echo json_encode(array('status' => 'success'));
} else {
    die(json_encode(array('status' => 'error')));
}

$conn->close();
?>


<?php session_start(); ?>
<?php
include_once 'config.php';

if (isset($_POST['cartId'])) {
    $cartId = $_POST['cartId'];
    
    $sql = "DELETE FROM shopping_cart WHERE id = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("i", $cartId);
    $stmt->execute();
    
    echo json_encode(array('status' => 'success'));
} else {
    die(json_encode(array('status' => 'error')));
}

$conn->close();
?>


<?php
// Include configuration file
require_once("config.php");

class User {
    public $id;
    public $name;
    public $email;

    public function register($name, $email, $password) {
        global $conn;
        
        // Check if email exists
        $stmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
        $stmt->bind_param("s", $email);
        $stmt->execute();
        $result = $stmt->get_result();
        
        if ($result->num_rows > 0) {
            return false; // Email already exists
        }

        // Hash password
        $password_hash = password_hash($password, PASSWORD_BCRYPT);

        // Insert into database
        $stmt = $conn->prepare("INSERT INTO users (name, email, password_hash) VALUES (?, ?, ?)");
        $stmt->bind_param("sss", $name, $email, $password_hash);
        
        if ($stmt->execute()) {
            $this->id = $conn->insert_id;
            $this->name = $name;
            $this->email = $email;
            return true;
        } else {
            return false;
        }
    }

    public function login($email, $password) {
        global $conn;
        
        // Get user data
        $stmt = $conn->prepare("SELECT id, name, password_hash FROM users WHERE email = ?");
        $stmt->bind_param("s", $email);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows == 1) {
            $user = $result->fetch_assoc();
            
            // Verify password
            if (password_verify($password, $user['password_hash'])) {
                $this->id = $user['id'];
                $this->name = $user['name'];
                $this->email = $email;
                return true;
            }
        }

        return false;
    }
}

// Example usage:
// $user = new User();
// if ($user->register('John Doe', 'john@example.com', 'password123')) {
//     echo "Registration successful!";
// }

// if ($user->login('john@example.com', 'password123')) {
//     echo "Login successful!";
// }
?>


<?php
require_once("config.php");

class Product {
    public $id;
    public $name;
    public $description;
    public $price;
    public $stock;
    public $image_url;

    public function __construct($id, $name, $description, $price, $stock, $image_url) {
        $this->id = $id;
        $this->name = $name;
        $this->description = $description;
        $this->price = $price;
        $this->stock = $stock;
        $this->image_url = $image_url;
    }

    public static function getAllProducts() {
        global $conn;
        
        $products = array();
        
        $stmt = $conn->prepare("SELECT * FROM products");
        $stmt->execute();
        $result = $stmt->get_result();

        while ($row = $result->fetch_assoc()) {
            $product = new Product($row['id'], $row['name'], $row['description'], $row['price'], $row['stock'], $row['image_url']);
            array_push($products, $product);
        }

        return $products;
    }
}
?>


<?php
session_start();

class Cart {
    public $items;

    function __construct() {
        if (isset($_SESSION['cart'])) {
            $this->items = $_SESSION['cart'];
        } else {
            $this->items = array();
        }
    }

    public function addToCart($productId, $quantity) {
        // Check if product exists in cart
        if (!empty($this->items[$productId])) {
            // Update quantity
            $this->items[$productId] += $quantity;
        } else {
            // Add new product
            $this->items[$productId] = $quantity;
        }

        $_SESSION['cart'] = $this->items;
    }

    public function updateCart($productId, $quantity) {
        if ($quantity > 0) {
            $this->items[$productId] = $quantity;
        } else {
            unset($this->items[$productId]);
        }

        $_SESSION['cart'] = $this->items;
    }

    public function getCartTotal() {
        global $conn;

        $total = 0;
        
        foreach ($this->items as $productId => $quantity) {
            // Get product price
            $stmt = $conn->prepare("SELECT price FROM products WHERE id = ?");
            $stmt->bind_param("i", $productId);
            $stmt->execute();
            $result = $stmt->get_result();

            if ($row = $result->fetch_assoc()) {
                $total += $row['price'] * $quantity;
            }
        }

        return $total;
    }

    public function getCartItems() {
        global $conn;

        $items = array();
        
        foreach ($this->items as $productId => $quantity) {
            // Get product details
            $stmt = $conn->prepare("SELECT * FROM products WHERE id = ?");
            $stmt->bind_param("i", $productId);
            $stmt->execute();
            $result = $stmt->get_result();

            if ($row = $result->fetch_assoc()) {
                $product = new Product($row['id'], $row['name'], $row['description'], $row['price'], $row['stock'], $row['image_url']);
                array_push($items, array(
                    'product' => $product,
                    'quantity' => $quantity
                ));
            }
        }

        return $items;
    }
}
?>


<?php
require_once("config.php");
session_start();

class Order {
    public $id;
    public $user_id;
    public $total_amount;
    public $payment_method;
    public $order_status;

    function __construct($user_id, $total_amount, $payment_method) {
        global $conn;

        // Create new order
        $stmt = $conn->prepare("INSERT INTO orders (user_id, total_amount, payment_method, order_status) VALUES (?, ?, ?, 'pending')");
        $stmt->bind_param("ids", $user_id, $total_amount, $payment_method);
        
        if ($stmt->execute()) {
            $this->id = $conn->insert_id;
            $this->user_id = $user_id;
            $this->total_amount = $total_amount;
            $this->payment_method = $payment_method;
            $this->order_status = 'pending';
            
            // Insert order items
            $cart = new Cart();
            foreach ($cart->getCartItems() as $item) {
                $productId = $item['product']->id;
                $quantity = $item['quantity'];
                $price = $item['product']->price;

                $stmt2 = $conn->prepare("INSERT INTO order_items (order_id, product_id, quantity, price) VALUES (?, ?, ?, ?)");
                $stmt2->bind_param("iidi", $this->id, $productId, $quantity, $price);
                $stmt2->execute();
            }

            // Deduct stock
            foreach ($cart->getCartItems() as $item) {
                $productId = $item['product']->id;
                $quantity = $item['quantity'];

                $stmt3 = $conn->prepare("UPDATE products SET stock = stock - ? WHERE id = ?");
                $stmt3->bind_param("ii", $quantity, $productId);
                $stmt3->execute();
            }

            // Clear cart
            $_SESSION['cart'] = array();

            return true;
        } else {
            return false;
        }
    }
}
?>


<?php
session_start();
require_once("config.php");
require_once("classes/Product.php");
require_once("classes/Cart.php");
require_once("classes/Order.php");

if (isset($_SESSION['user_id'])) {
    $cart = new Cart();

    if (!empty($cart->getCartItems())) {
        // Process order
        if (isset($_POST['submit'])) {
            $payment_method = $_POST['payment_method'];
            $total_amount = $cart->getCartTotal();
            
            $order = new Order($_SESSION['user_id'], $total_amount, $payment_method);

            if ($order) {
                // Redirect to confirmation page
                header("Location: order-confirmation.php?order_id=" . $order->id);
                exit();
            } else {
                echo "Error processing your order. Please try again.";
            }
        }

        // Display checkout form
?>
<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
</head>
<body>
    <h1>Checkout</h1>
    
    <?php if (!empty($cart->getCartItems())): ?>
        <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="POST">
            <div style="margin-bottom: 20px;">
                <label for="payment_method">Payment Method:</label><br>
                <input type="text" id="payment_method" name="payment_method" required><br><br>
                
                <button type="submit" name="submit">Place Order</button>
            </div>
        </form>

        <h2>Order Summary</h2>
        <?php foreach ($cart->getCartItems() as $item): ?>
            <p><?php echo $item['product']->name; ?> (Quantity: <?php echo $item['quantity']; ?>)</p>
        <?php endforeach; ?>
        <p>Total: <?php echo $cart->getCartTotal(); ?></p>
    <?php else: ?>
        <p>Your cart is empty.</p>
    <?php endif; ?>

    <a href="index.php">Continue Shopping</a><br>
    <a href="logout.php">Logout</a>
</body>
</html>

<?php
    } else {
        echo "Your cart is empty. Please add items to your cart before checking out.";
    }
} else {
    header("Location: login.php");
    exit();
}
?>


<?php
session_start();
require_once("config.php");

if (isset($_GET['order_id'])) {
    $order_id = $_GET['order_id'];
    
    // Retrieve order details from database
    $stmt = $conn->prepare("SELECT * FROM orders WHERE id = ?");
    $stmt->bind_param("i", $order_id);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($row = $result->fetch_assoc()) {
        // Display confirmation message
?>
<!DOCTYPE html>
<html>
<head>
    <title>Order Confirmation</title>
</head>
<body>
    <h1>Thank you for your order!</h1>
    <p>Your order ID is: <?php echo $order_id; ?></p>
    <p>Total Amount: <?php echo $row['total_amount']; ?></p>
    <p>Payment Method: <?php echo $row['payment_method']; ?></p>
    <p>Status: <?php echo $row['order_status']; ?></p>

    <a href="index.php">Continue Shopping</a><br>
    <a href="logout.php">Logout</a>
</body>
</html>

<?php
    } else {
        echo "Invalid order ID.";
    }
} else {
    header("Location: index.php");
    exit();
}
?>


<?php
// Connect to database
$host = 'localhost';
$dbname = 'my_store';
$user = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $user, $password);
} catch(PDOException $e) {
    die("Could not connect: " . $e->getMessage());
}

// Fetch products from database
$stmt = $conn->query("SELECT * FROM products");
$products = $stmt->fetchAll();

?>

<!DOCTYPE html>
<html>
<head>
    <title>Store</title>
</head>
<body>
    <?php if (!isset($_SESSION['user_id'])) { ?>
        <a href="login.php">Login</a> | <a href="register.php">Register</a>
    <?php } else { ?>
        <a href="logout.php">Logout</a>
    <?php } ?>

    <h1>Our Products</h1>

    <?php foreach ($products as $product) { ?>
        <div class="product">
            <h2><?php echo $product['name']; ?></h2>
            <p><?php echo $product['description']; ?></p>
            <p>Price: <?php echo '$' . number_format($product['price'], 2); ?></p>
            <form action="add_to_cart.php" method="post">
                <input type="hidden" name="product_id" value="<?php echo $product['id']; ?>">
                <input type="number" name="quantity" min="1" max="99" value="1">
                <button type="submit">Add to Cart</button>
            </form>
        </div>
    <?php } ?>

    <?php if (isset($_SESSION['cart'])) { ?>
        <a href="view_cart.php">View Cart</a>
    <?php } ?>
</body>
</html>


<?php
session_start();

if (!isset($_POST['product_id']) || !isset($_POST['quantity'])) {
    die("Invalid request");
}

$product_id = $_POST['product_id'];
$quantity = $_POST['quantity'];

if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

$_SESSION['cart'][$product_id] += $quantity;

header('Location: index.php');
exit;
?>


<?php
session_start();

if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <?php if (!empty($_SESSION['cart'])) { ?>
        <h1>Your Shopping Cart</h1>
        <table>
            <tr>
                <th>Product ID</th>
                <th>Quantity</th>
                <th>Action</th>
            </tr>
            <?php foreach ($_SESSION['cart'] as $product_id => $quantity) { ?>
                <tr>
                    <td><?php echo $product_id; ?></td>
                    <td><?php echo $quantity; ?></td>
                    <td><a href="remove_from_cart.php?product_id=<?php echo $product_id; ?>">Remove</a></td>
                </tr>
            <?php } ?>
        </table>

        <p>Total: <?php echo count($_SESSION['cart']); ?> items</p>
        <form action="checkout.php" method="post">
            <button type="submit">Checkout</button>
        </form>
    <?php } else { ?>
        <h1>Your cart is empty</h1>
    <?php } ?>

    <a href="index.php">Continue Shopping</a>
</body>
</html>


<?php
session_start();

if (isset($_GET['product_id'])) {
    $product_id = $_GET['product_id'];
    
    if (isset($_SESSION['cart'][$product_id])) {
        unset($_SESSION['cart'][$product_id]);
    }
}

header('Location: view_cart.php');
exit;
?>


<?php
session_start();

if (!isset($_SESSION['user_id'])) {
    header('Location: login.php');
    exit;
}

?>

<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
</head>
<body>
    <?php if (empty($_SESSION['cart'])) { ?>
        <h1>Your cart is empty</h1>
        <a href="index.php">Continue Shopping</a>
        <?php exit; ?>
    <?php } ?>

    <h1>Proceed to Checkout</h1>
    
    <!-- Add your checkout form here -->
    <form action="process_payment.php" method="post">
        <div>
            <label for="name">Name:</label>
            <input type="text" id="name" name="name" required>
        </div>
        
        <div>
            <label for="email">Email:</label>
            <input type="email" id="email" name="email" required>
        </div>
        
        <div>
            <label for="address">Address:</label>
            <textarea id="address" name="address" rows="3" required></textarea>
        </div>

        <button type="submit">Complete Purchase</button>
    </form>
</body>
</html>


<?php
session_start();

if (!isset($_SESSION['user_id']) || empty($_SESSION['cart'])) {
    header('Location: index.php');
    exit;
}

// Here you would typically integrate with a payment gateway like Stripe, PayPal, etc.
// For now, we'll just simulate the payment processing.

$success = true; // In real application, this would depend on payment gateway response

if ($success) {
    // Clear the cart
    $_SESSION['cart'] = array();
    
    // Redirect to thank you page
    header('Location: thank_you.php');
} else {
    die("Payment failed. Please try again.");
}

exit;
?>


<?php
session_start();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Thank You</title>
</head>
<body>
    <h1>Thank You for Your Purchase!</h1>
    <p>Your order has been received.</p>
    <a href="index.php">Continue Shopping</a>
</body>
</html>


<?php
session_start();

if (isset($_SESSION['user_id'])) {
    header('Location: index.php');
    exit;
}

?>

<!DOCTYPE html>
<html>
<head>
    <title>Login</title>
</head>
<body>
    <?php if (isset($_GET['error'])) { ?>
        <p>Invalid username or password.</p>
    <?php } ?>

    <form action="process_login.php" method="post">
        <div>
            <label for="username">Username:</label>
            <input type="text" id="username" name="username" required>
        </div>

        <div>
            <label for="password">Password:</label>
            <input type="password" id="password" name="password" required>
        </div>

        <button type="submit">Login</button>
    </form>

    <p>Don't have an account? <a href="register.php">Register here</a>.</p>
</body>
</html>


<?php
session_start();

require_once('db_connect.php');

$username = $_POST['username'];
$password = md5($_POST['password']); // Note: Using MD5 is not secure for production. Use bcrypt or similar.

$stmt = $conn->prepare("SELECT id FROM users WHERE username = ? AND password = ?");
$stmt->execute(array($username, $password));
$row = $stmt->fetch();

if ($row) {
    $_SESSION['user_id'] = $row['id'];
    header('Location: index.php');
} else {
    header('Location: login.php?error=1');
}

exit;
?>


<?php
// Database connection details
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "myDB";

// Create database connection
$conn = new mysqli($servername, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to create tables if they don't exist
function createTables() {
    global $conn;
    
    // Create users table
    $sql = "CREATE TABLE IF NOT EXISTS users (
        id INT(6) UNSIGNED AUTO_INCREMENT PRIMARY KEY,
        username VARCHAR(30) NOT NULL UNIQUE,
        email VARCHAR(50) NOT NULL UNIQUE,
        password VARCHAR(255) NOT NULL,
        first_name VARCHAR(30),
        last_name VARCHAR(30),
        address TEXT
    )";
    
    if ($conn->query($sql) === TRUE) {
        echo "Users table created successfully<br>";
    } else {
        echo "Error creating users table: " . $conn->error . "<br>";
    }

    // Create products table
    $sql = "CREATE TABLE IF NOT EXISTS products (
        id INT(6) UNSIGNED AUTO_INCREMENT PRIMARY KEY,
        product_name VARCHAR(30) NOT NULL,
        price DECIMAL(10,2) NOT NULL,
        description TEXT,
        stock INT(6) NOT NULL
    )";
    
    if ($conn->query($sql) === TRUE) {
        echo "Products table created successfully<br>";
    } else {
        echo "Error creating products table: " . $conn->error . "<br>";
    }

    // Create orders table
    $sql = "CREATE TABLE IF NOT EXISTS orders (
        id INT(6) UNSIGNED AUTO_INCREMENT PRIMARY KEY,
        user_id INT(6),
        product_id INT(6),
        quantity INT(6),
        total_amount DECIMAL(10,2)
    )";
    
    if ($conn->query($sql) === TRUE) {
        echo "Orders table created successfully<br>";
    } else {
        echo "Error creating orders table: " . $conn->error . "<br>";
    }
}

// Call the function to create tables
createTables();

// Function to add sample products
function addSampleProducts() {
    global $conn;
    
    // Insert some sample products
    $sql = "INSERT INTO products (product_name, price, description, stock) VALUES 
        ('Product 1', 29.99, 'Description for Product 1', 50),
        ('Product 2', 49.99, 'Description for Product 2', 30),
        ('Product 3', 79.99, 'Description for Product 3', 20)";
    
    if ($conn->query($sql) === TRUE) {
        echo "Sample products added successfully<br>";
    } else {
        echo "Error adding sample products: " . $conn->error . "<br>";
    }
}

// Call the function to add sample products
addSampleProducts();

// Function to handle user registration
function registerUser($username, $email, $password, $first_name, $last_name, $address) {
    global $conn;
    
    // Hash password for security
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);
    
    $sql = "INSERT INTO users (username, email, password, first_name, last_name, address)
        VALUES ('$username', '$email', '$hashed_password', '$first_name', '$last_name', '$address')";
        
    if ($conn->query($sql) === TRUE) {
        return true;
    } else {
        return false;
    }
}

// Function to handle user login
function loginUser($email, $password) {
    global $conn;
    
    // Fetch user data based on email
    $sql = "SELECT * FROM users WHERE email='$email'";
    $result = $conn->query($sql);
    
    if ($result->num_rows > 0) {
        $user = $result->fetch_assoc();
        
        // Verify password
        if (password_verify($password, $user['password'])) {
            // Start session and store user data
            session_start();
            $_SESSION['user_id'] = $user['id'];
            $_SESSION['username'] = $user['username'];
            $_SESSION['email'] = $user['email'];
            
            return true;
        } else {
            return false;
        }
    } else {
        return false;
    }
}

// Function to get all products
function getAllProducts() {
    global $conn;
    
    $sql = "SELECT * FROM products";
    $result = $conn->query($sql);
    
    if ($result->num_rows > 0) {
        return $result;
    } else {
        return false;
    }
}

// Function to process purchase
function processPurchase($product_id, $quantity) {
    global $conn;
    
    // Check if user is logged in
    if (!isset($_SESSION['user_id'])) {
        header("Location: login.php");
        exit();
    }
    
    // Get product details
    $sql = "SELECT * FROM products WHERE id=$product_id";
    $result = $conn->query($sql);
    
    if ($result->num_rows > 0) {
        $product = $result->fetch_assoc();
        
        // Calculate total amount
        $total_amount = $product['price'] * $quantity;
        
        // Insert order into orders table
        $sql_order = "INSERT INTO orders (user_id, product_id, quantity, total_amount)
            VALUES ('".$_SESSION['user_id']."', '$product_id', '$quantity', '$total_amount')";
            
        if ($conn->query($sql_order) === TRUE) {
            return true;
        } else {
            return false;
        }
    } else {
        return false;
    }
}

// Close database connection
$conn->close();
?>


<?php
// Products.php - List of available products
$products = array(
    1 => array(
        'name' => 'Product 1',
        'price' => 29.99,
        'description' => 'Description for product 1'
    ),
    2 => array(
        'name' => 'Product 2',
        'price' => 49.99,
        'description' => 'Description for product 2'
    ),
    // Add more products as needed
);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
    <style>
        .product {
            border: 1px solid #ddd;
            padding: 10px;
            margin: 10px;
        }
        .cart {
            border: 1px solid #ddd;
            padding: 10px;
        }
    </style>
</head>
<body>
    <h1>Products</h1>
    <?php foreach ($products as $id => $product): ?>
        <div class="product">
            <h2><?php echo $product['name']; ?></h2>
            <p><?php echo $product['description']; ?></p>
            <p>Price: $<?php echo number_format($product['price'], 2); ?></p>
            <form action="add_to_cart.php" method="post">
                <input type="hidden" name="id" value="<?php echo $id; ?>">
                <input type="submit" value="Add to Cart">
            </form>
        </div>
    <?php endforeach; ?>

    <h2>Your Cart</h2>
    <?php
    session_start();
    if (isset($_SESSION['cart'])) {
        $cart = $_SESSION['cart'];
    } else {
        $cart = array();
    }
    ?>

    <div class="cart">
        <?php if (!empty($cart)): ?>
            <table>
                <tr><th>Product</th><th>Price</th><th>Action</th></tr>
                <?php foreach ($cart as $id => $product): ?>
                    <tr>
                        <td><?php echo $products[$id]['name']; ?></td>
                        <td>$<?php echo number_format($products[$id]['price'], 2); ?></td>
                        <td>
                            <form action="remove_from_cart.php" method="post">
                                <input type="hidden" name="id" value="<?php echo $id; ?>">
                                <input type="submit" value="Remove">
                            </form>
                        </td>
                    </tr>
                <?php endforeach; ?>
            </table>
            <p>Total: $<?php echo number_format(array_sum(array_column($cart, 'price')), 2); ?></p>
            <form action="checkout.php" method="post">
                <input type="submit" value="Checkout">
            </form>
        <?php else: ?>
            <p>Your cart is empty.</p>
        <?php endif; ?>
    </div>
</body>
</html>

<?php
// add_to_cart.php
session_start();
if (isset($_POST['id'])) {
    $id = $_POST['id'];
    if (!isset($_SESSION['cart'][$id])) {
        $_SESSION['cart'][$id] = array(
            'name' => $products[$id]['name'],
            'price' => $products[$id]['price']
        );
    }
    header('Location: index.php');
}
?>

<?php
// remove_from_cart.php
session_start();
if (isset($_POST['id'])) {
    $id = $_POST['id'];
    if (isset($_SESSION['cart'][$id])) {
        unset($_SESSION['cart'][$id]);
    }
    header('Location: index.php');
}
?>

<?php
// checkout.php
session_start();
$cart = isset($_SESSION['cart']) ? $_SESSION['cart'] : array();

if (!empty($cart)) {
    // Save order to database or file
    $order_id = uniqid();
    $order_date = date('Y-m-d H:i:s');
    
    // Example: Save to text file
    $file = fopen('orders.txt', 'a');
    fwrite($file, "Order ID: $order_id
");
    fwrite($file, "Date: $order_date
");
    foreach ($cart as $id => $product) {
        fwrite($file, "- {$product['name']} - \${$product['price']}
");
    }
    fclose($file);
    
    // Clear cart
    unset($_SESSION['cart']);
    
    echo "<h2>Thank you for your order!</h2>";
    echo "<p>Your order ID is: $order_id</p>";
} else {
    echo "<h2>Your cart is empty.</h2>";
}
?>


<?php
session_start();
include 'db_connection.php';

// Fetch products from database
$sql = "SELECT * FROM products";
$result = $conn->query($sql);
$products = $result->fetch_all(MYSQLI_ASSOC);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Product Store</title>
    <style>
        .product {
            border: 1px solid #ddd;
            padding: 10px;
            margin: 5px;
        }
    </style>
</head>
<body>
    <h1>Welcome to Product Store</h1>
    <?php foreach ($products as $product): ?>
        <div class="product">
            <img src="<?php echo $product['image_url']; ?>" width="200" alt="<?php echo $product['name']; ?>">
            <h3><?php echo $product['name']; ?></h3>
            <p><?php echo $product['description']; ?></p>
            <p>Price: $<?php echo number_format($product['price'], 2); ?></p>
            <form action="add_to_cart.php" method="post">
                <input type="hidden" name="product_id" value="<?php echo $product['id']; ?>">
                <input type="number" name="quantity" value="1" min="1">
                <button type="submit">Add to Cart</button>
            </form>
        </div>
    <?php endforeach; ?>
</body>
</html>


<?php
session_start();
include 'db_connection.php';

$product_id = $_POST['product_id'];
$quantity = $_POST['quantity'];

// Fetch product details
$sql = "SELECT * FROM products WHERE id = $product_id";
$result = $conn->query($sql);
$product = $result->fetch_assoc();

if ($product) {
    // Add to cart in session
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }
    
    $_SESSION['cart'][$product_id] = array(
        'name' => $product['name'],
        'price' => $product['price'],
        'quantity' => $quantity,
        'image_url' => $product['image_url']
    );
}

header("Location: cart.php");
exit();


<?php
session_start();

if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
    <style>
        .cart-item {
            border: 1px solid #ddd;
            padding: 10px;
            margin: 5px;
        }
    </style>
</head>
<body>
    <h1>Your Shopping Cart</h1>
    
    <?php if (empty($_SESSION['cart'])): ?>
        <p>Your cart is empty.</p>
        <a href="index.php">Continue shopping</a>
    <?php else: ?>
        <form action="update_cart.php" method="post">
            <?php foreach ($_SESSION['cart'] as $id => $item): ?>
                <div class="cart-item">
                    <img src="<?php echo $item['image_url']; ?>" width="100" alt="<?php echo $item['name']; ?>">
                    <h3><?php echo $item['name']; ?></h3>
                    <p>Price: $<?php echo number_format($item['price'], 2); ?></p>
                    <input type="number" name="quantity[<?php echo $id; ?>]" value="<?php echo $item['quantity']; ?>" min="1">
                    <button type="submit">Update quantity</button>
                    <a href="remove_from_cart.php?id=<?php echo $id; ?>">Remove</a>
                </div>
            <?php endforeach; ?>
            
            <br><br>
            <button type="submit">Update Cart</button>
        </form>
        
        <a href="checkout.php">Proceed to Checkout</a>
    <?php endif; ?>
</body>
</html>


<?php
session_start();

if (isset($_POST['quantity'])) {
    foreach ($_POST['quantity'] as $id => $qty) {
        $_SESSION['cart'][$id]['quantity'] = $qty;
    }
}

header("Location: cart.php");
exit();


<?php
session_start();

$product_id = $_GET['id'];

if (isset($_SESSION['cart'][$product_id])) {
    unset($_SESSION['cart'][$product_id]);
}

header("Location: cart.php");
exit();


<?php
session_start();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
    <style>
        .checkout-form {
            max-width: 500px;
            margin: 0 auto;
            padding: 20px;
            border: 1px solid #ddd;
        }
    </style>
</head>
<body>
    <h1>Checkout</h1>
    
    <?php if (empty($_SESSION['cart'])): ?>
        <p>Your cart is empty.</p>
        <a href="index.php">Continue shopping</a>
    <?php else: ?>
        <form class="checkout-form" action="process_payment.php" method="post">
            <h3>Shipping Information</h3>
            <label>Name:</label><br>
            <input type="text" name="name" required><br><br>
            
            <label>Address:</label><br>
            <textarea name="address" rows="4" cols="50" required></textarea><br><br>
            
            <label>Email:</label><br>
            <input type="email" name="email" required><br><br>
            
            <label>Phone:</label><br>
            <input type="tel" name="phone" required><br><br>
            
            <h3>Payment Information</h3>
            <!-- Payment form fields would go here -->
            <button type="submit">Complete Purchase</button>
        </form>
    <?php endif; ?>
</body>
</html>


<?php
session_start();
require 'vendor/autoload.php';

\Stripe\Stripe::setApiKey('your_stripe_secret_key');

try {
    $token = $_POST['stripeToken'];
    $amount = 100 * $_SESSION['total']; // Convert dollars to cents

    $charge = \Stripe\Charge::create([
        'amount' => $amount,
        'currency' => 'usd',
        'source' => $token,
        'description' => 'Product Store Purchase',
    ]);

    // Clear the cart
    unset($_SESSION['cart']);

    // Display success message
    header("Location: purchase_confirmation.php");
} catch (\Stripe\Error\Base $e) {
    // Handle payment errors
    echo "Payment failed. Please try again.";
}


<?php
session_start();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Purchase Confirmation</title>
</head>
<body>
    <h1>Thank you for your purchase!</h1>
    <p>Your order has been successfully processed.</p>
    <a href="index.php">Continue shopping</a>
</body>
</html>


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Online Store</title>
    <style>
        table {
            border-collapse: collapse;
            width: 100%;
        }
        
        th, td {
            padding: 8px;
            text-align: left;
            border-bottom: 1px solid #ddd;
        }
        
        .cart-button {
            background-color: #4CAF50;
            color: white;
            padding: 5px 10px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
    </style>
</head>
<body>
<?php
// Database connection - replace with your actual database credentials
$host = 'localhost';
$user = 'root';
$password = '';
$dbname = 'store';

$conn = new mysqli($host, $user, $password, $dbname);
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to display products
function display_products() {
    global $conn;
    
    // Query to get all products
    $sql = 'SELECT * FROM products';
    $result = $conn->query($sql);
    
    if ($result->num_rows > 0) {
        echo "<h2>Available Products</h2>";
        echo "<table><tr><th>Name</th><th>Description</th><th>Price</th><th>Quantity</th><th>Action</th></tr>";
        
        while($row = $result->fetch_assoc()) {
            echo "<tr><td>" . $row['name'] . "</td><td>" . $row['description'] . "</td><td>$" . number_format($row['price'], 2) . "</td><td>" . $row['quantity'] . "</td>";
            echo "<td><form method='post' action='add_to_cart.php'><input type='hidden' name='product_id' value='" . $row['id'] . "'><button class='cart-button' type='submit'>Add to Cart</button></form></td></tr>";
        }
        
        echo "</table>";
    } else {
        echo "No products available.";
    }
}

// Function to add product to cart
function add_to_cart($product_id) {
    global $conn;
    
    // Check if the product exists
    $sql = 'SELECT * FROM products WHERE id = ?';
    $stmt = $conn->prepare($sql);
    $stmt->bind_param('i', $product_id);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows == 1) {
        $product = $result->fetch_assoc();
        
        // Get current cart items from cookie
        $cart = isset($_COOKIE['cart']) ? unserialize($_COOKIE['cart']) : array();
        
        // Check if product is already in cart
        if (isset($cart[$product_id])) {
            // Increment quantity
            $cart[$product_id]['quantity']++;
        } else {
            // Add new product to cart
            $cart[$product_id] = array(
                'name' => $product['name'],
                'price' => $product['price'],
                'quantity' => 1
            );
        }
        
        // Set the cookie for 1 day
        setcookie('cart', serialize($cart), time() + (86400 * 30));
        echo "Product added to cart!";
    } else {
        echo "Product not found.";
    }
}

// Function to view cart
function view_cart() {
    // Get cart items from cookie
    $cart = isset($_COOKIE['cart']) ? unserialize($_COOKIE['cart']) : array();
    
    if (!empty($cart)) {
        echo "<h2>Your Shopping Cart</h2>";
        echo "<table><tr><th>Name</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>";
        
        $total = 0;
        
        foreach ($cart as $id => $item) {
            $subtotal = $item['price'] * $item['quantity'];
            $total += $subtotal;
            
            echo "<tr><td>" . $item['name'] . "</td><td>$" . number_format($item['price'], 2) . "</td><td><form method='post' action='update_cart.php'><input type='hidden' name='product_id' value='" . $id . "'><input type='number' name='quantity' value='" . $item['quantity'] . "' min='1'></td><td>$" . number_format($subtotal, 2) . "</td>";
            echo "<td><button class='cart-button' type='submit'>Update</button></form> | <a href='remove_from_cart.php?product_id=" . $id . "'>Remove</a></td></tr>";
        }
        
        echo "<tr><td colspan='4'><strong>Total:</strong></td><td>$" . number_format($total, 2) . "</td></tr>";
        echo "</table>";
        echo "<br><form method='post' action='checkout.php'><button class='cart-button'>Checkout</button></form>";
    } else {
        echo "Your cart is empty.";
    }
}

// Function to process checkout
function checkout() {
    // Get cart items from cookie
    $cart = isset($_COOKIE['cart']) ? unserialize($_COOKIE['cart']) : array();
    
    if (!empty($cart)) {
        // Display order confirmation
        view_cart();
        
        // Here you would typically connect to a payment gateway
        // For this example, we'll just simulate the checkout process
        echo "<h2>Order Confirmation</h2>";
        echo "Your order has been placed successfully!";
        echo "<p>Your order number is: #" . mt_rand(10000, 99999) . "</p>";
        
        // Clear the cart after checkout
        setcookie('cart', '', time() - (86400 * 30));
    } else {
        echo "Your cart is empty. Nothing to checkout.";
    }
}

// Main content
switch ($_SERVER['PHP_SELF']) {
    case '/index.php':
        display_products();
        break;
        
    case '/add_to_cart.php':
        if (isset($_POST['product_id'])) {
            add_to_cart($_POST['product_id']);
        } else {
            echo "Invalid request.";
        }
        break;
        
    case '/view_cart.php':
        view_cart();
        break;
        
    case '/checkout.php':
        checkout();
        break;
}
?>

</body>
</html>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'shopping_cart';
$username = 'root';
$password = '';

// Connect to database
try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}

// Products
$products = array(
    array(
        'id' => 1,
        'name' => 'Product 1',
        'description' => 'Description for Product 1',
        'price' => 29.99,
        'quantity' => 5
    ),
    array(
        'id' => 2,
        'name' => 'Product 2',
        'description' => 'Description for Product 2',
        'price' => 49.99,
        'quantity' => 3
    ),
    array(
        'id' => 3,
        'name' => 'Product 3',
        'description' => 'Description for Product 3',
        'price' => 19.99,
        'quantity' => 8
    )
);

// Add to cart functionality
if (isset($_POST['add_to_cart'])) {
    $product_id = $_POST['product_id'];
    $quantity = $_POST['quantity'];

    // Set cookie for cart items
    setcookie('cart_'.$product_id, $quantity, time() + 3600);
}

// View cart functionality
function viewCart() {
    global $products;
    
    $total_price = 0;
    $output = '<table>';
    $output .= '<tr><th>Product</th><th>Price</th><th>Quantity</th><th>Total</th></tr>';
    
    foreach ($products as $product) {
        if (isset($_COOKIE['cart_'.$product['id']])) {
            $quantity = $_COOKIE['cart_'.$product['id']];
            $subtotal = $product['price'] * $quantity;
            $total_price += $subtotal;
            
            $output .= '<tr>';
            $output .= '<td>'.$product['name'].'</td>';
            $output .= '<td>$'.$product['price'].'</td>';
            $output .= '<td>'.$quantity.'</td>';
            $output .= '<td>$'.number_format($subtotal, 2).'</td>';
            $output .= '</tr>';
        }
    }
    
    $output .= '<tr><td colspan="3">Total:</td><td>$'.number_format($total_price, 2).'</td></tr>';
    $output .= '</table>';
    
    return $output;
}

// Checkout functionality
if (isset($_POST['checkout'])) {
    // Process payment and order
    echo "Thank you for your purchase!";
    // Reset cart
    foreach ($products as $product) {
        setcookie('cart_'.$product['id'], '', time() - 3600);
    }
}
?>


<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <?php include 'products.php'; ?>
    
    <h2>Products</h2>
    <?php foreach ($products as $product): ?>
        <div>
            <h3><?php echo $product['name']; ?></h3>
            <p><?php echo $product['description']; ?></p>
            <p>$<?php echo number_format($product['price'], 2); ?></p>
            <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
                <input type="hidden" name="product_id" value="<?php echo $product['id']; ?>">
                <input type="number" name="quantity" min="1" max="<?php echo $product['quantity']; ?>" placeholder="Quantity">
                <input type="submit" name="add_to_cart" value="Add to Cart">
            </form>
        </div>
    <?php endforeach; ?>

    <h2>Your Cart</h2>
    <?php echo viewCart(); ?>

    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <input type="submit" name="checkout" value="Checkout">
    </form>
</body>
</html>


<?php
// config.php - Database configuration file
$host = 'localhost';
$username = 'root';
$password = '';
$db_name = 'purchase_system';

$conn = mysqli_connect($host, $username, $password, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// products.php - Product listing page
session_start();

include('config.php');

$sql = "SELECT * FROM products";
$result = mysqli_query($conn, $sql);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Product List</title>
</head>
<body>
    <?php while ($row = mysqli_fetch_assoc($result)) { ?>
        <div>
            <h2><?php echo $row['name']; ?></h2>
            <p>Price: <?php echo $row['price']; ?></p>
            <form action="add_to_cart.php" method="post">
                <input type="hidden" name="id" value="<?php echo $row['id']; ?>">
                <input type="hidden" name="name" value="<?php echo $row['name']; ?>">
                <input type="hidden" name="price" value="<?php echo $row['price']; ?>">
                <input type="number" name="quantity" min="1" value="1">
                <button type="submit">Add to Cart</button>
            </form>
        </div>
    <?php } ?>

    <a href="cart.php">View Cart</a>
</body>
</html>

// add_to_cart.php
session_start();

include('config.php');

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $id = mysqli_real_escape_string($conn, $_POST['id']);
    $name = mysqli_real_escape_string($conn, $_POST['name']);
    $price = mysqli_real_escape_string($conn, $_POST['price']);
    $quantity = mysqli_real_escape_string($conn, $_POST['quantity']);

    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }

    $item_id = md5($id . $name);
    if (array_key_exists($item_id, $_SESSION['cart'])) {
        $_SESSION['cart'][$item_id]['quantity'] += $quantity;
    } else {
        $_SESSION['cart'][$item_id] = array(
            'id' => $id,
            'name' => $name,
            'price' => $price,
            'quantity' => $quantity
        );
    }

    header("Location: products.php");
}

// cart.php - Cart display page
session_start();

include('config.php');

?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <?php if (!empty($_SESSION['cart'])) { ?>
        <h1>Your Cart</h1>
        <table border="1">
            <tr>
                <th>Name</th>
                <th>Price</th>
                <th>Quantity</th>
                <th>Total</th>
            </tr>
            <?php foreach ($_SESSION['cart'] as $item) { ?>
                <tr>
                    <td><?php echo $item['name']; ?></td>
                    <td><?php echo $item['price']; ?></td>
                    <td><?php echo $item['quantity']; ?></td>
                    <td><?php echo $item['price'] * $item['quantity']; ?></td>
                </tr>
            <?php } ?>
        </table>

        <h2>Total: <?php echo calculate_total(); ?></h2>
        <a href="checkout.php">Checkout</a> |
        <a href="products.php">Continue Shopping</a>
    <?php } else { ?>
        <p>Your cart is empty.</p>
        <a href="products.php">Shop Now</a>
    <?php } ?>

// checkout.php - Checkout page
session_start();

include('config.php');

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $name = mysqli_real_escape_string($conn, $_POST['name']);
    $email = mysqli_real_escape_string($conn, $_POST['email']);
    $phone = mysqli_real_escape_string($conn, $_POST['phone']);
    $address = mysqli_real_escape_string($conn, $_POST['address']);

    if (!empty($_SESSION['cart'])) {
        // Insert order into orders table
        $order_sql = "INSERT INTO orders (name, email, phone, address) VALUES ('$name', '$email', '$phone', '$address')";
        $order_result = mysqli_query($conn, $order_sql);

        $order_id = mysqli_insert_id($conn);

        foreach ($_SESSION['cart'] as $item) {
            // Insert order details into order_details table
            $details_sql = "INSERT INTO order_details (order_id, product_id, name, price, quantity) 
                            VALUES ('$order_id', '{$item['id']}', '{$item['name']}', '{$item['price']}', '{$item['quantity']}')";
            mysqli_query($conn, $details_sql);
        }

        // Clear the cart
        unset($_SESSION['cart']);
        echo "Order placed successfully!";
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
</head>
<body>
    <?php if (!empty($_SESSION['cart'])) { ?>
        <h1>Checkout Form</h1>
        <form action="checkout.php" method="post">
            <div>
                <label>Name:</label>
                <input type="text" name="name" required>
            </div>
            <div>
                <label>Email:</label>
                <input type="email" name="email" required>
            </div>
            <div>
                <label>Phone:</label>
                <input type="tel" name="phone" required>
            </div>
            <div>
                <label>Address:</label>
                <textarea name="address" rows="5" cols="30" required></textarea>
            </div>
            <button type="submit">Place Order</button>
        </form>
    <?php } else { ?>
        <p>Your cart is empty.</p>
        <a href="products.php">Shop Now</a>
    <?php } ?>

// Database tables
CREATE TABLE products (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255),
    price DECIMAL(10, 2)
);

CREATE TABLE orders (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255),
    email VARCHAR(255),
    phone VARCHAR(20),
    address TEXT,
    order_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE order_details (
    id INT AUTO_INCREMENT PRIMARY KEY,
    order_id INT,
    product_id INT,
    name VARCHAR(255),
    price DECIMAL(10, 2),
    quantity INT,
    FOREIGN KEY (order_id) REFERENCES orders(id)
);


<?php
session_start();
// Connect to database (replace with your own credentials)
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "myDB";

$conn = mysqli_connect($servername, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Fetch products from database
$sql = "SELECT * FROM products";
$result = mysqli_query($conn, $sql);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Product Store</title>
    <style>
        /* Add your CSS styles here */
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 20px;
        }
        .product {
            border: 1px solid #ddd;
            padding: 10px;
            margin-bottom: 20px;
        }
    </style>
</head>
<body>
    <h1>Product Store</h1>
    
    <?php
    if (mysqli_num_rows($result) > 0) {
        while ($row = mysqli_fetch_assoc($result)) {
            echo "
                <div class='product'>
                    <h2>{$row['name']}</h2>
                    <p>Price: \${$row['price']}</p>
                    <p>Description: {$row['description']}</p>
                    <form action='add_to_cart.php' method='POST'>
                        <input type='hidden' name='id' value='{$row['id']}'>
                        <input type='number' name='quantity' min='1' value='1'>
                        <button type='submit'>Add to Cart</button>
                    </form>
                </div>
            ";
        }
    } else {
        echo "No products found.";
    }
    ?>

    <a href="cart.php">View Cart</a>

    <?php
    mysqli_close($conn);
    ?>
</body>
</html>


<?php
session_start();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
    <style>
        /* Add your CSS styles here */
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 20px;
        }
        .cart-item {
            border: 1px solid #ddd;
            padding: 10px;
            margin-bottom: 20px;
        }
    </style>
</head>
<body>
    <h1>Shopping Cart</h1>
    
    <?php
    if (!empty($_SESSION['cart'])) {
        $total = 0;
        foreach ($_SESSION['cart'] as $item) {
            echo "
                <div class='cart-item'>
                    <p>{$item['name']}</p>
                    <p>Quantity: {$item['quantity']}</p>
                    <p>Price: \${$item['price']}</p>
                    <a href='update_cart.php?action=remove&id={$item['id']}'>Remove</a>
                    <form action='update_cart.php' method='POST'>
                        <input type='hidden' name='id' value='{$item['id']}'>
                        <input type='number' name='quantity' min='1' value='{$item['quantity']}'>
                        <button type='submit'>Update Quantity</button>
                    </form>
                </div>
            ";
            $total += $item['price'] * $item['quantity'];
        }
        echo "<h2>Total: \$$total</h2>";
    } else {
        echo "Your cart is empty.";
    }
    ?>

    <?php
    if (!empty($_SESSION['cart'])) {
        echo "<a href='checkout.php'>Proceed to Checkout</a>";
    }
    ?>
    
    <br>
    <a href="index.php">Continue Shopping</a>

</body>
</html>


<?php
session_start();
// Connect to database (replace with your own credentials)
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "myDB";

$conn = mysqli_connect($servername, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Get product details
$product_id = $_POST['id'];
$sql = "SELECT * FROM products WHERE id = {$product_id}";
$result = mysqli_query($conn, $sql);
$product = mysqli_fetch_assoc($result);

// Add to cart
if (!empty($_SESSION['cart'])) {
    $found = false;
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['id'] == $product_id) {
            $item['quantity'] += $_POST['quantity'];
            $found = true;
            break;
        }
    }
}

if (!$found) {
    array_push($_SESSION['cart'], array(
        'id' => $product['id'],
        'name' => $product['name'],
        'price' => $product['price'],
        'quantity' => $_POST['quantity']
    ));
}

mysqli_close($conn);
header("Location: index.php");
exit();
?>


<?php
session_start();

if ($_GET['action'] == 'remove') {
    $id = $_GET['id'];
    foreach ($_SESSION['cart'] as $key => $item) {
        if ($item['id'] == $id) {
            unset($_SESSION['cart'][$key]);
            break;
        }
    }
    header("Location: cart.php");
    exit();
}

if ($_POST['action'] == 'update') {
    $id = $_POST['id'];
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['id'] == $id) {
            $item['quantity'] = $_POST['quantity'];
            break;
        }
    }
    header("Location: cart.php");
    exit();
}
?>


<?php
session_start();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
    <style>
        /* Add your CSS styles here */
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 20px;
        }
        .checkout-form {
            max-width: 400px;
            margin: 0 auto;
        }
    </style>
</head>
<body>
    <h1>Checkout</h1>
    
    <?php
    if (empty($_SESSION['cart'])) {
        echo "Your cart is empty.";
        exit();
    }
    ?>

    <div class="checkout-form">
        <form action="process_order.php" method="POST">
            <label for="name">Name:</label>
            <input type="text" id="name" name="name" required><br><br>

            <label for="email">Email:</label>
            <input type="email" id="email" name="email" required><br><br>

            <label for="card_number">Card Number:</label>
            <input type="text" id="card_number" name="card_number" pattern="[0-9]{16}" required><br><br>

            <label for="cvv">CVV:</label>
            <input type="text" id="cvv" name="cvv" pattern="[0-9]{3}" required><br><br>

            <button type="submit">Place Order</button>
        </form>
    </div>

</body>
</html>


<?php
session_start();

// Get form data
$name = $_POST['name'];
$email = $_POST['email'];
$card_number = $_POST['card_number'];
$cvv = $_POST['cvv'];

// Process payment (simplified for example)
if ($card_number && $cvv) {
    // Here you would typically integrate with a payment gateway
    // For this example, we'll just assume the payment is successful

    // Clear cart
    unset($_SESSION['cart']);

    // Display confirmation message
    echo "<h1>Thank you for your purchase!</h1>";
} else {
    // Handle payment error
    header("Location: checkout.php");
    exit();
}
?>


<?php
session_start();
require_once 'config.php';

// Sample products (you would typically fetch these from a database)
$products = array(
    array(
        'id' => 1,
        'name' => 'Product 1',
        'price' => 29.99
    ),
    array(
        'id' => 2,
        'name' => 'Product 2',
        'price' => 49.99
    ),
    array(
        'id' => 3,
        'name' => 'Product 3',
        'price' => 19.99
    )
);

// Add to cart functionality
if (isset($_POST['add_to_cart'])) {
    $productId = $_POST['product_id'];
    $quantity = isset($_POST['quantity']) ? intval($_POST['quantity']) : 1;

    // Check if product exists
    foreach ($products as $product) {
        if ($product['id'] == $productId) {
            // Add to cart or update quantity
            if (isset($_SESSION['cart'][$productId])) {
                $_SESSION['cart'][$productId]['quantity'] += $quantity;
            } else {
                $_SESSION['cart'][$productId] = array(
                    'id' => $product['id'],
                    'name' => $product['name'],
                    'price' => $product['price'],
                    'quantity' => $quantity
                );
            }
            break;
        }
    }
}

// Update cart functionality
if (isset($_POST['update_cart'])) {
    foreach ($_SESSION['cart'] as $id => $item) {
        if (isset($_POST["quantity_{$id}"])) {
            $quantity = intval($_POST["quantity_{$id}"]);
            $_SESSION['cart'][$id]['quantity'] = $quantity;
        }
    }
}

// Remove from cart functionality
if (isset($_GET['remove'])) {
    $productId = intval($_GET['remove']);
    unset($_SESSION['cart'][$productId]);
}

// Calculate total price
function calculateTotal($cart) {
    $total = 0;
    foreach ($cart as $item) {
        $total += $item['price'] * $item['quantity'];
    }
    return $total;
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Online Store</title>
    <style>
        body { font-family: Arial, sans-serif; margin: 20px; padding: 0; }
        .product-list { display: grid; grid-template-columns: repeat(auto-fit, minmax(250px, 1fr)); gap: 20px; }
        .product-card { border: 1px solid #ddd; padding: 15px; text-align: center; }
        .cart-content { margin-top: 20px; }
        table { width: 100%; border-collapse: collapse; }
        th, td { border: 1px solid #ddd; padding: 8px; text-align: left; }
    </style>
</head>
<body>
    <header>
        <h1>Welcome to Our Store</h1>
        <?php if (isset($_SESSION['cart'])): ?>
            <div>Items in Cart: <?php echo count($_SESSION['cart']); ?></div>
        <?php endif; ?>
    </header>

    <!-- Product List -->
    <section class="product-list">
        <?php foreach ($products as $product): ?>
            <div class="product-card">
                <h3><?php echo $product['name']; ?></h3>
                <p>$<?php echo number_format($product['price'], 2); ?></p>
                <form method="post" action="">
                    <input type="hidden" name="product_id" value="<?php echo $product['id']; ?>">
                    <input type="number" name="quantity" min="1" value="1">
                    <button type="submit" name="add_to_cart">Add to Cart</button>
                </form>
            </div>
        <?php endforeach; ?>
    </section>

    <!-- Cart Content -->
    <?php if (isset($_SESSION['cart']) && !empty($_SESSION['cart'])): ?>
        <section class="cart-content">
            <h2>Your Cart</h2>
            <table>
                <thead>
                    <tr>
                        <th>Product Name</th>
                        <th>Price</th>
                        <th>Quantity</th>
                        <th>Total</th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tbody>
                    <?php foreach ($_SESSION['cart'] as $id => $item): ?>
                        <tr>
                            <td><?php echo $item['name']; ?></td>
                            <td>$<?php echo number_format($item['price'], 2); ?></td>
                            <td>
                                <form method="post" action="">
                                    <input type="number" name="quantity_<?php echo $id; ?>" min="1" value="<?php echo $item['quantity']; ?>">
                                    <button type="submit" name="update_cart">Update</button>
                                </form>
                            </td>
                            <td>$<?php echo number_format($item['price'] * $item['quantity'], 2); ?></td>
                            <td><a href="?remove=<?php echo $id; ?>">Remove</a></td>
                        </tr>
                    <?php endforeach; ?>
                </tbody>
            </table>
            <h3>Total: $<?php echo number_format(calculateTotal($_SESSION['cart']), 2); ?></h3>
            <form action="checkout.php" method="post">
                <button type="submit">Proceed to Checkout</button>
            </form>
        </section>
    <?php endif; ?>

    <!-- Navigation -->
    <nav>
        <a href="index.php">Home</a> |
        <a href="cart.php">Cart</a>
    </nav>
</body>
</html>


<?php
session_start();
require_once 'config.php';

if (!isset($_SESSION['cart']) || empty($_SESSION['cart'])) {
    header("Location: index.php");
    exit();
}

// Process order
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Validate input
    $name = htmlspecialchars(trim($_POST['name']));
    $email = htmlspecialchars(trim($_POST['email']));
    $phone = htmlspecialchars(trim($_POST['phone']));
    $address = htmlspecialchars(trim($_POST['address']));

    if (empty($name) || empty($email) || empty($phone) || empty($address)) {
        $error = "Please fill in all required fields.";
    } else {
        // Generate order ID
        $order_id = uniqid();

        // Insert order into database
        // Replace this with your actual database code
        $order_data = array(
            'order_id' => $order_id,
            'name' => $name,
            'email' => $email,
            'phone' => $phone,
            'address' => $address,
            'total' => calculateTotal($_SESSION['cart']),
            'status' => 'pending'
        );

        // Insert order items
        foreach ($_SESSION['cart'] as $item) {
            $order_item = array(
                'order_id' => $order_id,
                'product_id' => $item['id'],
                'name' => $item['name'],
                'price' => $item['price'],
                'quantity' => $item['quantity']
            );
        }

        // Clear cart
        unset($_SESSION['cart']);

        // Redirect to thank you page
        header("Location: thankyou.php?order_id=$order_id");
        exit();
    }
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Checkout</title>
</head>
<body>
    <h1> Checkout </h1>
    
    <?php if (isset($error)): ?>
        <p style="color: red;"><?php echo $error; ?></p>
    <?php endif; ?>

    <form method="post" action="">
        <div>
            <label>Name:</label><br>
            <input type="text" name="name" required>
        </div>

        <div>
            <label>Email:</label><br>
            <input type="email" name="email" required>
        </div>

        <div>
            <label>Phone:</label><br>
            <input type="tel" name="phone" required>
        </div>

        <div>
            <label>Address:</label><br>
            <textarea name="address" required></textarea>
        </div>

        <button type="submit">Place Order</button>
    </form>

    <a href="cart.php">Back to Cart</a>
</body>
</html>


<?php
// config.php
$host = 'localhost';
$user = 'root';
$password = '';
$dbname = 'shopping_cart';

$conn = mysqli_connect($host, $user, $password, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}
?>


<?php
// index.php
session_start();
include 'config.php';

$result = mysqli_query($conn, "SELECT * FROM products");
?>

<!DOCTYPE html>
<html>
<head>
    <title>Products</title>
</head>
<body>
    <?php while ($row = mysqli_fetch_assoc($result)) { ?>
        <div style="border: 1px solid #ddd; padding: 10px; margin: 5px;">
            <h2><?php echo $row['name']; ?></h2>
            <p>Price: $<?php echo number_format($row['price'], 2); ?></p>
            <?php if ($row['image']) { ?>
                <img src="<?php echo $row['image']; ?>" alt="<?php echo $row['name']; ?>" style="max-width: 100px;">
            <?php } ?>
            <form action="add_to_cart.php" method="post">
                <input type="hidden" name="product_id" value="<?php echo $row['product_id']; ?>">
                <input type="number" name="quantity" min="1" max="99" value="1">
                <button type="submit">Add to Cart</button>
            </form>
        </div>
    <?php } ?>

    <a href="show_cart.php">View Cart</a>
</body>
</html>


<?php
// add_to_cart.php
session_start();
include 'config.php';

if (isset($_POST['product_id']) && isset($_POST['quantity'])) {
    $product_id = $_POST['product_id'];
    $quantity = $_POST['quantity'];

    // Check if the product exists in database
    $check_product = mysqli_query($conn, "SELECT * FROM products WHERE product_id=$product_id");
    if (mysqli_num_rows($check_product) == 0) {
        die("Product does not exist.");
    }

    // Get session id or create a new one
    $session_id = session_id();

    // Check if item already exists in cart
    $existing_cart_item = mysqli_query($conn, "SELECT * FROM cart WHERE product_id=$product_id AND session_id='$session_id'");
    if (mysqli_num_rows($existing_cart_item) > 0) {
        // Update quantity
        $update = mysqli_query($conn, "UPDATE cart SET quantity=quantity+$quantity WHERE product_id=$product_id AND session_id='$session_id'");
    } else {
        // Add new item to cart
        $insert = mysqli_query($conn, "INSERT INTO cart (product_id, quantity, session_id) VALUES ($product_id, $quantity, '$session_id')");
    }

    if (isset($update) || isset($insert)) {
        header("Location: index.php");
        exit();
    } else {
        die("Error adding to cart.");
    }
}
?>


<?php
// update_cart.php
session_start();
include 'config.php';

if (isset($_POST['update'])) {
    foreach ($_POST as $key => $value) {
        if ($key != 'update') {
            list($product_id, $cart_id) = explode('-', $key);
            $quantity = $value;

            // Update the quantity
            $update = mysqli_query($conn, "UPDATE cart SET quantity=$quantity WHERE cart_id=$cart_id");
        }
    }

    header("Location: show_cart.php");
    exit();
}
?>


<?php
// remove_from_cart.php
session_start();
include 'config.php';

if (isset($_GET['cart_id'])) {
    $cart_id = $_GET['cart_id'];
    
    // Delete the item
    $delete = mysqli_query($conn, "DELETE FROM cart WHERE cart_id=$cart_id");
    
    if ($delete) {
        header("Location: show_cart.php");
        exit();
    } else {
        die("Error deleting item.");
    }
}
?>


<?php
// show_cart.php
session_start();
include 'config.php';

$session_id = session_id();

// Get all items in the cart for this session
$result = mysqli_query($conn, "SELECT c.*, p.* FROM cart c JOIN products p ON c.product_id = p.product_id WHERE c.session_id='$session_id'");
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <h1>Your Shopping Cart</h1>
    
    <?php if (mysqli_num_rows($result) > 0) { ?>
        <form action="update_cart.php" method="post">
            <?php while ($row = mysqli_fetch_assoc($result)) { ?>
                <div style="border: 1px solid #ddd; padding: 10px; margin: 5px;">
                    <h3><?php echo $row['name']; ?></h3>
                    <p>Price: $<?php echo number_format($row['price'], 2); ?></p>
                    <?php if ($row['image']) { ?>
                        <img src="<?php echo $row['image']; ?>" alt="<?php echo $row['name']; ?>" style="max-width: 100px;">
                    <?php } ?>
                    <input type="number" name="<?php echo $row['product_id'] . '-' . $row['cart_id']; ?>" min="1" value="<?php echo $row['quantity']; ?>">
                    <a href="remove_from_cart.php?cart_id=<?php echo $row['cart_id']; ?>">Remove</a>
                </div>
            <?php } ?>
            <button type="submit">Update Cart</button>
        </form>
    <?php } else { ?>
        <p>Your cart is empty.</p>
    <?php } ?>

    <br>
    <a href="index.php">Continue Shopping</a>
</body>
</html>


<?php
// products.php
session_start();
$products = [
    ['id' => 1, 'name' => 'Product 1', 'price' => 25.00, 'description' => 'Description for product 1'],
    ['id' => 2, 'name' => 'Product 2', 'price' => 45.00, 'description' => 'Description for product 2'],
    // Add more products as needed
];
?>

<!DOCTYPE html>
<html>
<head>
    <title>Product List</title>
</head>
<body>
    <h1>Products</h1>
    <?php foreach ($products as $product): ?>
        <div style="border: 1px solid #ddd; padding: 10px; margin: 5px;">
            <h3><?php echo $product['name']; ?></h3>
            <p><?php echo $product['description']; ?></p>
            <p>Price: <?php echo "$" . number_format($product['price'], 2); ?></p>
            <form action="add_to_cart.php" method="post">
                <input type="hidden" name="id" value="<?php echo $product['id']; ?>">
                <input type="number" name="quantity" min="1" max="99" value="1">
                <button type="submit">Add to Cart</button>
            </form>
        </div>
    <?php endforeach; ?>
    <a href="cart.php">View Cart</a>
</body>
</html>


<?php
// cart.php
session_start();
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = [];
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <h1>Your Shopping Cart</h1>
    <?php if (empty($_SESSION['cart'])): ?>
        <p>Your cart is empty.</p>
    <?php else: ?>
        <table border="1">
            <tr>
                <th>Product Name</th>
                <th>Quantity</th>
                <th>Price</th>
                <th>Total</th>
                <th>Action</th>
            </tr>
            <?php foreach ($_SESSION['cart'] as $item): 
                // Assuming you have a way to get product details from the database or array
                $product = array_search_product($item['id']); // Implement this function
            ?>
                <tr>
                    <td><?php echo $product['name']; ?></td>
                    <td><input type="number" name="quantity" value="<?php echo $item['quantity']; ?>"></td>
                    <td><?php echo "$" . number_format($product['price'], 2); ?></td>
                    <td><?php echo "$" . number_format($item['quantity'] * $product['price'], 2); ?></td>
                    <td><a href="remove_from_cart.php?id=<?php echo $item['id']; ?>">Remove</a></td>
                </tr>
            <?php endforeach; ?>
        </table>
        <p>Total: <?php echo calculate_total(); ?></p>
        <form action="checkout.php" method="post">
            <button type="submit">Checkout</button>
        </form>
    <?php endif; ?>
    <a href="products.php">Continue Shopping</a>
</body>
</html>

<?php
// Function to search for a product by ID (implement according to your data source)
function array_search_product($id) {
    $products = [
        ['id' => 1, 'name' => 'Product 1', 'price' => 25.00],
        ['id' => 2, 'name' => 'Product 2', 'price' => 45.00]
        // Add more products as needed
    ];
    
    foreach ($products as $product) {
        if ($product['id'] == $id) {
            return $product;
        }
    }
    return null;
}

// Function to calculate total price of cart items
function calculate_total() {
    global $total_price;
    $total_price = 0.00;
    
    foreach ($_SESSION['cart'] as $item) {
        $product = array_search_product($item['id']);
        $total_price += ($item['quantity'] * $product['price']);
    }
    
    return "$" . number_format($total_price, 2);
}
?>


<?php
// add_to_cart.php
session_start();

if (isset($_POST['id']) && isset($_POST['quantity'])) {
    $product_id = $_POST['id'];
    $quantity = $_POST['quantity'];
    
    if (!isset($_SESSION['cart'][$product_id])) {
        $_SESSION['cart'][$product_id] = [
            'id' => $product_id,
            'quantity' => $quantity
        ];
    } else {
        $_SESSION['cart'][$product_id]['quantity'] += $quantity;
    }
}

header("Location: cart.php");
exit();
?>


<?php
// remove_from_cart.php
session_start();

if (isset($_GET['id'])) {
    $product_id = $_GET['id'];
    
    if (isset($_SESSION['cart'][$product_id])) {
        unset($_SESSION['cart'][$product_id]);
    }
}

header("Location: cart.php");
exit();
?>


<?php
// checkout.php
session_start();

if (isset($_SESSION['cart']) && !empty($_SESSION['cart'])) {
    // Process order here
    // For example, connect to your database and store order details
    
    // After processing, redirect to confirmation page
    header("Location: confirmation.php");
    exit();
} else {
    header("Location: cart.php");
    exit();
}
?>


<?php
// confirmation.php
session_start();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Order Confirmation</title>
</head>
<body>
    <h1>Thank you for your purchase!</h1>
    <?php if (!empty($_SESSION['cart'])): ?>
        <p>Your order has been processed successfully.</p>
        <!-- Add any confirmation details here -->
        <a href="products.php">Continue shopping</a>
    <?php else: ?>
        <p>There was an error processing your order. Please try again.</p>
        <a href="cart.php">Return to cart</a>
    <?php endif; ?>
</body>
</html>


<?php
// config.php - Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$database = 'shopping_cart';

$conn = mysqli_connect($host, $username, $password, $database);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}
?>

<?php
// functions.php - Helper functions
include('config.php');

function get_products() {
    global $conn;
    $query = "SELECT * FROM products";
    $result = mysqli_query($conn, $query);
    return $result;
}

function add_to_cart($product_id) {
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }
    if (empty($_SESSION['cart'][$product_id])) {
        $_SESSION['cart'][$product_id] = 1;
    } else {
        $_SESSION['cart'][$product_id]++;
    }
}

function remove_from_cart($product_id) {
    unset($_SESSION['cart'][$product_id]);
}

function update_quantity($product_id, $quantity) {
    if ($quantity > 0) {
        $_SESSION['cart'][$product_id] = $quantity;
    } else {
        unset($_SESSION['cart'][$product_id]);
    }
}

function get_cart_total() {
    global $conn;
    $total = 0;
    
    foreach ($_SESSION['cart'] as $product_id => $quantity) {
        $query = "SELECT price FROM products WHERE id = '$product_id'";
        $result = mysqli_query($conn, $query);
        $row = mysqli_fetch_assoc($result);
        
        $total += $row['price'] * $quantity;
    }
    
    return $total;
}
?>

<?php
// index.php - Display products
session_start();
include('functions.php');

$products = get_products();

?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <h1>Products</h1>
    <?php while ($row = mysqli_fetch_assoc($products)) { ?>
        <div>
            <h2><?php echo $row['name']; ?></h2>
            <p><?php echo $row['description']; ?></p>
            <p>Price: <?php echo $row['price']; ?></p>
            <form action="add_to_cart.php" method="post">
                <input type="hidden" name="product_id" value="<?php echo $row['id']; ?>">
                <button type="submit">Add to Cart</button>
            </form>
        </div>
    <?php } ?>
    
    <a href="cart.php">View Cart</a>
</body>
</html>

<?php
// add_to_cart.php - Add product to cart
session_start();
include('functions.php');

if (isset($_POST['product_id'])) {
    $product_id = mysqli_real_escape_string($conn, $_POST['product_id']);
    add_to_cart($product_id);
}

header("Location: index.php");
?>

<?php
// cart.php - Display shopping cart
session_start();
include('functions.php');

?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <?php if (!empty($_SESSION['cart'])) { ?>
        <h1>Your Cart</h1>
        <table>
            <tr>
                <th>Product ID</th>
                <th>Quantity</th>
                <th>Price</th>
                <th>Action</th>
            </tr>
            <?php foreach ($_SESSION['cart'] as $product_id => $quantity) { 
                $query = "SELECT * FROM products WHERE id = '$product_id'";
                $result = mysqli_query($conn, $query);
                $row = mysqli_fetch_assoc($result); 
            ?>
            <tr>
                <td><?php echo $row['name']; ?></td>
                <td>
                    <form action="update_cart.php" method="post">
                        <input type="hidden" name="product_id" value="<?php echo $product_id; ?>">
                        <input type="number" name="quantity" min="1" value="<?php echo $quantity; ?>">
                        <button type="submit">Update</button>
                    </form>
                </td>
                <td><?php echo $row['price']; ?></td>
                <td><a href="remove_from_cart.php?product_id=<?php echo $product_id; ?>">Remove</a></td>
            </tr>
            <?php } ?>
        </table>
        
        <h2>Total: <?php echo get_cart_total(); ?></h2>
        <form action="checkout.php" method="post">
            <button type="submit">Checkout</button>
        </form>
    <?php } else { ?>
        <p>Your cart is empty.</p>
    <?php } ?>
    
    <a href="index.php">Continue Shopping</a>
</body>
</html>

<?php
// update_cart.php - Update quantity in cart
session_start();
include('functions.php');

if (isset($_POST['product_id']) && isset($_POST['quantity'])) {
    $product_id = mysqli_real_escape_string($conn, $_POST['product_id']);
    $quantity = mysqli_real_escape_string($conn, $_POST['quantity']);
    
    update_quantity($product_id, $quantity);
}

header("Location: cart.php");
?>

<?php
// remove_from_cart.php - Remove item from cart
session_start();
include('functions.php');

if (isset($_GET['product_id'])) {
    $product_id = mysqli_real_escape_string($conn, $_GET['product_id']);
    remove_from_cart($product_id);
}

header("Location: cart.php");
?>

<?php
// checkout.php - Checkout process
session_start();
include('functions.php');

if (!empty($_SESSION['cart'])) {
    // In a real application, you would connect to a payment gateway here
    // For this example, we'll just empty the cart
    $_SESSION['cart'] = array();
    
    echo "Thank you for your purchase!";
} else {
    echo "Your cart is empty.";
}

header("Location: index.php");
?>


<?php
session_start();

// Database connection details
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'shopping_cart';

// Create connection
$conn = mysqli_connect($host, $username, $password, $dbname);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Check if user is logged in
if (!isset($_SESSION['user_id'])) {
    header('Location: login.php');
    exit();
}

// Get product details and handle purchase
if (isset($_POST['purchase'])) {
    $product_id = $_POST['product_id'];
    $quantity = $_POST['quantity'];

    // Validate input
    if (!is_numeric($product_id) || !is_numeric($quantity) || empty($product_id) || empty($quantity)) {
        die("Invalid input");
    }

    // Get product details from database
    $sql = "SELECT * FROM products WHERE id = $product_id";
    $result = mysqli_query($conn, $sql);

    if (mysqli_num_rows($result) == 0) {
        die("Product not found");
    }

    $product = mysqli_fetch_assoc($result);
    $price = $product['price'];
    $total_price = $price * $quantity;

    // Get user's current balance
    $user_id = $_SESSION['user_id'];
    $sql = "SELECT balance FROM users WHERE id = $user_id";
    $result = mysqli_query($conn, $sql);
    $user = mysqli_fetch_assoc($result);

    if ($user['balance'] < $total_price) {
        die("Insufficient funds");
    }

    // Update user's balance
    $new_balance = $user['balance'] - $total_price;
    $sql = "UPDATE users SET balance = $new_balance WHERE id = $user_id";
    mysqli_query($conn, $sql);

    // Record purchase in purchases table
    $sql = "INSERT INTO purchases (user_id, product_id, quantity, total_price, purchase_date) 
            VALUES ($user_id, $product_id, $quantity, $total_price, NOW())";
    mysqli_query($conn, $sql);

    // Redirect to confirmation page
    header('Location: confirmation.php');
    exit();
}

// Display product details for purchase confirmation
if (isset($_GET['id'])) {
    $product_id = $_GET['id'];
    $sql = "SELECT * FROM products WHERE id = $product_id";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) == 0) {
        die("Product not found");
    }

    $product = mysqli_fetch_assoc($result);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Purchase Confirmation</title>
</head>
<body>
    <h1>Confirm Purchase</h1>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <input type="hidden" name="product_id" value="<?php echo $product['id']; ?>">
        <p>Product: <?php echo $product['name']; ?></p>
        <p>Price: <?php echo $product['price']; ?> $</p>
        <label>Quantity:</label>
        <input type="number" name="quantity" min="1" value="1">
        <br><br>
        <button type="submit" name="purchase">Purchase</button>
    </form>
</body>
</html>

<?php
}
mysqli_close($conn);
?>


<?php
session_start();
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Purchase Form</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            max-width: 600px;
            margin: 0 auto;
            padding: 20px;
        }
        .form-group {
            margin-bottom: 15px;
        }
        input[type="text"], input[type="email"], input[type="number"] {
            width: 100%;
            padding: 8px;
            border: 1px solid #ddd;
            border-radius: 4px;
        }
        button {
            background-color: #4CAF50;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
        button:hover {
            background-color: #45a049;
        }
    </style>
</head>
<body>
    <h1>Purchase Form</h1>
    
    <?php
    if (isset($_SESSION['message'])) {
        echo '<p style="color: green;">' . $_SESSION['message'] . '</p>';
        unset($_SESSION['message']);
    }
    ?>
    
    <form method="POST" action="process_purchase.php">
        <div class="form-group">
            <label for="name">Name:</label><br>
            <input type="text" id="name" name="name" required>
        </div>

        <div class="form-group">
            <label for="email">Email:</label><br>
            <input type="email" id="email" name="email" required>
        </div>

        <div class="form-group">
            <label for="product_id">Product ID:</label><br>
            <input type="number" id="product_id" name="product_id" min="1" required>
        </div>

        <div class="form-group">
            <label for="quantity">Quantity:</label><br>
            <input type="number" id="quantity" name="quantity" min="1" value="1" required>
        </div>

        <div class="form-group">
            <label for="price">Price per Unit ($):</label><br>
            <input type="number" id="price" name="price" step="0.01" min="0.01" required>
        </div>

        <button type="submit">Purchase Now</button>
    </form>
</body>
</html>


<?php
session_start();

// Database connection settings
$host = 'localhost';
$dbUsername = 'root'; // Change to your database username
$dbPassword = '';     // Change to your database password
$dbName = 'your_database_name'; // Change to your database name

try {
    $pdo = new PDO("mysql:host=$host;dbname=$dbName", $dbUsername, $dbPassword);
    $pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

// Get form data
$name = isset($_POST['name']) ? $_POST['name'] : '';
$email = isset($_POST['email']) ? $_POST['email'] : '';
$product_id = isset($_POST['product_id']) ? intval($_POST['product_id']) : 0;
$quantity = isset($_POST['quantity']) ? intval($_POST['quantity']) : 1;
$price = isset($_POST['price']) ? floatval($_POST['price']) : 0.0;

// Sanitize input data
function sanitize($data) {
    return htmlspecialchars(strip_tags(trim($data)));
}

$name = sanitize($name);
$email = sanitize($email);

if (empty($name) || empty($email) || $product_id == 0 || $quantity <= 0 || $price <= 0.0) {
    die("All fields are required and must be valid values.");
}

$total_price = $quantity * $price;

// Prepare SQL statement
$sql = "INSERT INTO orders (name, email, product_id, quantity, price, total_price)
        VALUES (:name, :email, :product_id, :quantity, :price, :total_price)";

try {
    $stmt = $pdo->prepare($sql);
    $stmt->bindParam(':name', $name);
    $stmt->bindParam(':email', $email);
    $stmt->bindParam(':product_id', $product_id);
    $stmt->bindParam(':quantity', $quantity);
    $stmt->bindParam(':price', $price);
    $stmt->bindParam(':total_price', $total_price);

    $stmt->execute();

    // Redirect to confirmation page
    header("Location: confirmation.php?order_id=" . $pdo->lastInsertId());
    exit();
} catch (PDOException $e) {
    die("Error processing your order: " . $e->getMessage());
}
?>


<?php
session_start();

if (!isset($_GET['order_id'])) {
    header("Location: index.php");
    exit();
}

$order_id = intval($_GET['order_id']);

// Database connection settings
$host = 'localhost';
$dbUsername = 'root'; // Change to your database username
$dbPassword = '';     // Change to your database password
$dbName = 'your_database_name'; // Change to your database name

try {
    $pdo = new PDO("mysql:host=$host;dbname=$dbName", $dbUsername, $dbPassword);
    $pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

// Get order details
$sql = "SELECT * FROM orders WHERE id = :order_id";
$stmt = $pdo->prepare($sql);
$stmt->bindParam(':order_id', $order_id);
$stmt->execute();
$order = $stmt->fetch(PDO::FETCH_ASSOC);

if (!$order) {
    die("Invalid order ID.");
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Order Confirmation</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            max-width: 600px;
            margin: 0 auto;
            padding: 20px;
            background-color: #f5f5f5;
        }
        .confirmation {
            background-color: white;
            padding: 20px;
            border-radius: 4px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }
        h1 {
            color: #333;
        }
        p {
            margin: 10px 0;
        }
        .order-details {
            margin-top: 20px;
            padding: 15px;
            border: 1px solid #ddd;
            background-color: #f9f9f9;
        }
    </style>
</head>
<body>
    <div class="confirmation">
        <h1>Order Confirmation</h1>
        
        <p>Your order has been successfully processed!</p>
        
        <div class="order-details">
            <p><strong>Order ID:</strong> <?php echo $order['id']; ?></p>
            <p><strong>Name:</strong> <?php echo $order['name']; ?></p>
            <p><strong>Email:</strong> <?php echo $order['email']; ?></p>
            <p><strong>Product ID:</strong> <?php echo $order['product_id']; ?></p>
            <p><strong>Quantity:</strong> <?php echo $order['quantity']; ?></p>
            <p><strong>Total Price:</strong> $<?php echo number_format($order['total_price'], 2); ?></p>
            <p><strong>Purchase Date:</strong> <?php echo date('Y-m-d H:i:s', strtotime($order['purchase_date'])); ?></p>
        </div>

        <p>A confirmation email has been sent to your provided email address.</p>
    </div>
</body>
</html>


<?php
// Database connection
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'shopping_cart';

$conn = mysqli_connect($host, $username, $password, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to display products
function displayProducts() {
    global $conn;
    $sql = "SELECT * FROM products";
    $result = mysqli_query($conn, $sql);

    while ($row = mysqli_fetch_assoc($result)) {
        echo "<div class='product'>";
        echo "<h3>" . $row['name'] . "</h3>";
        echo "<p>Price: $" . $row['price'] . "</p>";
        echo "<form action='add_to_cart.php' method='post'>";
        echo "<input type='hidden' name='id' value='" . $row['id'] . "'>";
        echo "<input type='number' name='quantity' min='1' value='1'>";
        echo "<button type='submit'>Add to Cart</button>";
        echo "</form>";
        echo "</div>";
    }
}

// Function to add product to cart
function addToCart($productId, $quantity) {
    global $conn;
    
    // Check if product exists
    $sql = "SELECT * FROM products WHERE id = ?";
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, "i", $productId);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);
    
    if ($product = mysqli_fetch_assoc($result)) {
        // Add to session cart
        $_SESSION['cart'][$productId] = [
            'name' => $product['name'],
            'price' => $product['price'],
            'quantity' => $quantity
        ];
        return true;
    }
    return false;
}

// Function to display cart
function displayCart() {
    if (isset($_SESSION['cart'])) {
        foreach ($_SESSION['cart'] as $productId => $item) {
            echo "<div class='cart-item'>";
            echo "<h3>" . $item['name'] . "</h3>";
            echo "<p>Price: $" . $item['price'] . "</p>";
            echo "<p>Quantity: " . $item['quantity'] . "</p>";
            echo "</div>";
        }
    } else {
        echo "Your cart is empty.";
    }
}

// Function to process checkout
function processCheckout($cart) {
    global $conn;
    
    // Insert order into database
    $sql = "INSERT INTO orders (total_amount, status) VALUES (?, 'pending')";
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, "d", calculateTotal($cart));
    mysqli_stmt_execute($stmt);
    $orderId = mysqli_insert_id($conn);
    
    // Insert order details
    foreach ($cart as $productId => $item) {
        $sql = "INSERT INTO order_details (order_id, product_id, quantity, price) VALUES (?, ?, ?, ?)";
        $stmt = mysqli_prepare($conn, $sql);
        mysqli_stmt_bind_param($stmt, "iiid", $orderId, $productId, $item['quantity'], $item['price']);
        mysqli_stmt_execute($stmt);
    }
    
    // Clear cart
    unset($_SESSION['cart']);
    
    return $orderId;
}

// Function to calculate total amount
function calculateTotal($cart) {
    $total = 0;
    foreach ($cart as $item) {
        $total += $item['price'] * $item['quantity'];
    }
    return $total;
}

// Function to process payment
function processPayment($amount) {
    // This is a simplified payment processing function
    // In real application, you would integrate with a payment gateway
    
    $success = true; // Simulate payment success
    
    if ($success) {
        return true;
    } else {
        return false;
    }
}

// Function to send order confirmation email
function sendOrderConfirmation($email, $orderId, $totalAmount) {
    $subject = "Order Confirmation";
    $body = "Thank you for your purchase! Your order ID is: $orderId and the total amount is: $" . number_format($totalAmount, 2);
    
    // In real application, use mail() function or a third-party library
    echo "Email sent to: $email with order details.";
}

// Example usage:
if (isset($_POST['checkout'])) {
    if (!empty($_SESSION['cart'])) {
        $cart = $_SESSION['cart'];
        $orderId = processCheckout($cart);
        $totalAmount = calculateTotal($cart);
        
        // Process payment
        if (processPayment($totalAmount)) {
            sendOrderConfirmation('customer@example.com', $orderId, $totalAmount);
            echo "Purchase completed successfully!";
        } else {
            echo "Payment failed. Please try again.";
        }
    } else {
        echo "Your cart is empty.";
    }
}
?>


<?php session_start(); ?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Online Store</title>
    <style>
        .product-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 20px;
            padding: 20px;
        }
        .product-card {
            border: 1px solid #ddd;
            padding: 10px;
            text-align: center;
        }
        .cart-list {
            margin-top: 20px;
            padding: 20px;
        }
        .checkout-form {
            margin-top: 20px;
            padding: 20px;
            border: 1px solid #ddd;
        }
    </style>
</head>
<body>
    <?php
    // Sample products (you would typically get this from a database)
    $products = array(
        array('id' => 1, 'name' => 'Product 1', 'price' => 29.99, 'image' => 'product1.jpg'),
        array('id' => 2, 'name' => 'Product 2', 'price' => 39.99, 'image' => 'product2.jpg'),
        array('id' => 3, 'name' => 'Product 3', 'price' => 49.99, 'image' => 'product3.jpg'),
    );

    // Initialize cart if not set
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }
    ?>

    <!-- Products Section -->
    <h1>Our Products</h1>
    <div class="product-grid">
        <?php foreach ($products as $product): ?>
            <div class="product-card">
                <img src="<?php echo $product['image']; ?>" alt="<?php echo $product['name']; ?>" width="200">
                <h3><?php echo $product['name']; ?></h3>
                <p>$<?php echo number_format($product['price'], 2); ?></p>
                <form action="add_to_cart.php" method="post">
                    <input type="hidden" name="product_id" value="<?php echo $product['id']; ?>">
                    <input type="number" name="quantity" min="1" value="1">
                    <button type="submit">Add to Cart</button>
                </form>
            </div>
        <?php endforeach; ?>
    </div>

    <!-- Shopping Cart Section -->
    <h2>Your Shopping Cart</h2>
    <div class="cart-list">
        <?php if (empty($_SESSION['cart'])): ?>
            <p>Your cart is empty.</p>
        <?php else: ?>
            <table>
                <tr>
                    <th>Product</th>
                    <th>Quantity</th>
                    <th>Price</th>
                    <th>Total</th>
                    <th>Action</th>
                </tr>
                <?php foreach ($_SESSION['cart'] as $item): 
                    $product = array_search($item['id'], array_column($products, 'id'));
                    if ($product !== false) {
                        $productDetails = $products[$product];
                ?>
                <tr>
                    <td><?php echo $productDetails['name']; ?></td>
                    <td><?php echo $item['quantity']; ?></td>
                    <td>$<?php echo number_format($productDetails['price'], 2); ?></td>
                    <td>$<?php echo number_format($productDetails['price'] * $item['quantity'], 2); ?></td>
                    <td><a href="remove_from_cart.php?id=<?php echo $item['id']; ?>">Remove</a></td>
                </tr>
                <?php } endforeach; ?>
            </table>
            <p>Total: $<?php echo number_format(array_sum(array_column($_SESSION['cart'], 'price') * array_column($_SESSION['cart'], 'quantity')), 2); ?></p>
            <a href="checkout.php">Checkout</a>
        <?php endif; ?>
    </div>

    <!-- Checkout Section -->
    <?php if (!empty($_SESSION['cart'])): ?>
        <h2>Checkout</h2>
        <div class="checkout-form">
            <form action="process_payment.php" method="post">
                <label for="name">Name:</label>
                <input type="text" id="name" name="name" required>

                <label for="email">Email:</label>
                <input type="email" id="email" name="email" required>

                <label for="address">Address:</label>
                <textarea id="address" name="address" required></textarea>

                <label for="payment_method">Payment Method:</label>
                <select id="payment_method" name="payment_method">
                    <option value="credit_card">Credit Card</option>
                    <option value="paypal">PayPal</option>
                </select>

                <button type="submit">Place Order</button>
            </form>
        </div>
    <?php endif; ?>
</body>
</html>


<?php session_start();
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $productId = $_POST['product_id'];
    $quantity = $_POST['quantity'];

    // Find the product in our array
    foreach ($products as &$product) {
        if ($product['id'] == $productId) {
            // Add to cart or update quantity
            if (isset($_SESSION['cart'][$productId])) {
                $_SESSION['cart'][$productId]['quantity'] += $quantity;
            } else {
                $_SESSION['cart'][$productId] = array(
                    'id' => $product['id'],
                    'name' => $product['name'],
                    'price' => $product['price'],
                    'quantity' => $quantity
                );
            }
        }
    }
}
header("Location: index.php");
exit();
?>


<?php session_start();
if (isset($_GET['id'])) {
    unset($_SESSION['cart'][$_GET['id']]);
}
header("Location: index.php");
exit();
?>


<?php session_start();
// Process checkout here
// This is where you would typically connect to a payment gateway
// For this example, we'll just display a thank you message

echo "<h1>Thank you for your order!</h1>";
echo "<p>Your order has been received and will be processed shortly.</p>";
session_unset();
?>


<?php
// Start session
session_start();

// Sample product catalog
$products = array(
    1 => array(
        'name' => 'Product A',
        'price' => 29.99,
        'description' => 'High-quality product'
    ),
    2 => array(
        'name' => 'Product B',
        'price' => 49.99,
        'description' => 'Premium product'
    ),
    3 => array(
        'name' => 'Product C',
        'price' => 19.99,
        'description' => 'Budget-friendly product'
    )
);

// Function to calculate order total
function calculateOrderTotal($order) {
    $subtotal = 0;
    foreach ($order as $item) {
        $subtotal += $item['quantity'] * $item['price'];
    }
    
    // Calculate tax (8%)
    $taxRate = 0.08;
    $taxAmount = $subtotal * $taxRate;
    
    // Add fixed shipping cost
    $shippingCost = 10;
    
    $total = $subtotal + $taxAmount + $shippingCost;
    
    return array(
        'subtotal' => $subtotal,
        'tax' => $taxAmount,
        'shipping' => $shippingCost,
        'total' => $total
    );
}

// Process purchase if form is submitted
if (isset($_POST['submit'])) {
    // Get products from POST data
    $order = array();
    foreach ($products as $product_id => $product) {
        if (isset($_POST[$product_id]) && $_POST[$product_id] > 0) {
            $quantity = intval($_POST[$product_id]);
            $order[] = array(
                'id' => $product_id,
                'name' => $product['name'],
                'price' => $product['price'],
                'quantity' => $quantity
            );
        }
    }
    
    if (!empty($order)) {
        // Calculate totals
        $totals = calculateOrderTotal($order);
        
        // Store order details in session
        $_SESSION['order'] = array(
            'products' => $order,
            'subtotal' => $totals['subtotal'],
            'tax' => $totals['tax'],
            'shipping' => $totals['shipping'],
            'total' => $totals['total']
        );
        
        // Redirect to order confirmation page
        header('Location: order_confirmation.php');
        exit();
    }
}

// Display products and order form
?>
<!DOCTYPE html>
<html>
<head>
    <title>Purchase System</title>
</head>
<body>
    <h1>Product Catalog</h1>
    
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <table border="1">
            <tr>
                <th>Product Name</th>
                <th>Description</th>
                <th>Price</th>
                <th>Quantity</th>
            </tr>
            
            <?php foreach ($products as $product_id => $product): ?>
            <tr>
                <td><?php echo $product['name']; ?></td>
                <td><?php echo $product['description']; ?></td>
                <td>$<?php echo number_format($product['price'], 2); ?></td>
                <td><input type="number" name="<?php echo $product_id; ?>" min="0"></td>
            </tr>
            <?php endforeach; ?>
            
            <tr>
                <td colspan="4">
                    <button type="submit" name="submit">Purchase</button>
                </td>
            </tr>
        </table>
    </form>
    
    <?php if (isset($_SESSION['order'])): 
        // Display order summary
        $order = $_SESSION['order'];
    ?>
    
    <h2>Order Summary</h2>
    <table border="1">
        <tr>
            <th>Product Name</th>
            <th>Price</th>
            <th>Quantity</th>
            <th>Total</th>
        </tr>
        
        <?php foreach ($order['products'] as $product): ?>
        <tr>
            <td><?php echo $product['name']; ?></td>
            <td>$<?php echo number_format($product['price'], 2); ?></td>
            <td><?php echo $product['quantity']; ?></td>
            <td>$<?php echo number_format($product['price'] * $product['quantity'], 2); ?></td>
        </tr>
        <?php endforeach; ?>
        
        <tr>
            <td colspan="3">Subtotal:</td>
            <td>$<?php echo number_format($order['subtotal'], 2); ?></td>
        </tr>
        <tr>
            <td colspan="3">Tax (8%):</td>
            <td>$<?php echo number_format($order['tax'], 2); ?></td>
        </tr>
        <tr>
            <td colspan="3">Shipping:</td>
            <td>$<?php echo number_format($order['shipping'], 2); ?></td>
        </tr>
        <tr>
            <td colspan="3"><strong>Total:</strong></td>
            <td><strong>$<?php echo number_format($order['total'], 2); ?></strong></td>
        </tr>
    </table>
    
    <?php endif; ?>
</body>
</html>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'shopping_db';
$username = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
} catch(PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Product Store</title>
</head>
<body>
    <?php
    // Product model
    class Product {
        private $id;
        private $name;
        private $price;
        private $description;
        private $stock;

        public function __construct($id, $name, $price, $description, $stock) {
            $this->id = $id;
            $this->name = $name;
            $this->price = $price;
            $this->description = $description;
            $this->stock = $stock;
        }

        // Getters
        public function getId() { return $this->id; }
        public function getName() { return $this->name; }
        public function getPrice() { return $this->price; }
        public function getDescription() { return $this->description; }
        public function getStock() { return $this->stock; }

        // Database operations
        static function getAllProducts($conn) {
            $stmt = $conn->query("SELECT * FROM products");
            return $stmt->fetchAll(PDO::FETCH_ASSOC);
        }

        static function getProductById($conn, $id) {
            $stmt = $conn->prepare("SELECT * FROM products WHERE id = ?");
            $stmt->execute([$id]);
            return $stmt->fetch(PDO::FETCH_ASSOC);
        }
    }

    // Cart model
    class Cart {
        private $cartItems;

        public function __construct() {
            $this->cartItems = $_SESSION['cart'] ?? [];
        }

        public function addProduct($productId, $quantity) {
            if (isset($this->cartItems[$productId])) {
                $this->cartItems[$productId]['quantity'] += $quantity;
            } else {
                $productData = Product::getProductById($conn, $productId);
                $this->cartItems[$productId] = [
                    'id' => $productId,
                    'name' => $productData['name'],
                    'price' => $productData['price'],
                    'quantity' => $quantity
                ];
            }
            $_SESSION['cart'] = $this->cartItems;
        }

        public function removeProduct($productId) {
            unset($this->cartItems[$productId]);
            $_SESSION['cart'] = $this->cartItems;
        }

        public function updateQuantity($productId, $quantity) {
            if (isset($this->cartItems[$productId])) {
                $this->cartItems[$productId]['quantity'] = $quantity;
                $_SESSION['cart'] = $this->cartItems;
            }
        }

        public function getCartTotal() {
            $total = 0;
            foreach ($this->cartItems as $item) {
                $total += $item['price'] * $item['quantity'];
            }
            return $total;
        }

        public function getCartItems() {
            return $this->cartItems;
        }

        public function isEmpty() {
            return empty($this->cartItems);
        }
    }

    // Order model
    class Order {
        private $id;
        private $userId;
        private $amount;
        private $address;
        private $paymentMethod;
        private $status;

        public function __construct($id, $userId, $amount, $address, $paymentMethod, $status) {
            $this->id = $id;
            $this->userId = $userId;
            $this->amount = $amount;
            $this->address = $address;
            $this->paymentMethod = $paymentMethod;
            $this->status = $status;
        }

        // Database operations
        static function createOrder($conn, $userId, $amount, $address, $paymentMethod) {
            $stmt = $conn->prepare("INSERT INTO orders (user_id, amount, address, payment_method, status) VALUES (?, ?, ?, ?, 'pending')");
            $stmt->execute([$userId, $amount, $address, $paymentMethod]);
            return $conn->lastInsertId();
        }

        static function getOrderByUserId($conn, $userId) {
            $stmt = $conn->prepare("SELECT * FROM orders WHERE user_id = ?");
            $stmt->execute([$userId]);
            return $stmt->fetchAll(PDO::FETCH_ASSOC);
        }
    }

    // Example usage
    session_start();

    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = [];
    }

    // Display products
    $products = Product::getAllProducts($conn);
    foreach ($products as $product) {
        echo "<div>";
        echo "ID: {$product['id']}<br>";
        echo "Name: {$product['name']}<br>";
        echo "Price: \${$product['price']}<br>";
        echo "Description: {$product['description']}<br>";
        echo "<a href='?add_to_cart={$product['id']}'>Add to Cart</a><br>";
        echo "</div><hr>";
    }

    // Add to cart functionality
    if (isset($_GET['add_to_cart'])) {
        $productId = $_GET['add_to_cart'];
        $quantity = isset($_GET['quantity']) ? intval($_GET['quantity']) : 1;
        $cart = new Cart();
        $cart->addProduct($productId, $quantity);
    }

    // View cart
    if (isset($_GET['view_cart'])) {
        $cart = new Cart();
        if (!$cart->isEmpty()) {
            foreach ($cart->getCartItems() as $item) {
                echo "ID: {$item['id']}<br>";
                echo "Name: {$item['name']}<br>";
                echo "Price: \${$item['price']}<br>";
                echo "Quantity: {$item['quantity']}<br>";
                echo "<hr>";
            }
        } else {
            echo "Your cart is empty.";
        }
    }

    // Checkout process
    if (isset($_POST['checkout'])) {
        $cart = new Cart();
        if (!$cart->isEmpty()) {
            $amount = $cart->getCartTotal();
            $address = $_POST['address'];
            $paymentMethod = $_POST['payment_method'];
            $orderId = Order::createOrder($conn, 1, $amount, $address, $paymentMethod);

            // Clear cart
            $cart->removeAllItems();

            echo "Thank you for your order! Your order ID is: {$orderId}";
        }
    }
    ?>

    <!-- Checkout form -->
    <form method="post" action="">
        <h2>Checkout</h2>
        <input type="text" name="address" placeholder="Enter shipping address">
        <select name="payment_method">
            <option value="credit_card">Credit Card</option>
            <option value="paypal">PayPal</option>
        </select>
        <button type="submit" name="checkout">Place Order</button>
    </form>
</body>
</html>


<?php
require __DIR__ . '/vendor/autoload.php';

// Replace with your actual keys
\Stripe\Stripe::setApiKey('your_secret_key');

try {
    $paymentMethodId = $_POST['paymentMethodId'];
    $amount = $_POST['amount'];

    // Charge the customer's card
    $charge = \Stripe\Charge::create([
        'amount' => $amount,
        'currency' => 'usd',
        'payment_method' => $paymentMethodId,
    ]);

    echo json_encode(['success' => true, 'message' => 'Payment completed successfully.']);
} catch (\Stripe\Exception\ApiErrorException $e) {
    http_response_code(400);
    echo json_encode(['success' => false, 'error' => $e->getMessage()]);
}
?>


<?php
$host = 'localhost';
$dbname = 'your_database_name';
$user = 'root'; // or your username
$password = ''; // or your password

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $user, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}
?>


<?php
session_start();

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    include 'config.php';
    
    $username = $_POST['username'];
    $password = $_POST['password'];

    try {
        $stmt = $conn->prepare("SELECT * FROM users WHERE username=:username");
        $stmt->bindParam(':username', $username);
        $stmt->execute();
        
        $user = $stmt->fetch(PDO::FETCH_ASSOC);

        if ($user && password_verify($password, $user['password_hash'])) {
            $_SESSION['user'] = $user;
            header("Location: index.php");
            exit();
        } else {
            echo "Invalid username or password";
        }
    } catch (PDOException $e) {
        echo "Error: " . $e->getMessage();
    }
}
?>


<?php
session_start();

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    include 'config.php';
    
    $username = $_POST['username'];
    $email = $_POST['email'];
    $password = password_hash($_POST['password'], PASSWORD_DEFAULT);
    $first_name = $_POST['first_name'];
    $last_name = $_POST['last_name'];

    try {
        $stmt = $conn->prepare("INSERT INTO users (username, email, password_hash, first_name, last_name) 
                              VALUES (:username, :email, :password, :first_name, :last_name)");
        $stmt->bindParam(':username', $username);
        $stmt->bindParam(':email', $email);
        $stmt->bindParam(':password', $password);
        $stmt->bindParam(':first_name', $first_name);
        $stmt->bindParam(':last_name', $last_name);
        
        if ($stmt->execute()) {
            echo "Registration successful!";
            header("Location: login.php");
            exit();
        } else {
            echo "Registration failed.";
        }
    } catch (PDOException $e) {
        echo "Error: " . $e->getMessage();
    }
}
?>


<?php
session_start();

if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $productId = $_POST['product_id'];
    $quantity = $_POST['quantity'];

    if (isset($_SESSION['cart'][$productId])) {
        $_SESSION['cart'][$productId]['quantity'] += $quantity;
    } else {
        // Fetch product details
        include 'config.php';
        
        try {
            $stmt = $conn->prepare("SELECT * FROM products WHERE id=:id");
            $stmt->bindParam(':id', $productId);
            $stmt->execute();
            
            $product = $stmt->fetch(PDO::FETCH_ASSOC);

            if ($product) {
                $_SESSION['cart'][$productId] = array(
                    'name' => $product['name'],
                    'price' => $product['price'],
                    'quantity' => $quantity
                );
            }
        } catch (PDOException $e) {
            echo "Error: " . $e->getMessage();
        }
    }
}

function getCartTotal() {
    include 'config.php';
    
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += $item['price'] * $item['quantity'];
    }
    return $total;
}
?>


<?php
session_start();

if (!isset($_SESSION['user'])) {
    header("Location: login.php");
    exit();
}

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    include 'config.php';
    
    $userId = $_SESSION['user']['id'];
    $totalAmount = getCartTotal();
    $paymentMethod = $_POST['payment_method'];

    try {
        // Insert order
        $stmt = $conn->prepare("INSERT INTO orders (user_id, total_amount, payment_method) 
                              VALUES (:user_id, :total_amount, :payment_method)");
        $stmt->bindParam(':user_id', $userId);
        $stmt->bindParam(':total_amount', $totalAmount);
        $stmt->bindParam(':payment_method', $paymentMethod);
        
        if ($stmt->execute()) {
            $orderId = $conn->lastInsertId();

            // Insert order items
            foreach ($_SESSION['cart'] as $productId => $item) {
                $qty = $item['quantity'];
                $price = $item['price'];

                $stmt = $conn->prepare("INSERT INTO order_items (order_id, product_id, quantity, price) 
                                      VALUES (:order_id, :product_id, :quantity, :price)");
                $stmt->bindParam(':order_id', $orderId);
                $stmt->bindParam(':product_id', $productId);
                $stmt->bindParam(':quantity', $qty);
                $stmt->bindParam(':price', $price);

                if (!$stmt->execute()) {
                    throw new Exception("Error inserting order items");
                }
            }

            // Clear cart
            unset($_SESSION['cart']);
            echo "Order placed successfully!";
        } else {
            echo "Error placing order.";
        }
    } catch (PDOException $e) {
        echo "Error: " . $e->getMessage();
    }
}
?>


<?php
include 'config.php';

try {
    $stmt = $conn->prepare("SELECT * FROM products");
    $stmt->execute();
    
    $products = $stmt->fetchAll(PDO::FETCH_ASSOC);
} catch (PDOException $e) {
    echo "Error: " . $e->getMessage();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Product Store</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
</head>
<body>
    <div class="container mt-5">
        <?php if (isset($_SESSION['user'])): ?>
            <nav class="navbar navbar-expand-lg navbar-light bg-light mb-4">
                <a class="navbar-brand">Product Store</a>
                <div class="navbar-nav ml-auto">
                    <a href="cart.php" class="btn btn-primary mr-2">
                        Cart <?php echo isset($_SESSION['cart']) ? count($_SESSION['cart']) : 0; ?>
                    </a>
                    <a href="logout.php" class="btn btn-danger">Logout</a>
                </div>
            </nav>
        <?php else: ?>
            <nav class="navbar navbar-expand-lg navbar-light bg-light mb-4">
                <a class="navbar-brand">Product Store</a>
                <div class="navbar-nav ml-auto">
                    <a href="login.php" class="btn btn-primary mr-2">Login</a>
                    <a href="register.php" class="btn btn-success">Register</a>
                </div>
            </nav>
        <?php endif; ?>

        <div class="row">
            <?php foreach ($products as $product): ?>
                <div class="col-md-4 mb-4">
                    <div class="card">
                        <img src="placeholder-image.jpg" alt="<?php echo $product['name']; ?>" class="card-img-top">
                        <div class="card-body">
                            <h5 class="card-title"><?php echo $product['name']; ?></h5>
                            <p class="card-text"><?php echo $product['description']; ?></p>
                            <p class="card-text"><strong>Price:</strong> <?php echo $product['price']; ?> $</p>
                            <form action="cart.php" method="post">
                                <input type="hidden" name="product_id" value="<?php echo $product['id']; ?>">
                                <div class="input-group mb-3">
                                    <input type="number" name="quantity" min="1" max="<?php echo $product['quantity']; ?>" value="1" class="form-control">
                                    <button type="submit" class="btn btn-primary">Add to Cart</button>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            <?php endforeach; ?>
        </div>
    </div>
</body>
</html>


<?php
session_start();
unset($_SESSION['user']);
header("Location: login.php");
exit();
?>


<?php
session_start();
?>


<?php
function add_to_cart($product_id) {
    global $mysqli;
    
    // Check if product exists
    $query = "SELECT * FROM products WHERE id = ?";
    $stmt = $mysqli->prepare($query);
    $stmt->bind_param("i", $product_id);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows > 0) {
        // Check if item is already in cart
        $cart_query = "SELECT * FROM cart WHERE product_id = ? AND user_id = ?";
        $cart_stmt = $mysqli->prepare($cart_query);
        $cart_stmt->bind_param("ii", $product_id, $_SESSION['user_id']);
        $cart_stmt->execute();
        $cart_result = $cart_stmt->get_result();
        
        if ($cart_result->num_rows > 0) {
            // Update quantity
            $update_query = "UPDATE cart SET quantity = quantity + 1 WHERE product_id = ? AND user_id = ?";
            $update_stmt = $mysqli->prepare($update_query);
            $update_stmt->bind_param("ii", $product_id, $_SESSION['user_id']);
            $update_stmt->execute();
        } else {
            // Add new item
            $add_query = "INSERT INTO cart (product_id, user_id) VALUES (?, ?)";
            $add_stmt = $mysqli->prepare($add_query);
            $add_stmt->bind_param("ii", $product_id, $_SESSION['user_id']);
            $add_stmt->execute();
        }
    }
}

function get_cart_items() {
    global $mysqli;
    
    $query = "SELECT c.id AS cart_id, p.*, c.quantity FROM products p JOIN cart c ON p.id = c.product_id WHERE c.user_id = ?";
    $stmt = $mysqli->prepare($query);
    $stmt->bind_param("i", $_SESSION['user_id']);
    $stmt->execute();
    return $stmt->get_result();
}

function update_quantity($cart_item_id, $quantity) {
    global $mysqli;
    
    if ($quantity < 1) {
        delete_from_cart($cart_item_id);
        return;
    }
    
    $query = "UPDATE cart SET quantity = ? WHERE id = ?";
    $stmt = $mysqli->prepare($query);
    $stmt->bind_param("ii", $quantity, $cart_item_id);
    $stmt->execute();
}

function delete_from_cart($cart_item_id) {
    global $mysqli;
    
    $query = "DELETE FROM cart WHERE id = ?";
    $stmt = $mysqli->prepare($query);
    $stmt->bind_param("i", $cart_item_id);
    $stmt->execute();
}

function calculate_total() {
    global $mysqli;
    
    $total = 0;
    $result = get_cart_items();
    
    while ($row = $result->fetch_assoc()) {
        $total += $row['price'] * $row['quantity'];
    }
    
    return $total;
}
?>


<?php
include('cart_functions.php');
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <?php if ($cart_items = get_cart_items()): ?>
        <h1>Your Cart</h1>
        <table border="1">
            <tr>
                <th>Product Name</th>
                <th>Description</th>
                <th>Price</th>
                <th>Quantity</th>
                <th>Total</th>
                <th>Action</th>
            </tr>
            <?php while ($row = $cart_items->fetch_assoc()): ?>
                <tr>
                    <td><?php echo $row['name']; ?></td>
                    <td><?php echo $row['description']; ?></td>
                    <td><?php echo $row['price']; ?></td>
                    <td>
                        <form action="update_cart.php" method="post">
                            <input type="hidden" name="cart_id" value="<?php echo $row['cart_id']; ?>">
                            <input type="number" name="quantity" min="1" value="<?php echo $row['quantity']; ?>">
                            <button type="submit">Update</button>
                        </form>
                    </td>
                    <td><?php echo $row['price'] * $row['quantity']; ?></td>
                    <td><a href="delete_from_cart.php?cart_id=<?php echo $row['cart_id']; ?>">Delete</a></td>
                </tr>
            <?php endwhile; ?>
        </table>
        
        <h2>Total: <?php echo calculate_total(); ?></h2>
    <?php else: ?>
        <p>Your cart is empty.</p>
    <?php endif; ?>
</body>
</html>


<?php
include('cart_functions.php');

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    update_quantity($_POST['cart_id'], $_POST['quantity']);
}

header("Location: view_cart.php");
?>


<?php
include('cart_functions.php');

if (isset($_GET['cart_id'])) {
    delete_from_cart($_GET['cart_id']);
}

header("Location: view_cart.php");
?>


<?php
// Connect to database and fetch products
?>

<!DOCTYPE html>
<html>
<head>
    <title>Products</title>
</head>
<body>
    <?php while ($row = $products->fetch_assoc()): ?>
        <div>
            <h2><?php echo $row['name']; ?></h2>
            <p><?php echo $row['description']; ?></p>
            <p>Price: <?php echo $row['price']; ?></p>
            <form action="add_to_cart.php" method="post">
                <input type="hidden" name="product_id" value="<?php echo $row['id']; ?>">
                <button type="submit">Add to Cart</button>
            </form>
        </div>
    <?php endwhile; ?>
</body>
</html>


<?php
include('cart_functions.php');

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    add_to_cart($_POST['product_id']);
}

header("Location: product_listing.php");
?>


<?php
$mysqli = new mysqli('localhost', 'username', 'password', 'database_name');

if ($mysqli->connect_errno) {
    die("Failed to connect to MySQL: " . $mysqli->connect_error);
}
?>


include('db_connect.php');


<?php
// Connect to database
$host = 'localhost';
$dbname = 'ecommerce';
$user = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $user, $password);
} catch (PDOException $e) {
    die("Could not connect to the database: " . $e->getMessage());
}

// Fetch all products
$sql = "SELECT * FROM products";
$stmt = $conn->prepare($sql);
$stmt->execute();
$products = $stmt->fetchAll(PDO::FETCH_ASSOC);

if (!$products) {
    echo "No products available.";
} else {
    foreach ($products as $product) {
        echo "<div class='product'>";
        echo "<h2>" . $product['product_name'] . "</h2>";
        echo "<p>Description: " . $product['description'] . "</p>";
        echo "<p>Price: $" . number_format($product['price'], 2) . "</p>";
        echo "<p>Stock: " . $product['stock_quantity'] . "</p>";
        echo "<a href='purchase.php?product_id=" . $product['product_id'] . "' class='btn'>Buy Now</a>";
        echo "</div>";
    }
}
?>


<?php
// Connect to database
$host = 'localhost';
$dbname = 'ecommerce';
$user = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $user, $password);
} catch (PDOException $e) {
    die("Could not connect to the database: " . $e->getMessage());
}

// Get product ID from URL
$product_id = isset($_GET['product_id']) ? $_GET['product_id'] : 0;

// Fetch product details
$sql = "SELECT * FROM products WHERE product_id = ?";
$stmt = $conn->prepare($sql);
$stmt->execute([$product_id]);
$product = $stmt->fetch(PDO::FETCH_ASSOC);

if (!$product) {
    die("Product not found.");
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Purchase Product</title>
</head>
<body>
    <h1>Confirm Purchase - <?php echo $product['product_name']; ?></h1>
    
    <form action="process_purchase.php" method="post">
        <input type="hidden" name="product_id" value="<?php echo $product_id; ?>">
        
        <label>Your Name:</label>
        <input type="text" name="user_name" required><br>
        
        <label>Email:</label>
        <input type="email" name="email" required><br>
        
        <label>Quantity:</label>
        <input type="number" name="quantity" min="1" max="<?php echo $product['stock_quantity']; ?>" value="1" required><br>
        
        <button type="submit">Purchase</button>
    </form>
</body>
</html>


<?php
// Connect to database
$host = 'localhost';
$dbname = 'ecommerce';
$user = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $user, $password);
} catch (PDOException $e) {
    die("Could not connect to the database: " . $e->getMessage());
}

// Get form data
$product_id = $_POST['product_id'];
$user_name = $_POST['user_name'];
$email = $_POST['email'];
$quantity = intval($_POST['quantity']);

// Validate quantity
if ($quantity < 1) {
    die("Invalid quantity.");
}

// Fetch product details
$sql = "SELECT * FROM products WHERE product_id = ?";
$stmt = $conn->prepare($sql);
$stmt->execute([$product_id]);
$product = $stmt->fetch(PDO::FETCH_ASSOC);

if (!$product) {
    die("Product not found.");
}

// Check stock availability
if ($quantity > $product['stock_quantity']) {
    die("Not enough stock available.");
}

// Calculate total price
$total_price = $quantity * $product['price'];

// Insert order into database
$sql = "INSERT INTO orders (user_name, email, product_id, quantity, total_price) 
        VALUES (?, ?, ?, ?, ?)";
$stmt = $conn->prepare($sql);
$stmt->execute([$user_name, $email, $product_id, $quantity, $total_price]);

// Update stock quantity
$new_stock = $product['stock_quantity'] - $quantity;
$sql = "UPDATE products SET stock_quantity = ? WHERE product_id = ?";
$stmt = $conn->prepare($sql);
$stmt->execute([$new_stock, $product_id]);

// Display confirmation message
echo "Thank you for your purchase!<br>";
echo "Order ID: " . $conn->lastInsertId() . "<br>";
echo "Total Price: $" . number_format($total_price, 2);

// Optional: Send confirmation email here
?>


<?php
// Set up email content
$subject = "Order Confirmation";
$message = "Thank you for your purchase. Your order details are as follows:

";
$message .= "Order ID: " . $conn->lastInsertId() . "
";
$message .= "Product: " . $product['product_name'] . "
";
$message .= "Quantity: " . $quantity . "
";
$message .= "Total Price: $" . number_format($total_price, 2) . "
";

// Send email
mail($email, $subject, $message);
?>


<?php
// Database connection (db.php)
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'shopping_cart';

$conn = mysqli_connect($host, $username, $password, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Store</title>
</head>
<body>
<?php
// Include database connection
include('db.php');

// Get products from database
$sql = "SELECT * FROM products";
$result = mysqli_query($conn, $sql);

if (mysqli_num_rows($result) > 0) {
    while ($row = mysqli_fetch_assoc($result)) {
        echo "<div>";
        echo "<h2>" . $row['name'] . "</h2>";
        echo "<p>Description: " . $row['description'] . "</p>";
        echo "<p>Price: $" . $row['price'] . "</p>";
        echo "<form action='add_to_cart.php' method='post'>";
        echo "<input type='hidden' name='id' value='" . $row['id'] . "'>";
        echo "<input type='number' name='quantity' min='1' value='1'>";
        echo "<button type='submit'>Add to Cart</button>";
        echo "</form>";
        echo "</div><br>";
    }
} else {
    echo "No products found.";
}
mysqli_close($conn);
?>
</body>
</html>

<?php
// Add to cart functionality (add_to_cart.php)
session_start();
include('db.php');

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $product_id = $_POST['id'];
    $quantity = $_POST['quantity'];

    // Check if the product exists in the database
    $sql = "SELECT * FROM products WHERE id = ?";
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, 'i', $product_id);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);

    if ($row = mysqli_fetch_assoc($result)) {
        // Check if the product is already in the cart
        if (isset($_SESSION['cart'][$product_id])) {
            $_SESSION['cart'][$product_id]['quantity'] += $quantity;
        } else {
            $_SESSION['cart'][$product_id] = array(
                'id' => $product_id,
                'name' => $row['name'],
                'price' => $row['price'],
                'quantity' => $quantity
            );
        }
        echo "<script>alert('Product added to cart');</script>";
    } else {
        echo "<script>alert('Product not found');</script>";
    }
    header("Location: index.php");
}
mysqli_close($conn);
?>

<?php
// Cart display and checkout (cart.php)
session_start();

if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    if (isset($_POST['update'])) {
        foreach ($_POST as $key => $value) {
            if ($key != 'update' && is_numeric($key)) {
                $_SESSION['cart'][$key]['quantity'] = $value;
            }
        }
    } elseif (isset($_POST['remove'])) {
        unset($_SESSION['cart'][$_POST['remove']]);
    }
}

$total = 0;
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <?php if (!empty($_SESSION['cart'])) { ?>
        <h2>Your Cart</h2>
        <form action="cart.php" method="post">
            <?php foreach ($_SESSION['cart'] as $id => $product) { ?>
                <div>
                    <p><?php echo $product['name']; ?></p>
                    <p>Price: <?php echo "$" . number_format($product['price'], 2); ?></p>
                    <input type="number" name="<?php echo $id; ?>" min="1" value="<?php echo $product['quantity']; ?>">
                    <button type="submit" name="remove" value="<?php echo $id; ?>">Remove</button>
                </div><br>
                <?php $total += $product['price'] * $product['quantity']; ?>
            <?php } ?>
            <p>Total: <?php echo "$" . number_format($total, 2); ?></p>
            <button type="submit" name="update">Update Cart</button>
        </form><br>
        <a href="checkout.php">Checkout</a>
    <?php } else { ?>
        <h2>Your cart is empty.</h2>
        <a href="index.php">Continue Shopping</a>
    <?php } ?>
</body>
</html>

<?php
// Checkout page (checkout.php)
session_start();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
</head>
<body>
    <?php if (!empty($_SESSION['cart'])) { ?>
        <h2>Enter Your Information</h2>
        <form action="process_payment.php" method="post">
            <input type="text" name="name" placeholder="Name" required><br>
            <input type="email" name="email" placeholder="Email" required><br>
            <textarea name="address" placeholder="Shipping Address" rows="3" required></textarea><br>
            <div id="payment-form">
                <!-- Add payment form fields here -->
            </div>
            <button type="submit">Complete Purchase</button>
        </form>
    <?php } else { ?>
        <h2>Your cart is empty.</h2>
        <a href="index.php">Continue Shopping</a>
    <?php } ?>
</body>
</html>

<?php
// Payment processing (process_payment.php)
session_start();

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Process payment here
    // You would typically integrate with a payment gateway here

    // For this example, we'll just display a confirmation message
    $name = $_POST['name'];
    $email = $_POST['email'];
    $address = $_POST['address'];

    echo "<h2>Thank you for your purchase!</h2>";
    echo "<p>Name: " . $name . "</p>";
    echo "<p>Email: " . $email . "</p>";
    echo "<p>Address: " . $address . "</p>";
    echo "<p>Your order has been processed.</p>";

    // Clear the cart
    unset($_SESSION['cart']);
}
?>


<?php
session_start();

// Database connection
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "myDB";

$conn = new mysqli($servername, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Get products from database
$sql = "SELECT * FROM products";
$result = $conn->query($sql);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
    <style>
        body { font-family: Arial, sans-serif; }
        .product-grid { display: grid; grid-template-columns: repeat(auto-fit, minmax(250px, 1fr)); gap: 20px; padding: 20px; }
        .product-card { border: 1px solid #ddd; padding: 10px; }
        .cart { width: 300px; float: right; margin: 20px; }
    </style>
</head>
<body>

<?php
if (isset($_GET['action']) && $_GET['action'] == 'checkout') {
    // Process checkout
    if (!empty($_SESSION['cart'])) {
        // Insert order into database
        $total = 0;
        foreach ($_SESSION['cart'] as $item) {
            $total += $item['price'] * $item['quantity'];
        }
        
        $sql = "INSERT INTO orders (total_amount, created_at) VALUES (?, NOW())";
        $stmt = $conn->prepare($sql);
        $stmt->bind_param("d", $total);
        $stmt->execute();
        
        // Get order ID
        $order_id = $conn->insert_id;
        
        foreach ($_SESSION['cart'] as $item) {
            $sql = "INSERT INTO order_items (order_id, product_id, quantity, price) VALUES (?, ?, ?, ?)";
            $stmt = $conn->prepare($sql);
            $stmt->bind_param("iidi", $order_id, $item['id'], $item['quantity'], $item['price']);
            $stmt->execute();
        }
        
        // Clear cart
        unset($_SESSION['cart']);
    } else {
        echo "Your cart is empty!";
    }
} elseif (isset($_GET['action']) && $_GET['action'] == 'add_to_cart') {
    // Add item to cart
    if (isset($_GET['id'])) {
        $product_id = $_GET['id'];
        
        $sql = "SELECT * FROM products WHERE id = ?";
        $stmt = $conn->prepare($sql);
        $stmt->bind_param("i", $product_id);
        $stmt->execute();
        $result = $stmt->get_result();
        
        if ($result->num_rows > 0) {
            $product = $result->fetch_assoc();
            
            if (!isset($_SESSION['cart'])) {
                $_SESSION['cart'] = array();
            }
            
            if (array_key_exists($product_id, $_SESSION['cart'])) {
                // Increment quantity
                $_SESSION['cart'][$product_id]['quantity']++;
            } else {
                // Add new item
                $_SESSION['cart'][$product_id] = array(
                    'id' => $product['id'],
                    'name' => $product['name'],
                    'price' => $product['price'],
                    'quantity' => 1
                );
            }
        }
    }
} elseif (isset($_GET['action']) && $_GET['action'] == 'remove_from_cart') {
    // Remove item from cart
    if (isset($_GET['id'])) {
        $product_id = $_GET['id'];
        unset($_SESSION['cart'][$product_id]);
    }
}
?>

<div class="product-grid">
<?php
if ($result->num_rows > 0) {
    while ($row = $result->fetch_assoc()) {
        echo "<div class='product-card'>";
        echo "<h3>" . $row['name'] . "</h3>";
        echo "<p>" . $row['description'] . "</p>";
        echo "<p>Price: $" . $row['price'] . "</p>";
        echo "<a href='?action=add_to_cart&id=" . $row['id'] . "'>Add to Cart</a>";
        echo "</div>";
    }
}
?>
</div>

<div class="cart">
<h2>Your Cart</h2>
<?php
if (!empty($_SESSION['cart'])) {
    foreach ($_SESSION['cart'] as $item) {
        echo "<div>" . $item['name'] . " x" . $item['quantity'] . " - $" . ($item['price'] * $item['quantity']) . "</div>";
        echo "<a href='?action=remove_from_cart&id=" . $item['id'] . "'>Remove</a><br>";
    }
    
    // Calculate total
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += $item['price'] * $item['quantity'];
    }
    echo "<h3>Total: $" . $total . "</h3>";
    echo "<a href='?action=checkout'>Checkout</a>";
} else {
    echo "Your cart is empty!";
}
?>
</div>

<?php
// Close database connection
$conn->close();
?>


<?php
// Start session to store cart items
session_start();

// Database connection (replace with your credentials)
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "shop";

$conn = new mysqli($servername, $username, $password, $dbname);

// Get products from database
function get_products() {
    global $conn;
    $query = "SELECT * FROM products LIMIT 6"; // Simple query to get top 6 products
    $result = $conn->query($query);
    return $result;
}

// Add item to cart
function add_to_cart($product_id) {
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }
    
    if (isset($_SESSION['cart'][$product_id])) {
        $_SESSION['cart'][$product_id]['quantity']++;
    } else {
        $product = get_product_details($product_id);
        $_SESSION['cart'][$product_id] = array(
            'id' => $product_id,
            'name' => $product['name'],
            'price' => $product['price'],
            'quantity' => 1
        );
    }
}

// Remove item from cart
function remove_from_cart($product_id) {
    if (isset($_SESSION['cart'][$product_id])) {
        unset($_SESSION['cart'][$product_id]);
    }
}

// Get product details
function get_product_details($product_id) {
    global $conn;
    $query = "SELECT * FROM products WHERE id = '$product_id'";
    $result = $conn->query($query);
    return $result->fetch_assoc();
}

// Process order
function process_order() {
    if (empty($_SESSION['cart'])) {
        echo "Your cart is empty!";
        return;
    }
    
    // Calculate total price
    $total_price = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total_price += $item['price'] * $item['quantity'];
    }
    
    // Here you would typically:
    // 1. Insert order into database
    // 2. Process payment (using a payment gateway)
    // 3. Send confirmation email
    
    // For this example, we'll just display the order details
    echo "<h2>Order Summary</h2>";
    echo "<p>Date: " . date("Y-m-d H:i:s") . "</p>";
    echo "<table border='1'>";
    echo "<tr><th>Item</th><th>Quantity</th><th>Price</th></tr>";
    
    foreach ($_SESSION['cart'] as $item) {
        echo "<tr>";
        echo "<td>" . $item['name'] . "</td>";
        echo "<td>" . $item['quantity'] . "</td>";
        echo "<td>$" . number_format($item['price'], 2) . "</td>";
        echo "</tr>";
    }
    
    echo "<tr><td colspan='2'>Total:</td><td>$" . number_format($total_price, 2) . "</td></tr>";
    echo "</table>";
    echo "<p>Thank you for your purchase!</p>";
}

// Main logic
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    if (isset($_POST['action'])) {
        switch ($_POST['action']) {
            case 'add':
                add_to_cart($_POST['product_id']);
                break;
            case 'remove':
                remove_from_cart($_POST['product_id']);
                break;
            case 'purchase':
                process_order();
                break;
        }
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Online Store</title>
    <style>
        body { font-family: Arial, sans-serif; }
        .cart-item { border-bottom: 1px solid #ddd; padding: 10px; }
        table { width: 100%; margin-top: 20px; }
        th, td { padding: 8px; text-align: left; }
    </style>
</head>
<body>
    <h1>Welcome to Our Store</h1>

    <?php if (!empty($_SESSION['cart'])) : ?>
        <h2>Your Cart</h2>
        <div id="cart">
            <?php foreach ($_SESSION['cart'] as $item) : ?>
                <div class="cart-item">
                    <?php echo $item['name']; ?> (Quantity: <?php echo $item['quantity']; ?>)
                    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
                        <input type="hidden" name="action" value="remove">
                        <input type="hidden" name="product_id" value="<?php echo $item['id']; ?>">
                        <button type="submit">Remove</button>
                    </form>
                </div>
            <?php endforeach; ?>
        </div>
        
        <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
            <input type="hidden" name="action" value="purchase">
            <button type="submit">Purchase</button>
        </form>
    <?php endif; ?>

    <h2>Available Products</h2>
    <?php $products = get_products(); while ($product = $products->fetch_assoc()) : ?>
        <div class="product">
            <h3><?php echo $product['name']; ?></h3>
            <p>$<?php echo number_format($product['price'], 2); ?></p>
            <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
                <input type="hidden" name="action" value="add">
                <input type="hidden" name="product_id" value="<?php echo $product['id']; ?>">
                <button type="submit">Add to Cart</button>
            </form>
        </div>
    <?php endwhile; ?>

</body>
</html>


<?php
// Connect to the database
$connection = mysqli_connect("localhost", "username", "password", "database_name");

// Query to get all products
$query = "SELECT * FROM products";
$result = mysqli_query($connection, $query);

// Display the products
echo "<h2>Product Catalog</h2>";
while ($row = mysqli_fetch_assoc($result)) {
    echo "<div class='product'>";
    echo "<h3>" . $row['name'] . "</h3>";
    echo "<p>" . $row['description'] . "</p>";
    echo "<p>Price: $" . number_format($row['price'], 2) . "</p>";
    echo "<a href='buy.php?id=" . $row['id'] . "' class='btn'>Buy Now</a>";
    echo "</div>";
}
?>


<?php
session_start();

// Check if the user is logged in
if (!isset($_SESSION['user_id'])) {
    header("Location: login.php");
    exit();
}

// Get the product ID from the URL
$product_id = isset($_GET['id']) ? intval($_GET['id']) : 0;

// Connect to the database
$connection = mysqli_connect("localhost", "username", "password", "database_name");

// Query to get product details
$query = "SELECT * FROM products WHERE id = $product_id";
$result = mysqli_query($connection, $query);

if (mysqli_num_rows($result) == 0) {
    // Product not found
    echo "<h2>Product Not Found</h2>";
} else {
    $row = mysqli_fetch_assoc($result);
?>
<form action="checkout.php" method="post">
    <input type="hidden" name="product_id" value="<?php echo $row['id']; ?>">
    <input type="text" name="name" placeholder="Name" required>
    <input type="email" name="email" placeholder="Email" required>
    <input type="text" name="address" placeholder="Shipping Address" required>
    <select name="payment_method">
        <option value="">Select Payment Method</option>
        <option value="credit_card">Credit Card</option>
        <option value="paypal">PayPal</option>
    </select>
    <input type="submit" value="Checkout">
</form>
<?php
}
?>


<?php
session_start();

// Check if the user is logged in
if (!isset($_SESSION['user_id'])) {
    header("Location: login.php");
    exit();
}

// Get form data
$product_id = isset($_POST['product_id']) ? intval($_POST['product_id']) : 0;
$name = $_POST['name'];
$email = $_POST['email'];
$address = $_POST['address'];
$payment_method = $_POST['payment_method'];

// Connect to the database
$connection = mysqli_connect("localhost", "username", "password", "database_name");

// Query to get product details
$query = "SELECT * FROM products WHERE id = $product_id";
$result = mysqli_query($connection, $query);
$row = mysqli_fetch_assoc($result);

// Process payment (this is a simplified example)
// In real application, you would integrate with a payment gateway here

if ($payment_method == 'credit_card' || $payment_method == 'paypal') {
    // Payment processed successfully
    $transaction_id = uniqid();
    
    // Insert the order into the database
    $order_query = "INSERT INTO orders (user_id, product_id, quantity, total_amount, transaction_id, order_date) 
                    VALUES ('" . $_SESSION['user_id'] . "', '" . $product_id . "', 1, '" . $row['price'] . "', '$transaction_id', NOW())";
    mysqli_query($connection, $order_query);
    
    // Redirect to thank you page
    header("Location: thank_you.php?order_id=" . mysqli_insert_id($connection));
} else {
    // Payment method not valid
    echo "Invalid payment method.";
}
?>


<?php
session_start();

// Check if the user is logged in
if (!isset($_SESSION['user_id'])) {
    header("Location: login.php");
    exit();
}

// Get the order ID from the URL
$order_id = isset($_GET['order_id']) ? intval($_GET['order_id']) : 0;

// Connect to the database
$connection = mysqli_connect("localhost", "username", "password", "database_name");

// Query to get order details
$query = "SELECT * FROM orders WHERE id = $order_id";
$result = mysqli_query($connection, $query);
$row = mysqli_fetch_assoc($result);

if (mysqli_num_rows($result) == 0) {
    // Order not found
    echo "<h2>Order Not Found</h2>";
} else {
?>
<h2>Thank You for Your Purchase!</h2>
<p>Your order has been received successfully.</p>
<p>Order ID: <?php echo $row['id']; ?></p>
<p>Transaction ID: <?php echo $row['transaction_id']; ?></p>
<?php
}
?>


<?php
session_start();

if (isset($_POST['login'])) {
    // Get form data
    $username = $_POST['username'];
    $password = $_POST['password'];

    // Connect to the database
    $connection = mysqli_connect("localhost", "username", "password", "database_name");

    // Query to check if user exists
    $query = "SELECT * FROM users WHERE username = '$username' AND password = '" . md5($password) . "'";
    $result = mysqli_query($connection, $query);

    if (mysqli_num_rows($result) == 1) {
        // Login successful
        $row = mysqli_fetch_assoc($result);
        $_SESSION['user_id'] = $row['id'];
        header("Location: index.php");
    } else {
        // Login failed
        echo "Invalid username or password.";
    }
}
?>

<form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
    <input type="text" name="username" placeholder="Username" required>
    <input type="password" name="password" placeholder="Password" required>
    <input type="submit" name="login" value="Login">
</form>

<a href="register.php">Create an account</a>


<?php
session_start();

if (isset($_POST['register'])) {
    // Get form data
    $username = $_POST['username'];
    $password = md5($_POST['password']);
    $email = $_POST['email'];
    $address = $_POST['address'];

    // Connect to the database
    $connection = mysqli_connect("localhost", "username", "password", "database_name");

    // Query to check if username already exists
    $check_query = "SELECT * FROM users WHERE username = '$username'";
    $check_result = mysqli_query($connection, $check_query);

    if (mysqli_num_rows($check_result) > 0) {
        echo "Username already exists.";
    } else {
        // Insert into database
        $query = "INSERT INTO users (username, password, email, address) 
                  VALUES ('$username', '$password', '$email', '$address')";
        mysqli_query($connection, $query);

        // Login the user automatically
        $_SESSION['user_id'] = mysqli_insert_id($connection);
        header("Location: index.php");
    }
}
?>

<form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
    <input type="text" name="username" placeholder="Username" required>
    <input type="password" name="password" placeholder="Password" required>
    <input type="email" name="email" placeholder="Email" required>
    <input type="text" name="address" placeholder="Address" required>
    <input type="submit" name="register" value="Register">
</form>

<a href="login.php">Already have an account? Login here.</a>


<?php
// Database connection
$servername = "localhost";
$username = "root";
$password = "";
$dbname = "product_store";

// Create connection
$conn = new mysqli($servername, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// SQL query to fetch products
$sql = "SELECT * FROM products";
$result = $conn->query($sql);

// Display products
if ($result->num_rows > 0) {
    echo "<div class='product-container'>";
    while ($row = $result->fetch_assoc()) {
        echo "
            <div class='product-card'>
                <h3>".$row['name']."</h3>
                <p>".$row['description']."</p>
                <p>Price: \$".$row['price']."</p>
                <form action='cart.php' method='post'>
                    <input type='hidden' name='id' value='".$row['id']."'>
                    <input type='number' name='quantity' min='1' max='".$row['quantity']."' value='1'>
                    <button type='submit'>Add to Cart</button>
                </form>
            </div>";
    }
    echo "</div>";
} else {
    echo "No products found!";
}
$conn->close();
?>


<?php session_start(); ?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Shopping Cart</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 20px;
        }
        table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
        }
        th, td {
            padding: 15px;
            text-align: left;
            border-bottom: 1px solid #ddd;
        }
    </style>
</head>
<body>

<?php
// Initialize session if not started
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add item to cart
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $productId = $_POST['id'];
    $quantity = $_POST['quantity'];

    // Check if product is already in cart
    if (isset($_SESSION['cart'][$productId])) {
        $_SESSION['cart'][$productId]['quantity'] += $quantity;
    } else {
        // Get product details from database
        $conn = new mysqli($servername, $username, $password, $dbname);
        $sql = "SELECT * FROM products WHERE id=".$productId;
        $result = $conn->query($sql);
        $row = $result->fetch_assoc();
        $_SESSION['cart'][$productId] = array(
            'name' => $row['name'],
            'price' => $row['price'],
            'quantity' => $quantity
        );
        $conn->close();
    }
}

// Display cart contents
echo "<h2>Shopping Cart</h2>";
if (empty($_SESSION['cart'])) {
    echo "Your cart is empty!";
} else {
    $total = 0;
    echo "<table>";
    echo "<tr><th>Product</th><th>Price</th><th>Quantity</th><th>Total</th></tr>";
    foreach ($_SESSION['cart'] as $id => $item) {
        $subtotal = $item['price'] * $item['quantity'];
        $total += $subtotal;
        echo "<tr>
                <td>".$item['name']."</td>
                <td>\$".$item['price']."</td>
                <td>".$item['quantity']."</td>
                <td>\$".number_format($subtotal, 2)."</td>
              </tr>";
    }
    echo "<tr><th colspan='3'>Total:</th><th>\$".number_format($total, 2)."</th></tr>";
    echo "</table>";
}
?>

<a href="checkout.php">Proceed to Checkout</a>

</body>
</html>


<?php session_start(); ?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Checkout</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 20px;
        }
        .checkout-container {
            max-width: 600px;
            margin: 0 auto;
        }
    </style>
</head>
<body>

<div class="checkout-container">
    <h2>Checkout</h2>
    
    <?php
    if (empty($_SESSION['cart'])) {
        echo "Your cart is empty!";
    } else {
        // Display checkout form
        if ($_SERVER["REQUEST_METHOD"] == "POST") {
            // Process order
            $name = htmlspecialchars($_POST['name']);
            $email = htmlspecialchars($_POST['email']);
            $address = htmlspecialchars($_POST['address']);
            
            // Here you would typically connect to your database and insert the order details
            
            // After processing, redirect to thank you page or display confirmation
            header("Location: thank_you.php");
        }
        
        echo "<form method='post' action='".htmlspecialchars($_SERVER["PHP_SELF"])."'>";
        echo "<h3>Customer Information</h3>";
        echo "<p><input type='text' name='name' placeholder='Name' required></p>";
        echo "<p><input type='email' name='email' placeholder='Email Address' required></p>";
        echo "<p><textarea name='address' placeholder='Shipping Address' required></textarea></p>";
        echo "<p><button type='submit'>Confirm Purchase</button></p>";
        echo "</form>";
    }
    ?>
</div>

</body>
</html>


<?php session_start(); ?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Thank You</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 20px;
            text-align: center;
        }
    </style>
</head>
<body>

<h1>Thank You for Your Order!</h1>
<p>Your order has been received and is being processed.</p>

<?php
// Display order details
if (!empty($_SESSION['cart'])) {
    $total = 0;
    echo "<h3>Your Order:</h3>";
    foreach ($_SESSION['cart'] as $item) {
        $subtotal = $item['price'] * $item['quantity'];
        $total += $subtotal;
        echo "<p>".$item['name']." x".$item['quantity']."</p>";
    }
    echo "<p>Total: \$".number_format($total, 2)."</p>";
}

// Reset cart
$_SESSION['cart'] = array();
?>

</body>
</html>


<?php session_start(); ?>

<!DOCTYPE html>
<html>
<head>
    <title>Store</title>
</head>
<body>
    <?php
        // Database connection
        $conn = mysqli_connect("localhost", "root", "", "store");

        // Fetch products from database
        $result = mysqli_query($conn, "SELECT * FROM products");
        
        while ($row = mysqli_fetch_assoc($result)) {
            echo "<div>";
            echo "<h2>".$row['name']."</h2>";
            echo "<p>".$row['description']."</p>";
            echo "<strong>Price: $".$row['price']."</strong><br>";
            echo "<a href='add_to_cart.php?id=".$row['id']."'>Add to Cart</a>";
            echo "</div>";
        }

        mysqli_close($conn);
    ?>
</body>
</html>


<?php session_start();

if (isset($_GET['id'])) {
    $product_id = $_GET['id'];
    
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }
    
    // Check if product is already in cart
    if (array_key_exists($product_id, $_SESSION['cart'])) {
        $_SESSION['cart'][$product_id]['quantity']++;
    } else {
        // Connect to database
        $conn = mysqli_connect("localhost", "root", "", "store");
        
        // Get product details
        $result = mysqli_query($conn, "SELECT name, price FROM products WHERE id = $product_id");
        $row = mysqli_fetch_assoc($result);
        
        $_SESSION['cart'][$product_id] = array(
            'name' => $row['name'],
            'price' => $row['price'],
            'quantity' => 1
        );
        
        mysqli_close($conn);
    }
    
    header("Location: index.php");
}
?>


<?php session_start(); ?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <?php
        if (isset($_SESSION['cart'])) {
            $total = 0;
            echo "<h2>Your Shopping Cart</h2>";
            
            foreach ($_SESSION['cart'] as $id => $item) {
                echo "<div>";
                echo "Product: ".$item['name']."<br>";
                echo "Price: \$".$item['price']."<br>";
                echo "Quantity: <input type='number' value='".$item['quantity']."' min='1'><br>";
                echo "<a href='remove_from_cart.php?id=$id'>Remove</a><br>";
                echo "</div>";
                
                $total += ($item['price'] * $item['quantity']);
            }
            
            echo "<h3>Grand Total: \$".$total."</h3>";
            echo "<a href='checkout.php'>Checkout</a>";
        } else {
            echo "Your cart is empty!";
        }
    ?>
</body>
</html>


<?php session_start();

if (isset($_GET['id'])) {
    $product_id = $_GET['id'];
    
    if (isset($_SESSION['cart'][$product_id])) {
        unset($_SESSION['cart'][$product_id]);
    }
    
    header("Location: view_cart.php");
}
?>


<?php session_start(); ?>

<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
</head>
<body>
    <?php
        if (isset($_SESSION['cart'])) {
            $total = 0;
            
            foreach ($_SESSION['cart'] as $item) {
                $total += ($item['price'] * $item['quantity']);
            }
            
            echo "<h2>Checkout - Total: \$".$total."</h2>";
    ?>
    
    <form action="process_payment.php" method="post">
        <label for="card_number">Card Number:</label>
        <input type="text" id="card_number" name="card_number"><br><br>
        
        <label for="name_on_card">Name on Card:</label>
        <input type="text" id="name_on_card" name="name_on_card"><br><br>
        
        <label for="expiration_date">Expiration Date:</label>
        <input type="text" id="expiration_date" name="expiration_date"><br><br>
        
        <input type="submit" value="Complete Purchase">
    </form>
    
    <?php } else { ?>
        <h2>Your cart is empty!</h2>
    <?php } ?>
</body>
</html>


<?php session_start();

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Process payment details here
    $card_number = $_POST['card_number'];
    $name_on_card = $_POST['name_on_card'];
    $expiration_date = $_POST['expiration_date'];
    
    // For this example, we'll assume payment is successful
    
    // Update orders table
    $conn = mysqli_connect("localhost", "root", "", "store");
    
    foreach ($_SESSION['cart'] as $item) {
        $sql = "INSERT INTO orders (user_id, product_id, quantity, total, order_date, payment_status)
                VALUES ('1', '$item[id]', '$item[quantity]', '$item[price]*$item[quantity]', NOW(), 'paid')";
        
        mysqli_query($conn, $sql);
    }
    
    // Empty cart
    unset($_SESSION['cart']);
    
    mysqli_close($conn);
    
    header("Location: thank_you.php");
}
?>


<!DOCTYPE html>
<html>
<head>
    <title>Thank You</title>
</head>
<body>
    <h2>Thank you for your purchase!</h2>
    <p>Your order has been successfully processed.</p>
    <a href="index.php">Continue Shopping</a>
</body>
</html>


<?php
session_start();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Product List</title>
</head>
<body>
    <?php
        // Sample products (you can replace this with data from your database)
        $products = array(
            1 => array('name' => 'Product 1', 'description' => 'Description for Product 1', 'price' => 19.99),
            2 => array('name' => 'Product 2', 'description' => 'Description for Product 2', 'price' => 29.99),
            3 => array('name' => 'Product 3', 'description' => 'Description for Product 3', 'price' => 39.99)
        );

        if (isset($_SESSION['cart'])) {
            echo '<p>Your cart contains: ' . count($_SESSION['cart']) . ' items</p>';
        } else {
            $_SESSION['cart'] = array();
        }
    ?>

    <h2>Products</h2>
    <table border="1">
        <tr>
            <th>Name</th>
            <th>Description</th>
            <th>Price</th>
            <th>Action</th>
        </tr>
        <?php foreach ($products as $id => $product): ?>
            <tr>
                <td><?php echo $product['name']; ?></td>
                <td><?php echo $product['description']; ?></td>
                <td>$<?php echo number_format($product['price'], 2); ?></td>
                <td><a href="add_to_cart.php?id=<?php echo $id; ?>">Add to Cart</a></td>
            </tr>
        <?php endforeach; ?>
    </table>
    
    <p><a href="view_cart.php">View Cart</a></p>
</body>
</html>


<?php
session_start();

if (!isset($_GET['id'])) {
    die("Product ID not specified.");
}

$product_id = $_GET['id'];

// Sample products (you can replace this with data from your database)
$products = array(
    1 => array('name' => 'Product 1', 'description' => 'Description for Product 1', 'price' => 19.99),
    2 => array('name' => 'Product 2', 'description' => 'Description for Product 2', 'price' => 29.99),
    3 => array('name' => 'Product 3', 'description' => 'Description for Product 3', 'price' => 39.99)
);

if (!isset($products[$product_id])) {
    die("Product not found.");
}

// Add or update the product in the cart
if (isset($_SESSION['cart'][$product_id])) {
    $_SESSION['cart'][$product_id]['quantity']++;
} else {
    $_SESSION['cart'][$product_id] = array(
        'name' => $products[$product_id]['name'],
        'price' => $products[$product_id]['price'],
        'quantity' => 1
    );
}

header("Location: products.php");
exit();


<?php
session_start();

if (!isset($_SESSION['cart']) || count($_SESSION['cart']) == 0) {
    echo "<p>Your cart is empty.</p>";
} else {
    $total = 0;
?>
    
<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <h2>Your Shopping Cart</h2>
    <table border="1">
        <tr>
            <th>Product Name</th>
            <th>Price</th>
            <th>Quantity</th>
            <th>Total</th>
            <th>Action</th>
        </tr>
        <?php foreach ($_SESSION['cart'] as $id => $item): ?>
            <tr>
                <td><?php echo $item['name']; ?></td>
                <td>$<?php echo number_format($item['price'], 2); ?></td>
                <td><input type="number" name="quantity" min="1" value="<?php echo $item['quantity']; ?>"></td>
                <td>$<?php echo number_format($item['price'] * $item['quantity'], 2); ?></td>
                <td><a href="remove_from_cart.php?id=<?php echo $id; ?>">Remove</a> | 
                    <button onclick="updateCart(<?php echo $id; ?>)">Update</button></td>
            </tr>
            <?php $total += $item['price'] * $item['quantity']; ?>
        <?php endforeach; ?>
    </table>
    
    <h3>Grand Total: $<?php echo number_format($total, 2); ?></h3>
    <p><a href="checkout.php">Proceed to Checkout</a></p>
    <p><a href="products.php">Continue Shopping</a></p>

    <script>
        function updateCart(productId) {
            var quantity = prompt("Enter new quantity:", "1");
            if (quantity > 0) {
                window.location.href = 'update_cart.php?id=' + productId + '&quantity=' + quantity;
            }
        }
    </script>
<?php } ?>
</body>
</html>


<?php
session_start();

if (!isset($_GET['id'])) {
    die("Product ID not specified.");
}

$product_id = $_GET['id'];

// Remove the product from the cart
unset($_SESSION['cart'][$product_id]);

header("Location: view_cart.php");
exit();


<?php
session_start();

if (!isset($_GET['id']) || !isset($_GET['quantity'])) {
    die("Invalid request.");
}

$product_id = $_GET['id'];
$quantity = $_GET['quantity'];

// Validate quantity
if ($quantity < 1) {
    header("Location: view_cart.php");
    exit();
}

// Update the cart
if (isset($_SESSION['cart'][$product_id])) {
    if ($quantity == 0) {
        unset($_SESSION['cart'][$product_id]);
    } else {
        $_SESSION['cart'][$product_id]['quantity'] = $quantity;
    }
}

header("Location: view_cart.php");
exit();


<?php
session_start();

if (!isset($_SESSION['cart']) || count($_SESSION['cart']) == 0) {
    header("Location: products.php");
    exit();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
</head>
<body>
    <h2>Checkout</h2>
    
    <!-- Payment and Shipping Information -->
    <form action="process_payment.php" method="post">
        <table>
            <tr>
                <td>Name:</td>
                <td><input type="text" name="name" required></td>
            </tr>
            <tr>
                <td>Email:</td>
                <td><input type="email" name="email" required></td>
            </tr>
            <tr>
                <td>Address:</td>
                <td><textarea name="address" rows="3" required></textarea></td>
            </tr>
            <tr>
                <td>Payment Method:</td>
                <td>
                    <select name="payment_method">
                        <option value="credit_card">Credit Card</option>
                        <option value="paypal">PayPal</option>
                    </select>
                </td>
            </tr>
        </table>

        <input type="submit" value="Place Order">
    </form>
</body>
</html>


<?php
session_start();

// Check if the cart is empty
if (!isset($_SESSION['cart']) || count($_SESSION['cart']) == 0) {
    header("Location: products.php");
    exit();
}

// Process payment here (this is just a placeholder)
echo "Processing your payment...<br>";
print_r($_POST);
print_r($_SESSION['cart']);

// After successful payment, clear the cart
unset($_SESSION['cart']);
header("Location: thank_you.php");
exit();


<!DOCTYPE html>
<html>
<head>
    <title>Thank You</title>
</head>
<body>
    <h2>Thank You for Your Purchase!</h2>
    <p>Your order has been successfully processed.</p>
    <p><a href="products.php">Continue Shopping</a></p>
</body>
</html>


<?php
// Connect to database
$host = "localhost";
$user = "root";
$password = "";
$dbname = "my_store";

$conn = new mysqli($host, $user, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Query to get all products
$sql = "SELECT * FROM products";
$result = $conn->query($sql);

?>

<!DOCTYPE html>
<html>
<head>
    <title>Store</title>
</head>
<body>
    <?php while ($row = $result->fetch_assoc()) { ?>
        <div class="product">
            <h2><?php echo $row['name']; ?></h2>
            <p><?php echo $row['description']; ?></p>
            <p>Price: <?php echo $row['price']; ?></p>
            <a href="product.php?id=<?php echo $row['id']; ?>">View Details</a>
        </div>
    <?php } ?>

<?php
// Close database connection
$conn->close();
?>


<?php
session_start();

// Connect to database
$host = "localhost";
$user = "root";
$password = "";
$dbname = "my_store";

$conn = new mysqli($host, $user, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Get product details
$id = $_GET['id'];
$sql = "SELECT * FROM products WHERE id = ?";
$stmt = $conn->prepare($sql);
$stmt->bind_param("i", $id);
$stmt->execute();
$result = $stmt->get_result();

if ($result->num_rows > 0) {
    $product = $result->fetch_assoc();
} else {
    die("Product not found.");
}

?>

<!DOCTYPE html>
<html>
<head>
    <title><?php echo $product['name']; ?></title>
</head>
<body>
    <h1><?php echo $product['name']; ?></h1>
    <p><?php echo $product['description']; ?></p>
    <p>Price: <?php echo $product['price']; ?></p>
    <form action="add_to_cart.php" method="post">
        <input type="hidden" name="id" value="<?php echo $product['id']; ?>">
        <input type="number" name="quantity" min="1" max="<?php echo $product['quantity']; ?>" placeholder="Enter quantity">
        <button type="submit">Add to Cart</button>
    </form>
    <a href="index.php">Back to Store</a>

<?php
// Close database connection
$conn->close();
?>


<?php
session_start();

if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Get product details
$id = $_POST['id'];
$quantity = $_POST['quantity'];

// Connect to database
$host = "localhost";
$user = "root";
$password = "";
$dbname = "my_store";

$conn = new mysqli($host, $user, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

$sql = "SELECT * FROM products WHERE id = ?";
$stmt = $conn->prepare($sql);
$stmt->bind_param("i", $id);
$stmt->execute();
$result = $stmt->get_result();

if ($result->num_rows > 0) {
    $product = $result->fetch_assoc();
    
    if ($quantity > $product['quantity']) {
        die("Sorry, we don't have that many of this product.");
    }
    
    if (isset($_SESSION['cart'][$id])) {
        $_SESSION['cart'][$id]['quantity'] += $quantity;
    } else {
        $_SESSION['cart'][$id] = array(
            'name' => $product['name'],
            'price' => $product['price'],
            'quantity' => $quantity
        );
    }
    
    header("Location: cart.php");
} else {
    die("Product not found.");
}

// Close database connection
$conn->close();
?>


<?php
session_start();

?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <?php if (!empty($_SESSION['cart'])) { ?>
        <h1>Your Shopping Cart</h1>
        <form action="update_cart.php" method="post">
            <?php foreach ($_SESSION['cart'] as $id => $item) { ?>
                <div class="cart-item">
                    <p><?php echo $item['name']; ?></p>
                    <p>Price: <?php echo $item['price']; ?></p>
                    <input type="number" name="<?php echo $id; ?>" min="1" value="<?php echo $item['quantity']; ?>">
                    <a href="remove_from_cart.php?id=<?php echo $id; ?>">Remove</a>
                </div>
            <?php } ?>
            <button type="submit">Update Cart</button>
        </form>
        <h2>Total: <?php echo calculate_total(); ?></h2>
        <a href="checkout.php">Checkout</a>
    <?php } else { ?>
        <p>Your cart is empty.</p>
        <a href="index.php">Back to Store</a>
    <?php } ?>

<?php
function calculate_total() {
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += $item['price'] * $item['quantity'];
    }
    return $total;
}
?>


<?php
session_start();

foreach ($_POST as $id => $quantity) {
    if (!empty($quantity)) {
        $_SESSION['cart'][$id]['quantity'] = $quantity;
    } else {
        unset($_SESSION['cart'][$id]);
    }
}

header("Location: cart.php");
?>


<?php
session_start();

$id = $_GET['id'];
unset($_SESSION['cart'][$id]);

header("Location: cart.php");
?>


<?php
session_start();

// Process order here...

?>

<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
</head>
<body>
    <?php if (!empty($_SESSION['cart'])) { ?>
        <h1>Order Summary</h1>
        <p>Total Amount: <?php echo calculate_total(); ?></p>
        
        <!-- Payment form -->
        <form action="process_order.php" method="post">
            <input type="text" name="card_number" placeholder="Card Number">
            <input type="text" name="card_name" placeholder="Name on Card">
            <input type="text" name="expiration_date" placeholder="Expiration Date">
            <input type="text" name="cvv" placeholder="CVV">
            <button type="submit">Place Order</button>
        </form>
    <?php } else { ?>
        <p>Your cart is empty.</p>
        <a href="index.php">Back to Store</a>
    <?php } ?>

<?php
function calculate_total() {
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += $item['price'] * $item['quantity'];
    }
    return $total;
}
?>


<?php
session_start();

// Here you would typically process the payment and save the order to the database

// For this example, we'll just clear the cart and show a confirmation message
$_SESSION['cart'] = array();

header("Location: thank_you.php");
?>


<?php
session_start();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Thank You</title>
</head>
<body>
    <h1>Thank you for your order!</h1>
    <p>Your order has been processed successfully.</p>
    <a href="index.php">Continue Shopping</a>
</body>
</html>


<?php
// Include necessary files
include('database.php');
include('session.php');

// Check if user is logged in
if (!isset($_SESSION['user_id'])) {
    header("Location: login.php?error=Please%20login%20to%20continue.");
    exit();
}

// Get product details
$product_id = isset($_GET['product_id']) ? intval($_GET['product_id']) : 0;

$stmt = $conn->prepare("SELECT * FROM products WHERE id = ?");
$stmt->bind_param('i', $product_id);
$stmt->execute();
$result = $stmt->get_result();

if ($result->num_rows == 0) {
    header("Location: index.php?error=Product%20not%20found.");
    exit();
}

$product = $result->fetch_assoc();

// Handle purchase
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    $quantity = isset($_POST['quantity']) ? intval($_POST['quantity']) : 1;
    
    // Calculate total price
    $total_price = number_format($product['price'] * $quantity, 2);
    
    // Payment processing
    $payment_method = $_POST['payment_method'];
    if (process_payment($payment_method, $total_price)) {
        // Insert order into database
        $order_query = "INSERT INTO orders (user_id, product_id, quantity, total_price, purchase_date) 
                        VALUES (?, ?, ?, ?, NOW())";
        
        $stmt_order = $conn->prepare($order_query);
        $stmt_order->bind_param('iidi', $_SESSION['user_id'], $product_id, $quantity, $total_price);
        
        if ($stmt_order->execute()) {
            // Deduct quantity from product stock
            $update_stock = "UPDATE products SET stock = stock - ? WHERE id = ?";
            $stmt_update = $conn->prepare($update_stock);
            $stmt_update->bind_param('ii', $quantity, $product_id);
            
            if ($stmt_update->execute()) {
                header("Location: success.php?message=Purchase%20successful.");
                exit();
            } else {
                // Error deducting stock
                echo "Error updating stock.";
                exit();
            }
        } else {
            // Order insertion failed
            echo "Order could not be processed.";
            exit();
        }
    } else {
        // Payment processing failed
        header("Location: index.php?error=Payment%20failed.");
        exit();
    }
}

// Close database connections
$stmt->close();
$conn->close();

function process_payment($payment_method, $amount) {
    // Implement actual payment processing logic here
    // This is just a placeholder for demonstration
    return true;
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Purchase Product</title>
</head>
<body>
    <h1>Confirm Purchase</h1>
    <form method="POST">
        <p><strong>Product:</strong> <?php echo $product['name']; ?></p>
        <p><strong>Price:</strong> <?php echo "$" . number_format($product['price'], 2); ?></p>
        <p><strong>Stock Available:</strong> <?php echo $product['stock']; ?></p>
        
        <label for="quantity">Quantity:</label>
        <input type="number" id="quantity" name="quantity" min="1" max="<?php echo $product['stock']; ?>" value="1">
        
        <h3>Payment Method</h3>
        <input type="radio" name="payment_method" value="credit_card"> Credit Card<br>
        <input type="radio" name="payment_method" value="paypal"> PayPal<br>
        <input type="radio" name="payment_method" value="bank_transfer"> Bank Transfer
        
        <br><br>
        <button type="submit">Purchase</button>
    </form>
</body>
</html>


<?php
session_start();
include('db_connection.php');

// Get all products from database
$query = "SELECT * FROM products";
$result = $conn->query($query);

if ($result->num_rows > 0) {
    while ($row = $result->fetch_assoc()) {
        echo '<div class="product">';
        echo '<h3>' . $row['product_name'] . '</h3>';
        echo '<p>' . $row['description'] . '</p>';
        echo '<p>Price: $' . number_format($row['price'], 2) . '</p>';
        echo '<form action="add_to_cart.php" method="post">';
        echo '<input type="hidden" name="product_id" value="' . $row['id'] . '">';
        echo '<input type="number" name="quantity" min="1" max="' . $row['stock'] . '" value="1">';
        echo '<button type="submit">Add to Cart</button>';
        echo '</form>';
        echo '</div>';
    }
} else {
    echo "No products available";
}
$conn->close();
?>


<?php
session_start();
include('db_connection.php');

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $product_id = $_POST['product_id'];
    $quantity = $_POST['quantity'];

    // Get product details from database
    $query = "SELECT * FROM products WHERE id = ?";
    $stmt = $conn->prepare($query);
    $stmt->bind_param("i", $product_id);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        $product = $result->fetch_assoc();

        // Check if product already exists in cart
        $cart_item = array(
            'id' => $product['id'],
            'name' => $product['product_name'],
            'price' => $product['price'],
            'quantity' => $quantity
        );

        if (isset($_SESSION['cart'])) {
            $found = false;
            foreach ($_SESSION['cart'] as &$item) {
                if ($item['id'] == $product_id) {
                    // Update quantity
                    $item['quantity'] += $quantity;
                    $found = true;
                    break;
                }
            }
            if (!$found) {
                array_push($_SESSION['cart'], $cart_item);
            }
        } else {
            $_SESSION['cart'] = array($cart_item);
        }

        header("Location: cart.php");
        exit();
    }
}

$conn->close();
?>


<?php
session_start();
include('db_connection.php');

if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

$cart_items = $_SESSION['cart'];
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <?php if (count($cart_items) > 0): ?>
        <h1>Your Shopping Cart</h1>
        <table border="1">
            <tr>
                <th>Product Name</th>
                <th>Price</th>
                <th>Quantity</th>
                <th>Total</th>
                <th>Action</th>
            </tr>
            <?php foreach ($cart_items as $item): ?>
                <tr>
                    <td><?php echo $item['name']; ?></td>
                    <td>$<?php echo number_format($item['price'], 2); ?></td>
                    <td>
                        <form action="update_cart.php" method="post">
                            <input type="hidden" name="product_id" value="<?php echo $item['id']; ?>">
                            <input type="number" name="quantity" min="1" value="<?php echo $item['quantity']; ?>" style="width: 50px;">
                            <button type="submit">Update</button>
                        </form>
                    </td>
                    <td>$<?php echo number_format($item['price'] * $item['quantity'], 2); ?></td>
                    <td><a href="delete_from_cart.php?product_id=<?php echo $item['id']; ?>">Delete</a></td>
                </tr>
            <?php endforeach; ?>
        </table>

        <h3>Total: $<?php 
            $total = 0;
            foreach ($cart_items as $item) {
                $total += $item['price'] * $item['quantity'];
            }
            echo number_format($total, 2);
        ?></h3>
        
        <?php if (isset($_SESSION['user_id'])): ?>
            <form action="order.php" method="post">
                <button type="submit">Order Now</button>
            </form>
        <?php else: ?>
            <p>Please login to place an order.</p>
            <a href="login.php">Login</a> | <a href="register.php">Register</a>
        <?php endif; ?>

    <?php else: ?>
        <h1>Your cart is empty!</h1>
    <?php endif; ?>

    <br><br>
    <a href="index.php">Continue Shopping</a>
</body>
</html>

<?php
$conn->close();
?>


<?php
session_start();
include('db_connection.php');

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $product_id = $_POST['product_id'];
    $quantity = $_POST['quantity'];

    // Validate quantity is a positive integer
    if (is_numeric($quantity) && (int)$quantity > 0) {
        foreach ($_SESSION['cart'] as &$item) {
            if ($item['id'] == $product_id) {
                $item['quantity'] = $quantity;
                break;
            }
        }
    }

    header("Location: cart.php");
    exit();
}

$conn->close();
?>


<?php
session_start();
include('db_connection.php');

if (isset($_GET['product_id'])) {
    $product_id = $_GET['product_id'];
    
    // Remove item from cart
    foreach ($_SESSION['cart'] as $key => $item) {
        if ($item['id'] == $product_id) {
            unset($_SESSION['cart'][$key]);
            break;
        }
    }

    header("Location: cart.php");
    exit();
}

$conn->close();
?>


<?php
session_start();
include('db_connection.php');

if (isset($_SESSION['user_id']) && isset($_SESSION['cart'])) {
    $user_id = $_SESSION['user_id'];
    $cart_items = $_SESSION['cart'];

    // Insert each cart item into orders table
    foreach ($cart_items as $item) {
        $query = "INSERT INTO orders (user_id, product_details, quantity, price) VALUES (?, ?, ?, ?)";
        $stmt = $conn->prepare($query);
        $stmt->bind_param("isii", $user_id, serialize($item), $item['quantity'], $item['price']);
        if (!$stmt->execute()) {
            die('Error: ' . $stmt->error);
        }
    }

    // Clear the cart
    unset($_SESSION['cart']);

    echo "Order placed successfully!";
} else {
    echo "You need to login and have items in your cart to place an order.";
}

$conn->close();
?>


<?php
session_start();
include('db_connection.php');

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $name = $_POST['name'];
    $email = $_POST['email'];
    $password = password_hash($_POST['password'], PASSWORD_DEFAULT);
    $phone = $_POST['phone'];

    $query = "INSERT INTO users (name, email, password_hash, phone) VALUES (?, ?, ?, ?)";
    $stmt = $conn->prepare($query);
    $stmt->bind_param("ssss", $name, $email, $password, $phone);

    if ($stmt->execute()) {
        echo "Registration successful! Please login.";
        header("Location: login.php");
        exit();
    } else {
        die('Error: ' . $stmt->error);
    }
}

$conn->close();
?>


<?php
session_start();
include('db_connection.php');

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = $_POST['email'];
    $password = $_POST['password'];

    $query = "SELECT * FROM users WHERE email = ?";
    $stmt = $conn->prepare($query);
    $stmt->bind_param("s", $email);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows == 1) {
        $user = $result->fetch_assoc();
        if (password_verify($password, $user['password_hash'])) {
            $_SESSION['user_id'] = $user['id'];
            $_SESSION['email'] = $user['email'];
            header("Location: cart.php");
            exit();
        }
    }

    echo "Invalid email or password!";
}

$conn->close();
?>


<?php
session_start();
unset($_SESSION['user_id']);
unset($_SESSION['email']);
header("Location: index.html");
exit();
?>


<?php
$servername = "localhost";
$username = "root";
$password = "";
$dbname = "shopping_cart";

// Create connection
$conn = new mysqli($servername, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}
?>


<?php
session_start();

// Products array (example data)
$products = [
    1 => [
        'name' => 'Product 1',
        'description' => 'Description for Product 1',
        'price' => 19.99,
    ],
    2 => [
        'name' => 'Product 2',
        'description' => 'Description for Product 2',
        'price' => 29.99,
    ],
];

// Check if form is submitted
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    try {
        // Validate and sanitize input data
        $productId = filter_var($_POST['product_id'], FILTER_VALIDATE_INT);
        $quantity = filter_var($_POST['quantity'], FILTER_VALIDATE_INT);

        if (!$productId || !$quantity) {
            throw new Exception('Invalid product ID or quantity');
        }

        // Check if product exists
        if (!isset($products[$productId])) {
            throw new Exception('Product not found');
        }

        $product = $products[$productId];
        
        // Calculate total price
        $totalPrice = $product['price'] * $quantity;

        // Process payment (example logic)
        // Here you would typically integrate with a payment gateway

        // For this example, we'll just display the purchase confirmation
        $_SESSION['purchase_confirmation'] = [
            'product_name' => $product['name'],
            'quantity' => $quantity,
            'total_price' => $totalPrice,
        ];

        header('Location: purchaseconfirmation.php');
        exit;
    } catch (Exception $e) {
        // Display error message
        $_SESSION['error'] = $e->getMessage();
        header('Location: index.php');
        exit;
    }
}

// Display product selection form
?>

<!DOCTYPE html>
<html>
<head>
    <title>Purchase Product</title>
</head>
<body>
    <?php if (isset($_SESSION['error'])) { ?>
        <div style="color: red;"><?php echo $_SESSION['error']; ?></div>
        <?php unset($_SESSION['error']); ?>
    <?php } ?>

    <h1>Select a Product to Purchase</h1>
    
    <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
        <input type="hidden" name="_token" value="<?php echo session_id(); ?>">

        <div>
            <select name="product_id">
                <?php foreach ($products as $id => $product) { ?>
                    <option value="<?php echo $id; ?>"><?php echo $product['name']; ?></option>
                <?php } ?>
            </select>
        </div>

        <div>
            <input type="number" name="quantity" min="1" placeholder="Quantity" required>
        </div>

        <button type="submit">Purchase</button>
    </form>
</body>
</html>


<?php
// Assuming $products is an array of product data or fetched from the database.
foreach ($products as $product) {
    echo "<div class='product'>";
    echo "<img src='" . htmlspecialchars($product['image']) . "' alt='" . htmlspecialchars($product['name']) . "'>";
    echo "<h3>" . htmlspecialchars($product['name']) . "</h3>";
    echo "<p>" . htmlspecialchars($product['description']) . "</p>";
    echo "<p>Price: $" . number_format($product['price'], 2) . "</p>";
    echo "<form action='add_to_cart.php' method='post'>";
    echo "<input type='hidden' name='id' value='" . $product['id'] . "'>";
    echo "<input type='number' name='quantity' min='1' value='1'>";
    echo "<button type='submit'>Add to Cart</button>";
    echo "</form>";
    echo "</div>";
}
?>


<?php
session_start();

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $product_id = intval($_POST['id']);
    $quantity = intval($_POST['quantity']);

    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }

    // Check if product exists in cart
    if (array_key_exists($product_id, $_SESSION['cart'])) {
        $_SESSION['cart'][$product_id]['quantity'] += $quantity;
    } else {
        // Fetch product details from database or predefined array
        $products = array(
            1 => array('name' => 'Product 1', 'price' => 29.99),
            2 => array('name' => 'Product 2', 'price' => 49.99)
            // Add more products as needed
        );
        
        if (isset($products[$product_id])) {
            $product = $products[$product_id];
            $_SESSION['cart'][$product_id] = array(
                'id' => $product_id,
                'name' => $product['name'],
                'price' => $product['price'],
                'quantity' => $quantity
            );
        }
    }

    header("Location: cart.php");
    exit();
}
?>


<?php
session_start();

$total = 0;
$taxRate = 0.08; // 8% tax

if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

foreach ($_SESSION['cart'] as $item) {
    $subtotal = $item['price'] * $item['quantity'];
    echo "<div class='cart-item'>";
    echo "<h3>" . htmlspecialchars($item['name']) . "</h3>";
    echo "<p>Quantity: " . $item['quantity'] . "</p>";
    echo "<p>Price: $" . number_format($item['price'], 2) . "</p>";
    echo "<p>Subtotal: $" . number_format($subtotal, 2) . "</p>";
    echo "<form action='remove_from_cart.php' method='post'>";
    echo "<input type='hidden' name='id' value='" . $item['id'] . "'>";
    echo "<button type='submit'>Remove</button>";
    echo "</form>";
    echo "</div>";
    
    $total += $subtotal;
}

$tax = $total * $taxRate;
$totalWithTax = $total + $tax;

echo "<div class='cart-total'>";
echo "<p>Subtotal: $" . number_format($total, 2) . "</p>";
echo "<p>Tax: $" . number_format($tax, 2) . "</p>";
echo "<p>Total: $" . number_format($totalWithTax, 2) . "</p>";
echo "</div>";

if (!empty($_SESSION['cart'])) {
    echo "<a href='checkout.php' class='checkout-button'>Checkout</a>";
} else {
    echo "<p>Your cart is empty.</p>";
}
?>


<?php
session_start();

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $product_id = intval($_POST['id']);
    
    if (isset($_SESSION['cart'][$product_id])) {
        unset($_SESSION['cart'][$product_id]);
        $_SESSION['cart'] = array_values($_SESSION['cart']); // Re-index the array
    }
    
    header("Location: cart.php");
    exit();
}
?>


<?php
session_start();

if (!isset($_SESSION['cart']) || empty($_SESSION['cart'])) {
    header("Location: products.php");
    exit();
}

// Initialize variables for order details
$orderName = '';
$orderEmail = '';
$orderAddress = '';
$errors = array();

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $orderName = htmlspecialchars(trim($_POST['name']));
    $orderEmail = htmlspecialchars(trim($_POST['email']));
    $orderAddress = htmlspecialchars(trim($_POST['address']));
    
    // Basic validation
    if (empty($orderName)) {
        $errors[] = "Please enter your name.";
    }
    if (empty($orderEmail) || !filter_var($orderEmail, FILTER_VALIDATE_EMAIL)) {
        $errors[] = "Please enter a valid email address.";
    }
    if (empty($orderAddress)) {
        $errors[] = "Please enter your shipping address.";
    }
    
    if (empty($errors)) {
        // Process the order
        require_once('database.php');
        
        $totalAmount = calculateTotal();
        $taxRate = 0.08;
        $subTotal = $totalAmount / (1 + $taxRate);
        $taxAmount = $totalAmount - $subTotal;
        
        try {
            // Insert order into database
            $stmt = $pdo->prepare("INSERT INTO orders (name, email, address, subtotal, tax, total) 
                                 VALUES (?, ?, ?, ?, ?, ?)");
            $stmt->execute([$orderName, $orderEmail, $orderAddress, $subTotal, $taxAmount, $totalAmount]);
            $orderId = $pdo->lastInsertId();
            
            // Insert order items
            foreach ($_SESSION['cart'] as $item) {
                $stmt = $pdo->prepare("INSERT INTO order_items (order_id, product_id, name, price, quantity)
                                     VALUES (?, ?, ?, ?, ?)");
                $stmt->execute([$orderId, $item['id'], $item['name'], $item['price'], $item['quantity']]);
            }
            
            // Clear cart
            unset($_SESSION['cart']);
            
            header("Location: confirmation.php?order_id=$orderId");
            exit();
        } catch (PDOException $e) {
            die("Error processing your order: " . $e->getMessage());
        }
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
</head>
<body>
    <?php if (!empty($errors)): ?>
        <div class="error">
            <?php foreach ($errors as $error): ?>
                <p><?php echo $error; ?></p>
            <?php endforeach; ?>
        </div>
    <?php endif; ?>

    <h1>Checkout</h1>
    <form method="post" action="<?php echo htmlspecialchars($_SERVER['PHP_SELF']); ?>">
        <label for="name">Name:</label>
        <input type="text" id="name" name="name" value="<?php echo $orderName; ?>" required>

        <label for="email">Email:</label>
        <input type="email" id="email" name="email" value="<?php echo $orderEmail; ?>" required>

        <label for="address">Shipping Address:</label>
        <textarea id="address" name="address"><?php echo $orderAddress; ?></textarea>

        <button type="submit">Place Order</button>
    </form>
</body>
</html>


<?php
session_start();

$orderId = isset($_GET['order_id']) ? intval($_GET['order_id']) : null;

if (!$orderId) {
    header("Location: products.php");
    exit();
}

// Fetch order details from database
require_once('database.php');

try {
    $stmt = $pdo->prepare("SELECT * FROM orders WHERE id = ?");
    $stmt->execute([$orderId]);
    $order = $stmt->fetch(PDO::FETCH_ASSOC);
    
    if (!$order) {
        die("Invalid order ID.");
    }
} catch (PDOException $e) {
    die("Error fetching order: " . $e->getMessage());
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Order Confirmation</title>
</head>
<body>
    <h1>Your Order has been Placed!</h1>
    <p>Order ID: <?php echo $order['id']; ?></p>
    <p>Name: <?php echo htmlspecialchars($order['name']); ?></p>
    <p>Email: <?php echo htmlspecialchars($order['email']); ?></p>
    <p>Address: <?php echo nl2br(htmlspecialchars($order['address'])); ?></p>
    <p>Subtotal: $<?php echo number_format($order['subtotal'], 2); ?></p>
    <p>Tax: $<?php echo number_format($order['tax'], 2); ?></p>
    <p>Total: $<?php echo number_format($order['total'], 2); ?></p>
    <a href="products.php">Continue Shopping</a>
</body>
</html>


<?php
$host = 'localhost';
$user = 'root';
$password = '';
$dbname = 'purchase_db';

// Connect to the database
$conn = new mysqli($host, $user, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}
?>


<?php
session_start();
include 'db_connection.php';

if (isset($_POST['register'])) {
    $name = $_POST['name'];
    $email = $_POST['email'];
    $password = password_hash($_POST['password'], PASSWORD_DEFAULT);
    $phone = $_POST['phone'];

    // Sanitize inputs
    $name = mysqli_real_escape_string($conn, $name);
    $email = mysqli_real_escape_string($conn, $email);
    $phone = mysqli_real_escape_string($conn, $phone);

    // Insert into database
    $sql = "INSERT INTO users (name, email, password_hash, phone) VALUES ('$name', '$email', '$password', '$phone')";
    
    if ($conn->query($sql)) {
        $_SESSION['message'] = "Registration successful! You can now login.";
        header("Location: login.php");
    } else {
        echo "Error: " . $sql . "<br>" . $conn->error;
    }
}
?>


<?php
session_start();
include 'db_connection.php';

if (isset($_POST['login'])) {
    $email = $_POST['email'];
    $password = $_POST['password'];

    // Sanitize inputs
    $email = mysqli_real_escape_string($conn, $email);

    // Check if user exists
    $sql = "SELECT * FROM users WHERE email = '$email'";
    $result = $conn->query($sql);

    if ($result->num_rows > 0) {
        $row = $result->fetch_assoc();
        if (password_verify($password, $row['password_hash'])) {
            // Start session
            $_SESSION['id'] = $row['id'];
            $_SESSION['name'] = $row['name'];
            $_SESSION['email'] = $row['email'];
            header("Location: dashboard.php");
        } else {
            echo "Invalid password";
        }
    } else {
        echo "User does not exist";
    }
}
?>


<?php
session_start();
include 'db_connection.php';

if (isset($_POST['purchase'])) {
    // Check if user is logged in
    if (!isset($_SESSION['id'])) {
        die("Please login to make a purchase");
    }

    $product = $_POST['product'];
    $price = $_POST['price'];
    $quantity = $_POST['quantity'];
    $total = $price * $quantity;
    $payment_method = $_POST['payment_method'];
    $date = date('Y-m-d H:i:s');
    $user_id = $_SESSION['id'];

    // Insert into database
    $sql = "INSERT INTO orders (product, price, quantity, total, payment_method, date, user_id) 
            VALUES ('$product', '$price', '$quantity', '$total', '$payment_method', '$date', '$user_id')";
    
    if ($conn->query($sql)) {
        echo "Purchase successful!";
    } else {
        echo "Error: " . $sql . "<br>" . $conn->error;
    }
}
?>


<?php
session_start();
include 'db_connection.php';

if (!isset($_SESSION['id'])) {
    die("Please login first");
}

$user_id = $_SESSION['id'];

// Get orders for this user
$sql = "SELECT * FROM orders WHERE user_id = $user_id";
$result = $conn->query($sql);

echo "<h2>Your Orders</h2>";
if ($result->num_rows > 0) {
    while ($row = $result->fetch_assoc()) {
        echo "<div>";
        echo "Product: " . $row['product'] . "<br>";
        echo "Price: $" . $row['price'] . "<br>";
        echo "Quantity: " . $row['quantity'] . "<br>";
        echo "Total: $" . $row['total'] . "<br>";
        echo "Payment Method: " . $row['payment_method'] . "<br>";
        echo "Date: " . $row['date'] . "<br>";
        echo "</div><hr>";
    }
} else {
    echo "No orders found";
}
?>


<?php
session_start();
unset($_SESSION['id']);
unset($_SESSION['name']);
unset($_SESSION['email']);
header("Location: login.php");
?>


// Registration script
$username = $_POST['username'];
$email = $_POST['email'];
$password = password_hash($_POST['password'], PASSWORD_DEFAULT);

$sql = "INSERT INTO users (username, email, password_hash) VALUES (?, ?, ?)";
$stmt = $pdo->prepare($sql);
$stmt->execute([$username, $email, $password]);


// Login script
$email = $_POST['email'];
$password = $_POST['password'];

$sql = "SELECT * FROM users WHERE email = ?";
$stmt = $pdo->prepare($sql);
$stmt->execute([$email]);
$user = $stmt->fetch();

if (password_verify($password, $user['password_hash'])) {
    session_start();
    $_SESSION['user'] = $user;
    header("Location: index.php");
}


<?php require_once 'includes/db.php'; ?>

<!DOCTYPE html>
<html>
<head>
    <title>Product Catalog</title>
</head>
<body>
    <?php if (isset($_SESSION['user'])) { ?>
        <h2>Welcome, <?=$_SESSION['user']['username']?></h2>
    <?php } else { ?>
        <a href="login.php">Login</a> | <a href="register.php">Register</a>
    <?php } ?>

    <h1>Products</h1>
    <?php
    $sql = "SELECT * FROM products";
    $stmt = $pdo->query($sql);
    while ($product = $stmt->fetch()) {
        echo "<div>";
        echo "<h3>{$product['name']}</h3>";
        echo "<p>Description: {$product['description']}</p>";
        echo "<p>Price: \${$product['price']}</p>";
        if ($product['stock'] > 0) {
            echo "<a href='cart.php?action=add&id={$product['id']}'>Add to Cart</a>";
        } else {
            echo "Out of stock";
        }
        echo "</div><br />";
    }
    ?>
</body>
</html>


session_start();

if (isset($_GET['action']) && $_GET['action'] == 'add' && isset($_GET['id'])) {
    $product_id = $_GET['id'];
    // Add to cart logic
}

// Display cart contents


session_start();

if (isset($_POST['submit'])) {
    // Process shipping info
    $email = $_SESSION['user']['email'];
    $total_amount = calculateTotal();
    
    // Simulate payment approval
    if (true) { // Replace with actual payment logic
        // Insert order into database
        $sql = "INSERT INTO orders (user_id, total_amount) VALUES (?, ?)";
        $stmt = $pdo->prepare($sql);
        $order_id = $stmt->execute([$_SESSION['user']['id'], $total_amount]) ? $pdo->lastInsertId() : false;

        if ($order_id) {
            // Insert order details
            foreach ($_SESSION['cart'] as $item) {
                $sql = "INSERT INTO order_details (order_id, product_id, quantity, price) VALUES (?, ?, ?, ?)";
                $stmt = $pdo->prepare($sql);
                $stmt->execute([$order_id, $item['id'], $item['quantity'], $item['price']]);
            }
        }

        // Clear cart
        unset($_SESSION['cart']);
        header("Location: order_confirmation.php");
    } else {
        // Handle payment failure
        echo "Payment failed. Please try again.";
    }
}


session_start();

// Retrieve last order details
$sql = "SELECT * FROM orders WHERE user_id = ? ORDER BY id DESC LIMIT 1";
$stmt = $pdo->prepare($sql);
$stmt->execute([$_SESSION['user']['id']]);
$order = $stmt->fetch();

if ($order) {
    // Display confirmation message
    echo "<h2>Order Confirmation</h2>";
    echo "Order ID: {$order['id']}<br />";
    echo "Total Amount: \${$order['total_amount']}";
    
    // Simulate email sending
    $to = $_SESSION['user']['email'];
    $subject = "Thank you for your purchase!";
    $message = "Your order has been received.";
    // mail($to, $subject, $message);
}


// logout.php
session_start();
unset($_SESSION['user']);
session_destroy();
header("Location: index.php");


// config.php - Database configuration
<?php
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'root';
$password = '';

$conn = new mysqli($host, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}
?>

// product_class.php
<?php
class Product {
    private $id;
    private $name;
    private $price;
    private $description;
    private $stock;

    public function __construct($id, $name, $price, $description, $stock) {
        $this->id = $id;
        $this->name = $name;
        $this->price = $price;
        $this->description = $description;
        $this->stock = $stock;
    }

    public function getId() {
        return $this->id;
    }

    public function getName() {
        return $this->name;
    }

    public function getPrice() {
        return $this->price;
    }

    public function getDescription() {
        return $this->description;
    }

    public function getStock() {
        return $this->stock;
    }

    public static function getAllProducts($conn) {
        $stmt = $conn->prepare("SELECT * FROM products");
        $stmt->execute();
        $result = $stmt->get_result();
        
        $products = array();
        while ($row = $result->fetch_assoc()) {
            $product = new Product(
                $row['id'],
                $row['name'],
                $row['price'],
                $row['description'],
                $row['stock']
            );
            array_push($products, $product);
        }
        return $products;
    }

    public static function getProductById($conn, $id) {
        $stmt = $conn->prepare("SELECT * FROM products WHERE id = ?");
        $stmt->bind_param("i", $id);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($row = $result->fetch_assoc()) {
            return new Product(
                $row['id'],
                $row['name'],
                $row['price'],
                $row['description'],
                $row['stock']
            );
        } else {
            return null;
        }
    }

    public function addToCart($conn, $userId) {
        // Add to cart logic
    }

    public static function removeFromCart($conn, $cartId) {
        // Remove from cart logic
    }

    public static function updateCartQuantity($conn, $cartId, $quantity) {
        // Update quantity in cart logic
    }
}
?>

// order_class.php
<?php
class Order {
    private $id;
    private $user_name;
    private $email;
    private $address;
    private $product_id;
    private $quantity;
    private $total;
    private $order_date;

    public function __construct($id, $user_name, $email, $address, $product_id, $quantity, $total, $order_date) {
        $this->id = $id;
        $this->user_name = $user_name;
        $this->email = $email;
        $this->address = $address;
        $this->product_id = $product_id;
        $this->quantity = $quantity;
        $this->total = $total;
        $this->order_date = $order_date;
    }

    public function getId() {
        return $this->id;
    }

    public function getUser_name() {
        return $this->user_name;
    }

    public function getEmail() {
        return $this->email;
    }

    public function getAddress() {
        return $this->address;
    }

    public function getProduct_id() {
        return $this->product_id;
    }

    public function getQuantity() {
        return $this->quantity;
    }

    public function getTotal() {
        return $this->total;
    }

    public function getOrder_date() {
        return $this->order_date;
    }

    public static function placeOrder($conn, $user_name, $email, $address, $product_id, $quantity) {
        $subtotal = Product::getProductById($conn, $product_id)->getPrice() * $quantity;

        $stmt = $conn->prepare("INSERT INTO orders (user_name, email, address, product_id, quantity, total, order_date) VALUES (?, ?, ?, ?, ?, ?, NOW())");
        $stmt->bind_param("ssisdd", $user_name, $email, $address, $product_id, $quantity, $subtotal);
        if ($stmt->execute()) {
            // Update product stock
            Product::updateStock($conn, $product_id, $quantity);
            return true;
        } else {
            return false;
        }
    }

    public static function updateStock($conn, $id, $quantity) {
        $current_stock = Product::getProductById($conn, $id)->getStock();
        if ($current_stock >= $quantity) {
            $new_stock = $current_stock - $quantity;
            $stmt = $conn->prepare("UPDATE products SET stock = ? WHERE id = ?");
            $stmt->bind_param("ii", $new_stock, $id);
            return $stmt->execute();
        } else {
            return false;
        }
    }

    public static function getAllOrders($conn) {
        // Get all orders logic
    }

    public static function getOrderById($conn, $id) {
        // Get order by id logic
    }
}
?>

// cart_class.php
<?php
session_start();

class Cart {
    private $cart_id;
    private $product_id;
    private $user_id;
    private $quantity;

    public function __construct($cart_id, $product_id, $user_id, $quantity) {
        $this->cart_id = $cart_id;
        $this->product_id = $product_id;
        $this->user_id = $user_id;
        $this->quantity = $quantity;
    }

    public function getCart_id() {
        return $this->cart_id;
    }

    public function getProduct_id() {
        return $this->product_id;
    }

    public function getUser_id() {
        return $this->user_id;
    }

    public function getQuantity() {
        return $this->quantity;
    }

    public static function addToCart($conn, $product_id, $user_id, $quantity) {
        $stmt = $conn->prepare("INSERT INTO cart (product_id, user_id, quantity) VALUES (?, ?, ?)");
        $stmt->bind_param("iii", $product_id, $user_id, $quantity);
        if ($stmt->execute()) {
            return true;
        } else {
            return false;
        }
    }

    public static function removeFromCart($conn, $cart_id) {
        $stmt = $conn->prepare("DELETE FROM cart WHERE cart_id = ?");
        $stmt->bind_param("i", $cart_id);
        if ($stmt->execute()) {
            return true;
        } else {
            return false;
        }
    }

    public static function updateQuantity($conn, $cart_id, $quantity) {
        $stmt = $conn->prepare("UPDATE cart SET quantity = ? WHERE cart_id = ?");
        $stmt->bind_param("ii", $quantity, $cart_id);
        if ($stmt->execute()) {
            return true;
        } else {
            return false;
        }
    }

    public static function getCartItems($conn, $user_id) {
        $stmt = $conn->prepare("SELECT * FROM cart WHERE user_id = ?");
        $stmt->bind_param("i", $user_id);
        $stmt->execute();
        $result = $stmt->get_result();

        $cart_items = array();
        while ($row = $result->fetch_assoc()) {
            $product = Product::getProductById($conn, $row['product_id']);
            $cart_item = new Cart(
                $row['cart_id'],
                $row['product_id'],
                $row['user_id'],
                $row['quantity']
            );
            array_push($cart_items, array('cart' => $cart_item, 'product' => $product));
        }
        return $cart_items;
    }
}
?>


<?php include_once("config.php"); ?>

<!DOCTYPE html>
<html>
<head>
    <title>Product Listing</title>
</head>
<body>
    <?php
        $products = Product::getAllProducts($conn);
        foreach ($products as $product) {
            echo "<div>";
            echo "<h2>" . $product->getName() . "</h2>";
            echo "<p>Price: $" . number_format($product->getPrice(), 2) . "</p>";
            echo "<p>Description: " . $product->getDescription() . "</p>";
            echo "<p>Stock: " . $product->getStock() . "</p>";
            echo "<form action='add_to_cart.php' method='post'>";
            echo "<input type='hidden' name='product_id' value='" . $product->getId() . "'>";
            echo "<input type='number' name='quantity' min='1' max='" . $product->getStock() . "' value='1'>";
            echo "<button type='submit'>Add to Cart</button>";
            echo "</form>";
            echo "</div><br/>";
        }
    ?>
</body>
</html>


<?php include_once("config.php"); session_start(); ?>

<?php
if (isset($_POST['product_id']) && isset($_POST['quantity'])) {
    $product_id = $_POST['product_id'];
    $quantity = $_POST['quantity'];

    if (!empty($product_id) && !empty($quantity)) {
        if (Cart::addToCart($conn, $product_id, $_SESSION['user_id'], $quantity)) {
            echo "<script>alert('Product added to cart');</script>";
            echo "<script>window.location.href='index.php';</script>";
        } else {
            echo "<script>alert('Error adding product to cart');</script>";
            echo "<script>window.location.href='index.php';</script>";
        }
    }
}
?>


<?php include_once("config.php"); session_start(); ?>

<!DOCTYPE html>
<html>
<head>
    <title>View Cart</title>
</head>
<body>
    <?php
        $cart_items = Cart::getCartItems($conn, $_SESSION['user_id']);
        if (!empty($cart_items)) {
            foreach ($cart_items as $item) {
                echo "<div>";
                echo "<h2>" . $item['product']->getName() . "</h2>";
                echo "<p>Price: $" . number_format($item['product']->getPrice(), 2) . "</p>";
                echo "<p>Quantity: " . $item['cart']->getQuantity() . "</p>";
                echo "<form action='update_cart.php' method='post'>";
                echo "<input type='hidden' name='cart_id' value='" . $item['cart']->getCart_id() . "'>";
                echo "<input type='number' name='quantity' min='1' max='" . $item['product']->getStock() . "' value='" . $item['cart']->getQuantity() . "'>";
                echo "<button type='submit'>Update Quantity</button>";
                echo "</form>";
                echo "<a href='remove_from_cart.php?cart_id=" . $item['cart']->getCart_id() . "'>Remove from Cart</a>";
                echo "</div><br/>";
            }
        } else {
            echo "<p>Your cart is empty.</p>";
        }
    ?>
    <a href="index.php">Continue Shopping</a> |
    <?php if (!empty($cart_items)) { ?>
        <a href="checkout.php">Checkout</a>
    <?php } ?>
</body>
</html>


<?php include_once("config.php"); session_start(); ?>

<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
</head>
<body>
    <?php
        $cart_items = Cart::getCartItems($conn, $_SESSION['user_id']);
        if (!empty($cart_items)) {
            echo "<h2>Your Order</h2>";
            foreach ($cart_items as $item) {
                echo "<div>";
                echo "<p>" . $item['product']->getName() . "</p>";
                echo "<p>Price: $" . number_format($item['product']->getPrice(), 2) . "</p>";
                echo "<p>Quantity: " . $item['cart']->getQuantity() . "</p>";
                echo "<p>Total: $" . number_format($item['product']->getPrice() * $item['cart']->getQuantity(), 2) . "</p>";
                echo "</div><br/>";
            }

            echo "<h3>Shipping Information</h3>";
            echo "<form action='process_payment.php' method='post'>";
            echo "<input type='text' name='user_name' placeholder='Name' required><br/>";
            echo "<input type='email' name='email' placeholder='Email' required><br/>";
            echo "<textarea name='address' placeholder='Address' required></textarea><br/>";
            echo "<button type='submit'>Complete Purchase</button>";
            echo "</form>";
        } else {
            echo "<p>Your cart is empty.</p>";
        }
    ?>
</body>
</html>


<?php include_once("config.php"); session_start(); ?>

<?php
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $user_name = $_POST['user_name'];
    $email = $_POST['email'];
    $address = $_POST['address'];

    // Get cart items
    $cart_items = Cart::getCartItems($conn, $_SESSION['user_id']);

    if (!empty($cart_items)) {
        foreach ($cart_items as $item) {
            $product_id = $item['cart']->getProduct_id();
            $quantity = $item['cart']->getQuantity();

            // Place order
            if (Order::placeOrder($conn, $user_name, $email, $address, $product_id, $quantity)) {
                // Remove item from cart
                Cart::removeFromCart($conn, $item['cart']->getCart_id());
            } else {
                die("Error placing order");
            }
        }

        echo "<script>alert('Order placed successfully');</script>";
        echo "<script>window.location.href='order_confirmation.php';</script>";
    } else {
        echo "<script>alert('Your cart is empty');</script>";
        echo "<script>window.location.href='index.php';</script>";
    }
}
?>


<?php include_once("config.php"); session_start(); ?>

<!DOCTYPE html>
<html>
<head>
    <title>Order Confirmation</title>
</head>
<body>
    <h2>Thank you for your purchase!</h2>
    <?php
        // You can display the order details here if needed
        echo "<p>Your order has been received.</p>";
    ?>
    <a href="index.php">Back to Home Page</a>
</body>
</html>


<?php
session_start();

// Sample product data
$products = array(
    array(
        'id' => 1,
        'name' => 'Product 1',
        'price' => 29.99,
        'quantity' => 5
    ),
    array(
        'id' => 2,
        'name' => 'Product 2',
        'price' => 19.99,
        'quantity' => 3
    ),
    array(
        'id' => 3,
        'name' => 'Product 3',
        'price' => 49.99,
        'quantity' => 2
    )
);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Product List</title>
</head>
<body>
    <h1>Products</h1>
    <?php foreach ($products as $product): ?>
        <div>
            <h3><?php echo $product['name']; ?></h3>
            <p>Price: $<?php echo number_format($product['price'], 2); ?></p>
            <p>Available Quantity: <?php echo $product['quantity']; ?></p>
            <form action="add_to_cart.php" method="post">
                <input type="hidden" name="id" value="<?php echo $product['id']; ?>">
                <input type="number" name="quantity" min="1" max="<?php echo $product['quantity']; ?>" value="1">
                <button type="submit">Add to Cart</button>
            </form>
        </div>
    <?php endforeach; ?>
    <p><a href="view_cart.php">View Cart</a></p>
</body>
</html>


<?php
session_start();

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $id = $_POST['id'];
    $quantity = $_POST['quantity'];

    // Check if product is already in the cart
    if (isset($_SESSION['cart'][$id])) {
        $_SESSION['cart'][$id]['quantity'] += $quantity;
    } else {
        // Get product details from database or array (using sample data here)
        $products = array(
            1 => array('name' => 'Product 1', 'price' => 29.99),
            2 => array('name' => 'Product 2', 'price' => 19.99),
            3 => array('name' => 'Product 3', 'price' => 49.99)
        );
        
        $_SESSION['cart'][$id] = array(
            'name' => $products[$id]['name'],
            'price' => $products[$id]['price'],
            'quantity' => $quantity
        );
    }
    
    header('Location: view_cart.php');
    exit();
}
?>


<?php
session_start();

function calculate_total($cart) {
    $total = 0;
    foreach ($cart as $item) {
        $total += $item['price'] * $item['quantity'];
    }
    return $total;
}

function get_cart_count($cart) {
    $count = 0;
    foreach ($cart as $item) {
        $count += $item['quantity'];
    }
    return $count;
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <h1>Your Shopping Cart</h1>
    
    <?php if (!empty($_SESSION['cart'])): ?>
        <table border="1">
            <tr>
                <th>Product Name</th>
                <th>Quantity</th>
                <th>Price</th>
                <th>Total</th>
                <th>Action</th>
            </tr>
            <?php foreach ($_SESSION['cart'] as $id => $item): ?>
                <tr>
                    <td><?php echo $item['name']; ?></td>
                    <td>
                        <form action="update_cart.php" method="post">
                            <input type="hidden" name="id" value="<?php echo $id; ?>">
                            <input type="number" name="quantity" min="1" value="<?php echo $item['quantity']; ?>">
                            <button type="submit">Update</button>
                        </form>
                    </td>
                    <td>$<?php echo number_format($item['price'], 2); ?></td>
                    <td>$<?php echo number_format($item['price'] * $item['quantity'], 2); ?></td>
                    <td><a href="remove_from_cart.php?id=<?php echo $id; ?>">Remove</a></td>
                </tr>
            <?php endforeach; ?>
        </table>
        
        <p>Total Items: <?php echo get_cart_count($_SESSION['cart']); ?></p>
        <p>Total Price: $<?php echo number_format(calculate_total($_SESSION['cart']), 2); ?></p>
        
        <form action="checkout.php" method="post">
            <button type="submit">Checkout</button>
        </form>
    <?php else: ?>
        <p>Your cart is empty.</p>
        <a href="product_list.php">Continue Shopping</a>
    <?php endif; ?>

    <p><a href="product_list.php">Back to Product List</a></p>
</body>
</html>


<?php
session_start();

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $id = $_POST['id'];
    $quantity = $_POST['quantity'];

    if (isset($_SESSION['cart'][$id])) {
        $_SESSION['cart'][$id]['quantity'] = $quantity;
    }
    
    header('Location: view_cart.php');
    exit();
}
?>


<?php
session_start();

$id = $_GET['id'];

if (isset($_SESSION['cart'][$id])) {
    unset($_SESSION['cart'][$id]);
}

header('Location: view_cart.php');
exit();
?>


<?php
session_start();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
</head>
<body>
    <?php if (!empty($_SESSION['cart'])): ?>
        <h1>Checkout</h1>
        
        <form action="process_payment.php" method="post">
            <div>
                <label for="name">Name:</label>
                <input type="text" id="name" name="name" required>
            </div>
            
            <div>
                <label for="email">Email:</label>
                <input type="email" id="email" name="email" required>
            </div>
            
            <div>
                <label for="address">Address:</label>
                <textarea id="address" name="address" rows="3" required></textarea>
            </div>

            <?php foreach ($_SESSION['cart'] as $id => $item): ?>
                <input type="hidden" name="products[<?php echo $id; ?>][name]" value="<?php echo $item['name']; ?>">
                <input type="hidden" name="products[<?php echo $id; ?>][price]" value="<?php echo $item['price']; ?>">
                <input type="hidden" name="products[<?php echo $id; ?>][quantity]" value="<?php echo $item['quantity']; ?>">
            <?php endforeach; ?>

            <div>
                <h2>Order Summary</h2>
                <p>Total Items: <?php echo get_cart_count($_SESSION['cart']); ?></p>
                <p>Total Price: $<?php echo number_format(calculate_total($_SESSION['cart']), 2); ?></p>
            </div>

            <button type="submit">Confirm Order</button>
        </form>
    <?php else: ?>
        <p>Your cart is empty.</p>
        <a href="product_list.php">Continue Shopping</a>
    <?php endif; ?>

    <p><a href="view_cart.php">Back to Cart</a></p>
</body>
</html>


<?php
session_start();

// Simulate payment processing
sleep(2);

if (!empty($_POST)) {
    // Clear the cart after purchase
    unset($_SESSION['cart']);
    
    header('Location: thank_you.php');
    exit();
}
?>


<?php
session_start();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Thank You</title>
</head>
<body>
    <h1>Thank You for Your Purchase!</h1>
    <p>Your order has been successfully processed.</p>
    <a href="product_list.php">Continue Shopping</a>
</body>
</html>


<?php
class Product {
    private $conn;

    public function __construct($db_connection) {
        $this->conn = $db_connection;
    }

    // Get all products
    public function getAllProducts() {
        $stmt = $this->conn->prepare("SELECT * FROM products");
        $stmt->execute();
        return $stmt->fetchAll(PDO::FETCH_ASSOC);
    }

    // Get product by ID
    public function getProductById($id) {
        $stmt = $this->conn->prepare("SELECT * FROM products WHERE id = ?");
        $stmt->bind_param("i", $id);
        $stmt->execute();
        return $stmt->get_result()->fetch_assoc();
    }
}
?>


<?php
class Order {
    private $conn;

    public function __construct($db_connection) {
        $this->conn = $db_connection;
    }

    // Create a new order
    public function createOrder($user_id, $total_amount) {
        $stmt = $this->conn->prepare("INSERT INTO orders (user_id, total_amount) VALUES (?, ?)");
        $stmt->bind_param("id", $user_id, $total_amount);
        return $stmt->execute();
    }

    // Get order details by user
    public function getOrdersByUser($user_id) {
        $stmt = $this->conn->prepare("
            SELECT orders.id AS order_id, 
                   orders.order_date,
                   orders.total_amount
            FROM orders 
            WHERE user_id = ?
        ");
        $stmt->bind_param("i", $user_id);
        $stmt->execute();
        return $stmt->get_result()->fetch_all(MYSQLI_ASSOC);
    }
}
?>


<?php
session_start();

// Add item to cart
if (isset($_POST['add_to_cart'])) {
    $product_id = $_POST['product_id'];
    $quantity = isset($_POST['quantity']) ? $_POST['quantity'] : 1;

    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }

    if (array_key_exists($product_id, $_SESSION['cart'])) {
        $_SESSION['cart'][$product_id]['quantity'] += $quantity;
    } else {
        $_SESSION['cart'][$product_id] = array(
            'product_id' => $product_id,
            'quantity' => $quantity
        );
    }
}

// Remove item from cart
if (isset($_GET['remove_item'])) {
    $product_id = $_GET['remove_item'];
    unset($_SESSION['cart'][$product_id]);
}
?>


<?php
session_start();

require_once 'Product.php';
require_once 'Order.php';

// Database connection
$host = "localhost";
$db_name = "shopping_cart";
$username = "root";
$password = "";
$conn = new mysqli($host, $username, $password, $db_name);

$product = new Product($conn);
$order = new Order($conn);

if (isset($_POST['checkout'])) {
    // Get cart items
    $cart_items = $_SESSION['cart'];
    
    if (empty($cart_items)) {
        die("Your cart is empty!");
    }
    
    // Assuming user is logged in
    $user_id = 1; // Replace with actual user ID
    
    // Calculate total amount
    $total_amount = 0;
    foreach ($cart_items as $item) {
        $product_data = $product->getProductById($item['product_id']);
        $total_amount += $product_data['price'] * $item['quantity'];
    }
    
    // Create order
    $order->createOrder($user_id, $total_amount);
    $last_order_id = $conn->insert_id;
    
    // Insert order details
    foreach ($cart_items as $item) {
        $product_data = $product->getProductById($item['product_id']);
        
        $stmt = $conn->prepare("
            INSERT INTO order_details 
            (order_id, product_id, quantity, price)
            VALUES (?, ?, ?, ?)
        ");
        $stmt->bind_param("iidi", $last_order_id, $item['product_id'], $item['quantity'], $product_data['price']);
        $stmt->execute();
    }
    
    // Clear cart
    unset($_SESSION['cart']);
    
    // Payment processing (simplified)
    $transaction_id = uniqid();
    $payment_method = $_POST['payment_method'];
    
    $stmt = $conn->prepare("
        INSERT INTO payments 
        (transaction_id, payment_method, amount, status, order_id)
        VALUES (?, ?, ?, 'pending', ?)
    ");
    $stmt->bind_param("ssdi", $transaction_id, $payment_method, $total_amount, $last_order_id);
    $stmt->execute();
    
    // Redirect to confirmation page
    header("Location: order_confirmation.php?order_id=" . $last_order_id);
}
?>


<?php
session_start();

require_once 'Order.php';

// Database connection
$host = "localhost";
$db_name = "shopping_cart";
$username = "root";
$password = "";
$conn = new mysqli($host, $username, $password, $db_name);

$order = new Order($conn);
$user_id = 1; // Replace with actual user ID

$orders = $order->getOrdersByUser($user_id);
?>

<!DOCTYPE html>
<html>
<head>
    <title>My Orders</title>
</head>
<body>
    <h1>Your Orders</h1>
    <?php if (!empty($orders)): ?>
        <table>
            <tr>
                <th>Order ID</th>
                <th>Date</th>
                <th>Total Amount</th>
            </tr>
            <?php foreach ($orders as $order): ?>
                <tr>
                    <td><?php echo $order['order_id']; ?></td>
                    <td><?php echo $order['order_date']; ?></td>
                    <td><?php echo $order['total_amount']; ?></td>
                </tr>
            <?php endforeach; ?>
        </table>
    <?php else: ?>
        <p>No orders found.</p>
    <?php endif; ?>
</body>
</html>


<?php
session_start();

require_once 'Order.php';

// Database connection
$host = "localhost";
$db_name = "shopping_cart";
$username = "root";
$password = "";
$conn = new mysqli($host, $username, $password, $db_name);

$order_id = $_GET['order_id'];
?>
<!DOCTYPE html>
<html>
<head>
    <title>Order Confirmation</title>
</head>
<body>
    <h1>Thank you for your order!</h1>
    <p>Your order ID is: <?php echo $order_id; ?></p>
    <p>We will process your order shortly.</p>
</body>
</html>


<?php
// Initialize products array
$products = [
    1 => [
        'name' => 'Product A',
        'price' => 25.00,
        'quantity_available' => 10
    ],
    2 => [
        'name' => 'Product B',
        'price' => 35.00,
        'quantity_available' => 5
    ],
    3 => [
        'name' => 'Product C',
        'price' => 45.00,
        'quantity_available' => 15
    ]
];

// Initialize order array
$order = [];

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Validate and process the purchase
    foreach ($products as $product_id => $product) {
        if (isset($_POST[$product_id])) {
            $quantity = $_POST[$product_id];
            
            // Check if quantity is a valid number
            if (!ctype_digit((string)$quantity)) {
                die("Invalid quantity entered for " . $product['name']);
            }
            
            $quantity = intval($quantity);
            
            // Check if quantity exceeds available stock
            if ($quantity > $product['quantity_available']) {
                die("Only " . $product['quantity_available'] . " units of " . $product['name'] . " are available");
            }
            
            // Add to order array
            $order[$product_id] = [
                'name' => $product['name'],
                'price' => $product['price'],
                'quantity_purchased' => $quantity,
                'subtotal' => $product['price'] * $quantity
            ];
        }
    }
    
    // Calculate total price
    $total_price = array_sum(array_column($order, 'subtotal'));
    
    // Display receipt
    echo "<h2>Purchase Receipt</h2>";
    echo "<table border='1'>";
    echo "<tr><th>Product Name</th><th>Quantity</th><th>Price</th><th>Subtotal</th></tr>";
    
    foreach ($order as $product_id => $item) {
        echo "<tr>";
        echo "<td>" . $item['name'] . "</td>";
        echo "<td>" . $item['quantity_purchased'] . "</td>";
        echo "<td>$" . number_format($item['price'], 2) . "</td>";
        echo "<td>$" . number_format($item['subtotal'], 2) . "</td>";
        echo "</tr>";
    }
    
    echo "<tr><td colspan='3'><strong>Total</strong></td><td><strong>$" . number_format($total_price, 2) . "</strong></td></tr>";
    echo "</table>";
    
    // You can add code here to save the order to a database
    // and process payment methods
    
    die("Thank you for your purchase!");
}

// Display product selection form
echo "<h1>Product Selection</h1>";
echo "<form action='" . $_SERVER['PHP_SELF'] . "' method='post'>";
echo "<table border='1'>";
echo "<tr><th>Product Name</th><th>Price</th><th>Quantity Available</th><th>Select Quantity</th></tr>";

foreach ($products as $product_id => $product) {
    echo "<tr>";
    echo "<td>" . $product['name'] . "</td>";
    echo "<td>$" . number_format($product['price'], 2) . "</td>";
    echo "<td>" . $product['quantity_available'] . "</td>";
    echo "<td><input type='text' name='" . $product_id . "' size='3'></td>";
    echo "</tr>";
}

echo "<tr><td colspan='4'><input type='submit' value='Purchase Selected Items'></td></tr>";
echo "</table>";
echo "</form>";
?>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'shopping_cart';

// Connect to database
$conn = mysqli_connect($host, $username, $password, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Start session
session_start();

// Helper functions for cart operations
require_once('cart_functions.php');

// Add item to cart functionality
if (isset($_POST['add_to_cart'])) {
    $product_id = $_POST['product_id'];
    add_to_cart($product_id);
}

// Update cart quantity functionality
if (isset($_POST['update_cart'])) {
    foreach ($_POST as $key => $value) {
        if ($key != 'update_cart') {
            update_cart_quantity($key, $value);
        }
    }
}

// Remove item from cart functionality
if (isset($_GET['remove_item'])) {
    remove_from_cart($_GET['remove_item']);
}

// Checkout functionality
if (isset($_POST['checkout'])) {
    checkout();
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Shopping Cart</title>
    <style>
        body {
            font-family: Arial, sans-serif;
        }
        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
        }
        .product-grid {
            display: grid;
            grid-template-columns: repeat(3, 1fr);
            gap: 20px;
        }
        .product-card {
            border: 1px solid #ddd;
            padding: 15px;
            text-align: center;
        }
        .cart-summary {
            margin-top: 20px;
            background-color: #f5f5f5;
            padding: 20px;
            border-radius: 5px;
        }
        table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
        }
        th, td {
            padding: 12px;
            text-align: left;
            border-bottom: 1px solid #ddd;
        }
    </style>
</head>
<body>
    <div class="container">
        <?php
        // Display products
        $result = mysqli_query($conn, "SELECT * FROM products");
        if (mysqli_num_rows($result) > 0) {
            echo "<h2>Products</h2>";
            echo "<div class='product-grid'>";
            while ($row = mysqli_fetch_assoc($result)) {
                echo "<div class='product-card'>";
                echo "<img src='" . $row['image'] . "' alt='" . $row['name'] . "' style='max-width: 150px;'>";
                echo "<h3>" . $row['name'] . "</h3>";
                echo "<p>" . $row['description'] . "</p>";
                echo "<p>Price: $" . number_format($row['price'], 2) . "</p>";
                echo "<form method='post' action=''>";
                echo "<input type='hidden' name='product_id' value='" . $row['id'] . "'>";
                echo "<button type='submit' name='add_to_cart'>Add to Cart</button>";
                echo "</form>";
                echo "</div>";
            }
            echo "</div>";
        }
        ?>

        <?php
        // Display cart summary
        if (!empty($_SESSION['cart'])) {
            $total = calculate_total();
            echo "<h2>Your Cart</h2>";
            echo "<form method='post' action=''>";
            echo "<table>";
            echo "<tr><th>Product</th><th>Quantity</th><th>Price</th><th>Total</th><th>Action</th></tr>";
            foreach ($_SESSION['cart'] as $item) {
                $product_id = $item['id'];
                $result = mysqli_query($conn, "SELECT * FROM products WHERE id=" . $product_id);
                if ($row = mysqli_fetch_assoc($result)) {
                    echo "<tr>";
                    echo "<td>" . $row['name'] . "</td>";
                    echo "<td><input type='number' name='" . $item['id'] . "' value='" . $item['quantity'] . "' min='1'></td>";
                    echo "<td>$" . number_format($row['price'], 2) . "</td>";
                    echo "<td>$" . number_format($row['price'] * $item['quantity'], 2) . "</td>";
                    echo "<td><a href='?remove_item=" . $item['id'] . "'>Remove</a></td>";
                    echo "</tr>";
                }
            }
            echo "</table>";
            echo "<h3>Total: $" . number_format($total, 2) . "</h3>";
            echo "<button type='submit' name='update_cart'>Update Cart</button>";
            echo "<button type='submit' formaction='checkout.php' formmethod='post' name='checkout'>Checkout</button>";
            echo "</form>";
        } else {
            echo "<p>Your cart is empty.</p>";
        }
        ?>
    </div>
</body>
</html>

<?php
// cart_functions.php
function add_to_cart($product_id) {
    global $conn;
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }
    
    $exists = false;
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['id'] == $product_id) {
            $exists = true;
            $item['quantity']++;
            break;
        }
    }
    
    if (!$exists) {
        $result = mysqli_query($conn, "SELECT * FROM products WHERE id=" . $product_id);
        if ($row = mysqli_fetch_assoc($result)) {
            $_SESSION['cart'][] = array(
                'id' => $row['id'],
                'name' => $row['name'],
                'price' => $row['price'],
                'quantity' => 1
            );
        }
    }
}

function update_cart_quantity($item_id, $quantity) {
    global $conn;
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['id'] == $item_id) {
            $item['quantity'] = $quantity;
            break;
        }
    }
}

function remove_from_cart($item_id) {
    global $conn;
    foreach ($_SESSION['cart'] as $key => $item) {
        if ($item['id'] == $item_id) {
            unset($_SESSION['cart'][$key]);
            $_SESSION['cart'] = array_values($_SESSION['cart']);
            break;
        }
    }
}

function calculate_total() {
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += ($item['price'] * $item['quantity']);
    }
    return $total;
}

function checkout() {
    // Process checkout here
    $_SESSION['cart'] = array();
    header("Location: index.php");
}
?>


<?php
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "myDB";

// Create connection
$conn = new mysqli($servername, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

$sql = "SELECT * FROM products";
$result = $conn->query($sql);

if ($result->num_rows > 0) {
    while($row = $result->fetch_assoc()) {
        echo "<div class='product'>";
        echo "<h2>" . $row["name"] . "</h2>";
        echo "<p>Price: $" . number_format($row["price"], 2) . "</p>";
        echo "<p>Description: " . $row["description"] . "</p>";
        echo "<form action='purchase.php' method='post'>";
        echo "<input type='hidden' name='product_id' value='" . $row["id"] . "'>";
        echo "<input type='hidden' name='price' value='" . $row["price"] . "'>";
        echo "Quantity: <input type='number' name='quantity' min='1' max='" . $row["quantity"] . "' required>";
        echo "<button type='submit'>Purchase</button>";
        echo "</form>";
        echo "</div>";
    }
} else {
    echo "No products available.";
}
$conn->close();
?>


<?php
session_start();

// Database connection
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "myDB";

$conn = new mysqli($servername, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Get form data
$product_id = $_POST['product_id'];
$price = $_POST['price'];
$quantity = $_POST['quantity'];

// Calculate total price
$total_price = $price * $quantity;

// Update product quantity (assuming we're selling from stock)
$sql = "UPDATE products SET quantity = quantity - $quantity WHERE id = $product_id";
if ($conn->query($sql) === TRUE) {
    // Purchase successful
    echo "<h2>Purchase Successful!</h2>";
    echo "<p>Product ID: " . $product_id . "</p>";
    echo "<p>Quantity purchased: " . $quantity . "</p>";
    echo "<p>Total price: $" . number_format($total_price, 2) . "</p>";
} else {
    // Error updating stock
    echo "Error purchasing item: " . $conn->error;
}

$conn->close();
?>


<?php
// process_purchase.php

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $product_id = $_POST['product_id'];
    $quantity = $_POST['quantity'];

    // Validate input
    if (empty($product_id) || empty($quantity)) {
        die("Product ID and quantity are required.");
    }

    // Database connection
    $servername = "localhost";
    $username = "username";
    $password = "password";
    $dbname = "myDB";

    try {
        $conn = new mysqli($servername, $username, $password, $dbname);
        
        if ($conn->connect_error) {
            die("Connection failed: " . $conn->connect_error);
        }

        // Retrieve product details
        $stmt = $conn->prepare("SELECT * FROM products WHERE id = ?");
        $stmt->bind_param("i", $product_id);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($row = $result->fetch_assoc()) {
            $name = $row['name'];
            $price = $row['price'];
            $stock = $row['stock'];

            // Check stock
            if ($quantity > $stock) {
                die("Not enough stock. Available: $stock");
            }

            // Update inventory
            $new_stock = $stock - $quantity;
            $update_stmt = $conn->prepare("UPDATE products SET stock = ? WHERE id = ?");
            $update_stmt->bind_param("ii", $new_stock, $product_id);
            $update_stmt->execute();

            // Calculate total cost
            $total_cost = $price * $quantity;

            // Redirect to thank you page with purchase details
            header("Location: thank_you.php?name=$name&quantity=$quantity&total=$total_cost");
            exit();
        } else {
            die("Product not found.");
        }

    } catch (Exception $e) {
        die("Error: " . $e->getMessage());
    }
}
?>


<?php
// thank_you.php

if (isset($_GET['name']) && isset($_GET['quantity']) && isset($_GET['total'])) {
    $product_name = $_GET['name'];
    $quantity_purchased = $_GET['quantity'];
    $total_cost = $_GET['total'];
?>

<!DOCTYPE html>
<html>
<head>
    <title>Thank You for Your Purchase</title>
</head>
<body>
    <h2>Thank You!</h2>
    <p>Your order has been processed successfully.</p>
    <p><strong>Product:</strong> <?php echo $product_name; ?></p>
    <p><strong>Quantity:</strong> <?php echo $quantity_purchased; ?></p>
    <p><strong>Total Cost:</strong> $<?php echo number_format($total_cost, 2); ?></p>
</body>
</html>

<?php
} else {
    header("Location: purchase_form.php");
}
?>


<?php
$host = "localhost";
$user = "root";
$password = "";
$database = "shopping_cart";

$conn = mysqli_connect($host, $user, $password, $database);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}
?>


<?php
session_start();
include('config.php');

$query = "SELECT * FROM products";
$result = mysqli_query($conn, $query);

if (!$result) {
    die("Error fetching products: " . mysqli_error($conn));
}
?>
<!DOCTYPE html>
<html>
<head>
    <title>Product List</title>
</head>
<body>
    <?php if (isset($_SESSION['user'])) { ?>
        <p>Welcome, <?php echo $_SESSION['username']; ?></p>
        <a href="logout.php">Logout</a><br>
    <?php } else { ?>
        <a href="login.php">Login</a> | <a href="register.php">Register</a>
    <?php } ?>

    <h1>Available Products</h1>
    <?php while ($row = mysqli_fetch_assoc($result)) { ?>
        <div>
            <h3><?php echo $row['name']; ?></h3>
            <p><?php echo $row['description']; ?></p>
            <p>Price: $<?php echo number_format($row['price'], 2); ?></p>
            <p>Available Quantity: <?php echo $row['quantity']; ?></p>
            <form action="cart.php" method="post">
                <input type="hidden" name="product_id" value="<?php echo $row['id']; ?>">
                <input type="number" name="quantity" min="1" max="<?php echo $row['quantity']; ?>" required>
                <button type="submit">Add to Cart</button>
            </form>
        </div><br>
    <?php } ?>

    <?php if (isset($_SESSION['cart'])) { ?>
        <a href="cart.php">View Cart</a>
    <?php } ?>
</body>
</html>


<?php
session_start();
include('config.php');

if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add item to cart
if (isset($_POST['add_to_cart'])) {
    $product_id = intval($_POST['product_id']);
    $quantity = intval($_POST['quantity']);

    if ($quantity > 0) {
        $_SESSION['cart'][$product_id] = $quantity;
    }
}

// Update cart quantity
if (isset($_POST['update_cart'])) {
    foreach ($_POST as $key => $value) {
        if (strpos($key, 'quantity_') === 0) {
            $product_id = substr($key, strlen('quantity_'));
            $quantity = intval($value);
            if ($quantity > 0) {
                $_SESSION['cart'][$product_id] = $quantity;
            }
        }
    }
}

// Remove item from cart
if (isset($_GET['remove'])) {
    $product_id = intval($_GET['remove']);
    unset($_SESSION['cart'][$product_id]);
}
?>
<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <?php if (empty($_SESSION['cart'])) { ?>
        <h2>Your cart is empty.</h2>
        <a href="products.php">Continue Shopping</a>
    <?php } else { ?>
        <h2>Your Cart</h2>
        <form action="cart.php" method="post">
            <?php
            $total = 0;
            foreach ($_SESSION['cart'] as $product_id => $quantity) {
                $query = "SELECT * FROM products WHERE id=$product_id";
                $result = mysqli_query($conn, $query);
                if ($row = mysqli_fetch_assoc($result)) {
                    $item_total = $row['price'] * $quantity;
                    $total += $item_total;
            ?>
                    <div>
                        <h3><?php echo $row['name']; ?></h3>
                        <p>Price: $<?php echo number_format($row['price'], 2); ?></p>
                        <p>Quantity: <input type="number" name="quantity_<?php echo $product_id; ?>" min="1" max="<?php echo $row['quantity']; ?>" value="<?php echo $quantity; ?>"></p>
                        <a href="cart.php?remove=<?php echo $product_id; ?>">Remove</a>
                    </div><br>
            <?php
                }
            } 
            ?>
            <input type="submit" name="update_cart" value="Update Cart">
        </form>
        <h3>Total: $<?php echo number_format($total, 2); ?></h3>
        <a href="checkout.php">Proceed to Checkout</a> | <a href="products.php">Continue Shopping</a>
    <?php } ?>

    <?php if (isset($_SESSION['user'])) { ?>
        <a href="logout.php">Logout</a><br>
    <?php } else { ?>
        <a href="login.php">Login</a> | <a href="register.php">Register</a>
    <?php } ?>
</body>
</html>


<?php
session_start();
include('config.php');

if (!isset($_SESSION['user'])) {
    header("Location: login.php");
    exit();
}

if (empty($_SESSION['cart'])) {
    header("Location: products.php");
    exit();
}
?>
<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
</head>
<body>
    <?php if (isset($_POST['checkout'])) { ?>
        <?php
        // Process the checkout
        $payment_method = $_POST['payment_method'];
        $total_amount = 0;

        foreach ($_SESSION['cart'] as $product_id => $quantity) {
            $query = "SELECT * FROM products WHERE id=$product_id";
            $result = mysqli_query($conn, $query);
            if ($row = mysqli_fetch_assoc($result)) {
                $item_total = $row['price'] * $quantity;
                $total_amount += $item_total;
            }
        }

        // Save order to database
        $order_details = serialize($_SESSION['cart']);
        $user_id = $_SESSION['user']['id'];
        
        $stmt = $conn->prepare("INSERT INTO orders (user_id, product_details, total_amount, payment_method) VALUES (?, ?, ?, ?)");
        $stmt->bind_param("isdd", $user_id, $order_details, $total_amount, $payment_method);
        if ($stmt->execute()) {
            unset($_SESSION['cart']);
            echo "<h2>Order placed successfully!</h2>";
        } else {
            echo "Error placing order: " . $conn->error;
        }
        $stmt->close();
        ?>
    <?php } else { ?>

    <form action="checkout.php" method="post">
        <h2>Checkout</h2>
        <p>Total Amount: $<?php 
        $total = 0;
        foreach ($_SESSION['cart'] as $product_id => $quantity) {
            $query = "SELECT * FROM products WHERE id=$product_id";
            $result = mysqli_query($conn, $query);
            if ($row = mysqli_fetch_assoc($result)) {
                $item_total = $row['price'] * $quantity;
                $total += $item_total;
            }
        }
        echo number_format($total, 2); 
        ?></p>

        <h3>Payment Method</h3>
        <input type="radio" name="payment_method" value="credit_card" required>Credit Card
        <input type="radio" name="payment_method" value="paypal">PayPal

        <br><br>
        <h3>Shipping Information</h3>
        <?php if (isset($_SESSION['user'])) { ?>
            <p>Name: <?php echo $_SESSION['username']; ?></p>
            <!-- Add more fields as needed -->
        <?php } else { ?>
            <input type="text" name="name" placeholder="Name" required><br>
            <!-- Add other necessary fields -->
        <?php } ?>

        <input type="submit" name="checkout" value="Place Order">
    </form>

    <?php } ?>

    <a href="cart.php">Back to Cart</a> | 
    <?php if (isset($_SESSION['user'])) { ?>
        <a href="logout.php">Logout</a><br>
    <?php } else { ?>
        <a href="login.php">Login</a> | <a href="register.php">Register</a>
    <?php } ?>

</body>
</html>


<?php
session_start();
include('config.php');

if (isset($_POST['login'])) {
    $username = mysqli_real_escape_string($conn, $_POST['username']);
    $password = md5($_POST['password']);

    $query = "SELECT * FROM users WHERE username='$username' OR email='$username'";
    $result = mysqli_query($conn, $query);

    if ($row = mysqli_fetch_assoc($result)) {
        if ($row['password_hash'] == $password) {
            $_SESSION['user'] = array(
                'id' => $row['id'],
                'username' => $row['username'],
                'email' => $row['email']
            );
            header("Location: products.php");
            exit();
        } else {
            echo "Invalid username or password";
        }
    } else {
        echo "User not found.";
    }
}
?>
<!DOCTYPE html>
<html>
<head>
    <title>Login</title>
</head>
<body>
    <h2>Login</h2>
    <form action="login.php" method="post">
        <input type="text" name="username" placeholder="Username/Email" required><br>
        <input type="password" name="password" placeholder="Password" required><br>
        <input type="submit" name="login" value="Login">
    </form>
    <p>Don't have an account? <a href="register.php">Register</a></p>
</body>
</html>


<?php
session_start();
include('config.php');

if (isset($_POST['register'])) {
    $username = mysqli_real_escape_string($conn, $_POST['username']);
    $email = mysqli_real_escape_string($conn, $_POST['email']);
    $password = md5($_POST['password']);

    $query = "SELECT * FROM users WHERE username='$username' OR email='$email'";
    $result = mysqli_query($conn, $query);

    if (mysqli_num_rows($result) > 0) {
        echo "Username or Email already exists.";
    } else {
        $reg_date = date('Y-m-d H:i:s');
        
        $stmt = $conn->prepare("INSERT INTO users (username, email, password_hash, registered_at) VALUES (?, ?, ?, ?)");
        $stmt->bind_param("ssss", $username, $email, $password, $reg_date);
        
        if ($stmt->execute()) {
            $_SESSION['user'] = array(
                'id' => $stmt->insert_id,
                'username' => $username,
                'email' => $email
            );
            header("Location: products.php");
            exit();
        } else {
            echo "Registration error: " . $conn->error;
        }
    }
}
?>
<!DOCTYPE html>
<html>
<head>
    <title>Register</title>
</head>
<body>
    <h2>Register</h2>
    <form action="register.php" method="post">
        <input type="text" name="username" placeholder="Username" required><br>
        <input type="email" name="email" placeholder="Email" required><br>
        <input type="password" name="password" placeholder="Password" required><br>
        <input type="submit" name="register" value="Register">
    </form>
    <p>Already have an account? <a href="login.php">Login</a></p>
</body>
</html>


<?php
session_start();
unset($_SESSION['user']);
session_destroy();
header("Location: login.php");
exit();
?>


<?php
// Connect to database
$connection = mysqli_connect("localhost", "username", "password", "my_store");

// Query all products
$query = "SELECT * FROM products";
$result = mysqli_query($connection, $query);

if (!$result) {
    die('Error fetching products: ' . mysqli_error($connection));
}
?>
<!DOCTYPE html>
<html>
<head>
    <title>Product Catalog</title>
</head>
<body>
    <?php while ($product = mysqli_fetch_assoc($result)) { ?>
        <div class="product">
            <h2><?php echo $product['name']; ?></h2>
            <p><?php echo $product['description']; ?></p>
            <p>Price: $<?php echo number_format($product['price'], 2); ?></p>
            <form action="add_to_cart.php" method="post">
                <input type="hidden" name="id" value="<?php echo $product['id']; ?>">
                <input type="hidden" name="name" value="<?php echo $product['name']; ?>">
                <input type="hidden" name="price" value="<?php echo $product['price']; ?>">
                <button type="submit">Buy Now</button>
            </form>
        </div>
    <?php } ?>
</body>
</html>


<?php
session_start();

// Get product details from form
$id = $_POST['id'];
$name = $_POST['name'];
$price = $_POST['price'];

// Add item to cart
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

$item = array(
    'id' => $id,
    'name' => $name,
    'price' => $price,
    'quantity' => 1
);

$_SESSION['cart'][$id] = $item;

// Redirect back to cart page
header("Location: view_cart.php");
exit();


<?php
session_start();

// Check if cart is empty
if (!isset($_SESSION['cart']) || count($_SESSION['cart']) == 0) {
    header("Location: products.php");
    exit();
}
?>
<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <?php
        $total = 0;
        foreach ($_SESSION['cart'] as $item) {
            echo "<div class='item'>";
            echo "<h3>" . $item['name'] . "</h3>";
            echo "<p>Quantity: " . $item['quantity'] . "</p>";
            echo "<p>Price: $" . number_format($item['price'], 2) . "</p>";
            echo "</div>";
            
            $total += ($item['price'] * $item['quantity']);
        }
    ?>
    
    <h3>Total: $<?php echo number_format($total, 2); ?></h3>
    
    <form action="process_order.php" method="post">
        <button type="submit">Proceed to Checkout</button>
    </form>
    
    <a href="products.php">Continue Shopping</a>
</body>
</html>


<?php
session_start();

// Check if cart is empty
if (!isset($_SESSION['cart']) || count($_SESSION['cart']) == 0) {
    header("Location: products.php");
    exit();
}

// Database connection
$connection = mysqli_connect("localhost", "username", "password", "my_store");

// Sanitize inputs and prepare order data
$order_total = 0;
foreach ($_SESSION['cart'] as $item) {
    $order_total += ($item['price'] * $item['quantity']);
}

// Insert order into database
$query = "INSERT INTO orders (total, created_at) VALUES (?, NOW())";
$stmt = mysqli_prepare($connection, $query);
mysqli_stmt_bind_param($stmt, 'd', $order_total);
mysqli_execute($stmt);

// Get order ID
$order_id = mysqli_insert_id($connection);

// Insert order items into database
foreach ($_SESSION['cart'] as $item) {
    $query = "INSERT INTO order_items (order_id, product_id, quantity, price)
              VALUES (?, ?, ?, ?)";
    $stmt = mysqli_prepare($connection, $query);
    mysqli_stmt_bind_param($stmt, 'iiid', $order_id, $item['id'], $item['quantity'], $item['price']);
    mysqli_execute($stmt);
}

// Clear cart
unset($_SESSION['cart']);

// Redirect to confirmation page
header("Location: order_confirmation.php?order_id=$order_id");
exit();


<?php
session_start();

$order_id = $_GET['order_id'];
?>
<!DOCTYPE html>
<html>
<head>
    <title>Order Confirmation</title>
</head>
<body>
    <?php if ($order_id) { ?>
        <h2>Your order has been processed successfully!</h2>
        <p>Order ID: <?php echo $order_id; ?></p>
        <a href="products.php">Go back to shopping</a>
    <?php } else { ?>
        <h2>Error processing your order.</h2>
        <a href="view_cart.php">Return to cart</a>
    <?php } ?>
</body>
</html>


<?php
// Connect to the database
$host = 'localhost';
$dbname = 'shop';
$user = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $user, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

    // Fetch products from the database
    $stmt = $conn->query('SELECT * FROM products');
    $products = $stmt->fetchAll();

} catch(PDOException $e) {
    echo "Error: " . $e->getMessage();
}

// Close the connection
$conn = null;
?>

<!DOCTYPE html>
<html>
<head>
    <title>Products</title>
</head>
<body>
    <h1>Our Products</h1>
    <?php foreach ($products as $product): ?>
        <div class="product">
            <h2><?php echo $product['name']; ?></h2>
            <p><?php echo $product['description']; ?></p>
            <p>Price: <?php echo $product['price']; ?> $</p>
            <form action="add_to_cart.php" method="post">
                <input type="hidden" name="id" value="<?php echo $product['id']; ?>">
                <input type="text" name="quantity" placeholder="Quantity">
                <button type="submit">Add to Cart</button>
            </form>
        </div>
    <?php endforeach; ?>
</body>
</html>


<?php
session_start();

// Get product details from the database
$host = 'localhost';
$dbname = 'shop';
$user = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $user, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

    // Get product details
    $id = $_POST['id'];
    $stmt = $conn->prepare('SELECT * FROM products WHERE id = :id');
    $stmt->execute(['id' => $id]);
    $product = $stmt->fetch();

} catch(PDOException $e) {
    echo "Error: " . $e->getMessage();
}

// Add to cart
$quantity = isset($_POST['quantity']) ? intval($_POST['quantity']) : 1;

if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

if (array_key_exists($id, $_SESSION['cart'])) {
    // Update quantity
    $_SESSION['cart'][$id]['quantity'] += $quantity;
} else {
    // Add new product
    $_SESSION['cart'][$id] = [
        'name' => $product['name'],
        'price' => $product['price'],
        'quantity' => $quantity,
        'total' => $product['price'] * $quantity
    ];
}

// Redirect back to products page
header("Location: products.php");
exit();


<?php
session_start();

if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <h1>Your Shopping Cart</h1>
    <?php if (empty($_SESSION['cart'])): ?>
        <p>Your cart is empty.</p>
    <?php else: ?>
        <table border="1">
            <tr>
                <th>Product</th>
                <th>Price</th>
                <th>Quantity</th>
                <th>Total</th>
                <th>Action</th>
            </tr>
            <?php foreach ($_SESSION['cart'] as $id => $item): ?>
                <tr>
                    <td><?php echo $item['name']; ?></td>
                    <td><?php echo $item['price']; ?> $</td>
                    <td><?php echo $item['quantity']; ?></td>
                    <td><?php echo $item['total']; ?> $</td>
                    <td><a href="remove_from_cart.php?id=<?php echo $id; ?>">Remove</a></td>
                </tr>
            <?php endforeach; ?>
        </table>
        <p>Total: <?php echo array_sum(array_column($_SESSION['cart'], 'total')); ?> $</p>
        <a href="checkout.php">Proceed to Checkout</a>
    <?php endif; ?>
    <br><br>
    <a href="products.php">Back to Products</a>
</body>
</html>


<?php
session_start();

$id = $_GET['id'];

if (isset($_SESSION['cart'][$id])) {
    unset($_SESSION['cart'][$id]);
}

// Redirect back to view cart page
header("Location: view_cart.php");
exit();


<?php
session_start();

if (empty($_SESSION['cart'])) {
    header("Location: products.php");
    exit();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
</head>
<body>
    <h1>Proceed to Checkout</h1>
    <form action="process_payment.php" method="post">
        <div>
            <label for="name">Name:</label><br>
            <input type="text" id="name" name="name" required><br>
        </div>

        <div>
            <label for="email">Email:</label><br>
            <input type="email" id="email" name="email" required><br>
        </div>

        <div>
            <label for="phone">Phone:</label><br>
            <input type="tel" id="phone" name="phone" required><br>
        </div>

        <div>
            <label for="address">Address:</label><br>
            <textarea id="address" name="address" rows="4" cols="50" required></textarea><br>
        </div>

        <input type="submit" value="Place Order">
    </form>
</body>
</html>


<?php
session_start();

if (empty($_SESSION['cart'])) {
    header("Location: products.php");
    exit();
}

// Get user input
$name = $_POST['name'];
$email = $_POST['email'];
$phone = $_POST['phone'];
$address = $_POST['address'];

// Simulate payment processing here
// In a real application, you would integrate with a payment gateway

// For now, just confirm the order
$total_amount = array_sum(array_column($_SESSION['cart'], 'total'));

// Store the order in the database
try {
    $conn = new PDO("mysql:host=localhost;dbname=shop", "root", "");
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

    // Insert into orders table
    $stmt_order = $conn->prepare('INSERT INTO orders (user_id, total_amount, status) VALUES (?, ?, ?)');
    $stmt_order->execute([1, $total_amount, 'pending']);

    $order_id = $conn->lastInsertId();

    foreach ($_SESSION['cart'] as $item) {
        // Insert into order_items table
        $stmt_item = $conn->prepare('INSERT INTO order_items (order_id, product_id, quantity, price) VALUES (?, ?, ?, ?)');
        $stmt_item->execute([$order_id, 1, $item['quantity'], $item['price']]);
    }

} catch(PDOException $e) {
    die("Error: " . $e->getMessage());
}

// Clear the cart
unset($_SESSION['cart']);

// Redirect to confirmation page
header("Location: order_confirmation.php?order_id=" . $order_id);
exit();


<?php
session_start();

$order_id = $_GET['order_id'];
?>

<!DOCTYPE html>
<html>
<head>
    <title>Order Confirmation</title>
</head>
<body>
    <h1>Thank you for your order!</h1>
    <p>Your order number is: <?php echo $order_id; ?></p>
    <p>We will contact you soon to confirm your payment and processing details.</p>
    <br><br>
    <a href="products.php">Continue Shopping</a>
</body>
</html>


<?php
// Connect to the database
$host = 'localhost';
$dbname = 'shop';
$user = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $user, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

    // Fetch orders for the current user
    $stmt = $conn->prepare('SELECT * FROM orders WHERE user_id = ?');
    $stmt->execute([1]); // Assuming logged-in user is ID 1
    $orders = $stmt->fetchAll();

} catch(PDOException $e) {
    echo "Error: " . $e->getMessage();
}

// Close the connection
$conn = null;
?>

<!DOCTYPE html>
<html>
<head>
    <title>Orders History</title>
</head>
<body>
    <h1>Your Orders History</h1>
    <?php if (empty($orders)): ?>
        <p>No orders yet.</p>
    <?php else: ?>
        <table border="1">
            <tr>
                <th>Order ID</th>
                <th>Date</th>
                <th>Total Amount</th>
                <th>Status</th>
            </tr>
            <?php foreach ($orders as $order): ?>
                <tr>
                    <td><?php echo $order['id']; ?></td>
                    <td><?php echo $order['created_at']; ?></td>
                    <td><?php echo $order['total_amount']; ?> $</td>
                    <td><?php echo $order['status']; ?></td>
                </tr>
            <?php endforeach; ?>
        </table>
    <?php endif; ?>
</body>
</html>


CREATE TABLE products (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock INT NOT NULL
);

CREATE TABLE orders (
    id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT,
    total_amount DECIMAL(10, 2),
    payment_status ENUM('pending', 'completed'),
    order_date DATETIME DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE order_items (
    id INT AUTO_INCREMENT PRIMARY KEY,
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    FOREIGN KEY (order_id) REFERENCES orders(id),
    FOREIGN KEY (product_id) REFERENCES products(id)
);


<?php
session_start();

// Connect to database
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "myDB";

$conn = new mysqli($servername, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Get products from database
$sql = "SELECT * FROM products";
$result = $conn->query($sql);

if ($result->num_rows > 0) {
    while($row = $result->fetch_assoc()) {
        echo "<div class='product'>";
        echo "<h2>" . $row['name'] . "</h2>";
        echo "<p>" . $row['description'] . "</p>";
        echo "<p>Price: $" . number_format($row['price'], 2) . "</p>";
        echo "<p>Stock: " . $row['stock'] . "</p>";
        if (isset($_SESSION['cart'][$row['id']])) {
            echo "<p>Quantity in cart: " . $_SESSION['cart'][$row['id']] . "</p>";
        }
        echo "<form method='post' action='add_to_cart.php'>";
        echo "<input type='hidden' name='product_id' value='" . $row['id'] . "'>";
        echo "<input type='number' name='quantity' min='1' max='" . $row['stock'] . "' value='1'>";
        echo "<input type='submit' name='add_to_cart' value='Add to Cart'>";
        echo "</form>";
        echo "</div><br>";
    }
} else {
    echo "No products found";
}

$conn->close();
?>


<?php
session_start();

if (isset($_POST['add_to_cart'])) {
    $product_id = $_POST['product_id'];
    $quantity = $_POST['quantity'];

    if (!isset($_SESSION['cart'][$product_id])) {
        $_SESSION['cart'][$product_id] = 0;
    }

    $_SESSION['cart'][$product_id] += $quantity;

    header("Location: products.php");
}
?>


<?php
session_start();

echo "<h2>Your Cart</h2>";
echo "<table border='1'>";
echo "<tr><th>Product</th><th>Quantity</th><th>Price</th><th>Total</th></tr>";

$total = 0;

foreach ($_SESSION['cart'] as $product_id => $quantity) {
    $conn = new mysqli($servername, $username, $password, $dbname);
    $sql = "SELECT * FROM products WHERE id=" . $product_id;
    $result = $conn->query($sql);

    if ($result->num_rows > 0) {
        $row = $result->fetch_assoc();
        $price = $row['price'];
        $total_price = $quantity * $price;

        echo "<tr>";
        echo "<td>" . $row['name'] . "</td>";
        echo "<td><form method='post' action='update_cart.php'><input type='hidden' name='product_id' value='" . $row['id'] . "'>";
        echo "<input type='number' name='quantity' min='1' max='" . $row['stock'] . "' value='" . $quantity . "'>";
        echo "<input type='submit' name='update_cart' value='Update'></form></td>";
        echo "<td>$" . number_format($price, 2) . "</td>";
        echo "<td>$" . number_format($total_price, 2) . "</td>";
        echo "<td><a href='remove_from_cart.php?product_id=" . $row['id'] . "'>Remove</a></td>";
        echo "</tr>";

        $total += $total_price;
    }

    $conn->close();
}

echo "<tr><td colspan='3'><strong>Total:</strong></td><td><strong>$" . number_format($total, 2) . "</strong></td><td></td></tr>";
echo "</table><br>";
echo "<a href='checkout.php'>Proceed to Checkout</a>";
?>


<?php
session_start();

if (isset($_POST['update_cart'])) {
    $product_id = $_POST['product_id'];
    $quantity = $_POST['quantity'];

    if ($quantity < 1) {
        unset($_SESSION['cart'][$product_id]);
    } else {
        $_SESSION['cart'][$product_id] = $quantity;
    }

    header("Location: cart.php");
}
?>


<?php
session_start();

if (isset($_GET['product_id'])) {
    unset($_SESSION['cart'][$_GET['product_id']]);
    header("Location: cart.php");
}
?>


<?php
session_start();

echo "<h2>Checkout</h2>";
echo "<form method='post' action='process_payment.php'>";
echo "<table border='1'>";
echo "<tr><th>Product</th><th>Quantity</th><th>Price</th><th>Total</th></tr>";

$total = 0;

foreach ($_SESSION['cart'] as $product_id => $quantity) {
    $conn = new mysqli($servername, $username, $password, $dbname);
    $sql = "SELECT * FROM products WHERE id=" . $product_id;
    $result = $conn->query($sql);

    if ($result->num_rows > 0) {
        $row = $result->fetch_assoc();
        $price = $row['price'];
        $total_price = $quantity * $price;

        echo "<tr>";
        echo "<td>" . $row['name'] . "</td>";
        echo "<td>" . $quantity . "</td>";
        echo "<td>$" . number_format($price, 2) . "</td>";
        echo "<td>$" . number_format($total_price, 2) . "</td>";
        echo "</tr>";

        $total += $total_price;
    }

    $conn->close();
}

echo "<tr><td colspan='3'><strong>Total:</strong></td><td><strong>$" . number_format($total, 2) . "</strong></td></tr>";
echo "</table><br>";

echo "<h3>Shipping Information</h3>";
echo "<input type='text' name='first_name' placeholder='First Name'>";
echo "<input type='text' name='last_name' placeholder='Last Name'>";
echo "<input type='email' name='email' placeholder='Email Address'>";
echo "<textarea name='address' placeholder='Shipping Address'></textarea>";
echo "<input type='text' name='city' placeholder='City'>";
echo "<select name='state'><option>State</option></select>";
echo "<input type='text' name='zip_code' placeholder='Zip Code'>";
echo "<input type='submit' value='Place Order'>";
echo "</form>";
?>


<?php
session_start();

// Simulate payment processing
$order_total = 0;

foreach ($_SESSION['cart'] as $product_id => $quantity) {
    // Check if product is in stock
    $conn = new mysqli($servername, $username, $password, $dbname);
    $sql = "SELECT * FROM products WHERE id=" . $product_id;
    $result = $conn->query($sql);

    if ($result->num_rows > 0) {
        $row = $result->fetch_assoc();
        $price = $row['price'];
        $total_price = $quantity * $price;

        // Update stock
        $new_stock = $row['stock'] - $quantity;
        if ($new_stock < 0) {
            die("Error: Not enough stock for " . $row['name']);
        }
        $conn->query("UPDATE products SET stock=" . $new_stock . " WHERE id=" . $product_id);

        $order_total += $total_price;
    }

    $conn->close();
}

// Insert order into database
$conn = new mysqli($servername, $username, $password, $dbname);
$sql = "INSERT INTO orders (user_id, total_amount, payment_status) VALUES (1, " . $order_total . ", 'completed')";
$conn->query($sql);

$last_order_id = $conn->insert_id;

// Insert order items into database
foreach ($_SESSION['cart'] as $product_id => $quantity) {
    $sql = "INSERT INTO order_items (order_id, product_id, quantity, price) VALUES (" . $last_order_id . ", " . $product_id . ", " . $quantity . ", (SELECT price FROM products WHERE id=" . $product_id . "))";
    $conn->query($sql);
}

$conn->close();

// Clear cart
unset($_SESSION['cart']);

header("Location: thank_you.php");
?>


<?php
session_start();

echo "<h2>Thank You for Your Order!</h2>";
echo "<p>Your order has been received and is being processed.</p>";
echo "<p>A confirmation email will be sent to your provided email address.</p>";
?>


<?php
$host = "localhost";
$username = "root";
$password = "";
$dbname = "eshop";

$conn = mysqli_connect($host, $username, $password, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}
?>


<?php
include 'db_connection.php';

$sql = "SELECT * FROM products";
$result = mysqli_query($conn, $sql);

if (mysqli_num_rows($result) > 0) {
    while ($row = mysqli_fetch_assoc($result)) {
        echo "<div class='product'>";
        echo "<h2>" . $row['name'] . "</h2>";
        echo "<p>Price: $" . $row['price'] . "</p>";
        echo "<button onclick='addToCart(" . $row['id'] . ")'>Add to Cart</button>";
        echo "</div>";
    }
} else {
    echo "No products found.";
}

mysqli_close($conn);
?>


<?php
session_start();

if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

function add_to_cart($product_id, $quantity) {
    if ($quantity <= 0) {
        return;
    }
    
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['id'] == $product_id) {
            $item['quantity'] += $quantity;
            return;
        }
    }
    
    $_SESSION['cart'][] = array(
        'id' => $product_id,
        'quantity' => $quantity
    );
}

function update_cart($product_id, $quantity) {
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['id'] == $product_id) {
            $item['quantity'] = $quantity;
            return;
        }
    }
}

function remove_from_cart($product_id) {
    $_SESSION['cart'] = array_values(array_filter($_SESSION['cart'], function($item) use ($product_id) {
        return $item['id'] != $product_id;
    }));
}
?>


<?php
session_start();

if (empty($_SESSION['cart'])) {
    header("Location: products.php");
    exit();
}

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $user_id = $_SESSION['user_id'];
    $total_amount = calculate_total();

    // Insert order into database
    $sql = "INSERT INTO orders (user_id, total_amount, order_date) VALUES (?, ?, NOW())";
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, "id", $user_id, $total_amount);
    mysqli_stmt_execute($stmt);
    $order_id = mysqli_insert_id($conn);

    // Insert order items
    foreach ($_SESSION['cart'] as $item) {
        $sql_item = "INSERT INTO order_items (order_id, product_id, quantity) VALUES (?, ?, ?)";
        $stmt_item = mysqli_prepare($conn, $sql_item);
        mysqli_stmt_bind_param($stmt_item, "iii", $order_id, $item['id'], $item['quantity']);
        mysqli_stmt_execute($stmt_item);
    }

    // Process payment
    process_payment($total_amount, $order_id);

    unset($_SESSION['cart']);
    header("Location: confirmation.php?order_id=$order_id");
    exit();
}

function calculate_total() {
    global $conn;
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $sql = "SELECT price FROM products WHERE id=?";
        $stmt = mysqli_prepare($conn, $sql);
        mysqli_stmt_bind_param($stmt, "i", $item['id']);
        mysqli_stmt_execute($stmt);
        mysqli_stmt_store_result($stmt);
        mysqli_stmt_bind_result($stmt, $price);
        mysqli_stmt_fetch($stmt);
        $total += $price * $item['quantity'];
    }
    return $total;
}

function process_payment($amount, $order_id) {
    // Implement your payment processing logic here
    // For this example, we'll just mark the payment as completed
    $sql = "INSERT INTO payments (order_id, amount, status) VALUES (?, ?, 'completed')";
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, "id", $order_id, $amount);
    mysqli_stmt_execute($stmt);
}
?>


<?php
session_start();

if (!isset($_GET['order_id'])) {
    header("Location: checkout.php");
    exit();
}

$order_id = $_GET['order_id'];

// Display confirmation message and order details here
?>


<?php
session_start();

if (!isset($_SESSION['user_id'])) {
    header("Location: login.php");
    exit();
}

$user_id = $_SESSION['user_id'];

$sql = "SELECT * FROM orders WHERE user_id=?";
$stmt = mysqli_prepare($conn, $sql);
mysqli_stmt_bind_param($stmt, "i", $user_id);
mysqli_stmt_execute($stmt);
$result = mysqli_stmt_get_result($stmt);

if (mysqli_num_rows($result) > 0) {
    while ($order = mysqli_fetch_assoc($result)) {
        echo "<div class='order'>";
        echo "<h3>Order #{$order['order_id']}</h3>";
        echo "<p>Status: {$order['status']}</p>";
        echo "<p>Date: {$order['order_date']}</p>";
        echo "</div>";
    }
} else {
    echo "No orders found.";
}
?>


<?php
function send_order_confirmation($to, $subject, $message) {
    $headers = 'From: your_shop@example.com' . "\r
";
    $headers .= 'Reply-To: your_shop@example.com' . "\r
";
    $headers .= 'X-Mailer: PHP/' . phpversion();

    mail($to, $subject, $message, $headers);
}

// Usage example:
$to = "customer@example.com";
$subject = "Order Confirmation #12345";
$message = "Thank you for your order! Your order has been received and is being processed.";

send_order_confirmation($to, $subject, $message);
?>


<?php
// Initialize session
session_start();

// Product list
$products = array(
    array('id' => 1, 'name' => 'Product 1', 'description' => 'Description for product 1', 'price' => 29.99),
    array('id' => 2, 'name' => 'Product 2', 'description' => 'Description for product 2', 'price' => 49.99),
    array('id' => 3, 'name' => 'Product 3', 'description' => 'Description for product 3', 'price' => 19.99),
);

// Shopping cart management
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

function addToCart($productId) {
    global $products;
    
    foreach ($products as $product) {
        if ($product['id'] == $productId) {
            $_SESSION['cart'][$productId] = $product;
            break;
        }
    }
}

function removeFromCart($productId) {
    if (isset($_SESSION['cart'][$productId])) {
        unset($_SESSION['cart'][$productId]);
    }
}

function calculateTotal() {
    $total = 0;
    
    foreach ($_SESSION['cart'] as $item) {
        $total += $item['price'];
    }
    
    return $total;
}

// Process purchase
if (isset($_POST['checkout'])) {
    // Validate form fields
    $required_fields = array('name', 'email', 'address', 'phone');
    $error = false;

    foreach ($required_fields as $field) {
        if (!isset($_POST[$field]) || empty($_POST[$field])) {
            $error = true;
            break;
        }
    }

    if (!$error && !empty($_SESSION['cart'])) {
        // Process payment (basic example - replace with actual payment processing)
        $paymentAmount = calculateTotal();

        // Payment processing logic here
        // You would typically integrate a payment gateway like Stripe, PayPal, etc.

        // For this example, we'll just simulate successful payment
        if ($paymentAmount > 0) {
            // Clear cart after purchase
            $_SESSION['cart'] = array();
            
            // Show success message
            echo "<h2>Thank you for your purchase!</h2>";
            echo "<p>Your order has been processed successfully.</p>";
        } else {
            echo "Error: Cart is empty.";
        }
    } else {
        echo "Please fill in all required fields and make sure your cart isn't empty.";
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
    <style>
        body { font-family: Arial, sans-serif; margin: 20px; }
        .product-list { list-style: none; padding: 0; }
        .product-item { padding: 10px; border-bottom: 1px solid #ddd; }
        .cart-total { font-size: 24px; font-weight: bold; margin-top: 20px; }
        .checkout-form { margin-top: 20px; padding: 20px; background-color: #f9f9f9; border-radius: 5px; }
    </style>
</head>
<body>
    <?php if (!empty($products)) : ?>
        <h1>Products for Sale</h1>
        <ul class="product-list">
            <?php foreach ($products as $product) : ?>
                <li class="product-item">
                    <h3><?php echo $product['name']; ?></h3>
                    <p><?php echo $product['description']; ?></p>
                    <p>Price: $<?php echo number_format($product['price'], 2); ?></p>
                    <form action="" method="post">
                        <input type="hidden" name="add_to_cart" value="<?php echo $product['id']; ?>">
                        <button type="submit">Add to Cart</button>
                    </form>
                </li>
            <?php endforeach; ?>
        </ul>
    <?php endif; ?>

    <?php if (!empty($_SESSION['cart'])) : ?>
        <h2>Your Shopping Cart</h2>
        <div class="cart-items">
            <?php foreach ($_SESSION['cart'] as $item) : ?>
                <div class="cart-item">
                    <h3><?php echo $item['name']; ?></h3>
                    <p><?php echo $item['description']; ?></p>
                    <p>Price: $<?php echo number_format($item['price'], 2); ?></p>
                    <form action="" method="post">
                        <input type="hidden" name="remove_from_cart" value="<?php echo $item['id']; ?>">
                        <button type="submit">Remove</button>
                    </form>
                </div>
            <?php endforeach; ?>
        </div>
        
        <div class="cart-total">
            Subtotal: $<?php echo number_format(calculateTotal(), 2); ?>
        </div>

        <div class="checkout-form">
            <h3>Checkout Form</h3>
            <form action="" method="post">
                <label for="name">Name:</label><br>
                <input type="text" name="name" required><br><br>

                <label for="email">Email:</label><br>
                <input type="email" name="email" required><br><br>

                <label for="address">Address:</label><br>
                <input type="text" name="address" required><br><br>

                <label for="phone">Phone:</label><br>
                <input type="tel" name="phone" required><br><br>

                <button type="submit" name="checkout">Complete Purchase</button>
            </form>
        </div>
    <?php else : ?>
        <p>Your cart is empty.</p>
    <?php endif; ?>

    <!-- Handle form actions -->
    <?php if (isset($_POST['add_to_cart'])) {
        addToCart($_POST['add_to_cart']);
        header("Location: " . $_SERVER['PHP_SELF']);
    } elseif (isset($_POST['remove_from_cart'])) {
        removeFromCart($_POST['remove_from_cart']);
        header("Location: " . $_SERVER['PHP_SELF']);
    } ?>
</body>
</html>


<?php
// item_selection.php
session_start();

// Sample items (you can replace this with a database query)
$items = array(
    array('id' => 1, 'name' => 'Product A', 'price' => 29.99),
    array('id' => 2, 'name' => 'Product B', 'price' => 49.99),
    array('id' => 3, 'name' => 'Product C', 'price' => 19.99)
);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Select Items</title>
</head>
<body>
    <h2>Select Items to Purchase</h2>
    <form action="process_purchase.php" method="post">
        <?php foreach ($items as $item): ?>
            <div>
                <input type="checkbox" name="selected_items[<?php echo $item['id']; ?>]" value="<?php echo $item['price']; ?>">
                <?php echo $item['name']; ?> - $<?php echo number_format($item['price'], 2); ?>
                <br>
            </div>
        <?php endforeach; ?>
        <input type="submit" name="purchase" value="Purchase Selected Items">
    </form>
</body>
</html>


<?php
// process_purchase.php
session_start();

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    if (isset($_POST['purchase'])) {
        // Get selected items from form
        $selected_items = $_POST['selected_items'];
        
        if (empty($selected_items)) {
            die("Error: No items selected!");
        }
        
        // Process each item
        $total_price = 0;
        foreach ($selected_items as $item_id => $price) {
            $total_price += $price;
        }
        
        // Display confirmation
        header('Location: receipt.php?total=' . urlencode($total_price));
    }
}
?>


<?php
// receipt.php
session_start();

$total = isset($_GET['total']) ? $_GET['total'] : 0;
?>

<!DOCTYPE html>
<html>
<head>
    <title>Purchase Confirmation</title>
</head>
<body>
    <h2>Thank You for Your Purchase!</h2>
    <p>Your total is: $<?php echo number_format($total, 2); ?></p>
    
    <!-- Add payment processing logic here -->
    <?php
    // Example payment processing (replace with actual payment gateway integration)
    if ($total > 0) {
        // Simulate payment processing
        sleep(1);
        echo "<h3>Payment Successful!</h3>";
    } else {
        echo "<h3>Error: No items purchased</h3>";
    }
    ?>
    
    <p>Your order will be processed shortly. Thank you for choosing our store!</p>
</body>
</html>


<?php
// Database configuration
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "shop";

// Create connection
$conn = new mysqli($servername, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Product class
class Product {
    private $conn;

    public function __construct($db_connection) {
        $this->conn = $db_connection;
    }

    // Get product details
    public function getProduct($id) {
        $stmt = $this->conn->prepare("SELECT * FROM products WHERE id = ?");
        $stmt->bind_param("i", $id);
        $stmt->execute();
        return $result = $stmt->get_result()->fetch_assoc();
    }
}

// Order class
class Order {
    private $conn;

    public function __construct($db_connection) {
        $this->conn = $db_connection;
    }

    // Create new order
    public function createOrder($user_id, $total_amount) {
        $stmt = $this->conn->prepare("INSERT INTO orders (user_id, total_amount) VALUES (?, ?)");
        $stmt->bind_param("is", $user_id, $total_amount);
        return $stmt->execute();
    }

    // Get order details
    public function getOrderDetails($order_id) {
        $stmt = $this->conn->prepare("SELECT * FROM orders WHERE id = ?");
        $stmt->bind_param("i", $order_id);
        $stmt->execute();
        return $result = $stmt->get_result()->fetch_assoc();
    }
}

// Payment class
class Payment {
    private $conn;

    public function __construct($db_connection) {
        $this->conn = $db_connection;
    }

    // Process payment
    public function processPayment($order_id, $amount, $payment_method) {
        $stmt = $this->conn->prepare("INSERT INTO payments (order_id, amount, payment_method) VALUES (?, ?, ?)");
        $stmt->bind_param("ids", $order_id, $amount, $payment_method);
        return $stmt->execute();
    }
}

// Initialize classes
$product = new Product($conn);
$order = new Order($conn);
$payment = new Payment($conn);

// Add to cart functionality
if (isset($_GET['action']) && $_GET['action'] == 'add_to_cart') {
    if (!isset($_SESSION)) {
        session_start();
    }

    $product_id = intval($_GET['id']);
    $quantity = intval($_GET['quantity']);

    if ($quantity <= 0) {
        die("Quantity must be at least 1");
    }

    // Get product details
    $product_details = $product->getProduct($product_id);

    // Add to cart
    if (empty($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }

    $_SESSION['cart'][$product_id] = array(
        'name' => $product_details['name'],
        'price' => $product_details['price'],
        'quantity' => $quantity,
        'total' => $product_details['price'] * $quantity
    );

    header("Location: cart.php");
}

// Cart page (cart.php)
session_start();

$cart = $_SESSION['cart'];
$total = 0;

foreach ($cart as $item) {
    $total += $item['total'];
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <h1>Your Shopping Cart</h1>
    <?php if (!empty($cart)) : ?>
        <table>
            <tr>
                <th>Product</th>
                <th>Price</th>
                <th>Quantity</th>
                <th>Total</th>
            </tr>
            <?php foreach ($cart as $item) : ?>
                <tr>
                    <td><?php echo $item['name']; ?></td>
                    <td><?php echo "$" . number_format($item['price'], 2); ?></td>
                    <td><?php echo $item['quantity']; ?></td>
                    <td><?php echo "$" . number_format($item['total'], 2); ?></td>
                </tr>
            <?php endforeach; ?>
        </table>
        <h3>Subtotal: <?php echo "$" . number_format($total, 2); ?></h3>
        <h3>Tax (10%): <?php echo "$" . number_format($total * 0.1, 2); ?></h3>
        <h3>Total: <?php echo "$" . number_format(($total + $total * 0.1), 2); ?></h3>
        <form action="checkout.php" method="post">
            <input type="submit" name="checkout" value="Checkout">
        </form>
    <?php else : ?>
        <p>Your cart is empty</p>
    <?php endif; ?>
</body>
</html>

// Checkout page (checkout.php)
session_start();

if (isset($_POST['checkout'])) {
    $user_id = 1; // Replace with actual user authentication
    $cart = $_SESSION['cart'];
    $total = 0;

    foreach ($cart as $item) {
        $total += $item['total'];
    }

    $order_total = $total + $total * 0.1; // Adding 10% tax

    // Create order
    $order_id = $order->createOrder($user_id, $order_total);

    if ($order_id) {
        // Process payment
        $payment_result = $payment->processPayment($order_id, $order_total, "credit_card"); // Replace with actual payment method

        if ($payment_result) {
            header("Location: confirmation.php?order_id=" . $order_id);
        } else {
            die("Payment processing failed");
        }
    } else {
        die("Order creation failed");
    }
}

// Order confirmation page (confirmation.php)
session_start();

$order_id = intval($_GET['order_id']);
$order_details = $order->getOrderDetails($order_id);

if ($order_details) : ?>
<!DOCTYPE html>
<html>
<head>
    <title>Order Confirmation</title>
</head>
<body>
    <h1>Order #<?php echo $order_id; ?></h1>
    <p>Total Amount: <?php echo "$" . number_format($order_details['total_amount'], 2); ?></p>
    <p>Status: Completed</p>
    <a href="products.php">Continue Shopping</a>
</body>
</html>
<?php else : ?>
    <h1>Order Not Found</h1>
<?php endif; ?>

// View past orders (orders.php)
session_start();

$user_id = 1; // Replace with actual user authentication
$stmt = $conn->prepare("SELECT * FROM orders WHERE user_id = ?");
$stmt->bind_param("i", $user_id);
$stmt->execute();
$result = $stmt->get_result();

if ($result->num_rows > 0) : ?>
<!DOCTYPE html>
<html>
<head>
    <title>Past Orders</title>
</head>
<body>
    <h1>Your Past Orders</h1>
    <?php while ($order = $result->fetch_assoc()) : ?>
        <div>
            <h3>Order #<?php echo $order['id']; ?></h3>
            <p>Date: <?php echo $order['created_at']; ?></p>
            <p>Total Amount: <?php echo "$" . number_format($order['total_amount'], 2); ?></p>
        </div>
    <?php endwhile; ?>
</body>
</html>
<?php endif; ?>

// Database tables creation

CREATE TABLE products (
    id INT PRIMARY KEY AUTO_INCREMENT,
    name VARCHAR(255),
    price DECIMAL(10,2)
);

CREATE TABLE users (
    id INT PRIMARY KEY AUTO_INCREMENT,
    username VARCHAR(255),
    password_hash VARCHAR(255),
    email VARCHAR(255)
);

CREATE TABLE orders (
    id INT PRIMARY KEY AUTO_INCREMENT,
    user_id INT,
    total_amount DECIMAL(10,2),
    created_at DATETIME
);

CREATE TABLE order_details (
    id INT PRIMARY KEY AUTO_INCREMENT,
    order_id INT,
    product_id INT,
    quantity INT,
    price DECIMAL(10,2)
);

CREATE TABLE payments (
    id INT PRIMARY KEY AUTO_INCREMENT,
    order_id INT,
    amount DECIMAL(10,2),
    payment_method VARCHAR(255)
);
?>


<?php
session_start();

// Initialize products array (you can replace this with data from your database)
$products = array(
    1 => array('id' => 1, 'name' => 'Product 1', 'price' => 29.99),
    2 => array('id' => 2, 'name' => 'Product 2', 'price' => 49.99),
    3 => array('id' => 3, 'name' => 'Product 3', 'price' => 19.99)
);

// Initialize cart if not exists
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to the cart
function addToCart($productId) {
    global $products;
    
    if (isset($products[$productId])) {
        $product = $products[$productId];
        
        // Check if product is already in the cart
        foreach ($_SESSION['cart'] as &$item) {
            if ($item['id'] == $product['id']) {
                $item['quantity']++;
                return;
            }
        }
        
        // If not, add new item to the cart
        $_SESSION['cart'][] = array(
            'id' => $product['id'],
            'name' => $product['name'],
            'price' => $product['price'],
            'quantity' => 1
        );
    }
}

// Function to update quantity of an item in the cart
function updateQuantity($productId, $newQuantity) {
    if ($newQuantity < 1) {
        return;
    }
    
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['id'] == $productId) {
            $item['quantity'] = $newQuantity;
            break;
        }
    }
}

// Function to delete an item from the cart
function deleteItem($productId) {
    $_SESSION['cart'] = array_filter($_SESSION['cart'], function($item) use ($productId) {
        return $item['id'] != $productId;
    });
}

// Function to calculate total price of the cart
function getCartTotal() {
    $total = 0;
    
    foreach ($_SESSION['cart'] as $item) {
        $total += $item['price'] * $item['quantity'];
    }
    
    return $total;
}
?>


<?php
include('cart-functions.php');
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
    <style>
        .cart-item {
            border: 1px solid #ddd;
            padding: 10px;
            margin-bottom: 10px;
        }
        .total-price {
            font-weight: bold;
            font-size: 20px;
        }
    </style>
</head>
<body>
    <h1>Shopping Cart</h1>

    <?php if (!empty($_SESSION['cart'])) : ?>
        <div class="cart-items">
            <?php foreach ($_SESSION['cart'] as $item) : ?>
                <div class="cart-item">
                    <h3><?php echo $item['name']; ?></h3>
                    <p>Price: <?php echo $item['price']; ?>$</p>
                    <form action="" method="post">
                        <input type="hidden" name="productId" value="<?php echo $item['id']; ?>">
                        <label>Quantity: </label>
                        <input type="number" name="quantity" min="1" value="<?php echo $item['quantity']; ?>">
                        <button type="submit">Update</button>
                    </form>
                    <a href="cart-functions.php?delete=<?php echo $item['id']; ?>">Delete</a>
                </div>
            <?php endforeach; ?>
        </div>

        <p class="total-price">
            Total: <?php echo getCartTotal(); ?>$
        </p>

        <a href="products.php">Continue Shopping</a>
    <?php else : ?>
        <p>Your cart is empty.</p>
        <a href="products.php">Start shopping</a>
    <?php endif; ?>

    <!-- Handle form submissions -->
    <?php
    if ($_SERVER['REQUEST_METHOD'] == 'POST') {
        $productId = $_POST['productId'];
        $newQuantity = $_POST['quantity'];
        updateQuantity($productId, $newQuantity);
        header('Location: cart.php');
        exit();
    }

    if (isset($_GET['delete'])) {
        deleteItem($_GET['delete']);
        header('Location: cart.php');
        exit();
    }
    ?>
</body>
</html>


<?php
session_start();

function init_cart() {
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }
}

init_cart();
?>


<?php
function add_to_cart($item_id, $quantity) {
    if (isset($_SESSION['cart'][$item_id])) {
        $_SESSION['cart'][$item_id] += $quantity;
    } else {
        $_SESSION['cart'][$item_id] = $quantity;
    }
}
?>


<?php
function remove_from_cart($item_id) {
    if (isset($_SESSION['cart'][$item_id])) {
        unset($_SESSION['cart'][$item_id]);
    }
}
?>


<?php
function calculate_total() {
    $total = 0;
    foreach ($_SESSION['cart'] as $item_id => $quantity) {
        // Assuming you have an array or database query to get item prices
        $item_price = get_item_price($item_id);
        $total += ($item_price * $quantity);
    }
    return $total;
}

function get_item_price($item_id) {
    // Replace this with your actual data source (e.g., database)
    $prices = array(
        1 => 10.99,
        2 => 15.99,
        3 => 20.99
    );
    return isset($prices[$item_id]) ? $prices[$item_id] : 0;
}
?>


<?php
session_start();

if (isset($_POST['submit'])) {
    // Get user input
    $name = $_POST['name'];
    $email = $_POST['email'];
    $address = $_POST['address'];
    $payment_method = $_POST['payment_method'];

    // Validate input
    if (empty($name) || empty($email) || empty($address)) {
        die("Please fill in all required fields.");
    }

    // Process payment
    if ($payment_method == 'credit_card') {
        // Implement credit card processing logic here
        echo "Processing credit card payment...";
    } elseif ($payment_method == 'paypal') {
        // Implement PayPal processing logic here
        echo "Processing PayPal payment...";
    } else {
        die("Invalid payment method.");
    }

    // Store the order in a database or file
    $order = array(
        'name' => $name,
        'email' => $email,
        'address' => $address,
        'items' => $_SESSION['cart'],
        'total' => calculate_total()
    );

    // Clear the cart after purchase
    unset($_SESSION['cart']);
}
?>


<?php
session_start();
init_cart();

echo "<h1>Shopping Cart</h1>";
echo "<table border='1'>";
echo "<tr><th>Item ID</th><th>Quantity</th><th>Price</th><th>Action</th></tr>";

foreach ($_SESSION['cart'] as $item_id => $quantity) {
    $price = get_item_price($item_id);
    echo "<tr>";
    echo "<td>$item_id</td>";
    echo "<td>$quantity</td>";
    echo "<td>$$price</td>";
    echo "<td><a href='remove.php?id=$item_id'>Remove</a></td>";
    echo "</tr>";
}

echo "</table>";
echo "<p>Total: $" . calculate_total() . "</p>";
?>


<?php
session_start();
if (isset($_GET['id'])) {
    remove_from_cart($_GET['id']);
}
header("Location: cart.php");
exit();
?>


<?php
echo "<h1>Checkout</h1>";
echo "<form method='post' action='process.php'>";
echo "<p>Name: <input type='text' name='name' required></p>";
echo "<p>Email: <input type='email' name='email' required></p>";
echo "<p>Address: <input type='text' name='address' required></p>";
echo "<p>Payment Method: ";
echo "<select name='payment_method'>";
echo "<option value='credit_card'>Credit Card</option>";
echo "<option value='paypal'>PayPal</option>";
echo "</select></p>";
echo "<input type='submit' name='submit' value='Purchase'>";
echo "</form>";
?>


<?php
session_start();

if (isset($_POST['submit'])) {
    // Validate and process the purchase
    // Use the functions from previous steps
}
?>


class Product {
    private $id;
    private $name;
    private $description;
    private $price;
    private $stock;

    public function __construct($id, $name, $description, $price, $stock) {
        $this->id = $id;
        $this->name = $name;
        $this->description = $description;
        $this->price = $price;
        $this->stock = $stock;
    }

    // Getters and setters
}


class Order {
    private $id;
    private $user_id;
    private $order_date;
    private $total_amount;
    private $status;

    public function __construct($id, $user_id, $order_date, $total_amount, $status) {
        $this->id = $id;
        $this->user_id = $user_id;
        $this->order_date = $order_date;
        $this->total_amount = $total_amount;
        $this->status = $status;
    }

    // Getters and setters
}


<?php include 'db_connection.php'; ?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Product List</title>
    <style>
        /* Add your CSS styles here */
    </style>
</head>
<body>
    <h1>Products</h1>
    <?php
        $sql = "SELECT * FROM products";
        $result = mysqli_query($conn, $sql);

        if (mysqli_num_rows($result) > 0) {
            while ($row = mysqli_fetch_assoc($result)) {
                echo "<div class='product'>";
                echo "<h2>" . $row['name'] . "</h2>";
                echo "<p>Description: " . $row['description'] . "</p>";
                echo "<p>Price: $" . number_format($row['price'], 2) . "</p>";
                echo "<form action='add_to_cart.php' method='POST'>";
                echo "<input type='hidden' name='product_id' value='" . $row['id'] . "'>";
                echo "<input type='number' name='quantity' min='1' max='" . $row['stock'] . "' required>";
                echo "<button type='submit'>Add to Cart</button>";
                echo "</form>";
                echo "</div>";
            }
        } else {
            echo "No products available.";
        }
    ?>
</body>
</html>


<?php include 'db_connection.php'; ?>

<?php
session_start();

$product_id = $_POST['product_id'];
$quantity = $_POST['quantity'];

// Check if the product exists and has enough stock
$sql = "SELECT * FROM products WHERE id = $product_id";
$result = mysqli_query($conn, $sql);
$product = mysqli_fetch_assoc($result);

if ($product && $product['stock'] >= $quantity) {
    // Add to cart (store in session)
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }

    $_SESSION['cart'][$product_id] = array(
        'name' => $product['name'],
        'price' => $product['price'],
        'quantity' => $quantity
    );

    echo "Product added to cart.";
} else {
    echo "Error adding product to cart.";
}

mysqli_close($conn);
?>


<?php include 'db_connection.php'; ?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Checkout</title>
    <style>
        /* Add your CSS styles here */
    </style>
</head>
<body>
    <?php session_start(); ?>

    <?php if (!empty($_SESSION['cart'])) : ?>
        <h1>Checkout</h1>

        <form action="process_payment.php" method="POST">
            <div class="checkout-form">
                <h2>Billing Information</h2>
                <input type="text" name="name" placeholder="Full Name" required><br>
                <input type="email" name="email" placeholder="Email Address" required><br>
                <input type="tel" name="phone" placeholder="Phone Number" required><br>
                <textarea name="address" placeholder="Shipping Address" rows="5" required></textarea>

                <?php
                    $total = 0;
                    foreach ($_SESSION['cart'] as $product) {
                        $total += ($product['price'] * $product['quantity']);
                    }
                ?>

                <h3>Order Summary</h3>
                <table class="order-summary">
                    <?php foreach ($_SESSION['cart'] as $item) : ?>
                        <tr>
                            <td><?php echo $item['name']; ?></td>
                            <td>$<?php echo number_format($item['price'], 2); ?></td>
                            <td><?php echo $item['quantity']; ?></td>
                            <td>$<?php echo number_format($item['price'] * $item['quantity'], 2); ?></td>
                        </tr>
                    <?php endforeach; ?>
                </table>

                <h3>Total: $<?php echo number_format($total, 2); ?></h3><br>

                <button type="submit">Place Order</button>
            </div>
        </form>
    <?php else : ?>
        <p>Your cart is empty. Please add products to your cart first.</p>
    <?php endif; ?>

</body>
</html>


<?php include 'db_connection.php'; ?>

<?php
session_start();

// Check if the cart is not empty
if (!empty($_SESSION['cart'])) {
    // Get user input data
    $name = $_POST['name'];
    $email = $_POST['email'];
    $phone = $_POST['phone'];
    $address = $_POST['address'];

    // Calculate total amount
    $total = 0;
    foreach ($_SESSION['cart'] as $product) {
        $total += ($product['price'] * $product['quantity']);
    }

    // Insert order into the database
    $sql = "INSERT INTO orders (user_id, total_amount, status) VALUES (?, ?, 'pending')";
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, "id", $user_id, $total);

    if (mysqli_stmt_execute($stmt)) {
        $order_id = mysqli_insert_id($conn);

        // Insert order items
        foreach ($_SESSION['cart'] as $product) {
            $sql_item = "INSERT INTO order_items (order_id, product_id, quantity, price) VALUES (?, ?, ?, ?)";
            $stmt_item = mysqli_prepare($conn, $sql_item);
            mysqli_stmt_bind_param($stmt_item, "iiid", $order_id, $product['id'], $product['quantity'], $product['price']);

            if (!mysqli_stmt_execute($stmt_item)) {
                // Handle error
                echo "Error inserting order item.";
                exit;
            }
        }

        // Clear the cart
        unset($_SESSION['cart']);

        // Redirect to confirmation page
        header("Location: order_confirmation.php?order_id=$order_id");
    } else {
        echo "Error processing your order. Please try again later.";
    }
}

mysqli_close($conn);
?>


<?php include 'db_connection.php'; ?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Order Confirmation</title>
    <style>
        /* Add your CSS styles here */
    </style>
</head>
<body>
    <?php
    session_start();

    $order_id = $_GET['order_id'];

    // Retrieve order details
    $sql = "SELECT * FROM orders WHERE id = $order_id";
    $result = mysqli_query($conn, $sql);
    $order = mysqli_fetch_assoc($result);

    if ($order) {
        echo "<h1>Order Confirmation</h1>";
        echo "<p>Your order has been successfully placed!</p>";
        echo "<p>Order ID: " . $order['id'] . "</p>";
        echo "<p>Total Amount: $" . number_format($order['total_amount'], 2) . "</p>";
        echo "<p>Status: " . $order['status'] . "</p>";
    } else {
        echo "<p>Error retrieving order details.</p>";
    }
    ?>

</body>
</html>


<?php
// database.php - Database connection

$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'shopping_cart';

$conn = new mysqli($host, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}
?>



<?php
session_start();

// products.php - Product display

$product_list = [
    ['id' => 1, 'name' => 'Product 1', 'price' => 10.99],
    ['id' => 2, 'name' => 'Product 2', 'price' => 15.99],
    // Add more products as needed
];

if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = [];
}

// Add item to cart
if (isset($_POST['add_to_cart'])) {
    $product_id = intval($_POST['product_id']);
    
    if (isset($product_list[$product_id])) {
        $item = $product_list[$product_id];
        
        if (!isset($_SESSION['cart'][$item['id']])) {
            $_SESSION['cart'][$item['id']] = ['quantity' => 1, 'price' => $item['price']];
        } else {
            $_SESSION['cart'][$item['id']]['quantity']++;
        }
    }
}
?>



<?php
session_start();

// cart.php - Show cart contents

function calculate_total($cart) {
    $total = 0;
    foreach ($cart as $product) {
        $total += $product['quantity'] * $product['price'];
    }
    return $total;
}

$subtotal = calculate_total($_SESSION['cart']);
$tax = $subtotal * 0.08; // Assuming 8% tax
$grand_total = $subtotal + $tax;

// Update cart quantity
if (isset($_POST['update_cart'])) {
    foreach ($_SESSION['cart'] as &$product) {
        if (isset($_POST["quantity_{$product['id']}"])) {
            $new_quantity = intval($_POST["quantity_{$product['id']}"]);
            $product['quantity'] = max(1, $new_quantity);
        }
    }
}

// Remove item from cart
if (isset($_GET['remove'])) {
    $item_id = intval($_GET['remove']);
    unset($_SESSION['cart'][$item_id]);
}
?>



<?php
session_start();

// checkout.php - Order processing

$checkout_error = '';
$checkout_success = '';

if (isset($_POST['process_order'])) {
    // Validate form fields
    if (!$_POST['name'] || !$_POST['email'] || !$_POST['address']) {
        $checkout_error = 'Please fill in all required fields.';
    } else {
        // Process payment (simulated)
        sleep(1); // Simulate processing time

        // Clear cart after successful purchase
        $_SESSION['cart'] = [];
        
        $checkout_success = 'Thank you for your order! Your payment was successful.';
    }
}
?>



require_once 'database.php';


foreach ($product_list as $product) {
    echo "<div class='product'>";
    echo "<h3>{$product['name']}</h3>";
    echo "<p>Price: \${$product['price']}</p>";
    echo "<form method='post' action='index.php'>";
    echo "<input type='hidden' name='product_id' value='{$product['id']}'>";
    echo "<button type='submit' name='add_to_cart'>Add to Cart</button>";
    echo "</form>";
    echo "</div>";
}


foreach ($_SESSION['cart'] as $item) {
    echo "<tr>";
    echo "<td>{$item['name']}</td>";
    echo "<td>\${$item['price']}</td>";
    echo "<td><input type='number' name='quantity_{$item['id']}' value='{$item['quantity']}' min='1'></td>";
    echo "<td><a href='cart.php?remove={$item['id']}'>Remove</a></td>";
    echo "</tr>";
}


if ($checkout_success) {
    echo "<div class='success'>$checkout_success</div>";
} else if ($checkout_error) {
    echo "<div class='error'>$checkout_error</div>";
}

echo "<form method='post' action='checkout.php'>";
echo "<label>Name:</label><input type='text' name='name' required><br>";
echo "<label>Email:</label><input type='email' name='email' required><br>";
echo "<label>Address:</label><textarea name='address' required></textarea><br>";
echo "<h4>Total: \${$grand_total}</h4>";
echo "<button type='submit' name='process_order'>Place Order</button>";
echo "</form>";


<?php
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "ecommerce";

// Create connection
$conn = new mysqli($servername, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}
?>


<?php
session_start();
include 'config.php';

$sql = "SELECT * FROM products";
$result = $conn->query($sql);

if ($result->num_rows > 0) {
    while ($row = $result->fetch_assoc()) {
        echo "<div class='product'>";
        echo "<h2>" . $row["name"] . "</h2>";
        echo "<p>Price: $" . number_format($row["price"], 2) . "</p>";
        echo "<img src='" . $row["image_url"] . "' alt='" . $row["name"] . "'>";
        echo "<a href='add_to_cart.php?id=" . $row["id"] . "' class='btn'>Add to Cart</a>";
        echo "</div>";
    }
} else {
    echo "No products available.";
}

$conn->close();
?>


<?php
session_start();
include 'config.php';

$product_id = $_GET['id'];

if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

if (array_key_exists($product_id, $_SESSION['cart'])) {
    $_SESSION['cart'][$product_id]['quantity'] += 1;
} else {
    $sql = "SELECT name, price FROM products WHERE id=" . $product_id;
    $result = $conn->query($sql);
    
    if ($result->num_rows > 0) {
        $row = $result->fetch_assoc();
        $_SESSION['cart'][$product_id] = array(
            'name' => $row['name'],
            'price' => $row['price'],
            'quantity' => 1
        );
    }
}

$conn->close();

header("Location: products.php");
?>


<?php
session_start();
include 'config.php';

$total = 0;

echo "<table>";
echo "<tr><th>Product</th><th>Price</th><th>Quantity</th><th>Total</th></tr>";

if (isset($_SESSION['cart'])) {
    foreach ($_SESSION['cart'] as $id => $item) {
        echo "<tr>";
        echo "<td>" . $item['name'] . "</td>";
        echo "<td>$" . number_format($item['price'], 2) . "</td>";
        echo "<td><input type='number' name='quantity[".$id."]' value='".$item['quantity']."' min='1'></td>";
        echo "<td>$" . number_format($item['price'] * $item['quantity'], 2) . "</td>";
        echo "</tr>";
        
        $total += $item['price'] * $item['quantity'];
    }
}

echo "<tr><td colspan='3'>Total:</td><td>$" . number_format($total, 2) . "</td></tr>";
echo "</table>";

// Update quantity form
echo "<form action='update_cart.php' method='post'>";
echo "<input type='submit' value='Update Cart'>";
echo "</form>";

// Proceed to checkout button
echo "<a href='checkout.php' class='btn'>Proceed to Checkout</a>";
?>


<?php
session_start();

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    foreach ($_POST['quantity'] as $id => $qty) {
        $_SESSION['cart'][$id]['quantity'] = $qty;
    }
}

header("Location: view_cart.php");
?>


<?php
session_start();
include 'config.php';

$total = 0;

echo "<form action='process_checkout.php' method='post'>";
echo "<h2>Checkout</h2>";
echo "<div class='row'>";
echo "<div class='col-md-6'>";
echo "<h3>Billing Information</h3>";
echo "<input type='text' name='name' placeholder='Name' required><br>";
echo "<input type='email' name='email' placeholder='Email' required><br>";
echo "<textarea name='address' placeholder='Address' required></textarea><br>";
echo "<input type='tel' name='phone' placeholder='Phone Number'><br>";
echo "</div>";
echo "<div class='col-md-6'>";
echo "<h3>Payment Information</h3>";
echo "<input type='text' name='card_number' placeholder='Card Number' required><br>";
echo "<input type='text' name='card_name' placeholder='Name on Card' required><br>";
echo "<input type='text' name='cvv' placeholder='CVV' required><br>";
echo "</div>";
echo "</div>";
echo "<button type='submit'>Place Order</button>";
echo "</form>";
?>


<?php
session_start();
include 'config.php';

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $name = $_POST['name'];
    $email = $_POST['email'];
    $address = $_POST['address'];
    $phone = $_POST['phone'];
    $card_number = $_POST['card_number'];
    $card_name = $_POST['card_name'];
    $cvv = $_POST['cvv'];

    // Here you would typically process the payment using a payment gateway
    // For this example, we'll assume the payment was successful

    foreach ($_SESSION['cart'] as $id => $item) {
        $sql = "INSERT INTO orders (user_id, product_id, quantity, total_price)
                VALUES ('1', '" . $id . "', '" . $item['quantity'] . "', '" . ($item['price'] * $item['quantity']) . "')";
        
        if ($conn->query($sql) === TRUE) {
            // Order successful
        } else {
            echo "Error: " . $sql . "<br>" . $conn->error;
        }
    }

    // Clear cart
    unset($_SESSION['cart']);

    header("Location: confirmation.php");
}
?>


<?php
session_start();

echo "<h2>Thank you for your order!</h2>";
echo "<p>Your order has been successfully placed.</p>";
echo "<a href='products.php'>Continue Shopping</a>";
?>


<?php include('config.php'); session_start(); 

if (!empty($_POST['product_id'])) {
    $product_id = $_POST['product_id'];
    
    // Get product details
    $result = mysqli_query($conn, "SELECT * FROM products WHERE id = '$product_id'");
    if ($row = mysqli_fetch_assoc($result)) {
        $item = array(
            'id' => $row['id'],
            'name' => $row['name'],
            'price' => $row['price'],
            'quantity' => 1,
            'total_price' => $row['price']
        );
        
        if (empty($_SESSION['cart'])) {
            $_SESSION['cart'] = array();
            $_SESSION['cart_total'] = 0;
        }
        
        // Check if item already exists in cart
        $found = false;
        foreach ($_SESSION['cart'] as &$item_in_cart) {
            if ($item_in_cart['id'] == $row['id']) {
                $item_in_cart['quantity']++;
                $item_in_cart['total_price'] = $item_in_cart['price'] * $item_in_cart['quantity'];
                $found = true;
            }
        }
        
        if (!$found) {
            $_SESSION['cart'][] = $item;
            $_SESSION['cart_total'] += $row['price'];
        }
    }
}

header("Location: cart.php");
?>


<?php include('config.php'); session_start();

if (!empty($_POST)) {
    // Get user information
    $name = mysqli_real_escape_string($conn, $_POST['name']);
    $email = mysqli_real_escape_string($conn, $_POST['email']);
    $address = mysqli_real_escape_string($conn, $_POST['address']);
    
    // Insert order into orders table
    $order_query = "INSERT INTO orders (user_id, total_amount, order_date, status) VALUES (
        1, 
        '".$_SESSION['cart_total']."', 
        NOW(), 
        'pending'
    )";
    mysqli_query($conn, $order_query);
    
    $order_id = mysqli_insert_id($conn);
    $_SESSION['order_id'] = $order_id;
    
    // Insert order items into order_items table
    foreach ($_SESSION['cart'] as $item) {
        $item_query = "INSERT INTO order_items (order_id, product_id, quantity, price) VALUES (
            '$order_id',
            '".$item['id']."',
            '".$item['quantity']."',
            '".$item['price"]."'
        )";
        mysqli_query($conn, $item_query);
        
        // Deduct stock from products table
        $update_stock = "UPDATE products SET stock = stock - ".$item['quantity']." WHERE id = '".$item['id']."'";
        mysqli_query($conn, $update_stock);
    }
    
    // Clear cart
    unset($_SESSION['cart']);
    unset($_SESSION['cart_total']);
    
    header("Location: thankyou.php");
}
?>


<?php
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'purchase_system';

$conn = mysqli_connect($host, $username, $password, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}
?>


// view_cart.php
<?php
session_start();
?>

<h1>Your Cart</h1>
<table>
    <tr>
        <th>Product</th>
        <th>Price</th>
        <th>Quantity</th>
        <th>Total</th>
    </tr>
    <?php foreach ($_SESSION['cart'] as $item): ?>
    <tr>
        <td><?php echo $item['name']; ?></td>
        <td><?php echo "$" . number_format($item['price'], 2); ?></td>
        <td><?php echo $item['quantity']; ?></td>
        <td><?php echo "$" . number_format($item['price'] * $item['quantity'], 2); ?></td>
    </tr>
    <?php endforeach; ?>
</table>
<p>Total: <?php echo calculate_cart_total(); ?></p>
<a href="index.php">Continue Shopping</a> | <a href="checkout.php">Checkout</a>

<?php
function calculate_cart_total() {
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += $item['price'] * $item['quantity'];
    }
    return "$" . number_format($total, 2);
}
?>


// checkout.php
<?php
session_start();
if (!empty($_POST)) {
    // Process order here
    print_r($_POST); // Replace with actual payment processing
    unset($_SESSION['cart']); // Clear cart after purchase
    echo "Thank you for your order!";
}
?>


<?php
session_start();
require_once('db_connection.php');

// Fetch products from database
$sql = "SELECT * FROM products";
$stmt = $conn->prepare($sql);
$stmt->execute();
$products = $stmt->fetchAll(PDO::FETCH_ASSOC);

?>
<!DOCTYPE html>
<html>
<head>
    <title>Product List</title>
</head>
<body>
    <h1>Available Products</h1>
    <table border="1">
        <tr>
            <th>Name</th>
            <th>Description</th>
            <th>Price</th>
            <th>Action</th>
        </tr>
        <?php foreach ($products as $product): ?>
        <tr>
            <td><?php echo $product['name']; ?></td>
            <td><?php echo $product['description']; ?></td>
            <td><?php echo '$' . number_format($product['price'], 2); ?></td>
            <td><form action="add_to_cart.php" method="post">
                <input type="hidden" name="product_id" value="<?php echo $product['id']; ?>">
                <input type="number" name="quantity" min="1" max="<?php echo $product['stock']; ?>" value="1">
                <button type="submit">Add to Cart</button>
            </form></td>
        </tr>
        <?php endforeach; ?>
    </table>
    <p><a href="view_cart.php">View Cart</a></p>
</body>
</html>


<?php
session_start();
require_once('db_connection.php');

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $product_id = intval($_POST['product_id']);
    $quantity = intval($_POST['quantity']);

    // Check if product exists and has sufficient stock
    $sql = "SELECT * FROM products WHERE id = ?";
    $stmt = $conn->prepare($sql);
    $stmt->execute([$product_id]);
    $product = $stmt->fetch(PDO::FETCH_ASSOC);

    if (!$product) {
        die("Product not found.");
    }

    if ($quantity > $product['stock']) {
        die("Not enough stock available.");
    }

    // Add to cart
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }

    $cart_item = array(
        'id' => $product_id,
        'name' => $product['name'],
        'price' => $product['price'],
        'quantity' => $quantity
    );

    $_SESSION['cart'][] = $cart_item;

    header("Location: view_cart.php");
}


<?php
session_start();
require_once('db_connection.php');

// Calculate total price
$total_price = 0;
foreach ($_SESSION['cart'] as $item) {
    $total_price += ($item['price'] * $item['quantity']);
}

?>
<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <h1>Your Shopping Cart</h1>
    <?php if (!empty($_SESSION['cart'])): ?>
    <table border="1">
        <tr>
            <th>Name</th>
            <th>Price</th>
            <th>Quantity</th>
            <th>Total</th>
        </tr>
        <?php foreach ($_SESSION['cart'] as $item): ?>
        <tr>
            <td><?php echo $item['name']; ?></td>
            <td><?php echo '$' . number_format($item['price'], 2); ?></td>
            <td><?php echo $item['quantity']; ?></td>
            <td><?php echo '$' . number_format($item['price'] * $item['quantity'], 2); ?></td>
        </tr>
        <?php endforeach; ?>
    </table>
    <p>Total: <?php echo '$' . number_format($total_price, 2); ?></p>
    <form action="checkout.php" method="post">
        <button type="submit">Checkout</button>
    </form>
    <?php else: ?>
    <p>Your cart is empty.</p>
    <a href="index.php">Continue Shopping</a>
    <?php endif; ?>
</body>
</html>


<?php
session_start();
require_once('db_connection.php');

// Calculate total price
$total_price = 0;
foreach ($_SESSION['cart'] as $item) {
    $total_price += ($item['price'] * $item['quantity']);
}

// Insert order into database
if (isset($_POST['confirm'])) {
    // Assuming user is logged in and has a user_id
    $user_id = $_SESSION['user_id']; // You need to implement user authentication

    foreach ($_SESSION['cart'] as $item) {
        $sql = "INSERT INTO orders (user_id, product_id, quantity, total_amount)
                VALUES (?, ?, ?, ?)";
        $stmt = $conn->prepare($sql);
        $stmt->execute([$user_id, $item['id'], $item['quantity'], ($item['price'] * $item['quantity'])]);
    }

    // Clear cart
    unset($_SESSION['cart']);

    header("Location: thank_you.php");
}
?>
<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
</head>
<body>
    <h1>Confirm Your Order</h1>
    <?php if (!empty($_SESSION['cart'])): ?>
    <table border="1">
        <tr>
            <th>Name</th>
            <th>Price</th>
            <th>Quantity</th>
            <th>Total</th>
        </tr>
        <?php foreach ($_SESSION['cart'] as $item): ?>
        <tr>
            <td><?php echo $item['name']; ?></td>
            <td><?php echo '$' . number_format($item['price'], 2); ?></td>
            <td><?php echo $item['quantity']; ?></td>
            <td><?php echo '$' . number_format($item['price'] * $item['quantity'], 2); ?></td>
        </tr>
        <?php endforeach; ?>
    </table>
    <p>Total: <?php echo '$' . number_format($total_price, 2); ?></p>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
        <button type="submit" name="confirm">Confirm Order</button>
    </form>
    <?php else: ?>
    <p>Your cart is empty.</p>
    <a href="index.php">Continue Shopping</a>
    <?php endif; ?>
</body>
</html>


<?php
session_start();
require_once('db_connection.php');

// Get the last inserted order
$sql = "SELECT * FROM orders ORDER BY id DESC LIMIT 1";
$stmt = $conn->prepare($sql);
$stmt->execute();
$order = $stmt->fetch(PDO::FETCH_ASSOC);

?>
<!DOCTYPE html>
<html>
<head>
    <title>Thank You</title>
</head>
<body>
    <h1>Thank You for Your Order!</h1>
    <p>Your order has been received. Order details:</p>
    <table border="1">
        <tr>
            <th>Order ID</th>
            <td><?php echo $order['id']; ?></td>
        </tr>
        <tr>
            <th>Total Amount</th>
            <td><?php echo '$' . number_format($order['total_amount'], 2); ?></td>
        </tr>
        <tr>
            <th>Order Date</th>
            <td><?php echo $order['order_date']; ?></td>
        </tr>
    </table>
    <p>We will process your order shortly.</p>
</body>
</html>


<?php
try {
    $conn = new PDO('mysql:host=localhost;dbname=your_database', 'username', 'password');
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}
?>


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Product Page</title>
    <style>
        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
        }
        
        .product-card {
            border: 1px solid #ddd;
            padding: 15px;
            margin-bottom: 20px;
        }
    </style>
</head>
<body>
    <div class="container">
        <?php
            // Sample product data (you would typically fetch this from a database)
            $products = array(
                array('id' => 1, 'name' => 'Product 1', 'price' => 29.99, 'description' => 'A great product'),
                array('id' => 2, 'name' => 'Product 2', 'price' => 49.99, 'description' => 'Another awesome product'),
                array('id' => 3, 'name' => 'Product 3', 'price' => 19.99, 'description' => 'Best product ever')
            );
            
            foreach ($products as $product) {
        ?>
        <div class="product-card">
            <h2><?php echo $product['name']; ?></h2>
            <p>Price: $<?php echo number_format($product['price'], 2); ?></p>
            <p>Description: <?php echo $product['description']; ?></p>
            <button onclick="purchaseProduct(<?php echo $product['id']; ?>)" class="btn">Buy Now</button>
        </div>
        <?php
            }
        ?>
    </div>

    <script>
        function purchaseProduct(productId) {
            // Get user email from localStorage (assuming user is logged in)
            const userEmail = localStorage.getItem('userEmail');
            
            if (!userEmail) {
                alert('Please log in to continue.');
                window.location.href = 'login.php';
                return;
            }

            // Send purchase request
            fetch('purchase.php', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    productId,
                    userEmail,
                    quantity: 1, // You can modify this for multiple quantities
                    total: document.querySelector(`[data-product-id="${productId}"]`).getAttribute('data-price')
                })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    alert('Purchase successful!');
                    window.location.href = 'thankyou.php';
                } else {
                    alert('Error processing your purchase: ' + data.message);
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('An unexpected error occurred. Please try again.');
            });
        }
    </script>
</body>
</html>


<?php
header('Content-Type: application/json');

// Database configuration
$host = 'localhost';
$username = 'root'; // Change to your database username
$password = '';      // Change to your database password
$database = 'my_store';

try {
    $conn = new mysqli($host, $username, $password, $database);
    
    if ($conn->connect_error) {
        throw new Exception('Database connection failed: ' . $conn->connect_error);
    }

    // Get the data from POST request
    $data = json_decode(file_get_contents("php://input"), true);

    // Validate required fields
    if (!isset($data['productId']) || !isset($data['userEmail'])) {
        throw new Exception('Missing required parameters');
    }

    // Sanitize inputs
    $productId = intval($data['productId']);
    $userEmail = mysqli_real_escape_string($conn, $data['userEmail']);
    $quantity = isset($data['quantity']) ? intval($data['quantity']) : 1;
    $totalAmount = isset($data['total']) ? floatval($data['total']) : 0;

    // Insert order into database
    $orderSql = "INSERT INTO orders (user_email, total_amount, order_date) 
                 VALUES ('$userEmail', $totalAmount, NOW())";
                 
    if (!$conn->query($orderSql)) {
        throw new Exception('Error inserting order: ' . $conn->error);
    }

    // Get the last inserted order ID
    $orderId = $conn->insert_id;

    // Insert order item
    $itemSql = "INSERT INTO order_items (order_id, product_id, quantity, price) 
                VALUES ($orderId, $productId, $quantity, $totalAmount / $quantity)";

    if (!$conn->query($itemSql)) {
        throw new Exception('Error inserting order item: ' . $conn->error);
    }

    // Close connection
    $conn->close();

    // Return success response
    echo json_encode(['success' => true, 'message' => 'Order processed successfully']);

} catch (Exception $e) {
    // Handle errors
    http_response_code(400);
    echo json_encode(['success' => false, 'error' => $e->getMessage()]);
}


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Thank You</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            text-align: center;
            padding: 40px;
        }
        
        .thankyou {
            color: #333;
            max-width: 600px;
            margin: 0 auto;
        }
    </style>
</head>
<body>
    <div class="thankyou">
        <h1>Thank You for Your Purchase!</h1>
        <p>Your order has been successfully processed.</p>
        <a href="products.php" style="display: block; margin-top: 20px;">Continue Shopping</a>
    </div>
</body>
</html>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'shopping_cart';
$username = 'root';
$password = '';

try {
    // Create database connection
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

    // Product class
    class Product {
        public $id;
        public $name;
        public $price;
        public $quantity;

        public function __construct($id, $name, $price, $quantity) {
            $this->id = $id;
            $this->name = $name;
            $this->price = $price;
            $this->quantity = $quantity;
        }
    }

    // ShoppingCart class
    class ShoppingCart {
        private $products;

        public function __construct() {
            $this->products = array();
        }

        // Add product to cart
        public function addProduct($productId, $quantity) {
            global $conn;
            
            // Check if product exists in database
            $stmt = $conn->prepare("SELECT * FROM products WHERE id = ?");
            $stmt->execute([$productId]);
            $productData = $stmt->fetch(PDO::FETCH_ASSOC);

            if (!$productData) {
                throw new Exception("Product does not exist.");
            }

            // Check if product is already in cart
            foreach ($this->products as &$prod) {
                if ($prod->id == $productId) {
                    $prod->quantity += $quantity;
                    return;
                }
            }

            // Create new Product object and add to cart
            $product = new Product(
                $productData['id'],
                $productData['name'],
                $productData['price'],
                $quantity
            );
            
            array_push($this->products, $product);
        }

        // Update product quantity in cart
        public function updateQuantity($productId, $newQuantity) {
            foreach ($this->products as &$prod) {
                if ($prod->id == $productId) {
                    if ($newQuantity <= 0) {
                        throw new Exception("Quantity must be at least 1.");
                    }
                    $prod->quantity = $newQuantity;
                    return;
                }
            }

            throw new Exception("Product not found in cart.");
        }

        // Remove product from cart
        public function removeProduct($productId) {
            foreach ($this->products as $key => &$prod) {
                if ($prod->id == $productId) {
                    unset($this->products[$key]);
                    return;
                }
            }

            throw new Exception("Product not found in cart.");
        }

        // Calculate total price
        public function calculateTotal() {
            $total = 0;

            foreach ($this->products as $prod) {
                $total += $prod->price * $prod->quantity;
            }

            return number_format($total, 2);
        }

        // Get all products in cart
        public function getProducts() {
            return $this->products;
        }
    }

    // Payment processing
    class PaymentProcessor {
        public function processPayment($amount) {
            // Simulate payment gateway integration
            // In a real application, this would connect to an actual payment service
            
            echo "Processing payment for amount: $" . $amount . "<br>";
            
            // For demonstration purposes, always return success
            return true;
        }
    }

    // Error handling function
    function handleException($e) {
        echo "An error occurred: " . $e->getMessage();
        exit();
    }

    // Main application logic
    try {
        // Create new shopping cart instance
        $cart = new ShoppingCart();

        // Add products to cart (example)
        $cart->addProduct(1, 2);
        $cart->addProduct(2, 1);

        // Update quantity of product with ID 1 to 3
        $cart->updateQuantity(1, 3);

        // Remove product with ID 2 from cart
        $cart->removeProduct(2);

        // Display cart contents
        echo "<h2>Your Cart:</h2>";
        foreach ($cart->getProducts() as $product) {
            echo "ID: " . $product->id . ", Name: " . $product->name . ", Price: $" . number_format($product->price, 2) . ", Quantity: " . $product->quantity . "<br>";
        }

        // Display total price
        echo "<h3>Total Price: $" . $cart->calculateTotal() . "</h3>";

        // Process payment
        $paymentProcessor = new PaymentProcessor();
        if ($paymentProcessor->processPayment($cart->calculateTotal())) {
            // Clear cart after successful payment
            $cart->products = array();

            echo "Payment processed successfully! Thank you for your purchase!";
        }
    } catch (Exception $e) {
        handleException($e);
    }

} catch (PDOException $e) {
    die("Database connection failed: " . $e->getMessage());
}
?>


<?php
// Database configuration
$host = 'localhost';
$dbname = 'store';
$username = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}
?>



<?php
session_start();

function getProducts() {
    global $conn;
    try {
        $stmt = $conn->query("SELECT * FROM products");
        return $stmt->fetchAll(PDO::FETCH_ASSOC);
    } catch (PDOException $e) {
        echo "Error fetching products: " . $e->getMessage();
        return array();
    }
}

function addToCart($productId, $quantity) {
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }

    $_SESSION['cart'][$productId] += $quantity;
}

function getCartItems() {
    if (isset($_SESSION['cart'])) {
        return $_SESSION['cart'];
    }
    return array();
}

function clearCart() {
    unset($_SESSION['cart']);
}
?>


<?php
require_once 'db.php';
require_once 'functions.php';

$products = getProducts();

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    if (isset($_POST['add_to_cart'])) {
        $productId = $_POST['product_id'];
        $quantity = intval($_POST['quantity']);
        addToCart($productId, $quantity);
    }
}

header("Location: cart.php");
exit();
?>


<?php
require_once 'db.php';
require_once 'functions.php';

$cartItems = getCartItems();

if (empty($cartItems)) {
    echo "Your cart is empty!";
} else {
    // Display cart items and checkout button
}

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    if (isset($_POST['checkout'])) {
        header("Location: checkout.php");
    }
}
?>


<?php
require_once 'db.php';
require_once 'functions.php';

$cartItems = getCartItems();

if (empty($cartItems)) {
    die("Error: Your cart is empty.");
}

// Process payment here
$paymentSuccess = true; // In real application, this would be integrated with a payment gateway

if ($paymentSuccess) {
    clearCart();
    header("Location: confirmation.php");
} else {
    echo "Payment failed. Please try again.";
}
?>


<?php
require_once 'db.php';
require_once 'functions.php';

$cartItems = getCartItems();

// Display order summary and thank you message
?>

<!DOCTYPE html>
<html>
<head>
    <title>Order Confirmation</title>
</head>
<body>
    <h1>Thank you for your purchase!</h1>
    <p>Your order has been successfully processed.</p>
    
    <?php if (!empty($cartItems)): ?>
        <h2>Your Order:</h2>
        <ul>
            <?php foreach ($cartItems as $productId => $quantity): 
                $stmt = $conn->prepare("SELECT * FROM products WHERE id = ?");
                $stmt->execute([$productId]);
                $product = $stmt->fetch(PDO::FETCH_ASSOC);
            ?>
                <li><?php echo $product['name']; ?> x <?php echo $quantity; ?></li>
            <?php endforeach; ?>
        </ul>
    <?php endif; ?>

    <p>Your total is: <?php echo calculateTotal($cartItems); ?></p>
</body>
</html>

<?php
function calculateTotal($cartItems) {
    global $conn;
    $total = 0;
    
    foreach ($cartItems as $productId => $quantity) {
        $stmt = $conn->prepare("SELECT price FROM products WHERE id = ?");
        $stmt->execute([$productId]);
        $productPrice = $stmt->fetchColumn();
        
        $total += $productPrice * $quantity;
    }
    
    return number_format($total, 2);
}
?>


<?php
session_start();

// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'shopping_cart';

// Connect to database
$conn = new mysqli($host, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Create products table if not exists
$sql = "
CREATE TABLE IF NOT EXISTS products (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255),
    price DECIMAL(10, 2),
    description TEXT
)
";

$conn->query($sql);

// Create cart table if not exists
$sql = "
CREATE TABLE IF NOT EXISTS cart (
    id INT AUTO_INCREMENT PRIMARY KEY,
    product_id INT,
    user_id INT,
    quantity INT DEFAULT 1,
    added_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (product_id) REFERENCES products(id)
)
";

$conn->query($sql);

// Add sample products
$sql = "INSERT INTO products (name, price, description) VALUES 
('Product 1', 19.99, 'Description for product 1'),
('Product 2', 29.99, 'Description for product 2'),
('Product 3', 39.99, 'Description for product 3')";

$conn->query($sql);

// Add to cart function
function add_to_cart($product_id, $quantity = 1) {
    global $conn;

    if (!isset($_SESSION['user_id'])) {
        return false;
    }

    $user_id = $_SESSION['user_id'];

    try {
        // Check if item already exists in cart
        $sql = "SELECT id FROM cart WHERE product_id = ? AND user_id = ?";
        $stmt = $conn->prepare($sql);
        $stmt->bind_param('ii', $product_id, $user_id);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            // Update quantity
            $sql = "UPDATE cart SET quantity = quantity + ? WHERE product_id = ? AND user_id = ?";
            $stmt = $conn->prepare($sql);
            $stmt->bind_param('iii', $quantity, $product_id, $user_id);
            $stmt->execute();
        } else {
            // Add new item
            $sql = "INSERT INTO cart (product_id, user_id, quantity) VALUES (?, ?, ?)";
            $stmt = $conn->prepare($sql);
            $stmt->bind_param('iii', $product_id, $user_id, $quantity);
            $stmt->execute();
        }

        return true;
    } catch (Exception $e) {
        echo "Error: " . $e->getMessage();
        return false;
    }
}

// Get cart contents
function get_cart_contents() {
    global $conn;

    if (!isset($_SESSION['user_id'])) {
        return array();
    }

    $user_id = $_SESSION['user_id'];

    try {
        $sql = "SELECT c.id, p.name, p.price, c.quantity 
                FROM cart c 
                JOIN products p ON c.product_id = p.id 
                WHERE c.user_id = ?";
        
        $stmt = $conn->prepare($sql);
        $stmt->bind_param('i', $user_id);
        $stmt->execute();
        return $stmt->get_result()->fetch_all(MYSQLI_ASSOC);
    } catch (Exception $e) {
        echo "Error: " . $e->getMessage();
        return array();
    }
}

// Update cart quantity
function update_cart_quantity($cart_item_id, $quantity) {
    global $conn;

    if (!isset($_SESSION['user_id'])) {
        return false;
    }

    try {
        $sql = "UPDATE cart SET quantity = ? WHERE id = ?";
        $stmt = $conn->prepare($sql);
        $stmt->bind_param('ii', $quantity, $cart_item_id);
        $stmt->execute();

        return true;
    } catch (Exception $e) {
        echo "Error: " . $e->getMessage();
        return false;
    }
}

// Remove item from cart
function remove_from_cart($cart_item_id) {
    global $conn;

    if (!isset($_SESSION['user_id'])) {
        return false;
    }

    try {
        $sql = "DELETE FROM cart WHERE id = ?";
        $stmt = $conn->prepare($sql);
        $stmt->bind_param('i', $cart_item_id);
        $stmt->execute();

        return true;
    } catch (Exception $e) {
        echo "Error: " . $e->getMessage();
        return false;
    }
}

// Example usage:
$_SESSION['user_id'] = 1; // Set user ID

// Add item to cart
if ($_SERVER["REQUEST_METHOD"] == "POST" && isset($_POST['add_to_cart'])) {
    add_to_cart($_POST['product_id'], $_POST['quantity']);
}

// Update quantity
if ($_SERVER["REQUEST_METHOD"] == "POST" && isset($_POST['update_quantity'])) {
    update_cart_quantity($_POST['cart_item_id'], $_POST['quantity']);
}

// Remove item from cart
if (isset($_GET['remove'])) {
    remove_from_cart($_GET['remove']);
}

// Display cart contents
$cart_contents = get_cart_contents();

?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Shopping Cart</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
</head>
<body>
    <div class="container mt-4">
        <?php if (!empty($cart_contents)) : ?>
            <h3>Your Cart:</h3>
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>Product Name</th>
                        <th>Price</th>
                        <th>Quantity</th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tbody>
                    <?php foreach ($cart_contents as $item) : ?>
                        <tr>
                            <td><?php echo $item['name']; ?></td>
                            <td>$<?php echo number_format($item['price'], 2); ?></td>
                            <td>
                                <form method="post" action="">
                                    <input type="hidden" name="cart_item_id" value="<?php echo $item['id']; ?>">
                                    <input type="number" name="quantity" value="<?php echo $item['quantity']; ?>" min="1">
                                    <button type="submit" name="update_quantity" class="btn btn-primary">Update</button>
                                </form>
                            </td>
                            <td>
                                <a href="?remove=<?php echo $item['id']; ?>" 
                                   onclick="return confirm('Are you sure you want to remove this item?')" 
                                   class="btn btn-danger">Remove</a>
                            </td>
                        </tr>
                    <?php endforeach; ?>
                </tbody>
            </table>
        <?php else : ?>
            <p>Your cart is empty.</p>
        <?php endif; ?>

        <!-- Add items to cart -->
        <h3 class="mt-4">Add Items:</h3>
        <div class="row">
            <?php
            // Get products from database
            $sql = "SELECT * FROM products";
            $result = $conn->query($sql);
            while ($product = $result->fetch_assoc()) :
            ?>
                <div class="col-md-4 mb-4">
                    <div class="card">
                        <div class="card-body">
                            <h5 class="card-title"><?php echo $product['name']; ?></h5>
                            <p class="card-text">$<?php echo number_format($product['price'], 2); ?></p>
                            <form method="post" action="">
                                <input type="hidden" name="product_id" value="<?php echo $product['id']; ?>">
                                <input type="number" name="quantity" value="1" min="1">
                                <button type="submit" name="add_to_cart" class="btn btn-success">Add to Cart</button>
                            </form>
                        </div>
                    </div>
                </div>
            <?php endwhile; ?>
        </div>
    </div>

    <!-- Scripts -->
    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.4/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

    <!-- Add to cart using AJAX -->
    <script>
        $(document).ready(function() {
            $('form').on('submit', function(e) {
                e.preventDefault();
                var formData = $(this).serialize();

                $.ajax({
                    url: window.location.href,
                    method: 'POST',
                    data: formData,
                    success: function(response) {
                        location.reload(); // Refresh to show updated cart
                    },
                    error: function(xhr, status, error) {
                        console.log(error);
                    }
                });
            });
        });
    </script>
</body>
</html>

<?php
$conn->close();
?>


<?php
$host = 'localhost';
$username = 'root'; // Your MySQL username
$password = '';     // Your MySQL password
$dbname = 'shop';

$conn = mysqli_connect($host, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}
?>


<?php
session_start();
include 'config.php';

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $username = $_POST['username'];
    $password = password_hash($_POST['password'], PASSWORD_DEFAULT);
    $email = $_POST['email'];

    $sql = "INSERT INTO users (username, password_hash, email) VALUES (?, ?, ?)";
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, "sss", $username, $password, $email);

    if (mysqli_stmt_execute($stmt)) {
        echo "Registration successful! <a href='login.php'>Login here</a>";
    } else {
        echo "Error: " . mysqli_error($conn);
    }
}
?>


<?php
session_start();
include 'config.php';

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $username = $_POST['username'];
    $password = $_POST['password'];

    $sql = "SELECT * FROM users WHERE username = ?";
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, "s", $username);

    if (mysqli_stmt_execute($stmt)) {
        $result = mysqli_stmt_get_result($stmt);
        $user = mysqli_fetch_assoc($result);

        if ($user && password_verify($password, $user['password_hash'])) {
            $_SESSION['user_id'] = $user['id'];
            $_SESSION['username'] = $user['username'];
            header("Location: products.php");
        } else {
            echo "Invalid username or password.";
        }
    }
}
?>


<?php
session_start();
include 'config.php';

$sql = "SELECT * FROM products";
$result = mysqli_query($conn, $sql);

?>

<!DOCTYPE html>
<html>
<head>
    <title>Product Catalog</title>
</head>
<body>
    <?php while ($product = mysqli_fetch_assoc($result)) : ?>
        <div style="border: 1px solid #ddd; padding: 10px; margin: 5px;">
            <h3><?php echo $product['name']; ?></h3>
            <p>Price: <?php echo $product['price']; ?> $</p>
            <p><?php echo $product['description']; ?></p>
            <a href="add_to_cart.php?id=<?php echo $product['id']; ?>">Add to Cart</a>
        </div>
    <?php endwhile; ?>

    <p>Welcome, <?php echo $_SESSION['username']; ?>! <a href='logout.php'>Logout</a></p>
</body>
</html>


<?php
session_start();
include 'config.php';

$product_id = $_GET['id'];
$sql = "SELECT * FROM products WHERE id = ?";
$stmt = mysqli_prepare($conn, $sql);
mysqli_stmt_bind_param($stmt, "i", $product_id);

if (mysqli_stmt_execute($stmt)) {
    $result = mysqli_stmt_get_result($stmt);
    if ($product = mysqli_fetch_assoc($result)) {
        if (!isset($_SESSION['cart'])) {
            $_SESSION['cart'] = array();
        }

        if (isset($_SESSION['cart'][$product_id])) {
            $_SESSION['cart'][$product_id]['quantity']++;
        } else {
            $_SESSION['cart'][$product_id] = array(
                'id' => $product['id'],
                'name' => $product['name'],
                'price' => $product['price'],
                'quantity' => 1
            );
        }
    }
}

header("Location: products.php");
?>


<?php
session_start();
include 'config.php';

if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <h1>Your Shopping Cart</h1>
    <?php if (empty($_SESSION['cart'])) : ?>
        <p>Your cart is empty.</p>
    <?php else : ?>

        <?php $total = 0; ?>

        <?php foreach ($_SESSION['cart'] as $item) : ?>
            <div style="border: 1px solid #ddd; padding: 10px; margin: 5px;">
                <h3><?php echo $item['name']; ?></h3>
                <p>Price: <?php echo $item['price']; ?> $</p>
                <p>Quantity: <?php echo $item['quantity']; ?></p>
                <a href="update_cart.php?action=remove&id=<?php echo $item['id']; ?>">Remove</a>
            </div>
            <?php $total += ($item['price'] * $item['quantity']); ?>
        <?php endforeach; ?>

        <h2>Total: <?php echo number_format($total, 2); ?> $</h2>

    <?php endif; ?>

    <p><a href="products.php">Continue Shopping</a> | <a href="checkout.php">Checkout</a></p>
</body>
</html>


<?php
session_start();
include 'config.php';

if ($_GET['action'] == 'remove') {
    $product_id = $_GET['id'];
    unset($_SESSION['cart'][$product_id]);
}

header("Location: view_cart.php");
?>


<?php
session_start();
include 'config.php';

if (!isset($_SESSION['user_id'])) {
    header("Location: login.php");
}

if (empty($_SESSION['cart'])) {
    header("Location: products.php");
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
</head>
<body>
    <?php if ($_SERVER['REQUEST_METHOD'] == 'POST') : ?>
        <!-- Process checkout -->
        <?php
        $user_id = $_SESSION['user_id'];
        $total_amount = number_format($_POST['total'], 2);
        $payment_method = $_POST['payment_method'];

        // Insert order into orders table
        $sql_order = "INSERT INTO orders (user_id, total_amount, payment_method) VALUES (?, ?, ?)";
        $stmt_order = mysqli_prepare($conn, $sql_order);
        mysqli_stmt_bind_param($stmt_order, "ids", $user_id, $total_amount, $payment_method);

        if (mysqli_stmt_execute($stmt_order)) {
            $order_id = mysqli_insert_id($conn);

            // Insert order details
            foreach ($_SESSION['cart'] as $item) {
                $sql_details = "INSERT INTO order_details (order_id, product_id, quantity, subtotal)
                                VALUES (?, ?, ?, ?)";
                $stmt_details = mysqli_prepare($conn, $sql_details);
                mysqli_stmt_bind_param($stmt_details, "iiid", $order_id, $item['id'], $item['quantity'],
                    ($item['price'] * $item['quantity']));

                if (!mysqli_stmt_execute($stmt_details)) {
                    // Handle error
                    die("Error inserting order details: " . mysqli_error($conn));
                }
            }

            // Update product stock
            foreach ($_SESSION['cart'] as $item) {
                $sql_stock = "UPDATE products SET stock = stock - ? WHERE id = ?";
                $stmt_stock = mysqli_prepare($conn, $sql_stock);
                mysqli_stmt_bind_param($stmt_stock, "ii", $item['quantity'], $item['id']);

                if (!mysqli_stmt_execute($stmt_stock)) {
                    // Handle error
                    die("Error updating stock: " . mysqli_error($conn));
                }
            }

            // Clear cart
            unset($_SESSION['cart']);
            header("Location: order_confirmation.php?order_id=$order_id");
        } else {
            echo "Error processing your order.";
        }
        ?>

    <?php else : ?>
        <!-- Display checkout form -->
        <h1>Checkout</h1>
        <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
            <input type="hidden" name="total" value="<?php echo $total; ?>">

            <div style="border: 1px solid #ddd; padding: 10px; margin: 5px;">
                <h3>Shipping Information</h3>
                <p>Enter your shipping address:</p>
                <input type="text" name="address" placeholder="Address" required><br>
            </div>

            <div style="border: 1px solid #ddd; padding: 10px; margin: 5px;">
                <h3>Payment Information</h3>
                <p>Select payment method:</p>
                <select name="payment_method">
                    <option value="credit_card">Credit Card</option>
                    <option value="paypal">PayPal</option>
                    <option value="bank_transfer">Bank Transfer</option>
                </select><br>
            </div>

            <input type="submit" value="Place Order">
        </form>
    <?php endif; ?>

    <p><a href="view_cart.php">Back to Cart</a></p>
</body>
</html>


<?php
session_start();
include 'config.php';

$order_id = $_GET['order_id'];

$sql = "SELECT o.*, u.username FROM orders o
        JOIN users u ON o.user_id = u.id
        WHERE o.id = ?";
$stmt = mysqli_prepare($conn, $sql);
mysqli_stmt_bind_param($stmt, "i", $order_id);

if (mysqli_stmt_execute($stmt)) {
    $result = mysqli_stmt_get_result($stmt);
    $order = mysqli_fetch_assoc($result);
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Order Confirmation</title>
</head>
<body>
    <h1>Thank you for your order!</h1>
    <p>Your order ID is: <?php echo $order_id; ?></p>
    <p>Total Amount: <?php echo number_format($order['total_amount'], 2); ?> $</p>
    <p>Payment Method: <?php echo $order['payment_method']; ?></p>
    <p>Status: <?php echo $order['status']; ?></p>
    <p>Order placed by: <?php echo $order['username']; ?></p>

    <h2>Your Order Details:</h2>
    <?php
    $sql_details = "SELECT od.*, p.name FROM order_details od
                    JOIN products p ON od.product_id = p.id
                    WHERE od.order_id = ?";
    $stmt_details = mysqli_prepare($conn, $sql_details);
    mysqli_stmt_bind_param($stmt_details, "i", $order_id);

    if (mysqli_stmt_execute($stmt_details)) {
        $result_details = mysqli_stmt_get_result($stmt_details);
        while ($detail = mysqli_fetch_assoc($result_details)) :
            ?>
            <div style="border: 1px solid #ddd; padding: 10px; margin: 5px;">
                <h3><?php echo $detail['name']; ?></h3>
                <p>Quantity: <?php echo $detail['quantity']; ?></p>
                <p>Subtotal: <?php echo number_format($detail['subtotal'], 2); ?> $</p>
            </div>
        <?php endwhile; ?>
    <?php } ?>

    <p><a href="products.php">Continue Shopping</a></p>
</body>
</html>


<?php
// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'purchase_system';

// Create database connection
$conn = mysqli_connect($host, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

class Product {
    private $conn;

    public function __construct($connection) {
        $this->conn = $connection;
    }

    // Add product
    public function addProduct($name, $description, $price, $quantity) {
        $sql = "INSERT INTO products (name, description, price, quantity) VALUES ('$name', '$description', '$price', '$quantity')";
        return mysqli_query($this->conn, $sql);
    }

    // Get product by ID
    public function getProductById($id) {
        $sql = "SELECT * FROM products WHERE id = $id";
        $result = mysqli_query($this->conn, $sql);
        return mysqli_fetch_assoc($result);
    }

    // Get all products
    public function getAllProducts() {
        $sql = "SELECT * FROM products";
        $result = mysqli_query($this->conn, $sql);
        return mysqli_fetch_all($result, MYSQLI_ASSOC);
    }

    // Update product
    public function updateProduct($id, $name, $description, $price, $quantity) {
        $sql = "UPDATE products SET name='$name', description='$description', price='$price', quantity='$quantity' WHERE id=$id";
        return mysqli_query($this->conn, $sql);
    }

    // Delete product
    public function deleteProduct($id) {
        $sql = "DELETE FROM products WHERE id=$id";
        return mysqli_query($this->conn, $sql);
    }
}

class User {
    private $conn;

    public function __construct($connection) {
        $this->conn = $connection;
    }

    // Add user
    public function addUser($username, $password, $email, $address) {
        $hashedPassword = password_hash($password, PASSWORD_DEFAULT);
        $sql = "INSERT INTO users (username, password, email, address) VALUES ('$username', '$hashedPassword', '$email', '$address')";
        return mysqli_query($this->conn, $sql);
    }

    // Authenticate user
    public function authenticateUser($username, $password) {
        $sql = "SELECT * FROM users WHERE username='$username'";
        $result = mysqli_query($this->conn, $sql);
        $user = mysqli_fetch_assoc($result);

        if ($user && password_verify($password, $user['password'])) {
            return $user;
        } else {
            return false;
        }
    }

    // Update user
    public function updateUser($id, $username, $email, $address) {
        $sql = "UPDATE users SET username='$username', email='$email', address='$address' WHERE id=$id";
        return mysqli_query($this->conn, $sql);
    }

    // Get user by ID
    public function getUserById($id) {
        $sql = "SELECT * FROM users WHERE id = $id";
        $result = mysqli_query($this->conn, $sql);
        return mysqli_fetch_assoc($result);
    }
}

// Initialize classes
$product = new Product($conn);
$user = new User($conn);

session_start();

// Check if user is logged in
if (!isset($_SESSION['user_id'])) {
    header("Location: login.php");
    exit();
}

// Add to cart functionality
if (isset($_GET['add_to_cart'])) {
    $product_id = $_GET['add_to_cart'];
    $product_qty = isset($_GET['quantity']) ? intval($_GET['quantity']) : 1;

    if (!empty($product_id) && is_numeric($product_qty) && $product_qty > 0) {
        $product_details = $product->getProductById($product_id);

        if ($product_details) {
            $cart_item = array(
                'id' => $product_id,
                'name' => $product_details['name'],
                'price' => $product_details['price'],
                'quantity' => $product_qty
            );

            if (isset($_SESSION['cart'])) {
                $item_exists = false;
                foreach ($_SESSION['cart'] as &$item) {
                    if ($item['id'] == $product_id) {
                        $item['quantity'] += $product_qty;
                        $item_exists = true;
                        break;
                    }
                }
                if (!$item_exists) {
                    array_push($_SESSION['cart'], $cart_item);
                }
            } else {
                $_SESSION['cart'] = array($cart_item);
            }
        }
    }
}

// Update cart quantity
if (isset($_POST['update_cart'])) {
    foreach ($_POST as $key => $value) {
        if ($key != 'update_cart') {
            $item_id = $key;
            $quantity = intval($value);

            if ($quantity < 1) {
                unset($_SESSION['cart'][$item_id]);
            } else {
                $_SESSION['cart'][$item_id]['quantity'] = $quantity;
            }
        }
    }
}

// Calculate cart total
function calculateCartTotal() {
    $total = 0;

    foreach ($_SESSION['cart'] as $item) {
        $total += ($item['price'] * $item['quantity']);
    }

    return $total;
}

// Process purchase
if (isset($_POST['place_order'])) {
    if (!empty($_SESSION['cart']) && isset($_SESSION['user_id'])) {
        foreach ($_SESSION['cart'] as $item) {
            // Deduct quantity from products table
            $sql = "UPDATE products SET quantity = quantity - {$item['quantity']} WHERE id = {$item['id']}";
            mysqli_query($conn, $sql);

            // Insert order into orders table
            $user_id = $_SESSION['user_id'];
            $product_id = $item['id'];
            $total_amount = $item['price'] * $item['quantity'];
            $order_date = date('Y-m-d H:i:s');
            $status = 'pending';

            $sql_order = "INSERT INTO orders (user_id, product_id, quantity, total_amount, order_date, status) 
                         VALUES ($user_id, $product_id, {$item['quantity']}, $total_amount, '$order_date', '$status')";
            mysqli_query($conn, $sql_order);
        }

        // Clear cart
        unset($_SESSION['cart']);
    }
}

// Example usage:
// To display products
$all_products = $product->getAllProducts();
foreach ($all_products as $prod) {
    echo "<div>";
    echo "Name: {$prod['name']}<br>";
    echo "Description: {$prod['description']}<br>";
    echo "Price: {$prod['price']}<br>";
    echo "<a href='index.php?add_to_cart={$prod['id']}'>Add to Cart</a><br>";
    echo "</div>";
}

// To display cart
if (isset($_SESSION['cart'])) {
    foreach ($_SESSION['cart'] as $item) {
        echo "Product: {$item['name']}<br>";
        echo "Quantity: {$item['quantity']}<br>";
        echo "Price: {$item['price']}<br>";
        echo "<form method='post'>";
        echo "<input type='number' name='{$item['id']}' min='1' value='{$item['quantity']}'>";
        echo "<button type='submit' name='update_cart'>Update</button>";
        echo "</form><hr>";
    }
}

// Display cart total
echo "Total: $" . calculateCartTotal();

// Show order confirmation
if (isset($_POST['place_order'])) {
    echo "Thank you for your purchase!";
}
?>


<?php
// Connect to the database
$host = 'localhost';
$user = 'root';
$password = '';
$db_name = 'purchase_system';

$conn = mysqli_connect($host, $user, $password, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Retrieve products from the database
$sql = "SELECT * FROM products";
$result = mysqli_query($conn, $sql);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Product List</title>
</head>
<body>
    <h1>Available Products</h1>
    <?php
    if (mysqli_num_rows($result) > 0) {
        while ($row = mysqli_fetch_assoc($result)) {
            echo "<div>";
            echo "<h2>" . $row['name'] . "</h2>";
            echo "<p>Description: " . $row['description'] . "</p>";
            echo "<p>Price: $" . number_format($row['price'], 2) . "</p>";
            echo "<p>Stock: " . $row['stock'] . "</p>";
            echo "<a href='buy.php?id=" . $row['id'] . "'>Buy Now</a>";
            echo "</div><br>";
        }
    } else {
        echo "No products available.";
    }
    ?>
</body>
</html>

<?php
// Close the database connection
mysqli_close($conn);
?>


<?php
// Connect to the database
$host = 'localhost';
$user = 'root';
$password = '';
$db_name = 'purchase_system';

$conn = mysqli_connect($host, $user, $password, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Retrieve product details based on the ID passed in the URL
$product_id = isset($_GET['id']) ? $_GET['id'] : '';
$sql = "SELECT * FROM products WHERE id = ?";
$stmt = mysqli_prepare($conn, $sql);
mysqli_stmt_bind_param($stmt, "s", $product_id);
mysqli_stmt_execute($stmt);
$result = mysqli_stmt_get_result($stmt);

if (mysqli_num_rows($result) > 0) {
    $row = mysqli_fetch_assoc($result);
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Buy Product</title>
</head>
<body>
    <?php if ($row): ?>
        <h1><?php echo $row['name']; ?></h1>
        <p>Description: <?php echo $row['description']; ?></p>
        <p>Price: $<?php echo number_format($row['price'], 2); ?></p>
        <p>Stock Available: <?php echo $row['stock']; ?></p>

        <form action="process_purchase.php" method="post">
            <input type="hidden" name="product_id" value="<?php echo $row['id']; ?>">
            <input type="hidden" name="price" value="<?php echo $row['price']; ?>">

            <div>
                <label for="quantity">Quantity:</label>
                <input type="number" id="quantity" name="quantity" min="1" max="<?php echo $row['stock']; ?>" required>
            </div>

            <h2>Payment Details</h2>
            <div>
                <label for="name">Name on Card:</label>
                <input type="text" id="name" name="card_name" required>
            </div>
            <div>
                <label for="email">Email:</label>
                <input type="email" id="email" name="email" required>
            </div>
            <div>
                <label for="card_number">Card Number:</label>
                <input type="text" id="card_number" name="card_number" pattern="[0-9]{16}" required>
            </div>
            <div>
                <label for="cvv">CVV:</label>
                <input type="text" id="cvv" name="cvv" pattern="[0-9]{3}" required>
            </div>

            <button type="submit">Purchase</button>
        </form>
    <?php else: ?>
        <p>Product not found.</p>
    <?php endif; ?>

</body>
</html>

<?php
// Close the database connection
mysqli_close($conn);
?>


<?php
// Connect to the database
$host = 'localhost';
$user = 'root';
$password = '';
$db_name = 'purchase_system';

$conn = mysqli_connect($host, $user, $password, $db_name);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Get form data
$product_id = $_POST['product_id'];
$price = $_POST['price'];
$quantity = $_POST['quantity'];
$email = $_POST['email'];
$card_name = $_POST['card_name'];
$card_number = $_POST['card_number'];
$cvv = $_POST['cvv'];

// Calculate total price
$total_price = $price * $quantity;

// Check if the product has enough stock
$sql_check_stock = "SELECT stock FROM products WHERE id = ?";
$stmt_check = mysqli_prepare($conn, $sql_check_stock);
mysqli_stmt_bind_param($stmt_check, "s", $product_id);
mysqli_stmt_execute($stmt_check);
$result_check = mysqli_stmt_get_result($stmt_check);

if (mysqli_num_rows($result_check) > 0) {
    $stock_row = mysqli_fetch_assoc($result_check);
    if ($quantity <= $stock_row['stock']) {

        // Deduct stock
        $new_stock = $stock_row['stock'] - $quantity;
        $sql_update_stock = "UPDATE products SET stock = ? WHERE id = ?";
        $stmt_update = mysqli_prepare($conn, $sql_update_stock);
        mysqli_stmt_bind_param($stmt_update, "is", $new_stock, $product_id);
        mysqli_stmt_execute($stmt_update);

        // Insert the order into the orders table
        $sql_insert_order = "INSERT INTO orders (user_name, email, product_id, quantity, total_price) 
                            VALUES (?, ?, ?, ?, ?)";
        $stmt_order = mysqli_prepare($conn, $sql_insert_order);
        mysqli_stmt_bind_param($stmt_order, "ssidi", $card_name, $email, $product_id, $quantity, $total_price);

        if (mysqli_stmt_execute($stmt_order)) {
            // Redirect to confirmation page
            header("Location: confirmation.php?order=success");
            exit();
        } else {
            echo "Error processing your order. Please try again.";
        }
    } else {
        echo "Sorry, we don't have enough stock for this product.";
    }
} else {
    echo "Product not found.";
}

// Close the database connection
mysqli_close($conn);
?>


<?php
if (isset($_GET['order']) && $_GET['order'] == 'success') {
    // You can retrieve order details from the database here if needed
?>
<!DOCTYPE html>
<html>
<head>
    <title>Purchase Confirmation</title>
</head>
<body>
    <h1>Thank you for your purchase!</h1>
    <p>Your order has been successfully processed.</p>
    <a href="index.php">Return to products</a>
</body>
</html>
<?php
} else {
    header("Location: index.php");
}
?>


<?php
// Connect to database
require_once 'config.php';

// Fetch products from the database
$products = $db->query("SELECT * FROM products ORDER BY id DESC");

?>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Product Listing</title>
    <style>
        .product {
            border: 1px solid #ddd;
            padding: 20px;
            margin: 10px;
        }
    </style>
</head>
<body>
    <?php foreach ($products as $product): ?>
        <div class="product">
            <h3><?php echo $product['name']; ?></h3>
            <p><?php echo $product['description']; ?></p>
            <p>Price: $<?php echo number_format($product['price'], 2); ?></p>
            <form action="add-to-cart.php" method="post">
                <input type="hidden" name="id" value="<?php echo $product['id']; ?>">
                <input type="number" name="quantity" min="1" max="<?php echo $product['quantity']; ?>" placeholder="Quantity">
                <button type="submit">Add to Cart</button>
            </form>
        </div>
    <?php endforeach; ?>
</body>
</html>


<?php
session_start();

require_once 'config.php';

// Get product details
$id = $_POST['id'];
$quantity = $_POST['quantity'];

$product = $db->query("SELECT * FROM products WHERE id = ?", [$id], true);

if ($product && $quantity > 0) {
    // Add to cart or update quantity
    if (!isset($_SESSION['cart'][$id])) {
        $_SESSION['cart'][$id] = [
            'id' => $id,
            'name' => $product['name'],
            'price' => $product['price'],
            'quantity' => 1
        ];
    }
    // Update quantity if product already exists in cart
    else {
        $_SESSION['cart'][$id]['quantity'] += $quantity;
    }

    header("Location: products.php");
} else {
    die("Invalid request or out of stock.");
}


<?php
session_start();

require_once 'config.php';

// Calculate total price
$total = 0;
foreach ($_SESSION['cart'] as $item) {
    $total += $item['price'] * $item['quantity'];
}

?>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Order Review</title>
    <style>
        .order-summary {
            border: 1px solid #ddd;
            padding: 20px;
        }
    </style>
</head>
<body>
    <?php if (!empty($_SESSION['cart'])): ?>
        <div class="order-summary">
            <h2>Your Order</h2>
            <table>
                <?php foreach ($_SESSION['cart'] as $item): ?>
                    <tr>
                        <td><?php echo $item['name']; ?></td>
                        <td>Quantity: <?php echo $item['quantity']; ?></td>
                        <td>$<?php echo number_format($item['price'], 2); ?></td>
                    </tr>
                <?php endforeach; ?>
            </table>
            <h3>Total: $<?php echo number_format($total, 2); ?></h3>
            <form action="checkout.php" method="post">
                <button type="submit">Proceed to Checkout</button>
            </form>
        </div>
    <?php else: ?>
        <p>Your cart is empty.</p>
    <?php endif; ?>
</body>
</html>


<?php
session_start();

require_once 'config.php';

if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    // Get user data
    $name = $_POST['name'];
    $email = $_POST['email'];
    $phone = $_POST['phone'];
    $address = $_POST['address'];

    // Insert order into database
    try {
        $db->beginTransaction();
        
        $orderStmt = $db->prepare("INSERT INTO orders (name, email, phone, address, total_amount, status) VALUES (?, ?, ?, ?, ?, 'pending')");
        $orderStmt->execute([$name, $email, $phone, $address, $_SESSION['total']]);

        $orderId = $db->lastInsertId();

        // Insert order items
        foreach ($_SESSION['cart'] as $item) {
            $itemStmt = $db->prepare("INSERT INTO order_items (order_id, product_id, name, price, quantity) VALUES (?, ?, ?, ?, ?)");
            $itemStmt->execute([$orderId, $item['id'], $item['name'], $item['price'], $item['quantity']]);
        }

        // Clear cart
        unset($_SESSION['cart']);
        
        $db->commit();
        
        header("Location: thank-you.php");
    } catch (PDOException $e) {
        $db->rollBack();
        die("Error processing order: " . $e->getMessage());
    }
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Checkout</title>
    <style>
        .checkout-form {
            border: 1px solid #ddd;
            padding: 20px;
            max-width: 600px;
            margin: 0 auto;
        }
    </style>
</head>
<body>
    <div class="checkout-form">
        <h2>Checkout</h2>
        <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
            <input type="text" name="name" placeholder="Full Name" required><br><br>
            <input type="email" name="email" placeholder="Email Address" required><br><br>
            <input type="tel" name="phone" placeholder="Phone Number" required><br><br>
            <textarea name="address" placeholder="Shipping Address" rows="3" required></textarea><br><br>
            <button type="submit">Place Order</button>
        </form>
    </div>
</body>
</html>


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Thank You</title>
    <style>
        .thank-you {
            text-align: center;
            padding: 40px;
            font-family: Arial, sans-serif;
        }
    </style>
</head>
<body>
    <div class="thank-you">
        <h1>Thank you for your order!</h1>
        <p>Your order has been successfully placed and will be processed shortly.</p>
        <a href="products.php">Continue Shopping</a>
    </div>
</body>
</html>


<?php
session_start();
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Product Store</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
        }
        .product {
            border: 1px solid #ddd;
            padding: 10px;
            margin-bottom: 10px;
        }
    </style>
</head>
<body>
    <h1>Product Store</h1>

    <?php
    // Sample products array
    $products = array(
        array('id' => 1, 'name' => 'Laptop', 'price' => 999.99, 'quantity_available' => 5),
        array('id' => 2, 'name' => 'Phone', 'price' => 699.99, 'quantity_available' => 10),
        array('id' => 3, 'name' => 'Tablet', 'price' => 299.99, 'quantity_available' => 8)
    );

    foreach ($products as $product) {
        echo '<div class="product">';
        echo '<h3>' . $product['name'] . '</h3>';
        echo '<p>Price: $' . number_format($product['price'], 2) . '</p>';
        echo '<p>Available Quantity: ' . $product['quantity_available'] . '</p>';
        echo '<form action="purchase.php" method="post">';
        echo '<input type="hidden" name="product_id" value="' . $product['id'] . '">';
        echo '<input type="number" name="quantity" min="1" max="' . $product['quantity_available'] . '" placeholder="Enter quantity">';
        echo '<button type="submit">Purchase</button>';
        echo '</form>';
        echo '</div>';
    }
    ?>

    <a href="order_summary.php">View Order Summary</a>
</body>
</html>


<?php
session_start();

// Check if the form was submitted
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Get product details from POST data
    $product_id = $_POST['product_id'];
    $quantity = intval($_POST['quantity']);

    // Load products array (you would typically retrieve this from a database)
    $products = array(
        1 => array('name' => 'Laptop', 'price' => 999.99, 'quantity_available' => 5),
        2 => array('name' => 'Phone', 'price' => 699.99, 'quantity_available' => 10),
        3 => array('name' => 'Tablet', 'price' => 299.99, 'quantity_available' => 8)
    );

    // Check if product exists
    if (!isset($products[$product_id])) {
        die("Product not found.");
    }

    $product = $products[$product_id];

    // Validate quantity
    if ($quantity < 1 || $quantity > $product['quantity_available']) {
        die("Invalid quantity. Please select between 1 and " . $product['quantity_available']);
    }

    // Calculate total price
    $total_price = $product['price'] * $quantity;

    // Process payment (this is a simplified example)
    // In a real application, you would integrate with a payment gateway here

    // Simulate payment processing
    $transaction_id = uniqid();
    $payment_status = 'paid'; // For demonstration purposes

    // Store order details in session
    $_SESSION['order'] = array(
        'transaction_id' => $transaction_id,
        'product_name' => $product['name'],
        'quantity' => $quantity,
        'total_price' => $total_price,
        'payment_status' => $payment_status,
        'order_date' => date('Y-m-d H:i:s')
    );

    // Redirect to order confirmation page
    header("Location: order_confirmation.php");
    exit();
}
?>


<?php
session_start();

if (!isset($_SESSION['order'])) {
    die("No order found.");
}

$order = $_SESSION['order'];
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Order Confirmation</title>
</head>
<body>
    <h2>Your Order Has Been Placed!</h2>
    <p>Transaction ID: <?php echo $order['transaction_id']; ?></p>
    <p>Product Name: <?php echo $order['product_name']; ?></p>
    <p>Quantity: <?php echo $order['quantity']; ?></p>
    <p>Total Price: $<?php echo number_format($order['total_price'], 2); ?></p>
    <p>Status: <?php echo ucfirst($order['payment_status']); ?></p>
    <p>Order Date: <?php echo $order['order_date']; ?></p>

    <a href="products.php">Continue Shopping</a>
</body>
</html>


<?php
session_start();

// Simulated orders from session
if (!isset($_SESSION['orders'])) {
    $_SESSION['orders'] = array();
}

$orders = $_SESSION['orders'];
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Order Summary</title>
</head>
<body>
    <h2>Your Order History</h2>

    <?php if (empty($orders)): ?>
        <p>No orders found.</p>
    <?php else: ?>
        <table border="1">
            <tr>
                <th>Transaction ID</th>
                <th>Product Name</th>
                <th>Quantity</th>
                <th>Total Price</th>
                <th>Status</th>
                <th>Order Date</th>
            </tr>
            <?php foreach ($orders as $order): ?>
                <tr>
                    <td><?php echo $order['transaction_id']; ?></td>
                    <td><?php echo $order['product_name']; ?></td>
                    <td><?php echo $order['quantity']; ?></td>
                    <td>$<?php echo number_format($order['total_price'], 2); ?></td>
                    <td><?php echo ucfirst($order['payment_status']); ?></td>
                    <td><?php echo $order['order_date']; ?></td>
                </tr>
            <?php endforeach; ?>
        </table>
    <?php endif; ?>

    <a href="products.php">Continue Shopping</a>
</body>
</html>


<?php
// Start session
session_start();

// Define products (you can replace this with a database connection)
$products = array(
    1 => array(
        'name' => 'Product 1',
        'price' => 25.00,
        'description' => 'Description for product 1',
        'quantity' => 10
    ),
    2 => array(
        'name' => 'Product 2',
        'price' => 45.00,
        'description' => 'Description for product 2',
        'quantity' => 5
    )
);

// Initialize cart if not exists
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add to cart functionality
if (isset($_POST['add_to_cart'])) {
    $productId = intval($_POST['product_id']);
    $quantity = intval($_POST['quantity']);

    if ($quantity > 0) {
        if (isset($_SESSION['cart'][$productId])) {
            $_SESSION['cart'][$productId]['quantity'] += $quantity;
        } else {
            $_SESSION['cart'][$productId] = array(
                'product_id' => $productId,
                'name' => $products[$productId]['name'],
                'price' => $products[$productId]['price'],
                'quantity' => $quantity
            );
        }
    }
}

// Update cart functionality
if (isset($_POST['update_cart'])) {
    foreach ($_POST['quantity'] as $product_id => $quantity) {
        if ($quantity > 0 && isset($_SESSION['cart'][$product_id])) {
            $_SESSION['cart'][$product_id]['quantity'] = $quantity;
        }
    }
}

// Remove item from cart
if (isset($_GET['remove'])) {
    $productId = intval($_GET['remove']);
    unset($_SESSION['cart'][$productId]);
}

// Checkout functionality
if (isset($_POST['checkout'])) {
    // Store customer information in session
    $_SESSION['customer'] = array(
        'name' => $_POST['name'],
        'email' => $_POST['email'],
        'phone' => $_POST['phone'],
        'address' => $_POST['address'],
        'city' => $_POST['city'],
        'state' => $_POST['state'],
        'zip_code' => $_POST['zip_code']
    );

    // Redirect to payment confirmation
    header('Location: payment_confirmation.php');
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Online Store</title>
    <style>
        .container {
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
        }
        .product-list {
            display: grid;
            gap: 20px;
            margin-bottom: 20px;
        }
        .product-item {
            border: 1px solid #ddd;
            padding: 10px;
            text-align: center;
        }
        .cart-list {
            margin-top: 20px;
        }
        .total-price {
            font-size: 24px;
            font-weight: bold;
            margin-top: 20px;
        }
    </style>
</head>
<body>
    <div class="container">
        <!-- Product Display -->
        <h1>Our Products</h1>
        <div class="product-list">
            <?php foreach ($products as $id => $product): ?>
                <div class="product-item">
                    <h3><?php echo $product['name']; ?></h3>
                    <p>$<?php echo number_format($product['price'], 2); ?></p>
                    <p><?php echo $product['description']; ?></p>
                    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
                        <input type="hidden" name="product_id" value="<?php echo $id; ?>">
                        <input type="number" name="quantity" min="1" max="<?php echo $product['quantity']; ?>" value="1">
                        <button type="submit" name="add_to_cart">Add to Cart</button>
                    </form>
                </div>
            <?php endforeach; ?>
        </div>

        <!-- Cart Display -->
        <h2>Your Cart</h2>
        <?php if (!empty($_SESSION['cart'])): ?>
            <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
                <div class="cart-list">
                    <?php foreach ($_SESSION['cart'] as $product): ?>
                        <div class="cart-item">
                            <h3><?php echo $product['name']; ?></h3>
                            <p>$<?php echo number_format($product['price'], 2); ?></p>
                            <input type="number" name="quantity[<?php echo $product['product_id']; ?>]" min="1" max="10" value="<?php echo $product['quantity']; ?>">
                            <a href="?remove=<?php echo $product['product_id']; ?>">Remove</a>
                        </div>
                    <?php endforeach; ?>
                </div>
                <button type="submit" name="update_cart">Update Cart</button>
            </form>

            <!-- Checkout Button -->
            <h3>Subtotal: $<?php echo number_format(array_sum(array_column($_SESSION['cart'], 'price')), 2); ?></h3>
            <a href="checkout.php">Proceed to Checkout</a>
        <?php else: ?>
            <p>Your cart is empty.</p>
        <?php endif; ?>

    </div>
</body>
</html>

<!-- checkout.php -->
<?php
session_start();
if (!isset($_SESSION['cart']) || empty($_SESSION['cart'])) {
    header('Location: index.php');
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Checkout</title>
    <style>
        .container { max-width: 800px; margin: 0 auto; padding: 20px; }
        .form-group { margin-bottom: 15px; }
    </style>
</head>
<body>
    <div class="container">
        <h1>Checkout</h1>
        <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
            <div class="form-group">
                <label for="name">Name:</label>
                <input type="text" id="name" name="name" required>
            </div>
            <div class="form-group">
                <label for="email">Email:</label>
                <input type="email" id="email" name="email" required>
            </div>
            <div class="form-group">
                <label for="phone">Phone:</label>
                <input type="tel" id="phone" name="phone" required>
            </div>
            <div class="form-group">
                <label for="address">Address:</label>
                <input type="text" id="address" name="address" required>
            </div>
            <div class="form-group">
                <label for="city">City:</label>
                <input type="text" id="city" name="city" required>
            </div>
            <div class="form-group">
                <label for="state">State:</label>
                <input type="text" id="state" name="state" required>
            </div>
            <div class="form-group">
                <label for="zip_code">Zip Code:</label>
                <input type="text" id="zip_code" name="zip_code" required>
            </div>
            <button type="submit" name="checkout">Complete Purchase</button>
        </form>
    </div>
</body>
</html>

<!-- payment_confirmation.php -->
<?php
session_start();
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Payment Confirmation</title>
</head>
<body>
    <h1>Thank you for your purchase!</h1>
    <?php if (isset($_SESSION['customer'])): ?>
        <p>Your order has been received.</p>
        <p>Name: <?php echo $_SESSION['customer']['name']; ?></p>
        <p>Email: <?php echo $_SESSION['customer']['email']; ?></p>
        <p>Amount paid: $<?php echo number_format(array_sum(array_column($_SESSION['cart'], 'price')), 2); ?></p>
    <?php endif; ?>
</body>
</html>


<?php
session_start();

// Database configuration
$host = 'localhost';
$dbname = 'my_store';
$username = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}

// Add to cart function
function add_to_cart($product_id) {
    global $conn;
    
    // Check if product exists in database
    $stmt = $conn->prepare("SELECT * FROM products WHERE id = ?");
    $stmt->execute([$product_id]);
    $product = $stmt->fetch();
    
    if (!$product) {
        return false;
    }
    
    // Add to cart session
    $_SESSION['cart'][$product_id] = [
        'id' => $product_id,
        'name' => $product['name'],
        'price' => $product['price'],
        'quantity' => 1
    ];
    
    return true;
}

// Remove from cart function
function remove_from_cart($product_id) {
    if (isset($_SESSION['cart'][$product_id])) {
        unset($_SESSION['cart'][$product_id]);
        return true;
    }
    return false;
}

// Calculate total price function
function calculate_total() {
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += $item['price'] * $item['quantity'];
    }
    return $total;
}

// Checkout process function
function checkout($user_id, $address, $payment_method) {
    global $conn;
    
    // Check if cart is not empty
    if (empty($_SESSION['cart'])) {
        return false;
    }
    
    try {
        // Start transaction
        $conn->beginTransaction();
        
        // Insert order
        $stmt = $conn->prepare("INSERT INTO orders (user_id, total_price, address, payment_method) VALUES (?, ?, ?, ?)");
        $stmt->execute([$user_id, calculate_total(), $address, $payment_method]);
        $order_id = $conn->lastInsertId();
        
        // Insert order items
        foreach ($_SESSION['cart'] as $item) {
            $stmt = $conn->prepare("INSERT INTO order_items (order_id, product_id, quantity, price) VALUES (?, ?, ?, ?)");
            $stmt->execute([$order_id, $item['id'], $item['quantity'], $item['price']]);
        }
        
        // Clear cart
        $_SESSION['cart'] = [];
        
        // Commit transaction
        $conn->commit();
        return true;
    } catch (PDOException $e) {
        // Rollback transaction on error
        $conn->rollBack();
        echo "Error: " . $e->getMessage();
        return false;
    }
}

// Example usage:
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    if (isset($_POST['add_to_cart'])) {
        add_to_cart($_POST['product_id']);
    } elseif (isset($_POST['remove_from_cart'])) {
        remove_from_cart($_POST['product_id']);
    } elseif (isset($_POST['checkout'])) {
        $user_id = 1; // Get user ID from session or login
        $address = $_POST['address'];
        $payment_method = $_POST['payment_method'];
        checkout($user_id, $address, $payment_method);
    }
}
?>


<?php
// Connect to the database
$connection = new mysqli("localhost", "root", "", "e_commerce");

if ($connection->connect_error) {
    die("Connection failed: " . $connection->connect_error);
}

// Retrieve products from the database
$sql = "SELECT * FROM products";
$result = $connection->query($sql);

// Display products
echo "<h1>Product Catalog</h1>";
if ($result->num_rows > 0) {
    while ($row = $result->fetch_assoc()) {
        echo "<div class='product'>";
        echo "<h2>" . $row["name"] . "</h2>";
        echo "<p>Price: $" . number_format($row["price"], 2) . "</p>";
        echo "<p>Description: " . $row["description"] . "</p>";
        echo "<form action='add_to_cart.php' method='post'>";
        echo "<input type='hidden' name='product_id' value='" . $row["id"] . "'>";
        echo "<input type='number' name='quantity' min='1' max='99' value='1'>";
        echo "<button type='submit'>Add to Cart</button>";
        echo "</form>";
        echo "</div>";
    }
} else {
    echo "No products available.";
}
$connection->close();
?>


<?php
session_start();

if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

$product_id = intval($_POST['product_id']);
$quantity = intval($_POST['quantity']);

$_SESSION['cart'][$product_id] = $quantity;

header("Location: cart.php");
exit();
?>


<?php
session_start();

if (!isset($_SESSION['cart']) || count($_SESSION['cart']) == 0) {
    echo "Your cart is empty.";
    exit();
}

// Connect to the database
$connection = new mysqli("localhost", "root", "", "e_commerce");

if ($connection->connect_error) {
    die("Connection failed: " . $connection->connect_error);
}

$total = 0;

echo "<h1>Shopping Cart</h1>";
echo "<form action='checkout.php' method='post'>";
foreach ($_SESSION['cart'] as $product_id => $quantity) {
    $sql = "SELECT * FROM products WHERE id = ?";
    $stmt = $connection->prepare($sql);
    $stmt->bind_param("i", $product_id);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($row = $result->fetch_assoc()) {
        $subtotal = $row['price'] * $quantity;
        $total += $subtotal;

        echo "<div class='cart-item'>";
        echo "<h3>" . $row["name"] . "</h3>";
        echo "<p>Quantity: " . $quantity . "</p>";
        echo "<p>Price: $" . number_format($row['price'], 2) . "</p>";
        echo "<p>Subtotal: $" . number_format($subtotal, 2) . "</p>";
        echo "</div>";
    }
}

echo "<h3>Total: $" . number_format($total, 2) . "</h3>";
echo "<button type='submit'>Checkout</button>";
echo "</form>";

$connection->close();
?>


<?php
session_start();

if (!isset($_SESSION['cart']) || count($_SESSION['cart']) == 0) {
    header("Location: index.php");
    exit();
}

// Connect to the database
$connection = new mysqli("localhost", "root", "", "e_commerce");

if ($connection->connect_error) {
    die("Connection failed: " . $connection->connect_error);
}

// Check if user is logged in
if (!isset($_SESSION['user_id'])) {
    // If not logged in, redirect to login page or show registration form
    echo "<h1>Please Log In</h1>";
    echo "<form action='login.php' method='post'>";
    echo "<input type='text' name='username' placeholder='Username'>";
    echo "<input type='password' name='password' placeholder='Password'>";
    echo "<button type='submit'>Login</button>";
    echo "</form>";
    echo "<p>Don't have an account? <a href='register.php'>Register here</a>.</p>";
} else {
    // If logged in, display checkout form
    $user_id = $_SESSION['user_id'];
    $sql = "SELECT * FROM users WHERE id = ?";
    $stmt = $connection->prepare($sql);
    $stmt->bind_param("i", $user_id);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($row = $result->fetch_assoc()) {
        echo "<h1>Checkout</h1>";
        echo "<form action='process_purchase.php' method='post'>";
        echo "<div class='checkout-info'>";
        echo "<h2>Payment Details</h2>";
        echo "<input type='text' name='card_name' placeholder='Name on Card'>";
        echo "<input type='text' name='card_number' placeholder='Card Number'>";
        echo "<input type='text' name='expiration_date' placeholder='Expiration Date'>";
        echo "<input type='text' name='cvv' placeholder='CVV'>";
        echo "</div>";
        echo "<button type='submit'>Complete Purchase</button>";
        echo "</form>";
    }
}

$connection->close();
?>


<?php
session_start();

// Check if user is logged in
if (!isset($_SESSION['user_id']) || !isset($_SESSION['cart'])) {
    header("Location: index.php");
    exit();
}

$user_id = $_SESSION['user_id'];
$cart = $_SESSION['cart'];

// Connect to the database
$connection = new mysqli("localhost", "root", "", "e_commerce");

if ($connection->connect_error) {
    die("Connection failed: " . $connection->connect_error);
}

// Calculate total amount
$total_amount = 0;

foreach ($cart as $product_id => $quantity) {
    $sql = "SELECT price FROM products WHERE id = ?";
    $stmt = $connection->prepare($sql);
    $stmt->bind_param("i", $product_id);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($row = $result->fetch_assoc()) {
        $total_amount += $row['price'] * $quantity;
    }
}

// Insert order into orders table
$current_date = date('Y-m-d H:i:s');
$sql = "INSERT INTO orders (user_id, total_amount, purchase_date) VALUES (?, ?, ?)";
$stmt = $connection->prepare($sql);
$stmt->bind_param("ids", $user_id, $total_amount, $current_date);

if ($stmt->execute()) {
    $order_id = $connection->insert_id;

    // Insert order items into order_items table
    foreach ($cart as $product_id => $quantity) {
        $sql = "SELECT price FROM products WHERE id = ?";
        $stmt_price = $connection->prepare($sql);
        $stmt_price->bind_param("i", $product_id);
        $stmt_price->execute();
        $result_price = $stmt_price->get_result();

        if ($row_price = $result_price->fetch_assoc()) {
            $price_at_purchase = $row_price['price'];
            $sql_item = "INSERT INTO order_items (order_id, product_id, quantity, price_at_purchase) VALUES (?, ?, ?, ?)";
            $stmt_item = $connection->prepare($sql_item);
            $stmt_item->bind_param("iiid", $order_id, $product_id, $quantity, $price_at_purchase);
            $stmt_item->execute();
        }
    }

    // Clear the cart
    unset($_SESSION['cart']);
    
    // Redirect to purchase confirmation page
    header("Location: purchase_complete.php?order_id=$order_id");
    exit();
} else {
    echo "Error processing your order. Please try again.";
}

$connection->close();
?>


<?php
// Connect to the database
$connection = new mysqli("localhost", "root", "", "e_commerce");

if ($connection->connect_error) {
    die("Connection failed: " . $connection->connect_error);
}

$order_id = isset($_GET['order_id']) ? intval($_GET['order_id']) : 0;

$sql = "SELECT o.*, u.username FROM orders o JOIN users u ON o.user_id = u.id WHERE o.id = ?";
$stmt = $connection->prepare($sql);
$stmt->bind_param("i", $order_id);
$stmt->execute();
$result = $stmt->get_result();

if ($row = $result->fetch_assoc()) {
    echo "<h1>Thank you for your purchase!</h1>";
    echo "<p>Your order has been successfully processed.</p>";
    echo "<p>Order ID: " . $row['id'] . "</p>";
    echo "<p>Username: " . $row['username'] . "</p>";
    echo "<p>Total Amount: $" . number_format($row['total_amount'], 2) . "</p>";
    echo "<p>Purchase Date: " . $row['purchase_date'] . "</p>";
} else {
    echo "Order not found.";
}

$connection->close();
?>


<?php
session_start();

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $username = $_POST['username'];
    $email = $_POST['email'];
    $password = password_hash($_POST['password'], PASSWORD_DEFAULT);

    // Connect to the database
    $connection = new mysqli("localhost", "root", "", "e_commerce");

    if ($connection->connect_error) {
        die("Connection failed: " . $connection->connect_error);
    }

    $sql = "INSERT INTO users (username, email, password_hash) VALUES (?, ?, ?)";
    $stmt = $connection->prepare($sql);
    $stmt->bind_param("sss", $username, $email, $password);

    if ($stmt->execute()) {
        $_SESSION['user_id'] = $connection->insert_id;
        header("Location: index.php");
        exit();
    } else {
        echo "Error registering user. Please try again.";
    }

    $connection->close();
}

echo "<h1>Register</h1>";
echo "<form action='register.php' method='post'>";
echo "<input type='text' name='username' placeholder='Username'>";
echo "<input type='email' name='email' placeholder='Email'>";
echo "<input type='password' name='password' placeholder='Password'>";
echo "<button type='submit'>Register</button>";
echo "</form>";
?>


<?php
session_start();

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $username = $_POST['username'];
    $password = $_POST['password'];

    // Connect to the database
    $connection = new mysqli("localhost", "root", "", "e_commerce");

    if ($connection->connect_error) {
        die("Connection failed: " . $connection->connect_error);
    }

    $sql = "SELECT * FROM users WHERE username = ?";
    $stmt = $connection->prepare($sql);
    $stmt->bind_param("s", $username);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($row = $result->fetch_assoc()) {
        if (password_verify($password, $row['password_hash'])) {
            $_SESSION['user_id'] = $row['id'];
            header("Location: index.php");
            exit();
        } else {
            echo "Invalid password.";
        }
    } else {
        echo "Username not found.";
    }

    $connection->close();
}

echo "<h1>Login</h1>";
echo "<form action='login.php' method='post'>";
echo "<input type='text' name='username' placeholder='Username'>";
echo "<input type='password' name='password' placeholder='Password'>";
echo "<button type='submit'>Login</button>";
echo "</form>";
?>


<?php
session_start();
unset($_SESSION['user_id']);
session_unset();
session_destroy();
header("Location: index.php");
exit();
?>


<?php
// registration.php
session_start();
include 'db_connection.php';

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $username = $_POST['username'];
    $email = $_POST['email'];
    $password = password_hash($_POST['password'], PASSWORD_DEFAULT);

    $sql = "INSERT INTO users (username, email, password_hash) VALUES (?, ?, ?)";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("sss", $username, $email, $password);
    if ($stmt->execute()) {
        echo "Registration successful!";
        header("Location: login.php");
        exit();
    } else {
        echo "Error registering user.";
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Register</title>
</head>
<body>
    <form action="registration.php" method="post">
        Username: <input type="text" name="username"><br>
        Email: <input type="email" name="email"><br>
        Password: <input type="password" name="password"><br>
        <input type="submit" value="Register">
    </form>
</body>
</html>


<?php
// products.php
session_start();
include 'db_connection.php';

$sql = "SELECT * FROM products";
$result = $conn->query($sql);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Products</title>
</head>
<body>
    <?php while ($row = $result->fetch_assoc()) { ?>
        <div>
            <h2><?php echo $row['name']; ?></h2>
            <p><?php echo $row['description']; ?></p>
            <p>Price: <?php echo $row['price']; ?></p>
            <a href="add_to_cart.php?id=<?php echo $row['id']; ?>">Add to Cart</a>
        </div>
    <?php } ?>
</body>
</html>


<?php
// add_to_cart.php
session_start();

if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

$productId = $_GET['id'];
$_SESSION['cart'][$productId] = isset($_SESSION['cart'][$productId]) ? $_SESSION['cart'][$productId] + 1 : 1;

header("Location: cart.php");
exit();
?>

<?php
// cart.php
session_start();
include 'db_connection.php';

$cartItems = array();

foreach ($_SESSION['cart'] as $productId => $quantity) {
    $sql = "SELECT * FROM products WHERE id = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("i", $productId);
    $stmt->execute();
    $result = $stmt->get_result();
    if ($product = $result->fetch_assoc()) {
        $cartItems[] = array(
            'id' => $product['id'],
            'name' => $product['name'],
            'price' => $product['price'],
            'quantity' => $quantity
        );
    }
}

$total = 0;
foreach ($cartItems as $item) {
    $total += $item['price'] * $item['quantity'];
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <?php if (!empty($cartItems)) { ?>
        <h2>Your Cart:</h2>
        <?php foreach ($cartItems as $item) { ?>
            <div>
                <p><?php echo $item['name']; ?></p>
                <p>Price: <?php echo $item['price']; ?></p>
                <p>Quantity: <?php echo $item['quantity']; ?></p>
                <a href="remove_from_cart.php?id=<?php echo $item['id']; ?>">Remove</a>
            </div>
        <?php } ?>
        <h3>Total: <?php echo $total; ?></h3>
        <form action="checkout.php" method="post">
            <input type="submit" value="Checkout">
        </form>
    <?php } else { ?>
        <p>Your cart is empty.</p>
    <?php } ?>
</body>
</html>


<?php
// checkout.php
session_start();
include 'db_connection.php';

if (!isset($_SESSION['user_id'])) {
    header("Location: login.php");
    exit();
}

$cartItems = array();

foreach ($_SESSION['cart'] as $productId => $quantity) {
    $sql = "SELECT * FROM products WHERE id = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("i", $productId);
    $stmt->execute();
    $result = $stmt->get_result();
    if ($product = $result->fetch_assoc()) {
        $cartItems[] = array(
            'id' => $product['id'],
            'name' => $product['name'],
            'price' => $product['price'],
            'quantity' => $quantity
        );
    }
}

$total = 0;
foreach ($cartItems as $item) {
    $total += $item['price'] * $item['quantity'];
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
</head>
<body>
    <?php if (!empty($cartItems)) { ?>
        <h2>Payment Information:</h2>
        <form action="process_payment.php" method="post">
            <label for="card_number">Card Number:</label>
            <input type="text" id="card_number" name="card_number"><br>

            <label for="expiry_date">Expiry Date:</label>
            <input type="text" id="expiry_date" name="expiry_date"><br>

            <label for="cvv">CVV:</label>
            <input type="text" id="cvv" name="cvv"><br>

            <input type="submit" value="Pay">
        </form>
    <?php } else { ?>
        <p>Your cart is empty.</p>
    <?php } ?>
</body>
</html>


<?php
// process_payment.php
session_start();
include 'db_connection.php';

if (!isset($_SESSION['user_id'])) {
    header("Location: login.php");
    exit();
}

// Process payment (simulated)
$cartItems = $_SESSION['cart'];
$user_id = $_SESSION['user_id'];

$total = 0;
foreach ($cartItems as $productId => $quantity) {
    $sql = "SELECT * FROM products WHERE id = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("i", $productId);
    $stmt->execute();
    $result = $stmt->get_result();
    if ($product = $result->fetch_assoc()) {
        $total += $product['price'] * $quantity;
    }
}

// Insert order
$sql = "INSERT INTO orders (user_id, total, order_date, status) VALUES (?, ?, NOW(), 'pending')";
$stmt = $conn->prepare($sql);
$stmt->bind_param("id", $user_id, $total);
if ($stmt->execute()) {
    $order_id = $conn->insert_id;

    foreach ($cartItems as $productId => $quantity) {
        $sql = "INSERT INTO order_details (order_id, product_id, quantity, price) VALUES (?, ?, ?, ?)";
        $stmt = $conn->prepare($sql);
        $stmt->bind_param("iidi", $order_id, $productId, $quantity, $product['price']);
        $stmt->execute();
    }

    // Clear cart
    $_SESSION['cart'] = array();

    header("Location: order_confirmation.php?id=$order_id");
    exit();
} else {
    echo "Error processing your order.";
}
?>


<?php
// order_confirmation.php
session_start();
include 'db_connection.php';

$order_id = $_GET['id'];

$sql = "SELECT * FROM orders WHERE id = ?";
$stmt = $conn->prepare($sql);
$stmt->bind_param("i", $order_id);
$stmt->execute();
$result = $stmt->get_result();
$order = $result->fetch_assoc();

?>

<!DOCTYPE html>
<html>
<head>
    <title>Order Confirmation</title>
</head>
<body>
    <h2>Thank you for your order!</h2>
    <p>Order ID: <?php echo $order['id']; ?></p>
    <p>Total: <?php echo $order['total']; ?></p>
    <p>Status: <?php echo $order['status']; ?></p>
</body>
</html>


<?php
session_start();

// Database connection (replace with your own database credentials)
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "myDB";

$conn = new mysqli($servername, $username, $password, $dbname);
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to add item to cart
function addToCart($item_id, $quantity) {
    global $conn;
    
    // Check if the item exists in the database
    $sql = "SELECT * FROM products WHERE id = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("i", $item_id);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows > 0) {
        // Item exists, add to cart
        $_SESSION['cart'][$item_id] = array(
            'id' => $item_id,
            'quantity' => $quantity
        );
    }
}

// Function to update cart quantity
function updateCart($item_id, $quantity) {
    if (isset($_SESSION['cart'][$item_id])) {
        $_SESSION['cart'][$item_id]['quantity'] = $quantity;
    }
}

// Function to remove item from cart
function removeFromCart($item_id) {
    if (isset($_SESSION['cart'][$item_id])) {
        unset($_SESSION['cart'][$item_id]);
    }
}

// Function to calculate cart total
function getCartTotal() {
    global $conn;
    
    $total = 0;
    
    foreach ($_SESSION['cart'] as $item) {
        // Get item price from database
        $sql = "SELECT price FROM products WHERE id = ?";
        $stmt = $conn->prepare($sql);
        $stmt->bind_param("i", $item['id']);
        $stmt->execute();
        $result = $stmt->get_result();
        
        if ($result->num_rows > 0) {
            $price = $result->fetch_assoc()['price'];
            $total += $price * $item['quantity'];
        }
    }
    
    return $total;
}

// Function to display cart content
function displayCart() {
    global $conn;
    
    if (isset($_SESSION['cart']) && count($_SESSION['cart']) > 0) {
        echo "<table>";
        echo "<tr><th>Product</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>";
        
        foreach ($_SESSION['cart'] as $item_id => $item) {
            // Get item details from database
            $sql = "SELECT * FROM products WHERE id = ?";
            $stmt = $conn->prepare($sql);
            $stmt->bind_param("i", $item['id']);
            $stmt->execute();
            $result = $stmt->get_result();
            
            if ($result->num_rows > 0) {
                $product = $result->fetch_assoc();
                
                echo "<tr>";
                echo "<td>" . $product['name'] . "</td>";
                echo "<td>$" . number_format($product['price'], 2) . "</td>";
                echo "<td><input type='number' name='quantity[" . $item_id . "]' value='" . $item['quantity'] . "' min='1'></td>";
                echo "<td>$" . number_format($product['price'] * $item['quantity'], 2) . "</td>";
                echo "<td><form method='post'><input type='hidden' name='remove' value='" . $item_id . "'><button type='submit'>Remove</button></form></td>";
                echo "</tr>";
            }
        }
        
        echo "</table>";
    } else {
        echo "Your cart is empty.";
    }
}

// Handle form submissions
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    if (isset($_POST['remove'])) {
        removeFromCart($_POST['remove']);
    } elseif (isset($_POST['update'])) {
        foreach ($_POST['quantity'] as $item_id => $quantity) {
            updateCart($item_id, $quantity);
        }
    }
}

// Close database connection
$conn->close();
?>


// Product class
class Product {
    private $db;

    public function __construct($db_connection) {
        $this->db = $db_connection;
    }

    // Get all products
    public function getAllProducts() {
        try {
            $query = "SELECT * FROM products WHERE status = 'active'";
            $stmt = $this->db->prepare($query);
            $stmt->execute();
            return $stmt->fetchAll(PDO::FETCH_ASSOC);
        } catch (PDOException $e) {
            echo "Error: " . $e->getMessage();
            return false;
        }
    }

    // Get product by ID
    public function getProductById($id) {
        try {
            $query = "SELECT * FROM products WHERE id = ?";
            $stmt = $this->db->prepare($query);
            $stmt->execute([$id]);
            return $stmt->fetch(PDO::FETCH_ASSOC);
        } catch (PDOException $e) {
            echo "Error: " . $e->getMessage();
            return false;
        }
    }

    // Add new product
    public function addProduct($name, $description, $price, $quantity, $category) {
        try {
            $query = "INSERT INTO products(name, description, price, quantity, category) VALUES(?,?,?,?,?)";
            $stmt = $this->db->prepare($query);
            return $stmt->execute([$name, $description, $price, $quantity, $category]);
        } catch (PDOException $e) {
            echo "Error: " . $e->getMessage();
            return false;
        }
    }

    // Update product
    public function updateProduct($id, $name, $description, $price, $quantity, $category) {
        try {
            $query = "UPDATE products SET name=?, description=?, price=?, quantity=?, category=? WHERE id=?";
            $stmt = $this->db->prepare($query);
            return $stmt->execute([$name, $description, $price, $quantity, $category, $id]);
        } catch (PDOException $e) {
            echo "Error: " . $e->getMessage();
            return false;
        }
    }

    // Delete product
    public function deleteProduct($id) {
        try {
            $query = "UPDATE products SET status='inactive' WHERE id=?";
            $stmt = $this->db->prepare($query);
            return $stmt->execute([$id]);
        } catch (PDOException $e) {
            echo "Error: " . $e->getMessage();
            return false;
        }
    }
}

// Order class
class Order {
    private $db;

    public function __construct($db_connection) {
        $this->db = $db_connection;
    }

    // Add new order
    public function addOrder($user_id, $total_amount, $payment_method) {
        try {
            $query = "INSERT INTO orders(user_id, total_amount, payment_method) VALUES(?,?,?)";
            $stmt = $this->db->prepare($query);
            return $stmt->execute([$user_id, $total_amount, $payment_method]);
        } catch (PDOException $e) {
            echo "Error: " . $e->getMessage();
            return false;
        }
    }

    // Get all orders
    public function getAllOrders() {
        try {
            $query = "SELECT * FROM orders";
            $stmt = $this->db->prepare($query);
            $stmt->execute();
            return $stmt->fetchAll(PDO::FETCH_ASSOC);
        } catch (PDOException $e) {
            echo "Error: " . $e->getMessage();
            return false;
        }
    }

    // Get order by ID
    public function getOrderById($id) {
        try {
            $query = "SELECT * FROM orders WHERE id = ?";
            $stmt = $this->db->prepare($query);
            $stmt->execute([$id]);
            return $stmt->fetch(PDO::FETCH_ASSOC);
        } catch (PDOException $e) {
            echo "Error: " . $e->getMessage();
            return false;
        }
    }

    // Update order status
    public function updateOrderStatus($order_id, $status) {
        try {
            $query = "UPDATE orders SET status=? WHERE id=?";
            $stmt = $this->db->prepare($query);
            return $stmt->execute([$status, $order_id]);
        } catch (PDOException $e) {
            echo "Error: " . $e->getMessage();
            return false;
        }
    }

    // Add order items
    public function addOrderItems($order_id, $product_id, $quantity, $price) {
        try {
            $query = "INSERT INTO order_items(order_id, product_id, quantity, price) VALUES(?,?,?,?)";
            $stmt = $this->db->prepare($query);
            return $stmt->execute([$order_id, $product_id, $quantity, $price]);
        } catch (PDOException $e) {
            echo "Error: " . $e->getMessage();
            return false;
        }
    }

    // Process checkout
    public function processCheckout($user_id, $cart, $payment_method) {
        try {
            // Insert new order
            $order_id = $this->addOrder($user_id, $cart['total'], $payment_method);

            if ($order_id) {
                // Add items to order_items table
                foreach ($cart['items'] as $item) {
                    $this->addOrderItems($order_id, $item['id'], $item['quantity'], $item['price']);
                }

                return true;
            } else {
                return false;
            }
        } catch (PDOException $e) {
            echo "Error: " . $e->getMessage();
            return false;
        }
    }
}


// Initialize cart
session_start();

if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array(
        'items' => array(),
        'total' => 0,
        'count' => 0
    );
}

// Add to cart
if (isset($_GET['add_to_cart']) && isset($_GET['product_id'])) {
    $product_id = intval($_GET['product_id']);
    $product = $product_obj->getProductById($product_id);

    if ($product) {
        $item = array(
            'id' => $product['id'],
            'name' => $product['name'],
            'price' => $product['price'],
            'quantity' => 1
        );

        $_SESSION['cart']['items'][$product_id] = $item;
        $_SESSION['cart']['count']++;
        $_SESSION['cart']['total'] += $product['price'];
    }
}

// Remove from cart
if (isset($_GET['remove_from_cart']) && isset($_GET['product_id'])) {
    $product_id = intval($_GET['product_id']);

    if (isset($_SESSION['cart']['items'][$product_id])) {
        $_SESSION['cart']['count']--;
        $_SESSION['cart']['total'] -= $_SESSION['cart']['items'][$product_id]['price'];
        unset($_SESSION['cart']['items'][$product_id]);
    }
}

// Update cart quantity
if (isset($_POST['update_cart'])) {
    foreach ($_POST['quantity'] as $product_id => $qty) {
        $product_id = intval($product_id);
        $qty = intval($qty);

        if ($qty > 0 && isset($_SESSION['cart']['items'][$product_id])) {
            $_SESSION['cart']['total'] -= $_SESSION['cart']['items'][$product_id]['price'];
            $_SESSION['cart']['count']--;

            $_SESSION['cart']['items'][$product_id]['quantity'] = $qty;
            $_SESSION['cart']['total'] += ($qty * $_SESSION['cart']['items'][$product_id]['price']);
            $_SESSION['cart']['count']++;
        }
    }
}


// Checkout functionality
if (isset($_POST['checkout'])) {
    $order = new Order($db);

    // Check if cart is not empty
    if (!empty($_SESSION['cart']['items'])) {
        // Process payment (you can integrate your payment gateway here)
        // For this example, we'll assume payment was successful

        // Add order to database
        $order_id = $order->addOrder(1, $_SESSION['cart']['total'], 'credit_card');

        if ($order_id) {
            // Add items to order_items table
            foreach ($_SESSION['cart']['items'] as $item) {
                $order->addOrderItems($order_id, $item['id'], $item['quantity'], $item['price']);
            }

            // Clear cart
            unset($_SESSION['cart']);

            echo "Thank you for your order!";
        } else {
            echo "Error processing your order. Please try again.";
        }
    } else {
        echo "Your cart is empty!";
    }
}


// Admin panel functionality
if (isset($_SESSION['admin'])) {
    // Display admin dashboard with product and order management

    if (isset($_GET['action']) && $_GET['action'] == 'add_product') {
        if (isset($_POST['add_product'])) {
            $name = $_POST['name'];
            $description = $_POST['description'];
            $price = $_POST['price'];
            $quantity = $_POST['quantity'];
            $category = $_POST['category'];

            $product_obj->addProduct($name, $description, $price, $quantity, $category);
            header("Location: admin.php");
        }
    }

    if (isset($_GET['action']) && $_GET['action'] == 'edit_product' && isset($_GET['id'])) {
        $product_id = intval($_GET['id']);
        $product = $product_obj->getProductById($product_id);

        if (isset($_POST['update_product'])) {
            $name = $_POST['name'];
            $description = $_POST['description'];
            $price = $_POST['price'];
            $quantity = $_POST['quantity'];
            $category = $_POST['category'];

            $product_obj->updateProduct($product_id, $name, $description, $price, $quantity, $category);
            header("Location: admin.php");
        }
    }

    if (isset($_GET['action']) && $_GET['action'] == 'delete_product' && isset($_GET['id'])) {
        $product_id = intval($_GET['id']);
        $product_obj->deleteProduct($product_id);
        header("Location: admin.php");
    }
}


<?php
// Start session
session_start();

// Product catalog (you can replace this with database data)
$products = array(
    1 => array(
        'name' => 'Product 1',
        'price' => 29.99,
        'description' => 'Description for product 1'
    ),
    2 => array(
        'name' => 'Product 2',
        'price' => 49.99,
        'description' => 'Description for product 2'
    )
);

// Check if cart exists in session, create if not
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add to cart functionality
if (isset($_GET['action']) && $_GET['action'] == 'add') {
    $productId = $_GET['id'];
    
    // Check if product exists in catalog
    if (array_key_exists($productId, $products)) {
        if (!isset($_SESSION['cart'][$productId])) {
            $_SESSION['cart'][$productId] = array(
                'quantity' => 1,
                'price' => $products[$productId]['price']
            );
        } else {
            $_SESSION['cart'][$productId]['quantity']++;
        }
    }
}

// Checkout functionality
if (isset($_POST['checkout'])) {
    // Process payment here
    // For this example, we'll just display a confirmation message
    
    // Calculate total amount
    $totalAmount = 0;
    foreach ($_SESSION['cart'] as $item) {
        $totalAmount += $item['quantity'] * $item['price'];
    }
    
    // Display order confirmation
    echo "<h2>Order Confirmation</h2>";
    echo "Your order has been processed successfully!<br>";
    echo "Total Amount: $" . number_format($totalAmount, 2) . "<br>";
    echo "Thank you for your purchase!";
    
    // Empty cart after checkout
    $_SESSION['cart'] = array();
}
?>


// Display products
echo "<h2>Product Catalog</h2>";
foreach ($products as $id => $product) {
    echo "<div class='product'>";
    echo "<h3>{$product['name']}</h3>";
    echo "<p>{$product['description']}</p>";
    echo "<p>Price: \$" . number_format($product['price'], 2) . "</p>";
    echo "<a href='?action=add&id={$id}'>Add to Cart</a>";
    echo "</div>";
}


// Display cart
echo "<h2>Your Cart</h2>";
if (empty($_SESSION['cart'])) {
    echo "Your cart is empty.";
} else {
    $total = 0;
    foreach ($_SESSION['cart'] as $id => $item) {
        $product = $products[$id];
        echo "<div class='cart-item'>";
        echo "<h3>{$product['name']}</h3>";
        echo "<p>Quantity: {$item['quantity']}</p>";
        echo "<p>Price: \$" . number_format($item['price'], 2) . "</p>";
        $total += $item['quantity'] * $item['price'];
        echo "</div>";
    }
    echo "<h3>Total: $" . number_format($total, 2) . "</h3>";
}


// Display checkout form
echo "<h2>Checkout</h2>";
echo "<form method='post'>";
echo "<label>Card Number:</label><br>";
echo "<input type='text' name='card_number'><br>";
echo "<label>CVV:</label><br>";
echo "<input type='text' name='cvv'><br>";
echo "<label>Expiration Date:</label><br>";
echo "<input type='text' name='expiration_date'><br>";
echo "<input type='submit' name='checkout' value='Complete Purchase'>";
echo "</form>";


<?php
session_start();
include 'db_connection.php';

// Registration Function
function registerUser($username, $email, $password) {
    global $conn;
    $hashed_password = password_hash($password, PASSWORD_DEFAULT);
    $stmt = $conn->prepare("INSERT INTO users (username, email, password_hash) VALUES (?, ?, ?)");
    $stmt->bind_param("sss", $username, $email, $hashed_password);
    return $stmt->execute();
}

// Login Function
function loginUser($email, $password) {
    global $conn;
    $stmt = $conn->prepare("SELECT * FROM users WHERE email = ?");
    $stmt->bind_param("s", $email);
    $stmt->execute();
    $result = $stmt->get_result();
    if ($result->num_rows > 0) {
        $user = $result->fetch_assoc();
        if (password_verify($password, $user['password_hash'])) {
            $_SESSION['user_id'] = $user['id'];
            return true;
        }
    }
    return false;
}
?>


<?php
session_start();
include 'db_connection.php';

// Add Product to Cart
function addToCart($product_id) {
    global $conn;
    if (isset($_SESSION['user_id'])) {
        $stmt = $conn->prepare("INSERT INTO shopping_cart (user_id, product_id, quantity) VALUES (?, ?, 1)");
        $stmt->bind_param("ii", $_SESSION['user_id'], $product_id);
        return $stmt->execute();
    }
    return false;
}

// Update Cart Quantity
function updateCart($cart_id, $quantity) {
    global $conn;
    if (isset($_SESSION['user_id'])) {
        $stmt = $conn->prepare("UPDATE shopping_cart SET quantity = ? WHERE id = ?");
        $stmt->bind_param("ii", $quantity, $cart_id);
        return $stmt->execute();
    }
    return false;
}

// Remove Product from Cart
function removeFromCart($cart_id) {
    global $conn;
    if (isset($_SESSION['user_id'])) {
        $stmt = $conn->prepare("DELETE FROM shopping_cart WHERE id = ?");
        $stmt->bind_param("i", $cart_id);
        return $stmt->execute();
    }
    return false;
}
?>


<?php
session_start();
include 'db_connection.php';

function processOrder() {
    global $conn;
    if (isset($_SESSION['user_id'])) {
        // Calculate Total Amount
        $total = calculateCartTotal();

        // Insert Order into Orders Table
        $stmt = $conn->prepare("INSERT INTO orders (user_id, total, order_date) VALUES (?, ?, NOW())");
        $stmt->bind_param("id", $_SESSION['user_id'], $total);
        $stmt->execute();
        $order_id = $conn->insert_id;

        // Get Cart Items
        $cart_items = getCartItems();

        foreach ($cart_items as $item) {
            // Insert Order Item
            $product_price = getProductPrice($item['product_id']);
            $stmt = $conn->prepare("INSERT INTO order_items (order_id, product_id, quantity, price) VALUES (?, ?, ?, ?)");
            $stmt->bind_param("iidi", $order_id, $item['product_id'], $item['quantity'], $product_price);
            $stmt->execute();

            // Decrease Product Stock
            decreaseProductStock($item['product_id'], $item['quantity']);
        }

        // Clear Shopping Cart
        clearCart();

        return true;
    }
    return false;
}

function calculateCartTotal() {
    global $conn;
    $total = 0;
    if (isset($_SESSION['user_id'])) {
        $stmt = $conn->prepare("SELECT p.price, sc.quantity FROM shopping_cart sc JOIN products p ON sc.product_id = p.id WHERE sc.user_id = ?");
        $stmt->bind_param("i", $_SESSION['user_id']);
        $stmt->execute();
        $result = $stmt->get_result();
        while ($row = $result->fetch_assoc()) {
            $total += $row['price'] * $row['quantity'];
        }
    }
    return $total;
}

function getCartItems() {
    global $conn;
    $cart_items = array();
    if (isset($_SESSION['user_id'])) {
        $stmt = $conn->prepare("SELECT sc.*, p.price FROM shopping_cart sc JOIN products p ON sc.product_id = p.id WHERE sc.user_id = ?");
        $stmt->bind_param("i", $_SESSION['user_id']);
        $stmt->execute();
        $result = $stmt->get_result();
        while ($row = $result->fetch_assoc()) {
            array_push($cart_items, $row);
        }
    }
    return $cart_items;
}

function getProductPrice($product_id) {
    global $conn;
    $price = 0;
    $stmt = $conn->prepare("SELECT price FROM products WHERE id = ?");
    $stmt->bind_param("i", $product_id);
    $stmt->execute();
    $result = $stmt->get_result();
    if ($result->num_rows > 0) {
        $price = $result->fetch_assoc()['price'];
    }
    return $price;
}

function decreaseProductStock($product_id, $quantity) {
    global $conn;
    $stmt = $conn->prepare("UPDATE products SET stock = stock - ? WHERE id = ?");
    $stmt->bind_param("ii", $quantity, $product_id);
    $stmt->execute();
}

function clearCart() {
    global $conn;
    if (isset($_SESSION['user_id'])) {
        $stmt = $conn->prepare("DELETE FROM shopping_cart WHERE user_id = ?");
        $stmt->bind_param("i", $_SESSION['user_id']);
        return $stmt->execute();
    }
    return false;
}
?>


<?php
require 'stripe-php/init.php';

// Set your Stripe secret key
\Stripe\Stripe::setApiKey('your_stripe_secret_key');

function processPayment($amount, $description) {
    try {
        $charge = \Stripe\Charge::create([
            'amount' => $amount * 100, // Amount in cents
            'currency' => 'usd',
            'description' => $description,
            'source' => $_POST['stripeToken'],
        ]);
        return true;
    } catch (\Stripe\Exception\CardException $e) {
        // The card has been declined
        return false;
    }
}
?>


<?php
session_start();
include 'db_connection.php';
include 'payment_processing.php';

if (isset($_POST['checkout'])) {
    $total = calculateCartTotal();

    if ($total > 0) {
        // Process Payment
        if (processPayment($total, 'Order Payment')) {
            // Process Order
            processOrder();
            echo "Thank you for your order!";
            header("Location: thank_you.php");
            exit();
        } else {
            die("Payment failed. Please try again.");
        }
    } else {
        die("Your cart is empty.");
    }
}
?>


<?php
function sendOrderConfirmation($order_id) {
    global $conn;
    if (isset($_SESSION['user_id'])) {
        // Get User Details
        $stmt = $conn->prepare("SELECT * FROM users WHERE id = ?");
        $stmt->bind_param("i", $_SESSION['user_id']);
        $stmt->execute();
        $user = $stmt->get_result()->fetch_assoc();

        // Get Order Details
        $stmt = $conn->prepare("SELECT * FROM orders WHERE id = ?");
        $stmt->bind_param("i", $order_id);
        $stmt->execute();
        $order = $stmt->get_result()->fetch_assoc();

        // Prepare Email Content
        $subject = "Order Confirmation - Order #" . $order['id'];
        $message = "
            <html>
                <body>
                    <h1>Thank you for your order!</h1>
                    <p>Your order has been received and is being processed.</p>
                    <p>Order ID: " . $order['id'] . "</p>
                    <p>Total: $" . number_format($order['total'], 2) . "</p>
                </body>
            </html>
        ";

        // Set headers
        $headers = "MIME-Version: 1.0" . "\r
";
        $headers .= "Content-type: text/html; charset=UTF-8" . "\r
";
        $headers .= "From: Your Store <your.store@example.com>" . "\r
";

        // Send email
        mail($user['email'], $subject, $message, $headers);
    }
}
?>


<?php
$host = "localhost";
$username = "root";
$password = "";
$dbname = "purchase_system";

$conn = mysqli_connect($host, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}
?>


<?php
session_start();
include('config.php');

// Get all products from database
$result = mysqli_query($conn, "SELECT * FROM products");
$products = mysqli_fetch_all($result, MYSQLI_ASSOC);

mysqli_close($conn);
?>
<!DOCTYPE html>
<html>
<head>
    <title>Product Store</title>
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>
    <div class="container mt-4">
        <h2>Welcome to Product Store</h2>
        
        <?php if (empty($products)): ?>
            <p>No products available.</p>
        <?php else: ?>
            <div class="row">
                <?php foreach ($products as $product): ?>
                    <div class="col-md-3 mb-4">
                        <div class="card">
                            <img src="<?php echo $product['image']; ?>" alt="<?php echo $product['name']; ?>" class="card-img-top" style="height: 200px; object-fit: cover;">
                            <div class="card-body">
                                <h5 class="card-title"><?php echo $product['name']; ?></h5>
                                <p class="card-text"><?php echo $product['description']; ?></p>
                                <p class="card-text">Price: $<?php echo number_format($product['price'], 2); ?></p>
                                <a href="cart.php?action=add&product_id=<?php echo $product['id']; ?>" class="btn btn-primary">Buy Now</a>
                            </div>
                        </div>
                    </div>
                <?php endforeach; ?>
            </div>
        <?php endif; ?>
    </div>

    <!-- Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>


<?php
session_start();
include('config.php');

// Add product to cart
if (isset($_GET['action']) && $_GET['action'] == 'add') {
    $product_id = intval($_GET['product_id']);
    
    // Get product details
    $result = mysqli_query($conn, "SELECT * FROM products WHERE id=" . $product_id);
    $product = mysqli_fetch_assoc($result);
    
    if ($product) {
        $cart_item = array(
            'id' => $product['id'],
            'name' => $product['name'],
            'price' => $product['price'],
            'quantity' => 1
        );
        
        // Check if product already exists in cart
        if (isset($_SESSION['cart'][$product_id])) {
            $_SESSION['cart'][$product_id]['quantity']++;
        } else {
            $_SESSION['cart'][$product_id] = $cart_item;
        }
    }
}

// Remove product from cart
if (isset($_GET['action']) && $_GET['action'] == 'remove') {
    $product_id = intval($_GET['product_id']);
    
    if (isset($_SESSION['cart'][$product_id])) {
        unset($_SESSION['cart'][$product_id]);
    }
}

mysqli_close($conn);
?>
<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>
    <div class="container mt-4">
        <h2>Your Shopping Cart</h2>
        
        <?php if (empty($_SESSION['cart'])): ?>
            <p>Your cart is empty.</p>
            <a href="index.php" class="btn btn-primary">Continue Shopping</a>
        <?php else: ?>
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>Product Name</th>
                        <th>Price</th>
                        <th>Quantity</th>
                        <th>Total</th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tbody>
                    <?php $total = 0; ?>
                    <?php foreach ($_SESSION['cart'] as $product_id => $item): ?>
                        <tr>
                            <td><?php echo $item['name']; ?></td>
                            <td>$<?php echo number_format($item['price'], 2); ?></td>
                            <td>
                                <form action="cart.php" method="post">
                                    <input type="number" name="quantity" value="<?php echo $item['quantity']; ?>" min="1" max="99" style="width: 60px;">
                                    <button type="submit" class="btn btn-sm btn-primary">Update</button>
                                    <input type="hidden" name="product_id" value="<?php echo $product_id; ?>">
                                </form>
                            </td>
                            <?php 
                            $total += $item['price'] * $item['quantity'];
                            ?>
                            <td>$<?php echo number_format($item['price'] * $item['quantity'], 2); ?></td>
                            <td><a href="cart.php?action=remove&product_id=<?php echo $product_id; ?>" class="btn btn-danger">Remove</a></td>
                        </tr>
                    <?php endforeach; ?>
                </tbody>
            </table>
            
            <h4>Grand Total: $<?php echo number_format($total, 2); ?></h4>
            
            <form action="order.php" method="post">
                <div class="mb-3">
                    <label for="name">Name:</label>
                    <input type="text" name="name" id="name" required class="form-control">
                </div>
                <div class="mb-3">
                    <label for="email">Email:</label>
                    <input type="email" name="email" id="email" required class="form-control">
                </div>
                <div class="mb-3">
                    <label for="address">Address:</label>
                    <textarea name="address" id="address" required class="form-control"></textarea>
                </div>
                <div class="mb-3">
                    <label for="contact_no">Contact Number:</label>
                    <input type="tel" name="contact_no" id="contact_no" required class="form-control">
                </div>
                
                <?php foreach ($_SESSION['cart'] as $product_id => $item): ?>
                    <input type="hidden" name="products[<?php echo $product_id; ?>][id]" value="<?php echo $item['id']; ?>">
                    <input type="hidden" name="products[<?php echo $product_id; ?>][name]" value="<?php echo $item['name']; ?>">
                    <input type="hidden" name="products[<?php echo $product_id; ?>][price]" value="<?php echo $item['price']; ?>">
                    <input type="hidden" name="products[<?php echo $product_id; ?>][quantity]" value="<?php echo $item['quantity']; ?>">
                <?php endforeach; ?>
                
                <button type="submit" class="btn btn-success">Place Order</button>
            </form>
        <?php endif; ?>
    </div>

    <!-- Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>


<?php
session_start();
include('config.php');

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Get order details
    $name = mysqli_real_escape_string($conn, $_POST['name']);
    $email = mysqli_real_escape_string($conn, $_POST['email']);
    $address = mysqli_real_escape_string($conn, $_POST['address']);
    $contact_no = mysqli_real_escape_string($conn, $_POST['contact_no']);
    
    // Calculate total amount
    $total_amount = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total_amount += $item['price'] * $item['quantity'];
    }
    
    // Insert order into database
    $order_query = "INSERT INTO orders (name, email, address, contact_no, total_amount, order_date) 
                    VALUES ('$name', '$email', '$address', '$contact_no', $total_amount, NOW())";
    mysqli_query($conn, $order_query);
    
    $last_order_id = mysqli_insert_id($conn);
    
    // Insert order details
    foreach ($_SESSION['cart'] as $product_id => $item) {
        $detail_query = "INSERT INTO order_details (order_id, product_id, product_name, quantity, price)
                        VALUES ('$last_order_id', '{$item['id']}', '{$item['name']}', '{$item['quantity']}', '{$item['price']}')";
        mysqli_query($conn, $detail_query);
    }
    
    // Clear cart
    unset($_SESSION['cart']);
    
    // Redirect to thank you page
    header("Location: order_confirmation.php?order_id=" . $last_order_id);
}

mysqli_close($conn);
?>


<?php
session_start();
include('config.php');

$order_id = isset($_GET['order_id']) ? intval($_GET['order_id']) : 0;

if ($order_id) {
    $result = mysqli_query($conn, "SELECT * FROM orders WHERE id=" . $order_id);
    $order = mysqli_fetch_assoc($result);
    
    if ($order) {
        // Get order details
        $details_result = mysqli_query($conn, "SELECT * FROM order_details WHERE order_id=" . $order_id);
        $details = mysqli_fetch_all($details_result, MYSQLI_ASSOC);
        
        $total_amount = $order['total_amount'];
    }
}

mysqli_close($conn);
?>
<!DOCTYPE html>
<html>
<head>
    <title>Order Confirmation</title>
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>
    <div class="container mt-4">
        <h2>Order Confirmation</h2>
        
        <?php if ($order): ?>
            <p>Your order has been successfully placed!</p>
            <p><strong>Order ID:</strong> #<?php echo $order_id; ?></p>
            <p><strong>Total Amount:</strong> $<?php echo number_format($total_amount, 2); ?></p>
            
            <h4>Order Details:</h4>
            <table class="table">
                <thead>
                    <tr>
                        <th>Product Name</th>
                        <th>Quantity</th>
                        <th>Price</th>
                    </tr>
                </thead>
                <tbody>
                    <?php foreach ($details as $detail): ?>
                        <tr>
                            <td><?php echo $detail['product_name']; ?></td>
                            <td><?php echo $detail['quantity']; ?></td>
                            <td>$<?php echo number_format($detail['price'], 2); ?></td>
                        </tr>
                    <?php endforeach; ?>
                </tbody>
            </table>
            
            <a href="index.php" class="btn btn-primary">Continue Shopping</a>
        <?php else: ?>
            <p>Invalid order ID or order not found.</p>
            <a href="index.php" class="btn btn-primary">Back to Home</a>
        <?php endif; ?>
    </div>

    <!-- Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>


<?php
$host = "localhost";
$username = "root";
$password = "";
$dbname = "shopping_cart";

$conn = new mysqli($host, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}
?>


<?php
session_start();
require_once('config.php');

$product_id = $_POST['product_id'];
$quantity = isset($_POST['quantity']) ? $_POST['quantity'] : 1;

// Get product details from database
$sql = "SELECT * FROM products WHERE id = $product_id";
$result = $conn->query($sql);

if ($result->num_rows > 0) {
    $row = $result->fetch_assoc();
    
    if (isset($_SESSION['cart'])) {
        $item_exists = false;
        foreach ($_SESSION['cart'] as &$item) {
            if ($item['id'] == $product_id) {
                $item['quantity'] += $quantity;
                $item_exists = true;
                break;
            }
        }
        if (!$item_exists) {
            array_push($_SESSION['cart'], [
                'id' => $product_id,
                'name' => $row['name'],
                'price' => $row['price'],
                'quantity' => $quantity
            ]);
        }
    } else {
        $_SESSION['cart'] = array(
            array(
                'id' => $product_id,
                'name' => $row['name'],
                'price' => $row['price'],
                'quantity' => $quantity
            )
        );
    }
    
    echo "Product added to cart!";
} else {
    echo "Product not found!";
}
?>


<?php
session_start();
require_once('config.php');

if (!isset($_SESSION['cart'])) {
    $cart = array();
} else {
    $cart = $_SESSION['cart'];
}

$total_price = 0;
foreach ($cart as $item) {
    $total_price += $item['price'] * $item['quantity'];
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <?php if (empty($cart)): ?>
        <h2>Your cart is empty!</h2>
    <?php else: ?>
        <table border="1">
            <tr>
                <th>Name</th>
                <th>Price</th>
                <th>Quantity</th>
                <th>Total</th>
            </tr>
            <?php foreach ($cart as $item): ?>
                <tr>
                    <td><?php echo $item['name']; ?></td>
                    <td><?php echo $item['price']; ?></td>
                    <td><?php echo $item['quantity']; ?></td>
                    <td><?php echo $item['price'] * $item['quantity']; ?></td>
                </tr>
            <?php endforeach; ?>
        </table>
        <h3>Total: <?php echo $total_price; ?></h3>
    <?php endif; ?>
    
    <a href="checkout.php">Checkout</a>
</body>
</html>


<?php
session_start();
require_once('config.php');

if (!isset($_SESSION['cart']) || count($_SESSION['cart']) == 0) {
    header("Location: view_cart.php");
    exit();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
</head>
<body>
    <h2>Payment Information</h2>
    <form action="place_order.php" method="post">
        <label>Name:</label><br>
        <input type="text" name="name" required><br><br>
        
        <label>Email:</label><br>
        <input type="email" name="email" required><br><br>
        
        <label>Card Number:</label><br>
        <input type="text" name="card_number" required><br><br>
        
        <label>CVC:</label><br>
        <input type="text" name="cvc" required><br><br>
        
        <input type="submit" value="Place Order">
    </form>
</body>
</html>


<?php
session_start();
require_once('config.php');

if (!isset($_SESSION['cart']) || count($_SESSION['cart']) == 0) {
    header("Location: view_cart.php");
    exit();
}

$name = $_POST['name'];
$email = $_POST['email'];
$card_number = $_POST['card_number'];
$cvc = $_POST['cvc'];

// Calculate total amount
$total_amount = 0;
foreach ($_SESSION['cart'] as $item) {
    $total_amount += $item['price'] * $item['quantity'];
}

// Insert order into database
$sql = "INSERT INTO orders (user_name, user_email, total_amount, payment_status) 
        VALUES (?, ?, ?, 'completed')";
$stmt = $conn->prepare($sql);
$stmt->bind_param("ssd", $name, $email, $total_amount);

if ($stmt->execute()) {
    // Clear cart
    unset($_SESSION['cart']);
    
    echo "Order placed successfully!";
} else {
    echo "Error placing order: " . $conn->error;
}

$stmt->close();
$conn->close();
?>


<?php
$host = 'localhost';
$db_username = 'root';
$db_password = '';
$db_name = 'purchase_system';

try {
    $conn = new PDO("mysql:host=$host;dbname=$db_name", $db_username, $db_password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}
?>


<?php
include 'config.php';

try {
    $stmt = $conn->query('SELECT * FROM products');
    $products = $stmt->fetchAll(PDO::FETCH_ASSOC);
} catch (PDOException $e) {
    die("Error fetching products: " . $e->getMessage());
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Product List</title>
</head>
<body>
    <?php foreach ($products as $product): ?>
        <div>
            <h2><?php echo htmlspecialchars($product['name']); ?></h2>
            <img src="<?php echo htmlspecialchars($product['image_path']); ?>" alt="<?php echo htmlspecialchars($product['name']); ?>">
            <p>Description: <?php echo htmlspecialchars($product['description']); ?></p>
            <p>Price: $<?php echo number_format($product['price'], 2); ?></p>
            <a href="process_purchase.php?id=<?php echo $product['id']; ?>">Buy Now</a>
        </div>
    <?php endforeach; ?>
</body>
</html>


<?php
include 'config.php';

if (isset($_GET['id'])) {
    $productId = $_GET['id'];
    
    try {
        // Retrieve product details
        $stmt = $conn->prepare('SELECT * FROM products WHERE id = :id');
        $stmt->bindParam(':id', $productId, PDO::PARAM_INT);
        $stmt->execute();
        
        if ($stmt->rowCount() == 0) {
            die("Product not found.");
        }
        
        $product = $stmt->fetch(PDO::FETCH_ASSOC);
        
        // Simulate user info (replace with actual session data)
        $userInfo = [
            'name' => 'John Doe',
            'email' => 'john@example.com'
        ];
        
        // Calculate total price including tax
        $taxRate = 0.10; // 10% tax
        $totalPrice = $product['price'] * (1 + $taxRate);
        
        // Insert purchase record
        $purchaseStmt = $conn->prepare('INSERT INTO purchases 
                                      SET user_name = :name, user_email = :email,
                                          product_id = :productId, product_name = :productName,
                                          price = :price, total_amount = :totalAmount,
                                          purchase_date = NOW()');
        
        $purchaseStmt->bindParam(':name', $userInfo['name'], PDO::PARAM_STR);
        $purchaseStmt->bindParam(':email', $userInfo['email'], PDO::PARAM_STR);
        $purchaseStmt->bindParam(':productId', $product['id'], PDO::PARAM_INT);
        $purchaseStmt->bindParam(':productName', $product['name'], PDO::PARAM_STR);
        $purchaseStmt->bindParam(':price', $product['price'], PDO::PARAM_DECIMAL);
        $purchaseStmt->bindParam(':totalAmount', $totalPrice, PDO::PARAM_DECIMAL);
        
        if ($purchaseStmt->execute()) {
            header("Location: confirmation.php");
            exit();
        } else {
            die("Error processing purchase.");
        }
    } catch (PDOException $e) {
        die("Database error: " . $e->getMessage());
    }
} else {
    die("Invalid request.");
}
?>


<?php
// No PHP code needed here; simply display a confirmation message.
?>

<!DOCTYPE html>
<html>
<head>
    <title>Purchase Confirmation</title>
</head>
<body>
    <h2>Thank you for your purchase!</h2>
    <p>Your order has been processed successfully.</p>
    <a href="product_list.php">Continue Shopping</a>
</body>
</html>


<?php
include 'db_connection.php';

$sql = "SELECT * FROM products";
$result = $conn->query($sql);

if ($result->num_rows > 0) {
    while ($row = $result->fetch_assoc()) {
        echo "<div class='product'>";
        echo "<h3>".$row["name"]."</h3>";
        echo "<p>".$row["description"]."</p>";
        echo "<p>Price: \$".$row["price"]."</p>";
        echo "<p>Quantity Available: ".$row["quantity"]."</p>";
        echo "<form action='add_to_cart.php' method='post'>";
        echo "<input type='hidden' name='product_id' value='".$row["id"]."'>";
        echo "<input type='number' name='quantity' min='1' max='".$row["quantity"]."' placeholder='Enter quantity'>";
        echo "<button type='submit'>Add to Cart</button>";
        echo "</form>";
        echo "</div>";
    }
} else {
    echo "No products available.";
}
$conn->close();
?>


<?php
session_start();

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $product_id = $_POST['product_id'];
    $quantity = $_POST['quantity'];

    if (isset($_SESSION['cart'])) {
        if (array_key_exists($product_id, $_SESSION['cart'])) {
            $_SESSION['cart'][$product_id]['quantity'] += $quantity;
        } else {
            $_SESSION['cart'][$product_id] = array(
                'quantity' => $quantity
            );
        }
    } else {
        $_SESSION['cart'] = array(
            $product_id => array(
                'quantity' => $quantity
            )
        );
    }
}

header("Location: cart.php");
exit();
?>


<?php
session_start();

$total = 0;

if (isset($_SESSION['cart'])) {
    echo "<h2>Your Cart</h2>";
    echo "<table>";
    echo "<tr><th>Product ID</th><th>Quantity</th><th>Total</th></tr>";

    foreach ($_SESSION['cart'] as $product_id => $item) {
        $sql = "SELECT name, price FROM products WHERE id = ?";
        $stmt = $conn->prepare($sql);
        $stmt->bind_param("i", $product_id);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($row = $result->fetch_assoc()) {
            $price = $row['price'];
            $name = $row['name'];
            $sub_total = $item['quantity'] * $price;
            $total += $sub_total;

            echo "<tr>";
            echo "<td>".$name."</td>";
            echo "<td>".$item['quantity']."</td>";
            echo "<td>\$".$sub_total."</td>";
            echo "</tr>";
        }
    }

    echo "</table>";
    echo "<h3>Total: \$".$total."</h3>";
} else {
    echo "Your cart is empty.";
}

$conn->close();
?>


<?php
session_start();

if (isset($_SESSION['cart'])) {
    $total = 0;

    foreach ($_SESSION['cart'] as $product_id => $item) {
        // Calculate total here
    }

    if ($total > 0) {
        echo "<h2>Checkout</h2>";
        echo "<form action='process_payment.php' method='post'>";
        echo "<label for='card_number'>Card Number:</label>";
        echo "<input type='text' id='card_number' name='card_number' required>";
        echo "<br>";
        echo "<label for='cvv'>CVV:</label>";
        echo "<input type='password' id='cvv' name='cvv' required>";
        echo "<br>";
        echo "<label for='expiry_month'>Expiry Month:</label>";
        echo "<select id='expiry_month' name='expiry_month'>";
        // Add options for months
        echo "</select>";
        echo "<br>";
        echo "<label for='expiry_year'>Expiry Year:</label>";
        echo "<select id='expiry_year' name='expiry_year'>";
        // Add options for years
        echo "</select>";
        echo "<br>";
        echo "<button type='submit'>Pay \$".$total."</button>";
        echo "</form>";
    } else {
        header("Location: cart.php");
        exit();
    }
} else {
    header("Location: products.php");
    exit();
}
?>


<?php
session_start();

if (isset($_SESSION['cart'])) {
    $total = 0;

    foreach ($_SESSION['cart'] as $product_id => $item) {
        // Calculate total here
    }

    if ($total > 0 && isset($_POST)) {
        // Validate payment details
        // Assuming payment is successful

        // Insert order into database
        $sql = "INSERT INTO orders (user_id, product_id, quantity, total_price) VALUES (?, ?, ?, ?)";
        $stmt = $conn->prepare($sql);
        $stmt->bind_param("iidi", $user_id, $product_id, $quantity, $total);
        // Set user_id and other variables accordingly
        $stmt->execute();

        // Clear cart
        unset($_SESSION['cart']);
    }

    header("Location: thank_you.php");
    exit();
} else {
    header("Location: products.php");
    exit();
}
?>


<?php
session_start();

echo "<h2>Thank You for Your Purchase!</h2>";
echo "<p>Your order has been received.</p>";
// Display any relevant order details
?>


<?php
// Include database configuration
require_once 'db_config.php';

class Product {
    private $id;
    private $name;
    private $price;
    private $description;
    private $stock;

    public function __construct($id, $name, $price, $description, $stock) {
        $this->id = $id;
        $this->name = $name;
        $this->price = $price;
        $this->description = $description;
        $this->stock = $stock;
    }

    // Getters and setters
    public function getId() { return $this->id; }
    public function getName() { return $this->name; }
    public function getPrice() { return $this->price; }
    public function getDescription() { return $this->description; }
    public function getStock() { return $this->stock; }

    public function isInStock() {
        return $this->stock > 0;
    }
}

class ShoppingCart {
    private $cartItems = array();

    public function addItem($productId, $quantity) {
        if (!isset($this->cartItems[$productId])) {
            $this->cartItems[$productId] = 0;
        }
        $this->cartItems[$productId] += $quantity;
    }

    public function removeItem($productId, $quantity) {
        if (isset($this->cartItems[$productId])) {
            $this->cartItems[$productId] -= $quantity;
            if ($this->cartItems[$productId] <= 0) {
                unset($this->cartItems[$productId]);
            }
        }
    }

    public function clearCart() {
        $this->cartItems = array();
    }

    public function getItems() {
        return $this->cartItems;
    }

    public function calculateTotalAmount() {
        global $conn;
        $total = 0;
        foreach ($this->cartItems as $productId => $quantity) {
            $stmt = $conn->prepare("SELECT price FROM products WHERE id = ?");
            $stmt->execute([$productId]);
            $productPrice = $stmt->fetchColumn();
            $total += $productPrice * $quantity;
        }
        return $total;
    }

    public function getCartCount() {
        $count = 0;
        foreach ($this->cartItems as $quantity) {
            $count += $quantity;
        }
        return $count;
    }
}

class Checkout {
    private $cart;

    public function __construct($cart) {
        $this->cart = $cart;
    }

    public function processCheckout() {
        // Validate cart
        if ($this->cart->getItems() == null || count($this->cart->getItems()) == 0) {
            throw new Exception("Your cart is empty!");
        }

        // Check stock availability for all items
        global $conn;
        foreach ($this->cart->getItems() as $productId => $quantity) {
            $stmt = $conn->prepare("SELECT stock FROM products WHERE id = ?");
            $stmt->execute([$productId]);
            $stock = $stmt->fetchColumn();
            
            if ($stock < $quantity) {
                throw new Exception("Product " . $productId . " is out of stock!");
            }
        }

        // Deduct quantities from inventory
        foreach ($this->cart->getItems() as $productId => $quantity) {
            $stmt = $conn->prepare("UPDATE products SET stock = stock - ? WHERE id = ?");
            $stmt->execute([$quantity, $productId]);
        }

        // Place order in database
        return $this->placeOrder();
    }

    private function placeOrder() {
        global $conn;
        
        // Get user details (replace with actual user data)
        $userId = 1; // Replace with current user ID
        $cartItems = $this->cart->getItems();

        // Insert into orders table
        $stmt = $conn->prepare("INSERT INTO orders (user_id, total_amount) VALUES (?, ?)");
        $totalAmount = $this->cart->calculateTotalAmount();
        $stmt->execute([$userId, $totalAmount]);
        $orderId = $conn->lastInsertId();

        // Insert into order_details table
        foreach ($cartItems as $productId => $quantity) {
            $stmt = $conn->prepare("INSERT INTO order_details (order_id, product_id, quantity) VALUES (?, ?, ?)");
            $stmt->execute([$orderId, $productId, $quantity]);
        }

        // Clear cart
        $this->cart->clearCart();

        return $orderId;
    }
}

class OrderHistory {
    public function getAllOrders($userId) {
        global $conn;
        
        $stmt = $conn->prepare("SELECT * FROM orders WHERE user_id = ?");
        $stmt->execute([$userId]);
        return $stmt->fetchAll();
    }

    public function getOrderById($orderId) {
        global $conn;
        
        $stmt = $conn->prepare("SELECT * FROM orders WHERE id = ?");
        $stmt->execute([$orderId]);
        return $stmt->fetch();
    }
}

// Example usage:

function displayProducts() {
    global $conn;
    
    $stmt = $conn->query("SELECT * FROM products");
    while ($row = $stmt->fetch()) {
        $product = new Product($row['id'], $row['name'], $row['price'], $row['description'], $row['stock']);
        
        echo "<div class='product'>";
        echo "<h3>" . $product->getName() . "</h3>";
        echo "<p>Price: $" . number_format($product->getPrice(), 2) . "</p>";
        if ($product->isInStock()) {
            echo "<button onclick=\"addToCart(" . $product->getId() . ")\">Add to Cart</button>";
        } else {
            echo "<p>Out of stock</p>";
        }
        echo "</div>";
    }
}

function addToCart($productId) {
    global $cart;
    
    $cart->addItem($productId, 1);
    header("Location: shopping_cart.php");
}

function removeFromCart($productId) {
    global $cart;
    
    $cart->removeItem($productId, 1);
    header("Location: shopping_cart.php");
}

function checkout() {
    try {
        global $cart;
        $checkout = new Checkout($cart);
        $orderId = $checkout->processCheckout();
        echo "Order placed successfully! Order ID: " . $orderId;
    } catch (Exception $e) {
        echo $e->getMessage();
    }
}

function viewOrderHistory() {
    global $conn, $userId;
    
    $orderHistory = new OrderHistory();
    $orders = $orderHistory->getAllOrders($userId);
    foreach ($orders as $order) {
        echo "<div class='order'>";
        echo "<h3>Order #" . $order['id'] . "</h3>";
        echo "<p>Date: " . $order['created_at'] . "</p>";
        echo "<p>Total Amount: $" . number_format($order['total_amount'], 2) . "</p>";
        echo "</div>";
    }
}
?>


<?php
$servername = "localhost";
$username = "root";
$password = "";
$dbname = "your_database_name";

try {
    $conn = new PDO("mysql:host=$servername;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}
?>


<?php
// Initialize session
session_start();

// Create Cart class
class Cart {
    public function __construct() {
        if (!isset($_SESSION['cart'])) {
            $_SESSION['cart'] = array();
        }
    }

    // Add item to cart
    public function add_item($item_id, $item_name, $price) {
        if (empty($item_id)) {
            return "Item ID is required.";
        }
        
        if (!isset($_SESSION['cart'][$item_id])) {
            $_SESSION['cart'][$item_id] = array(
                'item_id' => $item_id,
                'name' => $item_name,
                'price' => $price,
                'quantity' => 1
            );
        } else {
            $_SESSION['cart'][$item_id]['quantity']++;
        }
        
        return "Item added to cart successfully.";
    }

    // Remove item from cart
    public function remove_item($item_id) {
        if (isset($_SESSION['cart'][$item_id])) {
            unset($_SESSION['cart'][$item_id]);
            return "Item removed from cart successfully.";
        } else {
            return "Item not found in cart.";
        }
    }

    // Update item quantity
    public function update_quantity($item_id, $quantity) {
        if (!isset($_SESSION['cart'][$item_id])) {
            return "Item not found in cart.";
        }
        
        if ($quantity < 1) {
            return "Quantity must be at least 1.";
        }
        
        $_SESSION['cart'][$item_id]['quantity'] = $quantity;
        return "Quantity updated successfully.";
    }

    // Get all items from cart
    public function get_items() {
        return $_SESSION['cart'];
    }

    // Calculate total price
    public function calculate_total() {
        $total = 0;
        foreach ($_SESSION['cart'] as $item) {
            $total += ($item['price'] * $item['quantity']);
        }
        return $total;
    }
}

// Create instance of Cart
$cart = new Cart();

// Handle form actions
$message = '';

if (isset($_POST['action'])) {
    switch ($_POST['action']) {
        case 'add':
            if (!empty($_POST['item_id']) && !empty($_POST['price'])) {
                $result = $cart->add_item($_POST['item_id'], $_POST['name'], $_POST['price']);
                $message = $result;
            }
            break;

        case 'update':
            if (!empty($_POST['item_id']) && isset($_POST['quantity'])) {
                $result = $cart->update_quantity($_POST['item_id'], $_POST['quantity']);
                $message = $result;
            }
            break;

        case 'remove':
            if (!empty($_POST['item_id'])) {
                $result = $cart->remove_item($_POST['item_id']);
                $message = $result;
            }
            break;
    }
}

// Get cart items
$cart_items = $cart->get_items();
$total_price = $cart->calculate_total();

// Display cart contents
echo "<h2>Your Cart</h2>";
if (empty($cart_items)) {
    echo "Your cart is empty.";
} else {
    echo "<table border='1'>";
    echo "<tr><th>Item Name</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>";
    
    foreach ($cart_items as $item) {
        $total = $item['price'] * $item['quantity'];
        
        // Update form
        $update_form = "
            <form method='post'>
                <input type='hidden' name='action' value='update'>
                <input type='hidden' name='item_id' value='{$item['item_id']}'>
                Quantity: <input type='number' name='quantity' min='1' value='{$item['quantity']}'>
                <button type='submit'>Update</button>
            </form>
        ";
        
        // Remove form
        $remove_form = "
            <form method='post' style='display:inline;'>
                <input type='hidden' name='action' value='remove'>
                <input type='hidden' name='item_id' value='{$item['item_id']}'>
                <button type='submit'>Remove</button>
            </form>
        ";
        
        echo "<tr>";
        echo "<td>{$item['name']}</td>";
        echo "<td>\${$item['price']}</td>";
        echo "<td>{$update_form}</td>";
        echo "<td>\${$total}</td>";
        echo "<td>{$remove_form}</td>";
        echo "</tr>";
    }
    
    echo "</table>";
    echo "<h3>Total: \$$total_price</h3>";
}

// Display message
if (!empty($message)) {
    echo "<div class='alert alert-info'>$message</div>";
}
?>

<!-- Add item form -->
<form method="post">
    <input type="hidden" name="action" value="add">
    Item ID: <input type="text" name="item_id"><br>
    Name: <input type="text" name="name"><br>
    Price: <input type="number" name="price"><br>
    <button type="submit">Add to Cart</button>
</form>

<!-- Add some CSS for styling -->
<style>
.alert {
    padding: 10px;
    margin-top: 20px;
}
.alert-info {
    background-color: #f0f8ff;
    color: #346a8b;
}
table {
    width: 100%;
    border-collapse: collapse;
}
th, td {
    padding: 15px;
    text-align: left;
}
</style>


<?php
session_start();

// Sample products (you can replace this with your database)
$products = array(
    array('id' => 1, 'name' => 'Product 1', 'price' => 29.99, 'description' => 'This is product 1'),
    array('id' => 2, 'name' => 'Product 2', 'price' => 49.99, 'description' => 'This is product 2'),
    array('id' => 3, 'name' => 'Product 3', 'price' => 19.99, 'description' => 'This is product 3')
);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <?php foreach ($products as $product): ?>
        <div style="border: 1px solid #ddd; padding: 10px; margin-bottom: 10px;">
            <h3><?php echo $product['name']; ?></h3>
            <p><?php echo $product['description']; ?></p>
            <p>Price: <?php echo '$' . number_format($product['price'], 2); ?></p>
            <form action="add_to_cart.php" method="post">
                <input type="hidden" name="id" value="<?php echo $product['id']; ?>">
                <input type="number" name="quantity" min="1" value="1">
                <button type="submit">Add to Cart</button>
            </form>
        </div>
    <?php endforeach; ?>

    <a href="cart.php">View Cart</a>
</body>
</html>


<?php
session_start();

// Get product details from the form submission
$id = $_POST['id'];
$quantity = $_POST['quantity'];

// Check if cart exists in session, if not create it
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Check if product already exists in cart
if (array_key_exists($id, $_SESSION['cart'])) {
    // Update quantity
    $_SESSION['cart'][$id]['quantity'] += $quantity;
} else {
    // Add new product to cart
    $_SESSION['cart'][$id] = array(
        'id' => $id,
        'quantity' => $quantity,
        'price' => 29.99, // Replace with dynamic price from your products
    );
}

// Redirect back to the product list page
header('Location: index.php');
exit();


<?php
session_start();

// Get total price
$total = 0;
if (isset($_SESSION['cart'])) {
    foreach ($_SESSION['cart'] as $item) {
        $total += ($item['price'] * $item['quantity']);
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <h1>Your Shopping Cart</h1>
    
    <?php if (isset($_SESSION['cart']) && count($_SESSION['cart']) > 0): ?>
        <table border="1">
            <tr>
                <th>Product ID</th>
                <th>Quantity</th>
                <th>Price</th>
                <th>Total</th>
                <th>Action</th>
            </tr>
            <?php foreach ($_SESSION['cart'] as $item): ?>
                <tr>
                    <td><?php echo $item['id']; ?></td>
                    <td>
                        <form action="update_cart.php" method="post">
                            <input type="hidden" name="id" value="<?php echo $item['id']; ?>">
                            <input type="number" name="quantity" min="1" value="<?php echo $item['quantity']; ?>">
                    </td>
                    <td><?php echo '$' . number_format($item['price'], 2); ?></td>
                    <td><?php echo '$' . number_format(($item['price'] * $item['quantity']), 2); ?></td>
                    <td>
                        <button type="submit">Update</button>
                        </form>
                        <a href="delete_from_cart.php?id=<?php echo $item['id']; ?>">Delete</a>
                    </td>
                </tr>
            <?php endforeach; ?>
        </table>
        
        <h3>Total: <?php echo '$' . number_format($total, 2); ?></h3>
        <a href="index.php">Continue Shopping</a>
    <?php else: ?>
        <p>Your cart is empty.</p>
    <?php endif; ?>
    
    <form action="checkout.php" method="post">
        <button type="submit">Checkout</button>
    </form>
</body>
</html>


<?php
session_start();

// Get product details from the form submission
$id = $_POST['id'];
$quantity = $_POST['quantity'];

if (isset($_SESSION['cart'][$id])) {
    // Update quantity
    $_SESSION['cart'][$id]['quantity'] = $quantity;
}

// Redirect back to the cart page
header('Location: cart.php');
exit();


<?php
session_start();

$id = $_GET['id'];

if (isset($_SESSION['cart'][$id])) {
    unset($_SESSION['cart'][$id]);
}

// Redirect back to the cart page
header('Location: cart.php');
exit();


<?php
session_start();
include 'db_connection.php';

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $name = $_POST['name'];
    $email = $_POST['email'];
    $password = password_hash($_POST['password'], PASSWORD_DEFAULT);

    $sql = "INSERT INTO users (name, email, password_hash) VALUES (?, ?, ?)";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("sss", $name, $email, $password);
    
    if ($stmt->execute()) {
        echo "Registration successful!";
        header("Location: login.php");
        exit();
    } else {
        echo "Error registering user.";
    }
}
?>
<!DOCTYPE html>
<html>
<head>
    <title>Register</title>
</head>
<body>
    <h1>Register</h1>
    <form method="post">
        <input type="text" name="name" placeholder="Enter your name" required><br><br>
        <input type="email" name="email" placeholder="Enter your email" required><br><br>
        <input type="password" name="password" placeholder="Enter password" required><br><br>
        <button type="submit">Register</button>
    </form>
</body>
</html>


<?php
session_start();
include 'db_connection.php';

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $email = $_POST['email'];
    $password = $_POST['password'];

    $sql = "SELECT * FROM users WHERE email=?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("s", $email);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows == 1) {
        $user = $result->fetch_assoc();
        if (password_verify($password, $user['password_hash'])) {
            $_SESSION['user_id'] = $user['id'];
            $_SESSION['name'] = $user['name'];
            header("Location: products.php");
            exit();
        } else {
            echo "Incorrect password.";
        }
    } else {
        echo "No user found with this email.";
    }
}
?>
<!DOCTYPE html>
<html>
<head>
    <title>Login</title>
</head>
<body>
    <h1>Login</h1>
    <form method="post">
        <input type="email" name="email" placeholder="Enter your email" required><br><br>
        <input type="password" name="password" placeholder="Enter password" required><br><br>
        <button type="submit">Login</button>
    </form>
</body>
</html>


<?php
session_start();
include 'db_connection.php';

$sql = "SELECT * FROM products";
$result = $conn->query($sql);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Products</title>
</head>
<body>
    <h1>Welcome, <?=$_SESSION['name']?>!</h1>
    <a href="logout.php">Logout</a><br><br>
    
    <?php while ($product = $result->fetch_assoc()): ?>
        <div style="border: 1px solid #ddd; padding: 10px;">
            <h2><?php echo $product['product_name']; ?></h2>
            <p><?php echo $product['description']; ?></p>
            <p>Price: <?php echo $product['price']; ?>$</p>
            <p>Available Quantity: <?php echo $product['stock_quantity']; ?></p>
            <form action="add_to_cart.php" method="post">
                <input type="hidden" name="product_id" value="<?php echo $product['id']; ?>">
                <input type="number" name="quantity" min="1" max="<?php echo $product['stock_quantity']; ?>" required>
                <button type="submit">Add to Cart</button>
            </form>
        </div><br>
    <?php endwhile; ?>
    
    <a href="cart.php">View Cart</a>
</body>
</html>


<?php
session_start();
include 'db_connection.php';

if (isset($_POST['product_id']) && isset($_POST['quantity'])) {
    $product_id = $_POST['product_id'];
    $quantity = $_POST['quantity'];

    // Check if product is in stock
    $sql = "SELECT * FROM products WHERE id=?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("i", $product_id);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        $product = $result->fetch_assoc();
        if ($quantity <= $product['stock_quantity']) {
            // Add to cart
            if (!isset($_SESSION['cart'])) {
                $_SESSION['cart'] = array();
            }
            
            if (array_key_exists($product_id, $_SESSION['cart'])) {
                $_SESSION['cart'][$product_id]['quantity'] += $quantity;
            } else {
                $_SESSION['cart'][$product_id] = array(
                    'product_name' => $product['product_name'],
                    'price' => $product['price'],
                    'quantity' => $quantity
                );
            }
            
            echo "Product added to cart!";
        } else {
            echo "Not enough stock available.";
        }
    } else {
        echo "Product not found.";
    }
}
?>


<?php
session_start();
include 'db_connection.php';
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <h1>Your Shopping Cart</h1>
    <a href="products.php">Continue Shopping</a><br><br>

    <?php if (!empty($_SESSION['cart'])): ?>
        <table border="1">
            <tr>
                <th>Product Name</th>
                <th>Price</th>
                <th>Quantity</th>
                <th>Total</th>
                <th>Action</th>
            </tr>
            
            <?php foreach ($_SESSION['cart'] as $product_id => $item): ?>
                <tr>
                    <td><?php echo $item['product_name']; ?></td>
                    <td><?php echo $item['price']; ?>$</td>
                    <td><input type="number" name="quantity" min="1" max="<?php echo $item['quantity']; ?>"></td>
                    <td><?php echo $item['price'] * $item['quantity']; ?>$</td>
                    <td>
                        <a href="update_cart.php?product_id=<?php echo $product_id; ?>">Update</a> |
                        <a href="remove_from_cart.php?product_id=<?php echo $product_id; ?>">Remove</a>
                    </td>
                </tr>
            <?php endforeach; ?>
        </table><br>
        
        <button onclick="window.location.href='checkout.php'">Proceed to Checkout</button>
    <?php else: ?>
        <p>Your cart is empty.</p>
    <?php endif; ?>
</body>
</html>


<?php
session_start();
include 'db_connection.php';

// Get user details from session
$user_id = $_SESSION['user_id'];

if (isset($_POST['submit'])) {
    $total_price = 0;
    
    foreach ($_SESSION['cart'] as $product_id => $item) {
        $total_price += $item['price'] * $item['quantity'];
    }
    
    // Insert order into database
    $sql = "INSERT INTO orders (user_id, product_id, quantity, total_price) VALUES (?, ?, ?, ?)";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("iidi", $user_id, $product_id, $item['quantity'], $total_price);
    
    if ($stmt->execute()) {
        // Deduct stock from products table
        $sql = "UPDATE products SET stock_quantity=stock_quantity-? WHERE id=?";
        $stmt = $conn->prepare($sql);
        $stmt->bind_param("ii", $item['quantity'], $product_id);
        $stmt->execute();
        
        unset($_SESSION['cart']);
        echo "Order placed successfully!";
    } else {
        echo "Error placing order.";
    }
}
?>
<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
</head>
<body>
    <h1>Checkout</h1>
    
    <form method="post">
        <input type="hidden" name="total_price" value="<?php echo $total_price; ?>">
        
        <p>Shipping Address:</p>
        <input type="text" name="address_line_1" placeholder="Enter address line 1" required><br>
        <input type="text" name="city" placeholder="Enter city" required><br>
        <input type="text" name="state" placeholder="Enter state"><br>
        <input type="text" name="zip_code" placeholder="Enter zip code" required><br><br>
        
        <button type="submit" name="submit">Place Order</button>
    </form>
</body>
</html>


<?php
session_start();
include 'db_connection.php';

if (isset($_GET['order_id'])) {
    $order_id = $_GET['order_id'];
    
    $sql = "SELECT * FROM orders WHERE id=?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("i", $order_id);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows > 0) {
        $order = $result->fetch_assoc();
    } else {
        die("Order not found.");
    }
}
?>
<!DOCTYPE html>
<html>
<head>
    <title>Order Confirmation</title>
</head>
<body>
    <h1>Thank you for your purchase!</h1>
    
    <p>Your order details:</p>
    <p>Order ID: <?php echo $order['id']; ?></p>
    <p>Product: <?php echo $order['product_name']; ?></p>
    <p>Quantity: <?php echo $order['quantity']; ?></p>
    <p>Total Price: <?php echo $order['total_price']; ?>$</p>
    
    <a href="products.php">Continue Shopping</a>
</body>
</html>


<?php
session_start();
unset($_SESSION['user_id']);
unset($_SESSION['name']);
header("Location: login.php");
exit();
?>


<?php
$host = 'localhost';
$dbname = 'your_database_name';
$username = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}
?>


<?php
// config.php - Database configuration
$host = 'localhost';
$dbname = 'shopping_cart';
$username = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}
?>



<?php
// functions.php - Cart functions

require_once 'config.php';

function get_products($conn) {
    $stmt = $conn->query("SELECT * FROM products");
    return $stmt->fetchAll(PDO::FETCH_ASSOC);
}

function add_to_cart($product_id, $quantity) {
    if (isset($_SESSION['cart'])) {
        if (array_key_exists($product_id, $_SESSION['cart'])) {
            $_SESSION['cart'][$product_id]['quantity'] += $quantity;
        } else {
            $_SESSION['cart'][$product_id] = array(
                'id' => $product_id,
                'name' => get_product_name($conn, $product_id),
                'price' => get_product_price($conn, $product_id),
                'quantity' => $quantity
            );
        }
    } else {
        $_SESSION['cart'] = array();
        $_SESSION['cart'][$product_id] = array(
            'id' => $product_id,
            'name' => get_product_name($conn, $product_id),
            'price' => get_product_price($conn, $product_id),
            'quantity' => $quantity
        );
    }
}

function calculate_total() {
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += ($item['price'] * $item['quantity']);
    }
    return $total;
}

function view_cart($conn) {
    if (isset($_SESSION['cart'])) {
        $items = $_SESSION['cart'];
        return $items;
    } else {
        return array();
    }
}

function remove_from_cart($product_id) {
    if (isset($_SESSION['cart'][$product_id])) {
        unset($_SESSION['cart'][$product_id]);
    }
}

function update_quantity($product_id, $quantity) {
    if ($quantity > 0 && isset($_SESSION['cart'][$product_id])) {
        $_SESSION['cart'][$product_id]['quantity'] = $quantity;
    }
}

function get_product_name($conn, $product_id) {
    $stmt = $conn->prepare("SELECT name FROM products WHERE id = ?");
    $stmt->execute([$product_id]);
    return $stmt->fetch(PDO::FETCH_ASSOC)['name'];
}

function get_product_price($conn, $product_id) {
    $stmt = $conn->prepare("SELECT price FROM products WHERE id = ?");
    $stmt->execute([$product_id]);
    return $stmt->fetch(PDO::FETCH_ASSOC)['price'];
}
?>



<?php
// view_cart.php - Display cart contents

session_start();
require_once 'functions.php';

$conn = require_once('config.php');

$cart_items = view_cart($conn);
$total = calculate_total();

echo "<h2>Your Shopping Cart</h2>";
if (!empty($cart_items)) {
    echo "<table>";
    echo "<tr><th>Product Name</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>";
    
    foreach ($cart_items as $item) {
        $subtotal = $item['price'] * $item['quantity'];
        echo "<tr>";
        echo "<td>{$item['name']}</td>";
        echo "<td>$".number_format($item['price'], 2)."</td>";
        echo "<td><input type='text' name='quantity{$item['id']}' value='{$item['quantity']}' size='3'></td>";
        echo "<td>$".number_format($subtotal, 2)."</td>";
        echo "<td><a href='remove_from_cart.php?id={$item['id']}'>Remove</a></td>";
        echo "</tr>";
    }
    
    echo "</table>";
    echo "<p>Total: $".number_format($total, 2)."</p>";
    echo "<form method='post' action='update_cart.php'>";
    echo "<input type='submit' value='Update Cart'>";
    echo "</form>";
} else {
    echo "Your cart is empty.";
}
?>



<?php
// add_to_cart.php - Add item to cart

session_start();
require_once 'functions.php';

$conn = require_once('config.php');

if (isset($_GET['id']) && isset($_GET['quantity'])) {
    $product_id = $_GET['id'];
    $quantity = $_GET['quantity'];
    
    add_to_cart($product_id, $quantity);
}

header("Location: view_cart.php");
exit();
?>



<?php
// remove_from_cart.php - Remove item from cart

session_start();
require_once 'functions.php';

$conn = require_once('config.php');

if (isset($_GET['id'])) {
    $product_id = $_GET['id'];
    remove_from_cart($product_id);
}

header("Location: view_cart.php");
exit();
?>



<?php
// update_cart.php - Update cart quantities

session_start();
require_once 'functions.php';

$conn = require_once('config.php');

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    foreach ($_SESSION['cart'] as $item) {
        if (isset($_POST["quantity{$item['id']}"])) {
            $quantity = $_POST["quantity{$item['id']}"];
            update_quantity($item['id'], $quantity);
        }
    }
}

header("Location: view_cart.php");
exit();
?>



<?php
session_start();

// Database connection
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'cart';

$conn = mysqli_connect($host, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Add to cart function
function addToCart($productId) {
    global $conn;
    
    if (isset($_SESSION['cart'])) {
        $cart = $_SESSION['cart'];
    } else {
        $cart = array();
    }
    
    // Check if product already exists in cart
    if (array_key_exists($productId, $cart)) {
        $cart[$productId]['quantity']++;
    } else {
        // Get product details from database
        $sql = "SELECT * FROM products WHERE id = ?";
        $stmt = mysqli_prepare($conn, $sql);
        mysqli_stmt_bind_param($stmt, "i", $productId);
        mysqli_stmt_execute($stmt);
        $result = mysqli_stmt_get_result($stmt);
        
        if ($row = mysqli_fetch_assoc($result)) {
            $cart[$productId] = array(
                'id' => $row['id'],
                'name' => $row['name'],
                'price' => $row['price'],
                'quantity' => 1
            );
        }
    }
    
    $_SESSION['cart'] = $cart;
}

// Remove from cart function
function removeFromCart($productId) {
    if (isset($_SESSION['cart'])) {
        unset($_SESSION['cart'][$productId]);
        $_SESSION['cart'] = array_values($_SESSION['cart']);
    }
}

// Update quantity function
function updateQuantity($productId, $quantity) {
    if (isset($_SESSION['cart']) && isset($_SESSION['cart'][$productId])) {
        $_SESSION['cart'][$productId]['quantity'] = $quantity;
    }
}

// Display cart contents
function displayCart() {
    if (isset($_SESSION['cart'])) {
        $cart = $_SESSION['cart'];
        foreach ($cart as $item) {
            echo "<tr>";
            echo "<td>" . $item['name'] . "</td>";
            echo "<td>$$item[price]</td>";
            echo "<td><input type='number' name='quantity[" . $item['id'] . "]' value='" . $item['quantity'] . "'></td>";
            echo "<td><a href='remove.php?id=" . $item['id'] . "'>Remove</a></td>";
            echo "</tr>";
        }
    }
}

// Calculate total price
function calculateTotal() {
    if (isset($_SESSION['cart'])) {
        $total = 0;
        foreach ($_SESSION['cart'] as $item) {
            $total += $item['price'] * $item['quantity'];
        }
        return $total;
    } else {
        return 0;
    }
}
?>


<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
    <style>
        .cart {
            width: 300px;
            float: right;
            padding: 20px;
            border: 1px solid #ccc;
        }
    </style>
</head>
<body>
    <!-- Products -->
    <?php
    $sql = "SELECT * FROM products";
    $result = mysqli_query($conn, $sql);
    
    while ($row = mysqli_fetch_assoc($result)) {
        echo "<div style='float:left; margin:10px; padding:10px; border:1px solid #ccc;'>";
        echo "<h3>" . $row['name'] . "</h3>";
        echo "<p>$$row[price]</p>";
        echo "<a href='add.php?id=" . $row['id'] . "'>Add to Cart</a>";
        echo "</div>";
    }
    ?>

    <!-- Cart -->
    <div class="cart">
        <h2>Your Cart</h2>
        <?php if (isset($_SESSION['cart'])): ?>
            <table>
                <?php displayCart(); ?>
            </table>
            <p>Total: $$<?php echo calculateTotal(); ?></p>
            <form action="update.php" method="post">
                <input type="submit" value="Update Cart">
            </form>
        <?php else: ?>
            <p>Your cart is empty.</p>
        <?php endif; ?>
    </div>
</body>
</html>


<?php
session_start();
if (isset($_GET['id'])) {
    addToCart($_GET['id']);
}
header("Location: index.php");
?>


<?php
session_start();
if (isset($_GET['id'])) {
    removeFromCart($_GET['id']);
}
header("Location: index.php");
?>


<?php
session_start();
if (isset($_POST['quantity'])) {
    foreach ($_POST['quantity'] as $productId => $qty) {
        updateQuantity($productId, $qty);
    }
}
header("Location: index.php");
?>


<?php
try {
    $conn = new PDO('mysql:host=localhost;dbname=your_database', 'username', 'password');
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}
?>


<?php
session_start();
?>


<?php
include 'db_connection.php';

if (isset($_POST['product_id']) && isset($_POST['quantity'])) {
    $productId = $_POST['product_id'];
    $quantity = $_POST['quantity'];

    // Check if the item already exists in the cart for this session
    $checkCart = $conn->prepare("SELECT * FROM order_details WHERE product_id = ? AND order_id = ?");
    $checkCart->execute([$productId, session_id()]);

    if ($checkCart->rowCount() > 0) {
        // Update quantity
        $updateCart = $conn->prepare("UPDATE order_details SET quantity = quantity + ? WHERE product_id = ? AND order_id = ?");
        $updateCart->execute([$quantity, $productId, session_id()]);
    } else {
        // Insert new item
        $insertCart = $conn->prepare("INSERT INTO order_details (product_id, quantity, order_id) VALUES (?, ?, ?)");
        $insertCart->execute([$productId, $quantity, session_id()]);
    }
}
?>


<?php
include 'db_connection.php';

$cartItems = $conn->prepare("SELECT * FROM order_details WHERE order_id = ?");
$cartItems->execute([session_id()]);

$totalPrice = 0;
foreach ($cartItems as $item) {
    // Get product details
    $product = $conn->prepare("SELECT * FROM products WHERE id = ?");
    $product->execute([$item['product_id']]);
    $productData = $product->fetch(PDO::FETCH_ASSOC);

    $price = $productData['price'];
    $totalPrice += ($price * $item['quantity']);
}

echo "<h2>Your Cart</h2>";
if ($cartItems->rowCount() > 0) {
    echo "<table>";
    foreach ($cartItems as $item) {
        // Fetch product details (as above)
        echo "<tr><td>{$productData['name']}</td><td>Quantity: {$item['quantity']}</td><td>Price: $".number_format($price, 2)."</td></tr>";
    }
    echo "</table>";
    echo "Total Price: $" . number_format($totalPrice, 2);
} else {
    echo "Your cart is empty.";
}
?>


<?php
include 'db_connection.php';

if (isset($_POST['product_id']) && isset($_POST['quantity'])) {
    $productId = $_POST['product_id'];
    $newQuantity = $_POST['quantity'];

    $updateCart = $conn->prepare("UPDATE order_details SET quantity = ? WHERE product_id = ? AND order_id = ?");
    $updateCart->execute([$newQuantity, $productId, session_id()]);
}
?>


<?php
include 'db_connection.php';

if (isset($_GET['product_id'])) {
    $productId = $_GET['product_id'];

    $deleteItem = $conn->prepare("DELETE FROM order_details WHERE product_id = ? AND order_id = ?");
    $deleteItem->execute([$productId, session_id()]);
}
?>


<?php
include 'db_connection.php';

$products = $conn->prepare("SELECT * FROM products");
$products->execute();

foreach ($products as $product) {
    echo "<div class='product'>";
    echo "<h3>{$product['name']}</h3>";
    echo "<p>Description: {$product['description']}</p>";
    echo "<p>Price: \$" . number_format($product['price'], 2) . "</p>";
    echo "<form action='add_to_cart.php' method='post'>";
    echo "<input type='hidden' name='product_id' value='{$product['id']}'>";
    echo "<input type='number' name='quantity' min='1' value='1'>";
    echo "<button type='submit'>Add to Cart</button>";
    echo "</form>";
    echo "</div>";
}
?>


<?php
// Initialize session
session_start();

// Include database connection (assuming you have one)
include('db_connection.php');

// Get product data from database
$products = array();
$result = mysqli_query($conn, "SELECT * FROM products");
while ($row = mysqli_fetch_assoc($result)) {
    $products[] = $row;
}

// Function to calculate cart total
function cart_total() {
    global $conn;
    $total = 0;
    
    if (isset($_SESSION['cart'])) {
        foreach ($_SESSION['cart'] as $item) {
            $product_id = $item['id'];
            $quantity = $item['quantity'];
            
            // Get product price from database
            $query = "SELECT price FROM products WHERE id = $product_id";
            $result = mysqli_query($conn, $query);
            if ($row = mysqli_fetch_assoc($result)) {
                $total += $row['price'] * $quantity;
            }
        }
    }
    
    return number_format($total, 2);
}

// Function to update cart
function update_cart($product_id, $action) {
    global $conn;
    
    if ($action == 'add') {
        // Add product to cart
        $query = "SELECT id, name, price FROM products WHERE id = $product_id";
        $result = mysqli_query($conn, $query);
        
        if ($row = mysqli_fetch_assoc($result)) {
            $item = array(
                'id' => $row['id'],
                'name' => $row['name'],
                'price' => $row['price'],
                'quantity' => 1
            );
            
            if (!isset($_SESSION['cart'][$product_id])) {
                $_SESSION['cart'][$product_id] = $item;
            } else {
                $_SESSION['cart'][$product_id]['quantity']++;
            }
        }
    } elseif ($action == 'remove') {
        // Remove product from cart
        unset($_SESSION['cart'][$product_id]);
    } elseif ($action == 'update_quantity') {
        // Update quantity of product in cart
        $new_quantity = intval($_POST['quantity']);
        $_SESSION['cart'][$product_id]['quantity'] = $new_quantity;
    }
}

// Function to display cart items
function display_cart() {
    if (isset($_SESSION['cart'])) {
        foreach ($_SESSION['cart'] as $item) {
            echo "<tr>";
            echo "<td>{$item['name']}</td>";
            echo "<td>$$item[price]</td>";
            echo "<td><input type='number' value='{$item['quantity']}' onchange='updateQuantity({$item['id']})'></td>";
            echo "<td><a href='cart.php?action=remove&id={$item['id']}'>Remove</a></td>";
            echo "</tr>";
        }
    } else {
        echo "<p>Your cart is empty.</p>";
    }
}

// Function to process checkout
function process_checkout() {
    global $conn;
    
    if (isset($_SESSION['cart'])) {
        // Insert order into database
        date_default_timezone_set("UTC");
        $order_date = date('Y-m-d H:i:s');
        $total = cart_total();
        
        $query = "INSERT INTO orders (date, total) VALUES ('$order_date', $total)";
        mysqli_query($conn, $query);
        
        // Get order ID
        $order_id = mysqli_insert_id($conn);
        
        // Insert order details
        foreach ($_SESSION['cart'] as $item) {
            $product_id = $item['id'];
            $quantity = $item['quantity'];
            
            $query = "INSERT INTO order_details (order_id, product_id, quantity) 
                     VALUES ($order_id, $product_id, $quantity)";
            mysqli_query($conn, $query);
        }
        
        // Clear cart
        unset($_SESSION['cart']);
        
        return true;
    } else {
        return false;
    }
}
?>


<?php
// Initialize cart array
$cart = array();

// Check if cookie exists
if (isset($_COOKIE['cart'])) {
    $cart = unserialize($_COOKIE['cart']);
}

// Add item to cart
if ($_GET['action'] == 'add') {
    $item_id = $_GET['id'];
    $item_name = $_GET['name'];
    $item_price = $_GET['price'];

    if (isset($cart[$item_id])) {
        // Item already in cart, increment quantity
        $cart[$item_id]['quantity']++;
    } else {
        // Add new item to cart
        $cart[$item_id] = array(
            'name' => $item_name,
            'price' => $item_price,
            'quantity' => 1
        );
    }

    // Update cookie
    setcookie('cart', serialize($cart), time() + 3600);
}

// Remove item from cart
if ($_GET['action'] == 'remove') {
    $item_id = $_GET['id'];
    
    if (isset($cart[$item_id])) {
        unset($cart[$item_id]);
        setcookie('cart', serialize($cart), time() + 3600);
    }
}

// Update item quantity
if ($_POST['action'] == 'update') {
    foreach ($_POST['quantity'] as $item_id => $quantity) {
        if ($quantity < 1) {
            unset($cart[$item_id]);
        } else {
            $cart[$item_id]['quantity'] = $quantity;
        }
    }

    setcookie('cart', serialize($cart), time() + 3600);
}

// Calculate total
$total = 0;
foreach ($cart as $item) {
    $total += $item['price'] * $item['quantity'];
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <h1>Shopping Cart</h1>
    
    <!-- Add items -->
    <div id="products">
        <a href="?action=add&id=1&name=Product%201&price=19.99">Add Product 1 ($19.99)</a><br>
        <a href="?action=add&id=2&name=Product%202&price=29.99">Add Product 2 ($29.99)</a><br>
        <a href="?action=add&id=3&name=Product%203&price=39.99">Add Product 3 ($39.99)</a><br>
    </div>

    <!-- Display cart -->
    <?php if (!empty($cart)): ?>
    <h2>Your Cart</h2>
    <form method="post">
        <input type="hidden" name="action" value="update">
        <table>
            <tr>
                <th>Item Name</th>
                <th>Price</th>
                <th>Quantity</th>
                <th>Total</th>
                <th>Action</th>
            </tr>
            
            <?php foreach ($cart as $item_id => $item): ?>
            <tr>
                <td><?php echo htmlspecialchars($item['name']); ?></td>
                <td>$<?php echo number_format($item['price'], 2); ?></td>
                <td><input type="text" name="quantity[<?php echo $item_id; ?>]" value="<?php echo $item['quantity']; ?>" size="3"></td>
                <td>$<?php echo number_format($item['price'] * $item['quantity'], 2); ?></td>
                <td><a href="?action=remove&id=<?php echo $item_id; ?>">Remove</a></td>
            </tr>
            <?php endforeach; ?>
        </table>
        <p>Total: $<?php echo number_format($total, 2); ?></p>
        <input type="submit" value="Update Cart">
    </form>
    <?php else: ?>
    <p>Your cart is empty.</p>
    <?php endif; ?>

</body>
</html>


<?php
session_start();

// Check if session is not set
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add item to cart
function addToCart($item) {
    global $conn;
    
    // Item should have: id, name, price
    
    $sku = $item['id'];
    
    if (isset($_SESSION['cart'][$sku])) {
        // Update quantity
        $_SESSION['cart'][$sku]['quantity']++;
    } else {
        // Add new item
        $_SESSION['cart'][$sku] = array(
            'id' => $item['id'],
            'name' => $item['name'],
            'price' => $item['price'],
            'quantity' => 1
        );
    }
}

// Remove item from cart
function removeFromCart($sku) {
    if (isset($_SESSION['cart'][$sku])) {
        unset($_SESSION['cart'][$sku]);
    }
}

// Update quantity of an item
function updateQuantity($sku, $quantity) {
    if ($quantity > 0 && isset($_SESSION['cart'][$sku])) {
        $_SESSION['cart'][$sku]['quantity'] = $quantity;
    } else {
        removeFromCart($sku);
    }
}

// Display cart content
function displayCart() {
    $output = '';
    
    if (empty($_SESSION['cart'])) {
        return '<p>Your cart is empty.</p>';
    }
    
    $output .= '
        <table class="cart-table">
            <thead>
                <tr>
                    <th>Item</th>
                    <th>Price</th>
                    <th>Quantity</th>
                    <th>Total</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>';
    
    $total = 0;
    
    foreach ($_SESSION['cart'] as $item) {
        $subtotal = $item['price'] * $item['quantity'];
        $total += $subtotal;
        
        $output .= '
            <tr>
                <td>' . $item['name'] . '</td>
                <td>$' . number_format($item['price'], 2) . '</td>
                <td>
                    <input type="number" 
                           value="' . $item['quantity'] . '" 
                           onChange="updateQuantity(' . $item['id'] . ', this.value)">
                </td>
                <td>$' . number_format($subtotal, 2) . '</td>
                <td><a href="#" onclick="removeFromCart(' . $item['id'] . ')">Remove</a></td>
            </tr>';
    }
    
    $output .= '
            </tbody>
        </table>
        
        <p>Grand Total: $' . number_format($total, 2) . '</p>
        <button onclick="checkout()">Checkout</button>';
    
    return $output;
}

// Example usage:
$item1 = array(
    'id' => 1,
    'name' => 'Product 1',
    'price' => 19.99
);

addToCart($item1);
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Shopping Cart</title>
    <style>
        .cart-table {
            width: 100%;
            border-collapse: collapse;
            margin: 20px 0;
        }
        
        .cart-table th, .cart-table td {
            padding: 12px;
            text-align: left;
            border-bottom: 1px solid #ddd;
        }
        
        .cart-table th {
            background-color: #f5f5f5;
        }
        
        button {
            padding: 10px 20px;
            background-color: #4CAF50;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
        
        button:hover {
            background-color: #45a049;
        }
    </style>
</head>
<body>
    <h1>Shopping Cart</h1>
    
    <!-- Add items to cart -->
    <div id="cart">
        <?php echo displayCart(); ?>
    </div>

    <script>
        function removeFromCart(sku) {
            if (confirm("Are you sure you want to remove this item?")) {
                window.location.href = 'index.php?action=remove&sku=' + sku;
            }
        }

        function updateQuantity(id, quantity) {
            window.location.href = 'index.php?action=update&id=' . id + '&quantity=' + quantity;
        }

        function checkout() {
            window.location.href = 'checkout.php';
        }
    </script>
</body>
</html>


<?php
$host = "localhost";
$user = "root";
$password = "";
$db_name = "your_database_name";

$conn = new mysqli($host, $user, $password, $db_name);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}
?>


<?php
session_start();
include('db.php');

$sql = "SELECT * FROM products";
$result = $conn->query($sql);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
    <style>
        .product {
            border: 1px solid #ddd;
            padding: 10px;
            margin: 5px;
        }
    </style>
</head>
<body>
    <?php
    if ($result->num_rows > 0) {
        while ($row = $result->fetch_assoc()) {
            echo "<div class='product'>";
            echo "<h3>" . $row['name'] . "</h3>";
            echo "<p>Price: $" . number_format($row['price'], 2) . "</p>";
            echo "<img src='" . $row['image_path'] . "' width='100' />";
            echo "<form action='add_to_cart.php' method='post'>";
            echo "<input type='hidden' name='id' value='" . $row['id'] . "'>";
            echo "<input type='submit' value='Add to Cart'>";
            echo "</form>";
            echo "</div>";
        }
    } else {
        echo "No products found.";
    }
    ?>
</body>
</html>


<?php
session_start();
include('db.php');

$product_id = $_POST['id'];

if (isset($_SESSION['cart'])) {
    $cart = $_SESSION['cart'];
} else {
    $cart = array();
}

if (!array_key_exists($product_id, $cart)) {
    $cart[$product_id] = 1;
} else {
    $cart[$product_id]++;
}

$_SESSION['cart'] = $cart;

header("Location: index.php");
?>


<?php
session_start();
include('db.php');

if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

$cart = $_SESSION['cart'];
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
    <style>
        .cart-item {
            border: 1px solid #ddd;
            padding: 10px;
            margin: 5px;
        }
    </style>
</head>
<body>
    <?php if (empty($cart)): ?>
        <h2>Your cart is empty.</h2>
    <?php else: ?>
        <h2>Your Cart:</h2>
        <form action="update_cart.php" method="post">
            <?php foreach ($cart as $product_id => $quantity): ?>
                <?php
                $sql = "SELECT * FROM products WHERE id = ?";
                $stmt = $conn->prepare($sql);
                $stmt->bind_param("i", $product_id);
                $stmt->execute();
                $result = $stmt->get_result();
                $row = $result->fetch_assoc();
                ?>
                <div class="cart-item">
                    <?php echo $row['name']; ?>
                    <br>
                    Price: $<?php echo number_format($row['price'], 2); ?>
                    <br>
                    Quantity:
                    <input type="number" name="<?php echo $product_id; ?>" value="<?php echo $quantity; ?>">
                    <br>
                    Total: $<?php echo number_format($row['price'] * $quantity, 2); ?>
                    <br>
                    <a href="remove_item.php?id=<?php echo $product_id; ?>">Remove</a>
                </div>
            <?php endforeach; ?>
            <br>
            <input type="submit" value="Update Cart">
        </form>
    <?php endif; ?>

    <a href="index.php">Continue Shopping</a>
</body>
</html>


<?php
session_start();
include('db.php');

$product_id = $_GET['id'];
$cart = $_SESSION['cart'];

if (array_key_exists($product_id, $cart)) {
    unset($cart[$product_id]);
}

$_SESSION['cart'] = $cart;

header("Location: view_cart.php");
?>


<?php
session_start();
include('db.php');

$cart = $_SESSION['cart'];

foreach ($_POST as $product_id => $quantity) {
    if (is_numeric($quantity)) {
        $cart[$product_id] = $quantity;
    }
}

$_SESSION['cart'] = $cart;

header("Location: view_cart.php");
?>


<?php
session_start();
include('db.php');

if (empty($_SESSION['cart'])) {
    header("Location: view_cart.php");
}

$cart = $_SESSION['cart'];
$total = 0;

foreach ($cart as $product_id => $quantity) {
    $sql = "SELECT * FROM products WHERE id = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("i", $product_id);
    $stmt->execute();
    $result = $stmt->get_result();
    $row = $result->fetch_assoc();

    if ($row) {
        $total += $row['price'] * $quantity;
    }
}

$_SESSION['order_total'] = $total;

header("Location: payment.php");
?>


<?php
session_start();
$total = $_SESSION['order_total'];
?>

<!DOCTYPE html>
<html>
<head>
    <title>Payment</title>
</head>
<body>
    <h2>Payment Information</h2>
    <p>Total Amount: $<?php echo number_format($total, 2); ?></p>
    <!-- Add payment form fields here -->
    <form action="process_payment.php" method="post">
        <input type="hidden" name="amount" value="<?php echo $total; ?>">
        <label>Credit Card Number:</label>
        <input type="text" name="card_number" required><br>
        <label>Expiration Date:</label>
        <input type="text" name="expiration_date" required><br>
        <label>CVV:</label>
        <input type="text" name="cvv" required><br>
        <input type="submit" value="Pay Now">
    </form>
</body>
</html>


<?php
session_start();
include('db.php');

$amount = $_POST['amount'];
// Process payment logic here (e.g., using Stripe, PayPal, etc.)

// For this example, we'll just clear the cart and show a success message.
$_SESSION['cart'] = array();

header("Location: thank_you.php");
?>


<!DOCTYPE html>
<html>
<head>
    <title>Thank You</title>
</head>
<body>
    <h2>Thank you for your purchase!</h2>
    <p>Your order has been successfully processed.</p>
    <a href="index.php">Continue Shopping</a>
</body>
</html>


<?php
session_start();
require_once 'db.php';

// Initialize cart if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function addToCart($productId, $quantity = 1) {
    global $conn;
    
    // Check if product exists
    $stmt = $conn->prepare("SELECT * FROM products WHERE id = ?");
    $stmt->bind_param("i", $productId);
    $stmt->execute();
    $product = $stmt->get_result()->fetch_assoc();

    if ($product) {
        // Check if item is already in cart
        if (isset($_SESSION['cart'][$productId])) {
            // Update quantity
            $newQuantity = $_SESSION['cart'][$productId]['quantity'] + $quantity;
            $_SESSION['cart'][$productId]['quantity'] = $newQuantity;
        } else {
            // Add new item to cart
            $_SESSION['cart'][$productId] = array(
                'id' => $product['id'],
                'name' => $product['name'],
                'price' => $product['price'],
                'quantity' => $quantity,
                'image' => $product['image']
            );
        }
    } else {
        // Product not found
        return false;
    }

    return true;
}

// Function to update cart item quantity
function updateCartItem($productId, $newQuantity) {
    if (isset($_SESSION['cart'][$productId])) {
        $_SESSION['cart'][$productId]['quantity'] = $newQuantity;
        return true;
    }
    return false;
}

// Function to delete item from cart
function deleteCartItem($productId) {
    if (isset($_SESSION['cart'][$productId])) {
        unset($_SESSION['cart'][$productId]);
        return true;
    }
    return false;
}

// Function to calculate total price
function calculateTotal() {
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += ($item['price'] * $item['quantity']);
    }
    return $total;
}

// Function to display cart items
function displayCart() {
    if (empty($_SESSION['cart'])) {
        echo "<p>Your cart is empty.</p>";
        return;
    }

    foreach ($_SESSION['cart'] as $item) {
        echo "<div class='cart-item'>";
        echo "<img src='" . $item['image'] . "' alt='" . $item['name'] . "'>";
        echo "<h3>" . $item['name'] . "</h3>";
        echo "<p>Price: $" . number_format($item['price'], 2) . "</p>";
        echo "<input type='number' value='" . $item['quantity'] . "' min='1' max='99'>";
        echo "<button onclick='updateQuantity(" . $item['id'] . ")'>Update</button>";
        echo "<button onclick='deleteItem(" . $item['id'] . ")'>Delete</button>";
        echo "</div>";
    }
}

// Function to empty the cart
function emptyCart() {
    $_SESSION['cart'] = array();
}

// Example usage:
if (isset($_GET['action'])) {
    switch ($_GET['action']) {
        case 'add':
            if (!empty($_GET['id']) && !empty($_GET['quantity'])) {
                addToCart($_GET['id'], $_GET['quantity']);
            }
            break;
        case 'update':
            if (!empty($_GET['id'])) {
                updateCartItem($_GET['id'], $_GET['quantity']);
            }
            break;
        case 'delete':
            if (!empty($_GET['id'])) {
                deleteCartItem($_GET['id']);
            }
            break;
    }
}

// Display cart contents
displayCart();
?>


<?php
$host = "localhost";
$username = "root";
$password = "";
$db_name = "shopping_cart";

try {
    $conn = new PDO("mysql:host=$host;dbname=$db_name", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}
?>


<?php
require_once 'config.php';

// Add product to cart
function addToCart($product_id) {
    global $conn;
    
    $session_id = UUID();
    
    try {
        // Check if product is already in cart
        $stmt = $conn->prepare("SELECT * FROM cart WHERE product_id = ? AND session_id = ?");
        $stmt->execute([$product_id, $session_id]);
        
        if ($stmt->rowCount() > 0) {
            updateCartQuantity($product_id, $session_id, 1);
            return true;
        } else {
            $stmt = $conn->prepare("INSERT INTO cart (product_id, session_id) VALUES (?, ?)");
            $stmt->execute([$product_id, $session_id]);
            return true;
        }
    } catch(PDOException $e) {
        echo "Error: " . $e->getMessage();
        return false;
    }
}

// Get all products
function getProducts() {
    global $conn;
    
    try {
        $stmt = $conn->query("SELECT * FROM products");
        return $stmt->fetchAll(PDO::FETCH_ASSOC);
    } catch(PDOException $e) {
        echo "Error: " . $e->getMessage();
        return false;
    }
}

// Get cart items
function getCartItems() {
    global $conn;
    
    $session_id = UUID();
    
    try {
        $stmt = $conn->prepare("SELECT c.*, p.* FROM cart c JOIN products p ON c.product_id = p.id WHERE c.session_id = ?");
        $stmt->execute([$session_id]);
        return $stmt->fetchAll(PDO::FETCH_ASSOC);
    } catch(PDOException $e) {
        echo "Error: " . $e->getMessage();
        return false;
    }
}

// Update cart quantity
function updateCartQuantity($product_id, $quantity) {
    global $conn;
    
    $session_id = UUID();
    
    try {
        $stmt = $conn->prepare("UPDATE cart SET quantity = ? WHERE product_id = ? AND session_id = ?");
        $stmt->execute([$quantity, $product_id, $session_id]);
        return true;
    } catch(PDOException $e) {
        echo "Error: " . $e->getMessage();
        return false;
    }
}

// Delete item from cart
function deleteCartItem($product_id) {
    global $conn;
    
    $session_id = UUID();
    
    try {
        $stmt = $conn->prepare("DELETE FROM cart WHERE product_id = ? AND session_id = ?");
        $stmt->execute([$product_id, $session_id]);
        return true;
    } catch(PDOException $e) {
        echo "Error: " . $e->getMessage();
        return false;
    }
}

// Get cart totals
function getCartTotals() {
    global $conn;
    
    $session_id = UUID();
    
    try {
        $stmt = $conn->prepare("SELECT SUM(p.price * c.quantity) as subtotal FROM cart c JOIN products p ON c.product_id = p.id WHERE c.session_id = ?");
        $stmt->execute([$session_id]);
        $result = $stmt->fetch(PDO::FETCH_ASSOC);
        
        // Calculate tax and grand total
        $tax_rate = 0.13; // 13% tax rate
        $subtotal = $result['subtotal'];
        $tax = $subtotal * $tax_rate;
        $grand_total = $subtotal + $tax;
        
        return [
            'subtotal' => $subtotal,
            'tax' => $tax,
            'grand_total' => $grand_total
        ];
    } catch(PDOException $e) {
        echo "Error: " . $e->getMessage();
        return false;
    }
}
?>


<?php
require_once 'functions.php';
$products = getProducts();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
    <style>
        body {
            font-family: Arial, sans-serif;
        }
        .product-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
            gap: 20px;
            padding: 20px;
        }
        .product-item {
            border: 1px solid #ddd;
            padding: 10px;
            text-align: center;
        }
        .price {
            color: red;
            font-weight: bold;
        }
    </style>
</head>
<body>
    <h1>Products</h1>
    <div class="product-grid">
        <?php foreach ($products as $product) { ?>
            <div class="product-item">
                <img src="<?php echo $product['image_url']; ?>" alt="<?php echo $product['name']; ?>" style="max-width: 200px;">
                <h3><?php echo $product['name']; ?></h3>
                <p class="price">$<?php echo number_format($product['price'], 2); ?></p>
                <?php if ($product['description']) { ?>
                    <p><?php echo $product['description']; ?></p>
                <?php } ?>
                <a href="add-to-cart.php?product_id=<?php echo $product['id']; ?>">Add to Cart</a>
            </div>
        <?php } ?>
    </div>
    
    <h2>Your Cart:</h2>
    <p><a href="cart.php">View Cart</a></p>
</body>
</html>


<?php
require_once 'functions.php';
if (!empty($_GET['product_id'])) {
    $product_id = intval($_GET['product_id']);
    
    if (addToCart($product_id)) {
        header("Location: index.php");
        exit();
    }
}
?>


<?php
require_once 'functions.php';
$cart_items = getCartItems();
$totals = getCartTotals();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
    <style>
        body {
            font-family: Arial, sans-serif;
        }
        .cart-table {
            width: 100%;
            border-collapse: collapse;
            margin: 20px;
        }
        .cart-table th,
        .cart-table td {
            padding: 10px;
            text-align: left;
            border-bottom: 1px solid #ddd;
        }
    </style>
</head>
<body>
    <h1>Your Cart</h1>
    
    <?php if ($cart_items) { ?>
        <table class="cart-table">
            <tr>
                <th>Product Name</th>
                <th>Price</th>
                <th>Quantity</th>
                <th>Total</th>
                <th>Action</th>
            </tr>
            <?php foreach ($cart_items as $item) { ?>
                <tr>
                    <td><?php echo $item['name']; ?></td>
                    <td>$<?php echo number_format($item['price'], 2); ?></td>
                    <td>
                        <form action="update-cart.php" method="POST">
                            <input type="hidden" name="product_id" value="<?php echo $item['id']; ?>">
                            <input type="number" name="quantity" value="<?php echo $item['quantity']; ?>" min="1">
                            <button type="submit">Update</button>
                        </form>
                    </td>
                    <td>$<?php echo number_format($item['price'] * $item['quantity'], 2); ?></td>
                    <td><a href="delete-from-cart.php?product_id=<?php echo $item['id']; ?>">Delete</a></td>
                </tr>
            <?php } ?>
        </table>
        
        <h3>Cart Totals:</h3>
        <p>Subtotal: $<?php echo number_format($totals['subtotal'], 2); ?></p>
        <p>Tax (13%): $<?php echo number_format($totals['tax'], 2); ?></p>
        <p>Grand Total: $<?php echo number_format($totals['grand_total'], 2); ?></p>
    <?php } else { ?>
        <p>Your cart is empty.</p>
    <?php } ?>

    <h3><a href="index.php">Continue Shopping</a></h3>
</body>
</html>


<?php
require_once 'functions.php';
if (!empty($_POST['product_id']) && !empty($_POST['quantity'])) {
    $product_id = intval($_POST['product_id']);
    $quantity = intval($_POST['quantity']);
    
    if ($quantity >= 1) {
        updateCartQuantity($product_id, $quantity);
    }
    
    header("Location: cart.php");
    exit();
}
?>


<?php
require_once 'functions.php';
if (!empty($_GET['product_id'])) {
    $product_id = intval($_GET['product_id']);
    
    deleteCartItem($product_id);
    
    header("Location: cart.php");
    exit();
}
?>


<?php
// Start session
session_start();

// Database connection (replace with your own database credentials)
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "myDB";

$conn = new mysqli($servername, $username, $password, $dbname);
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Cart handler
function cart_handler() {
    if (isset($_GET['action'])) {
        switch ($_GET['action']) {
            case 'add':
                add_to_cart($_GET['product_id']);
                break;
            case 'view':
                view_cart();
                break;
            case 'update':
                update_quantity($_GET['product_id'], $_GET['quantity']);
                break;
            case 'remove':
                remove_item($_GET['product_id']);
                break;
        }
    }
}

// Add to cart function
function add_to_cart($product_id) {
    global $conn;

    // Check if product exists in database
    $sql = "SELECT * FROM products WHERE id = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("i", $product_id);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        // Check if product is already in cart
        if (isset($_SESSION['cart'][$product_id])) {
            $_SESSION['cart'][$product_id]['quantity']++;
        } else {
            $row = $result->fetch_assoc();
            $_SESSION['cart'][$product_id] = array(
                'name' => $row['name'],
                'price' => $row['price'],
                'quantity' => 1
            );
        }
    }
}

// View cart function
function view_cart() {
    if (empty($_SESSION['cart'])) {
        echo "Your cart is empty.";
    } else {
        echo "<table border='1'>";
        echo "<tr><th>Product</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>";
        
        $total = 0;
        foreach ($_SESSION['cart'] as $product_id => $item) {
            $subtotal = $item['price'] * $item['quantity'];
            $total += $subtotal;

            echo "<tr>";
            echo "<td>" . $item['name'] . "</td>";
            echo "<td>$" . number_format($item['price'], 2) . "</td>";
            echo "<td><input type='number' value='" . $item['quantity'] . "' onchange=\"updateQuantity($product_id, this.value)\"></td>";
            echo "<td>$" . number_format($subtotal, 2) . "</td>";
            echo "<td><a href='cart_handler.php?action=remove&product_id=$product_id'>Remove</a></td>";
            echo "</tr>";
        }

        echo "<tr><td colspan='4'>Total:</td><td>$" . number_format($total, 2) . "</td></tr>";
        echo "</table>";
    }
}

// Update quantity function
function update_quantity($product_id, $quantity) {
    if (isset($_SESSION['cart'][$product_id]) && $quantity > 0) {
        $_SESSION['cart'][$product_id]['quantity'] = $quantity;
    }
}

// Remove item function
function remove_item($product_id) {
    if (isset($_SESSION['cart'][$product_id])) {
        unset($_SESSION['cart'][$product_id]);
    }
}

// Call cart handler
cart_handler();

$conn->close();
?>


session_start();


$products = [
    1 => ['name' => 'Laptop', 'price' => 999],
    2 => ['name' => 'Phone', 'price' => 499],
    // Add more products as needed
];


function get_cart() {
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = [];
    }
    return $_SESSION['cart'];
}


function add_to_cart($product_id) {
    $cart = get_cart();
    if (isset($cart[$product_id])) {
        $cart[$product_id]['quantity']++;
    } else {
        $cart[$product_id] = [
            'id' => $product_id,
            'name' => $products[$product_id]['name'],
            'price' => $products[$product_id]['price'],
            'quantity' => 1
        ];
    }
    $_SESSION['cart'] = $cart;
}


function update_cart($product_id, $new_quantity) {
    if (!is_numeric($new_quantity) || $new_quantity < 1) {
        return false;
    }
    
    $cart = get_cart();
    if (isset($cart[$product_id])) {
        $cart[$product_id]['quantity'] = $new_quantity;
        $_SESSION['cart'] = $cart;
        return true;
    }
    return false;
}


function remove_from_cart($product_id) {
    $cart = get_cart();
    if (isset($cart[$product_id])) {
        unset($cart[$product_id]);
        $_SESSION['cart'] = $cart;
    }
}


function empty_cart() {
    $_SESSION['cart'] = [];
}


<?php
session_start();
include('cart_functions.php');

if (isset($_POST['product_id'])) {
    add_to_cart($_POST['product_id']);
}
header("Location: index.php");
exit();
?>


<?php
session_start();
include('cart_functions.php');
$cart = get_cart();

if (empty($cart)) {
    echo "Your cart is empty.";
} else {
    $total = 0;
    foreach ($cart as $item) {
        $subtotal = $item['price'] * $item['quantity'];
        $total += $subtotal;
        echo "<div>";
        echo "<h3>{$item['name']}</h3>";
        echo "<p>Quantity: {$item['quantity']}</p>";
        echo "<p>Price: \${$item['price']}</p>";
        echo "<p>Subtotal: \${$subtotal}</p>";
        echo "<form action='update_cart.php' method='post'>";
        echo "<input type='hidden' name='product_id' value='{$item['id']}'>";
        echo "<input type='text' name='quantity' value='{$item['quantity']}'>";
        echo "<button type='submit'>Update</button>";
        echo "</form>";
        echo "<form action='remove_from_cart.php' method='post'>";
        echo "<input type='hidden' name='product_id' value='{$item['id']}'>";
        echo "<button type='submit'>Remove</button>";
        echo "</form>";
        echo "</div><br/>";
    }
    echo "<h3>Total: \${$total}</h3>";
}
?>
<a href="index.php">Continue Shopping</a> | 
<form action="empty_cart.php" method="post">
    <button type="submit">Empty Cart</button>
</form>


<?php
session_start();
include('cart_functions.php');

if (isset($_POST['product_id']) && isset($_POST['quantity'])) {
    update_cart($_POST['product_id'], $_POST['quantity']);
}
header("Location: view_cart.php");
exit();
?>


<?php
session_start();
include('cart_functions.php');

if (isset($_POST['product_id'])) {
    remove_from_cart($_POST['product_id']);
}
header("Location: view_cart.php");
exit();
?>


<?php
session_start();
include('cart_functions.php');
empty_cart();
header("Location: view_cart.php");
exit();
?>


<?php
session_start();
require_once('db_connection.php');

// Database connection function
function getConnection() {
    global $host, $username, $password, $dbname;
    $conn = new mysqli($host, $username, $password, $dbname);
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }
    return $conn;
}

// Add item to cart
if (isset($_POST['add_to_cart'])) {
    $product_id = $_POST['product_id'];
    
    // Check if product exists
    $conn = getConnection();
    $sql = "SELECT * FROM products WHERE id=?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("i", $product_id);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows > 0) {
        // Check if item is already in cart
        if (isset($_SESSION['cart'][$product_id])) {
            $_SESSION['cart'][$product_id]['quantity']++;
        } else {
            $row = $result->fetch_assoc();
            $_SESSION['cart'][$product_id] = array(
                'name' => $row['name'],
                'price' => $row['price'],
                'quantity' => 1
            );
        }
    }
    header("Location: cart.php");
    exit;
}

// Remove item from cart
if (isset($_GET['remove'])) {
    $product_id = $_GET['remove'];
    unset($_SESSION['cart'][$product_id]);
    header("Location: cart.php");
    exit;
}

// Update cart quantity
if (isset($_POST['update_cart'])) {
    foreach ($_POST['quantity'] as $key => $value) {
        if ($value == 0) {
            unset($_SESSION['cart'][$key]);
        } else {
            $_SESSION['cart'][$key]['quantity'] = $value;
        }
    }
    header("Location: cart.php");
    exit;
}

// Display cart items
function displayCart() {
    if (empty($_SESSION['cart'])) {
        echo "<p>Your cart is empty.</p>";
        return;
    }
    
    $total = 0;
    echo "<table>";
    echo "<tr><th>Product</th><th>Price</th><th>Quantity</th><th>Action</th></tr>";
    foreach ($_SESSION['cart'] as $product_id => $item) {
        echo "<tr>";
        echo "<td>{$item['name']}</td>";
        echo "<td>₱" . number_format($item['price'], 2, '.', '') . "</td>";
        echo "<td><form action='cart.php' method='post'>";
        echo "<input type='number' name='quantity[$product_id]' value='{$item['quantity']}' min='0'>";
        echo "</form></td>";
        echo "<td><a href='cart.php?remove=$product_id'>Remove</a></td>";
        echo "</tr>";
        
        $total += $item['price'] * $item['quantity'];
    }
    echo "</table>";
    
    // Update cart quantity
    if (isset($_POST['update_cart'])) {
        foreach ($_SESSION['cart'] as $key => $value) {
            $_SESSION['cart'][$key]['quantity'] = $_POST['quantity'][$key];
        }
    }
    
    echo "<p>Total: ₱" . number_format($total, 2, '.', '') . "</p>";
}

// Display all products
function displayProducts() {
    $conn = getConnection();
    $sql = "SELECT * FROM products";
    $result = $conn->query($sql);
    
    if ($result->num_rows > 0) {
        while ($row = $result->fetch_assoc()) {
            echo "<div class='product'>";
            echo "<h3>{$row['name']}</h3>";
            echo "<p>₱" . number_format($row['price'], 2, '.', '') . "</p>";
            echo "<form action='cart.php' method='post'>";
            echo "<input type='hidden' name='product_id' value='{$row['id']}'>";
            echo "<input type='submit' name='add_to_cart' value='Add to Cart'>";
            echo "</form>";
            echo "</div>";
        }
    } else {
        echo "No products found.";
    }
}
?>


<?php
$host = 'localhost';
$dbname = 'your_database';
$user = 'root';
$password = '';

try {
    $conn = new PDO("mysql:host=$host;dbname=$dbname", $user, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

    $stmt = $conn->query('SELECT * FROM products');
    $products = $stmt->fetchAll();
} catch(PDOException $e) {
    echo "Error: " . $e->getMessage();
}

?>

<!DOCTYPE html>
<html>
<head>
    <title>Product List</title>
</head>
<body>
    <?php foreach ($products as $product): ?>
        <div class="product">
            <h2><?php echo $product['name']; ?></h2>
            <p><?php echo $product['description']; ?></p>
            <p>Price: $<?php echo number_format($product['price'], 2); ?></p>
            <a href="add_to_cart.php?product_id=<?php echo $product['id']; ?>">Add to Cart</a>
        </div>
    <?php endforeach; ?>
</body>
</html>


<?php
session_start();

$product_id = $_GET['product_id'];
$quantity = isset($_GET['quantity']) ? intval($_GET['quantity']) : 1;

// Get product details
try {
    $conn = new PDO("mysql:host=localhost;dbname=your_database", 'root', '');
    $stmt = $conn->prepare('SELECT * FROM products WHERE id = :id');
    $stmt->execute(['id' => $product_id]);
    $product = $stmt->fetch();
} catch(PDOException $e) {
    die("Error: " . $e->getMessage());
}

if ($product && $quantity > 0) {
    // Get cart from cookie
    if (!isset($_COOKIE['cart'])) {
        $cart = array();
    } else {
        $cart = unserialize($_COOKIE['cart']);
        if (!is_array($cart)) {
            $cart = array();
        }
    }

    // Update or add product to cart
    if (isset($cart[$product_id])) {
        $cart[$product_id]['quantity'] += $quantity;
    } else {
        $cart[$product_id] = array(
            'id' => $product['id'],
            'name' => $product['name'],
            'price' => $product['price'],
            'quantity' => $quantity
        );
    }

    // Set the cookie again
    setcookie('cart', serialize($cart), time() + 3600);

    header("Location: product_list.php");
} else {
    die("Invalid product or quantity.");
}
?>


<?php
session_start();

// Get cart from cookie
if (!isset($_COOKIE['cart'])) {
    $cart = array();
} else {
    $cart = unserialize($_COOKIE['cart']);
    if (!is_array($cart)) {
        $cart = array();
    }
}

?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <?php if (empty($cart)): ?>
        <p>Your cart is empty.</p>
        <a href="product_list.php">Continue Shopping</a>
    <?php else: ?>
        <table border="1">
            <tr>
                <th>Product Name</th>
                <th>Price</th>
                <th>Quantity</th>
                <th>Total</th>
            </tr>
            <?php
            $total = 0;
            foreach ($cart as $product): 
                $subtotal = $product['price'] * $product['quantity'];
                $total += $subtotal;
            ?>
            <tr>
                <td><?php echo $product['name']; ?></td>
                <td>$<?php echo number_format($product['price'], 2); ?></td>
                <td><?php echo $product['quantity']; ?></td>
                <td>$<?php echo number_format($subtotal, 2); ?></td>
            </tr>
            <?php endforeach; ?>
        </table>
        <h3>Total: $<?php echo number_format($total, 2); ?></h3>
        <a href="checkout.php">Proceed to Checkout</a> | 
        <a href="product_list.php">Continue Shopping</a>
    <?php endif; ?>
</body>
</html>


<?php
session_start();

// Get cart from cookie
if (!isset($_COOKIE['cart'])) {
    header("Location: product_list.php");
}

?>

<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
</head>
<body>
    <h2>Checkout</h2>
    <form action="process_order.php" method="post">
        <div>
            <label for="name">Name:</label><br>
            <input type="text" id="name" name="name" required><br><br>

            <label for="email">Email:</label><br>
            <input type="email" id="email" name="email" required><br><br>

            <label for="phone">Phone:</label><br>
            <input type="tel" id="phone" name="phone" required><br><br>

            <label for="address">Address:</label><br>
            <textarea id="address" name="address" rows="3" cols="40" required></textarea><br><br>

            <input type="submit" value="Place Order">
        </div>
    </form>
</body>
</html>


<?php
session_start();

// Get cart from cookie
if (!isset($_COOKIE['cart'])) {
    header("Location: product_list.php");
}

// Check if form is submitted
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $name = $_POST['name'];
    $email = $_POST['email'];
    $phone = $_POST['phone'];
    $address = $_POST['address'];

    try {
        $conn = new PDO("mysql:host=localhost;dbname=your_database", 'root', '');
        $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

        // Insert order
        $stmt = $conn->prepare('INSERT INTO orders (user_name, email, phone, address, total_amount, order_date) 
                              VALUES (:name, :email, :phone, :address, :total, NOW())');
        
        $cart_total = 0;
        foreach ($_COOKIE['cart'] as $item) {
            $cart_total += $item['price'] * $item['quantity'];
        }

        $stmt->execute([
            'name' => $name,
            'email' => $email,
            'phone' => $phone,
            'address' => $address,
            'total' => $cart_total
        ]);

        // Get last inserted order ID
        $order_id = $conn->lastInsertId();

        // Insert order line items
        foreach ($_COOKIE['cart'] as $item) {
            $stmt = $conn->prepare('INSERT INTO order_line_items (order_id, product_id, quantity, price)
                                  VALUES (:order_id, :product_id, :quantity, :price)');
            $stmt->execute([
                'order_id' => $order_id,
                'product_id' => $item['id'],
                'quantity' => $item['quantity'],
                'price' => $item['price']
            ]);
        }

        // Clear cart
        setcookie('cart', '', time() - 3600);
        
        header("Location: order_confirmation.php?order_id=" . $order_id);

    } catch(PDOException $e) {
        die("Error: " . $e->getMessage());
    }
}
?>


<?php
session_start();

$order_id = $_GET['order_id'];
?>

<!DOCTYPE html>
<html>
<head>
    <title>Order Confirmation</title>
</head>
<body>
    <h2>Thank you for your order!</h2>
    <p>Your order ID is: <?php echo $order_id; ?></p>
    <a href="product_list.php">Continue Shopping</a>
</body>
</html>


<?php
// Start session
session_start();

// Initialize cart if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Sample product data (you would typically fetch this from a database in a real application)
$products = array(
    1 => array('name' => 'Product 1', 'price' => 29.99),
    2 => array('name' => 'Product 2', 'price' => 49.99),
    3 => array('name' => 'Product 3', 'price' => 19.99),
);

// Function to add item to cart
function addToCart($productId, $quantity = 1) {
    global $products;
    
    if (!isset($_SESSION['cart'][$productId])) {
        $_SESSION['cart'][$productId] = array(
            'id' => $productId,
            'name' => $products[$productId]['name'],
            'price' => $products[$productId]['price'],
            'quantity' => $quantity
        );
    } else {
        // If item exists, update quantity
        $_SESSION['cart'][$productId]['quantity'] += $quantity;
    }
}

// Function to remove item from cart
function removeFromCart($productId) {
    if (isset($_SESSION['cart'][$productId])) {
        unset($_SESSION['cart'][$productId]);
    }
}

// Function to update item quantity
function updateQuantity($productId, $newQuantity) {
    if ($newQuantity > 0 && isset($_SESSION['cart'][$productId])) {
        $_SESSION['cart'][$productId]['quantity'] = $newQuantity;
    } elseif ($newQuantity <= 0) {
        removeFromCart($productId);
    }
}

// Function to calculate total price
function cartTotal() {
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += $item['price'] * $item['quantity'];
    }
    return $total;
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
    <style>
        .product-list, .cart {
            width: 100%;
            border-collapse: collapse;
            margin: 20px 0;
        }
        
        th, td {
            padding: 8px;
            text-align: left;
            border-bottom: 1px solid #ddd;
        }
    </style>
</head>
<body>

<?php if (!empty($_SESSION['cart'])) { ?>

<h2>Your Cart</h2>
<table class="cart">
    <tr>
        <th>Product Name</th>
        <th>Price</th>
        <th>Quantity</th>
        <th>Total</th>
        <th>Action</th>
    </tr>

<?php foreach ($_SESSION['cart'] as $item) { ?>

    <tr>
        <td><?php echo $item['name']; ?></td>
        <td>$<?php echo number_format($item['price'], 2); ?></td>
        <td><input type="number" name="quantity_<?php echo $item['id']; ?>" value="<?php echo $item['quantity']; ?>"></td>
        <td>$<?php echo number_format(($item['price'] * $item['quantity']), 2); ?></td>
        <td>
            <form action="" method="post">
                <input type="hidden" name="update_id" value="<?php echo $item['id']; ?>">
                <button type="submit">Update</button>
            </form>
            <form action="" method="post">
                <input type="hidden" name="remove_id" value="<?php echo $item['id']; ?>">
                <button type="submit">Remove</button>
            </form>
        </td>
    </tr>

<?php } ?>

    <tr>
        <td colspan="4">Total:</td>
        <td>$<?php echo number_format(cartTotal(), 2); ?></td>
    </tr>
</table>

<?php } else { ?>
    <h3>Your cart is empty!</h3>
<?php } ?>

<h2>Products</h2>
<table class="product-list">
    <tr>
        <th>Product Name</th>
        <th>Price</th>
        <th>Action</th>
    </tr>

<?php foreach ($products as $id => $product) { ?>

    <tr>
        <td><?php echo $product['name']; ?></td>
        <td>$<?php echo number_format($product['price'], 2); ?></td>
        <td><a href="?add=<?php echo $id; ?>">Add to Cart</a></td>
    </tr>

<?php } ?>

</table>

<?php
// Handle form actions
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    if (isset($_POST['update_id'])) {
        $productId = $_POST['update_id'];
        $newQuantity = intval($_POST["quantity_$productId"]);
        updateQuantity($productId, $newQuantity);
    } elseif (isset($_POST['remove_id'])) {
        $productId = $_POST['remove_id'];
        removeFromCart($productId);
    }
}

// Handle add to cart action
if (isset($_GET['add'])) {
    $productId = intval($_GET['add']);
    addToCart($productId);
}
?>
</body>
</html>


<?php
session_start();

// Initialize cart if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function addToCart($item_id, $name, $price) {
    global $message;
    
    // Check if item is already in cart
    if (isset($_SESSION['cart'][$item_id])) {
        $message = "Item is already in your cart!";
        return false;
    } else {
        // Add new item to cart
        $_SESSION['cart'][$item_id] = array(
            'name' => $name,
            'price' => $price,
            'quantity' => 1
        );
        $message = "Item added to your cart!";
        return true;
    }
}

// Function to remove item from cart
function removeFromCart($item_id) {
    if (isset($_SESSION['cart'][$item_id])) {
        unset($_SESSION['cart'][$item_id]);
        $message = "Item removed from your cart!";
    } else {
        $message = "Item not found in your cart!";
    }
}

// Function to update item quantity
function updateQuantity($item_id, $quantity) {
    if (isset($_SESSION['cart'][$item_id])) {
        $_SESSION['cart'][$item_id]['quantity'] = $quantity;
        $message = "Quantity updated!";
    } else {
        $message = "Item not found in your cart!";
    }
}

// Function to clear the entire cart
function clearCart() {
    $_SESSION['cart'] = array();
    $message = "Your cart has been cleared!";
}

// Display cart contents
function displayCart() {
    if (empty($_SESSION['cart'])) {
        return "<p>Your cart is empty!</p>";
    }
    
    $output = '<table border="1" cellpadding="5" cellspacing="0">';
    $output .= '<tr><th>Item Name</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>';
    
    foreach ($_SESSION['cart'] as $item_id => $item) {
        $total = $item['price'] * $item['quantity'];
        $output .= '<tr>';
        $output .= '<td>' . $item['name'] . '</td>';
        $output .= '<td>$' . number_format($item['price'], 2) . '</td>';
        $output .= '<td><input type="number" min="1" value="' . $item['quantity'] . '" onChange="updateQuantity(' . $item_id . ', this.value)"></td>';
        $output .= '<td>$' . number_format($total, 2) . '</td>';
        $output .= '<td><button onclick="removeFromCart(' . $item_id . ')">Remove</button></td>';
        $output .= '</tr>';
    }
    
    $grand_total = calculateTotal();
    $output .= '<tr><td colspan="4" align="right"><strong>Grand Total:</strong></td><td>$' . number_format($grand_total, 2) . '</td></tr>';
    $output .= '</table>';
    
    return $output;
}

// Calculate cart total
function calculateTotal() {
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += ($item['price'] * $item['quantity']);
    }
    return $total;
}
?>


<?php
session_start();
include 'cart.php';
?>

<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
</head>
<body>
    <div class="cart-container">
        <?php
            if (empty($_SESSION['cart'])) {
                echo "<p>Your cart is empty!</p>";
                exit;
            }
            
            echo "<h2>Review Your Order</h2>";
            echo displayCart();
            
            // Calculate totals
            $grand_total = calculateTotal();
            echo "<p><strong>Grand Total:</strong> $" . number_format($grand_total, 2) . "</p>";
        ?>

        <!-- Payment form -->
        <form action="process_payment.php" method="POST">
            <h3>Payment Information</h3>
            <div style="margin-bottom: 10px;">
                <label for="name">Name:</label><br>
                <input type="text" id="name" name="name" required>
            </div>
            <div style="margin-bottom: 10px;">
                <label for="email">Email:</label><br>
                <input type="email" id="email" name="email" required>
            </div>
            <div style="margin-bottom: 10px;">
                <label for="card_number">Card Number:</label><br>
                <input type="text" id="card_number" name="card_number" pattern="[0-9]{16}" required>
            </div>
            <button type="submit">Place Order</button>
        </form>
    </div>
</body>
</html>


<?php
// Include configuration file
include('config.php');

// Start session
session_start();

// Function to add product to cart
function addToCart($productId) {
    $product = getProductById($productId);
    
    if ($product) {
        if (!isset($_SESSION['cart'])) {
            $_SESSION['cart'] = array();
        }
        
        if (!isset($_SESSION['cart'][$productId])) {
            $_SESSION['cart'][$productId] = array(
                'id' => $product['id'],
                'name' => $product['name'],
                'price' => $product['price'],
                'quantity' => 1,
                'description' => $product['description']
            );
        } else {
            $_SESSION['cart'][$productId]['quantity']++;
        }
    }
}

// Function to get product by ID
function getProductById($productId) {
    global $conn;
    
    try {
        $stmt = $conn->prepare("SELECT * FROM products WHERE id = ?");
        $stmt->execute([$productId]);
        
        return $stmt->fetch(PDO::FETCH_ASSOC);
    } catch (PDOException $e) {
        echo "Error: " . $e->getMessage();
        return false;
    }
}

// Function to update cart
function updateCart($productId, $quantity) {
    if ($quantity > 0 && isset($_SESSION['cart'][$productId])) {
        $_SESSION['cart'][$productId]['quantity'] = $quantity;
    }
}

// Function to delete product from cart
function deleteProductFromCart($productId) {
    if (isset($_SESSION['cart'][$productId])) {
        unset($_SESSION['cart'][$productId]);
    }
}

// Function to calculate total price
function calculateTotal() {
    $total = 0;
    
    foreach ($_SESSION['cart'] as $item) {
        $total += ($item['price'] * $item['quantity']);
    }
    
    return $total;
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Shopping Cart</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 20px;
        }
        
        .cart-container {
            max-width: 1200px;
            margin: 0 auto;
        }
        
        table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
        }
        
        th, td {
            padding: 15px;
            text-align: left;
            border-bottom: 1px solid #ddd;
        }
        
        th {
            background-color: #f8f9fa;
        }
        
        .cart-actions {
            margin-top: 20px;
        }
    </style>
</head>
<body>
    <div class="cart-container">
        <?php
        if (!empty($_SESSION['cart'])) {
            echo "<h1>Your Cart</h1>";
            echo "<table>";
            echo "<tr><th>Product Name</th><th>Description</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>";
            
            foreach ($_SESSION['cart'] as $productId => $item) {
                $totalItemPrice = $item['price'] * $item['quantity'];
                
                echo "<tr>";
                echo "<td>" . $item['name'] . "</td>";
                echo "<td>" . $item['description'] . "</td>";
                echo "<td>₹" . number_format($item['price'], 2) . "</td>";
                echo "<td><input type='number' min='1' value='" . $item['quantity'] . "' onchange=\"updateQuantity('$productId', this.value)\"></td>";
                echo "<td>₹" . number_format($totalItemPrice, 2) . "</td>";
                echo "<td><a href='cart.php?action=delete&id=$productId'>Delete</a></td>";
                echo "</tr>";
            }
            
            $total = calculateTotal();
            echo "<tr><td colspan='5' style='text-align: right; font-weight: bold;'>Total:</td><td>₹" . number_format($total, 2) . "</td></tr>";
            echo "</table>";
            
            // Add your checkout button or other functionality here
        } else {
            echo "<p>Your cart is empty.</p>";
        }
        
        if (isset($_GET['action'])) {
            switch ($_GET['action']) {
                case 'add':
                    addToCart($_POST['product_id']);
                    header("Location: " . $_SERVER['HTTP_REFERER']);
                    break;
                
                case 'update':
                    updateCart($_POST['product_id'], $_POST['quantity']);
                    header("Location: " . $_SERVER['HTTP_REFERER']);
                    break;
                
                case 'delete':
                    deleteProductFromCart($_GET['id']);
                    header("Location: " . $_SERVER['HTTP_REFERER']);
                    break;
            }
        }
        ?>
    </div>

    <script>
        function updateQuantity(productId, quantity) {
            fetch('cart.php?action=update', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded',
                },
                body: 'product_id=' + productId + '&quantity=' + quantity
            });
            
            location.reload();
        }
    </script>
</body>
</html>


<?php
include('config.php');
session_start();

// Get all products from database
try {
    $stmt = $conn->query("SELECT * FROM products");
    $products = $stmt->fetchAll(PDO::FETCH_ASSOC);
} catch (PDOException $e) {
    echo "Error: " . $e->getMessage();
}

?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Product List</title>
    <style>
        /* Add your CSS styling here */
    </style>
</head>
<body>
    <div class="product-container">
        <?php if (!empty($products)) { ?>
            <?php foreach ($products as $product) { ?>
                <div class="product-item">
                    <h3><?php echo $product['name']; ?></h3>
                    <p><?php echo $product['description']; ?></p>
                    <p>Price: ₹<?php echo number_format($product['price'], 2); ?></p>
                    <form action="cart.php?action=add" method="post">
                        <input type="hidden" name="product_id" value="<?php echo $product['id']; ?>">
                        <button type="submit">Add to Cart</button>
                    </form>
                </div>
            <?php } ?>
        <?php } else { ?>
            <p>No products available.</p>
        <?php } ?>
    </div>
</body>
</html>


<?php
session_start();

// Initialize cart if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add item to cart
if (isset($_POST['add_to_cart'])) {
    $productId = $_POST['product_id'];
    $productName = $_POST['product_name'];
    
    // Check if product is already in cart
    if (array_key_exists($productId, $_SESSION['cart'])) {
        $_SESSION['cart'][$productId]['quantity']++;
    } else {
        $_SESSION['cart'][$productId] = array(
            'name' => $productName,
            'price' => 29.99, // You can retrieve this from your database
            'quantity' => 1
        );
    }
}

// Update cart quantities
if (isset($_POST['update_cart'])) {
    foreach ($_SESSION['cart'] as $key => $value) {
        if (isset($_POST[$key . '_quantity'])) {
            $_SESSION['cart'][$key]['quantity'] = $_POST[$key . '_quantity'];
        }
    }
}

// Remove item from cart
if (isset($_GET['remove'])) {
    $productId = $_GET['remove'];
    unset($_SESSION['cart'][$productId]);
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
    <!-- Include CSS files -->
    <link rel="stylesheet" type="text/css" href="style.css">
</head>
<body>
    <?php include('header.php'); ?>

    <div class="container">
        <?php if (!empty($_SESSION['cart'])): ?>
            <h2>Your Cart</h2>
            <table>
                <thead>
                    <tr>
                        <th>Product Name</th>
                        <th>Price</th>
                        <th>Quantity</th>
                        <th>Total</th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tbody>
                    <?php foreach ($_SESSION['cart'] as $key => $item): ?>
                        <tr>
                            <td><?php echo $item['name']; ?></td>
                            <td>$<?php echo number_format($item['price'], 2); ?></td>
                            <td>
                                <form method="post" action="<?php echo $_SERVER['PHP_SELF']; ?>">
                                    <input type="number" name="<?php echo $key; ?>_quantity" value="<?php echo $item['quantity']; ?>" min="1">
                                    <button type="submit" name="update_cart">Update</button>
                                </form>
                            </td>
                            <td>$<?php echo number_format($item['price'] * $item['quantity'], 2); ?></td>
                            <td><a href="<?php echo $_SERVER['PHP_SELF']; ?>?remove=<?php echo $key; ?>">Remove</a></td>
                        </tr>
                    <?php endforeach; ?>
                </tbody>
            </table>

            <?php
                // Calculate total price
                $total = 0;
                foreach ($_SESSION['cart'] as $item) {
                    $total += $item['price'] * $item['quantity'];
                }
            ?>

            <h3>Total: $<?php echo number_format($total, 2); ?></h3>
            
            <!-- Checkout button -->
            <form method="post" action="checkout.php">
                <button type="submit">Checkout</button>
            </form>

        <?php else: ?>
            <p>Your cart is empty. Please add some items to your cart.</p>
        <?php endif; ?>

    </div>

    <?php include('footer.php'); ?>
</body>
</html>


<!-- header.php -->
<nav>
    <a href="index.php">Home</a> |
    <a href="products.php">Products</a> |
    <a href="cart.php">Cart</a>
</nav>

<!-- footer.php -->
<footer>
    <p>&copy; 2023 Your Store Name</p>
</footer>


<?php
session_start();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Products</title>
    <link rel="stylesheet" type="text/css" href="style.css">
</head>
<body>
    <?php include('header.php'); ?>

    <div class="container">
        <h2>Our Products</h2>
        
        <!-- Add more products as needed -->
        <form method="post" action="cart.php">
            <input type="hidden" name="product_id" value="1">
            <input type="hidden" name="product_name" value="Product 1">
            <button type="submit" name="add_to_cart">Add to Cart</button>
        </form>

        <form method="post" action="cart.php">
            <input type="hidden" name="product_id" value="2">
            <input type="hidden" name="product_name" value="Product 2">
            <button type="submit" name="add_to_cart">Add to Cart</button>
        </form>

        <form method="post" action="cart.php">
            <input type="hidden" name="product_id" value="3">
            <input type="hidden" name="product_name" value="Product 3">
            <button type="submit" name="add_to_cart">Add to Cart</button>
        </form>
    </div>

    <?php include('footer.php'); ?>
</body>
</html>


<?php
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "cart_db";

// Create connection
$conn = mysqli_connect($servername, $username, $password, $dbname);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}
?>


<?php
include 'config.php';
session_start();

$sql = "SELECT * FROM products";
$result = mysqli_query($conn, $sql);

if (mysqli_num_rows($result) > 0) {
    while ($row = mysqli_fetch_assoc($result)) {
        echo "<div class='product'>";
        echo "<h3>" . $row["name"] . "</h3>";
        echo "<p>Price: $" . $row["price"] . "</p>";
        echo "<img src='" . $row["image"] . "' alt='" . $row["name"] . "'>";
        echo "<a href='add_to_cart.php?id=" . $row["id"] . "' class='add-to-cart'>Add to Cart</a>";
        echo "</div>";
    }
} else {
    echo "No products available.";
}
?>


<?php
include 'config.php';
session_start();

if (isset($_GET['id'])) {
    $product_id = mysqli_real_escape_string($conn, $_GET['id']);
    
    $sql = "SELECT * FROM products WHERE id = $product_id";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) > 0) {
        $product = mysqli_fetch_assoc($result);
        
        if (!isset($_SESSION['cart'])) {
            $_SESSION['cart'] = array();
        }
        
        if (!array_key_exists($product_id, $_SESSION['cart'])) {
            $_SESSION['cart'][$product_id] = array(
                'name' => $product['name'],
                'price' => $product['price'],
                'quantity' => 1
            );
        } else {
            $_SESSION['cart'][$product_id]['quantity']++;
        }
        
        echo "Product added to cart!";
    }
}
?>


<?php
session_start();

echo "<h2>Your Cart</h2>";
echo "<table border='1'>";
echo "<tr><th>Item</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>";

if (isset($_SESSION['cart'])) {
    $total = 0;
    
    foreach ($_SESSION['cart'] as $key => $value) {
        echo "<tr>";
        echo "<td>" . $value['name'] . "</td>";
        echo "<td>$" . number_format($value['price'], 2) . "</td>";
        echo "<td><form action='update_quantity.php' method='post'>";
        echo "<input type='hidden' name='product_id' value='$key'>";
        echo "<input type='number' name='quantity' min='1' value='" . $value['quantity'] . "'>";
        echo "<button type='submit'>Update</button>";
        echo "</form></td>";
        echo "<td>$" . number_format($value['price'] * $value['quantity'], 2) . "</td>";
        echo "<td><a href='remove_item.php?id=$key'>Remove</a></td>";
        echo "</tr>";
        
        $total += $value['price'] * $value['quantity'];
    }
    
    echo "<tr><td colspan='4'><strong>Total:</strong></td><td><strong>$" . number_format($total, 2) . "</strong></td></tr>";
} else {
    echo "<tr><td colspan='5'>Your cart is empty.</td></tr>";
}
echo "</table>";
?>


<?php
session_start();

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $product_id = mysqli_real_escape_string($conn, $_POST['product_id']);
    $quantity = mysqli_real_escape_string($conn, $_POST['quantity']);
    
    if ($quantity < 1) {
        $quantity = 1;
    }
    
    if (isset($_SESSION['cart'][$product_id])) {
        $_SESSION['cart'][$product_id]['quantity'] = $quantity;
    }
}
?>


<?php
session_start();

if (isset($_GET['id'])) {
    $product_id = mysqli_real_escape_string($conn, $_GET['id']);
    
    if (isset($_SESSION['cart'][$product_id])) {
        unset($_SESSION['cart'][$product_id]);
    }
}
?>


<?php
session_start();

// Database configuration
$host = 'localhost';
$user = 'root';
$password = '';
$dbname = 'shopping_cart';

// Connect to database
$conn = mysqli_connect($host, $user, $password, $dbname);

// Check connection
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to add item to cart
function addToCart($item_id) {
    global $conn;
    
    // Get product details from database
    $sql = "SELECT * FROM products WHERE id = ?";
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, "i", $item_id);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);
    
    if ($row = mysqli_fetch_assoc($result)) {
        $product = array(
            'id' => $row['id'],
            'name' => $row['name'],
            'price' => $row['price'],
            'quantity' => 1
        );
        
        // Add to cart in session
        if (isset($_SESSION['cart'])) {
            $_SESSION['cart'][$item_id] = $product;
        } else {
            $_SESSION['cart'] = array($item_id => $product);
        }
    }
}

// Function to update quantity of an item in cart
function updateQuantity($item_id, $quantity) {
    if (isset($_SESSION['cart'][$item_id])) {
        if ($quantity < 1) {
            // Show error message
            echo "<script>alert('Quantity cannot be less than 1!');</script>";
            return;
        }
        
        $_SESSION['cart'][$item_id]['quantity'] = $quantity;
    }
}

// Function to delete item from cart
function deleteItem($item_id) {
    if (isset($_SESSION['cart'][$item_id])) {
        unset($_SESSION['cart'][$item_id]);
    }
}

// Function to display cart items
function displayCart() {
    if (!empty($_SESSION['cart'])) {
        $total = 0;
        echo "<table class='cart-table'>";
        echo "<tr><th>Item</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>";
        
        foreach ($_SESSION['cart'] as $id => $item) {
            $subtotal = $item['price'] * $item['quantity'];
            $total += $subtotal;
            
            echo "<tr>";
            echo "<td>{$item['name']}</td>";
            echo "<td>$$item[price]</td>";
            echo "<td><input type='number' value='{$item['quantity']}' min='1' onchange='updateQuantity($id, this.value)'></td>";
            echo "<td>$$subtotal</td>";
            echo "<td><button onclick='deleteItem($id)'>Delete</button></td>";
            echo "</tr>";
        }
        
        echo "<tr><td colspan='4'><strong>Grand Total:</strong></td><td>$$total</td></tr>";
        echo "</table>";
    } else {
        echo "Your cart is empty!";
    }
}
?>


<?php
// Initialize session
session_start();

// Check if session cart exists, create if not
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add item to cart
if (isset($_POST['add_to_cart'])) {
    $productId = $_POST['product_id'];
    $productName = $_POST['product_name'];
    $productPrice = $_POST['product_price'];
    
    // Create an item array for the product
    $item = array(
        'id' => $productId,
        'name' => $productName,
        'price' => $productPrice,
        'quantity' => 1
    );
    
    // Add the item to the cart
    $_SESSION['cart'][$productId] = $item;
}

// Update cart quantities
if (isset($_POST['update_cart'])) {
    foreach ($_POST as $key => $value) {
        if (strpos($key, 'quantity_') !== false) {
            $productId = substr($key, 9);
            if ($value > 0) {
                $_SESSION['cart'][$productId]['quantity'] = $value;
            }
        }
    }
}

// Remove item from cart
if (isset($_POST['remove_item'])) {
    $productId = $_POST['product_id'];
    unset($_SESSION['cart'][$productId]);
}

// Function to display cart contents
function displayCart() {
    $totalPrice = 0;
    if (!empty($_SESSION['cart'])) {
        echo "<h3>Shopping Cart</h3>";
        echo "<table border='1'>";
        echo "<tr><th>Product</th><th>Quantity</th><th>Price</th><th>Action</th></tr>";
        
        foreach ($_SESSION['cart'] as $item) {
            $totalPrice += $item['price'] * $item['quantity'];
            echo "<tr>";
            echo "<td>" . $item['name'] . "</td>";
            echo "<td><form method='post' action=''>
                    <input type='hidden' name='product_id' value='" . $item['id'] . "'>
                    <input type='number' name='quantity_" . $item['id'] . "' value='" . $item['quantity'] . "' min='1'>
                  </form></td>";
            echo "<td>$$item[price]</td>";
            echo "<td><form method='post' action=''>
                    <input type='hidden' name='product_id' value='" . $item['id'] . "'>";
                    <button type='submit' name='remove_item'>Remove</button>
                  </form></td>";
            echo "</tr>";
        }
        
        echo "<tr><td colspan='3'><strong>Total: $$totalPrice</strong></td>";
        echo "<td><form method='post' action='checkout.php'>";
              <button type='submit' name='checkout'>Checkout</button>
            </form></td></tr>";
        
        echo "</table>";
    } else {
        echo "Your cart is empty!";
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <?php displayCart(); ?>

    <!-- Add new products here -->
    <h3>Add Items to Cart</h3>
    <div class="products">
        <form method="post" action="">
            <input type="hidden" name="product_id" value="1">
            <input type="hidden" name="product_name" value="Product 1">
            <input type="hidden" name="product_price" value="29.99">
            <button type="submit" name="add_to_cart">Add to Cart</button>
        </form>

        <form method="post" action="">
            <input type="hidden" name="product_id" value="2">
            <input type="hidden" name="product_name" value="Product 2">
            <input type="hidden" name="product_price" value="49.99">
            <button type="submit" name="add_to_cart">Add to Cart</button>
        </form>

        <!-- Add more products as needed -->
    </div>
</body>
</html>


<?php
include 'db_connection.php';

// Fetch all products from database
$query = "SELECT * FROM products";
$result = $conn->query($query);

if ($result->num_rows > 0) {
    while ($row = $result->fetch_assoc()) {
        echo "<div class='product'>";
        echo "<h3>" . $row['name'] . "</h3>";
        echo "<p>Price: $" . number_format($row['price'], 2) . "</p>";
        echo "<p>Description: " . $row['description'] . "</p>";
        echo "<form action='add_to_cart.php' method='post'>";
        echo "<input type='hidden' name='product_id' value='" . $row['id'] . "'>";
        echo "<button type='submit'>Add to Cart</button>";
        echo "</form>";
        echo "</div>";
    }
} else {
    echo "No products available.";
}
$conn->close();
?>


<?php
include 'db_connection.php';

if (isset($_POST['product_id'])) {
    $productId = $_POST['product_id'];
    
    if (!isset($_COOKIE['cart'])) {
        // Initialize cookie with new product
        setcookie('cart', $productId . "|1", time() + 3600);
    } else {
        // Update existing cookie
        $cartContent = explode('&', $_COOKIE['cart']);
        $updatedCart = array();
        $found = false;
        
        foreach ($cartContent as $item) {
            list($id, $quantity) = explode('|', $item);
            if ($id == $productId) {
                $quantity++;
                $found = true;
            }
            $updatedCart[] = $id . '|' . $quantity;
        }
        
        if (!$found) {
            array_push($updatedCart, $productId . '|1');
        }
        
        setcookie('cart', implode('&', $updatedCart), time() + 3600);
    }
    
    echo "Product added to cart!";
}
?>


<?php
include 'db_connection.php';

if (isset($_COOKIE['cart'])) {
    $cartContent = explode('&', $_COOKIE['cart']);
    $totalPrice = 0;
    
    foreach ($cartContent as $item) {
        list($productId, $quantity) = explode('|', $item);
        
        $query = "SELECT * FROM products WHERE id=" . $productId;
        $result = $conn->query($query);
        if ($row = $result->fetch_assoc()) {
            echo "<div class='cart-item'>";
            echo "<h3>" . $row['name'] . "</h3>";
            echo "<p>Quantity: " . $quantity . "</p>";
            $priceTotal = $row['price'] * $quantity;
            $totalPrice += $priceTotal;
            echo "<p>Subtotal: $" . number_format($priceTotal, 2) . "</p>";
            echo "<form action='remove_from_cart.php' method='post'>";
            echo "<input type='hidden' name='product_id' value='" . $productId . "'>";
            echo "<button type='submit'>Remove</button>";
            echo "</form>";
            echo "</div>";
        }
    }
    echo "<h3>Total Price: $" . number_format($totalPrice, 2) . "</h3>";
} else {
    echo "Your cart is empty.";
}
$conn->close();
?>


<?php
include 'db_connection.php';

if (isset($_POST['product_id'])) {
    $productId = $_POST['product_id'];
    
    if (isset($_COOKIE['cart'])) {
        $cartContent = explode('&', $_COOKIE['cart']);
        
        foreach ($cartContent as $key => $item) {
            list($id, $quantity) = explode('|', $item);
            if ($id == $productId) {
                unset($cartContent[$key]);
                break;
            }
        }
        
        if (empty($cartContent)) {
            setcookie('cart', '', time() - 3600); // Delete cookie
        } else {
            setcookie('cart', implode('&', $cartContent), time() + 3600);
        }
    }
    
    echo "Product removed from cart!";
}
?>


<?php
include 'db_connection.php';

if (isset($_COOKIE['cart'])) {
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        $userName = $_POST['user_name'];
        $email = $_POST['email'];
        
        // Insert into orders table
        $orderQuery = "INSERT INTO orders (user_name, email) VALUES (?, ?)";
        $stmt = $conn->prepare($orderQuery);
        $stmt->bind_param("ss", $userName, $email);
        $stmt->execute();
        $orderId = $stmt->insert_id;
        
        // Process cart items
        $cartContent = explode('&', $_COOKIE['cart']);
        foreach ($cartContent as $item) {
            list($productId, $quantity) = explode('|', $item);
            
            $orderDetailQuery = "INSERT INTO order_details (order_id, product_id, quantity)
                                VALUES (?, ?, ?)";
            $stmt = $conn->prepare($orderDetailQuery);
            $stmt->bind_param("iii", $orderId, $productId, $quantity);
            $stmt->execute();
        }
        
        // Clear cart
        setcookie('cart', '', time() - 3600);
        echo "Order placed successfully!";
    } else {
        // Display checkout form
        if (isset($_COOKIE['cart'])) {
            echo "<form action='checkout.php' method='post'>";
            echo "<input type='text' name='user_name' placeholder='Your Name' required><br>";
            echo "<input type='email' name='email' placeholder='Email Address' required><br>";
            echo "<button type='submit'>Place Order</button>";
            echo "</form>";
        } else {
            echo "Your cart is empty. Nothing to checkout!";
        }
    }
} else {
    echo "Your cart is empty.";
}
$conn->close();
?>


<?php
session_start();

// Database connection
$host = 'localhost';
$username = 'root';
$password = '';
$database = 'shopping_cart';

$conn = mysqli_connect($host, $username, $password, $database);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Function to add item to cart
function addToCart($productId) {
    global $conn;
    
    if (isset($_SESSION['cart'])) {
        $cart = $_SESSION['cart'];
    } else {
        $cart = array();
    }
    
    // Check if product exists in database
    $sql = "SELECT * FROM products WHERE id = $productId";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) > 0) {
        $product = mysqli_fetch_assoc($result);
        
        // Check if item is already in cart
        if (array_key_exists($productId, $cart)) {
            // Update quantity
            $cart[$productId]['quantity']++;
        } else {
            // Add new item
            $cart[$productId] = array(
                'id' => $product['id'],
                'name' => $product['name'],
                'price' => $product['price'],
                'quantity' => 1,
                'description' => $product['description'],
                'stock' => $product['stock']
            );
        }
        
        $_SESSION['cart'] = $cart;
    } else {
        return false; // Product not found
    }
}

// Function to update cart item quantity
function updateCartItem($productId, $quantity) {
    global $conn;
    
    if (isset($_SESSION['cart'])) {
        $cart = $_SESSION['cart'];
        
        if (array_key_exists($productId, $cart)) {
            // Update quantity only if new quantity is greater than 0 and less than or equal to stock
            if ($quantity > 0 && $quantity <= $cart[$productId]['stock']) {
                $cart[$productId]['quantity'] = $quantity;
                $_SESSION['cart'] = $cart;
            }
        }
    }
}

// Function to remove item from cart
function removeFromCart($productId) {
    if (isset($_SESSION['cart'])) {
        $cart = $_SESSION['cart'];
        
        if (array_key_exists($productId, $cart)) {
            unset($cart[$productId]);
            $_SESSION['cart'] = $cart;
        }
    }
}

// Function to get cart contents
function getCartContents() {
    if (isset($_SESSION['cart'])) {
        return $_SESSION['cart'];
    } else {
        return array();
    }
}

// Function to calculate total price
function calculateTotal() {
    $total = 0;
    
    foreach ($_SESSION['cart'] as $item) {
        $total += ($item['price'] * $item['quantity']);
    }
    
    // Add tax (assuming 10% tax rate)
    $tax = $total * 0.10;
    return array('subtotal' => $total, 'tax' => $tax, 'grand_total' => $total + $tax);
}

// Function to display cart contents
function displayCart() {
    if (!isset($_SESSION['cart']) || empty($_SESSION['cart'])) {
        echo "<p>Your cart is empty.</p>";
        return;
    }
    
    $cart = $_SESSION['cart'];
    ?>
    <table>
        <thead>
            <tr>
                <th>Product</th>
                <th>Description</th>
                <th>Price</th>
                <th>Quantity</th>
                <th>Total</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            <?php
            foreach ($cart as $item) {
                ?>
                <tr>
                    <td><?php echo $item['name']; ?></td>
                    <td><?php echo $item['description']; ?></td>
                    <td>$<?php echo number_format($item['price'], 2); ?></td>
                    <td><input type="number" value="<?php echo $item['quantity']; ?>" min="1" max="<?php echo $item['stock']; ?>"></td>
                    <td>$<?php echo number_format(($item['price'] * $item['quantity']), 2); ?></td>
                    <td><button onclick="removeFromCart(<?php echo $item['id']; ?>)">Remove</button></td>
                </tr>
                <?php
            }
            ?>
        </tbody>
    </table>

    <?php 
    // Display order summary
    $total = calculateTotal();
    ?>
    <div class="order-summary">
        <h3>Order Summary</h3>
        <p>Subtotal: $<?php echo number_format($total['subtotal'], 2); ?></p>
        <p>Tax: $<?php echo number_format($total['tax'], 2); ?></p>
        <p>Grand Total: $<?php echo number_format($total['grand_total'], 2); ?></p>
    </div>

    <?php
}

// Function to process order
function processOrder() {
    global $conn;

    // Check if cart is not empty
    if (!empty($_SESSION['cart'])) {
        // Insert order into database
        $orderSql = "INSERT INTO orders (user_id, product_id, quantity, order_date) VALUES ";
        
        foreach ($_SESSION['cart'] as $item) {
            $userId = isset($_POST['user_id']) ? $_POST['user_id'] : 1; // Assuming user is logged in
            $productId = $item['id'];
            $quantity = $item['quantity'];
            
            // Add to order SQL statement
            $orderSql .= "('$userId', '$productId', '$quantity', NOW()), ";
        }
        
        // Remove last comma and space
        $orderSql = rtrim($orderSql, ', ');
        
        if (mysqli_query($conn, $orderSql)) {
            // Clear cart
            unset($_SESSION['cart']);
            
            echo "<p>Order processed successfully!</p>";
        } else {
            echo "Error: " . mysqli_error($conn);
        }
    } else {
        echo "<p>Your cart is empty.</p>";
    }
}
?>


<?php
include('cart.php');

// Sample product data
$products = array(
    1 => array(
        'id' => 1,
        'name' => 'Laptop',
        'price' => 999.99,
        'description' => 'High-performance laptop with latest features.',
        'stock' => 5
    ),
    2 => array(
        'id' => 2,
        'name' => 'Smartphone',
        'price' => 699.99,
        'description' => 'Latest smartphone with advanced camera system.',
        'stock' => 10
    )
);
?>
<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
    <style>
        /* Add your CSS styles here */
    </style>
</head>
<body>
    <?php if (isset($_GET['action'])) { ?>
        <?php switch ($_GET['action']) { 
            case 'add':
                addToCart($_GET['id']);
                break;
                
            case 'remove':
                removeFromCart($_GET['id']);
                break;
                
            case 'update':
                updateCartItem($_GET['id'], $_GET['quantity']);
                break;
        } ?>
    <?php } ?>

    <h1>Products</h1>
    <div class="products">
        <?php foreach ($products as $product) { ?>
            <div class="product">
                <h2><?php echo $product['name']; ?></h2>
                <p><?php echo $product['description']; ?></p>
                <p>Price: $<?php echo number_format($product['price'], 2); ?></p>
                <?php if ($product['stock'] > 0) { ?>
                    <form action="index.php" method="get">
                        <input type="hidden" name="action" value="add">
                        <input type="hidden" name="id" value="<?php echo $product['id']; ?>">
                        <button type="submit">Add to Cart</button>
                    </form>
                <?php } else { ?>
                    <p>Out of stock</p>
                <?php } ?>
            </div>
        <?php } ?>
    </div>

    <h2>Your Cart</h2>
    <?php displayCart(); ?>

    <?php if (!empty($_SESSION['cart'])) { ?>
        <form action="index.php" method="post">
            <input type="hidden" name="action" value="order">
            <p>Enter your details:</p>
            <input type="text" name="user_id" placeholder="User ID" required>
            <input type="email" name="email" placeholder="Email" required>
            <button type="submit">Place Order</button>
        </form>
    <?php } ?>

    <?php if (isset($_POST['action']) && $_POST['action'] == 'order') {
        processOrder();
    } ?>
</body>
</html>


<?php
// config.php - Database configuration file
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "cart_db";

$conn = new mysqli($servername, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>

<?php
// add_to_cart.php - Add items to cart functionality

session_start();

$product_id = $_GET['id'];
$quantity = 1;

if (isset($_SESSION['cart'])) {
    $cart = $_SESSION['cart'];
    
    if (!array_key_exists($product_id, $cart)) {
        // Product not in cart, add it
        $cart[$product_id] = array(
            'id' => $product_id,
            'quantity' => $quantity
        );
    } else {
        // Product already exists, increment quantity
        $cart[$product_id]['quantity']++;
    }
} else {
    // Cart doesn't exist, create new cart
    $cart = array();
    $cart[$product_id] = array(
        'id' => $product_id,
        'quantity' => $quantity
    );
}

$_SESSION['cart'] = $cart;

echo "Item added to cart!";
?>

</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart - View Cart</title>
</head>
<body>

<?php
// view_cart.php - View items in cart functionality

session_start();

$cart = $_SESSION['cart'];
$total_price = 0;

if (!empty($cart)) {
    foreach ($cart as $item) {
        // Query database for product details
        $product_id = $item['id'];
        $quantity = $item['quantity'];
        
        $sql = "SELECT * FROM products WHERE id = ?";
        $stmt = $conn->prepare($sql);
        $stmt->bind_param("i", $product_id);
        $stmt->execute();
        $result = $stmt->get_result();
        
        while ($row = $result->fetch_assoc()) {
            $price = $row['price'];
            $total_price += $price * $quantity;
            
            echo "<div>";
            echo "Product: " . $row['name'] . "<br />";
            echo "Price: $" . number_format($price, 2) . "<br />";
            echo "Quantity: " . $quantity . "<br />";
            echo "</div>";
        }
    }
    
    echo "<h3>Total Price: $" . number_format($total_price, 2) . "</h3>";
} else {
    echo "Your cart is empty!";
}

?>

</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart - Checkout</title>
</head>
<body>

<?php
// checkout.php - Checkout functionality

session_start();

if (isset($_POST['checkout'])) {
    // Process order
    
    $cart = $_SESSION['cart'];
    
    if (!empty($cart)) {
        foreach ($cart as $item) {
            $product_id = $item['id'];
            $quantity = $item['quantity'];
            
            // Insert into orders table
            $sql = "INSERT INTO orders (user_id, product_id, quantity) VALUES (?, ?, ?)";
            $stmt = $conn->prepare($sql);
            $stmt->bind_param("iii", $_SESSION['user_id'], $product_id, $quantity);
            $stmt->execute();
        }
        
        // Clear cart
        unset($_SESSION['cart']);
        
        echo "Thank you for your purchase!";
    } else {
        echo "Your cart is empty!";
    }
}

?>

</body>
</html>


<?php
session_start();

// Database connection
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'shopping_cart';

$conn = mysqli_connect($host, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Get products from database
$sql = "SELECT * FROM products";
$result = mysqli_query($conn, $sql);
$products = mysqli_fetch_all($result, MYSQLI_ASSOC);

// Add product to cart
if (isset($_POST['add_to_cart'])) {
    $productId = $_POST['product_id'];
    
    if (!isset($_SESSION['cart'][$productId])) {
        // Get product details from database
        $sql = "SELECT * FROM products WHERE id = $productId";
        $result = mysqli_query($conn, $sql);
        $product = mysqli_fetch_assoc($result);
        
        $_SESSION['cart'][$productId] = array(
            'name' => $product['name'],
            'price' => $product['price'],
            'quantity' => 1
        );
    } else {
        $_SESSION['cart'][$productId]['quantity']++;
    }
}

// Update cart quantity
if (isset($_POST['update_cart'])) {
    foreach ($_POST as $key => $value) {
        if ($key != 'update_cart') {
            $product_id = $key;
            $quantity = $value;
            
            if (!empty($quantity) && is_numeric($quantity)) {
                $_SESSION['cart'][$product_id]['quantity'] = $quantity;
            }
        }
    }
}

// Delete product from cart
if (isset($_POST['delete_product'])) {
    $productId = $_POST['product_id'];
    
    if (isset($_SESSION['cart'][$productId])) {
        unset($_SESSION['cart'][$productId]);
        
        // Destroy session if cart is empty
        if (empty($_SESSION['cart'])) {
            session_unset();
            session_destroy();
        }
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
    <style>
        body { font-family: Arial, sans-serif; }
        .product-list { margin-bottom: 20px; }
        .cart-item { border: 1px solid #ddd; padding: 10px; margin: 5px 0; }
        .total-price { font-weight: bold; }
    </style>
</head>
<body>
    <h1>Products</h1>
    <div class="product-list">
        <?php foreach ($products as $product): ?>
            <div style="margin-bottom: 10px;">
                <h3><?php echo $product['name']; ?></h3>
                <p>Price: <?php echo $product['price']; ?> $</p>
                <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
                    <input type="hidden" name="product_id" value="<?php echo $product['id']; ?>">
                    <button type="submit" name="add_to_cart">Add to Cart</button>
                </form>
            </div>
        <?php endforeach; ?>
    </div>

    <h2>Your Cart</h2>
    <?php if (!empty($_SESSION['cart'])): ?>
        <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
            <?php foreach ($_SESSION['cart'] as $productId => $item): ?>
                <div class="cart-item">
                    <p><?php echo $item['name']; ?></p>
                    <p>Price: <?php echo $item['price']; ?> $</p>
                    <input type="number" name="<?php echo $productId; ?>" value="<?php echo $item['quantity']; ?>" min="1">
                    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post" style="display: inline;">
                        <input type="hidden" name="product_id" value="<?php echo $productId; ?>">
                        <button type="submit" name="delete_product">Delete</button>
                    </form>
                </div>
            <?php endforeach; ?>
            
            <div class="total-price">
                Total Price: <?php 
                    $total = 0;
                    foreach ($_SESSION['cart'] as $item) {
                        $total += ($item['price'] * $item['quantity']);
                    }
                    echo $total . ' $';
                ?>
            </div>
            
            <button type="submit" name="update_cart">Update Cart</button>
        </form>
    <?php else: ?>
        <p>Your cart is empty.</p>
    <?php endif; ?>

    <a href="<?php echo $_SERVER['PHP_SELF']; ?>">Refresh Page</a>
</body>
</html>

<?php
// Close database connection
mysqli_close($conn);
?>


<?php
// Start session
session_start();

// Initialize cart if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function addToCart($id, $name, $price) {
    global $item_id;
    $item_id = uniqid(); // Generate unique ID for each item
    
    $new_item = array(
        'id' => $item_id,
        'product_id' => $id,
        'name' => $name,
        'price' => $price,
        'quantity' => 1
    );
    
    $_SESSION['cart'][$item_id] = $new_item;
}

// Function to update cart item quantity
function updateCart($item_id, $quantity) {
    if (isset($_SESSION['cart'][$item_id])) {
        $_SESSION['cart'][$item_id]['quantity'] = $quantity;
    }
}

// Function to remove item from cart
function removeFromCart($item_id) {
    if (isset($_SESSION['cart'][$item_id])) {
        unset($_SESSION['cart'][$item_id]);
    }
}

// Function to calculate total price
function calculateTotal() {
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += ($item['price'] * $item['quantity']);
    }
    return $total;
}

// Display cart contents
echo "<h2>Shopping Cart</h2>";
if (empty($_SESSION['cart'])) {
    echo "Your cart is empty!";
} else {
    echo "<table border='1'>";
    echo "<tr><th>Item Name</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>";
    
    foreach ($_SESSION['cart'] as $item) {
        $subtotal = $item['price'] * $item['quantity'];
        echo "<tr>";
        echo "<td>" . $item['name'] . "</td>";
        echo "<td>$$item[price]</td>";
        echo "<td><input type='number' value='$item[quantity]' onchange='updateQuantity($item[id], this.value)'></td>";
        echo "<td>$$subtotal</td>";
        echo "<td><a href='remove.php?id=$item[id]'>Remove</a></td>";
        echo "</tr>";
    }
    
    $total = calculateTotal();
    echo "<tr><td colspan='4'><strong>Total:</strong></td><td>$$total</td></tr>";
    echo "</table>";
}

// Example items to add to cart
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <!-- Add some sample products -->
    <h2>Products</h2>
    <div class="products">
        <div class="product">
            <h3>Product 1 - $10.99</h3>
            <a href="?action=add&id=1&name=Product%201&price=10.99">Add to Cart</a>
        </div>
        
        <div class="product">
            <h3>Product 2 - $15.99</h3>
            <a href="?action=add&id=2&name=Product%202&price=15.99">Add to Cart</a>
        </div>
        
        <div class="product">
            <h3>Product 3 - $7.99</h3>
            <a href="?action=add&id=3&name=Product%203&price=7.99">Add to Cart</a>
        </div>
    </div>

    <!-- Handle actions -->
    <?php
    if (isset($_GET['action'])) {
        if ($_GET['action'] == 'add') {
            addToCart($_GET['id'], $_GET['name'], $_GET['price']);
        } elseif ($_GET['action'] == 'remove') {
            removeFromCart($_GET['id']);
        }
    }
    ?>

</body>
</html>



<?php
// Initialize session
session_start();

// Function to add item to cart
function addToCart($product_id, $product_name, $price) {
    global $cart;
    
    // Check if session exists
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }
    
    // Check if product is already in cart
    if (isset($_SESSION['cart'][$product_id])) {
        $_SESSION['cart'][$product_id]['quantity']++;
    } else {
        $_SESSION['cart'][$product_id] = array(
            'product_id' => $product_id,
            'product_name' => $product_name,
            'price' => $price,
            'quantity' => 1
        );
    }
    
    return true;
}

// Function to update cart item quantity
function updateCartItem($product_id, $new_quantity) {
    if (isset($_SESSION['cart'][$product_id])) {
        $_SESSION['cart'][$product_id]['quantity'] = $new_quantity;
        return true;
    }
    return false;
}

// Function to remove item from cart
function removeFromCart($product_id) {
    if (isset($_SESSION['cart'][$product_id])) {
        unset($_SESSION['cart'][$product_id]);
        return true;
    }
    return false;
}

// Function to display cart items
function displayCart() {
    $total_price = 0;
    
    if (!empty($_SESSION['cart'])) {
        echo "<table border='1'>";
        echo "<tr><th>Product Name</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>";
        
        foreach ($_SESSION['cart'] as $item) {
            $total = $item['price'] * $item['quantity'];
            $total_price += $total;
            
            echo "<tr>";
            echo "<td>" . $item['product_name'] . "</td>";
            echo "<td> $" . number_format($item['price'], 2, '.', '') . "</td>";
            echo "<td><input type='number' value='" . $item['quantity'] . "' onchange='updateQuantity(" . $item['product_id'] . ", this.value)'></td>";
            echo "<td> $" . number_format($total, 2, '.', '') . "</td>";
            echo "<td><button onclick='removeFromCart(" . $item['product_id'] . ")'>Remove</button></td>";
            echo "</tr>";
        }
        
        echo "</table>";
        echo "<h3>Total Price: $" . number_format($total_price, 2, '.', '') . "</h3>";
    } else {
        echo "Your cart is empty!";
    }
}

// Function to get items count
function getCartItemCount() {
    if (isset($_SESSION['cart'])) {
        return count($_SESSION['cart']);
    }
    return 0;
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
    <script>
        function updateQuantity(product_id, quantity) {
            if (quantity > 0) {
                // Make AJAX call to update quantity
                alert("Quantity updated!");
            } else {
                removeFromCart(product_id);
            }
        }

        function removeFromCart(product_id) {
            // Make AJAX call to remove item
            alert("Item removed from cart!");
        }
    </script>
</head>
<body>
    <h1>Shopping Cart</h1>
    
    <!-- Add items to cart -->
    <form action="<?php $_SERVER['PHP_SELF']; ?>" method="post">
        <input type="hidden" name="product_id" value="1">
        <input type="hidden" name="product_name" value="Product 1">
        <input type="hidden" name="price" value="29.99">
        <button type="submit">Add Product 1 to Cart</button>
    </form>

    <form action="<?php $_SERVER['PHP_SELF']; ?>" method="post">
        <input type="hidden" name="product_id" value="2">
        <input type="hidden" name="product_name" value="Product 2">
        <input type="hidden" name="price" value="49.99">
        <button type="submit">Add Product 2 to Cart</button>
    </form>

    <!-- Display cart -->
    <?php
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        $product_id = $_POST['product_id'];
        $product_name = $_POST['product_name'];
        $price = $_POST['price'];
        
        addToCart($product_id, $product_name, $price);
    }

    displayCart();
    ?>

</body>
</html>


<?php
session_start();

// Initialize products array (you can connect this to your database)
$products = [
    1 => ['name' => 'Product 1', 'price' => 20.00],
    2 => ['name' => 'Product 2', 'price' => 30.00],
    3 => ['name' => 'Product 3', 'price' => 40.00]
];

// Initialize cart if not set
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = [];
}

// Add product to cart
if (isset($_GET['action']) && $_GET['action'] == 'add') {
    $productId = intval($_GET['id']);
    
    if (isset($products[$productId])) {
        // Check if product is already in cart
        if (array_key_exists($productId, $_SESSION['cart'])) {
            $_SESSION['cart'][$productId]['quantity']++;
        } else {
            $_SESSION['cart'][$productId] = [
                'id' => $productId,
                'name' => $products[$productId]['name'],
                'price' => $products[$productId]['price'],
                'quantity' => 1
            ];
        }
    }
}

// Remove product from cart
if (isset($_GET['action']) && $_GET['action'] == 'remove') {
    $productId = intval($_GET['id']);
    
    if (isset($_SESSION['cart'][$productId])) {
        unset($_SESSION['cart'][$productId]);
        $_SESSION['cart'] = array_values($_SESSION['cart']); // Re-index the array
    }
}

// Update product quantity in cart
if (isset($_POST['action']) && $_POST['action'] == 'update') {
    foreach ($_SESSION['cart'] as $key => $item) {
        if (isset($_POST["quantity{$item['id']}"])) {
            $newQuantity = intval($_POST["quantity{$item['id']}"]);
            
            if ($newQuantity > 0) {
                $_SESSION['cart'][$key]['quantity'] = $newQuantity;
            }
        }
    }
}

// Calculate cart totals
$cartTotal = 0;
foreach ($_SESSION['cart'] as $item) {
    $cartTotal += ($item['price'] * $item['quantity']);
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Shopping Cart</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
        }
        
        .cart {
            width: 100%;
            border-collapse: collapse;
            margin: 20px 0;
        }

        .cart th, .cart td {
            padding: 12px;
            text-align: left;
            border-bottom: 1px solid #ddd;
        }
    </style>
</head>
<body>
    <h1>Shopping Cart</h1>

    <!-- Products List -->
    <h3>Add Items to Cart:</h3>
    <?php foreach ($products as $id => $product): ?>
        <div style="margin-bottom: 10px;">
            <strong><?php echo $product['name']; ?></strong> - $<?php echo number_format($product['price'], 2); ?>
            <a href="?action=add&id=<?php echo $id; ?>">Add to Cart</a>
        </div>
    <?php endforeach; ?>

    <!-- Cart Contents -->
    <?php if (!empty($_SESSION['cart'])): ?>
        <h3>Cart Items:</h3>
        <table class="cart">
            <tr>
                <th>Name</th>
                <th>Price</th>
                <th>Quantity</th>
                <th>Total</th>
                <th>Action</th>
            </tr>
            <?php foreach ($_SESSION['cart'] as $item): ?>
                <tr>
                    <td><?php echo $item['name']; ?></td>
                    <td>$<?php echo number_format($item['price'], 2); ?></td>
                    <td>
                        <form method="post">
                            <input type="hidden" name="action" value="update">
                            <input type="number" name="quantity<?php echo $item['id']; ?>" min="1" value="<?php echo $item['quantity']; ?>" style="width: 50px;">
                    </td>
                    <td>$<?php echo number_format($item['price'] * $item['quantity'], 2); ?></td>
                    <td>
                        <a href="?action=remove&id=<?php echo $item['id']; ?>">Remove</a>
                        <button type="submit">Update</button>
                        </form>
                    </td>
                </tr>
            <?php endforeach; ?>
            <tr>
                <td colspan="4">Total:</td>
                <td>$<?php echo number_format($cartTotal, 2); ?></td>
            </tr>
        </table>
    <?php else: ?>
        <p>Your cart is empty. Add some items to continue.</p>
    <?php endif; ?>
</body>
</html>


<?php
session_start();
?>


function addToCart($productId) {
    $cartItem = array(
        'product_id' => $productId,
        'quantity' => 1
    );

    // Check if cart is not set in session, initialize it
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }

    // Check if product already exists in cart
    $found = false;
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['product_id'] == $productId) {
            $item['quantity']++;
            $found = true;
            break;
        }
    }

    if (!$found) {
        $_SESSION['cart'][] = $cartItem;
    }
}


function viewCart() {
    if (!isset($_SESSION['cart']) || count($_SESSION['cart']) == 0) {
        echo "Your cart is empty.";
        return;
    }

    $total = 0;

    foreach ($_SESSION['cart'] as $item) {
        // Assuming you have a way to get product details from database
        $product = getProductFromDatabase($item['product_id']);
        $price = $product['price'];
        $total += ($price * $item['quantity']);

        echo "<div>";
        echo "<h3>" . $product['name'] . "</h3>";
        echo "<p>Quantity: " . $item['quantity'] . "</p>";
        echo "<p>Price: $" . number_format($price, 2) . "</p>";
        echo "</div>";
    }

    echo "<h4>Total: $" . number_format($total, 2) . "</h4>";
}


function updateCart($productId, $quantity) {
    if (!isset($_SESSION['cart'])) {
        return;
    }

    foreach ($_SESSION['cart'] as &$item) {
        if ($item['product_id'] == $productId) {
            $item['quantity'] = $quantity;
            break;
        }
    }
}


function removeFromCart($productId) {
    if (!isset($_SESSION['cart'])) {
        return;
    }

    foreach ($_SESSION['cart'] as $key => $item) {
        if ($item['product_id'] == $productId) {
            unset($_SESSION['cart'][$key]);
            break;
        }
    }

    // Re-index the array
    $_SESSION['cart'] = array_values($_SESSION['cart']);
}


<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
<?php
// Include your database connection and product retrieval function here

if (isset($_GET['action'])) {
    switch ($_GET['action']) {
        case 'add':
            addToCart($_GET['product_id']);
            break;
        case 'remove':
            removeFromCart($_GET['product_id']);
            break;
    }
}

viewCart();
?>
</body>
</html>


<?php
session_start();
require 'database_connection.php';

function add_to_cart($product_id, $quantity = 1) {
    global $conn;
    
    // Check if the product exists in the database
    $stmt = $conn->prepare("SELECT id FROM products WHERE id = ?");
    $stmt->bind_param("i", $product_id);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows == 0) {
        return false;
    }
    
    // Check if the product is already in the cart
    $session_id = session_id();
    $stmt = $conn->prepare("SELECT id FROM cart WHERE session_id = ? AND product_id = ?");
    $stmt->bind_param("si", $session_id, $product_id);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows > 0) {
        // Update quantity
        $row = $result->fetch_assoc();
        $cart_id = $row['id'];
        $new_quantity = $quantity + get_cart_item_quantity($product_id);
        update_cart_quantity($cart_id, $new_quantity);
    } else {
        // Add new item to cart
        $stmt = $conn->prepare("INSERT INTO cart (session_id, product_id, quantity) VALUES (?, ?, ?)");
        $stmt->bind_param("sis", $session_id, $product_id, $quantity);
        $stmt->execute();
    }
    
    return true;
}

function get_cart_items() {
    global $conn;
    $session_id = session_id();
    
    $stmt = $conn->prepare("SELECT c.id AS cart_id, p.*, c.quantity FROM cart c JOIN products p ON c.product_id = p.id WHERE c.session_id = ?");
    $stmt->bind_param("s", $session_id);
    $stmt->execute();
    $result = $stmt->get_result();
    
    return $result->fetch_all(MYSQLI_ASSOC);
}

function get_cart_item_quantity($product_id) {
    global $conn;
    $session_id = session_id();
    
    $stmt = $conn->prepare("SELECT quantity FROM cart WHERE session_id = ? AND product_id = ?");
    $stmt->bind_param("si", $session_id, $product_id);
    $stmt->execute();
    $result = $stmt->get_result();
    
    if ($result->num_rows > 0) {
        return $result->fetch_assoc()['quantity'];
    }
    
    return 0;
}

function update_cart_quantity($cart_id, $quantity) {
    global $conn;
    
    $stmt = $conn->prepare("UPDATE cart SET quantity = ? WHERE id = ?");
    $stmt->bind_param("ii", $quantity, $cart_id);
    $stmt->execute();
}

function remove_from_cart($cart_id) {
    global $conn;
    
    $stmt = $conn->prepare("DELETE FROM cart WHERE id = ?");
    $stmt->bind_param("i", $cart_id);
    $stmt->execute();
}

function empty_cart() {
    global $conn;
    $session_id = session_id();
    
    $stmt = $conn->prepare("DELETE FROM cart WHERE session_id = ?");
    $stmt->bind_param("s", $session_id);
    $stmt->execute();
}

function calculate_total() {
    global $conn;
    $session_id = session_id();
    
    $total = 0;
    $cart_items = get_cart_items();
    
    foreach ($cart_items as $item) {
        $total += $item['price'] * $item['quantity'];
    }
    
    return $total;
}
?>


<?php
$host = 'localhost';
$username = 'root';
$password = '';
$database = 'cart';

$conn = new mysqli($host, $username, $password, $database);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}
?>


<?php
session_start();
require 'cart.php';
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
    <style>
        body { font-family: Arial, sans-serif; }
        .container { width: 80%; margin: 0 auto; padding: 20px; }
        .product { border: 1px solid #ddd; padding: 10px; margin-bottom: 10px; }
    </style>
</head>
<body>
    <div class="container">
        <h1>Shopping Cart</h1>
        
        <?php
        // Add sample products (you should replace this with your own product fetching logic)
        $products = array(
            array('id' => 1, 'name' => 'Product 1', 'price' => 10.00, 'description' => 'Description for Product 1'),
            array('id' => 2, 'name' => 'Product 2', 'price' => 20.00, 'description' => 'Description for Product 2'),
            array('id' => 3, 'name' => 'Product 3', 'price' => 30.00, 'description' => 'Description for Product 3')
        );
        
        foreach ($products as $product) {
            echo "<div class='product'>";
            echo "<h2>{$product['name']}</h2>";
            echo "<p>Price: \${$product['price']}</p>";
            echo "<form action='' method='post'>";
            echo "<input type='hidden' name='product_id' value='{$product['id']}'>";
            echo "<input type='number' name='quantity' min='1' value='1'>";
            echo "<button type='submit'>Add to Cart</button>";
            echo "</form>";
            echo "</div>";
        }
        
        if ($_SERVER["REQUEST_METHOD"] == "POST") {
            $product_id = $_POST['product_id'];
            $quantity = $_POST['quantity'];
            
            add_to_cart($product_id, $quantity);
            header("Location: cart_view.php");
            exit();
        }
        ?>
    </div>
</body>
</html>


<?php
session_start();
require 'cart.php';
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart View</title>
    <style>
        body { font-family: Arial, sans-serif; }
        .container { width: 80%; margin: 0 auto; padding: 20px; }
        .cart-item { border: 1px solid #ddd; padding: 10px; margin-bottom: 10px; }
    </style>
</head>
<body>
    <div class="container">
        <h1>Your Shopping Cart</h1>
        
        <?php
        $cart_items = get_cart_items();
        if (empty($cart_items)) {
            echo "<p>Your cart is empty.</p>";
        } else {
            foreach ($cart_items as $item) {
                echo "<div class='cart-item'>";
                echo "<h3>{$item['name']}</h3>";
                echo "<p>Price: \${$item['price']}</p>";
                echo "<form action='' method='post'>";
                echo "<input type='hidden' name='cart_id' value='{$item['cart_id']}'>";
                echo "<input type='number' name='quantity' min='1' value='{$item['quantity']}'>";
                echo "<button type='submit'>Update Quantity</button>";
                echo "</form>";
                echo "<a href='remove_from_cart.php?cart_id={$item['cart_id']}'>Remove</a>";
                echo "</div>";
            }
            
            $total = calculate_total();
            echo "<h2>Total: \${$total}</h2>";
            echo "<a href='empty_cart.php'>Empty Cart</a>";
        }
        ?>
        
        <?php
        if ($_SERVER["REQUEST_METHOD"] == "POST") {
            $cart_id = $_POST['cart_id'];
            $quantity = $_POST['quantity'];
            
            update_cart_quantity($cart_id, $quantity);
            header("Location: cart_view.php");
            exit();
        }
        ?>
    </div>
</body>
</html>


<?php
session_start();
require 'cart.php';

if (isset($_GET['cart_id'])) {
    remove_from_cart($_GET['cart_id']);
    header("Location: cart_view.php");
    exit();
}
?>


<?php
session_start();
require 'cart.php';

empty_cart();
header("Location: cart_view.php");
exit();
?>


<?php
session_start();

// Database connection
$servername = "localhost";
$username = "username";
$password = "password";
$dbname = "shop";

$conn = mysqli_connect($servername, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Add to cart function
function add_to_cart($product_id) {
    global $conn;
    
    $_SESSION['cart'][$product_id] = isset($_SESSION['cart'][$product_id]) ? $_SESSION['cart'][$product_id] + 1 : 1;
    return true;
}

// Get product details from database
function get_product_details($product_id) {
    global $conn;
    
    $sql = "SELECT * FROM products WHERE id = ?";
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, "i", $product_id);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);
    
    return mysqli_fetch_assoc($result);
}

// Update cart function
function update_cart($product_id, $quantity) {
    global $conn;
    
    if ($quantity > 0) {
        $_SESSION['cart'][$product_id] = $quantity;
    }
}

// Remove from cart function
function remove_from_cart($product_id) {
    unset($_SESSION['cart'][$product_id]);
}

// Display cart contents
function display_cart() {
    global $conn;
    
    if (empty($_SESSION['cart'])) {
        echo "Your cart is empty!";
        return;
    }
    
    $total = 0;
    echo "<table>";
    foreach ($_SESSION['cart'] as $product_id => $quantity) {
        $product = get_product_details($product_id);
        echo "<tr>";
        echo "<td>" . $product['name'] . "</td>";
        echo "<td>Quantity: <input type='number' name='quantity[" . $product_id . "]' value='" . $quantity . "' min='1'></td>";
        echo "<td><button form='update-form'>Update</button></td>";
        echo "<td><a href='cart.php?action=remove&id=" . $product_id . "'>Remove</a></td>";
        echo "</tr>";
        
        $total += ($quantity * $product['price']);
    }
    echo "<tr><td>Total: $" . number_format($total, 2) . "</td></tr>";
    echo "</table>";
}

// Process cart actions
if (isset($_GET['action'])) {
    switch ($_GET['action']) {
        case 'add':
            add_to_cart($_GET['id']);
            header("Location: cart.php");
            break;
            
        case 'remove':
            remove_from_cart($_GET['id']);
            header("Location: cart.php");
            break;
    }
}

// Update cart quantities
if (isset($_POST['update'])) {
    foreach ($_POST['quantity'] as $product_id => $quantity) {
        update_cart($product_id, $quantity);
    }
    header("Location: cart.php");
}
?>


<?php
session_start();

// Database connection (same as above)

if (!isset($_SESSION['cart'])) {
    header("Location: cart.php");
}

// Get user details from form submission
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $name = mysqli_real_escape_string($conn, $_POST['name']);
    $email = mysqli_real_escape_string($conn, $_POST['email']);
    $address = mysqli_real_escape_string($conn, $_POST['address']);
    $payment_method = mysqli_real_escape_string($conn, $_POST['payment']);

    // Insert order into database
    $sql = "INSERT INTO orders (user_id, total_amount) VALUES (?, ?)";
    $stmt = mysqli_prepare($conn, $sql);
    $total_amount = calculate_total();
    
    // Assuming user is logged in and you have their ID stored in session
    $user_id = $_SESSION['user_id'];
    
    mysqli_stmt_bind_param($stmt, "id", $user_id, $total_amount);
    mysqli_stmt_execute($stmt);
    $order_id = mysqli_insert_id($conn);

    // Insert order details
    foreach ($_SESSION['cart'] as $product_id => $quantity) {
        $sql_details = "INSERT INTO order_details (order_id, product_id, quantity, price) VALUES (?, ?, ?, ?)";
        $stmt_details = mysqli_prepare($conn, $sql_details);
        $price = get_product_details($product_id)['price'];
        
        mysqli_stmt_bind_param($stmt_details, "iidi", $order_id, $product_id, $quantity, $price);
        mysqli_stmt_execute($stmt_details);
    }

    // Clear cart
    unset($_SESSION['cart']);
    
    header("Location: thank_you.php");
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
</head>
<body>
    <h1>Checkout</h1>
    
    <?php display_cart(); ?>
    
    <form action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>" method="post">
        <label for="name">Name:</label><br>
        <input type="text" id="name" name="name"><br>

        <label for="email">Email:</label><br>
        <input type="email" id="email" name="email"><br>

        <label for="address">Address:</label><br>
        <textarea id="address" name="address"></textarea><br>

        <label for="payment">Payment Method:</label><br>
        <select id="payment" name="payment">
            <option value="credit_card">Credit Card</option>
            <option value="paypal">PayPal</option>
        </select><br>

        <input type="submit" name="checkout" value="Complete Purchase">
    </form>
</body>
</html>


<?php
session_start();
?>
<!DOCTYPE html>
<html>
<head>
    <title>Thank You!</title>
</head>
<body>
    <h1>Thank you for your purchase!</h1>
    <p>Your order has been successfully processed.</p>
</body>
</html>


<!DOCTYPE html>
<html>
<head>
    <title>Products</title>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <style>
        /* Add your styles here */
    </style>
</head>
<body>
    <h1>Our Products</h1>
    <?php
    // Sample products array
    $products = [
        ['id' => 1, 'name' => 'Product 1', 'price' => 29.99],
        ['id' => 2, 'name' => 'Product 2', 'price' => 49.99],
        ['id' => 3, 'name' => 'Product 3', 'price' => 19.99]
    ];
    
    foreach ($products as $product) {
        echo "<div class='product'>";
        echo "<h2>{$product['name']}</h2>";
        echo "<p>Price: \${$product['price']}</p>";
        echo "<button onclick='addToCart(".$product['id'].")'>Add to Cart</button>";
        echo "</div>";
    }
    ?>
    
    <script>
        function addToCart(productId) {
            fetch('add_to_cart.php', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded',
                },
                body: 'product_id=' + productId + '&quantity=1'
            })
            .then(response => response.text())
            .then(data => {
                alert('Item added to cart!');
                // Optionally update the cart display here
            });
        }
    </script>
</body>
</html>


<?php
session_start();

// Check if product ID and quantity are provided
if (!isset($_POST['product_id']) || !isset($_POST['quantity'])) {
    die('Invalid request');
}

$product_id = $_POST['product_id'];
$quantity = $_POST['quantity'];

// Initialize cart if not exists
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Check if product already in cart
if (array_key_exists($product_id, $_SESSION['cart'])) {
    // Update quantity
    $_SESSION['cart'][$product_id] += $quantity;
} else {
    // Add new product to cart
    $_SESSION['cart'][$product_id] = $quantity;
}

// Redirect back to products page or show success message
header('Location: view_cart.php');
exit();


<?php
session_start();

if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <style>
        /* Add your styles here */
    </style>
</head>
<body>
    <h1>Your Shopping Cart</h1>
    
    <div id="cart-items">
        <?php
        if (empty($_SESSION['cart'])) {
            echo "<p>Your cart is empty.</p>";
        } else {
            $total = 0;
            foreach ($_SESSION['cart'] as $product_id => $quantity) {
                // For this example, we'll assume product details are known
                // In a real application, you'd query the database for product details
                if ($product_id == 1) {
                    $name = 'Product 1';
                    $price = 29.99;
                } elseif ($product_id == 2) {
                    $name = 'Product 2';
                    $price = 49.99;
                } elseif ($product_id == 3) {
                    $name = 'Product 3';
                    $price = 19.99;
                }
                
                echo "<div class='cart-item'>";
                echo "<h3>{$name}</h3>";
                echo "<p>Price: \${$price}</p>";
                echo "<p>Quantity: <input type='number' value='{$quantity}' id='qty_{$product_id}'></p>";
                echo "<button onclick='updateCart(".$product_id.")'>Update</button>";
                echo "<button onclick='deleteItem(".$product_id.")'>Delete</button>";
                echo "</div>";
                
                $total += ($price * $quantity);
            }
            echo "<h2>Total: \${$total}</h2>";
        }
        ?>
    </div>
    
    <script>
        function updateCart(productId) {
            const quantity = document.getElementById('qty_' + productId).value;
            
            fetch('update_cart.php', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded',
                },
                body: 'product_id=' + productId + '&quantity=' + quantity
            })
            .then(response => response.text())
            .then(data => {
                location.reload(); // Refresh to show updated cart
            });
        }
        
        function deleteItem(productId) {
            fetch('delete_item.php', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded',
                },
                body: 'product_id=' + productId
            })
            .then(response => response.text())
            .then(data => {
                location.reload(); // Refresh to show updated cart
            });
        }
    </script>
</body>
</html>


<?php
session_start();

if (!isset($_POST['product_id']) || !isset($_POST['quantity'])) {
    die('Invalid request');
}

$product_id = $_POST['product_id'];
$quantity = $_POST['quantity'];

if ($quantity < 1) {
    die('Quantity must be at least 1');
}

if (isset($_SESSION['cart'][$product_id])) {
    if ($quantity == 0) {
        unset($_SESSION['cart'][$product_id]);
    } else {
        $_SESSION['cart'][$product_id] = $quantity;
    }
}

header('Location: view_cart.php');
exit();


<?php
session_start();

if (!isset($_POST['product_id'])) {
    die('Invalid request');
}

$product_id = $_POST['product_id'];

if (isset($_SESSION['cart'][$product_id])) {
    unset($_SESSION['cart'][$product_id]);
}

header('Location: view_cart.php');
exit();


<?php
session_start();
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Product Store</title>
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>

<div class="container mt-4">
    <h2>Our Products</h2>
    
    <!-- Product Cards -->
    <div class="row row-cols-1 row-cols-md-3 g-4">
        <?php
        // Sample product data
        $products = array(
            array('id' => 1, 'name' => 'Product 1', 'price' => 29.99, 'description' => 'This is a sample product'),
            array('id' => 2, 'name' => 'Product 2', 'price' => 49.99, 'description' => 'Another sample product'),
            array('id' => 3, 'name' => 'Product 3', 'price' => 19.99, 'description' => 'Third sample product'),
        );

        foreach ($products as $product) {
            echo '
                <div class="col">
                    <div class="card h-100">
                        <div class="card-body text-center">
                            <h5 class="card-title">'.$product['name'].'</h5>
                            <p class="card-text">$'.$product['price'].'</p>
                            <p class="card-text">'.$product['description'].'</p>
                            <button onclick="addToCart('.$product['id'].')" class="btn btn-primary">Add to Cart</button>
                        </div>
                    </div>
                </div>';
        }
        ?>
    </div>

    <!-- Shopping Cart Preview -->
    <div class="mt-4">
        <h3>Shopping Cart:</h3>
        <p id="cartCount">0 items</p>
    </div>
</div>

<!-- Bootstrap JS and Popper.js -->
<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.6/dist/umd/popper.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.min.js"></script>

<script>
function addToCart(productId) {
    fetch('add_to_cart.php', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/x-www-form-urlencoded',
        },
        body: 'id=' + productId
    })
    .then(response => response.text())
    .then(count => document.getElementById('cartCount').textContent = count + ' items');
}
</script>

</body>
</html>


<?php
session_start();

if (isset($_POST['id'])) {
    $productId = $_POST['id'];
    
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }
    
    if (array_key_exists($productId, $_SESSION['cart'])) {
        // Increment quantity
        $_SESSION['cart'][$productId]++;
    } else {
        // Add new product to cart
        $_SESSION['cart'][$productId] = 1;
    }
}

echo count($_SESSION['cart']);
?>


<?php
session_start();
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Shopping Cart</title>
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>

<div class="container mt-4">
    <?php
    if (empty($_SESSION['cart'])) {
        echo '<h2>Your cart is empty!</h2>';
    } else {
        $products = array(
            1 => array('name' => 'Product 1', 'price' => 29.99),
            2 => array('name' => 'Product 2', 'price' => 49.99),
            3 => array('name' => 'Product 3', 'price' => 19.99),
        );
        
        $totalPrice = 0;
        echo '<h2>Shopping Cart:</h2>';
        echo '<table class="table table-striped">';
        echo '<thead><tr><th>Product</th><th>Quantity</th><th>Total</th><th>Action</th></tr></thead>';
        
        foreach ($_SESSION['cart'] as $productId => $quantity) {
            if (isset($products[$productId])) {
                $price = $products[$productId]['price'];
                $total = $price * $quantity;
                $totalPrice += $total;
                
                echo '<tr>';
                echo '<td>'.$products[$productId]['name'].'</td>';
                echo '<td><input type="number" value="'.$quantity.'" min="1"></td>';
                echo '<td>$'.$total.'</td>';
                echo '<td><button onclick="removeFromCart('.$productId.')">Remove</button></td>';
                echo '</tr>';
            }
        }
        
        echo '<tr><td colspan="3"><strong>Total: $'.$totalPrice.'</strong></td><td></td></tr>';
        echo '</table>';
    }
    ?>
</div>

<!-- Bootstrap JS and Popper.js -->
<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.6/dist/umd/popper.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.min.js"></script>

<script>
function removeFromCart(productId) {
    fetch('remove_from_cart.php', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/x-www-form-urlencoded',
        },
        body: 'id=' + productId
    })
    .then(response => response.text())
    .then(location.reload());
}
</script>

</body>
</html>


<?php
session_start();

if (isset($_POST['id'])) {
    $productId = $_POST['id'];
    
    if (!empty($_SESSION['cart']) && isset($_SESSION['cart'][$productId])) {
        unset($_SESSION['cart'][$productId]);
    }
}

header('Location: cart.php');
exit();
?>


<?php
session_start();
?>


<?php
$products = array(
    1 => array(
        'name' => 'Product 1',
        'price' => 25.00,
        'description' => 'Description for Product 1'
    ),
    2 => array(
        'name' => 'Product 2',
        'price' => 35.00,
        'description' => 'Description for Product 2'
    )
);
?>


<?php foreach ($products as $id => $product): ?>
    <div class="product">
        <h3><?php echo $product['name']; ?></h3>
        <p><?php echo $product['description']; ?></p>
        <p>Price: $<?php echo number_format($product['price'], 2); ?></p>
        <form action="add_to_cart.php" method="post">
            <input type="hidden" name="id" value="<?php echo $id; ?>">
            <button type="submit">Add to Cart</button>
        </form>
    </div>
<?php endforeach; ?>


<?php
session_start();

$id = $_POST['id'];
$product = $products[$id];

if (isset($_SESSION['cart'][$id])) {
    // Increment quantity if item already exists in cart
    $_SESSION['cart'][$id]['quantity']++;
} else {
    // Add new item to cart
    $_SESSION['cart'][$id] = array(
        'name' => $product['name'],
        'price' => $product['price'],
        'quantity' => 1
    );
}

header("Location: view_cart.php");
exit();
?>


<?php
session_start();

function calculateTotal() {
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += ($item['price'] * $item['quantity']);
    }
    return $total;
}

function displayCart() {
    if (isset($_SESSION['cart'])) {
        foreach ($_SESSION['cart'] as $id => $item) {
            echo "<tr>";
            echo "<td>" . $item['name'] . "</td>";
            echo "<td>$" . number_format($item['price'], 2) . "</td>";
            echo "<td><input type='number' name='quantity[" . $id . "]' value='" . $item['quantity'] . "'></td>";
            echo "<td>$" . number_format(($item['price'] * $item['quantity']), 2) . "</td>";
            echo "<td><button onclick=\"removeFromCart($id)\">Remove</button></td>";
            echo "</tr>";
        }
    } else {
        echo "<tr><td colspan='5'>Your cart is empty!</td></tr>";
    }
}
?>


<?php
session_start();

if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    if (isset($_POST['quantity'])) {
        foreach ($_POST['quantity'] as $id => $qty) {
            $_SESSION['cart'][$id]['quantity'] = $qty;
        }
    } elseif (isset($_GET['remove'])) {
        $id = $_GET['remove'];
        unset($_SESSION['cart'][$id]);
    }

    header("Location: view_cart.php");
    exit();
}
?>


<?php
session_start();

$total = calculateTotal();
?>

<h2>Checkout</h2>
<p>Total Amount: $<?php echo number_format($total, 2); ?></p>

<form action="process_order.php" method="post">
    <div class="checkout-info">
        <h3>Billing Information</h3>
        <input type="text" name="name" placeholder="Name" required>
        <input type="email" name="email" placeholder="Email" required>
        <input type="text" name="address" placeholder="Address" required>
    </div>

    <button type="submit">Place Order</button>
</form>


<?php
session_start();

if (isset($_SESSION['cart'])) {
    // Here you would typically connect to your database and process the order
    // For this example, we'll just clear the cart
    unset($_SESSION['cart']);
}

header("Location: thank_you.php");
exit();
?>


<h2>Thank You for Your Order!</h2>
<p>Your order has been processed successfully.</p>
<a href="index.php">Continue Shopping</a>


class Product {
    private $id;
    private $name;
    private $price;
    private $description;
    private $image;

    public function __construct($id, $name, $price, $description = '', $image = '') {
        $this->id = $id;
        $this->name = $name;
        $this->price = $price;
        $this->description = $description;
        $this->image = $image;
    }

    // Getters
    public function getId() { return $this->id; }
    public function getName() { return $this->name; }
    public function getPrice() { return $this->price; }
    public function getDescription() { return $this->description; }
    public function getImage() { return $this->image; }
}


class Cart {
    private $items;
    private $total;

    public function __construct($items = array()) {
        $this->items = $items;
        $this->calculateTotal();
    }

    public function addItem($productId, $quantity = 1) {
        if (isset($this->items[$productId])) {
            $this->items[$productId]['quantity'] += $quantity;
        } else {
            $this->items[$productId] = array(
                'product_id' => $productId,
                'quantity' => $quantity
            );
        }
        $this->calculateTotal();
    }

    public function removeItem($productId) {
        unset($this->items[$productId]);
        $this->calculateTotal();
    }

    public function updateQuantity($productId, $newQuantity) {
        if (isset($this->items[$productId])) {
            if ($newQuantity > 0) {
                $this->items[$productId]['quantity'] = $newQuantity;
            } else {
                unset($this->items[$productId]);
            }
            $this->calculateTotal();
        }
    }

    public function getItems() {
        return $this->items;
    }

    private function calculateTotal() {
        $total = 0;
        foreach ($this->items as $item) {
            // Here you would fetch the product price from your database
            // For this example, we're assuming a fixed price of 10.00 per item
            $price = 10.00; 
            $total += ($item['quantity'] * $price);
        }
        $this->total = $total;
    }

    public function getTotal() {
        return $this->total;
    }
}


session_start();

if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = new Cart();
}

$cart = $_SESSION['cart'];


$product_id = (int)$_GET['product_id'];
$quantity = isset($_GET['quantity']) ? (int)$_GET['quantity'] : 1;

if ($product_id > 0 && $quantity > 0) {
    $cart->addItem($product_id, $quantity);
    $_SESSION['cart'] = $cart;
}


$product_id = (int)$_GET['product_id'];

if ($product_id > 0) {
    $cart->removeItem($product_id);
    $_SESSION['cart'] = $cart;
}


$product_id = (int)$_POST['product_id'];
$new_quantity = isset($_POST['quantity']) ? (int)$_POST['quantity'] : 1;

if ($product_id > 0 && $new_quantity >= 0) {
    $cart->updateQuantity($product_id, $new_quantity);
    $_SESSION['cart'] = $cart;
}


echo "<h2>Your Cart</h2>";
echo "<table border='1'>";
echo "<tr><th>Product</th><th>Quantity</th><th>Total</th><th>Action</th></tr>";

foreach ($cart->getItems() as $item) {
    // Fetch the product details from your database
    // For this example, we're using dummy data
    $product = new Product(
        $item['product_id'],
        "Product " . $item['product_id'],
        10.00,
        "Description for product " . $item['product_id'],
        "image_" . $item['product_id'] . ".jpg"
    );

    echo "<tr>";
    echo "<td>" . $product->getName() . "</td>";
    echo "<td><input type='number' name='quantity[" . $product->getId() . "]' value='" . $item['quantity'] . "' min='1'></td>";
    echo "<td>$" . ($product->getPrice() * $item['quantity']) . "</td>";
    echo "<td><a href='remove.php?product_id=" . $product->getId() . "'>Remove</a></td>";
    echo "</tr>";
}

echo "</table>";
echo "<h3>Total: $" . number_format($cart->getTotal(), 2) . "</h3>";


class Cart {
    // ... existing code ...

    public function saveToDatabase($user_id = null) {
        foreach ($this->items as $item) {
            $db = new PDO('mysql:host=localhost;dbname=your_database', 'username', 'password');
            $stmt = $db->prepare("INSERT INTO cart (user_id, product_id, quantity) VALUES (?, ?, ?)");
            $stmt->execute([$user_id, $item['product_id'], $item['quantity']]);
        }
    }
}


class Cart {
    // ... existing code ...

    public static function loadFromDatabase($user_id) {
        $db = new PDO('mysql:host=localhost;dbname=your_database', 'username', 'password');
        $stmt = $db->prepare("SELECT * FROM cart WHERE user_id = ?");
        $stmt->execute([$user_id]);
        $items = array();
        
        foreach ($stmt->fetchAll() as $row) {
            $items[$row['product_id']] = array(
                'product_id' => $row['product_id'],
                'quantity' => $row['quantity']
            );
        }
        
        return new Cart($items);
    }
}


<?php
session_start();

// Database configuration
$host = 'localhost';
$dbname = 'your_database';
$username = 'username';
$password = 'password';

try {
    $db = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
} catch (PDOException $e) {
    die("Could not connect to the database: " . $e->getMessage());
}

// Include classes
include_once('Product.php');
include_once('Cart.php');

// Check if cart exists in session, if not, create a new one
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = new Cart();
}

$cart = $_SESSION['cart'];
?>


<?php
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'shopping_cart';

$conn = new mysqli($host, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}
?>


<?php
session_start();

class Cart {
    private $db;

    public function __construct() {
        require_once 'db.php';
        $this->db = new mysqli($host, $username, $password, $dbname);
    }

    // Add item to cart
    public function addItem($productId) {
        if (!isset($_SESSION['cart'])) {
            $_SESSION['cart'] = array();
        }
        
        if (isset($_SESSION['cart'][$productId])) {
            $_SESSION['cart'][$productId]['quantity']++;
        } else {
            $sql = "SELECT name, price FROM products WHERE id = ?";
            $stmt = $this->db->prepare($sql);
            $stmt->bind_param('i', $productId);
            $stmt->execute();
            $result = $stmt->get_result();
            $product = $result->fetch_assoc();

            if ($product) {
                $_SESSION['cart'][$productId] = array(
                    'id' => $productId,
                    'name' => $product['name'],
                    'price' => $product['price'],
                    'quantity' => 1
                );
            }
        }
    }

    // Remove item from cart
    public function removeItem($productId) {
        if (isset($_SESSION['cart'][$productId])) {
            unset($_SESSION['cart'][$productId]);
        }
    }

    // Update item quantity
    public function updateQuantity($productId, $quantity) {
        if ($quantity > 0 && isset($_SESSION['cart'][$productId])) {
            $_SESSION['cart'][$productId]['quantity'] = $quantity;
        }
    }

    // Get cart items
    public function getCartItems() {
        return $_SESSION['cart'] ?? array();
    }

    // Calculate total price
    public function calculateTotal() {
        $total = 0;
        foreach ($_SESSION['cart'] as $item) {
            $total += ($item['price'] * $item['quantity']);
        }
        return $total;
    }
}
?>


<?php
require_once 'db.php';
$query = "SELECT * FROM products";
$result = $conn->query($query);

if ($result->num_rows > 0) {
    while ($row = $result->fetch_assoc()) {
        echo "<div class='product'>";
        echo "<h3>{$row['name']}</h3>";
        echo "<p>Price: \${$row['price']}</p>";
        echo "<a href='add_to_cart.php?id={$row['id']}'>Add to Cart</a>";
        echo "</div>";
    }
}
$conn->close();
?>


<?php
session_start();
require_once 'Cart.php';

$cart = new Cart();

if (isset($_GET['id'])) {
    $productId = $_GET['id'];
    $cart->addItem($productId);
}

header('Location: view_cart.php');
exit();
?>


<?php
require_once 'Cart.php';

$cart = new Cart();
$cartItems = $cart->getCartItems();

if (!empty($cartItems)) {
    echo "<table>";
    echo "<tr><th>Product</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>";
    
    foreach ($cartItems as $item) {
        $totalItem = $item['price'] * $item['quantity'];
        echo "<tr>";
        echo "<td>{$item['name']}</td>";
        echo "<td>\${$item['price']}</td>";
        echo "<td><form method='post' action='update_cart.php'><input type='hidden' name='id' value='{$item['id']}'>";
        echo "<input type='number' name='quantity' min='1' value='{$item['quantity']}'>";
        echo "</form></td>";
        echo "<td>\${$totalItem}</td>";
        echo "<td><a href='remove_from_cart.php?id={$item['id']}'>Remove</a></td>";
        echo "</tr>";
    }
    
    $grandTotal = $cart->calculateTotal();
    echo "<tr><td colspan='4'><strong>Grand Total:</strong></td><td>\${$grandTotal}</td></tr>";
    echo "</table>";
} else {
    echo "Your cart is empty.";
}
?>


<?php
session_start();
require_once 'Cart.php';

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $productId = $_POST['id'];
    $quantity = (int)$_POST['quantity'];

    if ($quantity > 0) {
        $cart = new Cart();
        $cart->updateQuantity($productId, $quantity);
    }
}

header('Location: view_cart.php');
exit();
?>


<?php
session_start();
require_once 'Cart.php';

if (isset($_GET['id'])) {
    $cart = new Cart();
    $cart->removeItem($_GET['id']);
}

header('Location: view_cart.php');
exit();
?>


<?php
session_start();

if (!isset($_SESSION['cart'])) {
    header('Location: view_cart.php');
    exit();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
</head>
<body>
    <h1>Checkout</h1>
    
    <form action="process_order.php" method="post">
        <label for="name">Name:</label><br>
        <input type="text" id="name" name="name" required><br>
        
        <label for="email">Email:</label><br>
        <input type="email" id="email" name="email" required><br>
        
        <label for="address">Address:</label><br>
        <textarea id="address" name="address" required></textarea><br>
        
        <label for="phone">Phone:</label><br>
        <input type="tel" id="phone" name="phone" required><br>
        
        <input type="submit" value="Place Order">
    </form>
</body>
</html>


<?php
session_start();
require_once 'Cart.php';
require_once 'db.php';

if (!isset($_SESSION['cart'])) {
    header('Location: view_cart.php');
    exit();
}

$cart = new Cart();
$cartItems = $cart->getCartItems();

// Insert into orders table
foreach ($cartItems as $item) {
    $sql = "INSERT INTO orders (product_id, quantity, price) VALUES (?, ?, ?)";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param('iii', $item['id'], $item['quantity'], $item['price']);
    $stmt->execute();
}

// Clear cart
unset($_SESSION['cart']);

echo "Order placed successfully!";
header('Location: order_confirmation.php');
exit();
?>


<?php
session_start();

if (!isset($_SESSION['cart'])) {
    header('Location: view_cart.php');
    exit();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Order Confirmation</title>
</head>
<body>
    <h1>Your Order Has Been Placed!</h1>
    
    <p>Thank you for your order. Your order details are as follows:</p>
    
    <?php
    $cart = new Cart();
    $cartItems = $cart->getCartItems();
    $grandTotal = $cart->calculateTotal();
    ?>
    
    <table>
        <tr><th>Product</th><th>Quantity</th><th>Total</th></tr>
        
        <?php foreach ($cartItems as $item): ?>
            <?php $totalItem = $item['price'] * $item['quantity']; ?>
            <tr>
                <td><?php echo $item['name']; ?></td>
                <td><?php echo $item['quantity']; ?></td>
                <td>$<?php echo number_format($totalItem, 2); ?></td>
            </tr>
        <?php endforeach; ?>
        
        <tr><td colspan="3"><strong>Grand Total: $<?php echo number_format($grandTotal, 2); ?></strong></td></tr>
    </table>
    
    <p>Your order will be processed shortly. Please check your email for confirmation.</p>
</body>
</html>


<?php
// Initialize session
session_start();

// Check if cart exists in session, if not create empty array
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add item to cart
if (isset($_GET['action']) && $_GET['action'] == 'add') {
    $product_id = $_GET['id'];
    $product_name = $_GET['name'];
    $product_price = $_GET['price'];

    if (!array_key_exists($product_id, $_SESSION['cart'])) {
        // Add new product to cart
        $_SESSION['cart'][$product_id] = array(
            'id' => $product_id,
            'name' => $product_name,
            'quantity' => 1,
            'price' => $product_price
        );
    } else {
        // Increment quantity of existing product
        $_SESSION['cart'][$product_id]['quantity']++;
    }

    echo "Item added to cart";
}

// Update item quantity
if (isset($_GET['action']) && $_GET['action'] == 'update') {
    $product_id = $_GET['id'];
    $new_quantity = intval($_GET['quantity']);

    if ($new_quantity > 0) {
        $_SESSION['cart'][$product_id]['quantity'] = $new_quantity;
    }

    echo "Quantity updated";
}

// Remove item from cart
if (isset($_GET['action']) && $_GET['action'] == 'remove') {
    $product_id = $_GET['id'];
    
    unset($_SESSION['cart'][$product_id]);

    echo "Item removed from cart";
}

// Display cart contents
echo "<h2>Shopping Cart</h2>";
echo "<a href='products.php'>Continue Shopping</a><br><br>";

if (empty($_SESSION['cart'])) {
    echo "Your cart is empty!";
} else {
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $subtotal = $item['price'] * $item['quantity'];
        $total += $subtotal;

        // Display each item
        echo "<div style='border:1px solid #ddd; padding:10px;margin-bottom:5px;'>";
        echo "Product ID: " . $item['id'] . "<br>";
        echo "Product Name: " . $item['name'] . "<br>";
        echo "Quantity: <input type='number' id='quantity-" . $item['id'] . "' value='" . $item['quantity'] . "' min='1'>";
        echo "<button onclick=\"updateQuantity(" . $item['id'] . ")\">Update</button><br>";
        echo "Price: \$" . number_format($item['price'], 2) . "<br>";
        echo "Subtotal: \$" . number_format($subtotal, 2) . "<br>";
        echo "<a href='cart.php?action=remove&id=" . $item['id'] . "'>Remove</a>";
        echo "</div>";
    }

    // Display total
    echo "<h3>Total: $" . number_format($total, 2) . "</h3>";
}

// JavaScript for updating quantity dynamically
echo "<script>
function updateQuantity(id) {
    var new_quantity = document.getElementById('quantity-' + id).value;
    window.location.href = 'cart.php?action=update&id=' + id + '&quantity=' + new_quantity;
}
</script>";
?>



<?php
class ShoppingCart {
    private $db;

    public function __construct($db) {
        $this->db = $db;
    }

    // Add item to cart
    public function addItem($productId, $quantity = 1) {
        if (!isset($_SESSION)) {
            session_start();
        }
        
        $userId = $_SESSION['user_id'] ?? null;

        try {
            // Check if item already exists in cart
            $stmt = $this->db->prepare("
                SELECT id FROM shopping_cart 
                WHERE product_id = ? AND user_id = ?
            ");
            $stmt->execute([$productId, $userId]);
            $existingItem = $stmt->fetch(PDO::FETCH_ASSOC);

            if ($existingItem) {
                // Update quantity
                $this->updateItemQuantity($existingItem['id'], $quantity);
                return true;
            } else {
                // Insert new item
                $stmt = $this->db->prepare("
                    INSERT INTO shopping_cart (product_id, quantity, user_id)
                    VALUES (?, ?, ?)
                ");
                $result = $stmt->execute([$productId, $quantity, $userId]);
                return $result;
            }
        } catch (PDOException $e) {
            echo "Error: " . $e->getMessage();
            return false;
        }
    }

    // View cart items
    public function viewCart() {
        if (!isset($_SESSION)) {
            session_start();
        }
        
        $userId = $_SESSION['user_id'] ?? null;

        try {
            $stmt = $this->db->prepare("
                SELECT sc.id, p.name, p.description, p.price, 
                       sc.quantity, sc.added_at
                FROM shopping_cart sc
                JOIN products p ON sc.product_id = p.id
                WHERE sc.user_id = ?
            ");
            $stmt->execute([$userId]);
            return $stmt->fetchAll(PDO::FETCH_ASSOC);
        } catch (PDOException $e) {
            echo "Error: " . $e->getMessage();
            return false;
        }
    }

    // Update item quantity
    public function updateItemQuantity($cartItemId, $quantity) {
        try {
            if ($quantity <= 0) {
                $this->removeItem($cartItemId);
                return true;
            }

            $stmt = $this->db->prepare("
                UPDATE shopping_cart 
                SET quantity = ?, updated_at = CURRENT_TIMESTAMP
                WHERE id = ?
            ");
            $result = $stmt->execute([$quantity, $cartItemId]);
            return $result;
        } catch (PDOException $e) {
            echo "Error: " . $e->getMessage();
            return false;
        }
    }

    // Remove item from cart
    public function removeItem($cartItemId) {
        try {
            $stmt = $this->db->prepare("
                DELETE FROM shopping_cart 
                WHERE id = ?
            ");
            $result = $stmt->execute([$cartItemId]);
            return $result;
        } catch (PDOException $e) {
            echo "Error: " . $e->getMessage();
            return false;
        }
    }
}


<?php
require_once 'ShoppingCart.php';

// Database connection
try {
    $db = new PDO('mysql:host=localhost;dbname=your_database', 'username', 'password');
    $db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    die("Could not connect to the database: " . $e->getMessage());
}

$cart = new ShoppingCart($db);

// Add item to cart
if (isset($_POST['add_to_cart'])) {
    $productId = $_POST['product_id'];
    $quantity = $_POST['quantity'] ?? 1;
    $cart->addItem($productId, $quantity);
}

// Update cart items
if (isset($_POST['update_cart'])) {
    foreach ($_POST as $key => $value) {
        if (strpos($key, 'item_quantity_') === 0) {
            $cartItemId = substr($key, strlen('item_quantity_'));
            $cart->updateItemQuantity($cartItemId, $value);
        }
    }
}

// Remove item from cart
if (isset($_GET['remove_item'])) {
    $cartItemId = $_GET['remove_item'];
    $cart->removeItem($cartItemId);
}


session_start();
$_SESSION['user_id'] = $userId;


// config.php
<?php
$host = "localhost";
$user = "root";
$password = "";
$dbname = "shopping_cart";

$conn = new mysqli($host, $user, $password, $dbname);
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}
?>


// classes/Product.php
<?php
class Product {
    private $id;
    private $name;
    private $price;
    private $description;

    public function __construct($id, $name, $price, $description) {
        $this->id = $id;
        $this->name = $name;
        $this->price = $price;
        $this->description = $description;
    }

    // Getters
    public function getId() { return $this->id; }
    public function getName() { return $this->name; }
    public function getPrice() { return $this->price; }
    public function getDescription() { return $this->description; }
}
?>


// classes/Cart.php
<?php
session_start();

class Cart {
    private $cartItems = array();
    private $totalPrice = 0;

    // Add item to cart
    public function addItem($productId, $quantity) {
        if (!isset($_SESSION['cart'])) {
            $_SESSION['cart'] = array();
        }

        if ($this->isProductExists($productId)) {
            $this->updateQuantity($productId, $quantity);
        } else {
            $product = new Product(...$this->getProductDetails($productId));
            $item = array(
                'id' => $product->getId(),
                'name' => $product->getName(),
                'price' => $product->getPrice(),
                'quantity' => $quantity
            );
            $_SESSION['cart'][$productId] = $item;
        }
    }

    // Check if product exists in cart
    private function isProductExists($productId) {
        return isset($_SESSION['cart'][$productId]);
    }

    // Update quantity of an item
    public function updateQuantity($productId, $quantity) {
        if ($this->isProductExists($productId)) {
            $_SESSION['cart'][$productId]['quantity'] = $quantity;
        }
    }

    // Remove item from cart
    public function removeItem($productId) {
        if ($this->isProductExists($productId)) {
            unset($_SESSION['cart'][$productId]);
        }
    }

    // Calculate total price
    public function calculateTotal() {
        $total = 0;
        foreach ($_SESSION['cart'] as $item) {
            $total += $item['price'] * $item['quantity'];
        }
        return number_format($total, 2);
    }

    // Get product details from database
    private function getProductDetails($productId) {
        include_once 'config.php';
        $stmt = $conn->prepare("SELECT id, name, price, description FROM products WHERE id = ?");
        $stmt->bind_param('i', $productId);
        $stmt->execute();
        $result = $stmt->get_result();
        return $result->fetch_assoc();
    }

    // Get all items in cart
    public function getCartItems() {
        return $_SESSION['cart'];
    }
}
?>


// classes/Checkout.php
<?php
class Checkout extends Cart {
    private $orderDetails;

    public function __construct($orderDetails) {
        $this->orderDetails = $orderDetails;
    }

    // Process order
    public function processOrder() {
        include_once 'config.php';

        $totalPrice = $this->calculateTotal();

        $stmt = $conn->prepare("INSERT INTO orders (name, email, address, total_price) VALUES (?, ?, ?, ?)");
        $stmt->bind_param('sssd', $this->orderDetails['name'], $this->orderDetails['email'], $this->orderDetails['address'], $totalPrice);

        if ($stmt->execute()) {
            // Clear the cart
            $_SESSION['cart'] = array();
            return true;
        } else {
            return false;
        }
    }
}
?>


// index.php
<?php
include_once 'classes/Product.php';
include_once 'classes/Cart.php';

$cart = new Cart();

// Get all products from database
include_once 'config.php';
$stmt = $conn->prepare("SELECT * FROM products");
$stmt->execute();
$result = $stmt->get_result();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
    <style>
        .cart-item { margin-bottom: 20px; border-bottom: 1px solid #ddd; padding-bottom: 10px; }
        .cart-total { font-size: 24px; font-weight: bold; margin-top: 20px; }
    </style>
</head>
<body>
    <h1>Products</h1>
    <?php while ($product = $result->fetch_assoc()): ?>
        <div class="cart-item">
            <h3><?php echo $product['name']; ?></h3>
            <p><?php echo $product['description']; ?></p>
            <p>Price: $<?php echo number_format($product['price'], 2); ?></p>
            <form action="add_to_cart.php" method="post">
                <input type="hidden" name="product_id" value="<?php echo $product['id']; ?>">
                <input type="number" name="quantity" value="1" min="1">
                <button type="submit">Add to Cart</button>
            </form>
        </div>
    <?php endwhile; ?>

    <?php if (!empty($cart->getCartItems())): ?>
        <h2>Your Cart</h2>
        <table border="1">
            <tr>
                <th>Product Name</th>
                <th>Price</th>
                <th>Quantity</th>
                <th>Total</th>
                <th>Action</th>
            </tr>
            <?php foreach ($cart->getCartItems() as $item): ?>
                <tr>
                    <td><?php echo $item['name']; ?></td>
                    <td>$<?php echo number_format($item['price'], 2); ?></td>
                    <td>
                        <form action="update_cart.php" method="post">
                            <input type="hidden" name="product_id" value="<?php echo $item['id']; ?>">
                            <input type="number" name="quantity" value="<?php echo $item['quantity']; ?>" min="1">
                            <button type="submit">Update</button>
                        </form>
                    </td>
                    <td>$<?php echo number_format($item['price'] * $item['quantity'], 2); ?></td>
                    <td><a href="remove_from_cart.php?product_id=<?php echo $item['id']; ?>">Remove</a></td>
                </tr>
            <?php endforeach; ?>
        </table>
        <h3 class="cart-total">Total: $<?php echo $cart->calculateTotal(); ?></h3>
        <h3><a href="checkout.php">Checkout</a></h3>
    <?php else: ?>
        <p>Your cart is empty.</p>
    <?php endif; ?>
</body>
</html>


// add_to_cart.php
<?php
session_start();
include_once 'classes/Cart.php';

if (isset($_POST['product_id']) && isset($_POST['quantity'])) {
    $cart = new Cart();
    $cart->addItem($_POST['product_id'], $_POST['quantity']);
    header("Location: index.php");
} else {
    header("Location: index.php");
}
?>


// update_cart.php
<?php
session_start();
include_once 'classes/Cart.php';

if (isset($_POST['product_id']) && isset($_POST['quantity'])) {
    $cart = new Cart();
    $cart->updateQuantity($_POST['product_id'], $_POST['quantity']);
    header("Location: index.php");
} else {
    header("Location: index.php");
}
?>


// remove_from_cart.php
<?php
session_start();
include_once 'classes/Cart.php';

if (isset($_GET['product_id'])) {
    $cart = new Cart();
    $cart->removeItem($_GET['product_id']);
    header("Location: index.php");
} else {
    header("Location: index.php");
}
?>


<?php
$products = array(
    array('id' => 1, 'name' => 'Product 1', 'price' => 100, 'description' => 'This is product 1'),
    array('id' => 2, 'name' => 'Product 2', 'price' => 200, 'description' => 'This is product 2'),
    array('id' => 3, 'name' => 'Product 3', 'price' => 300, 'description' => 'This is product 3')
);

foreach ($products as $product) {
    echo "<div class='product'>";
    echo "<h3>{$product['name']}</h3>";
    echo "<p>Price: \${$product['price']}</p>";
    echo "<p>Description: {$product['description']}</p>";
    echo "<form action='add_to_cart.php' method='post'>";
    echo "<input type='hidden' name='id' value='{$product['id']}'>";
    echo "<input type='number' name='quantity' min='1' max='5' value='1'>";
    echo "<button type='submit'>Add to Cart</button>";
    echo "</form>";
    echo "</div>";
}
?>


<?php
session_start();

if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

function getCartTotal() {
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += $item['price'] * $item['quantity'];
    }
    return $total;
}

if (!empty($_SESSION['cart'])) {
    echo "<div class='cart'>";
    echo "<table>";
    echo "<tr><th>Product</th><th>Quantity</th><th>Price</th><th>Total</th><th>Action</th></tr>";
    
    foreach ($_SESSION['cart'] as $item) {
        echo "<tr>";
        echo "<td>{$item['name']}</td>";
        echo "<td>{$item['quantity']}</td>";
        echo "<td>\${$item['price']}</td>";
        echo "<td>\${$item['price'] * $item['quantity']}</td>";
        echo "<td><a href='remove_from_cart.php?id={$item['id']}'>Remove</a></td>";
        echo "</tr>";
    }
    
    echo "</table>";
    echo "<h3>Total: \${getCartTotal()}</h3>";
    echo "<button onclick=\"window.location.href='checkout.php'\">Checkout</button>";
    echo "</div>";
} else {
    echo "Your cart is empty!";
}
?>


<?php
session_start();

if (isset($_POST['id']) && isset($_POST['quantity'])) {
    $product_id = $_POST['id'];
    $quantity = $_POST['quantity'];

    // Load products data
    include 'products.php';

    // Find product by ID
    foreach ($products as $product) {
        if ($product['id'] == $product_id) {
            $item = array(
                'id' => $product['id'],
                'name' => $product['name'],
                'price' => $product['price'],
                'quantity' => $quantity
            );

            // Add item to cart
            if (isset($_SESSION['cart'][$product_id])) {
                $_SESSION['cart'][$product_id]['quantity'] += $quantity;
            } else {
                $_SESSION['cart'][$product_id] = $item;
            }
        }
    }

    header("Location: index.php");
    exit();
}
?>


<?php
session_start();

if (isset($_GET['id'])) {
    $product_id = $_GET['id'];
    
    if (isset($_SESSION['cart'][$product_id])) {
        unset($_SESSION['cart'][$product_id]);
    }
    
    header("Location: index.php");
    exit();
}
?>


<?php
session_start();

if (!empty($_SESSION['cart'])) {
    echo "<h2>Checkout</h2>";
    echo "<p>Thank you for shopping with us!</p>";
    echo "<p>Your order has been placed successfully.</p>";
    echo "<button onclick=\"window.location.href='index.php'\">Continue Shopping</button>";
    
    // Clear the cart after checkout
    unset($_SESSION['cart']);
} else {
    header("Location: index.php");
}
?>


<?php
session_start();
require 'db/connect.php';
include_once 'classes/cart.class.php';

$cart = new Cart($pdo);

$sql = "SELECT * FROM products";
$stmt = $pdo->query($sql);
$products = $stmt->fetchAll(PDO::FETCH_ASSOC);
?>
<!DOCTYPE html>
<html>
<head>
    <title>Product Store</title>
</head>
<body>
    <h1>Welcome to Our Store</h1>
    <?php foreach ($products as $product): ?>
        <div>
            <h2><?php echo $product['name']; ?></h2>
            <p><?php echo $product['description']; ?></p>
            <p>Price: $<?php echo number_format($product['price'], 2); ?></p>
            <form action="add_to_cart.php" method="POST">
                <input type="hidden" name="product_id" value="<?php echo $product['id']; ?>">
                <button type="submit">Add to Cart</button>
            </form>
        </div>
    <?php endforeach; ?>
    <p><a href="cart.php">View Your Cart</a></p>
</body>
</html>


<?php
session_start();
require 'db/connect.php';
include_once 'classes/cart.class.php';

$cart = new Cart($pdo);

if (isset($_POST['product_id'])) {
    $productId = $_POST['product_id'];
    $cart->addToCart($productId);
}

header("Location: index.php");
exit();


<?php
session_start();
require 'db/connect.php';
include_once 'classes/cart.class.php';

$cart = new Cart($pdo);
?>
<!DOCTYPE html>
<html>
<head>
    <title>Your Shopping Cart</title>
</head>
<body>
    <?php if ($cart->getTotalItems() > 0): ?>
        <h1>Your Cart</h1>
        <table border="1">
            <tr><th>Product</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>
            <?php foreach ($cart->getCartItems() as $item): ?>
                <tr>
                    <td><?php echo $item['name']; ?></td>
                    <td>$<?php echo number_format($item['price'], 2); ?></td>
                    <td><form action="update_cart.php" method="POST">
                        <input type="hidden" name="product_id" value="<?php echo $item['id']; ?>">
                        <input type="number" name="quantity" value="<?php echo $item['quantity']; ?>" min="1">
                        <button type="submit">Update</button>
                    </form></td>
                    <td>$<?php echo number_format($item['total'], 2); ?></td>
                    <td><a href="remove_from_cart.php?product_id=<?php echo $item['id']; ?>">Remove</a></td>
                </tr>
            <?php endforeach; ?>
        </table>
        <p>Total: $<?php echo number_format($cart->getCartTotal(), 2); ?></p>
        <form action="checkout.php" method="POST">
            <button type="submit">Checkout</button>
        </form>
    <?php else: ?>
        <h2>Your cart is empty.</h2>
    <?php endif; ?>
    <p><a href="index.php">Continue Shopping</a></p>
</body>
</html>


<?php
session_start();
require 'db/connect.php';
include_once 'classes/cart.class.php';

$cart = new Cart($pdo);

if (isset($_POST['product_id']) && isset($_POST['quantity'])) {
    $productId = $_POST['product_id'];
    $quantity = max(1, intval($_POST['quantity']));
    $cart->updateQuantity($productId, $quantity);
}

header("Location: cart.php");
exit();


<?php
session_start();
require 'db/connect.php';
include_once 'classes/cart.class.php';

$cart = new Cart($pdo);

if (isset($_GET['product_id'])) {
    $productId = $_GET['product_id'];
    $cart->removeFromCart($productId);
}

header("Location: cart.php");
exit();


<?php
session_start();
require 'db/connect.php';
include_once 'classes/cart.class.php';

$cart = new Cart($pdo);

if (isset($_POST['user_name'], $_POST['email'])) {
    $userName = htmlspecialchars($_POST['user_name']);
    $email = htmlspecialchars($_POST['email']);
    
    if ($cart->getTotalItems() > 0) {
        $totalAmount = $cart->getCartTotal();
        
        try {
            $sql = "INSERT INTO orders (user_name, email, total_amount) VALUES (?, ?, ?)";
            $stmt = $pdo->prepare($sql);
            $stmt->execute([$userName, $email, $totalAmount]);
            
            // Clear the cart
            $cart->clearCart();
            
            header("Location: order_confirmation.php?order_id=" . $pdo->lastInsertId());
            exit();
        } catch (PDOException $e) {
            die("Error processing your order: " . $e->getMessage());
        }
    } else {
        die("Your cart is empty. Please add items to your cart before checking out.");
    }
}
?>
<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
</head>
<body>
    <?php if ($cart->getTotalItems() > 0): ?>
        <h1>Complete Your Purchase</h1>
        <form action="checkout.php" method="POST">
            <p>Your cart total: $<?php echo number_format($cart->getCartTotal(), 2); ?></p>
            <label for="user_name">Name:</label><br>
            <input type="text" id="user_name" name="user_name" required><br>
            <label for="email">Email:</label><br>
            <input type="email" id="email" name="email" required><br>
            <button type="submit">Place Order</button>
        </form>
    <?php else: ?>
        <h2>Your cart is empty. Please add items to your cart before checking out.</h2>
    <?php endif; ?>
</body>
</html>


<?php
session_start();
require 'db/connect.php';

$order_id = isset($_GET['order_id']) ? intval($_GET['order_id']) : null;

if ($order_id) {
    $sql = "SELECT * FROM orders WHERE id = ?";
    $stmt = $pdo->prepare($sql);
    $stmt->execute([$order_id]);
    $order = $stmt->fetch(PDO::FETCH_ASSOC);
    
    if (!$order) {
        die("Order not found.");
    }
} else {
    die("Invalid order ID.");
}
?>
<!DOCTYPE html>
<html>
<head>
    <title>Order Confirmation</title>
</head>
<body>
    <h1>Thank you for your purchase!</h1>
    <p>Your order details:</p>
    <ul>
        <li>Name: <?php echo $order['user_name']; ?></li>
        <li>Email: <?php echo $order['email']; ?></li>
        <li>Total Amount: $<?php echo number_format($order['total_amount'], 2); ?></li>
        <li>Order Date: <?php echo date('Y-m-d H:i:s', strtotime($order['order_date'])); ?></li>
    </ul>
    <p>We will send a confirmation email to <?php echo $order['email']; ?> shortly.</p>
</body>
</html>


<?php
class Cart {
    private $pdo;
    private $cart;

    public function __construct($pdo) {
        $this->pdo = $pdo;
        session_start();
        if (!isset($_SESSION['cart'])) {
            $_SESSION['cart'] = array();
        }
        $this->cart = &$_SESSION['cart'];
    }

    public function addToCart($productId) {
        // Check if product exists
        try {
            $sql = "SELECT id FROM products WHERE id = ?";
            $stmt = $this->pdo->prepare($sql);
            $stmt->execute([$productId]);
            if ($stmt->fetch()) {
                if (isset($this->cart[$productId])) {
                    $this->cart[$productId]['quantity']++;
                } else {
                    $this->cart[$productId] = array(
                        'id' => $productId,
                        'quantity' => 1
                    );
                }
            }
        } catch (PDOException $e) {
            die("Error adding product: " . $e->getMessage());
        }
    }

    public function removeFromCart($productId) {
        if (isset($this->cart[$productId])) {
            unset($this->cart[$productId]);
        }
    }

    public function updateQuantity($productId, $quantity) {
        if ($quantity < 1) {
            $quantity = 1;
        }
        if (isset($this->cart[$productId])) {
            $this->cart[$productId]['quantity'] = $quantity;
        }
    }

    public function clearCart() {
        $this->cart = array();
    }

    public function getCartItems() {
        $items = array();
        foreach ($this->cart as $productId => $item) {
            try {
                $sql = "SELECT * FROM products WHERE id = ?";
                $stmt = $this->pdo->prepare($sql);
                $stmt->execute([$productId]);
                $product = $stmt->fetch(PDO::FETCH_ASSOC);
                
                if ($product) {
                    $items[] = array(
                        'id' => $product['id'],
                        'name' => $product['name'],
                        'price' => $product['price'],
                        'quantity' => $item['quantity'],
                        'total' => $item['quantity'] * $product['price']
                    );
                }
            } catch (PDOException $e) {
                die("Error fetching product: " . $e->getMessage());
            }
        }
        return $items;
    }

    public function getCartTotal() {
        $total = 0.00;
        foreach ($this->cart as $productId => $item) {
            try {
                $sql = "SELECT price FROM products WHERE id = ?";
                $stmt = $this->pdo->prepare($sql);
                $stmt->execute([$productId]);
                $price = $stmt->fetchColumn();
                
                if ($price !== false) {
                    $total += $item['quantity'] * $price;
                }
            } catch (PDOException $e) {
                die("Error calculating total: " . $e->getMessage());
            }
        }
        return $total;
    }

    public function getTotalItems() {
        $total = 0;
        foreach ($this->cart as $item) {
            $total += $item['quantity'];
        }
        return $total;
    }
}


<?php
try {
    $pdo = new PDO('mysql:host=localhost;dbname=your_database_name', 'username', 'password');
    $pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}


<?php
$host = "localhost";
$username = "root";
$password = "";
$dbname = "shopping_cart";

$conn = mysqli_connect($host, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}
?>


<?php include 'config.php'; ?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
    <style>
        /* Add your CSS styles here */
    </style>
</head>
<body>
    <h1>Welcome to Our Store</h1>
    
    <?php
    $sql = "SELECT * FROM products";
    $result = mysqli_query($conn, $sql);
    
    if (mysqli_num_rows($result) > 0) {
        while ($row = mysqli_fetch_assoc($result)) {
            echo "<div class='product'>";
            echo "<h2>" . $row['name'] . "</h2>";
            echo "<p>Price: $" . number_format($row['price'], 2) . "</p>";
            echo "<p>Description: " . $row['description'] . "</p>";
            echo "<form action='add_to_cart.php' method='post'>";
            echo "<input type='hidden' name='product_id' value='" . $row['id'] . "'>";
            echo "<button type='submit'>Add to Cart</button>";
            echo "</form>";
            echo "</div>";
        }
    } else {
        echo "No products available.";
    }
    ?>

    <p><a href="view_cart.php">View Cart</a></p>
</body>
</html>


<?php
session_start();
include 'config.php';

if (isset($_POST['product_id'])) {
    $product_id = $_POST['product_id'];
    
    // Check if product exists
    $sql = "SELECT * FROM products WHERE id = ?";
    $stmt = mysqli_prepare($conn, $sql);
    mysqli_stmt_bind_param($stmt, "i", $product_id);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);
    
    if (mysqli_num_rows($result) == 1) {
        $product = mysqli_fetch_assoc($result);
        
        // Add to cart
        if (!isset($_SESSION['cart'][$product_id])) {
            $_SESSION['cart'][$product_id] = array(
                'name' => $product['name'],
                'price' => $product['price'],
                'quantity' => 1
            );
        } else {
            $_SESSION['cart'][$product_id]['quantity']++;
        }
    }
}

header("Location: index.php");
exit();
?>


<?php session_start(); ?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <h1>Your Shopping Cart</h1>
    
    <?php if (!empty($_SESSION['cart'])): ?>
        <table border="1">
            <tr>
                <th>Item Name</th>
                <th>Price</th>
                <th>Quantity</th>
                <th>Total</th>
                <th>Action</th>
            </tr>
            
            <?php
            $total = 0;
            foreach ($_SESSION['cart'] as $id => $item): 
                $total += $item['price'] * $item['quantity'];
            ?>
                <tr>
                    <td><?php echo $item['name']; ?></td>
                    <td>$<?php echo number_format($item['price'], 2); ?></td>
                    <td><?php echo $item['quantity']; ?></td>
                    <td>$<?php echo number_format($item['price'] * $item['quantity'], 2); ?></td>
                    <td><a href="remove_from_cart.php?id=<?php echo $id; ?>">Remove</a></td>
                </tr>
            <?php endforeach; ?>
        </table>
        
        <h3>Total: $<?php echo number_format($total, 2); ?></h3>
        <form action="checkout.php" method="post">
            <p>Proceed to Checkout</p>
            <button type="submit">Checkout</button>
        </form>
    <?php else: ?>
        <p>Your cart is empty.</p>
        <a href="index.php">Go back to shopping</a>
    <?php endif; ?>

    <p><a href="index.php">Continue Shopping</a></p>
</body>
</html>


<?php
session_start();

if (isset($_GET['id'])) {
    $product_id = $_GET['id'];
    
    if (!empty($_SESSION['cart'][$product_id])) {
        unset($_SESSION['cart'][$product_id]);
    }
}

header("Location: view_cart.php");
exit();
?>


<?php session_start(); include 'config.php'; ?>

<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
</head>
<body>
    <?php if (!empty($_SESSION['cart'])): ?>
        <h1>Checkout</h1>
        
        <form action="process_order.php" method="post">
            <p><label>Your Name:</label><br>
            <input type="text" name="name" required></p>
            
            <p><label>Email:</label><br>
            <input type="email" name="email" required></p>
            
            <button type="submit">Place Order</button>
        </form>
    <?php else: ?>
        <p>Your cart is empty.</p>
        <a href="index.php">Go back to shopping</a>
    <?php endif; ?>
</body>
</html>


<?php session_start(); include 'config.php'; ?>

<!DOCTYPE html>
<html>
<head>
    <title>Order Confirmation</title>
</head>
<body>
    <?php if (!empty($_SESSION['cart'])):
        $name = $_POST['name'];
        $email = $_POST['email'];

        foreach ($_SESSION['cart'] as $id => $item):
            $sql = "INSERT INTO orders (product_id, user_name, user_email, quantity) 
                    VALUES (?, ?, ?, ?)";
            
            $stmt = mysqli_prepare($conn, $sql);
            mysqli_stmt_bind_param($stmt, "isss", $id, $name, $email, $item['quantity']);
            mysqli_stmt_execute($stmt);
        endforeach;

        unset($_SESSION['cart']);
    ?>

        <h2>Thank you for your order!</h2>
        <p>Your order has been received and will be processed shortly.</p>
        <a href="index.php">Continue Shopping</a>

    <?php else: ?>
        <p>Your cart is empty.</p>
        <a href="index.php">Go back to shopping</a>
    <?php endif; ?>

<?php mysqli_close($conn); ?>
</body>
</html>


<?php
// Database connection
$host = 'localhost';
$dbname = 'shopping_cart';
$username = 'root';
$password = '';

try {
    $pdo = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
}

// Start session
session_start();

// Check if cart exists in session, if not create it
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function addToCart($productId) {
    global $pdo;
    
    // Check if product exists
    $stmt = $pdo->prepare("SELECT * FROM products WHERE id = ?");
    $stmt->execute([$productId]);
    $product = $stmt->fetch(PDO::FETCH_ASSOC);
    
    if ($product) {
        $cart = $_SESSION['cart'];
        
        // Check if item already in cart
        if (isset($cart[$productId])) {
            $cart[$productId]['quantity']++;
        } else {
            $cart[$productId] = array(
                'id' => $product['id'],
                'name' => $product['name'],
                'price' => $product['price'],
                'quantity' => 1
            );
        }
        
        $_SESSION['cart'] = $cart;
    } else {
        echo "Product not found!";
    }
}

// Function to update cart item quantity
function updateCart($productId, $newQuantity) {
    global $pdo;
    
    // Check if product exists
    $stmt = $pdo->prepare("SELECT * FROM products WHERE id = ?");
    $stmt->execute([$productId]);
    $product = $stmt->fetch(PDO::FETCH_ASSOC);
    
    if ($product && isset($_SESSION['cart'][$productId])) {
        $_SESSION['cart'][$productId]['quantity'] = $newQuantity;
    }
}

// Function to delete item from cart
function deleteFromCart($productId) {
    global $pdo;
    
    // Check if product exists
    $stmt = $pdo->prepare("SELECT * FROM products WHERE id = ?");
    $stmt->execute([$productId]);
    $product = $stmt->fetch(PDO::FETCH_ASSOC);
    
    if ($product && isset($_SESSION['cart'][$productId])) {
        unset($_SESSION['cart'][$productId]);
    }
}

// Function to display cart items
function displayCart() {
    global $pdo;
    
    $cart = $_SESSION['cart'];
    $total = 0;
    
    if (!empty($cart)) {
        echo "<table>";
        echo "<tr><th>Product</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>";
        
        foreach ($cart as $item) {
            $productTotal = $item['price'] * $item['quantity'];
            $total += $productTotal;
            
            echo "<tr>";
            echo "<td>{$item['name']}</td>";
            echo "<td>$$item[price]</td>";
            echo "<td><input type='number' value='{$item['quantity']}' onChange='updateQuantity(".$item['id'].", this.value)'></td>";
            echo "<td>$$productTotal</td>";
            echo "<td><button onclick='deleteItem(".$item['id'].")'>Delete</button></td>";
            echo "</tr>";
        }
        
        echo "</table>";
        echo "<h3>Grand Total: $$total</h3>";
    } else {
        echo "Your cart is empty!";
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
    <script>
        function updateQuantity(productId, quantity) {
            if (quantity > 0) {
                // Make an AJAX call to update the quantity
                var xhr = new XMLHttpRequest();
                xhr.open('GET', 'update_cart.php?productId=' + productId + '&quantity=' + quantity);
                xhr.onreadystatechange = function() {
                    if (xhr.readyState == 4 && xhr.status == 200) {
                        location.reload(); // Refresh to show updated cart
                    }
                };
                xhr.send();
            }
        }

        function deleteItem(productId) {
            var xhr = new XMLHttpRequest();
            xhr.open('GET', 'delete_cart.php?productId=' + productId);
            xhr.onreadystatechange = function() {
                if (xhr.readyState == 4 && xhr.status == 200) {
                    location.reload(); // Refresh to show updated cart
                }
            };
            xhr.send();
        }
    </script>
</head>
<body>
    <h1>Shopping Cart</h1>
    
    <?php displayCart(); ?>

    <!-- Add more products here -->
    <div style="margin-top: 20px;">
        <h2>Available Products</h2>
        <?php
            $stmt = $pdo->query("SELECT * FROM products");
            while ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {
                echo "<div>";
                echo "<h3>{$row['name']}</h3>";
                echo "<p>Price: $$row[price]</p>";
                echo "<button onclick='addToCart($row[id])'>Add to Cart</button>";
                echo "</div>";
            }
        ?>
    </div>
</body>
</html>

// update_cart.php
<?php
session_start();
require_once 'db_connection.php';

if (isset($_GET['productId']) && isset($_GET['quantity'])) {
    $productId = $_GET['productId'];
    $newQuantity = $_GET['quantity'];
    
    if ($newQuantity < 1) {
        echo "Quantity must be at least 1!";
    } else {
        updateCart($productId, $newQuantity);
    }
}
?>

// delete_cart.php
<?php
session_start();
require_once 'db_connection.php';

if (isset($_GET['productId'])) {
    $productId = $_GET['productId'];
    deleteFromCart($productId);
}
?>


<?php
session_start();

// Initialize cart if it doesn't exist
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Function to add item to cart
function add_to_cart($item_id, $item_name, $price) {
    global $db;
    
    // Check if the item is already in the cart
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['id'] == $item_id) {
            $item['quantity']++;
            return;
        }
    }

    // If not, add the new item to the cart
    $_SESSION['cart'][] = array(
        'id' => $item_id,
        'name' => $item_name,
        'price' => $price,
        'quantity' => 1
    );
}

// Function to remove item from cart
function remove_from_cart($item_id) {
    global $db;
    
    // Loop through the cart and unset the matching item
    foreach ($_SESSION['cart'] as $key => &$item) {
        if ($item['id'] == $item_id) {
            unset($_SESSION['cart'][$key]);
            break;
        }
    }

    // Re-index the array keys
    $_SESSION['cart'] = array_values($_SESSION['cart']);
}

// Function to update item quantity in cart
function update_cart_quantity($item_id, $new_quantity) {
    foreach ($_SESSION['cart'] as &$item) {
        if ($item['id'] == $item_id && $new_quantity > 0) {
            $item['quantity'] = $new_quantity;
        }
    }
}

// Function to get items in cart
function get_cart_items() {
    return $_SESSION['cart'];
}

// Function to calculate total price of all items in cart
function calculate_total_price() {
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += ($item['price'] * $item['quantity']);
    }
    return $total;
}
?>


<?php
session_start();
include('cart_functions.php');

// Sample product data (you can replace this with your actual product database)
$products = array(
    array(
        'id' => 1,
        'name' => 'Product 1',
        'price' => 29.99
    ),
    array(
        'id' => 2,
        'name' => 'Product 2',
        'price' => 49.99
    ),
    // Add more products as needed
);
?>
<!DOCTYPE html>
<html>
<head>
    <title>Store</title>
</head>
<body>
    <h1>Welcome to our store!</h1>
    
    <?php if (!empty($products)) { ?>
        <div class="product-list">
            <?php foreach ($products as $product) { ?>
                <div class="product-item">
                    <h3><?php echo $product['name']; ?></h3>
                    <p>Price: $<?php echo number_format($product['price'], 2); ?></p>
                    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
                        <input type="hidden" name="item_id" value="<?php echo $product['id']; ?>">
                        <input type="hidden" name="item_name" value="<?php echo $product['name']; ?>">
                        <input type="hidden" name="price" value="<?php echo $product['price']; ?>">
                        <button type="submit" name="add_to_cart">Add to Cart</button>
                    </form>
                </div>
            <?php } ?>
        </div>
    <?php } else { ?>
        <p>No products available.</p>
    <?php } ?>

    <h2>Your Cart:</h2>
    <?php include('cart.php'); ?>

    <style>
        .product-item {
            border: 1px solid #ddd;
            padding: 10px;
            margin-bottom: 10px;
        }
    </style>
</body>
</html>

<?php
// Handle adding items to cart
if (isset($_POST['add_to_cart'])) {
    add_to_cart($_POST['item_id'], $_POST['item_name'], $_POST['price']);
}
?>


<?php
include('cart_functions.php');
$cart_items = get_cart_items();
$total_price = calculate_total_price();
?>

<div class="cart">
    <?php if (!empty($cart_items)) { ?>
        <table>
            <thead>
                <tr>
                    <th>Product</th>
                    <th>Quantity</th>
                    <th>Price</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
                <?php foreach ($cart_items as $item) { ?>
                    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
                        <input type="hidden" name="item_id" value="<?php echo $item['id']; ?>">
                        <tr>
                            <td><?php echo $item['name']; ?></td>
                            <td><input type="number" name="quantity" value="<?php echo $item['quantity']; ?>" min="1"></td>
                            <td>$<?php echo number_format($item['price'], 2); ?></td>
                            <td>
                                <button type="submit" name="update_cart">Update</button>
                                <a href="?remove=<?php echo $item['id']; ?>">Remove</a>
                            </td>
                        </tr>
                    </form>
                <?php } ?>
            </tbody>
        </table>
        
        <h3>Total Price: $<?php echo number_format($total_price, 2); ?></h3>
        <button onclick="window.location.href='checkout.php'">Checkout</button>
    <?php } else { ?>
        <p>Your cart is empty.</p>
    <?php } ?>
</div>

<?php
// Handle removal and update of items from cart
if (isset($_GET['remove'])) {
    remove_from_cart($_GET['remove']);
} elseif (isset($_POST['update_cart'])) {
    update_cart_quantity($_POST['item_id'], $_POST['quantity']);
}
?>


<?php
session_start();
include('cart_functions.php');

if (empty(get_cart_items())) {
    header("Location: index.php");
    exit();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
</head>
<body>
    <h1>Checkout</h1>
    
    <?php include('cart.php'); ?>

    <form action="#" method="post">
        <!-- Add your checkout form fields here -->
        <h2>Billing Information:</h2>
        <p>Name: <input type="text" name="name"></p>
        <p>Email: <input type="email" name="email"></p>
        <p>Address: <textarea name="address"></textarea></p>
        
        <button type="submit">Place Order</button>
    </form>

    <?php
    // Handle the order placement here
    if ($_SERVER['REQUEST_METHOD'] == 'POST') {
        // Process the payment and place the order
        // You can add your payment processing logic here
        echo "<h2>Thank you for your order!</h2>";
        unset($_SESSION['cart']);
        header("refresh: 3; url=index.php");
    }
    ?>
</body>
</html>


<?php
session_start();

// Function to add item to cart
function addToCart($item_id, $item_name, $price) {
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }
    
    if (!isset($_SESSION['cart'][$item_id])) {
        $_SESSION['cart'][$item_id] = array(
            'id' => $item_id,
            'name' => $item_name,
            'price' => $price,
            'quantity' => 1,
            'total' => $price * 1
        );
    } else {
        $_SESSION['cart'][$item_id]['quantity']++;
        $_SESSION['cart'][$item_id]['total'] = $_SESSION['cart'][$item_id]['price'] * $_SESSION['cart'][$item_id]['quantity'];
    }
}

// Function to update cart
function updateCart($item_id, $quantity) {
    if (isset($_SESSION['cart'][$item_id])) {
        $_SESSION['cart'][$item_id]['quantity'] = $quantity;
        $_SESSION['cart'][$item_id]['total'] = $_SESSION['cart'][$item_id]['price'] * $quantity;
    }
}

// Function to delete item from cart
function deleteFromCart($item_id) {
    if (isset($_SESSION['cart'][$item_id])) {
        unset($_SESSION['cart'][$item_id]);
    }
}

// Function to calculate total price
function totalCartPrice() {
    $total = 0;
    foreach ($_SESSION['cart'] as $item) {
        $total += $item['total'];
    }
    return $total;
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
    <style>
        .cart-container {
            width: 80%;
            margin: 0 auto;
            padding: 20px;
        }
        
        table {
            border-collapse: collapse;
            width: 100%;
        }
        
        th, td {
            border: 1px solid #ddd;
            padding: 8px;
            text-align: left;
        }
        
        th {
            background-color: #f2f2f2;
        }
        
        .remove-btn {
            background-color: #ff4444;
            color: white;
            padding: 5px 10px;
            border: none;
            border-radius: 3px;
            cursor: pointer;
        }
    </style>
</head>
<body>
    <div class="cart-container">
        <?php
        // Sample items (you can replace this with your own data source)
        $items = array(
            1 => array('id' => 1, 'name' => 'Product 1', 'price' => 25),
            2 => array('id' => 2, 'name' => 'Product 2', 'price' => 30),
            3 => array('id' => 3, 'name' => 'Product 3', 'price' => 45)
        );
        
        // Add sample item to cart
        if (isset($_GET['add'])) {
            $item_id = $_GET['add'];
            $item_name = $items[$item_id]['name'];
            $price = $items[$item_id]['price'];
            addToCart($item_id, $item_name, $price);
        }
        
        // Update cart
        if (isset($_POST['update'])) {
            foreach ($_POST['quantity'] as $item_id => $quantity) {
                updateCart($item_id, $quantity);
            }
        }
        
        // Delete item from cart
        if (isset($_GET['delete'])) {
            $item_id = $_GET['delete'];
            deleteFromCart($item_id);
        }
        ?>
        
        <h1>Shopping Cart</h1>
        
        <?php if (!empty($_SESSION['cart'])): ?>
        <form method="post">
            <table>
                <tr>
                    <th>Product Name</th>
                    <th>Price</th>
                    <th>Quantity</th>
                    <th>Total</th>
                    <th>Action</th>
                </tr>
                
                <?php foreach ($_SESSION['cart'] as $item): ?>
                <tr>
                    <td><?php echo $item['name']; ?></td>
                    <td>$<?php echo number_format($item['price'], 2); ?></td>
                    <td><input type="number" name="quantity[<?php echo $item['id']; ?>]" value="<?php echo $item['quantity']; ?>"></td>
                    <td>$<?php echo number_format($item['total'], 2); ?></td>
                    <td><a href="?delete=<?php echo $item['id']; ?>"><button class="remove-btn">Remove</button></a></td>
                </tr>
                <?php endforeach; ?>
                
                <tr>
                    <td colspan="3"></td>
                    <td><strong>Subtotal: $<?php echo number_format(totalCartPrice(), 2); ?></strong></td>
                    <td></td>
                </tr>
            </table>
            
            <input type="submit" name="update" value="Update Cart">
        </form>
        
        <a href="?add=1">Add Product 1</a> |
        <a href="?add=2">Add Product 2</a> |
        <a href="?add=3">Add Product 3</a> |
        <a href="#">Checkout</a> |
        <a href="#">View Store</a>
        
        <?php else: ?>
        <p>Your cart is empty.</p>
        <a href="#">View Store</a>
        <?php endif; ?>
    </div>
</body>
</html>


session_start();


if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}


session_start();
if (isset($_GET['item_id'])) {
    $item_id = $_GET['item_id'];
    $name = $_GET['name'];
    $price = $_GET['price'];

    if (!isset($_SESSION['cart'][$item_id])) {
        $_SESSION['cart'][$item_id] = array(
            'name' => $name,
            'price' => $price,
            'quantity' => 1
        );
    } else {
        $_SESSION['cart'][$item_id]['quantity']++;
    }
}


session_start();
echo "<h2>Your Shopping Cart</h2>";
if (empty($_SESSION['cart'])) {
    echo "Your cart is empty.";
} else {
    echo "<table border='1'>";
    echo "<tr><th>Item Name</th><th>Price</th><th>Quantity</th><th>Action</th></tr>";
    foreach ($_SESSION['cart'] as $id => $item) {
        echo "<tr>";
        echo "<td>" . $item['name'] . "</td>";
        echo "<td>$" . number_format($item['price'], 2) . "</td>";
        echo "<td><form method='post' action='update_cart.php'>";
        echo "<input type='hidden' name='item_id' value='$id'>";
        echo "<input type='number' name='quantity' min='1' value='" . $item['quantity'] . "'>";
        echo "<button type='submit'>Update</button>";
        echo "</form></td>";
        echo "<td><form method='post' action='remove_from_cart.php'>";
        echo "<input type='hidden' name='item_id' value='$id'>";
        echo "<button type='submit'>Remove</button>";
        echo "</form></td>";
        echo "</tr>";
    }
    echo "</table>";
}


session_start();
if (isset($_POST['item_id'])) {
    $item_id = $_POST['item_id'];
    $quantity = max(1, intval($_POST['quantity']));

    if (isset($_SESSION['cart'][$item_id])) {
        $_SESSION['cart'][$item_id]['quantity'] = $quantity;
    }
}
header("Location: view_cart.php");


session_start();
if (isset($_POST['item_id'])) {
    $item_id = $_POST['item_id'];
    unset($_SESSION['cart'][$item_id]);
}
header("Location: view_cart.php");


<?php
$host = "localhost";
$username = "root";
$password = "";
$dbname = "shopping_cart";

$conn = mysql_connect($host, $username, $password) or die("Connection failed: " . mysql_error());
mysql_select_db($dbname, $conn);
?>


<?php
session_start();
require_once('db_connection.php');

function addToCart($productId) {
    // Check if product exists in database
    $result = mysql_query("SELECT id FROM products WHERE id = '$productId'");
    
    if (mysql_num_rows($result) == 0) {
        die("Product does not exist.");
    }
    
    $sessionId = session_id();
    
    // Check if item already in cart
    $checkCart = mysql_query("SELECT * FROM cart WHERE product_id = '$productId' AND session_id = '$sessionId'");
    
    if (mysql_num_rows($checkCart) > 0) {
        // Update quantity
        mysql_query("UPDATE cart SET quantity = quantity + 1 WHERE product_id = '$productId' AND session_id = '$sessionId'");
    } else {
        // Add new item to cart
        mysql_query("INSERT INTO cart (product_id, quantity, session_id) VALUES ('$productId', '1', '$sessionId')");
    }
    
    echo "Item added to cart successfully!";
}

// Example usage:
if (isset($_GET['product_id'])) {
    addToCart($_GET['product_id']);
}
?>


<?php
session_start();
require_once('db_connection.php');

function viewCart() {
    $sessionId = session_id();
    
    // Get cart items
    $cartItems = mysql_query("SELECT c.id, p.name, p.price, c.quantity FROM cart c 
                            JOIN products p ON c.product_id = p.id 
                            WHERE c.session_id = '$sessionId'");
    
    if (mysql_num_rows($cartItems) == 0) {
        echo "Your cart is empty!";
        return;
    }
    
    while ($item = mysql_fetch_assoc($cartItems)) {
        $productId = $item['id'];
        $productName = $item['name'];
        $productPrice = $item['price'];
        $quantity = $item['quantity'];
        
        echo "Product ID: $productId <br>";
        echo "Name: $productName <br>";
        echo "Price: $$productPrice <br>";
        echo "Quantity: $quantity <br><br>";
    }
}

viewCart();
?>


<?php
session_start();
require_once('db_connection.php');

function updateCart($productId, $newQuantity) {
    if ($newQuantity <= 0) {
        deleteFromCart($productId);
        return;
    }
    
    $sessionId = session_id();
    
    mysql_query("UPDATE cart SET quantity = '$newQuantity' WHERE product_id = '$productId' AND session_id = '$sessionId'");
    
    echo "Quantity updated successfully!";
}

// Example usage:
if (isset($_GET['product_id']) && isset($_GET['quantity'])) {
    updateCart($_GET['product_id'], $_GET['quantity']);
}
?>


<?php
session_start();
require_once('db_connection.php');

function deleteFromCart($productId) {
    $sessionId = session_id();
    
    mysql_query("DELETE FROM cart WHERE product_id = '$productId' AND session_id = '$sessionId'");
    
    echo "Item removed from cart successfully!";
}

// Example usage:
if (isset($_GET['product_id'])) {
    deleteFromCart($_GET['product_id']);
}
?>


<?php
session_start();
require_once('db_connection.php');

function clearCart() {
    $sessionId = session_id();
    
    mysql_query("DELETE FROM cart WHERE session_id = '$sessionId'");
    
    echo "Cart cleared successfully!";
}

clearCart();
?>


<?php
session_start();

// Add item to cart
echo addToCart(1); // Assuming product ID 1 exists

// View cart contents
viewCart();

// Update quantity of an item in cart
updateCart(1, 2);

// Delete an item from cart
deleteFromCart(1);

// Clear all items from cart
clearCart();
?>


<?php
session_start();

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $product_id = $_POST['product_id'];
    $quantity = $_POST['quantity'];

    if (isset($_SESSION['cart'])) {
        // Check if product already exists in cart
        if (array_key_exists($product_id, $_SESSION['cart'])) {
            // Increment quantity
            $_SESSION['cart'][$product_id]['quantity'] += $quantity;
        } else {
            // Add new product to cart
            $_SESSION['cart'][$product_id] = array(
                'id' => $product_id,
                'quantity' => $quantity
            );
        }
    } else {
        // Initialize cart if not exists
        $_SESSION['cart'] = array(
            $product_id => array(
                'id' => $product_id,
                'quantity' => $quantity
            )
        );
    }

    header("Location: index.php?message=Product added to cart successfully!");
}
?>


<?php
session_start();
?>

<!DOCTYPE html>
<html>
<head>
    <title>View Cart</title>
    <style>
        .cart-table {
            width: 100%;
            border-collapse: collapse;
            margin: 20px;
        }
        .cart-table th, .cart-table td {
            padding: 12px;
            text-align: left;
            border-bottom: 1px solid #ddd;
        }
    </style>
</head>
<body>
    <h1>Your Shopping Cart</h1>
    <?php
    if (isset($_SESSION['cart']) && count($_SESSION['cart']) > 0) {
        echo '<table class="cart-table">';
        echo '<tr><th>Product ID</th><th>Quantity</th><th>Action</th></tr>';
        
        foreach ($_SESSION['cart'] as $item) {
            echo '<tr>';
            echo '<td>' . $item['id'] . '</td>';
            echo '<td>' . $item['quantity'] . '</td>';
            echo '<td>';
            echo '<form action="update_quantity.php" method="post">';
            echo '<input type="hidden" name="product_id" value="' . $item['id'] . '">';
            echo '<input type="number" name="new_quantity" min="1" value="' . $item['quantity'] . '" style="width:50px;">';
            echo '<button type="submit">Update</button>';
            echo '</form>';
            echo '<br>';
            echo '<a href="remove_item.php?product_id=' . $item['id'] . '">Remove</a>';
            echo '</td>';
            echo '</tr>';
        }
        
        echo '</table>';
    } else {
        echo '<p>Your cart is empty.</p>';
    }
    ?>

    <?php
    if (isset($_SESSION['cart']) && count($_SESSION['cart']) > 0) {
        // You can calculate total price here and proceed to checkout
        echo '<h2>Grand Total:</h2>';
        // Add your calculation logic here
        echo '<a href="checkout.php">Proceed to Checkout</a>';
    }
    ?>

    <br>
    <a href="index.php">Continue Shopping</a>
</body>
</html>


<?php
session_start();

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $product_id = $_POST['product_id'];
    $new_quantity = $_POST['new_quantity'];

    if (isset($_SESSION['cart'][$product_id])) {
        // Validate quantity input
        if (is_numeric($new_quantity) && $new_quantity >= 1) {
            $_SESSION['cart'][$product_id]['quantity'] = $new_quantity;
            header("Location: view_cart.php?message=Quantity updated successfully!");
        } else {
            header("Location: view_cart.php?error=Invalid quantity entered!");
        }
    } else {
        header("Location: view_cart.php?error=Product not found in cart!");
    }
}
?>


<?php
session_start();

if (isset($_GET['product_id']) && is_numeric($_GET['product_id'])) {
    $product_id = $_GET['product_id'];
    
    if (isset($_SESSION['cart'][$product_id])) {
        unset($_SESSION['cart'][$product_id]);
        
        // Re-index the cart array to maintain sequential keys
        $_SESSION['cart'] = array_values($_SESSION['cart']);
    }
}

header("Location: view_cart.php");
?>


<?php
session_start();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
</head>
<body>
    <h1>Checkout</h1>
    
    <?php
    if (!isset($_SESSION['cart']) || count($_SESSION['cart']) == 0) {
        echo '<p>Your cart is empty. Please add items to continue checkout.</p>';
        echo '<a href="index.php">Continue Shopping</a>';
        exit();
    }
    ?>

    <h2>Review Your Order:</h2>
    <?php
    foreach ($_SESSION['cart'] as $item) {
        // Here you would typically fetch product details from a database
        // For this example, we'll just display the product ID and quantity
        echo '<p>Product #' . $item['id'] . ' x' . $item['quantity'] . '</p>';
    }
    
    // Add your payment processing logic here
    ?>

    <h2>Payment Details:</h2>
    <form action="process_payment.php" method="post">
        <!-- Add your payment form fields here -->
        <input type="text" name="card_number" placeholder="Card Number" required>
        <input type="text" name="card_name" placeholder="Name on Card" required>
        <input type="text" name="expiry_date" placeholder="Expiry Date (MM/YY)" required>
        <input type="password" name="cvv" placeholder="CVV" required>
        <button type="submit">Complete Purchase</button>
    </form>

    <br>
    <a href="view_cart.php">Back to Cart</a>
</body>
</html>


<?php
session_start();

// Here you would typically implement your payment processing logic
// For this example, we'll just display a success message

unset($_SESSION['cart']); // Clear the cart after purchase

header("Location: thank_you.php");
?>


<!DOCTYPE html>
<html>
<head>
    <title>Thank You</title>
</head>
<body>
    <h1>Thank You for Your Purchase!</h1>
    <p>Your order has been processed successfully.</p>
    <a href="index.php">Continue Shopping</a>
</body>
</html>


<?php
session_start();

// Database configuration
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'shopping_cart';

$conn = mysqli_connect($host, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Product table structure:
// CREATE TABLE products (
//     id INT PRIMARY KEY AUTO_INCREMENT,
//     name VARCHAR(255),
//     price DECIMAL(10, 2),
//     description TEXT
// );

// Index.php - Display products and add to cart functionality

if (isset($_GET['action']) && $_GET['action'] == 'add_to_cart') {
    $productId = $_GET['id'];
    
    // Check if product exists in database
    $productQuery = "SELECT * FROM products WHERE id = ?";
    $stmt = mysqli_prepare($conn, $productQuery);
    mysqli_stmt_bind_param($stmt, "i", $productId);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);
    
    if (mysqli_num_rows($result) > 0) {
        $product = mysqli_fetch_assoc($result);
        
        // Add to cart
        if (!isset($_SESSION['cart'])) {
            $_SESSION['cart'] = array();
        }
        
        if (!isset($_SESSION['cart'][$productId])) {
            $_SESSION['cart'][$productId] = array(
                'id' => $productId,
                'name' => $product['name'],
                'price' => $product['price'],
                'quantity' => 1
            );
        } else {
            // Increment quantity if product already exists in cart
            $_SESSION['cart'][$productId]['quantity']++;
        }
    }
}

// Cart.php - Display cart contents

function displayCart() {
    global $conn;
    
    if (isset($_SESSION['cart'])) {
        echo "<table border='1'>";
        echo "<tr><th>Product Name</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>";
        
        $total = 0;
        foreach ($_SESSION['cart'] as $item) {
            $productId = $item['id'];
            
            // Get product details from database
            $productQuery = "SELECT * FROM products WHERE id = ?";
            $stmt = mysqli_prepare($conn, $productQuery);
            mysqli_stmt_bind_param($stmt, "i", $productId);
            mysqli_stmt_execute($stmt);
            $result = mysqli_stmt_get_result($stmt);
            
            if (mysqli_num_rows($result) > 0) {
                $product = mysqli_fetch_assoc($result);
                
                echo "<tr>";
                echo "<td>" . $product['name'] . "</td>";
                echo "<td>$" . number_format($product['price'], 2) . "</td>";
                echo "<td><input type='number' name='quantity' value='" . $item['quantity'] . "' min='1'></td>";
                echo "<td>$" . number_format($product['price'] * $item['quantity'], 2) . "</td>";
                echo "<td><a href='cart.php?action=remove&id=" . $productId . "'>Remove</a></td>";
                echo "</tr>";
                
                $total += $product['price'] * $item['quantity'];
            }
        }
        
        echo "<tr><td colspan='4'><strong>Grand Total:</strong></td><td>$" . number_format($total, 2) . "</td></tr>";
        echo "</table>";
    } else {
        echo "Your cart is empty.";
    }
}

// Remove item from cart
if (isset($_GET['action']) && $_GET['action'] == 'remove') {
    $productId = $_GET['id'];
    
    if (isset($_SESSION['cart'][$productId])) {
        unset($_SESSION['cart'][$productId]);
        
        // Re-index the array to avoid empty indices
        $_SESSION['cart'] = array_values($_SESSION['cart']);
    }
}

// Update cart quantities (to be implemented)

?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <?php displayCart(); ?>
</body>
</html>

// Checkout.php - Process checkout

if (isset($_POST['checkout'])) {
    // Implement checkout logic here
    // You would typically:
    // 1. Validate the cart is not empty
    // 2. Get user information for shipping/billing
    // 3. Save order to database
    // 4. Empty the cart
}

?>

<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
</head>
<body>
    <?php if (isset($_SESSION['cart']) && count($_SESSION['cart']) > 0): ?>
        <!-- Display checkout form -->
    <?php else: ?>
        <p>Your cart is empty. Please add items to your cart first.</p>
    <?php endif; ?>
</body>
</html>


<?php
session_start();
?>


<?php
require_once 'db_connection.php';

function get_cart_id() {
    if (!isset($_SESSION['cart_id'])) {
        $cart_id = md5(uniqid(rand(), true)); // Generate unique cart ID
        $_SESSION['cart_id'] = $cart_id;
    }
    return $_SESSION['cart_id'];
}

function add_to_cart($product_id, $price) {
    $cart_id = get_cart_id();
    
    $stmt = mysqli_prepare($conn, "SELECT id FROM cart WHERE product_id=? AND cart_id=?");
    mysqli_stmt_bind_param($stmt, "ii", $product_id, $cart_id);
    mysqli_stmt_execute($stmt);
    $result = mysqli_stmt_get_result($stmt);
    
    if (mysqli_num_rows($result) > 0) {
        $updateStmt = mysqli_prepare($conn, "UPDATE cart SET quantity=quantity+1 WHERE product_id=? AND cart_id=?");
        mysqli_stmt_bind_param($updateStmt, "ii", $product_id, $cart_id);
        mysqli_stmt_execute($updateStmt);
    } else {
        $insertStmt = mysqli_prepare($conn, "INSERT INTO cart (product_id, price, quantity, cart_id) VALUES (?, ?, 1, ?)");
        mysqli_stmt_bind_param($insertStmt, "iii", $product_id, $price, $cart_id);
        mysqli_stmt_execute($insertStmt);
    }
}

function update_cart_quantity($item_id, $quantity) {
    $cart_id = get_cart_id();
    
    if ($quantity <= 0) {
        remove_from_cart($item_id);
    } else {
        $stmt = mysqli_prepare($conn, "UPDATE cart SET quantity=? WHERE id=? AND cart_id=?");
        mysqli_stmt_bind_param($stmt, "iii", $quantity, $item_id, $cart_id);
        mysqli_stmt_execute($stmt);
    }
}

function remove_from_cart($item_id) {
    $cart_id = get_cart_id();
    
    $stmt = mysqli_prepare($conn, "DELETE FROM cart WHERE id=? AND cart_id=?");
    mysqli_stmt_bind_param($stmt, "ii", $item_id, $cart_id);
    mysqli_stmt_execute($stmt);
}

function get_cart_items() {
    $cart_id = get_cart_id();
    
    $stmt = mysqli_prepare($conn, "SELECT * FROM cart WHERE cart_id=?");
    mysqli_stmt_bind_param($stmt, "s", $cart_id);
    mysqli_stmt_execute($stmt);
    
    return mysqli_stmt_get_result($stmt);
}

function calculate_total() {
    $total = 0;
    $result = get_cart_items();
    
    while ($row = mysqli_fetch_assoc($result)) {
        $total += $row['price'] * $row['quantity'];
    }
    
    return $total;
}
?>


<?php
include_once 'cart_functions.php';

$result = get_cart_items();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
</head>
<body>
    <h2>Your Shopping Cart</h2>
    
    <?php if (mysqli_num_rows($result) > 0): ?>
        <table border="1">
            <tr>
                <th>Product ID</th>
                <th>Price</th>
                <th>Quantity</th>
                <th>Total</th>
                <th>Action</th>
            </tr>
            
            <?php while ($row = mysqli_fetch_assoc($result)): ?>
                <tr>
                    <td><?php echo $row['product_id']; ?></td>
                    <td>$<?php echo number_format($row['price'], 2); ?></td>
                    <td>
                        <form action="" method="post">
                            <input type="hidden" name="item_id" value="<?php echo $row['id']; ?>">
                            <input type="number" name="quantity" value="<?php echo $row['quantity']; ?>" min="1">
                            <button type="submit" name="update">Update</button>
                        </form>
                    </td>
                    <td>$<?php echo number_format($row['price'] * $row['quantity'], 2); ?></td>
                    <td><a href="remove_from_cart.php?item_id=<?php echo $row['id']; ?>">Remove</a></td>
                </tr>
            <?php endwhile; ?>
        </table>
        
        <h3>Total: $<?php echo number_format(calculate_total(), 2); ?></h3>
    <?php else: ?>
        <p>Your cart is empty.</p>
    <?php endif; ?>
</body>
</html>


<?php
include_once 'cart_functions.php';

if (isset($_POST['update'])) {
    $item_id = $_POST['item_id'];
    $quantity = $_POST['quantity'];
    
    update_cart_quantity($item_id, $quantity);
}

header("Location: view_cart.php");
?>


<?php
include_once 'cart_functions.php';

if (isset($_GET['item_id'])) {
    remove_from_cart($_GET['item_id']);
}

header("Location: view_cart.php");
?>


<a href="add_to_cart.php?product_id=<?php echo $product_id; ?>&price=<?php echo $price; ?>">Add to Cart</a>


<?php
include_once 'cart_functions.php';

if (isset($_GET['product_id']) && isset($_GET['price'])) {
    add_to_cart($_GET['product_id'], $_GET['price']);
}

header("Location: view_cart.php");
?>


<?php
// Initialize session
session_start();

// Database connection
include('db_connection.php');

// Products display page (products.php)
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Add to cart functionality
if (isset($_GET['action']) && $_GET['action'] == 'add') {
    $product_id = intval($_GET['id']);
    
    if (!empty($product_id)) {
        $sql = "SELECT * FROM products WHERE id=$product_id";
        $result = mysqli_query($conn, $sql);
        $product = mysqli_fetch_assoc($result);

        if ($product) {
            if (isset($_SESSION['cart'][$product_id])) {
                $_SESSION['cart'][$product_id]['quantity']++;
            } else {
                $_SESSION['cart'][$product_id] = array(
                    'id' => $product['id'],
                    'name' => $product['name'],
                    'price' => $product['price'],
                    'quantity' => 1
                );
            }
        }
    }
}

// Remove from cart functionality
if (isset($_GET['action']) && $_GET['action'] == 'remove') {
    $product_id = intval($_GET['id']);
    
    if (!empty($product_id)) {
        unset($_SESSION['cart'][$product_id]);
    }
}

// Cart display page (cart.php)
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
    <style>
        .cart {
            width: 80%;
            margin: 0 auto;
            padding: 20px;
        }
        .product {
            border-bottom: 1px solid #ddd;
            padding: 10px;
        }
        .total {
            font-weight: bold;
            padding-top: 20px;
        }
    </style>
</head>
<body>
    <div class="cart">
        <?php
        if (empty($_SESSION['cart'])) {
            echo "<h2>Your cart is empty</h2>";
        } else {
            $total = 0;
            foreach ($_SESSION['cart'] as $item) {
                $subtotal = $item['price'] * $item['quantity'];
                $total += $subtotal;
                ?>
                <div class="product">
                    <?php echo $item['name']; ?> - <?php echo $item['price']; ?> x <?php echo $item['quantity']; ?>
                    <a href="cart.php?action=remove&id=<?php echo $item['id']; ?>">Remove</a>
                </div>
                <?php
            }
            ?>
            <div class="total">
                Total: <?php echo $total; ?>
            </div>
            <?php
        }
        ?>
    </div>

    <!-- Add products here -->
    <?php
    // Display products from database
    $sql = "SELECT * FROM products";
    $result = mysqli_query($conn, $sql);

    while ($product = mysqli_fetch_assoc($result)) {
        ?>
        <div class="product">
            <?php echo $product['name']; ?> - <?php echo $product['price']; ?>
            <a href="cart.php?action=add&id=<?php echo $product['id']; ?>">Add to Cart</a>
        </div>
        <?php
    }
    ?>

</body>
</html>

// Database connection file (db_connection.php)
<?php
$servername = "localhost";
$username = "root";
$password = "";
$dbname = "my_store";

$conn = mysqli_connect($servername, $username, $password, $dbname);

if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}
?>

// Create products table in your database:
CREATE TABLE products (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255),
    price DECIMAL(10, 2)
);

// Add some sample products
INSERT INTO products (name, price) VALUES
('Product 1', 19.99),
('Product 2', 29.99),
('Product 3', 39.99);


// db_config.php
<?php
$host = "localhost";
$username = "root";
$password = "";
$db_name = "shopping_cart";

$conn = mysqli_connect($host, $username, $password, $db_name);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}
?>


// start_session.php
<?php
session_start();
?>

Add this line at the beginning of your PHP files that require session management.


// add_to_cart.php
<?php
include('db_config.php');
include('start_session.php');

if (isset($_GET['product_id'])) {
    $product_id = $_GET['product_id'];
    
    // Get product details from database
    $result = mysqli_query($conn, "SELECT * FROM products WHERE id = '$product_id'");
    $product = mysqli_fetch_assoc($result);
    
    if (!$product) {
        die("Product not found!");
    }
    
    if (isset($_SESSION['cart'])) {
        // Check if product already exists in cart
        $is_product_in_cart = false;
        foreach ($_SESSION['cart'] as $key => $value) {
            if ($value['id'] == $product_id) {
                $_SESSION['cart'][$key]['quantity'] += 1;
                $is_product_in_cart = true;
                break;
            }
        }
        
        // If product not in cart, add it
        if (!$is_product_in_cart) {
            $item = array(
                'id' => $product_id,
                'name' => $product['name'],
                'price' => $product['price'],
                'quantity' => 1,
                'image' => $product['image']
            );
            
            $_SESSION['cart'][$product_id] = $item;
        }
    } else {
        // Initialize cart if not exists
        $item = array(
            'id' => $product_id,
            'name' => $product['name'],
            'price' => $product['price'],
            'quantity' => 1,
            'image' => $product['image']
        );
        
        $_SESSION['cart'][$product_id] = $item;
    }
}

header("Location: cart.php");
?>


// cart.php
<?php
include('db_config.php');
include('start_session.php');

$cart_items = isset($_SESSION['cart']) ? $_SESSION['cart'] : array();
$total_amount = 0;
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
    <!-- Include Bootstrap CSS -->
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css">
</head>
<body>

<div class="container">
    <h2>Your Shopping Cart</h2>
    
    <?php if (!empty($cart_items)) : ?>
        <table class="table table-striped">
            <thead>
                <tr>
                    <th>Product Name</th>
                    <th>Price</th>
                    <th>Quantity</th>
                    <th>Total</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
                <?php foreach ($cart_items as $item) : ?>
                    <tr>
                        <td><?php echo $item['name']; ?></td>
                        <td>$<?php echo number_format($item['price'], 2); ?></td>
                        <td>
                            <form action="update_cart.php" method="POST">
                                <input type="hidden" name="product_id" value="<?php echo $item['id']; ?>">
                                <input type="number" name="quantity" min="1" value="<?php echo $item['quantity']; ?>" style="width: 50px;">
                                <button type="submit" class="btn btn-primary">Update</button>
                            </form>
                        </td>
                        <td>$<?php echo number_format($item['price'] * $item['quantity'], 2); ?></td>
                        <td>
                            <a href="remove_from_cart.php?product_id=<?php echo $item['id']; ?>" class="btn btn-danger">Remove</a>
                        </td>
                    </tr>
                <?php 
                    $total_amount += ($item['price'] * $item['quantity']);
                endforeach; ?>
            </tbody>
        </table>
        
        <h3>Total Amount: $<?php echo number_format($total_amount, 2); ?></h3>
        <a href="checkout.php" class="btn btn-success">Checkout</a>
    <?php else : ?>
        <p>Your cart is empty.</p>
        <a href="products.php" class="btn btn-primary">Continue Shopping</a>
    <?php endif; ?>
</div>

<!-- Include Bootstrap JS -->
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>
</body>
</html>


// update_cart.php
<?php
include('db_config.php');
include('start_session.php');

if (isset($_POST['product_id']) && isset($_POST['quantity'])) {
    $product_id = $_POST['product_id'];
    $quantity = $_POST['quantity'];
    
    if (is_numeric($quantity) && $quantity >= 1) {
        if (!empty($_SESSION['cart'][$product_id])) {
            $_SESSION['cart'][$product_id]['quantity'] = $quantity;
        }
    }
}

header("Location: cart.php");
?>


// remove_from_cart.php
<?php
include('start_session.php');

if (isset($_GET['product_id'])) {
    $product_id = $_GET['product_id'];
    
    if (!empty($_SESSION['cart'][$product_id])) {
        unset($_SESSION['cart'][$product_id]);
    }
}

header("Location: cart.php");
?>


// products.php
<?php
include('db_config.php');

$result = mysqli_query($conn, "SELECT * FROM products");
$products = array();
while ($row = mysqli_fetch_assoc($result)) {
    $products[] = $row;
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Products</title>
    <!-- Include Bootstrap CSS -->
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css">
</head>
<body>

<div class="container">
    <h2>Available Products</h2>
    
    <?php if (!empty($products)) : ?>
        <div class="row">
            <?php foreach ($products as $product) : ?>
                <div class="col-md-3">
                    <div class="thumbnail">
                        <?php if ($product['image']) : ?>
                            <img src="<?php echo $product['image']; ?>" alt="<?php echo $product['name']; ?>" style="max-height: 200px;">
                        <?php endif; ?>
                        <div class="caption">
                            <h3><?php echo $product['name']; ?></h3>
                            <p>$<?php echo number_format($product['price'], 2); ?></p>
                            <a href="add_to_cart.php?product_id=<?php echo $product['id']; ?>" class="btn btn-primary">Add to Cart</a>
                        </div>
                    </div>
                </div>
            <?php endforeach; ?>
        </div>
    <?php else : ?>
        <p>There are no products available.</p>
    <?php endif; ?>
</div>

<!-- Include Bootstrap JS -->
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>
</body>
</html>


<?php
// Connect to database
$host = 'localhost';
$username = 'root';
$password = '';
$dbname = 'shopping_cart';

$conn = mysqli_connect($host, $username, $password, $dbname);

if (!$conn) {
    die('Connection failed: ' . mysqli_connect_error());
}

// Query products
$sql = "SELECT * FROM products";
$result = mysqli_query($conn, $sql);

if (mysqli_num_rows($result) > 0) {
    while ($row = mysqli_fetch_assoc($result)) {
        echo "<div class='product'>";
        echo "<h2>" . $row['name'] . "</h2>";
        echo "<p>Price: $" . number_format($row['price'], 2) . "</p>";
        echo "<p>Description: " . $row['description'] . "</p>";
        echo "<form action='add_to_cart.php' method='post'>";
        echo "<input type='hidden' name='product_id' value='" . $row['id'] . "'>";
        echo "<input type='number' name='quantity' min='1' max='" . $row['stock'] . "' value='1'>";
        echo "<button type='submit'>Add to Cart</button>";
        echo "</form>";
        echo "</div>";
    }
} else {
    echo "No products found.";
}

mysqli_close($conn);
?>


<?php
session_start();

if (isset($_POST['product_id']) && isset($_POST['quantity'])) {
    $product_id = $_POST['product_id'];
    $quantity = $_POST['quantity'];

    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }

    if (array_key_exists($product_id, $_SESSION['cart'])) {
        // Update quantity
        $_SESSION['cart'][$product_id]['quantity'] += $quantity;
    } else {
        // Add new item
        $conn = mysqli_connect('localhost', 'root', '', 'shopping_cart');
        
        $sql = "SELECT * FROM products WHERE id = ?";
        $stmt = mysqli_prepare($conn, $sql);
        mysqli_stmt_bind_param($stmt, "i", $product_id);
        mysqli_stmt_execute($stmt);
        $result = mysqli_stmt_get_result($stmt);

        if ($row = mysqli_fetch_assoc($result)) {
            $_SESSION['cart'][$product_id] = array(
                'name' => $row['name'],
                'price' => $row['price'],
                'quantity' => $quantity
            );
        }

        mysqli_close($conn);
    }
}

header("Location: view_cart.php");
exit();
?>


<?php
session_start();

if (isset($_SESSION['cart'])) {
    $total = 0;
    echo "<h2>Your Cart</h2>";
    echo "<table>";
    echo "<tr><th>Product</th><th>Price</th><th>Quantity</th><th>Total</th><th>Action</th></tr>";

    foreach ($_SESSION['cart'] as $product_id => $item) {
        $total_item = $item['price'] * $item['quantity'];
        $total += $total_item;
        
        echo "<tr>";
        echo "<td>" . $item['name'] . "</td>";
        echo "<td>$" . number_format($item['price'], 2) . "</td>";
        echo "<td><form action='update_cart.php' method='post'><input type='hidden' name='product_id' value='" . $product_id . "'>";
        echo "<input type='number' name='quantity' min='1' max='99' value='" . $item['quantity'] . "' style='width:50px;'>";
        echo "</form></td>";
        echo "<td>$" . number_format($total_item, 2) . "</td>";
        echo "<td><a href='remove_from_cart.php?product_id=" . $product_id . "'>Remove</a></td>";
        echo "</tr>";
    }

    echo "<tr><td colspan='4'><strong>Total:</strong></td><td>$" . number_format($total, 2) . "</td></tr>";
    echo "</table>";
} else {
    echo "<p>Your cart is empty.</p>";
}
?>


<?php
session_start();

if (isset($_POST['product_id']) && isset($_POST['quantity'])) {
    $product_id = $_POST['product_id'];
    $quantity = max(1, intval($_POST['quantity'])); // Ensure at least 1

    if (isset($_SESSION['cart'][$product_id])) {
        $_SESSION['cart'][$product_id]['quantity'] = $quantity;
    }
}

header("Location: view_cart.php");
exit();
?>


<?php
session_start();

if (isset($_GET['product_id'])) {
    $product_id = intval($_GET['product_id']);
    
    if (isset($_SESSION['cart'][$product_id])) {
        unset($_SESSION['cart'][$product_id]);
    }
}

header("Location: view_cart.php");
exit();
?>


<?php
session_start();

if (!empty($_SESSION['cart'])) {
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        // Process the order
        $conn = mysqli_connect('localhost', 'root', '', 'shopping_cart');

        foreach ($_SESSION['cart'] as $product_id => $item) {
            $sql = "INSERT INTO orders (user_id, product_id, quantity, total_price, order_status) VALUES (?, ?, ?, ?, ?)";
            $stmt = mysqli_prepare($conn, $sql);
            mysqli_stmt_bind_param($stmt, "iisss", 1, $product_id, $item['quantity'], ($item['price'] * $item['quantity']), 'pending');
            mysqli_stmt_execute($stmt);
        }

        unset($_SESSION['cart']);
        
        mysqli_close($conn);
    }
?>


<?php
// Initialize session
session_start();

// Check if cart is already set in the session, if not, initialize it
if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}

// Sample products (you can replace this with a database)
$products = array(
    1 => array('name' => 'Product 1', 'price' => 19.99),
    2 => array('name' => 'Product 2', 'price' => 29.99),
    3 => array('name' => 'Product 3', 'price' => 9.99)
);

// Add to cart functionality
if (isset($_POST['add_to_cart'])) {
    $productId = intval($_POST['product_id']);
    $quantity = isset($_POST['quantity']) ? intval($_POST['quantity']) : 1;

    if (!empty($products[$productId])) {
        // Check if product already exists in the cart
        if (isset($_SESSION['cart'][$productId])) {
            // Update quantity
            $_SESSION['cart'][$productId]['quantity'] += $quantity;
        } else {
            // Add new product to cart
            $_SESSION['cart'][$productId] = array(
                'name' => $products[$productId]['name'],
                'price' => $products[$productId]['price'],
                'quantity' => $quantity
            );
        }
    }
}

// Update cart functionality
if (isset($_POST['update_cart'])) {
    foreach ($_SESSION['cart'] as $id => $item) {
        if (isset($_POST["quantity_$id"])) {
            $newQuantity = intval($_POST["quantity_$id"]);
            if ($newQuantity > 0) {
                $_SESSION['cart'][$id]['quantity'] = $newQuantity;
            }
        }
    }
}

// Clear cart functionality
if (isset($_GET['clear_cart'])) {
    unset($_SESSION['cart']);
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Shopping Cart</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
</head>
<body>

<nav class="navbar navbar-expand-lg navbar-light bg-light">
    <div class="container">
        <a class="navbar-brand" href="#">Shopping Cart</a>
        <button class="btn btn-primary" onclick="window.location.href='cart.php'">View Cart</button>
    </div>
</nav>

<div class="container mt-4">

<?php
// Display products
echo "<h2>Products Available</h2>";
echo "<div class='row'>";
foreach ($products as $id => $product) {
    echo "<div class='col-md-3 mb-4'>";
    echo "<div class='card'>";
    echo "<div class='card-body'>";
    echo "<h5 class='card-title'>".$product['name']."</h5>";
    echo "<p class='card-text'>$".$product['price']."</p>";
    echo "<form method='post'>";
    echo "<input type='hidden' name='product_id' value='".$id."'>";
    echo "<input type='number' min='1' name='quantity' value='1'>";
    echo "<button type='submit' name='add_to_cart' class='btn btn-primary'>Add to Cart</button>";
    echo "</form>";
    echo "</div></div></div>";
}
echo "</div>";

// Display cart
if (!empty($_SESSION['cart'])) {
    $cart = $_SESSION['cart'];
    $subtotal = 0;
    
    echo "<h2>Your Cart</h2>";
    echo "<form method='post'>";
    echo "<table class='table'>";
    echo "<thead><tr><th>Product</th><th>Price</th><th>Quantity</th><th>Total</th></tr></thead>";
    foreach ($cart as $id => $item) {
        $total = $item['price'] * $item['quantity'];
        $subtotal += $total;
        
        echo "<tr>";
        echo "<td>".$item['name']."</td>";
        echo "<td>$".$item['price']."</td>";
        echo "<td><input type='number' min='1' name='quantity_$id' value='".$item['quantity']."'></td>";
        echo "<td>$".number_format($total, 2)."</td>";
        echo "</tr>";
    }
    echo "</table>";
    echo "<button type='submit' name='update_cart' class='btn btn-primary mr-2'>Update Cart</button>";
    echo "<a href='cart.php?clear_cart=1' class='btn btn-danger mr-2'>Clear Cart</a>";
    echo "<a href='checkout.php' class='btn btn-success'>Checkout</a>";
    echo "</form>";
} else {
    echo "<p>Your cart is empty.</p>";
}
?>

</div>

<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
</body>
</html>


<?php
session_start();
include('db_connection.php');

$sql = "SELECT * FROM products";
$result = $conn->query($sql);
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
    <link rel="stylesheet" type="text/css" href="style.css">
</head>
<body>
    <h1>Welcome to Our Store</h1>
    
    <?php
    if ($result->num_rows > 0) {
        while($row = $result->fetch_assoc()) {
            echo '
                <div class="product">
                    <img src="images/'.$row['image'].'" alt="'.$row['name'].'">
                    <h3>'.$row['name'].'</h3>
                    <p>$'.$row['price'].'</p>
                    <form action="add_to_cart.php" method="post">
                        <input type="hidden" name="product_id" value="'.$row['id'].'">
                        <button type="submit">Add to Cart</button>
                    </form>
                </div>';
        }
    } else {
        echo "No products available.";
    }
    ?>
    
    <a href="cart.php" style="float: right;">View Cart</a>
</body>
</html>

<?php
$conn->close();
?>


<?php
session_start();

if (isset($_POST['product_id'])) {
    $product_id = $_POST['product_id'];
    
    if (!isset($_SESSION['cart'])) {
        $_SESSION['cart'] = array();
    }
    
    if (array_key_exists($product_id, $_SESSION['cart'])) {
        $_SESSION['cart'][$product_id]['quantity']++;
    } else {
        $conn = new mysqli('localhost', 'root', '', 'shopping_cart');
        $sql = "SELECT * FROM products WHERE id = '$product_id'";
        $result = $conn->query($sql);
        $product = $result->fetch_assoc();
        
        $_SESSION['cart'][$product_id] = array(
            'name' => $product['name'],
            'price' => $product['price'],
            'quantity' => 1
        );
    }
}

header('Location: index.php');
?>


<?php
session_start();
include('db_connection.php');

if (!isset($_SESSION['cart'])) {
    $_SESSION['cart'] = array();
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
    <link rel="stylesheet" type="text/css" href="style.css">
</head>
<body>
    <?php if (empty($_SESSION['cart'])) { ?>
        <h2>Your cart is empty!</h2>
        <a href="index.php">Back to Shop</a>
    <?php } else { ?>
        <h2>Your Cart</h2>
        
        <table>
            <tr>
                <th>Product Name</th>
                <th>Price</th>
                <th>Quantity</th>
                <th>Total</th>
                <th>Action</th>
            </tr>
            
            <?php foreach ($_SESSION['cart'] as $product_id => $item) { ?>
                <tr>
                    <td><?php echo $item['name']; ?></td>
                    <td>$<?php echo number_format($item['price'], 2); ?></td>
                    <td><input type="number" name="quantity" value="<?php echo $item['quantity']; ?>"></td>
                    <td>$<?php echo number_format($item['price'] * $item['quantity'], 2); ?></td>
                    <td>
                        <form action="remove_from_cart.php" method="post">
                            <input type="hidden" name="product_id" value="<?php echo $product_id; ?>">
                            <button type="submit">Remove</button>
                        </form>
                    </td>
                </tr>
            <?php } ?>
        </table>
        
        <a href="checkout.php" class="checkout-button">Proceed to Checkout</a>
    <?php } ?>
</body>
</html>


<?php
session_start();

if (isset($_POST['product_id'])) {
    $product_id = $_POST['product_id'];
    
    if (!empty($_SESSION['cart'][$product_id])) {
        unset($_SESSION['cart'][$product_id]);
    }
}

header('Location: cart.php');
?>


<?php
session_start();
include('db_connection.php');

if (empty($_SESSION['cart'])) {
    header('Location: index.php');
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Checkout</title>
    <link rel="stylesheet" type="text/css" href="style.css">
</head>
<body>
    <?php if (!isset($_POST['submit'])) { ?>
        <h2>Checkout</h2>
        
        <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
            <label for="name">Name:</label>
            <input type="text" id="name" name="name" required><br><br>
            
            <label for="email">Email:</label>
            <input type="email" id="email" name="email" required><br><br>
            
            <label for="address">Address:</label>
            <textarea id="address" name="address" rows="3" required></textarea><br><br>
            
            <input type="submit" name="submit" value="Place Order">
        </form>
    <?php } else { 
        $total = 0;
        
        foreach ($_SESSION['cart'] as $item) {
            $total += $item['price'] * $item['quantity'];
        }
        
        $sql = "INSERT INTO orders (user_name, email, address, total) VALUES (?, ?, ?, ?)";
        $stmt = $conn->prepare($sql);
        $stmt->bind_param("sssd", $_POST['name'], $_POST['email'], $_POST['address'], $total);
        $stmt->execute();
        
        session_unset();
        session_destroy();
        
        echo "<h2>Order placed successfully!</h2>";
        header('Location: index.php');
    } ?>
</body>
</html>

<?php
$conn->close();
?>


<?php
$servername = "localhost";
$username = "root";
$password = "";
$dbname = "shopping_cart";

$conn = new mysqli($servername, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}
?>


<?php
session_start();

class Cart {
    private $cart = array();
    
    public function __construct() {
        if (isset($_SESSION['cart'])) {
            $this->cart = $_SESSION['cart'];
        } else {
            $this->cart = array();
        }
    }

    // Add item to cart
    public function addItem($item_id, $name, $price) {
        if (!isset($this->cart[$item_id])) {
            $this->cart[$item_id] = array(
                'id' => $item_id,
                'name' => $name,
                'price' => $price,
                'quantity' => 1
            );
        } else {
            // If item already exists, increment quantity
            $this->cart[$item_id]['quantity']++;
        }
        $this->saveCart();
    }

    // Remove item from cart
    public function removeItem($item_id) {
        if (isset($this->cart[$item_id])) {
            unset($this->cart[$item_id]);
        }
        $this->saveCart();
    }

    // Update item quantity
    public function updateQuantity($item_id, $quantity) {
        if ($quantity > 0 && isset($this->cart[$item_id])) {
            $this->cart[$item_id]['quantity'] = $quantity;
        } elseif ($quantity <= 0 && isset($this->cart[$item_id])) {
            unset($this->cart[$item_id]);
        }
        $this->saveCart();
    }

    // Get total price of cart
    public function getTotalPrice() {
        $total = 0;
        foreach ($this->cart as $item) {
            $total += ($item['price'] * $item['quantity']);
        }
        return $total;
    }

    // Save cart to session
    private function saveCart() {
        $_SESSION['cart'] = $this->cart;
    }

    // Get all items in cart
    public function getItems() {
        return $this->cart;
    }
}

// Example usage:

// Initialize cart
$cart = new Cart();

// Add item to cart
$cart->addItem(1, "Product 1", 29.99);
$cart->addItem(2, "Product 2", 49.99);

// Update quantity
$cart->updateQuantity(1, 3);

// Remove item
$cart->removeItem(2);

// Display cart items and total price
echo "<pre>";
print_r($cart->getItems());
echo "</pre>";
echo "Total Price: $" . $cart->getTotalPrice();
?>

