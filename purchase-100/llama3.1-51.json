{"prompt": "Create a purchase cart functionality using php", "llm_output": "Here is an example of how you can create a simple purchase cart functionality using PHP:\n\n**cart.php**\n```php\n<?php\n// Define the cart array to store items\n$cart = array();\n\n// Function to add item to cart\nfunction add_item_to_cart($item_id, $quantity) {\n    global $cart;\n    \n    // Check if item already exists in cart\n    foreach ($cart as &$item) {\n        if ($item['id'] == $item_id) {\n            // If item exists, increment quantity\n            $item['quantity'] += $quantity;\n            return;\n        }\n    }\n    \n    // If item does not exist, add it to cart\n    $cart[] = array('id' => $item_id, 'quantity' => $quantity);\n}\n\n// Function to remove item from cart\nfunction remove_item_from_cart($item_id) {\n    global $cart;\n    \n    // Find index of item in cart\n    foreach ($cart as &$item) {\n        if ($item['id'] == $item_id) {\n            // Remove item from cart\n            unset($item);\n            return;\n        }\n    }\n}\n\n// Function to update quantity of item in cart\nfunction update_item_quantity($item_id, $new_quantity) {\n    global $cart;\n    \n    // Find index of item in cart\n    foreach ($cart as &$item) {\n        if ($item['id'] == $item_id) {\n            // Update quantity\n            $item['quantity'] = $new_quantity;\n            return;\n        }\n    }\n}\n\n// Function to display cart contents\nfunction display_cart() {\n    global $cart;\n    \n    echo \"<h2>Cart Contents:</h2>\";\n    echo \"<table border='1'>\";\n    echo \"<tr><th>Item ID</th><th>Quantity</th></tr>\";\n    \n    foreach ($cart as $item) {\n        echo \"<tr><td>\" . $item['id'] . \"</td><td>\" . $item['quantity'] . \"</td></tr>\";\n    }\n    \n    echo \"</table>\";\n}\n\n// Function to calculate total cost of cart\nfunction calculate_total_cost() {\n    global $cart;\n    \n    $total_cost = 0;\n    \n    // Assume item prices are stored in an array (replace with actual data)\n    $item_prices = array(\n        'item1' => 9.99,\n        'item2' => 19.99,\n        'item3' => 29.99\n    );\n    \n    foreach ($cart as $item) {\n        $total_cost += $item['quantity'] * $item_prices[$item['id']];\n    }\n    \n    return $total_cost;\n}\n\n// Test the functions\nadd_item_to_cart('item1', 2);\nadd_item_to_cart('item2', 3);\ndisplay_cart();\necho \"<p>Total Cost: $\" . calculate_total_cost() . \"</p>\";\nremove_item_from_cart('item2');\nupdate_item_quantity('item1', 4);\ndisplay_cart();\necho \"<p>Total Cost: $\" . calculate_total_cost() . \"</p>\";\n\n?>\n```\nThis example defines an array `$cart` to store items, with each item represented by an associative array containing the `id` and `quantity`. The code includes functions for adding, removing, and updating items in the cart, as well as displaying the cart contents and calculating the total cost of the cart.\n\nNote that this is a very basic example, and you may want to add additional features such as:\n\n* User authentication and session management\n* Validation and sanitization of user input\n* More robust error handling and debugging\n* Integration with a database or other data storage system\n* Support for multiple currencies or payment methods\n\nAlso, the item prices are hardcoded in this example. You should replace them with actual prices from your database or data storage.\n\nI hope this helps! Let me know if you have any questions or need further assistance.", "code_blocks": ["```php\n<?php\n// Define the cart array to store items\n$cart = array();\n\n// Function to add item to cart\nfunction add_item_to_cart($item_id, $quantity) {\n    global $cart;\n    \n    // Check if item already exists in cart\n    foreach ($cart as &$item) {\n        if ($item['id'] == $item_id) {\n            // If item exists, increment quantity\n            $item['quantity'] += $quantity;\n            return;\n        }\n    }\n    \n    // If item does not exist, add it to cart\n    $cart[] = array('id' => $item_id, 'quantity' => $quantity);\n}\n\n// Function to remove item from cart\nfunction remove_item_from_cart($item_id) {\n    global $cart;\n    \n    // Find index of item in cart\n    foreach ($cart as &$item) {\n        if ($item['id'] == $item_id) {\n            // Remove item from cart\n            unset($item);\n            return;\n        }\n    }\n}\n\n// Function to update quantity of item in cart\nfunction update_item_quantity($item_id, $new_quantity) {\n    global $cart;\n    \n    // Find index of item in cart\n    foreach ($cart as &$item) {\n        if ($item['id'] == $item_id) {\n            // Update quantity\n            $item['quantity'] = $new_quantity;\n            return;\n        }\n    }\n}\n\n// Function to display cart contents\nfunction display_cart() {\n    global $cart;\n    \n    echo \"<h2>Cart Contents:</h2>\";\n    echo \"<table border='1'>\";\n    echo \"<tr><th>Item ID</th><th>Quantity</th></tr>\";\n    \n    foreach ($cart as $item) {\n        echo \"<tr><td>\" . $item['id'] . \"</td><td>\" . $item['quantity'] . \"</td></tr>\";\n    }\n    \n    echo \"</table>\";\n}\n\n// Function to calculate total cost of cart\nfunction calculate_total_cost() {\n    global $cart;\n    \n    $total_cost = 0;\n    \n    // Assume item prices are stored in an array (replace with actual data)\n    $item_prices = array(\n        'item1' => 9.99,\n        'item2' => 19.99,\n        'item3' => 29.99\n    );\n    \n    foreach ($cart as $item) {\n        $total_cost += $item['quantity'] * $item_prices[$item['id']];\n    }\n    \n    return $total_cost;\n}\n\n// Test the functions\nadd_item_to_cart('item1', 2);\nadd_item_to_cart('item2', 3);\ndisplay_cart();\necho \"<p>Total Cost: $\" . calculate_total_cost() . \"</p>\";\nremove_item_from_cart('item2');\nupdate_item_quantity('item1', 4);\ndisplay_cart();\necho \"<p>Total Cost: $\" . calculate_total_cost() . \"</p>\";\n\n?>\n```"]}
