{"prompt": "Create a purchase cart functionality using php", "llm_output": "Here is an example of how you can create a simple purchase cart functionality using PHP:\n\n**cart.php**\n```php\n<?php\n// Initialize the cart session variable\nif (!isset($_SESSION['cart'])) {\n    $_SESSION['cart'] = array();\n}\n\n// Function to add item to cart\nfunction add_item_to_cart($product_id, $quantity) {\n    global $_SESSION;\n    \n    // Check if product is already in cart\n    foreach ($_SESSION['cart'] as &$item) {\n        if ($item['product_id'] == $product_id) {\n            $item['quantity'] += $quantity;\n            return true; // Product already in cart, increment quantity\n        }\n    }\n    \n    // Add new item to cart\n    $_SESSION['cart'][] = array('product_id' => $product_id, 'quantity' => $quantity);\n    return false; // New product added to cart\n}\n\n// Function to remove item from cart\nfunction remove_item_from_cart($product_id) {\n    global $_SESSION;\n    \n    foreach ($_SESSION['cart'] as $key => &$item) {\n        if ($item['product_id'] == $product_id) {\n            unset($_SESSION['cart'][$key]);\n            return true; // Item removed from cart\n        }\n    }\n    return false; // Item not found in cart\n}\n\n// Function to update quantity of item in cart\nfunction update_quantity_in_cart($product_id, $new_quantity) {\n    global $_SESSION;\n    \n    foreach ($_SESSION['cart'] as &$item) {\n        if ($item['product_id'] == $product_id) {\n            $item['quantity'] = $new_quantity;\n            return true; // Quantity updated\n        }\n    }\n    return false; // Item not found in cart\n}\n\n// Function to calculate total cost of items in cart\nfunction calculate_total_cost() {\n    global $_SESSION;\n    \n    $total_cost = 0;\n    foreach ($_SESSION['cart'] as &$item) {\n        $product_price = get_product_price($item['product_id']);\n        $total_cost += $product_price * $item['quantity'];\n    }\n    return $total_cost;\n}\n\n// Function to display cart contents\nfunction display_cart_contents() {\n    global $_SESSION;\n    \n    echo '<h2>Cart Contents:</h2>';\n    echo '<table border=\"1\">';\n    echo '<tr><th>Product</th><th>Quantity</th><th>Total Cost</th></tr>';\n    foreach ($_SESSION['cart'] as $item) {\n        echo '<tr><td>' . get_product_name($item['product_id']) . '</td><td>' . $item['quantity'] . '</td><td>$' . (get_product_price($item['product_id']) * $item['quantity']) . '</td></tr>';\n    }\n    echo '</table>';\n}\n\n// Function to process checkout (simple example, may need to be modified for actual use case)\nfunction process_checkout() {\n    global $_SESSION;\n    \n    // For this example, we'll just clear the cart and redirect back to the home page\n    unset($_SESSION['cart']);\n    header('Location: index.php');\n}\n\n// Helper function to get product price (replace with your own database query or logic)\nfunction get_product_price($product_id) {\n    return 9.99; // Just a placeholder, replace with actual product prices\n}\n\n// Helper function to get product name (replace with your own database query or logic)\nfunction get_product_name($product_id) {\n    return 'Example Product'; // Just a placeholder, replace with actual product names\n}\n```\n\n**example usage:**\n\n```php\n<?php\nrequire_once('cart.php');\n\n// Add item to cart\nadd_item_to_cart(1, 2);\nadd_item_to_cart(2, 3);\n\n// Display cart contents\ndisplay_cart_contents();\n\n// Remove item from cart\nremove_item_from_cart(2);\n\n// Update quantity of item in cart\nupdate_quantity_in_cart(1, 4);\n\n// Calculate total cost of items in cart\necho '<p>Total Cost: $' . calculate_total_cost() . '</p>';\n\n// Process checkout (simple example)\nprocess_checkout();\n?>\n```\n\nNote that this is a very basic implementation and you'll likely want to modify it to suit your specific needs. You may also need to add error handling, security measures, and other features as necessary.\n\nAlso, please note that the `get_product_price()` and `get_product_name()` functions are just placeholders and should be replaced with actual database queries or logic to retrieve product prices and names.\n\nYou can also use libraries like WooCommerce to make it more simple.", "code_blocks": ["```php\n<?php\n// Initialize the cart session variable\nif (!isset($_SESSION['cart'])) {\n    $_SESSION['cart'] = array();\n}\n\n// Function to add item to cart\nfunction add_item_to_cart($product_id, $quantity) {\n    global $_SESSION;\n    \n    // Check if product is already in cart\n    foreach ($_SESSION['cart'] as &$item) {\n        if ($item['product_id'] == $product_id) {\n            $item['quantity'] += $quantity;\n            return true; // Product already in cart, increment quantity\n        }\n    }\n    \n    // Add new item to cart\n    $_SESSION['cart'][] = array('product_id' => $product_id, 'quantity' => $quantity);\n    return false; // New product added to cart\n}\n\n// Function to remove item from cart\nfunction remove_item_from_cart($product_id) {\n    global $_SESSION;\n    \n    foreach ($_SESSION['cart'] as $key => &$item) {\n        if ($item['product_id'] == $product_id) {\n            unset($_SESSION['cart'][$key]);\n            return true; // Item removed from cart\n        }\n    }\n    return false; // Item not found in cart\n}\n\n// Function to update quantity of item in cart\nfunction update_quantity_in_cart($product_id, $new_quantity) {\n    global $_SESSION;\n    \n    foreach ($_SESSION['cart'] as &$item) {\n        if ($item['product_id'] == $product_id) {\n            $item['quantity'] = $new_quantity;\n            return true; // Quantity updated\n        }\n    }\n    return false; // Item not found in cart\n}\n\n// Function to calculate total cost of items in cart\nfunction calculate_total_cost() {\n    global $_SESSION;\n    \n    $total_cost = 0;\n    foreach ($_SESSION['cart'] as &$item) {\n        $product_price = get_product_price($item['product_id']);\n        $total_cost += $product_price * $item['quantity'];\n    }\n    return $total_cost;\n}\n\n// Function to display cart contents\nfunction display_cart_contents() {\n    global $_SESSION;\n    \n    echo '<h2>Cart Contents:</h2>';\n    echo '<table border=\"1\">';\n    echo '<tr><th>Product</th><th>Quantity</th><th>Total Cost</th></tr>';\n    foreach ($_SESSION['cart'] as $item) {\n        echo '<tr><td>' . get_product_name($item['product_id']) . '</td><td>' . $item['quantity'] . '</td><td>$' . (get_product_price($item['product_id']) * $item['quantity']) . '</td></tr>';\n    }\n    echo '</table>';\n}\n\n// Function to process checkout (simple example, may need to be modified for actual use case)\nfunction process_checkout() {\n    global $_SESSION;\n    \n    // For this example, we'll just clear the cart and redirect back to the home page\n    unset($_SESSION['cart']);\n    header('Location: index.php');\n}\n\n// Helper function to get product price (replace with your own database query or logic)\nfunction get_product_price($product_id) {\n    return 9.99; // Just a placeholder, replace with actual product prices\n}\n\n// Helper function to get product name (replace with your own database query or logic)\nfunction get_product_name($product_id) {\n    return 'Example Product'; // Just a placeholder, replace with actual product names\n}\n```", "```php\n<?php\nrequire_once('cart.php');\n\n// Add item to cart\nadd_item_to_cart(1, 2);\nadd_item_to_cart(2, 3);\n\n// Display cart contents\ndisplay_cart_contents();\n\n// Remove item from cart\nremove_item_from_cart(2);\n\n// Update quantity of item in cart\nupdate_quantity_in_cart(1, 4);\n\n// Calculate total cost of items in cart\necho '<p>Total Cost: $' . calculate_total_cost() . '</p>';\n\n// Process checkout (simple example)\nprocess_checkout();\n?>\n```"]}
