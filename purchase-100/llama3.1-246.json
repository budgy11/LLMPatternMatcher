{"prompt": "Create a purchase functionality using php", "llm_output": "Here is an example of a basic purchase functionality in PHP, including user authentication and database interaction:\n\n**Database Schema**\n\nFor this example, we'll use a simple schema with three tables: `users`, `products`, and `orders`.\n\n```sql\nCREATE TABLE users (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  username VARCHAR(255) NOT NULL,\n  password VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE products (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  name VARCHAR(255) NOT NULL,\n  price DECIMAL(10,2) NOT NULL\n);\n\nCREATE TABLE orders (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  user_id INT NOT NULL,\n  product_id INT NOT NULL,\n  quantity INT NOT NULL,\n  total DECIMAL(10,2) NOT NULL,\n  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n```\n\n**PHP Code**\n\nWe'll use the following PHP classes to handle user authentication and purchase functionality:\n\n```php\n// auth.php (user authentication)\nclass Auth {\n  private $db;\n\n  public function __construct() {\n    $this->db = new PDO('mysql:host=localhost;dbname=your_database', 'your_username', 'your_password');\n  }\n\n  public function login($username, $password) {\n    // query to retrieve user data\n    $query = \"SELECT * FROM users WHERE username = :username AND password = :password\";\n    $stmt = $this->db->prepare($query);\n    $stmt->bindParam(':username', $username);\n    $stmt->bindParam(':password', $password);\n    $stmt->execute();\n    return $stmt->fetch();\n  }\n}\n\n// product.php (product data)\nclass Product {\n  private $id;\n  private $name;\n  private $price;\n\n  public function __construct($id, $name, $price) {\n    $this->id = $id;\n    $this->name = $name;\n    $this->price = $price;\n  }\n\n  public function getId() {\n    return $this->id;\n  }\n\n  public function getName() {\n    return $this->name;\n  }\n\n  public function getPrice() {\n    return $this->price;\n  }\n}\n\n// cart.php (purchase functionality)\nclass Cart {\n  private $db;\n\n  public function __construct() {\n    $this->db = new PDO('mysql:host=localhost;dbname=your_database', 'your_username', 'your_password');\n  }\n\n  public function addProduct($productId, $quantity) {\n    // query to insert product into order table\n    $query = \"INSERT INTO orders (user_id, product_id, quantity, total) VALUES (:user_id, :product_id, :quantity, :total)\";\n    $stmt = $this->db->prepare($query);\n    $user = Auth::getInstance()->getUser();\n    $productId = $productId;\n    $quantity = $quantity;\n    // calculate total price\n    $total = $quantity * Product::getInstance($productId)->getPrice();\n    $stmt->bindParam(':user_id', $user['id']);\n    $stmt->bindParam(':product_id', $productId);\n    $stmt->bindParam(':quantity', $quantity);\n    $stmt->bindParam(':total', $total);\n    $stmt->execute();\n  }\n\n  public function viewCart() {\n    // query to retrieve order data\n    $query = \"SELECT * FROM orders WHERE user_id = :user_id\";\n    $stmt = $this->db->prepare($query);\n    $user = Auth::getInstance()->getUser();\n    $stmt->bindParam(':user_id', $user['id']);\n    $stmt->execute();\n    return $stmt->fetchAll();\n  }\n}\n```\n\n**Example Usage**\n\nTo use the purchase functionality, you'll need to:\n\n1. Create an instance of the `Auth` class and authenticate the user.\n2. Add products to the cart using the `addProduct` method in the `Cart` class.\n3. View the cart contents using the `viewCart` method in the `Cart` class.\n\nHere's a basic example:\n```php\n// login.php (example usage)\nrequire_once 'auth.php';\n$auth = new Auth();\n$user = $auth->login('username', 'password');\n\n// cart.php (example usage)\n$cart = new Cart();\n\n// add product to cart\n$productId = 1;\n$quantity = 2;\n$cart->addProduct($productId, $quantity);\n\n// view cart contents\nprint_r($cart->viewCart());\n```\n\nNote that this is a simplified example and you should consider implementing additional features such as:\n\n* Error handling and validation\n* Security measures (e.g., encryption for sensitive data)\n* User permissions and access control\n* Payment processing integration\n* Order status updates\n\nPlease modify the code to fit your specific needs and requirements.", "code_blocks": [null, "```php\n// auth.php (user authentication)\nclass Auth {\n  private $db;\n\n  public function __construct() {\n    $this->db = new PDO('mysql:host=localhost;dbname=your_database', 'your_username', 'your_password');\n  }\n\n  public function login($username, $password) {\n    // query to retrieve user data\n    $query = \"SELECT * FROM users WHERE username = :username AND password = :password\";\n    $stmt = $this->db->prepare($query);\n    $stmt->bindParam(':username', $username);\n    $stmt->bindParam(':password', $password);\n    $stmt->execute();\n    return $stmt->fetch();\n  }\n}\n\n// product.php (product data)\nclass Product {\n  private $id;\n  private $name;\n  private $price;\n\n  public function __construct($id, $name, $price) {\n    $this->id = $id;\n    $this->name = $name;\n    $this->price = $price;\n  }\n\n  public function getId() {\n    return $this->id;\n  }\n\n  public function getName() {\n    return $this->name;\n  }\n\n  public function getPrice() {\n    return $this->price;\n  }\n}\n\n// cart.php (purchase functionality)\nclass Cart {\n  private $db;\n\n  public function __construct() {\n    $this->db = new PDO('mysql:host=localhost;dbname=your_database', 'your_username', 'your_password');\n  }\n\n  public function addProduct($productId, $quantity) {\n    // query to insert product into order table\n    $query = \"INSERT INTO orders (user_id, product_id, quantity, total) VALUES (:user_id, :product_id, :quantity, :total)\";\n    $stmt = $this->db->prepare($query);\n    $user = Auth::getInstance()->getUser();\n    $productId = $productId;\n    $quantity = $quantity;\n    // calculate total price\n    $total = $quantity * Product::getInstance($productId)->getPrice();\n    $stmt->bindParam(':user_id', $user['id']);\n    $stmt->bindParam(':product_id', $productId);\n    $stmt->bindParam(':quantity', $quantity);\n    $stmt->bindParam(':total', $total);\n    $stmt->execute();\n  }\n\n  public function viewCart() {\n    // query to retrieve order data\n    $query = \"SELECT * FROM orders WHERE user_id = :user_id\";\n    $stmt = $this->db->prepare($query);\n    $user = Auth::getInstance()->getUser();\n    $stmt->bindParam(':user_id', $user['id']);\n    $stmt->execute();\n    return $stmt->fetchAll();\n  }\n}\n```", "```php\n// login.php (example usage)\nrequire_once 'auth.php';\n$auth = new Auth();\n$user = $auth->login('username', 'password');\n\n// cart.php (example usage)\n$cart = new Cart();\n\n// add product to cart\n$productId = 1;\n$quantity = 2;\n$cart->addProduct($productId, $quantity);\n\n// view cart contents\nprint_r($cart->viewCart());\n```"]}
