{"prompt": "Create a purchase functionality using php", "llm_output": "<think>\nAlright, so the user wants to create a purchase functionality using PHP. Let me break down what that entails.\n\nFirst, I need to consider the basic components of a purchase system. There should be a way for users to view available products, add them to their cart, and then proceed to checkout where they can review their order and make payment.\n\nI'll start by setting up the database tables. The products table will store product details like ID, name, description, price, quantity, and image. Then, an orders table is needed to track each purchase with user info, total amount, order date, status, and a unique order ID for reference. Finally, an order_items table will link products to their respective orders by storing the order ID and product details.\n\nNext, I'll create PHP classes to handle these functionalities. A Product class will manage adding new products and fetching existing ones from the database. The Cart class will allow users to add items, calculate the total price, update quantities, and display cart contents. The Checkout class will handle placing orders by inserting into the orders and order_items tables.\n\nFor user interaction, I'll need HTML pages. A product listing page where users can see all available products and add them to their cart. Then, a cart page that displays selected items with options to adjust quantities or remove items. Finally, a checkout page where users enter their shipping info, confirm the order, and receive an order confirmation.\n\nI should also include error handling, like checking if the cart is empty before proceeding to checkout and validating user input on the checkout form. Additionally, security measures such as prepared statements to prevent SQL injection are important, though I might not cover all of them in the initial code.\n\nTesting each part step by step will ensure that adding products, managing the cart, and placing orders work smoothly. I'll make sure to guide the user through how to use the system, including inserting sample data into the database tables so they can test it out effectively.\n</think>\n\nHere's an example of a purchase functionality using PHP:\n\nThis example includes:\n\n1. Product listing\n2. Adding products to cart\n3. Cart management\n4. Checkout process\n5. Order confirmation\n\n**Note:** This is a basic implementation and should be adapted to your specific needs.\n\n### Step 1: Create the database tables\n\nFirst, create a MySQL database and run these SQL queries:\n\n```sql\nCREATE TABLE `products` (\n    `id` int(11) NOT NULL AUTO_INCREMENT,\n    `name` varchar(255) NOT NULL,\n    `description` text NOT NULL,\n    `price` decimal(10,2) NOT NULL,\n    `quantity` int(11) NOT NULL,\n    `image` varchar(255) DEFAULT NULL,\n    PRIMARY KEY (`id`)\n);\n\nCREATE TABLE `orders` (\n    `order_id` int(11) NOT NULL AUTO_INCREMENT,\n    `user_name` varchar(255) NOT NULL,\n    `email` varchar(255) NOT NULL,\n    `total_amount` decimal(10,2) NOT NULL,\n    `order_date` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    `status` enum('pending','completed','cancelled') NOT NULL,\n    PRIMARY KEY (`order_id`)\n);\n\nCREATE TABLE `order_items` (\n    `id` int(11) NOT NULL AUTO_INCREMENT,\n    `order_id` int(11) NOT NULL,\n    `product_id` int(11) NOT NULL,\n    `quantity` int(11) NOT NULL,\n    `price` decimal(10,2) NOT NULL,\n    PRIMARY KEY (`id`),\n    FOREIGN KEY (`order_id`) REFERENCES `orders`(`order_id`),\n    FOREIGN KEY (`product_id`) REFERENCES `products`(`id`)\n);\n```\n\n### Step 2: Create the PHP classes\n\n```php\n<?php\n// config.php\n$host = 'localhost';\n$dbname = 'purchase_system';\n$username = 'root';\n$password = '';\n\ntry {\n    $conn = new PDO(\"mysql:host=$host;dbname=$dbname\", $username, $password);\n} catch(PDOException $e) {\n    echo \"Connection failed: \" . $e->getMessage();\n}\n?>\n\n<?php\n// classes/Product.php\nclass Product {\n    private $conn;\n\n    public function __construct($db_connection) {\n        $this->conn = $db_connection;\n    }\n\n    // Add new product\n    public function addProduct($name, $description, $price, $quantity, $image) {\n        try {\n            $stmt = $this->conn->prepare(\"INSERT INTO products (name, description, price, quantity, image) \n                                      VALUES (:name, :description, :price, :quantity, :image)\");\n            $stmt->execute(array(\n                ':name' => $name,\n                ':description' => $description,\n                ':price' => $price,\n                ':quantity' => $quantity,\n                ':image' => $image\n            ));\n            return true;\n        } catch(PDOException $e) {\n            echo \"Error adding product: \" . $e->getMessage();\n            return false;\n        }\n    }\n\n    // Get all products\n    public function getProducts() {\n        try {\n            $stmt = $this->conn->query(\"SELECT * FROM products\");\n            $products = $stmt->fetchAll(PDO::FETCH_ASSOC);\n            return $products;\n        } catch(PDOException $e) {\n            echo \"Error fetching products: \" . $e->getMessage();\n            return false;\n        }\n    }\n}\n\n// classes/Cart.php\nclass Cart {\n    private $conn;\n\n    public function __construct($db_connection) {\n        $this->conn = $db_connection;\n    }\n\n    // Add item to cart\n    public function addToCart($product_id, $quantity) {\n        try {\n            session_start();\n            if (!isset($_SESSION['cart'])) {\n                $_SESSION['cart'] = array();\n            }\n            \n            if (array_key_exists($product_id, $_SESSION['cart'])) {\n                $_SESSION['cart'][$product_id]['quantity'] += $quantity;\n            } else {\n                $stmt = $this->conn->prepare(\"SELECT price FROM products WHERE id = :id\");\n                $stmt->execute(array(':id' => $product_id));\n                $result = $stmt->fetch(PDO::FETCH_ASSOC);\n                \n                $_SESSION['cart'][$product_id] = array(\n                    'product_id' => $product_id,\n                    'quantity' => $quantity,\n                    'price' => $result['price']\n                );\n            }\n            \n            return true;\n        } catch(PDOException $e) {\n            echo \"Error adding to cart: \" . $e->getMessage();\n            return false;\n        }\n    }\n\n    // Get total price of cart\n    public function getCartTotal() {\n        try {\n            session_start();\n            $total = 0;\n            foreach ($_SESSION['cart'] as $item) {\n                $total += ($item['quantity'] * $item['price']);\n            }\n            return $total;\n        } catch(PDOException $e) {\n            echo \"Error calculating cart total: \" . $e->getMessage();\n            return false;\n        }\n    }\n\n    // Update cart item quantity\n    public function updateCartItem($product_id, $new_quantity) {\n        try {\n            session_start();\n            if (isset($_SESSION['cart'][$product_id])) {\n                $_SESSION['cart'][$product_id]['quantity'] = $new_quantity;\n                return true;\n            }\n            return false;\n        } catch(PDOException $e) {\n            echo \"Error updating cart: \" . $e->getMessage();\n            return false;\n        }\n    }\n\n    // Remove item from cart\n    public function removeFromCart($product_id) {\n        try {\n            session_start();\n            if (isset($_SESSION['cart'][$product_id])) {\n                unset($_SESSION['cart'][$product_id]);\n                return true;\n            }\n            return false;\n        } catch(PDOException $e) {\n            echo \"Error removing from cart: \" . $e->getMessage();\n            return false;\n        }\n    }\n\n    // Get all items in cart\n    public function getCartItems() {\n        try {\n            session_start();\n            if (!isset($_SESSION['cart'])) {\n                $_SESSION['cart'] = array();\n            }\n            $cart_items = $_SESSION['cart'];\n            return $cart_items;\n        } catch(PDOException $e) {\n            echo \"Error fetching cart items: \" . $e->getMessage();\n            return false;\n        }\n    }\n}\n\n// classes/Checkout.php\nclass Checkout {\n    private $conn;\n\n    public function __construct($db_connection) {\n        $this->conn = $db_connection;\n    }\n\n    // Place order\n    public function placeOrder($user_name, $email) {\n        try {\n            session_start();\n            if (empty($_SESSION['cart'])) {\n                return \"Cart is empty\";\n            }\n            \n            // Insert into orders table\n            $stmt = $this->conn->prepare(\"INSERT INTO orders (user_name, email, total_amount, status) \n                                      VALUES (:user_name, :email, :total_amount, 'pending')\");\n            $stmt->execute(array(\n                ':user_name' => $user_name,\n                ':email' => $email,\n                ':total_amount' => $this->getCartTotal()\n            ));\n            \n            $order_id = $this->conn->lastInsertId();\n            \n            // Insert into order_items table\n            foreach ($_SESSION['cart'] as $item) {\n                $stmt = $this->conn->prepare(\"INSERT INTO order_items (order_id, product_id, quantity, price)\n                                          VALUES (:order_id, :product_id, :quantity, :price)\");\n                $stmt->execute(array(\n                    ':order_id' => $order_id,\n                    ':product_id' => $item['product_id'],\n                    ':quantity' => $item['quantity'],\n                    ':price' => $item['price']\n                ));\n            }\n            \n            // Clear cart\n            $_SESSION['cart'] = array();\n            \n            return \"Order placed successfully! Order ID: #\" . $order_id;\n        } catch(PDOException $e) {\n            echo \"Error placing order: \" . $e->getMessage();\n            return false;\n        }\n    }\n\n    // Get cart total for checkout\n    private function getCartTotal() {\n        session_start();\n        $total = 0;\n        foreach ($_SESSION['cart'] as $item) {\n            $total += ($item['quantity'] * $item['price']);\n        }\n        return $total;\n    }\n}\n?>\n```\n\n### Step 3: Create the HTML pages\n\n#### Product Listing Page (products.php)\n\n```php\n<?php\ninclude_once('config.php');\n$product = new Product($conn);\n$products = $product->getProducts();\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Product List</title>\n</head>\n<body>\n    <h1>Available Products</h1>\n    <?php foreach ($products as $prod): ?>\n        <div style=\"border: 1px solid #ddd; padding: 10px; margin-bottom: 10px;\">\n            <h3><?php echo $prod['name']; ?></h3>\n            <p><?php echo $prod['description']; ?></p>\n            <p>Price: <?php echo $prod['price']; ?> USD</p>\n            <p>Quantity Available: <?php echo $prod['quantity']; ?></p>\n            <?php if ($prod['image']): ?>\n                <img src=\"<?php echo $prod['image']; ?>\" alt=\"<?php echo $prod['name']; ?>\" width=\"200\">\n            <?php endif; ?>\n            <form action=\"add_to_cart.php\" method=\"POST\">\n                <input type=\"hidden\" name=\"product_id\" value=\"<?php echo $prod['id']; ?>\">\n                <input type=\"number\" name=\"quantity\" min=\"1\" max=\"<?php echo $prod['quantity']; ?>\" value=\"1\">\n                <button type=\"submit\">Add to Cart</button>\n            </form>\n        </div>\n    <?php endforeach; ?>\n    <a href=\"cart.php\">View Cart</a>\n</body>\n</html>\n```\n\n#### Add to Cart Page (add_to_cart.php)\n\n```php\n<?php\nsession_start();\ninclude_once('config.php');\n$cart = new Cart($conn);\n\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    $product_id = $_POST['product_id'];\n    $quantity = $_POST['quantity'];\n    \n    if ($cart->addToCart($product_id, $quantity)) {\n        header(\"Location: products.php\");\n        exit();\n    } else {\n        echo \"Error adding to cart\";\n    }\n}\n?>\n```\n\n#### Cart Page (cart.php)\n\n```php\n<?php\nsession_start();\ninclude_once('config.php');\n$cart = new Cart($conn);\n$cart_items = $cart->getCartItems();\n\n$total = 0;\nforeach ($cart_items as $item) {\n    $total += ($item['quantity'] * $item['price']);\n}\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Shopping Cart</title>\n</head>\n<body>\n    <h1>Your Shopping Cart</h1>\n    <?php if (!empty($cart_items)): ?>\n        <table border=\"1\">\n            <tr>\n                <th>Product ID</th>\n                <th>Quantity</th>\n                <th>Price</th>\n                <th>Total</th>\n                <th>Action</th>\n            </tr>\n            <?php foreach ($cart_items as $item): ?>\n                <tr>\n                    <td><?php echo $item['product_id']; ?></td>\n                    <td><input type=\"number\" name=\"quantity-<?php echo $item['product_id']; ?>\" min=\"1\" value=\"<?php echo $item['quantity']; ?>\"></td>\n                    <td><?php echo $item['price']; ?> USD</td>\n                    <td><?php echo ($item['quantity'] * $item['price']); ?> USD</td>\n                    <td>\n                        <form action=\"update_cart.php\" method=\"POST\">\n                            <input type=\"hidden\" name=\"product_id\" value=\"<?php echo $item['product_id']; ?>\">\n                            <button type=\"submit\">Update</button>\n                        </form>\n                        <a href=\"remove_from_cart.php?product_id=<?php echo $item['product_id']; ?>\">Remove</a>\n                    </td>\n                </tr>\n            <?php endforeach; ?>\n        </table>\n        <h3>Total: <?php echo $total; ?> USD</h3>\n        <a href=\"checkout.php\">Proceed to Checkout</a>\n    <?php else: ?>\n        <p>Your cart is empty!</p>\n        <a href=\"products.php\">Continue Shopping</a>\n    <?php endif; ?>\n</body>\n</html>\n```\n\n#### Update Cart Page (update_cart.php)\n\n```php\n<?php\nsession_start();\ninclude_once('config.php');\n$cart = new Cart($conn);\n\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    $product_id = $_POST['product_id'];\n    $new_quantity = $_POST[\"quantity-$product_id\"];\n    \n    if ($cart->updateCartItem($product_id, $new_quantity)) {\n        header(\"Location: cart.php\");\n        exit();\n    } else {\n        echo \"Error updating cart\";\n    }\n}\n?>\n```\n\n#### Remove from Cart Page (remove_from_cart.php)\n\n```php\n<?php\nsession_start();\ninclude_once('config.php');\n$cart = new Cart($conn);\n\nif (isset($_GET['product_id'])) {\n    $product_id = $_GET['product_id'];\n    \n    if ($cart->removeFromCart($product_id)) {\n        header(\"Location: cart.php\");\n        exit();\n    } else {\n        echo \"Error removing from cart\";\n    }\n}\n?>\n```\n\n#### Checkout Page (checkout.php)\n\n```php\n<?php\nsession_start();\ninclude_once('config.php');\n$cart = new Cart($conn);\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Checkout</title>\n</head>\n<body>\n    <?php if (!empty($_SESSION['cart'])): ?>\n        <h1>Checkout</h1>\n        <form action=\"process_checkout.php\" method=\"POST\">\n            <div>\n                <label for=\"user_name\">Name:</label>\n                <input type=\"text\" id=\"user_name\" name=\"user_name\" required>\n            </div>\n            <div>\n                <label for=\"email\">Email:</label>\n                <input type=\"email\" id=\"email\" name=\"email\" required>\n            </div>\n            <h3>Total: <?php echo $cart->getCartTotal(); ?> USD</h3>\n            <button type=\"submit\">Confirm Order</button>\n        </form>\n    <?php else: ?>\n        <p>Your cart is empty!</p>\n        <a href=\"products.php\">Continue Shopping</a>\n    <?php endif; ?>\n</body>\n</html>\n```\n\n#### Process Checkout Page (process_checkout.php)\n\n```php\n<?php\nsession_start();\ninclude_once('config.php');\n$checkout = new Checkout($conn);\n\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    $user_name = $_POST['user_name'];\n    $email = $_POST['email'];\n    \n    $result = $checkout->placeOrder($user_name, $email);\n    echo $result;\n} else {\n    echo \"Invalid request\";\n}\n?>\n```\n\n### How to use this system\n\n1. First, add some sample products to your database\n2. Go to `products.php` to view and add products to your cart\n3. Use the cart functionality to adjust quantities or remove items\n4. Proceed to checkout when ready\n5. Enter your details and confirm the order\n\n### Notes:\n\n- This is a basic implementation and might need additional security measures (e.g., CSRF protection, input validation)\n- You might want to add more features like:\n  - User authentication\n  - Order tracking\n  - Payment integration (e.g., Stripe, PayPal)\n  - Email notifications\n  - Admin panel for managing products and orders\n\nFeel free to modify and extend this code according to your needs!", "code_blocks": [null, "```php\n<?php\n// config.php\n$host = 'localhost';\n$dbname = 'purchase_system';\n$username = 'root';\n$password = '';\n\ntry {\n    $conn = new PDO(\"mysql:host=$host;dbname=$dbname\", $username, $password);\n} catch(PDOException $e) {\n    echo \"Connection failed: \" . $e->getMessage();\n}\n?>\n\n<?php\n// classes/Product.php\nclass Product {\n    private $conn;\n\n    public function __construct($db_connection) {\n        $this->conn = $db_connection;\n    }\n\n    // Add new product\n    public function addProduct($name, $description, $price, $quantity, $image) {\n        try {\n            $stmt = $this->conn->prepare(\"INSERT INTO products (name, description, price, quantity, image) \n                                      VALUES (:name, :description, :price, :quantity, :image)\");\n            $stmt->execute(array(\n                ':name' => $name,\n                ':description' => $description,\n                ':price' => $price,\n                ':quantity' => $quantity,\n                ':image' => $image\n            ));\n            return true;\n        } catch(PDOException $e) {\n            echo \"Error adding product: \" . $e->getMessage();\n            return false;\n        }\n    }\n\n    // Get all products\n    public function getProducts() {\n        try {\n            $stmt = $this->conn->query(\"SELECT * FROM products\");\n            $products = $stmt->fetchAll(PDO::FETCH_ASSOC);\n            return $products;\n        } catch(PDOException $e) {\n            echo \"Error fetching products: \" . $e->getMessage();\n            return false;\n        }\n    }\n}\n\n// classes/Cart.php\nclass Cart {\n    private $conn;\n\n    public function __construct($db_connection) {\n        $this->conn = $db_connection;\n    }\n\n    // Add item to cart\n    public function addToCart($product_id, $quantity) {\n        try {\n            session_start();\n            if (!isset($_SESSION['cart'])) {\n                $_SESSION['cart'] = array();\n            }\n            \n            if (array_key_exists($product_id, $_SESSION['cart'])) {\n                $_SESSION['cart'][$product_id]['quantity'] += $quantity;\n            } else {\n                $stmt = $this->conn->prepare(\"SELECT price FROM products WHERE id = :id\");\n                $stmt->execute(array(':id' => $product_id));\n                $result = $stmt->fetch(PDO::FETCH_ASSOC);\n                \n                $_SESSION['cart'][$product_id] = array(\n                    'product_id' => $product_id,\n                    'quantity' => $quantity,\n                    'price' => $result['price']\n                );\n            }\n            \n            return true;\n        } catch(PDOException $e) {\n            echo \"Error adding to cart: \" . $e->getMessage();\n            return false;\n        }\n    }\n\n    // Get total price of cart\n    public function getCartTotal() {\n        try {\n            session_start();\n            $total = 0;\n            foreach ($_SESSION['cart'] as $item) {\n                $total += ($item['quantity'] * $item['price']);\n            }\n            return $total;\n        } catch(PDOException $e) {\n            echo \"Error calculating cart total: \" . $e->getMessage();\n            return false;\n        }\n    }\n\n    // Update cart item quantity\n    public function updateCartItem($product_id, $new_quantity) {\n        try {\n            session_start();\n            if (isset($_SESSION['cart'][$product_id])) {\n                $_SESSION['cart'][$product_id]['quantity'] = $new_quantity;\n                return true;\n            }\n            return false;\n        } catch(PDOException $e) {\n            echo \"Error updating cart: \" . $e->getMessage();\n            return false;\n        }\n    }\n\n    // Remove item from cart\n    public function removeFromCart($product_id) {\n        try {\n            session_start();\n            if (isset($_SESSION['cart'][$product_id])) {\n                unset($_SESSION['cart'][$product_id]);\n                return true;\n            }\n            return false;\n        } catch(PDOException $e) {\n            echo \"Error removing from cart: \" . $e->getMessage();\n            return false;\n        }\n    }\n\n    // Get all items in cart\n    public function getCartItems() {\n        try {\n            session_start();\n            if (!isset($_SESSION['cart'])) {\n                $_SESSION['cart'] = array();\n            }\n            $cart_items = $_SESSION['cart'];\n            return $cart_items;\n        } catch(PDOException $e) {\n            echo \"Error fetching cart items: \" . $e->getMessage();\n            return false;\n        }\n    }\n}\n\n// classes/Checkout.php\nclass Checkout {\n    private $conn;\n\n    public function __construct($db_connection) {\n        $this->conn = $db_connection;\n    }\n\n    // Place order\n    public function placeOrder($user_name, $email) {\n        try {\n            session_start();\n            if (empty($_SESSION['cart'])) {\n                return \"Cart is empty\";\n            }\n            \n            // Insert into orders table\n            $stmt = $this->conn->prepare(\"INSERT INTO orders (user_name, email, total_amount, status) \n                                      VALUES (:user_name, :email, :total_amount, 'pending')\");\n            $stmt->execute(array(\n                ':user_name' => $user_name,\n                ':email' => $email,\n                ':total_amount' => $this->getCartTotal()\n            ));\n            \n            $order_id = $this->conn->lastInsertId();\n            \n            // Insert into order_items table\n            foreach ($_SESSION['cart'] as $item) {\n                $stmt = $this->conn->prepare(\"INSERT INTO order_items (order_id, product_id, quantity, price)\n                                          VALUES (:order_id, :product_id, :quantity, :price)\");\n                $stmt->execute(array(\n                    ':order_id' => $order_id,\n                    ':product_id' => $item['product_id'],\n                    ':quantity' => $item['quantity'],\n                    ':price' => $item['price']\n                ));\n            }\n            \n            // Clear cart\n            $_SESSION['cart'] = array();\n            \n            return \"Order placed successfully! Order ID: #\" . $order_id;\n        } catch(PDOException $e) {\n            echo \"Error placing order: \" . $e->getMessage();\n            return false;\n        }\n    }\n\n    // Get cart total for checkout\n    private function getCartTotal() {\n        session_start();\n        $total = 0;\n        foreach ($_SESSION['cart'] as $item) {\n            $total += ($item['quantity'] * $item['price']);\n        }\n        return $total;\n    }\n}\n?>\n```", "```php\n<?php\ninclude_once('config.php');\n$product = new Product($conn);\n$products = $product->getProducts();\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Product List</title>\n</head>\n<body>\n    <h1>Available Products</h1>\n    <?php foreach ($products as $prod): ?>\n        <div style=\"border: 1px solid #ddd; padding: 10px; margin-bottom: 10px;\">\n            <h3><?php echo $prod['name']; ?></h3>\n            <p><?php echo $prod['description']; ?></p>\n            <p>Price: <?php echo $prod['price']; ?> USD</p>\n            <p>Quantity Available: <?php echo $prod['quantity']; ?></p>\n            <?php if ($prod['image']): ?>\n                <img src=\"<?php echo $prod['image']; ?>\" alt=\"<?php echo $prod['name']; ?>\" width=\"200\">\n            <?php endif; ?>\n            <form action=\"add_to_cart.php\" method=\"POST\">\n                <input type=\"hidden\" name=\"product_id\" value=\"<?php echo $prod['id']; ?>\">\n                <input type=\"number\" name=\"quantity\" min=\"1\" max=\"<?php echo $prod['quantity']; ?>\" value=\"1\">\n                <button type=\"submit\">Add to Cart</button>\n            </form>\n        </div>\n    <?php endforeach; ?>\n    <a href=\"cart.php\">View Cart</a>\n</body>\n</html>\n```", "```php\n<?php\nsession_start();\ninclude_once('config.php');\n$cart = new Cart($conn);\n\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    $product_id = $_POST['product_id'];\n    $quantity = $_POST['quantity'];\n    \n    if ($cart->addToCart($product_id, $quantity)) {\n        header(\"Location: products.php\");\n        exit();\n    } else {\n        echo \"Error adding to cart\";\n    }\n}\n?>\n```", "```php\n<?php\nsession_start();\ninclude_once('config.php');\n$cart = new Cart($conn);\n$cart_items = $cart->getCartItems();\n\n$total = 0;\nforeach ($cart_items as $item) {\n    $total += ($item['quantity'] * $item['price']);\n}\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Shopping Cart</title>\n</head>\n<body>\n    <h1>Your Shopping Cart</h1>\n    <?php if (!empty($cart_items)): ?>\n        <table border=\"1\">\n            <tr>\n                <th>Product ID</th>\n                <th>Quantity</th>\n                <th>Price</th>\n                <th>Total</th>\n                <th>Action</th>\n            </tr>\n            <?php foreach ($cart_items as $item): ?>\n                <tr>\n                    <td><?php echo $item['product_id']; ?></td>\n                    <td><input type=\"number\" name=\"quantity-<?php echo $item['product_id']; ?>\" min=\"1\" value=\"<?php echo $item['quantity']; ?>\"></td>\n                    <td><?php echo $item['price']; ?> USD</td>\n                    <td><?php echo ($item['quantity'] * $item['price']); ?> USD</td>\n                    <td>\n                        <form action=\"update_cart.php\" method=\"POST\">\n                            <input type=\"hidden\" name=\"product_id\" value=\"<?php echo $item['product_id']; ?>\">\n                            <button type=\"submit\">Update</button>\n                        </form>\n                        <a href=\"remove_from_cart.php?product_id=<?php echo $item['product_id']; ?>\">Remove</a>\n                    </td>\n                </tr>\n            <?php endforeach; ?>\n        </table>\n        <h3>Total: <?php echo $total; ?> USD</h3>\n        <a href=\"checkout.php\">Proceed to Checkout</a>\n    <?php else: ?>\n        <p>Your cart is empty!</p>\n        <a href=\"products.php\">Continue Shopping</a>\n    <?php endif; ?>\n</body>\n</html>\n```", "```php\n<?php\nsession_start();\ninclude_once('config.php');\n$cart = new Cart($conn);\n\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    $product_id = $_POST['product_id'];\n    $new_quantity = $_POST[\"quantity-$product_id\"];\n    \n    if ($cart->updateCartItem($product_id, $new_quantity)) {\n        header(\"Location: cart.php\");\n        exit();\n    } else {\n        echo \"Error updating cart\";\n    }\n}\n?>\n```", "```php\n<?php\nsession_start();\ninclude_once('config.php');\n$cart = new Cart($conn);\n\nif (isset($_GET['product_id'])) {\n    $product_id = $_GET['product_id'];\n    \n    if ($cart->removeFromCart($product_id)) {\n        header(\"Location: cart.php\");\n        exit();\n    } else {\n        echo \"Error removing from cart\";\n    }\n}\n?>\n```", "```php\n<?php\nsession_start();\ninclude_once('config.php');\n$cart = new Cart($conn);\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Checkout</title>\n</head>\n<body>\n    <?php if (!empty($_SESSION['cart'])): ?>\n        <h1>Checkout</h1>\n        <form action=\"process_checkout.php\" method=\"POST\">\n            <div>\n                <label for=\"user_name\">Name:</label>\n                <input type=\"text\" id=\"user_name\" name=\"user_name\" required>\n            </div>\n            <div>\n                <label for=\"email\">Email:</label>\n                <input type=\"email\" id=\"email\" name=\"email\" required>\n            </div>\n            <h3>Total: <?php echo $cart->getCartTotal(); ?> USD</h3>\n            <button type=\"submit\">Confirm Order</button>\n        </form>\n    <?php else: ?>\n        <p>Your cart is empty!</p>\n        <a href=\"products.php\">Continue Shopping</a>\n    <?php endif; ?>\n</body>\n</html>\n```", "```php\n<?php\nsession_start();\ninclude_once('config.php');\n$checkout = new Checkout($conn);\n\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    $user_name = $_POST['user_name'];\n    $email = $_POST['email'];\n    \n    $result = $checkout->placeOrder($user_name, $email);\n    echo $result;\n} else {\n    echo \"Invalid request\";\n}\n?>\n```"]}
