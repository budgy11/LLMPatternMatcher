{"prompt": "Create a search bar using php", "llm_output": "Here is an example of how to create a basic search bar using PHP:\n\n**index.php**\n```php\n<?php\n// Connect to database (assuming you have a MySQL database)\n$conn = new mysqli(\"localhost\", \"username\", \"password\", \"database\");\n\n// Check connection\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Function to search for matching records\nfunction search_records($search_term) {\n    global $conn;\n    $query = \"SELECT * FROM your_table WHERE column_name LIKE '%$search_term%'\";\n    $result = $conn->query($query);\n    return $result;\n}\n\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Search Bar Example</title>\n    <style>\n        /* Basic styling for the search bar */\n        #search-bar {\n            width: 50%;\n            padding: 10px;\n            font-size: 16px;\n            border: 1px solid #ccc;\n        }\n    </style>\n</head>\n<body>\n\n<!-- Search bar input field -->\n<input type=\"text\" id=\"search-input\" placeholder=\"Search...\">\n<button id=\"search-btn\">Search</button>\n\n<!-- Display search results here -->\n<div id=\"search-results\"></div>\n\n<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\"></script>\n<script>\n    // Get the search input field and button\n    var searchInput = document.getElementById(\"search-input\");\n    var searchBtn = document.getElementById(\"search-btn\");\n\n    // Add event listener to search button\n    searchBtn.addEventListener(\"click\", function() {\n        // Get the search term from the input field\n        var searchTerm = searchInput.value.trim();\n\n        // If search term is not empty, search for matching records\n        if (searchTerm !== \"\") {\n            $.ajax({\n                type: \"GET\",\n                url: \"search.php\",\n                data: { search_term: searchTerm },\n                success: function(data) {\n                    // Display search results\n                    document.getElementById(\"search-results\").innerHTML = data;\n                }\n            });\n        }\n    });\n\n    // Handle key press on search input field\n    searchInput.addEventListener(\"keypress\", function(e) {\n        if (e.keyCode === 13) { // Enter key pressed\n            // Get the search term from the input field\n            var searchTerm = searchInput.value.trim();\n\n            // If search term is not empty, search for matching records\n            if (searchTerm !== \"\") {\n                $.ajax({\n                    type: \"GET\",\n                    url: \"search.php\",\n                    data: { search_term: searchTerm },\n                    success: function(data) {\n                        // Display search results\n                        document.getElementById(\"search-results\").innerHTML = data;\n                    }\n                });\n            }\n        }\n    });\n</script>\n\n</body>\n</html>\n```\n\n**search.php**\n```php\n<?php\n\n// Connect to database (assuming you have a MySQL database)\n$conn = new mysqli(\"localhost\", \"username\", \"password\", \"database\");\n\n// Check connection\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Get search term from URL parameter\n$search_term = $_GET['search_term'];\n\n// Search for matching records using the `search_records` function\n$results = search_records($search_term);\n\n// Display search results in HTML format\necho \"<h2>Search Results:</h2>\";\nwhile ($row = $results->fetch_assoc()) {\n    echo \"<p>\" . $row['column_name'] . \"</p>\";\n}\n?>\n```\nThis example uses jQuery to send a GET request to the `search.php` file with the search term as a parameter. The `search_records` function in `search.php` queries the database for matching records and displays them in HTML format.\n\n**Note:**\n\n* This is just an example code, you need to adapt it to your specific use case.\n* Remember to replace `\"your_table\"` and `\"column_name\"` with the actual table name and column name in your database.\n* Also, this is a basic implementation, you may want to add more features such as pagination, sorting, etc. depending on your requirements.\n\nPlease let me know if you have any questions or need further assistance!", "code_blocks": ["```php\n<?php\n// Connect to database (assuming you have a MySQL database)\n$conn = new mysqli(\"localhost\", \"username\", \"password\", \"database\");\n\n// Check connection\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Function to search for matching records\nfunction search_records($search_term) {\n    global $conn;\n    $query = \"SELECT * FROM your_table WHERE column_name LIKE '%$search_term%'\";\n    $result = $conn->query($query);\n    return $result;\n}\n\n?>\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Search Bar Example</title>\n    <style>\n        /* Basic styling for the search bar */\n        #search-bar {\n            width: 50%;\n            padding: 10px;\n            font-size: 16px;\n            border: 1px solid #ccc;\n        }\n    </style>\n</head>\n<body>\n\n<!-- Search bar input field -->\n<input type=\"text\" id=\"search-input\" placeholder=\"Search...\">\n<button id=\"search-btn\">Search</button>\n\n<!-- Display search results here -->\n<div id=\"search-results\"></div>\n\n<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\"></script>\n<script>\n    // Get the search input field and button\n    var searchInput = document.getElementById(\"search-input\");\n    var searchBtn = document.getElementById(\"search-btn\");\n\n    // Add event listener to search button\n    searchBtn.addEventListener(\"click\", function() {\n        // Get the search term from the input field\n        var searchTerm = searchInput.value.trim();\n\n        // If search term is not empty, search for matching records\n        if (searchTerm !== \"\") {\n            $.ajax({\n                type: \"GET\",\n                url: \"search.php\",\n                data: { search_term: searchTerm },\n                success: function(data) {\n                    // Display search results\n                    document.getElementById(\"search-results\").innerHTML = data;\n                }\n            });\n        }\n    });\n\n    // Handle key press on search input field\n    searchInput.addEventListener(\"keypress\", function(e) {\n        if (e.keyCode === 13) { // Enter key pressed\n            // Get the search term from the input field\n            var searchTerm = searchInput.value.trim();\n\n            // If search term is not empty, search for matching records\n            if (searchTerm !== \"\") {\n                $.ajax({\n                    type: \"GET\",\n                    url: \"search.php\",\n                    data: { search_term: searchTerm },\n                    success: function(data) {\n                        // Display search results\n                        document.getElementById(\"search-results\").innerHTML = data;\n                    }\n                });\n            }\n        }\n    });\n</script>\n\n</body>\n</html>\n```", "```php\n<?php\n\n// Connect to database (assuming you have a MySQL database)\n$conn = new mysqli(\"localhost\", \"username\", \"password\", \"database\");\n\n// Check connection\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Get search term from URL parameter\n$search_term = $_GET['search_term'];\n\n// Search for matching records using the `search_records` function\n$results = search_records($search_term);\n\n// Display search results in HTML format\necho \"<h2>Search Results:</h2>\";\nwhile ($row = $results->fetch_assoc()) {\n    echo \"<p>\" . $row['column_name'] . \"</p>\";\n}\n?>\n```"]}
