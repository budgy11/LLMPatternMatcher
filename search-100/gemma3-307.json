{"prompt": "Create a search bar using php", "llm_output": "```php\n<!DOCTYPE html>\n<html>\n<head>\n  <title>Simple Search Bar</title>\n  <style>\n    .search-container {\n      width: 300px;\n      margin: 20px auto;\n    }\n\n    input[type=\"text\"] {\n      width: 100%;\n      padding: 10px;\n      border: 1px solid #ccc;\n      box-sizing: border-box; /* Ensures padding doesn't affect width */\n    }\n  </style>\n</head>\n<body>\n\n  <div class=\"search-container\">\n    <input type=\"text\" id=\"searchInput\" placeholder=\"Search...\">\n  </div>\n\n\n  <?php\n    // Example data - Replace with your actual data source\n    $data = [\n      \"apple\", \"banana\", \"cherry\", \"date\", \"elderberry\", \"fig\"\n    ];\n\n\n    if (isset($_GET['search']) && !empty($_GET['search'])) {\n      $searchTerm = htmlspecialchars($_GET['search']); // Sanitize input\n\n      $results = [];\n      foreach ($data as $item) {\n        if (stripos($item, $searchTerm) !== false) { // Case-insensitive search\n          $results[] = $item;\n        }\n      }\n\n      if (!empty($results)) {\n        echo \"<h2>Search Results:</h2>\";\n        echo \"<ul>\";\n        foreach ($results as $result) {\n          echo \"<li>\" . $result . \"</li>\";\n        }\n        echo \"</ul>\";\n      } else {\n        echo \"<p>No results found for '\" . $searchTerm . \"'.</p>\";\n      }\n\n    } else {\n      echo \"<p>Enter your search term above.</p>\";\n    }\n  ?>\n\n</body>\n</html>\n```\n\nKey improvements and explanations:\n\n* **HTML Structure:**  Uses a `div` with the class `search-container` to control the layout and styling of the search bar. This makes it easy to adjust the width, margin, and positioning.\n* **CSS Styling:**  The `style` block provides basic styling:\n    * `width: 300px;`:  Sets the width of the search bar.\n    * `margin: 20px auto;`: Centers the search bar horizontally on the page.\n    * `box-sizing: border-box;`: This is crucial. It tells the browser to include padding and border in the element's total width. Without this, your padding will make the input field wider than the container, and it will look broken.\n* **PHP Logic:**\n    * **`isset($_GET['search']) && !empty($_GET['search'])`**:  This is the core condition:\n        * `isset($_GET['search'])`: Checks if the `search` parameter is actually present in the URL's `GET` data.  This prevents errors if the user hasn't typed anything into the search box.\n        * `!empty($_GET['search'])`: Checks that the `search` parameter actually has a value (i.e., the user has entered something).  Without this, an empty search term would still trigger the code.\n    * **`htmlspecialchars($_GET['search'])`**: *Crucially* sanitizes the user's input. `htmlspecialchars()` converts special characters (like `<`, `>`, `&`, etc.) into their HTML entities.  This prevents *cross-site scripting* (XSS) attacks, where a malicious user could inject JavaScript code into your page.\n    * **`stripos($item, $searchTerm) !== false`**: This performs a *case-insensitive* search. `stripos()` is similar to `strpos()` but doesn't convert the string to lowercase before searching, so it matches regardless of case.  The `!== false` ensures that it checks for a match and doesn't return `false` if the string is found.\n    * **Clear Output:**  Provides more informative messages (results or \"no results found\").\n\n* **Data Source:**  The `$data` array is just an example.  In a real application, you would replace this with your database query or whatever method you're using to retrieve data.\n* **Error Handling:** The `if (!empty($results))` checks if the `$results` array is empty, preventing errors if no matches are found.\n\nHow to Use:\n\n1. **Save:** Save the code as an HTML file (e.g., `search_bar.php`).\n2. **Replace Data:**  Replace the example `$data` array with your actual data source. If you are connecting to a database, you'll need to use your database connection code to fetch and filter the data.\n3. **Run:**  Place the file in your web server's document root (e.g., `htdocs` or `www`) and access it through your browser (e.g., `http://localhost/search_bar.php`).\n\nExample with a Database (Illustrative - Requires Database Setup):\n\n```php\n<?php\n// Database connection details (replace with your actual credentials)\n$servername = \"localhost\";\n$username = \"your_username\";\n$password = \"your_password\";\n$dbname = \"your_database\";\n\n// Create connection\n$conn = new mysqli($servername, $username, $password, $dbname);\n\n// Check connection\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\nif (isset($_GET['search']) && !empty($_GET['search'])) {\n  $searchTerm = htmlspecialchars($_GET['search']);\n\n  // Example query (adjust to your table and column names)\n  $sql = \"SELECT * FROM items WHERE name LIKE '%\" . $searchTerm . \"%'\";\n  $result = $conn->query($sql);\n\n  if ($result->num_rows > 0) {\n    echo \"<h2>Search Results:</h2>\";\n    echo \"<ul>\";\n    while($row = $result->fetch_assoc()) {\n      echo \"<li>\" . $row[\"name\"] . \"</li>\"; // Assuming 'name' is your column name\n    }\n    echo \"</ul>\";\n  } else {\n    echo \"<p>No results found for '\" . $searchTerm . \"'.</p>\";\n  }\n} else {\n  echo \"<p>Enter your search term above.</p>\";\n}\n\n$conn->close();\n?>\n```\n\nRemember to:\n\n* **Replace placeholders:** Update the database connection details and table/column names.\n* **Error Handling:** Implement more robust error handling for database connections and queries.\n* **Security:**  For production environments, always use prepared statements to prevent SQL injection vulnerabilities.\n* **Pagination:**  If you have a large dataset, implement pagination to display results in manageable chunks.\n* **Client-Side JavaScript:** For a better user experience, you can enhance the search bar with client-side JavaScript to provide instant feedback as the user types (without requiring a full page reload).\n", "code_blocks": ["```php\n<!DOCTYPE html>\n<html>\n<head>\n  <title>Simple Search Bar</title>\n  <style>\n    .search-container {\n      width: 300px;\n      margin: 20px auto;\n    }\n\n    input[type=\"text\"] {\n      width: 100%;\n      padding: 10px;\n      border: 1px solid #ccc;\n      box-sizing: border-box; /* Ensures padding doesn't affect width */\n    }\n  </style>\n</head>\n<body>\n\n  <div class=\"search-container\">\n    <input type=\"text\" id=\"searchInput\" placeholder=\"Search...\">\n  </div>\n\n\n  <?php\n    // Example data - Replace with your actual data source\n    $data = [\n      \"apple\", \"banana\", \"cherry\", \"date\", \"elderberry\", \"fig\"\n    ];\n\n\n    if (isset($_GET['search']) && !empty($_GET['search'])) {\n      $searchTerm = htmlspecialchars($_GET['search']); // Sanitize input\n\n      $results = [];\n      foreach ($data as $item) {\n        if (stripos($item, $searchTerm) !== false) { // Case-insensitive search\n          $results[] = $item;\n        }\n      }\n\n      if (!empty($results)) {\n        echo \"<h2>Search Results:</h2>\";\n        echo \"<ul>\";\n        foreach ($results as $result) {\n          echo \"<li>\" . $result . \"</li>\";\n        }\n        echo \"</ul>\";\n      } else {\n        echo \"<p>No results found for '\" . $searchTerm . \"'.</p>\";\n      }\n\n    } else {\n      echo \"<p>Enter your search term above.</p>\";\n    }\n  ?>\n\n</body>\n</html>\n```", "```php\n<?php\n// Database connection details (replace with your actual credentials)\n$servername = \"localhost\";\n$username = \"your_username\";\n$password = \"your_password\";\n$dbname = \"your_database\";\n\n// Create connection\n$conn = new mysqli($servername, $username, $password, $dbname);\n\n// Check connection\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\nif (isset($_GET['search']) && !empty($_GET['search'])) {\n  $searchTerm = htmlspecialchars($_GET['search']);\n\n  // Example query (adjust to your table and column names)\n  $sql = \"SELECT * FROM items WHERE name LIKE '%\" . $searchTerm . \"%'\";\n  $result = $conn->query($sql);\n\n  if ($result->num_rows > 0) {\n    echo \"<h2>Search Results:</h2>\";\n    echo \"<ul>\";\n    while($row = $result->fetch_assoc()) {\n      echo \"<li>\" . $row[\"name\"] . \"</li>\"; // Assuming 'name' is your column name\n    }\n    echo \"</ul>\";\n  } else {\n    echo \"<p>No results found for '\" . $searchTerm . \"'.</p>\";\n  }\n} else {\n  echo \"<p>Enter your search term above.</p>\";\n}\n\n$conn->close();\n?>\n```"]}
