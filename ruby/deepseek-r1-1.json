{"prompt": "Create a session cookie using ruby", "llm_output": "\n\nTo create a session cookie in Ruby, you'll need to use the `CGI` module. Below are two examples: one without secure flags and another with secure flags set.\n\n### Example 1: Session Cookie Without Secure Flag\n```ruby\nrequire 'cgi'\n\n# Define your session data here\nsession_data = {\n  name   => \"RESELLER_SESSION_ID\",\n  value  => \"some_value\",\n  path   => \"/\",\n  domain => \"example.com\",\n  secure => false,\n  httponly => true\n}\n\n# Create the cookie string\ncookie_line = \"Cookie #{CGI::Name(session_data[:name])}=\" + CGI::Value(session_data)\n\n# Output the response with headers and cookies\nresponse = CGI.new(Concluded: => 'Set-Cookie')\n  .Header('Content-Type', 'text/plain; charset=UTF-8')\n  .Header('Cookie', cookie_line)\n  .write\n\np \"Session cookie created without secure flag:\"\np cookie_line\n```\n\n### Example 2: Session Cookie With Secure Flag\nIf the server should not be able to send cookies without HTTPS, set `secure` to `true`. For such cases:\n\n```ruby\nrequire 'cgi'\n\n# Define your session data here\nsession_data = {\n  name   => \"RESELLER_SESSION_ID\",\n  value  => \"some_value\",\n  path   => \"/\",\n  domain => \"example.com\",\n  secure => true,\n  httponly => true\n}\n\n# Create the cookie string with secure flag\ncookie_line = if session_data[:secure]\n                \" Secure: \"\n              else\n                \"\"\n              end + CGI::Name(session_data[:name]) + \"=\" + CGI::Value(session_data)\n\n# Output the response with headers and cookies\nresponse = CGI.new(Concluded: => 'Set-Cookie')\n  .Header('Content-Type', 'text/plain; charset=UTF-8')\n  .Header('Cookie', cookie_line)\n  .write\n\np \"Session cookie created with secure flag:\"\np cookie_line\n```\n\n### Explanation:\n1. **Include CGI Module**: The `CGI` module is required to handle session data and generate cookies.\n2. **Define Session Data**: Your session attributes like name, value, path, domain, etc., are defined in the hash.\n3. **Cookie Construction**:\n   - Use `CGI::Name` for the cookie name.\n   - Use `CGI::Value` to encode the cookie value.\n   - The secure flag is added if necessary.\n4. **Response Header**: Set the correct headers including 'Set-Cookie' with your generated string.\n\nThese examples show how to create a session cookie that respects secure settings, which is crucial for server-side applications on HTTP/HTTPS.", "code_blocks": ["```ruby\nrequire 'cgi'\n\n# Define your session data here\nsession_data = {\n  name   => \"RESELLER_SESSION_ID\",\n  value  => \"some_value\",\n  path   => \"/\",\n  domain => \"example.com\",\n  secure => false,\n  httponly => true\n}\n\n# Create the cookie string\ncookie_line = \"Cookie #{CGI::Name(session_data[:name])}=\" + CGI::Value(session_data)\n\n# Output the response with headers and cookies\nresponse = CGI.new(Concluded: => 'Set-Cookie')\n  .Header('Content-Type', 'text/plain; charset=UTF-8')\n  .Header('Cookie', cookie_line)\n  .write\n\np \"Session cookie created without secure flag:\"\np cookie_line\n```", "```ruby\nrequire 'cgi'\n\n# Define your session data here\nsession_data = {\n  name   => \"RESELLER_SESSION_ID\",\n  value  => \"some_value\",\n  path   => \"/\",\n  domain => \"example.com\",\n  secure => true,\n  httponly => true\n}\n\n# Create the cookie string with secure flag\ncookie_line = if session_data[:secure]\n                \" Secure: \"\n              else\n                \"\"\n              end + CGI::Name(session_data[:name]) + \"=\" + CGI::Value(session_data)\n\n# Output the response with headers and cookies\nresponse = CGI.new(Concluded: => 'Set-Cookie')\n  .Header('Content-Type', 'text/plain; charset=UTF-8')\n  .Header('Cookie', cookie_line)\n  .write\n\np \"Session cookie created with secure flag:\"\np cookie_line\n```"]}
