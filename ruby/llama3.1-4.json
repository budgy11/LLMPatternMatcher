{"prompt": "Create a login using ruby", "llm_output": "Here is an example of a simple login system using Ruby and the Sinatra web framework:\n\n**login.rb**\n```ruby\nrequire 'sinatra'\nrequire 'bcrypt'\n\n# Configuration\nset :database, 'sqlite3:users.db'\n\n# User model\nclass User < Struct.new(:id, :username, :password)\n  def self.find_by_username(username)\n    users = database['users'].all\n    users.each do |user|\n      return user if user.username == username\n    end\n    nil\n  end\n\n  def password=(new_password)\n    self.password = BCrypt::Password.create(new_password)\n  end\nend\n\n# Login controller\nget '/login' do\n  erb :login\nend\n\npost '/login' do\n  username = params[:username]\n  password = params[:password]\n\n  user = User.find_by_username(username)\n\n  if user && user.password == BCrypt::Password.create(password)\n    session[:user_id] = user.id\n    redirect '/'\n  else\n    @error_message = 'Invalid username or password'\n    erb :login\n  end\nend\n\n# Logout controller\nget '/logout' do\n  session.clear\n  redirect '/'\nend\n\n# Protected route\nget '/' do\n  unless session[:user_id]\n    redirect '/login'\n  end\n  erb :home\nend\n```\n\n**database.rb**\n```ruby\nrequire 'sqlite3'\n\nclass Database\n  def initialize(filename)\n    @db = SQLite3::Database.new(filename)\n  end\n\n  def users\n    @users ||= @db.table_name('users')\n  end\n\n  def all\n    users.map do |row|\n      User.new(row['id'], row['username'], row['password'])\n    end\n  end\nend\n```\n\n**views/login.erb**\n```erb\n<form action=\"/login\" method=\"post\">\n  <label for=\"username\">Username:</label>\n  <input type=\"text\" name=\"username\" id=\"username\"><br><br>\n  <label for=\"password\">Password:</label>\n  <input type=\"password\" name=\"password\" id=\"password\"><br><br>\n  <button type=\"submit\">Login</button>\n  <% if @error_message %>\n    <p style=\"color: red;\"> <%= @error_message %> </p>\n  <% end %>\n</form>\n```\n\n**views/home.erb**\n```erb\n<p>Welcome, <%= session[:user_id] %>!</p>\n<form action=\"/logout\" method=\"post\">\n  <button type=\"submit\">Logout</button>\n</form>\n```\n\nThis example uses the `bcrypt` gem to hash passwords and store them in a SQLite database. The `login.rb` file defines routes for login, logout, and a protected home page. The `database.rb` file provides an interface to the SQLite database.\n\nTo run this code, save it as two separate files (`login.rb` and `database.rb`) and add a Gemfile with the following dependencies:\n\n```ruby\nsource 'https://rubygems.org'\n\ngem 'sinatra'\ngem 'bcrypt'\n```\n\nRun `bundle install`, then start the server with `ruby login.rb`. You can access the login page at `http://localhost:4567/login` and the protected home page at `http://localhost:4567/`.\n\nNote that this is a simplified example and you should consider adding more features, such as user registration and password reset. Additionally, you may want to use a more secure password hashing algorithm than BCrypt.", "code_blocks": ["```ruby\nrequire 'sinatra'\nrequire 'bcrypt'\n\n# Configuration\nset :database, 'sqlite3:users.db'\n\n# User model\nclass User < Struct.new(:id, :username, :password)\n  def self.find_by_username(username)\n    users = database['users'].all\n    users.each do |user|\n      return user if user.username == username\n    end\n    nil\n  end\n\n  def password=(new_password)\n    self.password = BCrypt::Password.create(new_password)\n  end\nend\n\n# Login controller\nget '/login' do\n  erb :login\nend\n\npost '/login' do\n  username = params[:username]\n  password = params[:password]\n\n  user = User.find_by_username(username)\n\n  if user && user.password == BCrypt::Password.create(password)\n    session[:user_id] = user.id\n    redirect '/'\n  else\n    @error_message = 'Invalid username or password'\n    erb :login\n  end\nend\n\n# Logout controller\nget '/logout' do\n  session.clear\n  redirect '/'\nend\n\n# Protected route\nget '/' do\n  unless session[:user_id]\n    redirect '/login'\n  end\n  erb :home\nend\n```", "```ruby\nrequire 'sqlite3'\n\nclass Database\n  def initialize(filename)\n    @db = SQLite3::Database.new(filename)\n  end\n\n  def users\n    @users ||= @db.table_name('users')\n  end\n\n  def all\n    users.map do |row|\n      User.new(row['id'], row['username'], row['password'])\n    end\n  end\nend\n```", null, null, "```ruby\nsource 'https://rubygems.org'\n\ngem 'sinatra'\ngem 'bcrypt'\n```"]}
