{"prompt": "Create a search function using ruby", "llm_output": "Here's an example of how you can create a simple search function in Ruby:\n\n**search.rb**\n```ruby\n# Define a class to hold the data we want to search\nclass Data\n  attr_accessor :id, :name, :description\n\n  def initialize(id, name, description)\n    @id = id\n    @name = name\n    @description = description\n  end\nend\n\n# Create an array of data objects to search through\ndata = [\n  Data.new(1, 'Apple', 'A red fruit'),\n  Data.new(2, 'Banana', 'A yellow fruit'),\n  Data.new(3, 'Orange', 'A orange fruit')\n]\n\n# Define the search function\ndef search(data, term)\n  results = []\n  data.each do |item|\n    if item.name.downcase.include?(term.downcase) || item.description.downcase.include?(term.downcase)\n      results << item\n    end\n  end\n  results\nend\n\n# Example usage:\nputs \"Searching for 'apple'...\"\nresults = search(data, 'apple')\nresults.each do |result|\n  puts \"#{result.id}: #{result.name} - #{result.description}\"\nend\n```\nThis code defines a `Data` class with attributes `id`, `name`, and `description`. It then creates an array of `Data` objects to search through.\n\nThe `search` function takes in an array of data and a search term. It loops through each item in the array, checking if either the `name` or `description` includes the search term (case-insensitive). If it does, the item is added to the results array.\n\nFinally, we use the `search` function with an example query and print out the results.\n\n**Example Output:**\n```\nSearching for 'apple'...\n1: Apple - A red fruit\n```\nYou can save this code in a file called `search.rb` and run it with Ruby to try it out. To make the search function more robust, you might consider using a library like SQLite or PostgreSQL to store your data, rather than an array.", "code_blocks": ["```ruby\n# Define a class to hold the data we want to search\nclass Data\n  attr_accessor :id, :name, :description\n\n  def initialize(id, name, description)\n    @id = id\n    @name = name\n    @description = description\n  end\nend\n\n# Create an array of data objects to search through\ndata = [\n  Data.new(1, 'Apple', 'A red fruit'),\n  Data.new(2, 'Banana', 'A yellow fruit'),\n  Data.new(3, 'Orange', 'A orange fruit')\n]\n\n# Define the search function\ndef search(data, term)\n  results = []\n  data.each do |item|\n    if item.name.downcase.include?(term.downcase) || item.description.downcase.include?(term.downcase)\n      results << item\n    end\n  end\n  results\nend\n\n# Example usage:\nputs \"Searching for 'apple'...\"\nresults = search(data, 'apple')\nresults.each do |result|\n  puts \"#{result.id}: #{result.name} - #{result.description}\"\nend\n```", null]}
