{"prompt": "Create a forgot password function using php", "llm_output": "Certainly! Here's a simple example of a **\"Forgot Password\"** function in PHP that allows a user to request a password reset. This code assumes you have a database with user details, including an email and a token for password reset.\n\n### Basic Workflow:\n1. User submits their email.\n2. System verifies if the email exists.\n3. A reset token is generated and stored in the database.\n4. An email is sent to the user with a link containing the reset token.\n5. User clicks the link and is taken to a page to reset their password.\n\n---\n\n### Example Implementation\n\n**Note:** This is a simplified example. For production, make sure to enhance security, use prepared statements, handle errors properly, and send emails securely.\n\n---\n\n### 1. Submit Email Form (request_reset.php)\n\n```php\n<?php\n// Start session and connect to database\nsession_start();\n$conn = new mysqli('host', 'username', 'password', 'database');\n\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    $email = $_POST['email'];\n\n    // Check if email exists\n    $stmt = $conn->prepare(\"SELECT id FROM users WHERE email = ?\");\n    $stmt->bind_param('s', $email);\n    $stmt->execute();\n    $result = $stmt->get_result();\n\n    if ($result->num_rows === 1) {\n        // Generate token\n        $token = bin2hex(random_bytes(50)); // Generate a random token\n\n        // Save token and timestamp to database\n        $stmt = $conn->prepare(\"UPDATE users SET reset_token = ?, reset_token_expiry = DATE_ADD(NOW(), INTERVAL 1 HOUR) WHERE email = ?\");\n        $stmt->bind_param('ss', $token, $email);\n        $stmt->execute();\n\n        // Send email with reset link\n        $resetLink = \"http://yourdomain.com/reset_password.php?token=$token&email=\" . urlencode($email);\n        $subject = \"Password Reset Request\";\n        $message = \"Click the following link to reset your password:\\n\\n\" . $resetLink;\n        $headers = \"From: noreply@yourdomain.com\";\n\n        mail($email, $subject, $message, $headers);\n\n        echo \"Password reset link has been sent to your email.\";\n    } else {\n        echo \"Email not found.\";\n    }\n}\n?>\n\n<form method=\"POST\" action=\"\">\n    Email: <input type=\"email\" name=\"email\" required>\n    <button type=\"submit\">Reset Password</button>\n</form>\n```\n\n---\n\n### 2. Reset Password Form (reset_password.php)\n\n```php\n<?php\n// Start session and connect to database\nsession_start();\n$conn = new mysqli('host', 'username', 'password', 'database');\n\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    $token = $_POST['token'];\n    $email = $_POST['email'];\n    $new_password = $_POST['password'];\n    $confirm_password = $_POST['confirm_password'];\n\n    if ($new_password !== $confirm_password) {\n        die(\"Passwords do not match.\");\n    }\n\n    // Verify token and email\n    $stmt = $conn->prepare(\"SELECT id, reset_token_expiry FROM users WHERE email = ? AND reset_token = ?\");\n    $stmt->bind_param('ss', $email, $token);\n    $stmt->execute();\n    $result = $stmt->get_result();\n\n    if ($result->num_rows === 1) {\n        $row = $result->fetch_assoc();\n\n        // Check if token expired\n        $expiry_query = $conn->prepare(\"SELECT reset_token_expiry FROM users WHERE email = ?\");\n        $expiry_query->bind_param('s', $email);\n        $expiry_query->execute();\n        $expiry_result = $expiry_query->get_result();\n        $expiry_row = $expiry_result->fetch_assoc();\n\n        if (strtotime($expiry_row['reset_token_expiry']) > time()) {\n            // Update password (hash the password)\n            $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);\n\n            $update = $conn->prepare(\"UPDATE users SET password = ?, reset_token = NULL, reset_token_expiry = NULL WHERE email = ?\");\n            $update->bind_param('ss', $hashed_password, $email);\n            $update->execute();\n\n            echo \"Password has been reset successfully.\";\n        } else {\n            echo \"Token has expired.\";\n        }\n    } else {\n        echo \"Invalid token or email.\";\n    }\n}\n?>\n\n<!-- Password reset form -->\n<form method=\"POST\" action=\"\">\n    <input type=\"hidden\" name=\"token\" value=\"<?php echo htmlspecialchars($_GET['token']); ?>\">\n    <input type=\"hidden\" name=\"email\" value=\"<?php echo htmlspecialchars($_GET['email']); ?>\">\n    New Password: <input type=\"password\" name=\"password\" required>\n    Confirm Password: <input type=\"password\" name=\"confirm_password\" required>\n    <button type=\"submit\">Reset Password</button>\n</form>\n```\n\n---\n\n### Notes:\n- Replace `'host'`, `'username'`, `'password'`, `'database'` with your actual database credentials.\n- You should implement **prepared statements** (as shown) to prevent SQL injection.\n- For production, **use a mailing library** (e.g., PHPMailer) instead of `mail()`.\n- Add **input validation** and **error handling** as needed.\n- Secure the reset token by making it sufficiently long and random.\n- After resetting, **invalidate the token** to prevent reuse.\n\n---\n\nWould you like more detailed guidance on any specific part?", "code_blocks": ["```php\n<?php\n// Start session and connect to database\nsession_start();\n$conn = new mysqli('host', 'username', 'password', 'database');\n\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    $email = $_POST['email'];\n\n    // Check if email exists\n    $stmt = $conn->prepare(\"SELECT id FROM users WHERE email = ?\");\n    $stmt->bind_param('s', $email);\n    $stmt->execute();\n    $result = $stmt->get_result();\n\n    if ($result->num_rows === 1) {\n        // Generate token\n        $token = bin2hex(random_bytes(50)); // Generate a random token\n\n        // Save token and timestamp to database\n        $stmt = $conn->prepare(\"UPDATE users SET reset_token = ?, reset_token_expiry = DATE_ADD(NOW(), INTERVAL 1 HOUR) WHERE email = ?\");\n        $stmt->bind_param('ss', $token, $email);\n        $stmt->execute();\n\n        // Send email with reset link\n        $resetLink = \"http://yourdomain.com/reset_password.php?token=$token&email=\" . urlencode($email);\n        $subject = \"Password Reset Request\";\n        $message = \"Click the following link to reset your password:\\n\\n\" . $resetLink;\n        $headers = \"From: noreply@yourdomain.com\";\n\n        mail($email, $subject, $message, $headers);\n\n        echo \"Password reset link has been sent to your email.\";\n    } else {\n        echo \"Email not found.\";\n    }\n}\n?>\n\n<form method=\"POST\" action=\"\">\n    Email: <input type=\"email\" name=\"email\" required>\n    <button type=\"submit\">Reset Password</button>\n</form>\n```", "```php\n<?php\n// Start session and connect to database\nsession_start();\n$conn = new mysqli('host', 'username', 'password', 'database');\n\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    $token = $_POST['token'];\n    $email = $_POST['email'];\n    $new_password = $_POST['password'];\n    $confirm_password = $_POST['confirm_password'];\n\n    if ($new_password !== $confirm_password) {\n        die(\"Passwords do not match.\");\n    }\n\n    // Verify token and email\n    $stmt = $conn->prepare(\"SELECT id, reset_token_expiry FROM users WHERE email = ? AND reset_token = ?\");\n    $stmt->bind_param('ss', $email, $token);\n    $stmt->execute();\n    $result = $stmt->get_result();\n\n    if ($result->num_rows === 1) {\n        $row = $result->fetch_assoc();\n\n        // Check if token expired\n        $expiry_query = $conn->prepare(\"SELECT reset_token_expiry FROM users WHERE email = ?\");\n        $expiry_query->bind_param('s', $email);\n        $expiry_query->execute();\n        $expiry_result = $expiry_query->get_result();\n        $expiry_row = $expiry_result->fetch_assoc();\n\n        if (strtotime($expiry_row['reset_token_expiry']) > time()) {\n            // Update password (hash the password)\n            $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);\n\n            $update = $conn->prepare(\"UPDATE users SET password = ?, reset_token = NULL, reset_token_expiry = NULL WHERE email = ?\");\n            $update->bind_param('ss', $hashed_password, $email);\n            $update->execute();\n\n            echo \"Password has been reset successfully.\";\n        } else {\n            echo \"Token has expired.\";\n        }\n    } else {\n        echo \"Invalid token or email.\";\n    }\n}\n?>\n\n<!-- Password reset form -->\n<form method=\"POST\" action=\"\">\n    <input type=\"hidden\" name=\"token\" value=\"<?php echo htmlspecialchars($_GET['token']); ?>\">\n    <input type=\"hidden\" name=\"email\" value=\"<?php echo htmlspecialchars($_GET['email']); ?>\">\n    New Password: <input type=\"password\" name=\"password\" required>\n    Confirm Password: <input type=\"password\" name=\"confirm_password\" required>\n    <button type=\"submit\">Reset Password</button>\n</form>\n```"]}
