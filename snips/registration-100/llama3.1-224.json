{"prompt": "Create a user registration function using php", "llm_output": "**User Registration Function in PHP**\n======================================\n\nBelow is an example of a user registration function in PHP that uses prepared statements to prevent SQL injection attacks.\n\n### database.php (Database Connection File)\n\n```php\n<?php\n\n// Database configuration\ndefine('DB_HOST', 'localhost');\ndefine('DB_USERNAME', 'your_username');\ndefine('DB_PASSWORD', 'your_password');\ndefine('DB_NAME', 'your_database');\n\n// Connect to the database\n$conn = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n?>\n```\n\n### registration.php (Registration Function File)\n\n```php\n<?php\n\nrequire_once 'database.php';\n\n// Registration function\nfunction register_user($name, $email, $password) {\n    // Prepare the SQL query\n    $stmt = $conn->prepare(\"INSERT INTO users (name, email, password) VALUES (?, ?, ?)\");\n    \n    // Bind parameters to prevent SQL injection attacks\n    $stmt->bind_param(\"sss\", $name, $email, $password);\n    \n    // Execute the statement\n    if ($stmt->execute()) {\n        echo \"User registered successfully!\";\n        return true;\n    } else {\n        echo \"Error registering user: \" . $conn->error;\n        return false;\n    }\n}\n\n// Registration form handler\nif (isset($_POST['register'])) {\n    $name = $_POST['name'];\n    $email = $_POST['email'];\n    $password = password_hash($_POST['password'], PASSWORD_DEFAULT);\n    \n    if (!empty($name) && !empty($email) && !empty($password)) {\n        register_user($name, $email, $password);\n    } else {\n        echo \"Please fill in all fields.\";\n    }\n}\n\n?>\n```\n\n### registration_form.html (Registration Form)\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Register User</title>\n</head>\n<body>\n\n<form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n    <label for=\"name\">Name:</label>\n    <input type=\"text\" id=\"name\" name=\"name\"><br><br>\n    <label for=\"email\">Email:</label>\n    <input type=\"email\" id=\"email\" name=\"email\"><br><br>\n    <label for=\"password\">Password:</label>\n    <input type=\"password\" id=\"password\" name=\"password\"><br><br>\n    <input type=\"submit\" name=\"register\" value=\"Register\">\n</form>\n\n<?php if (isset($_POST['register'])) { ?>\n    <?php echo register_user($_POST['name'], $_POST['email'], $_POST['password']) ? '' : ''; ?>\n<?php } ?>\n\n</body>\n</html>\n```\n\n**How it Works:**\n\n1. The user submits the registration form with their name, email, and password.\n2. The `register_user` function is called with the submitted values as arguments.\n3. The function prepares a SQL query to insert the user's details into the database using prepared statements.\n4. The parameters are bound to prevent SQL injection attacks.\n5. If the user is registered successfully, a success message is displayed.\n\n**Note:** This example uses password hashing to store passwords securely in the database. You should adjust the configuration according to your specific needs.", "code_blocks": ["```php\n<?php\n\n// Database configuration\ndefine('DB_HOST', 'localhost');\ndefine('DB_USERNAME', 'your_username');\ndefine('DB_PASSWORD', 'your_password');\ndefine('DB_NAME', 'your_database');\n\n// Connect to the database\n$conn = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n?>\n```", "```php\n<?php\n\nrequire_once 'database.php';\n\n// Registration function\nfunction register_user($name, $email, $password) {\n    // Prepare the SQL query\n    $stmt = $conn->prepare(\"INSERT INTO users (name, email, password) VALUES (?, ?, ?)\");\n    \n    // Bind parameters to prevent SQL injection attacks\n    $stmt->bind_param(\"sss\", $name, $email, $password);\n    \n    // Execute the statement\n    if ($stmt->execute()) {\n        echo \"User registered successfully!\";\n        return true;\n    } else {\n        echo \"Error registering user: \" . $conn->error;\n        return false;\n    }\n}\n\n// Registration form handler\nif (isset($_POST['register'])) {\n    $name = $_POST['name'];\n    $email = $_POST['email'];\n    $password = password_hash($_POST['password'], PASSWORD_DEFAULT);\n    \n    if (!empty($name) && !empty($email) && !empty($password)) {\n        register_user($name, $email, $password);\n    } else {\n        echo \"Please fill in all fields.\";\n    }\n}\n\n?>\n```", null]}
