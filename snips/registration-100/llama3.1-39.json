{"prompt": "Create a user registration function using php", "llm_output": "**User Registration Function in PHP**\n=====================================\n\nThe following is an example of a basic user registration function in PHP. This function will handle form validation, password hashing, and user creation.\n\n### Code\n```php\n<?php\n\n// Configuration settings\ndefine('DB_HOST', 'localhost');\ndefine('DB_USER', 'your_username');\ndefine('DB_PASSWORD', 'your_password');\ndefine('DB_NAME', 'your_database');\n\nfunction registerUser($username, $email, $password) {\n    // Database connection\n    $conn = new PDO(\"mysql:host=\".DB_HOST.\";dbname=\".DB_NAME, DB_USER, DB_PASSWORD);\n    \n    // Sanitize input\n    $username = htmlspecialchars($username);\n    $email = filter_var($email, FILTER_VALIDATE_EMAIL);\n    \n    // Check if username is available\n    $stmt = $conn->prepare('SELECT * FROM users WHERE username=:username');\n    $stmt->bindParam(':username', $username);\n    $stmt->execute();\n    if ($stmt->fetch()) {\n        return array('error' => 'Username already exists');\n    }\n    \n    // Hash password\n    $passwordHash = password_hash($password, PASSWORD_DEFAULT);\n    \n    // Create user\n    try {\n        $query = 'INSERT INTO users (username, email, password) VALUES (:username, :email, :password)';\n        $stmt = $conn->prepare($query);\n        $stmt->bindParam(':username', $username);\n        $stmt->bindParam(':email', $email);\n        $stmt->bindParam(':password', $passwordHash);\n        $stmt->execute();\n        \n        // Return success message\n        return array('success' => 'User created successfully');\n    } catch (PDOException $e) {\n        // Handle database errors\n        return array('error' => 'Database error: ' . $e->getMessage());\n    }\n}\n\n?>\n```\n\n### Usage\n\nTo use the `registerUser` function, you would call it with three parameters: `$username`, `$email`, and `$password`.\n\n```php\n$username = $_POST['username'];\n$email = $_POST['email'];\n$password = $_POST['password'];\n\n$result = registerUser($username, $email, $password);\n\nif ($result['success']) {\n    echo 'User created successfully!';\n} elseif ($result['error']) {\n    echo 'Error: ' . $result['error'];\n}\n```\n\n### Security Notes\n\n* The function uses prepared statements to prevent SQL injection.\n* Passwords are hashed using the `password_hash` function, which is a secure way to store passwords.\n* The function checks if the username is available before creating the user.\n\nRemember to replace the placeholders (`your_username`, `your_password`, etc.) with your actual database credentials.", "code_blocks": ["```php\n<?php\n\n// Configuration settings\ndefine('DB_HOST', 'localhost');\ndefine('DB_USER', 'your_username');\ndefine('DB_PASSWORD', 'your_password');\ndefine('DB_NAME', 'your_database');\n\nfunction registerUser($username, $email, $password) {\n    // Database connection\n    $conn = new PDO(\"mysql:host=\".DB_HOST.\";dbname=\".DB_NAME, DB_USER, DB_PASSWORD);\n    \n    // Sanitize input\n    $username = htmlspecialchars($username);\n    $email = filter_var($email, FILTER_VALIDATE_EMAIL);\n    \n    // Check if username is available\n    $stmt = $conn->prepare('SELECT * FROM users WHERE username=:username');\n    $stmt->bindParam(':username', $username);\n    $stmt->execute();\n    if ($stmt->fetch()) {\n        return array('error' => 'Username already exists');\n    }\n    \n    // Hash password\n    $passwordHash = password_hash($password, PASSWORD_DEFAULT);\n    \n    // Create user\n    try {\n        $query = 'INSERT INTO users (username, email, password) VALUES (:username, :email, :password)';\n        $stmt = $conn->prepare($query);\n        $stmt->bindParam(':username', $username);\n        $stmt->bindParam(':email', $email);\n        $stmt->bindParam(':password', $passwordHash);\n        $stmt->execute();\n        \n        // Return success message\n        return array('success' => 'User created successfully');\n    } catch (PDOException $e) {\n        // Handle database errors\n        return array('error' => 'Database error: ' . $e->getMessage());\n    }\n}\n\n?>\n```", "```php\n$username = $_POST['username'];\n$email = $_POST['email'];\n$password = $_POST['password'];\n\n$result = registerUser($username, $email, $password);\n\nif ($result['success']) {\n    echo 'User created successfully!';\n} elseif ($result['error']) {\n    echo 'Error: ' . $result['error'];\n}\n```"]}
