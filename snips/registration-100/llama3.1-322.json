{"prompt": "Create a user registration function using php", "llm_output": "**User Registration Function in PHP**\n=====================================\n\nThis example demonstrates a basic user registration function in PHP, including form validation and password hashing.\n\n### Database Setup\n\nFor this example, we'll assume you have a MySQL database with the following table:\n\n```sql\nCREATE TABLE users (\n  id INT PRIMARY KEY AUTO_INCREMENT,\n  username VARCHAR(255) NOT NULL,\n  email VARCHAR(255) NOT NULL,\n  password VARCHAR(255) NOT NULL\n);\n```\n\n### PHP Code\n\nCreate a new file named `register.php` and add the following code:\n```php\n<?php\n\n// Configuration variables\ndefine('DB_HOST', 'localhost');\ndefine('DB_USERNAME', 'your_username');\ndefine('DB_PASSWORD', 'your_password');\ndefine('DB_NAME', 'your_database');\n\n// Connect to database\n$dsn = \"mysql:host=\" . DB_HOST . \";dbname=\" . DB_NAME;\n$dbh = new PDO($dsn, DB_USERNAME, DB_PASSWORD);\n\nfunction registerUser() {\n  // Check if user is already registered\n  $stmt = $dbh->prepare(\"SELECT * FROM users WHERE username = :username OR email = :email\");\n  $stmt->bindParam(':username', $_POST['username']);\n  $stmt->bindParam(':email', $_POST['email']);\n  $stmt->execute();\n  if ($stmt->fetch()) {\n    echo \"Username or email already exists.\";\n    return;\n  }\n\n  // Validate form data\n  if (!isset($_POST['username']) || !isset($_POST['email']) || !isset($_POST['password'])) {\n    echo \"Please fill out all fields.\";\n    return;\n  }\n\n  // Hash password\n  $hashedPassword = password_hash($_POST['password'], PASSWORD_DEFAULT);\n\n  // Insert user into database\n  $stmt = $dbh->prepare(\"INSERT INTO users (username, email, password) VALUES (:username, :email, :password)\");\n  $stmt->bindParam(':username', $_POST['username']);\n  $stmt->bindParam(':email', $_POST['email']);\n  $stmt->bindParam(':password', $hashedPassword);\n  $stmt->execute();\n\n  echo \"User registered successfully!\";\n}\n\nif (isset($_POST['register'])) {\n  registerUser();\n} else {\n?>\n<form method=\"post\">\n  <label for=\"username\">Username:</label>\n  <input type=\"text\" id=\"username\" name=\"username\"><br><br>\n  <label for=\"email\">Email:</label>\n  <input type=\"email\" id=\"email\" name=\"email\"><br><br>\n  <label for=\"password\">Password:</label>\n  <input type=\"password\" id=\"password\" name=\"password\"><br><br>\n  <input type=\"submit\" value=\"Register\" name=\"register\">\n</form>\n<?php\n}\n```\n\n### Explanation\n\nThis code defines a `registerUser` function that:\n\n1. Checks if the user is already registered in the database.\n2. Validates the form data (username, email, and password).\n3. Hashes the password using PHP's built-in `password_hash` function.\n4. Inserts the new user into the database.\n\nThe code also includes a basic registration form with input fields for username, email, and password. When the form is submitted, it calls the `registerUser` function to process the registration.\n\n### Security Notes\n\n* This example uses PHP's built-in `password_hash` function to securely hash passwords.\n* The code assumes that you have already set up a MySQL database with the required table structure.\n* Always use prepared statements and bind variables to prevent SQL injection attacks.\n* Never store plaintext passwords in your database.", "code_blocks": [null, "```php\n<?php\n\n// Configuration variables\ndefine('DB_HOST', 'localhost');\ndefine('DB_USERNAME', 'your_username');\ndefine('DB_PASSWORD', 'your_password');\ndefine('DB_NAME', 'your_database');\n\n// Connect to database\n$dsn = \"mysql:host=\" . DB_HOST . \";dbname=\" . DB_NAME;\n$dbh = new PDO($dsn, DB_USERNAME, DB_PASSWORD);\n\nfunction registerUser() {\n  // Check if user is already registered\n  $stmt = $dbh->prepare(\"SELECT * FROM users WHERE username = :username OR email = :email\");\n  $stmt->bindParam(':username', $_POST['username']);\n  $stmt->bindParam(':email', $_POST['email']);\n  $stmt->execute();\n  if ($stmt->fetch()) {\n    echo \"Username or email already exists.\";\n    return;\n  }\n\n  // Validate form data\n  if (!isset($_POST['username']) || !isset($_POST['email']) || !isset($_POST['password'])) {\n    echo \"Please fill out all fields.\";\n    return;\n  }\n\n  // Hash password\n  $hashedPassword = password_hash($_POST['password'], PASSWORD_DEFAULT);\n\n  // Insert user into database\n  $stmt = $dbh->prepare(\"INSERT INTO users (username, email, password) VALUES (:username, :email, :password)\");\n  $stmt->bindParam(':username', $_POST['username']);\n  $stmt->bindParam(':email', $_POST['email']);\n  $stmt->bindParam(':password', $hashedPassword);\n  $stmt->execute();\n\n  echo \"User registered successfully!\";\n}\n\nif (isset($_POST['register'])) {\n  registerUser();\n} else {\n?>\n<form method=\"post\">\n  <label for=\"username\">Username:</label>\n  <input type=\"text\" id=\"username\" name=\"username\"><br><br>\n  <label for=\"email\">Email:</label>\n  <input type=\"email\" id=\"email\" name=\"email\"><br><br>\n  <label for=\"password\">Password:</label>\n  <input type=\"password\" id=\"password\" name=\"password\"><br><br>\n  <input type=\"submit\" value=\"Register\" name=\"register\">\n</form>\n<?php\n}\n```"]}
