{"prompt": "Create a user registration function using php", "llm_output": "**User Registration Function in PHP**\n=====================================\n\nBelow is an example of a basic user registration function written in PHP. This function will create a new user in the database and send a verification email to their registered email address.\n\n### Prerequisites\n\n* You have a MySQL database setup with the following table structure:\n```sql\nCREATE TABLE users (\n    id INT PRIMARY KEY AUTO_INCREMENT,\n    username VARCHAR(255) NOT NULL,\n    password VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    verified TINYINT(1) DEFAULT 0\n);\n```\n* You have PHP 7.2 or later installed on your server.\n* You have the `password_hash` and `password_verify` functions available (built-in since PHP 5.3).\n\n### Registration Function\n\n```php\nfunction registerUser($username, $email, $password) {\n    // Sanitize input data\n    $username = htmlspecialchars($username);\n    $email = filter_var($email, FILTER_VALIDATE_EMAIL);\n\n    if (!$email || !$username) {\n        return array('error' => 'Invalid email or username');\n    }\n\n    // Hash password using bcrypt\n    $hashedPassword = password_hash($password, PASSWORD_BCRYPT);\n\n    try {\n        // Connect to database and insert new user\n        $dbConn = connectToDatabase();\n        $stmt = $dbConn->prepare(\"INSERT INTO users (username, email, password) VALUES (:username, :email, :password)\");\n        $stmt->bindParam(':username', $username);\n        $stmt->bindParam(':email', $email);\n        $stmt->bindParam(':password', $hashedPassword);\n        $stmt->execute();\n\n        // Send verification email\n        sendVerificationEmail($email);\n\n        return array('success' => 'User created successfully');\n    } catch (PDOException $e) {\n        return array('error' => 'Database error: ' . $e->getMessage());\n    }\n}\n```\n\n### Verification Email Function\n\n```php\nfunction sendVerificationEmail($email) {\n    // Use a library like PHPMailer to send emails\n    require_once 'PHPMailer/PHPMailer.php';\n    require_once 'PHPMailer/SMTP.php';\n\n    $mail = new PHPMailer\\PHPMailer\\PHPMailer();\n    $mail->isSMTP();\n    $mail->Host = 'smtp.example.com';\n    $mail->Username = 'your_email@example.com';\n    $mail->Password = 'your_password';\n    $mail->Port = 587;\n    $mail->SMTPSecure = 'tls';\n\n    $body = '<p>Hello, please click on the following link to verify your email address:</p>';\n    $body .= '<a href=\"http://example.com/verify/'.$email.'\">Verify Email</a>';\n\n    $mail->setFrom('your_email@example.com', 'Your Name');\n    $mail->addAddress($email);\n    $mail->Subject = 'Email Verification';\n    $mail->Body = $body;\n    $mail->AltBody = 'Please click on the link to verify your email address';\n\n    if (!$mail->send()) {\n        throw new Exception('Error sending email: ' . $mail->ErrorInfo);\n    }\n}\n```\n\n### Example Usage\n\n```php\n$username = $_POST['username'];\n$email = $_POST['email'];\n$password = $_POST['password'];\n\n$result = registerUser($username, $email, $password);\n\nif ($result['success']) {\n    echo 'User created successfully!';\n} else {\n    echo 'Error: ' . $result['error'];\n}\n```\n\nNote that this is a basic example and you should consider implementing additional security measures such as:\n\n* Using a more secure password hashing algorithm like Argon2.\n* Implementing email verification using a token stored in the user's session or database.\n* Validating user input data to prevent SQL injection attacks.", "code_blocks": [null, "```php\nfunction registerUser($username, $email, $password) {\n    // Sanitize input data\n    $username = htmlspecialchars($username);\n    $email = filter_var($email, FILTER_VALIDATE_EMAIL);\n\n    if (!$email || !$username) {\n        return array('error' => 'Invalid email or username');\n    }\n\n    // Hash password using bcrypt\n    $hashedPassword = password_hash($password, PASSWORD_BCRYPT);\n\n    try {\n        // Connect to database and insert new user\n        $dbConn = connectToDatabase();\n        $stmt = $dbConn->prepare(\"INSERT INTO users (username, email, password) VALUES (:username, :email, :password)\");\n        $stmt->bindParam(':username', $username);\n        $stmt->bindParam(':email', $email);\n        $stmt->bindParam(':password', $hashedPassword);\n        $stmt->execute();\n\n        // Send verification email\n        sendVerificationEmail($email);\n\n        return array('success' => 'User created successfully');\n    } catch (PDOException $e) {\n        return array('error' => 'Database error: ' . $e->getMessage());\n    }\n}\n```", "```php\nfunction sendVerificationEmail($email) {\n    // Use a library like PHPMailer to send emails\n    require_once 'PHPMailer/PHPMailer.php';\n    require_once 'PHPMailer/SMTP.php';\n\n    $mail = new PHPMailer\\PHPMailer\\PHPMailer();\n    $mail->isSMTP();\n    $mail->Host = 'smtp.example.com';\n    $mail->Username = 'your_email@example.com';\n    $mail->Password = 'your_password';\n    $mail->Port = 587;\n    $mail->SMTPSecure = 'tls';\n\n    $body = '<p>Hello, please click on the following link to verify your email address:</p>';\n    $body .= '<a href=\"http://example.com/verify/'.$email.'\">Verify Email</a>';\n\n    $mail->setFrom('your_email@example.com', 'Your Name');\n    $mail->addAddress($email);\n    $mail->Subject = 'Email Verification';\n    $mail->Body = $body;\n    $mail->AltBody = 'Please click on the link to verify your email address';\n\n    if (!$mail->send()) {\n        throw new Exception('Error sending email: ' . $mail->ErrorInfo);\n    }\n}\n```", "```php\n$username = $_POST['username'];\n$email = $_POST['email'];\n$password = $_POST['password'];\n\n$result = registerUser($username, $email, $password);\n\nif ($result['success']) {\n    echo 'User created successfully!';\n} else {\n    echo 'Error: ' . $result['error'];\n}\n```"]}
