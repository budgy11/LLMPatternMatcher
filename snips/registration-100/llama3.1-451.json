{"prompt": "Create a user registration function using php", "llm_output": "**User Registration Function in PHP**\n=====================================\n\nThe following is an example of a user registration function written in PHP. This function takes the user's details as input and stores them in a database.\n\n**Function Code**\n-----------------\n\n```php\nfunction registerUser($username, $email, $password) {\n    // Database connection settings\n    $dbHost = 'localhost';\n    $dbUsername = 'your_username';\n    $dbPassword = 'your_password';\n    $dbName = 'your_database';\n\n    try {\n        // Create a database connection\n        $conn = new PDO(\"mysql:host=$dbHost;dbname=$dbName\", $dbUsername, $dbPassword);\n        $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);\n\n        // Check if the username is already taken\n        $stmt = $conn->prepare('SELECT * FROM users WHERE username = :username');\n        $stmt->bindParam(':username', $username);\n        $stmt->execute();\n        if ($stmt->fetch()) {\n            throw new Exception('Username already exists');\n        }\n\n        // Hash the password\n        $passwordHash = password_hash($password, PASSWORD_DEFAULT);\n\n        // Insert the user into the database\n        $insertQuery = 'INSERT INTO users (username, email, password) VALUES (:username, :email, :password)';\n        $stmt = $conn->prepare($insertQuery);\n        $stmt->bindParam(':username', $username);\n        $stmt->bindParam(':email', $email);\n        $stmt->bindParam(':password', $passwordHash);\n        $stmt->execute();\n\n        // Return a success message\n        return 'User registered successfully';\n    } catch (PDOException $e) {\n        // Handle any database connection errors\n        echo 'Database error: ' . $e->getMessage();\n        return null;\n    }\n}\n```\n\n**Example Usage**\n-----------------\n\n```php\n// Register a new user\n$username = 'johnDoe';\n$email = 'johndoe@example.com';\n$password = 'password123';\n\n$result = registerUser($username, $email, $password);\nif ($result !== null) {\n    echo $result;\n} else {\n    echo 'Registration failed';\n}\n```\n\n**Notes**\n\n* Make sure to replace `your_username`, `your_password`, and `your_database` with your actual database credentials.\n* The function uses PDO (PHP Data Objects) for a secure connection to the database. If you're not familiar with PDO, consider using it instead of the deprecated `mysql_` functions.\n* This example uses password hashing with `password_hash()` to store passwords securely in the database.\n* You may want to add additional error handling and validation depending on your specific requirements.", "code_blocks": ["```php\nfunction registerUser($username, $email, $password) {\n    // Database connection settings\n    $dbHost = 'localhost';\n    $dbUsername = 'your_username';\n    $dbPassword = 'your_password';\n    $dbName = 'your_database';\n\n    try {\n        // Create a database connection\n        $conn = new PDO(\"mysql:host=$dbHost;dbname=$dbName\", $dbUsername, $dbPassword);\n        $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);\n\n        // Check if the username is already taken\n        $stmt = $conn->prepare('SELECT * FROM users WHERE username = :username');\n        $stmt->bindParam(':username', $username);\n        $stmt->execute();\n        if ($stmt->fetch()) {\n            throw new Exception('Username already exists');\n        }\n\n        // Hash the password\n        $passwordHash = password_hash($password, PASSWORD_DEFAULT);\n\n        // Insert the user into the database\n        $insertQuery = 'INSERT INTO users (username, email, password) VALUES (:username, :email, :password)';\n        $stmt = $conn->prepare($insertQuery);\n        $stmt->bindParam(':username', $username);\n        $stmt->bindParam(':email', $email);\n        $stmt->bindParam(':password', $passwordHash);\n        $stmt->execute();\n\n        // Return a success message\n        return 'User registered successfully';\n    } catch (PDOException $e) {\n        // Handle any database connection errors\n        echo 'Database error: ' . $e->getMessage();\n        return null;\n    }\n}\n```", "```php\n// Register a new user\n$username = 'johnDoe';\n$email = 'johndoe@example.com';\n$password = 'password123';\n\n$result = registerUser($username, $email, $password);\nif ($result !== null) {\n    echo $result;\n} else {\n    echo 'Registration failed';\n}\n```"]}
