{"prompt": "Create a user registration function using php", "llm_output": "**User Registration Function in PHP**\n=====================================\n\nBelow is an example of a user registration function written in PHP. This function will handle the validation and insertion of new users into your database.\n\n### Requirements\n\n* PHP 7.x\n* MySQL or any other supported database system\n* A `users` table with columns for `id`, `username`, `email`, `password` (hashed)\n* Password hashing library (`password_hash()`)\n\n### Code\n\n```php\n<?php\n\n// Database connection settings\ndefine('DB_HOST', 'localhost');\ndefine('DB_USERNAME', 'your_username');\ndefine('DB_PASSWORD', 'your_password');\ndefine('DB_NAME', 'your_database_name');\n\nfunction registerUser($username, $email, $password) {\n    // Connect to the database\n    $conn = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);\n\n    if ($conn->connect_error) {\n        die(\"Connection failed: \" . $conn->connect_error);\n    }\n\n    // Check for existing username and email\n    $query = \"SELECT * FROM users WHERE username='$username' OR email='$email'\";\n    $result = $conn->query($query);\n\n    if ($result->num_rows > 0) {\n        return false; // User already exists\n    }\n\n    // Hash the password\n    $hashedPassword = password_hash($password, PASSWORD_DEFAULT);\n\n    // Insert new user into database\n    $insertQuery = \"INSERT INTO users (username, email, password) VALUES ('$username', '$email', '$hashedPassword')\";\n    if ($conn->query($insertQuery) === TRUE) {\n        return true; // User registered successfully\n    } else {\n        return false; // Error registering user\n    }\n\n    $conn->close();\n}\n\n// Example usage:\n$username = \"newuser\";\n$email = \"newuser@example.com\";\n$password = \"password123\";\n\nif (registerUser($username, $email, $password)) {\n    echo \"User registered successfully!\";\n} else {\n    echo \"Error registering user.\";\n}\n```\n\n### Notes\n\n* This is a basic example and you should consider implementing security measures such as validating user input, sanitizing data before insertion into the database, and using prepared statements to prevent SQL injection.\n* Always use secure password hashing functions like `password_hash()` and never store plain text passwords in your database.\n\nRemember to replace the placeholders (`your_username`, `your_password`, `your_database_name`) with your actual MySQL credentials and database name.", "code_blocks": ["```php\n<?php\n\n// Database connection settings\ndefine('DB_HOST', 'localhost');\ndefine('DB_USERNAME', 'your_username');\ndefine('DB_PASSWORD', 'your_password');\ndefine('DB_NAME', 'your_database_name');\n\nfunction registerUser($username, $email, $password) {\n    // Connect to the database\n    $conn = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);\n\n    if ($conn->connect_error) {\n        die(\"Connection failed: \" . $conn->connect_error);\n    }\n\n    // Check for existing username and email\n    $query = \"SELECT * FROM users WHERE username='$username' OR email='$email'\";\n    $result = $conn->query($query);\n\n    if ($result->num_rows > 0) {\n        return false; // User already exists\n    }\n\n    // Hash the password\n    $hashedPassword = password_hash($password, PASSWORD_DEFAULT);\n\n    // Insert new user into database\n    $insertQuery = \"INSERT INTO users (username, email, password) VALUES ('$username', '$email', '$hashedPassword')\";\n    if ($conn->query($insertQuery) === TRUE) {\n        return true; // User registered successfully\n    } else {\n        return false; // Error registering user\n    }\n\n    $conn->close();\n}\n\n// Example usage:\n$username = \"newuser\";\n$email = \"newuser@example.com\";\n$password = \"password123\";\n\nif (registerUser($username, $email, $password)) {\n    echo \"User registered successfully!\";\n} else {\n    echo \"Error registering user.\";\n}\n```"]}
