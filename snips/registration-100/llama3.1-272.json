{"prompt": "Create a user registration function using php", "llm_output": "**User Registration Function in PHP**\n=====================================\n\nBelow is an example of a simple user registration function in PHP. This function includes validation for email, password, and username.\n\n```php\n<?php\n\n/**\n * User registration function.\n *\n * @param array $data Registration data (username, email, password).\n *\n * @return array|bool Registration result or error message on failure.\n */\nfunction registerUser(array $data) {\n    // Input Validation\n    if (!isset($data['username']) || empty($data['username'])) {\n        return ['error' => 'Username is required'];\n    }\n\n    if (!isset($data['email']) || empty($data['email'])) {\n        return ['error' => 'Email is required'];\n    }\n\n    if (!filter_var($data['email'], FILTER_VALIDATE_EMAIL)) {\n        return ['error' => 'Invalid email address'];\n    }\n\n    if (!isset($data['password']) || strlen($data['password']) < 8) {\n        return ['error' => 'Password must be at least 8 characters long'];\n    }\n\n    // Prepare data for database insertion\n    $user = [\n        'username' => trim($data['username']),\n        'email' => filter_var($data['email'], FILTER_SANITIZE_EMAIL),\n        'password' => password_hash(trim($data['password']), PASSWORD_DEFAULT),\n    ];\n\n    // Simulated database connection and query (replace with actual database operations)\n    $db = new mysqli('localhost', 'username', 'password', 'database');\n\n    if ($db->connect_error) {\n        return ['error' => 'Database connection failed: ' . $db->connect_error];\n    }\n\n    $query = \"INSERT INTO users (username, email, password) VALUES (?, ?, ?)\";\n    $stmt = $db->prepare($query);\n\n    if (!$stmt) {\n        return ['error' => 'Prepare statement error'];\n    }\n\n    $result = $stmt->bind_param('sss', $user['username'], $user['email'], $user['password']);\n\n    if (!$result) {\n        return ['error' => 'Bind parameter error'];\n    }\n\n    if ($stmt->execute()) {\n        // Successful registration\n        return [\n            'success' => true,\n            'message' => 'User registered successfully',\n            'data' => ['username' => $user['username'], 'email' => $user['email']],\n        ];\n    } else {\n        // Registration failure\n        return ['error' => 'Database query error'];\n    }\n\n    $stmt->close();\n    $db->close();\n\n    return false;\n}\n\n// Example usage:\n$data = [\n    'username' => 'newuser',\n    'email' => 'example@example.com',\n    'password' => 'strongpassword123',\n];\n\n$result = registerUser($data);\n\nif (isset($result['error'])) {\n    echo 'Error: ' . $result['error'] . \"\\n\";\n} elseif (isset($result['success'])) {\n    var_dump($result);\n}\n```\n\nPlease note that this code snippet is a simplified version of user registration. For security reasons, consider using prepared statements for all SQL queries and ensure proper error handling in production environments.", "code_blocks": ["```php\n<?php\n\n/**\n * User registration function.\n *\n * @param array $data Registration data (username, email, password).\n *\n * @return array|bool Registration result or error message on failure.\n */\nfunction registerUser(array $data) {\n    // Input Validation\n    if (!isset($data['username']) || empty($data['username'])) {\n        return ['error' => 'Username is required'];\n    }\n\n    if (!isset($data['email']) || empty($data['email'])) {\n        return ['error' => 'Email is required'];\n    }\n\n    if (!filter_var($data['email'], FILTER_VALIDATE_EMAIL)) {\n        return ['error' => 'Invalid email address'];\n    }\n\n    if (!isset($data['password']) || strlen($data['password']) < 8) {\n        return ['error' => 'Password must be at least 8 characters long'];\n    }\n\n    // Prepare data for database insertion\n    $user = [\n        'username' => trim($data['username']),\n        'email' => filter_var($data['email'], FILTER_SANITIZE_EMAIL),\n        'password' => password_hash(trim($data['password']), PASSWORD_DEFAULT),\n    ];\n\n    // Simulated database connection and query (replace with actual database operations)\n    $db = new mysqli('localhost', 'username', 'password', 'database');\n\n    if ($db->connect_error) {\n        return ['error' => 'Database connection failed: ' . $db->connect_error];\n    }\n\n    $query = \"INSERT INTO users (username, email, password) VALUES (?, ?, ?)\";\n    $stmt = $db->prepare($query);\n\n    if (!$stmt) {\n        return ['error' => 'Prepare statement error'];\n    }\n\n    $result = $stmt->bind_param('sss', $user['username'], $user['email'], $user['password']);\n\n    if (!$result) {\n        return ['error' => 'Bind parameter error'];\n    }\n\n    if ($stmt->execute()) {\n        // Successful registration\n        return [\n            'success' => true,\n            'message' => 'User registered successfully',\n            'data' => ['username' => $user['username'], 'email' => $user['email']],\n        ];\n    } else {\n        // Registration failure\n        return ['error' => 'Database query error'];\n    }\n\n    $stmt->close();\n    $db->close();\n\n    return false;\n}\n\n// Example usage:\n$data = [\n    'username' => 'newuser',\n    'email' => 'example@example.com',\n    'password' => 'strongpassword123',\n];\n\n$result = registerUser($data);\n\nif (isset($result['error'])) {\n    echo 'Error: ' . $result['error'] . \"\\n\";\n} elseif (isset($result['success'])) {\n    var_dump($result);\n}\n```"]}
