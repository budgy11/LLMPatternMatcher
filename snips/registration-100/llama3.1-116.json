{"prompt": "Create a user registration function using php", "llm_output": "**User Registration Function in PHP**\n=====================================\n\nThis is an example of a user registration function written in PHP. It includes validation, hashing, and storing the registered user's details.\n\n### Requirements\n\n* PHP 7.x\n* MySQL or other database system with the necessary permissions\n* A secure way to store passwords (e.g., bcrypt)\n\n### Code\n\n```php\n<?php\n\n// Configuration\ndefine('DB_HOST', 'localhost');\ndefine('DB_USER', 'your_username');\ndefine('DB_PASSWORD', 'your_password');\ndefine('DB_NAME', 'your_database');\n\n// Database connection\nfunction connectToDatabase() {\n    $conn = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);\n    if ($conn->connect_error) {\n        die(\"Connection failed: \" . $conn->connect_error);\n    }\n    return $conn;\n}\n\n// User registration function\nfunction registerUser($username, $email, $password) {\n    // Validate input\n    if (empty($username) || empty($email) || empty($password)) {\n        throw new Exception(\"All fields are required.\");\n    }\n\n    // Check if username already exists\n    $conn = connectToDatabase();\n    $sql = \"SELECT * FROM users WHERE username = '$username'\";\n    $result = $conn->query($sql);\n    if ($result->num_rows > 0) {\n        throw new Exception(\"Username is already taken.\");\n    }\n\n    // Hash password\n    $passwordHash = password_hash($password, PASSWORD_DEFAULT);\n\n    // Insert user into database\n    $sql = \"INSERT INTO users (username, email, password) VALUES ('$username', '$email', '$passwordHash')\";\n    if ($conn->query($sql) === TRUE) {\n        return true;\n    } else {\n        throw new Exception(\"Error registering user: \" . $conn->error);\n    }\n\n    // Close database connection\n    $conn->close();\n}\n\n// Example usage:\ntry {\n    registerUser('johnDoe', 'johndoe@example.com', 'password123');\n} catch (Exception $e) {\n    echo \"Registration failed: \" . $e->getMessage() . \"\\n\";\n}\n?>\n```\n\n### Explanation\n\n1. The `connectToDatabase()` function establishes a connection to the database using the defined credentials.\n2. The `registerUser()` function takes in three parameters: `$username`, `$email`, and `$password`. It checks for empty input fields and throws an exception if any are missing.\n3. It then queries the database to check if the provided username already exists. If it does, an exception is thrown.\n4. The password is hashed using `password_hash()` (PHP 5.5+) or a similar function in older versions of PHP.\n5. Finally, the user's details are inserted into the database. If the insertion fails, an exception is thrown.\n\n### Notes\n\n* This example uses MySQL for demonstration purposes. You should adapt it to your specific database system.\n* Password storage and hashing are crucial security aspects. Use a secure method like bcrypt or Argon2 to store passwords.\n* Always validate user input and check for potential SQL injection vulnerabilities.\n* Consider implementing additional validation, such as email verification or password strength checks.", "code_blocks": ["```php\n<?php\n\n// Configuration\ndefine('DB_HOST', 'localhost');\ndefine('DB_USER', 'your_username');\ndefine('DB_PASSWORD', 'your_password');\ndefine('DB_NAME', 'your_database');\n\n// Database connection\nfunction connectToDatabase() {\n    $conn = new mysqli(DB_HOST, DB_USER, DB_PASSWORD, DB_NAME);\n    if ($conn->connect_error) {\n        die(\"Connection failed: \" . $conn->connect_error);\n    }\n    return $conn;\n}\n\n// User registration function\nfunction registerUser($username, $email, $password) {\n    // Validate input\n    if (empty($username) || empty($email) || empty($password)) {\n        throw new Exception(\"All fields are required.\");\n    }\n\n    // Check if username already exists\n    $conn = connectToDatabase();\n    $sql = \"SELECT * FROM users WHERE username = '$username'\";\n    $result = $conn->query($sql);\n    if ($result->num_rows > 0) {\n        throw new Exception(\"Username is already taken.\");\n    }\n\n    // Hash password\n    $passwordHash = password_hash($password, PASSWORD_DEFAULT);\n\n    // Insert user into database\n    $sql = \"INSERT INTO users (username, email, password) VALUES ('$username', '$email', '$passwordHash')\";\n    if ($conn->query($sql) === TRUE) {\n        return true;\n    } else {\n        throw new Exception(\"Error registering user: \" . $conn->error);\n    }\n\n    // Close database connection\n    $conn->close();\n}\n\n// Example usage:\ntry {\n    registerUser('johnDoe', 'johndoe@example.com', 'password123');\n} catch (Exception $e) {\n    echo \"Registration failed: \" . $e->getMessage() . \"\\n\";\n}\n?>\n```"]}
