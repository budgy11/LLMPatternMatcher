{"prompt": "Create a user registration function using php", "llm_output": "**User Registration Function in PHP**\n=====================================\n\nBelow is an example of a user registration function in PHP. This function will register a new user with the provided details.\n\n```php\nfunction registerUser($firstName, $lastName, $email, $password) {\n    // Validate input data\n    if (empty($firstName) || empty($lastName) || empty($email) || empty($password)) {\n        throw new Exception(\"All fields are required.\");\n    }\n\n    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {\n        throw new Exception(\"Invalid email address.\");\n    }\n\n    // Hash password for secure storage\n    $hashedPassword = password_hash($password, PASSWORD_DEFAULT);\n\n    // Prepare user data to be stored in database\n    $userData = [\n        'first_name' => $firstName,\n        'last_name' => $lastName,\n        'email' => $email,\n        'password' => $hashedPassword,\n    ];\n\n    // Connect to database and insert user data\n    $conn = new PDO('mysql:host=localhost;dbname=your_database', 'your_username', 'your_password');\n    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);\n\n    try {\n        $stmt = $conn->prepare(\"INSERT INTO users (first_name, last_name, email, password) VALUES (:first_name, :last_name, :email, :password)\");\n        $stmt->bindParam(':first_name', $userData['first_name']);\n        $stmt->bindParam(':last_name', $userData['last_name']);\n        $stmt->bindParam(':email', $userData['email']);\n        $stmt->bindParam(':password', $userData['password']);\n\n        if ($stmt->execute()) {\n            return true; // User registered successfully\n        } else {\n            throw new Exception(\"Failed to register user.\");\n        }\n    } catch (PDOException $e) {\n        throw new Exception(\"Database error: \" . $e->getMessage());\n    } finally {\n        $conn = null;\n    }\n\n    return false; // Registration failed\n}\n```\n\n**Example Usage**\n---------------\n\n```php\ntry {\n    $registered = registerUser('John', 'Doe', 'john@example.com', 'password123');\n    if ($registered) {\n        echo \"User registered successfully.\";\n    } else {\n        throw new Exception(\"Failed to register user.\");\n    }\n} catch (Exception $e) {\n    echo \"Error: \" . $e->getMessage();\n}\n```\n\n**Notes**\n\n*   Make sure to replace `'mysql:host=localhost;dbname=your_database'`, `'your_username'`, and `'your_password'` with your actual database credentials.\n*   This example uses PDO for database operations. If you're using a different database library or framework, adjust the code accordingly.\n*   The password is hashed using `password_hash()` before being stored in the database to ensure secure storage.", "code_blocks": ["```php\nfunction registerUser($firstName, $lastName, $email, $password) {\n    // Validate input data\n    if (empty($firstName) || empty($lastName) || empty($email) || empty($password)) {\n        throw new Exception(\"All fields are required.\");\n    }\n\n    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {\n        throw new Exception(\"Invalid email address.\");\n    }\n\n    // Hash password for secure storage\n    $hashedPassword = password_hash($password, PASSWORD_DEFAULT);\n\n    // Prepare user data to be stored in database\n    $userData = [\n        'first_name' => $firstName,\n        'last_name' => $lastName,\n        'email' => $email,\n        'password' => $hashedPassword,\n    ];\n\n    // Connect to database and insert user data\n    $conn = new PDO('mysql:host=localhost;dbname=your_database', 'your_username', 'your_password');\n    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);\n\n    try {\n        $stmt = $conn->prepare(\"INSERT INTO users (first_name, last_name, email, password) VALUES (:first_name, :last_name, :email, :password)\");\n        $stmt->bindParam(':first_name', $userData['first_name']);\n        $stmt->bindParam(':last_name', $userData['last_name']);\n        $stmt->bindParam(':email', $userData['email']);\n        $stmt->bindParam(':password', $userData['password']);\n\n        if ($stmt->execute()) {\n            return true; // User registered successfully\n        } else {\n            throw new Exception(\"Failed to register user.\");\n        }\n    } catch (PDOException $e) {\n        throw new Exception(\"Database error: \" . $e->getMessage());\n    } finally {\n        $conn = null;\n    }\n\n    return false; // Registration failed\n}\n```", "```php\ntry {\n    $registered = registerUser('John', 'Doe', 'john@example.com', 'password123');\n    if ($registered) {\n        echo \"User registered successfully.\";\n    } else {\n        throw new Exception(\"Failed to register user.\");\n    }\n} catch (Exception $e) {\n    echo \"Error: \" . $e->getMessage();\n}\n```"]}
