{"prompt": "Create a user registration function using php", "llm_output": "**User Registration Function in PHP**\n=====================================\n\nBelow is an example of a user registration function in PHP, which includes validation and secure password hashing.\n\n### `register.php` File\n```php\n<?php\n\nrequire_once 'config.php'; // database configuration file\n\nfunction register($username, $email, $password) {\n    global $db;\n\n    // Validate input fields\n    if (empty($username) || empty($email) || empty($password)) {\n        return array('error' => 'Please fill in all required fields');\n    }\n\n    // Validate email format\n    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {\n        return array('error' => 'Invalid email address');\n    }\n\n    // Check for existing username and email\n    $query = \"SELECT * FROM users WHERE username='$username'\";\n    $result = mysqli_query($db, $query);\n    if (mysqli_num_rows($result) > 0) {\n        return array('error' => 'Username already taken');\n    }\n\n    $query = \"SELECT * FROM users WHERE email='$email'\";\n    $result = mysqli_query($db, $query);\n    if (mysqli_num_rows($result) > 0) {\n        return array('error' => 'Email already in use');\n    }\n\n    // Hash password\n    $passwordHash = password_hash($password, PASSWORD_DEFAULT);\n\n    // Insert new user into database\n    $query = \"INSERT INTO users (username, email, password) VALUES ('$username', '$email', '$passwordHash')\";\n    if (!mysqli_query($db, $query)) {\n        return array('error' => 'Failed to register user');\n    }\n\n    return array('success' => true);\n}\n\n?>\n```\n\n### Example Usage\n```php\n<?php\n\nrequire_once 'register.php';\n\n$username = $_POST['username'];\n$email = $_POST['email'];\n$password = $_POST['password'];\n\n$result = register($username, $email, $password);\n\nif ($result['success']) {\n    echo \"User registered successfully!\";\n} else {\n    echo \"Error: \" . $result['error'];\n}\n\n?>\n```\n\n### Security Notes\n\n*   Always use prepared statements or parameterized queries to prevent SQL injection attacks.\n*   Use the `filter_var` function to validate email addresses and other user input fields.\n*   Store passwords securely using a library like PHP's built-in `password_hash` function.\n\n**Note**: This example assumes you have a `config.php` file containing your database credentials and configuration. Make sure to replace these with your own values for the script to work properly. Additionally, this is just an example implementation; you may want to enhance it based on your specific requirements or add additional validation and security measures as necessary.", "code_blocks": ["```php\n<?php\n\nrequire_once 'config.php'; // database configuration file\n\nfunction register($username, $email, $password) {\n    global $db;\n\n    // Validate input fields\n    if (empty($username) || empty($email) || empty($password)) {\n        return array('error' => 'Please fill in all required fields');\n    }\n\n    // Validate email format\n    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {\n        return array('error' => 'Invalid email address');\n    }\n\n    // Check for existing username and email\n    $query = \"SELECT * FROM users WHERE username='$username'\";\n    $result = mysqli_query($db, $query);\n    if (mysqli_num_rows($result) > 0) {\n        return array('error' => 'Username already taken');\n    }\n\n    $query = \"SELECT * FROM users WHERE email='$email'\";\n    $result = mysqli_query($db, $query);\n    if (mysqli_num_rows($result) > 0) {\n        return array('error' => 'Email already in use');\n    }\n\n    // Hash password\n    $passwordHash = password_hash($password, PASSWORD_DEFAULT);\n\n    // Insert new user into database\n    $query = \"INSERT INTO users (username, email, password) VALUES ('$username', '$email', '$passwordHash')\";\n    if (!mysqli_query($db, $query)) {\n        return array('error' => 'Failed to register user');\n    }\n\n    return array('success' => true);\n}\n\n?>\n```", "```php\n<?php\n\nrequire_once 'register.php';\n\n$username = $_POST['username'];\n$email = $_POST['email'];\n$password = $_POST['password'];\n\n$result = register($username, $email, $password);\n\nif ($result['success']) {\n    echo \"User registered successfully!\";\n} else {\n    echo \"Error: \" . $result['error'];\n}\n\n?>\n```"]}
