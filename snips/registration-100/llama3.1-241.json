{"prompt": "Create a user registration function using php", "llm_output": "Here is an example of a user registration function in PHP:\n\n**Note:** This example uses PDO (PHP Data Objects) to interact with the database, but you can modify it to use other methods like MySQLi or native SQL.\n\n```php\n<?php\n\n// Configuration variables\n$databaseHost = 'localhost';\n$databaseName = 'your_database_name';\n$databaseUsername = 'your_database_username';\n$databasePassword = 'your_database_password';\n\nfunction registerUser($username, $email, $password) {\n    // Connect to the database\n    try {\n        $pdo = new PDO(\"mysql:host=$databaseHost;dbname=$databaseName\", $databaseUsername, $databasePassword);\n        $pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);\n\n        // Hash the password\n        $hashedPassword = password_hash($password, PASSWORD_DEFAULT);\n\n        // Prepare and execute the query to register the user\n        $stmt = $pdo->prepare(\"INSERT INTO users (username, email, password) VALUES (:username, :email, :password)\");\n        $stmt->bindParam(':username', $username);\n        $stmt->bindParam(':email', $email);\n        $stmt->bindParam(':password', $hashedPassword);\n\n        if ($stmt->execute()) {\n            // Registration successful\n            return true;\n        } else {\n            // Registration failed (e.g. due to duplicate username or email)\n            return false;\n        }\n    } catch (PDOException $e) {\n        // Handle database connection error\n        echo \"Database connection error: \" . $e->getMessage();\n        return false;\n    } finally {\n        // Close the PDO object\n        $pdo = null;\n    }\n}\n\n// Example usage:\nif (isset($_POST['username']) && isset($_POST['email']) && isset($_POST['password'])) {\n    $username = $_POST['username'];\n    $email = $_POST['email'];\n    $password = $_POST['password'];\n\n    if ($registerUser($username, $email, $password)) {\n        echo \"Registration successful!\";\n    } else {\n        echo \"Registration failed. Please try again.\";\n    }\n}\n?>\n```\n\nThis function takes three parameters:\n\n* `$username`: the username chosen by the user\n* `$email`: the email address chosen by the user\n* `$password`: the password chosen by the user\n\nThe function first connects to the database, hashes the password using `password_hash()`, and then prepares a query to insert the new user into the `users` table. If the query is executed successfully, the function returns `true`; otherwise, it returns `false`.\n\nYou can use this function in your web application by calling it when the registration form is submitted.\n\n**Security notes:**\n\n* Make sure to replace the placeholders (`$databaseHost`, `$databaseName`, etc.) with your actual database credentials.\n* This example uses prepared statements and parameterized queries to prevent SQL injection attacks.", "code_blocks": ["```php\n<?php\n\n// Configuration variables\n$databaseHost = 'localhost';\n$databaseName = 'your_database_name';\n$databaseUsername = 'your_database_username';\n$databasePassword = 'your_database_password';\n\nfunction registerUser($username, $email, $password) {\n    // Connect to the database\n    try {\n        $pdo = new PDO(\"mysql:host=$databaseHost;dbname=$databaseName\", $databaseUsername, $databasePassword);\n        $pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);\n\n        // Hash the password\n        $hashedPassword = password_hash($password, PASSWORD_DEFAULT);\n\n        // Prepare and execute the query to register the user\n        $stmt = $pdo->prepare(\"INSERT INTO users (username, email, password) VALUES (:username, :email, :password)\");\n        $stmt->bindParam(':username', $username);\n        $stmt->bindParam(':email', $email);\n        $stmt->bindParam(':password', $hashedPassword);\n\n        if ($stmt->execute()) {\n            // Registration successful\n            return true;\n        } else {\n            // Registration failed (e.g. due to duplicate username or email)\n            return false;\n        }\n    } catch (PDOException $e) {\n        // Handle database connection error\n        echo \"Database connection error: \" . $e->getMessage();\n        return false;\n    } finally {\n        // Close the PDO object\n        $pdo = null;\n    }\n}\n\n// Example usage:\nif (isset($_POST['username']) && isset($_POST['email']) && isset($_POST['password'])) {\n    $username = $_POST['username'];\n    $email = $_POST['email'];\n    $password = $_POST['password'];\n\n    if ($registerUser($username, $email, $password)) {\n        echo \"Registration successful!\";\n    } else {\n        echo \"Registration failed. Please try again.\";\n    }\n}\n?>\n```"]}
