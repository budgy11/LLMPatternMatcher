{"prompt": "Create a user registration function using php", "llm_output": "Here's an example of a basic user registration function in PHP:\n\n**User Registration Function**\n```php\n<?php\n\n// Define the database connection settings\n$dbHost = 'localhost';\n$dbUsername = 'your_username';\n$dbPassword = 'your_password';\n$dbName = 'your_database';\n\n// Create a new PDO instance\n$conn = new PDO(\"mysql:host=$dbHost;dbname=$dbName\", $dbUsername, $dbPassword);\n\nfunction registerUser($email, $username, $password) {\n  // Check if the user already exists\n  $stmt = $conn->prepare(\"SELECT * FROM users WHERE email = :email OR username = :username\");\n  $stmt->bindParam(':email', $email);\n  $stmt->bindParam(':username', $username);\n  $stmt->execute();\n  $result = $stmt->fetchAll();\n\n  if (!empty($result)) {\n    // User already exists, return an error\n    return array('error' => 'User with this email or username already exists');\n  }\n\n  // Hash the password using bcrypt\n  $passwordHash = password_hash($password, PASSWORD_BCRYPT);\n\n  // Insert the new user into the database\n  $stmt = $conn->prepare(\"INSERT INTO users (email, username, password) VALUES (:email, :username, :password)\");\n  $stmt->bindParam(':email', $email);\n  $stmt->bindParam(':username', $username);\n  $stmt->bindParam(':password', $passwordHash);\n  $stmt->execute();\n\n  // Return the new user's data\n  return array('success' => true, 'user_data' => array(\n    'email' => $email,\n    'username' => $username\n  ));\n}\n\n?>\n```\n**Explanation**\n\nThis function takes in three parameters: `$email`, `$username`, and `$password`. It first checks if a user with the same email or username already exists by executing a SELECT query. If no results are returned, it hashes the password using bcrypt and inserts the new user into the database.\n\nThe function returns an array with two possible values:\n\n* `error`: A string indicating that a user with this email or username already exists.\n* `success` (true): An array containing the new user's data, including their email and username.\n\n**Example Use Case**\n\n```php\n$userData = registerUser('example@example.com', 'johnDoe', 'password123');\n\nif ($userData['error']) {\n  echo \"Error: \" . $userData['error'];\n} else {\n  echo \"New User Registered!\";\n  print_r($userData);\n}\n```\nNote that this is a basic example and you should add more error checking, validation, and security measures depending on your specific requirements.", "code_blocks": ["```php\n<?php\n\n// Define the database connection settings\n$dbHost = 'localhost';\n$dbUsername = 'your_username';\n$dbPassword = 'your_password';\n$dbName = 'your_database';\n\n// Create a new PDO instance\n$conn = new PDO(\"mysql:host=$dbHost;dbname=$dbName\", $dbUsername, $dbPassword);\n\nfunction registerUser($email, $username, $password) {\n  // Check if the user already exists\n  $stmt = $conn->prepare(\"SELECT * FROM users WHERE email = :email OR username = :username\");\n  $stmt->bindParam(':email', $email);\n  $stmt->bindParam(':username', $username);\n  $stmt->execute();\n  $result = $stmt->fetchAll();\n\n  if (!empty($result)) {\n    // User already exists, return an error\n    return array('error' => 'User with this email or username already exists');\n  }\n\n  // Hash the password using bcrypt\n  $passwordHash = password_hash($password, PASSWORD_BCRYPT);\n\n  // Insert the new user into the database\n  $stmt = $conn->prepare(\"INSERT INTO users (email, username, password) VALUES (:email, :username, :password)\");\n  $stmt->bindParam(':email', $email);\n  $stmt->bindParam(':username', $username);\n  $stmt->bindParam(':password', $passwordHash);\n  $stmt->execute();\n\n  // Return the new user's data\n  return array('success' => true, 'user_data' => array(\n    'email' => $email,\n    'username' => $username\n  ));\n}\n\n?>\n```", "```php\n$userData = registerUser('example@example.com', 'johnDoe', 'password123');\n\nif ($userData['error']) {\n  echo \"Error: \" . $userData['error'];\n} else {\n  echo \"New User Registered!\";\n  print_r($userData);\n}\n```"]}
