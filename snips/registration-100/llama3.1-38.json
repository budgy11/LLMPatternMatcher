{"prompt": "Create a user registration function using php", "llm_output": "**User Registration Function in PHP**\n=====================================\n\nBelow is an example of a simple user registration function written in PHP. This function will handle the validation and insertion of new users into a database.\n\n### Database Connection\n\nFirst, we need to establish a connection with our database. We'll use PDO (PHP Data Objects) for this purpose.\n\n```php\n// Database configuration\n$host = 'localhost';\n$dbname = 'mydatabase';\n$username = 'root';\n$password = '';\n\ntry {\n    $pdo = new PDO(\"mysql:host=$host;dbname=$dbname\", $username, $password);\n} catch (PDOException $e) {\n    echo \"Connection failed: \" . $e->getMessage();\n}\n```\n\n### User Registration Function\n\nNext, we'll create the user registration function. This function will take in the user's details and insert them into our database.\n\n```php\nfunction registerUser($name, $email, $password)\n{\n    // Validate input data\n    if (empty($name) || empty($email) || empty($password)) {\n        return array('status' => 'error', 'message' => 'All fields are required');\n    }\n\n    // Validate email address\n    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {\n        return array('status' => 'error', 'message' => 'Invalid email address');\n    }\n\n    // Hash password\n    $passwordHash = hash('sha256', $password);\n\n    // Prepare SQL query to insert new user into database\n    try {\n        $query = \"INSERT INTO users (name, email, password_hash) VALUES (:name, :email, :password)\";\n        $stmt = $pdo->prepare($query);\n        $stmt->bindParam(':name', $name);\n        $stmt->bindParam(':email', $email);\n        $stmt->bindParam(':password', $passwordHash);\n\n        // Execute query and return result\n        if ($stmt->execute()) {\n            return array('status' => 'success', 'message' => 'User registered successfully');\n        } else {\n            return array('status' => 'error', 'message' => 'Failed to register user');\n        }\n    } catch (PDOException $e) {\n        return array('status' => 'error', 'message' => 'Database error: ' . $e->getMessage());\n    }\n}\n```\n\n### Example Usage\n\nTo use this function, you can call it with the required parameters:\n\n```php\n$name = \"John Doe\";\n$email = \"john@example.com\";\n$password = \"password123\";\n\n$result = registerUser($name, $email, $password);\n\nif ($result['status'] == 'success') {\n    echo \"User registered successfully!\";\n} else {\n    echo \"Error: \" . $result['message'];\n}\n```\n\nThis code snippet provides a basic example of user registration functionality in PHP. Please note that you should always validate and sanitize user input to prevent security vulnerabilities such as SQL injection and cross-site scripting (XSS). Additionally, consider using more secure password hashing algorithms like bcrypt or PBKDF2 instead of SHA-256 used here for demonstration purposes.", "code_blocks": ["```php\n// Database configuration\n$host = 'localhost';\n$dbname = 'mydatabase';\n$username = 'root';\n$password = '';\n\ntry {\n    $pdo = new PDO(\"mysql:host=$host;dbname=$dbname\", $username, $password);\n} catch (PDOException $e) {\n    echo \"Connection failed: \" . $e->getMessage();\n}\n```", "```php\nfunction registerUser($name, $email, $password)\n{\n    // Validate input data\n    if (empty($name) || empty($email) || empty($password)) {\n        return array('status' => 'error', 'message' => 'All fields are required');\n    }\n\n    // Validate email address\n    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {\n        return array('status' => 'error', 'message' => 'Invalid email address');\n    }\n\n    // Hash password\n    $passwordHash = hash('sha256', $password);\n\n    // Prepare SQL query to insert new user into database\n    try {\n        $query = \"INSERT INTO users (name, email, password_hash) VALUES (:name, :email, :password)\";\n        $stmt = $pdo->prepare($query);\n        $stmt->bindParam(':name', $name);\n        $stmt->bindParam(':email', $email);\n        $stmt->bindParam(':password', $passwordHash);\n\n        // Execute query and return result\n        if ($stmt->execute()) {\n            return array('status' => 'success', 'message' => 'User registered successfully');\n        } else {\n            return array('status' => 'error', 'message' => 'Failed to register user');\n        }\n    } catch (PDOException $e) {\n        return array('status' => 'error', 'message' => 'Database error: ' . $e->getMessage());\n    }\n}\n```", "```php\n$name = \"John Doe\";\n$email = \"john@example.com\";\n$password = \"password123\";\n\n$result = registerUser($name, $email, $password);\n\nif ($result['status'] == 'success') {\n    echo \"User registered successfully!\";\n} else {\n    echo \"Error: \" . $result['message'];\n}\n```"]}
