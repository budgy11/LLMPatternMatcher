{"prompt": "Create a user registration function using php", "llm_output": "**User Registration Function in PHP**\n=====================================\n\nBelow is an example of a user registration function written in PHP. This function will validate the input data, hash the password, and store the user's information in a database.\n\n### Required Libraries\n\nThis code requires the following libraries:\n\n* `mysqli` for interacting with the MySQL database\n* `password_hash` to securely hash passwords\n\n### Database Configuration\n\nBefore running this code, you'll need to configure your database connection settings. Create a new file named `config.php` with the following contents:\n```php\n<?php\ndefine('DB_HOST', 'localhost');\ndefine('DB_USERNAME', 'your_username');\ndefine('DB_PASSWORD', 'your_password');\ndefine('DB_NAME', 'your_database_name');\n\n$mysqli = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);\n\nif ($mysqli->connect_error) {\n    die(\"Connection failed: \" . $mysqli->connect_error);\n}\n?>\n```\n### User Registration Function\n\nCreate a new file named `register.php` with the following contents:\n```php\n<?php\nrequire_once 'config.php';\n\nfunction registerUser($name, $email, $password) {\n    // Validate input data\n    if (empty($name) || empty($email) || empty($password)) {\n        throw new Exception('All fields are required.');\n    }\n\n    // Hash password\n    $hashedPassword = password_hash($password, PASSWORD_DEFAULT);\n\n    // Prepare query to insert user data into database\n    $stmt = $mysqli->prepare(\"INSERT INTO users (name, email, password) VALUES (?, ?, ?)\");\n    $stmt->bind_param(\"sss\", $name, $email, $hashedPassword);\n    if ($stmt->execute()) {\n        return true; // User registered successfully\n    } else {\n        throw new Exception('Failed to register user.');\n    }\n}\n\ntry {\n    $name = $_POST['name'];\n    $email = $_POST['email'];\n    $password = $_POST['password'];\n\n    $result = registerUser($name, $email, $password);\n    if ($result) {\n        echo 'User registered successfully!';\n    } else {\n        throw new Exception('Error registering user.');\n    }\n} catch (Exception $e) {\n    echo 'Error: ' . $e->getMessage();\n}\n\n$mysqli->close();\n?>\n```\n### Explanation\n\n1. The `registerUser` function takes three arguments: `$name`, `$email`, and `$password`.\n2. It first validates the input data by checking if all fields are not empty.\n3. If the input data is valid, it hashes the password using `password_hash` with a default algorithm (currently `PASSWORD_DEFAULT`).\n4. The hashed password is then prepared to be inserted into the database along with the user's name and email address.\n5. The function uses a parameterized query to prevent SQL injection attacks.\n\n### Example Use Case\n\nTo use this code, create an HTML form that submits a POST request to the `register.php` file:\n```html\n<!DOCTYPE html>\n<html>\n<head>\n    <title>User Registration</title>\n</head>\n<body>\n    <form action=\"register.php\" method=\"post\">\n        <label for=\"name\">Name:</label>\n        <input type=\"text\" id=\"name\" name=\"name\"><br><br>\n        <label for=\"email\">Email:</label>\n        <input type=\"email\" id=\"email\" name=\"email\"><br><br>\n        <label for=\"password\">Password:</label>\n        <input type=\"password\" id=\"password\" name=\"password\"><br><br>\n        <button type=\"submit\">Register</button>\n    </form>\n</body>\n</html>\n```\nThis code provides a basic example of user registration using PHP. Remember to adjust the database configuration and update the query to match your specific needs.", "code_blocks": ["```php\n<?php\ndefine('DB_HOST', 'localhost');\ndefine('DB_USERNAME', 'your_username');\ndefine('DB_PASSWORD', 'your_password');\ndefine('DB_NAME', 'your_database_name');\n\n$mysqli = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);\n\nif ($mysqli->connect_error) {\n    die(\"Connection failed: \" . $mysqli->connect_error);\n}\n?>\n```", "```php\n<?php\nrequire_once 'config.php';\n\nfunction registerUser($name, $email, $password) {\n    // Validate input data\n    if (empty($name) || empty($email) || empty($password)) {\n        throw new Exception('All fields are required.');\n    }\n\n    // Hash password\n    $hashedPassword = password_hash($password, PASSWORD_DEFAULT);\n\n    // Prepare query to insert user data into database\n    $stmt = $mysqli->prepare(\"INSERT INTO users (name, email, password) VALUES (?, ?, ?)\");\n    $stmt->bind_param(\"sss\", $name, $email, $hashedPassword);\n    if ($stmt->execute()) {\n        return true; // User registered successfully\n    } else {\n        throw new Exception('Failed to register user.');\n    }\n}\n\ntry {\n    $name = $_POST['name'];\n    $email = $_POST['email'];\n    $password = $_POST['password'];\n\n    $result = registerUser($name, $email, $password);\n    if ($result) {\n        echo 'User registered successfully!';\n    } else {\n        throw new Exception('Error registering user.');\n    }\n} catch (Exception $e) {\n    echo 'Error: ' . $e->getMessage();\n}\n\n$mysqli->close();\n?>\n```", null]}
