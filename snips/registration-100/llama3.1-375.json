{"prompt": "Create a user registration function using php", "llm_output": "Here's an example of a user registration function using PHP:\n\n**Note:** This example assumes you have a database setup to store user information. You'll need to replace the placeholders with your actual database credentials and table name.\n\n```php\n<?php\n\n// Configuration\n$db_host = 'your_database_host';\n$db_username = 'your_database_username';\n$db_password = 'your_database_password';\n$db_name = 'your_database_name';\n\n// Connect to database\n$conn = new mysqli($db_host, $db_username, $db_password, $db_name);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\nfunction registerUser() {\n    // Get user input\n    $username = $_POST['username'];\n    $email = $_POST['email'];\n    $password = $_POST['password'];\n    $confirm_password = $_POST['confirm_password'];\n\n    // Validate inputs\n    if (empty($username) || empty($email) || empty($password) || empty($confirm_password)) {\n        return array('error' => 'Please fill in all fields');\n    }\n\n    if ($password !== $confirm_password) {\n        return array('error' => 'Passwords do not match');\n    }\n\n    // Hash password\n    $hashed_password = password_hash($password, PASSWORD_DEFAULT);\n\n    // Query to insert new user into database\n    $query = \"INSERT INTO users (username, email, password)\n              VALUES ('$username', '$email', '$hashed_password')\";\n\n    if ($conn->query($query) === TRUE) {\n        return array('success' => 'User created successfully');\n    } else {\n        return array('error' => 'Error creating user: ' . $conn->error);\n    }\n}\n\n// Check for POST request\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    $response = registerUser();\n    echo json_encode($response);\n}\n?>\n```\n\n**Usage:** To use this function, simply create a new PHP file (e.g., `register.php`) and paste the above code into it. Then, from your HTML form, send a POST request to this script with the user input data.\n\n```html\n<form id=\"register-form\" method=\"post\">\n    <input type=\"text\" name=\"username\" placeholder=\"Username\">\n    <input type=\"email\" name=\"email\" placeholder=\"Email\">\n    <input type=\"password\" name=\"password\" placeholder=\"Password\">\n    <input type=\"password\" name=\"confirm_password\" placeholder=\"Confirm Password\">\n    <button type=\"submit\">Register</button>\n</form>\n\n<script src=\"register.js\"></script>\n\n<!-- In your JavaScript file (e.g., register.js) -->\nfetch('/path/to/register.php', {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({\n        username: document.getElementById('username').value,\n        email: document.getElementById('email').value,\n        password: document.getElementById('password').value,\n        confirm_password: document.getElementById('confirm_password').value\n    })\n})\n.then(response => response.json())\n.then(data => console.log(data))\n.catch(error => console.error('Error:', error));\n```\n\n**Security Note:** This example uses `mysqli` extension for database interactions, which is a more secure option compared to older extensions like `mysql`. However, always remember to sanitize and validate user input data to prevent SQL injection attacks. Additionally, consider using prepared statements or parameterized queries for improved security.", "code_blocks": ["```php\n<?php\n\n// Configuration\n$db_host = 'your_database_host';\n$db_username = 'your_database_username';\n$db_password = 'your_database_password';\n$db_name = 'your_database_name';\n\n// Connect to database\n$conn = new mysqli($db_host, $db_username, $db_password, $db_name);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\nfunction registerUser() {\n    // Get user input\n    $username = $_POST['username'];\n    $email = $_POST['email'];\n    $password = $_POST['password'];\n    $confirm_password = $_POST['confirm_password'];\n\n    // Validate inputs\n    if (empty($username) || empty($email) || empty($password) || empty($confirm_password)) {\n        return array('error' => 'Please fill in all fields');\n    }\n\n    if ($password !== $confirm_password) {\n        return array('error' => 'Passwords do not match');\n    }\n\n    // Hash password\n    $hashed_password = password_hash($password, PASSWORD_DEFAULT);\n\n    // Query to insert new user into database\n    $query = \"INSERT INTO users (username, email, password)\n              VALUES ('$username', '$email', '$hashed_password')\";\n\n    if ($conn->query($query) === TRUE) {\n        return array('success' => 'User created successfully');\n    } else {\n        return array('error' => 'Error creating user: ' . $conn->error);\n    }\n}\n\n// Check for POST request\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n    $response = registerUser();\n    echo json_encode($response);\n}\n?>\n```", null]}
