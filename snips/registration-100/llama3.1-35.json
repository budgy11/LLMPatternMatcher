{"prompt": "Create a user registration function using php", "llm_output": "Here is an example of a user registration function using PHP:\n```php\n<?php\n\n// Configuration variables\n$db_host = 'localhost';\n$db_username = 'your_database_username';\n$db_password = 'your_database_password';\n$db_name = 'your_database_name';\n\n// Connect to database\n$conn = new mysqli($db_host, $db_username, $db_password, $db_name);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Function to register user\nfunction registerUser($username, $email, $password)\n{\n    // Hash password using bcrypt\n    $hashedPassword = password_hash($password, PASSWORD_BCRYPT);\n\n    // Insert into database\n    $sql = \"INSERT INTO users (username, email, password) VALUES (?, ?, ?)\";\n    $stmt = $conn->prepare($sql);\n    $stmt->bind_param(\"sss\", $username, $email, $hashedPassword);\n    if ($stmt->execute()) {\n        return true;\n    } else {\n        echo \"Error: \" . $stmt->error;\n        return false;\n    }\n}\n\n// Example usage:\nif (isset($_POST['register'])) {\n    $username = $_POST['username'];\n    $email = $_POST['email'];\n    $password = $_POST['password'];\n\n    // Check if username and email are already taken\n    $sql = \"SELECT * FROM users WHERE username = ? OR email = ?\";\n    $stmt = $conn->prepare($sql);\n    $stmt->bind_param(\"ss\", $username, $email);\n    $stmt->execute();\n    $result = $stmt->get_result();\n\n    if ($result->num_rows > 0) {\n        echo \"Username or email already taken.\";\n    } else {\n        // Register user\n        registerUser($username, $email, $password);\n\n        // Redirect to login page\n        header(\"Location: login.php\");\n        exit();\n    }\n}\n\n?>\n```\nThis code defines a `registerUser` function that takes three arguments: `$username`, `$email`, and `$password`. It uses the `mysqli` extension to connect to a MySQL database, and inserts a new user into the `users` table with hashed password.\n\nThe example usage at the bottom shows how to call the `registerUser` function from an HTML form. It checks if the username and email are already taken in the database before calling the registration function.\n\nNote that this is just an example, you should adjust it according to your specific needs and security requirements. Also, make sure to replace the placeholders (`$db_host`, `$db_username`, etc.) with your actual database credentials.", "code_blocks": ["```php\n<?php\n\n// Configuration variables\n$db_host = 'localhost';\n$db_username = 'your_database_username';\n$db_password = 'your_database_password';\n$db_name = 'your_database_name';\n\n// Connect to database\n$conn = new mysqli($db_host, $db_username, $db_password, $db_name);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n\n// Function to register user\nfunction registerUser($username, $email, $password)\n{\n    // Hash password using bcrypt\n    $hashedPassword = password_hash($password, PASSWORD_BCRYPT);\n\n    // Insert into database\n    $sql = \"INSERT INTO users (username, email, password) VALUES (?, ?, ?)\";\n    $stmt = $conn->prepare($sql);\n    $stmt->bind_param(\"sss\", $username, $email, $hashedPassword);\n    if ($stmt->execute()) {\n        return true;\n    } else {\n        echo \"Error: \" . $stmt->error;\n        return false;\n    }\n}\n\n// Example usage:\nif (isset($_POST['register'])) {\n    $username = $_POST['username'];\n    $email = $_POST['email'];\n    $password = $_POST['password'];\n\n    // Check if username and email are already taken\n    $sql = \"SELECT * FROM users WHERE username = ? OR email = ?\";\n    $stmt = $conn->prepare($sql);\n    $stmt->bind_param(\"ss\", $username, $email);\n    $stmt->execute();\n    $result = $stmt->get_result();\n\n    if ($result->num_rows > 0) {\n        echo \"Username or email already taken.\";\n    } else {\n        // Register user\n        registerUser($username, $email, $password);\n\n        // Redirect to login page\n        header(\"Location: login.php\");\n        exit();\n    }\n}\n\n?>\n```"]}
