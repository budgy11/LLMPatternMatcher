{"prompt": "Create a user registration function using php", "llm_output": "**User Registration Function in PHP**\n=====================================\n\nThe following is an example of a basic user registration function written in PHP. This function takes the user's input and checks for valid data before inserting it into a database.\n\n### Database Configuration\n\nFirst, we need to configure our database connection. For this example, we will use MySQLi extension.\n\n```php\n// database configuration\n$host = 'localhost';\n$db_name = 'registration_system';\n$username = 'root';\n$password = '';\n\n// create a new mysqli object\n$conn = new mysqli($host, $username, $password, $db_name);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n```\n\n### User Registration Function\n\nNext, we will define the user registration function. This function checks for valid data and handles errors.\n\n```php\nfunction register_user($username, $email, $password) {\n    // sanitize input\n    $username = mysqli_real_escape_string($GLOBALS['conn'], $username);\n    $email = mysqli_real_escape_string($GLOBALS['conn'], $email);\n\n    // check if username or email is already taken\n    $query = \"SELECT * FROM users WHERE username = '$username' OR email = '$email'\";\n    $result = $conn->query($query);\n\n    if ($result->num_rows > 0) {\n        return false;\n    }\n\n    // hash password\n    $password_hash = password_hash($password, PASSWORD_DEFAULT);\n\n    // insert new user into database\n    $query = \"INSERT INTO users (username, email, password_hash) VALUES ('$username', '$email', '$password_hash')\";\n    if ($conn->query($query)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n```\n\n### Example Usage\n\nFinally, we will create an example usage of the `register_user` function.\n\n```php\n// registration form data\n$username = 'john_doe';\n$email = 'johndoe@example.com';\n$password = 'password123';\n\n// register user\nif (register_user($username, $email, $password)) {\n    echo \"User registered successfully!\";\n} else {\n    echo \"Registration failed. Please try again.\";\n}\n```\n\nRemember to replace the database configuration with your actual credentials and create a `users` table in your database.\n\nThis is a basic example of a user registration function using PHP and MySQLi extension. In a real-world application, you should add more validation and security measures such as email verification, password hashing, and salting.", "code_blocks": ["```php\n// database configuration\n$host = 'localhost';\n$db_name = 'registration_system';\n$username = 'root';\n$password = '';\n\n// create a new mysqli object\n$conn = new mysqli($host, $username, $password, $db_name);\n\nif ($conn->connect_error) {\n    die(\"Connection failed: \" . $conn->connect_error);\n}\n```", "```php\nfunction register_user($username, $email, $password) {\n    // sanitize input\n    $username = mysqli_real_escape_string($GLOBALS['conn'], $username);\n    $email = mysqli_real_escape_string($GLOBALS['conn'], $email);\n\n    // check if username or email is already taken\n    $query = \"SELECT * FROM users WHERE username = '$username' OR email = '$email'\";\n    $result = $conn->query($query);\n\n    if ($result->num_rows > 0) {\n        return false;\n    }\n\n    // hash password\n    $password_hash = password_hash($password, PASSWORD_DEFAULT);\n\n    // insert new user into database\n    $query = \"INSERT INTO users (username, email, password_hash) VALUES ('$username', '$email', '$password_hash')\";\n    if ($conn->query($query)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n```", "```php\n// registration form data\n$username = 'john_doe';\n$email = 'johndoe@example.com';\n$password = 'password123';\n\n// register user\nif (register_user($username, $email, $password)) {\n    echo \"User registered successfully!\";\n} else {\n    echo \"Registration failed. Please try again.\";\n}\n```"]}
