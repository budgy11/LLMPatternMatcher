{"prompt": "Create a user registration function using php", "llm_output": "Here's an example of a user registration function in PHP:\n\n```php\n<?php\n\n// Define the configuration for the database connection and email settings\ndefine('DB_HOST', 'localhost');\ndefine('DB_USERNAME', 'your_username');\ndefine('DB_PASSWORD', 'your_password');\ndefine('DB_NAME', 'your_database');\n\n// Function to register a new user\nfunction registerUser($name, $email, $password) {\n    // Connect to the database\n    $mysqli = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);\n\n    // Check connection\n    if ($mysqli->connect_errno) {\n        return \"Failed to connect to MySQL: (\" . $mysqli->connect_errno . \") \" . $mysqli->connect_error;\n    }\n\n    // Hash the password using SHA-256\n    $hashedPassword = hash('sha256', $password);\n\n    // Prepare the SQL statement\n    $sql = \"INSERT INTO users (name, email, password) VALUES (?, ?, ?)\";\n\n    // Bind the parameters\n    if (!$stmt = $mysqli->prepare($sql)) {\n        return \"Error preparing statement: (\" . $mysqli->errno . \") \" . $mysqli->error;\n    }\n\n    // Bind the parameters to the prepared statement\n    $stmt->bind_param(\"sss\", $name, $email, $hashedPassword);\n\n    // Execute the query\n    if (!$stmt->execute()) {\n        return \"Error executing query: (\" . $mysqli->errno . \") \" . $mysqli->error;\n    }\n\n    // Close the connection and statement\n    $mysqli->close();\n    $stmt->close();\n\n    // Return a success message with the new user's ID\n    return array(true, 'User successfully registered. Your new ID is: ' . $mysqli->insert_id);\n}\n\n// Example usage:\n$name = 'John Doe';\n$email = 'john@example.com';\n$password = 'mysecretpassword';\n\n$result = registerUser($name, $email, $password);\n\nif ($result[0]) {\n    echo $result[1];\n} else {\n    echo $result[1];\n}\n```\n\nThis code uses the `mysqli` extension to connect to a MySQL database and store the user's information in the `users` table. The `registerUser` function takes three parameters: `$name`, `$email`, and `$password`. It hashes the password using SHA-256, then inserts the data into the database.\n\n**Security Notes**\n\n*   This example uses SHA-256 to hash passwords. However, please note that in a production environment, you should use a stronger password hashing algorithm like bcrypt or Argon2.\n*   Always validate and sanitize any user input to prevent SQL injection attacks.\n*   Never store plain text passwords; always hash them using a secure algorithm.\n\n**Commit Message Guidelines**\n\nIf you were to add this code to your project's Git repository, follow standard professional guidelines for commit messages. A good example would be:\n\n`feat: Added registerUser function with password hashing and database connection`\n\nThis clearly indicates that the commit adds new functionality (`feat`) related to user registration.", "code_blocks": ["```php\n<?php\n\n// Define the configuration for the database connection and email settings\ndefine('DB_HOST', 'localhost');\ndefine('DB_USERNAME', 'your_username');\ndefine('DB_PASSWORD', 'your_password');\ndefine('DB_NAME', 'your_database');\n\n// Function to register a new user\nfunction registerUser($name, $email, $password) {\n    // Connect to the database\n    $mysqli = new mysqli(DB_HOST, DB_USERNAME, DB_PASSWORD, DB_NAME);\n\n    // Check connection\n    if ($mysqli->connect_errno) {\n        return \"Failed to connect to MySQL: (\" . $mysqli->connect_errno . \") \" . $mysqli->connect_error;\n    }\n\n    // Hash the password using SHA-256\n    $hashedPassword = hash('sha256', $password);\n\n    // Prepare the SQL statement\n    $sql = \"INSERT INTO users (name, email, password) VALUES (?, ?, ?)\";\n\n    // Bind the parameters\n    if (!$stmt = $mysqli->prepare($sql)) {\n        return \"Error preparing statement: (\" . $mysqli->errno . \") \" . $mysqli->error;\n    }\n\n    // Bind the parameters to the prepared statement\n    $stmt->bind_param(\"sss\", $name, $email, $hashedPassword);\n\n    // Execute the query\n    if (!$stmt->execute()) {\n        return \"Error executing query: (\" . $mysqli->errno . \") \" . $mysqli->error;\n    }\n\n    // Close the connection and statement\n    $mysqli->close();\n    $stmt->close();\n\n    // Return a success message with the new user's ID\n    return array(true, 'User successfully registered. Your new ID is: ' . $mysqli->insert_id);\n}\n\n// Example usage:\n$name = 'John Doe';\n$email = 'john@example.com';\n$password = 'mysecretpassword';\n\n$result = registerUser($name, $email, $password);\n\nif ($result[0]) {\n    echo $result[1];\n} else {\n    echo $result[1];\n}\n```"]}
