{"prompt": "Create a user registration function using php", "llm_output": "**User Registration Function in PHP**\n=====================================\n\nBelow is an example of a user registration function written in PHP. This function handles user input validation, database connection, and password hashing.\n\n```php\n<?php\n\n// Configuration settings\nrequire 'config.php';\n\nfunction registerUser($username, $email, $password) {\n    // Validate user input\n    if (empty($username) || empty($email) || empty($password)) {\n        throw new Exception('All fields are required.');\n    }\n\n    // Check for duplicate username and email\n    $stmt = $db->prepare('SELECT * FROM users WHERE username = ? OR email = ?');\n    $stmt->execute([$username, $email]);\n    if ($stmt->rowCount() > 0) {\n        throw new Exception('Username or email already exists.');\n    }\n\n    // Hash password using bcrypt\n    $hashedPassword = password_hash($password, PASSWORD_BCRYPT);\n\n    // Insert user data into database\n    $insertQuery = 'INSERT INTO users (username, email, password) VALUES (?, ?, ?)';\n    $stmt = $db->prepare($insertQuery);\n    $stmt->execute([$username, $email, $hashedPassword]);\n\n    // Return the newly created user's ID\n    return $db->lastInsertId();\n}\n\n// Example usage:\ntry {\n    $username = 'johnDoe';\n    $email = 'johndoe@example.com';\n    $password = 'mysecretpassword';\n\n    $userId = registerUser($username, $email, $password);\n    echo \"User created with ID: $userId\";\n} catch (Exception $e) {\n    echo \"Error: \" . $e->getMessage();\n}\n\n?>\n```\n\nThis function takes three arguments:\n\n*   `$username`: The username chosen by the user.\n*   `$email`: The email address provided by the user.\n*   `$password`: The password entered by the user.\n\nIt performs the following operations:\n\n1.  **Input Validation**: Checks if all fields are filled in.\n2.  **Duplicate Check**: Verifies that the username and email are not already registered.\n3.  **Password Hashing**: Uses bcrypt to securely store the password as a hashed value.\n4.  **Database Insertion**: Inserts the user data into the database.\n\nNote: This example assumes you have a `config.php` file containing your database connection settings, and a `users` table in your database with columns for `username`, `email`, and `password`.\n\n**Security Considerations**\n\n*   Always use prepared statements to prevent SQL injection attacks.\n*   Use a secure password hashing algorithm like bcrypt.\n*   Validate user input on the server-side as shown above.\n\n**Example Database Schema (users table)**\n\n```sql\nCREATE TABLE users (\n    id INT PRIMARY KEY AUTO_INCREMENT,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL UNIQUE,\n    password VARCHAR(255) NOT NULL\n);\n```\n\nRemember to replace `config.php` with your actual database connection settings and adjust the table schema according to your needs.", "code_blocks": ["```php\n<?php\n\n// Configuration settings\nrequire 'config.php';\n\nfunction registerUser($username, $email, $password) {\n    // Validate user input\n    if (empty($username) || empty($email) || empty($password)) {\n        throw new Exception('All fields are required.');\n    }\n\n    // Check for duplicate username and email\n    $stmt = $db->prepare('SELECT * FROM users WHERE username = ? OR email = ?');\n    $stmt->execute([$username, $email]);\n    if ($stmt->rowCount() > 0) {\n        throw new Exception('Username or email already exists.');\n    }\n\n    // Hash password using bcrypt\n    $hashedPassword = password_hash($password, PASSWORD_BCRYPT);\n\n    // Insert user data into database\n    $insertQuery = 'INSERT INTO users (username, email, password) VALUES (?, ?, ?)';\n    $stmt = $db->prepare($insertQuery);\n    $stmt->execute([$username, $email, $hashedPassword]);\n\n    // Return the newly created user's ID\n    return $db->lastInsertId();\n}\n\n// Example usage:\ntry {\n    $username = 'johnDoe';\n    $email = 'johndoe@example.com';\n    $password = 'mysecretpassword';\n\n    $userId = registerUser($username, $email, $password);\n    echo \"User created with ID: $userId\";\n} catch (Exception $e) {\n    echo \"Error: \" . $e->getMessage();\n}\n\n?>\n```", null]}
