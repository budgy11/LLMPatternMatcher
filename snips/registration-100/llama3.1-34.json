{"prompt": "Create a user registration function using php", "llm_output": "**User Registration Function in PHP**\n=====================================\n\nThe following is an example of a user registration function written in PHP. This function takes the user's input, validates it, and then inserts the new user into the database.\n\n**Function Code:**\n```php\nfunction registerUser($username, $email, $password) {\n    // Validate username and email\n    if (!preg_match(\"/^[a-zA-Z0-9_]{3,20}$/\", $username)) {\n        return array(\"error\" => \"Invalid username\");\n    }\n    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {\n        return array(\"error\" => \"Invalid email address\");\n    }\n\n    // Validate password (minimum 8 characters)\n    if (strlen($password) < 8) {\n        return array(\"error\" => \"Password must be at least 8 characters long\");\n    }\n\n    try {\n        // Connect to database\n        $db = new PDO('mysql:host=localhost;dbname=your_database', 'username', 'password');\n        $db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);\n\n        // Hash password\n        $hashedPassword = password_hash($password, PASSWORD_DEFAULT);\n\n        // Insert user into database\n        $stmt = $db->prepare(\"INSERT INTO users (username, email, password) VALUES (:username, :email, :password)\");\n        $stmt->bindParam(\":username\", $username);\n        $stmt->bindParam(\":email\", $email);\n        $stmt->bindParam(\":password\", $hashedPassword);\n        $stmt->execute();\n\n        // Return success message\n        return array(\"message\" => \"User created successfully\");\n\n    } catch (PDOException $e) {\n        return array(\"error\" => \"Database error: \" . $e->getMessage());\n    }\n}\n```\n**Usage Example:**\n```php\n// User input\n$username = $_POST[\"username\"];\n$email = $_POST[\"email\"];\n$password = $_POST[\"password\"];\n\n// Call the function\n$result = registerUser($username, $email, $password);\n\n// Display result to user\nif (isset($result[\"error\"])) {\n    echo \"Error: \" . $result[\"error\"];\n} else {\n    echo \"Success: \" . $result[\"message\"];\n}\n```\nNote:\n\n* Replace `your_database` with the name of your database.\n* Replace `username` and `password` with the credentials to connect to your database.\n* This function uses prepared statements to prevent SQL injection attacks.\n* The password is hashed using the `password_hash()` function, which generates a secure hash that can be verified using `password_verify()`.", "code_blocks": ["```php\nfunction registerUser($username, $email, $password) {\n    // Validate username and email\n    if (!preg_match(\"/^[a-zA-Z0-9_]{3,20}$/\", $username)) {\n        return array(\"error\" => \"Invalid username\");\n    }\n    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {\n        return array(\"error\" => \"Invalid email address\");\n    }\n\n    // Validate password (minimum 8 characters)\n    if (strlen($password) < 8) {\n        return array(\"error\" => \"Password must be at least 8 characters long\");\n    }\n\n    try {\n        // Connect to database\n        $db = new PDO('mysql:host=localhost;dbname=your_database', 'username', 'password');\n        $db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);\n\n        // Hash password\n        $hashedPassword = password_hash($password, PASSWORD_DEFAULT);\n\n        // Insert user into database\n        $stmt = $db->prepare(\"INSERT INTO users (username, email, password) VALUES (:username, :email, :password)\");\n        $stmt->bindParam(\":username\", $username);\n        $stmt->bindParam(\":email\", $email);\n        $stmt->bindParam(\":password\", $hashedPassword);\n        $stmt->execute();\n\n        // Return success message\n        return array(\"message\" => \"User created successfully\");\n\n    } catch (PDOException $e) {\n        return array(\"error\" => \"Database error: \" . $e->getMessage());\n    }\n}\n```", "```php\n// User input\n$username = $_POST[\"username\"];\n$email = $_POST[\"email\"];\n$password = $_POST[\"password\"];\n\n// Call the function\n$result = registerUser($username, $email, $password);\n\n// Display result to user\nif (isset($result[\"error\"])) {\n    echo \"Error: \" . $result[\"error\"];\n} else {\n    echo \"Success: \" . $result[\"message\"];\n}\n```"]}
