{"prompt": "Create a user registration function using php", "llm_output": "**User Registration Function in PHP**\n=====================================\n\nBelow is an example of a simple user registration function in PHP that includes validation for username, email, and password.\n\n```php\nfunction registerUser($username, $email, $password) {\n    // Validate input data\n    if (empty($username) || empty($email) || empty($password)) {\n        throw new Exception(\"All fields are required.\");\n    }\n\n    if (!preg_match(\"/^[a-zA-Z0-9]+$/\", $username)) {\n        throw new Exception(\"Username can only contain letters and numbers.\");\n    }\n\n    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {\n        throw new Exception(\"Invalid email address.\");\n    }\n\n    if (strlen($password) < 8 || !preg_match(\"/[a-z]/\", $password) || !preg_match(\"/[A-Z]/\", $password) || !preg_match(\"/[0-9]/\", $password)) {\n        throw new Exception(\"Password must be at least 8 characters and contain a lowercase letter, an uppercase letter, and a number.\");\n    }\n\n    // Hash the password for security\n    $hashedPassword = password_hash($password, PASSWORD_DEFAULT);\n\n    try {\n        // Connect to database (using PDO)\n        $db = new PDO('sqlite:users.db');\n        $query = \"INSERT INTO users (username, email, password) VALUES (:username, :email, :password)\";\n        $stmt = $db->prepare($query);\n        $stmt->bindParam(':username', $username);\n        $stmt->bindParam(':email', $email);\n        $stmt->bindParam(':password', $hashedPassword);\n        $stmt->execute();\n\n        // Close the database connection\n        $db = null;\n\n        return \"User registered successfully!\";\n    } catch (PDOException $e) {\n        throw new Exception(\"Error registering user: \" . $e->getMessage());\n    }\n}\n```\n\n**Example Usage**\n-----------------\n\n```php\ntry {\n    echo registerUser('johnDoe', 'johndoe@example.com', 'P@ssw0rd');\n} catch (Exception $e) {\n    echo 'Error: ' . $e->getMessage();\n}\n```\n\nThis function takes in three parameters:\n\n*   `$username`: The username chosen by the user.\n*   `$email`: The email address of the user.\n*   `$password`: The password chosen by the user.\n\nIt checks for required fields, validates the input data (username, email, and password), hashes the password using `password_hash`, and then attempts to insert a new row into a SQLite database using PDO. If any errors occur during registration or validation, it throws an exception with a descriptive error message.", "code_blocks": ["```php\nfunction registerUser($username, $email, $password) {\n    // Validate input data\n    if (empty($username) || empty($email) || empty($password)) {\n        throw new Exception(\"All fields are required.\");\n    }\n\n    if (!preg_match(\"/^[a-zA-Z0-9]+$/\", $username)) {\n        throw new Exception(\"Username can only contain letters and numbers.\");\n    }\n\n    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {\n        throw new Exception(\"Invalid email address.\");\n    }\n\n    if (strlen($password) < 8 || !preg_match(\"/[a-z]/\", $password) || !preg_match(\"/[A-Z]/\", $password) || !preg_match(\"/[0-9]/\", $password)) {\n        throw new Exception(\"Password must be at least 8 characters and contain a lowercase letter, an uppercase letter, and a number.\");\n    }\n\n    // Hash the password for security\n    $hashedPassword = password_hash($password, PASSWORD_DEFAULT);\n\n    try {\n        // Connect to database (using PDO)\n        $db = new PDO('sqlite:users.db');\n        $query = \"INSERT INTO users (username, email, password) VALUES (:username, :email, :password)\";\n        $stmt = $db->prepare($query);\n        $stmt->bindParam(':username', $username);\n        $stmt->bindParam(':email', $email);\n        $stmt->bindParam(':password', $hashedPassword);\n        $stmt->execute();\n\n        // Close the database connection\n        $db = null;\n\n        return \"User registered successfully!\";\n    } catch (PDOException $e) {\n        throw new Exception(\"Error registering user: \" . $e->getMessage());\n    }\n}\n```", "```php\ntry {\n    echo registerUser('johnDoe', 'johndoe@example.com', 'P@ssw0rd');\n} catch (Exception $e) {\n    echo 'Error: ' . $e->getMessage();\n}\n```"]}
