{"prompt": "Create a user registration function using php", "llm_output": "**User Registration Function in PHP**\n=====================================\n\nBelow is an example of a user registration function written in PHP. This function includes input validation, password hashing, and email verification.\n\n### Database Schema\n------------------\n\nFor this example to work, you will need a database with the following schema:\n\n```sql\nCREATE TABLE users (\n    id INT PRIMARY KEY AUTO_INCREMENT,\n    username VARCHAR(255) NOT NULL,\n    email VARCHAR(255) UNIQUE NOT NULL,\n    password VARCHAR(255) NOT NULL,\n    verified TINYINT(1) DEFAULT 0\n);\n```\n\n### User Registration Function\n------------------------------\n\n```php\nfunction registerUser($username, $email, $password) {\n    // Input Validation\n    if (empty($username) || empty($email) || empty($password)) {\n        throw new Exception('All fields are required');\n    }\n\n    // Password Hashing\n    $hashedPassword = password_hash($password, PASSWORD_DEFAULT);\n\n    try {\n        // Connect to database\n        require_once 'db.php';\n        $conn = connectToDatabase();\n\n        // Check if user already exists\n        $stmt = $conn->prepare('SELECT * FROM users WHERE email = ?');\n        $stmt->execute([$email]);\n        if ($stmt->fetch()) {\n            throw new Exception('Email already in use');\n        }\n\n        // Register user\n        $stmt = $conn->prepare('INSERT INTO users (username, email, password) VALUES (?, ?, ?)');\n        $stmt->execute([$username, $email, $hashedPassword]);\n\n        // Send verification email\n        sendVerificationEmail($email);\n\n        return true;\n    } catch (PDOException $e) {\n        throw new Exception('Database error: ' . $e->getMessage());\n    }\n}\n```\n\n### Verification Email Function\n---------------------------\n\n```php\nfunction sendVerificationEmail($email) {\n    // Generate verification code\n    $verificationCode = bin2hex(random_bytes(16));\n\n    try {\n        // Connect to database\n        require_once 'db.php';\n        $conn = connectToDatabase();\n\n        // Update user's verification status\n        $stmt = $conn->prepare('UPDATE users SET verified = 1 WHERE email = ?');\n        $stmt->execute([$email]);\n\n        // Send email using PHPMailer or similar library\n        $mail = new PHPMailer();\n        $mail->isSMTP();\n        $mail->Host = 'smtp.example.com';\n        $mail->Port = 587;\n        $mail->Username = 'your_email@example.com';\n        $mail->Password = 'your_password';\n        $mail->setFrom('your_email@example.com', 'Your Name');\n        $mail->addAddress($email);\n        $mail->Subject = 'Verify your account';\n        $mail->Body = '\n            Click on this link to verify your account:\n            <a href=\"https://example.com/verify.php?code=' . $verificationCode . '\">Verify</a>\n        ';\n        $mail->send();\n    } catch (PDOException $e) {\n        throw new Exception('Database error: ' . $e->getMessage());\n    }\n}\n```\n\n### Usage Example\n-----------------\n\n```php\ntry {\n    registerUser('johnDoe', 'johndoe@example.com', 'password123');\n} catch (Exception $e) {\n    echo $e->getMessage();\n}\n```\n\nRemember to replace the placeholder values in the `sendVerificationEmail` function with your actual email credentials and SMTP settings.", "code_blocks": [null, "```php\nfunction registerUser($username, $email, $password) {\n    // Input Validation\n    if (empty($username) || empty($email) || empty($password)) {\n        throw new Exception('All fields are required');\n    }\n\n    // Password Hashing\n    $hashedPassword = password_hash($password, PASSWORD_DEFAULT);\n\n    try {\n        // Connect to database\n        require_once 'db.php';\n        $conn = connectToDatabase();\n\n        // Check if user already exists\n        $stmt = $conn->prepare('SELECT * FROM users WHERE email = ?');\n        $stmt->execute([$email]);\n        if ($stmt->fetch()) {\n            throw new Exception('Email already in use');\n        }\n\n        // Register user\n        $stmt = $conn->prepare('INSERT INTO users (username, email, password) VALUES (?, ?, ?)');\n        $stmt->execute([$username, $email, $hashedPassword]);\n\n        // Send verification email\n        sendVerificationEmail($email);\n\n        return true;\n    } catch (PDOException $e) {\n        throw new Exception('Database error: ' . $e->getMessage());\n    }\n}\n```", "```php\nfunction sendVerificationEmail($email) {\n    // Generate verification code\n    $verificationCode = bin2hex(random_bytes(16));\n\n    try {\n        // Connect to database\n        require_once 'db.php';\n        $conn = connectToDatabase();\n\n        // Update user's verification status\n        $stmt = $conn->prepare('UPDATE users SET verified = 1 WHERE email = ?');\n        $stmt->execute([$email]);\n\n        // Send email using PHPMailer or similar library\n        $mail = new PHPMailer();\n        $mail->isSMTP();\n        $mail->Host = 'smtp.example.com';\n        $mail->Port = 587;\n        $mail->Username = 'your_email@example.com';\n        $mail->Password = 'your_password';\n        $mail->setFrom('your_email@example.com', 'Your Name');\n        $mail->addAddress($email);\n        $mail->Subject = 'Verify your account';\n        $mail->Body = '\n            Click on this link to verify your account:\n            <a href=\"https://example.com/verify.php?code=' . $verificationCode . '\">Verify</a>\n        ';\n        $mail->send();\n    } catch (PDOException $e) {\n        throw new Exception('Database error: ' . $e->getMessage());\n    }\n}\n```", "```php\ntry {\n    registerUser('johnDoe', 'johndoe@example.com', 'password123');\n} catch (Exception $e) {\n    echo $e->getMessage();\n}\n```"]}
